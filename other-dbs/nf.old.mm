$( -*-text-*- $)

$(
###############################################################################
            CLASSICAL FIRST ORDER LOGIC WITH EQUALITY
###############################################################################
$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                           Pre-logic
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

  $( Declare the primitive constant symbols for propositional calculus. $)
  $c ( $.  $( Left parenthesis $)
  $c ) $.  $( Right parenthesis $)
  $c -> $. $( Right arrow (read:  "implies") $)
  $c -. $. $( Right handle (read:  "not") $)
  $c wff $. $( Well-formed formula symbol (read:  "the following symbol
               sequence is a wff") $)
  $c |- $. $( Turnstile (read:  "the following symbol sequence is provable" or
              'a proof exists for") $)

  $( wff variable sequence:  ph ps ch th ta et ze si rh mu la ka $)
  $( Introduce some variable names we will use to represent well-formed
     formulas (wff's). $)
  $v ph $.  $( Greek phi $)
  $v ps $.  $( Greek psi $)
  $v ch $.  $( Greek chi $)
  $v th $.  $( Greek theta $)
  $v ta $.  $( Greek tau $)
  $v et $.  $( Greek eta $)
  $v ze $.  $( Greek zeta $)
  $v si $.  $( Greek sigma $)
  $v rh $.  $( Greek rho $)
  $v mu $.  $( Greek mu $)
  $v la $.  $( Greek lambda $)
  $v ka $.  $( Greek kappa $)

  $( Specify some variables that we will use to represent wff's.
     The fact that a variable represents a wff is relevant only to a theorem
     referring to that variable, so we may use $f hypotheses.  The symbol
     ` wff ` specifies that the variable that follows it represents a wff. $)
  $( Let variable ` ph ` be a wff. $)
  wph $f wff ph $.
  $( Let variable ` ps ` be a wff. $)
  wps $f wff ps $.
  $( Let variable ` ch ` be a wff. $)
  wch $f wff ch $.
  $( Let variable ` th ` be a wff. $)
  wth $f wff th $.
  $( Let variable ` ta ` be a wff. $)
  wta $f wff ta $.
  $( Let variable ` et ` be a wff. $)
  wet $f wff et $.
  $( Let variable ` ze ` be a wff. $)
  wze $f wff ze $.
  $( Let variable ` si ` be a wff. $)
  wsi $f wff si $.
  $( Let variable ` rh ` be a wff. $)
  wrh $f wff rh $.
  $( Let variable ` mu ` be a wff. $)
  wmu $f wff mu $.
  $( Let variable ` la ` be a wff. $)
  wla $f wff la $.
  $( Let variable ` ka ` be a wff. $)
  wka $f wff ka $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Inferences for assisting proof development
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    dummylink.1 $e |- ph $.
    dummylink.2 $e |- ps $.
    $( (_Note_:  This inference rule and the next one, ~ idi , will normally
       never appear in a completed proof.  It can be ignored if you are using
       this database to assist learning logic - please start with the statement
       ~ wn instead.)

       This is a technical inference to assist proof development.  It provides
       a temporary way to add an independent subproof to a proof under
       development, for later assignment to a normal proof step.

       The metamath program's Proof Assistant requires proofs to be developed
       backwards from the conclusion with no gaps, and it has no mechanism that
       lets the user to work on isolated subproofs.  This inference provides a
       workaround for this limitation.  It can be inserted at any point in a
       proof to allow an independent subproof to be developed on the side, for
       later use as part of the final proof.

       _Instructions_:  (1) Assign this inference to any unknown step in the
       proof.  Typically, the last unknown step is the most convenient, since
       'assign last' can be used.  This step will be replicated in hypothesis
       dummylink.1, from where the development of the main proof can continue.
       (2) Develop the independent subproof backwards from hypothesis
       dummylink.2.  If desired, use a 'let' command to pre-assign the
       conclusion of the independent subproof to dummylink.2.  (3) After the
       independent subproof is complete, use 'improve all' to assign it
       automatically to an unknown step in the main proof that matches it.  (4)
       After the entire proof is complete, use 'minimize */n/e 3syl,we?,wsb' to
       clean up (discard) all dummylink references automatically.

       This inference was originally designed to assist importing partially
       completed Proof Worksheets from the mmj2 Proof Assistant GUI, but it can
       also be useful on its own.  Interestingly, no axioms are required for
       its proof. $)
    dummylink $p |- ph $=
      (  ) C $.
      $( [7-Feb-2006] $)
  $}

  ${
    idi.1 $e |- ph $.
    $( Inference form of ~ id .  This inference rule, which requires no axioms
       for its proof, is useful as a copy-paste mechanism during proof
       development in mmj2.  It is normally not referenced in the final version
       of a proof, since it is always redundant and can be removed using the
       'minimize */n' command in the metamath program's Proof Assistant.
       (Contributed by Alan Sare, 31-Dec-2011.) $)
    idi $p |- ph $=
      (  ) B $.
      $( [31-Dec-2011] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                           Propositional calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Recursively define primitive wffs for propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( If ` ph ` is a wff, so is ` -. ph ` or "not ` ph ` ."  Part of the
     recursive definition of a wff (well-formed formula).  In classical logic
     (which is our logic), a wff is interpreted as either true or false.  So if
     ` ph ` is true, then ` -. ph ` is false; if ` ph ` is false, then
     ` -. ph ` is true.  Traditionally, Greek letters are used to represent
     wffs, and we follow this convention.  In propositional calculus, we define
     only wffs built up from other wffs, i.e. there is no starting or "atomic"
     wff.  Later, in predicate calculus, we will extend the basic wff
     definition by including atomic wffs ( ~ weq and ~ wel ). $)
  wn $a wff -. ph $.

  $( If ` ph ` and ` ps ` are wff's, so is ` ( ph -> ps ) ` or " ` ph ` implies
     ` ps ` ."  Part of the recursive definition of a wff.  The resulting wff
     is (interpreted as) false when ` ph ` is true and ` ps ` is false; it is
     true otherwise.  (Think of the truth table for an OR gate with input
     ` ph ` connected through an inverter.)  The left-hand wff is called the
     antecedent, and the right-hand wff is called the consequent.  In the case
     of ` ( ph -> ( ps -> ch ) ) ` , the middle ` ps ` may be informally called
     either an antecedent or part of the consequent depending on context. $)
  wi $a wff ( ph -> ps ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The axioms of propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $(
     Postulate the three axioms of classical propositional calculus.
  $)

  $( Axiom _Simp_.  Axiom A1 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  The 3 axioms are also given as Definition 2.1 of
     [Hamilton] p. 28.  This axiom is called _Simp_ or "the principle of
     simplification" in _Principia Mathematica_ (Theorem *2.02 of
     [WhiteheadRussell] p. 100) because "it enables us to pass from the joint
     assertion of ` ph ` and ` ps ` to the assertion of ` ph ` simply."

     _General remarks_:  Propositional calculus (axioms ~ ax-1 through ~ ax-3
     and rule ~ ax-mp ) can be thought of as asserting formulas that are
     universally "true" when their variables are replaced by any combination of
     "true" and "false."  Propositional calculus was first formalized by Frege
     in 1879, using as his axioms (in addition to rule ~ ax-mp ) the wffs
     ~ ax-1 , ~ ax-2 , ~ pm2.04 , ~ con3 , ~ notnot2 , and ~ notnot1 .  Around
     1930, Lukasiewicz simplified the system by eliminating the third (which
     follows from the first two, as you can see by looking at the proof of
     ~ pm2.04 ) and replacing the last three with our ~ ax-3 .  (Thanks to Ted
     Ulrich for this information.)

     The theorems of propositional calculus are also called _tautologies_.
     Tautologies can be proved very simply using truth tables, based on the
     true/false interpretation of propositional calculus.  To do this, we
     assign all possible combinations of true and false to the wff variables
     and verify that the result (using the rules described in ~ wi and ~ wn )
     always evaluates to true.  This is called the _semantic_ approach.  Our
     approach is called the _syntactic_ approach, in which everything is
     derived from axioms.  A metatheorem called the Completeness Theorem for
     Propositional Calculus shows that the two approaches are equivalent and
     even provides an algorithm for automatically generating syntactic proofs
     from a truth table.  Those proofs, however, tend to be long, and the much
     shorter proofs that we show here were found manually.  Truth tables grow
     exponentially with the number of variables, but it is unknown if the same
     is true of proofs - an answer to this would resolve the P=NP conjecture in
     complexity theory. $)
  ax-1 $a |- ( ph -> ( ps -> ph ) ) $.

  $( Axiom _Frege_.  Axiom A2 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  It "distributes" an antecedent over two
     consequents.  This axiom was part of Frege's original system and is known
     as _Frege_ in the literature.  It is also proved as Theorem *2.77 of
     [WhiteheadRussell] p. 108.  The other direction of this axiom also turns
     out to be true, as demonstrated by ~ pm5.41 . $)
  ax-2 $a |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) $.

  $( Axiom _Transp_.  Axiom A3 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  It swaps or "transposes" the order of the
     consequents when negation is removed.  An informal example is that the
     statement "if there are no clouds in the sky, it is not raining" implies
     the statement "if it is raining, there are clouds in the sky."  This axiom
     is called _Transp_ or "the principle of transposition" in _Principia
     Mathematica_ (Theorem *2.17 of [WhiteheadRussell] p. 103).  We will also
     use the term "contraposition" for this principle, although the reader is
     advised that in the field of philosophical logic, "contraposition" has a
     different technical meaning. $)
  ax-3 $a |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) $.

  $(
     Postulate the modus ponens rule of inference.
  $)

  ${
    $( Minor premise for modus ponens. $)
    min $e |- ph $.
    $( Major premise for modus ponens. $)
    maj $e |- ( ph -> ps ) $.
    $( Rule of Modus Ponens.  The postulated inference rule of propositional
       calculus.  See e.g.  Rule 1 of [Hamilton] p. 73.  The rule says, "if
       ` ph ` is true, and ` ph ` implies ` ps ` , then ` ps ` must also be
       true."  This rule is sometimes called "detachment," since it detaches
       the minor premise from the major premise.

       Note:  In some web page displays such as the Statement List, the symbols
       "&" and "=>" informally indicate the relationship between the hypotheses
       and the assertion (conclusion), abbreviating the English words "and" and
       "implies."  They are not part of the formal language. $)
    ax-mp $a |- ps $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical implication
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( The results in this section are based on implication only, and avoid ax-3.
   In an implication, the wff before the arrow is called the "antecedent" and
   the wff after the arrow is called the "consequent." $)

$( We will use the following descriptive terms very loosely:  A "closed form"
   or "tautology" has no $e hypotheses.  An "inference" has one or more $e
   hypotheses.  A "deduction" is an inference in which the hypotheses and the
   conclusion share the same antecedent. $)

  ${
    mp2b.1 $e |- ph $.
    mp2b.2 $e |- ( ph -> ps ) $.
    mp2b.3 $e |- ( ps -> ch ) $.
    $( A double modus ponens inference.  (Contributed by Mario Carneiro,
       24-Jan-2013.) $)
    mp2b $p |- ch $=
      ( ax-mp ) BCABDEGFG $.
      $( [24-Jan-2013] $)
  $}

  ${
    $( Premise for ~ a1i . $)
    a1i.1 $e |- ph $.
    $( Inference derived from axiom ~ ax-1 .  See ~ a1d for an explanation of
       our informal use of the terms "inference" and "deduction."  See also the
       comment in ~ syld . $)
    a1i $p |- ( ps -> ph ) $=
      ( wi ax-1 ax-mp ) ABADCABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( Premise for ~ a2i . $)
    a2i.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference derived from axiom ~ ax-2 . $)
    a2i $p |- ( ( ph -> ps ) -> ( ph -> ch ) ) $=
      ( wi ax-2 ax-mp ) ABCEEABEACEEDABCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim2i.1 $e |- ( ph -> ps ) $.
    $( Inference adding common antecedents in an implication. $)
    imim2i $p |- ( ( ch -> ph ) -> ( ch -> ps ) ) $=
      ( wi a1i a2i ) CABABECDFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpd.1 $e |- ( ph -> ps ) $.
    mpd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A modus ponens deduction. $)
    mpd $p |- ( ph -> ch ) $=
      ( wi a2i ax-mp ) ABFACFDABCEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( First of 2 premises for ~ syl . $)
    syl.1 $e |- ( ph -> ps ) $.
    $( Second of 2 premises for ~ syl . $)
    syl.2 $e |- ( ps -> ch ) $.
    $( An inference version of the transitive laws for implication ~ imim2 and
       ~ imim1 , which Russell and Whitehead call "the principle of the
       syllogism...because...the syllogism in Barbara is derived from them"
       (quote after Theorem *2.06 of [WhiteheadRussell] p. 101).  Some authors
       call this law a "hypothetical syllogism."  (The proof was shortened by
       O'Cat, 20-Oct-2011.)  (The proof was shortened by Wolf Lammen,
       26-Jul-2012.)

       (A bit of trivia: this is the most commonly referenced assertion in our
       database.  In second place is ~ ax-mp , followed by ~ vex , ~ bitri ,
       ~ imp , and ~ ex .  The Metamath program command 'show usage' shows the
       number of references.) $)
    syl $p |- ( ph -> ch ) $=
      ( wi a1i mpd ) ABCDBCFAEGH $.
      $( [27-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    mpi.1 $e |- ps $.
    mpi.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A nested modus ponens inference.  (The proof was shortened by Stefan
       Allan, 20-Mar-2006.) $)
    mpi $p |- ( ph -> ch ) $=
      ( a1i mpd ) ABCBADFEG $.
      $( [20-Mar-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    mp2.1 $e |- ph $.
    mp2.2 $e |- ps $.
    mp2.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A double modus ponens inference.  (The proof was shortened by Wolf
       Lammen, 23-Jul-2013.) $)
    mp2 $p |- ch $=
      ( mpi ax-mp ) ACDABCEFGH $.
      $( [23-Jul-2013] $) $( [5-Apr-1994] $)
  $}

  ${
    3syl.1 $e |- ( ph -> ps ) $.
    3syl.2 $e |- ( ps -> ch ) $.
    3syl.3 $e |- ( ch -> th ) $.
    $( Inference chaining two syllogisms. $)
    3syl $p |- ( ph -> th ) $=
      ( syl ) ACDABCEFHGH $.
      $( [5-Aug-1993] $)
  $}

  $( Principle of identity.  Theorem *2.08 of [WhiteheadRussell] p. 101.  For
     another version of the proof directly from axioms, see ~ id1 .  (The proof
     was shortened by Stefan Allan, 20-Mar-2006.) $)
  id $p |- ( ph -> ph ) $=
    ( wi ax-1 mpd ) AAABZAAACAECD $.
    $( [20-Mar-2006] $)

  $( Principle of identity.  Theorem *2.08 of [WhiteheadRussell] p. 101.  This
     version is proved directly from the axioms for demonstration purposes.
     This proof is a popular example in the literature and is identical, step
     for step, to the proofs of Theorem 1 of [Margaris] p. 51, Example 2.7(a)
     of [Hamilton] p. 31, Lemma 10.3 of [BellMachover] p. 36, and Lemma 1.8 of
     [Mendelson] p. 36.  It is also "Our first proof" in Hirst and Hirst's _A
     Primer for Logic and Proof_ p. 17 (PDF p. 23) at
     ~ http://www.mathsci.appstate.edu/~~jlh/primer/hirst.pdf .  For a shorter
     version of the proof that takes advantage of previously proved theorems,
     see ~ id . $)
  id1 $p |- ( ph -> ph ) $=
    ( wi ax-1 ax-2 ax-mp ) AAABZBZFAACAFABBGFBAFCAFADEE $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  idd $p |- ( ph -> ( ps -> ps ) ) $=
    ( wi id a1i ) BBCABDE $.
    $( [26-Nov-1995] $)

  ${
    a1d.1 $e |- ( ph -> ps ) $.
    $( Deduction introducing an embedded antecedent.  (The proof was revised by
       Stefan Allan, 20-Mar-2006.)

       _Naming convention_:  We often call a theorem a "deduction" and suffix
       its label with "d" whenever the hypotheses and conclusion are each
       prefixed with the same antecedent.  This allows us to use the theorem in
       places where (in traditional textbook formalizations) the standard
       Deduction Theorem would be used; here ` ph ` would be replaced with a
       conjunction ( ~ df-an ) of the hypotheses of the would-be deduction.  By
       contrast, we tend to call the simpler version with no common antecedent
       an "inference" and suffix its label with "i"; compare theorem ~ a1i .
       Finally, a "theorem" would be the form with no hypotheses; in this case
       the "theorem" form would be the original axiom ~ ax-1 .  We usually show
       the theorem form without a suffix on its label (e.g. ~ pm2.43 vs.
       ~ pm2.43i vs. ~ pm2.43d ).  When an inference is converted to a theorem
       by eliminating an "is a set" hypothesis, we sometimes suffix the theorem
       form with "g" (for "more general") as in ~ uniex vs. ~ uniexg . $)
    a1d $p |- ( ph -> ( ch -> ps ) ) $=
      ( wi ax-1 syl ) ABCBEDBCFG $.
      $( [20-Mar-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    a2d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Deduction distributing an embedded antecedent. $)
    a2d $p |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) $=
      ( wi ax-2 syl ) ABCDFFBCFBDFFEBCDGH $.
      $( [23-Jun-1994] $)
  $}

  ${
    a1i12.1 $e |- ch $.
    $( Add two antecedents to a wff.  (Contributed by Jeff Hankins,
       4-Aug-2009.)  (The proof was shortened by Wolf Lammen, 23-Jul-2013.) $)
    a1i12 $p |- ( ph -> ( ps -> ch ) ) $=
      ( a1i a1d ) ACBCADEF $.
      $( [23-Jul-2013] $) $( [4-Aug-2009] $)
  $}

  ${
    sylcom.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylcom.2 $e |- ( ps -> ( ch -> th ) ) $.
    $( Syllogism inference with commutation of antecedents.  (The proof was
       shortened by O'Cat, 2-Feb-2006.)  (The proof was shortened by Stefan
       Allan, 23-Feb-2006.) $)
    sylcom $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a2i syl ) ABCGBDGEBCDFHI $.
      $( [23-Feb-2006] $) $( [29-Aug-2004] $)
  $}

  ${
    syl5com.1 $e |- ( ph -> ps ) $.
    syl5com.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( Syllogism inference with commuted antecedents. $)
    syl5com $p |- ( ph -> ( ch -> th ) ) $=
      ( a1d sylcom ) ACBDABCEGFH $.
      $( [24-May-2005] $)
  $}

  ${
    $( Premise for ~ com12 .  See ~ pm2.04 for the theorem form. $)
    com12.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference that swaps (commutes) antecedents in an implication.  (The
       proof was shortened by Wolf Lammen, 4-Aug-2012.) $)
    com12 $p |- ( ps -> ( ph -> ch ) ) $=
      ( id syl5com ) BBACBEDF $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    syl5.1 $e |- ( ph -> ps ) $.
    syl5.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the second antecedent of the first premise.  (The proof was shortened by
       Wolf Lammen, 25-May-2013.) $)
    syl5 $p |- ( ch -> ( ph -> th ) ) $=
      ( syl5com com12 ) ACDABCDEFGH $.
      $( [25-May-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    syl6.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6.2 $e |- ( ch -> th ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise.  (The proof was shortened by Wolf
       Lammen, 30-Jul-2012.) $)
    syl6 $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1i sylcom ) ABCDECDGBFHI $.
      $( [31-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    syl56.1 $e |- ( ph -> ps ) $.
    syl56.2 $e |- ( ch -> ( ps -> th ) ) $.
    syl56.3 $e |- ( th -> ta ) $.
    $( Combine ~ syl5 and ~ syl6 . $)
    syl56 $p |- ( ch -> ( ph -> ta ) ) $=
      ( syl6 syl5 ) ABCEFCBDEGHIJ $.
      $( [14-Nov-2013] $)
  $}

  ${
    syl6com.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6com.2 $e |- ( ch -> th ) $.
    $( Syllogism inference with commuted antecedents. $)
    syl6com $p |- ( ps -> ( ph -> th ) ) $=
      ( syl6 com12 ) ABDABCDEFGH $.
      $( [25-May-2005] $)
  $}

  ${
    mpcom.1 $e |- ( ps -> ph ) $.
    mpcom.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus ponens inference with commutation of antecedents. $)
    mpcom $p |- ( ps -> ch ) $=
      ( com12 mpd ) BACDABCEFG $.
      $( [17-Mar-1996] $)
  $}

  ${
    syli.1 $e |- ( ps -> ( ph -> ch ) ) $.
    syli.2 $e |- ( ch -> ( ph -> th ) ) $.
    $( Syllogism inference with common nested antecedent. $)
    syli $p |- ( ps -> ( ph -> th ) ) $=
      ( com12 sylcom ) BACDECADFGH $.
      $( [4-Nov-2004] $)
  $}

  ${
    syl2im.1 $e |- ( ph -> ps ) $.
    syl2im.2 $e |- ( ch -> th ) $.
    syl2im.3 $e |- ( ps -> ( th -> ta ) ) $.
    $( Replace two antecedents.  Implication-only version of ~ syl2an .
       (Contributed by Wolf Lammen, 14-May-2013.) $)
    syl2im $p |- ( ph -> ( ch -> ta ) ) $=
      ( wi syl5 syl ) ABCEIFCDBEGHJK $.
      $( [14-May-2013] $)
  $}

  $( This theorem, called "Assertion," can be thought of as closed form of
     modus ponens ~ ax-mp .  Theorem *2.27 of [WhiteheadRussell] p. 104. $)
  pm2.27 $p |- ( ph -> ( ( ph -> ps ) -> ps ) ) $=
    ( wi id com12 ) ABCZABFDE $.
    $( [5-Aug-1993] $)

  ${
    mpdd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    mpdd.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction. $)
    mpdd $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a2d mpd ) ABCGBDGEABCDFHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpid.1 $e |- ( ph -> ch ) $.
    mpid.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction. $)
    mpid $p |- ( ph -> ( ps -> th ) ) $=
      ( a1d mpdd ) ABCDACBEGFH $.
      $( [14-Dec-2004] $)
  $}

  ${
    mpdi.1 $e |- ( ps -> ch ) $.
    mpdi.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction.  (The proof was shortened by O'Cat,
       15-Jan-2008.) $)
    mpdi $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1i mpdd ) ABCDBCGAEHFI $.
      $( [15-Jan-2008] $) $( [16-Apr-2005] $)
  $}

  ${
    mpii.1 $e |- ch $.
    mpii.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A doubly nested modus ponens inference.  (The proof was shortened by
       Wolf Lammen, 31-Jul-2012.) $)
    mpii $p |- ( ph -> ( ps -> th ) ) $=
      ( a1i mpdi ) ABCDCBEGFH $.
      $( [31-Jul-2012] $) $( [31-Dec-1993] $)
  $}

  ${
    syld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syld.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Syllogism deduction.  (The proof was shortened by O'Cat, 19-Feb-2008.)
       (The proof was shortened by Wolf Lammen, 3-Aug-2012.)

       Notice that ~ syld has the same form as ~ syl with ` ph ` added in front
       of each hypothesis and conclusion.  When all theorems referenced in a
       proof are converted in this way, we can replace ` ph ` with a hypothesis
       of the proof, allowing the hypothesis to be eliminated with ~ id and
       become an antecedent.  The Deduction Theorem for propositional calculus,
       e.g.  Theorem 3 in [Margaris] p. 56, tells us that this procedure is
       always possible. $)
    syld $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1d mpdd ) ABCDEACDGBFHI $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    mp2d.1 $e |- ( ph -> ps ) $.
    mp2d.2 $e |- ( ph -> ch ) $.
    mp2d.3 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A double modus ponens deduction.  (The proof was shortened by Wolf
       Lammen, 23-Jul-2013.) $)
    mp2d $p |- ( ph -> th ) $=
      ( mpid mpd ) ABDEABCDFGHI $.
      $( [23-Jul-2013] $) $( [23-May-2013] $)
  $}

  ${
    a1dd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction introducing a nested embedded antecedent.  (The proof was
       shortened by O'Cat, 15-Jan-2008.) $)
    a1dd $p |- ( ph -> ( ps -> ( th -> ch ) ) ) $=
      ( wi ax-1 syl6 ) ABCDCFECDGH $.
      $( [15-Jan-2008] $) $( [17-Dec-2004] $)
  $}

  ${
    pm2.43i.1 $e |- ( ph -> ( ph -> ps ) ) $.
    $( Inference absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43i $p |- ( ph -> ps ) $=
      ( id mpd ) AABADCE $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.43d.1 $e |- ( ph -> ( ps -> ( ps -> ch ) ) ) $.
    $( Deduction absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43d $p |- ( ph -> ( ps -> ch ) ) $=
      ( id mpdi ) ABBCBEDF $.
      $( [29-Nov-2008] $) $( [18-Aug-1993] $)
  $}

  ${
    pm2.43a.1 $e |- ( ps -> ( ph -> ( ps -> ch ) ) ) $.
    $( Inference absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43a $p |- ( ps -> ( ph -> ch ) ) $=
      ( id mpid ) BABCBEDF $.
      $( [29-Nov-2008] $) $( [7-Nov-1995] $)
  $}

  ${
    pm2.43b.1 $e |- ( ps -> ( ph -> ( ps -> ch ) ) ) $.
    $( Inference absorbing redundant antecedent. $)
    pm2.43b $p |- ( ph -> ( ps -> ch ) ) $=
      ( pm2.43a com12 ) BACABCDEF $.
      $( [31-Oct-1995] $)
  $}

  $( Absorption of redundant antecedent.  Also called the "Contraction" or
     "Hilbert" axiom.  Theorem *2.43 of [WhiteheadRussell] p. 106.  (The proof
     was shortened by O'Cat, 15-Aug-2004.) $)
  pm2.43 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi pm2.27 a2i ) AABCBABDE $.
    $( [15-Aug-2004] $) $( [5-Aug-1993] $)

  ${
    imim2d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding nested antecedents. $)
    imim2d $p |- ( ph -> ( ( th -> ps ) -> ( th -> ch ) ) ) $=
      ( wi a1d a2d ) ADBCABCFDEGH $.
      $( [5-Aug-1993] $)
  $}

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.05 of
     [WhiteheadRussell] p. 100.  (The proof was shortened by Wolf Lammen,
     6-Sep-2012.) $)
  imim2 $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi id imim2d ) ABDZABCGEF $.
    $( [6-Sep-2012] $) $( [5-Aug-1993] $)

  ${
    embantd.1 $e |- ( ph -> ps ) $.
    embantd.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Deduction embedding an antecedent.  (Contributed by Wolf Lammen,
       4-Oct-2013.) $)
    embantd $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi imim2d mpid ) ABCGBDEACDBFHI $.
      $( [15-Jan-2014] $) $( [4-Oct-2013] $)
  $}

  ${
    3syld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3syld.2 $e |- ( ph -> ( ch -> th ) ) $.
    3syld.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( Triple syllogism deduction.  (Contributed by Jeff Hankins,
       4-Aug-2009.) $)
    3syld $p |- ( ph -> ( ps -> ta ) ) $=
      ( syld ) ABDEABCDFGIHI $.
      $( [24-Sep-2010] $) $( [4-Aug-2009] $)
  $}

  ${
    sylsyld.1 $e |- ( ph -> ps ) $.
    sylsyld.2 $e |- ( ph -> ( ch -> th ) ) $.
    sylsyld.3 $e |- ( ps -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e12 without virtual deduction symbols.
       (Contributed by Alan Sare, 20-Apr-2011.) $)
    sylsyld $p |- ( ph -> ( ch -> ta ) ) $=
      ( wi syl syld ) ACDEGABDEIFHJK $.
      $( [20-Apr-2011] $)
  $}

  ${
    imim12i.1 $e |- ( ph -> ps ) $.
    imim12i.2 $e |- ( ch -> th ) $.
    $( Inference joining two implications.  (The proof was shortened by O'Cat,
       29-Oct-2011.) $)
    imim12i $p |- ( ( ps -> ch ) -> ( ph -> th ) ) $=
      ( wi imim2i syl5 ) ABBCGDECDBFHI $.
      $( [29-Oct-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    imim1i.1 $e |- ( ph -> ps ) $.
    $( Inference adding common consequents in an implication, thereby
       interchanging the original antecedent and consequent.  (The proof was
       shortened by Wolf Lammen, 4-Aug-2012.) $)
    imim1i $p |- ( ( ps -> ch ) -> ( ph -> ch ) ) $=
      ( id imim12i ) ABCCDCEF $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    imim3i.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference adding three nested antecedents. $)
    imim3i $p |- ( ( th -> ph ) -> ( ( th -> ps ) -> ( th -> ch ) ) ) $=
      ( wi imim2i a2d ) DAFDBCABCFDEGH $.
      $( [19-Dec-2006] $)
  $}

  ${
    sylc.1 $e |- ( ph -> ps ) $.
    sylc.2 $e |- ( ph -> ch ) $.
    sylc.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( A syllogism inference combined with contraction. $)
    sylc $p |- ( ph -> th ) $=
      ( syl2im pm2.43i ) ADABACDEFGHI $.
      $( [13-Jul-2013] $) $( [4-May-1994] $)
  $}

  ${
    syl3c.1 $e |- ( ph -> ps ) $.
    syl3c.2 $e |- ( ph -> ch ) $.
    syl3c.3 $e |- ( ph -> th ) $.
    syl3c.4 $e |- ( ps -> ( ch -> ( th -> ta ) ) ) $.
    $( A syllogism inference combined with contraction. ~ e111 without virtual
       deductions.  (Contributed by Alan Sare, 7-Jul-2011.) $)
    syl3c $p |- ( ph -> ta ) $=
      ( wi sylc mpd ) ADEHABCDEJFGIKL $.
      $( [7-Jul-2011] $)
  $}

  ${
    syl6mpi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6mpi.2 $e |- th $.
    syl6mpi.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e20 without virtual deductions.  (Contributed by Alan Sare,
       8-Jul-2011.)  (The proof was shortened by Wolf Lammen, 13-Sep-2012.) $)
    syl6mpi $p |- ( ph -> ( ps -> ta ) ) $=
      ( mpi syl6 ) ABCEFCDEGHIJ $.
      $( [13-Sep-2012] $) $( [8-Jul-2011] $)
  $}

  ${
    mpsyl.1 $e |- ph $.
    mpsyl.2 $e |- ( ps -> ch ) $.
    mpsyl.3 $e |- ( ph -> ( ch -> th ) ) $.
    $( Modus ponens combined with a syllogism inference.  (Contributed by Alan
       Sare, 20-Apr-2011.) $)
    mpsyl $p |- ( ps -> th ) $=
      ( a1i sylc ) BACDABEHFGI $.
      $( [20-Apr-2011] $)
  $}

  ${
    syl6c.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6c.2 $e |- ( ph -> ( ps -> th ) ) $.
    syl6c.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( Inference combining ~ syl6 with contraction.  (Contributed by Alan Sare,
       2-May-2011.) $)
    syl6c $p |- ( ph -> ( ps -> ta ) ) $=
      ( wi syl6 mpdd ) ABDEGABCDEIFHJK $.
      $( [2-May-2011] $)
  $}

  ${
    syldd.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syldd.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    $( Nested syllogism deduction.  (The proof was shortened by Wolf Lammen,
       11-May-2013.) $)
    syldd $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi imim2 syl6c ) ABDEHCDHCEHGFDECIJ $.
      $( [11-May-2013] $) $( [12-Dec-2004] $)
  $}

  ${
    syl5d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5d.2 $e |- ( ph -> ( th -> ( ch -> ta ) ) ) $.
    $( A nested syllogism deduction.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000 and shortened further by O'Cat, 2-Feb-2006.) $)
    syl5d $p |- ( ph -> ( th -> ( ps -> ta ) ) ) $=
      ( wi a1d syldd ) ADBCEABCHDFIGJ $.
      $( [3-Feb-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    syl7.1 $e |- ( ph -> ps ) $.
    syl7.2 $e |- ( ch -> ( th -> ( ps -> ta ) ) ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the third antecedent of the first premise.  (The proof was shortened by
       Wolf Lammen, 3-Aug-2012.) $)
    syl7 $p |- ( ch -> ( th -> ( ph -> ta ) ) ) $=
      ( wi a1i syl5d ) CABDEABHCFIGJ $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    syl6d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl6d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( A nested syllogism deduction.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000 and shortened further by O'Cat, 2-Feb-2006.) $)
    syl6d $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi a1d syldd ) ABCDEFADEHBGIJ $.
      $( [3-Feb-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    syl8.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8.2 $e |- ( th -> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise.  (The proof was shortened by Wolf
       Lammen, 3-Aug-2012.) $)
    syl8 $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi a1i syl6d ) ABCDEFDEHAGIJ $.
      $( [3-Aug-2012] $) $( [1-Aug-1994] $)
  $}

  ${
    syl9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl9.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( A nested syllogism inference with different antecedents.  (The proof was
       shortened by Josh Purinton, 29-Dec-2000.) $)
    syl9 $p |- ( ph -> ( th -> ( ps -> ta ) ) ) $=
      ( wi a1i syl5d ) ABCDEFDCEHHAGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl9r.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl9r.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( A nested syllogism inference with different antecedents. $)
    syl9r $p |- ( th -> ( ph -> ( ps -> ta ) ) ) $=
      ( wi syl9 com12 ) ADBEHABCDEFGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    imim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Deduction combining antecedents and consequents.  (The proof was
       shortened by O'Cat, 30-Oct-2011.) $)
    imim12d $p |- ( ph -> ( ( ch -> th ) -> ( ps -> ta ) ) ) $=
      ( wi imim2d syl5d ) ABCCDHEFADECGIJ $.
      $( [3-Nov-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    imim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding nested consequents.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2012.) $)
    imim1d $p |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) $=
      ( idd imim12d ) ABCDDEADFG $.
      $( [12-Sep-2012] $) $( [3-Apr-1994] $)
  $}

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.06 of
     [WhiteheadRussell] p. 100.  (The proof was shortened by Wolf Lammen,
     25-May-2013.) $)
  imim1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi id imim1d ) ABDZABCGEF $.
    $( [25-May-2013] $) $( [5-Aug-1993] $)

  $( Theorem *2.83 of [WhiteheadRussell] p. 108. $)
  pm2.83 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ( ch -> th ) ) ->
                ( ph -> ( ps -> th ) ) ) ) $=
    ( wi imim1 imim3i ) BCECDEBDEABCDFG $.
    $( [3-Jan-2005] $)

  ${
    com3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Commutation of antecedents.  Swap 2nd and 3rd.  (The proof was shortened
       by Wolf Lammen, 4-Aug-2012.) $)
    com23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( wi pm2.27 syl9 ) ABCDFCDECDGH $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)

    $( Commutation of antecedents.  Rotate right. $)
    com3r $p |- ( ch -> ( ph -> ( ps -> th ) ) ) $=
      ( wi com23 com12 ) ACBDFABCDEGH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 3rd.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com13 $p |- ( ch -> ( ps -> ( ph -> th ) ) ) $=
      ( com3r com23 ) CABDABCDEFG $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       Wolf Lammen, 28-Jul-2012.) $)
    com3l $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( com3r ) CABDABCDEFF $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)
  $}

  $( Swap antecedents.  Theorem *2.04 of [WhiteheadRussell] p. 100.  (The proof
     was shortened by Wolf Lammen, 12-Sep-2012.) $)
  pm2.04 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi id com23 ) ABCDDZABCGEF $.
    $( [12-Sep-2012] $) $( [5-Aug-1993] $)

  ${
    com4.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( Commutation of antecedents.  Swap 3rd and 4th. $)
    com34 $p |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) $=
      ( wi pm2.04 syl6 ) ABCDEGGDCEGGFCDEHI $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       O'Cat, 15-Aug-2004.) $)
    com4l $p |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) $=
      ( wi com3l com34 ) BCADEABCDEGFHI $.
      $( [15-Aug-2004] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate twice. $)
    com4t $p |- ( ch -> ( th -> ( ph -> ( ps -> ta ) ) ) ) $=
      ( com4l ) BCDAEABCDEFGG $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate right. $)
    com4r $p |- ( th -> ( ph -> ( ps -> ( ch -> ta ) ) ) ) $=
      ( com4t com4l ) CDABEABCDEFGH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 2nd and 4th.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com24 $p |- ( ph -> ( th -> ( ch -> ( ps -> ta ) ) ) ) $=
      ( wi com4t com13 ) CDABEGABCDEFHI $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 4th.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com14 $p |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) $=
      ( wi com4l com3r ) BCDAEGABCDEFHI $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)
  $}

  ${
    com5.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $.
    $( Commutation of antecedents.  Swap 4th and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com45 $p |- ( ph -> ( ps -> ( ch -> ( ta -> ( th -> et ) ) ) ) ) $=
      ( wi pm2.04 syl8 ) ABCDEFHHEDFHHGDEFIJ $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 3rd and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com35 $p |- ( ph -> ( ps -> ( ta -> ( th -> ( ch -> et ) ) ) ) ) $=
      ( wi com34 com45 ) ABDECFHABDCEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 2nd and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com25 $p |- ( ph -> ( ta -> ( ch -> ( th -> ( ps -> et ) ) ) ) ) $=
      ( wi com24 com45 ) ADCEBFHADCBEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left.  (Contributed by Jeff Hankins,
       28-Jun-2009.)  (The proof was shortened by Wolf Lammen, 29-Jul-2012.) $)
    com5l $p |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) $=
      ( wi com4l com45 ) BCDAEFABCDEFHGIJ $.
      $( [29-Jul-2012] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 1st and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.)  (The proof was shortened by Wolf Lammen,
       29-Jul-2012.) $)
    com15 $p |- ( ta -> ( ps -> ( ch -> ( th -> ( ph -> et ) ) ) ) ) $=
      ( wi com5l com4r ) BCDEAFHABCDEFGIJ $.
      $( [29-Jul-2012] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left twice.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com52l $p |- ( ch -> ( th -> ( ta -> ( ph -> ( ps -> et ) ) ) ) ) $=
      ( com5l ) BCDEAFABCDEFGHH $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate right twice.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com52r $p |- ( th -> ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) ) $=
      ( com52l com5l ) CDEABFABCDEFGHI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate right.  (Contributed by Wolf Lammen,
       29-Jul-2012.) $)
    com5r $p |- ( ta -> ( ph -> ( ps -> ( ch -> ( th -> et ) ) ) ) ) $=
      ( com52l ) CDEABFABCDEFGHH $.
      $( [29-Jul-2012] $)
  $}

  $( Elimination of a nested antecedent as a kind of reversal of inference
     ~ ja .  (Contributed by Wolf Lammen, 9-May-2013.) $)
  jarr $p |- ( ( ( ph -> ps ) -> ch ) -> ( ps -> ch ) ) $=
    ( wi ax-1 imim1i ) BABDCBAEF $.
    $( [9-May-2013] $)

  ${
    pm2.86i.1 $e |- ( ( ph -> ps ) -> ( ph -> ch ) ) $.
    $( Inference based on ~ pm2.86 .  (The proof was shortened by Wolf Lammen,
       3-Apr-2013.) $)
    pm2.86i $p |- ( ph -> ( ps -> ch ) ) $=
      ( wi ax-1 syl com12 ) BACBABEACEBAFDGH $.
      $( [3-Apr-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.86d.1 $e |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) $.
    $( Deduction based on ~ pm2.86 .  (The proof was shortened by Wolf Lammen,
       3-Apr-2013.) $)
    pm2.86d $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi ax-1 syl5 com23 ) ACBDCBCFABDFCBGEHI $.
      $( [3-Apr-2013] $) $( [29-Jun-1995] $)
  $}

  $( Converse of axiom ~ ax-2 .  Theorem *2.86 of [WhiteheadRussell] p. 108.
     (The proof was shortened by Wolf Lammen, 3-Apr-2013.) $)
  pm2.86 $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) ->
              ( ph -> ( ps -> ch ) ) ) $=
    ( wi id pm2.86d ) ABDACDDZABCGEF $.
    $( [3-Apr-2013] $) $( [25-Apr-1994] $)

  $( The Linearity Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  This version of ~ loolin does not use ~ ax-3 , meaning
     that this theorem is intuitionistically valid.  (Contributed by O'Cat,
     12-Aug-2004.) $)
  loolinALT $p |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) $=
    ( wi jarr pm2.43d ) ABCBACZCBAABFDE $.
    $( [21-Sep-2013] $) $( [12-Aug-2004] $)

  $( An alternate for the Linearity Axiom of the infinite-valued sentential
     logic (L-infinity) of Lukasiewicz, due to Barbara Wozniakowska, _Reports
     on Mathematical Logic_ 10, 129-137 (1978).  (Contributed by O'Cat,
     8-Aug-2004.) $)
  loowoz $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) ->
                 ( ( ps -> ph ) -> ( ps -> ch ) ) ) $=
    ( wi jarr a2d ) ABDACDZDBACABGEF $.
    $( [20-Sep-2013] $) $( [8-Aug-2004] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical negation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( This section makes our first use of the third axiom of propositonal
   calculus. $)

  ${
    con4d.1 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( Deduction derived from axiom ~ ax-3 . $)
    con4d $p |- ( ph -> ( ch -> ps ) ) $=
      ( wn wi ax-3 syl ) ABECEFCBFDBCGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    pm2.21d.1 $e |- ( ph -> -. ps ) $.
    $( A contradiction implies anything.  Deduction from ~ pm2.21 . $)
    pm2.21d $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn a1d con4d ) ACBABECEDFG $.
      $( [10-Feb-1996] $)
  $}

  $( From a wff and its negation, anything is true.  Theorem *2.21 of
     [WhiteheadRussell] p. 104.  Also called the Duns Scotus law.  (The proof
     was shortened by Wolf Lammen, 14-Sep-2012.) $)
  pm2.21 $p |- ( -. ph -> ( ph -> ps ) ) $=
    ( wn id pm2.21d ) ACZABFDE $.
    $( [14-Sep-2012] $) $( [5-Aug-1993] $)

  $( Theorem *2.24 of [WhiteheadRussell] p. 104. $)
  pm2.24 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn pm2.21 com12 ) ACABABDE $.
    $( [3-Jan-2005] $)

  $( Proof by contradiction.  Theorem *2.18 of [WhiteheadRussell] p. 103.  Also
     called the Law of Clavius. $)
  pm2.18 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi pm2.21 a2i con4d pm2.43i ) ABZACZAIAIHAIBZAJDEFG $.
    $( [5-Aug-1993] $)

  ${
    pm2.18d.1 $e |- ( ph -> ( -. ps -> ps ) ) $.
    $( Deduction based on reductio ad absurdum.  (Contributed by FL,
       12-Jul-2009.)  (The proof was shortened by Andrew Salmon,
       7-May-2011.) $)
    pm2.18d $p |- ( ph -> ps ) $=
      ( wn wi pm2.18 syl ) ABDBEBCBFG $.
      $( [7-May-2011] $) $( [12-Jul-2009] $)
  $}

  $( Converse of double negation.  Theorem *2.14 of [WhiteheadRussell] p. 102.
     (The proof was shortened by David Harvey, 5-Sep-1999.  An even shorter
     proof found by Josh Purinton, 29-Dec-2000.) $)
  notnot2 $p |- ( -. -. ph -> ph ) $=
    ( wn pm2.21 pm2.18d ) ABZBAEACD $.
    $( [5-Aug-1993] $)

  ${
    negai.1 $e |- -. -. ph $.
    $( Inference from double negation. $)
    notnotri $p |- ph $=
      ( wn notnot2 ax-mp ) ACCABADE $.
      $( [27-Feb-2008] $)
  $}

  ${
    con2d.1 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( A contraposition deduction. $)
    con2d $p |- ( ph -> ( ch -> -. ps ) ) $=
      ( wn notnot2 syl5 con4d ) ABEZCIEBACEBFDGH $.
      $( [12-Feb-2013] $) $( [19-Aug-1993] $)
  $}

  $( Contraposition.  Theorem *2.03 of [WhiteheadRussell] p. 100.  (The proof
     was shortened by Wolf Lammen, 12-Feb-2013.) $)
  con2 $p |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) $=
    ( wn wi id con2d ) ABCDZABGEF $.
    $( [12-Feb-2013] $) $( [5-Aug-1993] $)

  ${
    mt2d.1 $e |- ( ph -> ch ) $.
    mt2d.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Modus tollens deduction. $)
    mt2d $p |- ( ph -> -. ps ) $=
      ( wn con2d mpd ) ACBFDABCEGH $.
      $( [4-Jul-1994] $)
  $}

  ${
    mt2i.1 $e |- ch $.
    mt2i.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mt2i $p |- ( ph -> -. ps ) $=
      ( a1i mt2d ) ABCCADFEG $.
      $( [15-Sep-2012] $) $( [26-Mar-1995] $)
  $}

  ${
    nsyl3.1 $e |- ( ph -> -. ps ) $.
    nsyl3.2 $e |- ( ch -> ps ) $.
    $( A negated syllogism inference. $)
    nsyl3 $p |- ( ch -> -. ph ) $=
      ( wn wi a1i mt2d ) CABEABFGCDHI $.
      $( [13-Jun-2013] $) $( [1-Dec-1995] $)
  $}

  ${
    con2i.a $e |- ( ph -> -. ps ) $.
    $( A contraposition inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.)  (The proof was shortened by Wolf Lammen, 13-Jun-2013.) $)
    con2i $p |- ( ps -> -. ph ) $=
      ( id nsyl3 ) ABBCBDE $.
      $( [13-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    nsyl.1 $e |- ( ph -> -. ps ) $.
    nsyl.2 $e |- ( ch -> ps ) $.
    $( A negated syllogism inference.  (The proof was shortened by Wolf Lammen,
       2-Mar-2013.) $)
    nsyl $p |- ( ph -> -. ch ) $=
      ( nsyl3 con2i ) CAABCDEFG $.
      $( [2-Mar-2013] $) $( [31-Dec-1993] $)
  $}

  $( Converse of double negation.  Theorem *2.12 of [WhiteheadRussell] p. 101.
     (The proof was shortened by Wolf Lammen, 2-Mar-2013.) $)
  notnot1 $p |- ( ph -> -. -. ph ) $=
    ( wn id con2i ) ABZAECD $.
    $( [2-Mar-2013] $) $( [5-Aug-1993] $)

  ${
    negbi.1 $e |- ph $.
    $( Infer double negation. $)
    notnoti $p |- -. -. ph $=
      ( wn notnot1 ax-mp ) AACCBADE $.
      $( [27-Feb-2008] $)
  $}

  ${
    con1d.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( A contraposition deduction. $)
    con1d $p |- ( ph -> ( -. ch -> ps ) ) $=
      ( wn notnot1 syl6 con4d ) ABCEZABECIEDCFGH $.
      $( [12-Feb-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    mt3d.1 $e |- ( ph -> -. ch ) $.
    mt3d.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Modus tollens deduction. $)
    mt3d $p |- ( ph -> ps ) $=
      ( wn con1d mpd ) ACFBDABCEGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    mt3i.1 $e |- -. ch $.
    mt3i.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mt3i $p |- ( ph -> ps ) $=
      ( wn a1i mt3d ) ABCCFADGEH $.
      $( [15-Sep-2012] $) $( [26-Mar-1995] $)
  $}

  ${
    nsyl2.1 $e |- ( ph -> -. ps ) $.
    nsyl2.2 $e |- ( -. ch -> ps ) $.
    $( A negated syllogism inference. $)
    nsyl2 $p |- ( ph -> ch ) $=
      ( wn wi a1i mt3d ) ACBDCFBGAEHI $.
      $( [19-Jun-2013] $) $( [26-Jun-1994] $)
  $}

  $( Contraposition.  Theorem *2.15 of [WhiteheadRussell] p. 102.  (The proof
     was shortened by Wolf Lammen, 12-Feb-2013.) $)
  con1 $p |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) $=
    ( wn wi id con1d ) ACBDZABGEF $.
    $( [12-Feb-2013] $) $( [5-Aug-1993] $)

  ${
    con1i.a $e |- ( -. ph -> ps ) $.
    $( A contraposition inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.)  (The proof was shortened by Wolf Lammen, 19-Jun-2013.) $)
    con1i $p |- ( -. ps -> ph ) $=
      ( wn id nsyl2 ) BDZBAGECF $.
      $( [19-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    con4i.1 $e |- ( -. ph -> -. ps ) $.
    $( Inference rule derived from axiom ~ ax-3 .  (The proof was shortened by
       Wolf Lammen, 21-Jun-2013.) $)
    con4i $p |- ( ps -> ph ) $=
      ( wn notnot1 nsyl2 ) BBDABECF $.
      $( [21-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.21i.1 $e |- -. ph $.
    $( A contradiction implies anything.  Inference from ~ pm2.21 . $)
    pm2.21i $p |- ( ph -> ps ) $=
      ( wn a1i con4i ) BAADBDCEF $.
      $( [16-Sep-1993] $)
  $}

  ${
    pm2.24ii.1 $e |- ph $.
    pm2.24ii.2 $e |- -. ph $.
    $( A contradiction implies anything.  Inference from ~ pm2.24 . $)
    pm2.24ii $p |- ps $=
      ( pm2.21i ax-mp ) ABCABDEF $.
      $( [27-Feb-2008] $)
  $}

  ${
    con3d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A contraposition deduction. $)
    con3d $p |- ( ph -> ( -. ch -> -. ps ) ) $=
      ( wn notnot2 syl5 con1d ) ABEZCIEBACBFDGH $.
      $( [13-Feb-2013] $) $( [5-Aug-1993] $)
  $}

  $( Contraposition.  Theorem *2.16 of [WhiteheadRussell] p. 103.  (The proof
     was shortened by Wolf Lammen, 13-Feb-2013.) $)
  con3 $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi id con3d ) ABCZABFDE $.
    $( [13-Feb-2013] $) $( [5-Aug-1993] $)

  ${
    con3i.a $e |- ( ph -> ps ) $.
    $( A contraposition inference.  (The proof was shortened by Wolf Lammen,
       20-Jun-2013.) $)
    con3i $p |- ( -. ps -> -. ph ) $=
      ( wn id nsyl ) BDZBAGECF $.
      $( [20-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    con3rr3.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Rotate through consequent right.  (Contributed by Wolf Lammen,
       3-Nov-2013.) $)
    con3rr3 $p |- ( -. ch -> ( ph -> -. ps ) ) $=
      ( wn con3d com12 ) ACEBEABCDFG $.
      $( [3-Nov-2013] $)
  $}

  ${
    mt4.1 $e |- ph $.
    mt4.2 $e |- ( -. ps -> -. ph ) $.
    $( The rule of modus tollens.  (Contributed by Wolf Lammen,
       12-May-2013.) $)
    mt4 $p |- ps $=
      ( con4i ax-mp ) ABCBADEF $.
      $( [12-May-2013] $)
  $}

  ${
    mt4d.1 $e |- ( ph -> ps ) $.
    mt4d.2 $e |- ( ph -> ( -. ch -> -. ps ) ) $.
    $( Modus tollens deduction. $)
    mt4d $p |- ( ph -> ch ) $=
      ( con4d mpd ) ABCDACBEFG $.
      $( [9-Jun-2006] $)
  $}

  ${
    mt4i.1 $e |- ch $.
    mt4i.2 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( Modus tollens inference.  (Contributed by Wolf Lammen, 12-May-2013.) $)
    mt4i $p |- ( ph -> ps ) $=
      ( a1i mt4d ) ACBCADFEG $.
      $( [10-Sep-2013] $) $( [12-May-2013] $)
  $}

  ${
    nsyld.1 $e |- ( ph -> ( ps -> -. ch ) ) $.
    nsyld.2 $e |- ( ph -> ( ta -> ch ) ) $.
    $( A negated syllogism deduction. $)
    nsyld $p |- ( ph -> ( ps -> -. ta ) ) $=
      ( wn con3d syld ) ABCGDGEADCFHI $.
      $( [9-Apr-2005] $)
  $}

  ${
    nsyli.1 $e |- ( ph -> ( ps -> ch ) ) $.
    nsyli.2 $e |- ( th -> -. ch ) $.
    $( A negated syllogism inference. $)
    nsyli $p |- ( ph -> ( th -> -. ps ) ) $=
      ( wn con3d syl5 ) DCGABGFABCEHI $.
      $( [3-May-1994] $)
  $}

  ${
    nsyl4.1 $e |- ( ph -> ps ) $.
    nsyl4.2 $e |- ( -. ph -> ch ) $.
    $( A negated syllogism inference. $)
    nsyl4 $p |- ( -. ch -> ps ) $=
      ( wn con1i syl ) CFABACEGDH $.
      $( [15-Feb-1996] $)
  $}

  ${
    pm2.24d.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ pm2.24 . $)
    pm2.24d $p |- ( ph -> ( -. ps -> ch ) ) $=
      ( wn a1d con1d ) ACBABCEDFG $.
      $( [30-Jan-2006] $)
  $}

  ${
    pm2.24i.1 $e |- ph $.
    $( Inference version of ~ pm2.24 . $)
    pm2.24i $p |- ( -. ph -> ps ) $=
      ( wn a1i con1i ) BAABDCEF $.
      $( [20-Aug-2001] $)
  $}

  $( Theorem *3.2 of [WhiteheadRussell] p. 111, expressed with primitive
     connectives.  (The proof was shortened by Josh Purinton, 29-Dec-2000.) $)
  pm3.2im $p |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) $=
    ( wn wi pm2.27 con2d ) AABCZDBAGEF $.
    $( [5-Aug-1993] $)

  $( Theorem 8 of [Margaris] p. 60.  (The proof was shortened by Josh Purinton,
     29-Dec-2000.) $)
  mth8 $p |- ( ph -> ( -. ps -> -. ( ph -> ps ) ) ) $=
    ( wi pm2.27 con3d ) AABCBABDE $.
    $( [5-Aug-1993] $)

  ${
    jc.1 $e |- ( ph -> ps ) $.
    jc.2 $e |- ( ph -> ch ) $.
    $( Inference joining the consequents of two premises. $)
    jc $p |- ( ph -> -. ( ps -> -. ch ) ) $=
      ( wn wi pm3.2im sylc ) ABCBCFGFDEBCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    impi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( An importation inference.  (The proof was shortened by Wolf Lammen,
       20-Jul-2013.) $)
    impi $p |- ( -. ( ph -> -. ps ) -> ch ) $=
      ( wn wi con3rr3 con1i ) CABEFABCDGH $.
      $( [20-Jul-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    expi.1 $e |- ( -. ( ph -> -. ps ) -> ch ) $.
    $( An exportation inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.) $)
    expi $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn wi pm3.2im syl6 ) ABABEFECABGDH $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  $( Simplification.  Similar to Theorem *3.27 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simprim $p |- ( -. ( ph -> -. ps ) -> ps ) $=
    ( idd impi ) ABBABCD $.
    $( [13-Nov-2012] $) $( [5-Aug-1993] $)

  $( Simplification.  Similar to Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 21-Jul-2012.) $)
  simplim $p |- ( -. ( ph -> ps ) -> ph ) $=
    ( wi pm2.21 con1i ) AABCABDE $.
    $( [23-Jul-2012] $) $( [5-Aug-1993] $)

  $( Theorem *2.5 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 9-Oct-2012.) $)
  pm2.5 $p |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) $=
    ( wi wn simplim pm2.24d ) ABCDABABEF $.
    $( [9-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.51 of [WhiteheadRussell] p. 107. $)
  pm2.51 $p |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) $=
    ( wi wn ax-1 con3i a1d ) ABCZDBDABHBAEFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.521 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 8-Oct-2012.) $)
  pm2.521 $p |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) $=
    ( wi wn simplim a1d ) ABCDABABEF $.
    $( [8-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.52 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 8-Oct-2012.) $)
  pm2.52 $p |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) $=
    ( wi wn pm2.521 con3d ) ABCDBAABEF $.
    $( [8-Oct-2012] $) $( [3-Jan-2005] $)

  $( Exportation theorem expressed with primitive connectives. $)
  expt $p |- ( ( -. ( ph -> -. ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) $=
    ( wn wi pm3.2im imim1d com12 ) AABDEDZCEBCEABICABFGH $.
    $( [5-Aug-1993] $)

  $( Importation theorem expressed with primitive connectives.  (The proof was
     shortened by Wolf Lammen, 20-Jul-2013.) $)
  impt $p |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) $=
    ( wi wn simprim simplim imim1i mpdi ) ABCDZDABEZDEZBCABFLAJAKGHI $.
    $( [20-Jul-2013] $) $( [25-Apr-1994] $)

  ${
    pm2.61d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61d.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Deduction eliminating an antecedent.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2013.) $)
    pm2.61d $p |- ( ph -> ch ) $=
      ( wn con1d syld pm2.18d ) ACACFBCABCEGDHI $.
      $( [12-Sep-2013] $) $( [27-Apr-1994] $)
  $}

  ${
    pm2.61d1.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61d1.2 $e |- ( -. ps -> ch ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61d1 $p |- ( ph -> ch ) $=
      ( wn wi a1i pm2.61d ) ABCDBFCGAEHI $.
      $( [15-Jul-2005] $)
  $}

  ${
    pm2.61d2.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    pm2.61d2.2 $e |- ( ps -> ch ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61d2 $p |- ( ph -> ch ) $=
      ( wi a1i pm2.61d ) ABCBCFAEGDH $.
      $( [18-Aug-1993] $)
  $}

  ${
    ja.1 $e |- ( -. ph -> ch ) $.
    ja.2 $e |- ( ps -> ch ) $.
    $( Inference joining the antecedents of two premises.  (The proof was
       shortened by O'Cat, 19-Feb-2008.) $)
    ja $p |- ( ( ph -> ps ) -> ch ) $=
      ( wi imim2i pm2.61d1 ) ABFACBCAEGDH $.
      $( [19-Feb-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    jad.1 $e |- ( ph -> ( -. ps -> th ) ) $.
    jad.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Deduction form of ~ ja .  (Contributed by Scott Fenton, 13-Dec-2010.)
       (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    jad $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi wn com12 ja ) BCGADBCADGABHDEIACDFIJI $.
      $( [17-Sep-2011] $) $( [13-Dec-2010] $)
  $}

  $( Elimination of a nested antecedent as a kind of reversal of inference
     ~ ja .  (Contributed by Wolf Lammen, 10-May-2013.) $)
  jarl $p |- ( ( ( ph -> ps ) -> ch ) -> ( -. ph -> ch ) ) $=
    ( wn wi pm2.21 imim1i ) ADABECABFG $.
    $( [10-May-2013] $)

  ${
    pm2.61i.1 $e |- ( ph -> ps ) $.
    pm2.61i.2 $e |- ( -. ph -> ps ) $.
    $( Inference eliminating an antecedent.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2013.) $)
    pm2.61i $p |- ps $=
      ( wi id ja ax-mp ) AAEBAFAABDCGH $.
      $( [12-Sep-2013] $) $( [5-Apr-1994] $)
  $}

  ${
    pm2.61ii.1 $e |- ( -. ph -> ( -. ps -> ch ) ) $.
    pm2.61ii.2 $e |- ( ph -> ch ) $.
    pm2.61ii.3 $e |- ( ps -> ch ) $.
    $( Inference eliminating two antecedents.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000.) $)
    pm2.61ii $p |- ch $=
      ( wn pm2.61d2 pm2.61i ) ACEAGBCDFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    pm2.61nii.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61nii.2 $e |- ( -. ph -> ch ) $.
    pm2.61nii.3 $e |- ( -. ps -> ch ) $.
    $( Inference eliminating two antecedents.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.)  (The proof was shortened by Wolf Lammen,
       13-Nov-2012.) $)
    pm2.61nii $p |- ch $=
      ( pm2.61d1 pm2.61i ) ACABCDFGEH $.
      $( [13-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.61iii.1 $e |- ( -. ph -> ( -. ps -> ( -. ch -> th ) ) ) $.
    pm2.61iii.2 $e |- ( ph -> th ) $.
    pm2.61iii.3 $e |- ( ps -> th ) $.
    pm2.61iii.4 $e |- ( ch -> th ) $.
    $( Inference eliminating three antecedents.  (The proof was shortened by
       Wolf Lammen, 22-Sep-2013.) $)
    pm2.61iii $p |- th $=
      ( wn wi a1d pm2.61ii pm2.61i ) CDHABCIZDJEADNFKBDNGKLM $.
      $( [22-Sep-2013] $) $( [2-Jan-2002] $)
  $}

  $( Reductio ad absurdum.  Theorem *2.01 of [WhiteheadRussell] p. 100.  (The
     proof was shortened by O'Cat, 21-Nov-2008.)  (The proof was shortened by
     Wolf Lammen, 31-Oct-2012.) $)
  pm2.01 $p |- ( ( ph -> -. ph ) -> -. ph ) $=
    ( wn id ja ) AABZEECZFD $.
    $( [31-Oct-2012] $) $( [18-Aug-1993] $)

  ${
    pm2.01d.1 $e |- ( ph -> ( ps -> -. ps ) ) $.
    $( Deduction based on reductio ad absurdum.  (The proof was shortened by
       Wolf Lammen, 5-Mar-2013.) $)
    pm2.01d $p |- ( ph -> -. ps ) $=
      ( wn id pm2.61d1 ) ABBDZCGEF $.
      $( [5-Mar-2013] $) $( [18-Aug-1993] $)
  $}

  $( Theorem *2.6 of [WhiteheadRussell] p. 107. $)
  pm2.6 $p |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wn wi id idd jad ) ACBDZABBHEHBFG $.
    $( [22-Sep-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.61 of [WhiteheadRussell] p. 107.  Useful for eliminating an
     antecedent.  (The proof was shortened by Wolf Lammen, 22-Sep-2013.) $)
  pm2.61 $p |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) $=
    ( wn wi pm2.6 com12 ) ACBDABDBABEF $.
    $( [22-Sep-2013] $) $( [5-Aug-1993] $)

  $( Theorem *2.65 of [WhiteheadRussell] p. 107.  Proof by contradiction.  (The
     proof was shortened by Wolf Lammen, 8-Mar-2013.) $)
  pm2.65 $p |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) $=
    ( wi wn idd con3 jad ) ABCZABDADZHIEABFG $.
    $( [8-Mar-2013] $) $( [5-Aug-1993] $)

  ${
    pm2.65i.1 $e |- ( ph -> ps ) $.
    pm2.65i.2 $e |- ( ph -> -. ps ) $.
    $( Inference rule for proof by contradiction.  (The proof was shortened by
       Wolf Lammen, 11-Sep-2013.) $)
    pm2.65i $p |- -. ph $=
      ( wn con2i con3i pm2.61i ) BAEABDFABCGH $.
      $( [11-Sep-2013] $) $( [18-May-1994] $)
  $}

  ${
    pm2.65d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.65d.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Deduction rule for proof by contradiction.  (The proof was shortened by
       Wolf Lammen, 26-May-2013.) $)
    pm2.65d $p |- ( ph -> -. ps ) $=
      ( nsyld pm2.01d ) ABABCBEDFG $.
      $( [26-May-2013] $) $( [26-Jun-1994] $)
  $}

  ${
    mto.1 $e |- -. ps $.
    mto.2 $e |- ( ph -> ps ) $.
    $( The rule of modus tollens.  (The proof was shortened by Wolf Lammen,
       11-Sep-2013.) $)
    mto $p |- -. ph $=
      ( wn a1i pm2.65i ) ABDBEACFG $.
      $( [11-Sep-2013] $) $( [19-Aug-1993] $)
  $}

  ${
    mtod.1 $e |- ( ph -> -. ch ) $.
    mtod.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus tollens deduction.  (The proof was shortened by Wolf Lammen,
       11-Sep-2013.) $)
    mtod $p |- ( ph -> -. ps ) $=
      ( wn a1d pm2.65d ) ABCEACFBDGH $.
      $( [11-Sep-2013] $) $( [3-Apr-1994] $)
  $}

  ${
    mtoi.1 $e |- -. ch $.
    mtoi.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mtoi $p |- ( ph -> -. ps ) $=
      ( wn a1i mtod ) ABCCFADGEH $.
      $( [15-Sep-2012] $) $( [5-Jul-1994] $)
  $}

  ${
    mt2.1 $e |- ps $.
    mt2.2 $e |- ( ph -> -. ps ) $.
    $( A rule similar to modus tollens.  (The proof was shortened by Wolf
       Lammen, 10-Sep-2013.) $)
    mt2 $p |- -. ph $=
      ( a1i pm2.65i ) ABBACEDF $.
      $( [10-Sep-2013] $) $( [19-Aug-1993] $)
  $}

  ${
    mt3.1 $e |- -. ps $.
    mt3.2 $e |- ( -. ph -> ps ) $.
    $( A rule similar to modus tollens.  (The proof was shortened by Wolf
       Lammen, 11-Sep-2013.) $)
    mt3 $p |- ph $=
      ( wn mto notnotri ) AAEBCDFG $.
      $( [11-Sep-2013] $) $( [18-May-1994] $)
  $}

  $( Peirce's axiom.  This odd-looking theorem is the "difference" between an
     intuitionistic system of propositional calculus and a classical system and
     is not accepted by intuitionists.  When Peirce's axiom is added to an
     intuitionistic system, the system becomes equivalent to our classical
     system ~ ax-1 through ~ ax-3 .  A curious fact about this theorem is that
     it requires ~ ax-3 for its proof even though the result has no negation
     connectives in it.  (The proof was shortened by Wolf Lammen,
     9-Oct-2012.) $)
  peirce $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( wi simplim id ja ) ABCAAABDAEF $.
    $( [9-Oct-2012] $) $( [5-Aug-1993] $)

  $( The Linearity Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  For a version not using ~ ax-3 , see ~ loolinALT .
     (Contributed by O'Cat, 12-Aug-2004.)  (The proof was shortened by Wolf
     Lammen, 2-Nov-2012.) $)
  loolin $p |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) $=
    ( wi pm2.521 id ja ) ABCBACZGABDGEF $.
    $( [2-Nov-2012] $) $( [12-Aug-2004] $)

  $( The Inversion Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  Using ~ dfor2 , we can see that this essentially
     expresses "disjunction commutes."  Theorem *2.69 of [WhiteheadRussell]
     p. 108. $)
  looinv $p |- ( ( ( ph -> ps ) -> ps ) -> ( ( ps -> ph ) -> ph ) ) $=
    ( wi imim1 peirce syl6 ) ABCZBCBACGACAGBADABEF $.
    $( [12-Aug-2004] $)

  $( Obsolete version of ~ bijust as of 18-Nov-2013. $)
  bijustOLD $p |- -. ( ( ph -> ph ) -> -. ( ph -> ph ) ) $=
    ( wi wn id pm2.01 mt2 ) AABZGCBGADGEF $.
    $( [11-May-1999] $)

  $( Theorem used to justify definition of biconditional ~ df-bi .  (The proof
     was shortened by Josh Purinton, 29-Dec-2000.) $)
  bijust $p |- -. ( ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) )
                      -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
               -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) )
                      -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) $=
    ( wi wn id pm2.01 mt2 ) ABCBACDCDZHCZIDCIHEIFG $.
    $( [18-Nov-2013] $) $( [11-May-1999] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical equivalence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the biconditional connective. $)
  $c <-> $. $( Double arrow (read:  'if and only if' or
               'is logically equivalent to') $)

  $( Extend our wff definition to include the biconditional connective. $)
  wb $a wff ( ph <-> ps ) $.

  $( This is our first definition, which introduces and defines the
     biconditional connective ` <-> ` .  We define a wff of the form
     ` ( ph <-> ps ) ` as an abbreviation for
     ` -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ` .

     Unlike most traditional developments, we have chosen not to have a
     separate symbol such as "Df." to mean "is defined as."  Instead, we will
     later use the biconditional connective for this purpose ( ~ df-or is its
     first use), as it allows us to use logic to manipulate definitions
     directly.  This greatly simplifies many proofs since it eliminates the
     need for a separate mechanism for introducing and eliminating
     definitions.  Of course, we cannot use this mechanism to define the
     biconditional itself, since it hasn't been introduced yet.  Instead, we
     use a more general form of definition, described as follows.

     In its most general form, a definition is simply an assertion that
     introduces a new symbol (or a new combination of existing symbols, as in
     ~ df-3an ) that is eliminable and does not strengthen the existing
     language.  The latter requirement means that the set of provable
     statements not containing the new symbol (or new combination) should
     remain exactly the same after the definition is introduced.  Our
     definition of the biconditional may look unusual compared to most
     definitions, but it strictly satisfies these requirements.

     The justification for our definition is that if we mechanically replace
     ` ( ph <-> ps ) ` (the definiendum i.e. the thing being defined) with
     ` -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ` (the definiens i.e. the
     defining expression) in the definition, the definition becomes the
     previously proved theorem ~ bijust .  It is impossible to use ~ df-bi to
     prove any statement expressed in the original language that can't be
     proved from the original axioms, because if we simply replace each
     instance of ~ df-bi in the proof with the corresponding ~ bijust instance,
     we will end up with a proof from the original axioms.

     Note that from Metamath's point of view, a definition is just another
     axiom - i.e. an assertion we claim to be true - but from our high level
     point of view, we are are not strengthening the language.  To indicate
     this fact, we prefix definition labels with "df-" instead of "ax-".  (This
     prefixing is an informal convention that means nothing to the Metamath
     proof verifier; it is just for human readability.)

     See ~ dfbi1 , ~ dfbi2 , and ~ dfbi3 for theorems suggesting typical
     textbook definitions of ` <-> ` , showing that our definition has the
     properties we expect.  Theorem ~ dfbi shows this definition rewritten in
     an abbreviated form after conjunction is introduced, for easier
     understanding. $)
  df-bi $a |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
        -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $.

  $( Property of the biconditional connective. $)
  bi1 $p |- ( ( ph <-> ps ) -> ( ph -> ps ) ) $=
    ( wb wi wn df-bi simplim ax-mp syl ) ABCZABDZBADEZDEZKJMDZMJDEZDENABFNOGHKL
    GI $.
    $( [11-May-1999] $)

  $( Property of the biconditional connective. $)
  bi3 $p |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) $=
    ( wi wb wn df-bi simprim ax-mp expi ) ABCZBACZABDZLJKECEZCZMLCZECEOABFNOGHI
    $.
    $( [11-May-1999] $)

  ${
    impbii.1 $e |- ( ph -> ps ) $.
    impbii.2 $e |- ( ps -> ph ) $.
    $( Infer an equivalence from an implication and its converse. $)
    impbii $p |- ( ph <-> ps ) $=
      ( wi wb bi3 mp2 ) ABEBAEABFCDABGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    impbidd.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    impbidd.2 $e |- ( ph -> ( ps -> ( th -> ch ) ) ) $.
    $( Deduce an equivalence from two implications.  (Contributed by Rodolfo
       Medina, 12-Oct-2010.) $)
    impbidd $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi wb bi3 syl6c ) ABCDGDCGCDHEFCDIJ $.
      $( [12-Oct-2010] $)
  $}

  ${
    impbid21d.1 $e |- ( ps -> ( ch -> th ) ) $.
    impbid21d.2 $e |- ( ph -> ( th -> ch ) ) $.
    $( Deduce an equivalence from two implications.  (Contributed by Wolf
       Lammen, 12-May-2013.) $)
    impbid21d $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi a1i a1d impbidd ) ABCDBCDGGAEHADCGBFIJ $.
      $( [12-May-2013] $)
  $}

  ${
    impbid.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbid.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Deduce an equivalence from two implications.  (Dependency on df-an
       removed by Wolf Lammen, 3-Nov-2012.) $)
    impbid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb impbid21d pm2.43i ) ABCFAABCDEGH $.
      $( [3-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  $( Relate the biconditional connective to primitive connectives.  See
     ~ dfbi1gb for an unusual version proved directly from axioms. $)
  dfbi1 $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wb wi wn df-bi simplim ax-mp bi3 impi impbii ) ABCZABDZBADZEDEZLODZOLDEZD
    EPABFPQGHMNLABIJK $.
    $( [11-Nov-2012] $) $( [5-Aug-1993] $)

  $( This proof of ~ dfbi1 , discovered by Gregory Bush on 8-Mar-2004, has
     several curious properties.  First, it has only 17 steps directly from the
     axioms and ~ df-bi , compared to over 800 steps were the proof of ~ dfbi1
     expanded into axioms.  Second, step 2 demands only the property of "true";
     any axiom (or theorem) could be used.  It might be thought, therefore,
     that it is in some sense redundant, but in fact no proof is shorter than
     this (measured by number of steps).  Third, it illustrates how
     intermediate steps can "blow up" in size even in short proofs.  Fourth,
     the compressed proof is only 182 bytes (or 17 bytes in D-proof notation),
     but the generated web page is over 200kB with intermediate steps that are
     essentially incomprehensible to humans (other than Gregory Bush).  If
     there were an obfuscated code contest for proofs, this would be a
     contender. $)
  dfbi1gb $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wch wth wb wi wn df-bi ax-1 ax-mp ax-3 ax-2 ) ABEZABFBAFGFGZFNMFGFGZMNEZA
    BHCDCFFZOPFZCDIRGZQGZFZQRFSPOFZSFZFZUASUBISUCTFZFZUDUAFUEUFTGZUCGZFZUEUHUIM
    NHUHUGIJTUCKJUESIJSUCTLJJRQKJJJ $.
    $( [10-Mar-2004] $)

  ${
    biimpi.1 $e |- ( ph <-> ps ) $.
    $( Infer an implication from a logical equivalence. $)
    biimpi $p |- ( ph -> ps ) $=
      ( wb wi bi1 ax-mp ) ABDABECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbi.1 $e |- ( ph <-> ps ) $.
    sylbi.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       Useful for substituting an antecedent with a definition. $)
    sylbi $p |- ( ph -> ch ) $=
      ( biimpi syl ) ABCABDFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylib.1 $e |- ( ph -> ps ) $.
    sylib.2 $e |- ( ps <-> ch ) $.
    $( A mixed syllogism inference from an implication and a biconditional. $)
    sylib $p |- ( ph -> ch ) $=
      ( biimpi syl ) ABCDBCEFG $.
      $( [5-Aug-1993] $)
  $}

  $( Property of the biconditional connective.  (The proof was shortened by
     Wolf Lammen, 11-Nov-2012.) $)
  bi2 $p |- ( ( ph <-> ps ) -> ( ps -> ph ) ) $=
    ( wb wi wn dfbi1 simprim sylbi ) ABCABDZBADZEDEJABFIJGH $.
    $( [11-Nov-2012] $) $( [11-May-1999] $)

  $( Commutative law for equivalence.  (Contributed by Wolf Lammen,
     10-Nov-2012.) $)
  bicom1 $p |- ( ( ph <-> ps ) -> ( ps <-> ph ) ) $=
    ( wb bi2 bi1 impbid ) ABCBAABDABEF $.
    $( [10-Nov-2012] $)

  $( Commutative law for equivalence.  Theorem *4.21 of [WhiteheadRussell]
     p. 117. $)
  bicom $p |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) $=
    ( wb bicom1 impbii ) ABCBACABDBADE $.
    $( [11-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    bicomd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Commute two sides of a biconditional in a deduction. $)
    bicomd $p |- ( ph -> ( ch <-> ps ) ) $=
      ( wb bicom sylib ) ABCECBEDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bicomi.1 $e |- ( ph <-> ps ) $.
    $( Inference from commutative law for logical equivalence. $)
    bicomi $p |- ( ps <-> ph ) $=
      ( wb bicom1 ax-mp ) ABDBADCABEF $.
      $( [16-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    impbid1.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbid1.2 $e |- ( ch -> ps ) $.
    $( Infer an equivalence from two implications. $)
    impbid1 $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wi a1i impbid ) ABCDCBFAEGH $.
      $( [6-Mar-2007] $)
  $}

  ${
    impbid2.1 $e |- ( ps -> ch ) $.
    impbid2.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Infer an equivalence from two implications.  (The proof was shortened by
       Wolf Lammen, 27-Sep-2013.) $)
    impbid2 $p |- ( ph -> ( ps <-> ch ) ) $=
      ( impbid1 bicomd ) ACBACBEDFG $.
      $( [27-Sep-2013] $) $( [6-Mar-2007] $)
  $}

  ${
    impcon4bid.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impcon4bid.2 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( A variation on ~ impbid with contraposition.  (Contributed by Jeff
       Hankins, 3-Jul-2009.) $)
    impcon4bid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( con4d impbid ) ABCDABCEFG $.
      $( [3-Jul-2009] $)
  $}

  ${
    biimpri.1 $e |- ( ph <-> ps ) $.
    $( Infer a converse implication from a logical equivalence.  (The proof was
       shortened by Wolf Lammen, 16-Sep-2013.) $)
    biimpri $p |- ( ps -> ph ) $=
      ( bicomi biimpi ) BAABCDE $.
      $( [16-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    biimpd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce an implication from a logical equivalence. $)
    biimpd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb wi bi1 syl ) ABCEBCFDBCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbi.min $e |- ph $.
    mpbi.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbi $p |- ps $=
      ( biimpi ax-mp ) ABCABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbir.min $e |- ps $.
    mpbir.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbir $p |- ph $=
      ( biimpri ax-mp ) BACABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbid.min $e |- ( ph -> ps ) $.
    mpbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbid $p |- ( ph -> ch ) $=
      ( biimpd mpd ) ABCDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbii.min $e |- ps $.
    mpbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens.  (The
       proof was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mpbii $p |- ( ph -> ch ) $=
      ( a1i mpbid ) ABCBADFEG $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    sylibr.1 $e |- ( ph -> ps ) $.
    sylibr.2 $e |- ( ch <-> ps ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       Useful for substituting a consequent with a definition. $)
    sylibr $p |- ( ph -> ch ) $=
      ( biimpri syl ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbir.1 $e |- ( ps <-> ph ) $.
    sylbir.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication. $)
    sylbir $p |- ( ph -> ch ) $=
      ( biimpri syl ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylibd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( A syllogism deduction. $)
    sylibd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDEACDFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylbid.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbid $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDABCEGFH $.
      $( [3-Aug-1994] $)
  $}

  ${
    mpbidi.min $e |- ( th -> ( ph -> ps ) ) $.
    mpbidi.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbidi $p |- ( th -> ( ph -> ch ) ) $=
      ( biimpd sylcom ) DABCEABCFGH $.
      $( [9-Aug-1994] $)
  $}

  ${
    syl5bi.1 $e |- ( ph <-> ps ) $.
    syl5bi.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded antecedent with a
       definition. $)
    syl5bi $p |- ( ch -> ( ph -> th ) ) $=
      ( biimpi syl5 ) ABCDABEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bir.1 $e |- ( ps <-> ph ) $.
    syl5bir.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl5bir $p |- ( ch -> ( ph -> th ) ) $=
      ( biimpri syl5 ) ABCDBAEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5ib.1 $e |- ( ph -> ps ) $.
    syl5ib.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A mixed syllogism inference. $)
    syl5ib $p |- ( ch -> ( ph -> th ) ) $=
      ( biimpd syl5 ) ABCDECBDFGH $.
      $( [5-Aug-1993] $)

    $( A mixed syllogism inference. $)
    syl5ibcom $p |- ( ph -> ( ch -> th ) ) $=
      ( syl5ib com12 ) CADABCDEFGH $.
      $( [19-Jun-2007] $)
  $}

  ${
    syl5ibr.1 $e |- ( ph -> th ) $.
    syl5ibr.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A mixed syllogism inference. $)
    syl5ibr $p |- ( ch -> ( ph -> ps ) ) $=
      ( bicomd syl5ib ) ADCBECBDFGH $.
      $( [22-Sep-2013] $) $( [3-Apr-1994] $)

    $( A mixed syllogism inference. $)
    syl5ibrcom $p |- ( ph -> ( ch -> ps ) ) $=
      ( syl5ibr com12 ) CABABCDEFGH $.
      $( [20-Jun-2007] $)
  $}

  ${
    biimprd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce a converse implication from a logical equivalence.  (The proof
       was shortened by Wolf Lammen, 22-Sep-2013.) $)
    biimprd $p |- ( ph -> ( ch -> ps ) ) $=
      ( id syl5ibr ) CBACCEDF $.
      $( [22-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    biimpcd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce a commuted implication from a logical equivalence.  (The proof
       was shortened by Wolf Lammen, 22-Sep-2013.) $)
    biimpcd $p |- ( ps -> ( ph -> ch ) ) $=
      ( id syl5ibcom ) BBACBEDF $.
      $( [22-Sep-2013] $) $( [3-May-1994] $)

    $( Deduce a converse commuted implication from a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 20-Dec-2013.) $)
    biimprcd $p |- ( ch -> ( ph -> ps ) ) $=
      ( id syl5ibrcom ) CBACCEDF $.
      $( [20-Dec-2013] $) $( [3-May-1994] $)

    $( Obsolete proof of ~ biimprcd as of 20-Dec-2013. $)
    biimprcdOLD $p |- ( ch -> ( ph -> ps ) ) $=
      ( biimprd com12 ) ACBABCDEF $.
      $( [3-May-1994] $)
  $}

  ${
    syl6ib.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ib.2 $e |- ( ch <-> th ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl6ib $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpi syl6 ) ABCDECDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6ibr.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ibr.2 $e |- ( th <-> ch ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded consequent with a
       definition. $)
    syl6ibr $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpri syl6 ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}


  ${
    syl6bi.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bi.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bi $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syl6 ) ABCDABCEGFH $.
      $( [2-Jan-1994] $)
  $}

  ${
    syl6bir.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    syl6bir.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bir $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syl6 ) ABCDACBEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    syl7bi.1 $e |- ( ph <-> ps ) $.
    syl7bi.2 $e |- ( ch -> ( th -> ( ps -> ta ) ) ) $.
    $( A mixed syllogism inference from a doubly nested implication and a
       biconditional. $)
    syl7bi $p |- ( ch -> ( th -> ( ph -> ta ) ) ) $=
      ( biimpi syl7 ) ABCDEABFHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl8ib.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8ib.2 $e |- ( th <-> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise. $)
    syl8ib $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimpi syl8 ) ABCDEFDEGHI $.
      $( [1-Aug-1994] $)
  $}

  ${
    mpbird.min $e |- ( ph -> ch ) $.
    mpbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbird $p |- ( ph -> ps ) $=
      ( biimprd mpd ) ACBDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbiri.min $e |- ch $.
    mpbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens.  (The
       proof was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mpbiri $p |- ( ph -> ps ) $=
      ( a1i mpbird ) ABCCADFEG $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    sylibrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibrd.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( A syllogism deduction. $)
    sylibrd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDEADCFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbird.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    sylbird.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbird $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDACBEGFH $.
      $( [3-Aug-1994] $)
  $}

  $( Principle of identity for logical equivalence.  Theorem *4.2 of
     [WhiteheadRussell] p. 117. $)
  biid $p |- ( ph <-> ph ) $=
    ( id impbii ) AAABZDC $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  biidd $p |- ( ph -> ( ps <-> ps ) ) $=
    ( wb biid a1i ) BBCABDE $.
    $( [25-Nov-1995] $)

  $( Two propositions are equivalent if they are both true.  Closed form of
     ~ 2th .  Equivalent to a ~ bi1 -like version of the xor-connective.  This
     theorem stays true, no matter how you permute its operands.  This is
     evident from its sharper version
     ` ( ph <-> ( ps <-> ( ph <-> ps ) ) ) ` .  (Contributed by Wolf Lammen,
     12-May-2013.) $)
  pm5.1im $p |- ( ph -> ( ps -> ( ph <-> ps ) ) ) $=
    ( ax-1 impbid21d ) ABABBACABCD $.
    $( [12-May-2013] $)

  ${
    2th.1 $e |- ph $.
    2th.2 $e |- ps $.
    $( Two truths are equivalent. $)
    2th $p |- ( ph <-> ps ) $=
      ( a1i impbii ) ABBADEABCEF $.
      $( [18-Aug-1993] $)
  $}

  ${
    2thd.1 $e |- ( ph -> ps ) $.
    2thd.2 $e |- ( ph -> ch ) $.
    $( Two truths are equivalent (deduction rule). $)
    2thd $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb pm5.1im sylc ) ABCBCFDEBCGH $.
      $( [29-Jan-2013] $) $( [3-Jun-2012] $)
  $}

  ${
    ibi.1 $e |- ( ph -> ( ph <-> ps ) ) $.
    $( Inference that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibi $p |- ( ph -> ps ) $=
      ( biimpd pm2.43i ) ABAABCDE $.
      $( [17-Oct-2003] $)
  $}

  ${
    ibir.1 $e |- ( ph -> ( ps <-> ph ) ) $.
    $( Inference that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibir $p |- ( ph -> ps ) $=
      ( bicomd ibi ) ABABACDE $.
      $( [22-Jul-2004] $)
  $}

  ${
    ibd.1 $e |- ( ph -> ( ps -> ( ps <-> ch ) ) ) $.
    $( Deduction that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb bi1 syli ) BABCECDBCFG $.
      $( [26-Jun-2004] $)
  $}

  $( Distribution of implication over biconditional.  Theorem *5.74 of
     [WhiteheadRussell] p. 126.  (The proof was shortened by Wolf Lammen,
     11-Apr-2013.) $)
  pm5.74 $p |- ( ( ph -> ( ps <-> ch ) ) <->
               ( ( ph -> ps ) <-> ( ph -> ch ) ) ) $=
    ( wb wi bi1 imim3i bi2 impbid pm2.86d impbidd impbii ) ABCDZEZABEZACEZDZNOP
    MBCABCFGMCBABCHGIQABCQABCOPFJQACBOPHJKL $.
    $( [11-Apr-2013] $) $( [1-Aug-1994] $)

  ${
    pm5.74i.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Distribution of implication over biconditional (inference rule). $)
    pm5.74i $p |- ( ( ph -> ps ) <-> ( ph -> ch ) ) $=
      ( wb wi pm5.74 mpbi ) ABCEFABFACFEDABCGH $.
      $( [1-Aug-1994] $)
  $}

  ${
    pm5.74ri.1 $e |- ( ( ph -> ps ) <-> ( ph -> ch ) ) $.
    $( Distribution of implication over biconditional (reverse inference
       rule). $)
    pm5.74ri $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb wi pm5.74 mpbir ) ABCEFABFACFEDABCGH $.
      $( [1-Aug-1994] $)
  $}

  ${
    pm5.74d.1 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74d $p |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $=
      ( wb wi pm5.74 sylib ) ABCDFGBCGBDGFEBCDHI $.
      $( [21-Mar-1996] $)
  $}

  ${
    pm5.74rd.1 $e |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74rd $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi wb pm5.74 sylibr ) ABCFBDFGBCDGFEBCDHI $.
      $( [19-Mar-1997] $)
  $}

  ${
    bitri.1 $e |- ( ph <-> ps ) $.
    bitri.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence.  (The proof
       was shortened by Wolf Lammen, 13-Oct-2012.) $)
    bitri $p |- ( ph <-> ch ) $=
      ( biimpi sylib biimpri sylibr impbii ) ACABCABDFEGCBABCEHDIJ $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    bitr2i.1 $e |- ( ph <-> ps ) $.
    bitr2i.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr2i $p |- ( ch <-> ph ) $=
      ( bitri bicomi ) ACABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr3i.1 $e |- ( ps <-> ph ) $.
    bitr3i.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr3i $p |- ( ph <-> ch ) $=
      ( bicomi bitri ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4i.1 $e |- ( ph <-> ps ) $.
    bitr4i.2 $e |- ( ch <-> ps ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr4i $p |- ( ph <-> ch ) $=
      ( bicomi bitri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitrd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitrd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( Deduction form of ~ bitri .  (The proof was shortened by Wolf Lammen,
       14-Apr-2013.) $)
    bitrd $p |- ( ph -> ( ps <-> th ) ) $=
      ( wi pm5.74i bitri pm5.74ri ) ABDABGACGADGABCEHACDFHIJ $.
      $( [14-Apr-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    bitr2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr2d.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( Deduction form of ~ bitr2i . $)
    bitr2d $p |- ( ph -> ( th <-> ps ) ) $=
      ( bitrd bicomd ) ABDABCDEFGH $.
      $( [9-Jun-2004] $)
  $}

  ${
    bitr3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    $( Deduction form of ~ bitr3i . $)
    bitr3d $p |- ( ph -> ( ch <-> th ) ) $=
      ( bicomd bitrd ) ACBDABCEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr4d.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( Deduction form of ~ bitr4i . $)
    bitr4d $p |- ( ph -> ( ps <-> th ) ) $=
      ( bicomd bitrd ) ABCDEADCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bb.1 $e |- ( ph <-> ps ) $.
    syl5bb.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5bb $p |- ( ch -> ( ph <-> th ) ) $=
      ( wb a1i bitrd ) CABDABGCEHFI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5rbb.1 $e |- ( ph <-> ps ) $.
    syl5rbb.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5rbb $p |- ( ch -> ( th <-> ph ) ) $=
      ( syl5bb bicomd ) CADABCDEFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bbr.1 $e |- ( ps <-> ph ) $.
    syl5bbr.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5bbr $p |- ( ch -> ( ph <-> th ) ) $=
      ( bicomi syl5bb ) ABCDBAEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5rbbr.1 $e |- ( ps <-> ph ) $.
    syl5rbbr.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5rbbr $p |- ( ch -> ( th <-> ph ) ) $=
      ( bicomi syl5rbb ) ABCDBAEGFH $.
      $( [25-Nov-1994] $)
  $}

  ${
    syl6bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bb.2 $e |- ( ch <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6bb $p |- ( ph -> ( ps <-> th ) ) $=
      ( wb a1i bitrd ) ABCDECDGAFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6rbb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6rbb.2 $e |- ( ch <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6rbb $p |- ( ph -> ( th <-> ps ) ) $=
      ( syl6bb bicomd ) ABDABCDEFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bbr.2 $e |- ( th <-> ch ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6bbr $p |- ( ph -> ( ps <-> th ) ) $=
      ( bicomi syl6bb ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6rbbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6rbbr.2 $e |- ( th <-> ch ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6rbbr $p |- ( ph -> ( th <-> ps ) ) $=
      ( bicomi syl6rbb ) ABCDEDCFGH $.
      $( [25-Nov-1994] $)
  $}

  ${
    3imtr3.1 $e |- ( ph -> ps ) $.
    3imtr3.2 $e |- ( ph <-> ch ) $.
    3imtr3.3 $e |- ( ps <-> th ) $.
    $( A mixed syllogism inference, useful for removing a definition from both
       sides of an implication. $)
    3imtr3i $p |- ( ch -> th ) $=
      ( sylbir sylib ) CBDCABFEHGI $.
      $( [10-Aug-1994] $)
  $}

  ${
    3imtr4.1 $e |- ( ph -> ps ) $.
    3imtr4.2 $e |- ( ch <-> ph ) $.
    3imtr4.3 $e |- ( th <-> ps ) $.
    $( A mixed syllogism inference, useful for applying a definition to both
       sides of an implication. $)
    3imtr4i $p |- ( ch -> th ) $=
      ( sylbi sylibr ) CBDCABFEHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    3imtr3d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    3imtr3d.3 $e |- ( ph -> ( ch <-> ta ) ) $.
    $( More general version of ~ 3imtr3i .  Useful for converting conditional
       definitions in a formula. $)
    3imtr3d $p |- ( ph -> ( th -> ta ) ) $=
      ( sylibd sylbird ) ADBEGABCEFHIJ $.
      $( [8-Apr-1996] $)
  $}

  ${
    3imtr4d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr4d.2 $e |- ( ph -> ( th <-> ps ) ) $.
    3imtr4d.3 $e |- ( ph -> ( ta <-> ch ) ) $.
    $( More general version of ~ 3imtr4i .  Useful for converting conditional
       definitions in a formula. $)
    3imtr4d $p |- ( ph -> ( th -> ta ) ) $=
      ( sylibrd sylbid ) ADBEGABCEFHIJ $.
      $( [26-Oct-1995] $)
  $}

  ${
    3imtr3g.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3g.2 $e |- ( ps <-> th ) $.
    3imtr3g.3 $e |- ( ch <-> ta ) $.
    $( More general version of ~ 3imtr3i .  Useful for converting definitions
       in a formula.  (The proof was shortened by Wolf Lammen, 20-Dec-2013.) $)
    3imtr3g $p |- ( ph -> ( th -> ta ) ) $=
      ( syl5bir syl6ib ) ADCEDBACGFIHJ $.
      $( [20-Dec-2013] $) $( [20-May-1996] $)
  $}

  ${
    3imtr4g.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr4g.2 $e |- ( th <-> ps ) $.
    3imtr4g.3 $e |- ( ta <-> ch ) $.
    $( More general version of ~ 3imtr4i .  Useful for converting definitions
       in a formula.  (The proof was shortened by Wolf Lammen, 20-Dec-2013.) $)
    3imtr4g $p |- ( ph -> ( th -> ta ) ) $=
      ( syl5bi syl6ibr ) ADCEDBACGFIHJ $.
      $( [20-Dec-2013] $) $( [20-May-1996] $)

    $( Obsolete proof of ~ 3imtr4g as of 20-Dec-2013. $)
    3imtr4gOLD $p |- ( ph -> ( th -> ta ) ) $=
      ( bicomi 3imtr3g ) ABCDEFDBGIECHIJ $.
      $( [20-May-1996] $)
  $}

  ${
    3bitri.1 $e |- ( ph <-> ps ) $.
    3bitri.2 $e |- ( ps <-> ch ) $.
    3bitri.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitri $p |- ( ph <-> th ) $=
      ( bitri ) ABDEBCDFGHH $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitrri $p |- ( th <-> ph ) $=
      ( bitr2i bitr3i ) DCAGABCEFHI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr2i.1 $e |- ( ph <-> ps ) $.
    3bitr2i.2 $e |- ( ch <-> ps ) $.
    3bitr2i.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2i $p |- ( ph <-> th ) $=
      ( bitr4i bitri ) ACDABCEFHGI $.
      $( [4-Aug-2006] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2ri $p |- ( th <-> ph ) $=
      ( bitr4i bitr2i ) ACDABCEFHGI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3i.1 $e |- ( ph <-> ps ) $.
    3bitr3i.2 $e |- ( ph <-> ch ) $.
    3bitr3i.3 $e |- ( ps <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3i $p |- ( ch <-> th ) $=
      ( bitr3i bitri ) CBDCABFEHGI $.
      $( [19-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3ri $p |- ( th <-> ch ) $=
      ( bitr3i ) DBCGBACEFHH $.
      $( [5-Aug-1993] $)
  $}

  ${
    3bitr4i.1 $e |- ( ph <-> ps ) $.
    3bitr4i.2 $e |- ( ch <-> ph ) $.
    3bitr4i.3 $e |- ( th <-> ps ) $.
    $( A chained inference from transitive law for logical equivalence.  This
       inference is frequently used to apply a definition to both sides of a
       logical equivalence. $)
    3bitr4i $p |- ( ch <-> th ) $=
      ( bitr4i bitri ) CADFABDEGHI $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr4ri $p |- ( th <-> ch ) $=
      ( bitr4i bitr2i ) CADFABDEGHI $.
      $( [2-Sep-1995] $)
  $}

  ${
    3bitrd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitrd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    3bitrd.3 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction from transitivity of biconditional. $)
    3bitrd $p |- ( ph -> ( ps <-> ta ) ) $=
      ( bitrd ) ABDEABCDFGIHI $.
      $( [13-Aug-1999] $)

    $( Deduction from transitivity of biconditional. $)
    3bitrrd $p |- ( ph -> ( ta <-> ps ) ) $=
      ( bitr2d bitr3d ) ADEBHABCDFGIJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr2d.2 $e |- ( ph -> ( th <-> ch ) ) $.
    3bitr2d.3 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction from transitivity of biconditional. $)
    3bitr2d $p |- ( ph -> ( ps <-> ta ) ) $=
      ( bitr4d bitrd ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr2rd $p |- ( ph -> ( ta <-> ps ) ) $=
      ( bitr4d bitr2d ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    3bitr3d.3 $e |- ( ph -> ( ch <-> ta ) ) $.
    $( Deduction from transitivity of biconditional.  Useful for converting
       conditional definitions in a formula. $)
    3bitr3d $p |- ( ph -> ( th <-> ta ) ) $=
      ( bitr3d bitrd ) ADCEABDCGFIHJ $.
      $( [24-Apr-1996] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr3rd $p |- ( ph -> ( ta <-> th ) ) $=
      ( bitr3d ) ACEDHABCDFGII $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr4d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr4d.2 $e |- ( ph -> ( th <-> ps ) ) $.
    3bitr4d.3 $e |- ( ph -> ( ta <-> ch ) ) $.
    $( Deduction from transitivity of biconditional.  Useful for converting
       conditional definitions in a formula. $)
    3bitr4d $p |- ( ph -> ( th <-> ta ) ) $=
      ( bitr4d bitrd ) ADBEGABCEFHIJ $.
      $( [18-Oct-1995] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr4rd $p |- ( ph -> ( ta <-> th ) ) $=
      ( bitr4d ) AEBDAECBHFIGI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3g.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr3g.2 $e |- ( ps <-> th ) $.
    3bitr3g.3 $e |- ( ch <-> ta ) $.
    $( More general version of ~ 3bitr3i .  Useful for converting definitions
       in a formula. $)
    3bitr3g $p |- ( ph -> ( th <-> ta ) ) $=
      ( syl5bbr syl6bb ) ADCEDBACGFIHJ $.
      $( [4-Jun-1995] $)
  $}

  ${
    3bitr4g.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr4g.2 $e |- ( th <-> ps ) $.
    3bitr4g.3 $e |- ( ta <-> ch ) $.
    $( More general version of ~ 3bitr4i .  Useful for converting definitions
       in a formula. $)
    3bitr4g $p |- ( ph -> ( th <-> ta ) ) $=
      ( syl5bb syl6bbr ) ADCEDBACGFIHJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    bi3ant.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Construct a bi-conditional in antecedent position.  (Contributed by Wolf
       Lammen, 14-May-2013.) $)
    bi3ant $p |- ( ( ( th -> ta ) -> ph ) -> ( ( ( ta -> th ) -> ps ) ->
                                                ( ( th <-> ta ) -> ch ) ) ) $=
      ( wi wb bi1 imim1i bi2 imim3i syl2im ) DEGZAGDEHZAGEDGZBGOBGOCGONADEIJOPB
      DEKJABCOFLM $.
      $( [14-May-2013] $)
  $}

  $( Express symmetries of theorems in terms of biconditionals.  (Contributed
     by Wolf Lammen, 14-May-2013.) $)
  bisym $p |- ( ( ( ph -> ps ) -> ( ch -> th ) ) -> ( ( ( ps -> ph )
      -> ( th -> ch ) ) -> ( ( ph <-> ps ) -> ( ch <-> th ) ) ) ) $=
    ( wi wb bi3 bi3ant ) CDEDCECDFABCDGH $.
    $( [14-May-2013] $)

  $( Double negation.  Theorem *4.13 of [WhiteheadRussell] p. 117. $)
  notnot $p |- ( ph <-> -. -. ph ) $=
    ( wn notnot1 notnot2 impbii ) AABBACADE $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Theorem *4.1 of [WhiteheadRussell] p. 116. $)
  con34b $p |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) $=
    ( wi wn con3 ax-3 impbii ) ABCBDADCABEBAFG $.
    $( [5-Aug-1993] $)

  ${
    con4bid.1 $e |- ( ph -> ( -. ps <-> -. ch ) ) $.
    $( A contraposition deduction. $)
    con4bid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wn biimprd con4d biimpd impcon4bid ) ABCACBABEZCEZDFGAJKDHI $.
      $( [17-Sep-2013] $) $( [21-May-1994] $)
  $}

  ${
    notbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction negating both sides of a logical equivalence. $)
    notbid $p |- ( ph -> ( -. ps <-> -. ch ) ) $=
      ( wn notnot 3bitr3g con4bid ) ABEZCEZABCIEJEDBFCFGH $.
      $( [17-Sep-2013] $) $( [21-May-1994] $)
  $}

  $( Contraposition.  Theorem *4.11 of [WhiteheadRussell] p. 117.  (The proof
     was shortened by Wolf Lammen, 12-Jun-2013.) $)
  notbi $p |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) $=
    ( wb wn id notbid con4bid impbii ) ABCZADBDCZIABIEFJABJEGH $.
    $( [12-Jun-2013] $) $( [21-May-1994] $)

  ${
    notbii.1 $e |- ( ph <-> ps ) $.
    $( Negate both sides of a logical equivalence.  (The proof was shortened by
       Wolf Lammen, 19-May-2013.) $)
    notbii $p |- ( -. ph <-> -. ps ) $=
      ( wb wn notbi mpbi ) ABDAEBEDCABFG $.
      $( [19-May-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    con4bii.1 $e |- ( -. ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con4bii $p |- ( ph <-> ps ) $=
      ( wb wn notbi mpbir ) ABDAEBEDCABFG $.
      $( [21-May-1994] $)
  $}

  ${
    mtbi.1 $e |- -. ph $.
    mtbi.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens.  (The proof
       was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mtbi $p |- -. ps $=
      ( biimpri mto ) BACABDEF $.
      $( [25-Oct-2012] $) $( [15-Nov-1994] $)
  $}

  ${
    mtbir.1 $e |- -. ps $.
    mtbir.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens.  (The proof
       was shortened by Wolf Lammen, 14-Oct-2012.) $)
    mtbir $p |- -. ph $=
      ( bicomi mtbi ) BACABDEF $.
      $( [13-Oct-2012] $) $( [15-Nov-1994] $)
  $}

  ${
    mtbid.min $e |- ( ph -> -. ps ) $.
    mtbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, similar to modus tollens. $)
    mtbid $p |- ( ph -> -. ch ) $=
      ( biimprd mtod ) ACBDABCEFG $.
      $( [26-Nov-1995] $)
  $}

  ${
    mtbird.min $e |- ( ph -> -. ch ) $.
    mtbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, similar to modus tollens. $)
    mtbird $p |- ( ph -> -. ps ) $=
      ( biimpd mtod ) ABCDABCEFG $.
      $( [10-May-1994] $)
  $}

  ${
    mtbii.min $e |- -. ps $.
    mtbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a biconditional, similar to modus tollens. $)
    mtbii $p |- ( ph -> -. ch ) $=
      ( biimprd mtoi ) ACBDABCEFG $.
      $( [27-Nov-1995] $)
  $}

  ${
    mtbiri.min $e |- -. ch $.
    mtbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a biconditional, similar to modus tollens. $)
    mtbiri $p |- ( ph -> -. ps ) $=
      ( biimpd mtoi ) ABCDABCEFG $.
      $( [24-Aug-1995] $)
  $}

  ${
    sylnib.1 $e |- ( ph -> -. ps ) $.
    sylnib.2 $e |- ( ps <-> ch ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       (Contributed by Wolf Lammen, 16-Dec-2013.) $)
    sylnib $p |- ( ph -> -. ch ) $=
      ( wb a1i mtbid ) ABCDBCFAEGH $.
      $( [16-Dec-2013] $)
  $}

  ${
    sylnibr.1 $e |- ( ph -> -. ps ) $.
    sylnibr.2 $e |- ( ch <-> ps ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       Useful for substituting an consequent with a definition.  (Contributed
       by Wolf Lammen, 16-Dec-2013.) $)
    sylnibr $p |- ( ph -> -. ch ) $=
      ( bicomi sylnib ) ABCDCBEFG $.
      $( [16-Dec-2013] $)
  $}

  ${
    sylnbi.1 $e |- ( ph <-> ps ) $.
    sylnbi.2 $e |- ( -. ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       Useful for substituting an antecedent with a definition.  (Contributed
       by Wolf Lammen, 16-Dec-2013.) $)
    sylnbi $p |- ( -. ph -> ch ) $=
      ( wn notbii sylbi ) AFBFCABDGEH $.
      $( [16-Dec-2013] $)
  $}

  ${
    sylnbir.1 $e |- ( ps <-> ph ) $.
    sylnbir.2 $e |- ( -. ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       (Contributed by Wolf Lammen, 16-Dec-2013.) $)
    sylnbir $p |- ( -. ph -> ch ) $=
      ( bicomi sylnbi ) ABCBADFEG $.
      $( [16-Dec-2013] $)
  $}

  ${
    xchnxbi.1 $e |- ( -. ph <-> ps ) $.
    xchnxbi.2 $e |- ( ph <-> ch ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchnxbi $p |- ( -. ch <-> ps ) $=
      ( wn notbii bitr3i ) CFAFBACEGDH $.
      $( [27-Sep-2014] $)
  $}

  ${
    xchnxbir.1 $e |- ( -. ph <-> ps ) $.
    xchnxbir.2 $e |- ( ch <-> ph ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchnxbir $p |- ( -. ch <-> ps ) $=
      ( bicomi xchnxbi ) ABCDCAEFG $.
      $( [27-Sep-2014] $)
  $}

  ${
    xchbinx.1 $e |- ( ph <-> -. ps ) $.
    xchbinx.2 $e |- ( ps <-> ch ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchbinx $p |- ( ph <-> -. ch ) $=
      ( wn notbii bitri ) ABFCFDBCEGH $.
      $( [27-Sep-2014] $)
  $}

  ${
    xchbinxr.1 $e |- ( ph <-> -. ps ) $.
    xchbinxr.2 $e |- ( ch <-> ps ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchbinxr $p |- ( ph <-> -. ch ) $=
      ( bicomi xchbinx ) ABCDCBEFG $.
      $( [27-Sep-2014] $)
  $}

  $( The next three rules are useful for building up wff's around a
     definition, in order to make use of the definition. $)

  ${
    bi.a $e |- ( ph <-> ps ) $.
    $( Introduce an antecedent to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 6-Feb-2013.) $)
    imbi2i $p |- ( ( ch -> ph ) <-> ( ch -> ps ) ) $=
      ( wb a1i pm5.74i ) CABABECDFG $.
      $( [6-Feb-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    bibi.a $e |- ( ph <-> ps ) $.
    $( Inference adding a biconditional to the left in an equivalence.  (The
       proof was shortened by Andrew Salmon, 7-May-2011.)  (The proof was
       shortened by Wolf Lammen, 16-May-2013.) $)
    bibi2i $p |- ( ( ch <-> ph ) <-> ( ch <-> ps ) ) $=
      ( wb id syl6bb syl6bbr impbii ) CAEZCBEZJCABJFDGKCBAKFDHI $.
      $( [16-May-2013] $) $( [5-Aug-1993] $)

    $( Inference adding a biconditional to the right in an equivalence. $)
    bibi1i $p |- ( ( ph <-> ch ) <-> ( ps <-> ch ) ) $=
      ( wb bicom bibi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)

    ${
      bibi12.2 $e |- ( ch <-> th ) $.
      $( The equivalence of two equivalences. $)
      bibi12i $p |- ( ( ph <-> ch ) <-> ( ps <-> th ) ) $=
        ( wb bibi2i bibi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
        $( [5-Aug-1993] $)
    $}
  $}

  ${
    imbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding an antecedent to both sides of a logical
       equivalence. $)
    imbi2d $p |- ( ph -> ( ( th -> ps ) <-> ( th -> ch ) ) ) $=
      ( wb a1d pm5.74d ) ADBCABCFDEGH $.
      $( [5-Aug-1993] $)

    $( Deduction adding a consequent to both sides of a logical equivalence.
       (The proof was shortened by Wolf Lammen, 17-Sep-2013.) $)
    imbi1d $p |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) $=
      ( wi biimprd imim1d biimpd impbid ) ABDFCDFACBDABCEGHABCDABCEIHJ $.
      $( [17-Sep-2013] $) $( [5-Aug-1993] $)

    $( Deduction adding a biconditional to the left in an equivalence.  (The
       proof was shortened by Wolf Lammen, 19-May-2013.) $)
    bibi2d $p |- ( ph -> ( ( th <-> ps ) <-> ( th <-> ch ) ) ) $=
      ( wb wi pm5.74i bibi2i pm5.74 3bitr4i pm5.74ri ) ADBFZDCFZADGZABGZFOACGZF
      AMGANGPQOABCEHIADBJADCJKL $.
      $( [19-May-2013] $) $( [5-Aug-1993] $)

    $( Deduction adding a biconditional to the right in an equivalence. $)
    bibi1d $p |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> th ) ) ) $=
      ( wb bibi2d bicom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    imbi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    imbi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       implications. $)
    imbi12d $p |- ( ph -> ( ( ps -> th ) <-> ( ch -> ta ) ) ) $=
      ( wi imbi1d imbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)
    $( Deduction joining two equivalences to form equivalence of
       biconditionals. $)
    bibi12d $p |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> ta ) ) ) $=
      ( wb bibi1d bibi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *4.84 of [WhiteheadRussell] p. 122. $)
  imbi1 $p |- ( ( ph <-> ps ) -> ( ( ph -> ch ) <-> ( ps -> ch ) ) ) $=
    ( wb id imbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.85 of [WhiteheadRussell] p. 122.  (The proof was shortened by
     Wolf Lammen, 19-May-2013.) $)
  imbi2 $p |- ( ( ph <-> ps ) -> ( ( ch -> ph ) <-> ( ch -> ps ) ) ) $=
    ( wb id imbi2d ) ABDZABCGEF $.
    $( [19-May-2013] $) $( [3-Jan-2005] $)

  ${
    imbi1i.1 $e |- ( ph <-> ps ) $.
    $( Introduce a consequent to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 17-Sep-2013.) $)
    imbi1i $p |- ( ( ph -> ch ) <-> ( ps -> ch ) ) $=
      ( wb wi imbi1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [17-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    imbi12i.1 $e |- ( ph <-> ps ) $.
    imbi12i.2 $e |- ( ch <-> th ) $.
    $( Join two logical equivalences to form equivalence of implications. $)
    imbi12i $p |- ( ( ph -> ch ) <-> ( ps -> th ) ) $=
      ( wi imbi2i imbi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *4.86 of [WhiteheadRussell] p. 122. $)
  bibi1 $p |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ) $=
    ( wb id bibi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Contraposition.  Theorem *4.12 of [WhiteheadRussell] p. 117.  (The proof
     was shortened by Wolf Lammen, 3-Jan-2013.) $)
  con2bi $p |- ( ( ph <-> -. ps ) <-> ( ps <-> -. ph ) ) $=
    ( wn wb notbi notnot bibi2i bicom 3bitr2i ) ABCZDACZJCZDKBDBKDAJEBLKBFGKBHI
    $.
    $( [3-Jan-2013] $) $( [15-Apr-1995] $)

  ${
    con2bid.1 $e |- ( ph -> ( ps <-> -. ch ) ) $.
    $( A contraposition deduction. $)
    con2bid $p |- ( ph -> ( ch <-> -. ps ) ) $=
      ( wn wb con2bi sylibr ) ABCEFCBEFDCBGH $.
      $( [15-Apr-1995] $)
  $}

  ${
    con1bid.1 $e |- ( ph -> ( -. ps <-> ch ) ) $.
    $( A contraposition deduction. $)
    con1bid $p |- ( ph -> ( -. ch <-> ps ) ) $=
      ( wn bicomd con2bid ) ABCEACBABECDFGF $.
      $( [9-Oct-1999] $)
  $}

  ${
    con1bii.1 $e |- ( -. ph <-> ps ) $.
    $( A contraposition inference.  (The proof was shortened by Wolf Lammen,
       13-Oct-2012.) $)
    con1bii $p |- ( -. ps <-> ph ) $=
      ( wn notnot xchbinx bicomi ) ABDAADBAECFG $.
      $( [28-Sep-2014] $) $( [5-Aug-1993] $)
  $}

  ${
    con1biiOLD.1 $e |- ( -. ph <-> ps ) $.
    $( Obsolete proof of ~ con1bii as of 28-Sep-2014. $)
    con1biiOLD $p |- ( -. ps <-> ph ) $=
      ( wn notnot notbii bitr2i ) AADZDBDAEHBCFG $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    con2bii.1 $e |- ( ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con2bii $p |- ( ps <-> -. ph ) $=
      ( wn bicomi con1bii ) ADBBAABDCEFE $.
      $( [5-Aug-1993] $)
  $}

  $( Contraposition.  Bidirectional version of ~ con1 . $)
  con1b $p |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) $=
    ( wn wi con1 impbii ) ACBDBCADABEBAEF $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Bidirectional version of ~ con2 . $)
  con2b $p |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) $=
    ( wn wi con2 impbii ) ABCDBACDABEBAEF $.
    $( [5-Aug-1993] $)

  $( A wff is equivalent to itself with true antecedent. $)
  biimt $p |- ( ph -> ( ps <-> ( ph -> ps ) ) ) $=
    ( wi ax-1 pm2.27 impbid2 ) ABABCBADABEF $.
    $( [28-Jan-1996] $)

  $( Theorem *5.5 of [WhiteheadRussell] p. 125. $)
  pm5.5 $p |- ( ph -> ( ( ph -> ps ) <-> ps ) ) $=
    ( wi biimt bicomd ) ABABCABDE $.
    $( [3-Jan-2005] $)

  ${
    a1bi.1 $e |- ph $.
    $( Inference rule introducing a theorem as an antecedent.  The proof was
       shortened by Wolf Lammen, 11-Nov-2012.) $)
    a1bi $p |- ( ps <-> ( ph -> ps ) ) $=
      ( wi wb biimt ax-mp ) ABABDECABFG $.
      $( [11-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    mt2bi.1 $e |- ph $.
    $( A false consequent falsifies an antecedent.  (The proof was shortened by
       Wolf Lammen, 12-Nov-2012.) $)
    mt2bi $p |- ( -. ps <-> ( ps -> -. ph ) ) $=
      ( wn wi a1bi con2b bitri ) BDZAIEBADEAICFABGH $.
      $( [12-Nov-2012] $) $( [19-Aug-1993] $)
  $}

  $( Modus-tollens-like theorem.  (The proof was shortened by Wolf Lammen,
     12-Nov-2012.) $)
  mtt $p |- ( -. ph -> ( -. ps <-> ( ps -> ph ) ) ) $=
    ( wn wi biimt con34b syl6bbr ) ACZBCZHIDBADHIEBAFG $.
    $( [12-Nov-2012] $) $( [7-Apr-2001] $)

  $( Theorem *5.501 of [WhiteheadRussell] p. 125. $)
  pm5.501 $p |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) $=
    ( wb pm5.1im bi1 com12 impbid ) ABABCZABDHABABEFG $.
    $( [24-Jan-2013] $) $( [3-Jan-2005] $)

  $( Implication in terms of implication and biconditional.  (The proof was
     shortened by Wolf Lammen, 24-Jan-2013.) $)
  ibib $p |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) $=
    ( wb pm5.501 pm5.74i ) ABABCABDE $.
    $( [24-Jan-2013] $) $( [31-Mar-1994] $)

  $( Implication in terms of implication and biconditional.  (The proof was
     shortened by Wolf Lammen, 21-Dec-2013.) $)
  ibibr $p |- ( ( ph -> ps ) <-> ( ph -> ( ps <-> ph ) ) ) $=
    ( wb pm5.501 bicom syl6bb pm5.74i ) ABBACZABABCHABDABEFG $.
    $( [21-Dec-2013] $) $( [29-Apr-2005] $)

  $( Obsolete proof of ~ ibibr as of 21-Dec-2013. $)
  ibibrOLD $p |- ( ( ph -> ps ) <-> ( ph -> ( ps <-> ph ) ) ) $=
    ( wi wb ibib bicom imbi2i bitri ) ABCAABDZCABADZCABEIJAABFGH $.
    $( [29-Apr-2005] $)

  ${
    tbt.1 $e |- ph $.
    $( A wff is equivalent to its equivalence with truth.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    tbt $p |- ( ps <-> ( ps <-> ph ) ) $=
      ( wb ibibr pm5.74ri ax-mp ) ABBADZDCABHABEFG $.
      $( [16-May-2011] $) $( [18-Aug-1993] $)
  $}

  $( The negation of a wff is equivalent to the wff's equivalence to
     falsehood.  (Contributed by Juha Arpiainen, 19-Jan-2006.)  (The proof was
     shortened by Wolf Lammen, 28-Jan-2013.) $)
  nbn2 $p |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) $=
    ( wn wb pm5.501 notbi syl6bbr ) ACZBCZHIDABDHIEABFG $.
    $( [28-Jan-2013] $) $( [19-Jan-2006] $)

  $( Transfer negation via an equivalence.  (The proof was shortened by Wolf
     Lammen, 28-Jan-2013.) $)
  bibif $p |- ( -. ps -> ( ( ph <-> ps ) <-> -. ph ) ) $=
    ( wn wb nbn2 bicom syl6rbb ) BCACBADABDBAEBAFG $.
    $( [28-Jan-2013] $) $( [3-Oct-2007] $)

  ${
    nbn.1 $e |- -. ph $.
    $( The negation of a wff is equivalent to the wff's equivalence to
       falsehood.  (The proof was shortened by Wolf Lammen, 3-Oct-2013.) $)
    nbn $p |- ( -. ps <-> ( ps <-> ph ) ) $=
      ( wb wn bibif ax-mp bicomi ) BADZBEZAEIJDCBAFGH $.
      $( [3-Oct-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    nbn3.1 $e |- ph $.
    $( Transfer falsehood via equivalence. $)
    nbn3 $p |- ( -. ps <-> ( ps <-> -. ph ) ) $=
      ( wn notnoti nbn ) ADBACEF $.
      $( [11-Sep-2006] $)
  $}

  $( Two propositions are equivalent if they are both false.  Closed form of
     ~ 2false .  Equivalent to a ~ bi2 -like version of the xor-connective.
     (Contributed by Wolf Lammen, 13-May-2013.) $)
  pm5.21im $p |- ( -. ph -> ( -. ps -> ( ph <-> ps ) ) ) $=
    ( wn wb nbn2 biimpd ) ACBCABDABEF $.
    $( [13-May-2013] $)

  ${
    2false.1 $e |- -. ph $.
    2false.2 $e |- -. ps $.
    $( Two falsehoods are equivalent.  (The proof was shortened by Wolf Lammen,
       19-May-2013.) $)
    2false $p |- ( ph <-> ps ) $=
      ( wn 2th con4bii ) ABAEBECDFG $.
      $( [19-May-2013] $) $( [4-Apr-2005] $)
  $}

  ${
    2falsed.1 $e |- ( ph -> -. ps ) $.
    2falsed.2 $e |- ( ph -> -. ch ) $.
    $( Two falsehoods are equivalent (deduction rule). $)
    2falsed $p |- ( ph -> ( ps <-> ch ) ) $=
      ( pm2.21d impbid ) ABCABCDFACBEFG $.
      $( [11-Oct-2013] $)
  $}

  ${
    pm5.21ni.1 $e |- ( ph -> ps ) $.
    pm5.21ni.2 $e |- ( ch -> ps ) $.
    $( Two propositions implying a false one are equivalent.  (The proof was
       shortened by Wolf Lammen, 19-May-2013.) $)
    pm5.21ni $p |- ( -. ps -> ( ph <-> ch ) ) $=
      ( wn con3i 2falsed ) BFACABDGCBEGH $.
      $( [19-May-2013] $) $( [16-Feb-1996] $)

    ${
      pm5.21nii.3 $e |- ( ps -> ( ph <-> ch ) ) $.
      $( Eliminate an antecedent implied by each side of a biconditional. $)
      pm5.21nii $p |- ( ph <-> ch ) $=
        ( wb pm5.21ni pm2.61i ) BACGFABCDEHI $.
        $( [21-May-1999] $)
    $}
  $}

  ${
    pm5.21ndd.1 $e |- ( ph -> ( ch -> ps ) ) $.
    pm5.21ndd.2 $e |- ( ph -> ( th -> ps ) ) $.
    pm5.21ndd.3 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Eliminate an antecedent implied by each side of a biconditional,
       deduction version.  (Contributed by Paul Chapman, 21-Nov-2012.)  ( The
       proof was shortened by Wolf Lammen, 6-Oct-2013.) $)
    pm5.21ndd $p |- ( ph -> ( ch <-> th ) ) $=
      ( wb wn con3d pm5.21im syl6c pm2.61d ) ABCDHZGABICIDINACBEJADBFJCDKLM $.
      $( [6-Oct-2013] $) $( [21-Nov-2012] $)
  $}

  ${
    bija.1 $e |- ( ph -> ( ps -> ch ) ) $.
    bija.2 $e |- ( -. ph -> ( -. ps -> ch ) ) $.
    $( Combine antecedents into a single bi-conditional.  This inference,
       reminiscent of ~ ja , is reversible:  The hypotheses can be deduced from
       the conclusion alone (see ~ pm5.1im and ~ pm5.21im ).  (Contributed by
       Wolf Lammen, 13-May-2013.) $)
    bija $p |- ( ( ph <-> ps ) -> ch ) $=
      ( wb bi2 syli wn bi1 con3d pm2.61d ) ABFZBCBMACABGDHBIMAICMABABJKEHL $.
      $( [13-May-2013] $)
  $}

  $( Theorem *5.18 of [WhiteheadRussell] p. 124.  This theorem says that
     logical equivalence is the same as negated "exclusive-or."  (The proof was
     shortened by Andrew Salmon, 20-Jun-2011.)  (The proof was shortened by
     Wolf Lammen, 15-Oct-2013.) $)
  pm5.18 $p |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) $=
    ( wb wn pm5.501 con1bid bitr2d nbn2 pm2.61i ) AABCZABDZCZDZCAMBJABLAKEFABEG
    ADZMKJNKLAKHFABHGI $.
    $( [15-Oct-2013] $) $( [28-Jun-2002] $)

  $( Two ways to express "exclusive or." $)
  xor3 $p |- ( -. ( ph <-> ps ) <-> ( ph <-> -. ps ) ) $=
    ( wn wb pm5.18 con2bii bicomi ) ABCDZABDZCIHABEFG $.
    $( [1-Jan-2006] $)

  $( Move negation outside of biconditional.  Compare Theorem *5.18 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     20-Sep-2013.) $)
  nbbn $p |- ( ( -. ph <-> ps ) <-> -. ( ph <-> ps ) ) $=
    ( wb wn xor3 con2bi bicom 3bitrri ) ABCDABDCBADZCIBCABEABFBIGH $.
    $( [20-Sep-2013] $) $( [27-Jun-2002] $)

  $( Associative law for the biconditional.  An axiom of system DS in Vladimir
     Lifschitz, "On calculational proofs", Annals of Pure and Applied Logic,
     113:207-224, 2002,
     ~ http://www.cs.utexas.edu/users/ai-lab/pub-view.php?PubID=26805 .
     Interestingly, this law was not included in _Principia Mathematica_ but
     was apparently first noted by Jan Lukasiewicz circa 1923.  (The proof was
     shortened by Juha Arpiainen, 19-Jan-2006.)  (The proof was shortened by
     Wolf Lammen, 21-Sep-2013.) $)
  biass $p |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) $=
    ( wb pm5.501 bibi1d bitr3d wn nbbn nbn2 syl5bbr pm2.61i ) AABDZCDZABCDZDZDA
    ONPABMCABEFAOEGAHZOHZNPRBHZCDQNBCIQSMCABJFKAOJGL $.
    $( [21-Sep-2013] $) $( [8-Jan-2005] $)

  $( Theorem *5.19 of [WhiteheadRussell] p. 124. $)
  pm5.19 $p |- -. ( ph <-> -. ph ) $=
    ( wb wn biid pm5.18 mpbi ) AABAACBCADAAEF $.
    $( [3-Jan-2005] $)

  $( Logical equivalence of commuted antecedents.  Part of Theorem *4.87 of
     [WhiteheadRussell] p. 122. $)
  bi2.04 $p |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.04 impbii ) ABCDDBACDDABCEBACEF $.
    $( [5-Aug-1993] $)

  $( Antecedent absorption implication.  Theorem *5.4 of [WhiteheadRussell]
     p. 125. $)
  pm5.4 $p |- ( ( ph -> ( ph -> ps ) ) <-> ( ph -> ps ) ) $=
    ( wi pm2.43 ax-1 impbii ) AABCZCGABDGAEF $.
    $( [5-Aug-1993] $)

  $( Distributive law for implication.  Compare Theorem *5.41 of
     [WhiteheadRussell] p. 125. $)
  imdi $p |- ( ( ph -> ( ps -> ch ) ) <->
               ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi ax-2 pm2.86 impbii ) ABCDDABDACDDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( Theorem *5.41 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 12-Oct-2012.) $)
  pm5.41 $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) <->
                ( ph -> ( ps -> ch ) ) ) $=
    ( wi imdi bicomi ) ABCDDABDACDDABCEF $.
    $( [13-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.8 of [WhiteheadRussell] p. 122. $)
  pm4.8 $p |- ( ( ph -> -. ph ) <-> -. ph ) $=
    ( wn wi pm2.01 ax-1 impbii ) AABZCGADGAEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.81 of [WhiteheadRussell] p. 122. $)
  pm4.81 $p |- ( ( -. ph -> ph ) <-> ph ) $=
    ( wn wi pm2.18 pm2.24 impbii ) ABACAADAAEF $.
    $( [3-Jan-2005] $)

  $( Simplify an implication between two implications when the antecedent of
     the first is a consequence of the antecedent of the second.  The reverse
     form is useful in producing the successor step in induction proofs.
     (Contributed by Paul Chapman, 22-Jun-2011.)  (The proof was shortened by
     Wolf Lammen, 14-Sep-2013.) $)
  imim21b $p |- ( ( ps -> ph ) -> ( ( ( ph -> ch ) -> ( ps -> th ) ) <->
                                    ( ps -> ( ch -> th ) ) ) ) $=
    ( wi bi2.04 wb pm5.5 imbi1d imim2i pm5.74d syl5bb ) ACEZBDEEBMDEZEBAEZBCDEZ
    EMBDFOBNPANPGBAMCDACHIJKL $.
    $( [14-Sep-2013] $) $( [22-Jun-2011] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical disjunction and conjunction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare connectives for disjunction ('or') and conjunction ('and'). $)
  $c \/ $. $( Vee (read:  'or') $)
  $c /\ $. $( Wedge (read:  'and') $)

  $( Extend wff definition to include disjunction ('or'). $)
  wo $a wff ( ph \/ ps ) $.
  $( Extend wff definition to include conjunction ('and'). $)
  wa $a wff ( ph /\ ps ) $.

  $( Define disjunction (logical 'or').  This is our first use of the
     biconditional connective in a definition; we use it in place of the
     traditional "<=def=>", which means the same thing, except that we can
     manipulate the biconditional connective directly in proofs rather than
     having to rely on an informal definition substitution rule.  Note that if
     we mechanically substitute ` ( -. ph -> ps ) ` for ` ( ph \/ ps ) ` , we
     end up with an instance of previously proved theorem ~ biid .  This is the
     justification for the definition, along with the fact that it introduces a
     new symbol ` \/ ` .  Definition of [Margaris] p. 49. $)
  df-or $a |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) $.

  $( Define conjunction (logical 'and').  Definition of [Margaris] p. 49. $)
  df-an $a |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) $.

  $( Theorem *4.64 of [WhiteheadRussell] p. 120. $)
  pm4.64 $p |- ( ( -. ph -> ps ) <-> ( ph \/ ps ) ) $=
    ( wo wn wi df-or bicomi ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.53 of [WhiteheadRussell] p. 107. $)
  pm2.53 $p |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) $=
    ( wo wn wi df-or biimpi ) ABCADBEABFG $.
    $( [23-Jul-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.54 of [WhiteheadRussell] p. 107. $)
  pm2.54 $p |- ( ( -. ph -> ps ) -> ( ph \/ ps ) ) $=
    ( wo wn wi df-or biimpri ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  ${
    ori.1 $e |- ( ph \/ ps ) $.
    $( Infer implication from disjunction. $)
    ori $p |- ( -. ph -> ps ) $=
      ( wo wn wi df-or mpbi ) ABDAEBFCABGH $.
      $( [11-Jun-1994] $)
  $}

  ${
    orri.1 $e |- ( -. ph -> ps ) $.
    $( Infer implication from disjunction. $)
    orri $p |- ( ph \/ ps ) $=
      ( wo wn wi df-or mpbir ) ABDAEBFCABGH $.
      $( [11-Jun-1994] $)
  $}

  ${
    ord.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Deduce implication from disjunction. $)
    ord $p |- ( ph -> ( -. ps -> ch ) ) $=
      ( wo wn wi df-or sylib ) ABCEBFCGDBCHI $.
      $( [18-May-1994] $)
  $}

  ${
    orrd.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Deduce implication from disjunction. $)
    orrd $p |- ( ph -> ( ps \/ ch ) ) $=
      ( wn wi wo pm2.54 syl ) ABECFBCGDBCHI $.
      $( [27-Nov-1995] $)
  $}

  ${
    jaoi.1 $e |- ( ph -> ps ) $.
    jaoi.2 $e |- ( ch -> ps ) $.
    $( Inference disjoining the antecedents of two implications. $)
    jaoi $p |- ( ( ph \/ ch ) -> ps ) $=
      ( wo wn pm2.53 syl6 pm2.61d2 ) ACFZABKAGCBACHEIDJ $.
      $( [13-Dec-2013] $) $( [5-Apr-1994] $)
  $}

  ${
    jaod.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jaod.2 $e |- ( ph -> ( th -> ch ) ) $.
    $( Deduction disjoining the antecedents of two implications. $)
    jaod $p |- ( ph -> ( ( ps \/ th ) -> ch ) ) $=
      ( wo wi com12 jaoi ) BDGACBACHDABCEIADCFIJI $.
      $( [4-Apr-2013] $) $( [18-Aug-1994] $)
  $}

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.55 of
     [WhiteheadRussell] p. 107.  (The proof was shortened by Wolf Lammen,
     21-Jul-2012.) $)
  orel1 $p |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wn pm2.53 com12 ) ABCADBABEF $.
    $( [23-Jul-2012] $) $( [12-Aug-1994] $)

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.56 of
     [WhiteheadRussell] p. 107.  (The proof was shortened by Wolf Lammen,
     5-Apr-2013.) $)
  orel2 $p |- ( -. ph -> ( ( ps \/ ph ) -> ps ) ) $=
    ( wn idd pm2.21 jaod ) ACZBBAGBDABEF $.
    $( [5-Apr-2013] $) $( [12-Aug-1994] $)

  $( Introduction of a disjunct.  Axiom *1.3 of [WhiteheadRussell] p. 96. $)
  olc $p |- ( ph -> ( ps \/ ph ) ) $=
    ( wn ax-1 orrd ) ABAABCDE $.
    $( [30-Aug-1993] $)

  $( Introduction of a disjunct.  Theorem *2.2 of [WhiteheadRussell] p. 104. $)
  orc $p |- ( ph -> ( ph \/ ps ) ) $=
    ( pm2.24 orrd ) AABABCD $.
    $( [30-Aug-1993] $)

  $( Axiom *1.4 of [WhiteheadRussell] p. 96. $)
  pm1.4 $p |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) $=
    ( wo olc orc jaoi ) ABACBABDBAEF $.
    $( [15-Nov-2012] $) $( [3-Jan-2005] $)

  $( Commutative law for disjunction.  Theorem *4.31 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 15-Nov-2012.) $)
  orcom $p |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) $=
    ( wo pm1.4 impbii ) ABCBACABDBADE $.
    $( [15-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    orcomd.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Commutation of disjuncts in consequent. $)
    orcomd $p |- ( ph -> ( ch \/ ps ) ) $=
      ( wo orcom sylib ) ABCECBEDBCFG $.
      $( [2-Dec-2010] $)
  $}

  ${
    orcoms.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Commutation of disjuncts in antecedent. $)
    orcoms $p |- ( ( ps \/ ph ) -> ch ) $=
      ( wo pm1.4 syl ) BAEABECBAFDG $.
      $( [2-Dec-2012] $)
  $}

  ${
    orci.1 $e |- ph $.
    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 14-Nov-2012.) $)
    orci $p |- ( ph \/ ps ) $=
      ( pm2.24i orri ) ABABCDE $.
      $( [14-Nov-2012] $) $( [19-Jan-2008] $)

    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 14-Nov-2012.) $)
    olci $p |- ( ps \/ ph ) $=
      ( wn a1i orri ) BAABDCEF $.
      $( [14-Nov-2012] $) $( [19-Jan-2008] $)
  $}

  ${
    orcd.1 $e |- ( ph -> ps ) $.
    $( Deduction introducing a disjunct. $)
    orcd $p |- ( ph -> ( ps \/ ch ) ) $=
      ( wo orc syl ) ABBCEDBCFG $.
      $( [20-Sep-2007] $)

    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 3-Oct-2013.) $)
    olcd $p |- ( ph -> ( ch \/ ps ) ) $=
      ( orcd orcomd ) ABCABCDEF $.
      $( [3-Oct-2013] $) $( [11-Apr-2008] $)
  $}

  ${
    orcs.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Deduction eliminating disjunct. _Notational convention_:  We sometimes
       suffix with "s" the label of an inference that manipulates an
       antecedent, leaving the consequent unchanged.  The "s" means that the
       inference eliminates the need for a syllogism ( ~ syl ) -type inference
       in a proof. $)
    orcs $p |- ( ph -> ch ) $=
      ( wo orc syl ) AABECABFDG $.
      $( [21-Jun-1994] $)
  $}

  ${
    olcs.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Deduction eliminating disjunct.  (The proof was shortened by Wolf
       Lammen, 3-Oct-2013.) $)
    olcs $p |- ( ps -> ch ) $=
      ( orcoms orcs ) BACABCDEF $.
      $( [3-Oct-2013] $) $( [21-Jun-1994] $)
  $}

  $( Theorem *2.07 of [WhiteheadRussell] p. 101. $)
  pm2.07 $p |- ( ph -> ( ph \/ ph ) ) $=
    ( olc ) AAB $.
    $( [3-Jan-2005] $)

  $( Theorem *2.45 of [WhiteheadRussell] p. 106. $)
  pm2.45 $p |- ( -. ( ph \/ ps ) -> -. ph ) $=
    ( wo orc con3i ) AABCABDE $.
    $( [3-Jan-2005] $)

  $( Theorem *2.46 of [WhiteheadRussell] p. 106. $)
  pm2.46 $p |- ( -. ( ph \/ ps ) -> -. ps ) $=
    ( wo olc con3i ) BABCBADE $.
    $( [3-Jan-2005] $)

  $( Theorem *2.47 of [WhiteheadRussell] p. 107. $)
  pm2.47 $p |- ( -. ( ph \/ ps ) -> ( -. ph \/ ps ) ) $=
    ( wo wn pm2.45 orcd ) ABCDADBABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.48 of [WhiteheadRussell] p. 107. $)
  pm2.48 $p |- ( -. ( ph \/ ps ) -> ( ph \/ -. ps ) ) $=
    ( wo wn pm2.46 olcd ) ABCDBDAABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.49 of [WhiteheadRussell] p. 107. $)
  pm2.49 $p |- ( -. ( ph \/ ps ) -> ( -. ph \/ -. ps ) ) $=
    ( wo wn pm2.46 olcd ) ABCDBDADABEF $.
    $( [3-Jan-2005] $)

  $( Slight generalization of Theorem *2.67 of [WhiteheadRussell] p. 107. $)
  pm2.67-2 $p |- ( ( ( ph \/ ch ) -> ps ) -> ( ph -> ps ) ) $=
    ( wo orc imim1i ) AACDBACEF $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.67 of [WhiteheadRussell] p. 107. $)
  pm2.67 $p |- ( ( ( ph \/ ps ) -> ps ) -> ( ph -> ps ) ) $=
    ( pm2.67-2 ) ABBC $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.25 of [WhiteheadRussell] p. 104. $)
  pm2.25 $p |- ( ph \/ ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wi orel1 orri ) AABCBDABEF $.
    $( [3-Jan-2005] $)

  $( A wff is equivalent to its disjunction with falsehood.  Theorem *4.74 of
     [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     18-Nov-2012.) $)
  biorf $p |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wn wo olc orel1 impbid2 ) ACBABDBAEABFG $.
    $( [18-Nov-2012] $) $( [23-Mar-1995] $)

  $( A wff is equivalent to its negated disjunction with falsehood. $)
  biortn $p |- ( ph -> ( ps <-> ( -. ph \/ ps ) ) ) $=
    ( wn wo wb notnot1 biorf syl ) AACZCBIBDEAFIBGH $.
    $( [9-Jul-2012] $)

  ${
    biorfi.1 $e |- -. ph $.
    $( A wff is equivalent to its disjunction with falsehood. $)
    biorfi $p |- ( ps <-> ( ps \/ ph ) ) $=
      ( wn wo wb orc orel2 impbid2 ax-mp ) ADZBBAEZFCKBLBAGABHIJ $.
      $( [23-Mar-1995] $)
  $}

  $( Theorem *2.621 of [WhiteheadRussell] p. 107. $)
  pm2.621 $p |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wi id idd jaod ) ABCZABBGDGBEF $.
    $( [13-Dec-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.62 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 13-Dec-2013.) $)
  pm2.62 $p |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wi wo pm2.621 com12 ) ABCABDBABEF $.
    $( [13-Dec-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.68 of [WhiteheadRussell] p. 108. $)
  pm2.68 $p |- ( ( ( ph -> ps ) -> ps ) -> ( ph \/ ps ) ) $=
    ( wi jarl orrd ) ABCBCABABBDE $.
    $( [21-Oct-2012] $) $( [3-Jan-2005] $)

  $( Logical 'or' expressed in terms of implication only.  Theorem *5.25 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     20-Oct-2012.) $)
  dfor2 $p |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) $=
    ( wo wi pm2.62 pm2.68 impbii ) ABCABDBDABEABFG $.
    $( [21-Oct-2012] $) $( [12-Aug-2004] $)

  $( Obsolete proof of ~ pm2.621 as of 13-Dec-2013. $)
  pm2.621OLD $p |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wi pm2.62 com12 ) ABCABDBABEF $.
    $( [3-Jan-2005] $)

  $( Implication in terms of disjunction.  Theorem *4.6 of [WhiteheadRussell]
     p. 120. $)
  imor $p |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) $=
    ( wi wn wo notnot imbi1i df-or bitr4i ) ABCADZDZBCJBEAKBAFGJBHI $.
    $( [5-Aug-1993] $)

  ${
    imori.1 $e |- ( ph -> ps ) $.
    $( Infer disjunction from implication. $)
    imori $p |- ( -. ph \/ ps ) $=
      ( wi wn wo imor mpbi ) ABDAEBFCABGH $.
      $( [12-Mar-2012] $)
  $}

  ${
    imorri.1 $e |- ( -. ph \/ ps ) $.
    $( Infer implication from disjunction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    imorri $p |- ( ph -> ps ) $=
      ( wi wn wo imor mpbir ) ABDAEBFCABGH $.
      $( [3-Jun-2011] $)
  $}

  $( Law of excluded middle, also called the principle of _tertium non datur_.
     Theorem *2.11 of [WhiteheadRussell] p. 101.  It says that something is
     either true or not true; there are no in-between values of truth.  This is
     an essential distinction of our classical logic and is not a theorem of
     intuitionistic logic. $)
  exmid $p |- ( ph \/ -. ph ) $=
    ( wn id orri ) AABZECD $.
    $( [5-Aug-1993] $)

  $( Theorem *2.1 of [WhiteheadRussell] p. 101.  (The proof was shortened by
     Wolf Lammen, 23-Nov-2012.) $)
  pm2.1 $p |- ( -. ph \/ ph ) $=
    ( id imori ) AAABC $.
    $( [23-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.13 of [WhiteheadRussell] p. 101. $)
  pm2.13 $p |- ( ph \/ -. -. -. ph ) $=
    ( wn notnot1 orri ) AABZBBECD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.62 of [WhiteheadRussell] p. 120. $)
  pm4.62 $p |- ( ( ph -> -. ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wn imor ) ABCD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.66 of [WhiteheadRussell] p. 120. $)
  pm4.66 $p |- ( ( -. ph -> -. ps ) <-> ( ph \/ -. ps ) ) $=
    ( wn pm4.64 ) ABCD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.63 of [WhiteheadRussell] p. 120. $)
  pm4.63 $p |- ( -. ( ph -> -. ps ) <-> ( ph /\ ps ) ) $=
    ( wa wn wi df-an bicomi ) ABCABDEDABFG $.
    $( [3-Jan-2005] $)

  $( Express implication in terms of conjunction. $)
  imnan $p |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) $=
    ( wa wn wi df-an con2bii ) ABCABDEABFG $.
    $( [9-Apr-1994] $)

  $( Express implication in terms of conjunction.  Theorem 3.4(27) of [Stoll]
     p. 176.  (The proof was shortened by Wolf Lammen, 30-Oct-2012.) $)
  iman $p |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) $=
    ( wi wn wa notnot imbi2i imnan bitri ) ABCABDZDZCAJEDBKABFGAJHI $.
    $( [30-Oct-2012] $) $( [5-Aug-1993] $)

  $( Express conjunction in terms of implication. $)
  annim $p |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) $=
    ( wi wn wa iman con2bii ) ABCABDEABFG $.
    $( [2-Aug-1994] $)

  $( Theorem *4.61 of [WhiteheadRussell] p. 120. $)
  pm4.61 $p |- ( -. ( ph -> ps ) <-> ( ph /\ -. ps ) ) $=
    ( wn wa wi annim bicomi ) ABCDABECABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.65 of [WhiteheadRussell] p. 120. $)
  pm4.65 $p |- ( -. ( -. ph -> ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wn pm4.61 ) ACBD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.67 of [WhiteheadRussell] p. 120. $)
  pm4.67 $p |- ( -. ( -. ph -> -. ps ) <-> ( -. ph /\ ps ) ) $=
    ( wn pm4.63 ) ACBD $.
    $( [3-Jan-2005] $)

  ${
    imp.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Importation inference.  (The proof was shortened by Eric Schmidt,
       22-Dec-2006.) $)
    imp $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa wn wi df-an impi sylbi ) ABEABFGFCABHABCDIJ $.
      $( [24-Mar-2013] $) $( [5-Aug-1993] $)

    $( Importation inference with commuted antecedents. $)
    impcom $p |- ( ( ps /\ ph ) -> ch ) $=
      ( com12 imp ) BACABCDEF $.
      $( [25-May-2005] $)
  $}

  ${
    imp3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Importation deduction. $)
    imp3a $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( wa wi com3l imp com12 ) BCFADBCADGABCDEHIJ $.
      $( [24-Mar-2013] $) $( [31-Mar-1994] $)

    $( An importation inference. $)
    imp31 $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( wa wi imp ) ABFCDABCDGEHH $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp32 $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( wa imp3a imp ) ABCFDABCDEGH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Exportation inference.  (This theorem used to be labeled "exp" but was
       changed to "ex" so as not to conflict with the math token "exp", per the
       June 2006 Metamath spec change.)  (The proof was shortened by Eric
       Schmidt, 22-Dec-2006.) $)
    ex $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn wi wa df-an sylbir expi ) ABCABEFEABGCABHDIJ $.
      $( [24-Mar-2013] $) $( [5-Aug-1993] $)

    $( Exportation inference with commuted antecedents. $)
    expcom $p |- ( ps -> ( ph -> ch ) ) $=
      ( ex com12 ) ABCABCDEF $.
      $( [25-May-2005] $)
  $}

  ${
    exp3a.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Exportation deduction. $)
    exp3a $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi wa com12 ex com3r ) BCADBCADFABCGDEHIJ $.
      $( [24-Mar-2013] $) $( [20-Aug-1993] $)

    $( A deduction version of exportation, followed by importation. $)
    expdimp $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi exp3a imp ) ABCDFABCDEGH $.
      $( [6-Sep-2008] $)
  $}

  ${
    impancom.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Mixed importation/commutation inference. $)
    impancom $p |- ( ( ph /\ ch ) -> ( ps -> th ) ) $=
      ( wi ex com23 imp ) ACBDFABCDABCDFEGHI $.
      $( [22-Jun-2013] $)
  $}

  $( Theorem *3.3 (Exp) of [WhiteheadRussell] p. 112.  (The proof was shortened
     by Wolf Lammen, 24-Mar-2013.) $)
  pm3.3 $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) $=
    ( wa wi id exp3a ) ABDCEZABCHFG $.
    $( [24-Mar-2013] $) $( [3-Jan-2005] $)

  $( Theorem *3.31 (Imp) of [WhiteheadRussell] p. 112.  (The proof was
     shortened by Wolf Lammen, 24-Mar-2013.) $)
  pm3.31 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wi id imp3a ) ABCDDZABCGEF $.
    $( [24-Mar-2013] $) $( [3-Jan-2005] $)

  $( Import-export theorem.  Part of Theorem *4.87 of [WhiteheadRussell]
     p. 122.  (The proof was shortened by Wolf Lammen, 24-Mar-2013.) $)
  impexp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) $=
    ( wa wi pm3.3 pm3.31 impbii ) ABDCEABCEEABCFABCGH $.
    $( [24-Mar-2013] $) $( [5-Aug-1993] $)

  $( Join antecedents with conjunction.  Theorem *3.2 of [WhiteheadRussell]
     p. 111.  (The proof was shortened by Wolf Lammen, 12-Nov-2012.) $)
  pm3.2 $p |- ( ph -> ( ps -> ( ph /\ ps ) ) ) $=
    ( wa id ex ) ABABCZFDE $.
    $( [12-Nov-2012] $) $( [5-Aug-1993] $)

  $( Join antecedents with conjunction.  Theorem *3.21 of [WhiteheadRussell]
     p. 111. $)
  pm3.21 $p |- ( ph -> ( ps -> ( ps /\ ph ) ) ) $=
    ( wa pm3.2 com12 ) BABACBADE $.
    $( [5-Aug-1993] $)

  $( Theorem *3.22 of [WhiteheadRussell] p. 111.  (The proof was shortened by
     Wolf Lammen, 13-Nov-2012.) $)
  pm3.22 $p |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) $=
    ( wa pm3.21 imp ) ABBACABDE $.
    $( [13-Nov-2012] $) $( [3-Jan-2005] $)

  $( Commutative law for conjunction.  Theorem *4.3 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 4-Nov-2012.) $)
  ancom $p |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) $=
    ( wa pm3.22 impbii ) ABCBACABDBADE $.
    $( [4-Nov-2012] $) $( [25-Jun-1998] $)

  ${
    ancomd.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Commutation of conjuncts in consequent.  (Contributed by Jeff Hankins,
       14-Aug-2009.) $)
    ancomd $p |- ( ph -> ( ch /\ ps ) ) $=
      ( wa ancom sylib ) ABCECBEDBCFG $.
      $( [18-Apr-2010] $) $( [14-Aug-2009] $)
  $}

  ${
    ancoms.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Inference commuting conjunction in antecedent. $)
    ancoms $p |- ( ( ps /\ ph ) -> ch ) $=
      ( expcom imp ) BACABCDEF $.
      $( [21-Apr-1994] $)
  $}

  ${
    ancomsd.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Deduction commuting conjunction in antecedent. $)
    ancomsd $p |- ( ph -> ( ( ch /\ ps ) -> th ) ) $=
      ( wa ancom syl5bi ) CBFBCFADCBGEH $.
      $( [12-Dec-2004] $)
  $}

  ${
    pm3.2i.1 $e |- ph $.
    pm3.2i.2 $e |- ps $.
    $( Infer conjunction of premises. $)
    pm3.2i $p |- ( ph /\ ps ) $=
      ( wa pm3.2 mp2 ) ABABECDABFG $.
      $( [5-Aug-1993] $)
  $}

  $( Nested conjunction of antecedents. $)
  pm3.43i $p |- ( ( ph -> ps ) ->
                ( ( ph -> ch ) -> ( ph -> ( ps /\ ch ) ) ) ) $=
    ( wa pm3.2 imim3i ) BCBCDABCEF $.
    $( [5-Aug-1993] $)

  $( Elimination of a conjunct.  Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simpl $p |- ( ( ph /\ ps ) -> ph ) $=
    ( ax-1 imp ) ABAABCD $.
    $( [13-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    simpli.1 $e |- ( ph /\ ps ) $.
    $( Inference eliminating a conjunct. $)
    simpli $p |- ph $=
      ( wa simpl ax-mp ) ABDACABEF $.
      $( [15-Jun-1994] $)
  $}

  ${
    simpld.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simpld $p |- ( ph -> ps ) $=
      ( wa simpl syl ) ABCEBDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    simplbi.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simplbi $p |- ( ph -> ps ) $=
      ( wa biimpi simpld ) ABCABCEDFG $.
      $( [27-May-1998] $)
  $}

  $( Elimination of a conjunct.  Theorem *3.27 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simpr $p |- ( ( ph /\ ps ) -> ps ) $=
    ( idd imp ) ABBABCD $.
    $( [13-Nov-2012] $)  $( [5-Aug-1993] $)

  ${
    simpri.1 $e |- ( ph /\ ps ) $.
    $( Inference eliminating a conjunct. $)
    simpri $p |- ps $=
      ( wa simpr ax-mp ) ABDBCABEF $.
      $( [15-Jun-1994] $)
  $}

  ${
    simprd.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct.  (The proof was shortened by Wolf
       Lammen, 3-Oct-2013.) $)
    simprd $p |- ( ph -> ch ) $=
      ( ancomd simpld ) ACBABCDEF $.
      $( [3-Oct-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    simprbi.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprbi $p |- ( ph -> ch ) $=
      ( wa biimpi simprd ) ABCABCEDFG $.
      $( [27-May-1998] $)
  $}

  ${
    adantr.1 $e |- ( ph -> ps ) $.
    $( Inference adding a conjunct to the right of an antecedent. $)
    adantr $p |- ( ( ph /\ ch ) -> ps ) $=
      ( a1d imp ) ACBABCDEF $.
      $( [30-Aug-1993] $)
  $}

  ${
    adantl.1 $e |- ( ph -> ps ) $.
    $( Inference adding a conjunct to the left of an antecedent.  (The proof
       was shortened by Wolf Lammen, 23-Nov-2012.) $)
    adantl $p |- ( ( ch /\ ph ) -> ps ) $=
      ( adantr ancoms ) ACBABCDEF $.
      $( [23-Nov-2012] $) $( [30-Aug-1993] $)
  $}

  ${
    adantld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding a conjunct to the left of an antecedent.  (The proof
       was shortened by Wolf Lammen, 20-Dec-2012.) $)
    adantld $p |- ( ph -> ( ( th /\ ps ) -> ch ) ) $=
      ( wa simpr syl5 ) DBFBACDBGEH $.
      $( [20-Dec-2012] $) $( [4-May-1994] $)
  $}

  ${
    adantrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding a conjunct to the right of an antecedent. $)
    adantrd $p |- ( ph -> ( ( ps /\ th ) -> ch ) ) $=
      ( wa simpl syl5 ) BDFBACBDGEH $.
      $( [4-May-1994] $)
  $}

  ${
    mpan9.1 $e |- ( ph -> ps ) $.
    mpan9.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( Modus ponens conjoining dissimilar antecedents.  (The proof was
       shortened by Andrew Salmon, 7-May-2011.) $)
    mpan9 $p |- ( ( ph /\ ch ) -> th ) $=
      ( syl5 impcom ) CADABCDEFGH $.
      $( [12-May-2011] $) $( [1-Feb-2008] $)
  $}

  ${
    syldan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    syldan.2 $e |- ( ( ph /\ ch ) -> th ) $.
    $( A syllogism deduction with conjoined antecents.  (The proof was
       shortened by Wolf Lammen, 6-Apr-2013.) $)
    syldan $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa expcom adantrd mpcom ) CABGDECADBACDFHIJ $.
      $( [6-Apr-2013] $) $( [24-Feb-2005] $)
  $}

  ${
    sylan.1 $e |- ( ph -> ps ) $.
    sylan.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference.  (The proof was shortened by Wolf Lammen,
       22-Nov-2012.) $)
    sylan $p |- ( ( ph /\ ch ) -> th ) $=
      ( expcom mpan9 ) ABCDEBCDFGH $.
      $( [22-Nov-2012] $) $( [21-Apr-1994] $)
  $}

  ${
    sylanb.1 $e |- ( ph <-> ps ) $.
    sylanb.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylanb $p |- ( ( ph /\ ch ) -> th ) $=
      ( biimpi sylan ) ABCDABEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    sylanbr.1 $e |- ( ps <-> ph ) $.
    sylanbr.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylanbr $p |- ( ( ph /\ ch ) -> th ) $=
      ( biimpri sylan ) ABCDBAEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    sylan2.1 $e |- ( ph -> ch ) $.
    sylan2.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference.  (The proof was shortened by Wolf Lammen,
       22-Nov-2012.) $)
    sylan2 $p |- ( ( ps /\ ph ) -> th ) $=
      ( adantl syldan ) BACDACBEGFH $.
      $( [22-Nov-2012] $) $( [21-Apr-1994] $)
  $}

  ${
    sylan2b.1 $e |- ( ph <-> ch ) $.
    sylan2b.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylan2b $p |- ( ( ps /\ ph ) -> th ) $=
      ( biimpi sylan2 ) ABCDACEGFH $.
      $( [21-Apr-1994] $)
  $}

  ${
    sylan2br.1 $e |- ( ch <-> ph ) $.
    sylan2br.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylan2br $p |- ( ( ps /\ ph ) -> th ) $=
      ( biimpri sylan2 ) ABCDCAEGFH $.
      $( [21-Apr-1994] $)
  $}

  ${
    syl2an.1 $e |- ( ph -> ps ) $.
    syl2an.2 $e |- ( ta -> ch ) $.
    syl2an.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A double syllogism inference. $)
    syl2an $p |- ( ( ph /\ ta ) -> th ) $=
      ( sylan sylan2 ) EACDGABCDFHIJ $.
      $( [31-Jan-1997] $)

    $( A double syllogism inference. $)
    syl2anr $p |- ( ( ta /\ ph ) -> th ) $=
      ( syl2an ancoms ) AEDABCDEFGHIJ $.
      $( [17-Sep-2013] $)
  $}

  ${
    syl2anb.1 $e |- ( ph <-> ps ) $.
    syl2anb.2 $e |- ( ta <-> ch ) $.
    syl2anb.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A double syllogism inference. $)
    syl2anb $p |- ( ( ph /\ ta ) -> th ) $=
      ( sylanb sylan2b ) EACDGABCDFHIJ $.
      $( [29-Jul-1999] $)
  $}

  ${
    syl2anbr.1 $e |- ( ps <-> ph ) $.
    syl2anbr.2 $e |- ( ch <-> ta ) $.
    syl2anbr.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A double syllogism inference. $)
    syl2anbr $p |- ( ( ph /\ ta ) -> th ) $=
      ( sylanbr sylan2br ) EACDGABCDFHIJ $.
      $( [29-Jul-1999] $)
  $}

  ${
    syland.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syland.2 $e |- ( ph -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism deduction. $)
    syland $p |- ( ph -> ( ( ps /\ th ) -> ta ) ) $=
      ( wi exp3a syld imp3a ) ABDEABCDEHFACDEGIJK $.
      $( [15-Dec-2004] $)
  $}

  ${
    sylan2d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan2d.2 $e |- ( ph -> ( ( th /\ ch ) -> ta ) ) $.
    $( A syllogism deduction. $)
    sylan2d $p |- ( ph -> ( ( th /\ ps ) -> ta ) ) $=
      ( ancomsd syland ) ABDEABCDEFADCEGHIH $.
      $( [15-Dec-2004] $)
  $}

  ${
    syl2and.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl2and.2 $e |- ( ph -> ( th -> ta ) ) $.
    syl2and.3 $e |- ( ph -> ( ( ch /\ ta ) -> et ) ) $.
    $( A syllogism deduction. $)
    syl2and $p |- ( ph -> ( ( ps /\ th ) -> et ) ) $=
      ( sylan2d syland ) ABCDFGADECFHIJK $.
      $( [15-Dec-2004] $)
  $}

  ${
    biimpa.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Inference from a logical equivalence. $)
    biimpa $p |- ( ( ph /\ ps ) -> ch ) $=
      ( biimpd imp ) ABCABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimpar $p |- ( ( ph /\ ch ) -> ps ) $=
      ( biimprd imp ) ACBABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimpac $p |- ( ( ps /\ ph ) -> ch ) $=
      ( biimpcd imp ) BACABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimparc $p |- ( ( ch /\ ph ) -> ps ) $=
      ( biimprcd imp ) CABABCDEF $.
      $( [3-May-1994] $)
  $}

  $( Negated conjunction in terms of disjunction (DeMorgan's law).  Theorem
     *4.51 of [WhiteheadRussell] p. 120.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  ianor $p |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wa wn wi wo imnan pm4.62 bitr3i ) ABCDABDZEADJFABGABHI $.
    $( [3-Nov-2012] $) $( [5-Aug-1993] $)

  $( Conjunction in terms of disjunction (DeMorgan's law).  Theorem *4.5 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     3-Nov-2012.) $)
  anor $p |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) $=
    ( wn wo wa ianor bicomi con2bii ) ACBCDZABEZJCIABFGH $.
    $( [3-Nov-2012] $) $( [5-Aug-1993] $)

  $( Negated disjunction in terms of conjunction (DeMorgan's law).  Compare
     Theorem *4.56 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  ioran $p |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wn wi wa wo pm4.61 pm4.64 xchnxbi ) ACZBDJBCEABFJBGABHI $.
    $( [28-Sep-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ ioran as of 28-Sep-2014. $)
  ioranOLD $p |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wo wn wi wa df-or notbii annim bitr4i ) ABCZDADZBEZDLBDFKMABGHLBIJ $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.52 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Wolf Lammen, 5-Nov-2012.) $)
  pm4.52 $p |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) $=
    ( wn wa wi wo annim imor xchbinx ) ABCDABEACBFABGABHI $.
    $( [5-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.53 of [WhiteheadRussell] p. 120. $)
  pm4.53 $p |- ( -. ( ph /\ -. ps ) <-> ( -. ph \/ ps ) ) $=
    ( wn wo wa pm4.52 con2bii bicomi ) ACBDZABCEZCJIABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *4.54 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Wolf Lammen, 5-Nov-2012.) $)
  pm4.54 $p |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) $=
    ( wn wa wi wo df-an pm4.66 xchbinx ) ACZBDJBCZEAKFJBGABHI $.
    $( [28-Sep-2014] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.54 as of 28-Sep-2014. $)
  pm4.54OLD $p |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) $=
    ( wn wa wi wo pm4.67 pm4.66 notbii bitr3i ) ACZBDKBCZEZCALFZCABGMNABHIJ $.
    $( [5-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.55 of [WhiteheadRussell] p. 120. $)
  pm4.55 $p |- ( -. ( -. ph /\ ps ) <-> ( ph \/ -. ps ) ) $=
    ( wn wo wa pm4.54 con2bii bicomi ) ABCDZACBEZCJIABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *4.56 of [WhiteheadRussell] p. 120. $)
  pm4.56 $p |- ( ( -. ph /\ -. ps ) <-> -. ( ph \/ ps ) ) $=
    ( wo wn wa ioran bicomi ) ABCDADBDEABFG $.
    $( [3-Jan-2005] $)

  $( Disjunction in terms of conjunction (DeMorgan's law).  Compare Theorem
     *4.57 of [WhiteheadRussell] p. 120.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  oran $p |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) $=
    ( wn wa wo pm4.56 con2bii ) ACBCDABEABFG $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.57 of [WhiteheadRussell] p. 120. $)
  pm4.57 $p |- ( -. ( -. ph /\ -. ps ) <-> ( ph \/ ps ) ) $=
    ( wo wn wa oran bicomi ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.1 of [WhiteheadRussell] p. 111. $)
  pm3.1 $p |- ( ( ph /\ ps ) -> -. ( -. ph \/ -. ps ) ) $=
    ( wa wn wo anor biimpi ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.11 of [WhiteheadRussell] p. 111. $)
  pm3.11 $p |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) $=
    ( wa wn wo anor biimpri ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.12 of [WhiteheadRussell] p. 111. $)
  pm3.12 $p |- ( ( -. ph \/ -. ps ) \/ ( ph /\ ps ) ) $=
    ( wn wo wa pm3.11 orri ) ACBCDABEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.13 of [WhiteheadRussell] p. 111. $)
  pm3.13 $p |- ( -. ( ph /\ ps ) -> ( -. ph \/ -. ps ) ) $=
    ( wn wo wa pm3.11 con1i ) ACBCDABEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.14 of [WhiteheadRussell] p. 111. $)
  pm3.14 $p |- ( ( -. ph \/ -. ps ) -> -. ( ph /\ ps ) ) $=
    ( wa wn wo pm3.1 con2i ) ABCADBDEABFG $.
    $( [3-Jan-2005] $)

  $( Introduction of antecedent as conjunct.  Theorem *4.73 of
     [WhiteheadRussell] p. 121. $)
  iba $p |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) $=
    ( wa pm3.21 simpl impbid1 ) ABBACABDBAEF $.
    $( [24-Mar-2013] $) $( [30-Mar-1994] $)

  $( Introduction of antecedent as conjunct. $)
  ibar $p |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) $=
    ( wa pm3.2 simpr impbid1 ) ABABCABDABEF $.
    $( [24-Mar-2013] $) $( [5-Dec-1995] $)
  ${
    biantru.1 $e |- ph $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantru $p |- ( ps <-> ( ps /\ ph ) ) $=
      ( wa wb iba ax-mp ) ABBADECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    biantrur.1 $e |- ph $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantrur $p |- ( ps <-> ( ph /\ ps ) ) $=
      ( wa wb ibar ax-mp ) ABABDECABFG $.
      $( [3-Aug-1994] $)
  $}

  ${
    biantrud.1 $e |- ( ph -> ps ) $.
    $( A wff is equivalent to its conjunction with truth.  (The proof was
       shortened by Wolf Lammen, 23-Oct-2013.) $)
    biantrud $p |- ( ph -> ( ch <-> ( ch /\ ps ) ) ) $=
      ( wa wb iba syl ) ABCCBEFDBCGH $.
      $( [23-Oct-2013] $) $( [2-Aug-1994] $)

    $( A wff is equivalent to its conjunction with truth.  (The proof was
       shortened by Andrew Salmon, 7-May-2011.) $)
    biantrurd $p |- ( ph -> ( ch <-> ( ps /\ ch ) ) ) $=
      ( wa wb ibar syl ) ABCBCEFDBCGH $.
      $( [12-May-2011] $) $( [1-May-1995] $)
  $}

  ${
    jaao.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jaao.2 $e |- ( th -> ( ta -> ch ) ) $.
    $( Inference conjoining and disjoining the antecedents of two
       implications. $)
    jaao $p |- ( ( ph /\ th ) -> ( ( ps \/ ta ) -> ch ) ) $=
      ( wa wi adantr adantl jaod ) ADHBCEABCIDFJDECIAGKL $.
      $( [30-Sep-1999] $)

    $( Inference disjoining and conjoining the antecedents of two
       implications.  (Contributed by Stefan Allan, 1-Nov-2008.) $)
    jaoa $p |- ( ( ph \/ th ) -> ( ( ps /\ ta ) -> ch ) ) $=
      ( wa wi adantrd adantld jaoi ) ABEHCIDABCEFJDECBGKL $.
      $( [1-Nov-2008] $)
  $}

  $( Theorem *3.44 of [WhiteheadRussell] p. 113.  (The proof was shortened by
     Wolf Lammen, 3-Oct-2013.) $)
  pm3.44 $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) ->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wi id jaao ) BADZBACADZCGEHEF $.
    $( [3-Oct-2013] $) $( [3-Jan-2005] $)

  $( Disjunction of antecedents.  Compare Theorem *3.44 of [WhiteheadRussell]
     p. 113.  (The proof was shortened by Wolf Lammen, 4-Apr-2013.) $)
  jao $p |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) $=
    ( wi wo pm3.44 ex ) ABDCBDACEBDBACFG $.
    $( [4-Apr-2013] $) $( [5-Apr-1994] $)

  $( Axiom *1.2 (Taut) of [WhiteheadRussell] p. 96. $)
  pm1.2 $p |- ( ( ph \/ ph ) -> ph ) $=
    ( id jaoi ) AAAABZDC $.
    $( [10-Mar-2013] $) $( [3-Jan-2005] $)

  $( Idempotent law for disjunction.  Theorem *4.25 of [WhiteheadRussell]
     p. 117.  (The proof was shortened by Andrew Salmon, 16-Apr-2011.)  (The
     proof was shortened by Wolf Lammen, 10-Mar-2013.) $)
  oridm $p |- ( ( ph \/ ph ) <-> ph ) $=
    ( wo pm1.2 pm2.07 impbii ) AABAACADE $.
    $( [10-Mar-2013] $) $( [5-Aug-1993] $)

  $( Theorem *4.25 of [WhiteheadRussell] p. 117. $)
  pm4.25 $p |- ( ph <-> ( ph \/ ph ) ) $=
    ( wo oridm bicomi ) AABAACD $.
    $( [3-Jan-2005] $)

  ${
    orim12i.1 $e |- ( ph -> ps ) $.
    orim12i.2 $e |- ( ch -> th ) $.
    $( Disjoin antecedents and consequents of two premises.  (The proof was
       shortened by Wolf Lammen, 25-Jul-2012.) $)
    orim12i $p |- ( ( ph \/ ch ) -> ( ps \/ th ) ) $=
      ( wo orcd olcd jaoi ) ABDGCABDEHCDBFIJ $.
      $( [25-Jul-2012] $) $( [6-Jun-1994] $)
  $}

  ${
    orim1i.1 $e |- ( ph -> ps ) $.
    $( Introduce disjunct to both sides of an implication. $)
    orim1i $p |- ( ( ph \/ ch ) -> ( ps \/ ch ) ) $=
      ( id orim12i ) ABCCDCEF $.
      $( [6-Jun-1994] $)

    $( Introduce disjunct to both sides of an implication. $)
    orim2i $p |- ( ( ch \/ ph ) -> ( ch \/ ps ) ) $=
      ( id orim12i ) CCABCEDF $.
      $( [6-Jun-1994] $)
  $}

  ${
    orbi2i.1 $e |- ( ph <-> ps ) $.
    $( Inference adding a left disjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 12-Dec-2012.) $)
    orbi2i $p |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) $=
      ( wo biimpi orim2i biimpri impbii ) CAECBEABCABDFGBACABDHGI $.
      $( [12-Dec-2012] $) $( [5-Aug-1993] $)

    $( Inference adding a right disjunct to both sides of a logical
       equivalence. $)
    orbi1i $p |- ( ( ph \/ ch ) <-> ( ps \/ ch ) ) $=
      ( wo orcom orbi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    orbi12i.1 $e |- ( ph <-> ps ) $.
    orbi12i.2 $e |- ( ch <-> th ) $.
    $( Infer the disjunction of two equivalences. $)
    orbi12i $p |- ( ( ph \/ ch ) <-> ( ps \/ th ) ) $=
      ( wo orbi2i orbi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Axiom *1.5 (Assoc) of [WhiteheadRussell] p. 96. $)
  pm1.5 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo orc olcd olc orim2i jaoi ) ABACDZDBCDAJBACEFCJBCAGHI $.
    $( [3-Jan-2005] $)

  $( Swap two disjuncts.  (The proof was shortened by Wolf Lammen,
     14-Nov-2012.) $)
  or12 $p |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo pm1.5 impbii ) ABCDDBACDDABCEBACEF $.
    $( [14-Nov-2012] $) $( [5-Aug-1993] $)

  $( Associative law for disjunction.  Theorem *4.33 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  orass $p |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) $=
    ( wo orcom or12 orbi2i 3bitri ) ABDZCDCIDACBDZDABCDZDICECABFJKACBEGH $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Theorem *2.31 of [WhiteheadRussell] p. 104. $)
  pm2.31 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ( ph \/ ps ) \/ ch ) ) $=
    ( wo orass biimpri ) ABDCDABCDDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.32 of [WhiteheadRussell] p. 105. $)
  pm2.32 $p |- ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ( ps \/ ch ) ) ) $=
    ( wo orass biimpi ) ABDCDABCDDABCEF $.
    $( [3-Jan-2005] $)

  $( A rearrangement of disjuncts.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  or32 $p |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ps ) ) $=
    ( wo orass or12 orcom 3bitri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [18-Oct-1995] $)

  $( Rearrangement of 4 disjuncts. $)
  or4 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <->
                ( ( ph \/ ch ) \/ ( ps \/ th ) ) ) $=
    ( wo or12 orbi2i orass 3bitr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHAC
    LHI $.
    $( [12-Aug-1994] $)

  $( Rearrangement of 4 disjuncts. $)
  or42 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <->
                 ( ( ph \/ ch ) \/ ( th \/ ps ) ) ) $=
    ( wo or4 orcom orbi2i bitri ) ABECDEEACEZBDEZEJDBEZEABCDFKLJBDGHI $.
    $( [10-Jan-2005] $)

  $( Distribution of disjunction over disjunction. $)
  orordi $p |- ( ( ph \/ ( ps \/ ch ) ) <->
               ( ( ph \/ ps ) \/ ( ph \/ ch ) ) ) $=
    ( wo oridm orbi1i or4 bitr3i ) ABCDZDAADZIDABDACDDJAIAEFAABCGH $.
    $( [25-Feb-1995] $)

  $( Distribution of disjunction over disjunction. $)
  orordir $p |- ( ( ( ph \/ ps ) \/ ch ) <->
               ( ( ph \/ ch ) \/ ( ps \/ ch ) ) ) $=
    ( wo oridm orbi2i or4 bitr3i ) ABDZCDICCDZDACDBCDDJCICEFABCCGH $.
    $( [25-Feb-1995] $)

  ${
    jca.1 $e |- ( ph -> ps ) $.
    jca.2 $e |- ( ph -> ch ) $.
    $( Deduce conjunction of the consequents of two implications ("join
       consequents with 'and'").  (The proof was shortened by Wolf Lammen,
       25-Oct-2012.) $)
    jca $p |- ( ph -> ( ps /\ ch ) ) $=
      ( wa pm3.2 sylc ) ABCBCFDEBCGH $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    jcad.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jcad.2 $e |- ( ph -> ( ps -> th ) ) $.
    $( Deduction conjoining the consequents of two implications.  (The proof
       was shortened by Wolf Lammen, 23-Jul-2013.) $)
    jcad $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( wa pm3.2 syl6c ) ABCDCDGEFCDHI $.
      $( [23-Jul-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    jca31.1 $e |- ( ph -> ps ) $.
    jca31.2 $e |- ( ph -> ch ) $.
    jca31.3 $e |- ( ph -> th ) $.
    $( Join three consequents.  (Contributed by Jeff Hankins, 1-Aug-2009.) $)
    jca31 $p |- ( ph -> ( ( ps /\ ch ) /\ th ) ) $=
      ( wa jca ) ABCHDABCEFIGI $.
      $( [1-Aug-2009] $)

    $( Join three consequents.  (Contributed by FL, 1-Aug-2009.) $)
    jca32 $p |- ( ph -> ( ps /\ ( ch /\ th ) ) ) $=
      ( wa jca ) ABCDHEACDFGII $.
      $( [1-Aug-2009] $)
  $}

  ${
    jcai.1 $e |- ( ph -> ps ) $.
    jcai.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction replacing implication with conjunction. $)
    jcai $p |- ( ph -> ( ps /\ ch ) ) $=
      ( mpd jca ) ABCDABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    jctil.1 $e |- ( ph -> ps ) $.
    jctil.2 $e |- ch $.
    $( Inference conjoining a theorem to left of consequent in an
       implication. $)
    jctil $p |- ( ph -> ( ch /\ ps ) ) $=
      ( a1i jca ) ACBCAEFDG $.
      $( [31-Dec-1993] $)

    $( Inference conjoining a theorem to right of consequent in an
       implication. $)
    jctir $p |- ( ph -> ( ps /\ ch ) ) $=
      ( a1i jca ) ABCDCAEFG $.
      $( [31-Dec-1993] $)
  $}

  ${
    jctl.1 $e |- ps $.
    $( Inference conjoining a theorem to the left of a consequent.  (The proof
       was shortened by Wolf Lammen, 24-Oct-2012.) $)
    jctl $p |- ( ph -> ( ps /\ ph ) ) $=
      ( id jctil ) AABADCE $.
      $( [25-Oct-2012] $) $( [31-Dec-1993] $)

    $( Inference conjoining a theorem to the right of a consequent.  (The proof
       was shortened by Wolf Lammen, 24-Oct-2012.) $)
    jctr $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id jctir ) AABADCE $.
      $( [25-Oct-2012] $) $( [18-Aug-1993] $)
  $}

  ${
    jctild.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jctild.2 $e |- ( ph -> th ) $.
    $( Deduction conjoining a theorem to left of consequent in an
       implication. $)
    jctild $p |- ( ph -> ( ps -> ( th /\ ch ) ) ) $=
      ( a1d jcad ) ABDCADBFGEH $.
      $( [21-Apr-2005] $)
  $}

  ${
    jctird.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jctird.2 $e |- ( ph -> th ) $.
    $( Deduction conjoining a theorem to right of consequent in an
       implication. $)
    jctird $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( a1d jcad ) ABCDEADBFGH $.
      $( [21-Apr-2005] $)
  $}

  $( Conjoin antecedent to left of consequent. $)
  ancl $p |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) $=
    ( wa pm3.2 a2i ) ABABCABDE $.
    $( [15-Aug-1994] $)

  $( Conjoin antecedent to left of consequent.  Theorem *4.7 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     24-Mar-2013.) $)
  anclb $p |- ( ( ph -> ps ) <-> ( ph -> ( ph /\ ps ) ) ) $=
    ( wa ibar pm5.74i ) ABABCABDE $.
    $( [24-Mar-2013] $) $( [25-Jul-1999] $)

  $( Theorem *5.42 of [WhiteheadRussell] p. 125. $)
  pm5.42 $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ph -> ( ps -> ( ph /\ ch ) ) ) ) $=
    ( wi wa ibar imbi2d pm5.74i ) ABCDBACEZDACIBACFGH $.
    $( [3-Jan-2005] $)

  $( Conjoin antecedent to right of consequent. $)
  ancr $p |- ( ( ph -> ps ) -> ( ph -> ( ps /\ ph ) ) ) $=
    ( wa pm3.21 a2i ) ABBACABDE $.
    $( [15-Aug-1994] $)

  $( Conjoin antecedent to right of consequent.  (The proof was shortened by
     Wolf Lammen, 24-Mar-2013.) $)
  ancrb $p |- ( ( ph -> ps ) <-> ( ph -> ( ps /\ ph ) ) ) $=
    ( wa iba pm5.74i ) ABBACABDE $.
    $( [24-Mar-2013] $) $( [25-Jul-1999] $)

  ${
    ancli.1 $e |- ( ph -> ps ) $.
    $( Deduction conjoining antecedent to left of consequent. $)
    ancli $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id jca ) AABADCE $.
      $( [12-Aug-1993] $)
  $}

  ${
    ancri.1 $e |- ( ph -> ps ) $.
    $( Deduction conjoining antecedent to right of consequent. $)
    ancri $p |- ( ph -> ( ps /\ ph ) ) $=
      ( id jca ) ABACADE $.
      $( [15-Aug-1994] $)
  $}

  ${
    ancld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to left of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 1-Nov-2012.) $)
    ancld $p |- ( ph -> ( ps -> ( ps /\ ch ) ) ) $=
      ( idd jcad ) ABBCABEDF $.
      $( [1-Nov-2012] $) $( [15-Aug-1994] $)
  $}

  ${
    ancrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to right of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 1-Nov-2012.) $)
    ancrd $p |- ( ph -> ( ps -> ( ch /\ ps ) ) ) $=
      ( idd jcad ) ABCBDABEF $.
      $( [1-Nov-2012] $) $( [15-Aug-1994] $)
  $}

  $( Conjoin antecedent to left of consequent in nested implication.  (The
     proof was shortened by Wolf Lammen, 14-Jul-2013.) $)
  anc2l $p |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) $=
    ( wi wa pm5.42 biimpi ) ABCDDABACEDDABCFG $.
    $( [14-Jul-2013] $) $( [10-Aug-1994] $)

  $( Conjoin antecedent to right of consequent in nested implication. $)
  anc2r $p |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ch /\ ph ) ) ) ) $=
    ( wi wa pm3.21 imim2d a2i ) ABCDBCAEZDACIBACFGH $.
    $( [15-Aug-1994] $)

  ${
    anc2li.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to left of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 7-Dec-2012.) $)
    anc2li $p |- ( ph -> ( ps -> ( ph /\ ch ) ) ) $=
      ( id jctild ) ABCADAEF $.
      $( [7-Dec-2012] $) $( [10-Aug-1994] $)
  $}

  ${
    anc2ri.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to right of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 7-Dec-2012.) $)
    anc2ri $p |- ( ph -> ( ps -> ( ch /\ ph ) ) ) $=
      ( id jctird ) ABCADAEF $.
      $( [7-Dec-2012] $) $( [15-Aug-1994] $)
  $}

  $( Theorem *3.41 of [WhiteheadRussell] p. 113. $)
  pm3.41 $p |- ( ( ph -> ch ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa simpl imim1i ) ABDACABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *3.42 of [WhiteheadRussell] p. 113. $)
  pm3.42 $p |- ( ( ps -> ch ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa simpr imim1i ) ABDBCABEF $.
    $( [3-Jan-2005] $)

  $( Conjunction implies implication.  Theorem *3.4 of [WhiteheadRussell]
     p. 113. $)
  pm3.4 $p |- ( ( ph /\ ps ) -> ( ph -> ps ) ) $=
    ( wa simpr a1d ) ABCBAABDE $.
    $( [31-Jul-1995] $)

  $( Conjunction with implication.  Compare Theorem *4.45 of [WhiteheadRussell]
     p. 119. $)
  pm4.45im $p |- ( ph <-> ( ph /\ ( ps -> ph ) ) ) $=
    ( wi wa ax-1 ancli simpl impbii ) AABACZDAIABEFAIGH $.
    $( [17-May-1998] $)

  ${
    anim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    anim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Conjoin antecedents and consequents in a deduction.  (The proof was
       shortened by Wolf Lammen, 18-Dec-2013.) $)
    anim12d $p |- ( ph -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) $=
      ( wa idd syl2and ) ABCDECEHZFGAKIJ $.
      $( [18-Dec-2013] $) $( [3-Apr-1994] $)
  $}

  ${
    anim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Add a conjunct to right of antecedent and consequent in a deduction. $)
    anim1d $p |- ( ph -> ( ( ps /\ th ) -> ( ch /\ th ) ) ) $=
      ( idd anim12d ) ABCDDEADFG $.
      $( [3-Apr-1994] $)

    $( Add a conjunct to left of antecedent and consequent in a deduction. $)
    anim2d $p |- ( ph -> ( ( th /\ ps ) -> ( th /\ ch ) ) ) $=
      ( idd anim12d ) ADDBCADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    anim12i.1 $e |- ( ph -> ps ) $.
    anim12i.2 $e |- ( ch -> th ) $.
    $( Conjoin antecedents and consequents of two premises.  (The proof was
       shortened by Wolf Lammen, 14-Dec-2013.) $)
    anim12i $p |- ( ( ph /\ ch ) -> ( ps /\ th ) ) $=
      ( wa id syl2an ) ABDBDGZCEFJHI $.
      $( [14-Dec-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    anim1i.1 $e |- ( ph -> ps ) $.
    $( Introduce conjunct to both sides of an implication. $)
    anim1i $p |- ( ( ph /\ ch ) -> ( ps /\ ch ) ) $=
      ( id anim12i ) ABCCDCEF $.
      $( [5-Aug-1993] $)

    $( Introduce conjunct to both sides of an implication. $)
    anim2i $p |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) $=
      ( id anim12i ) CCABCEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    anim12ii.1 $e |- ( ph -> ( ps -> ch ) ) $.
    anim12ii.2 $e |- ( th -> ( ps -> ta ) ) $.
    $( Conjoin antecedents and consequents in a deduction.  (The proof was
       shortened by Wolf Lammen, 19-Jul-2013.) $)
    anim12ii $p |- ( ( ph /\ th ) -> ( ps -> ( ch /\ ta ) ) ) $=
      ( wa wi adantr adantl jcad ) ADHBCEABCIDFJDBEIAGKL $.
      $( [19-Jul-2013] $) $( [11-Nov-2007] $)
  $}

  $( Theorem *3.47 of [WhiteheadRussell] p. 113.  It was proved by Leibniz, and
     it evidently pleased him enough to call it 'praeclarum theorema' (splendid
     theorem).  (The proof was shortened by Wolf Lammen, 7-Apr-2013.) $)
  prth $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
              ( ( ph /\ ch ) -> ( ps /\ th ) ) ) $=
    ( wi wa simpl simpr anim12d ) ABEZCDEZFABCDJKGJKHI $.
    $( [7-Apr-2013] $) $( [12-Aug-1993] $)

  $( Theorem *2.3 of [WhiteheadRussell] p. 104. $)
  pm2.3 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ph \/ ( ch \/ ps ) ) ) $=
    ( wo pm1.4 orim2i ) BCDCBDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.41 of [WhiteheadRussell] p. 106. $)
  pm2.41 $p |- ( ( ps \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) $=
    ( wo olc id jaoi ) BABCZGBADGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.42 of [WhiteheadRussell] p. 106. $)
  pm2.42 $p |- ( ( -. ph \/ ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wn wi pm2.21 id jaoi ) ACABDZHABEHFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.4 of [WhiteheadRussell] p. 106. $)
  pm2.4 $p |- ( ( ph \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) $=
    ( wo orc id jaoi ) AABCZGABDGEF $.
    $( [3-Jan-2005] $)

  ${
    pm2.65da.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.65da.2 $e |- ( ( ph /\ ps ) -> -. ch ) $.
    $( Deduction rule for proof by contradiction. $)
    pm2.65da $p |- ( ph -> -. ps ) $=
      ( ex wn pm2.65d ) ABCABCDFABCGEFH $.
      $( [12-Jun-2014] $)
  $}

  $( Theorem *4.44 of [WhiteheadRussell] p. 119. $)
  pm4.44 $p |- ( ph <-> ( ph \/ ( ph /\ ps ) ) ) $=
    ( wa wo orc id simpl jaoi impbii ) AAABCZDAJEAAJAFABGHI $.
    $( [3-Jan-2005] $)

  $( Theorem *4.14 of [WhiteheadRussell] p. 117.  (The proof was shortened by
     Wolf Lammen, 23-Oct-2012.) $)
  pm4.14 $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wi wn wa con34b imbi2i impexp 3bitr4i ) ABCDZDACEZBEZDZDABFCDALFMDKNABCGH
    ABCIALMIJ $.
    $( [23-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *3.37 (Transp) of [WhiteheadRussell] p. 112.  (The proof was
     shortened by Wolf Lammen, 23-Oct-2012.) $)
  pm3.37 $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wa wi wn pm4.14 biimpi ) ABDCEACFDBFEABCGH $.
    $( [23-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem to move a conjunct in and out of a negation. $)
  nan $p |- ( ( ph -> -. ( ps /\ ch ) ) <-> ( ( ph /\ ps ) -> -. ch ) ) $=
    ( wa wn wi impexp imnan imbi2i bitr2i ) ABDCEZFABKFZFABCDEZFABKGLMABCHIJ $.
    $( [9-Nov-2003] $)

  $( Theorem *4.15 of [WhiteheadRussell] p. 117.  (The proof was shortened by
     Wolf Lammen, 18-Nov-2012.) $)
  pm4.15 $p |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ( ps /\ ch ) -> -. ph ) ) $=
    ( wa wn wi con2b nan bitr2i ) BCDZAEFAJEFABDCEFJAGABCHI $.
    $( [18-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.78 of [WhiteheadRussell] p. 121.  (The proof was shortened by
     Wolf Lammen, 19-Nov-2012.) $)
  pm4.78 $p |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <->
                ( ph -> ( ps \/ ch ) ) ) $=
    ( wn wo wi orordi imor orbi12i 3bitr4ri ) ADZBCEZEKBEZKCEZEALFABFZACFZEKBCG
    ALHOMPNABHACHIJ $.
    $( [19-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.79 of [WhiteheadRussell] p. 121.  (The proof was shortened by
     Wolf Lammen, 27-Jun-2013.) $)
  pm4.79 $p |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <->
                ( ( ps /\ ch ) -> ph ) ) $=
    ( wi wo wa id jaoa wn simplim pm3.3 syl5 orrd impbii ) BADZCADZEBCFADZOBAPC
    OGPGHQOPOIBQPBAJBCAKLMN $.
    $( [27-Jun-2013] $) $( [3-Jan-2005] $)

  $( Theorem *4.87 of [WhiteheadRussell] p. 122.  (The proof was shortened by
     Eric Schmidt, 26-Oct-2006.) $)
  pm4.87 $p |- ( ( ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) /\
                ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ) /\
                ( ( ps -> ( ph -> ch ) ) <-> ( ( ps /\ ph ) -> ch ) ) ) $=
    ( wa wi wb impexp bi2.04 pm3.2i bicomi ) ABDCEABCEEZFZKBACEEZFZDMBADCEZFLNA
    BCGABCHIOMBACGJI $.
    $( [27-Oct-2006] $) $( [3-Jan-2005] $)

  $( Theorem *3.33 (Syll) of [WhiteheadRussell] p. 112. $)
  pm3.33 $p |- ( ( ( ph -> ps ) /\ ( ps -> ch ) ) -> ( ph -> ch ) ) $=
    ( wi imim1 imp ) ABDBCDACDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *3.34 (Syll) of [WhiteheadRussell] p. 112. $)
  pm3.34 $p |- ( ( ( ps -> ch ) /\ ( ph -> ps ) ) -> ( ph -> ch ) ) $=
    ( wi imim2 imp ) BCDABDACDBCAEF $.
    $( [3-Jan-2005] $)

  $( Conjunctive detachment.  Theorem *3.35 of [WhiteheadRussell] p. 112. $)
  pm3.35 $p |- ( ( ph /\ ( ph -> ps ) ) -> ps ) $=
    ( wi pm2.27 imp ) AABCBABDE $.
    $( [14-Dec-2002] $)

  $( Theorem *5.31 of [WhiteheadRussell] p. 125. $)
  pm5.31 $p |- ( ( ch /\ ( ph -> ps ) ) -> ( ph -> ( ps /\ ch ) ) ) $=
    ( wi wa pm3.21 imim2d imp ) CABDABCEZDCBIACBFGH $.
    $( [3-Jan-2005] $)

  ${
    imp4.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( An importation inference. $)
    imp4a $p |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) $=
      ( wi wa impexp syl6ibr ) ABCDEGGCDHEGFCDEIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4b $p |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) $=
      ( wa wi imp4a imp ) ABCDGEHABCDEFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4c $p |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) $=
      ( wa wi imp3a ) ABCGDEABCDEHFII $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4d $p |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) $=
      ( wa imp4a imp3a ) ABCDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp41 $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) $=
      ( wa wi imp imp31 ) ABGCDEABCDEHHFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp42 $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $=
      ( wa wi imp32 imp ) ABCGGDEABCDEHFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp43 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa imp4b imp ) ABGCDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp44 $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) $=
      ( wa imp4c imp ) ABCGDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp45 $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) $=
      ( wa imp4d imp ) ABCDGGEABCDEFHI $.
      $( [26-Apr-1994] $)

  $}

  ${
    imp5.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $.
    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5a $p |- ( ph -> ( ps -> ( ch -> ( ( th /\ ta ) -> et ) ) ) ) $=
      ( wi wa pm3.31 syl8 ) ABCDEFHHDEIFHGDEFJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5d $p |- ( ( ( ph /\ ps ) /\ ch ) -> ( ( th /\ ta ) -> et ) ) $=
      ( wa wi imp31 imp3a ) ABHCHDEFABCDEFIIGJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5g $p |- ( ( ph /\ ps ) -> ( ( ( ch /\ th ) /\ ta ) -> et ) ) $=
      ( wa wi imp imp4c ) ABHCDEFABCDEFIIIGJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp55 $p |- ( ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) /\ ta ) -> et ) $=
      ( wa wi imp4a imp42 ) ABCDHEFABCDEFIGJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp511 $p |- ( ( ph /\ ( ( ps /\ ( ch /\ th ) ) /\ ta ) ) -> et ) $=
      ( wa wi imp4a imp44 ) ABCDHEFABCDEFIGJK $.
      $( [7-Jul-2009] $)
  $}

  ${
    expimpd.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Exportation followed by a deduction version of importation. $)
    expimpd $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( wi ex imp3a ) ABCDABCDFEGH $.
      $( [6-Sep-2008] $)
  $}

  ${
    exp31.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An exportation inference. $)
    exp31 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi wa ex ) ABCDFABGCDEHH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp32.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An exportation inference. $)
    exp32 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wa ex exp3a ) ABCDABCFDEGH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4a.1 $e |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) $.
    $( An exportation inference. $)
    exp4a $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa wi impexp syl6ib ) ABCDGEHCDEHHFCDEIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4b.1 $e |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) $.
    $( An exportation inference.  (The proof was shortened by Wolf Lammen,
       23-Nov-2012.) $)
    exp4b $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa wi ex exp4a ) ABCDEABCDGEHFIJ $.
      $( [23-Nov-2012] $) $( [26-Apr-1994] $)
  $}

  ${
    exp4c.1 $e |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) $.
    $( An exportation inference. $)
    exp4c $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp3a ) ABCDEGABCHDEFII $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4d.1 $e |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) $.
    $( An exportation inference. $)
    exp4d $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa exp3a exp4a ) ABCDEABCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp41.1 $e |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) $.
    $( An exportation inference. $)
    exp41 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa ex exp31 ) ABCDEGABHCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp42.1 $e |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $.
    $( An exportation inference. $)
    exp42 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp31 exp3a ) ABCDEGABCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp43.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( An exportation inference. $)
    exp43 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa ex exp4b ) ABCDEABGCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp44.1 $e |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) $.
    $( An exportation inference. $)
    exp44 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp32 exp3a ) ABCDEGABCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp45.1 $e |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) $.
    $( An exportation inference. $)
    exp45 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa exp32 exp4a ) ABCDEABCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    expr.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Export a wff from a right conjunct.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    expr $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi exp32 imp ) ABCDFABCDEGH $.
      $( [21-Feb-2011] $) $( [28-Aug-2009] $)
  $}

  ${
    exp5c.1 $e |- ( ph -> ( ( ps /\ ch ) -> ( ( th /\ ta ) -> et ) ) ) $.
    $( An exportation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    exp5c $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi wa exp4a exp3a ) ABCDEFHHABCIDEFGJK $.
      $( [7-Jul-2009] $)
  $}

  ${
    exp53.1 $e |- ( ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) /\ ta ) -> et ) $.
    $( An exportation inference.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    exp53 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi wa ex exp43 ) ABCDEFHABICDIIEFGJK $.
      $( [21-Feb-2011] $) $( [7-Jul-2009] $)
  $}

  ${
    expl.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Export a wff from a left conjunct.  (Contributed by Jeff Hankins,
       28-Aug-2009.) $)
    expl $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( exp31 imp3a ) ABCDABCDEFG $.
      $( [28-Aug-2009] $)
  $}

  ${
    impr.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Import a wff into a right conjunct.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    impr $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( wi ex imp32 ) ABCDABCDFEGH $.
      $( [21-Feb-2011] $) $( [28-Aug-2009] $)
  $}

  ${
    impl.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Export a wff from a left conjunct.  (Contributed by Mario Carneiro,
       9-Jul-2014.) $)
    impl $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( exp3a imp31 ) ABCDABCDEFG $.
      $( [9-Jul-2014] $)
  $}

  ${
    impac.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Importation with conjunction in consequent. $)
    impac $p |- ( ( ph /\ ps ) -> ( ch /\ ps ) ) $=
      ( wa ancrd imp ) ABCBEABCDFG $.
      $( [9-Aug-1994] $)
  $}

  ${
    exbiri.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Inference form of ~ exbir .  This proof is ~ exbiriVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.)
       (The proof was shortened by Wolf Lammen, 27-Jan-2013.) $)
    exbiri $p |- ( ph -> ( ps -> ( th -> ch ) ) ) $=
      ( wa biimpar exp31 ) ABDCABFCDEGH $.
      $( [27-Jan-2013] $) $( [31-Dec-2011] $)
  $}

  ${
    pm3.26bda.1 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprbda $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa biimpa simpld ) ABFCDABCDFEGH $.
      $( [22-Oct-2007] $)

    $( Deduction eliminating a conjunct. $)
    simplbda $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa biimpa simprd ) ABFCDABCDFEGH $.
      $( [22-Oct-2007] $)
  $}

  ${
    pm3.26bi2.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct.  Automatically derived from
       ~ simplbi2VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    simplbi2 $p |- ( ps -> ( ch -> ph ) ) $=
      ( wa biimpri ex ) BCAABCEDFG $.
      $( [31-Dec-2011] $)
  $}

  $( A theorem similar to the standard definition of the biconditional.
     Definition of [Margaris] p. 49. $)
  dfbi2 $p |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) $=
    ( wb wi wn wa dfbi1 df-an bitr4i ) ABCABDZBADZEDEJKFABGJKHI $.
    $( [5-Aug-1993] $)

  $( Definition ~ df-bi rewritten in an abbreviated form to help intuitive
     understanding of that definition.  Note that it is a conjunction of two
     implications; one which asserts properties that follow from the
     biconditional and one which asserts properties that imply the
     biconditional. $)
  dfbi $p |- ( ( ( ph <-> ps ) -> ( ( ph -> ps ) /\ ( ps -> ph ) ) )
        /\ ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $=
    ( wb wi wa dfbi2 biimpi biimpri pm3.2i ) ABCZABDBADEZDKJDJKABFZGJKLHI $.
    $( [15-Aug-2008] $)

  $( Implication in terms of biconditional and conjunction.  Theorem *4.71 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     2-Dec-2012.) $)
  pm4.71 $p |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) $=
    ( wa wi wb simpl biantru anclb dfbi2 3bitr4i ) AABCZDZLKADZCABDAKEMLABFGABH
    AKIJ $.
    $( [2-Dec-2012] $) $( [5-Aug-1993] $)

  $( Implication in terms of biconditional and conjunction.  Theorem *4.71 of
     [WhiteheadRussell] p. 120 (with conjunct reversed). $)
  pm4.71r $p |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) $=
    ( wi wa wb pm4.71 ancom bibi2i bitri ) ABCAABDZEABADZEABFJKAABGHI $.
    $( [25-Jul-1999] $)

  ${
    pm4.71i.1 $e |- ( ph -> ps ) $.
    $( Inference converting an implication to a biconditional with
       conjunction.  Inference from Theorem *4.71 of [WhiteheadRussell]
       p. 120. $)
    pm4.71i $p |- ( ph <-> ( ph /\ ps ) ) $=
      ( wi wa wb pm4.71 mpbi ) ABDAABEFCABGH $.
      $( [4-Jan-2004] $)
  $}

  ${
    pm4.71ri.1 $e |- ( ph -> ps ) $.
    $( Inference converting an implication to a biconditional with
       conjunction.  Inference from Theorem *4.71 of [WhiteheadRussell] p. 120
       (with conjunct reversed). $)
    pm4.71ri $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wi wa wb pm4.71r mpbi ) ABDABAEFCABGH $.
      $( [1-Dec-2003] $)
  $}

  ${
    pm4.71rd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction converting an implication to a biconditional with
       conjunction.  Deduction from Theorem *4.71 of [WhiteheadRussell]
       p. 120. $)
    pm4.71rd $p |- ( ph -> ( ps <-> ( ch /\ ps ) ) ) $=
      ( wi wa wb pm4.71r sylib ) ABCEBCBFGDBCHI $.
      $( [10-Feb-2005] $)
  $}

  $( Distribution of implication over biconditional.  Theorem *5.32 of
     [WhiteheadRussell] p. 125. $)
  pm5.32 $p |- ( ( ph -> ( ps <-> ch ) ) <->
               ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) $=
    ( wb wi wn wa notbi imbi2i pm5.74 3bitri df-an bibi12i bitr4i ) ABCDZEZABFZ
    EZFZACFZEZFZDZABGZACGZDPAQTDZERUADUCOUFABCHIAQTJRUAHKUDSUEUBABLACLMN $.
    $( [1-Aug-1994] $)

  ${
    pm5.32i.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Distribution of implication over biconditional (inference rule). $)
    pm5.32i $p |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) $=
      ( wb wi wa pm5.32 mpbi ) ABCEFABGACGEDABCHI $.
      $( [1-Aug-1994] $)

    $( Distribution of implication over biconditional (inference rule). $)
    pm5.32ri $p |- ( ( ps /\ ph ) <-> ( ch /\ ph ) ) $=
      ( wa pm5.32i ancom 3bitr4i ) ABEACEBAECAEABCDFBAGCAGH $.
      $( [12-Mar-1995] $)
  $}

  ${
    pm5.32d.1 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32d $p |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) $=
      ( wb wi wa pm5.32 sylib ) ABCDFGBCHBDHFEBCDIJ $.
      $( [29-Oct-1996] $)

    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32rd $p |- ( ph -> ( ( ch /\ ps ) <-> ( th /\ ps ) ) ) $=
      ( wa pm5.32d ancom 3bitr4g ) ABCFBDFCBFDBFABCDEGCBHDBHI $.
      $( [25-Dec-2004] $)
  $}

  ${
    pm5.32da.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32da $p |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) $=
      ( wb ex pm5.32d ) ABCDABCDFEGH $.
      $( [9-Dec-2006] $)
  $}

  ${
    biadan2.1 $e |- ( ph -> ps ) $.
    biadan2.2 $e |- ( ps -> ( ph <-> ch ) ) $.
    $( Add a conjunction to an equivalence.  (Contributed by Jeff Madsen,
       20-Jun-2011.) $)
    biadan2 $p |- ( ph <-> ( ps /\ ch ) ) $=
      ( wa pm4.71ri pm5.32i bitri ) ABAFBCFABDGBACEHI $.
      $( [20-Jun-2011] $)
  $}

  $( Theorem *4.24 of [WhiteheadRussell] p. 117. $)
  pm4.24 $p |- ( ph <-> ( ph /\ ph ) ) $=
    ( id pm4.71i ) AAABC $.
    $( [14-Mar-2014] $) $( [3-Jan-2005] $)

  $( Idempotent law for conjunction.  (The proof was shortened by Wolf Lammen,
     14-Mar-2014.) $)
  anidm $p |- ( ( ph /\ ph ) <-> ph ) $=
    ( wa pm4.24 bicomi ) AAABACD $.
    $( [14-Mar-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ anidm as of 14-Mar-2014. $)
  anidmOLD $p |- ( ( ph /\ ph ) <-> ph ) $=
    ( wa simpl id ancli impbii ) AABAAACAAADEF $.
    $( [6-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ pm4.24 as of 14-Mar-2014. $)
  pm4.24OLD $p |- ( ph <-> ( ph /\ ph ) ) $=
    ( wa anidm bicomi ) AABAACD $.
    $( [3-Jan-2005] $)

  ${
    anidms.1 $e |- ( ( ph /\ ph ) -> ps ) $.
    $( Inference from idempotent law for conjunction. $)
    anidms $p |- ( ph -> ps ) $=
      ( ex pm2.43i ) ABAABCDE $.
      $( [15-Jun-1994] $)
  $}

  $( Conjunction idempotence with antecedent.  (Contributed by Roy F. Longton,
     8-Aug-2005.) $)
  anidmdbi $p |- ( ( ph -> ( ps /\ ps ) ) <-> ( ph -> ps ) ) $=
    ( wa anidm imbi2i ) BBCBABDE $.
    $( [8-Aug-2005] $)

  ${
    anasss.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Associative law for conjunction applied to antecedent (eliminates
       syllogism). $)
    anasss $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( exp31 imp32 ) ABCDABCDEFG $.
      $( [15-Nov-2002] $)
  $}

  ${
    anassrs.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Associative law for conjunction applied to antecedent (eliminates
       syllogism). $)
    anassrs $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( exp32 imp31 ) ABCDABCDEFG $.
      $( [15-Nov-2002] $)
  $}

  $( Associative law for conjunction.  Theorem *4.32 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 24-Nov-2012.) $)
  anass $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( wa id anassrs anasss impbii ) ABDCDZABCDDZABCJJEFABCIIEGH $.
    $( [24-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    sylanl1.1 $e |- ( ph -> ps ) $.
    sylanl1.2 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    sylanl1 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa anim1i sylan ) ACHBCHDEABCFIGJ $.
      $( [10-Mar-2005] $)
  $}

  ${
    sylanl2.1 $e |- ( ph -> ch ) $.
    sylanl2.2 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    sylanl2 $p |- ( ( ( ps /\ ph ) /\ th ) -> ta ) $=
      ( wa anim2i sylan ) BAHBCHDEACBFIGJ $.
      $( [1-Jan-2005] $)
  $}

  ${
    sylanr1.1 $e |- ( ph -> ch ) $.
    sylanr1.2 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
    $( A syllogism inference. $)
    sylanr1 $p |- ( ( ps /\ ( ph /\ th ) ) -> ta ) $=
      ( wa anim1i sylan2 ) ADHBCDHEACDFIGJ $.
      $( [9-Apr-2005] $)
  $}

  ${
    sylanr2.1 $e |- ( ph -> th ) $.
    sylanr2.2 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
    $( A syllogism inference. $)
    sylanr2 $p |- ( ( ps /\ ( ch /\ ph ) ) -> ta ) $=
      ( wa anim2i sylan2 ) CAHBCDHEADCFIGJ $.
      $( [9-Apr-2005] $)
  $}

  ${
    sylani.1 $e |- ( ph -> ch ) $.
    sylani.2 $e |- ( ps -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism inference. $)
    sylani $p |- ( ps -> ( ( ph /\ th ) -> ta ) ) $=
      ( wi a1i syland ) BACDEACHBFIGJ $.
      $( [2-May-1996] $)
  $}

  ${
    sylan2i.1 $e |- ( ph -> th ) $.
    sylan2i.2 $e |- ( ps -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism inference. $)
    sylan2i $p |- ( ps -> ( ( ch /\ ph ) -> ta ) ) $=
      ( wi a1i sylan2d ) BADCEADHBFIGJ $.
      $( [1-Aug-1994] $)
  $}

  ${
    syl2ani.1 $e |- ( ph -> ch ) $.
    syl2ani.2 $e |- ( et -> th ) $.
    syl2ani.3 $e |- ( ps -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism inference. $)
    syl2ani $p |- ( ps -> ( ( ph /\ et ) -> ta ) ) $=
      ( sylan2i sylani ) ABCFEGFBCDEHIJK $.
      $( [3-Aug-1999] $)
  $}

  ${
    sylan9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan9.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents.  (The
       proof was shortened by Andrew Salmon, 7-May-2011.) $)
    sylan9 $p |- ( ( ph /\ th ) -> ( ps -> ta ) ) $=
      ( wi syl9 imp ) ADBEHABCDEFGIJ $.
      $( [12-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sylan9r.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan9r.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9r $p |- ( ( th /\ ph ) -> ( ps -> ta ) ) $=
      ( wi syl9r imp ) DABEHABCDEFGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    mtand.1 $e |- ( ph -> -. ch ) $.
    mtand.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( A modus tollens deduction.  (Contributed by Jeff Hankins,
       19-Aug-2009.) $)
    mtand $p |- ( ph -> -. ps ) $=
      ( ex mtod ) ABCDABCEFG $.
      $( [21-Feb-2011] $) $( [15-Jul-2009] $)
  $}

  ${
    mtord.1 $e |- ( ph -> -. ch ) $.
    mtord.2 $e |- ( ph -> -. th ) $.
    mtord.3 $e |- ( ph -> ( ps -> ( ch \/ th ) ) ) $.
    $( A modus tollens deduction involving disjunction.  (Contributed by Jeff
       Hankins, 15-Jul-2009.) $)
    mtord $p |- ( ph -> -. ps ) $=
      ( wn wo wi df-or syl6ib mpid mtod ) ABDFABCHZDEABCDIODJGCDKLMN $.
      $( [15-Jul-2009] $)
  $}

  ${
    syl2anc.1 $e |- ( ph -> ps ) $.
    syl2anc.2 $e |- ( ph -> ch ) $.
    syl2anc.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with contraction. $)
    syl2anc $p |- ( ph -> th ) $=
      ( ex sylc ) ABCDEFBCDGHI $.
      $( [16-Mar-2012] $)
  $}

  ${
    sylancl.1 $e |- ( ph -> ps ) $.
    sylancl.2 $e |- ch $.
    sylancl.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with modus ponens.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    sylancl $p |- ( ph -> th ) $=
      ( a1i syl2anc ) ABCDECAFHGI $.
      $( [18-Apr-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    sylancr.1 $e |- ps $.
    sylancr.2 $e |- ( ph -> ch ) $.
    sylancr.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with modus ponens.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    sylancr $p |- ( ph -> th ) $=
      ( a1i syl2anc ) ABCDBAEHFGI $.
      $( [2-Sep-2009] $)
  $}

  ${
    sylanbrc.1 $e |- ( ph -> ps ) $.
    sylanbrc.2 $e |- ( ph -> ch ) $.
    sylanbrc.3 $e |- ( th <-> ( ps /\ ch ) ) $.
    $( Syllogism inference.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    sylanbrc $p |- ( ph -> th ) $=
      ( wa jca sylibr ) ABCHDABCEFIGJ $.
      $( [11-Oct-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    sylancb.1 $e |- ( ph <-> ps ) $.
    sylancb.2 $e |- ( ph <-> ch ) $.
    sylancb.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference combined with contraction. $)
    sylancb $p |- ( ph -> th ) $=
      ( syl2anb anidms ) ADABCDAEFGHI $.
      $( [3-Sep-2004] $)
  $}

  ${
    sylancbr.1 $e |- ( ps <-> ph ) $.
    sylancbr.2 $e |- ( ch <-> ph ) $.
    sylancbr.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference combined with contraction. $)
    sylancbr $p |- ( ph -> th ) $=
      ( syl2anbr anidms ) ADABCDAEFGHI $.
      $( [3-Sep-2004] $)
  $}

  ${
    sylancom.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancom.2 $e |- ( ( ch /\ ps ) -> th ) $.
    $( Syllogism inference with commutation of antecents. $)
    sylancom $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa simpr syl2anc ) ABGCBDEABHFI $.
      $( [2-Jul-2008] $)
  $}

  ${
    mpdan.1 $e |- ( ph -> ps ) $.
    mpdan.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 22-Nov-2012.) $)
    mpdan $p |- ( ph -> ch ) $=
      ( id syl2anc ) AABCAFDEG $.
      $( [22-Nov-2012] $) $( [23-May-1999] $)
  $}

  ${
    mpancom.1 $e |- ( ps -> ph ) $.
    mpancom.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens with commutation of antecedents.
       (The proof was shortened by Wolf Lammen, 7-Apr-2013.) $)
    mpancom $p |- ( ps -> ch ) $=
      ( id syl2anc ) BABCDBFEG $.
      $( [7-Apr-2013] $) $( [28-Oct-2003] $)
  $}

  ${
    mpan.1 $e |- ph $.
    mpan.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpan $p |- ( ps -> ch ) $=
      ( a1i mpancom ) ABCABDFEG $.
      $( [7-Apr-2013] $) $( [30-Aug-1993] $)
  $}

  ${
    mpan2.1 $e |- ps $.
    mpan2.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpan2 $p |- ( ph -> ch ) $=
      ( a1i mpdan ) ABCBADFEG $.
      $( [19-Nov-2012] $) $( [16-Sep-1993] $)
  $}

  ${
    mp2an.1 $e |- ph $.
    mp2an.2 $e |- ps $.
    mp2an.3 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens. $)
    mp2an $p |- ch $=
      ( mpan ax-mp ) BCEABCDFGH $.
      $( [13-Apr-1995] $)
  $}

  ${
    mp4an.1 $e |- ph $.
    mp4an.2 $e |- ps $.
    mp4an.3 $e |- ch $.
    mp4an.4 $e |- th $.
    mp4an.5 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens.  (Contributed by Jeff Madsen,
       15-Jun-2011.) $)
    mp4an $p |- ta $=
      ( wa pm3.2i mp2an ) ABKCDKEABFGLCDHILJM $.
      $( [15-Jun-2010] $)
  $}

  ${
    mpan2d.1 $e |- ( ph -> ch ) $.
    mpan2d.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mpan2d $p |- ( ph -> ( ps -> th ) ) $=
      ( exp3a mpid ) ABCDEABCDFGH $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpand.1 $e |- ( ph -> ps ) $.
    mpand.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpand $p |- ( ph -> ( ch -> th ) ) $=
      ( ancomsd mpan2d ) ACBDEABCDFGH $.
      $( [7-Apr-2013] $) $( [12-Dec-2004] $)
  $}

  ${
    mpani.1 $e |- ps $.
    mpani.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpani $p |- ( ph -> ( ch -> th ) ) $=
      ( a1i mpand ) ABCDBAEGFH $.
      $( [19-Nov-2012] $) $( [10-Apr-1994] $)
  $}

  ${
    mpan2i.1 $e |- ch $.
    mpan2i.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpan2i $p |- ( ph -> ( ps -> th ) ) $=
      ( a1i mpan2d ) ABCDCAEGFH $.
      $( [19-Nov-2012] $) $( [10-Apr-1994] $)
  $}

  ${
    mp2ani.1 $e |- ps $.
    mp2ani.2 $e |- ch $.
    mp2ani.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens. $)
    mp2ani $p |- ( ph -> th ) $=
      ( mpani mpi ) ACDFABCDEGHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mp2and.1 $e |- ( ph -> ps ) $.
    mp2and.2 $e |- ( ph -> ch ) $.
    mp2and.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mp2and $p |- ( ph -> th ) $=
      ( mpand mpd ) ACDFABCDEGHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpanl1.1 $e |- ph $.
    mpanl1.2 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpanl1 $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa jctl sylan ) BABGCDBAEHFI $.
      $( [7-Apr-2013] $) $( [16-Aug-1994] $)
  $}

  ${
    mpanl2.1 $e |- ps $.
    mpanl2.2 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanl2 $p |- ( ( ph /\ ch ) -> th ) $=
      ( wa jctr sylan ) AABGCDABEHFI $.
      $( [22-Nov-2012] $) $( [16-Aug-1994] $)
  $}

  ${
    mpanl12.1 $e |- ph $.
    mpanl12.2 $e |- ps $.
    mpanl12.3 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpanl12 $p |- ( ch -> th ) $=
      ( mpanl1 mpan ) BCDFABCDEGHI $.
      $( [13-Jul-2005] $)
  $}

  ${
    mpanr1.1 $e |- ps $.
    mpanr1.2 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanr1 $p |- ( ( ph /\ ch ) -> th ) $=
      ( anassrs mpanl2 ) ABCDEABCDFGH $.
      $( [12-May-2011] $) $( [3-May-1994] $)
  $}

  ${
    mpanr2.1 $e |- ch $.
    mpanr2.2 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.)  (The proof was shortened by Wolf Lammen,
       7-Apr-2013.) $)
    mpanr2 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa jctr sylan2 ) BABCGDBCEHFI $.
      $( [7-Apr-2013] $) $( [3-May-1994] $)

    $( Obsolete proof of ~ mpanr2 as of 7-Apr-2013.) $)
    mpanr2OLD $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa expr mpi ) ABGCDEABCDFHI $.
      $( [12-May-2011] $) $( [3-May-1994] $)
  $}

  ${
    mpanr12.1 $e |- ps $.
    mpanr12.2 $e |- ch $.
    mpanr12.3 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpanr12 $p |- ( ph -> th ) $=
      ( mpanr1 mpan2 ) ACDFABCDEGHI $.
      $( [24-Jul-2009] $)
  $}

  ${
    mpanlr1.1 $e |- ps $.
    mpanlr1.2 $e |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpanlr1 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa jctl sylanl2 ) CABCHDECBFIGJ $.
      $( [7-Apr-2013] $) $( [30-Dec-2004] $)
  $}

  ${
    pm5.74da.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74da $p |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $=
      ( wb ex pm5.74d ) ABCDABCDFEGH $.
      $( [4-May-2007] $)
  $}

  $( Theorem *4.45 of [WhiteheadRussell] p. 119. $)
  pm4.45 $p |- ( ph <-> ( ph /\ ( ph \/ ps ) ) ) $=
    ( wo orc pm4.71i ) AABCABDE $.
    $( [3-Jan-2005] $)

  $( Distribution of implication with conjunction.  (The proof was shortened by
     Wolf Lammen, 6-Dec-2012.) $)
  imdistan $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wi wa pm5.42 impexp bitr4i ) ABCDDABACEZDDABEIDABCFABIGH $.
    $( [6-Dec-2012] $) $( [31-May-1999] $)

  ${
    imdistani.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Distribution of implication with conjunction. $)
    imdistani $p |- ( ( ph /\ ps ) -> ( ph /\ ch ) ) $=
      ( wa anc2li imp ) ABACEABCDFG $.
      $( [1-Aug-1994] $)
  $}

  ${
    imdistanri.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Distribution of implication with conjunction. $)
    imdistanri $p |- ( ( ps /\ ph ) -> ( ch /\ ph ) ) $=
      ( com12 impac ) BACABCDEF $.
      $( [8-Jan-2002] $)
  $}

  ${
    imdistand.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Distribution of implication with conjunction (deduction rule). $)
    imdistand $p |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) $=
      ( wi wa imdistan sylib ) ABCDFFBCGBDGFEBCDHI $.
      $( [27-Aug-2004] $)
  $}

  ${
    imdistanda.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Distribution of implication with conjunction (deduction version with
       conjoined antecedent).  (Contributed by Jeff Madsen, 19-Jun-2011.) $)
    imdistanda $p |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) $=
      ( wi ex imdistand ) ABCDABCDFEGH $.
      $( [19-Jun-2011] $)
  $}

  ${
    bi.aa $e |- ( ph <-> ps ) $.
    $( Introduce a left conjunct to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi2i $p |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) $=
      ( wb a1i pm5.32i ) CABABECDFG $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ anbi2i as of 16-Nov-2013. $)
    anbi2iOLD $p |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) $=
      ( wa biimpi anim2i biimpri impbii ) CAECBEABCABDFGBACABDHGI $.
      $( [5-Aug-1993] $)

    $( Introduce a right conjunct to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi1i $p |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) $=
      ( wb a1i pm5.32ri ) CABABECDFG $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ anbi1i as of 16-Nov-2013. $)
    anbi1iOLD $p |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) $=
      ( wa ancom anbi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    anbi12.1 $e |- ( ph <-> ps ) $.
    anbi12.2 $e |- ( ch <-> th ) $.
    $( Conjoin both sides of two equivalences. $)
    anbi12i $p |- ( ( ph /\ ch ) <-> ( ps /\ th ) ) $=
      ( wa anbi1i anbi2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylan9bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylan9bb.2 $e |- ( th -> ( ch <-> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9bb $p |- ( ( ph /\ th ) -> ( ps <-> ta ) ) $=
      ( wa wb adantr adantl bitrd ) ADHBCEABCIDFJDCEIAGKL $.
      $( [4-Mar-1995] $)
  $}

  ${
    sylan9bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylan9bbr.2 $e |- ( th -> ( ch <-> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9bbr $p |- ( ( th /\ ph ) -> ( ps <-> ta ) ) $=
      ( wb sylan9bb ancoms ) ADBEHABCDEFGIJ $.
      $( [4-Mar-1995] $)
  $}

  ${
    bid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding a left disjunct to both sides of a logical
       equivalence. $)
    orbi2d $p |- ( ph -> ( ( th \/ ps ) <-> ( th \/ ch ) ) ) $=
      ( wn wi wo imbi2d df-or 3bitr4g ) ADFZBGLCGDBHDCHABCLEIDBJDCJK $.
      $( [5-Aug-1993] $)

    $( Deduction adding a right disjunct to both sides of a logical
       equivalence. $)
    orbi1d $p |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ th ) ) ) $=
      ( wo orbi2d orcom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)

    $( Deduction adding a left conjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi2d $p |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) $=
      ( wb a1d pm5.32d ) ADBCABCFDEGH $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ anbi2d as of 16-Nov-2013. $)
    anbi2dOLD $p |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) $=
      ( wa biimpd anim2d biimprd impbid ) ADBFDCFABCDABCEGHACBDABCEIHJ $.
      $( [5-Aug-1993] $)

    $( Deduction adding a right conjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi1d $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) $=
      ( wb a1d pm5.32rd ) ADBCABCFDEGH $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ anbi1d as of 16-Nov-2013. $)
    anbi1dOLD $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) $=
      ( wa anbi2d ancom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *4.37 of [WhiteheadRussell] p. 118. $)
  orbi1 $p |- ( ( ph <-> ps ) -> ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ) $=
    ( wb id orbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Introduce a right conjunct to both sides of a logical equivalence.
     Theorem *4.36 of [WhiteheadRussell] p. 118. $)
  anbi1 $p |- ( ( ph <-> ps ) -> ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ) $=
    ( wb id anbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Introduce a left conjunct to both sides of a logical equivalence. $)
  anbi2 $p |- ( ( ph <-> ps ) -> ( ( ch /\ ph ) <-> ( ch /\ ps ) ) ) $=
    ( wb id anbi2d ) ABDZABCGEF $.
    $( [16-Nov-2013] $)

  $( Theorem *4.22 of [WhiteheadRussell] p. 117. $)
  bitr $p |- ( ( ( ph <-> ps ) /\ ( ps <-> ch ) ) -> ( ph <-> ch ) ) $=
    ( wb bibi1 biimpar ) ABDACDBCDABCEF $.
    $( [3-Jan-2005] $)

  ${
    bi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       disjunctions. $)
    orbi12d $p |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ ta ) ) ) $=
      ( wo orbi1d orbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    anbi12d $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ ta ) ) ) $=
      ( wa anbi1d anbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

  $}

  $( Theorem *5.3 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  pm5.3 $p |- ( ( ( ph /\ ps ) -> ch ) <->
               ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wa wi impexp imdistan bitri ) ABDZCEABCEEIACDEABCFABCGH $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Theorem *5.61 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 30-Jun-2013.) $)
  pm5.61 $p |- ( ( ( ph \/ ps ) /\ -. ps ) <-> ( ph /\ -. ps ) ) $=
    ( wn wo biorf orcom syl6rbb pm5.32ri ) BCZABDZAIABADJBAEBAFGH $.
    $( [30-Jun-2013] $) $( [3-Jan-2005] $)

  ${
    adant2.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantll $p |- ( ( ( th /\ ph ) /\ ps ) -> ch ) $=
      ( wa simpr sylan ) DAFABCDAGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantlr $p |- ( ( ( ph /\ th ) /\ ps ) -> ch ) $=
      ( wa simpl sylan ) ADFABCADGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantrl $p |- ( ( ph /\ ( th /\ ps ) ) -> ch ) $=
      ( wa simpr sylan2 ) DBFABCDBGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantrr $p |- ( ( ph /\ ( ps /\ th ) ) -> ch ) $=
      ( wa simpl sylan2 ) BDFABCBDGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)
  $}

  ${
    adantl2.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 2-Dec-2012.) $)
    adantlll $p |- ( ( ( ( ta /\ ph ) /\ ps ) /\ ch ) -> th ) $=
      ( wa simpr sylanl1 ) EAGABCDEAHFI $.
      $( [2-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantllr $p |- ( ( ( ( ph /\ ta ) /\ ps ) /\ ch ) -> th ) $=
      ( wa simpl sylanl1 ) AEGABCDAEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantlrl $p |- ( ( ( ph /\ ( ta /\ ps ) ) /\ ch ) -> th ) $=
      ( wa simpr sylanl2 ) EBGABCDEBHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantlrr $p |- ( ( ( ph /\ ( ps /\ ta ) ) /\ ch ) -> th ) $=
      ( wa simpl sylanl2 ) BEGABCDBEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)
  $}

  ${
    adantr2.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrll $p |- ( ( ph /\ ( ( ta /\ ps ) /\ ch ) ) -> th ) $=
      ( wa simpr sylanr1 ) EBGABCDEBHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrlr $p |- ( ( ph /\ ( ( ps /\ ta ) /\ ch ) ) -> th ) $=
      ( wa simpl sylanr1 ) BEGABCDBEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrrl $p |- ( ( ph /\ ( ps /\ ( ta /\ ch ) ) ) -> th ) $=
      ( wa simpr sylanr2 ) ECGABCDECHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrrr $p |- ( ( ph /\ ( ps /\ ( ch /\ ta ) ) ) -> th ) $=
      ( wa simpl sylanr2 ) CEGABCDCEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)
  $}

  ${
    ad2ant.1 $e |- ( ph -> ps ) $.
    $( Deduction adding conjuncts to antecedent.  (The proof was shortened by
       Wolf Lammen, 20-Nov-2012.) $)
    ad2antrr $p |- ( ( ( ph /\ ch ) /\ th ) -> ps ) $=
      ( adantr adantlr ) ADBCABDEFG $.
      $( [20-Nov-2012] $) $( [19-Oct-1999] $)

    $( Deduction adding 3 conjuncts to antecedent. $)
    ad3antrrr $p |- ( ( ( ( ph /\ ch ) /\ th ) /\ ta ) -> ps ) $=
      ( wa adantr ad2antrr ) ACGBDEABCFHI $.
      $( [28-Jul-2012] $)

    $( Deduction adding conjuncts to antecedent.  (The proof was shortened by
       Wolf Lammen, 20-Nov-2012.) $)
    ad2antlr $p |- ( ( ( ch /\ ph ) /\ th ) -> ps ) $=
      ( adantr adantll ) ADBCABDEFG $.
      $( [20-Nov-2012] $) $( [19-Oct-1999] $)

    $( Deduction adding conjuncts to antecedent. $)
    ad2antrl $p |- ( ( ch /\ ( ph /\ th ) ) -> ps ) $=
      ( wa adantr adantl ) ADFBCABDEGH $.
      $( [19-Oct-1999] $)

    $( Deduction adding conjuncts to antecedent. $)
    ad2antll $p |- ( ( ch /\ ( th /\ ph ) ) -> ps ) $=
      ( wa adantl ) DAFBCABDEGG $.
      $( [19-Oct-1999] $)
  $}

  ${
    ad2ant2.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2l $p |- ( ( ( th /\ ph ) /\ ( ta /\ ps ) ) -> ch ) $=
      ( wa adantrl adantll ) AEBGCDABCEFHI $.
      $( [8-Jan-2006] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2r $p |- ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) -> ch ) $=
      ( wa adantrr adantlr ) ABEGCDABCEFHI $.
      $( [8-Jan-2006] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2lr $p |- ( ( ( th /\ ph ) /\ ( ps /\ ta ) ) -> ch ) $=
      ( wa adantrr adantll ) ABEGCDABCEFHI $.
      $( [23-Nov-2007] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2rl $p |- ( ( ( ph /\ th ) /\ ( ta /\ ps ) ) -> ch ) $=
      ( wa adantrl adantlr ) AEBGCDABCEFHI $.
      $( [24-Nov-2007] $)
  $}

  $( Simplification of a conjunction. $)
  simpll $p |- ( ( ( ph /\ ps ) /\ ch ) -> ph ) $=
    ( id ad2antrr ) AABCADE $.
    $( [18-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simplr $p |- ( ( ( ph /\ ps ) /\ ch ) -> ps ) $=
    ( id ad2antlr ) BBACBDE $.
    $( [20-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simprl $p |- ( ( ph /\ ( ps /\ ch ) ) -> ps ) $=
    ( id ad2antrl ) BBACBDE $.
    $( [21-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simprr $p |- ( ( ph /\ ( ps /\ ch ) ) -> ch ) $=
    ( id ad2antll ) CCABCDE $.
    $( [21-Mar-2007] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplll $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ph ) $=
    ( wa simpl ad2antrr ) ABEACDABFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simpllr $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ps ) $=
    ( wa simpr ad2antrr ) ABEBCDABFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplrl $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ps ) $=
    ( wa simpl ad2antlr ) BCEBADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplrr $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ch ) $=
    ( wa simpr ad2antlr ) BCECADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprll $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ps ) $=
    ( wa simpl ad2antrl ) BCEBADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprlr $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ch ) $=
    ( wa simpr ad2antrl ) BCECADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprrl $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ch ) $=
    ( wa simpl ad2antll ) CDECABCDFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprrr $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> th ) $=
    ( wa simpr ad2antll ) CDEDABCDFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Disjunction of antecedents.  Compare Theorem *4.77 of [WhiteheadRussell]
     p. 121.  (The proof was shortened by Wolf Lammen, 9-Dec-2012.) $)
  jaob $p |- ( ( ( ph \/ ch ) -> ps ) <-> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) $=
    ( wo wi wa pm2.67-2 olc imim1i jca pm3.44 impbii ) ACDZBEZABEZCBEZFNOPABCGC
    MBCAHIJBACKL $.
    $( [9-Dec-2012] $) $( [30-May-1994] $)

  ${
    jaoian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    jaoian.2 $e |- ( ( th /\ ps ) -> ch ) $.
    $( Inference disjoining the antecedents of two implications. $)
    jaoian $p |- ( ( ( ph \/ th ) /\ ps ) -> ch ) $=
      ( wo wi ex jaoi imp ) ADGBCABCHDABCEIDBCFIJK $.
      $( [23-Oct-2005] $)
  $}

  ${
    jaodan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    jaodan.2 $e |- ( ( ph /\ th ) -> ch ) $.
    $( Deduction disjoining the antecedents of two implications. $)
    jaodan $p |- ( ( ph /\ ( ps \/ th ) ) -> ch ) $=
      ( wo ex jaod imp ) ABDGCABCDABCEHADCFHIJ $.
      $( [14-Oct-2005] $)
  $}

  $( Theorem *4.77 of [WhiteheadRussell] p. 121. $)
  pm4.77 $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) <->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wo wi wa jaob bicomi ) BCDAEBAECAEFBACGH $.
    $( [3-Jan-2005] $)

  $( Theorem *2.63 of [WhiteheadRussell] p. 107. $)
  pm2.63 $p |- ( ( ph \/ ps ) -> ( ( -. ph \/ ps ) -> ps ) ) $=
    ( wo wn pm2.53 idd jaod ) ABCZADBBABEHBFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.64 of [WhiteheadRussell] p. 107. $)
  pm2.64 $p |- ( ( ph \/ ps ) -> ( ( ph \/ -. ps ) -> ph ) ) $=
    ( wn wo wi ax-1 orel2 jaoi com12 ) ABCZDABDZAAKAEJAKFBAGHI $.
    $( [3-Jan-2005] $)

  ${
    pm2.61ian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.61ian.2 $e |- ( ( -. ph /\ ps ) -> ch ) $.
    $( Elimination of an antecedent. $)
    pm2.61ian $p |- ( ps -> ch ) $=
      ( wi ex wn pm2.61i ) ABCFABCDGAHBCEGI $.
      $( [1-Jan-2005] $)
  $}

  ${
    pm2.61dan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.61dan.2 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    $( Elimination of an antecedent. $)
    pm2.61dan $p |- ( ph -> ch ) $=
      ( ex wn pm2.61d ) ABCABCDFABGCEFH $.
      $( [1-Jan-2005] $)
  $}

  ${
    pm2.61ddan.1 $e |- ( ( ph /\ ps ) -> th ) $.
    pm2.61ddan.2 $e |- ( ( ph /\ ch ) -> th ) $.
    pm2.61ddan.3 $e |- ( ( ph /\ ( -. ps /\ -. ch ) ) -> th ) $.
    $( Elimination of two antecedents. $)
    pm2.61ddan $p |- ( ph -> th ) $=
      ( wn wa adantlr anassrs pm2.61dan ) ABDEABHZICDACDMFJAMCHDGKLL $.
      $( [9-Jul-2013] $)
  $}

  ${
    pm2.61dda.1 $e |- ( ( ph /\ -. ps ) -> th ) $.
    pm2.61dda.2 $e |- ( ( ph /\ -. ch ) -> th ) $.
    pm2.61dda.3 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Elimination of two antecedents. $)
    pm2.61dda $p |- ( ph -> th ) $=
      ( wa anassrs wn adantlr pm2.61dan ) ABDABHCDABCDGIACJDBFKLEL $.
      $( [9-Jul-2013] $)
  $}

  ${
    condan.1 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    condan.2 $e |- ( ( ph /\ -. ps ) -> -. ch ) $.
    $( Proof by contradiction.  (The proof was shortened by Wolf Lammen,
       19-Jun-2014.) $)
    condan $p |- ( ph -> ps ) $=
      ( wn pm2.65da notnot2 syl ) ABFZFBAJCDEGBHI $.
      $( [19-Jun-2014] $) $( [9-Feb-2006] $)
  $}

  $( Introduce one conjunct as an antecedent to the other.  "abai" stands for
     "and, biconditional, and, implication".  (The proof was shortened by Wolf
     Lammen, 7-Dec-2012.) $)
  abai $p |- ( ( ph /\ ps ) <-> ( ph /\ ( ph -> ps ) ) ) $=
    ( wi biimt pm5.32i ) ABABCABDE $.
    $( [7-Dec-2012] $) $( [12-Aug-1993] $)

  $( Theorem *5.53 of [WhiteheadRussell] p. 125. $)
  pm5.53 $p |- ( ( ( ( ph \/ ps ) \/ ch ) -> th ) <->
                ( ( ( ph -> th ) /\ ( ps -> th ) ) /\ ( ch -> th ) ) ) $=
    ( wo wi wa jaob anbi1i bitri ) ABEZCEDFKDFZCDFZGADFBDFGZMGKDCHLNMADBHIJ $.
    $( [3-Jan-2005] $)

  $( Swap two conjuncts.  Note that the first digit (1) in the label refers to
     the outer conjunct position, and the next digit (2) to the inner conjunct
     position. $)
  an12 $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ps /\ ( ph /\ ch ) ) ) $=
    ( wa ancom anbi1i anass 3bitr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH $.
    $( [12-Mar-1995] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     25-Dec-2012.) $)
  an32 $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ps ) ) $=
    ( wa anass an12 ancom 3bitri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [25-Dec-2012] $) $( [12-Mar-1995] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     31-Dec-2012.) $)
  an13 $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ch /\ ( ps /\ ph ) ) ) $=
    ( wa an12 anass ancom 3bitr2i ) ABCDDBACDDBADZCDCIDABCEBACFICGH $.
    $( [31-Dec-2012] $) $( [24-Jun-2012] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     31-Dec-2012.) $)
  an31 $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ch /\ ps ) /\ ph ) ) $=
    ( wa an13 anass 3bitr4i ) ABCDDCBADDABDCDCBDADABCEABCFCBAFG $.
    $( [31-Dec-2012] $) $( [24-Jun-2012] $)

  ${
    an12s.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Swap two conjuncts in antecedent.  The label suffix "s" means that
       ~ an12 is combined with ~ syl (or a variant). $)
    an12s $p |- ( ( ps /\ ( ph /\ ch ) ) -> th ) $=
      ( wa an12 sylbi ) BACFFABCFFDBACGEH $.
      $( [13-Mar-1996] $)

    $( Inference commuting a nested conjunction in antecedent.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    ancom2s $p |- ( ( ph /\ ( ch /\ ps ) ) -> th ) $=
      ( wa pm3.22 sylan2 ) CBFABCFDCBGEH $.
      $( [24-Nov-2012] $) $( [24-May-2006] $)

    $( Swap two conjuncts in antecedent. $)
    an13s $p |- ( ( ch /\ ( ps /\ ph ) ) -> th ) $=
      ( exp32 com13 imp32 ) CBADABCDABCDEFGH $.
      $( [31-May-2006] $)
  $}

  ${
    an32s.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Swap two conjuncts in antecedent. $)
    an32s $p |- ( ( ( ph /\ ch ) /\ ps ) -> th ) $=
      ( wa an32 sylbi ) ACFBFABFCFDACBGEH $.
      $( [13-Mar-1996] $)

    $( Inference commuting a nested conjunction in antecedent.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    ancom1s $p |- ( ( ( ps /\ ph ) /\ ch ) -> th ) $=
      ( wa pm3.22 sylan ) BAFABFCDBAGEH $.
      $( [24-Nov-2012] $) $( [24-May-2006] $)

    $( Swap two conjuncts in antecedent. $)
    an31s $p |- ( ( ( ch /\ ps ) /\ ph ) -> th ) $=
      ( exp31 com13 imp31 ) CBADABCDABCDEFGH $.
      $( [31-May-2006] $)
  $}

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 16-Nov-2013.) $)
  anabs1 $p |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) $=
    ( wa simpl pm4.71i bicomi ) ABCZGACGAABDEF $.
    $( [16-Nov-2013] $) $( [4-Sep-1995] $)

  $( Obsolete proof of ~ anabs1 as of 16-Nov-2013. $)
  anabs1OLD $p |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) $=
    ( wa simpl ancli impbii ) ABCZACGGADGAABDEF $.
    $( [4-Sep-1995] $)

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 9-Dec-2012.) $)
  anabs5 $p |- ( ( ph /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa ibar bicomd pm5.32i ) AABCZBABGABDEF $.
    $( [9-Dec-2012] $) $( [20-Jul-1996] $)

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 17-Nov-2013.) $)
  anabs7 $p |- ( ( ps /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa simpr pm4.71ri bicomi ) ABCZBGCGBABDEF $.
    $( [17-Nov-2013] $) $( [20-Jul-1996] $)

  $( Obsolete proof of ~ anabs7 as of 17-Nov-2013. $)
  anabs7OLD $p |- ( ( ps /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa simpr ancri impbii ) BABCZCGBGDGBABDEF $.
    $( [20-Jul-1996] $)

  ${
    anabsan.1 $e |- ( ( ( ph /\ ph ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent with conjunction. $)
    anabsan $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa pm4.24 sylanb ) AAAEBCAFDG $.
      $( [18-Nov-2013] $) $( [24-Mar-1996] $)
  $}

  ${
    anabss1.1 $e |- ( ( ( ph /\ ps ) /\ ph ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 31-Dec-2012.) $)
    anabss1 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an32s anabsan ) ABCABACDEF $.
      $( [19-Nov-2013] $) $( [20-Jul-1996] $)
  $}

  ${
    anabss4.1 $e |- ( ( ( ps /\ ph ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent into conjunction. $)
    anabss4 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabss1 ancoms ) BACBACDEF $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabss5.1 $e |- ( ( ph /\ ( ph /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 1-Jan-2013.) $)
    anabss5 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anassrs anabsan ) ABCAABCDEF $.
      $( [1-Jan-2013] $) $( [10-May-1994] $)
  $}

  ${
    anabsi5.1 $e |- ( ph -> ( ( ph /\ ps ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 18-Nov-2013.) $)
    anabsi5 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa imp anabss5 ) ABCAABECDFG $.
      $( [18-Nov-2013] $) $( [11-Jun-1995] $)
  $}

  ${
    anabsi6.1 $e |- ( ph -> ( ( ps /\ ph ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction. $)
    anabsi6 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( ancomsd anabsi5 ) ABCABACDEF $.
      $( [14-Aug-2000] $)
  $}

  ${
    anabsi7.1 $e |- ( ps -> ( ( ph /\ ps ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 18-Nov-2013.) $)
    anabsi7 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabsi6 ancoms ) BACBACDEF $.
      $( [18-Nov-2013] $) $( [20-Jul-1996] $)
  $}

  ${
    anabsi8.1 $e |- ( ps -> ( ( ps /\ ph ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction. $)
    anabsi8 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabsi5 ancoms ) BACBACDEF $.
      $( [26-Sep-1999] $)
  $}

  ${
    anabss7.1 $e |- ( ( ps /\ ( ph /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 19-Nov-2013.) $)
    anabss7 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anassrs anabss4 ) ABCBABCDEF $.
      $( [19-Nov-2013] $) $( [20-Jul-1996] $)

    $( Obsolete proof of ~ anabss7 as of 19-Nov-2013. $)
    anabss7OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa ex anabsi7 ) ABCBABECDFG $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabsan2.1 $e |- ( ( ph /\ ( ps /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent with conjunction. $)
    anabsan2 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an12s anabss7 ) ABCABBCDEF $.
      $( [1-Jan-2013] $) $( [10-May-2004] $)
  $}

  ${
    anabss3.1 $e |- ( ( ( ph /\ ps ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 1-Jan-2013.) $)
    anabss3 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anasss anabsan2 ) ABCABBCDEF $.
      $( [1-Jan-2013] $) $( [20-Jul-1996] $)
  $}

  ${
    anabsanOLD.1 $e |- ( ( ( ph /\ ph ) /\ ps ) -> ch ) $.
    $( Obsolete proof of ~ anabsan as of 18-Nov-2013. $)
    anabsanOLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an32s anabss1 ) ABCAABCDEF $.
      $( [24-Mar-1996] $)
  $}

  $( Rearrangement of 4 conjuncts. $)
  an4 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
              ( ( ph /\ ch ) /\ ( ps /\ th ) ) ) $=
    ( wa an12 anbi2i anass 3bitr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHAC
    LHI $.
    $( [10-Jul-1994] $)

  $( Rearrangement of 4 conjuncts. $)
  an42 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
                 ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) $=
    ( wa an4 ancom anbi2i bitri ) ABECDEEACEZBDEZEJDBEZEABCDFKLJBDGHI $.
    $( [7-Feb-1996] $)

  ${
    an4s.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( Inference rearranging 4 conjuncts in antecedent. $)
    an4s $p |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) -> ta ) $=
      ( wa an4 sylbi ) ACGBDGGABGCDGGEACBDHFI $.
      $( [10-Aug-1995] $)
  $}

  ${
    an41r3s.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( Inference rearranging 4 conjuncts in antecedent. $)
    an42s $p |- ( ( ( ph /\ ch ) /\ ( th /\ ps ) ) -> ta ) $=
      ( wa an4s ancom2s ) ACGBDEABCDEFHI $.
      $( [10-Aug-1995] $)
  $}

  $( Distribution of conjunction over conjunction. $)
  anandi $p |- ( ( ph /\ ( ps /\ ch ) ) <->
               ( ( ph /\ ps ) /\ ( ph /\ ch ) ) ) $=
    ( wa anidm anbi1i an4 bitr3i ) ABCDZDAADZIDABDACDDJAIAEFAABCGH $.
    $( [14-Aug-1995] $)

  $( Distribution of conjunction over conjunction. $)
  anandir $p |- ( ( ( ph /\ ps ) /\ ch ) <->
               ( ( ph /\ ch ) /\ ( ps /\ ch ) ) ) $=
    ( wa anidm anbi2i an4 bitr3i ) ABDZCDICCDZDACDBCDDJCICEFABCCGH $.
    $( [24-Aug-1995] $)

  ${
    anandis.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> ta ) $.
    $( Inference that undistributes conjunction in the antecedent. $)
    anandis $p |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) $=
      ( wa an4s anabsan ) ABCFDABACDEGH $.
      $( [7-Jun-2004] $)
  $}

  ${
    anandirs.1 $e |- ( ( ( ph /\ ch ) /\ ( ps /\ ch ) ) -> ta ) $.
    $( Inference that undistributes conjunction in the antecedent. $)
    anandirs $p |- ( ( ( ph /\ ps ) /\ ch ) -> ta ) $=
      ( wa an4s anabsan2 ) ABFCDACBCDEGH $.
      $( [7-Jun-2004] $)
  $}

  ${
    impbida.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    impbida.2 $e |- ( ( ph /\ ch ) -> ps ) $.
    $( Deduce an equivalence from two implications. $)
    impbida $p |- ( ph -> ( ps <-> ch ) ) $=
      ( ex impbid ) ABCABCDFACBEFG $.
      $( [17-Feb-2007] $)
  $}

  $( Theorem *3.48 of [WhiteheadRussell] p. 114. $)
  pm3.48 $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
               ( ( ph \/ ch ) -> ( ps \/ th ) ) ) $=
    ( wi wo orc imim2i olc jaao ) ABEABDFZCDECBKABDGHDKCDBIHJ $.
    $( [1-Dec-2012] $) $( [28-Jan-1997] $)

  $( Theorem *3.45 (Fact) of [WhiteheadRussell] p. 113. $)
  pm3.45 $p |- ( ( ph -> ps ) -> ( ( ph /\ ch ) -> ( ps /\ ch ) ) ) $=
    ( wi id anim1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  ${
    im2an9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    im2an9.2 $e |- ( th -> ( ta -> et ) ) $.
    $( Deduction joining nested implications to form implication of
       conjunctions. $)
    im2anan9 $p |- ( ( ph /\ th ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi adantr adantl anim12d ) ADIBCEFABCJDGKDEFJAHLM $.
      $( [29-Feb-1996] $)

    $( Deduction joining nested implications to form implication of
       conjunctions. $)
    im2anan9r $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi im2anan9 ancoms ) ADBEICFIJABCDEFGHKL $.
      $( [29-Feb-1996] $)
  $}

  ${
    anim12dan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    anim12dan.2 $e |- ( ( ph /\ th ) -> ta ) $.
    $( Conjoin antecedents and consequents in a deduction.  (Contributed by
       Mario Carneiro, 12-May-2014.) $)
    anim12dan $p |- ( ( ph /\ ( ps /\ th ) ) -> ( ch /\ ta ) ) $=
      ( wa ex anim12d imp ) ABDHCEHABCDEABCFIADEGIJK $.
      $( [12-May-2014] $)
  $}

  ${
    orim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    orim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Disjoin antecedents and consequents in a deduction. $)
    orim12d $p |- ( ph -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) $=
      ( wi wo pm3.48 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [10-May-1994] $)
  $}

  ${
    orim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Disjoin antecedents and consequents in a deduction. $)
    orim1d $p |- ( ph -> ( ( ps \/ th ) -> ( ch \/ th ) ) ) $=
      ( idd orim12d ) ABCDDEADFG $.
      $( [23-Apr-1995] $)

    $( Disjoin antecedents and consequents in a deduction. $)
    orim2d $p |- ( ph -> ( ( th \/ ps ) -> ( th \/ ch ) ) ) $=
      ( idd orim12d ) ADDBCADFEG $.
      $( [23-Apr-1995] $)
  $}

  $( Axiom *1.6 (Sum) of [WhiteheadRussell] p. 97. $)
  orim2 $p |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wi id orim2d ) BCDZBCAGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.38 of [WhiteheadRussell] p. 105. $)
  pm2.38 $p |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) $=
    ( wi id orim1d ) BCDZBCAGEF $.
    $( [6-Mar-2008] $)

  $( Theorem *2.36 of [WhiteheadRussell] p. 105. $)
  pm2.36 $p |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ch \/ ph ) ) ) $=
    ( wo wi pm1.4 pm2.38 syl5 ) ABDBADBCECADABFABCGH $.
    $( [6-Mar-2008] $)

  $( Theorem *2.37 of [WhiteheadRussell] p. 105. $)
  pm2.37 $p |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ph \/ ch ) ) ) $=
    ( wi wo pm2.38 pm1.4 syl6 ) BCDBAECAEACEABCFCAGH $.
    $( [6-Mar-2008] $)

  $( Theorem *2.73 of [WhiteheadRussell] p. 108. $)
  pm2.73 $p |- ( ( ph -> ps ) -> ( ( ( ph \/ ps ) \/ ch ) ->
                ( ps \/ ch ) ) ) $=
    ( wi wo pm2.621 orim1d ) ABDABEBCABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.74 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  pm2.74 $p |- ( ( ps -> ph ) -> ( ( ( ph \/ ps ) \/ ch ) ->
                ( ph \/ ch ) ) ) $=
    ( wi wo orel2 ax-1 ja orim1d ) BADABEZACBAJADBAFAJGHI $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Disjunction distributes over implication.  (Contributed by Wolf Lammen,
     5-Jan-2013.) $)
  orimdi $p |- ( ( ph \/ ( ps -> ch ) ) <->
                ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wn wi wo imdi df-or imbi12i 3bitr4i ) ADZBCEZEKBEZKCEZEALFABFZACFZEKBCGAL
    HOMPNABHACHIJ $.
    $( [5-Jan-2013] $)

  $( Theorem *2.76 of [WhiteheadRussell] p. 108. $)
  pm2.76 $p |- ( ( ph \/ ( ps -> ch ) ) ->
                ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wi wo orimdi biimpi ) ABCDEABEACEDABCFG $.
    $( [5-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.75 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Wolf Lammen, 4-Jan-2013.) $)
  pm2.75 $p |- ( ( ph \/ ps ) ->
                ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) $=
    ( wi wo pm2.76 com12 ) ABCDEABEACEABCFG $.
    $( [4-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.8 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Wolf Lammen, 5-Jan-2013.) $)
  pm2.8 $p |- ( ( ph \/ ps ) -> ( ( -. ps \/ ch ) -> ( ph \/ ch ) ) ) $=
    ( wo wn pm2.53 con1d orim1d ) ABDZBEACIABABFGH $.
    $( [5-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.81 of [WhiteheadRussell] p. 108. $)
  pm2.81 $p |- ( ( ps -> ( ch -> th ) ) -> ( ( ph \/ ps ) ->
                ( ( ph \/ ch ) -> ( ph \/ th ) ) ) ) $=
    ( wi wo orim2 pm2.76 syl6 ) BCDEZEABFAJFACFADFEABJGACDHI $.
    $( [3-Jan-2005] $)

  $( Theorem *2.82 of [WhiteheadRussell] p. 108. $)
  pm2.82 $p |- ( ( ( ph \/ ps ) \/ ch ) -> ( ( ( ph \/ -. ch ) \/ th ) ->
                ( ( ph \/ ps ) \/ th ) ) ) $=
    ( wo wn wi ax-1 pm2.24 orim2d jaoi orim1d ) ABEZCEACFZEZMDMOMGCMOHCNBACBIJK
    L $.
    $( [3-Jan-2005] $)

  $( Theorem *2.85 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Wolf Lammen, 5-Jan-2013.) $)
  pm2.85 $p |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) ->
                ( ph \/ ( ps -> ch ) ) ) $=
    ( wi wo orimdi biimpri ) ABCDEABEACEDABCFG $.
    $( [5-Jan-2013] $) $( [3-Jan-2005] $)

  ${
    pm3.2ni.1 $e |- -. ph $.
    pm3.2ni.2 $e |- -. ps $.
    $( Infer negated disjunction of negated premises. $)
    pm3.2ni $p |- -. ( ph \/ ps ) $=
      ( wo id pm2.21i jaoi mto ) ABEACAABAFBADGHI $.
      $( [4-Apr-1995] $)
  $}

  $( Absorption of redundant internal disjunct.  Compare Theorem *4.45 of
     [WhiteheadRussell] p. 119.  (The proof was shortened by Wolf Lammen,
     28-Feb-2014.) $)
  orabs $p |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) $=
    ( wo orc pm4.71ri ) AABCABDE $.
    $( [28-Feb-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ orabs as of 28-Feb-2014. $)
  orabsOLD $p |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) $=
    ( wo wa orc ancri simpr impbii ) AABCZADAIABEFIAGH $.
    $( [5-Aug-1993] $)

  $( Absorb a disjunct into a conjunct.  (Contributed by Roy F. Longton
     23-Jun-2005.)  (The proof was shortened by Wolf Lammen, 10-Nov-2013.) $)
  oranabs $p |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ph /\ ps ) ) $=
    ( wn wo biortn orcom syl6rbb pm5.32ri ) BABCZDZABAIADJBAEIAFGH $.
    $( [10-Nov-2013] $) $( [23-Jun-2005] $)

  $( Obsolete proof of ~ oranabs as of 10-Nov-2013. $)
  oranabsOLD $p |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ph /\ ps ) ) $=
    ( wn wo wa pm5.61 notnot anbi2i 3bitr4i ) ABCZDZJCZEALEKBEABEAJFBLKBGZHBLAM
    HI $.
    $( [12-Apr-2008] $) $( [23-Jun-2005] $)

  $( Two propositions are equivalent if they are both true.  Theorem *5.1 of
     [WhiteheadRussell] p. 123. $)
  pm5.1 $p |- ( ( ph /\ ps ) -> ( ph <-> ps ) ) $=
    ( wb pm5.501 biimpa ) ABABCABDE $.
    $( [21-May-1994] $)

  $( Two propositions are equivalent if they are both false.  Theorem *5.21 of
     [WhiteheadRussell] p. 124. $)
  pm5.21 $p |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) $=
    ( wn wb pm5.21im imp ) ACBCABDABEF $.
    $( [19-May-2013] $) $( [21-May-1994] $)

  $( Theorem *3.43 (Comp) of [WhiteheadRussell] p. 113. $)
  pm3.43 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wi wa pm3.43i imp ) ABDACDABCEDABCFG $.
    $( [27-Nov-2013] $) $( [3-Jan-2005] $)

  $( Distributive law for implication over conjunction.  Compare Theorem *4.76
     of [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     27-Nov-2013.) $)
  jcab $p |- ( ( ph -> ( ps /\ ch ) ) <->
                ( ( ph -> ps ) /\ ( ph -> ch ) ) ) $=
    ( wa wi simpl imim2i simpr jca pm3.43 impbii ) ABCDZEZABEZACEZDMNOLBABCFGLC
    ABCHGIABCJK $.
    $( [27-Nov-2013] $) $( [3-Apr-1994] $)

  $( Distributive law for disjunction.  Theorem *4.41 of [WhiteheadRussell]
     p. 119.  (The proof was shortened by Andrew Salmon, 7-May-2011.)  (The
     proof was shortened by Wolf Lammen, 28-Nov-2013.) $)
  ordi $p |- ( ( ph \/ ( ps /\ ch ) ) <-> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) ) $=
    ( wn wa wi wo jcab df-or anbi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZELBC
    HAMIPNQOABIACIJK $.
    $( [28-Nov-2013] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ ordi as of 28-Nov-2013. $)
  ordiOLD $p |- ( ( ph \/ ( ps /\ ch ) ) <-> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) )
      $=
    ( wa wo orc jca olc anim12i jaoi wn pm2.53 anim12ii orrd impbii ) ABCDZEABE
    ZACEZDZASPAQRABFACFGBQCRBAHCAHIJSAPQAKBRCABLACLMNO $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Distributive law for disjunction. $)
  ordir $p |- ( ( ( ph /\ ps ) \/ ch ) <->
              ( ( ph \/ ch ) /\ ( ps \/ ch ) ) ) $=
    ( wa wo ordi orcom anbi12i 3bitr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMKNL
    ACGBCGHI $.
    $( [12-Aug-1994] $)

  $( Obsolete proof of ~ jcab as of 27-Nov-2013 $)
  jcabOLD $p |- ( ( ph -> ( ps /\ ch ) ) <->
                 ( ( ph -> ps ) /\ ( ph -> ch ) ) ) $=
    ( wn wa wo wi ordi imor anbi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZELBCH
    AMIPNQOABIACIJK $.
    $( [3-Apr-1994] $)

  $( Obsolete proof of ~ pm3.43 as of 27-Nov-2013 $)
  pm3.43OLD $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wa wi jcab biimpri ) ABCDEABEACEDABCFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.76 of [WhiteheadRussell] p. 121. $)
  pm4.76 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) <->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wa wi jcab bicomi ) ABCDEABEACEDABCFG $.
    $( [3-Jan-2005] $)

  $( Distributive law for conjunction.  Theorem *4.4 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 5-Jan-2013.) $)
  andi $p |- ( ( ph /\ ( ps \/ ch ) ) <-> ( ( ph /\ ps ) \/ ( ph /\ ch ) ) ) $=
    ( wo wa orc olc jaodan anim2i jaoi impbii ) ABCDZEZABEZACEZDZABPCNOFONGHNMO
    BLABCFICLACBGIJK $.
    $( [5-Jan-2013] $) $( [5-Aug-1993] $)

  $( Distributive law for conjunction. $)
  andir $p |- ( ( ( ph \/ ps ) /\ ch ) <->
              ( ( ph /\ ch ) \/ ( ps /\ ch ) ) ) $=
    ( wo wa andi ancom orbi12i 3bitr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMKNL
    ACGBCGHI $.
    $( [12-Aug-1994] $)

  $( Double distributive law for disjunction. $)
  orddi $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ( ph \/ ch ) /\ ( ph \/ th ) ) /\
              ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ) $=
    ( wa wo ordir ordi anbi12i bitri ) ABECDEZFAKFZBKFZEACFADFEZBCFBDFEZEABKGLN
    MOACDHBCDHIJ $.
    $( [12-Aug-1994] $)

  $( Double distributive law for conjunction. $)
  anddi $p |- ( ( ( ph \/ ps ) /\ ( ch \/ th ) ) <->
              ( ( ( ph /\ ch ) \/ ( ph /\ th ) ) \/
              ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ) $=
    ( wo wa andir andi orbi12i bitri ) ABECDEZFAKFZBKFZEACFADFEZBCFBDFEZEABKGLN
    MOACDHBCDHIJ $.
    $( [12-Aug-1994] $)

  $( Prove formula-building rules for the biconditional connective. $)

  $( Theorem *4.39 of [WhiteheadRussell] p. 118. $)
  pm4.39 $p |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) ->
                ( ( ph \/ ps ) <-> ( ch \/ th ) ) ) $=
    ( wb wa simpl simpr orbi12d ) ACEZBDEZFACBDJKGJKHI $.
    $( [3-Jan-2005] $)

  $( Theorem *4.38 of [WhiteheadRussell] p. 118. $)
  pm4.38 $p |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) ->
                ( ( ph /\ ps ) <-> ( ch /\ th ) ) ) $=
    ( wb wa simpl simpr anbi12d ) ACEZBDEZFACBDJKGJKHI $.
    $( [3-Jan-2005] $)

  ${
    bi2an9.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi2an9.2 $e |- ( th -> ( ta <-> et ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    bi2anan9 $p |- ( ( ph /\ th ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) $=
      ( wa anbi1d anbi2d sylan9bb ) ABEICEIDCFIABCEGJDEFCHKL $.
      $( [31-Jul-1995] $)

    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    bi2anan9r $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) $=
      ( wa wb bi2anan9 ancoms ) ADBEICFIJABCDEFGHKL $.
      $( [19-Feb-1996] $)

    $( Deduction joining two biconditionals with different antecedents. $)
    bi2bian9 $p |- ( ( ph /\ th ) -> ( ( ps <-> ta ) <-> ( ch <-> et ) ) ) $=
      ( wa wb adantr adantl bibi12d ) ADIBCEFABCJDGKDEFJAHLM $.
      $( [12-May-2004] $)
  $}

  $( Implication in terms of biconditional and disjunction.  Theorem *4.72 of
     [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     30-Jan-2013.) $)
  pm4.72 $p |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wi wo wb olc pm2.621 impbid2 orc bi2 syl5 impbii ) ABCZBABDZEZMBNBAFABGHA
    NOBABIBNJKL $.
    $( [30-Jan-2013] $) $( [30-Aug-1993] $)

  $( Simplify an implication between implications.  (Contributed by Paul
     Chapman, 17-Nov-2012.)  (The proof was shortened by Wolf Lammen,
     3-Apr-2013.) $)
  imimorb $p |- ( ( ( ps -> ch ) -> ( ph -> ch ) ) <->
                  ( ph -> ( ps \/ ch ) ) ) $=
    ( wi wo bi2.04 dfor2 imbi2i bitr4i ) BCDZACDDAJCDZDABCEZDJACFLKABCGHI $.
    $( [3-Apr-2013] $) $( [17-Nov-2012] $)

  $( Theorem *5.33 of [WhiteheadRussell] p. 125. $)
  pm5.33 $p |- ( ( ph /\ ( ps -> ch ) ) <->
                ( ph /\ ( ( ph /\ ps ) -> ch ) ) ) $=
    ( wi wa ibar imbi1d pm5.32i ) ABCDABEZCDABICABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *5.36 of [WhiteheadRussell] p. 125. $)
  pm5.36 $p |- ( ( ph /\ ( ph <-> ps ) ) <-> ( ps /\ ( ph <-> ps ) ) ) $=
    ( wb id pm5.32ri ) ABCZABFDE $.
    $( [3-Jan-2005] $)

  ${
    bianabs.1 $e |- ( ph -> ( ps <-> ( ph /\ ch ) ) ) $.
    $( Absorb a hypothesis into the second member of a biconditional.
       (Contributed by FL, 15-Feb-2007.) $)
    bianabs $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wa ibar bitr4d ) ABACECDACFG $.
      $( [22-May-2008] $) $( [15-Feb-2007] $)
  $}

  $( Absorption of disjunction into equivalence.  (The proof was shortened by
     Wolf Lammen, 3-Nov-2013.) $)
  oibabs $p |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) <-> ( ph <-> ps ) ) $=
    ( wo wb wi wn wa ioran pm5.21 sylbi id ja ax-1 impbii ) ABCZABDZEPOPPOFAFBF
    GPABHABIJPKLPOMN $.
    $( [3-Nov-2013] $)  $( [6-Aug-1995] $)

  $( Obsolete proof of ~ oibabs as of 3-Nov-2013. $)
  oibabsOLD $p |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) <-> ( ph <-> ps ) ) $=
    ( wo wb wi pm2.67-2 ibd olc imim1i ibibr sylibr impbid ax-1 impbii ) ABCZAB
    DZEZPQABQABAPBFGQBPEBAEBOPBAHIBAJKLPOMN $.
    $( [10-Dec-2012] $)  $( [6-Aug-1995] $)

  $( Law of noncontradiction.  Theorem *3.24 of [WhiteheadRussell] p. 111 (who
     call it the "law of contradiction").  (The proof was shortened by Wolf
     Lammen, 24-Nov-2012.) $)
  pm3.24 $p |- -. ( ph /\ -. ph ) $=
    ( wi wn wa id iman mpbi ) AABAACDCAEAAFG $.
    $( [24-Nov-2012] $) $( [16-Sep-1993] $)

  $( Theorem *2.26 of [WhiteheadRussell] p. 104.  (The proof was shortened by
     Wolf Lammen, 23-Nov-2012.) $)
  pm2.26 $p |- ( -. ph \/ ( ( ph -> ps ) -> ps ) ) $=
    ( wi pm2.27 imori ) AABCBCABDE $.
    $( [23-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *5.11 of [WhiteheadRussell] p. 123. $)
  pm5.11 $p |- ( ( ph -> ps ) \/ ( -. ph -> ps ) ) $=
    ( wi wn pm2.5 orri ) ABCADBCABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *5.12 of [WhiteheadRussell] p. 123. $)
  pm5.12 $p |- ( ( ph -> ps ) \/ ( ph -> -. ps ) ) $=
    ( wi wn pm2.51 orri ) ABCABDCABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *5.14 of [WhiteheadRussell] p. 123. $)
  pm5.14 $p |- ( ( ph -> ps ) \/ ( ps -> ch ) ) $=
    ( wi wn ax-1 con3i pm2.21d orri ) ABDZBCDJEBCBJBAFGHI $.
    $( [3-Jan-2005] $)

  $( Theorem *5.13 of [WhiteheadRussell] p. 123.  (The proof was shortened by
     Wolf Lammen, 14-Nov-2012.) $)
  pm5.13 $p |- ( ( ph -> ps ) \/ ( ps -> ph ) ) $=
    ( pm5.14 ) ABAC $.
    $( [14-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *5.17 of [WhiteheadRussell] p. 124.  (The proof was shortened by
     Wolf Lammen, 3-Jan-2013.) $)
  pm5.17 $p |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ph <-> -. ps ) ) $=
    ( wn wb wi wa wo bicom dfbi2 orcom df-or bitr2i imnan anbi12i 3bitrri ) ABC
    ZDPADPAEZAPEZFABGZABFCZFAPHPAIQSRTSBAGQABJBAKLABMNO $.
    $( [3-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *5.15 of [WhiteheadRussell] p. 124.  (The proof was shortened by
     Wolf Lammen, 15-Oct-2013.) $)
  pm5.15 $p |- ( ( ph <-> ps ) \/ ( ph <-> -. ps ) ) $=
    ( wb wn xor3 biimpi orri ) ABCZABDCZHDIABEFG $.
    $( [15-Oct-2013] $) $( [3-Jan-2005] $)

  $( Theorem *5.16 of [WhiteheadRussell] p. 124.  (The proof was shortened by
     Wolf Lammen, 17-Oct-2013.) $)
  pm5.16 $p |- -. ( ( ph <-> ps ) /\ ( ph <-> -. ps ) ) $=
    ( wb wn wi wa pm5.18 biimpi imnan mpbi ) ABCZABDCZDZEKLFDKMABGHKLIJ $.
    $( [17-Oct-2013] $) $( [3-Jan-2005] $)

  $( Two ways to express "exclusive or."  Theorem *5.22 of [WhiteheadRussell]
     p. 124.  (The proof was shortened by Wolf Lammen, 22-Jan-2013.) $)
  xor $p |- ( -. ( ph <-> ps ) <->
                ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wn wa wo wb wi iman anbi12i dfbi2 ioran 3bitr4ri con1bii ) ABCDZBACDZEZAB
    FZABGZBAGZDNCZOCZDQPCRTSUAABHBAHIABJNOKLM $.
    $( [22-Jan-2013] $) $( [3-Jan-2005] $)

  $( Two ways to express "exclusive or."  (The proof was shortened by Wolf
     Lammen, 24-Jan-2013.) $)
  xor2 $p |- ( -. ( ph <-> ps ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) $=
    ( wb wn wo wa xor3 pm5.17 bitr4i ) ABCDABDCABEABFDFABGABHI $.
    $( [24-Jan-2013] $) $( [3-Jan-2005] $)

  $( An alternate definition of the biconditional.  Theorem *5.23 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     3-Nov-2013.) $)
  dfbi3 $p |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) $=
    ( wn wb wa wo xor pm5.18 notnot anbi2i ancom orbi12i 3bitr4i ) ABCZDCANCZEZ
    NACZEZFABDABEZQNEZFANGABHSPTRBOABIJQNKLM $.
    $( [3-Nov-2013] $) $( [27-Jun-2002] $)

  $( Theorem *5.24 of [WhiteheadRussell] p. 124. $)
  pm5.24 $p |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <->
                ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wb wn wa wo xor dfbi3 xchnxbi ) ABCABDZEBADZEFABEKJEFABGABHI $.
    $( [3-Jan-2005] $)

  $( Conjunction distributes over exclusive-or, using ` -. ( ph <-> ps ) ` to
     express exclusive-or.  This is one way to interpret the distributive law
     of multiplication over addition in modulo 2 arithmetic. $)
  xordi $p |- ( ( ph /\ -. ( ps <-> ch ) ) <->
                -. ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) $=
    ( wb wn wa wi annim pm5.32 xchbinx ) ABCDZEFAKGABFACFDAKHABCIJ $.
    $( [3-Oct-2008] $)

  $( A wff is disjoined with truth is true. $)
  biort $p |- ( ph -> ( ph <-> ( ph \/ ps ) ) ) $=
    ( wo orc ax-1 impbid2 ) AAABCZABDAGEF $.
    $( [23-May-1999] $)

  $( Theorem *5.55 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 20-Jan-2013.) $)
  pm5.55 $p |- ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) $=
    ( wo wb biort bicomd wn biorf nsyl4 con1i orri ) ABCZADZLBDZNMAMNAALABEFAGB
    LABHFIJK $.
    $( [20-Jan-2013] $) $( [3-Jan-2005] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Miscellaneous theorems of propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    pm5.21nd.1 $e |- ( ( ph /\ ps ) -> th ) $.
    pm5.21nd.2 $e |- ( ( ph /\ ch ) -> th ) $.
    pm5.21nd.3 $e |- ( th -> ( ps <-> ch ) ) $.
    $( Eliminate an antecedent implied by each side of a biconditional.  (The
       proof was shortened by Wolf Lammen, 4-Nov-2013.) $)
    pm5.21nd $p |- ( ph -> ( ps <-> ch ) ) $=
      ( ex wb wi a1i pm5.21ndd ) ADBCABDEHACDFHDBCIJAGKL $.
      $( [4-Nov-2013] $) $( [20-Nov-2005] $)

    $( Obsolete proof of ~ pm5.21nd as of 4-Nov-2013. $)
    pm5.21ndOLD $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb wn wa ex con3d jcad pm5.21 syl6 pm2.61d2 ) ADBCHZADIZBIZCIZJQARSTABD
      ABDEKLACDACDFKLMBCNOGP $.
      $( [20-Nov-2005] $)
  $}

  $( Theorem *5.35 of [WhiteheadRussell] p. 125. $)
  pm5.35 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps <-> ch ) ) ) $=
    ( wi wa pm5.1 pm5.74rd ) ABDZACDZEABCHIFG $.
    $( [3-Jan-2005] $)

  $( Theorem *5.54 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 7-Nov-2013.) $)
  pm5.54 $p |- ( ( ( ph /\ ps ) <-> ph ) \/ ( ( ph /\ ps ) <-> ps ) ) $=
    ( wa wb iba bicomd adantl pm5.21ni orri ) ABCZADZJBDJKBBKABAJBAEFZGLHI $.
    $( [7-Nov-2013] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.54 as of 7-Nov-2013. $)
  pm5.54OLD $p |- ( ( ( ph /\ ps ) <-> ph ) \/ ( ( ph /\ ps ) <-> ps ) ) $=
    ( wa wb pm5.1 anabss1 iba bicomd pm5.21ni orri ) ABCZADZKBDKLBABLKAEFBAKBAG
    HIJ $.
    $( [3-Jan-2005] $)

  ${
    baib.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Move conjunction outside of biconditional. $)
    baib $p |- ( ps -> ( ph <-> ch ) ) $=
      ( wa ibar syl6rbbr ) BCBCEABCFDG $.
      $( [13-May-1999] $)
  $}

  ${
    baibr.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Move conjunction outside of biconditional. $)
    baibr $p |- ( ps -> ( ch <-> ph ) ) $=
      ( baib bicomd ) BACABCDEF $.
      $( [11-Jul-1994] $)
  $}

  $( Theorem *5.44 of [WhiteheadRussell] p. 125. $)
  pm5.44 $p |- ( ( ph -> ps ) -> ( ( ph -> ch ) <->
                ( ph -> ( ps /\ ch ) ) ) ) $=
    ( wa wi jcab baibr ) ABCDEABEACEABCFG $.
    $( [3-Jan-2005] $)

  $( Conjunction in antecedent versus disjunction in consequent.  Theorem *5.6
     of [WhiteheadRussell] p. 125. $)
  pm5.6 $p |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( ps \/ ch ) ) ) $=
    ( wn wa wi wo impexp df-or imbi2i bitr4i ) ABDZECFALCFZFABCGZFALCHNMABCIJK
    $.
    $( [22-Mar-2005] $) $( [8-Jun-1994] $)

  ${
    orcanai.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Change disjunction in consequent to conjunction in antecedent. $)
    orcanai $p |- ( ( ph /\ -. ps ) -> ch ) $=
      ( wn ord imp ) ABECABCDFG $.
      $( [8-Jun-1994] $)
  $}


  ${
    intnan.1 $e |- -. ph $.
    $( Introduction of conjunct inside of a contradiction. $)
    intnan $p |- -. ( ps /\ ph ) $=
      ( wa simpr mto ) BADACBAEF $.
      $( [16-Sep-1993] $)

    $( Introduction of conjunct inside of a contradiction. $)
    intnanr $p |- -. ( ph /\ ps ) $=
      ( wa simpl mto ) ABDACABEF $.
      $( [3-Apr-1995] $)
  $}

  ${
    intnand.1 $e |- ( ph -> -. ps ) $.
    $( Introduction of conjunct inside of a contradiction. $)
    intnand $p |- ( ph -> -. ( ch /\ ps ) ) $=
      ( wa simpr nsyl ) ABCBEDCBFG $.
      $( [10-Jul-2005] $)

    $( Introduction of conjunct inside of a contradiction. $)
    intnanrd $p |- ( ph -> -. ( ps /\ ch ) ) $=
      ( wa simpl nsyl ) ABBCEDBCFG $.
      $( [10-Jul-2005] $)
  $}

  ${
    mpbiran.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    ${
      mpbiran.2 $e |- ps $.
      $( Detach truth from conjunction in biconditional. $)
      mpbiran $p |- ( ph <-> ch ) $=
        ( wa biantrur bitr4i ) ABCFCDBCEGH $.
        $( [27-Feb-1996] $)
    $}

    ${
      mpbiran2.2 $e |- ch $.
      $( Detach truth from conjunction in biconditional. $)
      mpbiran2 $p |- ( ph <-> ps ) $=
        ( wa biantru bitr4i ) ABCFBDCBEGH $.
        $( [22-Feb-1996] $)
    $}

    ${
      mpbir2an.2 $e |- ps $.
      mpbir2an.3 $e |- ch $.
      $( Detach a conjunction of truths in a biconditional. $)
      mpbir2an $p |- ph $=
        ( mpbiran mpbir ) ACFABCDEGH $.
        $( [10-May-2005] $)
    $}
  $}

  ${
    mpbi2and.1 $e |- ( ph -> ( ( ps /\ ch ) <-> th ) ) $.
    mpbi2and.2 $e |- ( ph -> ps ) $.
    mpbi2and.3 $e |- ( ph -> ch ) $.
    $( Detach a conjunction of truths in a biconditional.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    mpbi2and $p |- ( ph -> th ) $=
      ( wa jca mpbid ) ABCHDABCFGIEJ $.
      $( [24-Nov-2012] $) $( [6-Nov-2011] $)
  $}

  ${
    mpbir2and.1 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    mpbir2and.2 $e |- ( ph -> ch ) $.
    mpbir2and.3 $e |- ( ph -> th ) $.
    $( Detach a conjunction of truths in a biconditional.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    mpbir2and $p |- ( ph -> ps ) $=
      ( wa jca mpbird ) ABCDHACDFGIEJ $.
      $( [24-Nov-2012] $) $( [6-Nov-2011] $)
  $}

  $( Theorem *5.62 of [WhiteheadRussell] p. 125.  (Contributed by Roy F.
     Longton, 21-Jun-2005.) $)
  pm5.62 $p |- ( ( ( ph /\ ps ) \/ -. ps ) <-> ( ph \/ -. ps ) ) $=
    ( wa wn wo ordir exmid mpbiran2 ) ABCBDZEAIEBIEABIFBGH $.
    $( [21-Jun-2005] $)

  $( Theorem *5.63 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 25-Dec-2012.) $)
  pm5.63 $p |- ( ( ph \/ ps ) <-> ( ph \/ ( -. ph /\ ps ) ) ) $=
    ( wn wa wo ordi exmid mpbiran bicomi ) AACZBDEZABEZKAJELAJBFAGHI $.
    $( [25-Dec-2012] $) $( [3-Jan-2005] $)

  ${
    bianfi.1 $e |- -. ph $.
    $( A wff conjoined with falsehood is false.  (The proof was shortened by
       Wolf Lammen, 26-Nov-2012.) $)
    bianfi $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wa intnan 2false ) ABADCABCEF $.
      $( [26-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    bianfd.1 $e |- ( ph -> -. ps ) $.
    $( A wff conjoined with falsehood is false.  (The proof was shortened by
       Wolf Lammen, 5-Nov-2013.) $)
    bianfd $p |- ( ph -> ( ps <-> ( ps /\ ch ) ) ) $=
      ( wa intnanrd 2falsed ) ABBCEDABCDFG $.
      $( [5-Nov-2013] $) $( [27-Mar-1995] $)

    $( Obsolete proof of ~ bianfd as of 5-Nov-2013. $)
    bianfdOLD $p |- ( ph -> ( ps <-> ( ps /\ ch ) ) ) $=
      ( wa pm2.21d simpl impbid1 ) ABBCEZABIDFBCGH $.
      $( [27-Mar-1995] $)
  $}

  $( Theorem *4.43 of [WhiteheadRussell] p. 119.  (The proof was shortened by
     Wolf Lammen, 26-Nov-2012.) $)
  pm4.43 $p |- ( ph <-> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) $=
    ( wn wa wo pm3.24 biorfi ordi bitri ) AABBCZDZEABEAJEDKABFGABJHI $.
    $( [26-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.82 of [WhiteheadRussell] p. 122. $)
  pm4.82 $p |- ( ( ( ph -> ps ) /\ ( ph -> -. ps ) ) <-> -. ph ) $=
    ( wi wn wa pm2.65 imp pm2.21 jca impbii ) ABCZABDZCZEADZKMNABFGNKMABHALHIJ
    $.
    $( [3-Jan-2005] $)

  $( Theorem *4.83 of [WhiteheadRussell] p. 122. $)
  pm4.83 $p |- ( ( ( ph -> ps ) /\ ( -. ph -> ps ) ) <-> ps ) $=
    ( wn wo wi wa exmid a1bi jaob bitr2i ) BAACZDZBEABEKBEFLBAGHABKIJ $.
    $( [3-Jan-2005] $)

  $( Negation inferred from embedded conjunct.  (The proof was shortened by
     Wolf Lammen, 25-Nov-2012.) $)
  pclem6 $p |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ps ) $=
    ( wn wa wb ibar nbbn sylib con2i ) BABACZDZEZBJKELCBJFAKGHI $.
    $( [25-Nov-2012] $) $( [20-Aug-1993] $)

  $( A transitive law of equivalence.  Compare Theorem *4.22 of
     [WhiteheadRussell] p. 117. $)
  biantr $p |- ( ( ( ph <-> ps ) /\ ( ch <-> ps ) ) -> ( ph <-> ch ) ) $=
    ( wb id bibi2d biimparc ) CBDZACDABDHCBAHEFG $.
    $( [18-Aug-1993] $)

  $( Disjunction distributes over the biconditional.  An axiom of system DS in
     Vladimir Lifschitz, "On calculational proofs" (1998),
     ~ http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.25.3384 .  (The
     proof was shortened by Wolf Lammen, 4-Feb-2013.) $)
  orbidi $p |- ( ( ph \/ ( ps <-> ch ) ) <->
                ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) $=
    ( wn wb wi wo pm5.74 df-or bibi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZEL
    BCHAMIPNQOABIACIJK $.
    $( [4-Feb-2013] $) $( [8-Jan-2005] $)

  $( Lukasiewicz's shortest axiom for equivalential calculus.  Storrs McCall,
     ed., _Polish Logic 1920-1939_ (Oxford, 1967), p. 96. $)
  biluk $p |- ( ( ph <-> ps ) <-> ( ( ch <-> ps ) <-> ( ph <-> ch ) ) ) $=
    ( wb bicom bibi1i biass bitri mpbi bitr4i ) ABDZCBACDZDZDZCBDLDKCDZMDKNDOBA
    DZCDMKPCABEFBACGHKCMGICBLGJ $.
    $( [10-Jan-2005] $)

  $( Disjunction distributes over the biconditional.  Theorem *5.7 of
     [WhiteheadRussell] p. 125.  This theorem is similar to ~ orbidi .
     (Contributed by Roy F. Longton, 21-Jun-2005.) $)
  pm5.7 $p |- ( ( ( ph \/ ch ) <-> ( ps \/ ch ) ) <->
               ( ch \/ ( ph <-> ps ) ) ) $=
    ( wb wo orbidi orcom bibi12i bitr2i ) CABDECAEZCBEZDACEZBCEZDCABFJLKMCAGCBG
    HI $.
    $( [21-Jun-2005] $)

  $( Dijkstra-Scholten's Golden Rule for calculational proofs. $)
  bigolden $p |- ( ( ( ph /\ ps ) <-> ph ) <-> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wi wa wb wo pm4.71 pm4.72 bicom 3bitr3ri ) ABCAABDZEBABFEKAEABGABHAKIJ $.
    $( [10-Jan-2005] $)

  $( Theorem *5.71 of [WhiteheadRussell] p. 125.  (Contributed by Roy F.
     Longton, 23-Jun-2005.) $)
  pm5.71 $p |- ( ( ps -> -. ch ) -> ( ( ( ph \/ ps ) /\ ch ) <->
                ( ph /\ ch ) ) ) $=
    ( wn wo wa wb orel2 orc impbid1 anbi1d pm2.21 pm5.32rd ja ) BCDZABEZCFACFGB
    DZPACQPABAHABIJKOCPACPAGLMN $.
    $( [23-Jun-2005] $)

  $( Theorem *5.75 of [WhiteheadRussell] p. 126.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.)  (The proof was shortened by Wolf Lammen,
     23-Dec-2012.) $)
  pm5.75 $p |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) ->
                ( ( ph /\ -. ps ) <-> ch ) ) $=
    ( wo wb wn wa wi anbi1 anbi1i pm5.61 syl6bb pm4.71 biimpi bicomd sylan9bbr
    orcom bitri ) ABCDZEZABFZGZCUAGZCUAHZCTUBSUAGZUCASUAIUECBDZUAGUCSUFUABCQJCB
    KRLUDCUCUDCUCECUAMNOP $.
    $( [23-Dec-2012] $) $( [3-Jan-2005] $)

  $( Removal of conjunct from one side of an equivalence. $)
  bimsc1 $p |- ( ( ( ph -> ps ) /\ ( ch <-> ( ps /\ ph ) ) )
               -> ( ch <-> ph ) ) $=
    ( wi wa wb simpr ancr impbid2 bibi2d biimpa ) ABDZCBAEZFCAFLMACLMABAGABHIJK
    $.
    $( [5-Aug-1993] $)

  $( The disjunction of the four possible combinations of two wffs and their
     negations is always true.  (Contributed by David Abernethy,
     28-Jan-2014.) $)
  4exmid $p |- ( ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) )
              \/ ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wb wn wo wa exmid dfbi3 xor orbi12i mpbi ) ABCZLDZEABFADZBDZFEZAOFBNFEZEL
    GLPMQABHABIJK $.
    $( [1-Feb-2014] $)

  ${
    ecase2d.1 $e |- ( ph -> ps ) $.
    ecase2d.2 $e |- ( ph -> -. ( ps /\ ch ) ) $.
    ecase2d.3 $e |- ( ph -> -. ( ps /\ th ) ) $.
    ecase2d.4 $e |- ( ph -> ( ta \/ ( ch \/ th ) ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Wolf
       Lammen, 22-Dec-2012.) $)
    ecase2d $p |- ( ph -> ta ) $=
      ( wo wn wa wi imnan sylibr mpd ioran sylanbrc ord mt3d ) AECDJZACKZDKZUAK
      ABUBFABCLKBUBMGBCNOPABUCFABDLKBUCMHBDNOPCDQRAEUAIST $.
      $( [22-Dec-2012] $) $( [21-Apr-1994] $)
  $}

  ${
    ecase3.1 $e |- ( ph -> ch ) $.
    ecase3.2 $e |- ( ps -> ch ) $.
    ecase3.3 $e |- ( -. ( ph \/ ps ) -> ch ) $.
    $( Inference for elimination by cases.  (The proof was shortened by Wolf
       Lammen, 26-Nov-2012.) $)
    ecase3 $p |- ch $=
      ( wo jaoi pm2.61i ) ABGCACBDEHFI $.
      $( [26-Nov-2012] $) $( [23-Mar-1995] $)
  $}

  ${
    ecase.1 $e |- ( -. ph -> ch ) $.
    ecase.2 $e |- ( -. ps -> ch ) $.
    ecase.3 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Inference for elimination by cases. $)
    ecase $p |- ch $=
      ( ex pm2.61nii ) ABCABCFGDEH $.
      $( [13-Jul-2005] $)
  $}

  ${
    ecase3d.1 $e |- ( ph -> ( ps -> th ) ) $.
    ecase3d.2 $e |- ( ph -> ( ch -> th ) ) $.
    ecase3d.3 $e |- ( ph -> ( -. ( ps \/ ch ) -> th ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    ecase3d $p |- ( ph -> th ) $=
      ( wo jaod pm2.61d ) ABCHDABDCEFIGJ $.
      $( [12-May-2011] $) $( [2-May-1996] $)
  $}

  ${
    ecased.1 $e |- ( ph -> ( -. ps -> th ) ) $.
    ecased.2 $e |- ( ph -> ( -. ch -> th ) ) $.
    ecased.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Deduction for elimination by cases. $)
    ecased $p |- ( ph -> th ) $=
      ( wn wo wa pm3.11 syl5 ecase3d ) ABHZCHZDEFNOIHBCJADBCKGLM $.
      $( [8-Oct-2012] $)
  $}

  ${
    ecase3ad.1 $e |- ( ph -> ( ps -> th ) ) $.
    ecase3ad.2 $e |- ( ph -> ( ch -> th ) ) $.
    ecase3ad.3 $e |- ( ph -> ( ( -. ps /\ -. ch ) -> th ) ) $.
    $( Deduction for elimination by cases. $)
    ecase3ad $p |- ( ph -> th ) $=
      ( wn notnot2 syl5 ecased ) ABHZCHZDLHBADBIEJMHCADCIFJGK $.
      $( [24-May-2013] $)
  $}

  ${
    ccase.1 $e |- ( ( ph /\ ps ) -> ta ) $.
    ccase.2 $e |- ( ( ch /\ ps ) -> ta ) $.
    ccase.3 $e |- ( ( ph /\ th ) -> ta ) $.
    ccase.4 $e |- ( ( ch /\ th ) -> ta ) $.
    $( Inference for combining cases.  (The proof was shortened by Wolf Lammen,
       6-Jan-2013.) $)
    ccase $p |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) $=
      ( wo jaoian jaodan ) ACJBEDABECFGKADECHIKL $.
      $( [6-Jan-2013] $) $( [29-Jul-1999] $)
  $}

  ${
    ccased.1 $e |- ( ph -> ( ( ps /\ ch ) -> et ) ) $.
    ccased.2 $e |- ( ph -> ( ( th /\ ch ) -> et ) ) $.
    ccased.3 $e |- ( ph -> ( ( ps /\ ta ) -> et ) ) $.
    ccased.4 $e |- ( ph -> ( ( th /\ ta ) -> et ) ) $.
    $( Deduction for combining cases. $)
    ccased $p |- ( ph -> ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) -> et ) ) $=
      ( wo wa wi com12 ccase ) BDKCEKLAFBCDEAFMABCLFGNADCLFHNABELFINADELFJNON
      $.
      $( [9-May-2004] $)
  $}

  ${
    ccase2.1 $e |- ( ( ph /\ ps ) -> ta ) $.
    ccase2.2 $e |- ( ch -> ta ) $.
    ccase2.3 $e |- ( th -> ta ) $.
    $( Inference for combining cases. $)
    ccase2 $p |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) $=
      ( adantr adantl ccase ) ABCDEFCEBGIDEAHJDECHJK $.
      $( [29-Jul-1999] $)
  $}

  ${
    4cases.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    4cases.2 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    4cases.3 $e |- ( ( -. ph /\ ps ) -> ch ) $.
    4cases.4 $e |- ( ( -. ph /\ -. ps ) -> ch ) $.
    $( Inference eliminating two antecedents from the four possible cases that
       result from their true/false combinations. $)
    4cases $p |- ch $=
      ( pm2.61ian wn pm2.61i ) BCABCDFHABICEGHJ $.
      $( [25-Oct-2003] $)
  $}

  ${
    4casesdan.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    4casesdan.2 $e |- ( ( ph /\ ( ps /\ -. ch ) ) -> th ) $.
    4casesdan.3 $e |- ( ( ph /\ ( -. ps /\ ch ) ) -> th ) $.
    4casesdan.4 $e |- ( ( ph /\ ( -. ps /\ -. ch ) ) -> th ) $.
    $( Deduction eliminating two antecedents from the four possible cases that
       result from their true/false combinations. $)
    4casesdan $p |- ( ph -> th ) $=
      ( wi wa expcom wn 4cases ) BCADIABCJDEKABCLZJDFKABLZCJDGKAONJDHKM $.
      $( [19-Mar-2013] $)
  $}

  ${
    niabn.1 $e |- ph $.
    $( Miscellaneous inference relating falsehoods. $)
    niabn $p |- ( -. ps -> ( ( ch /\ ps ) <-> -. ph ) ) $=
      ( wa wn simpr pm2.24i pm5.21ni ) CBEBAFCBGABDHI $.
      $( [31-Mar-1994] $)
  $}

  $( Lemma for an alternate version of weak deduction theorem.  (The proof was
     shortened by Andrew Salmon, 7-May-2011.)  (The proof was shortened by Wolf
     Lammen, 4-Dec-2012.) $)
  dedlem0a $p |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) $=
    ( wa wi iba wb ax-1 biimt syl bitrd ) ABBADZCAEZLEZABFAMLNGACHMLIJK $.
    $( [4-Dec-2012] $) $( [2-Apr-1994] $)

  $( Lemma for an alternate version of weak deduction theorem. $)
  dedlem0b $p |- ( -. ph -> ( ps <-> ( ( ps -> ph ) -> ( ch /\ ph ) ) ) ) $=
    ( wn wi wa pm2.21 imim2d com23 simpr imim12i con1d com12 impbid ) ADZBBAEZC
    AFZEZOPBQOAQBAQGHIROBRBABDPQABAGCAJKLMN $.
    $( [2-Apr-1994] $)

  $( Lemma for weak deduction theorem.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  dedlema $p |- ( ph -> ( ps <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) $=
    ( wa wn wo orc expcom wi simpl a1i pm2.24 adantld jaod impbid ) ABBADZCAEZD
    ZFZBASPRGHAPBRPBIABAJKAQBCABLMNO $.
    $( [12-May-2011] $) $( [26-Jun-2002] $)

  $( Lemma for weak deduction theorem.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  dedlemb $p |- ( -. ph -> ( ch <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) $=
    ( wn wa wo olc expcom pm2.21 adantld wi simpl a1i jaod impbid ) ADZCBAEZCPE
    ZFZCPSRQGHPQCRPACBACIJRCKPCPLMNO $.
    $( [12-May-2011] $) $( [15-May-1999] $)

  ${
    elimh.1 $e |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( ch <-> ta ) ) $.
    elimh.2 $e |- ( ( ps <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( th <-> ta ) ) $.
    elimh.3 $e |- th $.
    $( Hypothesis builder for weak deduction theorem.  For more information,
       see the Deduction Theorem link on the Metamath Proof Explorer home
       page. $)
    elimh $p |- ta $=
      ( wa wn wo wb dedlema syl ibi dedlemb mpbii pm2.61i ) CECECAACIBCJZIKZLCE
      LCABMFNOSDEHSBTLDELCABPGNQR $.
      $( [26-Jun-2002] $)
  $}

  ${
    dedt.1 $e |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( th <-> ta ) ) $.
    dedt.2 $e |- ta $.
    $( The weak deduction theorem.  For more information, see the Deduction
       Theorem link on the Metamath Proof Explorer home page. $)
    dedt $p |- ( ch -> th ) $=
      ( wa wn wo wb dedlema mpbiri syl ) CAACHBCIHJKZDCABLODEGFMN $.
      $( [26-Jun-2002] $)
  $}

  $( Contraposition.  Theorem *2.16 of [WhiteheadRussell] p. 103.  This version
     of ~ con3 demonstrates the use of the weak deduction theorem to derive it
     from ~ con3i . $)
  con3th $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi wn wa wo wb id notbid imbi1d imbi2d elimh con3i dedt ) BAABCZBDZADZCBO
    EAODEFZDZQCBRGZPSQTBRTHZIJARBAOAACARCTBRAUAKARGZARAUBHKAHLMN $.
    $( [27-Jun-2002] $)

  $( The consensus theorem.  This theorem and its dual (with ` \/ ` and ` /\ `
     interchanged) are commonly used in computer logic design to eliminate
     redundant terms from Boolean expressions.  Specifically, we prove that the
     term ` ( ps /\ ch ) ` on the left-hand side is redundant.  (The proof was
     shortened by Andrew Salmon, 13-May-2011.)  (The proof was shortened by
     Wolf Lammen, 20-Jan-2013.) $)
  consensus $p |- ( ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) <->
                      ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) $=
    ( wa wn wo id orc adantrr olc adantrl pm2.61ian jaoi impbii ) ABDZAEZCDZFZB
    CDZFRRRSRGASRABRCOQHIPCRBQOJKLMRSHN $.
    $( [20-Jan-2013] $) $( [16-May-2003] $)

  $( Theorem *4.42 of [WhiteheadRussell] p. 119.  (Contributed by Roy F.
     Longton, 21-Jun-2005.) $)
  pm4.42 $p |- ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) $=
    ( wa wn wo wb dedlema dedlemb pm2.61i ) BAABCABDCEFBAAGBAAHI $.
    $( [21-Jun-2005] $)

  ${
    ninba.1 $e |- ph $.
    $( Miscellaneous inference relating falsehoods. $)
    ninba $p |- ( -. ps -> ( -. ph <-> ( ch /\ ps ) ) ) $=
      ( wn wa niabn bicomd ) BECBFAEABCDGH $.
      $( [31-Mar-1994] $)
  $}

  ${
    prlem1.1 $e |- ( ph -> ( et <-> ch ) ) $.
    prlem1.2 $e |- ( ps -> -. th ) $.
    $( A specialized lemma for set theory (to derive the Axiom of Pairing).
       (The proof was shortened by Andrew Salmon, 13-May-2011.)  (The proof was
       shortened by Wolf Lammen, 5-Jan-2013.) $)
    prlem1 $p |- ( ph -> ( ps ->
                  ( ( ( ps /\ ch ) \/ ( th /\ ta ) ) -> et ) ) ) $=
      ( wa wo wi biimprd adantld pm2.21d adantrd jaao ex ) ABBCIZDEIZJFKARFBSAC
      FBAFCGLMBDFEBDFHNOPQ $.
      $( [5-Jan-2013] $) $( [18-Oct-1995] $)
  $}

  $( A specialized lemma for set theory (to derive the Axiom of Pairing).  (The
     proof was shortened by Andrew Salmon, 13-May-2011.)  (The proof was
     shortened by Wolf Lammen, 9-Dec-2012.) $)
  prlem2 $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) ) $=
    ( wa wo simpl orim12i pm4.71ri ) ABEZCDEZFACFJAKCABGCDGHI $.
    $( [9-Dec-2012] $) $( [5-Aug-1993] $)

  ${
    oplem1.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    oplem1.2 $e |- ( ph -> ( th \/ ta ) ) $.
    oplem1.3 $e |- ( ps <-> th ) $.
    oplem1.4 $e |- ( ch -> ( th <-> ta ) ) $.
    $( A specialized lemma for set theory (ordered pair theorem).  (The proof
       was shortened by Wolf Lammen, 8-Dec-2012.) $)
    oplem1 $p |- ( ph -> ps ) $=
      ( wn wa notbii ord syl5bir jcad biimpar syl6 pm2.18d sylibr ) ADBADADJZCE
      KDATCETBJACBDHLABCFMNADEGMOCDEIPQRHS $.
      $( [8-Dec-2012] $) $( [18-Oct-1995] $)
  $}

  $( Lemma used in construction of real numbers.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  rnlem $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
  ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) $=
    ( wa an4 biimpi an42 biimpri jca adantl impbii ) ABECDEEZACEBDEEZADEBCEEZEM
    NOMNABCDFGOMADBCHZIJOMNOMPGKL $.
    $( [26-Jun-2011] $) $( [4-Sep-1995] $)

  $( A single axiom for Boolean algebra known as DN_1.  See
     ~ http://www-unix.mcs.anl.gov/~~mccune/papers/basax/v12.pdf .
     (Contributed by Jeffrey Hankins, 3-Jul-2009.)  (The proof was shortened by
     Andrew Salmon, 13-May-2011.)  (The proof was shortened by Wolf Lammen,
     6-Jan-2013.) $)
  dn1 $p |- ( -. ( -. ( -. ( ph \/ ps ) \/ ch ) \/
            -. ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> ch ) $=
    ( wo wn wa wi pm2.45 imnan mpbi biorfi orcom ordir 3bitri pm4.45 anor bitri
    orbi2i anbi2i 3bitrri ) CABEFZCEZACEZGZUCACFCDEZFEFZEZGUCFUHFEFCCUBAGZEUICE
    UEUICUBAFHUIFABIUBAJKLCUIMUBACNOUDUHUCCUGACCUFGUGCDPCUFQRSTUCUHQUA $.
    $( [6-Jan-2013] $) $( [22-Jun-2005] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Abbreviated conjunction and disjunction of three wff's
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff definition to include 3-way disjunction ('or'). $)
  w3o $a wff ( ph \/ ps \/ ch ) $.
  $( Extend wff definition to include 3-way conjunction ('and'). $)
  w3a $a wff ( ph /\ ps /\ ch ) $.

  $( These abbreviations help eliminate parentheses to aid readability. $)

  $( Define disjunction ('or') of 3 wff's.  Definition *2.33 of
     [WhiteheadRussell] p. 105.  This abbreviation reduces the number of
     parentheses and emphasizes that the order of bracketing is not important
     by virtue of the associative law ~ orass . $)
  df-3or $a |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) $.

  $( Define conjunction ('and') of 3 wff.s.  Definition *4.34 of
     [WhiteheadRussell] p. 118.  This abbreviation reduces the number of
     parentheses and emphasizes that the order of bracketing is not important
     by virtue of the associative law ~ anass . $)
  df-3an $a |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) $.

  $( Associative law for triple disjunction. $)
  3orass $p |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) $=
    ( w3o wo df-3or orass bitri ) ABCDABECEABCEEABCFABCGH $.
    $( [8-Apr-1994] $)

  $( Associative law for triple conjunction. $)
  3anass $p |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( w3a wa df-3an anass bitri ) ABCDABECEABCEEABCFABCGH $.
    $( [8-Apr-1994] $)

  $( Rotation law for triple conjunction. $)
  3anrot $p |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ch /\ ph ) ) $=
    ( wa w3a ancom 3anass df-3an 3bitr4i ) ABCDZDJADABCEBCAEAJFABCGBCAHI $.
    $( [8-Apr-1994] $)

  $( Rotation law for triple disjunction. $)
  3orrot $p |- ( ( ph \/ ps \/ ch ) <-> ( ps \/ ch \/ ph ) ) $=
    ( wo w3o orcom 3orass df-3or 3bitr4i ) ABCDZDJADABCEBCAEAJFABCGBCAHI $.
    $( [4-Apr-1995] $)

  $( Commutation law for triple conjunction. $)
  3ancoma $p |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) $=
    ( wa w3a ancom anbi1i df-3an 3bitr4i ) ABDZCDBADZCDABCEBACEJKCABFGABCHBACHI
    $.
    $( [21-Apr-1994] $)

  $( Commutation law for triple conjunction. $)
  3ancomb $p |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ch /\ ps ) ) $=
    ( w3a 3ancoma 3anrot bitri ) ABCDBACDACBDABCEBACFG $.
    $( [21-Apr-1994] $)

  $( Commutation law for triple disjunction.  (Contributed by Scott Fenton,
     20-Apr-2011.) $)
  3orcomb $p |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ch \/ ps ) ) $=
    ( wo w3o orcom orbi2i 3orass 3bitr4i ) ABCDZDACBDZDABCEACBEJKABCFGABCHACBHI
    $.
    $( [20-Feb-2012] $) $( [20-Apr-2011] $)

  $( Reversal law for triple conjunction. $)
  3anrev $p |- ( ( ph /\ ps /\ ch ) <-> ( ch /\ ps /\ ph ) ) $=
    ( w3a 3ancoma 3anrot bitr4i ) ABCDBACDCBADABCECBAFG $.
    $( [21-Apr-1994] $)

  $( Triple conjunction expressed in terms of triple disjunction.  (Contributed
     by Jeff Hankins, 15-Aug-2009.) $)
  3anor $p |- ( ( ph /\ ps /\ ch ) <-> -. ( -. ph \/ -. ps \/ -. ch ) ) $=
    ( w3a wa wn w3o df-3an wo anor ianor orbi1i xchbinx df-3or xchbinxr bitri )
    ABCDABEZCEZAFZBFZCFZGZFABCHRSTIZUAIZUBRQFZUAIUDQCJUEUCUAABKLMSTUANOP $.
    $( [2-Mar-2011] $) $( [28-Jul-2009] $)

  $( Negated triple conjunction expressed in terms of triple disjunction.
     (Contributed by Jeff Hankins, 15-Aug-2009.)  (The proof was shortened by
     Andrew Salmon, 13-May-2011.) $)
  3ianor $p |- ( -. ( ph /\ ps /\ ch ) <-> ( -. ph \/ -. ps \/ -. ch ) ) $=
    ( wn w3o w3a 3anor con2bii bicomi ) ADBDCDEZABCFZDKJABCGHI $.
    $( [16-May-2011] $) $( [28-Jul-2009] $)

  $( Negated triple disjunction as triple conjunction.  (Contributed by Scott
     Fenton, 19-Apr-2011.) $)
  3ioran $p |- ( -. ( ph \/ ps \/ ch ) <-> ( -. ph /\ -. ps /\ -. ch ) ) $=
    ( wo wn wa w3o w3a ioran anbi1i df-3or xchnxbir df-3an 3bitr4i ) ABDZEZCEZF
    ZAEZBEZFZQFABCGZESTQHPUAQABIJOCDRUBOCIABCKLSTQMN $.
    $( [19-Apr-2011] $)

  $( Triple disjunction in terms of triple conjunction. $)
  3oran $p |- ( ( ph \/ ps \/ ch ) <-> -. ( -. ph /\ -. ps /\ -. ch ) ) $=
    ( wn w3a w3o 3ioran con1bii bicomi ) ADBDCDEZDABCFZKJABCGHI $.
    $( [8-Oct-2012] $)

  $( Simplification of triple conjunction. $)
  3simpa $p |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) $=
    ( w3a wa df-3an simplbi ) ABCDABECABCFG $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  3simpb $p |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ch ) ) $=
    ( w3a wa 3ancomb 3simpa sylbi ) ABCDACBDACEABCFACBGH $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  3simpc $p |- ( ( ph /\ ps /\ ch ) -> ( ps /\ ch ) ) $=
    ( w3a wa 3anrot 3simpa sylbi ) ABCDBCADBCEABCFBCAGH $.
    $( [16-May-2011] $) $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp1 $p |- ( ( ph /\ ps /\ ch ) -> ph ) $=
    ( w3a 3simpa simpld ) ABCDABABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp2 $p |- ( ( ph /\ ps /\ ch ) -> ps ) $=
    ( w3a 3simpa simprd ) ABCDABABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp3 $p |- ( ( ph /\ ps /\ ch ) -> ch ) $=
    ( w3a 3simpc simprd ) ABCDBCABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl1 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ph ) $=
    ( w3a simp1 adantr ) ABCEADABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl2 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ps ) $=
    ( w3a simp2 adantr ) ABCEBDABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl3 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ch ) $=
    ( w3a simp3 adantr ) ABCECDABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr1 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ps ) $=
    ( w3a simp1 adantl ) BCDEBABCDFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr2 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ch ) $=
    ( w3a simp2 adantl ) BCDECABCDFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr3 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> th ) $=
    ( w3a simp3 adantl ) BCDEDABCDFG $.
    $( [17-Nov-2009] $)

  ${
    3simp1i.1 $e |- ( ph /\ ps /\ ch ) $.
    $( Infer a conjunct from a triple conjunction. $)
    simp1i $p |- ph $=
      ( w3a simp1 ax-mp ) ABCEADABCFG $.
      $( [19-Apr-2005] $)

    $( Infer a conjunct from a triple conjunction. $)
    simp2i $p |- ps $=
      ( w3a simp2 ax-mp ) ABCEBDABCFG $.
      $( [19-Apr-2005] $)

    $( Infer a conjunct from a triple conjunction. $)
    simp3i $p |- ch $=
      ( w3a simp3 ax-mp ) ABCECDABCFG $.
      $( [19-Apr-2005] $)
  $}

  ${
    3simp1d.1 $e |- ( ph -> ( ps /\ ch /\ th ) ) $.
    $( Deduce a conjunct from a triple conjunction. $)
    simp1d $p |- ( ph -> ps ) $=
      ( w3a simp1 syl ) ABCDFBEBCDGH $.
      $( [4-Sep-2005] $)

    $( Deduce a conjunct from a triple conjunction. $)
    simp2d $p |- ( ph -> ch ) $=
      ( w3a simp2 syl ) ABCDFCEBCDGH $.
      $( [4-Sep-2005] $)

    $( Deduce a conjunct from a triple conjunction. $)
    simp3d $p |- ( ph -> th ) $=
      ( w3a simp3 syl ) ABCDFDEBCDGH $.
      $( [4-Sep-2005] $)
  $}

  ${
    3simp1bi.1 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp1bi $p |- ( ph -> ps ) $=
      ( w3a biimpi simp1d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)

    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp2bi $p |- ( ph -> ch ) $=
      ( w3a biimpi simp2d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)

    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp3bi $p |- ( ph -> th ) $=
      ( w3a biimpi simp3d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    3adant.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adant1 $p |- ( ( th /\ ph /\ ps ) -> ch ) $=
      ( w3a wa 3simpc syl ) DABFABGCDABHEI $.
      $( [16-Jul-1995] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2 $p |- ( ( ph /\ th /\ ps ) -> ch ) $=
      ( w3a wa 3simpb syl ) ADBFABGCADBHEI $.
      $( [16-Jul-1995] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3 $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( w3a wa 3simpa syl ) ABDFABGCABDHEI $.
      $( [16-Jul-1995] $)
  $}

  ${
    3ad2ant.1 $e |- ( ph -> ch ) $.
    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant1 $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( adantr 3adant2 ) ADCBACDEFG $.
      $( [21-Apr-2005] $)

    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant2 $p |- ( ( ps /\ ph /\ th ) -> ch ) $=
      ( adantr 3adant1 ) ADCBACDEFG $.
      $( [21-Apr-2005] $)

    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant3 $p |- ( ( ps /\ th /\ ph ) -> ch ) $=
      ( adantl 3adant1 ) DACBACDEFG $.
      $( [21-Apr-2005] $)
  $}

  $( Simplification of triple conjunction. $)
  simp1l $p |- ( ( ( ph /\ ps ) /\ ch /\ th ) -> ph ) $=
    ( wa simpl 3ad2ant1 ) ABECADABFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp1r $p |- ( ( ( ph /\ ps ) /\ ch /\ th ) -> ps ) $=
    ( wa simpr 3ad2ant1 ) ABECBDABFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp2l $p |- ( ( ph /\ ( ps /\ ch ) /\ th ) -> ps ) $=
    ( wa simpl 3ad2ant2 ) BCEABDBCFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp2r $p |- ( ( ph /\ ( ps /\ ch ) /\ th ) -> ch ) $=
    ( wa simpr 3ad2ant2 ) BCEACDBCFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp3l $p |- ( ( ph /\ ps /\ ( ch /\ th ) ) -> ch ) $=
    ( wa simpl 3ad2ant3 ) CDEACBCDFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp3r $p |- ( ( ph /\ ps /\ ( ch /\ th ) ) -> th ) $=
    ( wa simpr 3ad2ant3 ) CDEADBCDFG $.
    $( [9-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp11 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ph ) $=
    ( w3a simp1 3ad2ant1 ) ABCFDAEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp12 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ps ) $=
    ( w3a simp2 3ad2ant1 ) ABCFDBEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp13 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ch ) $=
    ( w3a simp3 3ad2ant1 ) ABCFDCEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp21 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> ps ) $=
    ( w3a simp1 3ad2ant2 ) BCDFABEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp22 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> ch ) $=
    ( w3a simp2 3ad2ant2 ) BCDFACEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp23 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> th ) $=
    ( w3a simp3 3ad2ant2 ) BCDFADEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp31 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp1 3ad2ant3 ) CDEFACBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp32 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> th ) $=
    ( w3a simp2 3ad2ant3 ) CDEFADBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp33 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> ta ) $=
    ( w3a simp3 3ad2ant3 ) CDEFAEBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of conjunction. $)
  simpll1 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ph ) $=
    ( w3a wa simpl1 adantr ) ABCFDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpll2 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ps ) $=
    ( w3a wa simpl2 adantr ) ABCFDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpll3 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ch ) $=
    ( w3a wa simpl3 adantr ) ABCFDGCEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr1 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ph ) $=
    ( w3a wa simpr1 adantr ) DABCFGAEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr2 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ps ) $=
    ( w3a wa simpr2 adantr ) DABCFGBEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr3 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ch ) $=
    ( w3a wa simpr3 adantr ) DABCFGCEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl1 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ph ) $=
    ( w3a wa simpl1 adantl ) ABCFDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl2 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ps ) $=
    ( w3a wa simpl2 adantl ) ABCFDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl3 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ch ) $=
    ( w3a wa simpl3 adantl ) ABCFDGCEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr1 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a wa simpr1 adantl ) DABCFGAEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr2 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a wa simpr2 adantl ) DABCFGBEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr3 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a wa simpr3 adantl ) DABCFGCEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl1l $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta ) -> ph ) $=
    ( wa w3a simp1l adantr ) ABFCDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl1r $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta ) -> ps ) $=
    ( wa w3a simp1r adantr ) ABFCDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl2l $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta ) -> ph ) $=
    ( wa w3a simp2l adantr ) CABFDGAECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl2r $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta ) -> ps ) $=
    ( wa w3a simp2r adantr ) CABFDGBECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl3l $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta ) -> ph ) $=
    ( wa w3a simp3l adantr ) CDABFGAECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl3r $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta ) -> ps ) $=
    ( wa w3a simp3r adantr ) CDABFGBECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr1l $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ph ) $=
    ( wa w3a simp1l adantl ) ABFCDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr1r $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ps ) $=
    ( wa w3a simp1r adantl ) ABFCDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr2l $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ph ) $=
    ( wa w3a simp2l adantl ) CABFDGAECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr2r $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ps ) $=
    ( wa w3a simp2r adantl ) CABFDGBECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr3l $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa w3a simp3l adantl ) CDABFGAECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr3r $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa w3a simp3r adantl ) CDABFGBECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1ll $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th /\ ta ) -> ph ) $=
    ( wa simpll 3ad2ant1 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1lr $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th /\ ta ) -> ps ) $=
    ( wa simplr 3ad2ant1 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1rl $p |- ( ( ( ch /\ ( ph /\ ps ) ) /\ th /\ ta ) -> ph ) $=
    ( wa simprl 3ad2ant1 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1rr $p |- ( ( ( ch /\ ( ph /\ ps ) ) /\ th /\ ta ) -> ps ) $=
    ( wa simprr 3ad2ant1 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2ll $p |- ( ( th /\ ( ( ph /\ ps ) /\ ch ) /\ ta ) -> ph ) $=
    ( wa simpll 3ad2ant2 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2lr $p |- ( ( th /\ ( ( ph /\ ps ) /\ ch ) /\ ta ) -> ps ) $=
    ( wa simplr 3ad2ant2 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2rl $p |- ( ( th /\ ( ch /\ ( ph /\ ps ) ) /\ ta ) -> ph ) $=
    ( wa simprl 3ad2ant2 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2rr $p |- ( ( th /\ ( ch /\ ( ph /\ ps ) ) /\ ta ) -> ps ) $=
    ( wa simprr 3ad2ant2 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3ll $p |- ( ( th /\ ta /\ ( ( ph /\ ps ) /\ ch ) ) -> ph ) $=
    ( wa simpll 3ad2ant3 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3lr $p |- ( ( th /\ ta /\ ( ( ph /\ ps ) /\ ch ) ) -> ps ) $=
    ( wa simplr 3ad2ant3 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3rl $p |- ( ( th /\ ta /\ ( ch /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa simprl 3ad2ant3 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3rr $p |- ( ( th /\ ta /\ ( ch /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa simprr 3ad2ant3 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl11 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ph ) $=
    ( w3a simp11 adantr ) ABCGDEGAFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl12 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ps ) $=
    ( w3a simp12 adantr ) ABCGDEGBFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl13 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ch ) $=
    ( w3a simp13 adantr ) ABCGDEGCFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl21 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ph ) $=
    ( w3a simp21 adantr ) DABCGEGAFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl22 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ps ) $=
    ( w3a simp22 adantr ) DABCGEGBFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl23 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ch ) $=
    ( w3a simp23 adantr ) DABCGEGCFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl31 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ph ) $=
    ( w3a simp31 adantr ) DEABCGGAFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl32 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ps ) $=
    ( w3a simp32 adantr ) DEABCGGBFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl33 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ch ) $=
    ( w3a simp33 adantr ) DEABCGGCFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr11 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ph ) $=
    ( w3a simp11 adantl ) ABCGDEGAFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr12 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ps ) $=
    ( w3a simp12 adantl ) ABCGDEGBFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr13 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp13 adantl ) ABCGDEGCFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr21 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ph ) $=
    ( w3a simp21 adantl ) DABCGEGAFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr22 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ps ) $=
    ( w3a simp22 adantl ) DABCGEGBFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr23 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ch ) $=
    ( w3a simp23 adantl ) DABCGEGCFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr31 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a simp31 adantl ) DEABCGGAFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr32 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a simp32 adantl ) DEABCGGBFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr33 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a simp33 adantl ) DEABCGGCFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l1 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant1 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l2 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant1 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l3 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant1 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r1 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant1 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r2 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant1 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r3 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant1 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l1 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant2 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l2 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant2 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l3 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant2 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r1 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant2 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r2 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant2 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r3 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant2 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l1 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant3 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l2 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant3 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l3 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant3 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r1 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant3 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r2 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant3 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r3 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant3 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp11l $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant1 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp11r $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant1 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp12l $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant1 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp12r $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant1 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp13l $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant1 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp13r $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant1 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp21l $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) /\ et ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant2 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp21r $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) /\ et ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant2 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp22l $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) /\ et ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant2 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp22r $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) /\ et ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant2 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp23l $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) /\ et ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant2 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp23r $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) /\ et ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant2 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp31l $p |- ( ( ta /\ et /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant3 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp31r $p |- ( ( ta /\ et /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant3 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp32l $p |- ( ( ta /\ et /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant3 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp32r $p |- ( ( ta /\ et /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant3 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp33l $p |- ( ( ta /\ et /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant3 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp33r $p |- ( ( ta /\ et /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant3 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp111 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp11 3ad2ant1 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp112 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp12 3ad2ant1 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp113 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp13 3ad2ant1 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp121 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp21 3ad2ant1 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp122 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp22 3ad2ant1 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp123 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp23 3ad2ant1 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp131 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp31 3ad2ant1 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp132 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp32 3ad2ant1 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp133 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp33 3ad2ant1 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp211 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ph ) $=
    ( w3a simp11 3ad2ant2 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp212 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ps ) $=
    ( w3a simp12 3ad2ant2 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp213 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ch ) $=
    ( w3a simp13 3ad2ant2 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp221 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ph ) $=
    ( w3a simp21 3ad2ant2 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp222 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ps ) $=
    ( w3a simp22 3ad2ant2 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp223 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ch ) $=
    ( w3a simp23 3ad2ant2 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp231 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ph ) $=
    ( w3a simp31 3ad2ant2 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp232 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ps ) $=
    ( w3a simp32 3ad2ant2 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp233 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ch ) $=
    ( w3a simp33 3ad2ant2 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp311 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ph ) $=
    ( w3a simp11 3ad2ant3 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp312 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ps ) $=
    ( w3a simp12 3ad2ant3 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp313 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp13 3ad2ant3 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp321 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ph ) $=
    ( w3a simp21 3ad2ant3 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp322 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ps ) $=
    ( w3a simp22 3ad2ant3 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp323 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ch ) $=
    ( w3a simp23 3ad2ant3 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp331 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a simp31 3ad2ant3 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp332 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a simp32 3ad2ant3 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp333 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a simp33 3ad2ant3 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  ${
    3adantl.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adantl1 $p |- ( ( ( ta /\ ph /\ ps ) /\ ch ) -> th ) $=
      ( w3a wa 3simpc sylan ) EABGABHCDEABIFJ $.
      $( [24-Feb-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantl2 $p |- ( ( ( ph /\ ta /\ ps ) /\ ch ) -> th ) $=
      ( w3a wa 3simpb sylan ) AEBGABHCDAEBIFJ $.
      $( [24-Feb-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantl3 $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( w3a wa 3simpa sylan ) ABEGABHCDABEIFJ $.
      $( [24-Feb-2005] $)
  $}

  ${
    3adantr.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adantr1 $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( w3a wa 3simpc sylan2 ) EBCGABCHDEBCIFJ $.
      $( [27-Apr-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantr2 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( w3a wa 3simpb sylan2 ) BECGABCHDBECIFJ $.
      $( [27-Apr-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantr3 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( w3a wa 3simpa sylan2 ) BCEGABCHDBCEIFJ $.
      $( [27-Apr-2005] $)
  $}

  ${
    3ad2antl.1 $e |- ( ( ph /\ ch ) -> th ) $.
    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl1 $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( adantlr 3adantl2 ) AECDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl2 $p |- ( ( ( ps /\ ph /\ ta ) /\ ch ) -> th ) $=
      ( adantlr 3adantl1 ) AECDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl3 $p |- ( ( ( ps /\ ta /\ ph ) /\ ch ) -> th ) $=
      ( adantll 3adantl1 ) EACDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr1 $p |- ( ( ph /\ ( ch /\ ps /\ ta ) ) -> th ) $=
      ( adantrr 3adantr3 ) ACBDEACDBFGH $.
      $( [25-Dec-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr2 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( adantrl 3adantr3 ) ABCDEACDBFGH $.
      $( [27-Dec-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr3 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( adantrl 3adantr1 ) AECDBACDEFGH $.
      $( [30-Dec-2007] $)
  $}

  ${
    3anibar.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ( ch /\ ta ) ) ) $.
    $( Remove a hypothesis from the second member of a biimplication.
       (Contributed by FL, 22-Jul-2008.) $)
    3anibar $p |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $=
      ( w3a wa simp3 biantrurd bitr4d ) ABCGZDCEHEFLCEABCIJK $.
      $( [2-Mar-2011] $) $( [14-Jul-2008] $)
  $}

  $( Introduction in triple disjunction. $)
  3mix1 $p |- ( ph -> ( ph \/ ps \/ ch ) ) $=
    ( wo w3o orc 3orass sylibr ) AABCDZDABCEAIFABCGH $.
    $( [4-Apr-1995] $)

  $( Introduction in triple disjunction. $)
  3mix2 $p |- ( ph -> ( ps \/ ph \/ ch ) ) $=
    ( w3o 3mix1 3orrot sylibr ) AACBDBACDACBEBACFG $.
    $( [4-Apr-1995] $)

  $( Introduction in triple disjunction. $)
  3mix3 $p |- ( ph -> ( ps \/ ch \/ ph ) ) $=
    ( w3o 3mix1 3orrot sylib ) AABCDBCADABCEABCFG $.
    $( [4-Apr-1995] $)

  ${
    3pm3.2i.1 $e |- ph $.
    3pm3.2i.2 $e |- ps $.
    3pm3.2i.3 $e |- ch $.
    $( Infer conjunction of premises. $)
    3pm3.2i $p |- ( ph /\ ps /\ ch ) $=
      ( w3a wa df-3an pm3.2i mpbir2an ) ABCGABHCABCIABDEJFK $.
      $( [10-Feb-1995] $)
  $}

  ${
    $( ~ pm3.2 for a triple conjunction.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    pm3.2an3 $p |- ( ph -> ( ps -> ( ch -> ( ph /\ ps /\ ch ) ) ) ) $=
      ( wa w3a wi pm3.2 ex df-3an bicomi syl8ib ) ABCABDZCDZABCEZABCMFLCGHNMABC
      IJK $.
      $( [24-Oct-2011] $)
  $}

  ${
    3jca.1 $e |- ( ph -> ps ) $.
    3jca.2 $e |- ( ph -> ch ) $.
    3jca.3 $e |- ( ph -> th ) $.
    $( Join consequents with conjunction. $)
    3jca $p |- ( ph -> ( ps /\ ch /\ th ) ) $=
      ( wa w3a jca31 df-3an sylibr ) ABCHDHBCDIABCDEFGJBCDKL $.
      $( [9-Apr-1994] $)
  $}

  ${
    3jcad.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jcad.2 $e |- ( ph -> ( ps -> th ) ) $.
    3jcad.3 $e |- ( ph -> ( ps -> ta ) ) $.
    $( Deduction conjoining the consequents of three implications. $)
    3jcad $p |- ( ph -> ( ps -> ( ch /\ th /\ ta ) ) ) $=
      ( w3a wa imp 3jca ex ) ABCDEIABJCDEABCFKABDGKABEHKLM $.
      $( [25-Sep-2005] $)
  $}

  ${
    mpbir3an.1 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    mpbir3an.2 $e |- ps $.
    mpbir3an.3 $e |- ch $.
    mpbir3an.4 $e |- th $.
    $( Detach a conjunction of truths in a biconditional. $)
    mpbir3an $p |- ph $=
      ( w3a 3pm3.2i mpbir ) ABCDIBCDFGHJEK $.
      $( [16-Sep-2011] $)
  $}

  ${
    syl3anbrc.1 $e |- ( ph -> ps ) $.
    syl3anbrc.2 $e |- ( ph -> ch ) $.
    syl3anbrc.3 $e |- ( ph -> th ) $.
    syl3anbrc.4 $e |- ( ta <-> ( ps /\ ch /\ th ) ) $.
    $( Syllogism inference.  (Contributed by Mario Carneiro, 11-May-2014.) $)
    syl3anbrc $p |- ( ph -> ta ) $=
      ( w3a 3jca sylibr ) ABCDJEABCDFGHKIL $.
      $( [11-May-2014] $)
  $}

  ${
    mpbir3and.1 $e |- ( ph -> ( ps <-> ( ch /\ th /\ ta ) ) ) $.
    mpbir3and.2 $e |- ( ph -> ch ) $.
    mpbir3and.3 $e |- ( ph -> th ) $.
    mpbir3and.4 $e |- ( ph -> ta ) $.
    $( Detach a conjunction of truths in a biconditional.  (Contributed by
       Mario Carneiro, 11-May-2014.) $)
    mpbir3and $p |- ( ph -> ps ) $=
      ( w3a 3jca mpbird ) ABCDEJACDEGHIKFL $.
      $( [11-May-2014] $)
  $}

  ${
    3anim123i.1 $e |- ( ph -> ps ) $.
    3anim123i.2 $e |- ( ch -> th ) $.
    3anim123i.3 $e |- ( ta -> et ) $.
    $( Join antecedents and consequents with conjunction. $)
    3anim123i $p |- ( ( ph /\ ch /\ ta ) -> ( ps /\ th /\ et ) ) $=
      ( w3a 3ad2ant1 3ad2ant2 3ad2ant3 3jca ) ACEJBDFACBEGKCADEHLEAFCIMN $.
      $( [8-Apr-1994] $)
  $}

  ${
    3animi.1 $e |- ( ph -> ps ) $.
    $( Add two conjuncts to antecedent and consequent.  (Contributed by Jeff
       Hankins, 16-Aug-2009.) $)
    3anim1i $p |- ( ( ph /\ ch /\ th ) -> ( ps /\ ch /\ th ) ) $=
      ( id 3anim123i ) ABCCDDECFDFG $.
      $( [21-Feb-2011] $) $( [16-Aug-2009] $)

    $( Add two conjuncts to antecedent and consequent.  (Contributed by Jeff
       Hankins, 19-Aug-2009.) $)
    3anim3i $p |- ( ( ch /\ th /\ ph ) -> ( ch /\ th /\ ps ) ) $=
      ( id 3anim123i ) CCDDABCFDFEG $.
      $( [21-Feb-2011] $) $( [16-Aug-2009] $)
  $}

  ${
    bi3.1 $e |- ( ph <-> ps ) $.
    bi3.2 $e |- ( ch <-> th ) $.
    bi3.3 $e |- ( ta <-> et ) $.
    $( Join 3 biconditionals with conjunction. $)
    3anbi123i $p |- ( ( ph /\ ch /\ ta ) <-> ( ps /\ th /\ et ) ) $=
      ( wa w3a anbi12i df-3an 3bitr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [21-Apr-1994] $)

    $( Join 3 biconditionals with disjunction. $)
    3orbi123i $p |- ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) $=
      ( wo w3o orbi12i df-3or 3bitr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [17-May-1994] $)
  $}

  ${
    3anbi1i.1 $e |- ( ph <-> ps ) $.
    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi1i $p |- ( ( ph /\ ch /\ th ) <-> ( ps /\ ch /\ th ) ) $=
      ( biid 3anbi123i ) ABCCDDECFDFG $.
      $( [8-Sep-2006] $)

    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi2i $p |- ( ( ch /\ ph /\ th ) <-> ( ch /\ ps /\ th ) ) $=
      ( biid 3anbi123i ) CCABDDCFEDFG $.
      $( [8-Sep-2006] $)

    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi3i $p |- ( ( ch /\ th /\ ph ) <-> ( ch /\ th /\ ps ) ) $=
      ( biid 3anbi123i ) CCDDABCFDFEG $.
      $( [8-Sep-2006] $)
  $}

  ${
    3imp.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Importation inference. $)
    3imp $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( w3a wa df-3an imp31 sylbi ) ABCFABGCGDABCHABCDEIJ $.
      $( [8-Apr-1994] $)
  $}

  ${
    3impa.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Importation from double to triple conjunction. $)
    3impa $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp31 3imp ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3impb.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Importation from double to triple conjunction. $)
    3impb $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp32 3imp ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3impia.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Importation to triple conjunction. $)
    3impia $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wi ex 3imp ) ABCDABCDFEGH $.
      $( [13-Jun-2006] $)
  $}

  ${
    3impib.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Importation to triple conjunction. $)
    3impib $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp3a 3imp ) ABCDABCDEFG $.
      $( [13-Jun-2006] $)
  $}

  ${
    3exp.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Exportation inference. $)
    3exp $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( w3a pm3.2an3 syl8 ) ABCABCFDABCGEH $.
      $( [30-May-1994] $)

    $( Exportation from triple to double conjunction. $)
    3expa $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( 3exp imp31 ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)

    $( Exportation from triple to double conjunction. $)
    3expb $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( 3exp imp32 ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)

    $( Exportation from triple conjunction. $)
    3expia $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi 3exp imp ) ABCDFABCDEGH $.
      $( [19-May-2007] $)

    $( Exportation from triple conjunction. $)
    3expib $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( 3exp imp3a ) ABCDABCDEFG $.
      $( [19-May-2007] $)

    $( Commutation in antecedent.  Swap 1st and 3rd.  (The proof was shortened
       by Andrew Salmon, 13-May-2011.) $)
    3com12 $p |- ( ( ps /\ ph /\ ch ) -> th ) $=
      ( w3a 3ancoma sylbi ) BACFABCFDBACGEH $.
      $( [16-May-2011] $) $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Swap 1st and 3rd. $)
    3com13 $p |- ( ( ch /\ ps /\ ph ) -> th ) $=
      ( w3a 3anrev sylbi ) CBAFABCFDCBAGEH $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Swap 2nd and 3rd. $)
    3com23 $p |- ( ( ph /\ ch /\ ps ) -> th ) $=
      ( 3exp com23 3imp ) ACBDABCDABCDEFGH $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Rotate left. $)
    3coml $p |- ( ( ps /\ ch /\ ph ) -> th ) $=
      ( 3com23 3com13 ) ACBDABCDEFG $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Rotate right. $)
    3comr $p |- ( ( ch /\ ph /\ ps ) -> th ) $=
      ( 3coml ) BCADABCDEFF $.
      $( [28-Jan-1996] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r1 $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( 3expb 3adantr1 ) ABCDEABCDFGH $.
      $( [16-Feb-2008] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r2 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( 3expb 3adantr2 ) ABCDEABCDFGH $.
      $( [17-Feb-2008] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r3 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( 3expb 3adantr3 ) ABCDEABCDFGH $.
      $( [18-Feb-2008] $)
  $}

  ${
    3an1rs.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( Swap conjuncts. $)
    3an1rs $p |- ( ( ( ph /\ ps /\ th ) /\ ch ) -> ta ) $=
      ( w3a wi ex 3exp com34 3imp imp ) ABDGCEABDCEHABCDEABCDEHABCGDEFIJKLM $.
      $( [16-Dec-2007] $)
  $}

  ${
    3imp1.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( Importation to left triple conjunction. $)
    3imp1 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $=
      ( w3a wi 3imp imp ) ABCGDEABCDEHFIJ $.
      $( [24-Feb-2005] $)

    $( Importation deduction for triple conjunction. $)
    3impd $p |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $=
      ( w3a wi com4l 3imp com12 ) BCDGAEBCDAEHABCDEFIJK $.
      $( [26-Oct-2006] $)

    $( Importation to right triple conjunction. $)
    3imp2 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $=
      ( w3a 3impd imp ) ABCDGEABCDEFHI $.
      $( [26-Oct-2006] $)
  $}

  ${
    3exp1.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( Exportation from left triple conjunction. $)
    3exp1 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi w3a ex 3exp ) ABCDEGABCHDEFIJ $.
      $( [24-Feb-2005] $)
  $}

  ${
    3expd.1 $e |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $.
    $( Exportation deduction for triple conjunction. $)
    3expd $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi w3a com12 3exp com4r ) BCDAEBCDAEGABCDHEFIJK $.
      $( [26-Oct-2006] $)
  $}

  ${
    3exp2.1 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( Exportation from right triple conjunction. $)
    3exp2 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( w3a ex 3expd ) ABCDEABCDGEFHI $.
      $( [26-Oct-2006] $)
  $}

  ${
    exp5o.1 $e |- ( ( ph /\ ps /\ ch ) -> ( ( th /\ ta ) -> et ) ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp5o $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi w3a exp3a 3exp ) ABCDEFHHABCIDEFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    exp516.1 $e |- ( ( ( ph /\ ( ps /\ ch /\ th ) ) /\ ta ) -> et ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp516 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi w3a exp31 3expd ) ABCDEFHABCDIEFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    exp520.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta ) ) -> et ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp520 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( w3a wa ex exp5o ) ABCDEFABCHDEIFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    3adant1l.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adant1l $p |- ( ( ( ta /\ ph ) /\ ps /\ ch ) -> th ) $=
      ( wa 3expb adantll 3impb ) EAGBCDABCGDEABCDFHIJ $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant1r $p |- ( ( ( ph /\ ta ) /\ ps /\ ch ) -> th ) $=
      ( wa 3expb adantlr 3impb ) AEGBCDABCGDEABCDFHIJ $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2l $p |- ( ( ph /\ ( ta /\ ps ) /\ ch ) -> th ) $=
      ( wa 3com12 3adant1l ) EBGACDBACDEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2r $p |- ( ( ph /\ ( ps /\ ta ) /\ ch ) -> th ) $=
      ( wa 3com12 3adant1r ) BEGACDBACDEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3l $p |- ( ( ph /\ ps /\ ( ta /\ ch ) ) -> th ) $=
      ( wa 3com13 3adant1l ) ECGBADCBADEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r $p |- ( ( ph /\ ps /\ ( ch /\ ta ) ) -> th ) $=
      ( wa 3com13 3adant1r ) CEGBADCBADEABCDFHIH $.
      $( [8-Jan-2006] $)
  $}

  ${
    sylXanc.1 $e |- ( ph -> ps ) $.
    sylXanc.2 $e |- ( ph -> ch ) $.
    sylXanc.3 $e |- ( ph -> th ) $.
    ${
      syl12anc.4 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
      $( Syllogism combined with contraction.  (Contributed by Jeff Hankins,
         1-Aug-2009.) $)
      syl12anc $p |- ( ph -> ta ) $=
        ( wa jca32 syl ) ABCDJJEABCDFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      syl21anc.4 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
      $( Syllogism combined with contraction.  (Contributed by Jeff Hankins,
         1-Aug-2009.) $)
      syl21anc $p |- ( ph -> ta ) $=
        ( wa jca31 syl ) ABCJDJEABCDFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      syl111anc.4 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
      $( Syllogism combined with contraction. $)
      syl3anc $p |- ( ph -> ta ) $=
        ( w3a 3jca syl ) ABCDJEABCDFGHKIL $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.4 $e |- ( ph -> ta ) $.
    ${
      syl22anc.5 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl22anc $p |- ( ph -> et ) $=
        ( wa jca syl12anc ) ABCLDEFABCGHMIJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl13anc.5 $e |- ( ( ps /\ ( ch /\ th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl13anc $p |- ( ph -> et ) $=
        ( w3a 3jca syl2anc ) ABCDELFGACDEHIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl31anc.5 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl31anc $p |- ( ph -> et ) $=
        ( w3a 3jca syl2anc ) ABCDLEFABCDGHIMJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl112anc.5 $e |- ( ( ps /\ ch /\ ( th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl112anc $p |- ( ph -> et ) $=
        ( wa jca syl3anc ) ABCDELFGHADEIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl121anc.5 $e |- ( ( ps /\ ( ch /\ th ) /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl121anc $p |- ( ph -> et ) $=
        ( wa jca syl3anc ) ABCDLEFGACDHIMJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl211anc.5 $e |- ( ( ( ps /\ ch ) /\ th /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl211anc $p |- ( ph -> et ) $=
        ( wa jca syl3anc ) ABCLDEFABCGHMIJKN $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.5 $e |- ( ph -> et ) $.
    ${
      syl23anc.6 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl23anc $p |- ( ph -> ze ) $=
        ( wa jca syl13anc ) ABCNDEFGABCHIOJKLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl32anc.6 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl32anc $p |- ( ph -> ze ) $=
        ( wa jca syl31anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl122anc.6 $e |- ( ( ps /\ ( ch /\ th ) /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl122anc $p |- ( ph -> ze ) $=
        ( wa jca syl121anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl212anc.6 $e |- ( ( ( ps /\ ch ) /\ th /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl212anc $p |- ( ph -> ze ) $=
        ( wa jca syl211anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl221anc.6 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl221anc $p |- ( ph -> ze ) $=
        ( wa jca syl211anc ) ABCDENFGHIADEJKOLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl113anc.6 $e |- ( ( ps /\ ch /\ ( th /\ ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl113anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl3anc ) ABCDEFNGHIADEFJKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl131anc.6 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl131anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl3anc ) ABCDENFGHACDEIJKOLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl311anc.6 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl311anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl3anc ) ABCDNEFGABCDHIJOKLMP $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.6 $e |- ( ph -> ze ) $.
    ${
      syl33anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl33anc $p |- ( ph -> si ) $=
        ( w3a 3jca syl13anc ) ABCDPEFGHABCDIJKQLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl222anc.7 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl222anc $p |- ( ph -> si ) $=
        ( wa jca syl221anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl123anc.7 $e |- ( ( ps /\ ( ch /\ th ) /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl123anc $p |- ( ph -> si ) $=
        ( wa jca syl113anc ) ABCDPEFGHIACDJKQLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl132anc.7 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl132anc $p |- ( ph -> si ) $=
        ( wa jca syl131anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Jul-2012] $)
    $}

    ${
      syl213anc.7 $e |- ( ( ( ps /\ ch ) /\ th /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl213anc $p |- ( ph -> si ) $=
        ( wa jca syl113anc ) ABCPDEFGHABCIJQKLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl231anc.7 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ze )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl231anc $p |- ( ph -> si ) $=
        ( wa jca syl131anc ) ABCPDEFGHABCIJQKLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl312anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl312anc $p |- ( ph -> si ) $=
        ( wa jca syl311anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Jul-2012] $)
    $}

    ${
      syl321anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ze )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl321anc $p |- ( ph -> si ) $=
        ( wa jca syl311anc ) ABCDEFPGHIJKAEFLMQNOR $.
        $( [11-Jul-2012] $)
    $}

    sylXanc.7 $e |- ( ph -> si ) $.
    ${
      syl133anc.8 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ ( et /\ ze /\ si ) )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl133anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl131anc ) ABCDEFGHRIJKLMAFGHNOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl313anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ ( et /\ ze /\ si ) )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl313anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl311anc ) ABCDEFGHRIJKLMAFGHNOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl331anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) /\ si )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl331anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl311anc ) ABCDEFGRHIJKLAEFGMNOSPQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl223anc.8 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ ( et /\ ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl223anc $p |- ( ph -> rh ) $=
        ( wa jca syl213anc ) ABCDERFGHIJKADELMSNOPQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl232anc.8 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ( ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl232anc $p |- ( ph -> rh ) $=
        ( wa jca syl231anc ) ABCDEFGHRIJKLMNAGHOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl322anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ( ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl322anc $p |- ( ph -> rh ) $=
        ( wa jca syl321anc ) ABCDEFGHRIJKLMNAGHOPSQT $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.8 $e |- ( ph -> rh ) $.
    ${
      syl233anc.9 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ( ze /\ si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl233anc $p |- ( ph -> mu ) $=
        ( wa jca syl133anc ) ABCTDEFGHIJABCKLUAMNOPQRSUB $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl323anc.9 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ( ze /\ si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl323anc $p |- ( ph -> mu ) $=
        ( wa jca syl313anc ) ABCDEFTGHIJKLMAEFNOUAPQRSUB $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl332anc.9 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) /\ ( si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl332anc $p |- ( ph -> mu ) $=
        ( wa jca syl331anc ) ABCDEFGHITJKLMNOPAHIQRUASUB $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.9 $e |- ( ph -> mu ) $.
    ${
      syl333anc.10 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze )
          /\ ( si /\ rh /\ mu ) ) -> la ) $.
      $( A syllogism inference combined with contraction. $)
      syl333anc $p |- ( ph -> la ) $=
        ( w3a 3jca syl331anc ) ABCDEFGHIJUBKLMNOPQAHIJRSTUCUAUD $.
        $( [10-Mar-2012] $)
    $}
  $}

  ${
    syl3an1.1 $e |- ( ph -> ps ) $.
    syl3an1.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an1 $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( w3a 3anim1i syl ) ACDHBCDHEABCDFIGJ $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an2.1 $e |- ( ph -> ch ) $.
    syl3an2.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an2 $p |- ( ( ps /\ ph /\ th ) -> ta ) $=
      ( wi 3exp syl5 3imp ) BADEACBDEHFBCDEGIJK $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an3.1 $e |- ( ph -> th ) $.
    syl3an3.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an3 $p |- ( ( ps /\ ch /\ ph ) -> ta ) $=
      ( 3exp syl7 3imp ) BCAEADBCEFBCDEGHIJ $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an1b.1 $e |- ( ph <-> ps ) $.
    syl3an1b.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an1b $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( biimpi syl3an1 ) ABCDEABFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an2b.1 $e |- ( ph <-> ch ) $.
    syl3an2b.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an2b $p |- ( ( ps /\ ph /\ th ) -> ta ) $=
      ( biimpi syl3an2 ) ABCDEACFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an3b.1 $e |- ( ph <-> th ) $.
    syl3an3b.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an3b $p |- ( ( ps /\ ch /\ ph ) -> ta ) $=
      ( biimpi syl3an3 ) ABCDEADFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an1br.1 $e |- ( ps <-> ph ) $.
    syl3an1br.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an1br $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( biimpri syl3an1 ) ABCDEBAFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an2br.1 $e |- ( ch <-> ph ) $.
    syl3an2br.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an2br $p |- ( ( ps /\ ph /\ th ) -> ta ) $=
      ( biimpri syl3an2 ) ABCDECAFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an3br.1 $e |- ( th <-> ph ) $.
    syl3an3br.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an3br $p |- ( ( ps /\ ch /\ ph ) -> ta ) $=
      ( biimpri syl3an3 ) ABCDEDAFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an.1 $e |- ( ph -> ps ) $.
    syl3an.2 $e |- ( ch -> th ) $.
    syl3an.3 $e |- ( ta -> et ) $.
    syl3an.4 $e |- ( ( ps /\ th /\ et ) -> ze ) $.
    $( A triple syllogism inference. $)
    syl3an $p |- ( ( ph /\ ch /\ ta ) -> ze ) $=
      ( w3a 3anim123i syl ) ACELBDFLGABCDEFHIJMKN $.
      $( [13-May-2004] $)
  $}

  ${
    syl3anb.1 $e |- ( ph <-> ps ) $.
    syl3anb.2 $e |- ( ch <-> th ) $.
    syl3anb.3 $e |- ( ta <-> et ) $.
    syl3anb.4 $e |- ( ( ps /\ th /\ et ) -> ze ) $.
    $( A triple syllogism inference. $)
    syl3anb $p |- ( ( ph /\ ch /\ ta ) -> ze ) $=
      ( w3a 3anbi123i sylbi ) ACELBDFLGABCDEFHIJMKN $.
      $( [15-Oct-2005] $)
  $}

  ${
    syl3anbr.1 $e |- ( ps <-> ph ) $.
    syl3anbr.2 $e |- ( th <-> ch ) $.
    syl3anbr.3 $e |- ( et <-> ta ) $.
    syl3anbr.4 $e |- ( ( ps /\ th /\ et ) -> ze ) $.
    $( A triple syllogism inference. $)
    syl3anbr $p |- ( ( ph /\ ch /\ ta ) -> ze ) $=
      ( bicomi syl3anb ) ABCDEFGBAHLDCILFEJLKM $.
      $( [29-Dec-2011] $)
  $}

  ${
    syld3an3.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    syld3an3.2 $e |- ( ( ph /\ ps /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syld3an3 $p |- ( ( ph /\ ps /\ ch ) -> ta ) $=
      ( w3a simp1 simp2 syl3anc ) ABCHABDEABCIABCJFGK $.
      $( [20-May-2007] $)
  $}

  ${
    syld3an1.1 $e |- ( ( ch /\ ps /\ th ) -> ph ) $.
    syld3an1.2 $e |- ( ( ph /\ ps /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syld3an1 $p |- ( ( ch /\ ps /\ th ) -> ta ) $=
      ( 3com13 syld3an3 ) DBCEDBCAECBDAFHABDEGHIH $.
      $( [7-Jul-2008] $)
  $}

  ${
    syld3an2.1 $e |- ( ( ph /\ ch /\ th ) -> ps ) $.
    syld3an2.2 $e |- ( ( ph /\ ps /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syld3an2 $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( 3com23 syld3an3 ) ADCEADCBEACDBFHABDEGHIH $.
      $( [20-May-2007] $)
  $}

  ${
    syl3anl1.1 $e |- ( ph -> ps ) $.
    syl3anl1.2 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
    $( A syllogism inference. $)
    syl3anl1 $p |- ( ( ( ph /\ ch /\ th ) /\ ta ) -> et ) $=
      ( w3a 3anim1i sylan ) ACDIBCDIEFABCDGJHK $.
      $( [24-Feb-2005] $)
  $}

  ${
    syl3anl2.1 $e |- ( ph -> ch ) $.
    syl3anl2.2 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
    $( A syllogism inference. $)
    syl3anl2 $p |- ( ( ( ps /\ ph /\ th ) /\ ta ) -> et ) $=
      ( w3a wi ex syl3an2 imp ) BADIEFABCDEFJGBCDIEFHKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    syl3anl3.1 $e |- ( ph -> th ) $.
    syl3anl3.2 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
    $( A syllogism inference. $)
    syl3anl3 $p |- ( ( ( ps /\ ch /\ ph ) /\ ta ) -> et ) $=
      ( w3a 3anim3i sylan ) BCAIBCDIEFADBCGJHK $.
      $( [24-Feb-2005] $)
  $}

  ${
    syl3anl.1 $e |- ( ph -> ps ) $.
    syl3anl.2 $e |- ( ch -> th ) $.
    syl3anl.3 $e |- ( ta -> et ) $.
    syl3anl.4 $e |- ( ( ( ps /\ th /\ et ) /\ ze ) -> si ) $.
    $( A triple syllogism inference. $)
    syl3anl $p |- ( ( ( ph /\ ch /\ ta ) /\ ze ) -> si ) $=
      ( w3a 3anim123i sylan ) ACEMBDFMGHABCDEFIJKNLO $.
      $( [24-Dec-2006] $)
  $}

  ${
    syl3anr1.1 $e |- ( ph -> ps ) $.
    syl3anr1.2 $e |- ( ( ch /\ ( ps /\ th /\ ta ) ) -> et ) $.
    $( A syllogism inference. $)
    syl3anr1 $p |- ( ( ch /\ ( ph /\ th /\ ta ) ) -> et ) $=
      ( w3a 3anim1i sylan2 ) ADEICBDEIFABDEGJHK $.
      $( [31-Jul-2007] $)
  $}

  ${
    syl3anr2.1 $e |- ( ph -> th ) $.
    syl3anr2.2 $e |- ( ( ch /\ ( ps /\ th /\ ta ) ) -> et ) $.
    $( A syllogism inference. $)
    syl3anr2 $p |- ( ( ch /\ ( ps /\ ph /\ ta ) ) -> et ) $=
      ( w3a ancoms syl3anl2 ) BAEICFABDECFGCBDEIFHJKJ $.
      $( [1-Aug-2007] $)
  $}

  ${
    syl3anr3.1 $e |- ( ph -> ta ) $.
    syl3anr3.2 $e |- ( ( ch /\ ( ps /\ th /\ ta ) ) -> et ) $.
    $( A syllogism inference. $)
    syl3anr3 $p |- ( ( ch /\ ( ps /\ th /\ ph ) ) -> et ) $=
      ( w3a 3anim3i sylan2 ) BDAICBDEIFAEBDGJHK $.
      $( [23-Aug-2007] $)
  $}

  ${
    3impdi.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> th ) $.
    $( Importation inference (undistribute conjunction). $)
    3impdi $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( anandis 3impb ) ABCDABCDEFG $.
      $( [14-Aug-1995] $)
  $}

  ${
    3impdir.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ ps ) ) -> th ) $.
    $( Importation inference (undistribute conjunction). $)
    3impdir $p |- ( ( ph /\ ch /\ ps ) -> th ) $=
      ( anandirs 3impa ) ACBDACBDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3anidm12.1 $e |- ( ( ph /\ ph /\ ps ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm12 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3expib anabsi5 ) ABCAABCDEF $.
      $( [7-Mar-2008] $)
  $}

  ${
    3anidm13.1 $e |- ( ( ph /\ ps /\ ph ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm13 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3com23 3anidm12 ) ABCABACDEF $.
      $( [7-Mar-2008] $)
  $}

  ${
    3anidm23.1 $e |- ( ( ph /\ ps /\ ps ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm23 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3expa anabss3 ) ABCABBCDEF $.
      $( [1-Feb-2007] $)
  $}

  ${
    3ori.1 $e |- ( ph \/ ps \/ ch ) $.
    $( Infer implication from triple disjunction. $)
    3ori $p |- ( ( -. ph /\ -. ps ) -> ch ) $=
      ( wn wa wo ioran w3o df-3or mpbi ori sylbir ) AEBEFABGZECABHNCABCINCGDABC
      JKLM $.
      $( [26-Sep-2006] $)
  $}

  $( Disjunction of 3 antecedents. $)
  3jao $p |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ->
              ( ( ph \/ ch \/ th ) -> ps ) ) $=
    ( w3o wo wi w3a df-3or jao syl6 3imp syl5bi ) ACDEACFZDFZABGZCBGZDBGZHBACDI
    PQROBGZPQNBGRSGABCJNBDJKLM $.
    $( [8-Apr-1994] $)

  $( Disjunction of 3 antecedents. $)
  3jaob $p |- ( ( ( ph \/ ch \/ th ) -> ps ) <->
              ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ) $=
    ( w3o wi w3a 3mix1 imim1i 3mix2 3mix3 3jca 3jao impbii ) ACDEZBFZABFZCBFZDB
    FZGPQRSAOBACDHICOBCADJIDOBDACKILABCDMN $.
    $( [13-Sep-2011] $)

  ${
    3jaoi.1 $e |- ( ph -> ps ) $.
    3jaoi.2 $e |- ( ch -> ps ) $.
    3jaoi.3 $e |- ( th -> ps ) $.
    $( Disjunction of 3 antecedents (inference). $)
    3jaoi $p |- ( ( ph \/ ch \/ th ) -> ps ) $=
      ( wi w3a w3o 3pm3.2i 3jao ax-mp ) ABHZCBHZDBHZIACDJBHNOPEFGKABCDLM $.
      $( [12-Sep-1995] $)
  $}

  ${
    3jaod.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jaod.2 $e |- ( ph -> ( th -> ch ) ) $.
    3jaod.3 $e |- ( ph -> ( ta -> ch ) ) $.
    $( Disjunction of 3 antecedents (deduction). $)
    3jaod $p |- ( ph -> ( ( ps \/ th \/ ta ) -> ch ) ) $=
      ( wi w3o 3jao syl3anc ) ABCIDCIECIBDEJCIFGHBCDEKL $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaoian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    3jaoian.2 $e |- ( ( th /\ ps ) -> ch ) $.
    3jaoian.3 $e |- ( ( ta /\ ps ) -> ch ) $.
    $( Disjunction of 3 antecedents (inference). $)
    3jaoian $p |- ( ( ( ph \/ th \/ ta ) /\ ps ) -> ch ) $=
      ( w3o wi ex 3jaoi imp ) ADEIBCABCJDEABCFKDBCGKEBCHKLM $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaodan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    3jaodan.2 $e |- ( ( ph /\ th ) -> ch ) $.
    3jaodan.3 $e |- ( ( ph /\ ta ) -> ch ) $.
    $( Disjunction of 3 antecedents (deduction). $)
    3jaodan $p |- ( ( ph /\ ( ps \/ th \/ ta ) ) -> ch ) $=
      ( w3o ex 3jaod imp ) ABDEICABCDEABCFJADCGJAECHJKL $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaao.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jaao.2 $e |- ( th -> ( ta -> ch ) ) $.
    3jaao.3 $e |- ( et -> ( ze -> ch ) ) $.
    $( Inference conjoining and disjoining the antecedents of three
       implications.  (Contributed by Jeff Hankins, 15-Aug-2009.)  (The proof
       was shortened by Andrew Salmon, 13-May-2011.) $)
    3jaao $p |- ( ( ph /\ th /\ et ) -> ( ( ps \/ ta \/ ze ) -> ch ) ) $=
      ( w3a wi 3ad2ant1 3ad2ant2 3ad2ant3 3jaod ) ADFKBCEGADBCLFHMDAECLFINFAGCL
      DJOP $.
      $( [16-May-2011] $) $( [3-Aug-2009] $)
  $}

  ${
    syl3an9b.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl3an9b.2 $e |- ( th -> ( ch <-> ta ) ) $.
    syl3an9b.3 $e |- ( et -> ( ta <-> ze ) ) $.
    $( Nested syllogism inference conjoining 3 dissimilar antecedents. $)
    syl3an9b $p |- ( ( ph /\ th /\ et ) -> ( ps <-> ze ) ) $=
      ( wb wa sylan9bb 3impa ) ADFBGKADLBEFGABCDEHIMJMN $.
      $( [1-May-1995] $)
  $}

  ${
    bi3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi3d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    bi3d.3 $e |- ( ph -> ( et <-> ze ) ) $.
    $( Deduction joining 3 equivalences to form equivalence of disjunctions. $)
    3orbi123d $p |- ( ph -> ( ( ps \/ th \/ et ) <-> ( ch \/ ta \/ ze ) ) ) $=
      ( wo w3o orbi12d df-3or 3bitr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [20-Apr-1994] $)

    $( Deduction joining 3 equivalences to form equivalence of conjunctions. $)
    3anbi123d $p |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ ze ) ) ) $=
      ( wa w3a anbi12d df-3an 3bitr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [22-Apr-1994] $)
  $}

  ${
    3anbi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3anbi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi12d $p |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ et ) ) ) $=
      ( biidd 3anbi123d ) ABCDEFFGHAFIJ $.
      $( [8-Sep-2006] $)

    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi13d $p |- ( ph -> ( ( ps /\ et /\ th ) <-> ( ch /\ et /\ ta ) ) ) $=
      ( biidd 3anbi123d ) ABCFFDEGAFIHJ $.
      $( [8-Sep-2006] $)

    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi23d $p |- ( ph -> ( ( et /\ ps /\ th ) <-> ( et /\ ch /\ ta ) ) ) $=
      ( biidd 3anbi123d ) AFFBCDEAFIGHJ $.
      $( [8-Sep-2006] $)
  $}

  ${
    3anbi1d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding conjuncts to an equivalence. $)
    3anbi1d $p |- ( ph -> ( ( ps /\ th /\ ta ) <-> ( ch /\ th /\ ta ) ) ) $=
      ( biidd 3anbi12d ) ABCDDEFADGH $.
      $( [8-Sep-2006] $)

    $( Deduction adding conjuncts to an equivalence. $)
    3anbi2d $p |- ( ph -> ( ( th /\ ps /\ ta ) <-> ( th /\ ch /\ ta ) ) ) $=
      ( biidd 3anbi12d ) ADDBCEADGFH $.
      $( [8-Sep-2006] $)

    $( Deduction adding conjuncts to an equivalence. $)
    3anbi3d $p |- ( ph -> ( ( th /\ ta /\ ps ) <-> ( th /\ ta /\ ch ) ) ) $=
      ( biidd 3anbi13d ) ADDBCEADGFH $.
      $( [8-Sep-2006] $)
  $}

  ${
    3anim123d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3anim123d.2 $e |- ( ph -> ( th -> ta ) ) $.
    3anim123d.3 $e |- ( ph -> ( et -> ze ) ) $.
    $( Deduction joining 3 implications to form implication of conjunctions. $)
    3anim123d $p |- ( ph -> ( ( ps /\ th /\ et ) -> ( ch /\ ta /\ ze ) ) ) $=
      ( wa w3a anim12d df-3an 3imtr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [24-Feb-2005] $)

    $( Deduction joining 3 implications to form implication of disjunctions. $)
    3orim123d $p |- ( ph -> ( ( ps \/ th \/ et ) -> ( ch \/ ta \/ ze ) ) ) $=
      ( wo w3o orim12d df-3or 3imtr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [4-Apr-1997] $)
  $}

  $( Rearrangement of 6 conjuncts. $)
  an6 $p |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <->
              ( ( ph /\ th ) /\ ( ps /\ ta ) /\ ( ch /\ et ) ) ) $=
    ( w3a wa df-3an anbi12i an4 anbi1i 3bitri bitr4i ) ABCGZDEFGZHZADHZBEHZHZCF
    HZHZRSUAGQABHZCHZDEHZFHZHUCUEHZUAHUBOUDPUFABCIDEFIJUCCUEFKUGTUAABDEKLMRSUAI
    N $.
    $( [13-Mar-1995] $)

  $( Analog of ~ an4 for triple conjunction.  (Contributed by Scott Fenton,
     16-Mar-2011.)  (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
  3an6 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) /\ ( ta /\ et ) ) <->
                ( ( ph /\ ch /\ ta ) /\ ( ps /\ th /\ et ) ) ) $=
    ( w3a wa an6 bicomi ) ACEGBDFGHABHCDHEFHGACEBDFIJ $.
    $( [25-May-2011] $) $( [16-Mar-2011] $)

  $( Analog of ~ or4 for triple conjunction.  (Contributed by Scott Fenton,
     16-Mar-2011.) $)
  3or6 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) \/ ( ta \/ et ) ) <->
                ( ( ph \/ ch \/ ta ) \/ ( ps \/ th \/ et ) ) ) $=
    ( wo w3o or4 orbi1i bitr2i df-3or orbi12i 3bitr4i ) ABGZCDGZGZEFGZGZACGZEGZ
    BDGZFGZGZOPRHACEHZBDFHZGUDTUBGZRGSTEUBFIUGQRACBDIJKOPRLUEUAUFUCACELBDFLMN
    $.
    $( [20-Mar-2011] $)

  ${
    mp3an1.1 $e |- ph $.
    mp3an1.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an1 $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa 3expb mpan ) ABCGDEABCDFHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an2.1 $e |- ps $.
    mp3an2.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an2 $p |- ( ( ph /\ ch ) -> th ) $=
      ( 3expa mpanl2 ) ABCDEABCDFGH $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an3.1 $e |- ch $.
    mp3an3.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an3 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa 3expia mpi ) ABGCDEABCDFHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an12.1 $e |- ph $.
    mp3an12.2 $e |- ps $.
    mp3an12.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an12 $p |- ( ch -> th ) $=
      ( mp3an1 mpan ) BCDFABCDEGHI $.
      $( [13-Jul-2005] $)
  $}

  ${
    mp3an13.1 $e |- ph $.
    mp3an13.2 $e |- ch $.
    mp3an13.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an13 $p |- ( ps -> th ) $=
      ( mp3an3 mpan ) ABDEABCDFGHI $.
      $( [14-Jul-2005] $)
  $}

  ${
    mp3an23.1 $e |- ps $.
    mp3an23.2 $e |- ch $.
    mp3an23.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an23 $p |- ( ph -> th ) $=
      ( mp3an3 mpan2 ) ABDEABCDFGHI $.
      $( [14-Jul-2005] $)
  $}

  ${
    mp3an1i.1 $e |- ps $.
    mp3an1i.2 $e |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $.
    $( An inference based on modus ponens. $)
    mp3an1i $p |- ( ph -> ( ( ch /\ th ) -> ta ) ) $=
      ( wa wi w3a com12 mp3an1 ) CDHAEBCDAEIFABCDJEGKLK $.
      $( [5-Jul-2005] $)
  $}

  ${
    mp3anl1.1 $e |- ph $.
    mp3anl1.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl1 $p |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an1 imp ) BCHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anl2.1 $e |- ps $.
    mp3anl2.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl2 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an2 imp ) ACHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anl3.1 $e |- ch $.
    mp3anl3.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl3 $p |- ( ( ( ph /\ ps ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an3 imp ) ABHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anr1.1 $e |- ps $.
    mp3anr1.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr1 $p |- ( ( ph /\ ( ch /\ th ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl1 ) CDHAEBCDAEFABCDIEGJKJ $.
      $( [4-Nov-2006] $)
  $}

  ${
    mp3anr2.1 $e |- ch $.
    mp3anr2.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr2 $p |- ( ( ph /\ ( ps /\ th ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl2 ) BDHAEBCDAEFABCDIEGJKJ $.
      $( [24-Nov-2006] $)
  $}

  ${
    mp3anr3.1 $e |- th $.
    mp3anr3.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr3 $p |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl3 ) BCHAEBCDAEFABCDIEGJKJ $.
      $( [19-Oct-2007] $)
  $}

  ${
    mp3an.1 $e |- ph $.
    mp3an.2 $e |- ps $.
    mp3an.3 $e |- ch $.
    mp3an.4 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an $p |- th $=
      ( mp3an1 mp2an ) BCDFGABCDEHIJ $.
      $( [14-May-1999] $)
  $}

  ${
    mpd3an3.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    mpd3an3.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpd3an3 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa 3expa mpdan ) ABGCDEABCDFHI $.
      $( [8-Nov-2007] $)
  $}

  ${
    mpd3an23.1 $e |- ( ph -> ps ) $.
    mpd3an23.2 $e |- ( ph -> ch ) $.
    mpd3an23.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpd3an23 $p |- ( ph -> th ) $=
      ( id syl3anc ) AABCDAHEFGI $.
      $( [4-Dec-2006] $)
  $}

  ${
    biimp3a.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Infer implication from a logical equivalence.  Similar to ~ biimpa . $)
    biimp3a $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa biimpa 3impa ) ABCDABFCDEGH $.
      $( [4-Sep-2005] $)

    $( Infer implication from a logical equivalence.  Similar to ~ biimpar . $)
    biimp3ar $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( exbiri 3imp ) ABDCABCDEFG $.
      $( [2-Jan-2009] $)
  $}

  ${
    3anandis.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) /\ ( ph /\ th ) )
                      -> ta ) $.
    $( Inference that undistributes a triple conjunction in the antecedent. $)
    3anandis $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $=
      ( w3a wa simpl simpr1 simpr2 simpr3 syl222anc ) ABCDGZHABACADEANIZABCDJOA
      BCDKOABCDLFM $.
      $( [18-Apr-2007] $)
  $}

  ${
    3anandirs.1 $e |- ( ( ( ph /\ th ) /\ ( ps /\ th ) /\ ( ch /\ th ) )
                      -> ta ) $.
    $( Inference that undistributes a triple conjunction in the antecedent. $)
    3anandirs $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $=
      ( w3a wa simpl1 simpr simpl2 simpl3 syl222anc ) ABCGZDHADBDCDEABCDINDJZAB
      CDKOABCDLOFM $.
      $( [18-Apr-2007] $) $( [25-Jul-2006] $)
  $}

  ${
    ecase23d.1 $e |- ( ph -> -. ch ) $.
    ecase23d.2 $e |- ( ph -> -. th ) $.
    ecase23d.3 $e |- ( ph -> ( ps \/ ch \/ th ) ) $.
    $( Deduction for elimination by cases. $)
    ecase23d $p |- ( ph -> ps ) $=
      ( wo wn ioran sylanbrc w3o 3orass sylib ord mt3d ) ABCDHZACIDIQIEFCDJKABQ
      ABCDLBQHGBCDMNOP $.
      $( [15-Jul-2005] $) $( [22-Apr-1994] $)
  $}

  ${
    3ecase.1 $e |- ( -. ph -> th ) $.
    3ecase.2 $e |- ( -. ps -> th ) $.
    3ecase.3 $e |- ( -. ch -> th ) $.
    3ecase.4 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Inference for elimination by cases. $)
    3ecase $p |- th $=
      ( wi 3exp wn a1d pm2.61i pm2.61nii ) BCDABCDIZIABCDHJAKZOBPDCELLMFGN $.
      $( [13-Jul-2005] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
      Other axiomatizations of classical propositional calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the Lukasiewicz axioms from Meredith's sole axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Carew Meredith's sole axiom for propositional calculus.  This amazing
     formula is thought to be the shortest possible single axiom for
     propositional calculus with inference rule ~ ax-mp , where negation and
     implication are primitive.  Here we prove Meredith's axiom from ~ ax-1 ,
     ~ ax-2 , and ~ ax-3 .  Then from it we derive the Lukasiewicz axioms
     ~ luk-1 , ~ luk-2 , and ~ luk-3 .  Using these we finally re-derive our
     axioms as ~ ax1 , ~ ax2 , and ~ ax3 , thus proving the equivalence of all
     three systems.  C. A. Meredith, "Single Axioms for the Systems (C,N),
     (C,O) and (A,N) of the Two-Valued Propositional Calculus," _The Journal of
     Computing Systems_ vol. 1 (1953), pp. 155-164.  Meredith claimed to be
     close to a proof that this axiom is the shortest possible, but the proof
     was apparently never completed.

     An obscure Irish lecturer, Meredith (1904-1976) became enamored with logic
     somewhat late in life after attending talks by Lukasiewicz and produced
     many remarkable results such as this axiom.  From his obituary:  "He did
     logic whenever time and opportunity presented themselves, and he did it on
     whatever materials came to hand: in a pub, his favored pint of porter
     within reach, he would use the inside of cigarette packs to write proofs
     for logical colleagues."  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.)  (The proof was shortened by Wolf Lammen, 28-May-2013.) $)
  meredith $p |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ->
       ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn pm2.21 ax-3 imim12i com13 con1d com12 a1d ax-1 imim1d ja ) ABFZCGDG
    FZFZCFZEEAFZDAFZFUAGZUCUBDUDADAUATAGZDCUERSDCFABHCDIJKLMNEDEAEDOPQ $.
    $( [28-May-2013] $) $( [14-Dec-2002] $)

  $( Theorem ~ meredith restated as an axiom.  This will allow us to ensure
     that the rederivation of ~ ax1 , ~ ax2 , and ~ ax3 below depend only on
     Meredith's sole axiom and not accidentally on a previous theorem above.
     Outside of this section, we will not make use of this axiom. $)
  ax-meredith $a |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ->
       ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $.

  $( Step 3 of Meredith's proof of Lukasiewicz axioms from his sole axiom.
     (The step numbers refer to Meredith's original paper.) $)
  merlem1 $p |- ( ( ( ch -> ( -. ph -> ps ) ) -> ta ) -> ( ph -> ta ) ) $=
    ( wn wi ax-meredith ax-mp ) DAEZFIBFZEZIFFZJFCJFZFZMDFADFFJDECEFZEKEFZFOFDF
    LFNIBOKDGJPDCLGHDIJAMGH $.
    $( [14-Dec-2002] $)

  $( Step 4 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem2 $p |- ( ( ( ph -> ph ) -> ch ) -> ( th -> ch ) ) $=
    ( wi wn merlem1 ax-meredith ax-mp ) BBDZAECEZDDADAADZDKBDCBDDAJIAFBBACKGH
    $.
    $( [14-Dec-2002] $)

  $( Step 7 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem3 $p |- ( ( ( ps -> ch ) -> ph ) -> ( ch -> ph ) ) $=
    ( wi wn merlem2 ax-mp ax-meredith ) AADZCEZJDZDZCDBCDZDZMADCADZDOBEZPDDBDZL
    DZNKKDLDRJKIFKLQFGCABBLHGAACCMHG $.
    $( [14-Dec-2002] $)

  $( Step 8 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem4 $p |- ( ta -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn ax-meredith merlem3 ax-mp ) AADBEZIDDBDZCDCADBADDZDCKDAABBCFKJCGH
    $.
    $( [14-Dec-2002] $)

  $( Step 11 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem5 $p |- ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) $=
    ( wi wn ax-meredith merlem1 merlem4 ax-mp ) BBCZBDZJCCBCBCIICCZABCZADZDZBCC
    ZBBBBBEIJNDCCBCZACZOCZKOCZBBBNAEOKDZCMTCCZACQCZRSCUAUBMBLTFAPUAGHOTAKQEHHH
    $.
    $( [14-Dec-2002] $)

  $( Step 12 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem6 $p |- ( ch -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) $=
    ( wi merlem4 merlem3 ax-mp ) BCEZIAEDAEEZECJEADIFJBCGH $.
    $( [14-Dec-2002] $)

  $( Between steps 14 and 15 of Meredith's proof of Lukasiewicz axioms from his
     sole axiom. $)
  merlem7 $p |- ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) ->
                  ( -. th -> -. ps ) ) -> th ) ) ) $=
    ( wi wn merlem4 merlem6 ax-meredith ax-mp ) BCFZLDFZCEFDGBGFFZDFZFZFZAPFZDN
    LHPAGZFCGZSFFZCFLFZQRFOUAFUBSMOTICEDBUAJKPSCALJKK $.
    $( [22-Dec-2002] $)

  $( Step 15 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem8 $p |- ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) ->
                  ( -. th -> -. ps ) ) -> th ) ) $=
    ( wph wi wn ax-meredith merlem7 ax-mp ) EEFZEGZLFFEFEFKKFFZABFCFBDFCGAGFFCF
    FEEEEEHMABCDIJ $.
    $( [22-Dec-2002] $)

  $( Step 18 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem9 $p |- ( ( ( ph -> ps ) -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ->
                    ( et -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ) $=
    ( wi wn merlem6 merlem8 ax-mp ax-meredith ) CDBEGZGZGZFHZGBHZPGGZBGABGZGZSO
    GFOGGMRHDHGZHAHGZGUAGRGZTNRGUCPCNQIDMRUBJKBEUAARLKOPBFSLK $.
    $( [22-Dec-2002] $)

  $( Step 19 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem10 $p |- ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) $=
    ( wi wn ax-meredith merlem9 ax-mp ) AADZAEZJDDADADIIDDZAABDZDZCLDDZAAAAAFLA
    DJCEDDADZADNDKNDLAACAFOAMCBKGHH $.
    $( [14-Dec-2002] $)

  $( Step 20 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem11 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi wn ax-meredith merlem10 ax-mp ) AACZADZICCACACHHCCZAABCZCZKCZAAAAAELMC
    JMCABLFLKJFGG $.
    $( [14-Dec-2002] $)

  $( Step 28 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem12 $p |- ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) $=
    ( wn wi merlem5 merlem2 ax-mp merlem4 merlem11 ) CBDDBEZEZAEZMAEZEZNLOBBEKE
    LBBFBKCGHAMLIHMAJH $.
    $( [14-Dec-2002] $)

  $( Step 35 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem13 $p |- ( ( ph -> ps ) ->
              ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) ) $=
    ( wi wn merlem12 merlem5 ax-mp merlem6 ax-meredith merlem11 ) BBEZAFZDCFFCE
    EZNFZEZFZEZEAEZAEZABEQBEETUAEZUASUBOREZREZSRCDGRBEZRFPEZEREUCEZUDSEUFUGQPEU
    FPCDGQPHIRUEUFOJIRBRNUCKIIAMSTJITALIBBAQAKI $.
    $( [14-Dec-2002] $)

  $( 1 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi wn ax-meredith merlem13 ax-mp ) CCDZAEZEZEJDDKDBDZBCDACDDZDZABDZMDZCCK
    ABFMADZOEZEZERDDSDLDZNPDOLDTABJIGOLRQGHMASOLFHH $.
    $( [14-Dec-2002] $)

  $( 2 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi merlem5 merlem4 ax-mp merlem11 ax-meredith ) ABZACZJACZCZKAJBZCIBMC
    CZICZICZLOPCZPNQAMDIONEFOIGFAMIJIHFJAGF $.
    $( [14-Dec-2002] $)

  $( 3 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wi merlem11 merlem1 ax-mp ) ACZHBDZDIDAIDHBEABHIFG $.
    $( [14-Dec-2002] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the standard axioms from the Lukasiewicz axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    luklem1.1 $e |- ( ph -> ps ) $.
    luklem1.2 $e |- ( ps -> ch ) $.
    $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
    luklem1 $p |- ( ph -> ch ) $=
      ( wi luk-1 ax-mp ) BCFZACFZEABFIJFDABCGHH $.
      $( [23-Dec-2002] $)
  $}

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem2 $p |- ( ( ph -> -. ps ) ->
                ( ( ( ph -> ch ) -> th ) -> ( ps -> th ) ) ) $=
    ( wn wi luk-1 luk-3 ax-mp luklem1 ) ABEZFZBACFZFZMDFBDFFLKCFZMFZNAKCGBOFPNF
    BCHBOMGIJBMDGJ $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem3 $p |- ( ph -> ( ( ( -. ph -> ps ) -> ch ) -> ( th -> ch ) ) ) $=
    ( wn wi luk-3 luklem2 luklem1 ) AAEZDEZFJBFCFDCFFAKGJDBCHI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem4 $p |- ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ps ) $=
    ( wn wi luk-2 luklem3 ax-mp luk-1 luklem1 ) ACADADZBDZBCZBDZBLJDZKMDJCJDJDZ
    NJEJONDAEJJJLFGGLJBHGBEI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem5 $p |- ( ph -> ( ps -> ph ) ) $=
    ( wn wi luklem3 luklem4 luklem1 ) AACADADBADZDHAAABEAHFG $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem6 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi luk-1 wn luklem5 luklem2 luklem4 luklem1 ax-mp ) AABCZCKBCZKCZKAKBDKEZ
    KCZKCMKCZCZPMOCZQNLCRNBEZNCZLNSFTSBCBCLCLSKBBGBLHIINLKDJMOKDJKPHJI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem7 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi luk-1 luklem5 luklem1 luklem6 ax-mp ) ABCDZDJCDZACDZDZBLDZAJCEBKDMNDBJ
    KDZKBJBDOBJFJBCEGJCHGBKLEIG $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem8 $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi luk-1 luklem7 ax-mp ) CADZABDZCBDZDDIHJDDCABEHIJFG $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax1 $p |- ( ph -> ( ps -> ph ) ) $=
    ( luklem5 ) ABC $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax2 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi luklem7 luklem8 luklem6 ax-mp luklem1 ) ABCDDBACDZDZABDZJDZABCEKLAJDZD
    ZMBJAFNJDOMDACGNJLFHII $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax3 $p |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) $=
    ( wn wi luklem2 luklem4 luklem1 ) ACZBCDHADADBADZDIHBAAEAIFG $.
    $( [22-Dec-2002] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical 'nand' (Sheffer stroke)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c -/\ $. $( 'nand' ) $)
  $( Extend wff definition to include 'nand'. $)
  wnand $a wff ( ph -/\ ps ) $.

  $( Define incompatibility ('not-and' or 'nand').  This is also called the
     Sheffer stroke, represented by a vertical bar, but we use a different
     symbol to avoid ambiguity with other uses of the vertical bar. $)
  df-nand $a |- ( ( ph -/\ ps ) <-> -. ( ph /\ ps ) ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Basic Nand Laws
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Nand commutes. $)
  nandcom $p |- ( ( ph -/\ ps ) <-> ( ps -/\ ph ) ) $=
    ( wa wn wnand ancom notbii df-nand 3bitr4i ) ABCZDBACZDABEBAEJKABFGABHBAHI
    $.
    $( [18-Nov-2014] $)

  $( Substitution law for nand. $)
  nandbi1 $p |- ( ( ph <-> ps ) -> ( ( ph -/\ ch ) <-> ( ps -/\ ch ) ) ) $=
    ( wb wa wn wnand anbi1 notbid df-nand 3bitr4g ) ABDZACEZFBCEZFACGBCGLMNABCH
    IACJBCJK $.
    $( [18-Nov-2014] $)

  $( Substitution law for nand. $)
  nandbi2 $p |- ( ( ph <-> ps ) -> ( ( ch -/\ ph ) <-> ( ch -/\ ps ) ) ) $=
    ( wb wnand nandbi1 nandcom 3bitr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [18-Nov-2014] $)

  $( Substitution law for nand. $)
  nandbi12 $p |- ( ( ( ph <-> ps ) /\ ( ch <-> th ) ) -> 
  	   ( ( ph -/\ ch ) <-> ( ps -/\ th ) ) ) $=
    ( wb wnand nandbi1 nandbi2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [18-Nov-2014] $)

  ${
    nandbii.1 $e |- ( ph <-> ps ) $.

    $( Inference form of ~ nandbi1 . $)
    nandbi1i $p |- ( ( ph -/\ ch ) <-> ( ps -/\ ch ) ) $=
      ( wb wnand nandbi1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [18-Nov-2014] $)

    $( Inference form of ~ nandbi2 . $)
    nandbi2i $p |- ( ( ch -/\ ph ) <-> ( ch -/\ ps ) ) $=
      ( wb wnand nandbi2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [18-Nov-2014] $)

    ${
       nandbi12i.2 $e |- ( ch <-> th ) $.

       $( Inference form of ~ nandbi12 . $)
       nandbi12i $p |- ( ( ph -/\ ch ) <-> ( ps -/\ th ) ) $=
         ( wb wnand nandbi12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
         $( [18-Nov-2014] $)
    $}
  $}


  ${
    nandbid.1 $e |- ( ta -> ( ph <-> ps ) ) $.

    $( Deduction form of ~ nandbi1 . $)
    nandbi1d $p |- ( ta -> ( ( ph -/\ ch ) <-> ( ps -/\ ch ) ) ) $=
      ( wb wnand nandbi1 syl ) DABFACGBCGFEABCHI $.
      $( [18-Nov-2014] $)

    $( Deduction form of ~ nandbi2 . $)
    nandbi2d $p |- ( ta -> ( ( ch -/\ ph ) <-> ( ch -/\ ps ) ) ) $=
      ( wb wnand nandbi2 syl ) DABFCAGCBGFEABCHI $.
      $( [18-Nov-2014] $)

    ${
       nandbi12d.2 $e |- ( ta -> ( ch <-> th ) ) $.

       $( Inference form of ~ nandbi12 . $)
       nandbi12d $p |- ( ta -> ( ( ph -/\ ch ) <-> ( ps -/\ th ) ) ) $=
         ( wb wnand nandbi12 syl2anc ) EABHCDHACIBDIHFGABCDJK $.
         $( [18-Nov-2014] $)
    $}
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Derive Nicod's axiom from the standard axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Lemma for handling nested 'nand's. $)
  nic-justlem $p |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) $=
    ( wnand wa wn wi df-nand anbi2i xchbinx iman bitr4i ) ACBDZDZACBEZFZEZFAOGN
    AMEQAMHMPACBHIJAOKL $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between implication and the Nicod version.  To derive
     ~ nic-dfim , apply ~ nic-justbi . $)
  nic-justim $p |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) $=
    ( wnand wa wi nic-justlem anidmdbi bitr2i ) ABBCCABBDEABEABBFABGH $.
    $( [17-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between negation and the Nicod version.  To derive
     ~ nic-dfneg , apply ~ nic-justbi . $)
  nic-justneg $p |- ( -. ps <-> ( ps -/\ ps ) ) $=
    ( wnand wn wa df-nand anidm xchbinx bicomi ) AABZACIAADAAAEAFGH $.
    $( [16-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between the bidirectional and the Nicod version.
     (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
  nic-justbi $p |- ( ( ph <-> ps ) <->
          ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) $=
    ( wa wn wo wnand pm4.57 df-nand nic-justneg anbi12i xchbinxr dfbi3 3bitr4ri
    wb xchbinx ) ABCZDZADZBDZCZDZCZDPTEABFZAAFZBBFZFZFZABNPTGUGUCUFCUBUCUFHUCQU
    FUAABHUFUDUECTUDUEHRUDSUEAIBIJKJOABLM $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

$( [suppress from the Table of Contents by breaking whitespace before "=-=-"]
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Prove Nicod's axiom and implication and negation definitions
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Define implication in terms of 'nand'.  Analogous to
     ` ( ( ph -/\ ( ps -/\ ps ) ) <-> ( ph -> ps ) ) ` .  In a pure
     (standalone) treatment of Nicod's axiom, this theorem would be changed to
     a definition ($a statement). $)
  nic-dfim $p |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\
                   ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) )
                          -/\
                     ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) $=
    ( wnand wi wb nic-justim bicomi nic-justbi mpbi ) ABBCCZABDZEJKCJJCKKCCCKJA
    BFGJKHI $.
    $( [11-Dec-2008] $)

  $( Define negation in terms of 'nand'.  Analogous to
     ` ( ( ph -/\ ph ) <-> -. ph ) ` .  In a pure (standalone) treatment of
     Nicod's axiom, this theorem would be changed to a definition ($a
     statement). $)
  nic-dfneg $p |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\
                    ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\
                      ( -. ph -/\ -. ph ) ) ) $=
    ( wnand wn wb nic-justneg bicomi nic-justbi mpbi ) AABZACZDIJBIIBJJBBBJIAEF
    IJGH $.
    $( [11-Dec-2008] $)

  ${
    $( Minor premise. $)
    nic-jmin $e |- ph $.
    $( Major premise. $)
    nic-jmaj $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Derive Nicod's rule of modus ponens using 'nand', from the standard
       one.  Although the major and minor premise together also imply ` ch ` ,
       this form is necessary for useful derivations from ~ nic-ax .  In a pure
       (standalone) treatment of Nicod's axiom, this theorem would be changed
       to an axiom ($a statement).  (Contributed by Jeff Hoffman,
       19-Nov-2007.) $)
    nic-mp $p |- ps $=
      ( wnand wa wi nic-justlem mpbi simprd ax-mp ) ABDACBACBFFACBGHEABCIJKL $.
      $( [11-Dec-2008] $) $( [19-Nov-2007] $)

    $( A direct proof of ~ nic-mp . $)
    nic-mpALT $p |- ps $=
      ( wa wi wn wnand df-nand anbi2i xchbinx mpbi iman mpbir simprd ax-mp ) AB
      DACBACBFZGARHZFZHZACBIZIZUAEUCAUBFTAUBJUBSACBJKLMARNOPQ $.
      $( [30-Dec-2008] $)
  $}

  $( Nicod's axiom derived from the standard ones.  See _Intro. to Math.
     Phil._ by B. Russell, p. 152.  Like ~ meredith , the usual axioms can be
     derived from this and vice versa.  Unlike ~ meredith , Nicod uses a
     different connective ('nand'), so another form of modus ponens must be
     used in proofs, e.g. ` { ` ~ nic-ax , ~ nic-mp ` } ` is equivalent to
     ` { ` ~ luk-1 , ~ luk-2 , ~ luk-3 , ~ ax-mp ` } ` .  In a pure
     (standalone) treatment of Nicod's axiom, this theorem would be changed to
     an axiom ($a statement).  (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
  nic-ax $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\
                   ( ( ta -/\ ( ta -/\ ta ) ) -/\
                     ( ( th -/\ ch ) -/\
                       ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnand wa wi nic-justlem biimpi simpl imim2i wn df-nand bitr4i con3 imim2d
    imnan con2b mpbir 3bitr4ri syl6ibr syl5bir nic-justim sylib pm4.24 jctil
    3syl ) ACBFFZEEEFFZDCFZADFZULFFZFFUIUJUMGHUIUMUJUIACBGZHZACHZUMUIUOABCIJUNC
    ACBKLUPUKULHUMUKDCMZHZUPULURDCGMUKDCRDCNOUPURDAMZHZULUPUQUSDACPQADMHADGMUTU
    LADRDASADNUAUBUCUKULUDUEUHUJEEEGZHEVAEUFJEEEITUGUIUMUJIT $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

  $( A direct proof of ~ nic-ax . $)
  nic-axALT $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) )
          -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnand wa wn anidm df-nand anbi2i notbii iman 3bitr4i imnan bitr4i xchbinx
    wi anbi12i mpbir simpl imim2i con3 imim2d biimpri jctil con2b bitr3i 3bitri
    syl ) ACBFZFZEEEFZFZDCFZADFZUPFZFZFZFULUSGZHZVAACBGZRZEEEGZRZDCHZRZDAHZRZRZ
    GZRZVCVJVEVCACRZVJVBCACBUAUBVMVFVHDACUCUDUJVDEEIUEUFVAVCVKHZGZHVLUTVOULVCUS
    VNAUKGZHAVBHZGZHULVCVPVRUKVQACBJKLAUKJAVBMNUSUNURGVKUNURJUNVEURVJEUMGZHEVDH
    ZGZHUNVEVSWAUMVTEEEJKLEUMJEVDMNUOUQGZHVGVIHZGZHURVJWBWDUOVGUQWCUODCGHVGDCJD
    COPUQUPUPGZVIUPUPJWEUPADGHZVIUPIADJWFADHRVIADOADUGUHUIQSLUOUQJVGVIMNSQSLVCV
    KMPTULUSJT $.
    $( [11-Dec-2008] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Derive the Lukasiewicz axioms from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( Minor premise. $)
    nic-imp.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Inference for ~ nic-mp using ~ nic-ax as major premise.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-imp $p |- ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) $=
      ( wta wnand nic-ax nic-mp ) ACBGGDCGADGZJGGFFFGGEABCDFHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  $( Lemma for ~ nic-id . $)
  nic-idlem1 $p |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\
                 ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) -/\
                   ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ) $=
    ( wnand nic-ax nic-imp ) ACBFFACFAAFZIFFEEEFFDABCAEGH $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  ${
    nic-idlem2.1 $e |- ( et -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) $.
    $( Lemma for ~ nic-id .  Inference used by ~ nic-id . $)
    nic-idlem2 $p |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) $=
      ( wnand nic-ax nic-imp nic-mp ) FACBHHZDHZHDEEEHHZHZFHZPGOMMFLACHAAHZQHHN
      DABCAEIJJK $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  $( Theorem ~ id expressed with ` -/\ ` .  (Contributed by Jeff Hoffman,
     17-Nov-2007.) $)
  nic-id $p |- ( ta -/\ ( ta -/\ ta ) ) $=
    ( wph wps wch wth wnand nic-ax nic-idlem2 nic-idlem1 nic-mp ) BCFZCBFZLFFZD
    DDFZFZFZCCCFFZFAAAFFZOEEEMDQCCCBEGHMNDPCORFKLLOAIHJ $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  $( ` -/\ ` is symmetric.  (Contributed by Jeff Hoffman, 17-Nov-2007.) $)
  nic-swap $p |- ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) $=
    ( wta wnand nic-id nic-ax nic-mp ) AAADDBADABDZHDDCCCDDAEAAABCFG $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  ${
    nic-isw1.1 $e |- ( th -/\ ph ) $.
    $( Inference version of ~ nic-swap .  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-isw1 $p |- ( ph -/\ th ) $=
      ( wnand nic-swap nic-mp ) BADABDZGCABEF $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-isw2.1 $e |- ( ps -/\ ( th -/\ ph ) ) $.
    $( Inference for swapping nested terms.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-isw2 $p |- ( ps -/\ ( ph -/\ th ) ) $=
      ( wnand nic-swap nic-imp nic-mp nic-isw1 ) BACEZBCAEZEJBEZLDJKKBCAFGHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-iimp1.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    nic-iimp1.2 $e |- ( th -/\ ch ) $.
    $( Inference version of ~ nic-imp using right-handed term.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-iimp1 $p |- ( th -/\ ph ) $=
      ( wnand nic-imp nic-mp nic-isw1 ) DADCGADGZKFABCDEHIJ $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-iimp2.1 $e |- ( ( ph -/\ ps ) -/\ ( ch -/\ ch ) ) $.
    nic-iimp2.2 $e |- ( th -/\ ph ) $.
    $( Inference version of ~ nic-imp using left-handed term.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-iimp2 $p |- ( th -/\ ( ch -/\ ch ) ) $=
      ( wnand nic-isw1 nic-iimp1 ) CCGZBADJABGEHFI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-idel.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Inference to remove the trailing term.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-idel $p |- ( ph -/\ ( ch -/\ ch ) ) $=
      ( wnand nic-id nic-isw1 nic-imp nic-mp ) CCEZCEAJEZKJCCFGABCJDHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-ich.1 $e |- ( ph -/\ ( ps -/\ ps ) ) $.
    nic-ich.2 $e |- ( ps -/\ ( ch -/\ ch ) ) $.
    $( Chained inference.  (Contributed by Jeff Hoffman, 17-Nov-2007.) $)
    nic-ich $p |- ( ph -/\ ( ch -/\ ch ) ) $=
      ( wnand nic-isw1 nic-imp nic-mp ) CCFZBFAJFZKJBEGABBJDHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-idbl.1 $e |- ( ph -/\ ( ps -/\ ps ) ) $.
    $( Double the terms.  Since doubling is the same as negation, this can be
       viewed as a contraposition inference.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-idbl $p |- ( ( ps -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) $=
      ( wnand nic-imp nic-ich ) BBDABDAADABBBCEABBACEF $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

$( (not in Table of Contents)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Biconditional justification from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( For nic-* definitions, the biconditional connective is not used.  Instead,
     definitions are made based on this form. ~ nic-bi1 and ~ nic-bi2 are used
     to convert the definitions into usable theorems about one side of the
     implication.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
  nic-bijust $p |- ( ( ta -/\ ta ) -/\ ( ( ta -/\ ta ) -/\ ( ta -/\ ta ) ) ) $=
    ( nic-swap ) AAB $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  ${
    $( 'Biconditional' premise.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
    nic-bi1.1 $e |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph )
         -/\ ( ps -/\ ps ) ) ) $.
    $( Inference to extract one side of an implication from a definition. $)
    nic-bi1 $p |- ( ph -/\ ( ps -/\ ps ) ) $=
      ( wnand nic-id nic-iimp1 nic-isw2 nic-idel ) AABBAAABDBBDAADACAEFGH $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

  ${
    $( 'Biconditional' premise.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
    nic-bi2.1 $e |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph )
         -/\ ( ps -/\ ps ) ) ) $.
    $( Inference to extract the other side of an implication from a
       'biconditional' definition. $)
    nic-bi2 $p |- ( ps -/\ ( ph -/\ ph ) ) $=
      ( wnand nic-isw2 nic-id nic-iimp1 nic-idel ) BBAABDZAADZBBDZBKIJCEBFGH $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

$( (not in Table of Contents)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
             Prove the Lukasiewicz axioms from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( Minor premise. $)
    nic-smin $e |- ph $.
    $( Major premise. $)
    nic-smaj $e |- ( ph -> ps ) $.
    $( Derive the standard modus ponens from ~ nic-mp .  (Contributed by Jeff
       Hoffman, 18-Nov-2007.) $)
    nic-stdmp $p |- ps $=
      ( wi wnand nic-dfim nic-bi2 nic-mp ) ABBCABEZABBFFZKDKJABGHII $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

  $( Proof of ~ luk-1 from ~ nic-ax and ~ nic-mp (and definitions ~ nic-dfim
     and ~ nic-dfneg ).  Note that the standard axioms ~ ax-1 , ~ ax-2 , and
     ~ ax-3 are proved from the Lukasiewicz axioms by theorems ~ ax1 , ~ ax2 ,
     and ~ ax3 .  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
  nic-luk1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wta wi nic-dfim nic-bi2 nic-ax nic-isw2 nic-idel nic-bi1 nic-idbl nic-imp
    wnand nic-swap nic-ich nic-mp ) ABEZBCEZACEZEZUANNZRUAEZUCRABBNNZUAUDRABFGU
    DSTTNZNZUAUDCCNZBNZAUGNZUINZNZUFUDDDDNNZUKUKUDULABBUGDHIJUKUEUHNUFUEUJUJUHU
    ITUITACFKLMSUHUHUESBUGNZUHUMSBCFGUGBOPMPPUFUASTFKPPUBUCRUAFKQ $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  $( Proof of ~ luk-2 from ~ nic-ax and ~ nic-mp .  (Contributed by Jeff
     Hoffman, 18-Nov-2007.) $)
  nic-luk2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi wnand nic-dfim nic-bi2 nic-dfneg nic-id nic-iimp1 nic-isw2 nic-isw1
    nic-bi1 nic-mp ) ABZACZAADZDZOACZROPONPDZSPSONAEFNPPPNDNNDPPDPAGPHIJIKQROAE
    LM $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  $( Proof of ~ luk-3 from ~ nic-ax and ~ nic-mp .  (Contributed by Jeff
     Hoffman, 18-Nov-2007.) $)
  nic-luk3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wi wnand nic-dfim nic-bi1 nic-dfneg nic-bi2 nic-id nic-iimp1 nic-iimp2
    nic-mp ) AACZBDZOEEZAODZQNBBEZOANREONBFGNAAEZSASNAHIAJKLPQAOFGM $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                True and false constants
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c T. $.
  $c F. $.

  $( ` T. ` is a wff. $)
  wtru $a wff T. $.

  $( ` F. ` is a wff. $)
  wfal $a wff F. $.

  $( Soundness justification theorem for ~ df-tru . $)
  trujust $p |- ( ( ph <-> ph ) <-> ( ps <-> ps ) ) $=
    ( wb biid 2th ) AACBBCADBDE $.
    $( [17-Nov-2013] $)

  $( Definition of ` T. ` , a tautology. ` T. ` is a constant true.  In this
     definition ~ biid is used as an antecedent, however, any true wff, such as
     an axiom, can be used in its place. $)
  df-tru $a |- ( T. <-> ( ph <-> ph ) ) $.

  $( Definition of ` F. ` , a contradiction. ` F. ` is a constant false. $)
  df-fal $a |- ( F. <-> -. T. ) $.

  $( ` T. ` is provable.  (Contributed by Anthony Hart, 13-Oct-2010.) $)
  tru $p |- T. $=
    ( wph wtru wb biid df-tru mpbir ) BAACADAEF $.
    $( [6-Sep-2010] $) $( [13-Oct-2010] $)

  $( ` F. ` is not provable.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Mel L. O'Cat, 11-Mar-2012.) $)
  notfal $p |- -. F. $=
    ( wfal wtru wn tru notnoti df-fal mtbir ) ABCBDEFG $.
    $( [11-Mar-2012] $) $( [22-Oct-2010] $)
  ${
    trud.1 $e |- ( T. -> ph ) $.
    $( Eliminate ` T. ` as an antecedent.  (Contributed by Mario Carneiro,
       13-Mar-2014.) $)
    trud $p |- ph $=
      ( wtru tru ax-mp ) CADBE $.
      $( [13-Mar-2014] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       Auxiliary theorems for Alan Sare's virtual deduction tool, part 1
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    ee22.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee22.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee22.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e22 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 2-May-2011.) $)
    ee22 $p |- ( ph -> ( ps -> ta ) ) $=
      ( syl6c ) ABCDEFGHI $.
      $( [28-Oct-2011] $) $( [2-May-2011] $)
  $}

  ${
    ee12an.1 $e |- ( ph -> ps ) $.
    ee12an.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee12an.3 $e |- ( ( ps /\ th ) -> ta ) $.
    $( ~ e12an without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 28-Oct-2011.) $)
    ee12an $p |- ( ph -> ( ch -> ta ) ) $=
      ( wa jctild syl6 ) ACBDIEACDBGFJHK $.
      $( [28-Oct-2011] $) $( [28-Oct-2011] $)
  $}

  ${
    ee23.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee23.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee23.3 $e |- ( ch -> ( ta -> et ) ) $.
    $( ~ e23 without virtual deductions.  (Contributed by Alan Sare,
       17-Jul-2011.) $)
    ee23 $p |- ( ph -> ( ps -> ( th -> et ) ) ) $=
      ( wi syl6 syldd ) ABDEFHABCEFJGIKL $.
      $( [17-Jul-2011] $)
  $}

  $( Exportation implication also converting head from biconditional to
     conditional.  This proof is ~ exbirVD automatically translated and
     minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
  exbir $p |- ( ( ( ph /\ ps ) -> ( ch <-> th ) ) ->
              ( ph -> ( ps -> ( th -> ch ) ) ) ) $=
    ( wa wb wi bi2 imim2i exp3a ) ABEZCDFZGABDCGZLMKCDHIJ $.
    $( [31-Dec-2011] $)

  $( ~ impexp with a 3-conjunct antecedent.  This proof is ~ 3impexpVD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011.) $)
  3impexp $p |- ( ( ( ph /\ ps /\ ch ) -> th ) <->
                ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( w3a wi id 3expd 3impd impbii ) ABCEDFZABCDFFFZKABCDKGHLABCDLGIJ $.
    $( [31-Dec-2011] $)

  $( ~ 3impexp with biconditional consequent of antecedent that is commuted in
     consequent.  Derived automatically from ~ 3impexpVD .  (Contributed by
     Alan Sare, 31-Dec-2011.) $)
  3impexpbicom $p |- ( ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) <->
                     ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) ) $=
    ( w3a wb wi bicom imbi2 biimpcd mpi 3expd 3impexp biimpri syl6ibr impbii )
    ABCFZDEGZHZABCEDGZHHHZTABCUATSUAGZRUAHZDEIZUCTUDSUARJKLMUBRUASUDUBABCUANOUE
    PQ $.
    $( [31-Dec-2011] $)

  ${
    3impexpbicomi.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $.
    $( Deduction form of ~ 3impexpbicom .  Derived automatically from
       ~ 3impexpbicomiVD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3impexpbicomi $p |- ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) $=
      ( wb w3a bicomd 3exp ) ABCEDGABCHDEFIJ $.
      $( [31-Dec-2011] $)
  $}

  $( Closed form of ~ ancoms .  Derived automatically from ~ ancomsimpVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  ancomsimp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ps /\ ph ) -> ch ) ) $=
    ( wa ancom imbi1i ) ABDBADCABEF $.
    $( [31-Dec-2011] $)

  ${
    exp3acom3r.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Export and commute antecedents.  (Contributed by Alan Sare,
       18-Mar-2012.) $)
    exp3acom3r $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( exp3a com3l ) ABCDABCDEFG $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ exp3acom23 .(Contributed by Alan Sare,
     22-Jul-2012.) $)
  exp3acom23g $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                        ( ph -> ( ch -> ( ps -> th ) ) ) ) $=
    ( wa wi ancomsimp impexp bitri imbi2i ) BCEDFZCBDFFZAKCBEDFLBCDGCBDHIJ $.
    $( [22-Jul-2012] $)

  ${
    exp3acom23.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( The exportation deduction ~ exp3a with commutation of the conjoined
       wwfs.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    exp3acom23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( exp3a com23 ) ABCDABCDEFG $.
      $( [22-Jul-2012] $)
  $}

  $( Implication form of ~ simplbi2com .  (Contributed by Alan Sare,
     22-Jul-2012.) $)
  simplbi2comg $p |- ( ( ph <-> ( ps /\ ch ) ) -> ( ch -> ( ps -> ph ) ) ) $=
    ( wa wb bi2 exp3acom23 ) ABCDZEBCAAHFG $.
    $( [22-Jul-2012] $)

  ${
    simplbi2com.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( A deduction eliminating a conjunct, similar to ~ simplbi2 .
       (Contributed by Alan Sare, 22-Jul-2012.)  (The proof was shortened by
       Wolf Lammen, 10-Nov-2012.) $)
    simplbi2com $p |- ( ch -> ( ps -> ph ) ) $=
      ( simplbi2 com12 ) BCAABCDEF $.
      $( [10-Nov-2012] $) $( [22-Jul-2012] $)
  $}

  ${
    $( Non-virtual deduction from of ~ e21 . ~ ee21 is ~ ee21VD without virtual
       deductions and was automatically derived from ~ ee21VD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Mar-2012.)  $)

    ee21.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee21.2 $e |- ( ph -> th ) $.
    ee21.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e21 without virtual deductions. $)
    ee21 $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1d ee22 ) ABCDEFADBGIHJ $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee10.1 $e |- ( ph -> ps ) $.
    ee10.2 $e |- ch $.
    ee10.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( ~ e10 without virtual deductions. $)
    ee10 $p |- ( ph -> th ) $=
      ( mpi syl ) ABDEBCDFGHI $.
      $( [25-Jul-2011] $)
  $}

  ${
    ee02.1 $e |- ph $.
    ee02.2 $e |- ( ps -> ( ch -> th ) ) $.
    ee02.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( ~ e02 without virtual deductions. $)
    ee02 $p |- ( ps -> ( ch -> ta ) ) $=
      ( a1i sylsyld ) BACDEABFIGHJ $.
      $( [22-Jul-2012] $)
  $}

$( End of auxiliary theorems for Alan Sare's virtual deduction tool, part 1 $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
        Predicate calculus mostly without distinct variables
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  "Pure" (equality-free) predicate calculus axioms ax-5, ax-6, ax-7, ax-gen
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed for pure predicate calculus. $)
  $c A. $. $( "inverted A" universal quantifier (read:  "for all") $)
  $c set $. $( Individual variable type (read:  "the following is an
             individual (set) variable" $)

  $( Declare some names for individual variables. $)
  $v x $.
  $v y $.
  $v z $.
  $v w $.
  $v v $.
  $v u $.
  $( Let ` x ` be an individual variable. $)
  vx $f set x $.
  $( Let ` y ` be an individual variable. $)
  vy $f set y $.
  $( Let ` z ` be an individual variable. $)
  vz $f set z $.
  $( Let ` w ` be an individual variable. $)
  vw $f set w $.
  $( Let ` v ` be an individual variable. $)
  vv $f set v $.
  $( Let ` u ` be an individual variable. $)
  vu $f set u $.

  $( Extend wff definition to include the universal quantifier ('for all').
     ` A. x ph ` is read " ` ph ` (phi) is true for all ` x ` ."  Typically, in
     its final application ` ph ` would be replaced with a wff containing a
     (free) occurrence of the variable ` x ` , for example ` x = y ` .  In a
     universe with a finite number of objects, "for all" is equivalent to a big
     conjunction (AND) with one wff for each possible case of ` x ` .  When the
     universe is infinite (as with set theory), such a propositional-calculus
     equivalent is not possible because an infinitely long formula has no
     meaning, but conceptually the idea is the same. $)
  wal $a wff A. x ph $.

  $( Axiom of Quantified Implication.  Axiom C4 of [Monk2] p. 105. $)
  ax-5 $a |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $.

  $( Axiom of Quantified Negation.  Axiom C5-2 of [Monk2] p. 113. $)
  ax-6 $a |- ( -. A. x ph -> A. x -. A. x ph ) $.

  $( Axiom of Quantifier Commutation.  This axiom says universal quantifiers
     can be swapped.  One of the 4 axioms of pure predicate calculus.  Axiom
     scheme C6' in [Megill] p. 448 (p. 16 of the preprint).  Also appears as
     Lemma 12 of [Monk2] p. 109 and Axiom C5-3 of [Monk2] p. 113.  An alternate
     axiomatization could use ~ ax467 in place of ~ ax-4 , ~ ax-6o , and
     ~ ax-7 . $)
  ax-7 $a |- ( A. x A. y ph -> A. y A. x ph ) $.

  ${
    ax-g.1 $e |- ph $.
    $( Rule of Generalization.  The postulated inference rule of pure predicate
       calculus.  See e.g.  Rule 2 of [Hamilton] p. 74.  This rule says that if
       something is unconditionally true, then it is true for all values of a
       variable.  For example, if we have proved ` x = x ` , we can conclude
       ` A. x x = x ` or even ` A. y x = x ` .  Theorem ~ a4i shows we can go
       the other way also: in other words we can add or remove universal
       quantifiers from the beginning of any theorem as required. $)
    ax-gen $a |- A. x ph $.
  $}

  $( Declare the existential quantifier symbol. $)
  $c E. $.   $( Backwards E (read:  "there exists") $)

  $( Extend wff definition to include the existential quantifier ("there
     exists"). $)
  wex $a wff E. x ph $.

  $( Define existential quantification. ` E. x ph ` means "there exists at
     least one set ` x ` such that ` ph ` is true."  Definition of [Margaris]
     p. 49. $)
  df-ex $a |- ( E. x ph <-> -. A. x -. ph ) $.

  ${
    gen2.1 $e |- ph $.
    $( Generalization applied twice. $)
    gen2 $p |- A. x A. y ph $=
      ( wal ax-gen ) ACEBACDFF $.
      $( [30-Apr-1998] $)
  $}

  ${
    mpg.1 $e |- ( A. x ph -> ps ) $.
    mpg.2 $e |- ph $.
    $( Modus ponens combined with generalization. $)
    mpg $p |- ps $=
      ( wal ax-gen ax-mp ) ACFBACEGDH $.
      $( [24-May-1994] $)
  $}

  ${
    mpgbi.1 $e |- ( A. x ph <-> ps ) $.
    mpgbi.2 $e |- ph $.
    $( Modus ponens on biconditional combined with generalization.  (The proof
       was shortened by Stefan Allan, 28-Oct-2008.) $)
    mpgbi $p |- ps $=
      ( wal ax-gen mpbi ) ACFBACEGDH $.
      $( [31-Oct-2008] $) $( [24-May-1994] $)
  $}

  ${
    mpgbir.1 $e |- ( ph <-> A. x ps ) $.
    mpgbir.2 $e |- ps $.
    $( Modus ponens on biconditional combined with generalization.  (The proof
       was shortened by Stefan Allan, 28-Oct-2008.) $)
    mpgbir $p |- ph $=
      ( wal ax-gen mpbir ) ABCFBCEGDH $.
      $( [31-Oct-2008] $) $( [24-May-1994] $)
  $}

  ${
    a7s.1 $e |- ( A. x A. y ph -> ps ) $.
    $( Swap quantifiers in an antecedent. $)
    a7s $p |- ( A. y A. x ph -> ps ) $=
      ( wal ax-7 syl ) ACFDFADFCFBADCGEH $.
      $( [5-Aug-1993] $)
  $}

  ${
    alimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    alimi $p |- ( A. x ph -> A. x ps ) $=
      ( wi wal ax-5 mpg ) ABEACFBCFECABCGDH $.
      $( [5-Aug-1993] $)

    $( Inference doubly quantifying both antecedent and consequent. $)
    2alimi $p |- ( A. x A. y ph -> A. x A. y ps ) $=
      ( wal alimi ) ADFBDFCABDEGG $.
      $( [3-Feb-2005] $)
  $}

  $( Theorem 19.20 of [Margaris] p. 90.  (The proof was shortened by O'Cat,
     30-Mar-2008.) $)
  alim $p |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( ax-5 ) ABCD $.
    $( [30-Mar-2008] $) $( [5-Aug-1993] $)

  ${
    al2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent. $)
    al2imi $p |- ( A. x ph -> ( A. x ps -> A. x ch ) ) $=
      ( wal wi alimi alim syl ) ADFBCGZDFBDFCDFGAKDEHBCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    alanimi.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Variant of ~ al2imi with conjunctive antecedent.  (Contributed by Andrew
       Salmon, 8-Jun-2011.) $)
    alanimi $p |- ( ( A. x ph /\ A. x ps ) -> A. x ch ) $=
      ( wal ex al2imi imp ) ADFBDFCDFABCDABCEGHI $.
      $( [8-Jun-2011] $)
  $}

  ${
    alimd.1 $e |- ( ph -> A. x ph ) $.
    alimd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.20 of [Margaris] p. 90. $)
    alimd $p |- ( ph -> ( A. x ps -> A. x ch ) ) $=
      ( wal wi al2imi syl ) AADGBDGCDGHEABCDFIJ $.
      $( [4-Jan-2002] $)
  $}

  $( Theorem 19.15 of [Margaris] p. 90. $)
  albi $p |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) $=
    ( wb wal bi1 al2imi bi2 impbid ) ABDZCEACEBCEJABCABFGJBACABHGI $.
    $( [5-Aug-1993] $)

  ${
    alrimi.1 $e |- ( ph -> A. x ph ) $.
    alrimi.2 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    alrimi $p |- ( ph -> A. x ps ) $=
      ( wal alimi syl ) AACFBCFDABCEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    albii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding universal quantifier to both sides of an
       equivalence. $)
    albii $p |- ( A. x ph <-> A. x ps ) $=
      ( wb wal albi mpg ) ABEACFBCFECABCGDH $.
      $( [7-Aug-1994] $)

    $( Inference adding 2 universal quantifiers to both sides of an
       equivalence. $)
    2albii $p |- ( A. x A. y ph <-> A. x A. y ps ) $=
      ( wal albii ) ADFBDFCABDEGG $.
      $( [9-Mar-1997] $)
  $}

  ${
    hbth.1 $e |- ph $.
    $( No variable is (effectively) free in a theorem.

       This and later "hypothesis-building" lemmas, with labels starting
       "hb...", allow us to construct proofs of formulas of the form
       ` |- ( ph -> A. x ph ) ` from smaller formulas of this form.  These are
       useful for constructing hypotheses that state " ` x ` is (effectively)
       not free in ` ph ` ." $)
    hbth $p |- ( ph -> A. x ph ) $=
      ( wal ax-gen a1i ) ABDAABCEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    hbxfrbi.1 $e |- ( ph <-> ps ) $.
    hbxfrbi.2 $e |- ( ps -> A. x ps ) $.
    $( A utility lemma to transfer a bound-variable hypothesis builder into a
       definition.  See ~ hbxfreq for equality version.  (Contributed by
       Jonathan Ben-Naim, 3-Jun-2011.) $)
    hbxfrbi $p |- ( ph -> A. x ph ) $=
      ( wal albii 3imtr4i ) BBCFAACFEDABCDGH $.
      $( [3-Jun-2011] $)
  $}

  ${
    hbal.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` A. y ph ` . $)
    hbal $p |- ( A. y ph -> A. x A. y ph ) $=
      ( wal alimi ax-7 syl ) ACEZABEZCEIBEAJCDFACBGH $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.5 of [Margaris] p. 89. $)
  alcom $p |- ( A. x A. y ph <-> A. y A. x ph ) $=
    ( wal ax-7 impbii ) ACDBDABDCDABCEACBEF $.
    $( [5-Aug-1993] $)

  $( Theorem 19.7 of [Margaris] p. 89. $)
  alnex $p |- ( A. x -. ph <-> -. E. x ph ) $=
    ( wex wn wal df-ex con2bii ) ABCADBEABFG $.
    $( [5-Aug-1993] $)

  $( Theorem 19.6 of [Margaris] p. 89. $)
  alex $p |- ( A. x ph <-> -. E. x -. ph ) $=
    ( wal wn wex notnot albii alnex bitri ) ABCADZDZBCJBEDAKBAFGJBHI $.
    $( [5-Aug-1993] $)

  $( Part of theorem *11.5 in [WhiteheadRussell] p. 164.  (Contributed by
     Andrew Salmon, 24-May-2011.) $)
  2nalexn $p |- ( -. A. x A. y ph <-> E. x E. y -. ph ) $=
    ( wn wex wal df-ex alex albii xchbinxr bicomi ) ADCEZBEZACFZBFZDMLDZBFOLBGN
    PBACHIJK $.
    $( [24-May-2011] $)

  $( Theorem 19.14 of [Margaris] p. 90. $)
  exnal $p |- ( E. x -. ph <-> -. A. x ph ) $=
    ( wal wn wex alex con2bii ) ABCADBEABFG $.
    $( [5-Aug-1993] $)

  $( Theorem 19.22 of [Margaris] p. 90.  (The proof was shortened by Wolf
     Lammen, 4-Jul-2014.) $)
  exim $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) $=
    ( wi wal wex wn con3 al2imi alnex 3imtr3g con4d ) ABDZCEZBCFZACFZNBGZCEAGZC
    EOGPGMQRCABHIBCJACJKL $.
    $( [4-Jul-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ exim as of 4-Jul-2014. $)
  eximOLD $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) $=
    ( wi wal wn wex con3 al2imi con3d df-ex 3imtr4g ) ABDZCEZAFZCEZFBFZCEZFACGB
    CGNRPMQOCABHIJACKBCKL $.
    $( [5-Aug-1993] $)

  ${
    eximi.1 $e |- ( ph -> ps ) $.
    $( Inference adding existential quantifier to antecedent and consequent. $)
    eximi $p |- ( E. x ph -> E. x ps ) $=
      ( wi wex exim mpg ) ABEACFBCFECABCGDH $.
      $( [5-Aug-1993] $)

    $( Inference adding 2 existential quantifiers to antecedent and
       consequent. $)
    2eximi $p |- ( E. x E. y ph -> E. x E. y ps ) $=
      ( wex eximi ) ADFBDFCABDEGG $.
      $( [3-Feb-2005] $)
  $}

  $( A transformation of quantifiers and logical connectives. $)
  alinexa $p |- ( A. x ( ph -> -. ps ) <-> -. E. x ( ph /\ ps ) ) $=
    ( wn wi wal wa wex imnan albii alnex bitri ) ABDEZCFABGZDZCFNCHDMOCABIJNCKL
    $.
    $( [19-Aug-1993] $)

  $( A relationship between two quantifiers and negation. $)
  alexn $p |- ( A. x E. y -. ph <-> -. E. x A. y ph ) $=
    ( wn wex wal exnal albii alnex bitri ) ADCEZBFACFZDZBFLBEDKMBACGHLBIJ $.
    $( [18-Aug-1993] $)

  $( Theorem *11.51 in [WhiteheadRussell] p. 164.  (Contributed by Andrew
     Salmon, 24-May-2011.)  (The proof was shortened by Wolf Lammen,
     25-Sep-2014.) $)
  2exnexn $p |- ( E. x A. y ph <-> -. A. x E. y -. ph ) $=
    ( wn wex wal alexn con2bii ) ADCEBFACFBEABCGH $.
    $( [25-Sep-2014] $) $( [24-May-2011] $)

  $( Obsolete proof of ~ 2exnexn as of 25-Sep-2014. $)
  2exnexnOLD $p |- ( E. x A. y ph <-> -. A. x E. y -. ph ) $=
    ( wal wex wn df-ex exnal albii notbii bitr4i ) ACDZBELFZBDZFAFCEZBDZFLBGPNO
    MBACHIJK $.
    $( [24-May-2011] $)


  $( Theorem 19.18 of [Margaris] p. 90. $)
  exbi $p |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) $=
    ( wb wal wex wi bi1 alimi exim syl bi2 impbid ) ABDZCEZACFZBCFZOABGZCEPQGNR
    CABHIABCJKOBAGZCEQPGNSCABLIBACJKM $.
    $( [5-Aug-1993] $)

  ${
    exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding existential quantifier to both sides of an
       equivalence. $)
    exbii $p |- ( E. x ph <-> E. x ps ) $=
      ( wb wex exbi mpg ) ABEACFBCFECABCGDH $.
      $( [24-May-1994] $)
  $}

  ${
    2exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding 2 existential quantifiers to both sides of an
       equivalence. $)
    2exbii $p |- ( E. x E. y ph <-> E. x E. y ps ) $=
      ( wex exbii ) ADFBDFCABDEGG $.
      $( [16-Mar-1995] $)
  $}

  ${
    3exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding 3 existential quantifiers to both sides of an
       equivalence. $)
    3exbii $p |- ( E. x E. y E. z ph <-> E. x E. y E. z ps ) $=
      ( wex exbii 2exbii ) AEGBEGCDABEFHI $.
      $( [2-May-1995] $)
  $}

  $( A transformation of quantifiers and logical connectives.  (The proof was
     shortened by Wolf Lammen, 4-Sep-2014.) $)
  exanali $p |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) $=
    ( wn wa wex wi wal annim exbii exnal bitri ) ABDEZCFABGZDZCFNCHDMOCABIJNCKL
    $.
    $( [4-Sep-2014] $) $( [25-Mar-1996] $)

  $( Obsolete proof of ~ exanali as of 4-Sep-2014. $)
  exanaliOLD $p |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) $=
    ( wi wal wn wa wex iman albii alnex bitri con2bii ) ABDZCEZABFGZCHZOPFZCEQF
    NRCABIJPCKLM $.
    $( [25-Mar-1996] $)

  $( Commutation of conjunction inside an existential quantifier. $)
  exancom $p |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) $=
    ( wa ancom exbii ) ABDBADCABEF $.
    $( [18-Aug-1993] $)

  ${
    alrimd.1 $e |- ( ph -> A. x ph ) $.
    alrimd.2 $e |- ( ps -> A. x ps ) $.
    alrimd.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.21 of [Margaris] p. 90.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    alrimd $p |- ( ph -> ( ps -> A. x ch ) ) $=
      ( wal alimd syl5 ) BBDHACDHFABCDEGIJ $.
      $( [16-May-2011] $) $( [10-Feb-1997] $)
  $}

  ${
    eximd.1 $e |- ( ph -> A. x ph ) $.
    eximd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    eximd $p |- ( ph -> ( E. x ps -> E. x ch ) ) $=
      ( wi wal wex alrimi exim syl ) ABCGZDHBDICDIGAMDEFJBCDKL $.
      $( [20-May-1996] $)
  $}

  ${
    nex.1 $e |- -. ph $.
    $( Generalization rule for negated wff. $)
    nex $p |- -. E. x ph $=
      ( wn wex alnex mpgbi ) ADABEDBABFCG $.
      $( [18-May-1994] $)
  $}

  ${
    nexd.1 $e |- ( ph -> A. x ph ) $.
    nexd.2 $e |- ( ph -> -. ps ) $.
    $( Deduction for generalization rule for negated wff. $)
    nexd $p |- ( ph -> -. E. x ps ) $=
      ( wn wal wex alrimi alnex sylib ) ABFZCGBCHFALCDEIBCJK $.
      $( [2-Jan-2002] $)
  $}

  ${
    albid.1 $e |- ( ph -> A. x ph ) $.
    albid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for universal quantifier (deduction rule). $)
    albid $p |- ( ph -> ( A. x ps <-> A. x ch ) ) $=
      ( wb wal alrimi albi syl ) ABCGZDHBDHCDHGALDEFIBCDJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    exbid.1 $e |- ( ph -> A. x ph ) $.
    exbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for existential quantifier (deduction rule). $)
    exbid $p |- ( ph -> ( E. x ps <-> E. x ch ) ) $=
      ( wb wal wex alrimi exbi syl ) ABCGZDHBDICDIGAMDEFJBCDKL $.
      $( [5-Aug-1993] $)
  $}

  $( Simplification of an existentially quantified conjunction.  (Contributed
     by Rodolfo Medina, 25-Sep-2010.)  (The proof was shortened by Andrew
     Salmon, 29-Jun-2011.) $)
  exsimpl $p |- ( E. x ( ph /\ ps ) -> E. x ph ) $=
    ( wa simpl eximi ) ABDACABEF $.
    $( [29-Jun-2011] $) $( [25-Sep-2010] $)

  $( Theorem 19.26 of [Margaris] p. 90.  Also Theorem *10.22 of
     [WhiteheadRussell] p. 119.  (The proof was shortened by Wolf Lammen,
     4-Jul-2014.) $)
  19.26 $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) $=
    ( wa wal simpl alimi simpr jca id alanimi impbii ) ABDZCEZACEZBCEZDNOPMACAB
    FGMBCABHGIABMCMJKL $.
    $( [4-Jul-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ 19.26 as of 4-Jul-2014. $)
  19.26OLD $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) $=
    ( wa wal simpl alimi simpr jca pm3.2 al2imi imp impbii ) ABDZCEZACEZBCEZDOP
    QNACABFGNBCABHGIPQOABNCABJKLM $.
    $( [5-Aug-1993] $)

  $( Theorem 19.26 of [Margaris] p. 90 with two quantifiers. $)
  19.26-2 $p |- ( A. x A. y ( ph /\ ps ) <->
                ( A. x A. y ph /\ A. x A. y ps ) ) $=
    ( wa wal 19.26 albii bitri ) ABEDFZCFADFZBDFZEZCFKCFLCFEJMCABDGHKLCGI $.
    $( [3-Feb-2005] $)

  $( Theorem 19.26 of [Margaris] p. 90 with triple conjunction. $)
  19.26-3an $p |- ( A. x ( ph /\ ps /\ ch )
                   <-> ( A. x ph /\ A. x ps /\ A. x ch ) ) $=
    ( wa wal w3a 19.26 anbi1i bitri df-3an albii 3bitr4i ) ABEZCEZDFZADFZBDFZEZ
    CDFZEZABCGZDFQRTGPNDFZTEUANCDHUCSTABDHIJUBODABCKLQRTKM $.
    $( [13-Sep-2011] $)

  $( Theorem 19.29 of [Margaris] p. 90.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  19.29 $p |- ( ( A. x ph /\ E. x ps ) -> E. x ( ph /\ ps ) ) $=
    ( wal wex wa wi pm3.2 alimi exim syl imp ) ACDZBCEZABFZCEZMBOGZCDNPGAQCABHI
    BOCJKL $.
    $( [16-May-2011] $) $( [5-Aug-1993] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90. $)
  19.29r $p |- ( ( E. x ph /\ A. x ps ) -> E. x ( ph /\ ps ) ) $=
    ( wal wex wa 19.29 ancom exancom 3imtr4i ) BCDZACEZFBAFCELKFABFCEBACGLKHABC
    IJ $.
    $( [18-Aug-1993] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with double
     quantification. $)
  19.29r2 $p |- ( ( E. x E. y ph /\ A. x A. y ps ) ->
             E. x E. y ( ph /\ ps ) ) $=
    ( wex wal wa 19.29r eximi syl ) ADEZCEBDFZCFGKLGZCEABGDEZCEKLCHMNCABDHIJ $.
    $( [3-Feb-2005] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with mixed
     quantification. $)
  19.29x $p |- ( ( E. x A. y ph /\ A. x E. y ps ) ->
             E. x E. y ( ph /\ ps ) ) $=
    ( wal wex wa 19.29r 19.29 eximi syl ) ADEZCFBDFZCEGLMGZCFABGDFZCFLMCHNOCABD
    IJK $.
    $( [11-Feb-2005] $)

  $( Theorem 19.35 of [Margaris] p. 90.  This theorem is useful for moving an
     implication (in the form of the right-hand side) into the scope of a
     single existential quantifier.  (The proof was shortened by Wolf Lammen,
     27-Jun-2014.) $)
  19.35 $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) $=
    ( wi wex wal wn wa 19.26 annim albii alnex anbi2i 3bitr3i con4bii ) ABDZCEZ
    ACFZBCEZDZPGZCFZRSGZHZQGTGABGZHZCFRUECFZHUBUDAUECIUFUACABJKUGUCRBCLMNPCLRSJ
    NO $.
    $( [27-Jun-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ 19.35 as of 27-Jun-2014. $)
  19.35OLD $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) $=
    ( wal wn wi wex wa 19.26 annim albii df-an 3bitr3i con2bii imbi2i 3bitr4ri
    df-ex ) ACDZBEZCDZEZFZABFZEZCDZERBCGZFUCCGUEUBASHZCDRTHUEUBEASCIUGUDCABJKRT
    LMNUFUARBCQOUCCQP $.
    $( [5-Aug-1993] $)

  ${
    19.35i.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.35 of [Margaris] p. 90. $)
    19.35i $p |- ( A. x ph -> E. x ps ) $=
      ( wi wex wal 19.35 mpbi ) ABECFACGBCFEDABCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.35ri.1 $e |- ( A. x ph -> E. x ps ) $.
    $( Inference from Theorem 19.35 of [Margaris] p. 90. $)
    19.35ri $p |- E. x ( ph -> ps ) $=
      ( wi wex wal 19.35 mpbir ) ABECFACGBCFEDABCHI $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.25 of [Margaris] p. 90. $)
  19.25 $p |- ( A. y E. x ( ph -> ps ) ->
              ( E. y A. x ph -> E. y E. x ps ) ) $=
    ( wi wex wal 19.35 biimpi alimi exim syl ) ABECFZDGACGZBCFZEZDGNDFODFEMPDMP
    ABCHIJNODKL $.
    $( [5-Aug-1993] $)

  $( Theorem 19.30 of [Margaris] p. 90.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  19.30 $p |- ( A. x ( ph \/ ps ) -> ( A. x ph \/ E. x ps ) ) $=
    ( wn wi wal wex wo exnal exim syl5bir df-or albii 3imtr4i ) ADZBEZCFZACFZDZ
    BCGZEABHZCFRTHSOCGQTACIOBCJKUAPCABLMRTLN $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem 19.43 of [Margaris] p. 90.  (The proof was shortened by Wolf
     Lammen, 27-Jun-2014.) $)
  19.43 $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) $=
    ( wo wex wn wi wal df-or exbii 19.35 alnex imbi1i 3bitri bitr4i ) ABDZCEZAC
    EZFZBCEZGZRTDQAFZBGZCEUBCHZTGUAPUCCABIJUBBCKUDSTACLMNRTIO $.
    $( [27-Jun-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ 19.43 as of 27-Jun-2014. $)
  19.43OLD $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) $=
    ( wo wn wal wex wa ioran albii 19.26 alnex anbi12i 3bitri notbii df-ex oran
    3bitr4i ) ABDZEZCFZEACGZEZBCGZEZHZESCGUBUDDUAUFUAAEZBEZHZCFUGCFZUHCFZHUFTUI
    CABIJUGUHCKUJUCUKUEACLBCLMNOSCPUBUDQR $.
    $( [5-Aug-1993] $)

  $( Theorem 19.33 of [Margaris] p. 90. $)
  19.33 $p |- ( ( A. x ph \/ A. x ps ) -> A. x ( ph \/ ps ) ) $=
    ( wal wo orc alimi olc jaoi ) ACDABEZCDBCDAJCABFGBJCBAHGI $.
    $( [5-Aug-1993] $)

  $( The antecedent provides a condition implying the converse of ~ 19.33 .
     Compare Theorem 19.33 of [Margaris] p. 90.  (The proof was shortened by
     Andrew Salmon, 25-May-2011.)  (The proof was shortened by Wolf Lammen,
     5-Jul-2014.) $)
  19.33b $p |- ( -. ( E. x ph /\ E. x ps ) ->
               ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) $=
    ( wex wa wn wo wal ianor alnex pm2.53 al2imi syl5bir olc syl6com orcomd ord
    wi 19.30 orc jaoi sylbi 19.33 impbid1 ) ACDZBCDZEFZABGZCHZACHZBCHZGZUGUEFZU
    FFZGUIULRZUEUFIUMUOUNUIUMUKULUMAFZCHUIUKACJUHUPBCABKLMUKUJNOUIUNUJULUIUFUJU
    IUJUFABCSPQUJUKTOUAUBABCUCUD $.
    $( [5-Jul-2014] $) $( [27-Mar-2004] $)

  $( Obsolete proof of ~ 19.33b as of 22-Mar-2014. $)
  19.33bOLD $p |- ( -. ( E. x ph /\ E. x ps ) ->
               ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) $=
    ( wex wa wn wo wal wi ianor alnex wb biorf alimi albi syl olc syl6bir 19.30
    sylbir orc a1i pm2.21 jaod syl5 jaoi sylbi 19.33 impbid1 ) ACDZBCDZEFZABGZC
    HZACHZBCHZGZULUJFZUKFZGUNUQIZUJUKJURUTUSURAFZCHZUTACKVBUNUPUQVBBUMLZCHUPUNL
    VAVCCABMNBUMCOPUPUOQRTUNUOUKGUSUQABCSUSUOUQUKUOUQIUSUOUPUAUBUKUQUCUDUEUFUGA
    BCUHUI $.
    $( [25-May-2011] $) $( [27-Mar-2004] $)

  $( Theorem 19.40 of [Margaris] p. 90. $)
  19.40 $p |- ( E. x ( ph /\ ps ) -> ( E. x ph /\ E. x ps ) ) $=
    ( wa wex exsimpl simpr eximi jca ) ABDZCEACEBCEABCFJBCABGHI $.
    $( [5-Aug-1993] $)

  $( Theorem *11.42 in [WhiteheadRussell] p. 163.  Theorem 19.40 of [Margaris]
     p. 90 with 2 quantifiers.  (Contributed by Andrew Salmon, 24-May-2011.) $)
  19.40-2 $p |- ( E. x E. y ( ph /\ ps ) ->
        ( E. x E. y ph /\ E. x E. y ps ) ) $=
    ( wa wex 19.40 eximi syl ) ABEDFZCFADFZBDFZEZCFKCFLCFEJMCABDGHKLCGI $.
    $( [24-May-2011] $)

  $( Theorem *11.21 in [WhiteheadRussell] p. 160.  (Contributed by Andrew
     Salmon, 24-May-2011.) $)
  alrot3 $p |- ( A. x A. y A. z ph <-> A. y A. z A. x ph ) $=
    ( wal alcom albii bitri ) ADEZCEBEIBEZCEABEDEZCEIBCFJKCABDFGH $.
    $( [24-May-2011] $)

  $( Rotate 4 universal quantifiers twice.  (The proof was shortened by Wolf
     Lammen, 28-Jun-2014.) $)
  alrot4 $p |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) $=
    ( wal alrot3 albii alcom 3bitri ) AEFDFCFZBFACFZEFZDFZBFMBFZDFLBFEFZDFKNBAC
    DEGHMBDIOPDLBEIHJ $.
    $( [28-Jun-2014] $) $( [2-Feb-2005] $)

  $( Obsolete proof of ~ alrot4 as of 28-Jun-2014. $)
  alrot4OLD $p |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) $=
    ( wal alcom albii bitri 3bitri ) AEFZDFCFZBFACFZEFZDFZBFNBFZDFMBFEFZDFLOBLK
    CFZDFOKCDGRNDACEGHIHNBDGPQDMBEGHJ $.
    $( [2-Feb-2005] $)

  $( Split a biconditional and distribute quantifier. $)
  albiim $p |- ( A. x ( ph <-> ps ) <->
             ( A. x ( ph -> ps ) /\ A. x ( ps -> ph ) ) ) $=
    ( wb wal wi wa dfbi2 albii 19.26 bitri ) ABDZCEABFZBAFZGZCEMCENCEGLOCABHIMN
    CJK $.
    $( [18-Aug-1993] $)

  $( Split a biconditional and distribute 2 quantifiers. $)
  2albiim $p |- ( A. x A. y ( ph <-> ps ) <->
             ( A. x A. y ( ph -> ps ) /\ A. x A. y ( ps -> ph ) ) ) $=
    ( wb wal wi wa albiim albii 19.26 bitri ) ABEDFZCFABGDFZBAGDFZHZCFNCFOCFHMP
    CABDIJNOCKL $.
    $( [3-Feb-2005] $)

  ${
    hband.1 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hband.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hban . $)
    hband $p |- ( ph -> ( ( ps /\ ch ) -> A. x ( ps /\ ch ) ) ) $=
      ( wa wal anim12d 19.26 syl6ibr ) ABCGZBDHZCDHZGLDHABMCNEFIBCDJK $.
      $( [2-Jan-2002] $)
  $}

  ${
    hb3and.1 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hb3and.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    hb3and.3 $e |- ( ph -> ( th -> A. x th ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hb3an . $)
    hb3and $p |- ( ph -> ( ( ps /\ ch /\ th ) -> A. x ( ps /\ ch /\ th ) ) ) $=
      ( w3a wal 3anim123d 19.26-3an syl6ibr ) ABCDIZBEJZCEJZDEJZINEJABOCPDQFGHK
      BCDELM $.
      $( [17-Feb-2013] $)
  $}

  ${
    hbald.1 $e |- ( ph -> A. y ph ) $.
    hbald.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbal . $)
    hbald $p |- ( ph -> ( A. y ps -> A. x A. y ps ) ) $=
      ( wal alimd ax-7 syl6 ) ABDGZBCGZDGKCGABLDEFHBDCIJ $.
      $( [2-Jan-2002] $)
  $}

  $( Add/remove a conjunct in the scope of an existential quantifier.
     (Contributed by Raph Levien, 3-Jul-2006.) $)
  exintrbi $p |- ( A. x ( ph -> ps ) -> ( E. x ph <-> E. x ( ph /\ ps ) ) ) $=
    ( wi wal wa wb wex pm4.71 albii exbi sylbi ) ABDZCEAABFZGZCEACHNCHGMOCABIJA
    NCKL $.
    $( [3-Jul-2006] $)

  $( Introduce a conjunct in the scope of an existential quantifier. $)
  exintr $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ( ph /\ ps ) ) ) $=
    ( wi wal wex wa exintrbi biimpd ) ABDCEACFABGCFABCHI $.
    $( [11-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    Introduce equality axioms ax-8 through ax-14 except ax-9
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( --- Start of patch to prevent connective overloading $)
  $c class $.
  $( This syntax construction states that a variable ` x ` , which has been
     declared to be a set variable by $f statement vx, is also a class
     expression.  This can be justified informally as follows.  We know that
     the class builder ` { y | y e. x } ` is a class by ~ cab .  Since (when
     ` y ` is distinct from ` x ` ) we have ` x = { y | y e. x } ` by
     ~ cvjust , we can argue that that the syntax " ` class x ` " can be viewed
     as an abbreviation for " ` class { y | y e. x } ` ".  See the discussion
     under the definition of class in [Jech] p. 4 showing that "Every set can
     be considered to be a class."

     While it is tempting and perhaps occasionally useful to view ~ cv as a
     "type conversion" from a set variable to a class variable, keep in mind
     that ~ cv is intrinsically no different from any other class-building
     syntax such as ~ cab , ~ cun , or ~ c0 .

     (The description above applies to set theory, not predicate calculus.  The
     purpose of introducing ` class x ` here, and not in set theory where it
     belongs, is to allow us to express i.e.  "prove" the ~ weq of predicate
     calculus from the ~ wceq of set theory, so that we don't "overload" the
     ` = ` connective with two syntax definitions.  This is done to prevent
     ambiguity that would complicate some Metamath parsers.) $)
  cv $a class x $.
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(          (None - the above patch had no old code.) $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare the equality predicate symbol. $)
  $c = $.  $( Equal sign (read:  'is equal to') $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    $v B $.
    wceq.cA $f class A $.
    wceq.cB $f class B $.
    $( Extend wff definition to include class equality.

       (The purpose of introducing ` wff A = B ` here, and not in set theory
       where it belongs, is to allow us to express i.e.  "prove" the ~ weq of
       predicate calculus in terms of the ~ wceq of set theory, so that we
       don't "overload" the ` = ` connective with two syntax definitions.  This
       is done to prevent ambiguity that would complicate some Metamath
       parsers.  For example, some parsers - although not the Metamath program
       - stumble on the fact that the ` = ` in ` x = y ` could be the ` = ` of
       either ~ weq or ~ wceq , although mathematically it makes no
       difference.  The class variables ` A ` and ` B ` are introduced
       temporarily for the purpose of this definition but otherwise not used in
       predicate calculus.  See ~ df-cleq for more information on the set
       theory usage of ~ wceq .) $)
    wceq $a wff A = B $.
  $}

  $( Extend wff definition to include atomic formulas using the equality
     predicate.

     (Instead of introducing ~ weq as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wceq .  This lets us avoid overloading
     the ` = ` connective, thus preventing ambiguity that would complicate
     certain Metamath parsers.  However, logically ~ weq is considered to be a
     primitive syntax, even though here it is artificially "derived" from
     ~ wceq .  Note:  To see the proof steps of this syntax proof, type "show
     proof weq /all" in the Metamath program.) $)
  weq $p wff x = y $=
    ( cv wceq ) ACBCD $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include atomic formulas using the equality
     predicate.

     After we introduce ~ cv and ~ wceq in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "vx cv vy cv wceq". @)
  weq @a wff x = y @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare the membership predicate symbol. $)
  $c e. $. $( Stylized epsilon $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    $v B $.
    wcel.cA $f class A $.
    wcel.cB $f class B $.
    $( Extend wff definition to include the membership connective between
       classes.

       (The purpose of introducing ` wff A e. B ` here is to allow us to
       express i.e.  "prove" the ~ wel of predicate calculus in terms of the
       ~ wceq of set theory, so that we don't "overload" the ` e. ` connective
       with two syntax definitions.  This is done to prevent ambiguity that
       would complicate some Metamath parsers.  The class variables ` A ` and
       ` B ` are introduced temporarily for the purpose of this definition but
       otherwise not used in predicate calculus.  See ~ df-clab for more
       information on the set theory usage of ~ wcel .) $)
    wcel $a wff A e. B $.
  $}

  $( Extend wff definition to include atomic formulas with the epsilon
     (membership) predicate.  This is read " ` x ` is an element of
     ` y ` ," " ` x ` is a member of ` y ` ," " ` x ` belongs to ` y ` ,"
     or " ` y ` contains ` x ` ."  Note:  The phrase " ` y ` includes
     ` x ` " means " ` x ` is a subset of ` y ` ;" to use it also for
     ` x e. y ` , as some authors occasionally do, is poor form and causes
     confusion, according to George Boolos (1992 lecture at MIT).

     This syntactical construction introduces a binary non-logical predicate
     symbol ` e. ` (epsilon) into our predicate calculus.  We will eventually
     use it for the membership predicate of set theory, but that is irrelevant
     at this point: the predicate calculus axioms for ` e. ` apply to any
     arbitrary binary predicate symbol.  "Non-logical" means that the predicate
     is presumed to have additional properties beyond the realm of predicate
     calculus, although these additional properties are not specified by
     predicate calculus itself but rather by the axioms of a theory (in our
     case set theory) added to predicate calculus.  "Binary" means that the
     predicate has two arguments.

     (Instead of introducing ~ wel as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wcel .  This lets us avoid overloading
     the ` e. ` connective, thus preventing ambiguity that would complicate
     certain Metamath parsers.  However, logically ~ wel is considered to be a
     primitive syntax, even though here it is artificially "derived" from
     ~ wcel .  Note:  To see the proof steps of this syntax proof, type "show
     proof wel /all" in the Metamath program.) $)
  wel $p wff x e. y $=
    ( cv wcel ) ACBCD $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include atomic formulas with the epsilon
     (membership) predicate.  This is read " ` x ` is an element of ` y ` ,"
     " ` x ` is a member of ` y ` ," " ` x ` belongs to ` y ` ," or " ` y `
     contains ` x ` ."  Note:  The phrase " ` y ` includes ` x ` " means
     " ` x ` is a subset of ` y ` "; to use it also for ` x e. y ` (as some
     authors occasionally do) is poor form and causes confusion.

     After we introduce ~ cv and ~ wcel in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "vx cv vy cv wcel". @)
  wel @a wff x e. y @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Axiom of Equality.  One of the equality and substitution axioms of
     predicate calculus with equality.  This is similar to, but not quite, a
     transitive law for equality (proved later as ~ equtr ).  Axiom scheme C8'
     in [Megill] p. 448 (p. 16 of the preprint).  Also appears as Axiom C7 of
     [Monk2] p. 105.

     Axioms ~ ax-8 through ~ ax-16 are the axioms having to do with equality,
     substitution, and logical properties of our binary predicate ` e. ` (which
     later in set theory will mean "is a member of").  Note that all axioms
     except ~ ax-16 and ~ ax-17 are still valid even when ` x ` , ` y ` , and
     ` z ` are replaced with the same variable because they do not have any
     distinct variable (Metamath's $d) restrictions.  Distinct variable
     restrictions are required for ~ ax-16 and ~ ax-17 only. $)
  ax-8 $a |- ( x = y -> ( x = z -> y = z ) ) $.

  $( Axiom of Quantifier Substitution.  One of the equality and substitution
     axioms of predicate calculus with equality.  Appears as Lemma L12 in
     [Megill] p. 445 (p. 12 of the preprint).

     The original version of this axiom was ~ ax-10o ("o" for "old") and was
     replaced with this shorter ~ ax-10 in May 2008.  The old axiom is proved
     from this one as theorem ~ ax10o .  Conversely, this axiom is proved from
     ~ ax-10o as theorem ~ ax10 . $)
  ax-10 $a |- ( A. x x = y -> A. y y = x ) $.

  $( Axiom of Variable Substitution.  One of the 5 equality axioms of predicate
     calculus.  The final consequent ` A. x ( x = y -> ph ) ` is a way of
     expressing " ` y ` substituted for ` x ` in wff ` ph ` " (cf. ~ sb6 ).  It
     is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of [Monk2] p. 105,
     from which it can be proved by cases.

     The original version of this axiom was ~ ax-11o ("o" for "old") and was
     replaced with this shorter ~ ax-11 in Jan. 2007.  The old axiom is proved
     from this one as theorem ~ ax11o .  Conversely, this axiom is proved from
     ~ ax-11o as theorem ~ ax11 .

     Juha Arpiainen proved the independence of this axiom (in the form of the
     older axiom ~ ax-11o ) from the others on 19-Jan-2006.  See item 9a at
     ~ http://us.metamath.org/award2003.html .

     Interestingly, if the wff expression substituted for ` ph ` contains no
     wff variables, the resulting statement _can_ be proved without invoking
     this axiom.  This means that even though this axiom is _metalogically_
     independent from the others, it is not _logically_ independent.
     Specifically, we can prove any wff-variable-free instance of axiom
     ~ ax-11o (from which the ~ ax-11 instance follows by theorem ~ ax11 .)
     The proof is by induction on formula length, using ~ ax11eq and ~ ax11el
     for the basis steps and ~ ax11indn , ~ ax11indi , and ~ ax11inda for the
     induction steps.

     See also ~ ax11v and ~ ax11v2 for other equivalents of this axiom that
     (unlike this axiom) have distinct variable restrictions. $)
  ax-11 $a |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $.

  $( Axiom of Quantifier Introduction.  One of the equality and substitution
     axioms of predicate calculus with equality.  Informally, it says that
     whenever ` z ` is distinct from ` x ` and ` y ` , and ` x = y ` is true,
     then ` x = y ` quantified with ` z ` is also true.  In other words, ` z `
     is irrelevant to the truth of ` x = y ` .  Axiom scheme C9' in [Megill]
     p. 448 (p. 16 of the preprint).  It apparently does not otherwise appear
     in the literature but is easily proved from textbook predicate calculus by
     cases.

     An open problem is whether this axiom is redundant.  Note that the
     analogous axiom for the membership connective, ~ ax-15 , has been shown to
     be redundant.  It is also unknown whether this axiom can be replaced by a
     shorter formula.  However, it can be derived from two slightly shorter
     formulas, as shown by ~ a12study . $)
  ax-12 $a |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x = y -> A. z x = y ) ) ) $.

  $( Axiom of Equality.  One of the equality and substitution axioms for a
     non-logical predicate in our predicate calculus with equality.  It
     substitutes equal variables into the left-hand side of the ` e. ` binary
     predicate.  Axiom scheme C12' in [Megill] p. 448 (p. 16 of the preprint).
     It is a special case of Axiom B8 (p. 75) of system S2 of [Tarski] p. 77.
     "Non-logical" means that the predicate is not a primitive of predicate
     calculus proper but instead is an extension to it.  "Binary" means that
     the predicate has two arguments.  In a system of predicate calculus with
     equality, like ours, equality is not usually considered to be a
     non-logical predicate.  In systems of predicate calculus without equality,
     it typically would be. $)
  ax-13 $a |- ( x = y -> ( x e. z -> y e. z ) ) $.

  $( Axiom of Equality.  One of the equality and substitution axioms for a
     non-logical predicate in our predicate calculus with equality.  It
     substitutes equal variables into the right-hand side of the ` e. ` binary
     predicate.  Axiom scheme C13' in [Megill] p. 448 (p. 16 of the preprint).
     It is a special case of Axiom B8 (p. 75) of system S2 of [Tarski]
     p. 77. $)
  ax-14 $a |- ( x = y -> ( z e. x -> z e. y ) ) $.

  $( Bound-variable hypothesis builder for ` x = x ` .  This theorem tells us
     that any variable, including ` x ` , is effectively not free in
     ` x = x ` , even though ` x ` is technically free according to the
     traditional definition of free variable.  (The proof uses only ~ ax-5 ,
     ~ ax-8 , ~ ax-12 , and ~ ax-gen .  This shows that this can be proved
     without ~ ax-9 , even though the theorem ~ equid cannot be.  A shorter
     proof using ~ ax-9 is obtainable from ~ equid and ~ hbth .)  (The proof
     was shortened by Wolf Lammen, 23-Mar-2014.) $)
  hbequid $p |- ( x = x -> A. y x = x ) $=
    ( weq wal wi ax-12 ax-8 pm2.43i alimi a1d pm2.61ii ) BACZBDZMAACZNBDZEAABFM
    ONLNBLNBAAGHIJZPK $.
    $( [23-Mar-2014] $) $( [13-Jan-2011] $)

  $( Obsolete proof of ~ hbequid as of 23-Mar-2014. $)
  hbequidOLD $p |- ( x = x -> A. y x = x ) $=
    ( cv wceq wal wi ax-12 ax-8 pm2.43i ax-gen ax-5 ax-mp a1d pm2.61ii ) BCACZD
    ZBEZQOODZRBEZFAABGQSRPRFZBEQSFTBPRBAAHIJPRBKLMZUAN $.
    $( [13-Jan-2011] $)

  $( Commutation law for identical variable specifiers.  The antecedent and
     consequent are true when ` x ` and ` y ` are substituted with the same
     variable.  Lemma L12 in [Megill] p. 445 (p. 12 of the preprint). $)
  alequcom $p |- ( A. x x = y -> A. y y = x ) $=
    ( ax-10 ) ABC $.
    $( [5-Aug-1993] $)

  ${
    alequcoms.1 $e |- ( A. x x = y -> ph ) $.
    $( A commutation rule for identical variable specifiers. $)
    alequcoms $p |- ( A. y y = x -> ph ) $=
      ( weq wal alequcom syl ) CBECFBCEBFACBGDH $.
      $( [5-Aug-1993] $)
  $}

  ${
    nalequcoms.1 $e |- ( -. A. x x = y -> ph ) $.
    $( A commutation rule for distinct variable specifiers. $)
    nalequcoms $p |- ( -. A. y y = x -> ph ) $=
      ( weq wal alequcom nsyl4 con1i ) ACBECFZBCEBFJABCGDHI $.
      $( [2-Jan-2002] $)
  $}

  $( Lemma used in proofs of substitution properties. $)
  equs3 $p |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) $=
    ( weq wn wi wal wa wex alinexa con2bii ) BCDZAEFBGLAHBILABJK $.
    $( [5-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Axiom ax-17 - first use of the $d distinct variable statement
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x ph $.
    $( Axiom to quantify a variable over a formula in which it does not occur.
       Axiom C5 in [Megill] p. 444 (p. 11 of the preprint).  Also appears as
       Axiom B6 (p. 75) of system S2 of [Tarski] p. 77 and Axiom C5-1 of
       [Monk2] p. 113.

       This axiom is _logically_ redundant in the (logically complete)
       predicate calculus axiom system consisting of ~ ax-gen , ~ ax-4 through
       ~ ax-9 , ~ ax-10o , and ~ ax-12 through ~ ax-16 : in that system, we can
       derive any instance of ~ ax-17 not containing wff variables by induction
       on formula length, using ~ ax17eq and ~ ax17el for the basis together
       ~ hbn , ~ hbal , and ~ hbim .  However, if we omit this axiom, our
       development would be quite inconvenient since we could work only with
       specific instances of wffs containing no wff variables - this axiom
       introduces the concept of a set variable not occurring in a wff (as
       opposed to just two set variables being distinct). $)
    ax-17 $a |- ( ph -> A. x ph ) $.
  $}

  ${
    $d x ps $.
    $( ~ ax-17 with antecedent.  Useful in proofs of deduction versions of
       bound-variable hypothesis builders such as ~ hbeleqd . $)
    a17d $p |- ( ph -> ( ps -> A. x ps ) ) $=
      ( wal wi ax-17 a1i ) BBCDEABCFG $.
      $( [1-Mar-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive ax-9 from a weaker version
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    $d x w $.  $d w z $.
    a9wa9lem1.1 $e |- -. A. w -. w = x $.
    $( Lemma for ~ a9wa9 .  Similar to ~ equcomi , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem1 $p |- ( x = y -> y = x ) $=
      ( weq wn wal ax-8 pm2.43i con3i alimi mto ax-17 mt3 mpi ) ABEAAEZBAEPPFZC
      GZRCAEZFZCGDQTCSPSPCAAHIJKLQCMNABAHO $.
      $( [12-Nov-2013] $)

    a9wa9lem2.2 $e |- -. A. w -. w = z $.
    $( Lemma for ~ a9wa9 .  Similar to ~ equequ2 , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem2 $p |- ( x = y -> ( z = x <-> z = y ) ) $=
      ( weq a9wa9lem1 ax-8 com12 syl5 syl2im impbid ) ABGZCAGZCBGZOACGZNPCADFHQ
      NPACBIJKNBAGZPBCGZOABDEHCBDFHSROBCAIJLM $.
      $( [3-Apr-2014] $) $( [12-Nov-2013] $)

    $( Obsolete proof of ~ a9wa9lem2 as of 3-Apr-2014. $)
    a9wa9lem2OLD $p |- ( x = y -> ( z = x <-> z = y ) ) $=
      ( weq wi a9wa9lem1 ax-8 syl com12 syl2im impbid ) ABGZCAGZCBGZPOQPACGOQHC
      ADFIACBJKLOBAGZQBCGZPABDEICBDFISRPBCAJLMN $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x w $.  $d w ph $.
    a9wa9lem3.1 $e |- -. A. w -. w = x $.
    a9wa9lem3.2 $e |- -. A. x -. x = w $.
    $( Lemma for ~ a9wa9 .  Similar to ~ ax4 , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem3 $p |- ( A. x ph -> ph ) $=
      ( wal wi weq wn ax-17 a9wa9lem1 ax-11 syl2im con2 al2imi mtoi con4d con3i
      syl6 alrimi mt3 ) ABFZAGZCBHZIZCFDUCIZUECUFCJUDUCUDAUBUDAIZBCHZUGGZBFZUBI
      UDUHUGUGCFUJCBBEKUGCJUGBCLMUJUBUHIZBFEUIAUKBUHANOPSQRTUA $.
      $( [12-Nov-2013] $)

    $( Lemma for ~ a9wa9 .  Similar to ~ hba1 , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem4 $p |- ( A. x ph -> A. x A. x ph ) $=
      ( wal wn a9wa9lem3 con2i ax-6 con1i alimi 3syl ) ABFZNGZBFZGZQBFNBFPNOBCD
      EHIOBJQNBNPABJKLM $.
      $( [12-Nov-2013] $)

    a9wa9lem5.3 $e |- ( ph -> A. x ph ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hbn , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem5 $p |- ( -. ph -> A. x -. ph ) $=
      ( wn wal a9wa9lem3 con3i ax-6 alrimi syl ) AGZABHZGZNBHOAABCDEIJPNBABKAOF
      JLM $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x w $.  $d w ph $.  $d w ps $.
    a9wa9lem6.1 $e |- -. A. w -. w = x $.
    a9wa9lem6.2 $e |- -. A. x -. x = w $.
    a9wa9lem6.3 $e |- ( ph -> A. x ph ) $.
    a9wa9lem6.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    a9wa9lem6.5 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hbimd , without using ~ ax-9 or
       ~ ax-4 .  (The proof was shortened by Wolf Lammen, 3-Apr-2014.) $)
    a9wa9lem6 $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn alrimi a9wa9lem3 ax-6 nsyl4 con1i alimi syl6 con3 al2imi ax-1
      syl2im pm2.21 jad ) ABCBCKZDLZABMZUIDLZUHABBDLZKZDLUIUKMZDLZUJAULDHINUNBU
      KBUNBDEFGOBDPQRULUMUIDBUKUAUBUDUIUGDBCUESTACCDLUHJCUGDCBUCSTUF $.
      $( [3-Apr-2014] $) $( [12-Nov-2013] $)

    $( Obsolete proof of ~ a9wa9lem6 as of 3-Apr-2014. $)
    a9wa9lem6OLD $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn alrimi a9wa9lem3 ax-6 nsyl4 con1i alimi syl6com al2imi syl2im
      con3 pm2.21 ax-1 ja com12 ) BCKZAUHDLZBCAUIKABMZUJDLZUIABBDLZKZDLUJULMZDL
      ZUKAUMDHINUOBULBUOBDEFGOBDPQRUMUNUJDBULUCUAUBUJUHDBCUDSTACCDLUIJCUHDCBUES
      TUFUG $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x w $.  $d w ph $.  $d w ps $.
    a9wa9lem7.1 $e |- -. A. w -. w = x $.
    a9wa9lem7.2 $e |- -. A. x -. x = w $.
    a9wa9lem7.3 $e |- ( ph -> A. x ph ) $.
    a9wa9lem7.4 $e |- ( ps -> A. x ps ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hban , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem7 $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
      ( wa wn wi df-an wal a9wa9lem5 pm2.21 alrimi ax-1 ja hbxfrbi ) ABIABJZKZJ
      CABLUACDEFATUACMAJUACACDEFGNATOPTUACBCDEFHNTAQPRNS $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x v w z $.  $d y v w z $.  $d w x ph $.  $d w z ps $.
    a9wa9.1 $e |- -. A. w -. w = x $.
    a9wa9.2 $e |- -. A. x -. x = w $.
    a9wa9.3 $e |- -. A. z -. z = y $.
    a9wa9.4 $e |- -. A. w -. w = z $.
    a9wa9.5 $e |- -. A. z -. z = w $.

    ${
      a9wa9lem8.6 $e |- ( z = y -> ( ph <-> ps ) ) $.
      $( Lemma for ~ a9wa9 .  Similar to ~ dvelimfALT , without using ~ ax-9 or
         ~ ax-4 .  (The proof was shortened by Wolf Lammen, 18-Jul-2014.) $)
      a9wa9lem8 $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
        ( weq wal wn wi ax-17 alrimi alimi ax-6 a1d a9wa9lem3 syl5ibr a2i ax-10
        wa syl con3i nalequcoms a9wa9lem7 ax-12 imp a17d a9wa9lem6 hbald biimpd
        con3 al2imi mtoi con1i 3syl syl56 expcom ax-11 syl2im pm2.27 pm2.61d2
        syld ) CDMZCNOZCEMZCNZBBCNZPZVLOZVJVNBEDMZAPZENZVOVJUFZVRCNVMBVPBENZPZE
        NVRBWAEBEQZBVTVPWBUARWAVQEVPVTAVTAVPBBEFJKUBLUCUDSUGVSVQCEVOVJEFJKVOENE
        CECMZENZOVOEWCETVLWDCEUEUHRUIVJEQUJVSVPACFGHVOVJCFGHVKCTVICTUJVOVJVPVPC
        NPEDCUKULVSACUMUNUOVRBCVRVPBPZENZBOZENZOBVQWEEVPABVPABLUPUDSWFWHVPOZENI
        WEWGWIEVPBUQURUSBWHWGEQUTVASVBVCVLBVKBPZCNZVMVLVKBVTWKVKCFGHUBWBBCEVDVE
        VKWJBCVKBVFURVHVG $.
        $( [18-Jul-2014] $) $( [12-Nov-2013] $)

      $( Obsolete proof of ~ a9wa9lem8 as of 18-Jul-2014. $)
      a9wa9lem8OLD $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
        ( weq wi wal wn ax-17 a1d alimi ax-6 alrimi a9wa9lem3 syl5ibr a9wa9lem4
        a2i syl ax-11 pm2.27 al2imi syld ax-10 con3i nalequcoms a9wa9lem7 ax-12
        syl5 wa imp a17d a9wa9lem6 hbald ex pm2.61i biimpd con3 mtoi con1i 3syl
        syl56 ) BEDMZANZEOZCDMZCOPZVLCOZBCOBVJBEOZNZEOVLBVQEBEQZBVPVJVRRUAVQVKE
        VJVPAVPAVJBBEFJKUBLUCUESUFCEMZCOZVNVLVONZNVTWAVNVLVLEOZVTVOVKEFJKUDVTWB
        VSVLNZCOZVOVTVSWBWDNVSCFGHUBVLCEUGUFVSWCVLCVSVLUHUIUJUPRVTPZVNWAWEVNUQZ
        VKCEWEVNEFJKWEEOECECMZEOZPWEEWGETVTWHCEUKULUAUMVNEQUNWFVJACFGHWEVNCFGHV
        SCTVMCTUNWEVNVJVJCONEDCUOURWFACUSUTVAVBVCVLBCVLVJBNZEOZBPZEOZPBVKWIEVJA
        BVJABLVDUESWJWLVJPZEOIWIWKWMEVJBVEUIVFBWLWKEQVGVHSVI $.
        $( [12-Nov-2013] $)
    $}

    a9wa9.6 $e |- -. A. v -. v = y $.
    a9wa9.7 $e |- -. A. w -. w = v $.
    a9wa9.8 $e |- -. A. x -. x = v $.
    $( Derive ~ ax-9 (which has no distinct variable requirement) from a weaker
       version that requires that its two variables be distinct.  The
       hypotheses are the instances of the weaker version that we need.
       Neither ~ ax-9 nor ~ ax-4 (which can be derived from ~ ax-9 ) is used by
       the proof.  Note that every other predicate calculus axiom (except
       ~ ax-13 and ~ ax-14 ) is used by the proof.  (The proof was shortened by
       Wolf Lammen, 28-Mar-2014.) $)
    a9wa9 $p |- -. A. x -. x = y $=
      ( weq wal wn a9wa9lem3 nsyl3 wi a9wa9lem2 ax-17 a9wa9lem8 a9wa9lem4 albid
      wb syl notbid mtbii syl6com con3i alrimi mt3 pm2.61i ) ABNZAOZUNPZAOZPZUQ
      UNUOUPADFGQUNADFGQRUOPZURSZEBNZPZEOKUTPZVBEVCEUAVAUTUSVAVAAOZURECNVAABCDF
      GHIJCBEDILTUBVDAENZPZAOUQMVDVFUPAVAADFGUCVDVEUNVDVAVEUNUEVAADFGQEBADLFTUF
      UGUDUHUIUJUKULUM $.
      $( [28-Mar-2014] $) $( [12-Nov-2013] $)

    $( Obsolete proof of ~ a9wa9 as of 28-Mar-2014. $)
    a9wa9OLD $p |- -. A. x -. x = y $=
      ( cv wceq wal wn a9wa9lem3 syl a9wa9lem2 con2i a9wa9lem8 a9wa9lem4 notbid
      wi ax-17 wb albid mpbii syl6com con3i alrimi mt3 pm2.61i ) ANZBNZOZAPZUQQ
      ZAPZQZURUQVAUQADFGRUTUQUSADFGRUASURQZVAUEZENZUPOZQZEPKVCQZVFEVGEUFVEVCVBV
      EVEAPZVAVDCNOVEABCDFGHIJCBEDILTUBVHUOVDOZQZAPZQVAMVHVKUTVHVJUSAVEADFGUCVH
      VIUQVHVEVIUQUGVEADFGREBADLFTSUDUHUDUIUJUKULUMUN $.
      $( [12-Nov-2013] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce Axiom of Existence ax-9
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Axiom of Existence.  One of the equality and substitution axioms of
     predicate calculus with equality.  One thing this axiom tells us is that
     at least one thing exists (although ~ ax-4 and possibly others also tell
     us that, i.e. they are not valid in the empty domain of a "free logic.")
     In this form (not requiring that ` x ` and ` y ` be distinct) it was used
     in an axiom system of Tarski (see Axiom B7' in footnote 1 of
     [KalishMontague] p. 81.)  It is equivalent to axiom scheme C10' in
     [Megill] p. 448 (p. 16 of the preprint); the equivalence is established by
     ~ ax9o and ~ ax9 .  A more convenient form of this axiom is ~ a9e , which
     has additional remarks.

     Raph Levien proved the independence of this axiom from the others on
     12-Apr-2005.  See item 16 at ~ http://us.metamath.org/award2003.html .

     ~ ax-9 can be proved from a weaker version with distinct variable
     requirements; see theorem ~ a9wa9 .

     ~ ax-9 can also be proved from the Axiom of Separation.  See theorem
     ~ ax9sep . $)
  ax-9 $a |- -. A. x -. x = y $.

  $( ~ equid with existential quantifier without using ~ ax-4 or ~ ax-17 .
     (The proof was shortened by Wolf Lammen, 27-Feb-2014.) $)
  equidqe $p |- -. A. y -. x = x $=
    ( weq wn wal ax-9 ax-8 pm2.43i con3i alimi mto ) AACZDZBEBACZDZBEBAFMOBNLNL
    BAAGHIJK $.
    $( [27-Feb-2014] $) $( [13-Jan-2011] $)

  $( Obsolete proof of ~ equidqe as of 27-Feb-2014. $)
  equidqeOLD $p |- -. A. y -. x = x $=
    ( weq wn wal ax-9 wi ax-8 pm2.43i con3i ax-gen ax-5 ax-mp mto ) AACZDZBEZBA
    CZDZBEZBAFPSGZBEQTGUABROROBAAHIJKPSBLMN $.
    $( [13-Jan-2011] $)

  $( ~ equid with universal quantifier without using ~ ax-4 or ~ ax-17 . $)
  equidq $p |- A. y x = x $=
    ( weq wal wn equidqe ax-6 hbequid con3i alrimi mt3 ) AACZBDZLEZBDABFMENBLBG
    LMABHIJK $.
    $( [13-Jan-2011] $)

  $( A special case of ~ ax-4 without using ~ ax-4 or ~ ax-17 . $)
  ax4sp1 $p |- ( A. y -. x = x -> -. x = x ) $=
    ( weq wn wal equidqe pm2.21i ) AACDZBEHABFG $.
    $( [13-Jan-2011] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive ax-4, ax-5o, and ax-6o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.  $d y ph $.
    $( Theorem showing that ~ ax-4 can be derived from ~ ax-5 , ~ ax-gen ,
       ~ ax-8 , ~ ax-9 , ~ ax-11 , and ~ ax-17 and is therefore redundant in a
       system including these axioms.  The proof uses ideas from the proof of
       Lemma 21 of [Monk2] p. 114.

       This theorem should not be referenced in any proof.  Instead, we will
       use ~ ax-4 below so that explicit uses of ~ ax-4 can be more easily
       identified.  In particular, this will more cleanly separate out the
       theorems of "pure" predicate calculus that don't involve equality or
       distinct variables.  A beginner may wish to accept ~ ax-4 a priori, so
       that the proof of this theorem ( ~ ax4 ), which involves equality as
       well as the distinct variable requirements of ~ ax-17 , can be put off
       until those axioms are studied.

       Note:  All predicate calculus axioms introduced from this point forward
       are redundant.  Immediately before their introduction, we prove them
       from earlier axioms to demonstrate their redundancy.  Specifically,
       redundant axioms ~ ax-4 , ~ ax-5o , ~ ax-6o , ~ ax-9o , ~ ax-10o ,
       ~ ax-11o , ~ ax-15 , and ~ ax-16 are proved by theorems ~ ax4 , ~ ax5o ,
       ~ ax6o , ~ ax9o , ~ ax10o , ~ ax11o , ~ ax15 , and ~ ax16 .  Except for
       the ones suffixed with o ( ~ ax-5o etc.), we never reference those
       theorems directly.  Instead, we use the axiom version that immediately
       follows it.  This allow us to better isolate the uses of the redundant
       axioms for easier study of subsystems containing them.

       (The proof was shortened by Scott Fenton, 24-Jan-2011.) $)
    ax4 $p |- ( A. x ph -> ph ) $=
      ( vy wal wi weq ax-9 ax-8 pm2.43i con3i ax-gen ax-17 ax-5 mpsyl mt3 ax-11
      wn mpi syl2im con2 ax-mp syl mtoi syl6 con4d ) ABDZAEZCBFZQZCDZCBGUGQZUIE
      ZCDUKUKCDUJULCUHUGUHAUFUHAQZBCFZUMEZBDZUFQUHUNUMUMCDUPUHCCFZUNUQUNQZBDZBC
      GZUQQZUREZBDVAVABDUSVBBUNUQUNUQBCCHIJKVABLVAURBMNOCBCHRUMCLUMBCPSUPUFUSUT
      UPAUREZBDZUFUSEUOVCEZBDUPVDEVEBUNATKUOVCBMUAAURBMUBUCUDUEJKUKCLUKUICMNO
      $.
      $( [24-Jan-2011] $) $( [21-May-2008] $)
  $}

  $( Axiom of Specialization.  A quantified wff implies the wff without a
     quantifier (i.e. an instance, or special case, of the generalized wff).
     In other words if something is true for all ` x ` , it is true for any
     specific ` x ` (that would typically occur as a free variable in the wff
     substituted for ` ph ` ).  (A free variable is one that does not occur in
     the scope of a quantifier: ` x ` and ` y ` are both free in ` x = y ` ,
     but only ` x ` is free in ` A. y x = y ` .)  This is one of the axioms of
     what we call "pure" predicate calculus ( ~ ax-4 through ~ ax-7 plus rule
     ~ ax-gen ).  Axiom scheme C5' in [Megill] p. 448 (p. 16 of the preprint).
     Also appears as Axiom B5 of [Tarski] p. 67 (under his system S2, defined
     in the last paragraph on p. 77).

     Note that the converse of this axiom does not hold in general, but a
     weaker inference form of the converse holds and is expressed as rule
     ~ ax-gen .  Conditional forms of the converse are given by ~ ax-12 ,
     ~ ax-15 , ~ ax-16 , and ~ ax-17 .

     Unlike the more general textbook Axiom of Specialization, we cannot choose
     a variable different from ` x ` for the special case.  For use, that
     requires the assistance of equality axioms, and we deal with it later
     after we introduce the definition of proper substitution - see ~ stdpc4 .

     An nice alternate axiomatization uses ~ ax467 and ~ ax-5o in place of
     ~ ax-4 , ~ ax-5 , ~ ax-6 , and ~ ax-7 .

     This axiom is redundant in the presence of certain other axioms, as shown
     by theorem ~ ax4 .  (We replaced the older ~ ax-5o and ~ ax-6o with newer
     versions ~ ax-5 and ~ ax-6 in order to prove this redundancy.) $)
  ax-4 $a |- ( A. x ph -> ph ) $.

  $( Show that the original axiom ~ ax-5o can be derived from ~ ax-5 and
     others.  See ~ ax5 for the rederivation of ~ ax-5 from ~ ax-5o .

     Part of the proof is based on the proof of Lemma 22 of [Monk2] p. 114.

     Normally, ~ ax5o should be used rather than ~ ax-5o , except by theorems
     specifically studying the latter's properties. $)
  ax5o $p |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wal wi wn ax-4 con2i ax-6 con1i ax-gen ax-5 ax-mp 3syl syl5 ) ACDZPCDZPBE
    CDBCDPPFZCDZFZTCDZQSPRCGHRCITPEZCDUAQEUBCPSACIJKTPCLMNPBCLO $.
    $( [21-May-2008] $)

  $( Axiom of Quantified Implication.  This axiom moves a quantifier from
     outside to inside an implication, quantifying ` ps ` .  Notice that ` x `
     must not be a free variable in the antecedent of the quantified
     implication, and we express this by binding ` ph ` to "protect" the axiom
     from a ` ph ` containing a free ` x ` .  One of the 4 axioms of "pure"
     predicate calculus.  Axiom scheme C4' in [Megill] p. 448 (p. 16 of the
     preprint).  It is a special case of Lemma 5 of [Monk2] p. 108 and Axiom 5
     of [Mendelson] p. 69.

     This axiom is redundant, as shown by theorem ~ ax5o .

     Normally, ~ ax5o should be used rather than ~ ax-5o , except by theorems
     specifically studying the latter's properties. $)
  ax-5o $a |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) $.

  $( Rederivation of axiom ~ ax-5 from the orginal version, ~ ax-5o .  See
     ~ ax5o for the derivation of ~ ax-5o from ~ ax-5 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-5
     above so that uses of ~ ax-5 can be more easily identified.

     Note:  This is the same as theorem ~ alim below.  It is proved separately
     here so that it won't be dependent on the axioms used for ~ alim . $)
  ax5 $p |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wi wal ax-4 syl5 ax-gen ax-5o ax-mp syl ) ABDZCEZACEZBDZCEZNBCEDMODZCEMPD
    QCNAMBACFLCFGHLOCIJABCIK $.
    $( [5-Dec-2010] $) $( [23-May-2008] $)

  $( Show that the original axiom ~ ax-6o can be derived from ~ ax-6 and
     others.  See ~ ax6 for the rederivation of ~ ax-6 from ~ ax-6o .

     Normally, ~ ax6o should be used rather than ~ ax-6o , except by theorems
     specifically studying the latter's properties. $)
  ax6o $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn ax-4 ax-6 nsyl4 ) ABCZAHDBCABEABFG $.
    $( [21-May-2008] $)

  $( Axiom of Quantified Negation.  This axiom is used to manipulate negated
     quantifiers.  One of the 4 axioms of pure predicate calculus.  Equivalent
     to axiom scheme C7' in [Megill] p. 448 (p. 16 of the preprint).  An
     alternate axiomatization could use ~ ax467 in place of ~ ax-4 , ~ ax-6o ,
     and ~ ax-7 .

     This axiom is redundant, as shown by theorem ~ ax6o .

     Normally, ~ ax6o should be used rather than ~ ax-6o , except by theorems
     specifically studying the latter's properties. $)
  ax-6o $a |- ( -. A. x -. A. x ph -> ph ) $.

  $( Rederivation of axiom ~ ax-6 from the orginal version, ~ ax-6o .  See
     ~ ax6o for the derivation of ~ ax-6o from ~ ax-6 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-6
     above so that uses of ~ ax-6 can be more easily identified. $)
  ax6 $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( wal wn wi ax-4 id ax-gen ax-5o ax-mp nsyl ax-6o nsyl4 ) ABCZBCZDZBCZNDZBC
    ZNQREZBCQSETBQONPBFNNEZBCNOEUABNGHANBIJKHPRBIJNBLM $.
    $( [23-May-2008] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    "Pure" predicate calculus including ax-4, without distinct variables
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    a4i.1 $e |- A. x ph $.
    $( Inference rule reversing generalization. $)
    a4i $p |- ph $=
      ( wal ax-4 ax-mp ) ABDACABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    a4s.1 $e |- ( ph -> ps ) $.
    $( Generalization of antecedent. $)
    a4s $p |- ( A. x ph -> ps ) $=
      ( wal ax-4 syl ) ACEABACFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    a4sd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction generalizing antecedent. $)
    a4sd $p |- ( ph -> ( A. x ps -> ch ) ) $=
      ( wal ax-4 syl5 ) BDFBACBDGEH $.
      $( [17-Aug-1994] $)
  $}

  $( Abbreviated version of ~ ax-6o . $)
  a6e $p |- ( E. x A. x ph -> ph ) $=
    ( wal wex wn df-ex ax6o sylbi ) ABCZBDIEBCEAIBFABGH $.
    $( [5-Aug-1993] $)

  $( Closed theorem version of bound-variable hypothesis builder ~ hbn . $)
  hbnt $p |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) $=
    ( wn wal wi ax6o con1i con3 al2imi syl5 ) ACZABDZCZBDZALEZBDKBDNAABFGOMKBAL
    HIJ $.
    $( [5-Aug-1993] $)

  $( ` x ` is not free in ` A. x ph ` .  Example in Appendix in [Megill] p. 450
     (p. 19 of the preprint).  Also Lemma 22 of [Monk2] p. 114. $)
  hba1 $p |- ( A. x ph -> A. x A. x ph ) $=
    ( wal wn ax-4 con2i ax-6 con1i alimi 3syl ) ABCZKDZBCZDZNBCKBCMKLBEFLBGNKBK
    MABGHIJ $.
    $( [5-Aug-1993] $)

  ${
    a5i.1 $e |- ( A. x ph -> ps ) $.
    $( Inference version of ~ ax-5o . $)
    a5i $p |- ( A. x ph -> A. x ps ) $=
      ( wal wi hba1 ax-5 syl5 mpg ) ACEZBFZKBCEZFCKKCELCEMACGKBCHIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    hb.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` -. ph ` . $)
    hbn $p |- ( -. ph -> A. x -. ph ) $=
      ( wal wi wn hbnt mpg ) AABDEAFZIBDEBABGCH $.
      $( [5-Aug-1993] $)

    $( If ` x ` is not free in ` ph ` , it is not free in ` E. y ph ` . $)
    hbex $p |- ( E. y ph -> A. x E. y ph ) $=
      ( wex wn wal df-ex hbn hbal hbxfrbi ) ACEAFZCGZFBACHMBLBCABDIJIK $.
      $( [5-Aug-1993] $)

    ${
      hb.2 $e |- ( ps -> A. x ps ) $.
      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph -> ps ) ` .  (The proof was shortened by O'Cat, 3-Mar-2008.) $)
      hbim $p |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) $=
        ( wi wal wn hbn pm2.21 alrimi ax-1 ja ) ABABFZCGAHNCACDIABJKBNCEBALKM
        $.
        $( [4-Mar-2008] $)  $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph \/ ps ) ` . $)
      hbor $p |- ( ( ph \/ ps ) -> A. x ( ph \/ ps ) ) $=
        ( wo wn wi df-or hbn hbim hbxfrbi ) ABFAGZBHCABIMBCACDJEKL $.
        $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph /\ ps ) ` . $)
      hban $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
        ( wa wn wi df-an hbn hbim hbxfrbi ) ABFABGZHZGCABINCAMCDBCEJKJL $.
        $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph <-> ps ) ` . $)
      hbbi $p |- ( ( ph <-> ps ) -> A. x ( ph <-> ps ) ) $=
        ( wb wi wa dfbi2 hbim hban hbxfrbi ) ABFABGZBAGZHCABIMNCABCDEJBACEDJKL
        $.
        $( [5-Aug-1993] $)

      ${
        hb.3 $e |- ( ch -> A. x ch ) $.
        $( If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not
           free in ` ( ph \/ ps \/ ch ) ` . $)
        hb3or $p |- ( ( ph \/ ps \/ ch ) -> A. x ( ph \/ ps \/ ch ) ) $=
          ( w3o wo df-3or hbor hbxfrbi ) ABCHABIZCIDABCJMCDABDEFKGKL $.
          $( [14-Sep-2003] $)

        $( If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not
           free in ` ( ph /\ ps /\ ch ) ` . $)
        hb3an $p |- ( ( ph /\ ps /\ ch ) -> A. x ( ph /\ ps /\ ch ) ) $=
          ( w3a wa df-3an hban hbxfrbi ) ABCHABIZCIDABCJMCDABDEFKGKL $.
          $( [14-Sep-2003] $)
      $}
    $}
  $}

  $( Lemma 24 of [Monk2] p. 114. $)
  hba2 $p |- ( A. y A. x ph -> A. x A. y A. x ph ) $=
    ( wal hba1 hbal ) ABDBCABEF $.
    $( [29-May-2008] $)

  $( Lemma 23 of [Monk2] p. 114. $)
  hbia1 $p |- ( ( A. x ph -> A. x ps ) -> A. x ( A. x ph -> A. x ps ) ) $=
    ( wal hba1 hbim ) ACDBCDCACEBCEF $.
    $( [29-May-2008] $)

  $( Obsolete proof of ~ hbn1 as of 15-Aug-2014. $)
  hbn1OLD $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( wal hba1 hbn ) ABCBABDE $.
    $( [5-Aug-1993] $)

  $( ` x ` is not free in ` -. A. x ph ` .  (The proof was shortened by Wolf
     Lammen, 18-Aug-2014.) $)
  hbn1 $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( ax-6 ) ABC $.
    $( [18-Aug-2014] $) $( [5-Aug-1993] $)

  $( ` x ` is not free in ` E. x ph ` . $)
  hbe1 $p |- ( E. x ph -> A. x E. x ph ) $=
    ( wex wn wal df-ex hbn1 hbxfrbi ) ABCADZBEDBABFIBGH $.
    $( [5-Aug-1993] $)

  $( Proof of a single axiom that can replace ~ ax-4 and ~ ax-6o .  See
     ~ ax46to4 and ~ ax46to6 for the re-derivation of those axioms.
     (Contributed by Scott Fenton, 12-Sep-2005.) $)
  ax46 $p |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) $=
    ( wal wn ax-6o ax-4 ja ) ABCZDBCHAABEABFG $.
    $( [12-Sep-2005] $)

  $( Re-derivation of ~ ax-4 from ~ ax46 .  Only propositional calculus is used
     for the re-derivation.  (Contributed by Scott Fenton, 12-Sep-2005.) $)
  ax46to4 $p |- ( A. x ph -> ph ) $=
    ( wal wn wi ax-1 ax46 syl ) ABCZIDBCZIEAIJFABGH $.
    $( [12-Sep-2005] $)

  $( Re-derivation of ~ ax-6o from ~ ax46 .  Only propositional calculus is
     used for the re-derivation.  (Contributed by Scott Fenton,
     12-Sep-2005.) $)
  ax46to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn wi pm2.21 ax46 syl ) ABCZDBCZDJIEAJIFABGH $.
    $( [12-Sep-2005] $)

  $( Proof of a single axiom that can replace both ~ ax-6o and ~ ax-7 .  See
     ~ ax67to6 and ~ ax67to7 for the re-derivation of those axioms. $)
  ax67 $p |- ( -. A. x -. A. y A. x ph -> A. y ph ) $=
    ( wal wn ax-7 con3i alimi ax-6o syl ) ABDCDZEZBDZEACDZBDZEZBDZENQMPLBKOACBF
    GHGNBIJ $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-6o from ~ ax67 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation. $)
  ax67to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn hba1 con3i alimi ax67 ax-4 3syl ) ABCZDZBCZDKBCZDZBCZDKAPMOLBKNABE
    FGFABBHABIJ $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-7 from ~ ax67 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation. $)
  ax67to7 $p |- ( A. x A. y ph -> A. y A. x ph ) $=
    ( wal wn ax67to6 con4i ax67 alimi syl ) ACDBDZKEZCDEZCDZABDZCDNKLCFGMOCACBH
    IJ $.
    $( [18-Nov-2006] $)

  $( Proof of a single axiom that can replace ~ ax-4 , ~ ax-6o , and ~ ax-7 in
     a subsystem that includes these axioms plus ~ ax-5o and ~ ax-gen (and
     propositional calculus).  See ~ ax467to4 , ~ ax467to6 , and ~ ax467to7 for
     the re-derivation of those axioms.  This theorem extends the idea in Scott
     Fenton's ~ ax46 . $)
  ax467 $p |- ( ( A. x A. y -. A. x A. y ph -> A. x ph ) -> ph ) $=
    ( wal wn ax-4 hbn1 ax-6o con1i alimi ax-7 3syl nsyl4 ja ) ACDZBDEZCDBDZABDA
    OAQACFOEZRCDPBDZCDQACGRSCSOOBHIJPCBKLMABFN $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-4 from ~ ax467 .  Only propositional calculus is
     used by the re-derivation. $)
  ax467to4 $p |- ( A. x ph -> ph ) $=
    ( wal wn wi ax-1 ax467 syl ) ABCZIBCDBCBCZIEAIJFABBGH $.
    $( [19-Nov-2006] $)

  $( Re-derivation of ~ ax-6o from ~ ax467 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation.  The use of ~ alimi (which uses ~ ax-4 ) is
     allowed since we have already proved ~ ax467to4 . $)
  ax467to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn wi ax467to4 hba1 con3i alimi syl pm2.21 ax467 3syl ) ABCZDZBCZDNBC
    ZDZBCZBCZDTNEATPTSPSBFROBNQABGHIJHTNKABBLM $.
    $( [19-Nov-2006] $)

  $( Re-derivation of ~ ax-7 from ~ ax467 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation.  The use of ~ alimi (which uses ~ ax-4 ) is
     allowed since we have already proved ~ ax467to4 . $)
  ax467to7 $p |- ( A. x A. y ph -> A. y A. x ph ) $=
    ( wal wn ax467to6 con4i wi pm2.21 ax467 syl alimi nsyl4 ) ACDBDZNEZCDZEZCDZ
    ABDZCDRNOCFGQSCPBDZEZBDSPUAABUATSHATSIABCJKLPBFMLK $.
    $( [19-Nov-2006] $)

  $( The analog in our "pure" predicate calculus of axiom 5 of modal logic
     S5. $)
  modal-5 $p |- ( -. A. x -. ph -> A. x -. A. x -. ph ) $=
    ( wn hbn1 ) ACBD $.
    $( [5-Oct-2005] $)

  $( The analog in our "pure" predicate calculus of the Brouwer axiom (B) of
     modal logic S5. $)
  modal-b $p |- ( ph -> A. x -. A. x -. ph ) $=
    ( wn wal ax6o con4i ) ACZBDCBDAGBEF $.
    $( [5-Oct-2005] $)

  $( If a wff is true, it is true for at least one instance.  Special case of
     Theorem 19.8 of [Margaris] p. 89. $)
  19.8a $p |- ( ph -> E. x ph ) $=
    ( wn wal wex ax-4 con2i df-ex sylibr ) AACZBDZCABEKAJBFGABHI $.
    $( [5-Aug-1993] $)

  $( Theorem 19.2 of [Margaris] p. 89, generalized to use two set variables.
     (Contributed by O'Cat, 31-Mar-2008.) $)
  19.2 $p |- ( A. x ph -> E. y ph ) $=
    ( wex 19.8a a4s ) AACDBACEF $.
    $( [31-Mar-2008] $)

  ${
    19.3.1 $e |- ( ph -> A. x ph ) $.
    $( A wff may be quantified with a variable not free in it.  Theorem 19.3 of
       [Margaris] p. 89. $)
    19.3 $p |- ( A. x ph <-> ph ) $=
      ( wal ax-4 impbii ) ABDAABECF $.
      $( [21-May-2007] $) $( [5-Aug-1993] $)
  $}

  $( A closed version of one direction of ~ 19.9 . $)
  19.9t $p |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) $=
    ( wex wn wal wi df-ex hbnt con1d syl5bi ) ABCADBEZDAABEFBEZAABGLAKABHIJ $.
    $( [5-Aug-1993] $)

  ${
    19.9.1 $e |- ( ph -> A. x ph ) $.
    $( A wff may be existentially quantified with a variable not free in it.
       Theorem 19.9 of [Margaris] p. 89.  (Contributed by FL, 24-Mar-2007.) $)
    19.9 $p |- ( E. x ph <-> ph ) $=
      ( wex wal wi 19.9t mpg 19.8a impbii ) ABDZAAABEFKAFBABGCHABIJ $.
      $( [24-Mar-2007] $)
  $}

  ${
    19.9d.1 $e |- ( ps -> A. x ps ) $.
    19.9d.2 $e |- ( ps -> ( ph -> A. x ph ) ) $.
    $( A deduction version of one direction of ~ 19.9 . $)
    19.9d $p |- ( ps -> ( E. x ph -> ph ) ) $=
      ( wal wi wex alimi 19.9t 3syl ) BBCFAACFGZCFACHAGDBLCEIACJK $.
      $( [5-Aug-1993] $)
  $}

  $( One direction of Theorem 19.11 of [Margaris] p. 89. $)
  excomim $p |- ( E. x E. y ph -> E. y E. x ph ) $=
    ( wex 19.8a 2eximi hbe1 hbex 19.9 sylib ) ACDBDABDZCDZBDLAKBCABEFLBKBCABGHI
    J $.
    $( [5-Aug-1993] $)

  $( Theorem 19.11 of [Margaris] p. 89. $)
  excom $p |- ( E. x E. y ph <-> E. y E. x ph ) $=
    ( wex excomim impbii ) ACDBDABDCDABCEACBEF $.
    $( [5-Aug-1993] $)

  $( Theorem 19.12 of [Margaris] p. 89.  Assuming the converse is a mistake
     sometimes made by beginners!  But sometimes the converse does hold, as in
     ~ 19.12vv and ~ r19.12sn . $)
  19.12 $p |- ( E. x A. y ph -> A. y E. x ph ) $=
    ( wal wex hba1 hbex ax-4 eximi alrimi ) ACDZBEABECKCBACFGKABACHIJ $.
    $( [5-Aug-1993] $)

  ${
    19.16.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.16 of [Margaris] p. 90. $)
    19.16 $p |- ( A. x ( ph <-> ps ) -> ( ph <-> A. x ps ) ) $=
      ( wal wb 19.3 albi syl5bbr ) AACEABFCEBCEACDGABCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.17.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.17 of [Margaris] p. 90. $)
    19.17 $p |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> ps ) ) $=
      ( wb wal albi 19.3 syl6bb ) ABECFACFBCFBABCGBCDHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.19.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.19 of [Margaris] p. 90. $)
    19.19 $p |- ( A. x ( ph <-> ps ) -> ( ph <-> E. x ps ) ) $=
      ( wex wb wal 19.9 exbi syl5bbr ) AACEABFCGBCEACDHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90.  The hypothesis can be thought of
       as " ` x ` is not free in ` ph ` ." $)
    19.21 $p |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) $=
      ( wi wal alim syl5 hba1 hbim ax-4 imim2i alrimi impbii ) ABEZCFZABCFZEZAA
      CFPQDABCGHROCAQCDBCIJQBABCKLMN $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21-2.1 $e |- ( ph -> A. x ph ) $.
    19.21-2.2 $e |- ( ph -> A. y ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90 but with 2 quantifiers. $)
    19.21-2 $p |- ( A. x A. y ( ph -> ps ) <-> ( ph -> A. x A. y ps ) ) $=
      ( wi wal 19.21 albii bitri ) ABGDHZCHABDHZGZCHAMCHGLNCABDFIJAMCEIK $.
      $( [4-Feb-2005] $)
  $}

  ${
    stdpc5.1 $e |- ( ph -> A. x ph ) $.
    $( An axiom scheme of standard predicate calculus that emulates Axiom 5 of
       [Mendelson] p. 69.  The hypothesis ` ( ph -> A. x ph ) ` can be thought
       of as emulating " ` x ` is not free in ` ph ` ."  With this convention,
       the meaning of "not free" is less restrictive than the usual textbook
       definition; for example ` x ` would not (for us) be free in ` x = x ` by
       ~ hbequid .  This theorem scheme can be proved as a metatheorem of
       Mendelson's axiom system, even though it is slightly stronger than his
       Axiom 5. $)
    stdpc5 $p |- ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) $=
      ( wi wal 19.21 biimpi ) ABECFABCFEABCDGH $.
      $( [22-Sep-1993] $)
  $}

  ${
    19.21bi.1 $e |- ( ph -> A. x ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    19.21bi $p |- ( ph -> ps ) $=
      ( wal ax-4 syl ) ABCEBDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21bbi.1 $e |- ( ph -> A. x A. y ps ) $.
    $( Inference removing double quantifier. $)
    19.21bbi $p |- ( ph -> ps ) $=
      ( wal 19.21bi ) ABDABDFCEGG $.
      $( [20-Apr-1994] $)
  $}

  ${
    19.23.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.23 of [Margaris] p. 90. $)
    19.23 $p |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) $=
      ( wi wal wex exim 19.9 syl6ib hbe1 hbim 19.8a imim1i alrimi impbii ) ABEZ
      CFZACGZBEZRSBCGBABCHBCDIJTQCSBCACKDLASBACMNOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    exlimi.1 $e |- ( ps -> A. x ps ) $.
    exlimi.2 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    exlimi $p |- ( E. x ph -> ps ) $=
      ( wi wex 19.23 mpgbi ) ABFACGBFCABCDHEI $.
      $( [16-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    19.23bi.1 $e |- ( E. x ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90. $)
    19.23bi $p |- ( ph -> ps ) $=
      ( wex 19.8a syl ) AACEBACFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    exlimd.1 $e |- ( ph -> A. x ph ) $.
    exlimd.2 $e |- ( ch -> A. x ch ) $.
    exlimd.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    exlimd $p |- ( ph -> ( E. x ps -> ch ) ) $=
      ( wi wal wex alrimi 19.23 sylib ) ABCHZDIBDJCHANDEGKBCDFLM $.
      $( [28-Jan-1997] $)
  $}

  ${
    19.27.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.27 of [Margaris] p. 90. $)
    19.27 $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) $=
      ( wa wal 19.26 19.3 anbi2i bitri ) ABECFACFZBCFZEKBEABCGLBKBCDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.28.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.28 of [Margaris] p. 90. $)
    19.28 $p |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) $=
      ( wa wal 19.26 19.3 anbi1i bitri ) ABECFACFZBCFZEALEABCGKALACDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.36.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.36 of [Margaris] p. 90. $)
    19.36 $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) $=
      ( wi wex wal 19.35 19.9 imbi2i bitri ) ABECFACGZBCFZELBEABCHMBLBCDIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.36i.1 $e |- ( ps -> A. x ps ) $.
    19.36i.2 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.36 of [Margaris] p. 90. $)
    19.36i $p |- ( A. x ph -> ps ) $=
      ( wi wex wal 19.36 mpbi ) ABFCGACHBFEABCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.37.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.37 of [Margaris] p. 90. $)
    19.37 $p |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) $=
      ( wi wex wal 19.35 19.3 imbi1i bitri ) ABECFACGZBCFZEAMEABCHLAMACDIJK $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.38 of [Margaris] p. 90. $)
  19.38 $p |- ( ( E. x ph -> A. x ps ) -> A. x ( ph -> ps ) ) $=
    ( wex wal wi hbe1 hba1 hbim 19.8a ax-4 imim12i alrimi ) ACDZBCEZFABFCNOCACG
    BCHIANOBACJBCKLM $.
    $( [5-Aug-1993] $)

  $( Theorem 19.39 of [Margaris] p. 90. $)
  19.39 $p |- ( ( E. x ph -> E. x ps ) -> E. x ( ph -> ps ) ) $=
    ( wex wi wal 19.2 imim1i 19.35 sylibr ) ACDZBCDZEACFZLEABECDMKLACCGHABCIJ
    $.
    $( [5-Aug-1993] $)

  $( Theorem 19.24 of [Margaris] p. 90. $)
  19.24 $p |- ( ( A. x ph -> A. x ps ) -> E. x ( ph -> ps ) ) $=
    ( wal wi wex 19.2 imim2i 19.35 sylibr ) ACDZBCDZEKBCFZEABECFLMKBCCGHABCIJ
    $.
    $( [5-Aug-1993] $)

  ${
    19.32.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.32 of [Margaris] p. 90. $)
    19.32 $p |- ( A. x ( ph \/ ps ) <-> ( ph \/ A. x ps ) ) $=
      ( wn wi wal wo hbn 19.21 df-or albii 3bitr4i ) AEZBFZCGNBCGZFABHZCGAPHNBC
      ACDIJQOCABKLAPKM $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.31.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.31 of [Margaris] p. 90. $)
    19.31 $p |- ( A. x ( ph \/ ps ) <-> ( A. x ph \/ ps ) ) $=
      ( wo wal 19.32 orcom albii 3bitr4i ) BAEZCFBACFZEABEZCFLBEBACDGMKCABHILBH
      J $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.44.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.44 of [Margaris] p. 90. $)
    19.44 $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ ps ) ) $=
      ( wo wex 19.43 19.9 orbi2i bitri ) ABECFACFZBCFZEKBEABCGLBKBCDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.45.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.45 of [Margaris] p. 90. $)
    19.45 $p |- ( E. x ( ph \/ ps ) <-> ( ph \/ E. x ps ) ) $=
      ( wo wex 19.43 19.9 orbi1i bitri ) ABECFACFZBCFZEALEABCGKALACDHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.34 of [Margaris] p. 90. $)
  19.34 $p |- ( ( A. x ph \/ E. x ps ) -> E. x ( ph \/ ps ) ) $=
    ( wal wex wo 19.2 orim1i 19.43 sylibr ) ACDZBCEZFACEZLFABFCEKMLACCGHABCIJ
    $.
    $( [5-Aug-1993] $)

  ${
    19.41.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.41 of [Margaris] p. 90.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    19.41 $p |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) $=
      ( wa wex 19.40 id exlimi anim2i syl pm3.21 eximd impcom impbii ) ABEZCFZA
      CFZBEZQRBCFZESABCGTBRBBCDBHIJKBRQBAPCDBALMNO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    19.42.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.42 of [Margaris] p. 90. $)
    19.42 $p |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) $=
      ( wa wex 19.41 exancom ancom 3bitr4i ) BAECFBCFZAEABECFAKEBACDGABCHAKIJ
      $.
      $( [18-Aug-1993] $)
  $}

  $( Swap 1st and 3rd existential quantifiers. $)
  excom13 $p |- ( E. x E. y E. z ph <-> E. z E. y E. x ph ) $=
    ( wex excom exbii 3bitri ) ADEZCEBEIBEZCEABEZDEZCEKCEDEIBCFJLCABDFGKCDFH $.
    $( [9-Mar-1995] $)

  $( Rotate existential quantifiers. $)
  exrot3 $p |- ( E. x E. y E. z ph <-> E. y E. z E. x ph ) $=
    ( wex excom13 excom bitri ) ADECEBEABEZCEDEIDECEABCDFIDCGH $.
    $( [17-Mar-1995] $)

  $( Rotate existential quantifiers twice. $)
  exrot4 $p |- ( E. x E. y E. z E. w ph <-> E. z E. w E. x E. y ph ) $=
    ( wex excom13 exbii bitri ) AEFDFCFZBFACFZDFEFZBFKBFEFDFJLBACDEGHKBEDGI $.
    $( [9-Mar-1995] $)

  ${
    nexr.1 $e |- -. E. x ph $.
    $( Inference from ~ 19.8a .  (Contributed by Jeff Hankins, 26-Jul-2009.) $)
    nexr $p |- -. ph $=
      ( wex 19.8a mto ) AABDCABEF $.
      $( [26-Jul-2009] $)
  $}

  ${
    hbim1.1 $e |- ( ph -> A. x ph ) $.
    hbim1.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( A closed form of ~ hbim . $)
    hbim1 $p |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) $=
      ( wi wal a2i 19.21 sylibr ) ABFZABCGZFKCGABLEHABCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    exan.1 $e |- ( E. x ph /\ ps ) $.
    $( Place a conjunct in the scope of an existential quantifier.  (The proof
       was shortened by Andrew Salmon, 25-May-2011.) $)
    exan $p |- E. x ( ph /\ ps ) $=
      ( wex wal wa hbe1 19.28 mpgbi 19.29r ax-mp ) ACEZBCFGZABGCEMBGNCMBCACHIDJ
      ABCKL $.
      $( [25-May-2011] $) $( [18-Aug-1993] $)
  $}

  ${
    hbnd.1 $e |- ( ph -> A. x ph ) $.
    hbnd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbn . $)
    hbnd $p |- ( ph -> ( -. ps -> A. x -. ps ) ) $=
      ( wal wi wn alrimi hbnt syl ) ABBCFGZCFBHZMCFGALCDEIBCJK $.
      $( [3-Jan-2002] $)
  $}

  ${
    hbimd.1 $e |- ( ph -> A. x ph ) $.
    hbimd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbimd.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbim . $)
    hbimd $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn hbnd pm2.21 alimi syl6com ax-1 ja com12 ) BCHZARDIZBCASHABJZT
      DISABDEFKTRDBCLMNACCDISGCRDCBOMNPQ $.
      $( [1-Jan-2002] $)
  $}

  ${
    hbbid.1 $e |- ( ph -> A. x ph ) $.
    hbbid.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbbid.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbbi . $)
    hbbid $p |- ( ph -> ( ( ps <-> ch ) -> A. x ( ps <-> ch ) ) ) $=
      ( wi wa wal wb hbimd anim12d dfbi2 albiim 3imtr4g ) ABCHZCBHZIQDJZRDJZIBC
      KZUADJAQSRTABCDEFGLACBDEGFLMBCNBCDOP $.
      $( [1-Jan-2002] $)
  $}

  ${
    hbexd.1 $e |- ( ph -> A. y ph ) $.
    hbexd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbex . $)
    hbexd $p |- ( ph -> ( E. y ps -> A. x E. y ps ) ) $=
      ( wex wal eximd 19.12 syl6 ) ABDGZBCHZDGLCHABMDEFIBDCJK $.
      $( [2-Jan-2002] $)
  $}

  $( Closed form of Theorem 19.21 of [Margaris] p. 90. $)
  19.21t $p |- ( A. x ( ph -> A. x ph ) ->
               ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ) $=
    ( wal wi alim imim2d com12 a4s hba1 ax-4 a1i hbimd imim2i alimi syl6 impbid
    ) AACDZEZCDZABEZCDZABCDZEZSUBUDECUBSUDUBRUCAABCFGHITUDUDCDUBTAUCCSCJSCKUCUC
    CDETBCJLMUDUACUCBABCKNOPQ $.
    $( [27-May-1997] $)

  $( Closed form of Theorem 19.23 of [Margaris] p. 90. $)
  19.23t $p |- ( A. x ( ps -> A. x ps ) ->
               ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ) $=
    ( wal wi wex hba1 ax-4 impbid2 imbi2d albid 19.23 syl5bb bitr3d ) BBCDZEZCD
    ZAOEZCDZABEZCDACFZBEZQRTCPCGQOBAQOBBCHPCHIZJKSUAOEQUBAOCBCGLQOBUAUCJMN $.
    $( [7-Nov-2005] $)

  ${
    aaan.1 $e |- ( ph -> A. y ph ) $.
    aaan.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange universal quantifiers. $)
    aaan $p |- ( A. x A. y ( ph /\ ps ) <-> ( A. x ph /\ A. y ps ) ) $=
      ( wa wal 19.28 albii hbal 19.27 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [12-Aug-1993] $)
  $}

  ${
    eeor.1 $e |- ( ph -> A. y ph ) $.
    eeor.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers. $)
    eeor $p |- ( E. x E. y ( ph \/ ps ) <-> ( E. x ph \/ E. y ps ) ) $=
      ( wo wex 19.45 exbii hbex 19.44 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [8-Aug-1994] $)
  $}

  $( Quantified "excluded middle."  Exercise 9.2a of Boolos, p. 111,
     _Computability and Logic_. $)
  qexmid $p |- E. x ( ph -> A. x ph ) $=
    ( wal 19.8a 19.35ri ) AABCZBFBDE $.
    $( [10-Dec-2000] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Equality theorems without distinct variables
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that the original axiom ~ ax-9o can be derived from ~ ax-9 and
     others.  See ~ ax9 for the rederivation of ~ ax-9 from ~ ax-9o .

     Normally, ~ ax9o should be used rather than ~ ax-9o , except by theorems
     specifically studying the latter's properties. $)
  ax9o $p |- ( A. x ( x = y -> A. x ph ) -> ph ) $=
    ( weq wal wi wn ax-9 con3 al2imi mtoi ax-4 ax-6 nsyl4 syl ) BCDZABEZFZBEZQG
    ZBEZGASUAPGZBEBCHRTUBBPQIJKQAUAABLABMNO $.
    $( [5-Aug-1993] $)

  $( A variant of ~ ax-9 .  Axiom scheme C10' in [Megill] p. 448 (p. 16 of the
     preprint).

     This axiom is redundant, as shown by theorem ~ ax9o .

     Normally, ~ ax9o should be used rather than ~ ax-9o , except by theorems
     specifically studying the latter's properties. $)
  ax-9o $a |- ( A. x ( x = y -> A. x ph ) -> ph ) $.

  $( Rederivation of axiom ~ ax-9 from the orginal version, ~ ax-9o .  See
     ~ ax9o for the derivation of ~ ax-9o from ~ ax-9 .  Lemma L18 in [Megill]
     p. 446 (p. 14 of the preprint).

     This theorem should not be referenced in any proof.  Instead, use ~ ax-9
     above so that uses of ~ ax-9 can be more easily identified. $)
  ax9 $p |- -. A. x -. x = y $=
    ( weq wn wal wi ax-9o modal-b mpg ) ABCZJDAEDZAEFKAKABGJAHI $.
    $( [5-Aug-1993] $)

  $( At least one individual exists.  This is not a theorem of free logic,
     which is sound in empty domains.  For such a logic, we would add this
     theorem as an axiom of set theory (Axiom 0 of [Kunen] p. 10).  In the
     system consisting of ~ ax-5 through ~ ax-14 and ~ ax-17 , all axioms other
     than ~ ax-9 are believed to be theorems of free logic, although the system
     without ~ ax-9 is probably not complete in free logic. $)
  a9e $p |- E. x x = y $=
    ( weq wex wn wal ax-9 df-ex mpbir ) ABCZADJEAFEABGJAHI $.
    $( [5-Aug-1993] $)

  $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.  This
     is often an axiom of equality in textbook systems, but we don't need it as
     an axiom since it can be proved from our other axioms (although the proof,
     as you can see below, is not as obvious as you might think).  This proof
     uses only axioms without distinct variable conditions and thus requires no
     dummy variables.  A simpler proof, similar to Tarki's, is possible if we
     make use of ~ ax-17 ; see the proof of ~ equid1 .  See ~ equidALT for an
     alternate proof. $)
  equid $p |- x = x $=
    ( weq wal wn ax-9 hbn1 wi ax-12 pm2.43i con3d alrimi mt3 a4i ) AABZANACZNDZ
    ACAAEODZPANAFQPQNOQNOGAAAHIJIKLM $.
    $( [30-Nov-2008] $)

  $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.
     Alternate proof of ~ equid from older axioms ~ ax-6o and ~ ax-9o . $)
  equidALT $p |- x = x $=
    ( weq wal wn wi ax-12 pm2.43i alimi ax-9o syl ax-6o pm2.61i ) AABZACZDZACZM
    PMNEZACMOQAOQAAAFGHMAAIJMAKL $.
    $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.
       This proof is similar to Tarski's and makes use of a dummy variable
       ` y ` .  See ~ equid for a proof that avoids dummy variables (but is
       less intuitive). $)
    equid1 $p |- x = x $=
      ( vy weq wex a9e ax-17 ax-8 pm2.43i exlimi ax-mp ) BACZBDAACZBAEKLBLBFKLB
      AAGHIJ $.
      $( [1-Apr-2005] $)
  $}

  $( One of the two equality axioms of standard predicate calculus, called
     reflexivity of equality.  (The other one is ~ stdpc7 .)  Axiom 6 of
     [Mendelson] p. 95.  Mendelson doesn't say why he prepended the redundant
     quantifier, but it was probably to be compatible with free logic (which is
     valid in the empty domain). $)
  stdpc6 $p |- A. x x = x $=
    ( weq equid ax-gen ) AABAACD $.
    $( [16-Feb-2005] $)

  $( Commutative law for equality.  Lemma 7 of [Tarski] p. 69. $)
  equcomi $p |- ( x = y -> y = x ) $=
    ( weq equid1 ax-8 mpi ) ABCAACBACADABAEF $.
    $( [5-Aug-1993] $)

  $( Commutative law for equality. $)
  equcom $p |- ( x = y <-> y = x ) $=
    ( weq equcomi impbii ) ABCBACABDBADE $.
    $( [20-Aug-1993] $)

  ${
    equcoms.1 $e |- ( x = y -> ph ) $.
    $( An inference commuting equality in antecedent.  Used to eliminate the
       need for a syllogism. $)
    equcoms $p |- ( y = x -> ph ) $=
      ( weq equcomi syl ) CBEBCEACBFDG $.
      $( [5-Aug-1993] $)
  $}

  $( A transitive law for equality. $)
  equtr $p |- ( x = y -> ( y = z -> x = z ) ) $=
    ( weq wi ax-8 equcoms ) BCDACDEBABACFG $.
    $( [23-Aug-1993] $)

  $( A transitive law for equality.  Lemma L17 in [Megill] p. 446 (p. 14 of the
     preprint). $)
  equtrr $p |- ( x = y -> ( z = x -> z = y ) ) $=
    ( weq equtr com12 ) CADABDCBDCABEF $.
    $( [23-Aug-1993] $)

  $( A transitive law for equality.  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equtr2 $p |- ( ( x = z /\ y = z ) -> x = y ) $=
    ( weq wi equtrr equcoms impcom ) BCDACDZABDZIJECBCBAFGH $.
    $( [25-May-2011] $) $( [12-Aug-1993] $)

  $( An equivalence law for equality. $)
  equequ1 $p |- ( x = y -> ( x = z <-> y = z ) ) $=
    ( weq ax-8 equtr impbid ) ABDACDBCDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( An equivalence law for equality. $)
  equequ2 $p |- ( x = y -> ( z = x <-> z = y ) ) $=
    ( weq equtrr wi equcoms impbid ) ABDCADZCBDZABCEJIFBABACEGH $.
    $( [5-Aug-1993] $)

  $( An identity law for the non-logical predicate. $)
  elequ1 $p |- ( x = y -> ( x e. z <-> y e. z ) ) $=
    ( weq wel ax-13 wi equcoms impbid ) ABDACEZBCEZABCFKJGBABACFHI $.
    $( [5-Aug-1993] $)

  $( An identity law for the non-logical predicate. $)
  elequ2 $p |- ( x = y -> ( z e. x <-> z e. y ) ) $=
    ( weq wel ax-14 wi equcoms impbid ) ABDCAEZCBEZABCFKJGBABACFHI $.
    $( [5-Aug-1993] $)

  ${
    ax11i.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    ax11i.2 $e |- ( ps -> A. x ps ) $.
    $( Inference that has ~ ax-11 (without ` A. y ` ) as its conclusion and
       doesn't require ~ ax-10 , ~ ax-11 , or ~ ax-12 for its proof.  The
       hypotheses may be eliminable without one or more of these axioms in
       special cases.  Proof similar to Lemma 16 of [Tarski] p. 70. $)
    ax11i $p |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) $=
      ( weq wi wal biimprcd alrimi syl6bi ) CDGZABMAHZCIEBNCFMABEJKL $.
      $( [20-May-2008] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Axioms ax-10 and ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that ~ ax-10o can be derived from ~ ax-10 .  An open problem is
     whether this theorem can be derived from ~ ax-10 and the others when
     ~ ax-11 is replaced with ~ ax-11o .  See theorem ~ ax10 for the
     rederivation of ~ ax-10 from ~ ax10o .

     Normally, ~ ax10o should be used rather than ~ ax-10o , except by theorems
     specifically studying the latter's properties. $)
  ax10o $p |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $=
    ( weq wal wi ax-10 ax-11 equcoms a4s pm2.27 al2imi sylsyld ) BCDZBECBDZCEAB
    EZOAFZCEZACEBCGNPRFZBSCBACBHIJOQACOAKLM $.
    $( [16-May-2008] $)

  $( Axiom ~ ax-10o ("o" for "old") was the original version of ~ ax-10 ,
     before it was discovered (in May 2008) that the shorter ~ ax-10 could
     replace it.  It appears as Axiom scheme C11' in [Megill] p. 448 (p. 16 of
     the preprint).

     This axiom is redundant, as shown by theorem ~ ax10o .

     Normally, ~ ax10o should be used rather than ~ ax-10o , except by theorems
     specifically studying the latter's properties. $)
  ax-10o $a |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $.

  $( Rederivation of ~ ax-10 from original version ~ ax-10o .  See theorem
     ~ ax10o for the derivation of ~ ax-10o from ~ ax-10 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-10
     above so that uses of ~ ax-10 can be more easily identified. $)
  ax10 $p |- ( A. x x = y -> A. y y = x ) $=
    ( weq wal ax-10o pm2.43i equcomi alimi syl ) ABCZADZJBDZBACZBDKLJABEFJMBABG
    HI $.
    $( [16-May-2008] $)

  $( All variables are effectively bound in an identical variable specifier. $)
  hbae $p |- ( A. x x = y -> A. z A. x x = y ) $=
    ( weq wal wi ax-4 ax-12 syl7 ax10o alequcoms pm2.43i syl5 pm2.61ii a5i ax-7
    wn syl ) ABDZAEZSCEZAETCESUAACADCEZCBDCEZTUAFZTSUBQUCQUASAGABCHIUDACSACJKUD
    BCTSBEZBCDBEUATUESABJLSBCJMKNOSACPR $.
    $( [5-Aug-1993] $)

  ${
    hbalequs.1 $e |- ( A. z A. x x = y -> ph ) $.
    $( Rule that applies ~ hbae to antecedent. $)
    hbaes $p |- ( A. x x = y -> ph ) $=
      ( weq wal hbae syl ) BCFBGZJDGABCDHEI $.
      $( [5-Aug-1993] $)
  $}

  $( All variables are effectively bound in a distinct variable specifier.
     Lemma L19 in [Megill] p. 446 (p. 14 of the preprint). $)
  hbnae $p |- ( -. A. x x = y -> A. z -. A. x x = y ) $=
    ( weq wal hbae hbn ) ABDAECABCFG $.
    $( [5-Aug-1993] $)

  ${
    hbnalequs.1 $e |- ( A. z -. A. x x = y -> ph ) $.
    $( Rule that applies ~ hbnae to antecedent. $)
    hbnaes $p |- ( -. A. x x = y -> ph ) $=
      ( weq wal wn hbnae syl ) BCFBGHZKDGABCDIEJ $.
      $( [5-Aug-1993] $)
  $}

  $( Lemma used in proofs of substitution properties.  (The proof was shortened
     by Mario Carneiro, 20-May-2014.) $)
  equs4 $p |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) $=
    ( cv wceq wi wal wa wex a9e 19.29 mpan2 ancl imp eximi syl ) BDCDEZAFZBGZRQ
    HZBIZQAHZBISQBIUABCJRQBKLTUBBRQUBQAMNOP $.
    $( [20-May-2014] $) $( [5-Aug-1993] $)

  ${
    equsal.1 $e |- ( ps -> A. x ps ) $.
    equsal.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution.  (The proof was shortened
       by Andrew Salmon, 12-Aug-2011.) $)
    equsal $p |- ( A. x ( x = y -> ph ) <-> ps ) $=
      ( weq wi wal 19.3 syl6bbr pm5.74i albii a1d alrimi ax9o impbii bitr4i ) C
      DGZAHZCISBCIZHZCIZBTUBCSAUASABUAFBCEJKLMBUCBUBCEBUASENOBCDPQR $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    equsex.1 $e |- ( ps -> A. x ps ) $.
    equsex.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution. $)
    equsex $p |- ( E. x ( x = y /\ ph ) <-> ps ) $=
      ( weq wn wi wex wal exnal df-an exbii hbn notbid equsal con2bii 3bitr4i
      wa ) CDGZAHZIZHZCJUCCKZHUAATZCJBUCCLUFUDCUAAMNUEBUBBHCDBCEOUAABFPQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    dvelimfALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimfALT.2 $e |- ( ps -> A. z ps ) $.
    dvelimfALT.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Proof of ~ dvelimf that uses ~ ax-10o (in the form of ~ ax10o ) but not
       ~ ax-11o , ~ ax-10 , or ~ ax-11 (if we replace uses of ~ ax10o by
       ~ ax-10o in the proofs of referenced theorems).  See ~ dvelimALT for a
       proof (of the distinct variable version ~ dvelim ) that doesn't require
       ~ ax-10 .  It is not clear whether a proof is possible that uses ~ ax-10
       but avoids ~ ax-11 , ~ ax-11o , and ~ ax-10o . $)
    dvelimfALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi hba1 ax10o alequcoms syl5 a1d wa hbnae hban ax-12 imp a1i
      hbimd hbald ex pm2.61i equsal albii 3imtr3g ) CDICJKZEDIZALZEJZUNCJZBBCJC
      EICJZUKUNUOLZLUPUQUKUNUNEJZUPUOUMEMURUOLECUNECNOPQUPKZUKUQUSUKRZUMCEUSUKE
      CEESCDESTUTULACUSUKCCECSCDCSTUSUKULULCJLEDCUAUBAACJLUTFUCUDUEUFUGABEDGHUH
      ZUNBCVAUIUJ $.
      $( [12-Nov-2002] $)
  $}

  ${
    dral1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral1 $p |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) $=
      ( weq wal hbae biimpd alimd ax10o syld biimprd wi alequcoms impbid ) CDFC
      GZACGZBDGZQRBCGSQABCCDCHQABEIJBCDKLQSADGZRQBADCDDHQABEMJTRNDCADCKOLP $.
      $( [24-Nov-1994] $)
  $}

  ${
    dral2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral2 $p |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) $=
      ( weq wal hbae albid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex1 $p |- ( A. x x = y -> ( E. x ph <-> E. y ps ) ) $=
      ( weq wal wn wex notbid dral1 df-ex 3bitr4g ) CDFCGZAHZCGZHBHZDGZHACIBDIN
      PROQCDNABEJKJACLBDLM $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex2 $p |- ( A. x x = y -> ( E. z ph <-> E. z ps ) ) $=
      ( weq wal hbae exbid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    exdistrf.1 $e |- ( -. A. x x = y -> ( ph -> A. y ph ) ) $.
    $( Distribution of existential quantifiers, with a bound-variable
       hypothesis saying that ` y ` is not free in ` ph ` , but ` x ` can be
       free in ` ph ` (and there is no distinct variable condition on ` x ` and
       ` y ` ).  (Contributed by Mario Carneiro, 20-Mar-2013.) $)
    exdistrf $p |- ( E. x E. y ( ph /\ ps ) -> E. x ( ph /\ E. y ps ) ) $=
      ( weq wal wa wex wi biidd drex1 drex2 hbe1 19.8a anim2i eximi sylbi hbnae
      19.9 syl6bir wn 19.40 19.9d anim1d syl5 eximd pm2.61i ) CDFCGZABHZDIZCIZA
      BDIZHZCIZJUIULUJCIZCIZUOUPUKCDCUJUJCDUIUJKLMUQUPUOUPCUJCNTUJUNCBUMABDOPQR
      UAUIUBZUKUNCCDCSUKADIZUMHURUNABDUCURUSAUMAURDCDDSEUDUEUFUGUH $.
      $( [20-Mar-2013] $)
  $}

  $( Closed theorem form of ~ a4im . $)
  a4imt $p |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) ->
              ( A. x ph -> ps ) ) $=
    ( wal wi weq wa imim2 imim2d imp com23 al2imi ax9o syl6 ) BBCEZFZCDGZABFZFZ
    HZCEACERPFZCEBUAAUBCUARAPQTRAPFZFQSUCRBPAIJKLMBCDNO $.
    $( [15-Jan-2008] $)

  ${
    a4im.1 $e |- ( ps -> A. x ps ) $.
    a4im.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Specialization, using implicit substitition.  Compare Lemma 14 of
       [Tarski] p. 70.  The ~ a4im series of theorems requires that only one
       direction of the substitution hypothesis hold. $)
    a4im $p |- ( A. x ph -> ps ) $=
      ( wal weq wi syl6com alimi ax9o syl ) ACGCDHZBCGZIZCGBAPCNABOFEJKBCDLM $.
      $( [8-May-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    a4ime.1 $e |- ( ph -> A. x ph ) $.
    a4ime.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Existential introduction, using implicit substitition.  Compare Lemma 14
       of [Tarski] p. 70. $)
    a4ime $p |- ( ph -> E. x ps ) $=
      ( wn wal wex hbn weq con3d a4im con2i df-ex sylibr ) ABGZCHZGBCIRAQAGCDAC
      EJCDKABFLMNBCOP $.
      $( [7-Aug-1994] $)
  $}

  ${
    a4imed.1 $e |- ( ch -> A. x ch ) $.
    a4imed.2 $e |- ( ch -> ( ph -> A. x ph ) ) $.
    a4imed.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Deduction version of ~ a4ime . $)
    a4imed $p |- ( ch -> ( ph -> E. x ps ) ) $=
      ( wex wa wal adantr imp 19.26 sylanbrc weq adantld a4ime ex ) CABDICAJZBD
      ETCDKZADKZTDKCUAAFLCAUBGMCADNODEPABCHQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv1.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv1.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv1.3 $e |- ( ph -> ( x = y -> ( ps -> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv1 $p |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) $=
      ( wal wi a4s al2imi ax-7 syl6 weq com23 syl6d ax9o a7s syld ) AEIZDIZBDIZ
      UCEIZCEIZUBUCBEIZDIUDUABUFDABUFJEFKLBDEMNAUDUEJEDADIZUCCEUGUCDEOZCDIZJZDI
      CABUJDABUHCUIAUHBCHPGQLCDERNLST $.
      $( [5-Aug-1993] $)
  $}


  ${
    cbv2.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv2.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv2.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv2 $p |- ( A. x A. y ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal weq wb wi bi1 syl6 cbv1 equcomi bi2 syl56 a7s impbid ) AEIDIBDIZCEI
      ZABCDEFGADEJZBCKZBCLHBCMNOAUBUALEDACBEDGFEDJUCAUDCBLEDPHBCQROST $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv3.1 $e |- ( ph -> A. y ph ) $.
    cbv3.2 $e |- ( ps -> A. x ps ) $.
    cbv3.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition, that
       does not use ~ ax-12 . $)
    cbv3 $p |- ( A. x ph -> A. y ps ) $=
      ( wi wal imim2i a1i weq cbv1 id ax-gen mpg ) AAHZDIACIBDIHCQABCDAADIAEJBB
      CIHQFKCDLABHHQGKMQDANOP $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbv3ALT $p |- ( A. x ph -> A. y ps ) $=
      ( weq wal wi a1i cbv1 stdpc6 mpg ) DDHZDIACIBDIJCOABCDAADIJOEKBBCIJOFKCDH
      ABJJOGKLDMN $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbval.1 $e |- ( ph -> A. y ph ) $.
    cbval.2 $e |- ( ps -> A. x ps ) $.
    cbval.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbval $p |- ( A. x ph <-> A. y ps ) $=
      ( wal weq biimpd cbv3 wb equcoms biimprd impbii ) ACHBDHABCDEFCDIABGJKBAD
      CFEDCIABABLCDGMNKO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbvex.1 $e |- ( ph -> A. y ph ) $.
    cbvex.2 $e |- ( ps -> A. x ps ) $.
    cbvex.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex $p |- ( E. x ph <-> E. y ps ) $=
      ( wex wn wal df-ex hbn weq notbid cbval xchbinx bitr4i ) ACHZBIZDJZIBDHRA
      IZCJTACKUASCDADELBCFLCDMABGNOPBDKQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    chv2.1 $e |- ( ps -> A. x ps ) $.
    chv2.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv2.3 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem.  (Contributed
       by Raph Levien, 9-Jul-2003.) $)
    chvar $p |- ps $=
      ( weq biimpd a4im mpg ) ABCABCDECDHABFIJGK $.
      $( [9-Jul-2003] $)
  $}

  $( A variable introduction law for equality.  Lemma 15 of [Monk2] p. 109,
     however we do not require ` z ` to be distinct from ` x ` and ` y `
     (making the proof longer).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equvini $p |- ( x = y -> E. z ( x = z /\ z = y ) ) $=
    ( weq wal wa wex wi equcomi alimi a9e jctir 19.29 syl6 eximi ax-mp a1i12 wn
    a1d hbnae anc2ri 19.29r wo ioran hban ax-12 imp anc2li equcoms a4imed sylbi
    ax-8 ecase3 ) CADZCEZCBDZCEZABDZACDZUPFZCGZHZUOURUSCEZUPCGZFZVAUOVEURUOVCVD
    UNUSCCAIZJCBKLSUSUPCMNUQURUSCGZUQFVAUQURVGUQURVGUNCGVGCAKUNUSCVFOPQUAUSUPCU
    BNUOUQUCRUORZUQRZFZVBUOUQUDURUTVJCAVHVICCACTCBCTUEVHVIURURCEHABCUFUGURUTHAC
    USURUPACBULUHUIUJUKUM $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( A variable elimination law for equality with no distinct variable
     requirements.  (Compare ~ equvini .) $)
  equveli $p |- ( A. z ( z = x <-> z = y ) -> x = y ) $=
    ( weq wb wal wi wa albiim equequ1 imbi12d a4s dral1 equid ax-4 syl6bi hbnae
    mpi wn pm2.61i equcomi syl adantld dral2 a1bi biimpri a1d hbequid a1i ax-12
    hban hbimd alrimi equtr ax-8 imim12d ax-gen 19.26 a4imt sylbir sylancl mpii
    imp ex adantrd sylbi ) CADZCBDZECFVGVHGZCFZVHVGGZCFZHZABDZVGVHCIVHCFZVMVNGV
    OVLVNVJVOVLBBDZBADZGZBFZVNVKVRCBVHVKVRECVHVHVPVGVQCBBJCBAJKLMVSVQVNVSVPVQBN
    VRBORBAUAUBPUCVOSZVJVNVLVGCFZVTVJVNGZGWAWBVTWAVJAADZVNGZCFZVNVIWDCACVGVIWDE
    CVGVGWCVHVNCAAJCABJKLUDWDVNCVNWDWCVNANZUEUFLPUGWASZVTWBWGVTHZVJWCVNWFWHWDWE
    GZCFZVGVIWDGGZCFZVJWDGZWHWICWGVTCCACQCBCQUKZWHWCVNCWNWCWCCFGWHACUHUIWGVTVNV
    NCFGABCUJVCULUMWKCVGWCVGVHVNCAAUNCABUOUPUQWJWLHWIWKHCFWMWIWKCURVIWDCAUSUTVA
    VBVDTVETVF $.
    $( [1-Mar-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Substitution (without distinct variables)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [ $. $( Left bracket $)
  $c / $. $( Division. $)
  $c ] $.  $( Right bracket $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    wsbc.cA $f class A $.
    $( Extend wff notation to include the proper substitution of a class for a
       set.  Read this notation as "the proper substitution of class ` A ` for
       set variable ` x ` in wff ` ph ` ."

       (The purpose of introducing ` wff [ A / x ] ph ` here is to allow us to
       express i.e.  "prove" the ~ wsb of predicate calculus in terms of the
       ~ wsbc of set theory, so that we don't "overload" its connectives with
       two syntax definitions.  This is done to prevent ambiguity that would
       complicate some Metamath parsers.  The class variable ` A ` is
       introduced temporarily for the purpose of this definition but otherwise
       not used in predicate calculus.  See ~ df-sbc for more information on
       the set theory usage of ~ wsbc .) $)
    wsbc $a wff [ A / x ] ph $.
  $}

  $( Extend wff definition to include proper substitution (read "the wff that
     results when ` y ` is properly substituted for ` x ` in wff ` ph ` ").

     (Instead of introducing ~ wsb as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wsbc .  This lets us avoid overloading
     its connectives, thus preventing ambiguity that would complicate some
     Metamath parsers.  Note:  To see the proof steps of this syntax proof,
     type "show proof wsb /all" in the Metamath program.) $)
  wsb $p wff [ y / x ] ph $=
    ( cv wsbc ) ABCDE $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include proper substitution (read "the wff that
     results when ` y ` is properly substituted for ` x ` in wff ` ph ` ").

     After we introduce ~ cv and ~ wsbc in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "wph vx vy cv wsbc". @)
  wsb @a wff [ y / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define proper substitution.  Remark 9.1 in [Megill] p. 447 (p. 15 of the
     preprint).  For our notation, we use ` [ y / x ] ph ` to mean "the wff
     that results when ` y ` is properly substituted for ` x ` in the wff
     ` ph ` ."  We can also use ` [ y / x ] ph ` in place of the "free for"
     side condition used in traditional predicate calculus; see, for example,
     ~ stdpc4 .

     Our notation was introduced in Haskell B. Curry's _Foundations of
     Mathematical Logic_ (1977), p. 316 and is frequently used in textbooks of
     lambda calculus and combinatory logic.  This notation improves the common
     but ambiguous notation, " ` ph ( y ) ` is the wff that results when ` y `
     is properly substituted for ` x ` in ` ph ( x ) ` ."  For example, if the
     original ` ph ( x ) ` is ` x = y ` , then ` ph ( y ) ` is ` y = y ` , from
     which we obtain that ` ph ( x ) ` is ` x = x ` .  So what exactly does
     ` ph ( x ) ` mean?  Curry's notation solves this problem.

     In most books, proper substitution has a somewhat complicated recursive
     definition with multiple cases based on the occurrences of free and bound
     variables in the wff.  Instead, we use a single formula that is exactly
     equivalent and gives us a direct definition.  We later prove that our
     definition has the properties we expect of proper substitution (see
     theorems ~ sbequ , ~ sbcom2 and ~ sbid2v ).

     Note that our definition is valid even when ` x ` and ` y ` are replaced
     with the same variable, as ~ sbid shows.  We achieve this by having ` x `
     free in the first conjunct and bound in the second.  We can also achieve
     this by using a dummy variable, as the alternate definition ~ dfsb7 shows
     (which some logicians may prefer because it doesn't mix free and bound
     variables).  Another version that mixes free and bound variables is
     ~ dfsb3 .  When ` x ` and ` y ` are distinct, we can express proper
     substitution with the simpler expressions of ~ sb5 and ~ sb6 .

     There are no restrictions on any of the variables, including what
     variables may occur in wff ` ph ` . $)
  df-sb $a |- ( [ y / x ] ph <->
              ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) $.

  ${
    sbimi.1 $e |- ( ph -> ps ) $.
    $( Infer substitution into antecedent and consequent of an implication. $)
    sbimi $p |- ( [ y / x ] ph -> [ y / x ] ps ) $=
      ( weq wi wa wex wsb imim2i anim2i eximi anim12i df-sb 3imtr4i ) CDFZAGZQA
      HZCIZHQBGZQBHZCIZHACDJBCDJRUATUCABQEKSUBCABQELMNACDOBCDOP $.
      $( [25-Jun-1998] $)
  $}

  ${
    sbbii.1 $e |- ( ph <-> ps ) $.
    $( Infer substitution into both sides of a logical equivalence. $)
    sbbii $p |- ( [ y / x ] ph <-> [ y / x ] ps ) $=
      ( wsb biimpi sbimi biimpri impbii ) ACDFBCDFABCDABEGHBACDABEIHJ $.
      $( [5-Aug-1993] $)
  $}

  $( Formula-building lemma for use with the Distinctor Reduction Theorem.
     Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
  drsb1 $p |- ( A. x x = y -> ( [ z / x ] ph <-> [ z / y ] ph ) ) $=
    ( weq wal wi wa wex wsb wb equequ1 a4s imbi1d anbi1d drex1 anbi12d 3bitr4g
    df-sb ) BCEZBFZBDEZAGZUBAHZBIZHCDEZAGZUFAHZCIZHABDJACDJUAUCUGUEUIUAUBUFATUB
    UFKBBCDLMZNUDUHBCUAUBUFAUJOPQABDSACDSR $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution. $)
  sb1 $p |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) $=
    ( wsb weq wi wa wex df-sb simprbi ) ABCDBCEZAFKAGBHABCIJ $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution. $)
  sb2 $p |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) $=
    ( weq wi wal wa wex wsb ax-4 equs4 df-sb sylanbrc ) BCDZAEZBFONAGBHABCIOBJA
    BCKABCLM $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequ1 $p |- ( x = y -> ( ph -> [ y / x ] ph ) ) $=
    ( weq wsb wa wi wex pm3.4 19.8a df-sb sylanbrc ex ) BCDZAABCEZNAFZNAGPBHONA
    IPBJABCKLM $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequ2 $p |- ( x = y -> ( [ y / x ] ph -> ph ) ) $=
    ( wsb weq wi wa wex df-sb simpl com12 syl5bi ) ABCDBCEZAFZMAGBHZGZMAABCIPMA
    NOJKL $.
    $( [5-Aug-1993] $)

  $( One of the two equality axioms of standard predicate calculus, called
     substitutivity of equality.  (The other one is ~ stdpc6 .)  Translated to
     traditional notation, it can be
     read:  " ` x = y -> ( ph ( x , x ) -> ph ( x , y ) ) ` , provided that
     ` y ` is free for ` x ` in ` ph ( x , y ) ` ."  Axiom 7 of [Mendelson]
     p. 95. $)
  stdpc7 $p |- ( x = y -> ( [ x / y ] ph -> ph ) ) $=
    ( wsb wi sbequ2 equcoms ) ACBDAECBACBFG $.
    $( [15-Feb-2005] $)

  $( An equality theorem for substitution. $)
  sbequ12 $p |- ( x = y -> ( ph <-> [ y / x ] ph ) ) $=
    ( weq wsb sbequ1 sbequ2 impbid ) BCDAABCEABCFABCGH $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution.  (The proof was shortened by Andrew
     Salmon, 21-Jun-2011.) $)
  sbequ12r $p |- ( x = y -> ( [ x / y ] ph <-> ph ) ) $=
    ( wsb wb weq sbequ12 bicomd equcoms ) ACBDZAECBCBFAJACBGHI $.
    $( [26-Jun-2011] $) $( [6-Oct-2004] $)

  $( An equality theorem for substitution. $)
  sbequ12a $p |- ( x = y -> ( [ y / x ] ph <-> [ x / y ] ph ) ) $=
    ( weq wsb sbequ12 wb equcoms bitr3d ) BCDAABCEACBEZABCFAJGCBACBFHI $.
    $( [5-Aug-1993] $)

  $( An identity theorem for substitution.  Remark 9.1 in [Megill] p. 447 (p.
     15 of the preprint). $)
  sbid $p |- ( [ x / x ] ph <-> ph ) $=
    ( wsb weq wb equid sbequ12 ax-mp bicomi ) AABBCZBBDAJEBFABBGHI $.
    $( [5-Aug-1993] $)

  $( The specialization axiom of standard predicate calculus.  It states that
     if a statement ` ph ` holds for all ` x ` , then it also holds for the
     specific case of ` y ` (properly) substituted for ` x ` .  Translated to
     traditional notation, it can be read:  " ` A. x ph ( x ) -> ph ( y ) ` ,
     provided that ` y ` is free for ` x ` in ` ph ( x ) ` ."  Axiom 4 of
     [Mendelson] p. 69.  See also ~ a4sbc and ~ ra4sbc . $)
  stdpc4 $p |- ( A. x ph -> [ y / x ] ph ) $=
    ( wal weq wi wsb ax-1 alimi sb2 syl ) ABDBCEZAFZBDABCGAMBALHIABCJK $.
    $( [5-Aug-1993] $)

  ${
    sbf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it. $)
    sbf $p |- ( [ y / x ] ph <-> ph ) $=
      ( wsb weq wex wa sb1 19.41 sylib simprd wal stdpc4 syl impbii ) ABCEZAQBC
      FZBGZAQRAHBGSAHABCIRABDJKLAABMQDABCNOP $.
      $( [17-Oct-2004] $) $( [5-Aug-1993] $)
  $}

  $( Substitution has no effect on a bound variable. $)
  sbf2 $p |- ( [ y / x ] A. x ph <-> A. x ph ) $=
    ( wal hba1 sbf ) ABDBCABEF $.
    $( [1-Jul-2005] $)

  ${
    sb6x.1 $e |- ( ph -> A. x ph ) $.
    $( Equivalence involving substitution for a variable not free.  (The proof
       was shortened by Andrew Salmon, 12-Aug-2011.) $)
    sb6x $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( cv wsbc wceq wi wal sbf biidd equsal bitr4i ) ABCEZFABENGZAHBIABCDJAABC
      DOAKLM $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    hbs1f.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` .
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    hbs1f $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( wsb sbf hbxfrbi ) ABCEABABCDFDG $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  $( Substitution does not change an identical variable specifier. $)
  sbequ5 $p |- ( [ w / z ] A. x x = y <-> A. x x = y ) $=
    ( weq wal hbae sbf ) ABEAFCDABCGH $.
    $( [21-Dec-2004] $) $( [5-Aug-1993] $)

  $( Substitution does not change a distinctor. $)
  sbequ6 $p |- ( [ w / z ] -. A. x x = y <-> -. A. x x = y ) $=
    ( weq wal wn hbnae sbf ) ABEAFGCDABCHI $.
    $( [14-May-2005] $) $( [5-Aug-1993] $)

  ${
    sbt.1 $e |- ph $.
    $( A substitution into a theorem remains true.  (See ~ chvar and ~ chvarv
       for versions using implicit substitition.)  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    sbt $p |- [ y / x ] ph $=
      ( wsb hbth sbf mpbir ) ABCEADABCABDFGH $.
      $( [25-May-2011] $) $( [21-Jan-2004] $)
  $}

  $( Substitution applied to an atomic wff. $)
  equsb1 $p |- [ y / x ] x = y $=
    ( weq wi wsb sb2 id mpg ) ABCZIDIABEAIABFIGH $.
    $( [5-Aug-1993] $)

  $( Substitution applied to an atomic wff. $)
  equsb2 $p |- [ y / x ] y = x $=
    ( weq wi wsb sb2 equcomi mpg ) ABCBACZDIABEAIABFABGH $.
    $( [5-Aug-1993] $)

  ${
    sbied.1 $e |- ( ph -> A. x ph ) $.
    sbied.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    sbied.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit substitution (deduction
       version of ~ sbie ).  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sbied $p |- ( ph -> ( [ y / x ] ps <-> ch ) ) $=
      ( wsb wex weq wa sb1 wb wi bi1 syl6 imp3a syld wal eximd syl5 19.9d com23
      bi2 alimd sb2 impbid ) ABDEIZCAUICDJZCUIDEKZBLZDJAUJBDEMAULCDFAUKBCAUKBCN
      ZBCOHBCPQRUAUBCADFGUCSACCDTZUIGAUNUKBOZDTUIACUODFAUKCBAUKUMCBOHBCUEQUDUFB
      DEUGQSUH $.
      $( [25-May-2011] $) $( [30-Jun-1994] $)
  $}

  ${
    sbie.1 $e |- ( ps -> A. x ps ) $.
    sbie.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit substitution. $)
    sbie $p |- ( [ y / x ] ph <-> ps ) $=
      ( wi wsb wb id hbth wal a1i weq sbied ax-mp ) AAGZACDHBIAJZQABCDQCRKBBCLG
      QEMCDNABIGQFMOP $.
      $( [30-Jun-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Theorems using axiom ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A property related to substitution that unlike ~ equs5 doesn't require a
     distinctor antecedent. $)
  equs5a $p |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) $=
    ( weq wal wa wi hba1 ax-11 imp exlimi ) BCDZACEZFLAGZBEZBNBHLMOABCIJK $.
    $( [2-Feb-2007] $)

  $( A property related to substitution that unlike ~ equs5 doesn't require a
     distinctor antecedent. $)
  equs5e $p |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> E. y ph ) ) $=
    ( weq wa wex wn wi wal equs3 hbn1 ax-11 con3rr3 df-ex syl6ibr alrimi sylbi
    ) BCDZAEBFRAGZHZBIZGZRACFZHZBIABCJUBUDBTBKUBRSCIZGUCRUEUASBCLMACNOPQ $.
    $( [2-Feb-2007] $)

  $( A version of ~ sb4 that doesn't require a distinctor antecedent. $)
  sb4a $p |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) $=
    ( wal wsb weq wa wex wi sb1 equs5a syl ) ACDZBCEBCFZMGBHNAIBDMBCJABCKL $.
    $( [2-Feb-2007] $)

  ${
    equs45f.1 $e |- ( ph -> A. y ph ) $.
    $( Two ways of expressing substitution when ` y ` is not free in
       ` ph ` . $)
    equs45f $p |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) $=
      ( weq wa wex wi wal anim2i eximi equs5a syl equs4 impbii ) BCEZAFZBGZPAHB
      IZRPACIZFZBGSQUABATPDJKABCLMABCNO $.
      $( [25-Apr-2008] $)

    $( Equivalence for substitution when ` y ` is not free in ` ph ` . $)
    sb6f $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( wsb weq wi wal sbimi sb4a syl sb2 impbii ) ABCEZBCFAGBHZNACHZBCEOAPBCDI
      ABCJKABCLM $.
      $( [30-Apr-2008] $)  $( [5-Aug-1993] $)

    $( Equivalence for substitution when ` y ` is not free in ` ph ` . $)
    sb5f $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wi wal wa wex sb6f equs45f bitr4i ) ABCEBCFZAGBHNAIBJABCDKABCDL
      M $.
      $( [18-May-2008] $)  $( [5-Aug-1993] $)
  $}

  $( One direction of a simplified definition of substitution that unlike ~ sb4
     doesn't require a distinctor antecedent. $)
  sb4e $p |- ( [ y / x ] ph -> A. x ( x = y -> E. y ph ) ) $=
    ( wsb weq wa wex wi wal sb1 equs5e syl ) ABCDBCEZAFBGMACGHBIABCJABCKL $.
    $( [2-Feb-2007] $)

  $( Special case of a bound-variable hypothesis builder for substitution. $)
  hbsb2a $p |- ( [ y / x ] A. y ph -> A. x [ y / x ] ph ) $=
    ( wal wsb weq wi sb4a sb2 a5i syl ) ACDBCEBCFAGZBDABCEZBDABCHLMBABCIJK $.
    $( [2-Feb-2007] $)

  $( Special case of a bound-variable hypothesis builder for substitution. $)
  hbsb2e $p |- ( [ y / x ] ph -> A. x [ y / x ] E. y ph ) $=
    ( wsb weq wex wi wal sb4e sb2 a5i syl ) ABCDBCEACFZGZBHMBCDZBHABCINOBMBCJKL
    $.
    $( [2-Feb-2007] $)

  ${
    hbsb3.1 $e |- ( ph -> A. y ph ) $.
    $( If ` y ` is not free in ` ph ` , ` x ` is not free in
       ` [ y / x ] ph ` . $)
    hbsb3 $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( wsb wal sbimi hbsb2a syl ) ABCEZACFZBCEJBFAKBCDGABCHI $.
      $( [5-Aug-1993] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                  Predicate calculus with distinct variables
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive the axiom of distinct variables ax-16
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x ps $.
    a4imv.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( A version of ~ a4im with a distinct variable requirement instead of a
       bound variable hypothesis. $)
    a4imv $p |- ( A. x ph -> ps ) $=
      ( ax-17 a4im ) ABCDBCFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $v f $.
    $( Define a temporary individual variable. $)
    aev.vf $f set f $.
    $d f u v $.  $d f u x y $.  $d u w $.
    $( A "distinctor elimination" lemma with no restrictions on variables in
       the consequent, proved without using ~ ax-16 .  (The proof was shortened
       by Andrew Salmon, 21-Jun-2011.) $)
    aev $p |- ( A. x x = y -> A. z w = v ) $=
      ( aev.vf vu weq wal hbae ax-8 a4imv alrimi equcomi alequcoms a5i alequcom
      syl6 3syl ) ABHZAIZDEHZCABCJUAFBHZFIZGEHZGIZUBUAUCFABFJTUCAFAFBKLMUDFGHZF
      IZEGHZEIUFUCUGFUGBFBFHZUGBGBGHUJGFHUGBGFKGFNRLOPUHUIEFGEJUGUIFEFEGKLMEGQS
      UEUBGDGDEKLSM $.
      $( [26-Jun-2011] $) $( [8-Nov-2006] $)
  $}

  ${
    $d x y $.  $d z ph $.
    $( Theorem showing that ~ ax-16 is redundant if ~ ax-17 is included in the
       axiom system.  The important part of the proof is provided by ~ aev .

       See ~ ax16ALT for an alternate proof that does not require ~ ax-10 or
       ~ ax-12 .

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-16 below so that theorems needing ~ ax-16 can be more easily
       identified. $)
    ax16 $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( vz weq wal wi aev ax-17 sbequ12 biimpcd alimd hbsb3 stdpc7 cbv3 syl6com
      wsb syl ) BCEBFBDEZDFZAABFZGBCDBDHATABDQZDFUAASUBDADIZSAUBABDJKLUBADBABDU
      CMUCADBNOPR $.
      $( [8-Nov-2006] $)
  $}

  ${
    $d x y $.
    $( Axiom of Distinct Variables.  The only axiom of predicate calculus
       requiring that variables be distinct (if we consider ~ ax-17 to be a
       metatheorem and not an axiom).  Axiom scheme C16' in [Megill] p. 448 (p.
       16 of the preprint).  It apparently does not otherwise appear in the
       literature but is easily proved from textbook predicate calculus by
       cases.  It is a somewhat bizarre axiom since the antecedent is always
       false in set theory (see ~ dtru ), but nonetheless it is technically
       necessary as you can see from its uses.

       This axiom is redundant if we include ~ ax-17 ; see theorem ~ ax16 .
       Alternately, ~ ax-17 becomes logically redundant in the presence of this
       axiom, but without ~ ax-17 we lose the more powerful metalogic that
       results from being able to express the concept of a set variable not
       occurring in a wff (as opposed to just two set variables being
       distinct).  We retain ~ ax-16 here to provide logical completeness for
       systems with the simpler metalogic that results from omitting ~ ax-17 ,
       which might be easier to study for some theoretical purposes. $)
    ax-16 $a |- ( A. x x = y -> ( ph -> A. x ph ) ) $.
  $}

  ${
    $d x z $.  $d y z $.
    $( Theorem to add distinct quantifier to atomic formula.  (This theorem
       demonstrates the induction basis for ~ ax-17 considered as a
       metatheorem.  Do not use it for later proofs - use ~ ax-17 instead, to
       avoid reference to the redundant axiom ~ ax-16 .) $)
    ax17eq $p |- ( x = y -> A. z x = y ) $=
      ( weq wal wi ax-12 ax-16 pm2.61ii ) CADCECBDCEABDZJCEFABCGJCAHJCBHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveeq2 $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax-17 equequ2 dvelimfALT ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)

    $( Version of ~ dveeq2 using ~ ax-16 instead of ~ ax-17 . $)
    dveeq2ALT $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax17eq equequ2 dvelimfALT ) CDECBEABDCDAFCBDFDBCGH $.
      $( [29-Apr-2008] $)
  $}


  ${
    $d x z $.  $d y z $.
    dvelimfALT2.1 $e |- ( ph -> A. x ph ) $.
    dvelimfALT2.2 $e |- ( ps -> A. z ps ) $.
    dvelimfALT2.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    dvelimfALT2.4 $e |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $.
    $( Proof of ~ dvelimf using ~ dveeq2 (shown as the last hypothesis) instead
       of ~ ax-12 .  This shows that ~ ax-12 could be replaced by ~ dveeq2 (the
       last hypothesis).  (Contributed by Andrew Salmon, 21-Jul-2011.) $)
    dvelimfALT2 $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( cv wceq wal wn wi ax-17 hbn1 a1i hbimd hbald equsal albii 3imtr3g ) CJD
      JZKZCLMZEJUCKZANZELZUHCLBBCLUEUGCEUEEOUEUFACUDCPIAACLNUEFQRSABEDGHTZUHBCU
      IUAUB $.
      $( [21-Jul-2011] $)
  $}

  ${
    $d z x $.
    $( A lemma for proving conditionless ZFC axioms. $)
    nd5 $p |- ( -. A. y y = x -> ( z = y -> A. x z = y ) ) $=
      ( cv wceq wal wi dveeq2 nalequcoms ) CDBDEZJAFGABABCHI $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x ch $.  $d x ph $.
    exlimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    exlimdv $p |- ( ph -> ( E. x ps -> ch ) ) $=
      ( ax-17 exlimd ) ABCDADFCDFEG $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    ax11v2.1 $e |- ( x = z -> ( ph -> A. x ( x = z -> ph ) ) ) $.
    $( Recovery of ~ ax11o from ~ ax11v without using ~ ax-11 .  The hypothesis
       is even weaker than ~ ax11v , with ` z ` both distinct from ` x ` _and_
       not occurring in ` ph ` .  Thus the hypothesis provides an alternate
       axiom that can be used in place of ~ ax11o . $)
    ax11v2 $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wex wi a9e wa wb equequ2 adantl dveeq2 imp hba1 imbi1d a4s
      albid syl imbi2d imbi12d mpbii ex exlimdv mpi ) BCFZBGHZDCFZDIUIAUIAJZBGZ
      JZJZDCKUJUKUODUJUKUOUJUKLZBDFZAUQAJZBGZJZJUOEUPUQUIUTUNUKUQUIMUJDCBNZOUPU
      SUMAUPUKBGZUSUMMUJUKVBBCDPQVBURULBUKBRUKURULMBUKUQUIAVASTUAUBUCUDUEUFUGUH
      $.
      $( [2-Feb-2007] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    ax11a2.1 $e |- ( x = z -> ( A. z ph -> A. x ( x = z -> ph ) ) ) $.
    $( Derive ~ ax-11o from a hypothesis in the form of ~ ax-11 .  The
       hypothesis is even weaker than ~ ax-11 , with ` z ` both distinct from
       ` x ` and not occurring in ` ph ` .  Thus the hypothesis provides an
       alternate axiom that can be used in place of ~ ax11o .  As theorem
       ~ ax11 shows, the distinct variable conditions are optional.  An open
       problem is whether ~ ax11o can be derived from ~ ax-11 without relying
       on ~ ax-17 . $)
    ax11a2 $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( wal weq wi ax-17 syl5 ax11v2 ) ABCDAADFBDGZLAHBFADIEJK $.
      $( [2-Feb-2007] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive the obsolete axiom of variable substitution ax-11o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Derivation of set.mm's original ~ ax-11o from the shorter ~ ax-11 that
       has replaced it.

       An open problem is whether this theorem can be proved without relying on
       ~ ax-16 or ~ ax-17 .

       Another open problem is whether this theorem can be proved without
       relying on ~ ax-12 (see note in ~ a12study ).

       Theorem ~ ax11 shows the reverse derivation of ~ ax-11 from ~ ax-11o .

       Normally, ~ ax11o should be used rather than ~ ax-11o , except by
       theorems specifically studying the latter's properties. $)
    ax11o $p |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( vz ax-11 ax11a2 ) ABCDABDEF $.
      $( [3-Feb-2007] $)
  $}

  $( Axiom ~ ax-11o ("o" for "old") was the original version of ~ ax-11 ,
     before it was discovered (in Jan. 2007) that the shorter ~ ax-11 could
     replace it.  It appears as Axiom scheme C15' in [Megill] p. 448 (p. 16 of
     the preprint).  It is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of
     [Monk2] p. 105, from which it can be proved by cases.  To understand this
     theorem more easily, think of " ` -. A. x x = y -> ` ..." as informally
     meaning "if ` x ` and ` y ` are distinct variables then..."  The
     antecedent becomes false if the same variable is substituted for ` x ` and
     ` y ` , ensuring the theorem is sound whenever this is the case.  In some
     later theorems, we call an antecedent of the form ` -. A. x x = y ` a
     "distinctor."

     This axiom is redundant, as shown by theorem ~ ax11o .

     Normally, ~ ax11o should be used rather than ~ ax-11o , except by theorems
     specifically studying the latter's properties. $)
  ax-11o $a |- ( -. A. x x = y ->
             ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.

  $( Rederivation of axiom ~ ax-11 from the orginal version, ~ ax-11o .  See
     theorem ~ ax11o for the derivation of ~ ax-11o from ~ ax-11 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-11
     above so that uses of ~ ax-11 can be more easily identified. $)
  ax11 $p |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wi biidd dral1 ax-1 alimi syl6bir a1d wn ax-4 ax-11o syl7 pm2.61i
    ) BCDZBEZRACEZRAFZBEZFZFSUCRSTABEUBAABCSAGHAUABARIJKLTASMRUBACNABCOPQ $.
    $( [22-Jan-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Theorems without distinct variables that use axiom ax-11o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A bidirectional version of ~ ax-11o . $)
  ax11b $p |- ( ( -. A. x x = y /\ x = y ) ->
              ( ph <-> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wi ax-11o imp ax-4 com12 adantl impbid ) BCDZBEFZOGAOAHZBEZ
    POARHABCIJORAHPROAQBKLMN $.
    $( [30-Jun-2006] $)

  $( Lemma used in proofs of substitution properties. $)
  equs5 $p |- ( -. A. x x = y ->
             ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wi hbnae hba1 ax11o imp3a exlimd ) BCDZBEFZNAGNAHZBEZBBCBIP
    BJONAQABCKLM $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution when variables
     are distinct. $)
  sb3 $p |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> [ y / x ] ph ) ) $=
    ( weq wal wn wa wex wi wsb equs5 sb2 syl6 ) BCDZBEFNAGBHNAIBEABCJABCKABCLM
    $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution when variables
     are distinct. $)
  sb4 $p |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) $=
    ( wsb weq wa wex wal wn wi sb1 equs5 syl5 ) ABCDBCEZAFBGNBHINAJBHABCKABCLM
    $.
    $( [5-Aug-1993] $)

  $( Simplified definition of substitution when variables are distinct. $)
  sb4b $p |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wsb wi sb4 sb2 impbid1 ) BCDZBEFABCGLAHBEABCIABCJK $.
    $( [27-May-1997] $)

  $( An alternate definition of proper substitution that, like ~ df-sb , mixes
     free and bound variables to avoid distinct variable requirements. $)
  dfsb2 $p |- ( [ y / x ] ph <->
              ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) $=
    ( wsb weq wa wi wal wo sbequ2 a4s ax-4 jctild orc wn sb4 olc pm2.61i sbequ1
    syl6 imp sb2 jaoi impbii ) ABCDZBCEZAFZUFAGBHZIZUFBHZUEUIGUJUEUGUIUJUEAUFUF
    UEAGBABCJKUFBLMUGUHNTUJOUEUHUIABCPUHUGQTRUGUEUHUFAUEABCSUAABCUBUCUD $.
    $( [17-Feb-2005] $)

  $( An alternate definition of proper substitution ~ df-sb that uses only
     primitive connectives (no defined terms) on the right-hand side. $)
  dfsb3 $p |- ( [ y / x ] ph <->
              ( ( x = y -> -. ph ) -> A. x ( x = y -> ph ) ) ) $=
    ( weq wa wi wal wo wn wsb df-or dfsb2 imnan imbi1i 3bitr4i ) BCDZAEZPAFBGZH
    QIZRFABCJPAIFZRFQRKABCLTSRPAMNO $.
    $( [6-Mar-2007] $)

  $( Bound-variable hypothesis builder for substitution. $)
  hbsb2 $p |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) $=
    ( weq wal wn wsb wi sb4 sb2 a5i syl6 ) BCDZBEFABCGZMAHZBENBEABCIONBABCJKL
    $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequi $p |- ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) $=
    ( weq wal wsb wi wn wa wex hbsb2 stdpc7 sbequ1 sylan9 ex a4s adantr biimpd
    drsb1 equvini eximi syl 19.35 sylib hbnae 19.9d syl9 com23 sbequ2 alequcoms
    sylan9r syld pm2.61ii ) DBEZDFZDCEZDFZBCEZADBGZADCGZHZHUPIZUSURIZVBVCUSVDVB
    HVCUSJUTVADKZVDVAVCUTUTDFZUSVEADBLUSVBDKZVFVEHUSBDEZUQJZDKVGBCDUAVIVBDVHUTA
    UQVAABDMADCNZOUBUCUTVADUDUEOVAVDDDCDUFADCLUGUHPUIUPUSVBUPUSJUTAVAUPUTAHZUSU
    OVKDADBUJQRUSAABCGZUPVAABCNVLVAHBDVHBFVLVAABDCTSUKULUMPURUSVBURUSJUTAVAURUT
    ACBGZUSAURUTVMADCBTSABCMOURAVAHZUSUQVNDVJQRUMPUN $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution.  Used in proof of Theorem 9.7 in
     [Megill] p. 449 (p. 16 of the preprint). $)
  sbequ $p |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) $=
    ( weq wsb sbequi wi equcoms impbid ) BCEADBFZADCFZABCDGLKHCBACBDGIJ $.
    $( [5-Aug-1993] $)

  $( Formula-building lemma for use with the Distinctor Reduction Theorem.
     Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
  drsb2 $p |- ( A. x x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) $=
    ( cv wceq wsbc wb sbequ a4s ) BEZCEZFADKGADLGHBABCDIJ $.
    $( [27-Feb-2005] $)

  $( Negation inside and outside of substitution are equivalent. $)
  sbn $p |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) $=
    ( wn wsb weq wal wi sbequ2 nsyld a4s sb4 wa wex sb1 equs3 sylib syl6 sylibr
    con2i pm2.61i sbequ1 con3rr3 sb2 notnot sbbii con3i df-sb sylanbrc impbii )
    ADZBCEZABCEZDZBCFZBGZULUNHZUOUQBUOULAUMUKBCIABCIJKUPDULUOUKHZBGZUNUKBCLUMUS
    UMUOAMBNUSDABCOABCPQTRUAUNURUOUKMBNZULUOAUMABCUBUCUNUOUKDZHBGZDUTVBUMVBVABC
    EUMVABCUDAVABCAUEUFSUGUKBCPSUKBCUHUIUJ $.
    $( [5-Aug-1993] $)

  $( Removal of implication from substitution. $)
  sbi1 $p |- ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( weq wal wi wsb sbequ2 syl5d sbequ1 syl6d a4s sb4 ax-2 al2imi syl6 pm2.61i
    wn sb2 ) CDEZCFZABGZCDHZACDHZBCDHZGGZUAUGCUAUDUEBUFUAUEAUDBACDIUCCDIJBCDKLM
    UBSZUEUAAGZCFZUDUFACDNUHUDUAUCGZCFZUJUFGUCCDNULUJUABGZCFUFUKUIUMCUAABOPBCDT
    QQJR $.
    $( [5-Aug-1993] $)

  $( Introduction of implication into substitution. $)
  sbi2 $p |- ( ( [ y / x ] ph -> [ y / x ] ps ) -> [ y / x ] ( ph -> ps ) ) $=
    ( wsb wi wn sbn pm2.21 sbimi sylbir ax-1 ja ) ACDEZBCDEABFZCDEZNGAGZCDEPACD
    HQOCDABIJKBOCDBALJM $.
    $( [5-Aug-1993] $)

  $( Implication inside and outside of substitution are equivalent. $)
  sbim $p |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( wi wsb sbi1 sbi2 impbii ) ABECDFACDFBCDFEABCDGABCDHI $.
    $( [5-Aug-1993] $)

  $( Logical OR inside and outside of substitution are equivalent. $)
  sbor $p |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) $=
    ( wn wi wsb wo sbim sbn imbi1i bitri df-or sbbii 3bitr4i ) AEZBFZCDGZACDGZE
    ZBCDGZFZABHZCDGSUAHRPCDGZUAFUBPBCDIUDTUAACDJKLUCQCDABMNSUAMO $.
    $( [29-Sep-2002] $)

  ${
    sbrim.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution with a variable not free in antecedent affects only the
       consequent. $)
    sbrim $p |- ( [ y / x ] ( ph -> ps ) <-> ( ph -> [ y / x ] ps ) ) $=
      ( wi wsb sbim sbf imbi1i bitri ) ABFCDGACDGZBCDGZFAMFABCDHLAMACDEIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    sblim.1 $e |- ( ps -> A. x ps ) $.
    $( Substitution with a variable not free in consequent affects only the
       antecedent. $)
    sblim $p |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> ps ) ) $=
      ( wi wsb sbim sbf imbi2i bitri ) ABFCDGACDGZBCDGZFLBFABCDHMBLBCDEIJK $.
      $( [14-Nov-2013] $)
  $}

  $( Conjunction inside and outside of a substitution are equivalent. $)
  sban $p |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) $=
    ( wn wi wsb wa sbn sbim imbi2i bitri xchbinx df-an sbbii 3bitr4i ) ABEZFZEZ
    CDGZACDGZBCDGZEZFZEABHZCDGUAUBHTRCDGZUDRCDIUFUAQCDGZFUDAQCDJUGUCUABCDIKLMUE
    SCDABNOUAUBNP $.
    $( [5-Aug-1993] $)

  $( Conjunction inside and outside of a substitution are equivalent. $)
  sb3an $p |- ( [ y / x ] ( ph /\ ps /\ ch ) <->
              ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) ) $=
    ( w3a wsb wa df-3an sbbii sban anbi1i bitr4i 3bitri ) ABCFZDEGABHZCHZDEGPDE
    GZCDEGZHZADEGZBDEGZSFZOQDEABCIJPCDEKTUAUBHZSHUCRUDSABDEKLUAUBSIMN $.
    $( [14-Dec-2006] $)

  $( Equivalence inside and outside of a substitution are equivalent. $)
  sbbi $p |- ( [ y / x ] ( ph <-> ps )
     <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) $=
    ( wb wsb wi wa dfbi2 sbbii sbim anbi12i sban 3bitr4i bitri ) ABEZCDFABGZBAG
    ZHZCDFZACDFZBCDFZEZPSCDABIJQCDFZRCDFZHUAUBGZUBUAGZHTUCUDUFUEUGABCDKBACDKLQR
    CDMUAUBINO $.
    $( [5-Aug-1993] $)

  ${
    sblbis.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce left biconditional inside of a substitution. $)
    sblbis $p |- ( [ y / x ] ( ch <-> ph ) <-> ( [ y / x ] ch <-> ps ) ) $=
      ( wb wsb sbbi bibi2i bitri ) CAGDEHCDEHZADEHZGLBGCADEIMBLFJK $.
      $( [19-Aug-1993] $)
  $}

  ${
    sbrbis.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce right biconditional inside of a substitution. $)
    sbrbis $p |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> [ y / x ] ch ) ) $=
      ( wb wsb sbbi bibi1i bitri ) ACGDEHADEHZCDEHZGBMGACDEILBMFJK $.
      $( [18-Aug-1993] $)
  $}

  ${
    sbrbif.1 $e |- ( ch -> A. x ch ) $.
    sbrbif.2 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce right biconditional inside of a substitution. $)
    sbrbif $p |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> ch ) ) $=
      ( wb wsb sbrbis sbf bibi2i bitri ) ACHDEIBCDEIZHBCHABCDEGJNCBCDEFKLM $.
      $( [18-Aug-1993] $)
  $}

  $( A specialization theorem. $)
  a4sbe $p |- ( [ y / x ] ph -> E. x ph ) $=
    ( wsb wn wal wex stdpc4 sbn sylib con2i df-ex sylibr ) ABCDZAEZBFZEABGPNPOB
    CDNEOBCHABCIJKABLM $.
    $( [5-Aug-1993] $)

  $( Specialization of implication.  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  a4sbim $p |- ( A. x ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( wi wal wsb stdpc4 sbi1 syl ) ABEZCFKCDGACDGBCDGEKCDHABCDIJ $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( Specialization of biconditional. $)
  a4sbbi $p |- ( A. x ( ph <-> ps ) -> ( [ y / x ] ph <-> [ y / x ] ps ) ) $=
    ( wb wal wsb stdpc4 sbbi sylib ) ABEZCFKCDGACDGBCDGEKCDHABCDIJ $.
    $( [5-Aug-1993] $)

  ${
    sbbid.1 $e |- ( ph -> A. x ph ) $.
    sbbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction substituting both sides of a biconditional. $)
    sbbid $p |- ( ph -> ( [ y / x ] ps <-> [ y / x ] ch ) ) $=
      ( wb wal wsb alrimi a4sbbi syl ) ABCHZDIBDEJCDEJHANDFGKBCDELM $.
      $( [5-Aug-1993] $)
  $}

  $( Elimination of equality from antecedent after substitution. $)
  sbequ8 $p |- ( [ y / x ] ph <-> [ y / x ] ( x = y -> ph ) ) $=
    ( wsb weq wi equsb1 a1bi sbim bitr4i ) ABCDZBCEZBCDZKFLAFBCDMKBCGHLABCIJ $.
    $( [5-Aug-1993] $)

  $( Substitution has no effect on a non-free variable. $)
  sbf3t $p |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph <-> ph ) ) $=
    ( wal wi wsb a4sbim sbf2 ax-4 sylbi syl6 stdpc4 imim2i a4s impbid ) AABDZEZ
    BDZABCFZARSPBCFZAAPBCGTPAABCHABIJKQASEBPSAABCLMNO $.
    $( [30-May-2009] $)

  ${
    hbsb4.1 $e |- ( ph -> A. z ph ) $.
    $( A variable not free remains so after substitution with a distinct
       variable. $)
    hbsb4 $p |- ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) $=
      ( weq wal wn wsb wi wb equequ1 a4s dral1 notbid hbsb2 alimi hbnae pm2.61i
      hban ax10o alequcoms sylbid hbae ax-4 sbequ2 sbequ1 al2imi syl5 syld 3syl
      syl9r wa a1d sb4 ax-12 imp a1i hbimd alimd sb2 a7s syl6 syl9 ex ) DBFZDGZ
      DCFZDGZHZABCIZVKDGZJZJVGVJBCFZBGZHZVMVGVIVOVHVNDBVFVHVNKDDBCLMNOVPVKVKBGZ
      VGVLABCPVQVLJBDVKBDUAUBULUCVGHZVJVMVOVRVJUMZVMJVOVMVSVOVODGVNDGZVMBCDUDVO
      VNDVNBUEQVTVKAVLVNVKAJDABCUFMAADGZVTVLEVNAVKDABCUGUHUIUJUKUNVPVKVNAJZBGZV
      SVLABCUOVSWCWBDGZBGVLVSWBWDBVRVJBDBBRDCBRTVSVNADVRVJDDBDRDCDRTVRVJVNVTJBC
      DUPUQAWAJVSEURUSUTWBVLDBWCVKDABCVAQVBVCVDSVES $.
      $( [5-Aug-1993] $)
  $}

  $( A variable not free remains so after substitution with a distinct variable
     (closed form of ~ hbsb4 ).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  hbsb4t $p |- ( A. x A. z ( ph -> A. z ph ) ->
               ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) $=
    ( weq wal wn wsb wi hba1 hbsb4 a4sbim a4s ax-4 sbimi alimi a1i imim12d syl5
    a7s ) DCEDFGADFZBCHZUBDFZIZAUAIZDFBFABCHZUFDFZIZUABCDADJKUEUDUHIDBUEBFZDFZU
    FUBUCUGUIUFUBIDAUABCLMUCUGIUJUBUFDUAABCADNOPQRTS $.
    $( [25-May-2011] $) $( [7-Apr-2004] $)

  ${
    dvelimf.1 $e |- ( ph -> A. x ph ) $.
    dvelimf.2 $e |- ( ps -> A. z ps ) $.
    dvelimf.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Version of ~ dvelim without any variable restrictions. $)
    dvelimf $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wsb hbsb4 sbie albii 3imtr3g ) CDICJKAEDLZQCJBBCJAEDCFMABEDG
      HNZQBCROP $.
      $( [1-Oct-2002] $)
  $}

  ${
    dvelimdf.1 $e |- ( ph -> A. x ph ) $.
    dvelimdf.2 $e |- ( ph -> A. z ph ) $.
    dvelimdf.3 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    dvelimdf.4 $e |- ( ph -> ( ch -> A. z ch ) ) $.
    dvelimdf.5 $e |- ( ph -> ( z = y -> ( ps <-> ch ) ) ) $.
    $( Deduction form of ~ dvelimf .  This version may be useful if we want to
       avoid ~ ax-17 and use ~ ax-16 instead. $)
    dvelimdf $p |- ( ph -> ( -. A. x x = y -> ( ch -> A. x ch ) ) ) $=
      ( weq wal wn wi wa wsb alrimi wb adantr 2alimi hbsb4t sbied albid 3imtr3d
      3syl imp ex ) ADELDMNZCCDMZOAUIPBFEQZUKDMZCUJAUIUKULOZAADMZFMBBDMOZDMFMUI
      UMOAUNFHGRAUOFDIUABFEDUBUFUGAUKCSUIABCFEHJKUCZTAULUJSUIAUKCDGUPUDTUEUH $.
      $( [7-Apr-2004] $)
  $}

  $( A composition law for substitution. $)
  sbco $p |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) $=
    ( wsb wb weq equsb2 sbequ12 bicomd sbimi ax-mp sbbi mpbi ) ACBDZAEZBCDZNBCD
    ABCDECBFZBCDPBCGQOBCQANACBHIJKNABCLM $.
    $( [5-Aug-1993] $)

  ${
    sbid2.1 $e |- ( ph -> A. x ph ) $.
    $( An identity law for substitution. $)
    sbid2 $p |- ( [ y / x ] [ x / y ] ph <-> ph ) $=
      ( wsb sbco sbf bitri ) ACBEBCEABCEAABCFABCDGH $.
      $( [5-Aug-1993] $)
  $}

  $( An idempotent law for substitution.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  sbidm $p |- ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) $=
    ( wsb wb weq equsb2 sbequ12r sbimi ax-mp sbbi mpbi ) ABCDZAEZBCDZMBCDMECBFZ
    BCDOBCGPNBCACBHIJMABCKL $.
    $( [25-May-2011] $) $( [30-Jun-1994] $)

  ${
    sbco2.1 $e |- ( ph -> A. z ph ) $.
    $( A composition law for substitution. $)
    sbco2 $p |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) $=
      ( weq wal wsb wb sbid2 sbequ syl5bbr sbequ12 bitr3d a4s hbnae hbsb3 hbsb4
      wn wi a1i sbied bicomd pm2.61i ) BCFZBGZABDHZDCHZABCHZIZUEUJBUEAUHUIAUGDB
      HUEUHADBEJUGBCDKLZABCMNOUFSZUIUHULAUHBCBCBPUGDCBABDEQRUEAUHITULUKUAUBUCUD
      $.
      $( [30-Jun-1994] $)
  $}

  ${
    sbco2d.1 $e |- ( ph -> A. x ph ) $.
    sbco2d.2 $e |- ( ph -> A. z ph ) $.
    sbco2d.3 $e |- ( ph -> ( ps -> A. z ps ) ) $.
    $( A composition law for substitution. $)
    sbco2d $p |- ( ph -> ( [ y / z ] [ z / x ] ps <-> [ y / x ] ps ) ) $=
      ( wsb wi hbim1 sbco2 sbrim sbbii bitri 3bitr3i pm5.74ri ) ABCEIZEDIZBCDIZ
      ABJZCEIZEDIZUACDIASJZATJUACDEABEGHKLUCARJZEDIUDUBUEEDABCEFMNAREDGMOABCDFM
      PQ $.
      $( [5-Aug-1993] $)
  $}

  $( A composition law for substitution. $)
  sbco3 $p |- ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) $=
    ( weq wal wsb wb drsb1 sbequ12a alimi a4sbbi syl bitr3d wn sbco sbbii hbnae
    hbsb2 sbco2d syl5rbbr pm2.61i ) BCEZBFZABCGZCDGZACBGZBDGZHUDUEBDGZUFUHUEBCD
    IUDUEUGHZBFUIUHHUCUJBABCJKUEUGBDLMNUHUECBGZBDGUDOZUFUKUGBDACBPQULUECDBBCCRB
    CBRABCSTUAUB $.
    $( [5-Aug-1993] $)

  $( A commutativity law for substitution. $)
  sbcom $p |- ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) $=
    ( weq wal wsb wb wn wa hbae sbbid bitr3d hbnae hban albid sb4b sbequ12 a4s
    wi drsb1 adantr ax-12 imp alimi 19.21t 3syl adantrr alcom bi2.04 nalequcoms
    albii syl5bb adantrl imbi2d sylan9bbr adantl sylan9bb pm2.61ian ex pm2.61ii
    3bitr4d ) BCEZBFZDCEZDFZABCGZDCGZADCGZBCGZHZVDIZVFIZVKBDEBFZVLVMJZVKVNVKVOV
    NVGBCGVHVJVGBDCUAVNVGVIBCBDBKABDCUALMUBVNIZVOJZVEVCATZBFZTZDFZVCVEATZDFZTZB
    FZVHVJVQVEVRTZBFZDFZWAWEVPVLWHWAHVMVPVLJZWGVTDVPVLDBDDNZBCDNZOWIWIBFVEVEBFT
    ZBFWGVTHVPVLBBDBNZBCBNOWIWLBVPVLWLDCBUCUDUEVEVRBUFUGPUHVPVMWHWEHVLWHWFDFZBF
    VPVMJZWEWFDBUIWOWNWDBVPVMBWMDCBNZOWNVCWBTZDFZWOWDWFWQDVEVCAUJULWOWODFVCVCDF
    TZDFWRWDHVPVMDWJDCDNOWOWSDVPVMWSVMWSTDBBCDUCUKUDUEVCWBDUFUGUMPUMUNMVOVHWAHV
    PVMVHVEVGTZDFVLWAVGDCQVLWTVTDWKVLVGVSVEABCQUOPUPUQVOVJWEHVPVLVJVCVITZBFVMWE
    VIBCQVMXAWDBWPVMVIWCVCADCQUOPURUQVBUSUTVDVIVHVJVDAVGDCBCDKVCAVGHBABCRSLVCVI
    VJHBVIBCRSMVFVGVHVJVEVGVHHDVGDCRSVFAVIBCDCBKVEAVIHDADCRSLMVA $.
    $( [27-May-1997] $)

  ${
    sb5rf.1 $e |- ( ph -> A. y ph ) $.
    $( Reversed substitution.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sb5rf $p |- ( ph <-> E. y ( y = x /\ [ y / x ] ph ) ) $=
      ( weq wsb wa wex sbid2 sb1 sylbir stdpc7 imp exlimi impbii ) ACBEZABCFZGZ
      CHZAQCBFSACBDIQCBJKRACDPQAACBLMNO $.
      $( [25-May-2011] $) $( [3-Feb-2005] $)

    $( Reversed substitution.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sb6rf $p |- ( ph <-> A. y ( y = x -> [ y / x ] ph ) ) $=
      ( weq wsb wi wal sbequ1 equcoms com12 alrimi sb2 sbid2 sylib impbii ) ACB
      EZABCFZGZCHZASCDQARARGBCABCIJKLTRCBFARCBMACBDNOP $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sb8.1 $e |- ( ph -> A. y ph ) $.
    $( Substitution of variable in universal quantifier.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    sb8 $p |- ( A. x ph <-> A. y [ y / x ] ph ) $=
      ( wal wsb hbal stdpc4 alrimi hbsb3 stdpc7 cbv3 impbii ) ABEZABCFZCENOCACB
      DGABCHIOACBABCDJDACBKLM $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sb8e.1 $e |- ( ph -> A. y ph ) $.
    $( Substitution of variable in existential quantifier. $)
    sb8e $p |- ( E. x ph <-> E. y [ y / x ] ph ) $=
      ( wn wal wsb wex hbn sb8 sbn albii bitri notbii df-ex 3bitr4i ) AEZBFZEAB
      CGZEZCFZEABHSCHRUARQBCGZCFUAQBCACDIJUBTCABCKLMNABOSCOP $.
      $( [12-Aug-1993] $)
  $}

  $( Commutation of quantification and substitution variables. $)
  sb9i $p |- ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) $=
    ( weq wal wi drsb1 drsb2 bitr3d dral1 biimprd wn hbsb2 al2imi hbnaes stdpc4
    wsb sbco sylib alimi a7s syl6 pm2.61i ) CBDCEZACBQZBEZABCQZCEZFUDUHUFUGUECB
    UDACCQUGUEACBCGACBCHIJKUDLZUFUECEZBEZUHUFUKFCBBUIUEUJBACBMNOUEUHCBUFUGCUFUE
    BCQUGUEBCPABCRSTUAUBUC $.
    $( [5-Aug-1993] $)

  $( Commutation of quantification and substitution variables. $)
  sb9 $p |- ( A. x [ x / y ] ph <-> A. y [ y / x ] ph ) $=
    ( wsb wal sb9i impbii ) ACBDBEABCDCEABCFACBFG $.
    $( [5-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Predicate calculus with distinct variables (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( This is a version of ~ ax-11o when the variables are distinct.  Axiom
       (C8) of [Monk2] p. 105.  See theorem ~ ax11v2 for the rederivation of
       ~ ax-11o from this theorem. $)
    ax11v $p |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) $=
      ( weq wal wi ax-1 ax-16 syl5 a1d ax11o pm2.61i ) BCDZBEZMAMAFZBEZFZFNQMAO
      NPAMGOBCHIJABCKL $.
      $( [5-Aug-1993] $)

    $( Two equivalent ways of expressing the proper substitution of ` y ` for
       ` x ` in ` ph ` , when ` x ` and ` y ` are distinct.  Theorem 6.2 of
       [Quine] p. 40.  The proof does not involve ~ df-sb . $)
    sb56 $p |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) $=
      ( weq wi wal hba1 ax11v ax-4 com12 impbid equsex ) ABCDZAEZBFZBCNBGMAOABC
      HOMANBIJKL $.
      $( [14-Apr-2008] $)

    $( Equivalence for substitution.  Compare Theorem 6.2 of [Quine] p. 40.
       Also proved as Lemmas 16 and 17 of [Tarski] p. 70. $)
    sb6 $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( weq wi wa wex wal wsb sb56 anbi2i df-sb ax-4 pm4.71ri 3bitr4i ) BCDZAEZ
      PAFBGZFQQBHZFABCISRSQABCJKABCLSQQBMNO $.
      $( [14-Apr-2008] $) $( [18-Aug-1993] $)

    $( Equivalence for substitution.  Similar to Theorem 6.1 of [Quine]
       p. 40. $)
    sb5 $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wi wal wa wex sb6 sb56 bitr4i ) ABCDBCEZAFBGMAHBIABCJABCKL $.
      $( [14-Apr-2008] $) $( [18-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    ax16i.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    ax16i.2 $e |- ( ps -> A. x ps ) $.
    $( Inference with ~ ax-16 as its conclusion, that doesn't require ~ ax-10 ,
       ~ ax-11 , or ~ ax-12 for its proof.  The hypotheses may be eliminable
       without one or more of these axioms in special cases. $)
    ax16i $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( weq wal wi ax-17 ax-8 cbv3 a4imv equid1 mpi syl syl5com alimd mpcom
      alimi biimpcd biimprd syl6com ) CDHZCIZCEHZEIZAACIZJUFEDHZEIZUHUEUJCEUEEK
      ZUJCKCEDLMUKECHZEIZUHUEUKUNUJUEECECDLNUEUJUMEULUEDCHZUJUMUECCHUOCOCDCLPUJ
      DEHZUOUMJUJEEHZUPEOZEDELPDECLQRSTUMUGEUMUQUGURECELPZUAQQAUHBEIUIAUGBEAEKZ
      UGABFUBSBAECGUTUMUGBAJUSUGABFUCQMUDQ $.
      $( [20-May-2008] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( Version of ~ ax16 that doesn't require ~ ax-10 or ~ ax-12 for its
       proof. $)
    ax16ALT $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( vz wsb sbequ12 ax-17 hbsb3 ax16i ) AABDEBCDABDFABDADGHI $.
      $( [17-May-2008] $)
  $}

  ${
    $d x ps $.
    a4v.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Specialization, using implicit substitition. $)
    a4v $p |- ( A. x ph -> ps ) $=
      ( weq biimpd a4imv ) ABCDCDFABEGH $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x ph $.
    a4imev.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Distinct-variable version of ~ a4ime . $)
    a4imev $p |- ( ph -> E. x ps ) $=
      ( ax-17 a4ime ) ABCDACFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    a4eiv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    a4eiv.2 $e |- ps $.
    $( Inference from existential specialization, using implicit
       substitition. $)
    a4eiv $p |- E. x ph $=
      ( wex weq biimprd a4imev ax-mp ) BACGFBACDCDHABEIJK $.
      $( [19-Aug-1993] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( A variable introduction law for equality.  Lemma 15 of [Monk2]
       p. 109. $)
    equvin $p |- ( x = y <-> E. z ( x = z /\ z = y ) ) $=
      ( weq wa wex equvini ax-17 equtr imp exlimi impbii ) ABDZACDZCBDZEZCFABCG
      PMCMCHNOMACBIJKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( A generalization of axiom ~ ax-16 .  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    a16g $p |- ( A. x x = y -> ( ph -> A. z ph ) ) $=
      ( weq wal aev ax-16 biidd dral1 biimprd sylsyld ) BCEBFDBEDFZAABFZADFZBCD
      DBGABCHMONAADBMAIJKL $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( A generalization of axiom ~ ax-16 . $)
    a16gb $p |- ( A. x x = y -> ( ph <-> A. z ph ) ) $=
      ( weq wal a16g ax-4 impbid1 ) BCEBFAADFABCDGADHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    albidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for universal quantifier (deduction rule). $)
    albidv $p |- ( ph -> ( A. x ps <-> A. x ch ) ) $=
      ( ax-17 albid ) ABCDADFEG $.
      $( [5-Aug-1993] $)

    $( Formula-building rule for existential quantifier (deduction rule). $)
    exbidv $p |- ( ph -> ( E. x ps <-> E. x ch ) ) $=
      ( ax-17 exbid ) ABCDADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2albidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 2 existential quantifiers (deduction rule). $)
    2albidv $p |- ( ph -> ( A. x A. y ps <-> A. x A. y ch ) ) $=
      ( wal albidv ) ABEGCEGDABCEFHH $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for 2 existential quantifiers (deduction rule). $)
    2exbidv $p |- ( ph -> ( E. x E. y ps <-> E. x E. y ch ) ) $=
      ( wex exbidv ) ABEGCEGDABCEFHH $.
      $( [1-May-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.
    3exbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 3 existential quantifiers (deduction rule). $)
    3exbidv $p |- ( ph -> ( E. x E. y E. z ps <-> E. x E. y E. z ch ) ) $=
      ( wex exbidv 2exbidv ) ABFHCFHDEABCFGIJ $.
      $( [1-May-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.  $d w ph $.
    4exbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 4 existential quantifiers (deduction rule). $)
    4exbidv $p |- ( ph ->
                     ( E. x E. y E. z E. w ps <-> E. x E. y E. z E. w ch ) ) $=
      ( wex 2exbidv ) ABGIFICGIFIDEABCFGHJJ $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.9 of [Margaris] p. 89. $)
    19.9v $p |- ( E. x ph <-> ph ) $=
      ( ax-17 19.9 ) ABABCD $.
      $( [21-May-2007] $) $( [28-May-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.21 of [Margaris] p. 90. _Notational
       convention_:  We sometimes suffix with "v" the label of a theorem
       eliminating a hypothesis such as ` ( ph -> A. x ph ) ` in ~ 19.21 via
       the use of distinct variable conditions combined with ~ ax-17 .
       Conversely, we sometimes suffix with "f" the label of a theorem
       introducing such a hypothesis to eliminate the need for the distinct
       variable condition; e.g. ~ euf derived from ~ df-eu .  The "f" stands
       for "not free in" which is less restrictive than "does not occur in." $)
    19.21v $p |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) $=
      ( ax-17 19.21 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    alrimiv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    alrimiv $p |- ( ph -> A. x ps ) $=
      ( ax-17 alrimi ) ABCACEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    alrimivv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    alrimivv $p |- ( ph -> A. x A. y ps ) $=
      ( wal alrimiv ) ABDFCABDEGG $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    alrimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.21 of [Margaris] p. 90. $)
    alrimdv $p |- ( ph -> ( ps -> A. x ch ) ) $=
      ( ax-17 alrimd ) ABCDADFBDFEG $.
      $( [10-Feb-1997] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    $( Quantification of two variables over a formula in which they do not
       occur.  (Contributed by Alan Sare, 12-Apr-2011.) $)
    2ax17 $p |- ( ph -> A. x A. y ph ) $=
      ( id alrimivv ) AABCADE $.
      $( [12-Apr-2011] $)
  $}

  ${
    $d x ph $.
    alimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.20 of [Margaris] p. 90. $)
    alimdv $p |- ( ph -> ( A. x ps -> A. x ch ) ) $=
      ( ax-17 alimd ) ABCDADFEG $.
      $( [3-Apr-1994] $)

    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    eximdv $p |- ( ph -> ( E. x ps -> E. x ch ) ) $=
      ( ax-17 eximd ) ABCDADFEG $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2alimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    2alimdv $p |- ( ph -> ( A. x A. y ps -> A. x A. y ch ) ) $=
      ( wal alimdv ) ABEGCEGDABCEFHH $.
      $( [27-Apr-2004] $)

    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    2eximdv $p |- ( ph -> ( E. x E. y ps -> E. x E. y ch ) ) $=
      ( wex eximdv ) ABEGCEGDABCEFHH $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.23 of [Margaris] p. 90. $)
    19.23v $p |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) $=
      ( ax-17 19.23 ) ABCBCDE $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    $( Theorem 19.23 of [Margaris] p. 90 extended to two variables. $)
    19.23vv $p |- ( A. x A. y ( ph -> ps ) <-> ( E. x E. y ph -> ps ) ) $=
      ( wi wal wex 19.23v albii bitri ) ABEDFZCFADGZBEZCFLCGBEKMCABDHILBCHJ $.
      $( [10-Aug-2004] $)
  $}

  ${
    $d x ps $.
    exlimiv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.

       This inference, along with our many variants such as ~ rexlimdv , is
       used to implement a metatheorem called "Rule C" that is given in many
       logic textbooks.  See, for example, Rule C in [Mendelson] p. 81, Rule C
       in [Margaris] p. 40, or Rule C in Hirst and Hirst's _A Primer for Logic
       and Proof_ p. 59 (PDF p. 65) at
       ~ http://www.mathsci.appstate.edu/~~jlh/primer/hirst.pdf .

       In informal proofs, the statement "Let ` C ` be an element such that..."
       almost always means an implicit application of Rule C.

       In essence, Rule C states that if we can prove that some element ` x `
       exists satisfying a wff, i.e. ` E. x ph ( x ) ` where ` ph ( x ) ` has
       ` x ` free, then we can use ` ph ( C ) ` as a hypothesis for the proof
       where ` C ` is a new (ficticious) constant not appearing previously in
       the proof, nor in any axioms used, nor in the theorem to be proved.  The
       purpose of Rule C is to get rid of the existential quantifier.

       We cannot do this in Metamath directly.  Instead, we use the original
       ` ph ` (containing ` x ` ) as an antecedent for the main part of the
       proof.  We eventually arrive at ` ( ph -> ps ) ` where ` ps ` is the
       theorem to be proved and does not contain ` x ` .  Then we apply
       ~ exlimiv to arrive at ` ( E. x ph -> ps ) ` .  Finally, we separately
       prove ` E. x ph ` and detach it with modus ponens ~ ax-mp to arrive at
       the final theorem ` ps ` . $)
    exlimiv $p |- ( E. x ph -> ps ) $=
      ( ax-17 exlimi ) ABCBCEDF $.
      $( [25-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    $d ph y $.  $d ps x $.
    $( Theorem *11.53 in [WhiteheadRussell] p. 164.  (Contributed by Andrew
       Salmon, 24-May-2011.) $)
    pm11.53 $p |- ( A. x A. y ( ph -> ps ) <-> ( E. x ph -> A. y ps ) ) $=
      ( wi wal wex 19.21v albii ax-17 hbal 19.23 bitri ) ABEDFZCFABDFZEZCFACGOE
      NPCABDHIAOCBCDBCJKLM $.
      $( [24-May-2011] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    exlimivv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90. $)
    exlimivv $p |- ( E. x E. y ph -> ps ) $=
      ( wex exlimiv ) ADFBCABDEGG $.
      $( [1-Aug-1995] $)
  $}

  ${
    $d x ch $.  $d x ph $.  $d y ch $.  $d y ph $.
    exlimdvv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    exlimdvv $p |- ( ph -> ( E. x E. y ps -> ch ) ) $=
      ( wex exlimdv ) ABEGCDABCEFHH $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ps $.
    $( Theorem 19.27 of [Margaris] p. 90. $)
    19.27v $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) $=
      ( ax-17 19.27 ) ABCBCDE $.
      $( [3-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( Theorem 19.28 of [Margaris] p. 90. $)
    19.28v $p |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) $=
      ( ax-17 19.28 ) ABCACDE $.
      $( [25-Mar-2004] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.36 of [Margaris] p. 90. $)
    19.36v $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) $=
      ( ax-17 19.36 ) ABCBCDE $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x ps $.
    19.36aiv.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.36 of [Margaris] p. 90. $)
    19.36aiv $p |- ( A. x ph -> ps ) $=
      ( ax-17 19.36i ) ABCBCEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ph $.
    $( Special case of ~ 19.12 where its converse holds.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    19.12vv $p |- ( E. x A. y ( ph -> ps ) <-> A. y E. x ( ph -> ps ) ) $=
      ( wal wex 19.21v exbii ax-17 hbal 19.36 19.36v albii 19.21 bitr2i 3bitri
      wi ) ABQZDEZCFABDEZQZCFACEZTQZRCFZDEZSUACABDGHATCBCDBCIJKUEUBBQZDEUCUDUFD
      ABCLMUBBDADCADIJNOP $.
      $( [11-Jul-2011] $) $( [18-Jul-2001] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.37 of [Margaris] p. 90. $)
    19.37v $p |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) $=
      ( ax-17 19.37 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    19.37aiv.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.37 of [Margaris] p. 90. $)
    19.37aiv $p |- ( ph -> E. x ps ) $=
      ( wi wex 19.37v mpbi ) ABECFABCFEDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.41 of [Margaris] p. 90. $)
    19.41v $p |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) $=
      ( ax-17 19.41 ) ABCBCDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 2 quantifiers. $)
    19.41vv $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x E. y ph /\ ps ) ) $=
      ( wa wex 19.41v exbii bitri ) ABEDFZCFADFZBEZCFKCFBEJLCABDGHKBCGI $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d x ps $.  $d y ps $.  $d z ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 3 quantifiers. $)
    19.41vvv $p |- ( E. x E. y E. z ( ph /\ ps ) <->
                     ( E. x E. y E. z ph /\ ps ) ) $=
      ( wa wex 19.41vv exbii 19.41v bitri ) ABFEGDGZCGAEGDGZBFZCGMCGBFLNCABDEHI
      MBCJK $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d w ps $.  $d x ps $.  $d y ps $.  $d z ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 4 quantifiers.  (Contributed by
       FL, 14-Jul-2007.) $)
    19.41vvvv $p |- ( E. w E. x E. y E. z ( ph /\ ps ) <->
                     ( E. w E. x E. y E. z ph /\ ps ) ) $=
      ( wa wex 19.41vvv exbii 19.41v bitri ) ABGEHDHCHZFHAEHDHCHZBGZFHNFHBGMOFA
      BCDEIJNBFKL $.
      $( [14-Jul-2007] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.42 of [Margaris] p. 90. $)
    19.42v $p |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) $=
      ( ax-17 19.42 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y ph $.
    $( Distribution of existential quantifiers. $)
    exdistr $p |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) $=
      ( wa wex 19.42v exbii ) ABEDFABDFECABDGH $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    $( Theorem 19.42 of [Margaris] p. 90 with 2 quantifiers. $)
    19.42vv $p |- ( E. x E. y ( ph /\ ps ) <-> ( ph /\ E. x E. y ps ) ) $=
      ( wa wex exdistr 19.42v bitri ) ABEDFCFABDFZECFAJCFEABCDGAJCHI $.
      $( [16-Mar-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.
    $( Theorem 19.42 of [Margaris] p. 90 with 3 quantifiers. $)
    19.42vvv $p |- ( E. x E. y E. z ( ph /\ ps )
                       <-> ( ph /\ E. x E. y E. z ps ) ) $=
      ( wa wex 19.42vv exbii 19.42v bitri ) ABFEGDGZCGABEGDGZFZCGAMCGFLNCABDEHI
      AMCJK $.
      $( [21-Sep-2011] $)
  $}

  ${
    $d y ph $.  $d z ph $.
    $( Distribution of existential quantifiers. $)
    exdistr2 $p |- ( E. x E. y E. z ( ph /\ ps ) <->
                   E. x ( ph /\ E. y E. z ps ) ) $=
      ( wa wex 19.42vv exbii ) ABFEGDGABEGDGFCABDEHI $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d z ps $.
    $( Distribution of existential quantifiers.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3exdistr $p |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <->
                E. x ( ph /\ E. y ( ps /\ E. z ch ) ) ) $=
      ( w3a wex wa 3anass 2exbii 19.42vv exdistr anbi2i 3bitri exbii ) ABCGZFHE
      HZABCFHIEHZIZDRABCIZIZFHEHAUAFHEHZITQUBEFABCJKAUAEFLUCSABCEFMNOP $.
      $( [25-May-2011] $) $( [9-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d w ph $.  $d z ps $.  $d w ps $.  $d w ch $.
    $( Distribution of existential quantifiers. $)
    4exdistr $p |- ( E. x E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
                E. x ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) $=
      ( wa wex anass exbii 19.42v anbi2i 3bitri bitri ) ABICDIZIZHJZGJZFJZABCDH
      JIZGJIZFJIZEUAAUCIZFJUDTUEFTABUBIZIZGJAUFGJZIUESUGGSABQIZIZHJZUGRUJHABQKL
      UKAUIHJZIABQHJZIZIUGAUIHMULUNABQHMNUNUFAUMUBBCDHMNNOPLAUFGMUHUCABUBGMNOLA
      UCFMPL $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvalv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvalv $p |- ( A. x ph <-> A. y ps ) $=
      ( ax-17 cbval ) ABCDADFBCFEG $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvexv $p |- ( E. x ph <-> E. y ps ) $=
      ( ax-17 cbvex ) ABCDADFBCFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y x $.  $d y z $.  $d w x $.  $d w z $.
    cbval2.1 $e |- ( ph -> A. z ph ) $.
    cbval2.2 $e |- ( ph -> A. w ph ) $.
    cbval2.3 $e |- ( ps -> A. x ps ) $.
    cbval2.4 $e |- ( ps -> A. y ps ) $.
    cbval2.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbval2 $p |- ( A. x A. y ph <-> A. z A. w ps ) $=
      ( wal hbal weq wb wa ax-17 hban cbval 19.28v expcom pm5.32d 3bitr3i mpbir
      wi pm5.32 ) ADLZBFLZCEAEDGMBCFIMCENZUGUHOUEUIUGPZUIUHPZOUIAPZDLUIBPZFLUJU
      KULUMDFUIAFUIFQHRUIBDUIDQJRDFNZUIABUIUNABOKUAUBSUIADTUIBFTUCUIUGUHUFUDS
      $.
      $( [22-Dec-2003] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex2 $p |- ( E. x E. y ph <-> E. z E. w ps ) $=
      ( wex hbex weq wb wa ax-17 hban cbvex 19.42v expcom pm5.32d 3bitr3i mpbir
      wi pm5.32 ) ADLZBFLZCEAEDGMBCFIMCENZUGUHOUEUIUGPZUIUHPZOUIAPZDLUIBPZFLUJU
      KULUMDFUIAFUIFQHRUIBDUIDQJRDFNZUIABUIUNABOKUAUBSUIADTUIBFTUCUIUGUHUFUDS
      $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d z w ph $.  $d x y ps $.  $d x w $.  $d z y $.
    cbval2v.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbval2v $p |- ( A. x A. y ph <-> A. z A. w ps ) $=
      ( ax-17 cbval2 ) ABCDEFAEHAFHBCHBDHGI $.
      $( [4-Feb-2005] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex2v $p |- ( E. x E. y ph <-> E. z E. w ps ) $=
      ( ax-17 cbvex2 ) ABCDEFAEHAFHBCHBDHGI $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    cbvald.1 $e |- ( ph -> A. y ph ) $.
    cbvald.2 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbvald.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Deduction used to change bound variables, using implicit substitition,
       particularly useful in conjunction with ~ dvelim .  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    cbvald $p |- ( ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal wb ax-17 hbal a17d cbv2 3syl ) AAEIZPDIBDICEIJFADEADKLABCDEGACDMHNO
      $.
      $( [25-May-2011] $) $( [2-Jan-2002] $)

    $( Deduction used to change bound variables, using implicit substitition,
       particularly useful in conjunction with ~ dvelim . $)
    cbvexd $p |- ( ph -> ( E. x ps <-> E. y ch ) ) $=
      ( wn wal wex hbnd weq wb notbi syl6ib cbvald notbid df-ex 3bitr4g ) ABIZD
      JZICIZEJZIBDKCEKAUBUDAUAUCDEFABEFGLADEMBCNUAUCNHBCOPQRBDSCEST $.
      $( [2-Jan-2002] $)
  $}

  ${
    $v f $.
    $v g $.
    $( Define temporary individual variables. $)
    cbvex4v.vf $f set f $.
    cbvex4v.vg $f set g $.
    $d w z ch $.  $d u v ph $.  $d x y ps $.  $d f g ps $.  $d f w $.
    $d g z $.  $d u v w x y z $.
    cbvex4v.1 $e |- ( ( x = v /\ y = u ) -> ( ph <-> ps ) ) $.
    cbvex4v.2 $e |- ( ( z = f /\ w = g ) -> ( ps <-> ch ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex4v $p |- ( E. x E. y E. z E. w ph <-> E. v E. u E. f E. g ch ) $=
      ( wex weq wa 2exbidv cbvex2v 2exbii bitri ) AGNFNZENDNBGNFNZINHNCKNJNZINH
      NUAUBDEHIDHOEIOPABFGLQRUBUCHIBCFGJKMRST $.
      $( [26-Jul-1995] $)
  $}

  ${
    eean.1 $e |- ( ph -> A. y ph ) $.
    eean.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers. $)
    eean $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) $=
      ( wa wex 19.42 exbii hbex 19.41 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    $( Rearrange existential quantifiers. $)
    eeanv $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) $=
      ( ax-17 eean ) ABCDADEBCEF $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d x z ps $.  $d x y ch $.
    $( Rearrange existential quantifiers.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    eeeanv $p |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <->
                 ( E. x ph /\ E. y ps /\ E. z ch ) ) $=
      ( w3a wex wa df-3an 3exbii eeanv exbii anbi1i 19.41v 3bitr4i 3bitri ) ABC
      GZFHEHDHABIZCIZFHEHZDHSEHZCFHZIZDHZADHZBEHZUCGZRTDEFABCJKUAUDDSCEFLMUBDHZ
      UCIUFUGIZUCIUEUHUIUJUCABDELNUBUCDOUFUGUCJPQ $.
      $( [25-May-2011] $) $( [26-Jul-1995] $)
  $}

  ${
    $d z ph $.  $d w ph $.  $d x ps $.  $d y ps $.  $d y z $.  $d w x $.
    $( Rearrange existential quantifiers. $)
    ee4anv $p |- ( E. x E. y E. z E. w ( ph /\ ps ) <->
                  ( E. x E. y ph /\ E. z E. w ps ) ) $=
      ( wa wex excom exbii eeanv 2exbii 3bitri ) ABGFHZEHDHZCHNDHZEHZCHADHZBFHZ
      GZEHCHRCHSEHGOQCNDEIJPTCEABDFKLRSCEKM $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ph $.
    nexdv.1 $e |- ( ph -> -. ps ) $.
    $( Deduction for generalization rule for negated wff. $)
    nexdv $p |- ( ph -> -. E. x ps ) $=
      ( ax-17 nexd ) ABCACEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    chv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv.2 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem. $)
    chvarv $p |- ps $=
      ( a4v mpg ) ABCABCDEGFH $.
      $( [20-Apr-1994] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( When the class variables in definition ~ df-clel are replaced with set
       variables, this theorem of predicate calculus is the result.  This
       theorem provides part of the justification for the consistency of that
       definition, which "overloads" the set variables in ~ wel with the class
       variables in ~ wcel . $)
    cleljust $p |- ( x e. y <-> E. z ( z = x /\ z e. y ) ) $=
      ( weq wel wa wex ax-17 elequ1 equsex bicomi ) CADCBEZFCGABEZLMCAMCHCABIJK
      $.
      $( [28-Jan-2004] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        More substitution theorems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( The theorems in this section make use of the $d statement. $)

  ${
    $d y z $.  $d x y $.
    $( Lemma for ~ equsb3 .  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    equsb3lem $p |- ( [ x / y ] y = z <-> x = z ) $=
      ( cv wceq ax-17 equequ1 sbie ) BDCDZEADIEZBAJBFBACGH $.
      $( [14-Jun-2011] $) $( [4-Dec-2005] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic wff.  (Contributed by Raph Levien and
       FL, 4-Dec-2005.) $)
    equsb3 $p |- ( [ x / y ] y = z <-> x = z ) $=
      ( vw weq wsb equsb3lem sbbii ax-17 sbco2 3bitr3i ) BCEZBDFZDAFDCEZDAFLBAF
      ACEMNDADBCGHLBADLDIJADCGK $.
      $( [4-Dec-2005] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic membership wff.  (The proof was
       shortened by Andrew Salmon, 14-Jun-2011.) $)
    elsb3 $p |- ( [ x / y ] y e. z <-> x e. z ) $=
      ( vw wel wsb ax-17 elequ1 sbie sbbii sbco2 bitr3i wb weq sbimi ax-mp sbbi
      equsb1 mpbi sbf 3bitri ) BCEZBAFZDCEZDAFZACEZDAFZUFUCUDDBFZBAFUEUHUBBAUDU
      BDBUBDGDBCHIJUDDABUDBGKLUDUFMZDAFZUEUGMDANZDAFUJDARUKUIDADACHOPUDUFDAQSUF
      DAUFDGTUA $.
      $( [14-Jun-2011] $) $( [7-Nov-2006] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic membership wff.  (Contributed by
       Rodolfo Medina, 3-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    elsb4 $p |- ( [ x / y ] z e. y <-> z e. x ) $=
      ( vw wel wsb ax-17 elequ2 sbie sbbii sbco2 bitr3i wb weq sbimi ax-mp sbbi
      equsb1 mpbi sbf 3bitri ) CBEZBAFZCDEZDAFZCAEZDAFZUFUCUDDBFZBAFUEUHUBBAUDU
      BDBUBDGDBCHIJUDDABUDBGKLUDUFMZDAFZUEUGMDANZDAFUJDARUKUIDADACHOPUDUFDAQSUF
      DAUFDGTUA $.
      $( [14-Jun-2011] $) $( [3-Apr-2010] $)
  $}

  ${
    $d x y $.
    $( ` x ` is not free in ` [ y / x ] ph ` when ` x ` and ` y ` are
       distinct. $)
    hbs1 $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( weq wal wsb wi ax-16 hbsb2 pm2.61i ) BCDBEABCFZKBEGKBCHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y ph $.
    $( Two ways of expressing " ` x ` is (effectively) not free in ` ph ` ." $)
    sbhb $p |- ( ( ph -> A. x ph ) <-> A. y ( ph -> [ y / x ] ph ) ) $=
      ( wal wi wsb ax-17 sb8 imbi2i 19.21v bitr4i ) AABDZEAABCFZCDZEAMECDLNAABC
      ACGHIAMCJK $.
      $( [29-May-2009] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    $( Two ways of expressing " ` x ` is (effectively) not free in ` ph ` ."
       (Contributed by G&eacute;rard Lang, 14-Nov-2013.) $)
    sbhb2 $p |- ( A. x ( ph -> A. x ph )
           <-> A. y A. z ( [ y / x ] ph <-> [ z / x ] ph ) ) $=
      ( cv wsbc wb wal wi 2albiim sbhb albii alcom bitri ax-17 sb8 sblim 3bitri
      wa hbs1 anbi12i anidm 3bitr2ri ) ABCEZFZABDEZFZGDHCHUEUGIZDHCHZUGUEIZDHZC
      HZSAABHIZBHZUNSUNUEUGCDJUNUIUNULUNAUGIZBHZDHZUHCHZDHUIUNUODHZBHUQUMUSBABD
      KLUOBDMNUPURDUPUOBUDFZCHURUOBCUOCOPUTUHCAUGBCABDTQLNLUHDCMRUNAUEIZCHZBHVA
      BHZCHULUMVBBABCKLVABCMVCUKCVCVABUFFZDHUKVABDVADOPVDUJDAUEBDABCTQLNLRUAUNU
      BUC $.
      $( [14-Nov-2013] $)
  $}

  ${
    $d y z $.
    hbsb.1 $e |- ( ph -> A. z ph ) $.
    $( If ` z ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` when
       ` y ` and ` z ` are distinct. $)
    hbsb $p |- ( [ y / x ] ph -> A. z [ y / x ] ph ) $=
      ( weq wal wsb wi ax-16 hbsb4 pm2.61i ) DCFDGABCHZMDGIMDCJABCDEKL $.
      $( [12-Aug-1993] $)
  $}

  ${
    $d y z $.
    hbsbd.1 $e |- ( ph -> A. x ph ) $.
    hbsbd.2 $e |- ( ph -> A. z ph ) $.
    hbsbd.3 $e |- ( ph -> ( ps -> A. z ps ) ) $.
    $( Deduction version of ~ hbsb . $)
    hbsbd $p |- ( ph -> ( [ y / x ] ps -> A. z [ y / x ] ps ) ) $=
      ( cv wceq wal wsbc wi wn alrimi 2alimi hbsb4t 3syl ax-16 pm2.61d2 ) AEIDI
      ZJEKZBCUALZUCEKMZAAEKZCKBBEKMZEKCKUBNUDMAUECFGOAUFCEHPBCDEQRUCEDST $.
      $( [15-Feb-2013] $)
  $}

  ${
    $d x y z $.  $d w y $.
    $( Equivalence for double substitution. $)
    2sb5 $p |- ( [ z / x ] [ w / y ] ph <->
               E. x E. y ( ( x = z /\ y = w ) /\ ph ) ) $=
      ( wsb weq wa wex sb5 19.42v anass exbii anbi2i 3bitr4ri bitri ) ACEFZBDFB
      DGZQHZBIRCEGZHAHZCIZBIQBDJSUBBRTAHZHZCIRUCCIZHUBSRUCCKUAUDCRTALMQUERACEJN
      OMP $.
      $( [3-Feb-2005] $)

    $( Equivalence for double substitution. $)
    2sb6 $p |- ( [ z / x ] [ w / y ] ph <->
               A. x A. y ( ( x = z /\ y = w ) -> ph ) ) $=
      ( wsb weq wi wal wa sb6 19.21v impexp albii imbi2i 3bitr4ri bitri ) ACEFZ
      BDFBDGZRHZBISCEGZJAHZCIZBIRBDKTUCBSUAAHZHZCISUDCIZHUCTSUDCLUBUECSUAAMNRUF
      SACEKOPNQ $.
      $( [3-Feb-2005] $)
  $}

  ${
    $d x z $.  $d x w $.  $d y z $.
    $( Commutativity law for substitution.  Used in proof of Theorem 9.7 of
       [Megill] p. 449 (p. 16 of the preprint). $)
    sbcom2 $p |- ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) $=
      ( weq wal wsb wb wn wi albii 19.21v sb4b imbi2d albidv hbae sbequ12 sbbid
      a4s wa alcom bi2.04 bitri 3bitr3i a1i sylan9bbr sylan9bb 3bitr4d pm2.61ii
      ex bitr3d ) BCFZBGZDEFZDGZABCHZDEHZADEHZBCHZIZUNJZUPJZVAVBVCUAZUOUMAKZBGZ
      KZDGZUMUOAKZDGZKZBGZURUTVHVLIVDUMVIKZBGZDGVMDGZBGVHVLVMDBUBVNVGDVNUOVEKZB
      GVGVMVPBUMUOAUCLUOVEBMUDLVOVKBUMVIDMLUEUFVCURUOUQKZDGVBVHUQDENVBVQVGDVBUQ
      VFUOABCNOPUGVBUTUMUSKZBGVCVLUSBCNVCVRVKBVCUSVJUMADENOPUHUIUKUNUSURUTUNAUQ
      DEBCDQUMAUQIBABCRTSUMUSUTIBUSBCRTULUPUQURUTUOUQURIDUQDERTUPAUSBCDEBQUOAUS
      IDADERTSULUJ $.
      $( [27-May-1997] $)
  $}

  ${
    $d ph x y z $.  $d w x z $.
    $( Theorem *11.07 in [WhiteheadRussell] p. 159.  (Contributed by Andrew
       Salmon, 17-Jun-2011.) $)
    pm11.07 $p |- ( [ w / x ] [ y / z ] ph <-> [ y / x ] [ w / z ] ph ) $=
      ( cv wceq wa wex wsbc a9e pm3.2i 2th eeanv 3bitr4i anbi1i 19.41vv 2sb5 )
      BFZEFZGZDFZCFZGZHZAHDIBIZSUCGZUBTGZHZAHDIBIZADUCJBTJADTJBUCJUEDIBIZAHUIDI
      BIZAHUFUJUKULAUABIZUDDIZHZUGBIZUHDIZHZUKULUOURUMUNBEKDCKLUPUQBCKDEKLMUAUD
      BDNUGUHBDNOPUEABDQUIABDQOABDECRABDCERO $.
      $( [17-Jun-2011] $)
  $}

  ${
    $d x y $.
    $( Equivalence for substitution. $)
    sb6a $p |- ( [ y / x ] ph <-> A. x ( x = y -> [ x / y ] ph ) ) $=
      ( wsb weq wi wal sb6 wb sbequ12 equcoms pm5.74i albii bitri ) ABCDBCEZAFZ
      BGOACBDZFZBGABCHPRBOAQAQICBACBJKLMN $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x w $.  $d y z $.  $d z w $.
    2sb5rf.1 $e |- ( ph -> A. z ph ) $.
    2sb5rf.2 $e |- ( ph -> A. w ph ) $.
    $( Reversed double substitution. $)
    2sb5rf $p |- ( ph <->
                E. z E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) $=
      ( weq wsb wex sb5rf 19.42v sbcom2 anbi2i anass bitri exbii hbsb 3bitr4ri
      wa ) ADBHZABDIZTZDJUAECHZTZACEIBDIZTZEJZDJABDFKUCUHDUAUDUBCEIZTZTZEJUAUJE
      JZTUHUCUAUJELUGUKEUGUEUITUKUFUIUEACEBDMNUAUDUIOPQUBULUAUBCEABDEGRKNSQP $.
      $( [3-Feb-2005] $)

    $( Reversed double substitution. $)
    2sb6rf $p |- ( ph <->
                A. z A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) $=
      ( weq wsb wi wal wa sb6rf 19.21v sbcom2 imbi2i impexp bitri albii hbsb
      3bitr4ri ) ADBHZABDIZJZDKUBECHZLZACEIBDIZJZEKZDKABDFMUDUIDUBUEUCCEIZJZJZE
      KUBUKEKZJUIUDUBUKENUHULEUHUFUJJULUGUJUFACEBDOPUBUEUJQRSUCUMUBUCCEABDEGTMP
      UASR $.
      $( [3-Feb-2005] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( An alternate definition of proper substitution ~ df-sb .  By introducing
       a dummy variable ` z ` in the definiens, we are able to eliminate any
       distinct variable restrictions among the variables ` x ` , ` y ` , and
       ` ph ` of the definiendum.  No distinct variable conflicts arise because
       ` z ` effectively insulates ` x ` from ` y ` .  To achieve this, we use
       a chain of two substitutions in the form of ~ sb5 , first ` z ` for
       ` x ` then ` y ` for ` z ` .  Compare Definition 2.1'' of [Quine] p. 17,
       which is obtained from this theorem by applying ~ df-clab .  Theorem
       ~ sb7f provides a version where ` ph ` and ` z ` don't have to be
       distinct. $)
    dfsb7 $p |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) $=
      ( wsb weq wa wex sb5 sbbii ax-17 sbco2 3bitr3i ) ABDEZDCEBDFAGBHZDCEABCED
      CFOGDHNODCABDIJABCDADKLODCIM $.
      $( [28-Jan-2004] $)
  $}

  ${
    $d w x z $.  $d w y z $.  $d w ph $.
    sb7f.1 $e |- ( ph -> A. z ph ) $.
    $( This version of ~ dfsb7 does not require that ` ph ` and ` z ` be
       distinct.  This permits it to be used as a definition for substitution
       in a formalization that omits the logically redundant axiom ~ ax-17 i.e.
       that doesn't have the concept of a variable not occurring in a wff.
       ( ~ df-sb is also suitable, but its mixing of free and bound variables
       is distasteful to some logicians.)  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    sb7f $p |- ( [ y / x ] ph <->
               E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) $=
      ( wsb weq wa wex sb5 sbbii sbco2 3bitr3i ) ABDFZDCFBDGAHBIZDCFABCFDCGOHDI
      NODCABDJKABCDELODCJM $.
      $( [25-May-2011] $) $( [26-Jul-2006] $)
  $}

  ${
    $d x y $.
    sb10f.1 $e |- ( ph -> A. x ph ) $.
    $( Hao Wang's identity axiom P6 in Irving Copi, _Symbolic Logic_ (5th ed.,
       1979), p. 328.  In traditional predicate calculus, this is a sole axiom
       for identity from which the usual ones can be derived. $)
    sb10f $p |- ( [ y / z ] ph <-> E. x ( x = y /\ [ x / z ] ph ) ) $=
      ( weq wsb wa wex hbsb sbequ equsex bicomi ) BCFADBGZHBIADCGZNOBCADCBEJABC
      DKLM $.
      $( [9-May-2005] $)
  $}

  ${
    $d x ph $.
    $( An identity law for substitution.  Used in proof of Theorem 9.7 of
       [Megill] p. 449 (p. 16 of the preprint). $)
    sbid2v $p |- ( [ y / x ] [ x / y ] ph <-> ph ) $=
      ( ax-17 sbid2 ) ABCABDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x ph $.
    $( Elimination of substitution. $)
    sbelx $p |- ( ph <-> E. x ( x = y /\ [ x / y ] ph ) ) $=
      ( wsb weq wa wex sbid2v sb5 bitr3i ) AACBDZBCDBCEKFBGABCHKBCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( Note:  A more general case could also be proved with
       "$d x z $.  $d y w $.  $d x ph $.  $d y ph $.", but with more
       difficulty. $)
    $d x y z $.  $d w y $.  $d x y ph $.
    $( Elimination of double substitution. $)
    sbel2x $p |- ( ph <-> E. x E. y ( ( x = z /\ y = w ) /\
                     [ y / w ] [ x / z ] ph ) ) $=
      ( weq wsb wa wex sbelx anbi2i exbii exdistr 3bitr4i anass 2exbii bitr4i )
      ABDFZCEFZADBGZECGZHZHZCIBIZRSHUAHZCIBIRTHZBIRUBCIZHZBIAUDUFUHBTUGRTCEJKLA
      BDJRUBBCMNUEUCBCRSUAOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( A theorem used in elimination of disjoint variable restriction on ` x `
       and ` y ` by replacing it with a distinctor ` -. A. x x = z ` . $)
    sbal1 $p |- ( -. A. x x = z ->
             ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) $=
      ( weq wal wn wsb wb wi sbequ12 a4s dral2 bitr3d a1d wa hba1 al2imi hbnaes
      syl6 hbsb4 ax-4 sbimi alimi adantl sb4 ax-7 dveeq2 alim sb2 sylan9 impbid
      syl9 ex pm2.61i ) CDEZCFZBDEBFGZABFZCDHZACDHZBFZIZJUQVCURUQUSUTVBUPUSUTIC
      USCDKLAVACDBUPAVAICACDKLMNOUQGZURVCVDURPUTVBURUTVBJVDURUTUTBFVBUSCDBABQUA
      UTVABUSACDABUBUCUDTUEVDVBUPAJZBFZCFZURUTVDVBVECFZBFZVGVBVIJCDBVDVAVHBACDU
      FRSVEBCUGTVGUTJBDCURCFVGUPUSJZCFUTURVFVJCURUPUPBFVFUSBDCUHUPABUIUMRUSCDUJ
      TSUKULUNUO $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Move universal quantifier in and out of substitution. $)
    sbal $p |- ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) $=
      ( weq wal wsb wb a16gb sbimi sbequ5 sbbi 3imtr3i bitr3d sbal1 pm2.61i ) B
      DEBFZABFZCDGZACDGZBFZHQTSUAQCDGARHZCDGQTSHQUBCDABDBIJBDCDKARCDLMTBDBINABC
      DOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Move existential quantifier in and out of substitution. $)
    sbex $p |- ( [ z / y ] E. x ph <-> E. x [ z / y ] ph ) $=
      ( wn wal wsb wex sbn sbal albii bitri xchbinx df-ex sbbii 3bitr4i ) AEZBF
      ZEZCDGZACDGZEZBFZEABHZCDGUABHTRCDGZUCRCDIUEQCDGZBFUCQBCDJUFUBBACDIKLMUDSC
      DABNOUABNP $.
      $( [27-Sep-2003] $)
  $}

  ${
    $d x z $.  $d y z $.
    sbalv.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Quantify with new variable inside substitution. $)
    sbalv $p |- ( [ y / x ] A. z ph <-> A. z ps ) $=
      ( wal wsb sbal albii bitri ) AEGCDHACDHZEGBEGAECDILBEFJK $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( An equivalent expression for existence. $)
    exsb $p |- ( E. x ph <-> E. y A. x ( x = y -> ph ) ) $=
      ( wex wsb weq wi wal ax-17 sb8e sb6 exbii bitri ) ABDABCEZCDBCFAGBHZCDABC
      ACIJNOCABCKLM $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d x y z $.  $d y w $.  $d z w ph $.
    $( An equivalent expression for double existence. $)
    2exsb $p |- ( E. x E. y ph <->
                  E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) $=
      ( wex weq wi wal exsb exbii excom bitri impexp albii 19.21v bitr2i 3bitri
      wa ) ACFZBFZCEGZAHZCIZBFZEFZBDGZUBSAHZCIZBIZDFZEFUJEFDFUAUDEFZBFUFTULBACE
      JKUDBELMUEUKEUEUGUDHZBIZDFUKUDBDJUNUJDUMUIBUIUGUCHZCIUMUHUOCUGUBANOUGUCCP
      QOKMKUJEDLR $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d z ps $.
    dvelim.1 $e |- ( ph -> A. x ph ) $.
    dvelim.2 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( This theorem can be used to eliminate a distinct variable restriction on
       ` x ` and ` z ` and replace it with the "distinctor" ` -. A. x x = y `
       as an antecedent. ` ph ` normally has ` z ` free and can be read
       ` ph ( z ) ` , and ` ps ` substitutes ` y ` for ` z ` and can be read
       ` ph ( y ) ` .  We don't require that ` x ` and ` y ` be distinct: if
       they aren't, the distinctor will become false (in multiple-element
       domains of discourse) and "protect" the consequent.

       To obtain a closed-theorem form of this inference, prefix the hypotheses
       with ` A. x A. z ` , conjoin them, and apply ~ dvelimdf .

       Other variants of this theorem are ~ dvelimf (with no distinct variable
       restrictions), ~ dvelimfALT (that avoids ~ ax-11 ), and ~ dvelimALT
       (that avoids ~ ax-10 ). $)
    dvelim $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( ax-17 dvelimf ) ABCDEFBEHGI $.
      $( [23-Nov-1994] $)
  $}

  ${
    $d z ps $.  $d x z $.  $d y z $.
    dvelimALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimALT.2 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Version of ~ dvelim that doesn't use ~ ax-10 .  (See ~ dvelimfALT for a
       version that doesn't use ~ ax-11 .) $)
    dvelimALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi ax-17 hba1 ax16ALT a1i hbimd a1d wa hbn hban ax-12 imp ex
      pm2.61i hbald equsal albii 3imtr3g ) CDHZCIZJZEDHZAKZEIZUNCIBBCIUKUMCEUKE
      LCEHZCIZUKUMUMCIKZKUPUQUKUPULACUOCMZULCENAACIKZUPFOPQUPJZUKUQUTUKRZULACUT
      UKCUPCURSUJCUICMSTUTUKULULCIKEDCUAUBUSVAFOPUCUDUEABEDBELGUFZUNBCVBUGUH $.
      $( [17-May-2008] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveeq1 $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax-17 equequ1 dvelim ) DCEZBCEABDIAFDBCGH $.
      $( [2-Jan-2002] $)

    $( Version of ~ dveeq1 using ~ ax-16 instead of ~ ax-17 . $)
    dveeq1ALT $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax17eq equequ1 dvelimfALT ) DCEBCEABDDCAFBCDFDBCGH $.
      $( [29-Apr-2008] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveel1 $p |- ( -. A. x x = y -> ( y e. z -> A. x y e. z ) ) $=
      ( vw wel ax-17 elequ1 dvelimfALT ) DCEZBCEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveel2 $p |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) $=
      ( vw wel ax-17 elequ2 dvelimfALT ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d z y $.  $d z x $.
    $( Move quantifier in and out of substitution. $)
    sbal2 $p |- ( -. A. x x = y ->
             ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) $=
      ( weq wal wn wi wsb alcom hbnae dveeq1 alimi hbnaes 19.21t albid syl5rbbr
      wb syl sb6 albii 3bitr4g ) BCEBFGZCDEZABFZHZCFZUDAHZCFZBFZUECDIACDIZBFUJU
      HBFZCFUCUGUHCBJUCULUFCBCCKUCUDUDBFHZBFZULUFRUNBCBUCUMBBCDLMNUDABOSPQUECDT
      UKUIBACDTUAUB $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d w y $.  $d w z $.  $d w x $.  $( ` w ` is dummy. $)
    $( Axiom ~ ax-15 is redundant if we assume ~ ax-17 .  Remark 9.6 in
       [Megill] p. 448 (p. 16 of the preprint), regarding axiom scheme C14'.

       Note that ` w ` is a dummy variable introduced in the proof.  On the web
       page, it is implicitly assumed to be distinct from all other variables.
       (This is made explicit in the database file set.mm).  Its purpose is to
       satisfy the distinct variable requirements of ~ dveel2 and ~ ax-17 .  By
       the end of the proof it has vanished, and the final theorem has no
       distinct variable requirements.

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-15 below so that theorems needing ~ ax-15 can be more easily
       identified. $)
    ax15 $p |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x e. y -> A. z x e. y ) ) ) $=
      ( vw weq wal wn wi hbn1 dveel2 hbim1 ax-17 elequ1 imbi2d dvelimfALT 19.21
      wel syl6ib pm2.86d ) CAECFGZCBEZCFGZABQZUCCFZTUBUCHZUECFUBUDHUBDBQZHUECAD
      UBUFCUACIZCBDJKUEDLDAEUFUCUBDABMNOUBUCCUGPRS $.
      $( [29-Jun-1995] $)
  $}

  $( Axiom of Quantifier Introduction.  One of the equality and substitution
     axioms for a non-logical predicate in our predicate calculus with
     equality.  Axiom scheme C14' in [Megill] p. 448 (p. 16 of the preprint).
     It is redundant if we include ~ ax-17 ; see theorem ~ ax15 .  Alternately,
     ~ ax-17 becomes unnecessary in principle with this axiom, but we lose the
     more powerful metalogic afforded by ~ ax-17 .  We retain ~ ax-15 here to
     provide completeness for systems with the simpler metalogic that results
     from omitting ~ ax-17 , which might be easier to study for some
     theoretical purposes. $)
  ax-15 $a |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x e. y -> A. z x e. y ) ) ) $.

  ${
    $d x z $.  $d y z $.
    $( Theorem to add distinct quantifier to atomic formula.  This theorem
       demonstrates the induction basis for ~ ax-17 considered as a
       metatheorem.) $)
    ax17el $p |- ( x e. y -> A. z x e. y ) $=
      ( weq wal wel wi ax-15 ax-16 pm2.61ii ) CADCECBDCEABFZKCEGABCHKCAIKCBIJ
      $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Version of ~ dveel2 using ~ ax-16 instead of ~ ax-17 . $)
    dveel2ALT $p |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) $=
      ( vw wel ax17el elequ2 dvelimfALT ) CDECBEABDCDAFCBDFDBCGH $.
      $( [10-May-2008] $)
  $}

  ${
    $d x u v $.  $d y u v $.  $d z u v $.  $d w u v $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  Atomic formula for equality predicate. $)
    ax11eq $p |- ( -. A. x x = y ->
               ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) $=
      ( vu vv weq wal wn wi wa 19.26 a1i wb equequ1 equequ2 a4s imbi2d imbi12d
      exp32 equid ax-gen sylan9bb hba1 albid adantr mpbii sylbir ad2antll ax-12
      impcom adantrr equtrr alimi syl6 sylbid dral2 ad2antrr mpbid imp biimprcd
      adantll adantlr ad2antlr wex a9e ax-1 alrimiv adantl im2anan9 syl exlimdv
      dveeq2 sylibr mpi a1d 4cases ) ACGZAHZADGZAHZABGZAHIZWBCDGZWBWDJZAHZJZJZJ
      ZVSWAKVRVTKZAHZWIVRVTALWKWCWBWGWKWCWBKZKAAGZWBWMJZAHZJZWGWOWMWNAWMWBAUAMU
      BMWKWPWGNWLWKWMWDWOWFWJWMWDNAVRWMCAGZVTWDACAOADCPZUCQZWKWNWEAWJAUDWKWMWDW
      BWSRUESUFUGTUHVSWAIZKZWCWBWGXAWLKVTWBVTJZAHZJZWGWTWLXDVSWTWLKZVTBDGZXCWBV
      TXFNWTWCABDOUIXEXFXFAHZXCWTWCXFXGJZWBWCWTXHBDAUJUKULXFXBABDAUMUNUOUPVBVSX
      DWGNWTWLVSVTWDXCWFVRVTWDNAACDOQZXBWEACAVSVTWDWBXIRUQSURUSTVSIZWAKZWCWBWGX
      KWLKWQWBWQJZAHZJZWGXJWLXNWAXJWLKZWQCBGZXMWBWQXPNXJWCABCPZUIXOXPXPAHZXMXJW
      CXPXRJZWBXJWCXSCBAUJUTULXPXLAWBWQXPXQVAUNUOUPVCWAXNWGNXJWLWAWQWDXMWFVTWQW
      DNAWRQZXLWEADAWAWQWDWBXTRUQSVDUSTXJWTKZWHWCYAWGWBYAEDGZEVEWGEDVFYAYBWGEYA
      FCGZFVEYBWGJZFCVFYAYCYDFYAYCYBWGYAYCYBKZKZFEGZWBYGJZAHZJWGYGYHAYGWBVGVHYF
      YGWDYIWFYEYGWDNZYAYCYGCEGYBWDFCEOEDCPUCZVIYFYEAHZYIWFNYFYCAHZYBAHZKZYLYAY
      EYOXJYCYMWTYBYNACFVMADEVMVJUTYCYBALVNYLYHWEAYEAUDYLYGWDWBYEYJAYKQRUEVKSUG
      TVLVOVLVOVPVPVQ $.
      $( [22-Jan-2007] $)
  $}

  ${
    $d x u v $.  $d y u v $.  $d z u v $.  $d w u v $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  Atomic formula for membership predicate. $)
    ax11el $p |- ( -. A. x x = y ->
               ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) $=
      ( vv vu weq wal wn wel wi wa wb elequ1 elequ2 adantl imbi2d imbi12d exp32
      a4s 19.26 bitrd ax-17 dvelimfALT biimprcd alimi syl6 adantr sylan9bb hba1
      sylbid albid mpbid sylbir ad2antll ax-15 impcom adantrr adantll dral2 imp
      ad2antrr adantlr ad2antlr wex a9e ax-1 alrimiv dveeq2 im2anan9 sylibr syl
      mpbii exlimdv mpi a1d 4cases ) ACGZAHZADGZAHZABGZAHIZWBCDJZWBWDKZAHZKZKZK
      ZVSWALVRVTLZAHZWIVRVTAUAWKWCWBWGWKWCWBLZLAAJZWBWMKZAHZKZWGWLWPWKWLWMBBJZW
      OWBWMWQMWCWBWMBAJWQABANABBOUBZPWCWQWOKWBWCWQWQAHWOEEJZWQABEWSAUCWQEUCEBGW
      SBEJWQEBENEBBOUBUDWQWNAWBWMWQWRUEUFUGUHUKPWKWPWGMWLWKWMWDWOWFWJWMWDMAVRWM
      CAJZVTWDACANADCOZUITZWKWNWEAWJAUJWKWMWDWBXBQULRUHUMSUNVSWAIZLZWCWBWGXDWLL
      ADJZWBXEKZAHZKZWGXCWLXHVSXCWLLZXEBDJZXGWBXEXJMXCWCABDNZUOXIXJXJAHZXGXCWCX
      JXLKZWBWCXCXMBDAUPUQURXJXFAWBXEXJXKUEUFUGUKUSVSXHWGMXCWLVSXEWDXGWFVRXEWDM
      AACDNTZXFWEACAVSXEWDWBXNQUTRVBUMSVSIZWALZWCWBWGXPWLLWTWBWTKZAHZKZWGXOWLXS
      WAXOWLLZWTCBJZXRWBWTYAMXOWCABCOZUOXTYAYAAHZXRXOWCYAYCKZWBXOWCYDCBAUPVAURY
      AXQAWBWTYAYBUEUFUGUKVCWAXSWGMXOWLWAWTWDXRWFVTWTWDMAXATZXQWEADAWAWTWDWBYEQ
      UTRVDUMSXOXCLZWHWCYFWGWBYFFDGZFVEWGFDVFYFYGWGFYFECGZEVEYGWGKZECVFYFYHYIEY
      FYHYGWGYFYHYGLZLZEFJZWBYLKZAHZKWGYLYMAYLWBVGVHYKYLWDYNWFYJYLWDMZYFYHYLCFJ
      YGWDECFNFDCOUIZPYKYJAHZYNWFMYKYHAHZYGAHZLZYQYFYJYTXOYHYRXCYGYSACEVIADFVIV
      JVAYHYGAUAVKYQYMWEAYJAUJYQYLWDWBYJYOAYPTQULVLRVMSVNVOVNVOVPVPVQ $.
      $( [22-Jan-2007] $)
  $}

  ${
    ax11f.1 $e |- ( ph -> A. x ph ) $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  We can start with any formula ` ph ` in which ` x ` is
       not free. $)
    ax11f $p |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wi ax-1 alrimi a1i12 ) BCEZBFGLALAHZBFHAMBDALIJK $.
      $( [21-Jan-2007] $)
  $}

  ${
    ax11indn.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Negation case. $)
    ax11indn $p |- ( -. A. x x = y ->
               ( x = y -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ) $=
      ( weq wal wn wi wex 19.8a exanali hbn1 con3 syl6 com23 alrimd syl5bi syl5
      wa exp3a ) BCEZBFGZUAAGZUAUCHZBFZUAUCSZUFBIZUBUEUFBJUGUAAHZBFZGZUBUEUAABK
      UBUJUDBUABLUHBLUBUAUJUCUBUAAUIHUJUCHDAUIMNOPQRT $.
      $( [21-Jan-2007] $)

    ${
      ax11indi.2 $e |- ( -. A. x x = y ->
                 ( x = y -> ( ps -> A. x ( x = y -> ps ) ) ) ) $.
      $( Induction step for constructing a substitution instance of ~ ax-11o
         without using ~ ax-11o .  Implication case. $)
      ax11indi $p |- ( -. A. x x = y ->
           ( x = y -> ( ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ) $=
        ( weq wal wn wi wa ax11indn imp pm2.21 imim2i alimi syl6 ax-1 jad ex )
        CDGZCHIZUAABJZUAUCJZCHZJUBUAKZABUEUFAIZUAUGJZCHZUEUBUAUGUIJACDELMUHUDCU
        GUCUAABNOPQUFBUABJZCHZUEUBUABUKJFMUJUDCBUCUABAROPQST $.
        $( [21-Jan-2007] $)
    $}
  $}

  ${
    ax11indalem.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( Lemma for ~ ax11inda2 and ~ ax11inda . $)
    ax11indalem $p |- ( -. A. y y = z -> ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) $=
      ( weq wal wn wi ax-1 a5i a1i biidd a1d wa alequcom con3i imp hbnae hban
      dral1 imbi2d dral2 3imtr4d alequcoms adantr simplr ax-12 syl2an hba1 ax-4
      adantlr sylan2 alimd syl2anc ax-7 alrimi 19.21t syl albid syl5ib ad2antrr
      wb syld exp31 pm2.61ian ) BDFBGZCDFCGZHZBCFZBGHZVJADGZVJVLIZBGZIZIZIZVGVQ
      VIVGVPVKVGVOVJVODBDBFDGZABGZVJVSIZBGZVLVNVSWAIVRAVTBVSVJJKLAADBVRAMUAZVMV
      TDBBVRVLVSVJWBUBUCUDUENNUFVGHZVIOZVKVJVOWDVKOVJOZVLVJAIZBGZDGZVNWEVKVJDGZ
      VLWHIWDVKVJUGWDVJWIVKWDVJWIWCVRHZDCFDGZHZVJWIIZVIVRVGDBPQWKVHDCPQWJWLWMBC
      DUHRUIZRULVKWIOAWGDVKWIDBCDSVJDUJTWIVKVJAWGIZVJDUKVKVJWOERUMUNUOWDWHVNIVK
      VJWHWFDGZBGWDVNWFDBUPWDWPVMBWCVIBBDBSCDBSTWDWMDGWPVMVCWDWMDWCVIDBDDSCDDST
      WNUQVJADURUSUTVAVBVDVEVF $.
      $( [24-Jan-2007] $)
  $}

  ${
    $d z y $.
    ax11inda2.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( A proof of ~ ax11inda2 that is slightly more direct. $)
    ax11inda2ALT $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi ax-1 a5i a1i biidd dral1 imbi2d dral2 a1d wa imp hbnae wb
      3imtr4d alequcoms simplr dveeq1 nalequcoms adantlr hba1 hban sylan2 alimd
      ax-4 syl2anc ax-7 alrimi 19.21t albid syl5ib ad2antrr syld exp31 pm2.61i
      syl ) BDFBGZBCFZBGHZVEADGZVEVGIZBGZIZIZIVDVKVFVDVJVEVJDBDBFDGZABGZVEVMIZB
      GZVGVIVMVOIVLAVNBVMVEJKLAADBVLAMNZVHVNDBBVLVGVMVEVPOPUBUCQQVDHZVFVEVJVQVF
      RVERZVGVEAIZBGZDGZVIVRVFVEDGZVGWAIVQVFVEUDVQVEWBVFVQVEWBVEWBIZDBDBCUEUFZS
      UGVFWBRAVTDVFWBDBCDTVEDUHUIWBVFVEAVTIZVEDULVFVEWEESUJUKUMVQWAVIIVFVEWAVSD
      GZBGVQVIVSDBUNVQWFVHBBDBTVQWCDGWFVHUAVQWCDBDDTWDUOVEADUPVCUQURUSUTVAVB $.
      $( [4-May-2007] $)

    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Quantification case.  When ` z ` and ` y ` are
       distinct, this theorem avoids the dummy variables needed by the more
       general ~ ax11inda . $)
    ax11inda2 $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi ax-1 a16g syl5 a1d ax11indalem pm2.61i ) CDFCGZBCFZBGHZQA
      DGZQSIZBGZIZIZIPUCRPUBQSTPUASQJTCDBKLMMABCDENO $.
      $( [24-Jan-2007] $)
  $}

  ${
    $d w ph $.  $d w x $.  $d w y $.  $d w z $.
    ax11inda.1 $e |- ( -. A. x x = w ->
               ( x = w -> ( ph -> A. x ( x = w -> ph ) ) ) ) $.
    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Quantification case.  (When ` z ` and ` y `
       are distinct, ~ ax11inda2 may be used instead to avoid the dummy
       variable ` w ` in the proof.) $)
    ax11inda $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi wex a9e wa ax11inda2 wb dveeq2 imp albid syl imbi12d hba1
      equequ2 a4s notbid adantl imbi1d imbi2d mpbii ex exlimdv mpi pm2.43i ) BC
      GZBHZIZUMADHZUMUPJZBHZJZJZUOECGZEKUOUTJZECLUOVAVBEUOVAVBUOVAMZBEGZBHZIZVD
      UPVDUPJZBHZJZJZJVBABEDFNVCVFUOVJUTVCVABHZVFUOOUOVAVKBCEPQZVKVEUNVKVDUMBVA
      BUAZVAVDUMOZBECBUBZUCZRUDSVCVDUMVIUSVAVNUOVOUEVCVHURUPVCVKVHUROVLVKVGUQBV
      MVKVDUMUPVPUFRSUGTTUHUIUJUKUL $.
      $( [24-Jan-2007] $)
  $}

  $( Part of a study related to ~ ax-12 .  The consequent introduces a new
     variable ` z ` .  There are no distinct variable restrictions. $)
  a12stdy1 $p |- ( A. x x = y -> E. x y = z ) $=
    ( weq wal wex a9e wn ax-10o con3d df-ex 3imtr4g mpi ) ABDAEZBCDZBFZOAFZBCGN
    OHZBEZHRAEZHPQNTSRABIJOBKOAKLM $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The consequent is quantified with a
     different variable.  There are no distinct variable restrictions. $)
  a12stdy2 $p |- ( A. z ( z = x /\ x = y ) -> A. y y = x ) $=
    ( weq wa wal 19.26 ax-10o alequcom syl6 imp sylbi ) CADZABDZECFMCFZNCFZEBAD
    BFZMNCGOPQOPNAFQNCAHABIJKL $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The consequent introduces two new
     variables.  There are no distinct variable restrictions. $)
  a12stdy3 $p |- ( A. z ( z = x /\ x = y ) -> A. v E. y x = w ) $=
    ( weq wa wal wex a12stdy2 hbae a12stdy1 alimi 3syl ) CAFABFGCHBAFBHZOEHADFB
    IZEHABCJBAEKOPEBADLMN $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The second antecedent of ~ ax-12 is
     replaced.  There are no distinct variable restrictions. $)
  a12stdy4 $p |- ( -. A. z z = x -> ( A. y z = x ->
           ( x = y -> A. z x = y ) ) ) $=
    ( weq wal wn wi wa ax-10o alequcoms con3d impcom pm2.21d ax-12 a1dd pm2.61d
    ex ) CADZCEZFZCBDCEZRBEZABDZUCCEGZGZTUAUETUAHUBUDUATUBFUAUBSUBSGBCRBCIJKLMQ
    TUAFUDUBABCNOP $.
    $( [14-Jan-2008] $)

  $( Proof of first hypothesis of ~ a12study . $)
  a12lem1 $p |- ( -. A. z z = y ->
                  ( A. z ( z = x -> z = y ) -> x = y ) ) $=
    ( weq wal wn wi wb equequ1 imbi12d a4s dral2 equid a1bi biimpri syl6bi hbn1
    a1d wa hban hbth a1i ax-12 imp hbimd alrimi equtr ax-8 imim12d ax-gen 19.26
    a4imt sylbir sylancl mpii ex pm2.61i ) CADZCEZCBDZCEFZURUTGZCEZABDZGZGUSVEV
    AUSVCAADZVDGZCEZVDVBVGCACURVBVGHCURURVFUTVDCAAICABIJKLVGVDCVDVGVFVDAMZNOKPR
    USFZVAVEVJVASZVCVFVDVIVKVGVHGZCEZURVBVGGGZCEZVCVGGZVKVLCVJVACURCQUTCQTZVKVF
    VDCVQVFVFCEGVKVFCVIUAUBVJVAVDVDCEGABCUCUDUEUFVNCURVFURUTVDCAAUGCABUHUIUJVMV
    OSVLVNSCEVPVLVNCUKVBVGCAULUMUNUOUPUQ $.
    $( [15-Jan-2008] $)

  $( Proof of second hypothesis of ~ a12study . $)
  a12lem2 $p |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) $=
    ( weq wn wi wal wa wex equcom imbi1i imnan bitri albii alnex equvini con3i
    sylbi ) CADZCBDZEZFZCGZACDZTHZCIZEZABDZEUCUEEZCGUGUBUICUBUDUAFUISUDUACAJKUD
    TLMNUECOMUHUFABCPQR $.
    $( [15-Jan-2008] $)

  ${
    a12study.1 $e |- ( -. A. z z = y
         -> ( A. z ( z = x -> z = y ) -> x = y ) ) $.
    a12study.2 $e |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) $.
    $( Rederivation of axiom ~ ax-12 from two shorter formulas, without using
       ~ ax-12 .  See ~ a12lem1 and ~ a12lem2 for the proofs of the hypotheses
       (using ~ ax-12 ).  This is the only known breakdown of ~ ax-12 into
       shorter formulas.  See ~ a12studyALT for an alternate proof.  Note that
       the proof depends on ~ ax-11o , whose proof ~ ax11o depends on ~ ax-12 ,
       meaning that we would have to replace ~ ax-11 with ~ ax-11o in an
       axiomatization that uses the hypotheses in place of ~ ax-12 .  Whether
       this can be avoided is an open problem. $)
    a12study $p |- ( -. A. z z = x -> ( -. A. z z = y
                     -> ( x = y -> A. z x = y ) ) ) $=
      ( weq wa wex wal wn imnan equid1 ax-8 mpi imim1i sylbir alimi hbn1 hba1
      wi con2i df-ex sylibr hban ax-11o syl5 imp3a alrimd sylan9 exlimd ex syl7
      syl ) ABFZACFZCBFZGZCHZCAFZCIJZUPCIJZUNCIZUNUQJZCIZJURVDUNVDUSUPJZTZCIUNJ
      VCVFCVCUOVETVFUOUPKUSUOVEUSCCFUOCLCACMNOPQEUMUAUQCUBUCUTVAURVBTUTVAGUQVBC
      UTVACUSCRUPCRZUDUNCSUTUQUSUPTZCIZVAVBUTUOUPVIUOUSUTUPVITUOAAFUSALACAMNUPC
      AUEUFUGVAVIUNCVGVHCSDUHUIUJUKUL $.
      $( [15-Jan-2008] $)

    $( Alternate proof of ~ a12study , also without using ~ ax-12 . $)
    a12studyALT $p |- ( -. A. z z = x -> ( -. A. z z = y
             -> ( x = y -> A. z x = y ) ) ) $=
      ( weq wal wn wi wa hbn1 hban con3d wex exnal hba1 ax-11o ax11indn syl5bir
      annim a5i syl8 imp3a exlimd sylan9r hbnd notnot albii 3imtr4g ex ) CAFZCG
      HZCBFZCGHZABFZUOCGZIULUNJZUOHZHZUSCGUOUPUQURCULUNCUKCKZUMCKLUNURUKUMIZCGZ
      HZULURCGZUNVBUODMVCVAHZCNULVDVACOULVEVDCUTURCPVEUKUMHZJULVDUKUMTULUKVFVDU
      LUKVFUKVFIZCGVDUMCAUMCAQRVGURCEUAUBUCSUDSUEUFUOUGZUOUSCVHUHUIUJ $.
      $( [17-Jan-2008] $)
  $}

  ${
    $d w x $.  $d w y $.  $d w z $.
    a12study2.1 $e |- ( -. A. x x = z -> ( w = z -> A. x w = z ) ) $.
    a12study2.2 $e |- ( -. A. x x = y -> ( w = y -> A. x w = y ) ) $.
    $( Reprove ~ ax-12 using ~ dvelimfALT2 , showing that ~ ax-12 can be
       replaced by ~ dveeq2 (whose needed instances are the hypotheses here) if
       we allow distinct variables in axioms other than ~ ax-17 .  (Contributed
       by Andrew Salmon, 21-Jul-2011.) $)
    a12study2 $p |- ( -. A. x x = y
      -> ( -. A. x x = z -> ( y = z -> A. x y = z ) ) ) $=
      ( cv wceq wal wn hbn1 hbim1 ax-17 equequ1 imbi2d dvelimfALT2 19.21 syl6ib
      wi pm2.86d ) AGZBGZHAIJZUACGZHZAIJZUBUDHZUGAIZUCUFUGSZUIAIUFUHSUFDGZUDHZS
      UIABDUFUKAUEAKZELUIDMUJUBHUKUGUFDBCNOFPUFUGAULQRT $.
      $( [21-Jul-2011] $)
  $}

  ${
    a12study3.1 $e |- ( x = y -> E. z ( x = z /\ z = y ) ) $.
    a12study3.2 $e |- ( A. z ( z = x <-> z = y ) -> x = y ) $.
    $( Rederivation of axiom ~ ax-12 from two other formulas, without using
       ~ ax-12 .  See ~ equvini and ~ equveli for the proofs of the hypotheses
       (using ~ ax-12 ).  Although the second hypothesis (when expanded to
       primitives) is longer than ~ ax-12 , an open problem is whether it can
       be derived without ~ ax-12 or from a simpler axiom.

       Note also that the proof depends on ~ ax-11o , whose proof ~ ax11o
       depends on ~ ax-12 , meaning that we would have to replace ~ ax-11 with
       ~ ax-11o in an axiomatization that uses the hypotheses in place of
       ~ ax-12 .  Whether this can be avoided is an open problem. $)
    a12study3 $p |- ( -. A. z z = x -> ( -. A. z z = y
       -> ( x = y -> A. z x = y ) ) ) $=
      ( weq wal wn wi wa wb wex hbn1 hba1 equid1 ax-8 ax-11o syl5 imp3a exlimd
      mpi syl7 ancomsd anim12ii albiim syl6ibr a5i syl6 ex ) CAFZCGHZCBFZCGHZAB
      FZUNCGZIUKUMJZUNUJULKZCGZUOUPUNUJULIZCGZULUJIZCGZJZURUNACFZULJZCLZUPVCDUK
      VFUTUMVBUKVEUTCUJCMUSCNUKVDULUTVDUJUKULUTIVDAAFUJAOACAPUAZULCAQRSTUMVEVBC
      ULCMVACNUMULVDVBUMULVDVBVDUJUMULVBVGUJCBQUBSUCTUDRUJULCUEUFUQUNCEUGUHUI
      $.
      $( [1-Mar-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Existential uniqueness
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed for uniqueness notation. $)
  $c E! $.  $( Backwards E exclamation point. $)
  $c E* $.  $( Backwards E superscript *. $)

  $( Extend wff definition to include existential uniqueness ("there exists a
     unique ` x ` such that ` ph ` "). $)
  weu $a wff E! x ph $.

  $( Extend wff definition to include uniqueness ("there exists at most one
     ` x ` such that ` ph ` "). $)
  wmo $a wff E* x ph $.

  ${
    $d w x y $.  $d x z $.  $d y ph $.  $d w z ph $.
    $( A soundness justification theorem for ~ df-eu , showing that the
       definition is equivalent to itself with its dummy variable renamed.
       Note that ` y ` and ` z ` needn't be distinct variables.  See
       ~ eujustALT for a proof that provides an example of how it can be
       achieved through the use of ~ dvelim .  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    eujust $p |- ( E. y A. x ( ph <-> x = y )
        <-> E. z A. x ( ph <-> x = z ) ) $=
      ( vw cv wceq wb wal wex equequ2 bibi2d albidv cbvexv bitri ) ABFZCFZGZHZB
      IZCJAPEFZGZHZBIZEJAPDFZGZHZBIZDJTUDCEQUAGZSUCBUIRUBACEBKLMNUDUHEDUAUEGZUC
      UGBUJUBUFAEDBKLMNO $.
      $( [9-Jul-2011] $) $( [11-Mar-2010] $)

    $( A soundness justification theorem for ~ df-eu , showing that the
       definition is equivalent to itself with its dummy variable renamed.
       Note that ` y ` and ` z ` needn't be distinct variables.  While this
       isn't strictly necessary for soundness, the proof provides an example of
       how it can be achieved through the use of ~ dvelim . $)
    eujustALT $p |- ( E. y A. x ( ph <-> x = y )
        <-> E. z A. x ( ph <-> x = z ) ) $=
      ( vw weq wal wb wex equequ2 bibi2d albidv wn hbnae wi ax-17 notbid dvelim
      a4s df-ex drex1 alrimi nalequcoms a1i cbv2 syl 3bitr4g pm2.61i ) CDFZCGZA
      BCFZHZBGZCIZABDFZHZBGZDIZHUMUQCDUIUMUQHCUIULUPBUIUKUOACDBJKLZSUAUJMZUMMZC
      GZMUQMZDGZMUNURUTVBVDUTUTDGZCGVBVDHUTVECCDCNCDDNUBUTVAVCCDVAVADGODCABEFZH
      ZBGZMZVADCEVIDPECFZVHUMVJVGULBVJVFUKAECBJKLQRUCVIVCCDEVICPEDFZVHUQVKVGUPB
      VKVFUOAEDBJKLQRUIVAVCHOUTUIUMUQUSQUDUEUFQUMCTUQDTUGUH $.
      $( [11-Mar-2010] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Define existential uniqueness, i.e.  "there exists exactly one ` x `
       such that ` ph ` ."  Definition 10.1 of [BellMachover] p. 97; also
       Definition *14.02 of [WhiteheadRussell] p. 175.  Other possible
       definitions are given by ~ eu1 , ~ eu2 , ~ eu3 , and ~ eu5 (which in
       some cases we show with a hypothesis ` ph -> A. y ph ` in place of a
       distinct variable condition on ` y ` and ` ph ` ).  Double uniqueness is
       tricky: ` E! x E! y ph ` does not mean "exactly one ` x ` and one
       ` y ` " (see ~ 2eu4 ). $)
    df-eu $a |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) $.
  $}

  $( Define "there exists at most one ` x ` such that ` ph ` ."  Here we define
     it in terms of existential uniqueness.  Notation of [BellMachover] p. 460,
     whose definition we show as ~ mo3 .  For other possible definitions see
     ~ mo2 and ~ mo4 . $)
  df-mo $a |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) $.

  ${
    $d x y z $.  $d ph z $.
    euf.1 $e |- ( ph -> A. y ph ) $.
    $( A version of the existential uniqueness definition with a hypothesis
       instead of a distinct variable condition. $)
    euf $p |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) $=
      ( vz weu weq wb wal wex df-eu ax-17 hbbi hbal equequ2 bibi2d albidv cbvex
      bitri ) ABFABEGZHZBIZEJABCGZHZBIZCJABEKUBUEECUACBATCDTCLMNUEELECGZUAUDBUF
      TUCAECBOPQRS $.
      $( [12-Aug-1993] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d y ps $.  $d y ch $.
    eubid.1 $e |- ( ph -> A. x ph ) $.
    eubid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for uniqueness quantifier (deduction rule). $)
    eubid $p |- ( ph -> ( E! x ps <-> E! x ch ) ) $=
      ( vy weq wb wal wex weu bibi1d albid exbidv df-eu 3bitr4g ) ABDGHZIZDJZGK
      CRIZDJZGKBDLCDLATUBGASUADEABCRFMNOBDGPCDGPQ $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x ph $.
    eubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for uniqueness quantifier (deduction rule). $)
    eubidv $p |- ( ph -> ( E! x ps <-> E! x ch ) ) $=
      ( ax-17 eubid ) ABCDADFEG $.
      $( [9-Jul-1994] $)
  $}

  ${
    eubii.1 $e |- ( ph <-> ps ) $.
    $( Introduce uniqueness quantifier to both sides of an equivalence. $)
    eubii $p |- ( E! x ph <-> E! x ps ) $=
      ( weq weu wb equid hbequid a1i eubid ax-mp ) CCEZACFBCFGCHMABCCCIABGMDJKL
      $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Bound-variable hypothesis builder for uniqueness. $)
    hbeu1 $p |- ( E! x ph -> A. x E! x ph ) $=
      ( vy weu weq wb wal wex df-eu hba1 hbex hbxfrbi ) ABDABCEFZBGZCHBABCINBCM
      BJKL $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d y z $.  $d x z $.  $d z ph $.
    hbeu.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for "at most one."  Note that ` x `
       and ` y ` needn't be distinct (this makes the proof more difficult). $)
    hbeu $p |- ( E! y ph -> A. x E! y ph ) $=
      ( vz weu weq wb wal wex df-eu wi hba1 ax10o alequcoms wn hbnae a1i dveeq1
      syl5 hbbid hbald pm2.61i hbex hbxfrbi ) ACFACEGZHZCIZEJBACEKUHBEBCGBIZUHU
      HBIZLUHUHCIZUIUJUGCMUKUJLCBUHCBNOTUIPZUGBCBCCQULAUFBBCBQAABILULDRBCESUAUB
      UCUDUE $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d y z $.  $d x z $.  $d z ph $.  $d z ps $.
    hbeud.1 $e |- ( ph -> A. x ph ) $.
    hbeud.2 $e |- ( ph -> A. y ph ) $.
    hbeud.3 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbeu . $)
    hbeud $p |- ( ph -> ( E! y ps -> A. x E! y ps ) ) $=
      ( vz cv wceq wb wal wex weu ax-17 wi wn wa hbnae hban adantr dveeq1 hbbid
      adantl hbald hba1 ax10o alequcoms syl5 pm2.61d2 hbexd df-eu albii 3imtr4g
      ex ) ABDIZHIJZKZDLZHMZUTCLBDNZVACLAUSCHAHOACIUPJCLZUSUSCLZPZAVBQZVDAVERZU
      RCDAVEDFCDDSTVFBUQCAVECECDCSTABBCLPVEGUAVEUQUQCLPACDHUBUDUCUEUOUSUSDLZVBV
      CURDUFVGVCPDCUSDCUGUHUIUJUKBDHULZVAUTCVHUMUN $.
      $( [15-Feb-2013] $)
  $}

  ${
    $d w y z $.  $d ph z w $.  $d w x z $.
    sb8eu.1 $e |- ( ph -> A. y ph ) $.
    $( Variable substitution in uniqueness quantifier.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 9-Jul-2011.) $)
    sb8eu $p |- ( E! x ph <-> E! y [ y / x ] ph ) $=
      ( vz vw cv wceq wal wex wsbc weu ax-17 sb8 sbbi hbsb equsb3 hbxfrbi df-eu
      wb hbbi sbequ cbval sblbis albii 3bitri exbii 3bitr4i ) ABGEGZHZTZBIZEJAB
      CGZKZUMUIHZTZCIZEJABLUNCLULUQEULUKBFGZKZFIUKBUMKZCIUQUKBFUKFMNUSUTFCUSABU
      RKZUJBURKZTCAUJBFOVAVBCABFCDPVBURUIHZCFBEQVCCMRUARUTFMUKFCBUBUCUTUPCUJUOA
      BCCBEQUDUEUFUGABESUNCESUH $.
      $( [9-Jul-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    cbveu.1 $e |- ( ph -> A. y ph ) $.
    cbveu.2 $e |- ( ps -> A. x ps ) $.
    cbveu.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 8-Jun-2011.) $)
    cbveu $p |- ( E! x ph <-> E! y ps ) $=
      ( weu wsb sb8eu sbie eubii bitri ) ACHACDIZDHBDHACDEJNBDABCDFGKLM $.
      $( [9-Jul-2011] $) $( [25-Nov-1994] $)
  $}

  ${
    $d x y $.
    eu1.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way to express uniqueness used by some authors.  Exercise
       2(b) of [Margaris] p. 110. $)
    eu1 $p |- ( E! x ph <->
                E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) $=
      ( wsb weu weq wb wal wex wi wa hbs1 euf sb8eu equcom imbi2i albii 3bitr4i
      sb6rf anbi12i ancom albiim exbii ) ABCEZCFUECBGZHCIZBJABFAUEBCGZKZCIZLZBJ
      UECBABCMNABCDOUKUGBUJALUEUFKZCIZUFUEKCIZLUKUGUJUMAUNUIULCUHUFUEBCPQRABCDT
      UAAUJUBUEUFCUCSUDS $.
      $( [20-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d ph z $.
    mo.1 $e |- ( ph -> A. y ph ) $.
    $( Equivalent definitions of "there exists at most one." $)
    mo $p |- ( E. y A. x ( ph -> x = y ) <->
               A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( vz weq wi wal wex wsb wa ax-17 hbim hbal cbv3 syl sylbir alimi wn hbn
      equequ2 imbi2d albidv cbvex hbs1 sbequ2 ax-8 imim12d ancli aaan prth syl6
      sylibr equtr2 2alimi exlimiv impexp bi2.04 bitri 2albii eximi a7s syl5com
      alim exim syl5bi alnex sbequ1 equcoms con3d pm2.21 19.8a 3syl a1d pm2.61i
      impbii ) ABCFZGZBHZCIZAABCJZKZVQGZCHBHZVTABEFZGZBHZEIWDWGVSECWFCBAWECDWEC
      LMZNVSELECFZWFVRBWIWEVQAECBUAUBUCUDWGWDEWGWFWACEFZGZKZCHBHZWDWGWGWKCHZKWM
      WGWNWFWKBCWHWAWJBABCUEZWJBLMZVQWAAWEWJABCUFBCEUGUHOUIWFWKBCWHWPUJUMWLWCBC
      WLWBWEWJKVQAWEWAWJUKBCEUNULUOPUPQWACIZWDVTGWDWAVRGZCHBHZWQVTWCWRBCWCAWAVQ
      GGWRAWAVQUQAWAVQURUSUTWQWABHZCIZWSVTWAWTCWOVAWSWTVSGZCHZXAVTGWRXCCBWRBHXB
      CWAVRBVDRVBWTVSCVEPVCVFWQSZVTWDXDWASZCHZVTWACVGXFASZBHVSVTXEXGCBWABWOTACD
      TCBFAWAAWAGBCABCVHVIVJOXGVRBAVQVKRVSCVLVMQVNVOVP $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x y $.  $d ph y $.
    $( Existential uniqueness implies existence.  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    euex $p |- ( E! x ph -> E. x ph ) $=
      ( vy weu wsb weq wi wal wa wex ax-17 eu1 exsimpl sylbi ) ABDAABCEBCFGCHZI
      BJABJABCACKLAOBMN $.
      $( [9-Jul-2011] $) $( [15-Sep-1993] $)
  $}

  ${
    $d x y $.
    eumo0.1 $e |- ( ph -> A. y ph ) $.
    $( Existential uniqueness implies "at most one." $)
    eumo0 $p |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) $=
      ( weu weq wb wal wex wi euf bi1 alimi eximi sylbi ) ABEABCFZGZBHZCIAPJZBH
      ZCIABCDKRTCQSBAPLMNO $.
      $( [8-Jul-1994] $)
  $}

  ${
    $d x y $.
    eu2.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way of defining existential uniqueness.  Definition 6.10 of
       [TakeutiZaring] p. 26. $)
    eu2 $p |- ( E! x ph <->
    ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( weu wex wsb wa weq wi wal euex eumo0 mo sylib 19.29r impexp albii 19.21
      jca bitri anbi2i abai bitr4i exbii eu1 sylibr impbii ) ABEZABFZAABCGZHBCI
      ZJZCKZBKZHZUIUJUOABLUIAULJBKCFUOABCDMABCDNOTUPAUKULJZCKZHZBFZUIUPAUNHZBFU
      TAUNBPVAUSBVAAAURJZHUSUNVBAUNAUQJZCKVBUMVCCAUKULQRAUQCDSUAUBAURUCUDUEOABC
      DUFUGUH $.
      $( [8-Jul-1994] $)
  $}

  ${
    $d x y $.
    eu3.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way to express existential uniqueness. $)
    eu3 $p |- ( E! x ph <->
                ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) $=
      ( weu wex wsb wa weq wi wal eu2 mo anbi2i bitr4i ) ABEABFZAABCGHBCIZJCKBK
      ZHPAQJBKCFZHABCDLSRPABCDMNO $.
      $( [8-Jul-1994] $)
  $}

  ${
    euor.1 $e |- ( ph -> A. x ph ) $.
    $( Introduce a disjunct into a uniqueness quantifier. $)
    euor $p |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) $=
      ( wn weu wo hbn biorf eubid biimpa ) AEZBCFABGZCFLBMCACDHABIJK $.
      $( [21-Oct-2005] $)
  $}

  ${
    $d x ph $.
    $( Introduce a disjunct into a uniqueness quantifier. $)
    euorv $p |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) $=
      ( ax-17 euor ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.
    mo2.1 $e |- ( ph -> A. y ph ) $.
    $( Alternate definition of "at most one." $)
    mo2 $p |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) $=
      ( wmo wex weu wi weq wal df-mo alnex pm2.21 alimi 19.8a syl sylbir eumo0
      wn ja eu3 simplbi2com impbii bitri ) ABEABFZABGZHZABCIZHZBJZCFZABKUGUKUEU
      FUKUESASZBJZUKABLUMUJUKULUIBAUHMNUJCOPQABCDRTUFUEUKABCDUAUBUCUD $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d w x z $.  $d w y z $.  $d w ph $.
    $( Substitution into "at most one".  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    sbmo $p |- ( [ y / x ] E* z ph <-> E* z [ y / x ] ph ) $=
      ( vw cv wceq wi wal wex wsbc wmo sbex ax-17 sblim sbalv exbii bitri sbbii
      mo2 3bitr4i ) ADFEFGZHZDIZEJZBCFZKZABUFKZUBHZDIZEJZADLZBUFKUHDLUGUDBUFKZE
      JUKUDEBCMUMUJEUCUIBCDAUBBCUBBNOPQRULUEBCADEAENTSUHDEUHENTUA $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y $.
    mo3.1 $e |- ( ph -> A. y ph ) $.
    $( Alternate definition of "at most one."  Definition of [BellMachover]
       p. 460, except that definition has the side condition that ` y ` not
       occur in ` ph ` in place of our hypothesis. $)
    mo3 $p |- ( E* x ph <->
               A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( wmo weq wi wal wex wsb wa mo2 mo bitri ) ABEABCFZGBHCIAABCJKOGCHBHABCDL
      ABCDMN $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.
    mo4f.1 $e |- ( ps -> A. x ps ) $.
    mo4f.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( "At most one" expressed using implicit substitution. $)
    mo4f $p |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) $=
      ( wmo wsb wa weq wi wal ax-17 mo3 sbie anbi2i imbi1i 2albii bitri ) ACGAA
      CDHZIZCDJZKZDLCLABIZUBKZDLCLACDADMNUCUECDUAUDUBTBAABCDEFOPQRS $.
      $( [10-Apr-2004] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    mo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( "At most one" expressed using implicit substitution. $)
    mo4 $p |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) $=
      ( ax-17 mo4f ) ABCDBCFEG $.
      $( [26-Jul-1995] $)
  $}

  ${
    mobid.1 $e |- ( ph -> A. x ph ) $.
    mobid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for "at most one" quantifier (deduction rule). $)
    mobid $p |- ( ph -> ( E* x ps <-> E* x ch ) ) $=
      ( wex weu wi wmo exbid eubid imbi12d df-mo 3bitr4g ) ABDGZBDHZICDGZCDHZIB
      DJCDJAPRQSABCDEFKABCDEFLMBDNCDNO $.
      $( [8-Mar-1995] $)
  $}

  ${
    mobii.1 $e |- ( ps <-> ch ) $.
    $( Formula-building rule for "at most one" quantifier (inference rule). $)
    mobii $p |- ( E* x ps <-> E* x ch ) $=
      ( weq wmo wb equid hbequid a1i mobid ax-mp ) CCEZACFBCFGCHMABCCCIABGMDJKL
      $.
      $( [9-Mar-1995] $)
  $}

  $( Bound-variable hypothesis builder for "at most one." $)
  hbmo1 $p |- ( E* x ph -> A. x E* x ph ) $=
    ( wmo wex weu wi df-mo hbe1 hbeu1 hbim hbxfrbi ) ABCABDZABEZFBABGLMBABHABIJ
    K $.
    $( [8-Mar-1995] $)

  ${
    hbmo.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for "at most one." $)
    hbmo $p |- ( E* y ph -> A. x E* y ph ) $=
      ( wmo wex weu wi df-mo hbex hbeu hbim hbxfrbi ) ACEACFZACGZHBACINOBABCDJA
      BCDKLM $.
      $( [9-Mar-1995] $)
  $}

  ${
    cbvmo.1 $e |- ( ph -> A. y ph ) $.
    cbvmo.2 $e |- ( ps -> A. x ps ) $.
    cbvmo.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 8-Jun-2011.) $)
    cbvmo $p |- ( E* x ph <-> E* y ps ) $=
      ( wex weu wi wmo cbvex cbveu imbi12i df-mo 3bitr4i ) ACHZACIZJBDHZBDIZJAC
      KBDKQSRTABCDEFGLABCDEFGMNACOBDOP $.
      $( [9-Jul-2011] $) $( [9-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Uniqueness in terms of "at most one." $)
    eu5 $p |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) $=
      ( vy weu wex weq wi wal wa wmo ax-17 eu3 mo2 anbi2i bitr4i ) ABDABEZABCFG
      BHCEZIPABJZIABCACKZLRQPABCSMNO $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    eu4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Uniqueness using implicit substitution. $)
    eu4 $p |- ( E! x ph <-> ( E. x ph /\
             A. x A. y ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( weu wex wmo wa weq wi wal eu5 mo4 anbi2i bitri ) ACFACGZACHZIQABICDJKDL
      CLZIACMRSQABCDENOP $.
      $( [26-Jul-1995] $)
  $}

  $( Existential uniqueness implies "at most one." $)
  eumo $p |- ( E! x ph -> E* x ph ) $=
    ( weu wex wmo eu5 simprbi ) ABCABDABEABFG $.
    $( [23-Mar-1995] $)

  ${
    eumoi.1 $e |- E! x ph $.
    $( "At most one" inferred from existential uniqueness. $)
    eumoi $p |- E* x ph $=
      ( weu wmo eumo ax-mp ) ABDABECABFG $.
      $( [5-Apr-1995] $)
  $}

  $( Existence in terms of "at most one" and uniqueness. $)
  exmoeu $p |- ( E. x ph <-> ( E* x ph -> E! x ph ) ) $=
    ( wex wmo weu wi df-mo biimpi com12 biimpri euex imim12i peirce syl impbii
    ) ABCZABDZABEZFZQPRQPRFZABGZHISTPFPTQRPQTUAJABKLPRMNO $.
    $( [5-Apr-2004] $)

  $( Existence implies "at most one" is equivalent to uniqueness. $)
  exmoeu2 $p |- ( E. x ph -> ( E* x ph <-> E! x ph ) ) $=
    ( weu wex wmo eu5 baibr ) ABCABDABEABFG $.
    $( [5-Apr-2004] $)

  $( Absorption of existence condition by "at most one." $)
  moabs $p |- ( E* x ph <-> ( E. x ph -> E* x ph ) ) $=
    ( wex weu wi wmo pm5.4 df-mo imbi2i 3bitr4ri ) ABCZKABDZEZEMKABFZENKLGNMKAB
    HZIOJ $.
    $( [4-Nov-2002] $)

  $( Something exists or at most one exists. $)
  exmo $p |- ( E. x ph \/ E* x ph ) $=
    ( wex wmo wn weu wi pm2.21 df-mo sylibr orri ) ABCZABDZLELABFZGMLNHABIJK $.
    $( [8-Mar-1995] $)

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    $( "At most one" is preserved through implication (notice wff reversal). $)
    immo $p |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) $=
      ( vy wi wal weq wex wmo imim1 al2imi eximdv ax-17 mo2 3imtr4g ) ABEZCFZBC
      DGZEZCFZDHAREZCFZDHBCIACIQTUBDPSUACABRJKLBCDBDMNACDADMNO $.
      $( [22-Apr-1995] $)
  $}

  ${
    immoi.1 $e |- ( ph -> ps ) $.
    $( "At most one" is preserved through implication (notice wff reversal). $)
    immoi $p |- ( E* x ps -> E* x ph ) $=
      ( wi wmo immo mpg ) ABEBCFACFECABCGDH $.
      $( [15-Feb-2006] $)
  $}

  ${
    $d x y $.  $d x y ph $.  $d y ps $.
    $( Move antecedent outside of "at most one." $)
    moimv $p |- ( E* x ( ph -> ps ) -> ( ph -> E* x ps ) ) $=
      ( vy wi wmo weq wal wex ax-1 a1i imim1d alimdv eximdv ax-17 3imtr4g com12
      mo2 ) AABEZCFZBCFZASCDGZEZCHZDIBUBEZCHZDITUAAUDUFDAUCUECABSUBBSEABAJKLMNS
      CDSDORBCDBDORPQ $.
      $( [28-Jul-1995] $)
  $}

  $( Uniqueness implies "at most one" through implication. $)
  euimmo $p |- ( A. x ( ph -> ps ) -> ( E! x ps -> E* x ph ) ) $=
    ( weu wmo wi wal eumo immo syl5 ) BCDBCEABFCGACEBCHABCIJ $.
    $( [22-Apr-1995] $)

  $( Add existential uniqueness quantifiers to an implication.  Note the
     reversed implication in the antecedent.  (The proof was shortened by
     Andrew Salmon, 14-Jun-2011.) $)
  euim $p |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E! x ps -> E! x ph ) ) $=
    ( wex wi wal wa weu wmo ax-1 euimmo anim12ii eu5 syl6ibr ) ACDZABECFZGBCHZO
    ACIZGACHOQOPROQJABCKLACMN $.
    $( [14-Jun-2011] $) $( [19-Oct-2005] $)

  $( "At most one" is still the case when a conjunct is added. $)
  moan $p |- ( E* x ph -> E* x ( ps /\ ph ) ) $=
    ( wa simpr immoi ) BADACBAEF $.
    $( [22-Apr-1995] $)

  ${
    moani.1 $e |- E* x ph $.
    $( "At most one" is still true when a conjunct is added. $)
    moani $p |- E* x ( ps /\ ph ) $=
      ( wmo wa moan ax-mp ) ACEBAFCEDABCGH $.
      $( [9-Mar-1995] $)
  $}

  $( "At most one" is still the case when a disjunct is removed. $)
  moor $p |- ( E* x ( ph \/ ps ) -> E* x ph ) $=
    ( wo orc immoi ) AABDCABEF $.
    $( [5-Apr-2004] $)

  $( "At most one" imports disjunction to conjunction.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  mooran1 $p |- ( ( E* x ph \/ E* x ps ) -> E* x ( ph /\ ps ) ) $=
    ( wmo wa simpl immoi moan jaoi ) ACDABEZCDBCDJACABFGBACHI $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  $( "At most one" exports disjunction to conjunction.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  mooran2 $p |- ( E* x ( ph \/ ps ) -> ( E* x ph /\ E* x ps ) ) $=
    ( wo wmo moor olc immoi jca ) ABDZCEACEBCEABCFBJCBAGHI $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    moanim.1 $e |- ( ph -> A. x ph ) $.
    $( Introduction of a conjunct into "at most one" quantifier. $)
    moanim $p |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) $=
      ( vy wa weq wi wal wex impexp albii 19.21 bitri exbii ax-17 imbi2i 19.37v
      wmo mo2 bitr4i 3bitr4i ) ABFZCEGZHZCIZEJABUDHZCIZHZEJZUCCSABCSZHZUFUIEUFA
      UGHZCIUIUEUMCABUDKLAUGCDMNOUCCEUCEPTULAUHEJZHUJUKUNABCEBEPTQAUHERUAUB $.
      $( [3-Dec-2001] $)

    $( Introduction of a conjunct into uniqueness quantifier.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    euan $p |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) $=
      ( wa weu wex wmo simpl exlimi adantr simpr eximi hbe1 ancrd impbid2 mobid
      a1d biimpa eu5 jca32 anbi2i 3imtr4i ibar eubid impbii ) ABEZCFZABCFZEZUGC
      GZUGCHZEZABCGZBCHZEZEUHUJUMAUNUOUKAULUGACDABIJZKUKUNULUGBCABLZMKUKULUOUKU
      GBCUGCNUKUGBURUKBAUKABUQROPQSUAUGCTUIUPABCTUBUCAUIUHABUGCDABUDUESUF $.
      $( [9-Jul-2011] $) $( [19-Feb-2005] $)
  $}

  ${
    $d x y ph $.  $d y ps $.
    $( Introduction of a conjunct into "at most one" quantifier. $)
    moanimv $p |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) $=
      ( ax-17 moanim ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  $( Nested "at most one" and uniqueness quantifiers. $)
  moaneu $p |- E* x ( ph /\ E! x ph ) $=
    ( weu wa wmo wi eumo hbeu1 moanim mpbir ancom mobii ) AABCZDZBEMADZBEZPMABE
    FABGMABABHIJNOBAMKLJ $.
    $( [25-Jan-2006] $)

  $( Nested "at most one" quantifiers. $)
  moanmo $p |- E* x ( ph /\ E* x ph ) $=
    ( wmo wa wi id hbmo1 moanim mpbir ancom mobii ) AABCZDZBCLADZBCZOLLELFLABAB
    GHIMNBALJKI $.
    $( [25-Jan-2006] $)

  ${
    $d x ph $.
    $( Introduction of a conjunct into uniqueness quantifier. $)
    euanv $p |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) $=
      ( ax-17 euan ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    $( "At most one" picks a variable value, eliminating an existential
       quantifier. $)
    mopick $p |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) $=
      ( vy wa wex wmo wi wsb ax-17 hbs1 hban weq sbequ12 anbi12d cbvex wal ax-4
      mo3 sylbi a4s sbequ2 imim2i exp3a com4t imp syl5 exlimiv impcom ) ABEZCFZ
      ACGZABHZUKACDIZBCDIZEZDFULUMHZUJUPCDUJDJUNUOCACDKBCDKLCDMZAUNBUOACDNBCDNO
      PUPUQDULAUNEZURHZUPUMULUTDQZCQUTACDADJSVAUTCUTDRUATUNUOUTUMHUTAUNUOBUTAUN
      UOBHZURVBUSBCDUBUCUDUEUFUGUHTUI $.
      $( [27-Jan-1997] $)
  $}

  $( Existential uniqueness "picks" a variable value for which another wff is
     true.  If there is only one thing ` x ` such that ` ph ` is true, and
     there is also an ` x ` (actually the same one) such that ` ph ` and ` ps `
     are both true, then ` ph ` implies ` ps ` regardless of ` x ` .  This
     theorem can be useful for eliminating existential quantifiers in a
     hypothesis.  Compare Theorem *14.26 in [WhiteheadRussell] p. 192. $)
  eupick $p |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) $=
    ( weu wmo wa wex wi eumo mopick sylan ) ACDACEABFCGABHACIABCJK $.
    $( [10-Jul-1994] $)

  $( Version of ~ eupick with closed formulas. $)
  eupicka $p |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> A. x ( ph -> ps ) ) $=
    ( weu wa wex wi hbeu1 hbe1 hban eupick alrimi ) ACDZABEZCFZEABGCMOCACHNCIJA
    BCKL $.
    $( [6-Sep-2008] $)

  $( Existential uniqueness "pick" showing wff equivalence. $)
  eupickb $p |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) ->
               ( ph <-> ps ) ) $=
    ( weu wa wex w3a wi eupick 3adant2 3simpc pm3.22 eximi anim2i 3syl impbid )
    ACDZBCDZABEZCFZGZABQTABHRABCIJUARTERBAEZCFZEBAHQRTKTUCRSUBCABLMNBACIOP $.
    $( [25-Nov-1994] $)

  $( Theorem *14.26 in [WhiteheadRussell] p. 192.  (Contributed by Andrew
     Salmon, 11-Jul-2011.) $)
  eupickbi $p |- ( E! x ph -> ( E. x ( ph /\ ps ) <-> A. x ( ph -> ps ) ) ) $=
    ( weu wa wex wi wal eupicka ex hba1 wb ancl simpl impbid1 eubid euex syl6bi
    a4s com12 impbid ) ACDZABEZCFZABGZCHZUBUDUFABCIJUFUBUDUFUBUCCDUDUFAUCCUECKU
    EAUCLCUEAUCABMABNOSPUCCQRTUA $.
    $( [11-Jul-2011] $)

  $( "At most one" can show the existence of a common value.  In this case we
     can infer existence of conjunction from a conjunction of existence, and it
     is one way to achieve the converse of ~ 19.40 .  (The proof was shortened
     by Andrew Salmon, 9-Jul-2011.) $)
  mopick2 $p |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) ->
                E. x ( ph /\ ps /\ ch ) ) $=
    ( wmo wa wex w3a hbmo1 hbe1 mopick ancld anim1d df-3an syl6ibr eximd 3impia
    hban ) ADEZABFZDGZACFZDGABCHZDGSUAFZUBUCDSUADADITDJRUDUBTCFUCUDATCUDABABDKL
    MABCNOPQ $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  $( Introduce or eliminate a disjunct in a uniqueness quantifier.  (The proof
     was shortened by Andrew Salmon, 9-Jul-2011.) $)
  euor2 $p |- ( -. E. x ph -> ( E! x ( ph \/ ps ) <-> E! x ps ) ) $=
    ( wex wn wo hbe1 hbn wb 19.8a con3i orel1 olc impbid1 syl eubid ) ACDZEZABF
    ZBCQCACGHRAEZSBIAQACJKTSBABLBAMNOP $.
    $( [9-Jul-2011] $) $( [21-Oct-2005] $)

  ${
    moexex.1 $e |- ( ph -> A. y ph ) $.
    $( "At most one" double quantification. $)
    moexex $p |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) $=
      ( wmo wal wa wex wi hbmo1 hba1 hbe1 hbmo hbim mopick ex exlimi wn a1d ori
      com3r alrimd immo a4sd syl6 hbex exsimpl con3i exmo syl pm2.61i imp ) ACF
      ZBDFZCGZABHZCIZDFZACIZUNUPUSJZJZAVBCUNVACACKUPUSCUOCLURCDUQCMNOOAUNURBJZD
      GZVAAUNVCDEADCENUNURABUNURABJABCPQUBUCVDUOUSCURBDUDUEUFRUTSZVAUNVEUSUPVEU
      RDIZSUSVFUTURUTDADCEUGABCUHRUIVFUSURDUJUAUKTTULUM $.
      $( [3-Dec-2001] $)
  $}

  ${
    $d y ph $.
    $( "At most one" double quantification. $)
    moexexv $p |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) $=
      ( ax-17 moexex ) ABCDADEF $.
      $( [26-Jan-1997] $)
  $}

  $( Double quantification with "at most one." $)
  2moex $p |- ( E* x E. y ph -> A. y E* x ph ) $=
    ( wex wmo hbe1 hbmo 19.8a immoi alrimi ) ACDZBEABECKCBACFGAKBACHIJ $.
    $( [3-Dec-2001] $)

  $( Double quantification with existential uniqueness.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  2euex $p |- ( E! x E. y ph -> E. y E! x ph ) $=
    ( wex weu wmo wa eu5 excom hbe1 19.8a immoi df-mo sylib eximd syl5bi impcom
    hbmo wi sylbi ) ACDZBEUABDZUABFZGABEZCDZUABHUCUBUEUBABDZCDUCUEABCIUCUFUDCUA
    CBACJRUCABFUFUDSAUABACKLABMNOPQT $.
    $( [9-Jul-2011] $) $( [3-Dec-2001] $)

  $( Double quantification with existential uniqueness and "at most one." $)
  2eumo $p |- ( E! x E* y ph -> E* x E! y ph ) $=
    ( weu wmo wi euimmo eumo mpg ) ACDZACEZFKBDJBEFBJKBGACHI $.
    $( [3-Dec-2001] $)

  $( Double existential uniqueness. $)
  2eu2ex $p |- ( E! x E! y ph -> E. x E. y ph ) $=
    ( weu wex euex eximi syl ) ACDZBDIBEACEZBEIBFIJBACFGH $.
    $( [3-Dec-2001] $)

  $( A condition allowing swap of "at most one" and existential quantifiers. $)
  2moswap $p |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) $=
    ( wmo wal wex wa hbe1 moexex expcom 19.8a pm4.71ri exbii mobii syl6ibr ) AC
    DBEZACFZBDZQAGZBFZCDZABFZCDRPUAQABCACHIJUBTCASBAQACKLMNO $.
    $( [10-Apr-2004] $)

  $( A condition allowing swap of uniqueness and existential quantifiers. $)
  2euswap $p |- ( A. x E* y ph -> ( E! x E. y ph -> E! y E. x ph ) ) $=
    ( wmo wal wex wa weu wi excomim a1i 2moswap anim12d eu5 3imtr4g ) ACDBEZACF
    ZBFZQBDZGABFZCFZTCDZGQBHTCHPRUASUBRUAIPABCJKABCLMQBNTCNO $.
    $( [10-Apr-2004] $)

  $( Double existential uniqueness implies double uniqueness quantification. $)
  2exeu $p |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) $=
    ( wex wmo weu excom hbe1 19.41 19.8a immoi anim2i eximi sylbir sylanb simpl
    wa hbmo eu5 anbi12i adantl anim12i ancoms exbii mobii bitri 3imtr4i ) ACDZB
    DZUHBEZQZABDZCDZULCEZQZQUHACEZQZBDZUQBEZQZUHBFZULCFZQACFZBFZUOUKUTUOURUKUSU
    MUIUNURACBGUIUNQUHUNQZBDURUHUNBULBCABHRIVEUQBUNUPUHAULCABJKLMNOUJUSUIUQUHBU
    HUPPKUAUBUCVAUKVBUOUHBSULCSTVDVCBDZVCBEZQUTVCBSVFURVGUSVCUQBACSZUDVCUQBVHUE
    TUFUG $.
    $( [3-Dec-2001] $)

  ${
    $d x y z w v u $.  $d z w v u ph $.
    $( Two equivalent expressions for double "at most one." $)
    2mo $p |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <->
              A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) ->
                   ( x = z /\ y = w ) ) ) $=
      ( vv vu weq wa wi wal wex wsb equequ2 bi2anan9 ax-17 albii bitri 2alimi
      wn imbi2d 2albidv cbvex2v hbs1 hbim hbsb sbequ12 sylan9bbr equequ1 cbval2
      imbi12d biimpi ancli alcom aaan hbal sylibr prth equtr2 anim12i an4s syl6
      syl exlimivv sylbir impexp bi2.04 2albii alrimi 2eximi alrot4 alim al2imi
      sylbi exim alimi syl5com syl5bi alnex notbid biimpri pm2.21 19.8a 19.23bi
      3syl hbn a1d pm2.61i impbii ) ABDHZCEHZIZJZCKZBKZELZDLZAACEMZBDMZIZWLJZEK
      DKZCKBKZWQABFHZCGHZIZJZCKZBKZGLFLXCXIWOFGDEFDHZGEHZIZXGWMBCXLXFWLAXJXDWJX
      KXEWKFDBNGECNOUAUBUCXIXCFGXIXGWSDFHZEGHZIZJZIZEKZDKZCKZBKZXCXIXIXPEKZDKZI
      ZYAXIYCXIYCXGXPBCDEXGDPXGEPZWSXOBWRBDUDZXOBPUEZWSXOCWRBDCACEUDUFZXOCPUEZW
      LAWSXFXOWKAWRWJWSACEUGWRBDUGUHZWJXDXMWKXEXNBDFUICEGUIOUKUJULUMYAXHYBIZDKZ
      BKYDXTYLBXTXRCKZDKYLXRCDUNYMYKDXGXPCEYEYIUOQRQXHYBBDXHDPXPBEYGUPUORUQXSXB
      BCXQXADEXQWTXFXOIWLAXFWSXOURXDXMXEXNWLXDXMIWJXEXNIWKBDFUSCEGUSUTVAVBSSVCV
      DVEWSELZDLZXCWQJXCWSWMJZEKDKZCKBKZYOWQXBYQBCXAYPDEXAAWSWLJJYPAWSWLVFAWSWL
      VGRVHVHYOWSCKZBKZELZDLZYRWQWSYTDEWSYSBYFYHVIVJYRYTWOJZEKZDKZUUAWPJZDKUUBW
      QJYRYPCKZBKZEKDKUUEYPBCDEVKUUHUUCDEUUGYSWNBWSWMCVLVMSVNUUDUUFDYTWOEVOVPUU
      AWPDVOWEVQVRYOTZWQXCUUIWSTZEKZDKZWQUULYNTZDKUUIUUKUUMDWSEVSQYNDVSRUULATZC
      KBKZWOWQUUOUULUUNUUJBCDEUUNDPUUNEPWSBYFWFWSCYHWFWLAWSYJVTUJWAUUNWMBCAWLWB
      SWOWQEWPDWCWDWEVEWGWHWI $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d z w ph $.  $d x y ps $.  $d x y z w $.
    2mos.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Double "exists at most one", using implicit substitition. $)
    2mos $p |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <->
             A. x A. y A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) $=
      ( weq wa wi wal wex wsb 2mo ax-17 sbrim wb expcom sbie 2albii pm5.74ri
      pm5.74d bitr3i anbi2i imbi1i bitri ) ACEHZDFHZIZJDKCKFLELAADFMZCEMZIZUIJZ
      FKEKZDKCKABIZUIJZFKEKZDKCKACDEFNUNUQCDUMUPEFULUOUIUKBAUJBCEBCOUGUJBUGUJJU
      GAJZDFMUGBJZUGADFUGDOPURUSDFUSDOUHUGABUGUHABQGRUBSUCUASUDUETTUF $.
      $( [10-Feb-2005] $)
  $}

  $( Double existential uniqueness.  This theorem shows a condition under which
     a "naive" definition matches the correct one. $)
  2eu1 $p |- ( A. x E* y ph ->
        ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) $=
    ( wmo wal weu wex wa wi eu5 exbii mobii anbi12i bitri simprbi anim2i ancoms
    ax-4 sylib com12 immoi hba1 moanim ancrd 2moswap imdistani syl 2eu2ex excom
    syl6 jca jctild an4 syl6ibr 2exeu impbid1 ) ACDZBEZACFZBFZACGZBFZABGZCFZHZU
    TURVEUTURVABGZVCCGZHZVABDZVCCDZHZHZVEUTURVKVHUTVAUQHZBDZURVKIUTVMBGZVNUTUSB
    GZUSBDZHVOVNHUSBJVPVOVQVNUSVMBACJZKUSVMBVRLMNOVNURVIURHVKVNURVIVNURVAHZBDUR
    VIIVSVMBVAURVMURUQVAUQBRPQUAURVABUQBUBUCSUDVIURVJURVIVJABCUETUFUJUGUTVFVGAB
    CUHZUTVFVGVTABCUISUKULVEVFVIHZVGVJHZHVLVBWAVDWBVABJVCCJMVFVIVGVJUMNUNTABCUO
    UP $.
    $( [3-Dec-2001] $)

  $( Double existential uniqueness. $)
  2eu2 $p |- ( E! y E. x ph -> ( E! x E! y ph <-> E! x E. y ph ) ) $=
    ( wex weu wmo wal wi eumo 2moex 2eu1 simpl syl6bi 3syl 2exeu expcom impbid
    wa ) ABDZCEZACEBEZACDBEZTSCFACFBGZUAUBHSCIACBJUCUAUBTRUBABCKUBTLMNUBTUAABCO
    PQ $.
    $( [3-Dec-2001] $)


  $( Double existential uniqueness. $)
  2eu3 $p |- ( A. x A. y ( E* x ph \/ E* y ph ) ->
 ( ( E! x E! y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) $=
    ( wmo wo wal weu wa wex wb hbmo1 19.31 albii hbal 19.32 bitri wi 2eu1 2exeu
    biimpd ancom syl6ib adantld adantrd jaoi ancoms jca impbid1 sylbi ) ABDZACD
    ZECFZBFZUJCFZUKBFZEZACGBGZABGCGZHZACIBGZABICGZHZJUMUNUKEZBFUPULVCBUJUKCACKL
    MUNUKBUJBCABKNOPUPUSVBUNUSVBQUOUNURVBUQUNURVAUTHZVBUNURVDACBRTVAUTUAUBUCUOU
    QVBURUOUQVBABCRTUDUEVBUQURABCSVAUTURACBSUFUGUHUI $.
    $( [3-Dec-2001] $)

  ${
    $d x y z w $.  $d z w ph $.
    $( This theorem provides us with a definition of double existential
       uniqueness ("exactly one ` x ` and exactly one ` y ` ").  Naively one
       might think (incorrectly) that it could be defined by
       ` E! x E! y ph ` .  See ~ 2eu1 for a condition under which the naive
       definition holds and ~ 2exeu for a one-way implication.  See ~ 2eu5 and
       ~ 2eu8 for alternate definitions. $)
    2eu4 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
      ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( wex weu wa weq wal ax-17 eu3 anbi12i anbi2i bitri hba1 19.3 19.26 albii
      wi an4 excom anidm jcab 3bitr4ri alcom bitr4i 19.23v 2albii 3bitri 2exbii
      hbe1 hbim aaan eeanv bitr2i ) ACFZBGZABFZCGZHUQBFZUQBDIZTZBJZDFZHZUSCFZUS
      CEIZTZCJZEFZHZHVAVGHZVEVKHZHVAAVBVHHTZCJZBJZEFDFZHURVFUTVLUQBDUQDKLUSCEUS
      EKLMVAVEVGVKUAVMVAVNVRVMVAVAHVAVGVAVAACBUBNVAUCOVRVDVJHZEFDFVNVQVSDEVQAVB
      TZCJZAVHTZBJZHZCJZBJZVCVIHZCJBJVSVQWAWBCJZBJZHZBJZWFWABJZWIBJZHWLWIHZWKVQ
      WMWIWLWIBWHBPQNWAWIBRVQWAWHHZBJWNVPWOBVPVTWBHZCJWOVOWPCAVBVHUDSVTWBCROSWA
      WHBROUEWEWJBWEWACJZWCCJZHWJWAWCCRWQWAWRWIWACVTCPQWBCBUFMOSUGWDWGBCWAVCWCV
      IAVBCUHAVHBUHMUIVCVIBCUQVBCACULVBCKUMUSVHBABULVHBKUMUNUJUKVDVJDEUOUPMUJ
      $.
      $( [3-Dec-2001] $)

    $( An alternate definition of double existential uniqueness (see ~ 2eu4 ).
       A mistake sometimes made in the literature is to use ` E! x E! y ` to
       mean "exactly one ` x ` and exactly one ` y ` ."  (For example, see
       Proposition 7.53 of [TakeutiZaring] p. 53.)  It turns out that this is
       actually a weaker assertion, as can be seen by expanding out the formal
       definitions.  This theorem shows that the erroneous definition can be
       repaired by conjoining ` A. x E* y ph ` as an additional condition.  The
       correct definition apparently has never been published.  ( ` E* ` means
       "exists at most one.") $)
    2eu5 $p |- ( ( E! x E! y ph /\ A. x E* y ph ) <->
      ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( weu wmo wal wa wex weq 2eu1 pm5.32ri eumo adantl 2moex syl pm4.71i 2eu4
      wi 3bitr2i ) ACFBFZACGBHZIACJZBFZABJZCFZIZUCIUHUDBJABDKCEKITCHBHEJDJIUCUB
      UHABCLMUHUCUHUFCGZUCUGUIUEUFCNOACBPQRABCDESUA $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y z w v u $.  $d z w v u ph $.
    $( Two equivalent expressions for double existential uniqueness. $)
    2eu6 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
               E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) $=
      ( vu vv wex wa weq wi wal ax-17 hbsb sbequ12 equequ2 bi2anan9 hbim 2exbii
      wsb weu 2eu4 19.29r2 hbs1 sylan9bbr cbvex2 imbi2d 2albidv cbvex2v equequ1
      wb imbi12d cbval2 3bitri anbi12i 2albiim ancom bitri equcom imbi2i impexp
      2mo 2albii hban sbco2 sbcom2 sbbii 3bitr3ri syl6bb anbi2d 19.21-2 3bitr3i
      anbi2i abai 2sb6 anbi1i 3bitr2i bitr4i 3imtr4i 2alimi 2eximi 2exsb sylibr
      bi2 bi1 jca impbii ) ACHZBUAABHCUAIWHBHZABDJZCEJZIZKZCLBLZEHDHZIZAWLUKZCL
      BLZEHDHZABCDEUBWPWSACETZBDTZEHDHZXAXAEFTZDGTZIZDGJZEFJZIZKZFLGLZELDLZIXAX
      JIZEHDHZWPWSXAXJDEUCWIXBWOXKAXABCDEADMAEMZWTBDUDZWTBDCACEUDNZWKAWTWJXAACE
      OWTBDOUEZUFWOABGJZCFJZIZKZCLBLZFHGHXAXHKZELDLZFHGHXKWNYBDEGFXHWMYABCXHWLX
      TAXFWJXRXGWKXSDGBPEFCPQUGUHUIYBYDGFYAYCBCDEYADMYAEMXAXHBXOXHBMZRXAXHCXPXH
      CMZRWLAXAXTXHXQWJXRXFWKXSXGBDGUJCEFUJQULUMSXADEGFVBUNUOWSWLAKZCLBLZWNIZEH
      DHXMWRYIDEWRWNYHIYIAWLBCUPWNYHUQURSXLYIDEXLXAXAWNKZIXAWNIYIXJYJXAXAAIZDBJ
      ZECJZIZKZCLBLXAWMKZCLBLXJYJYOYPBCYOYKWLKYPYNWLYKYLWJYMWKDBUSECUSUOUTXAAWL
      VAURVCYOXIBCGFYOGMYOFMXEXHBXAXDBXOXCDGBXAEFBXONNVDYERXEXHCXAXDCXPXCDGCXAE
      FCXPNNVDYFRXTYKXEYNXHXTAXDXAXTAACFTZBGTZXDXSAYQXRYRACFOYQBGOUEWTEFTZBDTZD
      GTYSBGTXDYRYSBGDYSDMVEYTXCDGWTEFBDVFVGYSYQBGACFEXNVEVGVHVIVJXRYLXFXSYMXGB
      GDPCFEPQULUMXAWMBCXOXPVKVLVMXAWNVNXAYHWNABCDEVOVPVQSVRVSWSWIWOWSYHEHDHWIW
      RYHDEWQYGBCAWLWDVTWAABCDEWBWCWRWNDEWQWMBCAWLWEVTWAWFWGUR $.
      $( [2-Feb-2005] $)
  $}

  $( Two equivalent expressions for double existential uniqueness. $)
  2eu7 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
             E! x E! y ( E. x ph /\ E. y ph ) ) $=
    ( wex weu wa hbe1 hbeu euan ancom eubii 3bitri 3bitr4ri ) ABDZCEZACDZFZBEOP
    BEZFNPFZCEZBEROFOPBNBCABGHITQBTPNFZCEPOFQSUACNPJKPNCACGIPOJLKROJM $.
    $( [19-Feb-2005] $)

  $( Two equivalent expressions for double existential uniqueness.  Curiously,
     we can put ` E! ` on either of the internal conjuncts but not both.  We
     can also commute ` E! x E! y ` using ~ 2eu7 . $)
  2eu8 $p |- ( E! x E! y ( E. x ph /\ E. y ph ) <->
                E! x E! y ( E! x ph /\ E. y ph ) ) $=
    ( wex wa 2eu2 pm5.32i hbeu1 hbeu euan ancom eubii hbe1 3bitri 3bitr4ri 2eu7
    weu 3bitr3ri ) ACDZBQZABQZCQZEZTABDZCQZEUASEZCQZBQZUDSECQBQTUBUEACBFGUBSEZB
    QUBTEUHUCUBSBUABCABHIJUGUIBUGSUAEZCQSUBEUIUFUJCUASKLSUACACMJSUBKNLTUBKOABCP
    R $.
    $( [20-Feb-2005] $)

  ${
    $d x y z $.
    $( Equality has existential uniqueness.  Special case of ~ eueq1 proved
       using only predicate calculus.  (Contributed by Stefan Allan,
       4-Dec-2008.) $)
    euequ1 $p |- E! x x = y $=
      ( vz weq weu wex wa wi wal equequ1 eu4 a9e equtr2 gen2 mpbir2an ) ABDZAEP
      AFPCBDZGACDHZCIAIPQACACBJKABLRACACBMNO $.
      $( [4-Dec-2008] $)
  $}

  ${
    $d x y $.
    $( Two ways to express "only one thing exists."  The left-hand side
       requires only one variable to express this.  Both sides are false in set
       theory; see theorem ~ dtru . $)
    exists1 $p |- ( E! x x = x <-> A. x x = y ) $=
      ( weq weu wb wal wex df-eu equid tbt bicom bitri albii exbii hbae 3bitr2i
      19.9 ) AACZADRABCZEZAFZBGSAFZBGUBRABHUBUABSTASSRETRSAIJSRKLMNUBBABBOQP $.
      $( [5-Apr-2004] $)

    $( A condition implying that at least two things exist.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    exists2 $p |- ( ( E. x ph /\ E. x -. ph ) -> -. E! x x = x ) $=
      ( vy wex wn cv wceq weu wal hbeu1 hba1 wi exists1 ax-16 sylbi exlimd alex
      com12 syl6ib con2d imp ) ABDZAEBDZBFZUDGZBHZEUBUFUCUBUFABIZUCEUFUBUGUFAUG
      BUEBJABKUFUDCFGBIAUGLBCMABCNOPRABQSTUA $.
      $( [9-Jul-2011] $) $( [10-Apr-2004] $)
  $}

$(
###############################################################################
                NEW FOUNDATIONS SET THEORY
###############################################################################
$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                    New Foundations Set Theory
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             NF Set Theory - start with the Axiom of Extensionality
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$( Logic is a prerequisite. $)
$( $[ logic.mm $] $) $( Use this if logic is separated out of set.mm. $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce the Axiom of Extensionality
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $v t $.
  $( Let ` t ` be an individual variable. $)
  vt $f set t $.

$(
$)

  ${
    $d x y z $.
    $( Axiom of Extensionality.  An axiom of Zermelo-Fraenkel set theory.  It
       states that two sets are identical if they contain the same elements.
       Axiom Ext of [BellMachover] p. 461.

       Set theory can also be formulated with a _single_ primitive predicate
       ` e. ` on top of traditional predicate calculus _without_ equality.  In
       that case the Axiom of Extensionality becomes
       ` ( A. w ( w e. x <-> w e. y ) -> ( x e. z -> y e. z ) ) ` , and
       equality ` x = y ` is _defined_ as ` A. w ( w e. x <-> w e. y ) ` .  All
       of the usual axioms of equality then become theorems of set theory.
       See, for example, Axiom 1 of [TakeutiZaring] p. 8.

       To use the above "equality-free" version of Extensionality with
       Metamath's logical axioms, we would rewrite ~ ax-8 through ~ ax-16 with
       equality expanded according to the above definition.  Some of those
       axioms could be proved from set theory and would be redundant.  Not all
       of them are redundant, since our axioms of predicate calculus make
       essential use of equality for the proper substitution that is a
       primitive notion in traditional predicate calculus.  A study of such an
       axiomatization would be an interesting project for someone exploring the
       foundations of logic.

       _General remarks_:  Our set theory axioms are presented using defined
       connectives ( ` <-> ` , ` E. ` , etc.) for convenience.  However, it is
       implicitly understood that the actual axioms use only the primitive
       connectives ` -> ` , ` -. ` , ` A. ` , ` = ` , and ` e. ` .  It is
       straightforward to establish the equivalence between the actual axioms
       and the ones we display, and we will not do so.

       It is important to understand that strictly speaking, all of our set
       theory axioms are really schemes that represent an infinite number of
       actual axioms.  This is inherent in the design of Metamath
       ("metavariable math"), which manipulates only metavariables.  For
       example, the metavariable ` x ` in ~ ax-ext can represent any actual
       variable _v1_, _v2_, _v3_,... .  Distinct variable restrictions ($d)
       prevent us from substituting say _v1_ for both ` x ` and ` z ` .  This
       is in contrast to typical textbook presentations that present actual
       axioms (except for Replacement ~ ax-rep , which involves a wff
       metavariable).  In practice, though, the theorems and proofs are
       essentially the same.  The $d restrictions make each of the the infinite
       axioms generated by the ~ ax-ext scheme exactly logically equivalent to
       each other and in particular to the actual axiom of the textbook
       version. $)
    ax-ext $a |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $.

    $( The Axiom of Extensionality ( ~ ax-ext ) restated so that it postulates
       the existence of a set ` z ` given two arbitrary sets ` x ` and ` y ` .
       This way to express it follows the general idea of the other ZFC axioms,
       which is to postulate the existence of sets given other sets. $)
    axext2 $p |- E. z ( ( z e. x <-> z e. y ) -> x = y ) $=
      ( cv wcel wb wceq wi wex wal ax-ext 19.36v mpbir ) CDZADZENBDZEFZOPGZHCIQ
      CJRHABCKQRCLM $.
      $( [28-Sep-2003] $)
  $}

  ${
    $d z x w $.  $d z y w $.
    $( A generalization of the Axiom of Extensionality in which ` x ` and ` y `
       need not be distinct.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    axext3 $p |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $=
      ( vw cv wcel wb wal wi elequ2 bibi1d albidv equequ1 imbi12d ax-ext chvarv
      wceq ) CEZDEZFZRBEZFZGZCHZSUAQZIRAEZFZUBGZCHZUFUAQZIDASUFQZUDUIUEUJUKUCUH
      CUKTUGUBDACJKLDABMNDBCOP $.
      $( [12-Aug-2011] $) $( [15-Sep-1993] $)

    $( A bidirectional version of Extensionality.  Although this theorem
       "looks" like it is just a definition of equality, it requires the Axiom
       of Extensionality for its proof under our axiomatization.  See the
       comments for ~ ax-ext and ~ df-cleq . $)
    axext4 $p |- ( x = y <-> A. z ( z e. x <-> z e. y ) ) $=
      ( cv wceq wcel wb wal elequ2 alrimiv axext3 impbii ) ADZBDZEZCDZMFPNFGZCH
      OQCABCIJABCKL $.
      $( [14-Nov-2008] $)
  $}

  ${
    $d x y z $.  $d ph z $.
    bm1.1.1 $e |- ( ph -> A. x ph ) $.
    $( Any set defined by a property is the only set defined by that property.
       Theorem 1.1 of [BellMachover] p. 462. $)
    bm1.1 $p |- ( E. x A. y ( y e. x <-> ph ) ->
                  E! x A. y ( y e. x <-> ph ) ) $=
      ( vz cv wcel wb wal wex wsbc wa wceq wi weu ax-17 hbbi hbal elequ2 bibi1d
      albidv sbie 19.26 biantr alimi ax-ext syl sylbir sylan2b gen2 jctr sylibr
      eu2 ) CFZBFZGZAHZCIZBJZUSURURBEFZKZLUOUTMZNZEIBIZLURBOUSVDVCBEVAURUNUTGZA
      HZCIZVBURVGBEVFBCVEABVEBPDQRVBUQVFCVBUPVEABECSTUAUBURVGLUQVFLZCIZVBUQVFCU
      CVIUPVEHZCIVBVHVJCUPAVEUDUEBECUFUGUHUIUJUKURBEUREPUMUL $.
      $( [30-Jun-1994] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Class abstractions (a.k.a. class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constants use in class definition. $)
  $c { $. $( Left brace $)
  $c | $.  $( Vertical bar $)
  $c } $. $( Right brace $)
  $( --- Start of old code before overloading prevention patch. $)
  $(
  @c class @. @( Class variable type @)
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare variable symbols that will be used to represent classes.  Note
     that later on ` R ` , ` S ` , ` F ` and ` G ` denote relations and
     functions, but these letters serve as mnemonics only and in fact behave
     no differently from the variables ` A ` through ` D ` . $)
  $v A $.
  $v B $.
  $v C $.
  $v D $.
  $v P $.
$( $v .+ $. $)
  $v Q $.
  $v R $.
  $v S $.
  $v T $.
$( $v .x $. $)
  $v U $.
$( $v .1 $. $)

  $( Introduce the class builder or class abstraction notation ("the class of
     sets ` x ` such that ` ph ` is true").  Our class variables ` A ` ,
     ` B ` , etc. range over class builders (implicitly in the case of defined
     class terms such as ~ df-nul ).  Note that a set variable can be expressed
     as a class builder per theorem ~ cvjust , justifying the assignment of set
     variables to class variables via the use of ~ cv . $)
  cab $a class { x | ph } $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( A set variable is a class expression.  The syntax " ` class x ` " can be
     viewed as an abbreviation for " ` class { y | y e. x } ` " (a special case
     of ~ cab ), where ` y ` is distinct from ` x ` .  See the discussion under
     the definition of class in [Jech] p. 4.  Note that ` { y | y e. x } = x `
     by ~ cvjust . @)
  cv @a class x @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Let ` A ` be a class variable. $)
  cA $f class A $.
  $( Let ` B ` be a class variable. $)
  cB $f class B $.
  $( Let ` C ` be a class variable. $)
  cC $f class C $.
  $( Let ` D ` be a class variable. $)
  cD $f class D $.
  $( Let ` P ` be a class variable. $)
  cP $f class P $.
  $( Let ` Q ` be a class variable. $)

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` P ` without
     affecting proofs. $)
  $v .+ $.
  .pl $f class .+ $.

  cQ $f class Q $.
  $( Let ` R ` be a class variable. $)
  cR $f class R $.
  $( Let ` S ` be a class variable. $)
  cS $f class S $.
  $( Let ` T ` be a class variable. $)
  cT $f class T $.
  $( Let ` U ` be a class variable. $)
  cU $f class U $.

  $v e $.
  $v f $.
  $v g $.
  $v h $.
  $v i $.
  $v j $.
  $v k $.
  $v m $.
  $v n $.
  $v o $.
  $v E $.
  $v F $.
  $v G $.
  $v H $.
  $v I $.
  $v J $.
  $v K $.
  $v L $.
  $v M $.
  $v N $.
$( $v .- $. $)
  $v V $.
  $v W $.
  $v X $.
  $v Y $.
  $v Z $.
$( $v .0 $. $)
  $v O $.
$( $v ._|_ $. $)
  $v s $.
  $v r $.
  $v q $.
  $v p $.
  $v a $.
  $v b $.
  $v c $.
  $v d $.
  $v l $.


  $( Let ` e ` be an individual variable. $)
  ve $f set e $.
  $( Let ` f ` be an individual variable. $)
  vf $f set f $.
  $( Let ` g ` be an individual variable. $)
  vg $f set g $.
  $( Let ` h ` be an individual variable. $)
  vh $f set h $.
  $( Let ` i ` be an individual variable. $)
  vi $f set i $.
  $( Let ` j ` be an individual variable. $)
  vj $f set j $.
  $( Let ` k ` be an individual variable. $)
  vk $f set k $.
  $( Let ` m ` be an individual variable. $)
  vm $f set m $.
  $( Let ` n ` be an individual variable. $)
  vn $f set n $.
  $( Let ` o ` be an individual variable. $)
  vo $f set o $.
  $( Let ` E ` be a class variable. $)
  cE $f class E $.
  $( Let ` F ` be a class variable. $)
  cF $f class F $.
  $( Let ` G ` be a class variable. $)
  cG $f class G $.
  $( Let ` H ` be a class variable. $)
  cH $f class H $.
  $( Let ` I ` be a class variable. $)
  cI $f class I $.
  $( Let ` J ` be a class variable. $)
  cJ $f class J $.

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` J ` without
     affecting proofs. $)
  $v .\/ $.
  .or $f class .\/ $.

  $( Let ` K ` be a class variable. $)
  cK $f class K $.
  $( Let ` L ` be a class variable. $)
  cL $f class L $.

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` L ` without
     affecting proofs. $)
  $v .<_ $.
  .le $f class .<_ $.

  $( Let ` M ` be a class variable. $)
  cM $f class M $.

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` M ` without
     affecting proofs. $)
  $v ./\ $.
  .an $f class ./\ $.

  $( Let ` N ` be a class variable. $)
  cN $f class N $.
  $( Let ` O ` be a class variable. $)
  cO $f class O $.
  $( Let ` V ` be a class variable. $)
  cV $f class V $.
  $( Let ` W ` be a class variable. $)
  cW $f class W $.
  $( Let ` X ` be a class variable. $)
  cX $f class X $.
  $( Let ` Y ` be a class variable. $)
  cY $f class Y $.
  $( Let ` Z ` be a class variable. $)
  cZ $f class Z $.
  $( Let ` s ` be an individual variable. $)
  vs $f set s $.
  $( Let ` r ` be an individual variable. $)
  vr $f set r $.
  $( Let ` q ` be an individual variable. $)
  vq $f set q $.
  $( Let ` p ` be an individual variable. $)
  vp $f set p $.
  $( Let ` a ` be an individual variable. $)
  va $f set a $.
  $( Let ` b ` be an individual variable. $)
  vb $f set b $.
  $( Let ` c ` be an individual variable. $)
  vc $f set c $.
  $( Let ` d ` be an individual variable. $)
  vd $f set d $.
  $( Let ` l ` be an individual variable. $)
  vl $f set l $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include class equality. @)
  wceq @a wff A = B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include the membership connective between
     classes. @)
  wcel @a wff A e. B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define class abstraction notation (so-called by Quine), also called a
     "class builder" in the literature. ` x ` and ` y ` need not be distinct.
     Definition 2.1 of [Quine] p. 16.  Typically, ` ph ` will have ` y ` as a
     free variable, and " ` { y | ph } ` " is read "the class of all sets ` y `
     such that ` ph ( y ) ` is true."  We do not define ` { y | ph } ` in
     isolation but only as part of an expression that extends or "overloads"
     the ` e. ` relationship.

     This is our first use of the ` e. ` symbol to connect classes instead of
     sets.  The syntax definition ~ wcel , which extends or "overloads" the
     ~ wel definition connecting set variables, requires that both sides of
     ` e. ` be a class.  In ~ df-cleq and ~ df-clel , we introduce a new kind
     of variable (class variable) that can substituted with expressions such as
     ` { y | ph } ` .  In the present definition, the ` x ` on the left-hand
     side is a set variable.  Syntax definition ~ cv allows us to substitute a
     set variable ` x ` for a class variable: all sets are classes by ~ cvjust
     (but not necessarily vice-versa).  For a full description of how classes
     are introduced and how to recover the primitive language, see the
     discussion in Quine (and under ~ abeq2 for a quick overview).

     Because class variables can be substituted with compound expressions and
     set variables cannot, it is often useful to convert a theorem containing a
     free set variable to a more general version with a class variable.  This
     is done with theorems such as ~ vtoclg which is used, for example, to
     convert ~ elirrv to ~ elirr . $)
  df-clab $a |- ( x e. { y | ph } <-> [ x / y ] ph ) $.

  $( Simplification of class abstraction notation when the free and bound
     variables are identical. $)
  abid $p |- ( x e. { x | ph } <-> ph ) $=
    ( cv cab wcel wsbc df-clab sbid bitri ) BCZABDEABJFAABBGABHI $.
    $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Bound-variable hypothesis builder for a class abstraction. $)
    hbab1 $p |- ( y e. { x | ph } -> A. x y e. { x | ph } ) $=
      ( cv cab wcel wsbc df-clab hbs1 hbxfrbi ) CDZABEFABKGBACBHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x z $.
    hbab.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for a class abstraction. $)
    hbab $p |- ( z e. { y | ph } -> A. x z e. { y | ph } ) $=
      ( cv cab wcel wsbc df-clab hbsb hbxfrbi ) DFZACGHACMIBADCJACDBEKL $.
      $( [1-Mar-1995] $)
  $}

  ${
    $d x z $.
    hbabd.1 $e |- ( ph -> A. x A. y ph ) $.
    hbabd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbab . $)
    hbabd $p |- ( ph -> ( z e. { y | ps } -> A. x z e. { y | ps } ) ) $=
      ( cv wsbc wal cab wcel wceq wi wn ax-7 syl 2alimi hbsb4t 3syl ax-16 albii
      pm2.61d2 df-clab 3imtr4g ) ABDEHZIZUGCJZUFBDKLZUICJACHUFMCJZUGUHNZAACJDJZ
      BBCJNZCJDJUJOUKNAADJCJULFACDPQAUMDCGRBDECSTUGCEUAUCBEDUDZUIUGCUNUBUE $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    df-cleq.1 $e |- ( A. x ( x e. y <-> x e. z ) -> y = z ) $.
    $( Define the equality connective between classes.  Definition 2.7 of
       [Quine] p. 18.  Also Definition 4.5 of [TakeutiZaring] p. 13; Chapter 4
       provides its justification and methods for eliminating it.  Note that
       its elimination will not necessarily result in a single wff in the
       original language but possibly a "scheme" of wffs.

       This is an example of a somewhat "risky" definition, meaning that it has
       a more complex than usual soundness justification (outside of Metamath),
       because it "overloads" or reuses the existing equality symbol rather
       than introducing a new symbol.  This allows us to make statements that
       may not hold for the original symbol.  For example, it permits us to
       deduce ` y = z <-> A. x ( x e. y <-> x e. z ) ` , which is not a theorem
       of logic but rather presupposes the Axiom of Extensionality (see theorem
       ~ axext4 ).  We therefore include this axiom as a hypothesis, so that
       the use of Extensionality is properly indicated.

       We could avoid this complication by introducing a new symbol, say =_2,
       in place of ` = ` .  This would also have the advantage of making
       elimination of the definition straightforward, so that we could
       eliminate Extensionality as a hypothesis.  We would then also have the
       advantage of being able to identify in various proofs exactly where
       Extensionality truly comes into play rather than just being an artifact
       of a definition..  One of our theorems would then be ` x ` =_2
       ` y <-> x = y ` by invoking Extensionality.

       However, to conform to literature usage, we retain this overloaded
       definition.  This also makes some proofs shorter and probably easier to
       read, without the constant switching between two kinds of equality.

       See also comments under ~ df-clab , ~ df-clel , and ~ abeq2 . $)
    df-cleq $a |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    $( The same as ~ df-cleq with the hypothesis removed using the Axiom of
       Extensionality ~ ax-ext . $)
    dfcleq $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( vy vz ax-ext df-cleq ) ADEBCDEAFG $.
      $( [15-Sep-1993] $)
  $}

  ${
    $d x y z $.
    $( Every set is a class.  Proposition 4.9 of [TakeutiZaring] p. 13.  This
       theorem shows that a set variable can be expressed as a class
       abstraction.  This provides a motivation for the class syntax
       construction ~ cv , which allows us to substitute a set variable for a
       class variable.  See also ~ cab and ~ df-clab .  Note that this is not a
       rigorous justification, because ~ cv is used as part of the proof of
       this theorem, but a careful argument can be made outside of the
       formalism of Metamath, for example as is done in Chapter 4 of Takeuti
       and Zaring.  See also the discussion under the definition of class in
       [Jech] p. 4 showing that "Every set can be considered to be a class." $)
    cvjust $p |- x = { y | y e. x } $=
      ( vz cv wcel cab wceq wb dfcleq wsbc df-clab elsb3 bitr2i mpgbir ) ADZBDO
      EZBFZGCDZOEZRQEZHCCOQITPBRJSPCBKCBALMN $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the membership connective between classes.  Theorem 6.3 of
       [Quine] p. 41, or Proposition 4.6 of [TakeutiZaring] p. 13, which we
       adopt as a definition.  See these references for its metalogical
       justification.  Note that like ~ df-cleq it extends or "overloads" the
       use of the existing membership symbol, but unlike ~ df-cleq it does not
       strengthen the set of valid wffs of logic when the class variables are
       replaced with set variables (see ~ cleljust ), so we don't include any
       set theory axiom as a hypothesis.  See also comments about the syntax
       under ~ df-clab .  Alternate definitions of ` A e. B ` (but that require
       either ` A ` or ` B ` to be a set) are shown by ~ clel2 , ~ clel3 , and
       ~ clel4 . $)
    df-clel $a |- ( A e. B <-> E. x ( x = A /\ x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.
    eqriv.1 $e |- ( x e. A <-> x e. B ) $.
    $( Infer equality of classes from equivalence of membership. $)
    eqriv $p |- A = B $=
      ( wceq cv wcel wb dfcleq mpgbir ) BCEAFZBGKCGHAABCIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdv.1 $e |- ( ph -> ( x e. A <-> x e. B ) ) $.
    $( Deduce equality of classes from equivalence of membership. $)
    eqrdv $p |- ( ph -> A = B ) $=
      ( cv wcel wb wal wceq alrimiv dfcleq sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM
      $.
      $( [17-Mar-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdav.1 $e |- ( ( ph /\ x e. A ) -> x e. C ) $.
    eqrdav.2 $e |- ( ( ph /\ x e. B ) -> x e. C ) $.
    eqrdav.3 $e |- ( ( ph /\ x e. C ) -> ( x e. A <-> x e. B ) ) $.
    $( MAY BE REVISED - delete this if it is unused / not useful $)
    $( Deduce equality of classes from an equivalence of membership that
       depends on the membership variable. $)
    eqrdav $p |- ( ph -> A = B ) $=
      ( cv wcel wa biimpd impancom mpd wi exbiri com23 imp impbida eqrdv ) ABCD
      ABIZCJZUADJZAUBKUAEJZUCFAUDUBUCAUDKUBUCHLMNAUCKUDUBGAUCUDUBOAUDUCUBAUDUBU
      CHPQRNST $.
      $( [7-Nov-2008] $)
  $}

  ${
    $d x A $.
    $( Law of identity (reflexivity of class equality).  Theorem 6.4 of [Quine]
       p. 41.

       This law is thought to have originated with Aristotle (_Metaphysics_,
       Book VII, Part 17).  (Thanks to Stefan Allan for this information.) $)
    eqid $p |- A = A $=
      ( vx cv wcel biid eqriv ) BAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  $( Class identity law with antecedent. $)
  eqidd $p |- ( ph -> A = A ) $=
    ( wceq eqid a1i ) BBCABDE $.
    $( [21-Aug-2008] $)

  ${
    $d x A $.  $d x B $.
    $( Commutative law for class equality.  Theorem 6.5 of [Quine] p. 41. $)
    eqcom $p |- ( A = B <-> B = A ) $=
      ( vx cv wcel wb wal wceq bicom albii dfcleq 3bitr4i ) CDZAEZMBEZFZCGONFZC
      GABHBAHPQCNOIJCABKCBAKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcoms.1 $e |- ( A = B -> ph ) $.
    $( Inference applying commutative law for class equality to an
       antecedent. $)
    eqcoms $p |- ( B = A -> ph ) $=
      ( wceq eqcom sylbi ) CBEBCEACBFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcomi.1 $e |- A = B $.
    $( Inference from commutative law for class equality. $)
    eqcomi $p |- B = A $=
      ( wceq eqcom mpbi ) ABDBADCABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcomd.1 $e |- ( ph -> A = B ) $.
    $( Deduction from commutative law for class equality. $)
    eqcomd $p |- ( ph -> B = A ) $=
      ( wceq eqcom sylib ) ABCECBEDBCFG $.
      $( [15-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of equalities. $)
    eqeq1 $p |- ( A = B -> ( A = C <-> B = C ) ) $=
      ( vx wceq cv wcel wb wal dfcleq biimpi 19.21bi bibi1d albidv 3bitr4g ) AB
      EZDFZAGZQCGZHZDIQBGZSHZDIACEBCEPTUBDPRUASPRUAHZDPUCDIDABJKLMNDACJDBCJO $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities. $)
    eqeq1i $p |- ( A = C <-> B = C ) $=
      ( wceq wb eqeq1 ax-mp ) ABEACEBCEFDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities. $)
    eqeq1d $p |- ( ph -> ( A = C <-> B = C ) ) $=
      ( wceq wb eqeq1 syl ) ABCFBDFCDFGEBCDHI $.
      $( [27-Dec-1993] $)
  $}

  $( Equality implies equivalence of equalities. $)
  eqeq2 $p |- ( A = B -> ( C = A <-> C = B ) ) $=
    ( wceq eqeq1 eqcom 3bitr4g ) ABDACDBCDCADCBDABCECAFCBFG $.
    $( [5-Aug-1993] $)

  ${
    eqeq2i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities. $)
    eqeq2i $p |- ( C = A <-> C = B ) $=
      ( wceq wb eqeq2 ax-mp ) ABECAECBEFDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq2d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities. $)
    eqeq2d $p |- ( ph -> ( C = A <-> C = B ) ) $=
      ( wceq wb eqeq2 syl ) ABCFDBFDCFGEBCDHI $.
      $( [27-Dec-1993] $)
  $}

  $( Equality relationship among 4 classes. $)
  eqeq12 $p |- ( ( A = B /\ C = D ) -> ( A = C <-> B = D ) ) $=
    ( wceq eqeq1 eqeq2 sylan9bb ) ABEACEBCECDEBDEABCFCDBGH $.
    $( [3-Aug-1994] $)

  ${
    eqeq12i.1 $e |- A = B $.
    eqeq12i.2 $e |- C = D $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeq12i $p |- ( A = C <-> B = D ) $=
      ( wceq wb eqeq12 mp2an ) ABGCDGACGBDGHEFABCDIJ $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    eqeq12d.1 $e |- ( ph -> A = B ) $.
    eqeq12d.2 $e |- ( ph -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeq12d $p |- ( ph -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2anc ) ABCHDEHBDHCEHIFGBCDEJK $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    eqeqan12d.1 $e |- ( ph -> A = B ) $.
    eqeqan12d.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeqan12d $p |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2an ) ACDIEFICEIDFIJBGHCDEFKL $.
      $( [25-May-2011] $) $( [9-Aug-1994] $)
  $}

  ${
    eqeqan12rd.1 $e |- ( ph -> A = B ) $.
    eqeqan12rd.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality. $)
    eqeqan12rd $p |- ( ( ps /\ ph ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeqan12d ancoms ) ABCEIDFIJABCDEFGHKL $.
      $( [9-Aug-1994] $)
  $}

  $( Transitive law for class equality.  Proposition 4.7(3) of [TakeutiZaring]
     p. 13. $)
  eqtr $p |- ( ( A = B /\ B = C ) -> A = C ) $=
    ( wceq eqeq1 biimpar ) ABDACDBCDABCEF $.
    $( [25-Jan-2004] $)

  $( A transitive law for class equality.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  eqtr2 $p |- ( ( A = B /\ A = C ) -> B = C ) $=
    ( wceq eqcom eqtr sylanb ) ABDBADACDBCDABEBACFG $.
    $( [25-May-2011] $) $( [20-May-2005] $)

  $( A transitive law for class equality. $)
  eqtr3 $p |- ( ( A = C /\ B = C ) -> A = B ) $=
    ( wceq eqcom eqtr sylan2b ) BCDACDCBDABDBCEACBFG $.
    $( [20-May-2005] $)

  ${
    eqtri.1 $e |- A = B $.
    eqtri.2 $e |- B = C $.
    $( An equality transitivity inference. $)
    eqtri $p |- A = C $=
      ( wceq eqeq2i mpbi ) ABFACFDBCAEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqtr2i.1 $e |- A = B $.
    eqtr2i.2 $e |- B = C $.
    $( An equality transitivity inference. $)
    eqtr2i $p |- C = A $=
      ( eqtri eqcomi ) ACABCDEFG $.
      $( [21-Feb-1995] $)
  $}

  ${
    eqtr3i.1 $e |- A = B $.
    eqtr3i.2 $e |- A = C $.
    $( An equality transitivity inference. $)
    eqtr3i $p |- B = C $=
      ( eqcomi eqtri ) BACABDFEG $.
      $( [6-May-1994] $)
  $}

  ${
    eqtr4i.1 $e |- A = B $.
    eqtr4i.2 $e |- C = B $.
    $( An equality transitivity inference. $)
    eqtr4i $p |- A = C $=
      ( eqcomi eqtri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    3eqtri.1 $e |- A = B $.
    3eqtri.2 $e |- B = C $.
    3eqtri.3 $e |- C = D $.
    $( An inference from three chained equalities. $)
    3eqtri $p |- A = D $=
      ( eqtri ) ABDEBCDFGHH $.
      $( [29-Aug-1993] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtrri $p |- D = A $=
      ( eqtri eqtr2i ) ACDABCEFHGI $.
      $( [25-May-2011] $) $( [3-Aug-2006] $)
  $}

  ${
    3eqtr2i.1 $e |- A = B $.
    3eqtr2i.2 $e |- C = B $.
    3eqtr2i.3 $e |- C = D $.
    $( An inference from three chained equalities. $)
    3eqtr2i $p |- A = D $=
      ( eqtr4i eqtri ) ACDABCEFHGI $.
      $( [3-Aug-2006] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr2ri $p |- D = A $=
      ( eqtr4i eqtr2i ) ACDABCEFHGI $.
      $( [3-Aug-2006] $)
  $}

  ${
    3eqtr3i.1 $e |- A = B $.
    3eqtr3i.2 $e |- A = C $.
    3eqtr3i.3 $e |- B = D $.
    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr3i $p |- C = D $=
      ( eqtr3i ) BCDABCEFHGH $.
      $( [25-May-2011] $) $( [6-May-1994] $)

    $( An inference from three chained equalities. $)
    3eqtr3ri $p |- D = C $=
      ( eqtr3i ) BDCGABCEFHH $.
      $( [15-Aug-2004] $)
  $}

  ${
    3eqtr4i.1 $e |- A = B $.
    3eqtr4i.2 $e |- C = A $.
    3eqtr4i.3 $e |- D = B $.
    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4i $p |- C = D $=
      ( eqtr4i ) CADFDBAGEHH $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4ri $p |- D = C $=
      ( eqtr4i ) DACDBAGEHFH $.
      $( [25-May-2011] $) $( [2-Sep-1995] $)
  $}

  ${
    eqtrd.1 $e |- ( ph -> A = B ) $.
    eqtrd.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    eqtrd $p |- ( ph -> A = C ) $=
      ( wceq eqeq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqtr2d.1 $e |- ( ph -> A = B ) $.
    eqtr2d.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    eqtr2d $p |- ( ph -> C = A ) $=
      ( eqtrd eqcomd ) ABDABCDEFGH $.
      $( [18-Oct-1999] $)
  $}

  ${
    eqtr3d.1 $e |- ( ph -> A = B ) $.
    eqtr3d.2 $e |- ( ph -> A = C ) $.
    $( An equality transitivity equality deduction. $)
    eqtr3d $p |- ( ph -> B = C ) $=
      ( eqcomd eqtrd ) ACBDABCEGFH $.
      $( [18-Jul-1995] $)
  $}

  ${
    eqtr4d.1 $e |- ( ph -> A = B ) $.
    eqtr4d.2 $e |- ( ph -> C = B ) $.
    $( An equality transitivity equality deduction. $)
    eqtr4d $p |- ( ph -> A = C ) $=
      ( eqcomd eqtrd ) ABCDEADCFGH $.
      $( [18-Jul-1995] $)
  $}

  ${
    3eqtrd.1 $e |- ( ph -> A = B ) $.
    3eqtrd.2 $e |- ( ph -> B = C ) $.
    3eqtrd.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities. $)
    3eqtrd $p |- ( ph -> A = D ) $=
      ( eqtrd ) ABCEFACDEGHII $.
      $( [29-Oct-1995] $)

    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtrrd $p |- ( ph -> D = A ) $=
      ( eqtrd eqtr2d ) ABDEABCDFGIHJ $.
      $( [25-May-2011] $) $( [4-Aug-2006] $)
  $}

  ${
    3eqtr2d.1 $e |- ( ph -> A = B ) $.
    3eqtr2d.2 $e |- ( ph -> C = B ) $.
    3eqtr2d.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities. $)
    3eqtr2d $p |- ( ph -> A = D ) $=
      ( eqtr4d eqtrd ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)

    $( A deduction from three chained equalities. $)
    3eqtr2rd $p |- ( ph -> D = A ) $=
      ( eqtr4d eqtr2d ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3eqtr3d.1 $e |- ( ph -> A = B ) $.
    3eqtr3d.2 $e |- ( ph -> A = C ) $.
    3eqtr3d.3 $e |- ( ph -> B = D ) $.
    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr3d $p |- ( ph -> C = D ) $=
      ( eqtr3d ) ACDEABCDFGIHI $.
      $( [25-May-2011] $) $( [4-Aug-1995] $)

    $( A deduction from three chained equalities. $)
    3eqtr3rd $p |- ( ph -> D = C ) $=
      ( eqtr3d ) ACEDHABCDFGII $.
      $( [14-Jan-2006] $)
  $}

  ${
    3eqtr4d.1 $e |- ( ph -> A = B ) $.
    3eqtr4d.2 $e |- ( ph -> C = A ) $.
    3eqtr4d.3 $e |- ( ph -> D = B ) $.
    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4d $p |- ( ph -> C = D ) $=
      ( eqtr4d ) ADBEGAECBHFII $.
      $( [25-May-2011] $) $( [4-Aug-1995] $)

    $( A deduction from three chained equalities. $)
    3eqtr4rd $p |- ( ph -> D = C ) $=
      ( eqtr4d ) AEBDAECBHFIGI $.
      $( [21-Sep-1995] $)
  $}

  ${
    syl5eq.1 $e |- A = B $.
    syl5eq.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDBCGAEHFI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5req.1 $e |- A = B $.
    syl5req.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5req $p |- ( ph -> C = A ) $=
      ( syl5eq eqcomd ) ABDABCDEFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl5eqr.1 $e |- B = A $.
    syl5eqr.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl5eq ) ABCDCBEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5reqr.1 $e |- B = A $.
    syl5reqr.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl5req ) ABCDCBEGFH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl6eq.1 $e |- ( ph -> A = B ) $.
    syl6eq.2 $e |- B = C $.
    $( An equality transitivity deduction. $)
    syl6eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDECDGAFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6req.1 $e |- ( ph -> A = B ) $.
    syl6req.2 $e |- B = C $.
    $( An equality transitivity deduction. $)
    syl6req $p |- ( ph -> C = A ) $=
      ( syl6eq eqcomd ) ABDABCDEFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl6eqr.1 $e |- ( ph -> A = B ) $.
    syl6eqr.2 $e |- C = B $.
    $( An equality transitivity deduction. $)
    syl6eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl6eq ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6reqr.1 $e |- ( ph -> A = B ) $.
    syl6reqr.2 $e |- C = B $.
    $( An equality transitivity deduction. $)
    syl6reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl6req ) ABCDEDCFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    sylan9eq.1 $e |- ( ph -> A = B ) $.
    sylan9eq.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    sylan9eq $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( wceq eqtr syl2an ) ACDHDEHCEHBFGCDEIJ $.
      $( [25-May-2011] $) $( [8-May-1994] $)
  $}

  ${
    sylan9req.1 $e |- ( ph -> B = A ) $.
    sylan9req.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction. $)
    sylan9req $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( eqcomd sylan9eq ) ABCDEADCFHGI $.
      $( [23-Jun-2007] $)
  $}

  ${
    sylan9eqr.1 $e |- ( ph -> A = B ) $.
    sylan9eqr.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction. $)
    sylan9eqr $p |- ( ( ps /\ ph ) -> A = C ) $=
      ( wceq sylan9eq ancoms ) ABCEHABCDEFGIJ $.
      $( [8-May-1994] $)
  $}

  ${
    3eqtr3g.1 $e |- ( ph -> A = B ) $.
    3eqtr3g.2 $e |- A = C $.
    3eqtr3g.3 $e |- B = D $.
    $( A chained equality inference, useful for converting from definitions. $)
    3eqtr3g $p |- ( ph -> C = D ) $=
      ( syl5eqr syl6eq ) ADCEADBCGFIHJ $.
      $( [15-Nov-1994] $)
  $}

  ${
    3eqtr4g.1 $e |- ( ph -> A = B ) $.
    3eqtr4g.2 $e |- C = A $.
    3eqtr4g.3 $e |- D = B $.
    $( A chained equality inference, useful for converting to definitions. $)
    3eqtr4g $p |- ( ph -> C = D ) $=
      ( syl5eq syl6eqr ) ADCEADBCGFIHJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    3eqtr4a.1 $e |- A = B $.
    3eqtr4a.2 $e |- ( ph -> C = A ) $.
    3eqtr4a.3 $e |- ( ph -> D = B ) $.
    $( A chained equality inference, useful for converting to definitions.
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr4a $p |- ( ph -> C = D ) $=
      ( syl6eq eqtr4d ) ADCEADBCGFIHJ $.
      $( [25-May-2011] $) $( [2-Feb-2007] $)
  $}

  ${
    eq2tr.1 $e |- ( A = C -> D = F ) $.
    eq2tr.2 $e |- ( B = D -> C = G ) $.
    $( A compound transitive inference for class equality. $)
    eq2tri $p |- ( ( A = C /\ B = F ) <-> ( B = D /\ A = G ) ) $=
      ( wceq wa ancom eqeq2d pm5.32i 3bitr3i ) ACIZBDIZJPOJOBEIZJPAFIZJOPKOPQOD
      EBGLMPORPCFAHLMN $.
      $( [22-Jan-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of membership. $)
    eleq1 $p |- ( A = B -> ( A e. C <-> B e. C ) ) $=
      ( vx wceq cv wcel wa wex eqeq2 anbi1d exbidv df-clel 3bitr4g ) ABEZDFZAEZ
      PCGZHZDIPBEZRHZDIACGBCGOSUADOQTRABPJKLDACMDBCMN $.
      $( [5-Aug-1993] $)

    $( Equality implies equivalence of membership. $)
    eleq2 $p |- ( A = B -> ( C e. A <-> C e. B ) ) $=
      ( vx wceq cv wcel wa wex wal dfcleq biimpi 19.21bi anbi2d df-clel 3bitr4g
      wb exbidv ) ABEZDFZCEZTAGZHZDIUATBGZHZDICAGCBGSUCUEDSUBUDUASUBUDQZDSUFDJD
      ABKLMNRDCAODCBOP $.
      $( [5-Aug-1993] $)
  $}

  $( Equality implies equivalence of membership. $)
  eleq12 $p |- ( ( A = B /\ C = D ) -> ( A e. C <-> B e. D ) ) $=
    ( wceq wcel eleq1 eleq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [31-May-1999] $)

  ${
    eleq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of membership. $)
    eleq1i $p |- ( A e. C <-> B e. C ) $=
      ( wceq wcel wb eleq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [5-Aug-1993] $)

    $( Inference from equality to equivalence of membership. $)
    eleq2i $p |- ( C e. A <-> C e. B ) $=
      ( wceq wcel wb eleq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [5-Aug-1993] $)

    ${
      eleq12i.2 $e |- C = D $.
      $( Inference from equality to equivalence of membership. $)
      eleq12i $p |- ( A e. C <-> B e. D ) $=
        ( wcel eleq2i eleq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
        $( [31-May-1994] $)
    $}
  $}

  ${
    eleq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of membership. $)
    eleq1d $p |- ( ph -> ( A e. C <-> B e. C ) ) $=
      ( wceq wcel wb eleq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [5-Aug-1993] $)

    $( Deduction from equality to equivalence of membership. $)
    eleq2d $p |- ( ph -> ( C e. A <-> C e. B ) ) $=
      ( wceq wcel wb eleq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [27-Dec-1993] $)

    ${
      eleq12d.2 $e |- ( ph -> C = D ) $.
      $( Deduction from equality to equivalence of membership. $)
      eleq12d $p |- ( ph -> ( A e. C <-> B e. D ) ) $=
        ( wcel eleq2d eleq1d bitrd ) ABDHBEHCEHADEBGIABCEFJK $.
        $( [31-May-1994] $)
    $}
  $}

  $( A transitive-type law relating membership and equality. $)
  eleq1a $p |- ( A e. B -> ( C = A -> C e. B ) ) $=
    ( wceq wcel eleq1 biimprcd ) CADCBEABECABFG $.
    $( [9-Apr-1994] $)

  ${
    eqeltr.1 $e |- A = B $.
    eqeltr.2 $e |- B e. C $.
    $( Substitution of equal classes into membership relation. $)
    eqeltri $p |- A e. C $=
      ( wcel eleq1i mpbir ) ACFBCFEABCDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeltrr.1 $e |- A = B $.
    eqeltrr.2 $e |- A e. C $.
    $( Substitution of equal classes into membership relation. $)
    eqeltrri $p |- B e. C $=
      ( eqcomi eqeltri ) BACABDFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eleqtr.1 $e |- A e. B $.
    eleqtr.2 $e |- B = C $.
    $( Substitution of equal classes into membership relation. $)
    eleqtri $p |- A e. C $=
      ( wcel eleq2i mpbi ) ABFACFDBCAEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eleqtrr.1 $e |- A e. B $.
    eleqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into membership relation. $)
    eleqtrri $p |- A e. C $=
      ( eqcomi eleqtri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeltrd.1 $e |- ( ph -> A = B ) $.
    eqeltrd.2 $e |- ( ph -> B e. C ) $.
    $( Substitution of equal classes into membership relation, deduction form.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    eqeltrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [10-Dec-2002] $)
  $}

  ${
    eqeltrrd.1 $e |- ( ph -> A = B ) $.
    eqeltrrd.2 $e |- ( ph -> A e. C ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eqeltrrd $p |- ( ph -> B e. C ) $=
      ( eqcomd eqeltrd ) ACBDABCEGFH $.
      $( [14-Dec-2004] $)
  $}

  ${
    eleqtrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrd.2 $e |- ( ph -> B = C ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eleqtrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [14-Dec-2004] $)
  $}

  ${
    eleqtrrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eleqtrrd $p |- ( ph -> A e. C ) $=
      ( eqcomd eleqtrd ) ABCDEADCFGH $.
      $( [14-Dec-2004] $)
  $}

  ${
    syl5eqel.1 $e |- A = B $.
    syl5eqel.2 $e |- ( ph -> B e. C ) $.
    $( B membership and equality inference. $)
    syl5eqel $p |- ( ph -> A e. C ) $=
      ( wceq a1i eqeltrd ) ABCDBCGAEHFI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eqelr.1 $e |- B = A $.
    syl5eqelr.2 $e |- ( ph -> B e. C ) $.
    $( B membership and equality inference. $)
    syl5eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl5eqel ) ABCDCBEGFH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eleq.1 $e |- A e. B $.
    syl5eleq.2 $e |- ( ph -> B = C ) $.
    $( B membership and equality inference. $)
    syl5eleq $p |- ( ph -> A e. C ) $=
      ( wcel a1i eleqtrd ) ABCDBCGAEHFI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eleqr.1 $e |- A e. B $.
    syl5eleqr.2 $e |- ( ph -> C = B ) $.
    $( B membership and equality inference. $)
    syl5eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl5eleq ) ABCDEADCFGH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eqel.1 $e |- ( ph -> A = B ) $.
    syl6eqel.2 $e |- B e. C $.
    $( A membership and equality inference. $)
    syl6eqel $p |- ( ph -> A e. C ) $=
      ( wcel a1i eqeltrd ) ABCDECDGAFHI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eqelr.1 $e |- ( ph -> B = A ) $.
    syl6eqelr.2 $e |- B e. C $.
    $( A membership and equality inference. $)
    syl6eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl6eqel ) ABCDACBEGFH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eleq.1 $e |- ( ph -> A e. B ) $.
    syl6eleq.2 $e |- B = C $.
    $( A membership and equality inference. $)
    syl6eleq $p |- ( ph -> A e. C ) $=
      ( wceq a1i eleqtrd ) ABCDECDGAFHI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eleqr.1 $e |- ( ph -> A e. B ) $.
    syl6eleqr.2 $e |- C = B $.
    $( A membership and equality inference. $)
    syl6eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl6eleq ) ABCDEDCFGH $.
      $( [24-Apr-2005] $)
  $}

  ${
    eleq2s.1 $e |- ( A e. B -> ph ) $.
    eleq2s.2 $e |- C = B $.
    $( Substitution of equal classes into a membership antecedent.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    eleq2s $p |- ( A e. C -> ph ) $=
      ( wcel eleq2i sylbi ) BDGBCGADCBFHEI $.
      $( [12-Jun-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    cleqf.1 $e |- ( y e. A -> A. x y e. A ) $.
    cleqf.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Establish equality between classes, using bound-variable hypotheses
       instead of distinct variable conditions. $)
    cleqf $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( wceq cv wcel wb wal dfcleq ax-17 hbbi eleq1 bibi12d cbval bitr4i ) CDGB
      HZCIZSDIZJZBKAHZCIZUCDIZJZAKBCDLUFUBABUFBMTUAAEFNUCSGUDTUEUAUCSCOUCSDOPQR
      $.
      $( [5-Aug-1993] $)
  $}

  $( A way of showing two classes are not equal. $)
  nelneq $p |- ( ( A e. C /\ -. B e. C ) -> -. A = B ) $=
    ( wcel wn wceq eleq1 biimpcd con3d imp ) ACDZBCDZEABFZEKMLMKLABCGHIJ $.
    $( [1-Apr-1997] $)

  $( A way of showing two classes are not equal. $)
  nelneq2 $p |- ( ( A e. B /\ -. A e. C ) -> -. B = C ) $=
    ( wcel wn wceq eleq2 biimpcd con3d imp ) ABDZACDZEBCFZEKMLMKLBCAGHIJ $.
    $( [12-Jan-2002] $)

  ${
    $d x y $.  $d y A $.
    $( Lemma for ~ eqsb3 .  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    eqsb3lem $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( cv wceq ax-17 eqeq1 sbie ) BDZCEADZCEZBAKBFIJCGH $.
      $( [14-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d x w $.
    $( Substitution applied to an atomic wff (class version of ~ equsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.) $)
    eqsb3 $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( vw cv wceq wsbc eqsb3lem sbbii ax-17 sbco2 3bitr3i ) BECFZBDEZGZDAEZGNC
      FZDPGMBPGPCFOQDADBCHIMBADMDJKADCHL $.
      $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d w x $.
    $( Substitution applied to an atomic wff (class version of ~ elsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.)  (The proof was shortened
       by Andrew Salmon, 14-Jun-2011.) $)
    clelsb3 $p |- ( [ x / y ] y e. A <-> x e. A ) $=
      ( vw cv wcel wsbc ax-17 eleq1 sbie sbbii sbco2 bitr3i wb wceq sbimi ax-mp
      equsb1 sbbi mpbi sbf 3bitri ) BEZCFZBAEZGZDEZCFZDUEGZUECFZDUEGZUJUFUHDUCG
      ZBUEGUIULUDBAUHUDDBUDDHUGUCCIJKUHDABUHBHLMUHUJNZDUEGZUIUKNUGUEOZDUEGUNDAR
      UOUMDAUGUECIPQUHUJDASTUJDAUJDHUAUB $.
      $( [14-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w ph $.  $d w x z $.
    hblemd.1 $e |- ( ph -> A. x ph ) $.
    hblemd.2 $e |- ( ph -> A. y ph ) $.
    hblemd.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hblem . $)
    hblemd $p |- ( ph -> ( z e. A -> A. x z e. A ) ) $=
      ( cv wcel wsbc wal hbsbd clelsb3 albii 3imtr3g ) ACIEJZCDIZKZSBLREJZTBLAQ
      CDBGFHMDCENZSTBUAOP $.
      $( [17-Feb-2013] $)
  $}

  ${
    hbxfr.1 $e |- A = B $.
    hbxfr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( A utility lemma to transfer a bound-variable hypothesis builder into a
       definition.  See ~ hbxfrbi for equivalence version. $)
    hbxfreq $p |- ( y e. A -> A. x y e. A ) $=
      ( cv wcel eleq2i hbxfrbi ) BGZCHKDHACDKEIFJ $.
      $( [21-Aug-2007] $)
  $}

  ${
    hbxfrd.1 $e |- ( ph -> A. x ph ) $.
    hbxfrd.2 $e |- ( ph -> A = B ) $.
    hbxfrd.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbxfreq . $)
    hbxfrd $p |- ( ph -> ( y e. A -> A. x y e. A ) ) $=
      ( cv wcel wal eleq2d albid 3imtr4d ) ACIZEJZPBKODJZQBKHADEOGLZAQPBFRMN $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d w y A $.  $d w x z $.
    hblem.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Lemma for ~ hbeq and ~ hbel .  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hblem $p |- ( z e. A -> A. x z e. A ) $=
      ( cv wcel wsbc wal hbsb clelsb3 albii 3imtr3i ) BFDGZBCFZHZPAIODGZQAINBCA
      EJCBDKZPQARLM $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d y A w $.  $d z B w $.  $d w x $.
    hbeq.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbeq.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( If ` x ` is effectively bound in ` A ` and ` B ` , it is effectively
       bound in ` A = B ` .  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbeq $p |- ( A = B -> A. x A = B ) $=
      ( vw wceq cv wcel wb wal dfcleq hblem hbbi hbal hbxfrbi ) DEIHJZDKZSEKZLZ
      HMAHDENUBAHTUAAABHDFOACHEGOPQR $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d y A w $.  $d z B w $.  $d w x v $.
    hbel.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbel.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( If ` x ` is effectively bound in ` A ` and ` B ` , it is effectively
       bound in ` A e. B ` .  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbel $p |- ( A e. B -> A. x A e. B ) $=
      ( vw vv wcel cv wceq wa wex df-clel ax-17 hbeq hblem hban hbex hbxfrbi )
      DEJHKZDLZUBEJZMZHNAHDEOUEAHUCUDAAIBUBDIKUBJAPFQACHEGRSTUA $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d y A $.
    hbeleq.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( If ` x ` is effectively bound in ` y e. A ` , then it is effectively
       bound in ` y = A ` .  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    hbeleq $p |- ( y = A -> A. x y = A ) $=
      ( vz cv wcel ax-17 hbeq ) AEBBFZCEFJGAHDI $.
      $( [12-Aug-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction (also called a
       class builder).  Theorem 5.1 of [Quine] p. 34.  This theorem shows the
       relationship between expressions with class abstractions and expressions
       with class variables.  Note that ~ abbi and its relatives are among
       those useful for converting theorems with class variables to equivalent
       theorems with wff variables, by first substituting a class abstraction
       for each class variable.

       Class variables can always be eliminated from a theorem to result in an
       equivalent theorem with wff variables, and vice-versa.  The idea is
       roughly as follows.  To convert a theorem with a wff variable ` ph `
       (that has a free variable ` x ` ) to a theorem with a class variable
       ` A ` , we substitute ` x e. A ` for ` ph ` throughout and simplify,
       where ` A ` is a new class variable not already in the wff.  An example
       is the conversion of ~ zfauscl to ~ inex1 (look at the instance of
       ~ zfauscl that occurs in the proof of ~ inex1 ).  Conversely, to convert
       a theorem with a class variable ` A ` to one with ` ph ` , we substitute
       ` { x | ph } ` for ` A ` throughout and simplify, where ` x ` and ` ph `
       are new set and wff variables not already in the wff.  An example is
       ~ cp , which derives a formula containing wff variables from
       substitution instances of the class variables in its equivalent
       formulation ~ cplem2 .  For more information on class variables, see
       Quine pp. 15-21 and/or Takeuti and Zaring pp. 10-13. $)
    abeq2 $p |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) $=
      ( vy cab wceq cv wcel wb wal ax-17 hbab1 cleqf abid bibi2i albii bitri )
      CABEZFBGZCHZSRHZIZBJTAIZBJBDCRDGCHBKABDLMUBUCBUAATABNOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction. $)
    abeq1 $p |- ( { x | ph } = A <-> A. x ( ph <-> x e. A ) ) $=
      ( cab wceq cv wcel wb wal abeq2 eqcom bicom albii 3bitr4i ) CABDZEBFCGZAH
      ZBIOCEAPHZBIABCJOCKRQBAPLMN $.
      $( [20-Aug-1993] $)
  $}

  ${
    abeqi.1 $e |- A = { x | ph } $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abeq2i $p |- ( x e. A <-> ph ) $=
      ( cv wcel cab eleq2i abid bitri ) BEZCFKABGZFACLKDHABIJ $.
      $( [3-Apr-1996] $)
  $}

  ${
    abeqri.1 $e |- { x | ph } = A $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abeq1i $p |- ( ph <-> x e. A ) $=
      ( cv cab wcel abid eleq2i bitr3i ) ABEZABFZGKCGABHLCKDIJ $.
      $( [31-Jul-1994] $)
  $}

  ${
    abeqd.1 $e |- ( ph -> A = { x | ps } ) $.
    $( Equality of a class variable and a class abstraction (deduction). $)
    abeq2d $p |- ( ph -> ( x e. A <-> ps ) ) $=
      ( cv wcel cab eleq2d abid syl6bb ) ACFZDGLBCHZGBADMLEIBCJK $.
      $( [16-Nov-1995] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Obsolete version of ~ abbi as of 25-Nov-2013. $)
    eq2abOLD $p |- ( { x | ph } = { x | ps } <-> A. x ( ph <-> ps ) ) $=
      ( vy cab wceq cv wcel wb wal hbab1 cleqf abid bibi12i albii bitri ) ACEZB
      CEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Equivalent wff's correspond to equal class abstractions. $)
    abbi $p |- ( A. x ( ph <-> ps ) <-> { x | ph } = { x | ps } ) $=
      ( vy cab wceq cv wcel wb wal hbab1 cleqf abid bibi12i albii bitr2i ) ACEZ
      BCEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [25-Nov-2013] $)
  $}

  ${
    $d x A $.
    abbiri.1 $e |- ( x e. A <-> ph ) $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abbi2i $p |- A = { x | ph } $=
      ( cab wceq cv wcel wb abeq2 mpgbir ) CABEFBGCHAIBABCJDK $.
      $( [5-Aug-1993] $)
  $}

  ${
    abbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions (inference rule). $)
    abbii $p |- { x | ph } = { x | ps } $=
      ( wb cab wceq abbi mpgbi ) ABEACFBCFGCABCHDI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.  $d ch y $.  $( ` y ` is a dummy var. $)
    abbid.1 $e |- ( ph -> A. x ph ) $.
    abbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule). $)
    abbid $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( wb wal cab wceq alrimi abbi sylib ) ABCGZDHBDICDIJANDEFKBCDLM $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    abbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule). $)
    abbidv $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( ax-17 abbid ) ABCDADFEG $.
      $( [10-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbirdv.1 $e |- ( ph -> ( x e. A <-> ps ) ) $.
    $( Deduction from a wff to a class abstraction. $)
    abbi2dv $p |- ( ph -> A = { x | ps } ) $=
      ( cv wcel wb wal cab wceq alrimiv abeq2 sylibr ) ACFDGBHZCIDBCJKAOCELBCDM
      N $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbildv.1 $e |- ( ph -> ( ps <-> x e. A ) ) $.
    $( Deduction from a wff to a class abstraction. $)
    abbi1dv $p |- ( ph -> { x | ps } = A ) $=
      ( cv wcel wb wal cab wceq alrimiv abeq1 sylibr ) ABCFDGHZCIBCJDKAOCELBCDM
      N $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x A $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35. $)
    abid2 $p |- { x | x e. A } = A $=
      ( cv wcel cab biid abbi2i eqcomi ) BACBDZAEIABIFGH $.
      $( [26-Dec-1993] $)
  $}

  ${
    $d y A $.  $d x y $.
    abid2f.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35. $)
    abid2f $p |- { x | x e. A } = A $=
      ( cv wcel cab wceq wb wal hbab1 cleqf abid bibi2i albii bitri biid mpgbir
      eqcomi ) CAEZCFZAGZCUBHZUAUAIZAUCUATUBFZIZAJUDAJABCUBDUAABKLUFUDAUEUAUAUA
      AMNOPUAQRS $.
      $( [5-Sep-2011] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership of a class variable in a class abstraction. $)
    clelab $p |- ( A e. { x | ph } <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq cab wcel wa wex wsbc df-clab anbi2i exbii df-clel ax-17 hbs1
      hban eqeq1 sbequ12 anbi12d cbvex 3bitr4i ) DEZCFZUDABGZHZIZDJUEABUDKZIZDJ
      CUFHBEZCFZAIZBJUHUJDUGUIUEADBLMNDCUFOUMUJBDUMDPUEUIBUEBPABDQRUKUDFULUEAUI
      UKUDCSABDTUAUBUC $.
      $( [23-Dec-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( Membership of a class abstraction in another class. $)
    clabel $p |- ( { x | ph } e. A <->
                 E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) $=
      ( cab wcel cv wceq wa wex wb wal df-clel abeq2 anbi1i ancom bitri exbii )
      ABEZDFCGZSHZTDFZIZCJUBBGTFAKBLZIZCJCSDMUCUECUCUDUBIUEUAUDUBABTNOUDUBPQRQ
      $.
      $( [17-Jan-2006] $)
  $}

  ${
    $d z A $.  $d z x $.  $d z y $.
    $( The right-hand side of the second equality is a way of representing
       proper substitution of ` y ` for ` x ` into a class variable. $)
    sbab $p |- ( x = y -> A = { z | [ y / x ] z e. A } ) $=
      ( cv wceq wcel wsbc sbequ12 abbi2dv ) AEBEZFCEDGZAKHCDLABIJ $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d v A w $.  $d x z v u $.  $d y z v u $.  $d v ph $.
    sbabel.1 $e |- ( w e. A -> A. x w e. A ) $.
    $( Theorem to move a substitution in and out of a class abstraction.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    sbabel $p |- ( [ y / x ] { z | ph } e. A <-> { z | [ y / x ] ph } e. A ) $=
      ( vv cv cab wceq wcel wa wex wsbc wb wal sbf abeq2 sbbii sbex sban sbrbis
      ax-17 sbalv 3bitr4i hblem anbi12i bitri exbii df-clel ) HIZADJZKZULFLZMZH
      NZBCIZOZULABUROZDJZKZUOMZHNZUMFLZBUROVAFLUSUPBUROZHNVDUPHBCUAVFVCHVFUNBUR
      OZUOBUROZMVCUNUOBCUBVGVBVHUODIULLZAPZDQZBUROVIUTPZDQVGVBVJVLBCDVIVIABCVIB
      CVIBUDRUCUEUNVKBCADULSTUTDULSUFUOBCBEHFGUGRUHUIUJUIVEUQBCHUMFUKTHVAFUKUF
      $.
      $( [11-Jul-2011] $) $( [27-Sep-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Negated equality and membership
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new connectives. $)
  $c =/= $. $( Not equal to (equal sign with slash through it). $)
  $c e/ $. $( Not an element of (epsilon with slash through it). $)

  $( Extend wff notation to include inequality. $)
  wne $a wff A =/= B $.

  $( Extend wff notation to include negated membership. $)
  wnel $a wff A e/ B $.

  $( Define inequality. $)
  df-ne $a |- ( A =/= B <-> -. A = B ) $.

  $( Define negated membership. $)
  df-nel $a |- ( A e/ B <-> -. A e. B ) $.

  $( Negation of inequality. $)
  nne $p |- ( -. A =/= B <-> A = B ) $=
    ( wceq wne wn df-ne con2bii bicomi ) ABCZABDZEJIABFGH $.
    $( [9-Jun-2006] $)

  $( Excluded middle with equality and inequality. $)
  exmidne $p |- ( A = B \/ A =/= B ) $=
    ( wceq wne wo wn exmid df-ne orbi2i mpbir ) ABCZABDZEKKFZEKGLMKABHIJ $.
    $( [3-Feb-2012] $)

  $( Law of noncontradiction with equality and inequality. $)
  nonconne $p |- -. ( A = B /\ A =/= B ) $=
    ( wceq wne wa wn pm3.24 df-ne anbi2i mtbir ) ABCZABDZEKKFZEKGLMKABHIJ $.
    $( [3-Feb-2012] $)

  $( Equality theorem for inequality. $)
  neeq1 $p |- ( A = B -> ( A =/= C <-> B =/= C ) ) $=
    ( wceq wn wne eqeq1 notbid df-ne 3bitr4g ) ABDZACDZEBCDZEACFBCFKLMABCGHACIB
    CIJ $.
    $( [19-Nov-1994] $)

  $( Equality theorem for inequality. $)
  neeq2 $p |- ( A = B -> ( C =/= A <-> C =/= B ) ) $=
    ( wceq wn wne eqeq2 notbid df-ne 3bitr4g ) ABDZCADZECBDZECAFCBFKLMABCGHCAIC
    BIJ $.
    $( [19-Nov-1994] $)

  ${
    neeq1i.1 $e |- A = B $.
    $( Inference for inequality. $)
    neeq1i $p |- ( A =/= C <-> B =/= C ) $=
      ( wceq wne wb neeq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [29-Apr-2005] $)

    $( Inference for inequality. $)
    neeq2i $p |- ( C =/= A <-> C =/= B ) $=
      ( wceq wne wb neeq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [29-Apr-2005] $)

    neeq12i.2 $e |- C = D $.
    $( Inference for inequality. $)
    neeq12i $p |- ( A =/= C <-> B =/= D ) $=
      ( wne neeq2i neeq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [24-Jul-2012] $)
  $}

  ${
    neeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction for inequality. $)
    neeq1d $p |- ( ph -> ( A =/= C <-> B =/= C ) ) $=
      ( wceq wne wb neeq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [25-Oct-1999] $)

    $( Deduction for inequality. $)
    neeq2d $p |- ( ph -> ( C =/= A <-> C =/= B ) ) $=
      ( wceq wne wb neeq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [25-Oct-1999] $)

    neeq12d.2 $e |- ( ph -> C = D ) $.
    $( Deduction for inequality. $)
    neeq12d $p |- ( ph -> ( A =/= C <-> B =/= D ) ) $=
      ( wne neeq1d neeq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    eqnetr.1 $e |- A = B $.
    eqnetr.2 $e |- B =/= C $.
    $( Substitution of equal classes into an inequality. $)
    eqnetri $p |- A =/= C $=
      ( wne neeq1i mpbir ) ACFBCFEABCDGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrd.1 $e |- ( ph -> A = B ) $.
    eqnetrd.2 $e |- ( ph -> B =/= C ) $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrr.1 $e |- A = B $.
    eqnetrr.2 $e |- A =/= C $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrri $p |- B =/= C $=
      ( eqcomi eqnetri ) BACABDFEG $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrrd.1 $e |- ( ph -> A = B ) $.
    eqnetrrd.2 $e |- ( ph -> A =/= C ) $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrrd $p |- ( ph -> B =/= C ) $=
      ( eqcomd eqnetrd ) ACBDABCEGFH $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtr.1 $e |- A =/= B $.
    neeqtr.2 $e |- B = C $.
    $( Substitution of equal classes into an inequality. $)
    neeqtri $p |- A =/= C $=
      ( wne neeq2i mpbi ) ABFACFDBCAEGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrr.1 $e |- A =/= B $.
    neeqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrri $p |- A =/= C $=
      ( eqcomi neeqtri ) ABCDCBEFG $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrrd $p |- ( ph -> A =/= C ) $=
      ( eqcomd neeqtrd ) ABCDEADCFGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    syl5eqner.1 $e |- B = A $.
    syl5eqner.2 $e |- ( ph -> B =/= C ) $.
    $( B chained equality inference for inequality. $)
    syl5eqner $p |- ( ph -> A =/= C ) $=
      ( wne neeq1i sylib ) ACDGBDGFCBDEHI $.
      $( [6-Jun-2012] $)
  $}

  ${
    3netr3d.1 $e |- ( ph -> A =/= B ) $.
    3netr3d.2 $e |- ( ph -> A = C ) $.
    3netr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr3d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbid ) ABCIDEIFABDCEGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr4d.1 $e |- ( ph -> A =/= B ) $.
    3netr4d.2 $e |- ( ph -> C = A ) $.
    3netr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr4d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbird ) ADEIBCIFADBECGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr3g.1 $e |- ( ph -> A =/= B ) $.
    3netr3g.2 $e |- A = C $.
    3netr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr3g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylib ) ABCIDEIFBDCEGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr4g.1 $e |- ( ph -> A =/= B ) $.
    3netr4g.2 $e |- C = A $.
    3netr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr4g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylibr ) ABCIDEIFDBECGHJK $.
      $( [14-Jun-2012] $)
  $}

  ${
    necon3abii.1 $e |- ( A = B <-> ph ) $.
    $( Deduction from equality to inequality. $)
    necon3abii $p |- ( A =/= B <-> -. ph ) $=
      ( wne wceq df-ne xchbinx ) BCEBCFABCGDH $.
      $( [9-Nov-2007] $)
  $}

  ${
    necon3bbii.1 $e |- ( ph <-> A = B ) $.
    $( Deduction from equality to inequality. $)
    necon3bbii $p |- ( -. ph <-> A =/= B ) $=
      ( wne wn wceq bicomi necon3abii ) BCEAFABCABCGDHIH $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon3bii.1 $e |- ( A = B <-> C = D ) $.
    $( Inference from equality to inequality. $)
    necon3bii $p |- ( A =/= B <-> C =/= D ) $=
      ( wne wceq wn necon3abii df-ne bitr4i ) ABFCDGZHCDFLABEICDJK $.
      $( [23-Feb-2005] $)
  $}

  ${
    necon3abid.1 $e |- ( ph -> ( A = B <-> ps ) ) $.
    $( Deduction from equality to inequality. $)
    necon3abid $p |- ( ph -> ( A =/= B <-> -. ps ) ) $=
      ( wne wceq wn df-ne notbid syl5bb ) CDFCDGZHABHCDIALBEJK $.
      $( [21-Mar-2007] $)
  $}

  ${
    necon3bbid.1 $e |- ( ph -> ( ps <-> A = B ) ) $.
    $( Deduction from equality to inequality. $)
    necon3bbid $p |- ( ph -> ( -. ps <-> A =/= B ) ) $=
      ( wne wn wceq bicomd necon3abid ) ACDFBGABCDABCDHEIJI $.
      $( [2-Jun-2007] $)
  $}

  ${
    necon3bid.1 $e |- ( ph -> ( A = B <-> C = D ) ) $.
    $( Deduction from equality to inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3bid $p |- ( ph -> ( A =/= B <-> C =/= D ) ) $=
      ( wne wceq wn df-ne necon3bbid syl5bb ) BCGBCHZIADEGBCJAMDEFKL $.
      $( [25-May-2011] $) $( [23-Feb-2005] $)
  $}

  ${
    necon3ad.1 $e |- ( ph -> ( ps -> A = B ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon3ad $p |- ( ph -> ( A =/= B -> -. ps ) ) $=
      ( wne wceq wn nne syl6ibr con2d ) ABCDFZABCDGLHECDIJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon3bd.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon3bd $p |- ( ph -> ( -. ps -> A =/= B ) ) $=
      ( wne wn wceq nne syl5bi con1d ) ACDFZBLGCDHABCDIEJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon3d.1 $e |- ( ph -> ( A = B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon3d $p |- ( ph -> ( C =/= D -> A =/= B ) ) $=
      ( wne wceq wn necon3ad df-ne syl6ibr ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [10-Jun-2006] $)
  $}

  ${
    necon3i.1 $e |- ( A = B -> C = D ) $.
    $( Contrapositive inference for inequality. $)
    necon3i $p |- ( C =/= D -> A =/= B ) $=
      ( wceq wi wne id necon3d ax-mp ) ABFCDFGZCDHABHGELABCDLIJK $.
      $( [9-Aug-2006] $)
  $}

  ${
    necon3ai.1 $e |- ( ph -> A = B ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3ai $p |- ( A =/= B -> -. ph ) $=
      ( wne wceq wn nne sylibr con2i ) ABCEZABCFKGDBCHIJ $.
      $( [25-May-2011] $) $( [23-May-2007] $)
  $}

  ${
    necon3bi.1 $e |- ( A = B -> ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3bi $p |- ( -. ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con1i ) BCEZAKFBCGABCHDIJ $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    necon1ai.1 $e |- ( -. ph -> A = B ) $.
    $( Contrapositive inference for inequality. $)
    necon1ai $p |- ( A =/= B -> ph ) $=
      ( wne wceq wn df-ne con1i sylbi ) BCEBCFZGABCHAKDIJ $.
      $( [12-Feb-2007] $)
  $}

  ${
    necon1bi.1 $e |- ( A =/= B -> ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon1bi $p |- ( -. ph -> A = B ) $=
      ( wn wne wceq con3i nne sylib ) AEBCFZEBCGKADHBCIJ $.
      $( [25-May-2011] $) $( [18-Mar-2007] $)
  $}

  ${
    necon1i.1 $e |- ( A =/= B -> C = D ) $.
    $( Contrapositive inference for inequality. $)
    necon1i $p |- ( C =/= D -> A = B ) $=
      ( wceq wn wne df-ne sylbir necon1ai ) ABFZCDLGABHCDFABIEJK $.
      $( [18-Mar-2007] $)
  $}

  ${
    necon2ai.1 $e |- ( A = B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon2ai $p |- ( ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con4i ) BCEZAKFBCGAFBCHDIJ $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    necon2bi.1 $e |- ( ph -> A =/= B ) $.
    $( Contrapositive inference for inequality. $)
    necon2bi $p |- ( A = B -> -. ph ) $=
      ( wceq wne wn df-ne sylib con2i ) ABCEZABCFKGDBCHIJ $.
      $( [1-Apr-2007] $)
  $}

  ${
    necon2i.1 $e |- ( A = B -> C =/= D ) $.
    $( Contrapositive inference for inequality. $)
    necon2i $p |- ( C = D -> A =/= B ) $=
      ( wceq wne wn df-ne sylib necon2ai ) CDFZABABFCDGLHECDIJK $.
      $( [18-Mar-2007] $)
  $}

  ${
    necon2ad.1 $e |- ( ph -> ( A = B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon2ad $p |- ( ph -> ( ps -> A =/= B ) ) $=
      ( wne wn wceq nne syl5bi con4d ) ACDFZBLGCDHABGCDIEJK $.
      $( [25-May-2011] $) $( [19-Apr-2007] $)
  $}

  ${
    necon2bd.1 $e |- ( ph -> ( ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality. $)
    necon2bd $p |- ( ph -> ( A = B -> -. ps ) ) $=
      ( wceq wne wn df-ne syl6ib con2d ) ABCDFZABCDGLHECDIJK $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon2d.1 $e |- ( ph -> ( A = B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality. $)
    necon2d $p |- ( ph -> ( C = D -> A =/= B ) ) $=
      ( wceq wne wn df-ne syl6ib necon2ad ) ADEGZBCABCGDEHMIFDEJKL $.
      $( [28-Dec-2008] $)
  $}

  ${
    necon1abii.1 $e |- ( -. ph <-> A = B ) $.
    $( Contrapositive inference for inequality. $)
    necon1abii $p |- ( A =/= B <-> ph ) $=
      ( wne wceq wn df-ne con1bii bitri ) BCEBCFZGABCHAKDIJ $.
      $( [17-Mar-2007] $)
  $}

  ${
    necon1bbii.1 $e |- ( A =/= B <-> ph ) $.
    $( Contrapositive inference for inequality. $)
    necon1bbii $p |- ( -. ph <-> A = B ) $=
      ( wceq wn wne df-ne bitr3i con1bii ) BCEZAKFBCGABCHDIJ $.
      $( [17-Mar-2007] $)
  $}

  ${
    necon1abid.1 $e |- ( ph -> ( -. ps <-> A = B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon1abid $p |- ( ph -> ( A =/= B <-> ps ) ) $=
      ( wne wceq wn df-ne con1bid syl5bb ) CDFCDGZHABCDIABLEJK $.
      $( [21-Aug-2007] $)
  $}

  ${
    necon1bbid.1 $e |- ( ph -> ( A =/= B <-> ps ) ) $.
    $( Contrapositive inference for inequality. $)
    necon1bbid $p |- ( ph -> ( -. ps <-> A = B ) ) $=
      ( wceq wn wne df-ne syl5bbr con1bid ) ACDFZBLGCDHABCDIEJK $.
      $( [31-Jan-2008] $)
  $}

  ${
    necon2abii.1 $e |- ( A = B <-> -. ph ) $.
    $( Contrapositive inference for inequality. $)
    necon2abii $p |- ( ph <-> A =/= B ) $=
      ( wne wceq wn bicomi necon1abii ) BCEAABCBCFAGDHIH $.
      $( [2-Mar-2007] $)
  $}

  ${
    necon2bbii.1 $e |- ( ph <-> A =/= B ) $.
    $( Contrapositive inference for inequality. $)
    necon2bbii $p |- ( A = B <-> -. ph ) $=
      ( wn wceq wne bicomi necon1bbii ) AEBCFABCABCGDHIH $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon2abid.1 $e |- ( ph -> ( A = B <-> -. ps ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon2abid $p |- ( ph -> ( ps <-> A =/= B ) ) $=
      ( wceq wn wne con2bid df-ne syl6bbr ) ABCDFZGCDHALBEICDJK $.
      $( [18-Jul-2007] $)
  $}

  ${
    necon2bbid.1 $e |- ( ph -> ( ps <-> A =/= B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon2bbid $p |- ( ph -> ( A = B <-> -. ps ) ) $=
      ( wceq wne wn df-ne syl6bb con2bid ) ABCDFZABCDGLHECDIJK $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon4ai.1 $e |- ( A =/= B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4ai $p |- ( ph -> A = B ) $=
      ( wne wn wceq con2i nne sylib ) ABCEZFBCGKADHBCIJ $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    necon4i.1 $e |- ( A =/= B -> C =/= D ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4i $p |- ( C = D -> A = B ) $=
      ( wceq wne wn necon2bi nne sylib ) CDFABGZHABFLCDEIABJK $.
      $( [25-May-2011] $) $( [17-Mar-2007] $)
  $}

  ${
    necon4ad.1 $e |- ( ph -> ( A =/= B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4ad $p |- ( ph -> ( ps -> A = B ) ) $=
      ( wne wn wceq con2d nne syl6ib ) ABCDFZGCDHALBEICDJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon4bd.1 $e |- ( ph -> ( -. ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4bd $p |- ( ph -> ( A = B -> ps ) ) $=
      ( wceq wne wn nne con1d syl5bir ) CDFCDGZHABCDIABLEJK $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    necon4d.1 $e |- ( ph -> ( A =/= B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4d $p |- ( ph -> ( C = D -> A = B ) ) $=
      ( wceq wne wn necon2bd nne syl6ib ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon4abid.1 $e |- ( ph -> ( A =/= B <-> -. ps ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4abid $p |- ( ph -> ( A = B <-> ps ) ) $=
      ( wceq wn wne df-ne syl5bbr con4bid ) ACDFZBLGCDHABGCDIEJK $.
      $( [11-Jan-2008] $)
  $}

  ${
    necon4bbid.1 $e |- ( ph -> ( -. ps <-> A =/= B ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4bbid $p |- ( ph -> ( ps <-> A = B ) ) $=
      ( wceq wn wne bicomd necon4abid ) ACDFBABCDABGCDHEIJI $.
      $( [9-May-2012] $)
  $}

  ${
    necon4bid.1 $e |- ( ph -> ( A =/= B <-> C =/= D ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4bid $p |- ( ph -> ( A = B <-> C = D ) ) $=
      ( wceq wne wn necon2bbid nne syl6rbb ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [29-Jun-2007] $)
  $}

  ${
    necon1ad.1 $e |- ( ph -> ( -. ps -> A = B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon1ad $p |- ( ph -> ( A =/= B -> ps ) ) $=
      ( wne wceq wn df-ne con1d syl5bi ) CDFCDGZHABCDIABLEJK $.
      $( [2-Apr-2007] $)
  $}

  ${
    necon1bd.1 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Contrapositive deduction for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon1bd $p |- ( ph -> ( -. ps -> A = B ) ) $=
      ( wn wne wceq con3d nne syl6ib ) ABFCDGZFCDHALBEICDJK $.
      $( [25-May-2011] $) $( [21-Mar-2007] $)
  $}

  ${
    necon1d.1 $e |- ( ph -> ( A =/= B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon1d $p |- ( ph -> ( C =/= D -> A = B ) ) $=
      ( wne wceq wn nne syl6ibr necon4ad ) ADEGZBCABCGDEHMIFDEJKL $.
      $( [25-May-2011] $) $( [28-Dec-2008] $)
  $}

  $( Contraposition law for inequality. $)
  nebi $p |- ( ( A = B <-> C = D ) <-> ( A =/= B <-> C =/= D ) ) $=
    ( wceq wb wne id necon3bid necon4bid impbii ) ABECDEFZABGCDGFZLABCDLHIMABCD
    MHJK $.
    $( [28-Dec-2008] $)

  $( Theorem *13.18 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.18 $p |- ( ( A = B /\ A =/= C ) -> B =/= C ) $=
    ( wceq wne eqeq1 biimprd necon3d imp ) ABDZACEBCEJBCACJACDBCDABCFGHI $.
    $( [3-Jun-2011] $)

  $( Theorem *13.181 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.181 $p |- ( ( A = B /\ B =/= C ) -> A =/= C ) $=
    ( wceq wne eqcom pm13.18 sylanb ) ABDBADBCEACEABFBACGH $.
    $( [3-Jun-2011] $)

  ${
    pm2.61ne.1 $e |- ( A = B -> ( ps <-> ch ) ) $.
    pm2.61ne.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    pm2.61ne.3 $e |- ( ph -> ch ) $.
    $( Deduction eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ne $p |- ( ph -> ps ) $=
      ( wne wi expcom wn wceq nne syl5ibr sylbi pm2.61i ) DEIZABJZARBGKRLDEMZSD
      ENABTCHFOPQ $.
      $( [25-May-2011] $) $( [24-May-2006] $)
  $}

  ${
    pm2.61ine.1 $e |- ( A = B -> ph ) $.
    pm2.61ine.2 $e |- ( A =/= B -> ph ) $.
    $( Inference eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ine $p |- ph $=
      ( wne wn wceq nne sylbi pm2.61i ) BCFZAELGBCHABCIDJK $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    pm2.61dne.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    pm2.61dne.2 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Deduction eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61dne $p |- ( ph -> ps ) $=
      ( wne wn wceq nne syl5bi pm2.61d ) ACDGZBFMHCDIABCDJEKL $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    pm2.61dane.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61dane.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    $( Deduction eliminating an inequality in an antecedent. $)
    pm2.61dane $p |- ( ph -> ps ) $=
      ( wceq ex wne pm2.61dne ) ABCDACDGBEHACDIBFHJ $.
      $( [30-Nov-2011] $)
  $}

  ${
    pm2.61da2ne.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61da2ne.2 $e |- ( ( ph /\ C = D ) -> ps ) $.
    pm2.61da2ne.3 $e |- ( ( ph /\ ( A =/= B /\ C =/= D ) ) -> ps ) $.
    $( Deduction eliminating two inequalities in an antecedent. $)
    pm2.61da2ne $p |- ( ph -> ps ) $=
      ( wne wa wceq adantlr anassrs pm2.61dane ) ABCDGACDJZKBEFAEFLBPHMAPEFJBIN
      OO $.
      $( [29-May-2013] $)
  $}

  ${
    pm2.61da3ne.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61da3ne.2 $e |- ( ( ph /\ C = D ) -> ps ) $.
    pm2.61da3ne.3 $e |- ( ( ph /\ E = F ) -> ps ) $.
    pm2.61da3ne.4 $e |- ( ( ph /\ ( A =/= B /\ C =/= D /\ E =/= F ) )
          -> ps ) $.
    $( Deduction eliminating three inequalities in an antecedent. $)
    pm2.61da3ne $p |- ( ph -> ps ) $=
      ( wne wa wceq adantlr simpll simplrl simplrr simpr pm2.61dane pm2.61da2ne
      syl13anc ) ABCDEFIJACDMZEFMZNZNZBGHAGHOBUFKPUGGHMZNAUDUEUHBAUFUHQAUDUEUHR
      AUDUEUHSUGUHTLUCUAUB $.
      $( [15-Jun-2013] $)
  $}

  $( Commutation of inequality. $)
  necom $p |- ( A =/= B <-> B =/= A ) $=
    ( eqcom necon3bii ) ABBAABCD $.
    $( [14-May-1999] $)

  ${
    necomi.1 $e |- A =/= B $.
    $( Inference from commutative law for inequality. $)
    necomi $p |- B =/= A $=
      ( wne necom mpbi ) ABDBADCABEF $.
      $( [17-Oct-2012] $)
  $}

  ${
    necomd.1 $e |- ( ph -> A =/= B ) $.
    $( Deduction from commutative law for inequality. $)
    necomd $p |- ( ph -> B =/= A ) $=
      ( wne necom sylib ) ABCECBEDBCFG $.
      $( [12-Feb-2008] $)
  $}

  $( Logical OR with an equality. $)
  neor $p |- ( ( A = B \/ ps ) <-> ( A =/= B -> ps ) ) $=
    ( wceq wo wn wi wne df-or df-ne imbi1i bitr4i ) BCDZAEMFZAGBCHZAGMAIONABCJK
    L $.
    $( [29-Apr-2007] $)

  $( A DeMorgan's law for inequality. $)
  neanior $p |- ( ( A =/= B /\ C =/= D ) <-> -. ( A = B \/ C = D ) ) $=
    ( wne wa wceq wn wo df-ne anbi12i pm4.56 bitri ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.
    $( [18-May-2007] $)

  $( A DeMorgan's law for inequality. $)
  ne3anior $p |- ( ( A =/= B /\ C =/= D /\ E =/= F )
        <-> -. ( A = B \/ C = D \/ E = F ) ) $=
    ( wne w3a wn w3o wceq 3anor nne 3orbi123i xchbinx ) ABGZCDGZEFGZHPIZQIZRIZJ
    ABKZCDKZEFKZJPQRLSUBTUCUAUDABMCDMEFMNO $.
    $( [30-Sep-2013] $)

  $( A DeMorgan's law for inequality. $)
  neorian $p |- ( ( A =/= B \/ C =/= D ) <-> -. ( A = B /\ C = D ) ) $=
    ( wne wo wceq wn wa df-ne orbi12i ianor bitr4i ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.
    $( [18-May-2007] $)

  ${
    nemtbir.1 $e |- A =/= B $.
    nemtbir.2 $e |- ( ph <-> A = B ) $.
    $( An inference from an inequality, related to modus tollens. $)
    nemtbir $p |- -. ph $=
      ( wceq wne wn df-ne mpbi mtbir ) ABCFZBCGLHDBCIJEK $.
      $( [13-Apr-2007] $)
  $}

  $( Two classes are different if they don't contain the same element. $)
  nelne1 $p |- ( ( A e. B /\ -. A e. C ) -> B =/= C ) $=
    ( wcel wn wne wceq eleq2 biimpcd necon3bd imp ) ABDZACDZEBCFLMBCBCGLMBCAHIJ
    K $.
    $( [3-Feb-2012] $)

  $( Two classes are different if they don't belong to the same class. $)
  nelne2 $p |- ( ( A e. C /\ -. B e. C ) -> A =/= B ) $=
    ( wcel wn wne wceq eleq1 biimpcd necon3bd imp ) ACDZBCDZEABFLMABABGLMABCHIJ
    K $.
    $( [25-Jun-2012] $)

  $( Equality theorem for negated membership. $)
  neleq1 $p |- ( A = B -> ( A e/ C <-> B e/ C ) ) $=
    ( wceq wcel wn wnel eleq1 notbid df-nel 3bitr4g ) ABDZACEZFBCEZFACGBCGLMNAB
    CHIACJBCJK $.
    $( [20-Nov-1994] $)

  $( Equality theorem for negated membership. $)
  neleq2 $p |- ( A = B -> ( C e/ A <-> C e/ B ) ) $=
    ( wceq wcel wn wnel eleq2 notbid df-nel 3bitr4g ) ABDZCAEZFCBEZFCAGCBGLMNAB
    CHICAJCBJK $.
    $( [20-Nov-1994] $)

  ${
    $d y A $.  $d y B $.
    hbne.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbne.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbne $p |- ( A =/= B -> A. x A =/= B ) $=
      ( wne wceq wn df-ne hbeq hbn hbxfrbi ) CDGCDHZIACDJNAABBCDEFKLM $.
      $( [11-Jul-2011] $) $( [10-Nov-2007] $)
  $}

  ${
    $d y A $.  $d z B $.
    hbnel.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbnel.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by by
       David Abernethy, 26-Jun-2011.)  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbnel $p |- ( A e/ B -> A. x A e/ B ) $=
      ( wnel wcel wn df-nel hbel hbn hbxfrbi ) DEHDEIZJADEKOAABCDEFGLMN $.
      $( [11-Jul-2011] $) $( [26-Jun-2011] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Restricted quantification
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include restricted universal quantification. $)
  wral $a wff A. x e. A ph $.

  $( Extend wff notation to include restricted existential quantification. $)
  wrex $a wff E. x e. A ph $.

  $( Extend wff notation to include restricted existential uniqueness. $)
  wreu $a wff E! x e. A ph $.

  $( Extend class notation to include the restricted class abstraction (class
     builder). $)
  crab $a class { x e. A | ph } $.

  $( Define restricted universal quantification.  Special case of Definition
     4.15(3) of [TakeutiZaring] p. 22. $)
  df-ral $a |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) $.

  $( Define restricted existential quantification.  Special case of Definition
     4.15(4) of [TakeutiZaring] p. 22. $)
  df-rex $a |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) $.

  $( Define restricted existential uniqueness. $)
  df-reu $a |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) $.

  $( Define a restricted class abstraction (class builder), which is the class
     of all ` x ` in ` A ` such that ` ph ` is true.  Definition of
     [TakeutiZaring] p. 20. $)
  df-rab $a |- { x e. A | ph } = { x | ( x e. A /\ ph ) } $.

  $( Relationship between restricted universal and existential quantifiers. $)
  ralnex $p |- ( A. x e. A -. ph <-> -. E. x e. A ph ) $=
    ( wn wral cv wcel wi wal wrex df-ral wa wex alinexa df-rex xchbinxr bitri )
    ADZBCEBFCGZRHBIZABCJZDRBCKTSALBMUASABNABCOPQ $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  rexnal $p |- ( E. x e. A -. ph <-> -. A. x e. A ph ) $=
    ( wn wrex cv wcel wa wex wral df-rex wi wal exanali df-ral xchbinxr bitri )
    ADZBCEBFCGZRHBIZABCJZDRBCKTSALBMUASABNABCOPQ $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  dfral2 $p |- ( A. x e. A ph <-> -. E. x e. A -. ph ) $=
    ( wn wrex wral rexnal con2bii ) ADBCEABCFABCGH $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  dfrex2 $p |- ( E. x e. A ph <-> -. A. x e. A -. ph ) $=
    ( wn wral wrex ralnex con2bii ) ADBCEABCFABCGH $.
    $( [21-Jan-1997] $)

  ${
    ralbida.1 $e |- ( ph -> A. x ph ) $.
    ralbida.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbida $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral pm5.74da albid df-ral 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
      $( [6-Oct-2003] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbida $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( cv wcel wa wex wrex pm5.32da exbid df-rex 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
      $( [6-Oct-2003] $)
  $}

  ${
    $d x ph $.
    ralbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidva $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( ax-17 ralbida ) ABCDEADGFH $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidva $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( ax-17 rexbida ) ABCDEADGFH $.
      $( [9-Mar-1997] $)
  $}

  ${
    ralbid.1 $e |- ( ph -> A. x ph ) $.
    ralbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbid $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( wb cv wcel adantr ralbida ) ABCDEFABCHDIEJGKL $.
      $( [27-Jun-1998] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbid $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( wb cv wcel adantr rexbida ) ABCDEFABCHDIEJGKL $.
      $( [27-Jun-1998] $)
  $}

  ${
    $d x ph $.
    ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( ax-17 ralbid ) ABCDEADGFH $.
      $( [20-Nov-1994] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( ax-17 rexbid ) ABCDEADGFH $.
      $( [20-Nov-1994] $)
  $}

  ${
    $d x ph $.
    ralbidv2.1 $e |- ( ph -> ( ( x e. A -> ps ) <-> ( x e. B -> ch ) ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidv2 $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral albidv df-ral 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [6-Apr-1997] $)
  $}

  ${
    $d x ph $.
    rexbidv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. B /\ ch ) ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidv2 $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex exbidv df-rex 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [22-May-1999] $)
  $}

  ${
    ralbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence. $)
    ralbii $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( wb wral biid hbth a1i ralbid ax-mp ) AAFZACDGBCDGFAHZMABCDMCNIABFMEJKL
      $.
      $( [23-Nov-1994] $)

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence. $)
    rexbii $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( wb wrex biid hbth a1i rexbid ax-mp ) AAFZACDGBCDGFAHZMABCDMCNIABFMEJKL
      $.
      $( [23-Nov-1994] $)

    $( Inference adding 2 restricted universal quantifiers to both sides of an
       equivalence. $)
    2ralbii $p |- ( A. x e. A A. y e. B ph <-> A. x e. A A. y e. B ps ) $=
      ( wral ralbii ) ADFHBDFHCEABDFGII $.
      $( [1-Aug-2004] $)

    $( Inference adding 2 restricted existential quantifiers to both sides of
       an equivalence. $)
    2rexbii $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex rexbii ) ADFHBDFHCEABDFGII $.
      $( [11-Nov-1995] $)
  $}

  ${
    ralbii2.1 $e |- ( ( x e. A -> ph ) <-> ( x e. B -> ps ) ) $.
    $( Inference adding different restricted universal quantifiers to each side
       of an equivalence. $)
    ralbii2 $p |- ( A. x e. A ph <-> A. x e. B ps ) $=
      ( cv wcel wi wal wral albii df-ral 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [15-Aug-2005] $)
  $}

  ${
    rexbii2.1 $e |- ( ( x e. A /\ ph ) <-> ( x e. B /\ ps ) ) $.
    $( Inference adding different restricted existential quantifiers to each
       side of an equivalence. $)
    rexbii2 $p |- ( E. x e. A ph <-> E. x e. B ps ) $=
      ( cv wcel wa wex wrex exbii df-rex 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [4-Feb-2004] $)
  $}

  ${
    ralbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence. $)
    ralbiia $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( cv wcel pm5.74i ralbii2 ) ABCDDCFDGABEHI $.
      $( [26-Nov-2000] $)

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence. $)
    rexbiia $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( cv wcel pm5.32i rexbii2 ) ABCDDCFDGABEHI $.
      $( [26-Oct-1999] $)
  $}

  ${
    $d x y $.  $d y A $.
    2rexbiia.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph <-> ps ) ) $.
    $( Inference adding 2 restricted existential quantifiers to both sides of
       an equivalence. $)
    2rexbiia $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex cv wcel rexbidva rexbiia ) ADFHBDFHCECIEJABDFGKL $.
      $( [1-Aug-2004] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted universal quantification. $)
    r2al $p |- ( A. x e. A A. y e. B ph <->
               A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) $=
      ( wral cv wcel wi wal wa df-ral 19.21v impexp albii imbi2i 3bitr4i bitr4i
      ) ACEFZBDFBGDHZSIZBJTCGEHZKAIZCJZBJSBDLUDUABTUBAIZIZCJTUECJZIUDUATUECMUCU
      FCTUBANOSUGTACELPQOR $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    2ralbida.1 $e |- ( ph -> A. x ph ) $.
    2ralbida.2 $e |- ( ph -> A. y ph ) $.
    2ralbida.3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    2ralbida $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral cv wcel wa ax-17 hban wb anassrs ralbida ) ABEGKCEGKDFHADLFMZNBCEG
      ATEITEOPATELGMBCQJRSS $.
      $( [24-Feb-2004] $)
  $}

  ${
    $d x y ph $.  $d y A $.
    2ralbidva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule). $)
    2ralbidva $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( ax-17 2ralbida ) ABCDEFGADIAEIHJ $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule). $)
    2rexbidva $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex cv wcel wa wb anassrs rexbidva ) ABEGICEGIDFADJFKZLBCEGAPEJGKBCMHN
      OO $.
      $( [15-Dec-2004] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule).  (Unnecessary distinct variable restrictions were removed by
       Szymon Jaroszewicz, 16-Mar-2006.) $)
    2ralbidv $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv ) ABEGICEGIDFABCEGHJJ $.
      $( [16-Mar-2007] $) $( [28-Jan-2006] $)

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule). $)
    2rexbidv $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex rexbidv ) ABEGICEGIDFABCEGHJJ $.
      $( [28-Jan-2006] $)

    $( Formula-building rule for restricted quantifiers (deduction rule). $)
    rexralbidv $p |- ( ph ->
                    ( E. x e. A A. y e. B ps <-> E. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv rexbidv ) ABEGICEGIDFABCEGHJK $.
      $( [28-Jan-2006] $)
  $}

  $( A transformation of restricted quantifiers and logical connectives. $)
  ralinexa $p |- ( A. x e. A ( ph -> -. ps ) <-> -. E. x e. A ( ph /\ ps ) ) $=
    ( wn wi wral wa wrex imnan ralbii ralnex bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.
    $( [4-Sep-2005] $)

  $( A transformation of restricted quantifiers and logical connectives. $)
  rexanali $p |- ( E. x e. A ( ph /\ -. ps ) <-> -. A. x e. A ( ph -> ps ) ) $=
    ( wn wa wrex wi wral annim rexbii rexnal bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.
    $( [4-Sep-2005] $)

  ${
    $d x A $.  $d x B $.
    $( Two ways to say " ` A ` belongs to ` B ` ." $)
    risset $p |- ( A e. B <-> E. x e. B x = A ) $=
      ( cv wcel wceq wa wex wrex exancom df-rex df-clel 3bitr4ri ) ADZCEZNBFZGA
      HPOGAHPACIBCEOPAJPACKABCLM $.
      $( [22-Nov-1994] $)
  $}

  ${
    hbral.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbral.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 13-Dec-2009.) $)
    hbral $p |- ( A. y e. A ph -> A. x A. y e. A ph ) $=
      ( wral cv wcel wi wal df-ral hbim hbal hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
      $( [13-Dec-2009] $) $( [1-Sep-1999] $)
  $}

  ${
    hbrald.1 $e |- ( ph -> A. x ph ) $.
    hbrald.2 $e |- ( ph -> A. y ph ) $.
    hbrald.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbrald.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbral . $)
    hbrald $p |- ( ph -> ( A. y e. A ps -> A. x A. y e. A ps ) ) $=
      ( cv wcel wi wal wral hbimd hbald df-ral albii 3imtr4g ) ADJEKZBLZDMZUBCM
      BDENZUCCMAUACDGATBCFHIOPBDEQZUCUBCUDRS $.
      $( [15-Feb-2013] $)
  $}

  $( ` x ` is not free in ` A. x e. A ph ` . $)
  hbra1 $p |- ( A. x e. A ph -> A. x A. x e. A ph ) $=
    ( wral cv wcel wi wal df-ral hba1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.
    $( [18-Oct-1996] $)

  ${
    $d A y $.  $d x y $.
    $( Similar to Lemma 24 of [Monk2] p. 114, except the quantification of the
       antecedent is restricted.  Derived automatically from ~ hbra2VD .
       Contributed by Alan Sare 31-Dec-2011. $)
    hbra2 $p |- ( A. x e. A A. y e. B ph -> A. y A. x e. A A. y e. B ph ) $=
      ( wral cv wcel wi wal df-ral ralbii ax-17 hba1 hbral hbxfrbi ) ACEFZBDFCG
      EHAIZCJZBDFCQSBDACEKLSCBDBGDHCMRCNOP $.
      $( [31-Dec-2011] $)
  $}

  ${
    hbrex.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbrex.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 13-Dec-2009.) $)
    hbrex $p |- ( E. y e. A ph -> A. x E. y e. A ph ) $=
      ( wrex cv wcel wa wex df-rex hban hbex hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
      $( [13-Dec-2009] $) $( [1-Sep-1999] $)
  $}

  $( ` x ` is not free in ` E. x e. A ph ` . $)
  hbre1 $p |- ( E. x e. A ph -> A. x E. x e. A ph ) $=
    ( wrex cv wcel wa wex df-rex hbe1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.
    $( [19-Mar-1997] $)

  ${
    $d x y z $.  $d y z A $.  $d z B $.
    $( Triple restricted universal quantification. $)
    r3al $p |- ( A. x e. A A. y e. B A. z e. C ph <->
               A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ) $=
      ( cv wcel wa wi wal wral w3a df-ral r2al ralbii bitri albii 19.21v 3anass
      imbi1i impexp 3bitr4i ) CHFIZDHGIZJZAKZDLZCLZBEMBHEIZUJKZBLADGMCFMZBEMUKU
      EUFNZAKZDLZCLZBLUJBEOUMUJBEACDFGPQUQULBUQUKUIKZCLULUPURCUPUKUHKZDLURUOUSD
      UOUKUGJZAKUSUNUTAUKUEUFUAUBUKUGAUCRSUKUHDTRSUKUICTRSUD $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted existential quantification. $)
    r2ex $p |- ( E. x e. A E. y e. B ph <->
               E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) $=
      ( wrex cv wcel wa wex df-rex 19.42v anass exbii anbi2i 3bitr4i bitr4i ) A
      CEFZBDFBGDHZRIZBJSCGEHZIAIZCJZBJRBDKUCTBSUAAIZIZCJSUDCJZIUCTSUDCLUBUECSUA
      AMNRUFSACEKOPNQ $.
      $( [11-Nov-1995] $)
  $}

  $( Universal quantification implies restricted quantification. $)
  alral $p |- ( A. x ph -> A. x e. A ph ) $=
    ( wal cv wcel wi wral ax-1 alimi df-ral sylibr ) ABDBECFZAGZBDABCHANBAMIJAB
    CKL $.
    $( [20-Oct-2006] $)

  $( Restricted existence implies existence. $)
  rexex $p |- ( E. x e. A ph -> E. x ph ) $=
    ( wrex cv wcel wa wex df-rex simpr eximi sylbi ) ABCDBECFZAGZBHABHABCINABMA
    JKL $.
    $( [11-Nov-1995] $)

  $( Restricted specialization. $)
  ra4 $p |- ( A. x e. A ph -> ( x e. A -> ph ) ) $=
    ( wral cv wcel wi wal df-ral ax-4 sylbi ) ABCDBECFAGZBHLABCILBJK $.
    $( [17-Oct-1996] $)

  $( Restricted specialization. $)
  ra4e $p |- ( ( x e. A /\ ph ) -> E. x e. A ph ) $=
    ( cv wcel wa wex wrex 19.8a df-rex sylibr ) BDCEAFZLBGABCHLBIABCJK $.
    $( [12-Oct-1999] $)

  $( Restricted specialization. $)
  ra42 $p |- ( A. x e. A A. y e. B ph -> ( ( x e. A /\ y e. B ) -> ph ) ) $=
    ( wral cv wcel wi ra4 syl6 imp3a ) ACEFZBDFZBGDHZCGEHZANOMPAIMBDJACEJKL $.
    $( [11-Feb-1997] $)

  $( Restricted specialization.  (Contributed by FL, 4-Jun-2012.) $)
  ra42e $p |- ( ( x e. A /\ y e. B /\ ph ) -> E. x e. A E. y e. B ph ) $=
    ( cv wcel w3a wrex wa wex simp1 ra4e 3adant1 19.8a syl2anc df-rex sylibr )
    BFDGZCFEGZAHZSACEIZJZBKZUBBDIUASUBUDSTALTAUBSACEMNUCBOPUBBDQR $.
    $( [4-Jun-2012] $)

  ${
    rspec.1 $e |- A. x e. A ph $.
    $( Specialization rule for restricted quantification. $)
    rspec $p |- ( x e. A -> ph ) $=
      ( wral cv wcel wi ra4 ax-mp ) ABCEBFCGAHDABCIJ $.
      $( [19-Nov-1994] $)
  $}

  ${
    rgen.1 $e |- ( x e. A -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen $p |- A. x e. A ph $=
      ( wral cv wcel wi df-ral mpgbir ) ABCEBFCGAHBABCIDJ $.
      $( [19-Nov-1994] $)
  $}

  ${
    $d y z A $.  $d x z $.
    rgen2a.1 $e |- ( ( x e. A /\ y e. A ) -> ph ) $.
    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    rgen2a $p |- A. x e. A A. y e. A ph $=
      ( vz wral cv wcel wi wal wceq eleq1 ex syl6bi pm2.43d alimi a1d wn ax-17
      dvelim syl6 pm2.61i df-ral sylibr rgen ) ACDGZBDBHZDIZCHZDIZAJZCKZUGUJUHL
      ZCKZUIUMJUOUMUIUNULCUNUKAUNUKUIULUJUHDMUIUKAENZOPQRUOSUIUICKUMFHZDIZUICBF
      URCTUQUHDMUAUIULCUPQUBUCACDUDUEUF $.
      $( [25-May-2011] $) $( [23-Nov-1994] $)
  $}

  ${
    rgenw.1 $e |- ph $.
    $( Generalization rule for restricted quantification. $)
    rgenw $p |- A. x e. A ph $=
      ( cv wcel a1i rgen ) ABCABECFDGH $.
      $( [18-Jun-2014] $)

    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct. $)
    rgen2w $p |- A. x e. A A. y e. B ph $=
      ( wral rgenw ) ACEGBDACEFHH $.
      $( [18-Jun-2014] $)
  $}

  ${
    mprg.1 $e |- ( A. x e. A ph -> ps ) $.
    mprg.2 $e |- ( x e. A -> ph ) $.
    $( Modus ponens combined with restricted generalization. $)
    mprg $p |- ps $=
      ( wral rgen ax-mp ) ACDGBACDFHEI $.
      $( [10-Aug-2004] $)
  $}

  ${
    mprgbir.1 $e |- ( ph <-> A. x e. A ps ) $.
    mprgbir.2 $e |- ( x e. A -> ps ) $.
    $( Modus ponens on biconditional combined with restricted
       generalization. $)
    mprgbir $p |- ph $=
      ( wral rgen mpbir ) ABCDGBCDFHEI $.
      $( [21-Mar-2004] $)
  $}

  $( Distribution of restricted quantification over implication. $)
  ralim $p |- ( A. x e. A ( ph -> ps ) ->
               ( A. x e. A ph -> A. x e. A ps ) ) $=
    ( wi wral cv wcel wal df-ral ax-2 al2imi sylbi 3imtr4g ) ABEZCDFZCGDHZAEZCI
    ZQBEZCIZACDFBCDFPQOEZCISUAEOCDJUBRTCQABKLMACDJBCDJN $.
    $( [9-Feb-1997] $)

  ${
    ralimi2.1 $e |- ( ( x e. A -> ph ) -> ( x e. B -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimi2 $p |- ( A. x e. A ph -> A. x e. B ps ) $=
      ( cv wcel wi wal wral alimi df-ral 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [22-Feb-2004] $)
  $}

  ${
    ralimia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimia $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel a2i ralimi2 ) ABCDDCFDGABEHI $.
      $( [19-Jul-1996] $)
  $}

  ${
    ralimiaa.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimiaa $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel ex ralimia ) ABCDCFDGABEHI $.
      $( [4-Aug-2007] $)
  $}

  ${
    ralimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent, with strong
       hypothesis. $)
    ralimi $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( wi cv wcel a1i ralimia ) ABCDABFCGDHEIJ $.
      $( [4-Mar-1997] $)
  $}

  ${
    ral2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent,
       with a strong hypothesis. $)
    ral2imi $p |- ( A. x e. A ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wral wi ralimi ralim syl ) ADEGBCHZDEGBDEGCDEGHALDEFIBCDEJK $.
      $( [19-Dec-2006] $)
  $}

  ${
    ralimdaa.1 $e |- ( ph -> A. x ph ) $.
    ralimdaa.2 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdaa $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral ex a2d alimd df-ral 3imtr4g ) ADHEIZBJZDKRCJZDKBDEL
      CDELASTDFARBCARBCJGMNOBDEPCDEPQ $.
      $( [22-Sep-2003] $)
  $}

  ${
    $d x ph $.
    ralimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdva $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( ax-17 ralimdaa ) ABCDEADGFH $.
      $( [22-May-1999] $)
  $}

  ${
    $d x ph $.
    ralimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdv $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wi cv wcel adantr ralimdva ) ABCDEABCGDHEIFJK $.
      $( [8-Oct-2003] $)
  $}

  ${
    $d x ph $.
    ralimdv2.1 $e |- ( ph -> ( ( x e. A -> ps ) -> ( x e. B -> ch ) ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimdv2 $p |- ( ph -> ( A. x e. A ps -> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral alimdv df-ral 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [1-Feb-2005] $)
  $}

  ${
    ralrimi.1 $e |- ( ph -> A. x ph ) $.
    ralrimi.2 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90 (restricted quantifier
       version). $)
    ralrimi $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel wi wal wral alrimi df-ral sylibr ) ACGDHBIZCJBCDKAOCEFLBCDMN $.
      $( [10-Oct-1999] $)
  $}

  ${
    $d x ph $.
    ralrimiv.1 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimiv $p |- ( ph -> A. x e. A ps ) $=
      ( ax-17 ralrimi ) ABCDACFEG $.
      $( [22-Nov-1994] $)
  $}

  ${
    $d x ph $.
    ralrimiva.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimiva $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel ex ralrimiv ) ABCDACFDGBEHI $.
      $( [2-Jan-2006] $)
  $}

  ${
    $d x ph $.
    ralrimivw.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimivw $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel a1d ralrimiv ) ABCDABCFDGEHI $.
      $( [18-Jun-2014] $)
  $}

  ${
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers (closed
       theorem version). $)
    r19.21t $p |- ( A. x ( ph -> A. x ph ) ->
             ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) $=
      ( wal wi cv wcel wral bi2.04 albii 19.21t syl5bb df-ral imbi2i 3bitr4g )
      AACEFCEZCGDHZABFZFZCEZARBFZCEZFZSCDIABCDIZFUAAUBFZCEQUDTUFCRABJKAUBCLMSCD
      NUEUCABCDNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    r19.21.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by Scott Fenton, 30-Mar-2011.) $)
    r19.21 $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( wal wi wral wb r19.21t mpg ) AACFGABGCDHABCDHGICABCDJEK $.
      $( [30-Mar-2011] $)
  $}

  ${
    $d x ph $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.21v $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( ax-17 r19.21 ) ABCDACEF $.
      $( [30-May-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    ralrimd.1 $e |- ( ph -> A. x ph ) $.
    ralrimd.2 $e |- ( ps -> A. x ps ) $.
    ralrimd.3 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimd $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral alrimd df-ral syl6ibr ) ABDIEJCKZDLCDEMABQDFGHNCDEO
      P $.
      $( [16-Feb-2004] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    ralrimdv.1 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimdv $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( ax-17 ralrimd ) ABCDEADGBDGFH $.
      $( [27-May-1998] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    ralrimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimdva $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi ex com23 ralrimdv ) ABCDEADGEHZBCAMBCIFJKL $.
      $( [2-Feb-2008] $)
  $}

  ${
    $d x y ph $.  $d y A $.
    ralrimivv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    ralrimivv $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( wral cv wcel exp3a ralrimdv ralrimiv ) ABDFHCEACIEJZBDFANDIFJBGKLM $.
      $( [24-Jul-2004] $)
  $}

  ${
    $d ph x y $.  $d A y $.
    ralrimivva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    ralrimivva $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( cv wcel wa ex ralrimivv ) ABCDEFACHEIDHFIJBGKL $.
      $( [19-Jun-2011] $)
  $}

  ${
    $d ph x y z $.  $d A y z $.  $d B z $.
    ralrimivvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B /\ z e. C ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with triple quantification.)  (Contributed by Mario
       Carneiro, 9-Jul-2014.) $)
    ralrimivvva $p |- ( ph -> A. x e. A A. y e. B A. z e. C ps ) $=
      ( wral cv wcel wa 3exp2 imp41 ralrimiva ) ABEHJZDGJCFACKFLZMZQDGSDKGLZMBE
      HARTEKHLZBARTUABINOPPP $.
      $( [19-Jun-2011] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    ralrimdvv.1 $e |- ( ph -> ( ps -> ( ( x e. A /\ y e. B ) -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    ralrimdvv $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( wral wa cv wcel wi imp ralrimivv ex ) ABCEGIDFIABJCDEFGABDKFLEKGLJCMHNO
      P $.
      $( [1-Jun-2005] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    ralrimdvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    ralrimdvva $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( cv wcel wa wi ex com23 ralrimdvv ) ABCDEFGADIFJEIGJKZBCAPBCLHMNO $.
      $( [2-Feb-2008] $)
  $}

  ${
    $d x y $.  $d y A $.
    rgen2.1 $e |- ( ( x e. A /\ y e. B ) -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen2 $p |- A. x e. A A. y e. B ph $=
      ( wral cv wcel ralrimiva rgen ) ACEGBDBHDIACEFJK $.
      $( [30-May-1999] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    rgen3.1 $e |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen3 $p |- A. x e. A A. y e. B A. z e. C ph $=
      ( wral cv wcel wa 3expa ralrimiva rgen2 ) ADGIBCEFBJEKZCJFKZLADGPQDJGKAHM
      NO $.
      $( [12-Jan-2008] $)
  $}

  ${
    r19.21bi.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21bi $p |- ( ( ph /\ x e. A ) -> ps ) $=
      ( cv wcel wi wral wal df-ral sylib 19.21bi imp ) ACFDGZBAOBHZCABCDIPCJEBC
      DKLMN $.
      $( [20-Nov-1994] $)
  $}

  ${
    rspec2.1 $e |- A. x e. A A. y e. B ph $.
    $( Specialization rule for restricted quantification. $)
    rspec2 $p |- ( ( x e. A /\ y e. B ) -> ph ) $=
      ( cv wcel wral rspec r19.21bi ) BGDHACEACEIBDFJK $.
      $( [20-Nov-1994] $)
  $}

  ${
    rspec3.1 $e |- A. x e. A A. y e. B A. z e. C ph $.
    $( Specialization rule for restricted quantification. $)
    rspec3 $p |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $=
      ( cv wcel wa wral rspec2 r19.21bi 3impa ) BIEJZCIFJZDIGJAPQKADGADGLBCEFHM
      NO $.
      $( [20-Nov-1994] $)
  $}

  ${
    r19.21be.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21be $p |- A. x e. A ( ph -> ps ) $=
      ( wi cv wcel r19.21bi expcom rgen ) ABFCDACGDHBABCDEIJK $.
      $( [21-Nov-1994] $)
  $}

  ${
    nrex.1 $e |- ( x e. A -> -. ps ) $.
    $( Inference adding restricted existential quantifier to negated wff. $)
    nrex $p |- -. E. x e. A ps $=
      ( wn wral wrex rgen ralnex mpbi ) AEZBCFABCGEKBCDHABCIJ $.
      $( [16-Oct-2003] $)
  $}

  ${
    $d x ph $.
    nrexdv.1 $e |- ( ( ph /\ x e. A ) -> -. ps ) $.
    $( Deduction adding restricted existential quantifier to negated wff. $)
    nrexdv $p |- ( ph -> -. E. x e. A ps ) $=
      ( wn wral wrex ralrimiva ralnex sylib ) ABFZCDGBCDHFALCDEIBCDJK $.
      $( [16-Oct-2003] $)
  $}

  $( Theorem 19.22 of [Margaris] p. 90.  (Restricted quantifier version.)  (The
     proof was shortened by Andrew Salmon, 30-May-2011.) $)
  rexim $p |- ( A. x e. A ( ph -> ps ) ->
               ( E. x e. A ph -> E. x e. A ps ) ) $=
    ( wi wral wn wrex con3 ral2imi con3d dfrex2 3imtr4g ) ABEZCDFZAGZCDFZGBGZCD
    FZGACDHBCDHOSQNRPCDABIJKACDLBCDLM $.
    $( [30-May-2011] $) $( [22-Nov-1994] $)

  ${
    reximia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    reximia $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi wrex rexim mprg ) ABFACDGBCDGFCDABCDHEI $.
      $( [10-Feb-1997] $)
  $}

  ${
    reximi2.1 $e |- ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) $.
    $( Inference quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximi2 $p |- ( E. x e. A ph -> E. x e. B ps ) $=
      ( cv wcel wa wex wrex eximi df-rex 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [8-Nov-2004] $)
  $}

  ${
    reximi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    reximi $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi cv wcel a1i reximia ) ABCDABFCGDHEIJ $.
      $( [18-Oct-1996] $)
  $}

  ${
    reximdai.1 $e |- ( ph -> A. x ph ) $.
    reximdai.2 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    reximdai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi wral wrex ralrimi rexim syl ) ABCHZDEIBDEJCDEJHANDEFGKBCDELM $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x ph $.
    reximdv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) -> ( x e. B /\ ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdv2 $p |- ( ph -> ( E. x e. A ps -> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex eximdv df-rex 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [17-Sep-2003] $)
  $}

  ${
    $d x ph $.
    reximdvai.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdvai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( ax-17 reximdai ) ABCDEADGFH $.
      $( [14-Nov-2002] $)
  $}

  ${
    $d x ph $.
    reximdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version with strong hypothesis.) $)
    reximdv $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi cv wcel a1d reximdvai ) ABCDEABCGDHEIFJK $.
      $( [24-Jun-1998] $)
  $}

  ${
    $d x ph $.
    reximdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdva $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( cv wcel wi ex reximdvai ) ABCDEADGEHBCIFJK $.
      $( [22-May-1999] $)
  $}

  ${
    $d x y $.  $d y A $.  $d x B $.
    $( Theorem 19.12 of [Margaris] p. 89 with restricted quantifiers.  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.12 $p |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) $=
      ( wral wrex wcel ax-17 hbra1 hbrex ax-1 ralrimi ra4 com12 reximdv ralimia
      cv syl ) ACEFZBDGZUACEFABDGZCEFUAUACETCBDBRDHCIACEJKUACREHZLMUAUBCEUCTABD
      TUCAACENOPQS $.
      $( [30-May-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $( Closed theorem form of ~ r19.23 . $)
    r19.23t $p |- ( A. x ( ps -> A. x ps )
          -> ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ) $=
      ( wal wi cv wcel wex wral 19.23t df-ral impexp albii bitr4i df-rex imbi1i
      wa wrex 3bitr4g ) BBCEFCECGDHZARZBFZCEZUBCIZBFABFZCDJZACDSZBFUBBCKUGUAUFF
      ZCEUDUFCDLUCUICUAABMNOUHUEBACDPQT $.
      $( [4-Mar-2013] $)
  $}

  ${
    r19.23.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.23 $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( cv wcel wi wal wa wex wral wrex impexp albii 19.23 bitr3i df-ral df-rex
      imbi1i 3bitr4i ) CFDGZABHZHZCIZUBAJZCKZBHZUCCDLACDMZBHUEUFBHZCIUHUJUDCUBA
      BNOUFBCEPQUCCDRUIUGBACDSTUA $.
      $( [25-May-2011] $) $( [22-Oct-2010] $)
  $}

  ${
    $d x ps $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.23v $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( ax-17 r19.23 ) ABCDBCEF $.
      $( [31-Aug-1999] $)
  $}

  ${
    rexlimi.1 $e |- ( ps -> A. x ps ) $.
    rexlimi.2 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (The proof was shortened by Andrew Salmon,
       30-May-2011.) $)
    rexlimi $p |- ( E. x e. A ph -> ps ) $=
      ( wi wral wrex rgen r19.23 mpbi ) ABGZCDHACDIBGMCDFJABCDEKL $.
      $( [30-May-2011] $) $( [30-Nov-2003] $)
  $}

  ${
    $d x ps $.
    rexlimiv.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    rexlimiv $p |- ( E. x e. A ph -> ps ) $=
      ( ax-17 rexlimi ) ABCDBCFEG $.
      $( [20-Nov-1994] $)
  $}

  ${
    $d x ps $.
    rexlimiva.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimiva $p |- ( E. x e. A ph -> ps ) $=
      ( cv wcel ex rexlimiv ) ABCDCFDGABEHI $.
      $( [18-Dec-2006] $)
  $}

  ${
    $d ps x $.
    rexlimivw.1 $e |- ( ph -> ps ) $.
    $( Weaker version of ~ rexlimiv .  (Contributed by FL, 19-Sep-2011.) $)
    rexlimivw $p |- ( E. x e. A ph -> ps ) $=
      ( wi cv wcel a1i rexlimiv ) ABCDABFCGDHEIJ $.
      $( [19-Sep-2011] $)
  $}

  ${
    rexlimd.1 $e |- ( ph -> A. x ph ) $.
    rexlimd.2 $e |- ( ch -> A. x ch ) $.
    rexlimd.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (The proof was shortened by Andrew Salmon, 30-May-2011.) $)
    rexlimd $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex ralrimi r19.23 sylib ) ABCIZDEJBDEKCIAODEFHLBCDEGMN $.
      $( [30-May-2011] $) $( [27-May-1998] $)
  $}

  ${
    rexlimd2.1 $e |- ( ph -> A. x ph ) $.
    rexlimd2.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    rexlimd2.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Version of ~ rexlimd with deduction version of second hypothesis. $)
    rexlimd2 $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex ralrimi wal wb alrimi r19.23t syl mpbid ) ABCIZDEJZBDEKCIZ
      ASDEFHLACCDMIZDMTUANAUBDFGOBCDEPQR $.
      $( [21-Jul-2013] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdv.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (The proof was shortened by Eric Schmidt, 22-Dec-2006.) $)
    rexlimdv $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( ax-17 rexlimd ) ABCDEADGCDGFH $.
      $( [22-Dec-2006] $) $( [14-Nov-2002] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimdva $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel wi ex rexlimdv ) ABCDEADGEHBCIFJK $.
      $( [20-Jan-2007] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdvw.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimdvw $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi cv wcel a1d rexlimdv ) ABCDEABCGDHEIFJK $.
      $( [18-Jun-2014] $)
  $}

  ${
    $d x y ps $.  $d y A $.
    rexlimivv.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimivv $p |- ( E. x e. A E. y e. B ph -> ps ) $=
      ( wrex cv wcel rexlimdva rexlimiv ) ADFHBCECIEJABDFGKL $.
      $( [17-Feb-2004] $)
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    rexlimdvv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    rexlimdvv $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( wrex cv wcel wa wi expdimp rexlimdv rexlimdva ) ABEGICDFADJFKZLBCEGAQEJ
      GKBCMHNOP $.
      $( [22-Jul-2004] $)
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    rexlimdvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    rexlimdvva $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( cv wcel wa wi ex rexlimdvv ) ABCDEFGADIFJEIGJKBCLHMN $.
      $( [18-Jun-2014] $)
  $}

  $( Theorem 19.26 of [Margaris] p. 90 with restricted quantifiers.  (The proof
     was shortened by Andrew Salmon, 30-May-2011.) $)
  r19.26 $p |- ( A. x e. A ( ph /\ ps ) <->
               ( A. x e. A ph /\ A. x e. A ps ) ) $=
    ( wa wral simpl ralimi simpr jca pm3.2 ral2imi imp impbii ) ABEZCDFZACDFZBC
    DFZEPQROACDABGHOBCDABIHJQRPABOCDABKLMN $.
    $( [30-May-2011] $) $( [28-Jan-1997] $)

  $( Theorem 19.26 of [Margaris] p. 90 with 2 restricted quantifiers. $)
  r19.26-2 $p |- ( A. x e. A A. y e. B ( ph /\ ps ) <->
               ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) $=
    ( wa wral r19.26 ralbii bitri ) ABGDFHZCEHADFHZBDFHZGZCEHMCEHNCEHGLOCEABDFI
    JMNCEIK $.
    $( [10-Aug-2004] $)

  $( Theorem 19.26 of [Margaris] p. 90 with 3 restricted quantifiers.
     (Contributed by FL, 22-Nov-2010.) $)
  r19.26-3 $p |- ( A. x e. A ( ph /\ ps /\ ch ) <->
               ( A. x e. A ph /\ A. x e. A ps /\ A. x e. A ch ) ) $=
    ( w3a wral wa df-3an ralbii r19.26 anbi1i bitr4i 3bitri ) ABCFZDEGABHZCHZDE
    GPDEGZCDEGZHZADEGZBDEGZSFZOQDEABCIJPCDEKTUAUBHZSHUCRUDSABDEKLUAUBSIMN $.
    $( [22-Nov-2010] $)

  $( Theorem 19.26 of [Margaris] p. 90 with mixed quantifiers. $)
  r19.26m $p |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <->
               ( A. x e. A ph /\ A. x e. B ps ) ) $=
    ( cv wcel wi wa wal wral 19.26 df-ral anbi12i bitr4i ) CFZDGAHZPEGBHZICJQCJ
    ZRCJZIACDKZBCEKZIQRCLUASUBTACDMBCEMNO $.
    $( [22-Feb-2004] $)

  $( Distribute a restricted universal quantifier over a biconditional.
     Theorem 19.15 of [Margaris] p. 90 with restricted quantification. $)
  ralbi $p |- ( A. x e. A ( ph <-> ps ) ->
               ( A. x e. A ph <-> A. x e. A ps ) ) $=
    ( wb wral hbra1 cv wcel ra4 imp ralbida ) ABEZCDFZABCDMCDGNCHDIMMCDJKL $.
    $( [6-Oct-2003] $)

  $( Split a biconditional and distribute quantifier. $)
  ralbiim $p |- ( A. x e. A ( ph <-> ps ) <->
             ( A. x e. A ( ph -> ps ) /\ A. x e. A ( ps -> ph ) ) ) $=
    ( wb wral wi wa dfbi2 ralbii r19.26 bitri ) ABEZCDFABGZBAGZHZCDFNCDFOCDFHMP
    CDABIJNOCDKL $.
    $( [3-Jun-2012] $)

  ${
    $d x ps $.
    $( Restricted version of one direction of Theorem 19.27 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.27av $p |- ( ( A. x e. A ph /\ ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa cv wcel ax-1 ralrimiv anim2i r19.26 sylibr ) ACDEZBFNBCDEZFABFC
      DEBONBBCDBCGDHIJKABCDLM $.
      $( [30-May-2011] $) $( [3-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.28 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.28av $p |- ( ( ph /\ A. x e. A ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa r19.27av ancom ralbii 3imtr4i ) BCDEZAFBAFZCDEAKFABFZCDEBACDGAK
      HMLCDABHIJ $.
      $( [2-Apr-2004] $)
  $}

  $( Theorem 19.29 of [Margaris] p. 90 with restricted quantifiers.  (The proof
     was shortened by Andrew Salmon, 30-May-2011.) $)
  r19.29 $p |- ( ( A. x e. A ph /\ E. x e. A ps ) ->
               E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa wi pm3.2 ralimi rexim syl imp ) ACDEZBCDFZABGZCDFZNBPHZCDEOQ
    HARCDABIJBPCDKLM $.
    $( [30-May-2011] $) $( [31-Aug-1999] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with restricted
     quantifiers. $)
  r19.29r $p |- ( ( E. x e. A ph /\ A. x e. A ps ) ->
                E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa r19.29 ancom rexbii 3imtr4i ) BCDEZACDFZGBAGZCDFMLGABGZCDFBA
    CDHMLIONCDABIJK $.
    $( [31-Aug-1999] $)

  $( Theorem 19.30 of [Margaris] p. 90 with restricted quantifiers.
     (Contributed by Scott Fenton, 25-Feb-2011.) $)
  r19.30 $p |- ( A. x e. A ( ph \/ ps ) ->
                 ( A. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wral wrex ralim orcom df-or bitri ralbii dfrex2 orbi2i imor 3bitr4i
    wo 3imtr4i ) BEZAFZCDGTCDGZACDGZFZABRZCDGUCBCDHZRZTACDIUEUACDUEBARUAABJBAKL
    MUCUBEZRUHUCRUGUDUCUHJUFUHUCBCDNOUBUCPQS $.
    $( [25-Feb-2011] $)

  ${
    $d x ph $.
    $( Theorem 19.32 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.32v $p |- ( A. x e. A ( ph \/ ps ) <-> ( ph \/ A. x e. A ps ) ) $=
      ( wn wi wral wo r19.21v df-or ralbii 3bitr4i ) AEZBFZCDGMBCDGZFABHZCDGAOH
      MBCDIPNCDABJKAOJL $.
      $( [25-Nov-2003] $)
  $}

  $( Restricted quantifier version of Theorem 19.35 of [Margaris] p. 90. $)
  r19.35 $p |- ( E. x e. A ( ph -> ps ) <->
               ( A. x e. A ph -> E. x e. A ps ) ) $=
    ( wral wn wi wrex r19.26 annim ralbii df-an 3bitr3i con2bii dfrex2 3bitr4ri
    wa imbi2i ) ACDEZBFZCDEZFZGZABGZFZCDEZFSBCDHZGUDCDHUFUCATQZCDESUAQUFUCFATCD
    IUHUECDABJKSUALMNUGUBSBCDORUDCDOP $.
    $( [20-Sep-2003] $)

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.36 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty. $)
    r19.36av $p |- ( E. x e. A ( ph -> ps ) -> ( A. x e. A ph -> ps ) ) $=
      ( wi wrex wral r19.35 cv wcel idd rexlimiv imim2i sylbi ) ABECDFACDGZBCDF
      ZEOBEABCDHPBOBBCDCIDJBKLMN $.
      $( [22-Oct-2003] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.37 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.37av $p |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) $=
      ( wi wrex wral r19.35 cv wcel ax-1 ralrimiv imim1i sylbi ) ABECDFACDGZBCD
      FZEAPEABCDHAOPAACDACIDJKLMN $.
      $( [2-Apr-2004] $)
  $}

  $( Restricted quantifier version of Theorem 19.40 of [Margaris] p. 90. $)
  r19.40 $p |- ( E. x e. A ( ph /\ ps ) ->
               ( E. x e. A ph /\ E. x e. A ps ) ) $=
    ( wa wrex simpl reximi simpr jca ) ABEZCDFACDFBCDFKACDABGHKBCDABIHJ $.
    $( [2-Apr-2004] $)

  ${
    r19.41.1 $e |- ( ps -> A. x ps ) $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90. $)
    r19.41 $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( cv wcel wa wex wrex anass exbii 19.41 bitr3i df-rex anbi1i 3bitr4i ) CF
      DGZABHZHZCIZRAHZCIZBHZSCDJACDJZBHUAUBBHZCIUDUFTCRABKLUBBCEMNSCDOUEUCBACDO
      PQ $.
      $( [1-Nov-2010] $)
  $}

  ${
    $d x ps $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90. $)
    r19.41v $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( ax-17 r19.41 ) ABCDBCEF $.
      $( [17-Dec-2003] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of Theorem 19.42 of [Margaris] p. 90. $)
    r19.42v $p |- ( E. x e. A ( ph /\ ps ) <-> ( ph /\ E. x e. A ps ) ) $=
      ( wa wrex r19.41v ancom rexbii 3bitr4i ) BAEZCDFBCDFZAEABEZCDFALEBACDGMKC
      DABHIALHJ $.
      $( [27-May-1998] $)
  $}

  $( Restricted version of Theorem 19.43 of [Margaris] p. 90.  (The proof was
     shortened by Andrew Salmon, 30-May-2011.) $)
  r19.43 $p |- ( E. x e. A ( ph \/ ps ) <->
               ( E. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wrex wral wo r19.35 df-or rexbii ralnex imbi1i bitr4i 3bitr4i ) AEZ
    BFZCDGQCDHZBCDGZFZABIZCDGACDGZTIZQBCDJUBRCDABKLUDUCEZTFUAUCTKSUETACDMNOP $.
    $( [30-May-2011] $) $( [27-May-1998] $)

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.44 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty. $)
    r19.44av $p |- ( E. x e. A ( ph \/ ps ) -> ( E. x e. A ph \/ ps ) ) $=
      ( wo wrex r19.43 cv wcel idd rexlimiv orim2i sylbi ) ABECDFACDFZBCDFZENBE
      ABCDGOBNBBCDCHDIBJKLM $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.45 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.45av $p |- ( E. x e. A ( ph \/ ps ) -> ( ph \/ E. x e. A ps ) ) $=
      ( wo wrex r19.43 cv wcel idd rexlimiv orim1i sylbi ) ABECDFACDFZBCDFZEAOE
      ABCDGNAOAACDCHDIAJKLM $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers. $)
    ralcom $p |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) $=
      ( cv wcel wa wi wal wral ancomsimp 2albii alcom bitri r2al 3bitr4i ) BFDG
      ZCFEGZHAIZCJBJZSRHAIZBJCJZACEKBDKABDKCEKUAUBCJBJUCTUBBCRSALMUBBCNOABCDEPA
      CBEDPQ $.
      $( [13-Oct-1999] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers. $)
    rexcom $p |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) $=
      ( cv wcel wa wex wrex ancom anbi1i 2exbii excom bitri r2ex 3bitr4i ) BFDG
      ZCFEGZHZAHZCIBIZSRHZAHZBICIZACEJBDJABDJCEJUBUDCIBIUEUAUDBCTUCARSKLMUDBCNO
      ABCDEPACBEDPQ $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d y z A $.  $d x z A $.
    $( Commutation of restricted quantifiers.  Note that ` x ` and ` y `
       needn't be distinct (this makes the proof longer but illustrates the use
       of ~ dvelim ).  (The proof was shortened by Andrew Salmon,
       30-May-2011.) $)
    ralcom2 $p |- ( A. x e. A A. y e. A ph -> A. y e. A A. x e. A ph ) $=
      ( vz cv wcel wal wral eleq1 dral1 hbnae ax-17 dvelim al2imi df-ral imbi2i
      wi albii bitri wceq wb a4s imbi1d bicomd imbi12d biimpd wn nalequcoms a1i
      hba1 hbimd hbald ax-4 imim2i com23 syl9 sylsyld pm2.61i 3imtr4i ) BFZDGZC
      FZDGZARZCHZRZBHZVDVBARZBHZRZCHZACDIZBDIZABDIZCDIZVAVCUAZBHZVHVLRVRVHVLVGV
      KBCVRVBVDVFVJVQVBVDUBBVAVCDJUCZVRVJVFVIVEBCVRVBVDAVSUDKUEUFKUGVRUHZVTCHVH
      VHCHVLBCCLZVTVGCBBCBLVTVBVFCWAVBVBCHRCBEFZDGZVBCBEWCCMWBVADJNUIVFVFCHRVTV
      ECUKUJULUMVTVHVKCVTVDVDBHVHVJWCVDBCEWCBMWBVCDJNVGVDVIBVGVBVDAVFVEVBVECUNU
      OUPOUQOURUSVNVBVMRZBHVHVMBDPWDVGBVMVFVBACDPQSTVPVDVORZCHVLVOCDPWEVKCVOVJV
      DABDPQSTUT $.
      $( [8-Jun-2011] $) $( [24-Nov-1994] $)
  $}

  ${
    $( A commutative law for restricted quantifiers that swaps the domain of
       the restriction. $)
    ralcom3 $p |- ( A. x e. A ( x e. B -> ph ) <->
                    A. x e. B ( x e. A -> ph ) ) $=
      ( cv wcel wi wral pm2.04 ralimi2 impbii ) BEZDFZAGZBCHLCFZAGZBDHNPBCDOMAI
      JPNBDCMOAIJK $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d y A $.  $d x B $.  $d x y $.
    reean.1 $e |- ( ph -> A. y ph ) $.
    reean.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers.  (The proof was shortened by Andrew
       Salmon, 30-May-2011.) $)
    reean $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( cv wcel wa wex wrex an4 2exbii ax-17 hban eean bitri df-rex anbi12i
      r2ex 3bitr4i ) CIEJZDIFJZKABKZKZDLCLZUDAKZCLZUEBKZDLZKZUFDFMCEMACEMZBDFMZ
      KUHUIUKKZDLCLUMUGUPCDUDUEABNOUIUKCDUDADUDDPGQUEBCUECPHQRSUFCDEFUBUNUJUOUL
      ACETBDFTUAUC $.
      $( [30-May-2011] $) $( [27-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y $.  $d y A $.  $d x B $.
    $( Rearrange existential quantifiers. $)
    reeanv $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( ax-17 reean ) ABCDEFADGBCGH $.
      $( [9-May-1999] $)
  $}

  ${
    $d ph y z $.  $d ps x z $.  $d ch x y $.  $d A y $.  $d B x z $.
    $d C x y $.
    $( Rearrange three existential quantifiers.  (Contributed by Jeff Madsen,
       11-Jun-2010.) $)
    3reeanv $p |- ( E. x e. A E. y e. B E. z e. C ( ph /\ ps /\ ch )
                      <-> ( E. x e. A ph /\ E. y e. B ps /\ E. z e. C ch ) ) $=
      ( wa wrex w3a r19.41v reeanv anbi1i bitri df-3an 2rexbii rexbii 3bitr4i )
      ABJZEHKZCFIKZJZDGKZADGKZBEHKZJZUCJZABCLZFIKEHKZDGKUFUGUCLUEUBDGKZUCJUIUBU
      CDGMULUHUCABDEGHNOPUKUDDGUKUACJZFIKEHKUDUJUMEFHIABCQRUACEFHINPSUFUGUCQT
      $.
      $( [11-Jun-2010] $)
  $}

  ${
    $d ph y $.  $d ps x $.  $d A y $.  $d B x $.  $d x y $.
    $( Distribute quantification over "or".  (Contributed by Jeff Madsen,
       19-Jun-2010.) $)
    2ralor $p |- ( A. x e. A A. y e. B ( ph \/ ps ) <->
                  ( A. x e. A ph \/ A. y e. B ps ) ) $=
      ( wo wral wn wrex reeanv ioran rexbii rexnal bitr3i bitri anbi12i 3bitr3i
      wa bitr4i con4bii ) ABGZDFHZCEHZACEHZBDFHZGZAIZBIZSZDFJZCEJZUHCEJZUIDFJZS
      ZUDIZUGIZUHUICDEFKULUCIZCEJUPUKURCEUKUBIZDFJURUSUJDFABLMUBDFNOMUCCENPUOUE
      IZUFIZSUQUMUTUNVAACENBDFNQUEUFLTRUA $.
      $( [19-Jun-2010] $)
  $}

  ${
    hbreu.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbreu.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted uniqueness. $)
    hbreu $p |- ( E! y e. A ph -> A. x E! y e. A ph ) $=
      ( wreu cv wcel wa weu df-reu hban hbeu hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
      $( [11-Jun-2011] $) $( [30-Oct-2010] $)
  $}

  ${
    hbreud.1 $e |- ( ph -> A. x ph ) $.
    hbreud.2 $e |- ( ph -> A. y ph ) $.
    hbreud.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbreud.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbreu . $)
    hbreud $p |- ( ph -> ( E! y e. A ps -> A. x E! y e. A ps ) ) $=
      ( cv wcel wa weu wal wreu hband hbeud df-reu albii 3imtr4g ) ADJEKZBLZDMZ
      UCCNBDEOZUDCNAUBCDFGAUABCHIPQBDERZUDUCCUEST $.
      $( [15-Feb-2013] $)
  $}

  $( ` x ` is not free in ` E! x e. A ph ` . $)
  hbreu1 $p |- ( E! x e. A ph -> A. x E! x e. A ph ) $=
    ( wreu cv wcel wa weu df-reu hbeu1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.
    $( [19-Mar-1997] $)

  $( An "identity" law of concretion for restricted abstraction.  Special case
     of Definition 2.1 of [Quine] p. 16. $)
  rabid $p |- ( x e. { x e. A | ph } <-> ( x e. A /\ ph ) ) $=
    ( cv wcel wa crab df-rab abeq2i ) BDCEAFBABCGABCHI $.
    $( [9-Oct-2003] $)

  ${
    $d x A $.
    $( An "identity" law for restricted class abstraction.  (The proof was
       shortened by Andrew Salmon, 30-May-2011.) $)
    rabid2 $p |- ( A = { x e. A | ph } <-> A. x e. A ph ) $=
      ( cv wcel wa cab wceq wi wal crab abeq2 pm4.71 albii bitr4i df-rab eqeq2i
      wral wb df-ral 3bitr4i ) CBDCEZAFZBGZHZUBAIZBJZCABCKZHABCRUEUBUCSZBJUGUCB
      CLUFUIBUBAMNOUHUDCABCPQABCTUA $.
      $( [30-May-2011] $) $( [9-Oct-2003] $)
  $}

  ${
    $( Equivalent wff's correspond to equal restricted class abstractions.
       Closed theorem form of ~ rabbidva . $)
    rabbi $p |- ( A. x e. A ( ps <-> ch )
         <-> { x e. A | ps } = { x e. A | ch } ) $=
      ( cv wcel wa wb wal cab wceq wral crab abbi wi df-ral pm5.32 albii df-rab
      bitri eqeq12i 3bitr4i ) CEDFZAGZUCBGZHZCIZUDCJZUECJZKABHZCDLZACDMZBCDMZKU
      DUECNUKUCUJOZCIUGUJCDPUNUFCUCABQRTULUHUMUIACDSBCDSUAUB $.
      $( [25-Nov-2013] $)
  $}

  $( Swap with a membership relation in a restricted class abstraction. $)
  rabswap $p |- { x e. A | x e. B } = { x e. B | x e. A } $=
    ( cv wcel wa cab crab ancom abbii df-rab 3eqtr4i ) ADZBEZMCEZFZAGONFZAGOABH
    NACHPQANOIJOABKNACKL $.
    $( [4-Jul-2005] $)

  ${
    $d x y $.
    $( The abstraction variable in a restricted class abstraction isn't
       free. $)
    hbrab1 $p |- ( y e. { x e. A | ph } -> A. x y e. { x e. A | ph } ) $=
      ( crab cv wcel wa cab df-rab hbab1 hbxfreq ) BCABDEBFDGAHZBIABDJMBCKL $.
      $( [19-Mar-1997] $)
  $}

  ${
    $d x y $.  $d x z $.  $d z A $.
    hbrab.1 $e |- ( ph -> A. x ph ) $.
    hbrab.2 $e |- ( z e. A -> A. x z e. A ) $.
    $( A variable not free in a wff remains so in a restricted class
       abstraction.  (Unnecessary distinct variable restrictions were removed
       by Andrew Salmon, 11-Jul-2011.) $)
    hbrab $p |- ( z e. { y e. A | ph } -> A. x z e. { y e. A | ph } ) $=
      ( crab cv wcel wa cab df-rab hblem hban hbab hbxfreq ) BDACEHCIEJZAKZCLAC
      EMSBCDRABBDCEGNFOPQ $.
      $( [11-Jul-2011] $) $( [13-Oct-2003] $)
  $}

  ${
    $d x ph $.
    reubidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    reubidva $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( cv wcel wa weu wreu pm5.32da eubidv df-reu 3bitr4g ) ADGEHZBIZDJPCIZDJB
      DEKCDEKAQRDAPBCFLMBDENCDENO $.
      $( [13-Nov-2004] $)
  $}

  ${
    $d x ph $.
    reubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    reubidv $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( wb cv wcel adantr reubidva ) ABCDEABCGDHEIFJK $.
      $( [17-Oct-1996] $)
  $}

  ${
    reubiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule). $)
    reubiia $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( cv wcel wa weu wreu pm5.32i eubii df-reu 3bitr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
      $( [14-Nov-2004] $)
  $}

  ${
    reubii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule). $)
    reubii $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( wb cv wcel a1i reubiia ) ABCDABFCGDHEIJ $.
      $( [22-Oct-1999] $)
  $}

  ${
    $d y A $.  $d y B $.
    raleq1f.1 $e |- ( y e. A -> A. x y e. A ) $.
    raleq1f.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equality theorem for restricted universal quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    raleqf $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( wceq cv wcel wi wal wral hbeq eleq2 imbi1d albid df-ral 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)

    $( Equality theorem for restricted existential quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    rexeqf $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( wceq cv wcel wa wex wrex hbeq eleq2 anbi1d exbid df-rex 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [9-Oct-2003] $)

    $( Equality theorem for restricted uniqueness quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    reueq1f $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( wceq cv wcel wa weu wreu hbeq eleq2 anbi1d eubid df-reu 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted universal quantifier. $)
    raleq $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( vy cv wcel ax-17 raleqf ) ABECDEFZCGBHJDGBHI $.
      $( [16-Nov-1995] $)

    $( Equality theorem for restricted existential quantifier. $)
    rexeq $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( vy cv wcel ax-17 rexeqf ) ABECDEFZCGBHJDGBHI $.
      $( [29-Oct-1995] $)

    $( Equality theorem for restricted uniqueness quantifier. $)
    reueq1 $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( vy cv wcel ax-17 reueq1f ) ABECDEFZCGBHJDGBHI $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d A x $.  $d B x $.
    raleq1i.1 $e |- A = B $.
    $( Equality inference for restricted universal qualifier.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    raleqi $p |- ( A. x e. A ph <-> A. x e. B ph ) $=
      ( wceq wral wb raleq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [22-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    raleq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqdv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) $=
      ( wceq wral wb raleq syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [13-Nov-2005] $)

    $( Equality deduction for restricted existential quantifier. $)
    rexeqdv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) $=
      ( wceq wrex wb rexeq syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [14-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.
    raleqd.1 $e |- ( A = B -> ( ph <-> ps ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqbi1dv $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ps ) ) $=
      ( wceq wral raleq ralbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [16-Nov-1995] $)

    $( Equality deduction for restricted existential quantifier. $)
    rexeqbi1dv $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ps ) ) $=
      ( wceq wrex rexeq rexbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [18-Mar-1997] $)

    $( Equality deduction for restricted uniqueness quantifier. $)
    reueqd $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ps ) ) $=
      ( wceq wreu reueq1 reubidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    raleqbidv.1 $e |- ( ph -> A = B ) $.
    raleqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( wral raleqdv ralbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $) $( [6-Nov-2007] $)

    $( Equality deduction for restricted universal quantifier. $)
    rexeqbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( wrex rexeqdv rexbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $) $( [6-Nov-2007] $)
  $}

  ${
    $d z A w $.  $d w x $.  $d w y $.  $d w z $.  $d w ps $.  $d w ph $.
    cbvralf.1 $e |- ( z e. A -> A. x z e. A ) $.
    cbvralf.2 $e |- ( z e. A -> A. y z e. A ) $.
    cbvralf.3 $e |- ( ph -> A. y ph ) $.
    cbvralf.4 $e |- ( ps -> A. x ps ) $.
    cbvralf.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    cbvralf $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vw cv wcel wi wal wral wsbc ax-17 hblem hbs1 hbim eleq1 sbequ12 imbi12d
      wceq cbval hbsb sbequ sbie syl6bb bitri df-ral 3bitr4i ) CMZFNZAOZCPZDMZF
      NZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUFUPV
      DAVEUOVCFUCACLUDUEUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUFZVDUTVEBVCUSFUCVG
      VEACUSRBALDCUIABCDJKUJUKUEUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)

    $( Rule used to change bound variables, using implicit substitition.
       (Contributed by FL, 11-Jul-2011.)  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexf $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( vw cv wcel wa wex wrex wsbc ax-17 hblem hbs1 hban eleq1 sbequ12 anbi12d
      wceq cbvex hbsb sbequ sbie syl6bb bitri df-rex 3bitr4i ) CMZFNZAOZCPZDMZF
      NZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUFUPV
      DAVEUOVCFUCACLUDUEUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUFZVDUTVEBVCUSFUCVG
      VEACUSRBALDCUIABCDJKUJUKUEUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [27-Apr-2008] $)
  $}

  ${
    $d x z A $.  $d y z A $.
    cbvral.1 $e |- ( ph -> A. y ph ) $.
    cbvral.2 $e |- ( ps -> A. x ps ) $.
    cbvral.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvral $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vz cv wcel ax-17 cbvralf ) ABCDIEIJEKZCLNDLFGHM $.
      $( [11-Jul-2011] $) $( [31-Jul-2003] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    cbvrex $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( vz cv wcel ax-17 cbvrexf ) ABCDIEIJEKZCLNDLFGHM $.
      $( [11-Jul-2011] $) $( [31-Jul-2003] $)
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.  $d z x ps $.
    cbvralv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a restricted universal quantifier using
       implicit substitution. $)
    cbvralv $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( ax-17 cbvral ) ABCDEADGBCGFH $.
      $( [11-Jul-2011] $) $( [28-Jan-1997] $)

    $( Change the bound variable of a restricted existential quantifier using
       implicit substitution. $)
    cbvrexv $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( ax-17 cbvrex ) ABCDEADGBCGFH $.
      $( [11-Jul-2011] $) $( [2-Jun-1998] $)

    $( Change the bound variable of a restricted uniqueness quantifier using
       implicit substitution.  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvreuv $p |- ( E! x e. A ph <-> E! y e. A ps ) $=
      ( vz cv wcel weu wreu wsbc ax-17 sb8eu sban eubii clelsb3 anbi1i df-reu
      wa hbsb hban wceq eleq1 sbequ syl6bb anbi12d cbveu bitri 3bitri 3bitr4i
      sbie ) CHEIZATZCJZDHZEIZBTZDJZACEKBDEKUOUNCGHZLZGJUMCUTLZACUTLZTZGJZUSUNC
      GUNGMNVAVDGUMACGOPVEUTEIZVCTZGJUSVDVGGVBVFVCGCEQRPVGURGDVFVCDVFDMACGDADMU
      AUBURGMUTUPUCZVFUQVCBUTUPEUDVHVCACUPLBAGDCUEABCDBCMFULUFUGUHUIUJACESBDESU
      K $.
      $( [11-Jul-2011] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x A $.  $d z A $.  $d x y B $.  $d z y B $.  $d w B $.  $d z ph $.
    $d y ps $.  $d x ch $.  $d w ch $.
    cbvral2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvral2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution. $)
    cbvral2v $p |- ( A. x e. A A. y e. B ph <-> A. z e. A A. w e. B ps ) $=
      ( wral cv wceq ralbidv cbvralv ralbii bitri ) AEILZDHLCEILZFHLBGILZFHLSTD
      FHDMFMNACEIJOPTUAFHCBEGIKPQR $.
      $( [11-Jul-2011] $) $( [10-Aug-2004] $)
  $}

  ${
    $d A x $.  $d A z $.  $d B w $.  $d B x y $.  $d B z y $.  $d ch w $.
    $d ch x $.  $d ph z $.  $d ps y $.
    cbvrex2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvrex2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution.  (Contributed by FL, 2-Jul-2012.) $)
    cbvrex2v $p |- ( E. x e. A E. y e. B ph <-> E. z e. A E. w e. B ps ) $=
      ( wrex weq rexbidv cbvrexv rexbii bitri ) AEILZDHLCEILZFHLBGILZFHLRSDFHDF
      MACEIJNOSTFHCBEGIKOPQ $.
      $( [2-Jul-2012] $)
  $}

  ${
    $d w ph $.  $d z ps $.  $d x ch $.  $d v ch $.  $d y u th $.  $d x A $.
    $d w A $.  $d x y B $.  $d w y B $.  $d v B $.  $d x y z C $.
    $d w y z C $.  $d v z C $.  $d z y C $.  $d z C $.  $d u C $.
    cbvral3v.1 $e |- ( x = w -> ( ph <-> ch ) ) $.
    cbvral3v.2 $e |- ( y = v -> ( ch <-> th ) ) $.
    cbvral3v.3 $e |- ( z = u -> ( th <-> ps ) ) $.
    $( Change bound variables of triple restricted universal quantification,
       using implicit substitution. $)
    cbvral3v $p |- ( A. x e. A A. y e. B A. z e. C ph <->
                     A. w e. A A. v e. B A. u e. C ps ) $=
      ( wral cv wceq 2ralbidv cbvralv cbvral2v ralbii bitri ) AGMQFLQZEKQCGMQFL
      QZHKQBJMQILQZHKQUEUFEHKERHRSACFGLMNTUAUFUGHKCBDFGIJLMOPUBUCUD $.
      $( [11-Jul-2011] $) $( [10-May-2005] $)
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.
    $( Change bound variable by using a substitution.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvralsv $p |- ( A. x e. A ph <-> A. y e. A [ y / x ] ph ) $=
      ( vz wral cv wsbc ax-17 hbs1 sbequ12 cbvral hbsb sbequ bitri ) ABDFABEGHZ
      EDFABCGHZCDFAPBEDAEIZABEJABEKLPQECDABECACIMABCERMAECBNLO $.
      $( [11-Jul-2011] $) $( [20-Nov-2005] $)
  $}

  ${
    $d z x A $.  $d y z ph $.  $d y A $.
    $( Change bound variable by using a substitution.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexsv $p |- ( E. x e. A ph <-> E. y e. A [ y / x ] ph ) $=
      ( vz wrex cv wsbc ax-17 hbs1 sbequ12 cbvrex hbsb sbequ bitri ) ABDFABEGHZ
      EDFABCGHZCDFAPBEDAEIZABEJABEKLPQECDABECACIMABCERMAECBNLO $.
      $( [11-Jul-2011] $) $( [2-Mar-2008] $)
  $}

  ${
    $d x y z $.  $d y z ph $.  $d x z ps $.
    sbralie.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Implicit to explicit substitution that swaps variables in a quantified
       expression. $)
    sbralie $p |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) $=
      ( vz wral wsbc cbvralsv sbbii ax-17 raleq sbie bitri sbco2 ralbii 3bitri
      cv ) ACDRZGZDCRZHZACFRHZFUAGZUCFSHZDUAGBDUAGUBUCFSGZDUAHUDTUFDCACFSIJUFUD
      DCUDDKUCFSUALMNUCFDUAIUEBDUAUEACSHBACDFAFKOABCDBCKEMNPQ $.
      $( [5-Sep-2004] $)
  $}

  ${
    rabbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (inference
       rule). $)
    rabbiia $p |- { x e. A | ph } = { x e. A | ps } $=
      ( cv wcel wa cab crab pm5.32i abbii df-rab 3eqtr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
      $( [22-May-1999] $)
  $}

  ${
    $d x ph $.
    rabbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule). $)
    rabbidva $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb wral crab wceq ralrimiva rabbi sylib ) ABCGZDEHBDEICDEIJANDEFKBCDELM
      $.
      $( [28-Nov-2003] $)
  $}

  ${
    $d x ph $.
    rabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule). $)
    rabbidv $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb cv wcel adantr rabbidva ) ABCDEABCGDHEIFJK $.
      $( [10-Feb-1995] $)
  $}

  ${
    $d y A $.  $d y B $.
    rabeqf.1 $e |- ( y e. A -> A. x y e. A ) $.
    rabeqf.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equality theorem for restricted class abstractions, with bound-variable
       hypotheses instead of distinct variable restrictions. $)
    rabeqf $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( wceq cv wcel wa cab crab hbeq eleq2 anbi1d abbid df-rab 3eqtr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted class abstractions. $)
    rabeq $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( vy cv wcel ax-17 rabeqf ) ABECDEFZCGBHJDGBHI $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d A x $.  $d B x $.  $d ph x $.
    rabeqbidv.1 $e |- ( ph -> A = B ) $.
    rabeqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality of restricted class abstractions.  (Contributed by Jeff Madsen,
       1-Dec-2009.) $)
    rabeqbidv $p |- ( ph -> { x e. A | ps } = { x e. B | ch } ) $=
      ( crab wceq rabeq syl rabbidv eqtrd ) ABDEIZBDFIZCDFIAEFJOPJGBDEFKLABCDFH
      MN $.
      $( [15-Sep-2011] $) $( [1-Dec-2009] $)
  $}

  ${
    rabeqi.1 $e |- A = { x e. B | ph } $.
    $( Inference rule from equality of a class variable and a restricted class
       abstraction. $)
    rabeq2i $p |- ( x e. A <-> ( x e. B /\ ph ) ) $=
      ( cv wcel crab wa eleq2i rabid bitri ) BFZCGMABDHZGMDGAICNMEJABDKL $.
      $( [16-Feb-2004] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The universal class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the universal class. $)
  $c _V $. $( Letter V (for the universal class) $)

  $( Extend class notation to include the universal class symbol. $)
  cvv $a class _V $.

  ${
    $d z x $.  $d z y $.
    $( Soundness justification theorem for ~ df-v .  (Contributed by Rodolfo
       Medina, 27-Apr-2010.) $)
    vjust $p |- { x | x = x } = { y | y = y } $=
      ( vz cv wceq cab wsbc wcel equid sbt 2th df-clab 3bitr4i eqriv ) CADZOEZA
      FZBDZREZBFZPACDZGZSBUAGZUAQHUATHUBUCPACAIJSBCBIJKPCALSCBLMN $.
      $( [27-Apr-2010] $)
  $}

  $( Define the universal class.  Definition 5.20 of [TakeutiZaring] p. 21. $)
  df-v $a |- _V = { x | x = x } $.

  $( All set variables are sets (see ~ isset ).  Theorem 6.8 of [Quine]
     p. 43. $)
  vex $p |- x e. _V $=
    ( cv cvv wcel wceq eqid df-v abeq2i mpbir ) ABZCDJJEZJFKACAGHI $.
    $( [5-Aug-1993] $)

  ${
    $d x A $.
    $( Two ways to say " ` A ` is a set":  A class ` A ` is a member of the
       universal class ` _V ` (see ~ df-v ) if and only if the class ` A `
       exists (i.e. there exists some set ` x ` equal to class ` A ` ).
       Theorem 6.9 of [Quine] p. 43. _Notational convention_:  We will use the
       notational device " ` A e. _V ` " to mean " ` A ` is a set" very
       frequently, for example in ~ uniex .  Note the when ` A ` is not a set,
       it is called a proper class.  In some theorems, such as ~ uniexg , in
       order to shorten certain proofs we use the more general antecedent
       ` A e. V ` instead of ` A e. _V ` to mean " ` A ` is a set."

       Note that a constant is implicitly considered distinct from all
       variables.  This is why ` _V ` is not included in the distinct variable
       list, even though ~ df-clel requires that the expression substituted for
       ` B ` not contain ` x ` .  (Also, the Metamath spec does not allow
       constants in the distinct variable list.) $)
    isset $p |- ( A e. _V <-> E. x x = A ) $=
      ( cvv wcel cv wceq wa wex df-clel vex biantru exbii bitr4i ) BCDAEZBFZNCD
      ZGZAHOAHABCIOQAPOAJKLM $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A y $.  $d x y $.
    issetf.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A version of isset that does not require x and A to be distinct.
       (Contributed by Andrew Salmon, 6-Jun-2011.) $)
    issetf $p |- ( A e. _V <-> E. x x = A ) $=
      ( cvv wcel cv wceq wex isset hbeleq ax-17 eqeq1 cbvex bitri ) CEFBGZCHZBI
      AGZCHZAIBCJQSBAABCDKSBLPRCMNO $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d x A $.
    isseti.1 $e |- A e. _V $.
    $( A way to say " ` A ` is a set" (inference rule). $)
    isseti $p |- E. x x = A $=
      ( cvv wcel cv wceq wex isset mpbi ) BDEAFBGAHCABIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    issetri.1 $e |- E. x x = A $.
    $( A way to say " ` A ` is a set" (inference rule). $)
    issetri $p |- A e. _V $=
      ( cvv wcel cv wceq wex isset mpbir ) BDEAFBGAHCABIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class is a member of another class, it is a set.  Theorem 6.12 of
       [Quine] p. 44.  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    elex $p |- ( A e. B -> A e. _V ) $=
      ( vx cv wceq wcel wa wex cvv exsimpl df-clel isset 3imtr4i ) CDZAEZNBFZGC
      HOCHABFAIFOPCJCABKCALM $.
      $( [8-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    elisseti.1 $e |- A e. B $.
    $( If a class is a member of another class, it is a set. $)
    elexi $p |- A e. _V $=
      ( wcel cvv elex ax-mp ) ABDAEDCABFG $.
      $( [11-Jun-1994] $)
  $}

  ${
    $d x A $.
    $( An element of a class exists. $)
    elisset $p |- ( A e. V -> E. x x = A ) $=
      ( wcel cvv cv wceq wex elex isset sylib ) BCDBEDAFBGAHBCIABJK $.
      $( [1-May-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( If two classes each contain another class, then both contain some set.
       This proof was automatically generated from the virtual deduction proof
       ~ elex22VD using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    elex22 $p |- ( ( A e. B /\ A e. C ) -> E. x ( x e. B /\ x e. C ) ) $=
      ( wcel wa cv wceq wi wal eleq1a anim12ii alrimiv elisset adantr exim sylc
      wex ) BCEZBDEZFZAGZBHZUBCEZUBDEZFZIZAJUCARZUFARUAUGASUCUDTUEBCUBKBDUBKLMS
      UHTABCNOUCUFAPQ $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class contains another class, then it contains some set.  This
       proof was generated automatically from the virtual deduction proof
       ~ elex2 using the tools command file
       translate_without_overwriting_minimize_excluding_duplicates.cmd .
       (Contributed by Alan Sare, 25-Sep-2011.) $)
    elex2 $p |- ( A e. B -> E. x x e. B ) $=
      ( wcel cv wceq wi wal wex eleq1a alrimiv elisset exim sylc ) BCDZAEZBFZPC
      DZGZAHQAIRAIOSABCPJKABCLQRAMN $.
      $( [24-Oct-2011] $) $( [25-Sep-2011] $)
  $}

  $( A universal quantifier restricted to the universe is unrestricted. $)
  ralv $p |- ( A. x e. _V ph <-> A. x ph ) $=
    ( cvv wral cv wcel wi wal df-ral vex a1bi albii bitr4i ) ABCDBECFZAGZBHABHA
    BCIAOBNABJKLM $.
    $( [26-Mar-2004] $)

  $( An existential quantifier restricted to the universe is unrestricted. $)
  rexv $p |- ( E. x e. _V ph <-> E. x ph ) $=
    ( cvv wrex cv wcel wa wex df-rex vex biantrur exbii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.
    $( [26-Mar-2004] $)

  $( A uniqueness quantifier restricted to the universe is unrestricted. $)
  reuv $p |- ( E! x e. _V ph <-> E! x ph ) $=
    ( cvv wreu cv wcel wa weu df-reu vex biantrur eubii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.
    $( [7-Jun-2011] $) $( [1-Nov-2010] $)

  $( A class abstraction restricted to the universe is unrestricted.  (The
     proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
  rabab $p |- { x e. _V | ph } = { x | ph } $=
    ( cvv crab cv wcel wa cab df-rab vex biantrur abbii eqtr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.
    $( [8-Jun-2011] $) $( [27-Dec-2004] $)

  ${
    $d x y $.  $d y A $.
    $( Commutation of restricted and unrestricted universal quantifiers.  (The
       proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    ralcom4 $p |- ( A. x e. A A. y ph <-> A. y A. x e. A ph ) $=
      ( cvv wral wal ralcom ralv ralbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
      $( [8-Jun-2011] $) $( [26-Mar-2004] $)

    $( Commutation of restricted and unrestricted existential quantifiers.
       (The proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    rexcom4 $p |- ( E. x e. A E. y ph <-> E. y E. x e. A ph ) $=
      ( cvv wrex wex rexcom rexv rexbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
      $( [8-Jun-2011] $) $( [12-Apr-2004] $)
  $}

  ${
    $d A x $.  $d x y $.  $d ph x $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4a $p |- ( E. x E. y e. A ( ph /\ ps )
                          <-> E. y e. A ( ph /\ E. x ps ) ) $=
      ( wa wrex wex rexcom4 19.42v rexbii bitr3i ) ABFZDEGCHMCHZDEGABCHFZDEGMDC
      EINODEABCJKL $.
      $( [1-Jun-2011] $)

    $d B x $.
    rexcom4b.1 $e |- B e. _V $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4b $p |- ( E. x E. y e. A ( ph /\ x = B ) <-> E. y e. A ph ) $=
      ( cv wceq wa wrex wex rexcom4a isseti biantru rexbii bitr4i ) ABGEHZICDJB
      KAQBKZIZCDJACDJAQBCDLASCDRABEFMNOP $.
      $( [1-Jun-2011] $)
  $}

  ${
    $d x A $.
    $( Closed theorem version of ~ ceqsalg . $)
    ceqsalt $p |- ( ( A. x ( ps -> A. x ps )
              /\ A. x ( x = A -> ( ph <-> ps ) ) /\ A e. V )
         -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wal wi cv wceq wcel w3a wex elisset 3ad2ant3 bi1 imim3i al2imi 3ad2ant2
      wb 3ad2ant1 19.23t sylibd mpid bi2 imim2i com23 alimi 19.21t mpbid impbid
      ) BBCFGCFZCHDIZABSZGZCFZDEJZKZULAGZCFZBUQUSULCLZBUPUKUTUOCDEMNUQUSULBGZCF
      ZUTBGZUOUKUSVBGUPUNURVACUMABULABOPQRUKUOVBVCSUPULBCUATUBUCUQBURGZCFZBUSGZ
      UOUKVEUPUNVDCUNULBAUMBAGULABUDUEUFUGRUKUOVEVFSUPBURCUHTUIUJ $.
      $( [28-Feb-2013] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Restricted quantifier version of ~ ceqsalt . $)
    ceqsralt $p |- ( ( A. x ( ps -> A. x ps )
              /\ A. x ( x = A -> ( ph <-> ps ) ) /\ A e. B )
         -> ( A. x e. B ( x = A -> ph ) <-> ps ) ) $=
      ( wal wi cv wceq wb wcel w3a wral df-ral wa eleq1 pm5.32ri imbi1i 3bitr3i
      impexp albii a1i syl5bb 19.21v syl6bb biimt 3ad2ant3 ceqsalt 3bitr2d ) BB
      CFGCFZCHZDIZABJGCFZDEKZLZULAGZCEMZUNUPCFZGZURBUOUQUNUPGZCFZUSUQUKEKZUPGZC
      FZUOVAUPCENVDVAJUOVCUTCVBULOZAGUNULOZAGVCUTVEVFAULVBUNUKDEPQRVBULATUNULAT
      SUAUBUCUNUPCUDUEUNUJURUSJUMUNURUFUGABCDEUHUI $.
      $( [28-Feb-2013] $)
  $}

  ${
    $d x A $.
    ceqsalg.1 $e |- ( ps -> A. x ps ) $.
    ceqsalg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    ceqsalg $p |- ( A e. V -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wcel cv wceq wi wal wex elisset hba1 biimpd a2i a4s exlimd syl5com
      biimprcd alrimi impbid1 ) DEHZCIDJZAKZCLZBUDUECMUGBCDENUGUEBCUFCOFUFUEBKC
      UEABUEABGPQRSTBUFCFUEABGUAUBUC $.
      $( [8-Jun-2011] $) $( [29-Oct-2003] $)
  $}

  ${
    $d x A $.
    ceqsal.1 $e |- ( ps -> A. x ps ) $.
    ceqsal.2 $e |- A e. _V $.
    ceqsal.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsal $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( cvv wcel cv wceq wi wal wb ceqsalg ax-mp ) DHICJDKALCMBNFABCDHEGOP $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsalv.1 $e |- A e. _V $.
    ceqsalv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsalv $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( ax-17 ceqsal ) ABCDBCGEFH $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsralv.1 $e |- A e. _V $.
    ceqsralv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted quantifier version of ~ ceqsalv . $)
    ceqsralv $p |- ( A e. B -> ( A. x e. B ( x = A -> ph ) <-> ps ) ) $=
      ( wal wi cv wceq wb wcel wral ax-17 ax-gen ceqsralt mp3an12 ) BBCHIZCHCJD
      KZABLIZCHDEMTAICENBLSCBCOPUACGPABCDEQR $.
      $( [21-Jun-2013] $)
  $}

  ${
    $d x ps $.
    gencl.1 $e |- ( th <-> E. x ( ch /\ A = B ) ) $.
    gencl.2 $e |- ( A = B -> ( ph <-> ps ) ) $.
    gencl.3 $e |- ( ch -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    gencl $p |- ( th -> ps ) $=
      ( wceq wa wex syl5ib impcom exlimiv sylbi ) DCFGKZLZEMBHSBERCBCARBJINOPQ
      $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y $.  $d x R $.  $d x ps $.  $d y C $.  $d y S $.  $d y ch $.
    2gencl.1 $e |- ( C e. S <-> E. x e. R A = C ) $.
    2gencl.2 $e |- ( D e. S <-> E. y e. R B = D ) $.
    2gencl.3 $e |- ( A = C -> ( ph <-> ps ) ) $.
    2gencl.4 $e |- ( B = D -> ( ps <-> ch ) ) $.
    2gencl.5 $e |- ( ( x e. R /\ y e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    2gencl $p |- ( ( C e. S /\ D e. S ) -> ch ) $=
      ( wcel wi cv wceq wrex wa wex df-rex bitri imbi2d ex gencl com12 impcom )
      IKQZHKQZCULBRULCRESJQZUKEGIUKGITZEJUAUMUNUBEUCMUNEJUDUEUNBCULOUFULUMBUMAR
      UMBRDSJQZULDFHULFHTZDJUAUOUPUBDUCLUPDJUDUEUPABUMNUFUOUMAPUGUHUIUHUJ $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y z $.  $d y z D $.  $d z F $.  $d x y R $.  $d y z S $.  $d x ps $.
    $d y ch $.  $d z th $.
    3gencl.1 $e |- ( D e. S <-> E. x e. R A = D ) $.
    3gencl.2 $e |- ( F e. S <-> E. y e. R B = F ) $.
    3gencl.3 $e |- ( G e. S <-> E. z e. R C = G ) $.
    3gencl.4 $e |- ( A = D -> ( ph <-> ps ) ) $.
    3gencl.5 $e |- ( B = F -> ( ps <-> ch ) ) $.
    3gencl.6 $e |- ( C = G -> ( ch <-> th ) ) $.
    3gencl.7 $e |- ( ( x e. R /\ y e. R /\ z e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    3gencl $p |- ( ( D e. S /\ F e. S /\ G e. S ) -> th ) $=
      ( wcel wa wi wceq wrex wex df-rex bitri imbi2d 3expia 2gencl com12 3impia
      cv gencl ) KMUCZNMUCZOMUCZDUTURUSUDZDVACUEVADUEGUPLUCZUTGJOUTJOUFZGLUGVBV
      CUDGUHRVCGLUIUJVCCDVAUAUKVAVBCVBAUEVBBUEVBCUEEFHIKNLMPQHKUFABVBSUKINUFBCV
      BTUKEUPLUCFUPLUCVBAUBULUMUNUQUNUO $.
      $( [17-May-1996] $)
  $}

  ${
    $d x A $.  $d x ps $.
    cgsexg.1 $e |- ( x = A -> ch ) $.
    cgsexg.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes. $)
    cgsexg $p |- ( A e. V ->
                     ( E. x ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa exlimiv cv wceq elisset eximi syl biimprcd ancld
      eximdv syl5com impbid2 ) EFIZCAJZDKZBUEBDCABHLMUDCDKZBUFUDDNEOZDKUGDEFPUH
      CDGQRBCUEDBCACABHSTUAUBUC $.
      $( [21-Apr-2008] $) $( [26-Aug-2007] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    cgsex2g.1 $e |- ( ( x = A /\ y = B ) -> ch ) $.
    cgsex2g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes. $)
    cgsex2g $p |- ( ( A e. V /\ B e. W ) ->
                     ( E. x E. y ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa exlimivv cv wceq elisset anim12i eeanv sylibr 2eximi
      syl biimprcd ancld 2eximdv syl5com impbid2 ) FHLZGILZMZCAMZENDNZBUMBDECAB
      KOPULCENDNZBUNULDQFRZEQGRZMZENDNZUOULUPDNZUQENZMUSUJUTUKVADFHSEGISTUPUQDE
      UAUBURCDEJUCUDBCUMDEBCACABKUEUFUGUHUI $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.
    cgsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> ch ) $.
    cgsex4g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 4 general classes. $)
    cgsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                    ( E. x E. y E. z E. w ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex cv wceq biimpa exlimivv elisset anim12i eeanv sylibr ee4anv
      2eximi syl biimprcd ancld 2eximdv syl5com impbid2 ) HLPZIMPZQZJLPZKMPZQZQ
      ZCAQZGRFRZERDRZBVCBDEVBBFGCABOUAUBUBVACGRFRZERDRZBVDVADSHTZESITZQZFSJTZGS
      KTZQZQZGRFRZERDRZVFVAVIERDRZVLGRFRZQVOUQVPUTVQUQVGDRZVHERZQVPUOVRUPVSDHLU
      CEIMUCUDVGVHDEUEUFUTVJFRZVKGRZQVQURVTUSWAFJLUCGKMUCUDVJVKFGUEUFUDVIVLDEFG
      UGUFVNVEDEVMCFGNUHUHUIBVEVCDEBCVBFGBCACABOUJUKULULUMUN $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x A $.
    ceqsex.1 $e |- ( ps -> A. x ps ) $.
    ceqsex.2 $e |- A e. _V $.
    ceqsex.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsex $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( cv wceq wa wex biimpa exlimi isseti wi wal biimprcd alrimi exintr syl
      mpi impbii ) CHDIZAJZCKZBUDBCEUCABGLMBUCCKZUECDFNBUCAOZCPUFUEOBUGCEUCABGQ
      RUCACSTUAUB $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsexv.1 $e |- A e. _V $.
    ceqsexv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsexv $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( ax-17 ceqsex ) ABCDBCGEFH $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    ceqsex2.1 $e |- ( ps -> A. x ps ) $.
    ceqsex2.2 $e |- ( ch -> A. y ch ) $.
    ceqsex2.3 $e |- A e. _V $.
    ceqsex2.4 $e |- B e. _V $.
    ceqsex2.5 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2.6 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2 $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( cv wceq w3a wex wa exbii ceqsex 3anass 19.42v bitri ax-17 anbi2d exbidv
      hban hbex 3bitri ) DNFOZENGOZAPZEQZDQUJUKARZEQZRZDQUKBRZEQZCUMUPDUMUJUNRZ
      EQUPULUSEUJUKAUASUJUNEUBUCSUOURDFUQDEUKBDUKDUDHUGUHJUJUNUQEUJABUKLUEUFTBC
      EGIKMTUI $.
      $( [13-Aug-2011] $) $( [7-Jun-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.  $d y ch $.
    ceqsex2v.1 $e |- A e. _V $.
    ceqsex2v.2 $e |- B e. _V $.
    ceqsex2v.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2v.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2v $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( ax-17 ceqsex2 ) ABCDEFGBDLCELHIJKM $.
      $( [13-Aug-2011] $) $( [7-Jun-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x ps $.  $d y ch $.
    $d z th $.
    ceqsex3v.1 $e |- A e. _V $.
    ceqsex3v.2 $e |- B e. _V $.
    ceqsex3v.3 $e |- C e. _V $.
    ceqsex3v.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex3v.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex3v.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( Elimination of three existential quantifiers, using implicit
       substitution. $)
    ceqsex3v $p |- ( E. x E. y E. z ( ( x = A /\ y = B /\ z = C ) /\ ph )
                 <-> th ) $=
      ( cv wceq wa wex anass 3anass anbi1i df-3an anbi2i 3bitr4i 2exbii 19.42vv
      w3a bitri exbii 3anbi3d 2exbidv ceqsexv ceqsex2v 3bitri ) EQHRZFQIRZGQJRZ
      UIZASZGTFTZETUQURUSAUIZGTFTZSZETURUSBUIZGTFTZDVBVEEVBUQVCSZGTFTVEVAVHFGUQ
      URUSSZSZASUQVIASZSVAVHUQVIAUAUTVJAUQURUSUBUCVCVKUQURUSAUDUEUFUGUQVCFGUHUJ
      UKVDVGEHKUQVCVFFGUQABURUSNULUMUNBCDFGIJLMOPUOUP $.
      $( [16-Aug-2011] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x ps $.  $d y ch $.  $d z th $.  $d w ta $.
    ceqsex4v.1 $e |- A e. _V $.
    ceqsex4v.2 $e |- B e. _V $.
    ceqsex4v.3 $e |- C e. _V $.
    ceqsex4v.4 $e |- D e. _V $.
    ceqsex4v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex4v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex4v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex4v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    $( Elimination of four existential quantifiers, using implicit
       substitution. $)
    ceqsex4v $p |- ( E. x E. y E. z E. w
          ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) /\ ph ) <-> ta ) $=
      ( wceq w3a wex 19.42vv 3anass df-3an anbi2i bitr4i 2exbii 3bitr4i 3anbi3d
      cv wa 2exbidv ceqsex2v 3bitri ) FUMJUBZGUMKUBZUNZHUMLUBZIUMMUBZUNZAUCZIUD
      HUDZGUDFUDURUSVAVBAUCZIUDHUDZUCZGUDFUDVAVBCUCZIUDHUDZEVEVHFGUTVFUNZIUDHUD
      UTVGUNVEVHUTVFHIUEVDVKHIVDUTVCAUNZUNVKUTVCAUFVFVLUTVAVBAUGUHUIUJURUSVGUGU
      KUJVGVAVBBUCZIUDHUDVJFGJKNOURVFVMHIURABVAVBRULUOUSVMVIHIUSBCVAVBSULUOUPCD
      EHILMPQTUAUPUQ $.
      $( [23-Sep-2011] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u E $.  $d x y z w v u F $.  $d x ps $.
    $d y ch $.  $d z th $.  $d w ta $.  $d v et $.  $d u ze $.
    ceqsex6v.1 $e |- A e. _V $.
    ceqsex6v.2 $e |- B e. _V $.
    ceqsex6v.3 $e |- C e. _V $.
    ceqsex6v.4 $e |- D e. _V $.
    ceqsex6v.5 $e |- E e. _V $.
    ceqsex6v.6 $e |- F e. _V $.
    ceqsex6v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex6v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex6v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex6v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex6v.11 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex6v.12 $e |- ( u = F -> ( et <-> ze ) ) $.
    $( Elimination of six existential quantifiers, using implicit
       substitution. $)
    ceqsex6v $p |- ( E. x E. y E. z E. w E. v E. u
          ( ( x = A /\ y = B /\ z = C ) /\ ( w = D /\ v = E /\ u = F ) /\ ph )
                 <-> ze ) $=
      ( cv wceq w3a wex wa 3anass 3exbii 19.42vvv bitri anbi2d 3exbidv ceqsex3v
      3bitri ) HULNUMZIULOUMZJULPUMZUNZKULQUMLULRUMMULSUMUNZAUNZMUOLUOKUOZJUOIU
      OHUOVHVIAUPZMUOLUOKUOZUPZJUOIUOHUOVIDUPZMUOLUOKUOZGVKVNHIJVKVHVLUPZMUOLUO
      KUOVNVJVQKLMVHVIAUQURVHVLKLMUSUTURVMVIBUPZMUOLUOKUOVICUPZMUOLUOKUOVPHIJNO
      PTUAUBVEVLVRKLMVEABVIUFVAVBVFVRVSKLMVFBCVIUGVAVBVGVSVOKLMVGCDVIUHVAVBVCDE
      FGKLMQRSUCUDUEUIUJUKVCVD $.
      $( [21-Sep-2011] $)
  $}

  ${
    $d x y z w v u t s A $.  $d x y z w v u t s B $.  $d x y z w v u t s C $.
    $d x y z w v u t s D $.  $d x y z w v u t s E $.  $d x y z w v u t s F $.
    $d x y z w v u t s G $.  $d x y z w v u t s H $.  $d x ps $.  $d y ch $.
    $d z th $.  $d w ta $.  $d v et $.  $d u ze $.  $d t si $.  $d s rh $.
    ceqsex8v.1 $e |- A e. _V $.
    ceqsex8v.2 $e |- B e. _V $.
    ceqsex8v.3 $e |- C e. _V $.
    ceqsex8v.4 $e |- D e. _V $.
    ceqsex8v.5 $e |- E e. _V $.
    ceqsex8v.6 $e |- F e. _V $.
    ceqsex8v.7 $e |- G e. _V $.
    ceqsex8v.8 $e |- H e. _V $.
    ceqsex8v.9 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex8v.10 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex8v.11 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex8v.12 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex8v.13 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex8v.14 $e |- ( u = F -> ( et <-> ze ) ) $.
    ceqsex8v.15 $e |- ( t = G -> ( ze <-> si ) ) $.
    ceqsex8v.16 $e |- ( s = H -> ( si <-> rh ) ) $.
    $( Elimination of eight existential quantifiers, using implicit
       substitution. $)
    ceqsex8v $p |- ( E. x E. y E. z E. w E. v E. u E. t E. s
              ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) )
         /\ ( ( v = E /\ u = F ) /\ ( t = G /\ s = H ) ) /\ ph ) <-> rh ) $=
      ( cv wceq wa w3a 19.42vv 2exbii bitri 3anass df-3an anbi2i bitr4i 3bitr4i
      wex 3anbi3d 4exbidv ceqsex4v 3bitri ) JVBQVCZKVBRVCZVDZLVBSVCZMVBTVCZVDZV
      DZNVBUAVCOVBUBVCVDZPVBUCVCUEVBUDVCVDZVDZAVEZUEVNPVNZOVNNVNZMVNLVNZKVNJVNW
      AWDWFWGAVEZUEVNPVNZOVNNVNZVEZMVNLVNZKVNJVNWFWGEVEZUEVNPVNOVNNVNZIWLWQJKWK
      WPLMWEWMVDZUEVNPVNZOVNNVNZWEWOVDZWKWPXBWEWNVDZOVNNVNXCXAXDNOWEWMPUEVFVGWE
      WNNOVFVHWJXANOWIWTPUEWIWEWHAVDZVDWTWEWHAVIWMXEWEWFWGAVJVKVLVGVGWAWDWOVJVM
      VGVGWOWFWGBVEZUEVNPVNOVNNVNWFWGCVEZUEVNPVNOVNNVNWFWGDVEZUEVNPVNOVNNVNWSJK
      LMQRSTUFUGUHUIVSWMXFNOPUEVSABWFWGUNVOVPVTXFXGNOPUEVTBCWFWGUOVOVPWBXGXHNOP
      UEWBCDWFWGUPVOVPWCXHWRNOPUEWCDEWFWGUQVOVPVQEFGHINOPUEUAUBUCUDUJUKULUMURUS
      UTVAVQVR $.
      $( [23-Sep-2011] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex.1 $e |- A e. _V $.
    gencbvex.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    gencbvex $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex excom wb anbi12d bicomd exbii eqcoms ceqsexv simpr eqcom
      19.41v biimpi adantl eximi sylbi adantr ancri impbii bitri 3bitr3i ) FLZG
      MZDBNZNZFOZEOUREOZFOCANZEOUQFOUREFPUSVAEUQVAFGHUQVAQGUOGUOMZVAUQVBCDABJIR
      SUAUBTUTUQFUTUPEOZUQNZUQUPUQEUEVDUQVCUQUCUQVCDVCBDCVBNZEOVCKVEUPEVBUPCVBU
      PGUOUDUFUGUHUIUJUKULUMTUN $.
      $( [8-Jun-2011] $) $( [17-May-1996] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex2.1 $e |- A e. _V $.
    gencbvex2.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex2.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex2.4 $e |- ( th -> E. x ( ch /\ A = y ) ) $.
    $( Restatement of ~ gencbvex with weaker hypotheses.  (Contributed by
       Jeffrey Hankins, 6-Dec-2006.) $)
    gencbvex2 $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex biimpac exlimiv impbii gencbvex ) ABCDEFGHIJDCGFLMZNZEOK
      UADETCDJPQRS $.
      $( [6-Dec-2006] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbval.1 $e |- A e. _V $.
    gencbval.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbval.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbval.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution. $)
    gencbval $p |- ( A. x ( ch -> ph ) <-> A. y ( th -> ps ) ) $=
      ( wi wal wn wa wex cv wceq notbid exanali gencbvex 3bitr3i con4bii ) CALE
      MZDBLFMZCANZOEPDBNZOFPUDNUENUFUGCDEFGHGFQRABISJKUACAETDBFTUBUC $.
      $( [17-May-1996] $)
  $}

  ${
    $d A x $.  $d x y $.
    sbhypf.1 $e |- ( ps -> A. x ps ) $.
    sbhypf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See also ~ csbhypf .  (Contributed by Raph Levien,
       10-Apr-2004.) $)
    sbhypf $p |- ( y = A -> ( [ y / x ] ph <-> ps ) ) $=
      ( cv wceq wa wex wsbc wb vex eqeq1 ceqsexv hbs1 hbbi sbequ12 bicomd
      sylan9bb exlimi sylbir ) DHZEIZCHZUDIZUFEIZJZCKACUDLZBMZUHUECUDDNUFUDEOPU
      IUKCUJBCACDQFRUGUJAUHBUGAUJACDSTGUAUBUC $.
      $( [5-Mar-2008] $) $( 2-Mar-2008] $)
  $}

  ${
    $d x A $.
    vtoclf.1 $e |- ( ps -> A. x ps ) $.
    vtoclf.2 $e |- A e. _V $.
    vtoclf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  This is a
       generalization of ~ chvar . $)
    vtoclf $p |- ps $=
      ( cv wceq wex wi isseti biimpd eximi ax-mp 19.36i mpg ) ABCABCECIDJZCKABL
      ZCKCDFMSTCSABGNOPQHR $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ps $.
    vtocl.1 $e |- A e. _V $.
    vtocl.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl.3 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl $p |- ps $=
      ( ax-17 vtoclf ) ABCDBCHEFGI $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    vtocl2.1 $e |- A e. _V $.
    vtocl2.2 $e |- B e. _V $.
    vtocl2.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    vtocl2.4 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl2 $p |- ps $=
      ( wal wi wex cv wceq isseti wa eeanv biimpd 2eximi sylbir 19.36v 19.36aiv
      mp2an exbii mpbi ax-gen mpg ) ADKZBCUIBCABLZDMZCMZUIBLZCMCNEOZCMZDNFOZDMZ
      ULCEGPDFHPUOUQQUNUPQZDMCMULUNUPCDRURUJCDURABISTUAUDUKUMCABDUBUEUFUCADJUGU
      H $.
      $( [8-Jun-2011] $) $( [26-Jul-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    vtocl3.1 $e |- A e. _V $.
    vtocl3.2 $e |- B e. _V $.
    vtocl3.3 $e |- C e. _V $.
    vtocl3.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    vtocl3.5 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl3 $p |- ps $=
      ( wal wi wex cv wceq isseti w3a eeeanv biimpd 2eximi sylbir 19.36v 2exbii
      eximi mp3an mpbi exbii 19.36aiv gen2 mpg ) AENZDNZBCUOBCUNBOZDPZCPZUOBOZC
      PABOZEPZDPCPZURCQFRZCPZDQGRZDPZEQHRZEPZVBCFISDGJSEHKSVDVFVHTVCVEVGTZEPZDP
      CPVBVCVEVGCDEUAVJVACDVIUTEVIABLUBUGUCUDUHVAUPCDABEUEUFUIUQUSCUNBDUEUJUIUK
      ADEMULUM $.
      $( [8-Jun-2011] $) $( [3-Jun-1995] $)
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclb.1 $e |- A e. _V $.
    vtoclb.2 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclb.3 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclb.4 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclb $p |- ( ch <-> th ) $=
      ( wb cv wceq bibi12d vtocl ) ABKCDKEFGELFMACBDHINJO $.
      $( [23-Dec-1993] $)
  $}

  ${
    $d y A z $.  $d x z $.  $d y z $.
    vtoclgf.1 $e |- ( y e. A -> A. x y e. A ) $.
    vtoclgf.2 $e |- ( ps -> A. x ps ) $.
    vtoclgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable, with bound-variable
       hypotheses in place of distinct variable restrictions.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       11-Jul-2011.) $)
    vtoclgf $p |- ( A e. V -> ps ) $=
      ( vz wcel cvv elex cv wceq wex isset hblem hbeleq ax-17 eqeq1 cbvex bitri
      mpbii exlimi sylbi syl ) EFLEMLZBEFNUICOZEPZCQZBUIKOZEPZKQULKERUNUKKCCKEC
      DKEGSTUKKUAUMUJEUBUCUDUKBCHUKABJIUEUFUGUH $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x y A $.  $d x ps $.
    vtoclg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclg.2 $e |- ph $.
    $( Implicit substitution of a class expression for a set variable. $)
    vtoclg $p |- ( A e. V -> ps ) $=
      ( vy cv wcel ax-17 vtoclgf ) ABCHDEHIDJCKBCKFGL $.
      $( [17-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclbg.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclbg.2 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclbg.3 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclbg $p |- ( A e. V -> ( ch <-> th ) ) $=
      ( wb cv wceq bibi12d vtoclg ) ABKCDKEFGELFMACBDHINJO $.
      $( [29-Apr-1994] $)
  $}

  ${
    $d z A $.  $d z B $.  $d z x $.  $d z y $.
    vtocl2gf.1 $e |- ( z e. A -> A. x z e. A ) $.
    vtocl2gf.2 $e |- ( z e. A -> A. y z e. A ) $.
    vtocl2gf.3 $e |- ( z e. B -> A. y z e. B ) $.
    vtocl2gf.4 $e |- ( ps -> A. x ps ) $.
    vtocl2gf.5 $e |- ( ch -> A. y ch ) $.
    vtocl2gf.6 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gf.7 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gf.8 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl2gf $p |- ( ( A e. V /\ B e. W ) -> ch ) $=
      ( wcel cvv elex wi cv ax-17 hbel hbim wceq imbi2d vtoclgf mpan9 ) GISGTSZ
      HJSCGIUAUKBUBUKCUBEFHJMUKCEEFFGTLFUCTSEUDUEOUFEUCHUGBCUKQUHABDFGTKNPRUIUI
      UJ $.
      $( [10-Aug-2013] $) $( [25-Apr-1995] $)
  $}

  ${
    $d w A $.  $d w B $.  $d w C $.  $d w y $.  $d w z $.
    vtocl3gf.a $e |- ( w e. A -> A. x w e. A ) $.
    vtocl3gf.b $e |- ( w e. A -> A. y w e. A ) $.
    vtocl3gf.c $e |- ( w e. A -> A. z w e. A ) $.
    vtocl3gf.d $e |- ( w e. B -> A. y w e. B ) $.
    vtocl3gf.e $e |- ( w e. B -> A. z w e. B ) $.
    vtocl3gf.f $e |- ( w e. C -> A. z w e. C ) $.
    vtocl3gf.1 $e |- ( ps -> A. x ps ) $.
    vtocl3gf.2 $e |- ( ch -> A. y ch ) $.
    vtocl3gf.3 $e |- ( th -> A. z th ) $.
    vtocl3gf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3gf.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3gf.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3gf.7 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl3gf $p |- ( ( A e. V /\ B e. W /\ C e. X ) -> th ) $=
      ( wcel cvv wa elex wi cv ax-17 hbel hbim wceq imbi2d vtocl2gf mpan9 3impb
      vtoclgf ) ILUHZJMUHZKNUHZDVCIUIUHZVDVEUJDILUKVFBULVFCULVFDULFGHJKMNRSTVFC
      FFHHIUIPHUMUIUHZFUNUOUBUPVFDGGHHIUIQVGGUNUOUCUPFUMJUQBCVFUEURGUMKUQCDVFUF
      URABEHIUIOUAUDUGVBUSUTVA $.
      $( [10-Aug-2013] $)
  $}

  ${
    $d w x A $.  $d y A $.  $d w y B $.  $d x ps $.  $d y ch $.
    vtocl2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2g.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2g.3 $e |- ph $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2g $p |- ( ( A e. V /\ B e. W ) -> ch ) $=
      ( vw cv wcel ax-17 vtocl2gf ) ABCDEMFGHIMNZFOZDPSEPRGOEPBDPCEPJKLQ $.
      $( [25-Apr-1995] $)
  $}

  ${
    $d y A $.  $d x B z $.
    vtoclgaf.1 $e |- ( y e. A -> A. x y e. A ) $.
    vtoclgaf.2 $e |- ( ps -> A. x ps ) $.
    vtoclgaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgaf.4 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       8-Jun-2011.) $)
    vtoclgaf $p |- ( A e. B -> ps ) $=
      ( vz wcel cv wi ax-17 hbel hbim wceq eleq1 imbi12d vtoclgf pm2.43i ) EFLZ
      BCMZFLZANUCBNCDEFGUCBCCDKEFGKMFLCOPHQUDERUEUCABUDEFSITJUAUB $.
      $( [11-Jul-2011] $) $( [17-Feb-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.
    vtoclga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclga.2 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclga $p |- ( A e. B -> ps ) $=
      ( vy cv wcel ax-17 vtoclgaf ) ABCHDEHIDJCKBCKFGL $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d z A $.  $d z B $.  $d x y z C $.  $d x y z D $.
    vtocl2gaf.a $e |- ( z e. A -> A. x z e. A ) $.
    vtocl2gaf.b $e |- ( z e. A -> A. y z e. A ) $.
    vtocl2gaf.c $e |- ( z e. B -> A. y z e. B ) $.
    vtocl2gaf.1 $e |- ( ps -> A. x ps ) $.
    vtocl2gaf.2 $e |- ( ch -> A. y ch ) $.
    vtocl2gaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gaf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gaf.5 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2gaf $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( wcel ax-17 wa cv hbel hblem hban hbim wceq eleq1 anbi1d anbi2d vtocl2gf
      wi imbi12d pm2.43i ) GISZHJSZUAZCDUBZISZEUBZJSZUAZAULUOVAUAZBULUQCULDEFGH
      IJKLMVCBDUOVADDFFGIKFUBZISZDTUCDFEJVDJSZDTUDUENUFUQCEUOUPEEFFGILVEETUCEFF
      HJMVFETUCUEOUFURGUGZVBVCABVGUSUOVAURGIUHUIPUMUTHUGZVCUQBCVHVAUPUOUTHJUHUJ
      QUMRUKUN $.
      $( [10-Aug-2013] $)
  $}

  ${
    $d w x y A $.  $d w y B $.  $d w x y C $.  $d w x y D $.  $d x ps $.
    $d y ch $.
    vtocl2ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2ga.3 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2ga $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( vw cv wcel ax-17 vtocl2gaf ) ABCDEMFGHIMNZFOZDPSEPRGOEPBDPCEPJKLQ $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d w A $.  $d w B $.  $d w C $.  $d w x y z R $.  $d w x y z S $.
    $d w x y z T $.
    vtocl3gaf.a $e |- ( w e. A -> A. x w e. A ) $.
    vtocl3gaf.b $e |- ( w e. A -> A. y w e. A ) $.
    vtocl3gaf.c $e |- ( w e. A -> A. z w e. A ) $.
    vtocl3gaf.d $e |- ( w e. B -> A. y w e. B ) $.
    vtocl3gaf.e $e |- ( w e. B -> A. z w e. B ) $.
    vtocl3gaf.f $e |- ( w e. C -> A. z w e. C ) $.
    vtocl3gaf.1 $e |- ( ps -> A. x ps ) $.
    vtocl3gaf.2 $e |- ( ch -> A. y ch ) $.
    vtocl3gaf.3 $e |- ( th -> A. z th ) $.
    vtocl3gaf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3gaf.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3gaf.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3gaf.7 $e |- ( ( x e. R /\ y e. S /\ z e. T ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables. $)
    vtocl3gaf $p |- ( ( A e. R /\ B e. S /\ C e. T ) -> th ) $=
      ( wcel w3a cv wi ax-17 hbel hblem hb3an hbim wceq 3anbi1d imbi12d 3anbi2d
      eleq1 3anbi3d vtocl3gf pm2.43i ) ILUHZJMUHZKNUHZUIZDEUJZLUHZFUJZMUHZGUJZN
      UHZUIZAUKVEVLVNUIZBUKVEVFVNUIZCUKVHDUKEFGHIJKLMNOPQRSTVPBEVEVLVNEEHHILOHU
      JZLUHZEULUMEHFMVRMUHZEULUNEHGNVRNUHZEULUNUOUAUPVQCFVEVFVNFFHHILPVSFULUMFH
      HJMRVTFULUMFHGNWAFULUNUOUBUPVHDGVEVFVGGGHHILQVSGULUMGHHJMSVTGULUMGHHKNTWA
      GULUMUOUCUPVIIUQZVOVPABWBVJVEVLVNVIILVAURUDUSVKJUQZVPVQBCWCVLVFVEVNVKJMVA
      UTUEUSVMKUQZVQVHCDWDVNVGVEVFVMKNVAVBUFUSUGVCVD $.
      $( [10-Aug-2013] $)
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d w z C $.  $d w x y z D $.
    $d w x y z R $.  $d w x y z S $.  $d x ps $.  $d y ch $.  $d z th $.
    vtocl3ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3ga.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3ga.4 $e |- ( ( x e. D /\ y e. R /\ z e. S ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables. $)
    vtocl3ga $p |- ( ( A e. D /\ B e. R /\ C e. S ) -> th ) $=
      ( vw wcel ax-17 cv vtocl3gaf ) ABCDEFGRHIJKLMRUAZHSZETUDFTUDGTUCISZFTUEGT
      UCJSGTBETCFTDGTNOPQUB $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d x A $.  $d x ph $.
    vtocleg.1 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtocleg $p |- ( A e. V -> ph ) $=
      ( wcel cv wceq wex elisset exlimiv syl ) CDFBGCHZBIABCDJMABEKL $.
      $( [10-Jan-2004] $)
  $}

  ${
    $d x A $.
    $( Implicit substitution of a class for a set variable.  (Closed theorem
       version of ~ vtoclef .)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    vtoclegft $p |- ( ( A e. B /\ A. x ( ph -> A. x ph ) /\
                   A. x ( x = A -> ph ) ) -> ph ) $=
      ( wcel wal wi cv wceq wex elisset exim pm2.27 19.9t syl9 syl7 syl 3imp )
      CDEZAABFGBFZBHCIZAGBFZASUABJZTUBAGGBCDKUBUCABJZGZUCTAUAABLUCUEUDTAUCUDMAB
      NOPQR $.
      $( [8-Jun-2011] $) $( [7-Nov-2005] $)
  $}

  ${
    $d x A $.
    vtoclef.1 $e |- ( ph -> A. x ph ) $.
    vtoclef.2 $e |- A e. _V $.
    vtoclef.3 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclef $p |- ph $=
      ( cv wceq wex isseti exlimi ax-mp ) BGCHZBIABCEJMABDFKL $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ph $.
    vtocle.1 $e |- A e. _V $.
    vtocle.2 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtocle $p |- ph $=
      ( cvv wcel vtocleg ax-mp ) CFGADABCFEHI $.
      $( [9-Sep-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    vtoclri.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclri.2 $e |- A. x e. B ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclri $p |- ( A e. B -> ps ) $=
      ( rspec vtoclga ) ABCDEFACEGHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    $d x y $.  $d y A $.
    cla4gft.1 $e |- ( ps -> A. x ps ) $.
    cla4gft.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( A closed version of ~ cla4gf .  (Contributed by Andrew Salmon,
       6-Jun-2011.) $)
    cla4gft $p |- ( A. x ( x = A -> ( ph <-> ps ) ) -> ( A e. B ->
                      ( A. x ph -> ps ) ) ) $=
      ( wcel cvv cv wceq wb wi wal elex wex issetf hba1 bi1 imim2i eximd syl5bi
      a4s 19.36 syl6ib syl5 ) EFIEJIZCKELZABMZNZCOZACOBNZEFPULUHABNZCQZUMUHUICQ
      ULUOCDEHRULUIUNCUKCSUKUIUNNCUJUNUIABTUAUDUBUCABCGUEUFUG $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d y A z $.  $d x z $.
    cla4gf.1 $e |- ( y e. A -> A. x y e. A ) $.
    cla4gf.2 $e |- ( ps -> A. x ps ) $.
    cla4gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition.  Compare Theorem
       7.3 of [Quine] p. 44.  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 12-Aug-2011.) $)
    cla4gf $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
      ( vz wcel cvv wal wi elex wex cv wceq isset hblem ax-17 eqeq1 cbvex bitri
      hbeleq biimpd eximi sylbi 19.36 sylib syl ) EFKELKZACMBNZEFOULABNZCPZUMUL
      CQZERZCPZUOULJQZERZJPURJESUTUQJCCJECDJEGTUEUQJUAUSUPEUBUCUDUQUNCUQABIUFUG
      UHABCHUIUJUK $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)

    $d y A $.
    $( Existential specialization, using implicit substitition. $)
    cla4egf $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( wcel wn wal wex hbn cv wceq notbid cla4gf con2d df-ex syl6ibr ) EFJZBAK
      ZCLZKACMUBUDBUCBKCDEFGBCHNCOEPABIQRSACTUA $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    cla4gv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition.  Compare Theorem
       7.3 of [Quine] p. 44. $)
    cla4gv $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
      ( vy cv wcel ax-17 cla4gf ) ABCGDEGHDICJBCJFK $.
      $( [22-Jun-1994] $)

    $( Existential specialization, using implicit substitition. $)
    cla4egv $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( vy cv wcel ax-17 cla4egf ) ABCGDEGHDICJBCJFK $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    cla42egv.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 2 quantifiers, using implicit
       substitution. $)
    cla42egv $p |- ( ( A e. V /\ B e. W ) -> ( ps -> E. x E. y ph ) ) $=
      ( wcel wa cv wceq wex elisset anim12i eeanv sylibr biimprcd 2eximdv
      syl5com ) EGJZFHJZKZCLEMZDLFMZKZDNCNZBADNCNUDUECNZUFDNZKUHUBUIUCUJCEGODFH
      OPUEUFCDQRBUGACDUGABISTUA $.
      $( [3-Aug-1995] $)

    $( Specialization with 2 quantifiers, using implicit substitution. $)
    cla42gv $p |- ( ( A e. V /\ B e. W ) -> ( A. x A. y ph -> ps ) ) $=
      ( wcel wa wal wn wex cv wceq notbid cla42egv 2nalexn syl6ibr con4d ) EGJF
      HJKZBADLCLZUBBMZAMZDNCNUCMUEUDCDEFGHCOEPDOFPKABIQRACDSTUA $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    cla43egv.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 3 quantifiers, using implicit
       substitution. $)
    cla43egv $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
               ( ps -> E. x E. y E. z ph ) ) $=
      ( wcel w3a cv wceq wex elisset 3anim123i eeeanv biimprcd 2eximdv syl5com
      sylibr eximdv ) FIMZGJMZHKMZNZCOFPZDOGPZEOHPZNZEQZDQCQZBAEQZDQCQUIUJCQZUK
      DQZULEQZNUOUFUQUGURUHUSCFIRDGJREHKRSUJUKULCDETUDBUNUPCDBUMAEUMABLUAUEUBUC
      $.
      $( [12-May-2008] $)

    $( Specialization with 3 quantifiers, using implicit substitution. $)
    cla43gv $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
               ( A. x A. y A. z ph -> ps ) ) $=
      ( wcel w3a wal wn wex cv wceq exnal notbid cla43egv exbii bitr2i syl6ibr
      bitri con4d ) FIMGJMHKMNZBAEOZDOZCOZUHBPZAPZEQZDQZCQZUKPZUMULCDEFGHIJKCRF
      SDRGSERHSNABLUAUBUPUJPZCQUQUOURCUOUIPZDQURUNUSDAETUCUIDTUFUCUJCTUDUEUG $.
      $( [12-May-2008] $)
  $}

  ${
    $d x A $.  $d x ps $.
    cla4v.1 $e |- A e. _V $.
    cla4v.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition. $)
    cla4v $p |- ( A. x ph -> ps ) $=
      ( cvv wcel wal wi cla4gv ax-mp ) DGHACIBJEABCDGFKL $.
      $( [22-Jun-1994] $)

    $( Existential specialization, using implicit substitition.  (The proof was
       shortened by Eric Schmidt, 22-Dec-2006.) $)
    cla4ev $p |- ( ps -> E. x ph ) $=
      ( cvv wcel wex wi cla4egv ax-mp ) DGHBACIJEABCDGFKL $.
      $( [22-Dec-2006] $) $( [31-Dec-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    cla4e2v.1 $e |- A e. _V $.
    cla4e2v.2 $e |- B e. _V $.
    cla4e2v.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization, using implicit substitition. $)
    cla42ev $p |- ( ps -> E. x E. y ph ) $=
      ( cvv wcel wex wi cla42egv mp2an ) EJKFJKBADLCLMGHABCDEFJJINO $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d A z $.  $d x z $.
    rcla4t.1 $e |- ( ps -> A. x ps ) $.
    $( A closed version of ~ rcla4 .  (Contributed by Andrew Salmon,
       6-Jun-2011.) $)
    rcla4t $p |- ( A. x ( x = A -> ( ph <-> ps ) ) -> ( A e. B ->
                   ( A. x e. B ph -> ps ) ) ) $=
      ( vz cv wceq wb wi wal wcel wral df-ral wa eleq1 adantr simpr ax-17 alimi
      imbi12d ex a2i hbim cla4gft syl syl7bi com34 pm2.43d ) CHZDIZABJZKZCLZDEM
      ZACENZBKUOUPUQUPBUQUKEMZAKZCLZUOUPUPBKZACEOUOULUSVAJZKZCLUPUTVAKKUNVCCULU
      MVBULUMVBULUMPURUPABULURUPJUMUKDEQRULUMSUBUCUDUAUSVACGDEUPBCUPCTFUEGHDMCT
      UFUGUHUIUJ $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d x y A $.  $d x B $.
    rcla4.1 $e |- ( ps -> A. x ps ) $.
    rcla4.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitition.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    rcla4 $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( vy wral cv wcel wi wal df-ral ax-17 hbim wceq eleq1 imbi12d cla4gf
      pm2.43a syl5bi ) ACEICJZEKZALZCMZDEKZBACENUFUGBUEUGBLCHDEHJDKCOUGBCUGCOFP
      UCDQUDUGABUCDERGSTUAUB $.
      $( [8-Jun-2011] $) $( [19-Apr-2005] $)

    $( Restricted existential specialization, using implicit substitition. $)
    rcla4e $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( vy wcel wa cv wex wrex ax-17 hban wceq eleq1 anbi12d cla4egf anabsi5
      df-rex sylibr ) DEIZBJZCKZEIZAJZCLZACEMUCBUHUGUDCHDEHKDICNUCBCUCCNFOUEDPU
      FUCABUEDEQGRSTACEUAUB $.
      $( [26-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rcla4v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitition. $)
    rcla4v $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( ax-17 rcla4 ) ABCDEBCGFH $.
      $( [24-May-2005] $) $( [26-May-1998] $)

    $( Restricted specialization, using implicit substitition. $)
    rcla4cv $p |- ( A. x e. B ph -> ( A e. B -> ps ) ) $=
      ( wcel wral rcla4v com12 ) DEGACEHBABCDEFIJ $.
      $( [2-Feb-2006] $)

    $( Restricted specialization, using implicit substitition. $)
    rcla4va $p |- ( ( A e. B /\ A. x e. B ph ) -> ps ) $=
      ( wcel wral rcla4v imp ) DEGACEHBABCDEFIJ $.
      $( [13-Sep-2005] $)

    $( Restricted specialization, using implicit substitition.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    rcla4cva $p |- ( ( A. x e. B ph /\ A e. B ) -> ps ) $=
      ( wcel wral rcla4v impcom ) DEGACEHBABCDEFIJ $.
      $( [8-Jun-2011] $) $( [26-Jul-2006] $)

    $( Restricted existential specialization, using implicit substitition. $)
    rcla4ev $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( ax-17 rcla4e ) ABCDEBCGFH $.
      $( [26-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.  $d x ch $.
    rcla4dv.1 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Restricted specialization, using implicit substitition. $)
    rcla4dv $p |- ( ( ph /\ A e. B ) -> ( A. x e. B ps -> ch ) ) $=
      ( wcel wral wi r19.21v cv wb expcom pm5.74d rcla4v syl5bir pm2.86d impcom
      wceq ) EFHZABDFIZCJUAAUBCAUBJABJZDFIUAACJZABDFKUCUDDEFDLETZABCAUEBCMGNOPQ
      RS $.
      $( [17-Feb-2007] $)

    $( Restricted existential specialization, using implicit substitition.
       (Contributed by FL, 17-Apr-2007.) $)
    rcla4edv $p |- ( ( ph /\ A e. B ) -> ( ch -> E. x e. B ps ) ) $=
      ( wcel wrex wi wa cv wceq wb expcom pm5.74d rcla4ev r19.37av syl ex
      pm2.86d impcom ) EFHZACBDFIZJUCACUDUCACJZAUDJZUCUEKABJZDFIUFUGUEDEFDLEMZA
      BCAUHBCNGOPQABDFRSTUAUB $.
      $( [10-May-2008] $) $( [17-Apr-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.
    rcla42.1 $e |- ( ch -> A. x ch ) $.
    rcla42.2 $e |- ( ps -> A. y ps ) $.
    rcla42.3 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla42.4 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42 $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( wcel wral cv ax-17 hbral wceq rcla4 ralbidv sylan9 ) FHNAEIOZDHOCEIOZGI
      NBUCUDDFHCDEIEPINDQJRDPFSACEILUATCBEGIKMTUB $.
      $( [9-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.  $d x ch $.  $d y ps $.
    rcla42v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla42v.2 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42v $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( ax-17 rcla42 ) ABCDEFGHICDLBELJKM $.
      $( [24-May-2005] $) $( [13-Sep-1999] $)

    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42va $p |- ( ( ( A e. C /\ B e. D ) /\ A. x e. C A. y e. D ph ) ->
                  ps ) $=
      ( wcel wa wral rcla42v imp ) FHLGILMAEINDHNBABCDEFGHIJKOP $.
      $( [18-Jun-2014] $)

    $( 2-variable restricted existential specialization, using implicit
       substitution. $)
    rcla42ev $p |- ( ( A e. C /\ B e. D /\ ps ) -> E. x e. C E. y e. D ph ) $=
      ( wcel w3a wrex wa rcla4ev anim2i 3impb cv wceq rexbidv syl ) FHLZGILZBMU
      CCEINZOZAEINZDHNUCUDBUFUDBOUEUCCBEGIKPQRUGUEDFHDSFTACEIJUAPUB $.
      $( [13-Feb-2007] $) $( [16-Oct-1999] $)
  $}

  ${
    $d z ps $.  $d x ch $.  $d y th $.  $d x y z A $.  $d y z B $.  $d z C $.
    $d x R $.  $d x y S $.  $d x y z T $.
    rcla43v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla43v.2 $e |- ( y = B -> ( ch <-> th ) ) $.
    rcla43v.3 $e |- ( z = C -> ( th <-> ps ) ) $.
    $( 3-variable restricted specialization, using implicit substitition. $)
    rcla43v $p |- ( ( A e. R /\ B e. S /\ C e. T ) ->
                  ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) $=
      ( wcel wral cv wceq wi wa ralbidv rcla42v rcla4v sylan9 3impa ) HKQZILQZJ
      MQZAGMRZFLREKRZBUAUHUIUBULDGMRZUJBUKUMCGMREFHIKLESHTACGMNUCFSITCDGMOUCUDD
      BGJMPUEUFUG $.
      $( [10-May-2005] $)

    $( 3-variable restricted existentional specialization, using implicit
       substitition. $)
    rcla43ev $p |- ( ( ( A e. R /\ B e. S /\ C e. T ) /\ ps ) ->
                  E. x e. R E. y e. S E. z e. T ph ) $=
      ( wcel wrex cv wceq w3a wa simpl1 simpl2 rcla4ev rexbidv rcla42ev syl3anc
      3ad2antl3 ) HKQZILQZJMQZUABUBUJUKDGMRZAGMRZFLREKRUJUKULBUCUJUKULBUDULUJBU
      MUKDBGJMPUEUIUNUMCGMREFHIKLESHTACGMNUFFSITCDGMOUFUGUH $.
      $( [25-Jul-2012] $)
  $}

  ${
    $d x A y z $.  $d x B y z $.
    eqvinc.1 $e |- A e. _V $.
    $( A variable introduction law for class equality.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    eqvinc $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex wi isseti ax-1 eqtr jca eximi pm3.43 mp2b 19.37aiv eqtr2
      ex exlimiv impbii ) BCEZAFZBEZUCCEZGZAHUBUFAUDAHUBUDIZUBUEIZGZAHUBUFIZAHA
      BDJUDUIAUDUGUHUDUBKUDUBUEUCBCLSMNUIUJAUBUDUEONPQUFUBAUCBCRTUA $.
      $( [8-Jun-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    eqvincf.1 $e |- ( y e. A -> A. x y e. A ) $.
    eqvincf.2 $e |- ( y e. B -> A. x y e. B ) $.
    eqvincf.3 $e |- A e. _V $.
    $( A variable introduction law for class equality, using bound-variable
       hypotheses instead of distinct variable conditions. $)
    eqvincf $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex eqvinc hbeleq hban ax-17 eqeq1 anbi12d cbvex bitri ) CDH
      BIZCHZTDHZJZBKAIZCHZUDDHZJZAKBCDGLUCUGBAUAUBAABCEMABDFMNUGBOTUDHUAUEUBUFT
      UDCPTUDDPQRS $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    alexeq.1 $e |- A e. _V $.
    $( Two ways to express substitution of ` A ` for ` x ` in ` ph ` . $)
    alexeq $p |- ( A. x ( x = A -> ph ) <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq wa wex wi wal anbi1d exbidv imbi1d albidv sb56 vtoclb bicomi
      eqeq2 ) BFZCGZAHZBIZUAAJZBKZTEFZGZAHZBIUGAJZBKUCUEECDUFCGZUHUBBUJUGUAAUFC
      TSZLMUJUIUDBUJUGUAAUKNOABEPQR $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality implies equivalence with substitution. $)
    ceqex $p |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cvv wcel cv wceq wa wex wb 19.8a isset sylibr wi eqeq2 anbi1d exbidv
      bibi2d imbi12d ex wal vex alexeq ax-4 com12 syl5bir impbid vtoclg mpcom )
      CEFZBGZCHZAUMAIZBJZKZUMUMBJUKUMBLBCMNULDGZHZAURAIZBJZKZOUMUPODCEUQCHZURUM
      VAUPUQCULPZVBUTUOAVBUSUNBVBURUMAVCQRSTURAUTURAUTUSBLUAUTURAOZBUBZURAABUQD
      UCUDVEURAVDBUEUFUGUHUIUJ $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x y A $.
    ceqsexg.1 $e |- ( ps -> A. x ps ) $.
    ceqsexg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsexg $p |- ( A e. V -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( vy wb cv wceq wa wex wcel ax-17 hbe1 hbbi ceqex bibi12d biid vtoclgf )
      AAICJDKZALZCMZBICHDEHJDNCOUDBCUCCPFQUBAUDABACDRGSATUA $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d x ps $.
    ceqsexgv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsexgv $p |- ( A e. V -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( ax-17 ceqsexg ) ABCDEBCGFH $.
      $( [29-Dec-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsrexv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrexv $p |- ( A e. B -> ( E. x e. B ( x = A /\ ph ) <-> ps ) ) $=
      ( cv wceq wa wrex wcel wex df-rex an12 exbii bitr4i eleq1 anbi12d bianabs
      ceqsexgv syl5bb ) CGZDHZAIZCEJZUCUBEKZAIZIZCLZDEKZBUEUFUDIZCLUIUDCEMUHUKC
      UCUFANOPUJUIBUGUJBICDEUCUFUJABUBDEQFRTSUA $.
      $( [30-Apr-2004] $)

    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrexbv $p |- ( E. x e. B ( x = A /\ ph ) <-> ( A e. B /\ ps ) ) $=
      ( wcel cv wceq wa wrex r19.42v eleq1 adantr pm5.32ri bicomi baib ceqsrexv
      wb rexbiia pm5.32i 3bitr3i ) DEGZCHZDIZAJZJZCEKUCUFCEKZJUHUCBJUCUFCELUGUF
      CEUGUDEGZUFUIUFJUGUFUIUCUEUIUCSAUDDEMNOPQTUCUHBABCDEFRUAUB $.
      $( [14-Mar-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x C $.  $d x y D $.  $d x ps $.  $d y ch $.
    ceqsrex2v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsrex2v.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrex2v $p |- ( ( A e. C /\ B e. D ) ->
      ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ) $=
      ( wcel cv wceq wa wrex anass rexbii r19.42v ceqsrexv bitri anbi2d rexbidv
      syl5bb sylan9bb ) FHLZDMFNZEMGNZOAOZEIPZDHPZUHBOZEIPZGILCUKUGUHAOZEIPZOZD
      HPUFUMUJUPDHUJUGUNOZEIPUPUIUQEIUGUHAQRUGUNEISUARUOUMDFHUGUNULEIUGABUHJUBU
      CTUDBCEGIKTUE $.
      $( [29-Oct-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel2.1 $e |- A e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel2 $p |- ( A e. B <-> A. x ( x = A -> x e. B ) ) $=
      ( cv wceq wcel wi wal eleq1 ceqsalv bicomi ) AEZBFMCGZHAIBCGZNOABDMBCJKL
      $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An alternate definition of class membership when the class is a set. $)
    clel3g $p |- ( B e. V -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) $=
      ( wcel cv wceq wa wex eleq2 ceqsexgv bicomd ) CDEAFZCGBMEZHAIBCEZNOACDMCB
      JKL $.
      $( [13-Aug-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel3.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel3 $p |- ( A e. B <-> E. x ( x = B /\ A e. x ) ) $=
      ( cvv wcel cv wceq wa wex wb clel3g ax-mp ) CEFBCFAGZCHBNFIAJKDABCELM $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel4.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel4 $p |- ( A e. B <-> A. x ( x = B -> A e. x ) ) $=
      ( cv wceq wcel wi wal eleq2 ceqsalv bicomi ) AEZCFBMGZHAIBCGZNOACDMCBJKL
      $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d y A $.  $d x y $.  $d y ph $.
    $( Restricted quantifier version of Theorem 19.3 of [Margaris] p. 89.  We
       don't need the non-empty class condition of ~ r19.3rzv when there is an
       outer quantifier. $)
    rr19.3v $p |- ( A. x e. A A. y e. A ph <-> A. x e. A ph ) $=
      ( wral cv wceq biidd rcla4v ralimia wcel ax-1 ralrimiv ralimi impbii ) AC
      DEZBDEABDEPABDAACBFZDCFZQGAHIJAPBDAACDARDKLMNO $.
      $( [25-Oct-2012] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  We
       don't need the non-empty class condition of ~ r19.28zv when there is an
       outer quantifier. $)
    rr19.28v $p |- ( A. x e. A A. y e. A ( ph /\ ps )
                      <-> A. x e. A ( ph /\ A. y e. A ps ) ) $=
      ( wa wral cv wcel simpl ralimi wceq biidd rcla4v syl5 wi a1i jcad ralimia
      simpr r19.28av impbii ) ABFZDEGZCEGABDEGZFZCEGUDUFCECHZEIZUDAUEUDADEGUHAU
      CADEABJKAADUGEDHUGLAMNOUDUEPUHUCBDEABTKQRSUFUDCEABDEUAKUB $.
      $( [29-Oct-2012] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x ps $.
    $( Membership in a class abstraction, using implicit substitition.  (Closed
       theorem version of ~ elabg .)  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    elabgt $p |- ( ( A e. B /\ A. x ( x = A -> ( ph <-> ps ) ) ) ->
                 ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wceq wb wal wcel cab abid eleq1 syl5bbr bibi1d biimpd a2i ax-17
      wi alimi hbab1 hbel hbbi pm5.5 cla4gf imp sylan2 ) CGZDHZABIZTZCJDEKZUJDA
      CLZKZBIZTZCJZUPULUQCUJUKUPUJUKUPUJAUOBAUIUNKUJUOACMUIDUNNOPQRUAUMURUPUQUP
      CFDEFGDKCSZUOBCCFFDUNUSACFUBUCBCSUDUJUPUEUFUGUH $.
      $( [8-Jun-2011] $) $( [7-Nov-2005] $)
  $}

  ${
    $d ps y $.  $d x A y $.  $d y ph $.
    elabf.1 $e |- ( ps -> A. x ps ) $.
    elabf.2 $e |- A e. _V $.
    elabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition. $)
    elabf $p |- ( A e. { x | ph } <-> ps ) $=
      ( vy cab wcel wb cv ax-17 hbab1 hbel hbbi wceq abid eleq1 syl5bbr vtoclef
      bitr3d ) DACIZJZBKCDUDBCCHHDUCHLDJCMACHNOEPFCLZDQZAUDBAUEUCJUFUDACRUEDUCS
      TGUBUA $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab.1 $e |- A e. _V $.
    elab.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44. $)
    elab $p |- ( A e. { x | ph } <-> ps ) $=
      ( ax-17 elabf ) ABCDBCGEFH $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d y A $.  $d z ph $.  $d x z $.  $d y z $.
    elabgf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elabgf.2 $e |- ( ps -> A. x ps ) $.
    elabgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44.  This version has bound-variable
       hypotheses in place of distinct variable restrictions. $)
    elabgf $p |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) $=
      ( vz cv cab wcel wb hbab1 hbel hbbi wceq eleq1 bibi12d abid vtoclgf ) CKZ
      ACLZMZANEUDMZBNCDEFGUFBCCDJEUDGACJOPHQUCERUEUFABUCEUDSITACUAUB $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    elabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44. $)
    elabg $p |- ( A e. V -> ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wcel ax-17 elabgf ) ABCGDEGHDICJBCJFK $.
      $( [14-Apr-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab2g $p |- ( A e. V -> ( A e. B <-> ps ) ) $=
      ( wcel cab eleq2i elabg syl5bb ) DEIDACJZIDFIBENDHKABCDFGLM $.
      $( [12-Sep-2004] $) $( [13-Sep-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab2.1 $e |- A e. _V $.
    elab2.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2.3 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab2 $p |- ( A e. B <-> ps ) $=
      ( cvv wcel wb elab2g ax-mp ) DIJDEJBKFABCDEIGHLM $.
      $( [12-Sep-2004] $) $( [13-Sep-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab4g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab4g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab4g $p |- ( A e. B <-> ( A e. _V /\ ps ) ) $=
      ( wcel cvv elex elab2g biadan2 ) DEHDIHBDEJABCDEIFGKL $.
      $( [17-Oct-2012] $)
  $}

  ${
    $d y A $.
    elab3gf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elab3gf.2 $e |- ( ps -> A. x ps ) $.
    elab3gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabgf . $)
    elab3gf $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( wcel cab wb wn elabgf ibi pm2.21 impbid2 ja ) BEFJEACKZJZBLBMTBTBABCDES
      GHINOBTPQABCDEFGHINR $.
      $( [6-Sep-2011] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    elab3g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabg . $)
    elab3g $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wcel ax-17 elab3gf ) ABCGDEGHDICJBCJFK $.
      $( [14-Jun-2011] $) $( [29-Aug-2006] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab3.1 $e |- ( ps -> A e. _V ) $.
    elab3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction using implicit substitution. $)
    elab3 $p |- ( A e. { x | ph } <-> ps ) $=
      ( cvv wcel wi cab wb elab3g ax-mp ) BDGHIDACJHBKEABCDGFLM $.
      $( [10-Nov-2000] $)
  $}

  ${
    $d y A $.  $d y B $.
    elrabf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elrabf.2 $e |- ( y e. B -> A. x y e. B ) $.
    elrabf.3 $e |- ( ps -> A. x ps ) $.
    elrabf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution.  This version has bound-variable hypotheses in place of
       distinct variable restrictions. $)
    elrabf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( crab wcel cvv wa elex adantr cv cab df-rab eleq2i hbel hban wceq elabgf
      eleq1 anbi12d syl5bb pm5.21nii ) EACFKZLZEMLZEFLZBNZEUIOULUKBEFOPUJECQZFL
      ZANZCRZLUKUMUIUQEACFSTUPUMCDEMGULBCCDDEFGHUAIUBUNEUCUOULABUNEFUEJUFUDUGUH
      $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution. $)
    elrab $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( vy cv wcel ax-17 elrabf ) ABCGDEGHZDICJLEICJBCJFK $.
      $( [21-May-1999] $)

    $( Membership in a restricted class abstraction, using implicit
       substitution. $)
    elrab3 $p |- ( A e. B -> ( A e. { x e. B | ph } <-> ps ) ) $=
      ( crab wcel elrab baib ) DACEGHDEHBABCDEFIJ $.
      $( [5-Oct-2006] $)
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elrab2.2 $e |- C = { x e. B | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elrab2 $p |- ( A e. C <-> ( A e. B /\ ps ) ) $=
      ( wcel crab wa eleq2i elrab bitri ) DFIDACEJZIDEIBKFODHLABCDEGMN $.
      $( [2-Nov-2006] $)
  $}

  ${
    $d x y $.  $d ps y $.
    ralab.1 $e |- ( y = x -> ( ph <-> ps ) ) $.
    $( Universal quantification over a class abstraction.  (Contributed by Jeff
       Madsen, 10-Jun-2010.) $)
    ralab $p |- ( A. x e. { y | ph } ch <-> A. x ( ps -> ch ) ) $=
      ( cab wral cv wcel wi wal df-ral vex elab imbi1i albii bitri ) CDAEGZHDIZ
      SJZCKZDLBCKZDLCDSMUBUCDUABCABETDNFOPQR $.
      $( [20-Oct-2011] $) $( [10-Jun-2010] $)

    $d A x y $.  $d ph x $.
    $( Universal quantification over a restricted class abstraction.
       (Contributed by Jeff Madsen, 10-Jun-2010.) $)
    ralrab $p |- ( A. x e. { y e. A | ph } ch <-> A. x e. A ( ps -> ch ) ) $=
      ( cv wcel wa cab wral wi wal crab wceq eleq1 anbi12d ralab df-rab 3bitr4i
      raleqi df-ral impexp albii bitr4i ) CDEHZFIZAJZEKZLDHZFIZBJZCMZDNZCDAEFOZ
      LBCMZDFLZUIUMCDEUGUKPUHULABUGUKFQGRSCDUPUJAEFTUBURULUQMZDNUOUQDFUCUNUSDUL
      BCUDUEUFUA $.
      $( [20-Oct-2011] $) $( [10-Jun-2010] $)
  $}

  ${
    $d ps x $.  $d A x $.  $d x y $.
    rexab.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Existential quantification over a class abstraction.  (Contributed by
       Mario Carneiro, 23-Jan-2014.) $)
    rexab $p |- ( E. y e. { x | ph } ch <-> E. y ( ps /\ ch ) ) $=
      ( cab wrex cv wcel wa wex df-rex vex elab anbi1i exbii bitri ) CEADGZHEIZ
      SJZCKZELBCKZELCESMUBUCEUABCABDTENFOPQR $.
      $( [23-Jan-2014] $)
    $( Existential quantification over a class abstraction.  (Contributed by
       Jeff Madsen, 17-Jun-2011.) $)
    rexrab $p |- ( E. y e. { x e. A | ph } ch <-> E. y e. A ( ps /\ ch ) ) $=
      ( wa crab cv wcel elrab anbi1i anass bitri rexbii2 ) CBCHZEADFIZFEJZRKZCH
      SFKZBHZCHUAQHTUBCABDSFGLMUABCNOP $.
      $( [17-Jun-2011] $)
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    cbvab.1 $e |- ( ph -> A. y ph ) $.
    cbvab.2 $e |- ( ps -> A. x ps ) $.
    cbvab.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by Andrew Salmon, 11-Jul-2011.) $)
    cbvab $p |- { x | ph } = { y | ps } $=
      ( vz cab cv wsbc wcel hbsb wceq wb equcoms bicomd sbie sbequ df-clab
      syl5bbr 3bitr4i eqriv ) HACIZBDIZACHJZKBDUFKZUFUDLUFUELAUGCHBDHCFMABDCJZK
      UHUFNUGBADCEDJUHNABABOCDGPQRBCHDSUARAHCTBHDTUBUC $.
      $( [11-Jul-2011] $) $( [10-Jul-2011] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution. $)
    cbvabv $p |- { x | ph } = { y | ps } $=
      ( ax-17 cbvab ) ABCDADFBCFEG $.
      $( [11-Jul-2011] $) $( [26-May-1999] $)
  $}

  ${
    $d A w z $.  $d y w $.  $d x w $.  $d ph w $.  $d ps w $.
    cbvrab.1 $e |- ( z e. A -> A. x z e. A ) $.
    cbvrab.2 $e |- ( z e. A -> A. y z e. A ) $.
    cbvrab.3 $e |- ( ph -> A. y ph ) $.
    cbvrab.4 $e |- ( ps -> A. x ps ) $.
    cbvrab.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution.  This version has bound-variable hypotheses
       in place of distinct variable conditions.  (Contributed by Andrew
       Salmon, 11-Jul-2011.) $)
    cbvrab $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vw cv wcel wa cab crab wsbc ax-17 hblem hbs1 hban eleq1 sbequ12 anbi12d
      wceq cbvab hbsb sbequ sbie syl6bb eqtri df-rab 3eqtr4i ) CMZFNZAOZCPZDMZF
      NZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUFUPV
      DAVEUOVCFUCACLUDUEUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUFZVDUTVEBVCUSFUCVG
      VEACUSRBALDCUIABCDJKUJUKUEUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [26-Sep-2003] $)
  $}

  ${
    $d x y z A $.  $d y ph $.  $d x ps $.
    cbvrabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution. $)
    cbvrabv $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vz cv wcel ax-17 cbvrab ) ABCDGEGHEIZCJLDJADJBCJFK $.
      $( [11-Jul-2011] $) $( [26-May-1999] $)
  $}

  ${
    $d w y A $.  $d w x z $.  $d x y $.  $d A z $.
    $( Identity used to create closed-form versions of bound-variable
       hypothesis builders for class expressions.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    abidhb $p |- ( A. y ( y e. A -> A. x y e. A ) ->
                 { z | A. x z e. A } = A ) $=
      ( vw cv wcel wal wi cab wceq eleq1 albidv cbvabv hba1 impbid2 abbid abid2
      ax-4 3eqtr3g syl5eq ) BFZDGZUCAHZIZBHZCFZDGZAHZCJEFZDGZAHZEJZDUIULCEUGUJK
      UHUKAUGUJDLMNUFUDBJUCBJUMDUFUDUCBUEBOUFUDUCUCASUEBSPQUDULBEUBUJKUCUKAUBUJ
      DLMNBDRTUA $.
      $( [11-Jul-2011] $) $( [10-Nov-2005] $)
  $}

  ${
    $d y w A $.  $d z w B $.  $d y ph $.  $d z ph $.  $d w x y $.  $d x z $.
    hbeqd.1 $e |- ( ph -> A. x ph ) $.
    hbeqd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbeqd.3 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbeq . $)
    hbeqd $p |- ( ph -> ( A = B -> A. x A = B ) ) $=
      ( vw cv wcel wal cab wceq wi hba1 hbab alrimiv abidhb a1i eqeq12d 3imtr3d
      hbeq syl albid ) AJKZELZBMZJNZUGFLZBMZJNZOZUNBMZEFOZUPBMUNUOPABCDUJUMUIBJ
      CUHBQRULBJDUKBQRUDUAAUJEUMFACKELZUQBMPZCMUJEOAURCHSBCJETUEADKFLZUSBMPZDMU
      MFOAUTDISBDJFTUEUBZAUNUPBGVAUFUC $.
      $( [17-Feb-2013] $) $( [6-Dec-2005] $)
  $}

  ${
    $d y w A $.  $d z w B $.  $d y ph $.  $d z ph $.  $d w x y $.  $d x z $.
    hbned.1 $e |- ( ph -> A. x ph ) $.
    hbned.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbned.3 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbne . $)
    hbned $p |- ( ph -> ( A =/= B -> A. x A =/= B ) ) $=
      ( wceq wn wal wne hbeqd hbnd df-ne albii 3imtr4g ) AEFJZKZTBLEFMZUABLASBG
      ABCDEFGHINOEFPZUATBUBQR $.
      $( [18-Mar-2013] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y ph $.  $d x y z $.
    hbeld.1 $e |- ( ph -> A. x ph ) $.
    hbeld.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbeld.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbel . $)
    hbeld $p |- ( ph -> ( A e. B -> A. x A e. B ) ) $=
      ( vz cv wcel wal cab wi hba1 hbab wceq alrimiv abidhb syl eleq12d 3imtr3d
      hbel a1i albid ) AIJZDKZBLZIMZUFEKZBLZIMZKZUMBLZDEKZUOBLUMUNNABCCUIULUHBI
      CUGBOPUKBICUJBOPUCUDAUIDULEACJZDKZUQBLNZCLUIDQAURCGRBCIDSTAUPEKZUSBLNZCLU
      LEQAUTCHRBCIESTUAZAUMUOBFVAUEUB $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y z $.  $d y A $.  $d y z ph $.
    hbeleqd.1 $e |- ( ph -> A. x ph ) $.
    hbeleqd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbeleq . $)
    hbeleqd $p |- ( ph -> ( y = A -> A. x y = A ) ) $=
      ( vz cv wcel a17d hbeqd ) ABGCCHZDEAGHLIBJFK $.
      $( [23-Feb-2013] $)
  $}

  ${
    $d y A $.  $d x z $.  $d x y $.  $d z A $.
    dedhb.1 $e |- ( A = { z | A. x z e. A } -> ( ph <-> ps ) ) $.
    dedhb.2 $e |- ps $.
    $( A deduction theorem for converting the inference
       ` |- ( y e. A -> A. x y e. A ) ` => ` |- ph ` into a closed theorem.
       Use ~ hba1 and ~ hbab to eliminate the hypothesis of the substitution
       instance ` ps ` of the inference.  For converting the inference form
       into a deduction form, ~ abidhb is useful. $)
    dedhb $p |- ( A. y ( y e. A -> A. x y e. A ) -> ph ) $=
      ( cv wcel wal wi cab wceq wb abidhb eqcomd syl mpbiri ) DIFJZTCKLDKZABHUA
      FEIFJCKEMZNABOUAUBFCDEFPQGRS $.
      $( [11-Jul-2011] $) $( [8-Dec-2006] $)
  $}

  ${
    $d y z A $.  $d x z $.  $d y z $.
    $( Closed theorem form of ~ vtoclgf . $)
    vtoclgft $p |- ( ( ( A. x A. y ( y e. A -> A. x y e. A )
                     /\ A. x ( ps -> A. x ps ) )
                  /\ ( A. x ( x = A -> ( ph <-> ps ) )
                     /\ A. x ph ) /\ A e. V ) -> ps ) $=
      ( vz wcel cv wal wi wa wceq wb cvv elex w3a wex elisset mpbid hba1 hblemd
      3ad2ant3 hba2 ax-4 19.21bi hbeleqd a1i cbvexd ad2antrr 3adant3 bi1 imim2i
      eqeq1 com23 imp alanimi 3ad2ant2 simp1r 19.23t syl mpd syl3an3 ) EFHDIEHZ
      VDCJKZDJZCJZBBCJKCJZLZCIZEMZABNZKZCJACJLZEOHZBEFPVIVNVOQZVKCRZBVPGIZEMZGR
      ZVQVOVIVTVNGEOSUCVIVNVTVQNZVOVGWAVHVNVGVSVKGCVFCUAZVGCGEWBVGCDGEWBVEDCUDV
      GVEDVFCUEUFUBUGVRVJMVSVKNKVGVRVJEUNUHUIUJUKTVPVKBKZCJZVQBKZVNVIWDVOVMAWCC
      VMAWCVMVKABVLABKVKABULUMUOUPUQURVPVHWDWENVGVHVNVOUSVKBCUTVATVBVC $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d y ph $.  $d x y ps $.  $d x y A $.
    eqeu.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A condition which implies existential uniqueness.  (Contributed by Jeff
       Hankins, 8-Sep-2009.) $)
    eqeu $p |- ( ( A e. B /\ ps /\ A. x ( ph -> x = A ) ) -> E! x ph ) $=
      ( vy wcel cv wceq wi wal w3a wex weu cla4egv imp 3adant3 eqeq2 imbi2d eu3
      albidv 3adant2 ax-17 sylanbrc ) DEHZBACIZDJZKZCLZMACNZAUGGIZJZKZCLZGNZACO
      UFBUKUJUFBUKABCDEFPQRUFUJUPBUFUJUPUOUJGDEULDJZUNUICUQUMUHAULDUGSTUBPQUCAC
      GAGUDUAUE $.
      $( [8-Sep-2009] $)
  $}

  ${
    $d x y A $.
    $( Equality has existential uniqueness. $)
    eueq $p |- ( A e. _V <-> E! x x = A ) $=
      ( vy cv wceq wex wa wi wal cvv wcel weu eqtr3 biantru isset eqeq1 3bitr4i
      gen2 eu4 ) ADZBEZAFZUBUACDZBEZGTUCEHZCIAIZGBJKUAALUFUBUEACTUCBMRNABOUAUDA
      CTUCBPSQ $.
      $( [25-Nov-1994] $)
  $}

  ${
    $d x A $.
    eueq1.1 $e |- A e. _V $.
    $( Equality has existential uniqueness. $)
    eueq1 $p |- E! x x = A $=
      ( cvv wcel cv wceq weu eueq mpbi ) BDEAFBGAHCABIJ $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    eueq2.1 $e |- A e. _V $.
    eueq2.2 $e |- B e. _V $.
    $( Equality has existential uniqueness (split into 2 cases). $)
    eueq2 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) $=
      ( cv wceq wa wn weu eueq1 euanv biimpri mpan2 euorv bianfd eubidv mpbid
      wo notnot1 syl2anc orcom orbi2d syl5bb mpdan id orbi1d pm2.61i ) AABGZCHZ
      IZAJZUJDHZIZTZBKZAUMULTZBKZUQAUMJULBKZUSAUAZAUKBKZUTBCELUTAVBIAUKBMNOUMUL
      BPUBAURUPBURULUMTAUPUMULUCAUMUOULAUMUNVAQUDUERSUMAUOTZBKZUQUMUOBKZVDUMUNB
      KZVEBDFLVEUMVFIUMUNBMNOAUOBPUFUMVCUPBUMAULUOUMAUKUMUGQUHRSUI $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d x ps $.  $d x A $.  $d x B $.  $d x C $.
    eueq3.1 $e |- A e. _V $.
    eueq3.2 $e |- B e. _V $.
    eueq3.3 $e |- C e. _V $.
    eueq3.4 $e |- -. ( ph /\ ps ) $.
    $( Equality has existential uniqueness (split into 3 cases). $)
    eueq3 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( wceq wa wo wn weu con2i eueq1 euanv biimpri bianfd cv pm2.45 imnan jaoi
      w3o wi mpbir mpan2 euorv syl2anc notnot1 orcs orbi12d orbi2d orcom 3orass
      3bitr4g eubidv mpbid pm2.46 olcs orbi1d df-3or syl6bbr mpdan syl6bb orass
      ecase3 ) ABACUAZDKZLZABMZNZVIEKZLZBVIFKZLZUEZCOZAVMBMZVKMZCOZVSAVTNVKCOZW
      BVTAVMANBABUBZABABNZUFABLNJABUCUGZPZUDPAVJCOZWCCDGQWCAWHLAVJCRSUHVTVKCUIU
      JAWAVRCAVKVTMVKVOVQMZMZWAVRAVTWIVKAVMVOBVQAVMVNABVMNZVLUKZULTABVPWFTUMUNV
      TVKUOVKVOVQUPZUQURUSBAVMMZVQMZCOZVSBWNNVQCOZWPWNBAWEVMWFABUTZUDPBVPCOZWQC
      FIQWQBWSLBVPCRSUHWNVQCUIUJBWOVRCBWOVKVOMZVQMVRBWNWTVQBAVKVMVOBAVJWGTBVMVN
      ABWKWLVATUMVBVKVOVQVCVDURUSVMVLVOMZCOZVSVMVOCOZXBVMVNCOZXCCEHQXCVMXDLVMVN
      CRSUHVLVOCUIVEVMXAVRCVMABVOMZMWJXAVRVMAVKXEWIVMAVJWDTVMXEVQVOMWIVMBVQVOVM
      BVPWRTVBVQVOUOVFUMABVOVGWMUQURUSVH $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x A $.
    $( There is at most one set equal to a class. $)
    moeq $p |- E* x x = A $=
      ( cv wceq wmo wex weu wi cvv wcel isset eueq bitr3i biimpi df-mo mpbir )
      ACBDZAEQAFZQAGZHRSRBIJSABKABLMNQAOP $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d x y A $.  $d x y B $.  $d x y C $.
    moeq3.1 $e |- B e. _V $.
    moeq3.2 $e |- C e. _V $.
    moeq3.3 $e |- -. ( ph /\ ps ) $.
    $( "At most one" property of equality (split into 3 cases).  (The first 2
       hypotheses could be eliminated with longer proof.) $)
    moeq3 $p |- E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( vy cvv wcel cv wceq wa wo wn w3o weu biidd eqeq2 anbi2d 3orbi123d eueq3
      wmo eubidv vex vtoclg eumo syl wi eleq1 mpbii pm2.21 anim2d orim1d 3orass
      wal syl5 3imtr4g alrimiv euimmo mpi pm2.61i ) DKLZACMZDNZOZABPQVFENOZBVFF
      NOZRZCUEZVEVKCSZVLAVFJMZNZOZVIVJRZCSZVMJDKVNDNZVQVKCVSVPVHVIVIVJVJVSVOVGA
      VNDVFUAUBVSVITVSVJTUCUFABCVNEFJUGGHIUDZUHVKCUIUJVEQZVRVLVTWAVKVQUKZCURVRV
      LUKWAWBCWAVHVIVJPZPVPWCPVKVQWAVHVPWCWAVGVOAVGVEWAVOVGVFKLVECUGVFDKULUMVEV
      OUNUSUOUPVHVIVJUQVPVIVJUQUTVAVKVQCVBUJVCVD $.
      $( [23-Apr-1995] $)
  $}

  ${
    $d x y A $.
    mosub.1 $e |- E* x ph $.
    $( "At most one" remains true after substitution. $)
    mosub $p |- E* x E. y ( y = A /\ ph ) $=
      ( cv wceq wmo wal wa wex moeq ax-gen moexexv mp2an ) CFDGZCHABHZCIPAJCKBH
      CDLQCEMPACBNO $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Theorem for inferring "at most one." $)
    mo2icl $p |- ( A. x ( ph -> x = A ) -> E* x ph ) $=
      ( vy cvv wcel cv wceq wi wal wmo eqeq2 imbi2d albidv imbi1d wex 19.8a mo2
      ax-17 wn sylibr vtoclg eleq1 mpbii imim2i con3rr3 alimdv alnex exmo sylbi
      vex ori syl6 pm2.61i ) CEFZABGZCHZIZBJZABKZIZAUPDGZHZIZBJZUTIVADCEVBCHZVE
      USUTVFVDURBVFVCUQAVBCUPLMNOVEVEDPUTVEDQABDADSRUAUBUOTZUSATZBJZUTVGURVHBUR
      AUOUQUOAUQUPEFUOBUKUPCEUCUDUEUFUGVIABPZTUTABUHVJUTABUIULUJUMUN $.
      $( [17-Oct-1996] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x y ps $.
    moi2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Consequence of "at most one." $)
    moi2 $p |- ( ( ( A e. B /\ E* x ph ) /\ ( ph /\ ps ) ) -> x = A ) $=
      ( vy wcel wmo wa cv wceq wsbc wi wal hbs1 sbequ12 mo4f ax-17 sbhypf eqeq2
      anbi2d imbi12d cla4gv a4sd syl5bi imp31 ) DEHZACIZABJZCKZDLZUIAACGKZMZJZU
      KUMLZNZGOZCOUHUJULNZAUNCGACGPACGQRUHURUSCUQUSGDEUMDLZUOUJUPULUTUNBAABCGDB
      CSFTUBUMDUKUAUCUDUEUFUG $.
      $( [29-Jun-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.  $d y ph $.  $d x y ps $.
    moi.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    moi.2 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( MAY BE REVISED - is there a way to shorten w/ moi2? $)
    $( Equality implied by "at most one." $)
    moi $p |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ( ps /\ ch ) ) ->
              A = B ) $=
      ( vy wcel wa wmo wceq cv wi wal ax-17 imbi12d wsbc hbs1 sbequ12 mo4f hban
      hbim anbi1d eqeq1 albidv cla4gf sbhypf anbi2d eqeq2 cla4gv sylan9 syl5bi
      hbal 3imp ) EGLZFHLZMZADNZBCMZEFOZVBAADKPZUAZMZDPZVEOZQZKRZDRZVAVCVDQZAVF
      DKADKUBZADKUCUDUSVLBVFMZEVEOZQZKRZUTVMVKVRDKEGVEELDSVQDKVOVPDBVFDBDSVNUEV
      PDSUFUQVHEOZVJVQKVSVGVOVIVPVSABVFIUGVHEVEUHTUIUJVQVMKFHVEFOZVOVCVPVDVTVFC
      BACDKFCDSJUKULVEFEUMTUNUOUPUR $.
      $( [18-Feb-2006] $)
  $}

  ${
    $d B x y $.  $d A x y $.  $d ph y $.  $d ps x y $.
    morex.1 $e |- B e. _V $.
    morex.2 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Derive membership from uniqueness.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    morex $p |- ( ( E. x e. A ph /\ E* x ph ) -> ( ps -> B e. A ) ) $=
      ( wmo wrex wcel wi cv wa wex df-rex exancom bitri wal hbmo1 hbe1 hban syl
      mopick alrimi wceq eleq1 imbi12d cla4v sylan2b ancoms ) ACHZACDIZBEDJZKZU
      LUKACLZDJZMZCNZUNULUPAMCNURACDOUPACPQUKURMZAUPKZCRUNUSUTCUKURCACSUQCTUAAU
      PCUCUDUTUNCEFUOEUEABUPUMGUOEDUFUGUHUBUIUJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x ph $.  $d x A $.
    euxfr2.1 $e |- A e. _V $.
    euxfr2.2 $e |- E* y x = A $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    euxfr2 $p |- ( E! x E. y ( x = A /\ ph ) <-> E! y ph ) $=
      ( cv wceq wa wex weu wmo wi 2euswap moani ancom mobii mpbi mpg moeq biidd
      impbii ceqsexv eubii bitri ) BGDHZAIZCJBKZUGBJZCKZACKUHUJUGCLZUHUJMBUGBCN
      AUFIZCLUKUFACFOULUGCAUFPZQRSUGBLZUJUHMCUGCBNULBLUNUFABBDTOULUGBUMQRSUBUIA
      CAABDEUFAUAUCUDUE $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.
    euxfr.1 $e |- A e. _V $.
    euxfr.2 $e |- E! y x = A $.
    euxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    euxfr $p |- ( E! x ph <-> E! y ps ) $=
      ( weu cv wceq wa wex euex ax-mp biantrur 19.41v pm5.32i exbii 3bitr2i
      eubii eumoi euxfr2 bitri ) ACICJEKZBLZDMZCIBDIAUGCAUEDMZALUEALZDMUGUHAUED
      IUHGUEDNOPUEADQUIUFDUEABHRSTUABCDEFUEDGUBUCUD $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d y z w ph $.  $d x z ps $.  $d y z w A $.  $d x z B $.  $d x y w $.
    euind.1 $e |- B e. _V $.
    euind.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    euind.3 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality. $)
    euind $p |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph )
                 -> E! z A. x ( ph -> z = A ) ) $=
      ( vw wa wceq wi wal wex cv exbii imim2i impexp weu cbvexv isseti biantrur
      19.41v excom bitr3i 3bitri eqeq2 bi2 an31 imbi1i 3bitr3i sylib syl 2alimi
      wb 19.23v albii 19.21v bitri eximdv syl5bi pm4.24 biimpi prth eqtr3 syl56
      imp alanimi com12 syl5 alrimivv adantl eqeq1 imbi2d albidv eu4 sylanbrc )
      ABLZFGMZNZDOCOZACPZLAEQZFMZNZCOZEPZWHAKQZFMZNZCOZLZWEWJMZNZKOEOZWHEUAWCWD
      WIWDWEGMZBLZDPZEPZWCWIWDBDPWREPZBLZDPZXAABCDIUBBXCDXBBEGHUCUDRXDWSEPZDPXA
      XEXCDWRBEUERWSDEUFUGUHWCWTWHEWCWSWGNZDOZCOZWTWHNZWBXFCDWBVTWFWRUQZNZXFWAX
      JVTFGWEUISXKVTWRWFNZNZXFXJXLVTWFWRUJSVTWRLZWFNWSALZWFNXMXFXNXOWFABWRUKULV
      TWRWFTWSAWFTUMUNUOUPXHWTWGNZCOXIXGXPCWSWGDURUSWTWGCUTVAUNVBVCVIWDWQWCWDWP
      EKWNAWONZCOZWDWOWGWLXQCAAALZWGWLLWFWKLWOAXSAVDVEAWFAWKVFWEWJFVGVHVJXRWDWO
      XRWDWONAWOCURVEVKVLVMVNWHWMEKWOWGWLCWOWFWKAWEWJFVOVPVQVRVS $.
      $( [11-Oct-2010] $)
  $}

  $( Restricted unique existence implies restricted existence. $)
  reurex $p |- ( E! x e. A ph -> E. x e. A ph ) $=
    ( cv wcel wa weu wex wreu wrex euex df-reu df-rex 3imtr4i ) BDCEAFZBGOBHABC
    IABCJOBKABCLABCMN $.
    $( [19-Aug-1999] $)

  $( Restricted uniqueness in terms of "at most one." $)
  reu5 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) ) $=
    ( cv wcel wa weu wex wmo wreu wrex eu5 df-reu df-rex anbi1i 3bitr4i ) BDCEA
    FZBGQBHZQBIZFABCJABCKZSFQBLABCMTRSABCNOP $.
    $( [23-May-1999] $)

  ${
    $d x y A $.  $d y ph $.
    $( A way to express restricted uniqueness. $)
    reu2 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( cv wcel wa weu wex wsbc wceq wi wal wreu wral ax-17 df-ral impexp albii
      3bitr4i wrex eu2 df-reu df-rex 19.21v hbs1 hban eleq1 sbequ12 sbie anbi2i
      anbi12d an4 bitri imbi1i 3bitri imbi2i bitr4i anbi12i ) BEZDFZAGZBHVBBIZV
      BVBBCEZJZGZUTVDKZLZCMZBMZGABDNABDUAZAABVDJZGZVGLZCDOZBDOZGVBBCVBCPUBABDUC
      VKVCVPVJABDUDVPVAVOLZBMVJVOBDQVIVQBVAVDDFZVNLZLZCMVAVSCMZLVIVQVAVSCUEVHVT
      CVHVAVRGZVMGZVGLWBVNLVTVFWCVGVFVBVRVLGZGWCVEWDVBVBWDBCVRVLBVRBPABCUFUGVGV
      AVRAVLUTVDDUHABCUIULUJUKVAAVRVLUMUNUOWBVMVGRVAVRVNRUPSVOWAVAVNCDQUQTSURUS
      T $.
      $( [22-Nov-1994] $)

    $( A way to express restricted uniqueness. $)
    reu6 $p |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) $=
      ( wreu cv wcel wa wceq wb wal wex wi bi1 bi2 adantr impbid ex imim2i imp
      weu wral wrex df-reu df-eu 19.28v wsbc eleq1 sbequ12 anbi12d bibi12d eqid
      eqeq1 tbt simpl sylbir syl6bi a4imv expdimp simpr syl6 a4s jca a5i adantl
      imp3a eleq1a com23 adantll jcai alimi impbii df-ral anbi2i 3bitr4i df-rex
      exbii bitr4i 3bitri ) ABDEBFZDGZAHZBUAWBVTCFZIZJZBKZCLZAWDJZBDUBZCDUCZABD
      UDWBBCUEWGWCDGZWIHZCLWJWFWLCWKWAWHMZHZBKZWKWMBKZHWFWLWKWMBUFWFWOWEWNBWFWK
      WMWEWKBCWDWEWKABWCUGZHZWCWCIZJZWKWDWBWRWDWSWDWAWKAWQVTWCDUHABCUIUJVTWCWCU
      MUKWTWRWKWSWRWCULUNWKWQUOUPUQURWEWMBWEWAWHWEWAHAWDWEWAAWDWBWDNUSWEWDAMZWA
      WEWDWBAWBWDOWAAUTVAPQRVBVCVDWNWEBWNWBWDWMWBWDMWKWMWAAWDWHAWDMWAAWDNSVFVEW
      NWDWBWNWDHWAAWNWDWAWKWDWAMWMWCDVTVGPTWMWDWAAMZWKWMWDXBWMWAWDAWHXAWAAWDOSV
      HTVIVJRQVKVLWIWPWKWHBDVMVNVOVQWICDVPVRVS $.
      $( [20-Oct-2006] $)

    $( A way to express restricted uniqueness. $)
    reu3 $p |- ( E! x e. A ph <->
               ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) $=
      ( wreu wrex cv wceq wi wral wa reurex wb reu6 bi1 ralimi reximi sylbi wex
      wal jca rexex anim2i wcel weu ax-17 eu3 df-reu df-rex df-ral impexp albii
      bitr4i exbii anbi12i 3bitr4i sylibr impbii ) ABDEZABDFZABGZCGHZIZBDJZCDFZ
      KZUSUTVEABDLUSAVBMZBDJZCDFVEABCDNVHVDCDVGVCBDAVBOPQRUAVFUTVDCSZKZUSVEVIUT
      VDCDUBUCVADUDZAKZBUEVLBSZVLVBIZBTZCSZKUSVJVLBCVLCUFUGABDUHUTVMVIVPABDUIVD
      VOCVDVKVCIZBTVOVCBDUJVNVQBVKAVBUKULUMUNUOUPUQUR $.
      $( [24-Oct-2006] $)
  $}

  ${
    $d x y z A $.  $d y z ph $.  $d x z ps $.
    rmo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Restricted "at most one" using implicit substitution. $)
    rmo4 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) $=
      ( cv wcel wa wceq wi wal wral wmo an4 ancom anbi1i impexp albii df-ral
      bitri imbi1i 3bitri r19.21v 3bitr2i eleq1 anbi12d mo4 3bitr4i ) CGZEHZAIZ
      DGZEHZBIZIZUJUMJZKZDLZCLUKABIZUQKZDEMZKZCLULCNVBCEMUSVCCUSUNUKVAKZKZDLVDD
      EMVCURVEDURUNUKIZUTIZUQKVFVAKVEUPVGUQUPUKUNIZUTIVGUKAUNBOVHVFUTUKUNPQUAUB
      VFUTUQRUNUKVARUCSVDDETUKVADEUDUESULUOCDUQUKUNABUJUMEUFFUGUHVBCETUI $.
      $( [24-Oct-2006] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu4 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( wreu wrex cv wcel wa wmo wceq wi wral reu5 rmo4 anbi2i bitri ) ACEGACEH
      ZCIZEJAKCLZKTABKUADIMNDEOCEOZKACEPUBUCTABCDEFQRS $.
      $( [23-Nov-1994] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu7 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             E. x e. A A. y e. A ( ps -> x = y ) ) ) $=
      ( vz wreu wrex cv wceq wi wral wa reu3 eqeq1 eqcom syl6bb imbi12d bitri
      cbvralv rexbii imbi2d ralbidv cbvrexv anbi2i ) ACEHACEIZACJZGJZKZLZCEMZGE
      IZNUGBUHDJZKZLZDEMZCEIZNACGEOUMURUGUMBUIUNKZLZDEMZGEIURULVAGEUKUTCDEUOABU
      JUSFUOUJUNUIKUSUHUNUIPUNUIQRSUAUBVAUQGCEUIUHKZUTUPDEVBUSUOBUIUHUNPUCUDUET
      UFT $.
      $( [24-Oct-2006] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu8 $p |- ( E! x e. A ph <-> E. x e. A ( ph /\
                A. y e. A ( ps -> x = y ) ) ) $=
      ( wreu cv wceq wb wral wrex wi wa cbvreuv reu6 wcel ralbii wal syl5bb a1i
      dfbi2 ancom eqcom imbi2i biimt df-ral bi2.04 albii imbi12d bicomd ceqsalv
      vex eleq1 eqcoms 3bitrri syl6bb anbi12d r19.26 syl6rbbr rexbiia 3bitri )
      ACEGBDEGBDHZCHZIZJZDEKZCELABVDVCIZMZDEKZNZCELABCDEFOBDCEPVGVKCEVGBVEMZVEB
      MZNZDEKZVDEQZVKVFVNDEBVEUBRVPVKVLDEKZVMDEKZNZVOVKVJANVPVSAVJUCVPVJVQAVRVJ
      VQJVPVIVLDEVHVEBVDVCUDUERUAVPAVPAMZVRVPAUFVRVCEQZVMMZDSVEWABMZMZDSVTVMDEU
      GWBWDDWAVEBUHUIWCVTDVDCUMWCVTJVDVCVHVTWCVHVPWAABVDVCEUNFUJUKUOULUPUQURTVL
      VMDEUSUTTVAVB $.
      $( [24-Oct-2006] $)
  $}

  ${
    $d x y A $.
    $( A condition allowing swap of uniqueness and existential quantifiers. $)
    2reuswap $p |- ( A. x e. A E* y ( y e. A /\ ph ) ->
                   ( E! x e. A E. y e. A ph -> E! y e. A E. x e. A ph ) ) $=
      ( cv wcel wa wmo wral wal wrex wreu wi wex weu df-reu r19.42v eubii bitri
      df-rex df-ral moanimv albii bitr4i 2euswap exbii 3bitr3i bitr3i 3imtr4g
      an12 sylbi ) CEDFZAGZCHZBDIZBEDFZUMGZCHZBJZACDKZBDLZABDKZCDLZMUOUPUNMZBJU
      SUNBDUAURVDBUPUMCUBUCUDUSUQCNZBOZUQBNZCOZVAVCUQBCUEVAUPUTGZBOVFUTBDPVIVEB
      UPAGZCDKULVJGZCNVIVEVJCDTUPACDQVKUQCULUPAUJUFUGRSVCULVBGZCOVHVBCDPVLVGCVL
      UMBDKVGULABDQUMBDTUHRSUIUK $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d w y z A $.  $d x z B $.  $d w x y z C $.  $d w y z ph $.  $d x z ps $.
    reuind.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    reuind.2 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality. $)
    reuind $p |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) )
         -> A = B ) /\ E. x ( A e. C /\ ph ) )
                 -> E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) $=
      ( vw wcel wa wceq wi wal wex cv wrex exbii wral wreu eleq1d cbvexv risset
      anbi12d anbi1i rexcom4 r19.41v bitr2i 3bitri eqeq2 imim2i bi2 an31 imbi1i
      wb impexp 3bitr3i sylib syl 2alimi 19.23v an12 eleq1 adantr bitr4i 19.42v
      pm5.32ri bitri albii 19.21v exp3a reximdvai syl5bi imp pm4.24 biimpi prth
      eqtr3 syl56 alanimi com12 syl5 a1d ralrimivv adantl eqeq1 imbi2d sylanbrc
      albidv reu4 ) FHLZAMZGHLZBMZMZFGNZOZDPCPZWNCQZMWNERZFNZOZCPZEHSZXEWNKRZFN
      ZOZCPZMZXBXGNZOZKHUAEHUAZXEEHUBWTXAXFXAXBGNZBMZDQZEHSZWTXFXAWPDQXOEHSZBMZ
      DQZXRWNWPCDCRDRNZWMWOABYBFGHJUCIUFUDWPXTDWOXSBEGHUEUGTXRXPEHSZDQYAXPEDHUH
      YCXTDXOBEHUITUJUKWTXQXEEHWTXBHLZXQXEWTXOWPMZXDOZDPZCPZYDXQMZXEOZWSYFCDWSW
      QXCXOUQZOZYFWRYKWQFGXBULUMYLWQXOXCOZOZYFYKYMWQXCXOUNUMWQXOMZXCOYEWNMZXCOY
      NYFYOYPXCWNWPXOUOUPWQXOXCURYEWNXCURUSUTVAVBYHYIXDOZCPYJYGYQCYGYEDQZXDOYQY
      EXDDVCYRYIXDYRYDXPMZDQYIYEYSDYEWOXPMYSXOWOBVDXPYDWOXOYDWOUQBXBGHVEVFVIVGT
      YDXPDVHVJUPVJVKYIXDCVLVJUTVMVNVOVPXAXNWTXAXMEKHHXAXMYDXGHLMXKWNXLOZCPZXAX
      LXDXIYTCWNWNWNMZXDXIMXCXHMXLWNUUBWNVQVRWNXCWNXHVSXBXGFVTWAWBUUAXAXLUUAXAX
      LOWNXLCVCVRWCWDWEWFWGXEXJEKHXLXDXICXLXCXHWNXBXGFWHWIWKWLWJ $.
      $( [16-Oct-2010] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Russell's Paradox
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( Russell's Paradox.  Proposition 4.14 of [TakeutiZaring] p. 14.

       In the late 1800s, Frege's Axiom of (unrestricted) Comprehension,
       expressed in our notation as ` A e. _V ` , asserted that any collection
       of sets ` A ` is a set i.e. belongs to the universe ` _V ` of all sets.
       In particular, by substituting ` { x | x e/ x } ` (the "Russell class")
       for ` A ` , it asserted ` { x | x e/ x } e. _V ` , meaning that the
       "collection of all sets which are not members of themselves" is a set.
       However, here we prove ` { x | x e/ x } e/ _V ` .  This contradiction
       was discovered by Russell in 1901 (published in 1903), invalidating the
       Comprehension Axiom and leading to the collapse of Frege's system.

       In 1908, Zermelo rectified this fatal flaw by replacing Comprehension
       with a weaker Subset (or Separation) Axiom ~ ssex asserting that ` A `
       is a set only when it is smaller than some other set ` B ` .  However,
       Zermelo was then faced with a "chicken and egg" problem of how to show
       ` B ` is a set, leading him to introduce the set-building axioms of Null
       Set ~ 0ex , Pairing ~ prex , Union ~ uniex , Power Set ~ pwex , and
       Infinity ~ omex to give him some starting sets to work with (all of
       which, before Russell's Paradox, were immediate consequences of Frege's
       Comprehension).  In 1922 Fraenkel strengthened the Subset Axiom with our
       present Replacement Axiom ~ funimaex (whose modern formalization is due
       to Skolem, also in 1922).  Thus in a very real sense Russell's Paradox
       spawned the invention of ZF set theory and completely revised the
       foundations of mathematics!

       Another mainstream formalization of set theory, devised by von Neumann,
       Bernays, and Goedel, uses class variables rather than set variables as
       its primitives.  The axiom system NBG in [Mendelson] p. 225 is suitable
       for a Metamath encoding.  NBG is a conservative extension of ZF in that
       it proves exactly the same theorems as ZF that are expressible in the
       language of ZF. An advantage of NBG is that it is finitely axiomatizable
       - the Axiom of Replacement can be broken down into a finite set of
       formulas that eliminate its wff metavariable.  Finite axiomatizability
       is required by some proof languages (although not by Metamath).  There
       is a stronger version of NBG called Morse-Kelley (axiom system MK in
       [Mendelson] p. 287).

       Russell himself continued in a different direction, avoiding the paradox
       with his "theory of types."  Quine extended Russell's ideas to formulate
       the very strong New Foundations set theory (axiom system NF of [Quine]
       p. 331).  In NF, the collection of all sets is a set, contradicting ZF
       and NBG set theories, and it has other bizarre consequences: when sets
       become too huge (beyond the size of those used in standard mathematics),
       the Axiom of Choice ~ ac4 and Cantor's Theorem ~ canth are provably
       false!  (See ~ ncanth for some intuition behind the latter.)
       Nonetheless, NF has not been shown to be inconsistent and has its
       advocates - who's to say which set theory is "right"?  NF is finitely
       axiomatizable and can be encoded in Metamath using the axioms from T.
       Hailperin, "A set of axioms for logic," _J. Symb.  Logic_ 9:1-19 (1944).

       Under our ZF set theory, every set is a member of the Russell class by
       ~ elirrv (derived from the Axiom of Regularity), so for us the Russell
       class equals the universe ` _V ` (theorem ~ ruv ).  See ~ ruALT for an
       alternate proof of ~ ru derived from that fact. $)
    ru $p |- { x | x e/ x } e/ _V $=
      ( vy cv wnel cab cvv wcel wn wceq wex wb wal pm5.19 df-nel eleq12d notbid
      eleq1 id syl5bb mtbir bibi12d a4v mto abeq2 nex isset mpbir ) ACZUHDZAEZF
      DUJFGZHUKBCZUJIZBJUMBUMUHULGZUIKZALZUPULULGZUQHZKZUQMUOUSABUHULIZUNUQUIUR
      UHULULQUIUHUHGZHUTURUHUHNUTVAUQUTUHULUHULUTRZVBOPSUAUBUCUIAULUDTUEBUJUFTU
      JFNUG $.
      $( [4-Oct-2008] $) $( [7-Aug-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff notation to include the proper substitution of a class for a
     set.  This definition "overloads" the previously defined variable
     substitution ~ wsb (where the first argument is a set variable rather
     than a class variable).  We take care to ensure that this new definition
     is a conservative extension.  Read this notation as "the proper
     substitution of class ` A ` for set variable ` x ` in wff ` ph ` ." @)
  wsbc @a wff [ A / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define the proper substitution of a class for a set.

     When ` A ` is a proper class, our definition evaluates to false.  This is
     somewhat arbitrary: we could have, instead, chosen the conclusion of
     ~ sbc6 for our definition, which always evaluates to true for proper
     classes.

     Our definition also does not produce the same results as discussed in the
     proof of Theorem 6.6 of [Quine] p. 42 (although Theorem 6.6 itself does
     hold, as shown by ~ dfsbcq below).  For example, if ` A ` is a proper
     class, Quine's substitution of ` A ` for ` y ` in ` 0 e. y ` evaluates to
     ` 0 e. A ` rather than our falsehood.  (This can be seen by substituting
     ` A ` , ` y ` , and ` 0 ` for for alpha, beta, and gamma in Subcase 1 of
     Quine's discussion on p. 42.)  Unfortunately, Quine's definition requires
     a recursive structural breakdown of ` ph ` , and it does not seem possible
     to express it with a single closed formula.

     In order to allow for a possible alternate but conflicting definition in
     the future, we will not commit to any specific proper class behavior.
     Instead, we will use this definition _only_ to prove theorem ~ dfsbcq ,
     which holds for both our definition and Quine's, and from which we can
     derive a weaker version of ~ df-sbc in the form of ~ sbc8g .

     The theorem ~ sbc2or shows the apparently "strongest" statement we can
     make regarding behavior at proper classes if we start from ~ dfsbcq .

     Note: this definition extends or "overloads" ~ df-sb which (via
     ~ df-clab ) becomes a special case of it, so a careful metalogical
     soundness justification, outside of Metamath, is needed for complete
     rigor; alternately, we could treat this definition as a new axiom.  We
     also could have used a different symbol to avoid metalogical
     justification, but this would require reproving a lot of uses of ~ df-sb .

     The related definition ~ df-csb defines proper substitution into a class
     variable (as opposed to a wff variable). $)
  df-sbc $a |- ( [ A / x ] ph <-> A e. { x | ph } ) $.

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42 and holds
     under both our definition and Quine's, provides us with a weak definition
     of the proper substitution of a class for a set, which we will use in
     place of ~ df-sbc above.  We will derive all our results from starting
     from here instead of ~ df-sbc .  As a consequence, we can derive ~ sbc8g ,
     which is a weaker version of ~ df-sbc that leaves substitution undefined
     when ` A ` is a proper class.  We thus leave unspecified the "official"
     behavior for proper classes.

     While in principle we could have made this theorem the official
     definition, we use ~ df-sbc because it is more obviously eliminable and
     thus easier to justify metalogically.  But to avoid conflict with Quine,
     we never use ~ df-sbc except indirectly via this theorem. $)
  dfsbcq $p |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) $=
    ( wceq cab wcel wsbc eleq1 df-sbc 3bitr4g ) CDECABFZGDLGABCHABDHCDLIABCJABD
    JK $.
    $( [14-Apr-1995] $)

  $( Equality theorem for class substitution. $)
  sbceq1a $p |- ( x = A -> ( ph <-> [ A / x ] ph ) ) $=
    ( cv wsbc wceq sbid dfsbcq syl5bbr ) AABBDZEJCFABCEABGABJCHI $.
    $( [26-Sep-2003] $)

  ${
    $d ph y $.  $d A y $.  $d x y $.
    $( Specialization: if a formula is true for all sets, it is true for any
       class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44.  See
       also ~ stdpc4 and ~ ra4sbc . $)
    a4sbc $p |- ( A e. V -> ( A. x ph -> [ A / x ] ph ) ) $=
      ( vy wal wsbc wi cv wceq stdpc4 dfsbcq syl5ib vtocleg ) ABFZABCGZHECDOABE
      IZGQCJPABEKABQCLMN $.
      $( [16-Jan-2004] $)
  $}

  ${
    sbcth.1 $e |- ph $.
    $( A substitution into a theorem remains true (when ` A ` is a set). $)
    sbcth $p |- ( A e. V -> [ A / x ] ph ) $=
      ( wcel wal wsbc ax-gen a4sbc mpi ) CDFABGABCHABEIABCDJK $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcthdv.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ sbcth .  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    sbcthdv $p |- ( ( ph /\ A e. V ) -> [ A / x ] ps ) $=
      ( wal wcel wsbc alrimiv a4sbc mpan9 ) ABCGDEHBCDIABCFJBCDEKL $.
      $( [8-Jun-2011] $) $( [30-Nov-2005] $)
  $}

  ${
    $d x z $.  $d y A z $.  $d ph z $.
    hbsbc1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for class substitution.  (The
       antecedent ensures that ` A ` is a set, which is necessary if we
       restrict ourselves to using only the "weak" class substitution
       definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbc1g $p |- ( A e. V -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) $=
      ( vz wsbc wal wi cv wceq dfsbcq hblem hbeleq albid syl5ib sylbird vtocleg
      hbs1 ) ABDHZUABIZJGDEGKZDLZUAABUCHZUBABUCDMZUEUEBIUDUBABGTUDUEUABBGDBCGDF
      NOUFPQRS $.
      $( [11-Jul-2011] $) $( [11-Oct-2004] $)

    ${
      $d x V $.  $d V z $.
      $( Bound-variable hypothesis builder for class substitution.  (The
         antecedent ensures that ` A ` is a set, which is necessary if we
         restrict ourselves to using only the "weak" class substitution
         definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions
         were removed by Andrew Salmon, 8-Jun-2011.) $)
      hbsbc1 $p |- ( ( A e. V -> [ A / x ] ph ) ->
                        A. x ( A e. V -> [ A / x ] ph ) ) $=
        ( vz wcel wsbc cv ax-17 hbel hbsbc1g hbim1 ) DEHABDIBBCGDEFGJEHBKLABCDE
        FMN $.
        $( [11-Jul-2011] $) $( [23-Aug-1993] $)
    $}
  $}

  ${
    $d x A y $.
    hbsbcv.1 $e |- A e. _V $.
    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Andrew Salmon, 8-Jun-2011.) $)
    hbsbc1v $p |- ( [ A / x ] ph -> A. x [ A / x ] ph ) $=
      ( vy cvv wcel wsbc wal wi cv ax-17 hbsbc1g ax-mp ) CFGABCHZOBIJDABECFEKCG
      BLMN $.
      $( [8-Jun-2011] $) $( [18-Aug-1993] $)
  $}

  ${
    $d w z A $.  $d w y $.  $d w x $.  $d w ph $.
    hbsbc.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbsbc.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for class substitution. $)
    hbsbc $p |- ( [ A / y ] ph -> A. x [ A / y ] ph ) $=
      ( vw wsbc cab wcel df-sbc hbab hbel hbxfrbi ) ACEIEACJZKBACELBDHEPFABCHGM
      NO $.
      $( [7-Sep-2014] $)

    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Eric Schmidt, 17-Jan-2007.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbcg $p |- ( A e. V -> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) $=
      ( vw cv wsbc wal wi wceq dfsbcq hblem hbeleq albid imbi12d hbsb vtoclg )
      ACIJZKZUCBLZMACEKZUEBLZMIEFUBENZUCUEUDUFACUBEOZUGUCUEBBIEBDIEGPQUHRSACIBH
      TUA $.
      $( [11-Jul-2011] $) $( [17-Nov-2005] $)
  $}

  ${
    $d x z $.  $d z A $.  $d y z ph $.
    $( A composition law for class substitution. $)
    sbccog $p |- ( A e. V -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) $=
      ( vz cv wsbc dfsbcq ax-17 sbco2 vtoclbg ) ABCGHZCFGZHABNHMCDHABDHFDEMCNDI
      ABNDIABFCACJKL $.
      $( [26-Sep-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d A y $.
    sbcco2.1 $e |- ( x = y -> A = B ) $.
    $( A composition law for class substitution.  Importantly, ` x ` may occur
       free in the class expression substituted for ` A ` .  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbcco2 $p |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) $=
      ( wsbc ax-17 cv wceq wb equcoms dfsbcq bicomd syl sbie ) ABEGZABDGZCBRCHC
      IBIJDEJZQRKSBCFLSRQABDEMNOP $.
      $( [8-Jun-2011] $) $( [5-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    sbc5g $p |- ( A e. V -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cv wsbc wceq wa wex dfsbcq eqeq2 anbi1d exbidv sb5 vtoclbg ) ABEFZGB
      FZQHZAIZBJABCGRCHZAIZBJECDABQCKQCHZTUBBUCSUAAQCRLMNABEOP $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    $( The disjunction of two equivalences for class substitution does not
       require a class existence hypothesis.  This theorem tells us that there
       are only 2 possibilities for ` [ A / x ] ph ` behavior at proper
       classes, matching the ~ sbc5 (false) and ~ sbc6 (true) conclusions.
       This is interesting since ~ dfsbcq (from which it is derived) does not
       say anything obvious about that.  Note that this theorem doesn't tell us
       that it is always one or the other at proper classes; it could "flip"
       between false (the first disjunct) and true (the second disjunct) as a
       function of ` ph ` and ` A ` . $)
    sbc2or $p |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/
                  ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb wi wal wo sbc5g orcd pm5.15 mpbii con3i
      wn vex eleq1 adantr nexdv pm2.21d alrimiv 2thd bibi2d orbi2d pm2.61i ) CD
      EZABCFZBGZCHZAIZBJZKZULUNALZBMZKZNZUKUQUTABCDOPUKTZUQULUPTZKZNVAULUPQVBVD
      UTUQVBVCUSULVBVCUSVBUOBUOUKUNUKAUNUMDEUKBUAUMCDUBRZUCSUDVBURBVBUNAUNUKVES
      UEUFUGUHUIRUJ $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 8-Jun-2011.) $)
    sbc6g $p |- ( A e. V -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( wcel wsbc cv wceq wa wex wi wal sbc5g hbe1 ceqex ceqsalg bitr4d ) CDEAB
      CFBGCHZAIZBJZRAKBLABCDMATBCDSBNABCOPQ $.
      $( [8-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    sbc5.1 $e |- A e. _V $.
    $( An equivalence for class substitution. $)
    sbc5 $p |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb sbc5g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x A $.
    sbc6.1 $e |- A e. _V $.
    $( An equivalence for class substitution.  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    sbc6 $p |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) $=
      ( cvv wcel wsbc cv wceq wi wal wb sbc6g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
      $( [18-Jan-2007] $) $( [23-Aug-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( An equivalence for class substitution in the spirit of ~df-clab .  Note
       that ` x ` and ` A ` don't have to be distinct. $)
    sbc7g $p |- ( A e. V -> ( [ A / x ] ph
                     <-> E. y ( y = A /\ [ y / x ] ph ) ) ) $=
      ( wcel wsb wsbc cv wceq wa wex sbccog sbc5g bitr3d ) DEFABCGZCDHABDHCIDJP
      KCLABCDEMPCDENO $.
      $( [18-Nov-2008] $)

    $( This is the closest we can get to ~ df-sbc if we start from ~ dfsbcq
       (see its comments).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbc8g $p |- ( A e. V -> ( [ A / x ] ph <-> A e. { x | ph } ) ) $=
      ( vy cv wsbc cab wcel dfsbcq eleq1 df-clab bicomi vtoclbg ) ABEFZGZOABHZI
      ZABCGCQIECDABOCJOCQKRPAEBLMN $.
      $( [29-Jun-2011] $) $( [18-Nov-2008] $)
  $}

  ${
    cbvsbc.1 $e |- ( ph -> A. y ph ) $.
    cbvsbc.2 $e |- ( ps -> A. x ps ) $.
    cbvsbc.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change bound variables in a wff substitution.  (Contributed by Jeff
       Hankins, 19-Sep-2009.)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    cbvsbc $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( wcel cab wsbc wb cbvab eleq2i a1i sbc8g 3bitr4d ) EFJZEACKZJZEBDKZJZACE
      LBDELUAUCMSTUBEABCDGHINOPACEFQBDEFQR $.
      $( [25-Aug-2011] $) $( [19-Sep-2009] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvsbcv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a class substitution using implicit
       substitution. $)
    cbvsbcv $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( ax-17 cbvsbc ) ABCDEFADHBCHGI $.
      $( [25-Aug-2011] $) $( [30-Sep-2008] $)
  $}

  ${
    $d x y A $.  $d y ps $.
    $( Conversion of implicit substitution to explicit class substitution,
       using a bound-variable hypothesis instead of distinct variables.
       (Closed theorem version of ~ sbciegf .) $)
    sbciegft $p |- ( ( A e. V /\ A. x ( ps -> A. x ps ) /\
              A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi cv wceq wb w3a wsbc wa 3ad2ant1 imim2i alimi biimpa 3adant1
      sylan2 wex sbc5g bi1 imp3a 19.23t sylbid bi2 com23 19.21t sylibrd impbid
      sbc6g ) DEFZBBCGHCGZCIDJZABKZHZCGZLZACDMZBUSUTUOANZCUAZBUMUNUTVBKURACDEUB
      OUNURVBBHZUMURUNVABHZCGZVCUQVDCUQUOABUPABHUOABUCPUDQUNVEVCVABCUERTSUFUSBU
      OAHZCGZUTUNURBVGHZUMURUNBVFHZCGZVHUQVICUQUOBAUPBAHUOABUGPUHQUNVJVHBVFCUIR
      TSUMUNUTVGKURACDEULOUJUK $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x V $.
    sbciegf.1 $e |- ( A e. V -> ( ps -> A. x ps ) ) $.
    sbciegf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbciegf $p |- ( A e. V -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi wsbc wb alrimiv cv wceq ax-gen sbciegft 3exp mpii mpd ) DEH
      ZBBCIJZCIZACDKBLZUAUBCFMUAUCCNDOABLJZCIZUDUECGPUAUCUFUDABCDEQRST $.
      $( [14-Dec-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcieg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcieg $p |- ( A e. V -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel cvv wsbc wb elex a17d sbciegf syl ) DEGDHGZACDIBJDEKABCDHOBCLFMN
      $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcie.1 $e |- A e. _V $.
    sbcie.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcie $p |- ( [ A / x ] ph <-> ps ) $=
      ( cvv wcel wsbc wb sbcieg ax-mp ) DGHACDIBJEABCDGFKL $.
      $( [4-Sep-2004] $)
  $}

  ${
    $d z w A $.  $d y z w B $.  $d z ph $.  $d x z w $.
    elrabsf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Membership in a restricted class abstraction, expressed with explicit
       class substitution.  (The variation ~ elrabf has implicit
       substitution).  The hypothesis specifies that ` x ` must not be a free
       variable in ` B ` . $)
    elrabsf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) $=
      ( vz vw crab wcel cv wsbc wa ax-17 hbs1 sbequ12 cbvrab cvv syl pm5.32i wi
      eleq2i hbsbc1 wceq sbceq1a wex 19.8a isset sylibr biimt bitrd elrabf elex
      wb bitr4i sbccog 3bitri ) DABEIZJDABGKZLZGEIZJZDEJZUTGDLZMZVCABDLZMURVADA
      UTBGCEFCKEJGNAGNABGOABGPQUBVBVCDRJZVDUAZMVEUTVHGHDEHKZDJGNZVIEJGNUTGHDRVJ
      UCUSDUDZUTVDVHUTGDUEVKVGVDVHUNZVKVKGUFVGVKGUGGDUHUIVGVDUJZSUKULVCVDVHVCVG
      VLDEUMVMSTUOVCVDVFABGDEUPTUQ $.
      $( [30-Sep-2003] $)
  $}

  ${
    $d x y $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution.  Theorem 6.13 of [Quine] p. 44. $)
    elabs2 $p |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) $=
      ( vy cab wcel cvv crab wsbc wa rabab eleq2i cv ax-17 elrabsf bitr3i ) CAB
      EZFCABGHZFCGFABCIJRQCABKLABDCGDMGFBNOP $.
      $( [7-Mar-2004] $)
  $}

  $( Membership in a class abstraction, expressed in terms of class
     substitution.  Conveniently, this theorem has no distinct variable
     restrictions.  Except for the antecedent, this theorem is "almost" like
     ~ df-sbc but was proved using only ~ dfsbcq as its starting point (making
     no other reference to ~ df-sbc ).  We prefer not to make direct reference
     to ~ df-sbc (i.e. commit to it) since its behavior at proper classes is at
     odds with Quine, whereas ~ dfsbcq is not.  (Quine's class substitution
     cannot be expressed in closed form.)  This theorem serves as a weaker
     Quine-compatible substitute for ~ df-sbc . $)
  elabsg $p |- ( A e. V -> ( A e. { x | ph } <-> [ A / x ] ph ) ) $=
    ( wcel cvv cab wsbc wb elex elabs2 baib syl ) CDECFEZCABGEZABCHZICDJONPABCK
    LM $.
    $( [4-Nov-2005] $)

  ${
    elabs.1 $e |- A e. _V $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution. $)
    elabsbc $p |- ( A e. { x | ph } <-> [ A / x ] ph ) $=
      ( cab wcel cvv wsbc elabs2 mpbiran ) CABEFCGFABCHABCIDJ $.
      $( [7-Mar-2004] $)
  $}

  ${
    $d x y B $.  $d y A $.
    $( Substitution applied to an atomic wff.  Set theory version of ~ eqsb3 .
       (Contributed by Andrew Salmon, 29-Jun-2011.) $)
    eqsbc3 $p |- ( A e. V -> ( [ A / x ] x = B <-> A = B ) ) $=
      ( vy cv wceq wsbc dfsbcq eqeq1 eqsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDMAN
      BINBCJEACKL $.
      $( [29-Jun-2011] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.  $d y ps $.
    $( Move negation in and out of class substitution. $)
    sbcng $p |- ( A e. V -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) $=
      ( vy wn cv wsbc dfsbcq wceq notbid sbn vtoclbg ) AFZBEGZHABOHZFNBCHABCHZF
      ECDNBOCIOCJPQABOCIKABELM $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over implication. $)
    sbcimg $p |- ( A e. V ->
           ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) $=
      ( vy wi cv wsbc dfsbcq wceq imbi12d sbim vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over conjunction. $)
    sbcang $p |- ( A e. V ->
           ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) $=
      ( vy wa cv wsbc dfsbcq wceq anbi12d sban vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over disjunction. $)
    sbcorg $p |- ( A e. V ->
           ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) $=
      ( vy wo cv wsbc dfsbcq wceq orbi12d sbor vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over biconditional.  (Contributed by
       Raph Levien, 10-Apr-2004.) $)
    sbcbig $p |- ( A e. V ->
         ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) $=
      ( vy wb cv wsbc dfsbcq wceq bibi12d sbbi vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x z A $.  $d x y z $.  $d z ph $.
    $( Move universal quantifier in and out of class substitution. $)
    sbcalg $p |- ( A e. V -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) $=
      ( vz wal cv wsbc dfsbcq wceq albidv sbal vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Move existential quantifier in and out of class substitution. $)
    sbcexg $p |- ( A e. V -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) $=
      ( vz wex cv wsbc dfsbcq wceq exbidv sbex vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [21-May-2004] $)
  $}

  ${
    $d x B $.  $d x A $.
    $( Set theory version of ~ sbeqal1 .  (Contributed by Andrew Salmon,
       28-Jun-2011.) $)
    sbceqal $p |- ( A e. V -> ( A. x ( x = A -> x = B ) -> A = B ) ) $=
      ( wcel cv wceq wi wal wsbc a4sbc sbcimg wb eqsbc3 mpbiri pm5.5 syl 3bitrd
      eqid sylibd ) BDEZAFZBGZUBCGZHZAIUEABJZBCGZUEABDKUAUFUCABJZUDABJZHZUIUGUC
      UDABDLUAUHUJUIMUAUHBBGBSABBDNOUHUIPQABCDNRT $.
      $( [28-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Theorem *14.121 in [WhiteheadRussell] p. 185.  (Contributed by Andrew
       Salmon, 28-Jun-2011.)  (The proof was shortened by Wolf Lammen,
       9-May-2013.) $)
    sbeqalb $p |- ( A e. V -> ( ( A. x ( ph <-> x = A ) /\ A. x ( ph <->
      x = B ) ) -> A = B ) ) $=
      ( cv wceq wb wal wa wi wcel bibi1 biimpa biimpd alanimi sbceqal syl5 ) AB
      FZCGZHZBIASDGZHZBIJTUBKZBICELCDGUAUCUDBUAUCJTUBUAUCTUBHATUBMNOPBCDEQR $.
      $( [9-May-2013] $) $( [9-Jun-2011] $)
  $}

  ${
    sbcbid.1 $e |- ( ph -> A. x ph ) $.
    sbcbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution. $)
    sbcbid $p |- ( ( ph /\ A e. V ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( wcel wsbc wb wal alrimi a4sbc syl5 sbcbig sylibd impcom ) EFIZABDEJCDEJ
      KZSABCKZDEJZTAUADLSUBAUADGHMUADEFNOBCDEFPQR $.
      $( [26-Feb-2005] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution.  (The proof was
       shortened by Eric Schmidt, 17-Jan-2007.) $)
    sbcbidv $p |- ( ( ph /\ A e. V ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( ax-17 sbcbid ) ABCDEFADHGI $.
      $( [18-Jan-2007] $) $( [11-Oct-2004] $)
  $}

  ${
    sbcbii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building inference rule for class substitution. $)
    sbcbii $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / x ] ps ) ) $=
      ( cvv wceq wcel wsbc wb eqid a1i sbcbidv mpan ) GGHZDEIACDJBCDJKGLPABCDEA
      BKPFMNO $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x C $.  $d x A $.
    $( ~ eqsbc3 with set variable on right side of equals sign.  This proof was
       automatically generated from the virtual deduction proof ~ eqsbc3rVD
       using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    eqsbc3r $p |- ( A e. B -> ( [ A / x ] C = x <-> C = A ) ) $=
      ( wcel wceq wsbc eqcom sbcbii biimpd eqsbc3 sylibd syl6ib syl6ibr sylibrd
      cv idd impbid ) BCEZDAPZFZABGZDBFZSUBBDFZUCSUBTDFZABGZUDSUBUFUAUEABCDTHIZ
      JABDCKZLBDHZMSUCUFUBSUCUDUFSUCUCUDSUCQUINUHOUGOR $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d y ch $.  $d y ps $.  $d y ph $.  $d y A $.  $d x y $.
    $( Distribution of class substitution over triple conjunction.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbc3ang $p |- ( A e. V -> ( [ A / x ] ( ph /\ ps /\ ch ) <->
                ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) $=
      ( vy w3a cv wsbc dfsbcq wceq 3anbi123d sb3an vtoclbg ) ABCHZDGIZJADQJZBDQ
      JZCDQJZHPDEJADEJZBDEJZCDEJZHGEFPDQEKQELRUASUBTUCADQEKBDQEKCDQEKMABCDGNO
      $.
      $( [29-Jun-2011] $) $( [14-Dec-2006] $)
  $}

  ${
    $d y z A $.  $d x y B $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel1gv $p |- ( A e. V -> ( [ A / x ] x e. B <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq1 clelsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDM
      ANBINBCJEACKL $.
      $( [29-Jun-2006] $) $( [17-Nov-2006] $)
  $}

  ${
    $d y z B $.  $d x y A $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel2gv $p |- ( B e. V -> ( [ B / x ] A e. x <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq2 ax-17 sbie vtoclbg ) BAFZGZAEFZHBPGZOACHBC
      GECDOAPCIPCBJOQAEQAKNPBJLM $.
      $( [29-Jun-2011] $) $( [17-Nov-2006] $)
  $}

  ${
    $d x B $.
    sbcth2.1 $e |- ( x e. B -> ph ) $.
    $( A substitution into a theorem. $)
    sbcth2 $p |- ( A e. B -> [ A / x ] ph ) $=
      ( wcel wsbc cv wi sbcth sbcimg sbcel1gv imbi1d bitrd mpbid pm2.43i ) CDFZ
      ABCGZQBHDFZAIZBCGZQRIZTBCDEJQUASBCGZRIUBSABCDKQUCQRBCDDLMNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d y ph $.  $d x y z $.
    hbsbc1gd.1 $e |- ( ph -> A. x ph ) $.
    hbsbc1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbsbc1g .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbc1gd $p |- ( ( ph /\ A e. V ) ->
                   ( [ A / x ] ps -> A. x [ A / x ] ps ) ) $=
      ( vz wcel cvv wsbc wal wi elex wa cv cab wb 3syl wceq alrimiv abidhb hba1
      eleq1 biimpar hbab hbsbc1g syl dfsbcq adantr a1d a17d hbeld hband anabsi5
      albid 3imtr3d sylan2 ) EFJAEKJZBCELZVACMZNEFOAUTPZBCIQEJZCMZIRZLZVGCMZVAV
      BVCVFKJZVGVHNAVIUTADQZEJZVKCMNZDMZVFEUAZVIUTSAVLDHUBZCDIEUCZVFEKUETUFBCDV
      FKVECIDVDCUDUGUHUIAVGVASZUTAVMVNVQVOVPBCVFEUJTUKZVCVGVACAUTVCCMAAUTCAACMA
      GULACDEKGHAVJKJCUMUNUOUPVRUQURUS $.
      $( [26-Jun-2011] $) $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d z ph $.  $d w x z $.
    hbsbcgd.1 $e |- ( ph -> A. x ph ) $.
    hbsbcgd.2 $e |- ( ph -> A. y ph ) $.
    hbsbcgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbsbcgd.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbsbcg .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbcgd $p |- ( ( ph /\ A e. V ) ->
                 ( [ A / y ] ps -> A. x [ A / y ] ps ) ) $=
      ( vw wcel cvv wsbc wal wi cv wb 3syl elex cab wceq alrimiv abidhb biimpar
      wa eleq1 hba1 hbab hbsbcg syl dfsbcq adantr ax-4 impbid2 sbcbid bitrd a1d
      a17d hbeld hband anabsi5 albid 3imtr3d sylan2 ) FGMAFNMZBDFOZVHCPZQFGUAAV
      GUGZBCPZDLRFMZCPZLUBZOZVOCPZVHVIVJVNNMZVOVPQAVQVGAERZFMZVSCPQZEPZVNFUCZVQ
      VGSAVTEJUDZCELFUEZVNFNUHTUFVKCDEVNNVMCLEVLCUIUJBCUIUKULVJVOVKDFOZVHAVOWES
      ZVGAWAWBWFWCWDVKDVNFUMTUNAVKBDFNIAVKBBCUOKUPUQURZVJVOVHCAVGVJCPAAVGCAACPA
      HUSACEFNHJAVRNMCUTVAVBVCWGVDVEVF $.
      $( [21-Jun-2011] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Substitution analog of Theorem 19.20 of [Margaris] p. 90. $)
    sbcimdv $p |- ( ( ph /\ A e. V ) ->
                     ( [ A / x ] ps -> [ A / x ] ch ) ) $=
      ( wcel wsbc wi wal alrimiv a4sbc syl5 sbcimg sylibd impcom ) EFHZABDEICDE
      IJZRABCJZDEIZSATDKRUAATDGLTDEFMNBCDEFOPQ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    sbcgf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcgf $p |- ( A e. V -> ( [ A / x ] ph <-> ph ) ) $=
      ( vy cv wsbc dfsbcq wceq biidd sbf vtoclbg ) ABFGZHAABCHAFCDABNCINCJAKABF
      ELM $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x ph $.
    $( Substitution for a variable not occurring in a wff does not affect it.
       Distinct variable form of ~ sbcgf .  (Contributed by Alan Sare,
       10-Nov-2012.) $)
    sbcg $p |- ( A e. V -> ( [ A / x ] ph <-> ph ) ) $=
      ( ax-17 sbcgf ) ABCDABEF $.
      $( [10-Nov-2012] $)
  $}

  ${
    sbc19.21g.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in antecedent affects only the
       consequent. $)
    sbc19.21g $p |- ( A e. V ->
                    ( [ A / x ] ( ph -> ps ) <-> ( ph -> [ A / x ] ps ) ) ) $=
      ( wcel wi wsbc sbcimg sbcgf imbi1d bitrd ) DEGZABHCDIACDIZBCDIZHAPHABCDEJ
      NOAPACDEFKLM $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x V $.  $d y W $.
    sbc2iegf.1 $e |- ( ps -> A. x ps ) $.
    sbc2iegf.2 $e |- ( ps -> A. y ps ) $.
    sbc2iegf.3 $e |- ( B e. W -> A. x B e. W ) $.
    sbc2iegf.4 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    sbc2iegf $p |- ( ( A e. V /\ B e. W ) ->
                     ( [ A / x ] [ B / y ] ph <-> ps ) ) $=
      ( wcel wsbc wb wa wi sbcang wal hban a1i cv ax-17 ancoms pm5.32da sbciegf
      wceq sbcg anbi1d 3bitr3rd pm5.32 sylibr impcom sbcgf imp ) EGMZFHMZADFNZC
      ENZBOZUPUQUSPZUQBPZOUQUTQUPUQURPZCENUQCENZUSPVBVAUQURCEGRVCVBCEGVBVBCSQUP
      UQBCKITUACUBEUGZUQURBUQVEURBOZUQVEURPZVEBPZOVEVFQUQVEAPZDFNVEDFNZURPVHVGV
      EADFHRVIVHDFHVHVHDSQUQVEBDVEDUCJTUADUBFUGZVEABVEVKABOLUDUEUFUQVJVEURVEDFH
      UHUIUJVEURBUKULUMUEUFUPVDUQUSUQCEGKUNUIUJUQUSBUKULUO $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ps $.
    sbc2ie.1 $e |- A e. _V $.
    sbc2ie.2 $e |- B e. _V $.
    sbc2ie.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2ie $p |- ( [ A / x ] [ B / y ] ph <-> ps ) $=
      ( cvv wcel wsbc wb ax-17 hbth sbc2iegf mp2an ) EJKFJKZADFLCELBMGHABCDEFJJ
      BCNBDNRCHOIPQ $.
      $( [19-Dec-2013] $) $( [16-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ph $.  $d x y ch $.
    sbc2iedv.1 $e |- A e. _V $.
    sbc2iedv.2 $e |- B e. _V $.
    sbc2iedv.3 $e |- ( ph -> ( ( x = A /\ y = B ) -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2iedv $p |- ( ph -> ( [ A / x ] [ B / y ] ps <-> ch ) ) $=
      ( wsbc wi cvv wcel wb ax-17 sbc19.21g ax-mp cv wceq sbcbii impcom sbc2ie
      wa pm5.74da 3bitr3ri pm5.74ri ) ABEGKZDFKZCABLZEGKZDFKZAUHLZDFKZACLZAUILZ
      FMNZULUNOHUKUMDFMGMNUKUMOIABEGMAEPQRUARUJUODEFGHIDSFTESGTUDZABCAURBCOJUBU
      EUCUQUNUPOHAUHDFMADPQRUFUG $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x y z ps $.
    sbc3ie.1 $e |- A e. _V $.
    sbc3ie.2 $e |- B e. _V $.
    sbc3ie.3 $e |- C e. _V $.
    sbc3ie.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by Mario Carneiro, 19-Jun-2014.) $)
    sbc3ie $p |- ( [ A / x ] [ B / y ] [ C / z ] ph <-> ps ) $=
      ( wsbc cv wceq wb wa cvv wcel ax-mp sbcang sbcg anbi1i bitri sbcbii 3expb
      wi ancoms pm5.32da sbc2ie 3bitr3ri pm5.32 mpbir sbcie ) AEHMZDGMZBCFICNFO
      ZUPBPUGUQUPQZUQBQZPUQAQZEHMZDGMZUQUOQZDGMZUSURGRSZVBVDPJVAVCDGRVAUQEHMZUO
      QZVCHRSZVAVGPKUQAEHRUATVFUQUOVHVFUQPKUQEHRUBTUCUDUETUTUSDEGHJKDNGOZENHOZQ
      ZUQABUQVKABPZUQVIVJVLLUFUHUIUJVDUQDGMZUPQZURVEVDVNPJUQUODGRUATVMUQUPVEVMU
      QPJUQDGRUBTUCUDUKUQUPBULUMUN $.
      $( [19-Jun-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y V $.  $d x W $.
    $( Lemma for ~ sbccomg . $)
    sbccomglem $p |- ( ( A e. V /\ B e. W ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( wcel wa wsbc cv wceq wex wb sbc5g sbcbidv ancoms adantr excom exbii
      exdistr an12 19.42v bitri 3bitr3i adantl bitr2d syl5bb 3bitrd ) DFHZEGHZI
      ZACEJZBDJZCKELZAIZCMZBDJZBKDLZUQIBMZABDJZCEJZUKUJUNURNUKUMUQBDFACEGOPQUJU
      RUTNUKUQBDFORUTUOUSAIZBMZIZCMZULVBUSUPIZCMBMVGBMZCMUTVFVGBCSUSUPBCUAVHVEC
      VHUOVCIZBMVEVGVIBUSUOAUBTUOVCBUCUDTUEULVBVDCEJZVFUJVAVDCEGABDFOPUKVJVFNUJ
      VDCEGOUFUGUHUI $.
      $( [14-Nov-2005] $)
  $}

  ${
    $d w y z A $.  $d w x z B $.  $d w z ph $.  $d x y $.
    $( Commutative law for double class substitution.  (The proof was shortened
       by Eric Schmidt, 17-Jan-2007.) $)
    sbccomg $p |- ( ( A e. V /\ B e. W ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( vw vz wcel cvv wsbc wb elex cv sbccog vex sbccomglem mpan2 sbcbidv wa
      adantr sbcom2 sbcbii bitr3d ancoms 3bitrd adantl 3bitr3rd syl2an ) DFJDKJ
      ZEKJZACELZBDLZABDLZCELZMEGJDFNEGNUKULUAZACHOZLZHELZBIOZLZIDLZUTBDLZUPUNUK
      VCVDMULUTBIDKPUBUQVCABVALZIDLZCURLZHELZVFCELZUPUQVCVECURLZHELZIDLZVJIDLZH
      ELVHULUKVCVLMULVBVKIDKULUSBVALZHELZVBVKULVAKJVOVBMIQUSHBEVAKKRSVNVJHEKACH
      BIUCUDUETUFVJIHDEKKRUKVMVGHEKUKURKJVMVGMHQVEICDURKKRSTUGULVHVIMUKVFCHEKPU
      HUKVFUOCEKABIDKPTUGULUKVDUNMULUTUMBDKACHEKPTUFUIUJ $.
      $( [18-Jan-2007] $) $( [15-Nov-2005] $)
  $}

  ${
    $d w z A $.  $d w x B $.  $d w V $.  $d w ph $.  $d x y $.  $d w y z $.
    $( Interchange class substitution and restricted quantifier.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       22-Feb-2010.) $)
    sbcralt $p |- ( A. y ( A e. V /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel cv wal wi wral wsbc wceq wb sbc6g adantr a4s cvv ralcom4 albidv
      wa eleq1 imbi12d a4v adantl hbeleqd a5i r19.21t syl syl5rbb bitrd r19.21v
      vex albii bitr2i syl6bb ralbidv bitr4d ax-mp sbcbii ralbid 3bitr4d sbccog
      hba1 3bitr3d ) EGIZDJZEIZVJCKZLZDKZUCZCKZACFMZBHJZNZHENZABVQNZHENZCFMZVPB
      ENZABENZCFMVOVTCFMZHENZVQEOZVTLZHKZCFMZVSWBVOWFWGWELZHKZWJVNWFWLPZCVHWMVM
      WEHEGQRSWJWHCFMZHKVOWLWHCHFUAVOWNWKHVOWGWGCKLZCKWNWKPVNWOCVOCHEVNCVFZVNVQ
      EIZWQCKZLZCVMWSVHVLWSDHVIVQOZVJWQVKWRVIVQEUDZWTVJWQCXAUBUEUFUGSUHUIWGVTCF
      UJUKUBULUMVNVSWFPZCVHXBVMVRWEHEGVQTIZVRWEPHUOXCVRBJVQOZALZBKZCFMZWEXCVRXD
      VPLZBKZXGVPBVQTQXGXECFMZBKXIXECBFUAXJXHBXDACFUNUPUQURXCVTXFCFABVQTQUSUTVA
      VBRSVOWAWICFWPVNWAWIPZCVHXKVMVTHEGQRSVCVDVNVSWCPZCVHXLVMVPBHEGVERSVOWAWDC
      FWPVNWAWDPZCVHXMVMABHEGVERSVCVG $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 22-Feb-2010.) $)
    sbcrext $p |- ( A. y ( A e. V /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel cv wal wrex wsbc wn wral wb dfrex2 sbcng bitrd adantr a4s sbcralt
      wi wa sbcbii hba1 ralbid notbid syl6bbr ) EGHZDIEHZUJCJUBDJZUCZCJZACFKZBE
      LZABELZMZCFNZMZUPCFKUMUOAMZCFNZBELZMZUSULUOVCOZCUIVDUKUIUOVAMZBELVCUNVEBE
      GACFPUDVABEGQRSTUMVBURUMVBUTBELZCFNURUTBCDEFGUAUMVFUQCFULCUEULVFUQOZCUIVG
      UKABEGQSTUFRUGRUPCFPUH $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)
  $}

  $( MAY BE REVISED - may be deleted $)
  ${
    $d w z A $.  $d x w B $.  $d w z V $.  $d w ph $.  $d x y z w $.
    sbcralgf.1 $e |- ( A. y A e. V -> ( z e. A -> A. y z e. A ) ) $.
    $( Interchange class substitution and restricted quantifier. $)
    sbcralgf $p |- ( A. y A e. V ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel wal wral cv wsbc wceq wi wb sbc6g a4s cvv ralcom4 ax-17 hbeleqd
      hba1 hblemd a5i r19.21t syl albidv syl5rbb bitrd vex r19.21v albii bitr2i
      syl6bb ralbidv bitr4d ax-mp sbcbii ralbid 3bitr4d sbccog 3bitr3d ) EGJZCK
      ZACFLZBIMZNZIENZABVHNZIENZCFLZVGBENZABENZCFLVFVKCFLZIENZVHEOZVKPZIKZCFLZV
      JVMVFVQVRVPPZIKZWAVEVQWCQCVPIEGRSWAVSCFLZIKVFWCVSCIFUAVFWDWBIVFVRVRCKPZCK
      WDWBQVEWECVFCIEVECUDZVFCDIEWFVFDUBHUEUCUFVRVKCFUGUHUIUJUKVEVJVQQCVIVPIEGV
      HTJZVIVPQIULWGVIBMVHOZAPZBKZCFLZVPWGVIWHVGPZBKZWKVGBVHTRWKWICFLZBKWMWICBF
      UAWNWLBWHACFUMUNUOUPWGVKWJCFABVHTRUQURUSUTSVFVLVTCFWFVEVLVTQCVKIEGRSVAVBV
      EVJVNQCVGBIEGVCSVFVLVOCFWFVEVLVOQCABIEGVCSVAVD $.
      $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier. $)
    sbcrexgf $p |- ( A. y A e. V ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel wal wrex wsbc wn wral wb dfrex2 sbcbii sbcng bitrd a4s hba1 ralbid
      sbcralgf notbid syl6bbr ) EGIZCJZACFKZBELZABELZMZCFNZMZUJCFKUGUIAMZCFNZBE
      LZMZUMUFUIUQOCUFUIUOMZBELUQUHURBEGACFPQUOBEGRSTUGUPULUGUPUNBELZCFNULUNBCD
      EFGHUCUGUSUKCFUFCUAUFUSUKOCABEGRTUBSUDSUJCFPUE $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d x B $.  $d x y z $.  $d ph z $.  $d B z $.
    $( Interchange class substitution and restricted quantifier.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcralg $p |- ( A e. V ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vz wral cv wsbc wceq ralbidv wcel ax-17 hbs1 hbral sbequ12 sbie vtoclbg
      dfsbcq ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDTUBDKUCUECEABUBDTLUAUD
      BGUCBCECIEMBNABGOPBIUBKAUCCEABGQLRS $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted existential quantifier.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcrexg $p |- ( A e. V ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( vz wrex cv wsbc wceq rexbidv wcel ax-17 hbs1 hbrex sbequ12 sbie vtoclbg
      dfsbcq ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDTUBDKUCUECEABUBDTLUAUD
      BGUCBCECIEMBNABGOPBIUBKAUCCEABGQLRS $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted uniqueness quantifier. $)
    sbcreug $p |- ( A e. V ->
                 ( [ A / x ] E! y e. B ph <-> E! y e. B [ A / x ] ph ) ) $=
      ( vz wreu cv wsbc wceq reubidv wcel ax-17 hbs1 hbreu sbequ12 sbie vtoclbg
      dfsbcq ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDTUBDKUCUECEABUBDTLUAUD
      BGUCBCECIEMBNABGOPBIUBKAUCCEABGQLRS $.
      $( [24-Feb-2013] $)
  $}

  ${
    $d y w A $.  $d w z B $.  $d w ph $.  $d x y $.  $d w x z $.
    sbcabel.1 $e |- ( z e. B -> A. x z e. B ) $.
    $( Interchange class substitution and class abstraction. $)
    sbcabel $p |- ( A e. V -> ( [ A / x ] { y | ph } e. B <->
                  { y | [ A / x ] ph } e. B ) ) $=
      ( vw wcel cvv cab wsbc wb cv wceq wa wex df-clel wal sbcbii sbcexg sbcang
      elex abeq2 sbcalg sbcbig ax-17 sbcgf bibi1d albidv 3bitrd syl6bbr anbi12d
      bitrd hblem exbidv syl ) EGJEKJZACLZFJZBEMZABEMZCLZFJZNEGUDUSVBIOZVDPZVFF
      JZQZIRZVEUSVBVFUTPZVHQZIRZBEMVLBEMZIRVJVAVMBEKIUTFSUAVLIBEKUBUSVNVIIUSVNV
      KBEMZVHBEMZQVIVKVHBEKUCUSVOVGVPVHUSVOCOVFJZVCNZCTZVGUSVOVQANZCTZBEMVTBEMZ
      CTVSVKWABEKACVFUEUAVTCBEKUFUSWBVRCUSWBVQBEMZVCNVRVQABEKUGUSWCVQVCVQBEKVQB
      UHUIUJUOUKULVCCVFUEUMVHBEKBDIFHUPUIUNUOUQULIVDFSUMUR $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y ph $.
    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69.  This
       provides an axiom for a predicate calculus for a restricted domain.
       This theorem generalizes the unrestricted ~ stdpc4 and ~ a4sbc .  See
       also ~ ra4sbca and ~ ra4csbela . $)
    ra4sbc $p |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) $=
      ( vy wral wcel wsbc wi cv wceq df-ral stdpc4 sylbi dfsbcq sbcimg sbcel1gv
      wal imbi1d bitrd biimpd pm2.43b syl6bi syl5 vtocleg pm2.43a ) ABDFZCDGZAB
      CHZUGUHUIIZIECDUGBJDGZAIZBEJZHZUMCKZUJUGULBRUNABDLULBEMNUOUNULBCHZUJULBUM
      COUPUHUIUHUPUJUHUPUKBCHZUIIUJUKABCDPUHUQUHUIBCDDQSTUAUBUCUDUEUF $.
      $( [17-Nov-2006] $)

    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69. $)
    ra4sbca $p |- ( ( A e. B /\ A. x e. B ph ) -> [ A / x ] ph ) $=
      ( wcel wral wsbc ra4sbc imp ) CDEABDFABCGABCDHI $.
      $( [18-Nov-2006] $) $( [14-Dec-2005] $)

    $( Existence form of ~ ra4sbca . $)
    ra4esbca $p |- ( ( A e. B /\ [ A / x ] ph ) -> E. x e. B ph ) $=
      ( wcel wsbc wrex wn wral ralnex ra4sbc sbcng sylibd syl5bir con4d imp ) C
      DEZABCFZABDGZQSRSHAHZBDIZQRHZABDJQUATBCFUBTBCDKABCDLMNOP $.
      $( [29-Feb-2008] $)
  $}

  ${
    ra5.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantifier version of Axiom 5 of [Mendelson] p. 69.  This is
       an axiom of a predicate calculus for a restricted domain.  Compare the
       unrestricted ~ stdpc5 . $)
    ra5 $p |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) $=
      ( wi wral cv wcel wal df-ral bi2.04 albii bitri stdpc5 sylbi syl6ibr ) AB
      FZCDGZACHDIZBFZCJZBCDGSAUAFZCJZAUBFSTRFZCJUDRCDKUEUCCTABLMNAUACEOPBCDKQ
      $.
      $( [16-Jan-2004] $)
  $}

  ${
    $d x y A $.
    rmo3.1 $e |- ( ph -> A. y ph ) $.
    $( Restricted "at most one" using explicit substitution. $)
    rmo3 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( cv wcel wa wsbc wceq wi wal wral sban anbi1i 3bitri impexp albii df-ral
      wmo clelsb3 bitri anbi2i an4 ancom r19.21v 3bitr2i ax-17 hban mo3 3bitr4i
      imbi1i ) BFZDGZAHZUOBCFZIZHZUMUPJZKZCLZBLUNAABUPIZHZUSKZCDMZKZBLUOBTVEBDM
      VAVFBVAUPDGZUNVDKZKZCLVHCDMVFUTVICUTVGUNHZVCHZUSKVJVDKVIURVKUSURUOVGVBHZH
      UNVGHZVCHVKUQVLUOUQUNBUPIZVBHVLUNABCNVNVGVBCBDUAOUBUCUNAVGVBUDVMVJVCUNVGU
      EOPULVJVCUSQVGUNVDQPRVHCDSUNVDCDUFUGRUOBCUNACUNCUHEUIUJVEBDSUK $.
      $( [4-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d y ph $.  $d x y ps $.  $d x ch $.
    rmoi.b $e |- ( x = B -> ( ph <-> ps ) ) $.
    rmoi.c $e |- ( x = C -> ( ph <-> ch ) ) $.
    $( Consequence of "at most one", using implicit substitution. $)
    rmoi $p |- ( ( E* x ( x e. A /\ ph )
          /\ ( B e. A /\ ps ) /\ ( C e. A /\ ch ) ) -> B = C ) $=
      ( vy cv wcel wa wsbc wceq wi wral ax-17 anbi2d imbi12d wmo w3a 3anass an4
      rmo3 anbi12i bitri wb sbcieg ad2antlr hbs1 hban anbi1d eqeq1 dfsbcq eqeq2
      hbim rcla42 imp sylbird expcom imp32 sylbi ) DKZELAMDUAZFELZBMZGELZCMZUBZ
      AADJKZNZMZVDVKOZPZJEQDEQZVFVHMZBCMZMZMZFGOZVJVEVGVIMZMVTVEVGVIUCVEVPWBVSA
      DJEAJRUEVFBVHCUDUFUGVPVQVRWAVQVPVRWAPVQVPMVRBADGNZMZWAVHWDVRUHVFVPVHWCCBA
      CDGEIUISUJVQVPWDWAPZVOWEBVLMZFVKOZPDJFGEEWFWGDBVLDBDRADJUKULWGDRUQWEJRVDF
      OZVMWFVNWGWHABVLHUMVDFVKUNTVKGOZWFWDWGWAWIVLWCBADVKGUOSVKGFUPTURUSUTVAVBV
      C $.
      $( [4-Nov-2012] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets into classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [_ $.  $( Underlined left bracket $)
  $c ]_ $.  $( Underlined right bracket $)

  $( Extend class notation to include the proper substitution of a class for a
     set into another class. $)
  csb $a class [_ A / x ]_ B $.

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Define the proper substitution of a class for a set into another class.
       The underlined brackets distinguish it from the substitution into a wff,
       ~ wsbc , to prevent ambiguity.  Theorem ~ sbcel1g shows an example of
       how ambiguity could arise if we didn't use distinguished brackets.
       Theorem ~ sbccsbg recreates substitution into a wff from this
       definition. $)
    df-csb $a |- [_ A / x ]_ B = { y | [ A / x ] y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y $.
    csb2.1 $e |- A e. _V $.
    $( Alternate expression for the proper substitution into a class, without
       referencing substitution into a wff.  Note that ` x ` can be free in
       ` B ` but cannot occur in ` A ` . $)
    csb2 $p |- [_ A / x ]_ B = { y | E. x ( x = A /\ y e. B ) } $=
      ( csb cv wcel wsbc cab wceq wa wex df-csb sbc5 abbii eqtri ) ACDFBGDHZACI
      ZBJAGCKRLAMZBJABCDNSTBRACEOPQ $.
      $( [2-Dec-2013] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Analog of ~ dfsbcq for proper substitution into a class. $)
    csbeq1 $p |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( vy wceq cv wcel wsbc cab csb dfsbcq abbidv df-csb 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x z C $.  $d z V $.
    cbvcsbv.1 $e |- ( x = y -> B = C ) $.
    $( Change the bound variable of a proper substitution into a class using
       implicit substitution. $)
    cbvcsbv $p |- ( A e. V -> [_ A / x ]_ B = [_ A / y ]_ C ) $=
      ( vz wcel cv wsbc cab csb wceq eleq2d cbvsbcv abbidv df-csb 3eqtr4g ) CFI
      ZHJZDIZACKZHLUAEIZBCKZHLACDMBCEMTUCUEHUBUDABCFAJBJNDEUAGOPQAHCDRBHCERS $.
      $( [30-Sep-2008] $)
  $}

  ${
    csbeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for proper substitution into a class. $)
    csbeq1d $p |- ( ph -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( wceq csb csbeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [3-Dec-2005] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Analog of ~ sbid for proper substitution into a class. $)
    csbid $p |- [_ x / x ]_ A = A $=
      ( vy cv csb wcel wsbc cab df-csb sbid abbii abid2 3eqtri ) AADZBECDBFZANG
      ZCHOCHBACNBIPOCOAJKCBLM $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Equality theorem for proper substitution into a class. $)
    csbeq1a $p |- ( x = A -> B = [_ A / x ]_ B ) $=
      ( cv wceq csb csbid csbeq1 syl5eqr ) ADZBECAJCFABCFACGAJBCHI $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d z A $.  $d y z B $.  $d z V $.  $d x z $.
    $( Composition law for chained substitutions into a class. $)
    csbcog $p |- ( A e. V -> [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B ) $=
      ( vz wcel csb wsbc cab df-csb abeq2i sbcbii sbccog bitrd abbidv 3eqtr4g
      cv ) CEGZFRZABRZDHZGZBCIZFJTDGZACIZFJBCUBHACDHSUDUFFSUDUEAUAIZBCIUFUCUGBC
      EUGFUBAFUADKLMUEABCENOPBFCUBKAFCDKQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( The existence of proper substitution into a class. $)
    csbexg $p |- ( ( A e. V /\ A. x B e. W ) -> [_ A / x ]_ B e. _V ) $=
      ( vy wcel wal wa csb wsbc cab cvv df-csb abid2 elex syl5eqel alimi a4sbc
      cv syl5 imp wb ax-17 sbcabel adantr mpbid ) BDGZCEGZAHZIZABCJFTZCGZABKFLZ
      MAFBCNUKUMFLZMGZABKZUNMGZUHUJUQUJUPAHUHUQUIUPAUIUOCMFCOCEPQRUPABDSUAUBUHU
      QURUCUJUMAFFBMDULMGAUDUEUFUGQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    csbex.1 $e |- A e. _V $.
    csbex.2 $e |- B e. _V $.
    $( The existence of proper substitution into a class.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    csbex $p |- [_ A / x ]_ B e. _V $=
      ( cvv wcel csb wal csbexg mpan mpg ) CFGZABCHFGZABFGMAINDABCFFJKEL $.
      $( [29-Jun-2011] $) $( [7-Aug-2007] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y V $.  $d x y $.
    csbconstgf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). $)
    csbconstgf $p |- ( A e. V -> [_ A / x ]_ B = B ) $=
      ( wcel csb cv wsbc cab df-csb sbcgf abbi1dv syl5eq ) CEGZACDHBIDGZACJZBKD
      ABCDLPRBDQACEFMNO $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d A y $.  $d B x y $.  $d V y $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). ~ csbconstgf with distinct variable requirement.(Contributed by
       Alan Sare, 22-Jul-2012.) $)
    csbconstgfv $p |- ( A e. V -> [_ A / x ]_ B = B ) $=
      ( vy cv wcel ax-17 csbconstgf ) AEBCDEFCGAHI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d w x y z $.  $d w y z A $.  $d w y z B $.  $d w y z C $.
    $( Distribute proper substitution through a membership relation.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcel12g $p |- ( A e. V -> ( [ A / x ] B e. C <->
                   [_ A / x ]_ B e. [_ A / x ]_ C ) ) $=
      ( vy vz vw wcel wsbc cv cab csb dfsbcq wceq abbidv eleq12d hbs1 hbab sbab
      hbel sbie vtoclbg df-csb eleq12i syl6bbr ) BEICDIZABJZFKZCIZABJZFLZUIDIZA
      BJZFLZIZABCMZABDMZIUGAGKZJUJAUSJZFLZUMAUSJZFLZIZUHUPGBEUGAUSBNUSBOZVAULVC
      UOVEUTUKFUJAUSBNPVEVBUNFUMAUSBNPQUGVDAGAHHVAVCUTAFHUJAGRSVBAFHUMAGRSUAAKU
      SOCVADVCAGFCTAGFDTQUBUCUQULURUOAFBCUDAFBDUDUEUF $.
      $( [29-Jun-2011] $) $( [10-Nov-2005] $)

    $( Distribute proper substitution through an equality relation.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbceqg $p |- ( A e. V -> ( [ A / x ] B = C <->
                   [_ A / x ]_ B = [_ A / x ]_ C ) ) $=
      ( vz vy vw wcel wceq wsbc cv cab csb dfsbcq abbidv eqeq12d hbs1 hbab sbab
      hbeq sbie vtoclbg df-csb eqeq12i syl6bbr ) BEICDJZABKZFLZCIZABKZFMZUIDIZA
      BKZFMZJZABCNZABDNZJUGAGLZKUJAUSKZFMZUMAUSKZFMZJZUHUPGBEUGAUSBOUSBJZVAULVC
      UOVEUTUKFUJAUSBOPVEVBUNFUMAUSBOPQUGVDAGAHHVAVCUTAFHUJAGRSVBAFHUMAGRSUAALU
      SJCVADVCAGFCTAGFDTQUBUCUQULURUOAFBCUDAFBDUDUEUF $.
      $( [29-Jun-2011] $) $( [10-Nov-2005] $)
  $}

  $( Distribute proper substitution through negated membership.  (Contributed
     by Andrew Salmon, 18-Jun-2011.) $)
  sbcnel12g $p |- ( A e. V -> ( [ A / x ] B e/ C <-> [_ A / x ]_ B e/
                    [_ A / x ]_ C ) ) $=
    ( wcel wnel wsbc wn csb df-nel sbcbii sbcng sbcel12g notbid syl6bbr 3bitrd
    ) BEFZCDGZABHCDFZIZABHTABHZIZABCJZABDJZGZSUAABECDKLTABEMRUCUDUEFZIUFRUBUGAB
    CDENOUDUEKPQ $.
    $( [18-Jun-2011] $)

  $( Distribute proper substitution through an inequality.  (Contributed by
     Andrew Salmon, 18-Jun-2011.) $)
  sbcne12g $p |- ( A e. V -> ( [ A / x ] B =/= C <-> [_ A / x ]_ B =/=
                   [_ A / x ]_ C ) ) $=
    ( wcel wne wsbc csb wn wceq nne sbcbii sbcng sbceqg syl6bbr 3bitr3d con4bid
    ) BEFZCDGZABHZABCIZABDIZGZSTJZABHCDKZABHZUAJUDJZUEUFABECDLMTABENSUGUBUCKUHA
    BCDEOUBUCLPQR $.
    $( [18-Jun-2011] $)

  ${
    $d y A $.  $d x y C $.  $d y V $.
    $( Move proper substitution in and out of a membership relation.  Note that
       the scope of ` [ A / x ] ` is the wff ` B e. C ` , whereas the scope of
       ` [_ A / x ]_ ` is the class ` B ` . $)
    sbcel1g $p |- ( A e. V -> ( [ A / x ] B e. C <->
                    [_ A / x ]_ B e. C ) ) $=
      ( wcel wsbc csb sbcel12g csbconstgfv eleq2d bitrd ) BEFZCDFABGABCHZABDHZF
      NDFABCDEIMODNABDEJKL $.
      $( [10-Nov-2005] $)

    $( Move proper substitution to first argument of an equality. $)
    sbceq1g $p |- ( A e. V -> ( [ A / x ] B = C <->
                    [_ A / x ]_ B = C ) ) $=
      ( wcel wceq wsbc csb sbceqg csbconstgfv eqeq2d bitrd ) BEFZCDGABHABCIZABD
      IZGODGABCDEJNPDOABDEKLM $.
      $( [30-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y V $.
    $( Move proper substitution in and out of a membership relation. $)
    sbcel2g $p |- ( A e. V -> ( [ A / x ] B e. C <->
                    B e. [_ A / x ]_ C ) ) $=
      ( wcel wsbc csb sbcel12g csbconstgfv eleq1d bitrd ) BEFZCDFABGABCHZABDHZF
      COFABCDEIMNCOABCEJKL $.
      $( [14-Nov-2005] $)

    $( Move proper substitution to second argument of an equality. $)
    sbceq2g $p |- ( A e. V -> ( [ A / x ] B = C <->
                    B = [_ A / x ]_ C ) ) $=
      ( wcel wceq wsbc csb sbceqg csbconstgfv eqeq1d bitrd ) BEFZCDGABHABCIZABD
      IZGCPGABCDEJNOCPABCEKLM $.
      $( [30-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutative law for double substitution into a class. $)
    csbcomg $p |- ( ( A e. V /\ B e. W ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) $=
      ( vz wcel cvv csb wceq elex wa cv wsbc wb sbcel2g sbcbidv 3bitr3d sbccomg
      ancoms adantr adantl eqrdv syl2an ) CFICJIZDJIZACBDEKZKZBDACEKZKZLDGICFMD
      GMUGUHNZHUJULUMHOZUIIZACPZUNUKIZBDPZUNUJIZUNULIZUMUNEIZBDPZACPZVAACPZBDPU
      PURVAABCDJJUAUHUGVCUPQUHVBUOACJBDUNEJRSUBUGVDUQBDJACUNEJRSTUGUPUSQUHACUNU
      IJRUCUHURUTQUGBDUNUKJRUDTUEUF $.
      $( [14-Nov-2005] $)
  $}

  ${
    csbeq2d.1 $e |- ( ph -> A. x ph ) $.
    csbeq2d.2 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution. $)
    csbeq2d $p |- ( ( ph /\ A e. V ) -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( wcel csb wceq wsbc wal alrimi a4sbc syl5 sbceqg sylibd impcom ) CFIZABC
      DJBCEJKZTADEKZBCLZUAAUBBMTUCAUBBGHNUBBCFOPBCDEFQRS $.
      $( [22-Nov-2005] $)
  $}

  ${
    $d x ph $.
    csbeq2dv.1 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution. $)
    csbeq2dv $p |- ( ( ph /\ A e. V ) -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( ax-17 csbeq2d ) ABCDEFABHGI $.
      $( [10-Nov-2005] $)
  $}

  ${
    csbeq2i.1 $e |- B = C $.
    $( Formula-building inference rule for class substitution. $)
    csbeq2i $p |- ( A e. V -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( wcel wceq wsbc csb sbcth sbceqg mpbid ) BEGCDHZABIABCJABDJHNABEFKABCDEL
      M $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    $( The proper substitution of a class for set variable results in the class
       (if the class exists). $)
    csbvarg $p |- ( A e. V -> [_ A / x ]_ x = A ) $=
      ( vy vz wcel cvv cv csb wceq elex vex wsbc df-csb sbcel2gv abbi1dv syl5eq
      cab ax-mp csbeq2i csbcog 3eqtr3d syl ) BCFBGFZABAHZIZBJBCKUDDBADHZUEIZIDB
      UGIZUFBDBUHUGGUGGFZUHUGJDLUJUHEHZUEFAUGMZERUGAEUGUENUJULEUGAUKUGGOPQSTADB
      UEGUAUDUIUKUGFDBMZERBDEBUGNUDUMEBDUKBGOPQUBUC $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y $.
    $( Substitution into a wff expressed in terms of substitution into a
       class. $)
    sbccsbg $p |- ( A e. V ->
                 ( [ A / x ] ph <-> y e. [_ A / x ]_ { y | ph } ) ) $=
      ( wcel cv cab wsbc csb abid sbcbii sbcel2g bitr3d ) DEFCGZACHZFZBDIABDIOB
      DPJFQABDEACKLBDOPEMN $.
      $( [15-Aug-2007] $)
  $}

  $( Substitution into a wff expressed in using substitution into a class. $)
  sbccsb2g $p |- ( A e. V ->
               ( [ A / x ] ph <-> A e. [_ A / x ]_ { x | ph } ) ) $=
    ( wcel cv cab wsbc csb sbcel12g abid sbcbii csbvarg eleq1d 3bitr3d ) CDEZBF
    ZABGZEZBCHBCQIZBCRIZEABCHCUAEBCQRDJSABCDABKLPTCUABCDMNO $.
    $( [27-Nov-2005] $)

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1g $p |- ( A e. V ->
                 ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) $=
      ( vz wcel cvv cv csb wal wi elex wsbc cab ax-17 hbel alrimi hbsbc1g hbabd
      df-csb eleq2i albii 3imtr4g syl ) CEHCIHZBJZACDKZHZUJALZMCENUGUHGJDHZACOZ
      GPZHZUOALUJUKUGUMAGBUGUGGLAABBCIFUHIHAQRUGGQSULABCIFTUAUIUNUHAGCDUBUCZUJU
      OAUPUDUEUF $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1.1 $e |- A e. _V $.
    hbcsb1.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1 $p |- ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) $=
      ( cvv wcel cv csb wal wi hbcsb1g ax-mp ) CGHBIACDJHZOAKLEABCDGFMN $.
      $( [17-Aug-2006] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x z $.  $d w y $.
    hbcsb.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbcsb.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb $p |- ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) $=
      ( vw csb cv wcel wsbc cab df-csb hblem hbsbc hbab hbxfreq ) ACBDEIHJEKZBD
      LZHMBHDENTAHCSABCDFACHEGOPQR $.
      $( [7-Sep-2014] $)

    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsbg $p |- ( A e. V ->
                 ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) $=
      ( vw wcel cvv cv csb wal wi elex wsbc cab ax-17 hbel alrimi hbsbcg df-csb
      hblem hbabd eleq2i albii 3imtr4g syl ) DFJDKJZCLZBDEMZJZUMANZODFPUJUKILEJ
      ZBDQZIRZJZURANUMUNUJUPAICUJUJINAACCDKGUKKJASTUJISUAUOABCDKGACIEHUDUBUEULU
      QUKBIDEUCUFZUMURAUSUGUHUI $.
      $( [20-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d y z ph $.  $d x y z $.
    hbcsb1gd.1 $e |- ( ph -> A. x ph ) $.
    hbcsb1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbcsb1g . $)
    hbcsb1gd $p |- ( ( ph /\ A e. V ) ->
                 ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) $=
      ( vz wcel cvv cv csb wal wi elex wa a1d a17d hbeld hband anabsi5 hbsbc1gd
      wsbc wb sbcel2g adantl albid 3imtr3d sylan2 ) DFJADKJZCLZBDEMZJZUNBNODFPA
      UKQZBIULUMAUKUOBNAAUKBAABNAGRABCDKGHAULKJBSTUAUBZUOILZULJBSUOUQEJZBDUDZUS
      BNUQUMJZUTBNAURBCDKGHUCUKUSUTUEABDUQEKUFUGZUOUSUTBUPVAUHUITUJ $.
      $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w z ph $.  $d w x z $.  $d w y $.
    hbcsbgd.1 $e |- ( ph -> A. x ph ) $.
    hbcsbgd.2 $e |- ( ph -> A. y ph ) $.
    hbcsbgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbcsbgd.4 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of ~ hbcsbg . $)
    hbcsbgd $p |- ( ( ph /\ A e. V ) ->
                 ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) $=
      ( vw wcel cvv cv wal wi ax-17 a1i hbeld csb elex wa hband anabsi5 hbsbcgd
      a1d wsbc wb sbcel2g adantl albid 3imtr3d sylan2 ) EGMAENMZDOZCEFUAZMZURBP
      QEGUBAUOUCZBLUPUQAUOUSBPAAUOBAABPAHUGABDENHJUPNMZUTBPQAUTBRSTUDUEZLOZUPMZ
      VCBPQUSVCBRSUSVBFMZCEUHZVEBPVBUQMZVFBPAVDBCDENHIJABDVBFHUPVBMZVGBPQAVGBRS
      KTUFUOVEVFUIACEVBFNUJUKZUSVEVFBVAVHULUMTUN $.
      $( [21-Nov-2005] $)
  $}

  ${
    $d z A $.  $d w B $.  $d z C $.  $d w x y z $.
    csbhypf.1 $e |- ( z e. A -> A. x z e. A ) $.
    csbhypf.2 $e |- ( z e. C -> A. x z e. C ) $.
    csbhypf.3 $e |- ( x = A -> B = C ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See ~ sbhypf for class substitution version. $)
    csbhypf $p |- ( y = A -> [_ y / x ]_ B = C ) $=
      ( vw cv wceq wa wex csb wcel ax-17 vex eqvincf hbcsb1 hbeq csbeq1a exlimi
      sylan9req sylbi ) BKZDLAKZUFLZUGDLZMZANAUFEOZFLZACUFDCKUFPAQGBRZSUJULAAJC
      UKFAJUFEUMJKUFPAQTHUAUHUIUKEFAUFEUBIUDUCUE $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x z A $.  $d z B $.  $d y z C $.  $d z V $.  $d x y z $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Closed theorem version of ~ csbiegf .) $)
    csbiegft $p |- ( ( A e. V /\ A. x A. y ( y e. C -> A. x y e. C ) /\
                 A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) $=
      ( vz wcel cv wal wi wceq w3a csb wsbc cab df-csb wb id alimi eleq1 albidv
      imbi12d a4v eleq2 imim2i sbciegft syl3an abbi1dv syl5eq ) CFHZBIZEHZUMAJZ
      KZBJZAJZAICLZDELZKZAJZMZACDNGIZDHZACOZGPEAGCDQVBVEGEUKUKUQVCEHZVFAJZKZAJV
      AURVDVFRZKZAJVEVFRUKSUPVHAUOVHBGULVCLZUMVFUNVGULVCEUAZVKUMVFAVLUBUCUDTUTV
      JAUSVIURDEVCUEUFTVDVFACFUGUHUIUJ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x z A $.  $d z B $.  $d y C $.  $d x y $.
    csbieb.1 $e |- A e. _V $.
    csbieb.2 $e |- ( y e. C -> A. x y e. C ) $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution
       equivalent. $)
    csbieb $p |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) $=
      ( vz wceq csb cv wcel ax-17 hbcsb1 hbeq csbeq1a eqeq1d ceqsal ) DEIACDJZE
      IACAHBSEAHCDFHKCLAMNGOFAKCIDSEACDPQR $.
      $( [2-Mar-2008] $)
  $}

  ${
    $d a x A $.  $d a B $.  $d a y C $.  $d x y $.
    csbiebg.2 $e |- ( y e. C -> A. x y e. C ) $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution
       equivalent. $)
    csbiebg $p |- ( A e. V ->
          ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ) $=
      ( va cv wceq wi wal csb eqeq2 imbi1d albidv csbeq1 eqeq1d vex csbieb
      vtoclbg ) AIZHIZJZDEJZKZALAUCDMZEJUBCJZUEKZALACDMZEJHCFUCCJZUFUIAUKUDUHUE
      UCCUBNOPUKUGUJEAUCCDQRABUCDEHSGTUA $.
      $( [24-Mar-2013] $)
  $}

  ${
    $d x y A $.  $d y C $.  $d x y V $.
    csbiegf.1 $e |- ( A e. V -> ( y e. C -> A. x y e. C ) ) $.
    csbiegf.2 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class. $)
    csbiegf $p |- ( A e. V -> [_ A / x ]_ B = C ) $=
      ( wcel cv wal wi wceq wa csb alrimivv ax-gen jctir csbiegft 3expb mpdan )
      CFIZBJEIZUCAKLZBKAKZAJCMDEMLZAKZNACDOEMZUBUEUGUBUDABGPUFAHQRUBUEUGUHABCDE
      FSTUA $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x A $.  $d y C $.  $d x y $.
    csbief.1 $e |- A e. _V $.
    csbief.2 $e |- ( y e. C -> A. x y e. C ) $.
    csbief.3 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    csbief $p |- [_ A / x ]_ B = C $=
      ( cv wceq wi csb csbieb mpgbi ) AICJDEJKACDLEJAABCDEFGMHN $.
      $( [9-Jul-2011] $) $( [26-Nov-2005] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.  $d x y z D $.
    csbie2g.1 $e |- A e. _V $.
    csbie2g.2 $e |- B e. _V $.
    $( Conversion of implicit substitution to explicit substitution into a
       class (closed form of ~ csbie2 ). $)
    csbie2t $p |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) ->
                  [_ A / x ]_ [_ B / y ]_ C = D ) $=
      ( vz cv wceq wa wi wal wex csb isseti hba1 wcel ax-17 eeanv hbcsb1 hbcsbg
      hbeq cvv ax-mp csbeq1a sylan9eqr pm3.43 mpan eqtr2 syl6 a4s exlimd mp2ani
      syl5bir ) AJCKZBJDKZLZEFKZMZBNZANZUQAOZURBOZACBDEPZPZFKZACGQBDHQVDVELUSBO
      ZAOVCVHUQURABUAVCVIVHAVBARAIIVGFAICVFGIJZCSZATUBVJFSZATUDVBVIVHMAVBUSVHBV
      ABRBIIVGFCUESVJVGSZVMBNMGBAICVFUEVKBTBIDEHVJDSBTUBUCUFVLBTUDVAUSVHMBVAUSE
      VGKZUTLZVHUSVNMVAUSVOMURUQEVFVGBDEUGACVFUGUHUSVNUTUIUJEVGFUKULUMUNUMUNUPU
      O $.
      $( [3-Sep-2007] $)

    ${
      csbie2.3 $e |- ( ( x = A /\ y = B ) -> C = D ) $.
      $( Conversion of implicit substitution to explicit substitution into a
         class. $)
      csbie2 $p |- [_ A / x ]_ [_ B / y ]_ C = D $=
        ( cv wceq wa wi wal csb gen2 csbie2t ax-mp ) AJCKBJDKLEFKMZBNANACBDEOOF
        KSABIPABCDEFGHQR $.
        $( [27-Aug-2007] $)
    $}
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x z C $.  $d x y z V $.  $d y z W $.
    $( Lemma for ~ csbnestg . $)
    csbnestglem $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz wcel wal wa cv csb wi wceq simpl ax-17 hba1 hban cvv hbcsb1g hbcsbgd
      csbexg adantr a17d alrimiv alrimi csbeq1a csbeq1d ax-gen csbiegft syl3anc
      mpdan a1i ) CFIZDGIZAJZKZUOHLZBACDMZEMZIZVBAJNZHJZAJALCOZBDEMZVAONZAJZACV
      FMVAOUOUQPURVDAUOUQAUOAQUPARSZURVCHURUTTIVCACDFGUCURABHUTETVIUOUQBUOBQUQB
      QSUOUSUTIZVJAJNUQAHCDFUSCIAQUAUDURUSEIAUEUBUMUFUGVHURVGAVEBDUTEACDUHUIUJU
      NAHCVFVAFUKUL $.
      $( [23-Nov-2005] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x z C $.  $d w x y $.
    $( Nest the composition of two substitutions. $)
    csbnestg $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz vw wcel cvv wal csb wceq elex cv csbcog adantr csbnestglem mpan hba1
      alimi vex csbeq2dv ancoms csbexg alrimiv sylan2 csbeq1d 3eqtrd eqtr3d a4s
      wa csbeq2d syl 3eqtr3d syl2an ) CFJCKJZDKJZALZACBDEMZMZBACDMZEMZNDGJZALCF
      OVEUSADGOUBURUTUMZACHDBHPEMZMZMZHVCVGMZVBVDVFICAIPZVHMZMZVIVJURVMVINUTAIC
      VHKQRVFVMICHAVKDMZVGMZMZHICVNMZVGMZVJUTURVMVPNUTICVLVOKVKKJZUTVLVONIUCZAH
      VKDVGKKSTUDUEUTURVNKJZILVPVRNUTWAIVSUTWAVTAVKDKKUFTUGIHCVNVGKKSUHURVRVJNU
      TURHVQVCVGAICDKQUIRUJUKUTURVIVBNUTACVHVAKUSAUAUSVHVANABHDEKQULUNUEVFVCKJV
      JVDNACDKKUFBHVCEKQUOUPUQ $.
      $( [23-Nov-2005] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.  $d y W $.
    $( Nest the composition of two substitutions. $)
    csbnest1g $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) $=
      ( vy wcel cvv wal csb wceq elex wa cv wi simpl ax-17 hba1 hban csbexg a1i
      hbcsb1g hbcsb1gd syldan alrimiv alrimi csbeq1a csbeq1d csbiegft syl3anc
      ax-gen sylan ) BEHBIHZCFHZAJZABACDKZKAABCKZDKZLZBEMUNUPNZUNGOZUSHZVCAJPZG
      JZAJAOBLZUQUSLPZAJZUTUNUPQVAVEAUNUPAUNARZUOASTVAVDGUNUPURIHVDABCIFUAUNAGU
      RDIVIAGBCIVBBHARUCUDUEUFUGVHVAVGAVFACURDABCUHUIULUBAGBUQUSIUJUKUM $.
      $( [23-May-2006] $)
  $}

  ${
    $d x ph $.  $d x y $.
    $( Nest the composition of two substitutions. $)
    sbcnestg $p |- ( ( A e. V /\ A. x B e. W ) ->
                ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) $=
      ( wcel wal cvv wsbc csb wb elex alimi wa cab hba1 sbccsb2g a4s sbcbid syl
      ancoms sbcel12g adantr csbnestg eleq2d csbexg bitr4d 3bitrd sylan2 ) EGHZ
      BIDFHZEJHZBIZACEKZBDKZACBDELZKZMULUNBEGNOUMUOPZUQECEACQZLZHZBDKZURBDVBLZH
      ZUSUOUMUQVDMUOUPVCBDFUNBRUNUPVCMBACEJSTUAUCUMVDVFMUOBDEVBFUDUEUTVFURCURVA
      LZHZUSUTVEVGURBCDEVAFJUFUGUTURJHUSVHMBDEFJUHACURJSUBUIUJUK $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x y A $.
    $( Idempotent law for class substitutions. $)
    csbidmg $p |- ( A e. V -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) $=
      ( vy wcel cvv csb wceq elex wal ax-17 csbnest1g mpdan cv csbconstgf eqtrd
      csbeq1d syl ) BDFBGFZABABCHZHZUAIBDJTUBAABBHZCHZUATTAKUBUDITALABBCGGMNTAU
      CBCAEBBGEOBFALPRQS $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d x A $.  $d x C $.  $d x z D $.  $d x y $.
    csbco3g.1 $e |- ( x = A -> B = D ) $.
    $( Composition of two class substitutions. $)
    csbco3g $p |- ( ( A e. V /\ A. x B e. W ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ D / y ]_ C ) $=
      ( vz wcel wal wa csb csbnestg wceq cv wi ax-17 gen2 ax-gen mp3an23 adantr
      csbiegft csbeq1d eqtrd ) CGKZDHKALZMACBDENNBACDNZENZBFENZABCDEGHOUGUJUKPU
      HUGBUIFEUGJQFKZULALRZJLALAQCPDFPRZALUIFPUMAJULASTUNAIUAAJCDFGUDUBUEUCUF
      $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ph $.  $d x z C $.  $d x y $.
    sbcco3g.1 $e |- ( x = A -> B = C ) $.
    $( Composition of two substitutions. $)
    sbcco3g $p |- ( ( A e. V /\ A. x B e. W ) ->
                ( [ A / x ] [ B / y ] ph <-> [ C / y ] ph ) ) $=
      ( vz wcel wal wa wsbc csb sbcnestg wb wceq cv wi ax-17 gen2 ax-gen dfsbcq
      csbiegft mp3an23 syl adantr bitrd ) DGKZEHKBLZMACENBDNACBDEOZNZACFNZABCDE
      GHPUJUMUNQZUKUJULFRZUOUJJSFKZUQBLTZJLBLBSDREFRTZBLUPURBJUQBUAUBUSBIUCBJDE
      FGUEUFACULFUDUGUHUI $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x B $.  $d x D $.
    $( Special case related to ~ ra4sbc .  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    ra4csbela $p |- ( ( A e. B /\ A. x e. B C e. D ) -> [_ A / x ]_ C e. D ) $=
      ( wcel wral csb wsbc ra4sbc sbcel1g sylibd imp ) BCFZDEFZACGZABDHEFZNPOAB
      IQOABCJABDECKLM $.
      $( [18-Jan-2007] $) $( [10-Dec-2005] $)
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.  $d V z $.
    $( Move substitution into a class abstraction.  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    csbabg $p |- ( A e. V ->
                 [_ A / x ]_ { y | ph } = { y | [ A / x ] ph } ) $=
      ( vz wcel cab csb wsbc df-clab cvv vex sbccomg mpan syl5bb sbcbii sbcel2g
      cv wb 3bitr2rd eqrdv ) DEGZFBDACHZIZABDJZCHZUCFSZUGGZACUHJZBDJZUHUDGZBDJU
      HUEGUIUFCUHJZUCUKUFFCKUHLGUCUMUKTFMACBUHDLENOPULUJBDEAFCKQBDUHUDERUAUB $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d x v z $.  $d y v z $.  $d A w v z $.  $d B w v z $.  $d ph v z $.
    $d ps v z $.
    cbvralcsf.1 $e |- ( x = y -> A = B ) $.
    cbvralcsf.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    cbvralcsf.3 $e |- ( w e. A -> A. y w e. A ) $.
    cbvralcsf.4 $e |- ( w e. B -> A. x w e. B ) $.
    cbvralcsf.5 $e |- ( ph -> A. y ph ) $.
    cbvralcsf.6 $e |- ( ps -> A. x ps ) $.
    $( A more general version of ~ cbvralf that doesn't require ` A ` and ` B `
       to be distinct from ` x ` or ` y ` .  Changes bound variables using
       implicit substitution.  (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvralcsf $p |- ( A. x e. A ph <-> A. y e. B ps ) $=
      ( vz vv cv wcel wi wal ax-17 wral csb wsbc hbcsb1 hblem hbs1 hbim wceq id
      vex csbeq1a eleq12d sbequ12 imbi12d cbval hbcsbg ax-mp hbsb csbeq1 df-csb
      cvv cab eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb bitri df-ral
      3bitr4i ) CPZFQZARZCSZDPZGQZBRZDSZACFUABDGUAVQNPZCWBFUBZQZACWBUCZRZNSWAVP
      WFCNVPNTWDWECCONWCCOWBFNUJZOPZWBQZCTUDUEACNUFUGVNWBUHZVOWDAWEWJVNWBFWCWJU
      ICWBFUKULACNUMUNUOWFVTNDWDWEDDONWCWBVAQWHWCQZWKDSRWGDCOWBFVAWIDTDEOFJUEUP
      UQUEACNDLURUGVTNTWBVRUHZWDVSWEBWLWBVRWCGWLUIWLWCCVRFUBZGCWBVRFUSWMWHFQZCV
      RUCZOVBGCOVRFUTWOOGWOWHGQZWNWPCDCEOGKUEVNVRUHFGWHHVCVDVEVFVGVHULWLWEACVRU
      CBANDCVIABCDMIVDVJUNUOVKACFVLBDGVLVM $.
      $( [13-Jul-2011] $)

    $( A more general version of ~ cbvrexf that has no distinct variable
       restrictions.  Changes bound variables using implicit substitution.
       (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvrexcsf $p |- ( E. x e. A ph <-> E. y e. B ps ) $=
      ( vz vv cv wcel wa ax-17 hblem wex wrex csb wsbc hbcsb1 hbs1 hban wceq id
      vex csbeq1a eleq12d sbequ12 anbi12d cbvex cvv wi hbcsbg ax-mp hbsb csbeq1
      wal cab df-csb eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb bitri
      df-rex 3bitr4i ) CPZFQZARZCUAZDPZGQZBRZDUAZACFUBBDGUBVSNPZCWDFUCZQZACWDUD
      ZRZNUAWCVRWHCNVRNSWFWGCCONWECOWDFNUJZOPZWDQZCSUETACNUFUGVPWDUHZVQWFAWGWLV
      PWDFWEWLUICWDFUKULACNUMUNUOWHWBNDWFWGDDONWEWDUPQWJWEQZWMDVBUQWIDCOWDFUPWK
      DSDEOFJTURUSTACNDLUTUGWBNSWDVTUHZWFWAWGBWNWDVTWEGWNUIWNWECVTFUCZGCWDVTFVA
      WOWJFQZCVTUDZOVCGCOVTFVDWQOGWQWJGQZWPWRCDCEOGKTVPVTUHFGWJHVEVFVGVHVIVJULW
      NWGACVTUDBANDCVKABCDMIVFVLUNUOVMACFVNBDGVNVO $.
      $( [13-Jul-2011] $)

    $( A more general version of ~ cbvreuv that has no distinct variable
       rextrictions.  Changes bound variables using implicit substitution.
       (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvreucsf $p |- ( E! x e. A ph <-> E! y e. B ps ) $=
      ( vz vv cv wcel wa ax-17 hblem weu wreu csb wsbc hbcsb1 hbs1 hban wceq id
      vex csbeq1a eleq12d sbequ12 anbi12d cbveu cvv wi hbcsbg ax-mp hbsb csbeq1
      wal cab df-csb eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb bitri
      df-reu 3bitr4i ) CPZFQZARZCUAZDPZGQZBRZDUAZACFUBBDGUBVSNPZCWDFUCZQZACWDUD
      ZRZNUAWCVRWHCNVRNSWFWGCCONWECOWDFNUJZOPZWDQZCSUETACNUFUGVPWDUHZVQWFAWGWLV
      PWDFWEWLUICWDFUKULACNUMUNUOWHWBNDWFWGDDONWEWDUPQWJWEQZWMDVBUQWIDCOWDFUPWK
      DSDEOFJTURUSTACNDLUTUGWBNSWDVTUHZWFWAWGBWNWDVTWEGWNUIWNWECVTFUCZGCWDVTFVA
      WOWJFQZCVTUDZOVCGCOVTFVDWQOGWQWJGQZWPWRCDCEOGKTVPVTUHFGWJHVEVFVGVHVIVJULW
      NWGACVTUDBANDCVKABCDMIVFVLUNUOVMACFVNBDGVNVO $.
      $( [13-Jul-2011] $)

    $( A more general version of ~ cbvrab with no distinct variable
       restrictions.  (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvrabcsf $p |- { x e. A | ph } = { y e. B | ps } $=
      ( vz vv cv wcel cab ax-17 hblem wa crab csb wsbc hbcsb1 hbs1 hban wceq id
      vex csbeq1a eleq12d sbequ12 anbi12d cbvab cvv wi hbcsbg ax-mp hbsb csbeq1
      df-csb eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb eqtri 3eqtr4i
      wal df-rab ) CPZFQZAUAZCRZDPZGQZBUAZDRZACFUBBDGUBVRNPZCWCFUCZQZACWCUDZUAZ
      NRWBVQWGCNVQNSWEWFCCONWDCOWCFNUJZOPZWCQZCSUETACNUFUGVOWCUHZVPWEAWFWKVOWCF
      WDWKUICWCFUKULACNUMUNUOWGWANDWEWFDDONWDWCUPQWIWDQZWLDVMUQWHDCOWCFUPWJDSDE
      OFJTURUSTACNDLUTUGWANSWCVSUHZWEVTWFBWMWCVSWDGWMUIWMWDCVSFUCZGCWCVSFVAWNWI
      FQZCVSUDZORGCOVSFVBWPOGWPWIGQZWOWQCDCEOGKTVOVSUHFGWIHVCVDVEVFVGVHULWMWFAC
      VSUDBANDCVIABCDMIVDVJUNUOVKACFVNBDGVNVL $.
      $( [13-Jul-2011] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             New Foundations Set Theory - add Nand set axiom
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

  ${ $d x y z w $.
     $( State the Nand axiom from Haliperin. This axiom guarantees 
     	a set containing precisely the sets that are not members of
	both ` x ` and ` y ` . $)
     ax-nin $a |- E. z A. w ( w e. z <-> ( w e. x -/\ w e. y ) ) $.
  $}

  ${ $d x z w t $. $d y z w t $.
     $( Restate ~ ax-nin without the distinctness requirement on ` x ` and
     	` y ` . $)
     axnin2 $p |- E. z A. w ( w e. z <-> ( w e. x -/\ w e. y ) ) $=
       ( vt wel wnand wb wal wex cv eleq2 nandbi1d bibi2d albidv exbidv ax-nin
       weq chvarv ) DCFZDEFZDBFZGZHZDIZCJTDAFZUBGZHZDIZCJEAEARZUEUICUJUDUHDUJUC
       UGTUAUFUBUJEKAKDKLMNOPEBCDQS $.
       $( [18-Nov-2014] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The nand class operation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c -i^i $.

  $( Declare the syntax for the anti-intersection of two classes. $)
  cnin $a class ( A -i^i B ) $.

  ${ $d A x y $. $d B x y $.
     $( Soundness justification theorem for ~ df-nin . $)
     ninjust $p |- { x | ( x e. A -/\ x e. B ) } = 
     		      { y | ( y e. A -/\ y e. B ) } $=
       ( cv wcel wnand weq eleq1 nandbi12d cbvabv ) AEZCFZLDFZGBEZCFZODFZGABMPN
       QABHLOCILODIJK $.
       $( [18-Nov-2014] $)
  $}

  ${ $d A x $. $d B x $.
     $( Define the anti-intersection of two classes. $)
     df-nin $a |- ( A -i^i B ) = { x | ( x e. A -/\ x e. B ) } $.
  $}

  ${ $d A x $. $d B x $. $d C x $.
    $( Membership in the anti-intersection of two classes. $)
    elnin $p |- ( A e. V -> ( A e. ( B -i^i C ) <-> ( A e. B -/\ A e. C ) ) ) $=
      ( vx cv wcel wnand cnin wceq eleq1 nandbi12d df-nin elab2g ) EFZBGZOCGZHA
      BGZACGZHEABCIDPRQSOAJOABKOACKLEBCMN $.
      $( [18-Nov-2014] $)
  $}

  $( Alternate form of membership in the anti-intersection of two classes. $)
  elnin2 $p |- ( A e. V -> ( A e. ( B -i^i C ) <-> 
  	       	 -. ( A e. B /\ A e. C ) ) ) $=
    ( wcel cnin wnand wa wn elnin df-nand syl6bb ) ADEABCFEABEZACEZGMNHIABCDJMN
    KL $.
    $( [18-Nov-2014] $)


  ${ $d A x $. $d B x $.
     $( Anti-intersection commutes. $)
     nincom $p |- ( A -i^i B ) = ( B -i^i A ) $=
       ( vx cv wcel wnand cab cnin nandcom abbii df-nin 3eqtr4i ) CDZAEZMBEZFZC
       GONFZCGABHBAHPQCNOIJCABKCBAKL $.
       $( [18-Nov-2014] $)
  $}

  ${ $d A x $. $d B x $. $d C x $. 
     $( Substitution law for anti-intersection. $)
     nineq1 $p |- ( A = B -> ( A -i^i C ) = ( B -i^i C ) ) $=
       ( vx wceq cv wcel wnand cab cnin eleq2 nandbi1d abbidv df-nin 3eqtr4g )
       ABEZDFZAGZQCGZHZDIQBGZSHZDIACJBCJPTUBDRUASPABQKLMDACNDBCNO $.
       $( [18-Nov-2014] $)

  $}

  $( Substitution law for anti-intersection. $)
  nineq2 $p |- ( A = B -> ( C -i^i A ) = ( C -i^i B ) ) $=
    ( wceq cnin nineq1 nincom 3eqtr3g ) ABDACEBCECAECBEABCFACGBCGH $.
    $( [18-Nov-2014] $)

  $( Substitution law for anti-intersection. $)
  nineq12 $p |- ( ( A = B /\ C = D ) -> ( A -i^i C ) = ( B -i^i D ) ) $=
    ( wceq cnin nineq1 nineq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [18-Nov-2014] $)



  ${ $d A x y $. $d B x y $. $d x y z w $.
     $( If ` A ` and ` B ` are sets, then so is ` ( A -i^i B ) ` . $)
     ninexg $p |- ( ( A e. V /\ B e. W ) -> ( A -i^i B ) e. _V ) $=
       ( vx vy vz vw cv cnin cvv wcel wceq nineq1 eleq1d wex wel wb wal mpbir
       nineq2 wnand axnin2 dfcleq elnin ax-mp bibi2i albii bitri exbii vtocl2g
       vex isset ) EIZFIZJZKLZAUOJZKLABJZKLEFABCDUNAMUPURKUNAUONOUOBMURUSKUOBAU
       AOUQGIZUPMZGPZVBHGQZHEQHFQUBZRZHSZGPEFGHUCVAVFGVAVCHIZUPLZRZHSVFHUTUPUDV
       IVEHVHVDVCVGKLVHVDRHULVGUNUOKUEUFUGUHUIUJTGUPUMTUK $.
       $( [18-Nov-2014] $)
  $}

  ${
     ninex.1 $e |- A e. _V $.
     ninex.2 $e |- B e. _V $.

     $( If ` A ` and ` B ` are sets, then so is ` ( A -i^i B ) ` . $)
     ninex $p |- ( A -i^i B ) e. _V $=
       ( cvv wcel cnin ninexg mp2an ) AEFBEFABGEFCDABEEHI $.
       $( [18-Nov-2014] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Define basic set operations and relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols. $)
  $c ~ $. $( Tilde (complement) $)
  $c \ $. $( Backslash (difference) $)
  $c u. $. $( Cup (union) $)
  $c i^i $. $( Cap (intersection) $)
  $c C_ $. $( Subclass or subset symbol $)
  $c C. $. $( Proper subclass or subset symbol $)

  $( Extend class notation to include class complement (read: "the complement
     of ` A ` "). $)
  ccompl $a class ~ A $.

  $( Extend class notation to include the intersection of two classes
     (read:  " ` A ` intersect ` B ` "). $)
  cin $a class ( A i^i B ) $.

  $( Extend class notation to include class difference (read:  " ` A ` minus
     ` B ` "). $)
  cdif $a class ( A \ B ) $.

  $( Extend class notation to include union of two classes (read:  " ` A `
     union ` B ` "). $)
  cun $a class ( A u. B ) $.

  $( Extend wff notation to include the subclass relation.  This is
     read " ` A ` is a subclass of ` B ` " or " ` B ` includes ` A ` ."  When
     ` A ` exists as a set, it is also read " ` A ` is a subset of ` B ` ." $)
  wss $a wff A C_ B $.

  $( Extend wff notation with proper subclass relation. $)
  wpss $a wff A C. B $.

  $( Define class complement. $)
  df-compl $a |- ~ A = ( A -i^i A ) $.

  $( Define class intersection. $)
  df-in $a |- ( A i^i B ) = ~ ( A -i^i B ) $.

  $( Define class difference. $)
  df-dif $a |- ( A \ B ) = ( A i^i ~ B ) $.

  $( Define class union. $)
  df-un $a |- ( A u. B ) = ( ~ A -i^i ~ B ) $.

  $( Define the subclass relationship.  Exercise 9 of [TakeutiZaring] p. 18.
     For a more traditional definition, but requiring a dummy variable, see
     ~ dfss2 .  Other possible definitions are given by ~ dfss3 , ~ dfss4 ,
     ~ sspss , ~ ssequn1 , ~ ssequn2 , ~ sseqin2 , and ~ ssdif0 . $)
  df-ss $a |- ( A C_ B <-> ( A i^i B ) = A ) $.

  $( A frequently-used variant of subclass definition ~ df-ss . $)
  dfss $p |- ( A C_ B <-> A = ( A i^i B ) ) $=
    ( wss cin wceq df-ss eqcom bitri ) ABCABDZAEAIEABFIAGH $.
    $( [3-Sep-2004] $)

  $( Define proper subclass relationship between two classes.  Definition 5.9
     of [TakeutiZaring] p. 17.  Other possible definitions are given by
     ~ dfpss2 and ~ dfpss3 . $)
  df-pss $a |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) $.

  $( Membership in class complement. $)
  elcompl $p |- ( A e. V -> ( A e. ~ B <-> -. A e. B ) ) $=
    ( wcel wnand ccompl wn elnin df-compl eleq2i wa df-nand anidm notbii bitr2i
    cnin 3bitr4g ) ACDABBPZDABDZSEZABFZDSGZABBCHUARABIJTSSKZGUBSSLUCSSMNOQ $.
    $( [18-Nov-2014] $)

  $( Membership in class intersection. $)
  elin $p |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) $=
    ( cin wcel cvv wa elex adantr cnin ccompl wnand wn elnin notbid bitrd df-in
    elcompl eleq2i df-nand con2bii 3bitr4g pm5.21nii ) ABCDZEZAFEZABEZACEZGZAUD
    HUGUFUHABHIUFABCJZKZEZUGUHLZMZUEUIUFULAUJEZMUNAUJFRUFUOUMABCFNOPUDUKABCQSUM
    UIUGUHTUAUBUC $.
    $( [18-Nov-2014] $)

  $( Membership in class union. $)
  elun $p |- ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) $=
    ( cun wcel cvv wo elex jaoi ccompl cnin wn wa elnin2 elcompl anbi12d notbid
    bitrd df-un eleq2i oran 3bitr4g pm5.21nii ) ABCDZEZAFEZABEZACEZGZAUDHUGUFUH
    ABHACHIUFABJZCJZKZEZUGLZUHLZMZLZUEUIUFUMAUJEZAUKEZMZLUQAUJUKFNUFUTUPUFURUNU
    SUOABFOACFOPQRUDULABCSTUGUHUAUBUC $.
    $( [18-Nov-2014] $)

  $( Membership in a class difference. $)
  eldif $p |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) $=
    ( cdif wcel ccompl cin wa wn df-dif eleq2i elin elcompl pm5.32i 3bitri ) AB
    CDZEABCFZGZEABEZAQEZHSACEIZHPRABCJKABQLSTUAACBMNO $.
    $( [18-Nov-2014] $)

  ${ $d x A $.
  $( Define complement via class difference. $)
  dfcompl2 $p |- ~ A = ( _V \ A ) $=
    ( vx ccompl cvv cdif cv wcel wn wb elcompl ax-mp eldif mpbiran bitr4i eqriv
    vex ) BACZDAEZBFZQGZSAGHZSRGZSDGZTUAIBPZSADJKUBUCUASDALUDMNO $.
    $( [18-Nov-2014] $)
  $}

  ${ $d A x $.
    $( The universe contains every set. $)
    eqv $p |- ( A = _V <-> A. x x e. A ) $=
      ( cvv wceq cv wcel wb wal dfcleq vex tbt albii bitr4i ) BCDAEZBFZNCFZGZAH
      OAHABCIOQAPOAJKLM $.
      $( [11-Sep-2006] $)
  $}

  ${ $d x A $.
     $( Alternate definition of ` _V ` . $)
     dfv2 $p |- _V = ( A -i^i ~ A ) $=
       ( vx ccompl cnin cvv wceq cv eqv wn wa pm3.24 wb vex wnand elnin df-nand
       wcel elcompl anbi2d notbid syl5bb bitrd ax-mp mpbir mpgbir eqcomi ) AACZ
       DZEUHEFBGZUHQZBBUHHUJUIAQZUKIZJZIZUKKUIEQZUJUNLBMUOUJUKUIUGQZNZUNUIAUGEO
       UQUKUPJZIUOUNUKUPPUOURUMUOUPULUKUIAERSTUAUBUCUDUEUF $.
       $( [18-Nov-2014] $)
  $}

  $( Substitution for class complmenent. $)
  compleq $p |- ( A = B -> ~ A = ~ B ) $=
    ( wceq cnin ccompl nineq12 anidms df-compl 3eqtr4g ) ABCZAADZBBDZAEBEJKLCAB
    ABFGAHBHI $.
    $( [18-Nov-2014] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Abstraction form of binary class operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${ $d x A $.  $d x B $.
     $( Defintion of class difference using abstractions. $)
     dfdif $p |- ( A \ B ) = { x | ( x e. A /\ -. x e. B ) } $=
       ( cv wcel wn wa cdif eldif abbi2i ) ADZBEKCEFGABCHKBCIJ $.
       $( [18-Nov-2014] $)

     $( Define the intersection of two classes using abstractions. $)
     dfin $p |- ( A i^i B ) = { x | ( x e. A /\ x e. B ) } $=
       ( cv wcel wa cin elin abbi2i ) ADZBEJCEFABCGJBCHI $.
       $( [18-Nov-2014] $)

     $( Define the union of two classes using abstractions. $)
     dfun $p |- ( A u. B ) = { x | ( x e. A \/ x e. B ) } $=
       ( cv wcel wo cun elun abbi2i ) ADZBEJCEFABCGJBCHI $.
       $( [18-Nov-2014] $)

     $( Alternate definition for the intersection of two classes. $)
     dfin5 $p |- ( A i^i B ) = { x e. A | x e. B } $=
      ( cin cv wcel wa cab crab dfin df-rab eqtr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
      $( [6-Jul-2005] $)

    $d x A $.  $d x B $.
    $( Alternate definition of class difference. $)
    dfdif2 $p |- ( A \ B ) = { x e. A | -. x e. B } $=
      ( cdif cv wcel wn wa cab crab dfdif df-rab eqtr4i ) BCDAEZBFNCFGZHAIOABJ
      ABCKOABLM $.
      $( [25-Mar-2004] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Sethood of boolean operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( If ` A ` is a set, then so is ` ~ A ` . $)
  complexg $p |- ( A e. V -> ~ A e. _V ) $=
    ( wcel ccompl cnin cvv df-compl ninexg anidms syl5eqel ) ABCZADAAEZFAGKLFCA
    ABBHIJ $.
    $( [18-Nov-2014] $)

  ${
     complex.1 $e |- A e. _V $.

     $( If ` A ` is a set, then so is ` ~ A ` . $)
     complex $p |- ~ A e. _V $=
       ( cvv wcel ccompl complexg ax-mp ) ACDAECDBACFG $.
       $( [18-Nov-2014] $)
  $}

  $( The universal class is a set. $)
  vvex $p |- _V e. _V $=
    ( vx cvv cv ccompl cnin dfv2 vex complex ninex eqeltri ) BACZKDZEBKFKLAGZKM
    HIJ $.
    $( [18-Nov-2014] $)

  $( The intersection of two sets is a set. $)
  inexg $p |- ( ( A e. V /\ B e. W ) -> ( A i^i B ) e. _V ) $=
    ( wcel wa cin cnin ccompl cvv df-in ninexg complexg syl syl5eqel ) ACEBDEFZ
    ABGABHZIZJABKPQJERJEABCDLQJMNO $.
    $( [18-Nov-2014] $)

  $( The union of two sets is a set. $)
  unexg $p |- ( ( A e. V /\ B e. W ) -> ( A u. B ) e. _V ) $=
    ( wcel wa cun ccompl cnin cvv df-un complexg ninexg syl2an syl5eqel ) ACEZB
    DEZFABGAHZBHZIZJABKPRJESJETJEQACLBDLRSJJMNO $.
    $( [18-Nov-2014] $)

  $( The difference of two sets is a set. $)
  difexg $p |- ( ( A e. V /\ B e. W ) -> ( A \ B ) e. _V ) $=
    ( wcel wa cdif ccompl cin cvv df-dif complexg inexg sylan2 syl5eqel ) ACEZB
    DEZFABGABHZIZJABKQPRJESJEBDLARCJMNO $.
    $( [18-Nov-2014] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Subclasses and subsets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of the subclass relationship between two classes.
       Definition 5.9 of [TakeutiZaring] p. 17. $)
    dfss2 $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( cin wceq cv wcel wb wal wss wi dfcleq dfss wa pm4.71 elin bibi2i bitr4i
      albii 3bitr4i ) BBCDZEAFZBGZUBUAGZHZAIBCJUCUBCGZKZAIABUALBCMUGUEAUGUCUCUF
      NZHUEUCUFOUDUHUCUBBCPQRST $.
      $( [8-Jan-2002] $)

    $( Alternate definition of subclass relationship. $)
    dfss3 $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2 df-ral bitr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d z y A $.  $d z y B $.  $d x z $.
    dfss2f.1 $e |- ( y e. A -> A. x y e. A ) $.
    dfss2f.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions.  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 27-Aug-2011.) $)
    dfss2f $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( vz wss cv wcel wi wal dfss2 hblem hbim ax-17 wceq eleq1 imbi12d cbval
      bitri ) CDHGIZCJZUBDJZKZGLAIZCJZUFDJZKZALGCDMUEUIGAUCUDAABGCENABGDFNOUIGP
      UBUFQUCUGUDUHUBUFCRUBUFDRSTUA $.
      $( [27-Aug-2011] $) $( [3-Jul-1994] $)

    $d y A $.  $d y B $.

    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions. $)
    dfss3f $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2f df-ral bitr4i ) CDGAHZCIPDIZJAKQACLABCDE
      FMQACNO $.
      $( [27-Aug-2011] $) $( [20-Mar-2004] $)

    $( If ` x ` is not free in ` A ` and ` B ` , it is not free in
       ` A C_ B ` . $)
    hbss $p |- ( A C_ B -> A. x A C_ B ) $=
      ( wss cv wcel wi wal dfss2f hba1 hbxfrbi ) CDGAHZCIODIJZAKAABCDEFLPAMN $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership relationships follow from a subclass relationship. $)
    ssel $p |- ( A C_ B -> ( C e. A -> C e. B ) ) $=
      ( vx wss cv wceq wa wex wi wal dfss2 biimpi 19.21bi anim2d eximdv df-clel
      wcel 3imtr4g ) ABEZDFZCGZUAARZHZDIUBUABRZHZDICARCBRTUDUFDTUCUEUBTUCUEJZDT
      UGDKDABLMNOPDCAQDCBQS $.
      $( [5-Aug-1993] $)
  $}

  $( Membership relationships follow from a subclass relationship. $)
  ssel2 $p |- ( ( A C_ B /\ C e. A ) -> C e. B ) $=
    ( wss wcel ssel imp ) ABDCAECBEABCFG $.
    $( [7-Jun-2004] $)

  ${
    sseli.1 $e |- A C_ B $.
    $( Membership inference from subclass relationship. $)
    sseli $p |- ( C e. A -> C e. B ) $=
      ( wss wcel wi ssel ax-mp ) ABECAFCBFGDABCHI $.
      $( [5-Aug-1993] $)
    ${
      sselii.2 $e |- C e. A $.
      $( Membership inference from subclass relationship. $)
      sselii $p |- C e. B $=
        ( wcel sseli ax-mp ) CAFCBFEABCDGH $.
        $( [31-May-1999] $)
    $}

    ${
      sseldi.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship. $)
      sseldi $p |- ( ph -> C e. B ) $=
        ( wcel sseli syl ) ADBGDCGFBCDEHI $.
        $( [25-Jun-2014] $)
    $}
  $}

  ${
    sseld.1 $e |- ( ph -> A C_ B ) $.
    $( Membership deduction from subclass relationship. $)
    sseld $p |- ( ph -> ( C e. A -> C e. B ) ) $=
      ( wss wcel wi ssel syl ) ABCFDBGDCGHEBCDIJ $.
      $( [15-Nov-1995] $)
    $( Membership deduction from subclass relationship. $)
    sselda $p |- ( ( ph /\ C e. A ) -> C e. B ) $=
      ( wcel sseld imp ) ADBFDCFABCDEGH $.
      $( [26-Jun-2014] $)
    ${
      sseldd.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship. $)
      sseldd $p |- ( ph -> C e. B ) $=
        ( wcel sseld mpd ) ADBGDCGFABCDEHI $.
        $( [14-Dec-2004] $)
    $}
  $}

  ${
    $d x A $.  $d x B $.
    ssriv.1 $e |- ( x e. A -> x e. B ) $.
    $( Inference rule based on subclass definition. $)
    ssriv $p |- A C_ B $=
      ( wss cv wcel wi dfss2 mpgbir ) BCEAFZBGKCGHAABCIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrdv.1 $e |- ( ph -> ( x e. A -> x e. B ) ) $.
    $( Deduction rule based on subclass definition. $)
    ssrdv $p |- ( ph -> A C_ B ) $=
      ( cv wcel wi wal wss alrimiv dfss2 sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM $.
      $( [15-Nov-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Transitivity of subclasses.  Exercise 5 of [TakeutiZaring] p. 17.  (The
       proof was shortened by Andrew Salmon, 14-Jun-2011.) $)
    sstr2 $p |- ( A C_ B -> ( B C_ C -> A C_ C ) ) $=
      ( vx wss cv wcel wi wal ssel imim1d alimdv dfss2 3imtr4g ) ABEZDFZBGZPCGZ
      HZDIPAGZRHZDIBCEACEOSUADOTQRABPJKLDBCMDACMN $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  $( Transitivity of subclasses.  Theorem 6 of [Suppes] p. 23. $)
  sstr $p |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) $=
    ( wss sstr2 imp ) ABDBCDACDABCEF $.
    $( [5-Sep-2003] $)

  ${
    sstri.1 $e |- A C_ B $.
    sstri.2 $e |- B C_ C $.
    $( Subclass transitivity inference. $)
    sstri $p |- A C_ C $=
      ( wss sstr2 mp2 ) ABFBCFACFDEABCGH $.
      $( [5-May-2000] $)
  $}

  ${
    sstrd.1 $e |- ( ph -> A C_ B ) $.
    sstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction. $)
    sstrd $p |- ( ph -> A C_ C ) $=
      ( wss sstr syl2anc ) ABCGCDGBDGEFBCDHI $.
      $( [2-Jun-2004] $)
  $}

  ${
    syl5ss.1 $e |- A C_ B $.
    syl5ss.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction. $)
    syl5ss $p |- ( ph -> A C_ C ) $=
      ( wss a1i sstrd ) ABCDBCGAEHFI $.
      $( [6-Feb-2014] $)
  $}

  ${
    syl6ss.1 $e |- ( ph -> A C_ B ) $.
    syl6ss.2 $e |- B C_ C $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl6ss $p |- ( ph -> A C_ C ) $=
      ( wss a1i sstrd ) ABCDECDGAFHI $.
      $( [3-Jun-2011] $)
  $}

  ${
    sylan9ss.1 $e |- ( ph -> A C_ B ) $.
    sylan9ss.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction.  (The proof was shortened by Andrew
       Salmon, 14-Jun-2011.) $)
    sylan9ss $p |- ( ( ph /\ ps ) -> A C_ C ) $=
      ( wss sstr syl2an ) ACDHDEHCEHBFGCDEIJ $.
      $( [14-Jun-2011] $) $( [27-Sep-2004] $)
  $}

  ${
    sylan9ssr.1 $e |- ( ph -> A C_ B ) $.
    sylan9ssr.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction. $)
    sylan9ssr $p |- ( ( ps /\ ph ) -> A C_ C ) $=
      ( wss sylan9ss ancoms ) ABCEHABCDEFGIJ $.
      $( [27-Sep-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subclass relationship is antisymmetric.  Compare Theorem 4 of
       [Suppes] p. 22. $)
    eqss $p |- ( A = B <-> ( A C_ B /\ B C_ A ) ) $=
      ( vx cv wcel wb wal wi wa wceq wss albiim dfcleq dfss2 anbi12i 3bitr4i )
      CDZAEZQBEZFCGRSHCGZSRHCGZIABJABKZBAKZIRSCLCABMUBTUCUACABNCBANOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqssi.1 $e |- A C_ B $.
    eqssi.2 $e |- B C_ A $.
    $( Infer equality from two subclass relationships.  Compare Theorem 4 of
       [Suppes] p. 22. $)
    eqssi $p |- A = B $=
      ( wceq wss eqss mpbir2an ) ABEABFBAFABGCDH $.
      $( [9-Sep-1993] $)
  $}

  ${
    eqssd.1 $e |- ( ph -> A C_ B ) $.
    eqssd.2 $e |- ( ph -> B C_ A ) $.
    $( Equality deduction from two subclass relationships.  Compare Theorem 4
       of [Suppes] p. 22. $)
    eqssd $p |- ( ph -> A = B ) $=
      ( wss wceq eqss sylanbrc ) ABCFCBFBCGDEBCHI $.
      $( [27-Jun-2004] $)
  $}

  ${
    $d A x $.
    $( Any class is a subclass of itself.  Exercise 10 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 14-Jun-2011.) $)
    ssid $p |- A C_ A $=
      ( vx cv wcel id ssriv ) BAABCADEF $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.
    $( Any class is a subclass of the universal class. $)
    ssv $p |- A C_ _V $=
      ( vx cvv cv elex ssriv ) BACBDAEF $.
      $( [31-Oct-1995] $)
  $}

  $( Equality theorem for subclasses.  (The proof was shortened by Andrew
     Salmon, 21-Jun-2011.) $)
  sseq1 $p |- ( A = B -> ( A C_ C <-> B C_ C ) ) $=
    ( wceq wss wa wb eqss wi sstr2 adantl adantr impbid sylbi ) ABDABEZBAEZFZAC
    EZBCEZGABHQRSPRSIOBACJKOSRIPABCJLMN $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Equality theorem for the subclass relationship. $)
  sseq2 $p |- ( A = B -> ( C C_ A <-> C C_ B ) ) $=
    ( wss wa wi wceq wb sstr2 com12 anim12i eqss dfbi2 3imtr4i ) ABDZBADZECADZC
    BDZFZRQFZEABGQRHOSPTQORCABIJRPQCBAIJKABLQRMN $.
    $( [25-Jun-1998] $)

  $( Equality theorem for the subclass relationship. $)
  sseq12 $p |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) $=
    ( wceq wss sseq1 sseq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [31-May-1999] $)

  ${
    sseq1i.1 $e |- A = B $.
    $( An equality inference for the subclass relationship. $)
    sseq1i $p |- ( A C_ C <-> B C_ C ) $=
      ( wceq wss wb sseq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [18-Aug-1993] $)

    $( An equality inference for the subclass relationship. $)
    sseq2i $p |- ( C C_ A <-> C C_ B ) $=
      ( wceq wss wb sseq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [30-Aug-1993] $)

    ${
      sseq12i.2 $e |- C = D $.
      $( An equality inference for the subclass relationship.  (The proof was
         shortened by Eric Schmidt, 26-Jan-2007.) $)
      sseq12i $p |- ( A C_ C <-> B C_ D ) $=
        ( wceq wss wb sseq12 mp2an ) ABGCDGACHBDHIEFABCDJK $.
        $( [27-Jan-2007] $) $( [31-May-1999] $)
    $}
  $}

  ${
    sseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the subclass relationship. $)
    sseq1d $p |- ( ph -> ( A C_ C <-> B C_ C ) ) $=
      ( wceq wss wb sseq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [14-Aug-1994] $)

    $( An equality deduction for the subclass relationship. $)
    sseq2d $p |- ( ph -> ( C C_ A <-> C C_ B ) ) $=
      ( wceq wss wb sseq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [14-Aug-1994] $)

    ${
      sseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the subclass relationship. $)
      sseq12d $p |- ( ph -> ( A C_ C <-> B C_ D ) ) $=
        ( wss sseq1d sseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [31-May-1999] $)
    $}
  $}

  ${
    eqsstr.1 $e |- A = B $.
    eqsstr.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstri $p |- A C_ C $=
      ( wss sseq1i mpbir ) ACFBCFEABCDGH $.
      $( [16-Jul-1995] $)
  $}

  ${
    eqsstr3.1 $e |- B = A $.
    eqsstr3.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstr3i $p |- A C_ C $=
      ( eqcomi eqsstri ) ABCBADFEG $.
      $( [19-Oct-1999] $)
  $}

  ${
    sseqtr.1 $e |- A C_ B $.
    sseqtr.2 $e |- B = C $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtri $p |- A C_ C $=
      ( wss sseq2i mpbi ) ABFACFDBCAEGH $.
      $( [28-Jul-1995] $)
  $}

  ${
    sseqtr4.1 $e |- A C_ B $.
    sseqtr4.2 $e |- C = B $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtr4i $p |- A C_ C $=
      ( eqcomi sseqtri ) ABCDCBEFG $.
      $( [4-Apr-1995] $)
  $}

  ${
    eqsstrd.1 $e |- ( ph -> A = B ) $.
    eqsstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    eqsstr3d.1 $e |- ( ph -> B = A ) $.
    eqsstr3d.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstr3d $p |- ( ph -> A C_ C ) $=
      ( eqcomd eqsstrd ) ABCDACBEGFH $.
      $( [25-Apr-2004] $)
  $}

  ${
    sseqtrd.1 $e |- ( ph -> A C_ B ) $.
    sseqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    sseqtr4d.1 $e |- ( ph -> A C_ B ) $.
    sseqtr4d.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtr4d $p |- ( ph -> A C_ C ) $=
      ( eqcomd sseqtrd ) ABCDEADCFGH $.
      $( [25-Apr-2004] $)
  $}

  ${
    3sstr3.1 $e |- A C_ B $.
    3sstr3.2 $e |- A = C $.
    3sstr3.3 $e |- B = D $.
    $( Substitution of equality in both sides of a subclass relationship.  (The
       proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr3i $p |- C C_ D $=
      ( wss sseq12i mpbi ) ABHCDHEACBDFGIJ $.
      $( [27-Jan-2007] $) $( [13-Jan-1996] $)
  $}

  ${
    3sstr4.1 $e |- A C_ B $.
    3sstr4.2 $e |- C = A $.
    3sstr4.3 $e |- D = B $.
    $( Substitution of equality in both sides of a subclass relationship.  (The
       proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4i $p |- C C_ D $=
      ( wss sseq12i mpbir ) CDHABHECADBFGIJ $.
      $( [27-Jan-2007] $) $( [13-Jan-1996] $)
  $}

  ${
    3sstr3g.1 $e |- ( ph -> A C_ B ) $.
    3sstr3g.2 $e |- A = C $.
    3sstr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a subclass relationship. $)
    3sstr3g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylib ) ABCIDEIFBDCEGHJK $.
      $( [1-Oct-2000] $)
  $}

  ${
    3sstr4g.1 $e |- ( ph -> A C_ B ) $.
    3sstr4g.2 $e |- C = A $.
    3sstr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a subclass relationship.
       (The proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylibr ) ABCIDEIFDBECGHJK $.
      $( [27-Jan-2007] $) $( [16-Aug-1994] $)
  $}

  ${
    3sstr3d.1 $e |- ( ph -> A C_ B ) $.
    3sstr3d.2 $e |- ( ph -> A = C ) $.
    3sstr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a subclass relationship. $)
    3sstr3d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbid ) ABCIDEIFABDCEGHJK $.
      $( [1-Oct-2000] $)
  $}

  ${
    3sstr4d.1 $e |- ( ph -> A C_ B ) $.
    3sstr4d.2 $e |- ( ph -> C = A ) $.
    3sstr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a subclass relationship.
       (The proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbird ) ADEIBCIFADBECGHJK $.
      $( [27-Jan-2007] $) $( [30-Nov-1995] $)
  $}

  ${
    syl5eqss.1 $e |- A = B $.
    syl5eqss.2 $e |- ( ph -> B C_ C ) $.
    $( B chained subclass and equality deduction. $)
    syl5eqss $p |- ( ph -> A C_ C ) $=
      ( wss sseq1i sylibr ) ACDGBDGFBCDEHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl5eqssr.1 $e |- B = A $.
    syl5eqssr.2 $e |- ( ph -> B C_ C ) $.
    $( B chained subclass and equality deduction. $)
    syl5eqssr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl5eqss ) ABCDCBEGFH $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl6sseq.1 $e |- ( ph -> A C_ B ) $.
    syl6sseq.2 $e |- B = C $.
    $( A chained subclass and equality deduction. $)
    syl6sseq $p |- ( ph -> A C_ C ) $=
      ( wss sseq2i sylib ) ABCGBDGECDBFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl6ssr.1 $e |- ( ph -> A C_ B ) $.
    syl6ssr.2 $e |- C = B $.
    $( A chained subclass and equality deduction. $)
    syl6sseqr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl6sseq ) ABCDEDCFGH $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl5sseq.1 $e |- B C_ A $.
    syl5sseq.2 $e |- ( ph -> A = C ) $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl5sseq $p |- ( ph -> B C_ C ) $=
      ( wceq wss sseq2 biimpa sylancl ) ABDGZCBHZCDHZFELMNBDCIJK $.
      $( [3-Jun-2011] $)
  $}

  ${
    syl5sseqr.1 $e |- B C_ A $.
    syl5sseqr.2 $e |- ( ph -> C = A ) $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl5sseqr $p |- ( ph -> B C_ C ) $=
      ( wss a1i sseqtr4d ) ACBDCBGAEHFI $.
      $( [3-Jun-2011] $)
  $}

  $( Equality implies the subclass relation.  (The proof was shortened by
     Andrew Salmon, 21-Jun-2011.) $)
  eqimss $p |- ( A = B -> A C_ B ) $=
    ( wceq wss eqss simplbi ) ABCABDBADABEF $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Equality implies the subclass relation. $)
  eqimss2 $p |- ( B = A -> A C_ B ) $=
    ( wss eqimss eqcoms ) ABCABABDE $.
    $( [23-Nov-2003] $)

  ${
    eqimssi.1 $e |- A = B $.
    $( Infer subclass relationship from equality. $)
    eqimssi $p |- A C_ B $=
      ( ssid sseqtri ) AABADCE $.
      $( [6-Jan-2007] $)

    $( Infer subclass relationship from equality. $)
    eqimss2i $p |- B C_ A $=
      ( ssid sseqtr4i ) BBABDCE $.
      $( [7-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Negation of subclass relationship.  Exercise 13 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 21-Jun-2011.) $)
    nss $p |- ( -. A C_ B <-> E. x ( x e. A /\ -. x e. B ) ) $=
      ( cv wcel wn wa wex wss wi wal exanali dfss2 xchbinxr bicomi ) ADZBEZPCEZ
      FGAHZBCIZFSQRJAKTQRALABCMNO $.
      $( [26-Jun-2011] $) $( [25-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Quantification restricted to a subclass. $)
    ssralv $p |- ( A C_ B -> ( A. x e. B ph -> A. x e. A ph ) ) $=
      ( wss cv wcel ssel imim1d ralimdv2 ) CDEZAABDCKBFZCGLDGACDLHIJ $.
      $( [11-Mar-2006] $)

    $( Existential quantification restricted to a subclass. $)
    ssrexv $p |- ( A C_ B -> ( E. x e. A ph -> E. x e. B ph ) ) $=
      ( wss cv wcel ssel anim1d reximdv2 ) CDEZAABCDKBFZCGLDGACDLHIJ $.
      $( [11-Jan-2007] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Class abstractions in a subclass relationship. $)
    ss2ab $p |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) $=
      ( vy cab wss cv wcel wi wal hbab1 dfss2f abid imbi12i albii bitri ) ACEZB
      CEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [3-Jul-1994] $)
  $}

  ${
    $d x A $.
    $( Class abstraction in a subclass relationship. $)
    abss $p |- ( { x | ph } C_ A <-> A. x ( ph -> x e. A ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq2i ss2ab bitr3i ) ABDZCENBFCGZBDZEAOHB
      IPCNBCJKAOBLM $.
      $( [16-Aug-2006] $)

    $( Subclass of a class abstraction. $)
    ssab $p |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq1i ss2ab bitr3i ) CABDZEBFCGZBDZNEOAHB
      IPCNBCJKOABLM $.
      $( [16-Aug-2006] $)

    $( The relation for a subclass of a class abstraction is equivalent to
       restricted quantification. $)
    ssabral $p |- ( A C_ { x | ph } <-> A. x e. A ph ) $=
      ( cab wss cv wcel wi wal wral ssab df-ral bitr4i ) CABDEBFCGAHBIABCJABCKA
      BCLM $.
      $( [6-Sep-2006] $)
  $}

  ${
    ss2abi.1 $e |- ( ph -> ps ) $.
    $( Inference of abstraction subclass from implication. $)
    ss2abi $p |- { x | ph } C_ { x | ps } $=
      ( cab wss wi ss2ab mpgbir ) ACEBCEFABGCABCHDI $.
      $( [31-Mar-1995] $)
  $}

  ${
    $d x ph $.
    ss2abdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction of abstraction subclass from implication. $)
    ss2abdv $p |- ( ph -> { x | ps } C_ { x | ch } ) $=
      ( wi wal cab wss alrimiv ss2ab sylibr ) ABCFZDGBDHCDHIAMDEJBCDKL $.
      $( [29-Jul-2011] $)
  $}

  ${
    $d x ph $.  $d x A $.
    abssdv.1 $e |- ( ph -> ( ps -> x e. A ) ) $.
    $( Deduction of abstraction subclass from implication. $)
    abssdv $p |- ( ph -> { x | ps } C_ A ) $=
      ( cv wcel wi wal cab wss alrimiv abss sylibr ) ABCFDGHZCIBCJDKAOCELBCDMN
      $.
      $( [20-Jan-2006] $)
  $}

  ${
    $d x A $.
    abssi.1 $e |- ( ph -> x e. A ) $.
    $( Inference of abstraction subclass from implication. $)
    abssi $p |- { x | ph } C_ A $=
      ( cab cv wcel ss2abi abid2 sseqtri ) ABEBFCGZBECAKBDHBCIJ $.
      $( [20-Jan-2006] $)
  $}

  $( Restricted abstraction classes in a subclass relationship. $)
  ss2rab $p |- ( { x e. A | ph } C_ { x e. A | ps } <->
               A. x e. A ( ph -> ps ) ) $=
    ( crab wss cv wcel wa cab wi wal df-rab sseq12i ss2ab df-ral imdistan albii
    wral bitr2i 3bitri ) ACDEZBCDEZFCGDHZAIZCJZUDBIZCJZFUEUGKZCLZABKZCDSZUBUFUC
    UHACDMBCDMNUEUGCOULUDUKKZCLUJUKCDPUMUICUDABQRTUA $.
    $( [30-May-1999] $)

  ${
    $d x B $.
    $( Restricted class abstraction in a subclass relationship. $)
    rabss $p |- ( { x e. A | ph } C_ B <-> A. x e. A ( ph -> x e. B ) ) $=
      ( crab wss cv wcel wa cab wal wral df-rab sseq1i abss impexp albii df-ral
      wi bitr4i 3bitri ) ABCEZDFBGZCHZAIZBJZDFUEUCDHZSZBKZAUGSZBCLZUBUFDABCMNUE
      BDOUIUDUJSZBKUKUHULBUDAUGPQUJBCRTUA $.
      $( [16-Aug-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass of a restricted class abstraction. $)
    ssrab $p |- ( B C_ { x e. A | ph } <-> ( B C_ A /\ A. x e. B ph ) ) $=
      ( crab wss cv wcel wa cab wal wral df-rab sseq2i ssab dfss3 anbi1i r19.26
      wi df-ral 3bitr2ri 3bitri ) DABCEZFDBGZCHZAIZBJZFUDDHUFSBKZDCFZABDLZIZUCU
      GDABCMNUFBDOUKUEBDLZUJIUFBDLUHUIULUJBDCPQUEABDRUFBDTUAUB $.
      $( [16-Aug-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrabdv.1 $e |- ( ph -> B C_ A ) $.
    ssrabdv.2 $e |- ( ( ph /\ x e. B ) -> ps ) $.
    $( Subclass of a restricted class abstraction (deduction rule). $)
    ssrabdv $p |- ( ph -> B C_ { x e. A | ps } ) $=
      ( wss wral crab ralrimiva ssrab sylanbrc ) AEDHBCEIEBCDJHFABCEGKBCDELM $.
      $( [31-Aug-2006] $)
  $}

  ${
    $d x ph $.
    ss2rabdv.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction of restricted abstraction subclass from implication. $)
    ss2rabdv $p |- ( ph -> { x e. A | ps } C_ { x e. A | ch } ) $=
      ( wi wral crab wss ralrimiva ss2rab sylibr ) ABCGZDEHBDEICDEIJANDEFKBCDEL
      M $.
      $( [30-May-2006] $)
  $}

  ${
    ss2rabi.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference of restricted abstraction subclass from implication. $)
    ss2rabi $p |- { x e. A | ph } C_ { x e. A | ps } $=
      ( crab wss wi ss2rab mprgbir ) ACDFBCDFGABHCDABCDIEJ $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass law for restricted abstraction.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    rabss2 $p |- ( A C_ B -> { x e. A | ph } C_ { x e. B | ph } ) $=
      ( wss cv wcel wa cab crab wi wal pm3.45 alimi dfss2 ss2ab 3imtr4i 3sstr4g
      df-rab ) CDEZBFZCGZAHZBIZUADGZAHZBIZABCJABDJUBUEKZBLUCUFKZBLTUDUGEUHUIBUB
      UEAMNBCDOUCUFBPQABCSABDSR $.
      $( [26-Jun-2011] $) $( [18-Dec-2004] $)

    $( Subclass relation for the restriction of a class abstraction. $)
    ssab2 $p |- { x | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa simpl abssi ) BDCEZAFBCIAGH $.
      $( [31-Mar-1995] $)

    $( Subclass relation for a restricted class. $)
    ssrab2 $p |- { x e. A | ph } C_ A $=
      ( crab cv wcel wa cab df-rab ssab2 eqsstri ) ABCDBECFAGBHCABCIABCJK $.
      $( [19-Mar-1997] $)
  $}

  ${
    $d w y z A $.  $d w y z B $.  $d w x z C $.  $d w D $.  $d x y $.
    $( A subset relationship useful for converting union to indexed union using
       ~ dfiun2 or ~ dfiun2g and intersection to indexed intersection using
       ~ dfiin2 . $)
    uniiunlem $p |- ( A. x e. A B e. D ->
                     ( A. x e. A B e. C <-> { y | E. x e. A y = B } C_ C ) ) $=
      ( vz vw wcel wral cv wceq wrex wi cab wss ax-17 wa eqeq1 eleq1 wal eleq1a
      hbra1 ra4 syl6 rexlimd alrimiv hbim hbal csb csbeq1a eqcoms eqcomd eqeq1d
      hbre1 wex eqid a4eiv ra4e hbcsb1 hbeleq rexbid imbi12d cla4gv exp4a com4r
      vex syl7 imbi2d 3imtr3d exlimiv ax-mp imp3a ralimdaa impbid2 abss rexbidv
      com12 cbvabv sseq1i bitr3i syl6bb ) DFIZACJZDEIZACJZGKZDLZACMZWGEIZNZGUAZ
      BKZDLZACMZBOZEPZWDWFWLWFWKGWFWHWJACWEACUCWJAQZWFAKZCIZWEWHWJNWEACUDDEWGUB
      UEUFUGWLWDWFWLWCWEACWKAGWIWJAWHACUOWRUHUIWCWLWTRWEWCWLWTWEAHKZDUJZDLZHUPW
      CWLWTWENZNZNZXCDDLHAXAWSLZXBDDXGDXBDXBLWSXAAXADUKULUMUNDUQURXCXFHXCXBFIZW
      LWTXBEIZNZNWCXEXHWLWTXCXIXHWLWTXCXIWTXCRXCACMZXHWLXIXCACUSWKXKXINGXBFWGXB
      LZWIXKWJXIXLWHXCACAGXBAGXADHVGWGXAIAQUTVAWGXBDSVBWGXBETVCVDVHVEVFXBDFTXCX
      JXDWLXCXIWEWTXBDETVIVIVJVKVLVMVRVNVRVOWLWIGOZEPWQWIGEVPXMWPEWIWOGBWGWMLWH
      WNACWGWMDSVQVSVTWAWB $.
      $( [5-Oct-2006] $)
  $}

  $( Alternate definition of proper subclass. $)
  dfpss2 $p |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) $=
    ( wpss wss wne wa wceq wn df-pss df-ne anbi2i bitri ) ABCABDZABEZFMABGHZFAB
    INOMABJKL $.
    $( [7-Feb-1996] $)

  $( Alternate definition of proper subclass.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  dfpss3 $p |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) $=
    ( wpss wss wceq wn wa dfpss2 eqss baib notbid pm5.32i bitri ) ABCABDZABEZFZ
    GNBADZFZGABHNPRNOQONQABIJKLM $.
    $( [26-Jun-2011] $) $( [7-Feb-1996] $)

  $( Equality theorem for proper subclass. $)
  psseq1 $p |- ( A = B -> ( A C. C <-> B C. C ) ) $=
    ( wceq wss wne wa wpss sseq1 neeq1 anbi12d df-pss 3bitr4g ) ABDZACEZACFZGBC
    EZBCFZGACHBCHNOQPRABCIABCJKACLBCLM $.
    $( [7-Feb-1996] $)

  $( Equality theorem for proper subclass. $)
  psseq2 $p |- ( A = B -> ( C C. A <-> C C. B ) ) $=
    ( wceq wss wne wa wpss sseq2 neeq2 anbi12d df-pss 3bitr4g ) ABDZCAEZCAFZGCB
    EZCBFZGCAHCBHNOQPRABCIABCJKCALCBLM $.
    $( [7-Feb-1996] $)

  ${
    psseq1i.1 $e |- A = B $.
    $( An equality inference for the proper subclass relationship. $)
    psseq1i $p |- ( A C. C <-> B C. C ) $=
      ( wceq wpss wb psseq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [9-Jun-2004] $)

    $( An equality inference for the proper subclass relationship. $)
    psseq2i $p |- ( C C. A <-> C C. B ) $=
      ( wceq wpss wb psseq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [9-Jun-2004] $)

    ${
      psseq12i.2 $e |- C = D $.
      $( An equality inference for the proper subclass relationship. $)
      psseq12i $p |- ( A C. C <-> B C. D ) $=
        ( wpss psseq1i psseq2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [9-Jun-2004] $)
    $}
  $}

  ${
    psseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the proper subclass relationship. $)
    psseq1d $p |- ( ph -> ( A C. C <-> B C. C ) ) $=
      ( wceq wpss wb psseq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [9-Jun-2004] $)

    $( An equality deduction for the proper subclass relationship. $)
    psseq2d $p |- ( ph -> ( C C. A <-> C C. B ) ) $=
      ( wceq wpss wb psseq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [9-Jun-2004] $)

    ${
      psseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the proper subclass relationship. $)
      psseq12d $p |- ( ph -> ( A C. C <-> B C. D ) ) $=
        ( wpss psseq1d psseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [9-Jun-2004] $)
    $}
  $}

  $( A proper subclass is a subclass.  Theorem 10 of [Suppes] p. 23. $)
  pssss $p |- ( A C. B -> A C_ B ) $=
    ( wpss wss wne df-pss simplbi ) ABCABDABEABFG $.
    $( [7-Feb-1996] $)

  ${
    pssssd.1 $e |- ( ph -> A C. B ) $.
    $( Deduce subclass from proper subclass. $)
    pssssd $p |- ( ph -> A C_ B ) $=
      ( wpss wss pssss syl ) ABCEBCFDBCGH $.
      $( [29-Feb-1996] $)
  $}

  $( Subclass in terms of proper subclass. $)
  sspss $p |- ( A C_ B <-> ( A C. B \/ A = B ) ) $=
    ( wss wpss wceq wo wn dfpss2 simplbi2 con1d orrd pssss eqimss jaoi impbii )
    ABCZABDZABEZFPQRPRQQPRGABHIJKQPRABLABMNO $.
    $( [25-Feb-1996] $)

  $( Proper subclass is irreflexive.  Theorem 7 of [Suppes] p. 23. $)
  pssirr $p |- -. A C. A $=
    ( wpss wss wn wa pm3.24 dfpss3 mtbir ) AABAACZIDEIFAAGH $.
    $( [7-Feb-1996] $)

  $( Proper subclass has no 2-cycle loops.  Compare Theorem 8 of [Suppes]
     p. 23.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  pssn2lp $p |- -. ( A C. B /\ B C. A ) $=
    ( wpss wn wi wa wss dfpss3 simprbi pssss nsyl imnan mpbi ) ABCZBACZDENOFDNB
    AGZONABGPDABHIBAJKNOLM $.
    $( [26-Jun-2011] $) $( [7-Feb-1996] $)

  $( Two ways of stating trichotomy with respect to inclusion. $)
  sspsstri $p |- ( ( A C_ B \/ B C_ A ) <-> ( A C. B \/ A = B \/ B C. A ) ) $=
    ( wss wo wpss wceq w3o sspss eqcom orbi2i bitri orbi12i orordir or32 df-3or
    bitr4i 3bitr2i ) ABCZBACZDABEZABFZDZBAEZUADZDTUCDUADZTUAUCGZRUBSUDABHSUCBAF
    ZDUDBAHUGUAUCBAIJKLTUCUAMUEUBUCDUFTUCUANTUAUCOPQ $.
    $( [12-Aug-2004] $)

  $( Partial trichotomy law for subclasses.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  ssnpss $p |- ( A C_ B -> -. B C. A ) $=
    ( wpss wss wn dfpss3 simprbi con2i ) BACZABDZIBADJEBAFGH $.
    $( [26-Jun-2011] $) $( [16-May-1996] $)

  $( Transitive law for proper subclass.  Theorem 9 of [Suppes] p. 23. $)
  psstr $p |- ( ( A C. B /\ B C. C ) -> A C. C ) $=
    ( wpss wa wss wceq pssss sylan9ss pssn2lp psseq1 anbi1d mtbiri con2i dfpss2
    wn sylanbrc ) ABDZBCDZEZACFACGZPACDRSABCABHBCHIUATUATCBDZSECBJUARUBSACBKLMN
    ACOQ $.
    $( [7-Feb-1996] $)

  $( Transitive law for subclass and proper subclass. $)
  sspsstr $p |- ( ( A C_ B /\ B C. C ) -> A C. C ) $=
    ( wss wpss wceq wo sspss wi psstr ex psseq1 biimprd jaoi imp sylanb ) ABDAB
    EZABFZGZBCEZACEZABHSTUAQTUAIRQTUAABCJKRUATABCLMNOP $.
    $( [3-Apr-1996] $)


  $( Transitive law for subclass and proper subclass. $)
  psssstr $p |- ( ( A C. B /\ B C_ C ) -> A C. C ) $=
    ( wss wpss wceq wo sspss psstr ex psseq2 biimpcd jaod imp sylan2b ) BCDABEZ
    BCEZBCFZGZACEZBCHPSTPQTRPQTABCIJRPTBCAKLMNO $.
    $( [3-Apr-1996] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The difference, union, and intersection of two classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${ $d x A $.
     $( Eliminate double complement. $)
     dblcompl $p |- ~ ~ A = A $=
       ( vx ccompl cv wcel wn cvv vex elcompl ax-mp notbii notnot 3bitr4i eqriv
       wb ) BACZCZABDZPEZFZRAEZFZFRQEZUASUBRGEZSUBOBHZRAGIJKUDUCTOUERPGIJUALMN
       $.
       $( [18-Nov-2014] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for class difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeq1 $p |- ( A = B -> ( A \ C ) = ( B \ C ) ) $=
      ( vx wceq cv wcel wn crab cdif rabeq dfdif2 3eqtr4g ) ABEDFCGHZDAINDBIACJ
      BCJNDABKDACLDBCLM $.
      $( [26-Jun-2011] $) $( [10-Feb-1997] $)

    $( Equality theorem for class difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeq2 $p |- ( A = B -> ( C \ A ) = ( C \ B ) ) $=
      ( vx wceq cv wcel wn crab cdif eleq2 notbid rabbidv dfdif2 3eqtr4g ) ABEZ
      DFZAGZHZDCIQBGZHZDCICAJCBJPSUADCPRTABQKLMDCANDCBNO $.
      $( [26-Jun-2011] $) $( [10-Feb-1997] $)
  $}

  $( Equality theorem for class difference.  (Contributed by FL,
     31-Aug-2009.) $)
  difeq12 $p |- ( ( A = B /\ C = D ) -> ( A \ C ) = ( B \ D ) ) $=
    ( wceq cdif difeq1 difeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [31-Aug-2009] $)

  ${
    difeq1i.1 $e |- A = B $.
    $( Inference adding difference to the right in a class equality. $)
    difeq1i $p |- ( A \ C ) = ( B \ C ) $=
      ( wceq cdif difeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [15-Nov-2002] $)

    $( Inference adding difference to the left in a class equality. $)
    difeq2i $p |- ( C \ A ) = ( C \ B ) $=
      ( wceq cdif difeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [15-Nov-2002] $)

    ${
      difeq12i.2 $e |- C = D $.
      $( Equality inference for class difference. $)
      difeq12i $p |- ( A \ C ) = ( B \ D ) $=
        ( cdif difeq1i difeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [29-Aug-2004] $)
    $}
  $}

  ${
    difeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding difference to the right in a class equality. $)
    difeq1d $p |- ( ph -> ( A \ C ) = ( B \ C ) ) $=
      ( wceq cdif difeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [15-Nov-2002] $)

    $( Deduction adding difference to the left in a class equality. $)
    difeq2d $p |- ( ph -> ( C \ A ) = ( C \ B ) ) $=
      ( wceq cdif difeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [15-Nov-2002] $)
  $}

  ${
    difeq12d.1 $e |- ( ph -> A = B ) $.
    difeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for class difference.  (Contributed by FL,
       29-May-2014.) $)
    difeq12d $p |- ( ph -> ( A \ C ) = ( B \ D ) ) $=
      ( cdif difeq1d difeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [29-May-2014] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    difeqri.1 $e |- ( ( x e. A /\ -. x e. B ) <-> x e. C ) $.
    $( Inference from membership to difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeqri $p |- ( A \ B ) = C $=
      ( cdif cv wcel wn wa eldif bitri eqriv ) ABCFZDAGZNHOBHOCHIJODHOBCKELM $.
      $( [26-Jun-2011] $) $( [17-May-1998] $)
  $}

  ${
    hbdif.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbdif.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for class difference.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       2-Apr-2010.) $)
    hbdif $p |- ( y e. ( A \ B ) -> A. x y e. ( A \ B ) ) $=
      ( cv cdif wcel wn wa eldif hbn hban hbxfrbi ) BGZCDHIPCIZPDIZJZKAPCDLQSAE
      RAFMNO $.
      $( [15-Apr-2010] $) $( [3-Dec-2003] $)
  $}

  $( Implication of membership in a class difference. $)
  eldifi $p |- ( A e. ( B \ C ) -> A e. B ) $=
    ( cdif wcel wn eldif simplbi ) ABCDEABEACEFABCGH $.
    $( [29-Apr-1994] $)

  $( Implication of membership in a class difference. $)
  eldifn $p |- ( A e. ( B \ C ) -> -. A e. C ) $=
    ( cdif wcel wn eldif simprbi ) ABCDEABEACEFABCGH $.
    $( [3-May-1994] $)

  $( A set does not belong to a class excluding it. $)
  elndif $p |- ( A e. B -> -. A e. ( C \ B ) ) $=
    ( cdif wcel eldifn con2i ) ACBDEABEACBFG $.
    $( [27-Jun-1994] $)

  $( Implication of membership in a class difference. $)
  neldif $p |- ( ( A e. B /\ -. A e. ( B \ C ) ) -> A e. C ) $=
    ( wcel cdif wn eldif simplbi2 con1d imp ) ABDZABCEDZFACDZKMLLKMFABCGHIJ $.
    $( [28-Jun-1994] $)

  ${
    $d x A $.  $d x B $.
    $( Double class difference.  Exercise 11 of [TakeutiZaring] p. 22. $)
    difdif $p |- ( A \ ( B \ A ) ) = A $=
      ( vx cdif cv wcel wi wa wn pm4.45im eldif xchbinxr anbi2i bitr2i difeqri
      iman ) CABADZACEZAFZSRBFZSGZHSRQFZIZHSTJUAUCSUATSIHUBTSPRBAKLMNO $.
      $( [17-May-1998] $)
    $d x A $.  $d x B $.

    $( Subclass relationship for class difference.  Exercise 14 of
       [TakeutiZaring] p. 22. $)
    difss $p |- ( A \ B ) C_ A $=
      ( vx cdif cv eldifi ssriv ) CABDACEABFG $.
      $( [29-Apr-1994] $)
  $}

  $( Preservation of a subclass relationship by class difference. $)
  ssdifss $p |- ( A C_ B -> ( A \ C ) C_ B ) $=
    ( cdif wss difss sstr mpan ) ACDZAEABEIBEACFIABGH $.
    $( [15-Feb-2007] $)

  ${
    $d x A $.
    $( Double complement under universal class.  Exercise 4.10(s) of
       [Mendelson] p. 231. $)
    ddif $p |- ( _V \ ( _V \ A ) ) = A $=
      ( vx cvv cdif cv wcel wn wa eldif mpbiran con2bii biantrur bitr2i difeqri
      vex ) BCCADZABEZAFZQPFZGZQCFZTHSRSUARGQCAIBOZJKUATUBLMN $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Contraposition law for subsets. $)
    ssconb $p |- ( ( A C_ C /\ B C_ C ) ->
                  ( A C_ ( C \ B ) <-> B C_ ( C \ A ) ) ) $=
      ( vx wss wa cv wcel cdif wi wal wn wb ssel pm5.1 jcab 3bitr4g eldif dfss2
      imbi2i syl2an con2b a1i anbi12d albidv ) ACEZBCEZFZDGZAHZUICBIZHZJZDKUIBH
      ZUICAIZHZJZDKAUKEBUOEUHUMUQDUHUJUICHZUNLZFZJZUNURUJLZFZJZUMUQUHUJURJZUJUS
      JZFUNURJZUNVBJZFVAVDUHVEVGVFVHUFVEVGVEVGMUGACUINBCUINVEVGOUAVFVHMUHUJUNUB
      UCUDUJURUSPUNURVBPQULUTUJUICBRTUPVCUNUICARTQUEDAUKSDBUOSQ $.
      $( [22-Mar-1998] $)

    $( Contraposition law for subsets.  Exercise 15 of [TakeutiZaring]
       p. 22. $)
    sscon $p |- ( A C_ B -> ( C \ B ) C_ ( C \ A ) ) $=
      ( vx wss cdif cv wcel wn wa ssel con3d anim2d eldif 3imtr4g ssrdv ) ABEZD
      CBFZCAFZQDGZCHZTBHZIZJUATAHZIZJTRHTSHQUCUEUAQUDUBABTKLMTCBNTCANOP $.
      $( [22-Mar-1998] $)

    $( Difference law for subsets. $)
    ssdif $p |- ( A C_ B -> ( A \ C ) C_ ( B \ C ) ) $=
      ( vx wss cdif cv wcel wn wa ssel anim1d eldif 3imtr4g ssrdv ) ABEZDACFZBC
      FZPDGZAHZSCHIZJSBHZUAJSQHSRHPTUBUAABSKLSACMSBCMNO $.
      $( [28-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    uneqri.1 $e |- ( ( x e. A \/ x e. B ) <-> x e. C ) $.
    $( Inference from membership to union. $)
    uneqri $p |- ( A u. B ) = C $=
      ( cun cv wcel wo elun bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( Idempotent law for union of classes.  Theorem 23 of [Suppes] p. 27. $)
    unidm $p |- ( A u. A ) = A $=
      ( vx cv wcel oridm uneqri ) BAAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Commutative law for union of classes.  Exercise 6 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    uncom $p |- ( A u. B ) = ( B u. A ) $=
      ( vx cun cv wcel wo orcom elun bitr4i uneqri ) CABBADZCEZAFZMBFZGONGMLFNO
      HMBAIJK $.
      $( [26-Jun-2011] $) $( [25-Jun-1998] $)
  $}

  ${
    $( If a class equals the union of two other classes, then it equals the
       union of those two classes commuted. ~ equncom was automatically derived
       from ~ equncomVD using the tools program
       translate_without_overwriting.cmd and minimizing.  (Contributed by Alan
       Sare, 18-Feb-2012.) $)
    equncom $p |- ( A = ( B u. C ) <-> A = ( C u. B ) ) $=
      ( cun uncom eqeq2i ) BCDCBDABCEF $.
      $( [18-Feb-2012] $)
  $}

  ${
    equncomi.1 $e |- A = ( B u. C ) $.
    $( Inference form of ~ equncom . ~ equncomi was automatically derived from
       ~ equncomiVD using the tools program translate_without_overwriting.cmd
       and minimizing.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    equncomi $p |- A = ( C u. B ) $=
      ( cun wceq equncom mpbi ) ABCEFACBEFDABCGH $.
      $( [18-Feb-2012] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for union of two classes. $)
    uneq1 $p |- ( A = B -> ( A u. C ) = ( B u. C ) ) $=
      ( vx wceq cun cv wcel wo eleq2 orbi1d elun 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [5-Aug-1993] $)
  $}

  $( Equality theorem for the union of two classes. $)
  uneq2 $p |- ( A = B -> ( C u. A ) = ( C u. B ) ) $=
    ( wceq cun uneq1 uncom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for union of two classes. $)
  uneq12 $p |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) $=
    ( wceq cun uneq1 uneq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [29-Mar-1998] $)

  ${
    uneq1i.1 $e |- A = B $.
    $( Inference adding union to the right in a class equality. $)
    uneq1i $p |- ( A u. C ) = ( B u. C ) $=
      ( wceq cun uneq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [30-Aug-1993] $)

    $( Inference adding union to the left in a class equality. $)
    uneq2i $p |- ( C u. A ) = ( C u. B ) $=
      ( wceq cun uneq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [30-Aug-1993] $)

    ${
      uneq12i.2 $e |- C = D $.
      $( Equality inference for union of two classes.  (The proof was shortened
         by Eric Schmidt, 26-Jan-2007.) $)
      uneq12i $p |- ( A u. C ) = ( B u. D ) $=
        ( wceq cun uneq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
        $( [27-Jan-2007] $) $( [12-Aug-2004] $)
    $}
  $}

  ${
    uneq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding union to the right in a class equality. $)
    uneq1d $p |- ( ph -> ( A u. C ) = ( B u. C ) ) $=
      ( wceq cun uneq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [29-Mar-1998] $)

    $( Deduction adding union to the left in a class equality. $)
    uneq2d $p |- ( ph -> ( C u. A ) = ( C u. B ) ) $=
      ( wceq cun uneq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [29-Mar-1998] $)

    ${
      uneq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for union of two classes.  (The proof was shortened
         by Andrew Salmon, 26-Jun-2011.) $)
      uneq12d $p |- ( ph -> ( A u. C ) = ( B u. D ) ) $=
        ( wceq cun uneq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
        $( [26-Jun-2011] $) $( [29-Sep-2004] $)
    $}
  $}

  ${
    hbun.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbun.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for the union of classes. $)
    hbun $p |- ( y e. ( A u. B ) -> A. x y e. ( A u. B ) ) $=
      ( cv cun wcel wo elun hbor hbxfrbi ) BGZCDHINCIZNDIZJANCDKOPAEFLM $.
      $( [15-Sep-2003] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for union of classes.  Exercise 8 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    unass $p |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) $=
      ( vx cun cv wcel wo elun orbi2i orbi1i orass bitr2i 3bitrri uneqri ) DABE
      ZCABCEZEZDFZRGSAGZSQGZHTSBGZSCGZHZHZSPGZUCHZSAQIUAUDTSBCIJUGTUBHZUCHUEUFU
      HUCSABIKTUBUCLMNO $.
      $( [26-Jun-2011] $) $( [3-May-1994] $)
  $}

  $( A rearrangement of union. $)
  un12 $p |- ( A u. ( B u. C ) ) = ( B u. ( A u. C ) ) $=
    ( cun uncom uneq1i unass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH
    $.
    $( [12-Aug-2004] $)

  $( A rearrangement of union.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  un23 $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. B ) $=
    ( cun unass un12 uncom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [12-Aug-2004] $)

  $( A rearrangement of the union of 4 classes. $)
  un4 $p |- ( ( A u. B ) u. ( C u. D ) ) =
            ( ( A u. C ) u. ( B u. D ) ) $=
    ( cun un12 uneq2i unass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.
    $( [12-Aug-2004] $)

  $( Union distributes over itself. $)
  unundi $p |- ( A u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) $=
    ( cun unidm uneq1i un4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.
    $( [17-Aug-2004] $)

  $( Union distributes over itself. $)
  unundir $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. ( B u. C ) ) $=
    ( cun unidm uneq2i un4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.
    $( [17-Aug-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for union of classes.  Theorem 25 of [Suppes]
       p. 27. $)
    ssun1 $p |- A C_ ( A u. B ) $=
      ( vx cun cv wcel wo orc elun sylibr ssriv ) CAABDZCEZAFZNMBFZGMLFNOHMABIJ
      K $.
      $( [5-Aug-1993] $)
  $}

  $( Subclass relationship for union of classes. $)
  ssun2 $p |- A C_ ( B u. A ) $=
    ( cun ssun1 uncom sseqtri ) AABCBACABDABEF $.
    $( [30-Aug-1993] $)

  $( Subclass law for union of classes. $)
  ssun3 $p |- ( A C_ B -> A C_ ( B u. C ) ) $=
    ( wss cun ssun1 sstr2 mpi ) ABDBBCEZDAIDBCFABIGH $.
    $( [5-Aug-1993] $)

  $( Subclass law for union of classes. $)
  ssun4 $p |- ( A C_ B -> A C_ ( C u. B ) ) $=
    ( wss cun ssun2 sstr2 mpi ) ABDBCBEZDAIDBCFABIGH $.
    $( [14-Aug-1994] $)

  $( Membership law for union of classes. $)
  elun1 $p |- ( A e. B -> A e. ( B u. C ) ) $=
    ( cun ssun1 sseli ) BBCDABCEF $.
    $( [5-Aug-1993] $)

  $( Membership law for union of classes. $)
  elun2 $p |- ( A e. B -> A e. ( C u. B ) ) $=
    ( cun ssun2 sseli ) BCBDABCEF $.
    $( [30-Aug-1993] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass law for union of classes.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unss1 $p |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) $=
      ( vx wss cun cv wcel wo ssel orim1d elun 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [26-Jun-2011] $) $( [14-Oct-1999] $)

    $( A relationship between subclass and union.  Theorem 26 of [Suppes]
       p. 27.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssequn1 $p |- ( A C_ B <-> ( A u. B ) = B ) $=
      ( vx cv wcel wi wal cun wb wceq wo bicom pm4.72 elun bibi1i 3bitr4i albii
      wss dfss2 dfcleq ) CDZAEZUABEZFZCGUAABHZEZUCIZCGABRUEBJUDUGCUCUBUCKZIUHUC
      IUDUGUCUHLUBUCMUFUHUCUAABNOPQCABSCUEBTP $.
      $( [26-Jun-2011] $) $( [30-Aug-1993] $)
  $}

  $( Subclass law for union of classes.  Exercise 7 of [TakeutiZaring]
     p. 18. $)
  unss2 $p |- ( A C_ B -> ( C u. A ) C_ ( C u. B ) ) $=
    ( wss cun unss1 uncom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [14-Oct-1999] $)

  $( Subclass law for union of classes. $)
  unss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A u. C ) C_ ( B u. D ) ) $=
    ( wss cun unss1 unss2 sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [2-Jun-2004] $)

  $( A relationship between subclass and union. $)
  ssequn2 $p |- ( A C_ B <-> ( B u. A ) = B ) $=
    ( wss cun wceq ssequn1 uncom eqeq1i bitri ) ABCABDZBEBADZBEABFJKBABGHI $.
    $( [23-Sep-2004] $) $( [13-Jun-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( The union of two subclasses is a subclass.  Theorem 27 of [Suppes] p. 27
       and its converse. $)
    unss $p |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) $=
      ( vx cv cun wcel wi wal wa wss elun imbi1i jaob bitri albii dfss2 anbi12i
      wo 19.26 bitr4i 3bitr4ri ) DEZABFZGZUCCGZHZDIUCAGZUFHZUCBGZUFHZJZDIZUDCKA
      CKZBCKZJZUGULDUGUHUJSZUFHULUEUQUFUCABLMUHUFUJNOPDUDCQUPUIDIZUKDIZJUMUNURU
      OUSDACQDBCQRUIUKDTUAUB $.
      $( [11-Jun-2004] $)
  $}

  ${
    unssi.1 $e |- A C_ C $.
    unssi.2 $e |- B C_ C $.
    $( An inference showing the union of two subclasses is a subclass.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    unssi $p |- ( A u. B ) C_ C $=
      ( wss wa cun pm3.2i unss mpbi ) ACFZBCFZGABHCFLMDEIABCJK $.
      $( [10-Dec-2002] $)
  $}

  ${
    unssd.1 $e |- ( ph -> A C_ C ) $.
    unssd.2 $e |- ( ph -> B C_ C ) $.
    $( A deduction showing the union of two subclasses is a subclass.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    unssd $p |- ( ph -> ( A u. B ) C_ C ) $=
      ( wss cun wa unss biimpi syl2anc ) ABDGZCDGZBCHDGZEFMNIOBCDJKL $.
      $( [3-Jun-2011] $)
  $}

  $( A condition that implies inclusion in the union of two classes. $)
  ssun $p |- ( ( A C_ B \/ A C_ C ) -> A C_ ( B u. C ) ) $=
    ( wss cun ssun3 ssun4 jaoi ) ABDABCEDACDABCFACBGH $.
    $( [23-Nov-2003] $)

  $( Restricted existential quantification over union.  (Contributed by Jeff
     Madsen, 5-Jan-2011.) $)
  rexun $p |- ( E. x e. ( A u. B ) ph <->
                          ( E. x e. A ph \/ E. x e. B ph ) ) $=
    ( cun wrex cv wcel wa wo df-rex elun anbi1i andir bitri exbii 19.43 orbi12i
    wex bitr4i 3bitri ) ABCDEZFBGZUBHZAIZBSUCCHZAIZUCDHZAIZJZBSZABCFZABDFZJZABU
    BKUEUJBUEUFUHJZAIUJUDUOAUCCDLMUFUHANOPUKUGBSZUIBSZJUNUGUIBQULUPUMUQABCKABDK
    RTUA $.
    $( [29-Jan-2011] $) $( [5-Jan-2011] $)

  $( Restricted quantification over a union.  (Contributed by Scott Fenton,
     12-Apr-2011.)  (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  ralunb $p |- ( A. x e. ( A u. B ) ph <->
                 ( A. x e. A ph /\ A. x e. B ph ) ) $=
    ( cv cun wcel wi wal wa wral wo elun imbi1i jaob bitri albii df-ral anbi12i
    19.26 3bitr4i ) BEZCDFZGZAHZBIZUBCGZAHZBIZUBDGZAHZBIZJZABUCKABCKZABDKZJUFUH
    UKJZBIUMUEUPBUEUGUJLZAHUPUDUQAUBCDMNUGAUJOPQUHUKBTPABUCRUNUIUOULABCRABDRSUA
    $.
    $( [29-Jun-2011] $) $( [12-Apr-2011] $)

  $( Restricted quantification over union.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  ralun $p |- ( ( A. x e. A ph /\ A. x e. B ph ) -> A. x e. ( A u. B ) ph ) $=
    ( cun wral wa ralunb biimpri ) ABCDEFABCFABDFGABCDHI $.
    $( [2-Sep-2009] $)

  ${
    $d A x $.  $d B x $.
    $( Commutative law for intersection of classes.  Exercise 7 of
       [TakeutiZaring] p. 17. $)
    incom $p |- ( A i^i B ) = ( B i^i A ) $=
      ( vx cin cv wcel wa ancom elin 3bitr4i eqriv ) CABDZBADZCEZAFZNBFZGPOGNLF
      NMFOPHNABINBAIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    ineqri.1 $e |- ( ( x e. A /\ x e. B ) <-> x e. C ) $.
    $( Inference from membership to intersection. $)
    ineqri $p |- ( A i^i B ) = C $=
      ( cin cv wcel wa elin bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for intersection of two classes. $)
    ineq1 $p |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) $=
      ( vx wceq cin cv wcel wa eleq2 anbi1d elin 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [14-Dec-1993] $)
  $}

  $( Equality theorem for intersection of two classes. $)
  ineq2 $p |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) $=
    ( wceq cin ineq1 incom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [26-Dec-1993] $)

  $( Equality theorem for intersection of two classes. $)
  ineq12 $p |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) $=
    ( wceq cin ineq1 ineq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [8-May-1994] $)

  ${
    ineq1i.1 $e |- A = B $.
    $( Equality inference for intersection of two classes. $)
    ineq1i $p |- ( A i^i C ) = ( B i^i C ) $=
      ( wceq cin ineq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [26-Dec-1993] $)

    $( Equality inference for intersection of two classes. $)
    ineq2i $p |- ( C i^i A ) = ( C i^i B ) $=
      ( wceq cin ineq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [26-Dec-1993] $)

    ${
      ineq12i.2 $e |- C = D $.
      $( Equality inference for intersection of two classes.  (The proof was
         shortened by Eric Schmidt, 26-Jan-2007.) $)
      ineq12i $p |- ( A i^i C ) = ( B i^i D ) $=
        ( wceq cin ineq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
        $( [27-Jan-2007] $) $( [24-Jun-2004] $)
    $}
  $}

  ${
    ineq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for intersection of two classes. $)
    ineq1d $p |- ( ph -> ( A i^i C ) = ( B i^i C ) ) $=
      ( wceq cin ineq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [10-Apr-1994] $)

    $( Equality deduction for intersection of two classes. $)
    ineq2d $p |- ( ph -> ( C i^i A ) = ( C i^i B ) ) $=
      ( wceq cin ineq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [10-Apr-1994] $)

    ${
      ineq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for intersection of two classes.  (The proof was
         shortened by Andrew Salmon, 26-Jun-2011.) $)
      ineq12d $p |- ( ph -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
        $( [26-Jun-2011] $) $( [24-Jun-2004] $)
    $}

    ${
      ineqan12d.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for intersection of two classes. $)
      ineqan12d $p |- ( ( ph /\ ps ) -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2an ) ACDIEFICEJDFJIBGHCDEFKL $.
        $( [7-Feb-2007] $)
    $}
  $}

  ${
    hbin.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbin.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for the intersection of classes.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 6-Apr-2010.) $)
    hbin $p |- ( y e. ( A i^i B ) -> A. x y e. ( A i^i B ) ) $=
      ( cv cin wcel wa elin hban hbxfrbi ) BGZCDHINCIZNDIZJANCDKOPAEFLM $.
      $( [15-Apr-2010] $) $( [15-Sep-2003] $)
  $}

  ${
    $d A y $.  $d C y z $.  $d D y z $.  $d x y z $.
    $( Distribute proper substitution through an intersection relation.
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    csbing $p |- ( A e. B -> [_ A / x ]_ ( C i^i D ) =
                  ( [_ A / x ]_ C i^i [_ A / x ]_ D ) ) $=
      ( vy vz cv cin csb wceq csbeq1 ineq12d eqeq12d vex wcel ax-17 hbcsb1 hbin
      csbeq1a csbief vtoclg ) AFHZDEIZJZAUCDJZAUCEJZIZKABUDJZABDJZABEJZIZKFBCUC
      BKZUEUIUHULAUCBUDLUMUFUJUGUKAUCBDLAUCBELMNAGUCUDUHFOZAGUFUGAGUCDUNGHUCPAQ
      ZRAGUCEUNUORSAHUCKDUFEUGAUCDTAUCETMUAUB $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    rabbi2dva.1 $e |- ( ( ph /\ x e. A ) -> ( x e. B <-> ps ) ) $.
    $( Deduction from a wff to a restricted class abstraction. $)
    rabbi2dva $p |- ( ph -> ( A i^i B ) = { x e. A | ps } ) $=
      ( cin cv wcel crab dfin5 rabbidva syl5eq ) ADEGCHEIZCDJBCDJCDEKANBCDFLM
      $.
      $( [14-Jan-2014] $)
  $}

  ${
    $d x A $.
    $( Idempotent law for intersection of classes.  Theorem 15 of [Suppes]
       p. 26. $)
    inidm $p |- ( A i^i A ) = A $=
      ( vx cv wcel anidm ineqri ) BAAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for intersection of classes.  Exercise 9 of
       [TakeutiZaring] p. 17. $)
    inass $p |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) $=
      ( vx cin cv wcel wa anass elin anbi2i bitr4i anbi1i 3bitr4i ineqri ) DABE
      ZCABCEZEZDFZAGZSBGZHZSCGZHZTSQGZHZSPGZUCHSRGUDTUAUCHZHUFTUAUCIUEUHTSBCJKL
      UGUBUCSABJMSAQJNO $.
      $( [3-May-1994] $)
  $}

  $( A rearrangement of intersection. $)
  in12 $p |- ( A i^i ( B i^i C ) ) = ( B i^i ( A i^i C ) ) $=
    ( cin incom ineq1i inass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH
    $.
    $( [21-Apr-2001] $)

  $( A rearrangement of intersection.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  in32 $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i B ) $=
    ( cin inass in12 incom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [21-Apr-2001] $)

  $( A rearrangement of intersection. $)
  in13 $p |- ( A i^i ( B i^i C ) ) = ( C i^i ( B i^i A ) ) $=
    ( cin in32 incom 3eqtr4i ) BCDZADBADZCDAHDCIDBCAEAHFCIFG $.
    $( [27-Aug-2012] $)

  $( A rearrangement of intersection. $)
  in31 $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i B ) i^i A ) $=
    ( cin in12 incom 3eqtr4i ) CABDZDACBDZDHCDIADCABEHCFIAFG $.
    $( [27-Aug-2012] $)

  $( Rotate the intersection of 3 classes.. $)
  inrot $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i A ) i^i B ) $=
    ( cin in31 in32 eqtri ) ABDCDCBDADCADBDABCECBAFG $.
    $( [27-Aug-2012] $)

  $( Rearrangement of intersection of 4 classes. $)
  in4 $p |- ( ( A i^i B ) i^i ( C i^i D ) ) =
            ( ( A i^i C ) i^i ( B i^i D ) ) $=
    ( cin in12 ineq2i inass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.
    $( [21-Apr-2001] $)

  $( Intersection distributes over itself. $)
  inindi $p |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) $=
    ( cin inidm ineq1i in4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.
    $( [6-May-1994] $)

  $( Intersection distributes over itself. $)
  inindir $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i ( B i^i C ) ) $=
    ( cin inidm ineq2i in4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.
    $( [17-Aug-2004] $)

  $( A relationship between subclass and intersection.  Similar to Exercise 9
     of [TakeutiZaring] p. 18. $)
  sseqin2 $p |- ( A C_ B <-> ( B i^i A ) = A ) $=
    ( wss cin wceq df-ss incom eqeq1i bitri ) ABCABDZAEBADZAEABFJKAABGHI $.
    $( [23-Sep-2004] $) $( [17-May-1994] $)

  ${
    $d x A $.  $d x B $.
    $( The intersection of two classes is a subset of one of them.  Part of
       Exercise 12 of [TakeutiZaring] p. 18. $)
    inss1 $p |- ( A i^i B ) C_ A $=
      ( vx cin cv wcel elin simplbi ssriv ) CABDZACEZJFKAFKBFKABGHI $.
      $( [27-Apr-1994] $)
  $}

  $( The intersection of two classes is a subset of one of them.  Part of
     Exercise 12 of [TakeutiZaring] p. 18. $)
  inss2 $p |- ( A i^i B ) C_ B $=
    ( cin incom inss1 eqsstr3i ) ABCBACBBADBAEF $.
    $( [27-Apr-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass of intersection.  Theorem 2.8(vii) of [Monk1] p. 26.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssin $p |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) $=
      ( vx cv wcel wi wal wa cin wss elin imbi2i albii jcab 19.26 3bitrri dfss2
      anbi12i 3bitr4i ) DEZAFZUABFZGZDHZUBUACFZGZDHZIZUBUABCJZFZGZDHZABKZACKZIA
      UJKUMUBUCUFIZGZDHUDUGIZDHUIULUQDUKUPUBUABCLMNUQURDUBUCUFONUDUGDPQUNUEUOUH
      DABRDACRSDAUJRT $.
      $( [26-Jun-2011] $) $( [15-Jun-2004] $)
  $}

  ${
    ssini.1 $e |- A C_ B $.
    ssini.2 $e |- A C_ C $.
    $( An inference showing that the a subclass of two classes is a subclass of
       their intersection. $)
    ssini $p |- A C_ ( B i^i C ) $=
      ( wss wa cin pm3.2i ssin mpbi ) ABFZACFZGABCHFLMDEIABCJK $.
      $( [24-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Add right intersection to subclass relation.  (The proof was shortened
       by Andrew Salmon, 26-Jun-2011.) $)
    ssrin $p |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) $=
      ( vx wss cin cv wcel wa ssel anim1d elin 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [26-Jun-2011] $) $( [16-Aug-1994] $)

    $( Add left intersection to subclass relation. $)
    sslin $p |- ( A C_ B -> ( C i^i A ) C_ ( C i^i B ) ) $=
      ( wss cin ssrin incom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
      $( [19-Oct-1999] $)
  $}

  $( Intersection of subclasses. $)
  ss2in $p |- ( ( A C_ B /\ C C_ D ) -> ( A i^i C ) C_ ( B i^i D ) ) $=
    ( wss cin ssrin sslin sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [5-May-2000] $)

  $( Intersection preserves subclass relationship. $)
  ssinss1 $p |- ( A C_ C -> ( A i^i B ) C_ C ) $=
    ( cin wss wi inss1 sstr2 ax-mp ) ABDZAEACEJCEFABGJACHI $.
    $( [14-Sep-1999] $)

  $( Inclusion of an intersection of two classes. $)
  inss $p |- ( ( A C_ C \/ B C_ C ) -> ( A i^i B ) C_ C ) $=
    ( wss cin ssinss1 incom syl5eqss jaoi ) ACDABEZCDBCDZABCFKJBAECABGBACFHI $.
    $( [30-Oct-2014] $)

  $( Absorption law for union. $)
  unabs $p |- ( A u. ( A i^i B ) ) = A $=
    ( cin wss cun wceq inss1 ssequn2 mpbi ) ABCZADAJEAFABGJAHI $.
    $( [16-Apr-2006] $)

  $( Absorption law for intersection. $)
  inabs $p |- ( A i^i ( A u. B ) ) = A $=
    ( cun wss cin wceq ssun1 df-ss mpbi ) AABCZDAJEAFABGAJHI $.
    $( [16-Apr-2006] $)

  $( Negation of subclass expressed in terms of intersection and proper
     subclass.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  nssinpss $p |- ( -. A C_ B <-> ( A i^i B ) C. A ) $=
    ( cin wne wss wa wn wpss inss1 biantrur df-ss necon3bbii df-pss 3bitr4i ) A
    BCZADZOAEZPFABEZGOAHQPABIJROAABKLOAMN $.
    $( [26-Jun-2011] $) $( [30-Jun-2004] $)

  $( Negation of subclass expressed in terms of proper subclass and union. $)
  nsspssun $p |- ( -. A C_ B <-> B C. ( A u. B ) ) $=
    ( wss wn cun wa wpss ssun2 biantrur ssid biantru unss bitri xchnxbir dfpss3
    bitr4i ) ABCZDBABEZCZRBCZDZFZBRGTUBQSUABAHIQQBBCZFTUCQBJKABBLMNBROP $.
    $( [15-Sep-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Subclass defined in terms of class difference.  See comments under
       ~ dfun2 .  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    dfss4 $p |- ( A C_ B <-> ( B \ ( B \ A ) ) = A ) $=
      ( vx wss wceq cdif sseqin2 cv wcel wn wa eldif notbii anbi2i wi elin abai
      cin iman bitr4i 3bitri difeqri eqeq1i ) ABDBARZAEBBAFZFZAEABGUFUDACBUEUDC
      HZBIZUGUEIZJZKUHUHUGAIZJKZJZKZUGUDIZUJUMUHUIULUGBALMNUOUHUKKUHUHUKOZKUNUG
      BAPUHUKQUPUMUHUHUKSNUATUBUCT $.
      $( [26-Jun-2011] $) $( [22-Mar-1998] $)

    $( An alternate definition of the union of two classes in terms of class
       difference, requiring no dummy variables.  Along with ~ dfin2 and
       ~ dfss4 it shows we can express union, intersection, and subset directly
       in terms of the single "primitive" operation ` \ ` (class
       difference). $)
    dfun2 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) $=
      ( vx cun cvv cdif cv wcel wo wn wa eldif vex mpbiran anbi1i ioran 3bitr4i
      con2bii elun eqriv ) CABDZEEAFZBFZFZCGZAHZUEBHZIZUEUCHZJZUEUAHUEUDHZUIUHU
      EUBHZUGJZKUFJZUMKUIUHJULUNUMULUEEHZUNUEEALCMZNOUEUBBLUFUGPQRUEABSUKUOUJUE
      EUCLUPNQT $.
      $( [10-Jun-2004] $)

    $( An alternate definition of the intersection of two classes in terms of
       class difference, requiring no dummy variables.  See comments under
       ~ dfun2 .  Another version is given by ~ dfin4 . $)
    dfin2 $p |- ( A i^i B ) = ( A \ ( _V \ B ) ) $=
      ( vx cin cvv cdif cv wcel wa wn eldif mpbiran con2bii anbi2i elin 3bitr4i
      vex eqriv ) CABDZAEBFZFZCGZAHZUBBHZIUCUBTHZJZIUBSHUBUAHUDUFUCUEUDUEUBEHUD
      JUBEBKCQLMNUBABOUBATKPR $.
      $( [10-Jun-2004] $)

    $( Difference with intersection.  Theorem 33 of [Suppes] p. 29.  (The proof
       was shortened by Andrew Salmon, 26-Jun-2011.) $)
    difin $p |- ( A \ ( A i^i B ) ) = ( A \ B ) $=
      ( vx cin cdif cv wcel wi wn pm4.61 anclb elin imbi2i iman 3bitr2i con2bii
      wa eldif 3bitr4i difeqri ) CAABDZABEZCFZAGZUCBGZHZIUDUEIQUDUCUAGZIQZUCUBG
      UDUEJUFUHUFUDUDUEQZHUDUGHUHIUDUEKUGUIUDUCABLMUDUGNOPUCABRST $.
      $( [26-Jun-2011] $) $( [31-Mar-1998] $)
  $}

  $( Union defined in terms of intersection (DeMorgan's law).  Definition of
     union in [Mendelson] p. 231. $)
  dfun3 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) $=
    ( cun cvv cdif cin dfun2 dfin2 ddif difeq2i eqtr2i eqtri ) ABCDDAEZBEZEDMDB
    EZFZEABGNPDPMDOEZENMOHQBMBIJKJL $.
    $( [8-Jan-2002] $)

  $( Intersection defined in terms of union (DeMorgan's law.  Similar to
     Exercise 4.10(n) of [Mendelson] p. 231. $)
  dfin3 $p |- ( A i^i B ) = ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) $=
    ( cvv cdif cun cin ddif dfun2 difeq1i difeq2i eqtri dfin2 3eqtr4ri ) CCACBD
    ZDZDZDOCCADZNEZDABFOGRPCRCCQDZNDZDPQNHTOCSANAGIJKJABLM $.
    $( [8-Jan-2002] $)

  $( Alternate definition of the intersection of two classes.  Exercise 4.10(q)
     of [Mendelson] p. 231. $)
  dfin4 $p |- ( A i^i B ) = ( A \ ( A \ B ) ) $=
    ( cin cdif wss wceq inss1 dfss4 mpbi difin difeq2i eqtr3i ) AAABCZDZDZMAABD
    ZDMAEOMFABGMAHINPAABJKL $.
    $( [25-Nov-2003] $)

  $( Intersection with universal complement.  Remark in [Stoll] p. 20. $)
  invdif $p |- ( A i^i ( _V \ B ) ) = ( A \ B ) $=
    ( cvv cdif cin dfin2 ddif difeq2i eqtri ) ACBDZEACJDZDABDAJFKBABGHI $.
    $( [17-Aug-2004] $)

  $( Intersection with class difference.  Theorem 34 of [Suppes] p. 29. $)
  indif $p |- ( A i^i ( A \ B ) ) = ( A \ B ) $=
    ( cdif cin dfin4 difeq2i difin 3eqtr2i ) AABCZDAAICZCAABDZCIAIEKJAABEFABGH
    $.
    $( [17-Aug-2004] $)

  $( Bring an intersection in and out of a class difference.  (Contributed by
     Jeff Hankins, 15-Jul-2009.) $)
  indif2 $p |- ( A i^i ( B \ C ) ) = ( ( A i^i B ) \ C ) $=
    ( cin cvv cdif inass invdif ineq2i 3eqtr3ri ) ABDZECFZDABLDZDKCFABCFZDABLGK
    CHMNABCHIJ $.
    $( [12-Jul-2009] $)

  $( Commutation law for intersection and difference.  (Contributed by Scott
     Fenton, 18-Feb-2013.) $)
  indifcom $p |- ( A i^i ( B \ C ) ) = ( B i^i ( A \ C ) ) $=
    ( cin cdif incom difeq1i indif2 3eqtr4i ) ABDZCEBADZCEABCEDBACEDJKCABFGABCH
    BACHI $.
    $( [18-Feb-2013] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distributive law for intersection over union.  Exercise 10 of
       [TakeutiZaring] p. 17.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    indi $p |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) $=
      ( vx cun cin cv wcel wo wa andi elin orbi12i bitr4i anbi2i 3bitr4i ineqri
      elun ) DABCEZABFZACFZEZDGZAHZUCBHZUCCHZIZJZUCTHZUCUAHZIZUDUCSHZJUCUBHUHUD
      UEJZUDUFJZIUKUDUEUFKUIUMUJUNUCABLUCACLMNULUGUDUCBCROUCTUARPQ $.
      $( [26-Jun-2011] $) $( [30-Sep-2002] $)

    $( Distributive law for union over intersection.  Exercise 11 of
       [TakeutiZaring] p. 17.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    undi $p |- ( A u. ( B i^i C ) ) = ( ( A u. B ) i^i ( A u. C ) ) $=
      ( vx cin cun cv wcel wa wo elin elun anbi12i orbi2i bitr2i 3bitrri uneqri
      ordi ) DABCEZABFZACFZEZDGZUBHUCTHZUCUAHZIUCAHZUCBHZJZUFUCCHZJZIZUFUCSHZJZ
      UCTUAKUDUHUEUJUCABLUCACLMUMUFUGUIIZJUKULUNUFUCBCKNUFUGUIROPQ $.
      $( [30-Sep-2002] $)
  $}

  $( Distributive law for intersection over union.  Theorem 28 of [Suppes]
     p. 27. $)
  indir $p |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) $=
    ( cun cin indi incom uneq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.
    $( [30-Sep-2002] $)

  $( Distributive law for union over intersection.  Theorem 29 of [Suppes]
     p. 27. $)
  undir $p |- ( ( A i^i B ) u. C ) = ( ( A u. C ) i^i ( B u. C ) ) $=
    ( cin cun undi uncom ineq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.
    $( [30-Sep-2002] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Infer equality from equalities of union and intersection.  Exercise 20
       of [Enderton] p. 32 and its converse. $)
    unineq $p |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) )
                 <-> A = B ) $=
      ( vx cun wceq cin wa wcel wb eleq2 elin 3bitr3g iba bibi12d syl5ibr uncom
      wo elun biorf cv wi adantld eqeq12i sylbi adantrd pm2.61i eqrdv uneq1 jca
      wn ineq1 impbii ) ACEZBCEZFZACGZBCGZFZHZABFZUTDABDUAZCIZUTVBAIZVBBIZJZUBV
      CUSVFUPUSVFVCVDVCHZVEVCHZJUSVBUQIVBURIVGVHUQURVBKVBACLVBBCLMVCVDVGVEVHVCV
      DNVCVENOPUCVCUKZUPVFUSUPVFVIVCVDRZVCVERZJUPVBCAEZIZVBCBEZIZVJVKUPVLVNFVMV
      OJUNVLUOVNACQBCQUDVLVNVBKUEVBCASVBCBSMVIVDVJVEVKVCVDTVCVETOPUFUGUHVAUPUSA
      BCUIABCULUJUM $.
      $( [10-Aug-2004] $)
  $}

  $( Equality of union and intersection implies equality of their arguments.
     (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  uneqin $p |- ( ( A u. B ) = ( A i^i B ) <-> A = B ) $=
    ( cun cin wceq wss wa eqimss unss ssin sstr sylbir simpl anim12i syl sylibr
    eqss uneq2 unidm inidm eqtr4i ineq2 syl5eq eqtr3d impbii ) ABCZABDZEZABEZUH
    ABFZBAFZGZUIUHUFUGFZULUFUGHUMAUGFZBUGFZGULABUGIUNUJUOUKUNAAFUJGUJAABJAABKLU
    OUKBBFZGUKBABJUKUPMLNLOABQPUIAACZUFUGABARUIUQAADZUGUQAURASATUAABAUBUCUDUE
    $.
    $( [16-Apr-2006] $)

  $( Distributive law for class difference.  Theorem 39 of [Suppes] p. 29. $)
  difundi $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) i^i ( A \ C ) ) $=
    ( cun cdif cvv cin dfun3 difeq2i inindi dfin2 invdif ineq12i 3eqtr3i eqtri
    ) ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASGAQGZARGZGUAUDAQRJASKUEUBUFUCABL
    ACLMNO $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference. $)
  difundir $p |- ( ( A u. B ) \ C ) = ( ( A \ C ) u. ( B \ C ) ) $=
    ( cun cvv cdif cin indir invdif uneq12i 3eqtr3i ) ABDZECFZGAMGZBMGZDLCFACFZ
    BCFZDABMHLCINPOQACIBCIJK $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference.  Theorem 40 of [Suppes] p. 29. $)
  difindi $p |- ( A \ ( B i^i C ) ) = ( ( A \ B ) u. ( A \ C ) ) $=
    ( cin cdif cvv cun dfin3 difeq2i indi dfin2 invdif uneq12i 3eqtr3i eqtri )
    ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASDAQDZARDZGUAUDAQRJASKUEUBUFUCABLAC
    LMNO $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference. $)
  difindir $p |- ( ( A i^i B ) \ C ) = ( ( A \ C ) i^i ( B \ C ) ) $=
    ( cin cvv cdif inindir invdif ineq12i 3eqtr3i ) ABDZECFZDALDZBLDZDKCFACFZBC
    FZDABLGKCHMONPACHBCHIJ $.
    $( [17-Aug-2004] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Distribute intersection over difference.  (Contributed by Scott Fenton,
       14-Apr-2011.) $)
    indifdir $p |- ( ( A \ B ) i^i C ) = ( ( A i^i C ) \ ( B i^i C ) ) $=
      ( vx cdif cin cv wcel wn wa pm3.24 intnan anass mtbir biorfi 3bitr4i elin
      wo eldif bitri an32 andi ianor anbi2i bitr4i anbi1i notbii anbi12i eqriv
      ) DABEZCFZACFZBCFZEZDGZAHZUOBHZIZJZUOCHZJZUPUTJZUQUTJZIZJZUOUKHZUOUNHZVAV
      BURUTIZRZJZVEVBURJZVKVBVHJZRVAVJVLVKVLUPUTVHJZJVMUPUTKLUPUTVHMNOUPURUTUAV
      BURVHUBPVDVIVBUQUTUCUDUEVFUOUJHZUTJVAUOUJCQVNUSUTUOABSUFTVGUOULHZUOUMHZIZ
      JVEUOULUMSVOVBVQVDUOACQVPVCUOBCQUGUHTPUI $.
      $( [14-Apr-2011] $)
  $}

  $( DeMorgan's law for union.  Theorem 5.2(13) of [Stoll] p. 19. $)
  undm $p |- ( _V \ ( A u. B ) ) = ( ( _V \ A ) i^i ( _V \ B ) ) $=
    ( cvv difundi ) CABD $.
    $( [18-Aug-2004] $)

  $( DeMorgan's law for intersection.  Theorem 5.2(13') of [Stoll] p. 19. $)
  indm $p |- ( _V \ ( A i^i B ) ) = ( ( _V \ A ) u. ( _V \ B ) ) $=
    ( cvv difindi ) CABD $.
    $( [18-Aug-2004] $)

  $( A relationship involving double difference and union. $)
  difun1 $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) $=
    ( cvv cdif cin cun inass invdif undm ineq2i eqtr3i 3eqtr3i difeq1i ) ADBEZF
    ZCEZABCGZEZABEZCEPDCEZFAOUAFZFZQSAOUAHPCIADREZFUCSUDUBABCJKARILMPTCABINL $.
    $( [29-Aug-2004] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( An equality involving class union and class difference.  The first
       equality of Exercise 13 of [TakeutiZaring] p. 22.  (Contributed by Alan
       Sare, 17-Apr-2012.) $)
    undif3 $p |- ( A u. ( B \ C ) ) = ( ( A u. B ) \ ( C \ A ) ) $=
      ( vx cdif cun cv wcel wn wa elun pm4.53 eldif xchnxbir anbi12i orbi2i orc
      wo olc jca anim12i simpl adantr adantl ccase impbii 3bitri 3bitr4ri eqriv
      jaoi orcd ) DABCEZFZABFZCAEZEZDGZUNHZUQUOHZIZJUQAHZUQBHZRZUQCHZIZVARZJZUQ
      UPHUQUMHZURVCUTVFUQABKVDVAIJVFUSVDVALUQCAMNOUQUNUOMVHVAUQULHZRVAVBVEJZRZV
      GUQAULKVIVJVAUQBCMPVKVGVAVGVJVAVCVFVAVBQVAVESTVBVCVEVFVBVASVEVAQUAUJVAVEV
      BVAVKVAVEJVAVJVAVEUBUKVJVASVAVKVAVAVJQZUCVAVKVBVLUDUEUFUGUHUI $.
      $( [17-Apr-2012] $)

    $( Represent a set difference as an intersection with a larger difference.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    difin2 $p |- ( A C_ C -> ( A \ B ) = ( ( C \ B ) i^i A ) ) $=
      ( vx wss cdif cin cv wcel wn wa wi wb ssel pm4.71 sylib anbi1d eldif elin
      anbi1i ancom anass bitr4i 3bitri 3bitr4g eqrdv ) ACEZDABFZCBFZAGZUGDHZAIZ
      UKBIJZKULUKCIZKZUMKZUKUHIUKUJIZUGULUOUMUGULUNLULUOMACUKNULUNOPQUKABRUQUKU
      IIZULKUNUMKZULKZUPUKUIASURUSULUKCBRTUTULUSKUPUSULUAULUNUMUBUCUDUEUF $.
      $( [2-Sep-2009] $)
  $}

  $( Swap second and third argument of double difference. $)
  dif32 $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) $=
    ( cun cdif uncom difeq2i difun1 3eqtr3i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [18-Aug-2004] $)

  $( Absorption-like law for class difference: you can remove a class only
     once.  (Contributed by FL, 2-Aug-2009.) $)
  difabs $p |- ( ( A \ B ) \ B ) = ( A \ B ) $=
    ( cun cdif difun1 unidm difeq2i eqtr3i ) ABBCZDABDZBDJABBEIBABFGH $.
    $( [2-Aug-2009] $)

  $( Two ways to express symmetric difference.  This theorem shows the
     equivalence of the definition of symmetric difference in [Stoll] p. 13 and
     the restated definition in Example 4.1 of [Stoll] p. 262. $)
  symdif1 $p |- ( ( A \ B ) u. ( B \ A ) ) = ( ( A u. B ) \ ( A i^i B ) ) $=
    ( cun cin cdif difundir difin incom difeq2i eqtri uneq12i eqtr2i ) ABCABDZE
    AMEZBMEZCABEZBAEZCABMFNPOQABGOBBADZEQMRBABHIBAGJKL $.
    $( [17-Aug-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Two ways to express symmetric difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    symdif2 $p |- ( ( A \ B ) u. ( B \ A ) ) =
                  { x | -. ( x e. A <-> x e. B ) } $=
      ( cv wcel wb wn cdif cun wo wa eldif orbi12i elun xor 3bitr4i abbi2i ) AD
      ZBEZRCEZFGZABCHZCBHZIZRUBEZRUCEZJSTGKZTSGKZJRUDEUAUEUGUFUHRBCLRCBLMRUBUCN
      STOPQ $.
      $( [26-Jun-2011] $) $( [17-Aug-2004] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.
    $( Union of two class abstractions.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unab $p |- ( { x | ph } u. { x | ps } ) = { x | ( ph \/ ps ) } $=
      ( vy cab wo cv wsbc wcel sbor df-clab orbi12i 3bitr4ri uneqri ) DACEZBCEZ
      ABFZCEZQCDGZHACSHZBCSHZFSRISOIZSPIZFABCDJQDCKUBTUCUAADCKBDCKLMN $.
      $( [26-Jun-2011] $) $( [29-Sep-2002] $)

    $( Intersection of two class abstractions.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    inab $p |- ( { x | ph } i^i { x | ps } ) = { x | ( ph /\ ps ) } $=
      ( vy cab wa cv wsbc wcel sban df-clab anbi12i 3bitr4ri ineqri ) DACEZBCEZ
      ABFZCEZQCDGZHACSHZBCSHZFSRISOIZSPIZFABCDJQDCKUBTUCUAADCKBDCKLMN $.
      $( [26-Jun-2011] $) $( [29-Sep-2002] $)

    $( Difference of two class abstractions.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difab $p |- ( { x | ph } \ { x | ps } ) = { x | ( ph /\ -. ps ) } $=
      ( vy cab wn wcel wsb df-clab sban bicomi xchbinxr anbi12i 3bitrri difeqri
      wa cv sbn ) DACEZBCEZABFZPZCEZDQZUCGUBCDHACDHZUACDHZPUDSGZUDTGZFZPUBDCIAU
      ACDJUEUGUFUIUGUEADCIKUFBCDHUHBCDRBDCILMNO $.
      $( [26-Jun-2011] $) $( [23-Oct-2004] $)
  $}

  $( A class builder defined by a negation.  (Contributed by FL,
     18-Sep-2010.) $)
  notab $p |- { x | -. ph } = ( _V \ { x | ph } ) $=
    ( wn cvv crab cv wcel wa cab cdif df-rab rabab difab difeq1i eqtr3i 3eqtr3i
    abid2 ) ACZBDEBFDGZRHBIZRBIDABIZJZRBDKRBLSBIZUAJTUBSABMUCDUABDQNOP $.
    $( [18-Sep-2010] $)

  $( Union of two restricted class abstractions. $)
  unrab $p |- ( { x e. A | ph } u. { x e. A | ps } ) =
              { x e. A | ( ph \/ ps ) } $=
    ( cv wcel wa cab cun wo crab unab andi abbii eqtr4i df-rab uneq12i 3eqtr4i
    ) CEDFZAGZCHZSBGZCHZIZSABJZGZCHZACDKZBCDKZIUECDKUDTUBJZCHUGTUBCLUFUJCSABMNO
    UHUAUIUCACDPBCDPQUECDPR $.
    $( [25-Mar-2004] $)

  $( Intersection of two restricted class abstractions. $)
  inrab $p |- ( { x e. A | ph } i^i { x e. A | ps } ) =
              { x e. A | ( ph /\ ps ) } $=
    ( cv wcel wa cab cin crab inab anandi abbii eqtr4i df-rab ineq12i 3eqtr4i )
    CEDFZAGZCHZRBGZCHZIZRABGZGZCHZACDJZBCDJZIUDCDJUCSUAGZCHUFSUACKUEUICRABLMNUG
    TUHUBACDOBCDOPUDCDOQ $.
    $( [1-Sep-2006] $)

  ${
    $d x B $.
    $( Intersection with a restricted class abstraction. $)
    inrab2 $p |- ( { x e. A | ph } i^i B ) = { x e. ( A i^i B ) | ph } $=
      ( cv wcel wa cab cin crab inab elin anbi1i an32 bitri abbii eqtr4i df-rab
      abid2 eqcomi ineq12i 3eqtr4i ) BEZCFZAGZBHZUCDFZBHZIZUCCDIZFZAGZBHZABCJZD
      IABUJJUIUEUGGZBHUMUEUGBKULUOBULUDUGGZAGUOUKUPAUCCDLMUDUGANOPQUNUFDUHABCRU
      HDBDSTUAABUJRUB $.
      $( [19-Nov-2007] $)
  $}

  $( Difference of two restricted class abstractions. $)
  difrab $p |- ( { x e. A | ph } \ { x e. A | ps } ) =
              { x e. A | ( ph /\ -. ps ) } $=
    ( cv wcel wa cab cdif wn difab anass simpr con3i anim2i pm3.2 adantr df-rab
    crab wi con3d imdistani impbii bitr3i abbii eqtr4i difeq12i 3eqtr4i ) CEDFZ
    AGZCHZUIBGZCHZIZUIABJZGZGZCHZACDSZBCDSZIUPCDSUNUJULJZGZCHURUJULCKUQVBCUQUJU
    OGZVBUIAUOLVCVBUOVAUJULBUIBMNOUJVAUOUJBULUIBULTAUIBPQUAUBUCUDUEUFUSUKUTUMAC
    DRBCDRUGUPCDRUH $.
    $( [23-Oct-2004] $)

  ${
    $d x A $.
    $( Alternate definition of restricted class abstraction. $)
    dfrab2 $p |- { x e. A | ph } = ( { x | ph } i^i A ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i eqtr3i incom 3eqtri )
      ABCDBECFZAGBHZCABHZIZSCIABCJQBHZSIRTQABKUACSBCLMNCSOP $.
      $( [20-Sep-2003] $)

    $( Alternate definition of restricted class abstraction.  (Contributed by
       Mario Carneiro, 8-Sep-2013.) $)
    dfrab3 $p |- { x e. A | ph } = ( A i^i { x | ph } ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i 3eqtr2i ) ABCDBECFZAGB
      HOBHZABHZICQIABCJOABKPCQBCLMN $.
      $( [8-Sep-2013] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Transfer uniqueness to a smaller subclass. $)
    reuss2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\
                 ( E. x e. A ph /\ E! x e. B ps ) ) -> E! x e. A ph ) $=
      ( wrex wreu wa wss wi wral wcel wex weu df-rex df-reu anbi12i wal sylan2b
      cv wmo df-ral ssel prth sylan exp4b com23 a2d imp4a alimdv imp euimmo syl
      eu5 simplbi2 syl9 imp32 sylibr ) ACDFZBCEGZHDEIZABJZCDKZHZCTZDLZAHZCMZVEE
      LZBHZCNZHZACDGZUSVHUTVKACDOBCEPQVDVLHVGCNZVMVDVHVKVNVDVKVGCUAZVHVNVDVGVJJ
      ZCRZVKVOJVCVAVFVBJZCRZVQVBCDUBVAVSVQVAVRVPCVAVRVFAVJVAVFVBAVJJZVAVBVFVTVA
      VBVFAVJVAVFVIJVBVPDEVEUCVFVIABUDUEUFUGUHUIUJUKSVGVJCULUMVNVHVOVGCUNUOUPUQ
      ACDPURS $.
      $( [20-Oct-2005] $)

    $( Transfer uniqueness to a smaller subclass. $)
    reuss $p |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) ->
                E! x e. A ph ) $=
      ( wss wrex wreu wi wral wa cv wcel idd rgen reuss2 mpanl2 3impb ) CDEZABC
      FZABDGZABCGZRAAHZBCISTJUAUBBCBKCLAMNAABCDOPQ $.
      $( [2-Nov-2005] $) $( [21-Aug-1999] $)
$(
      ( wss wrex wreu cv wcel wa wex weu wmo wi wal ssel anim1d alrimiv
      euimmo syl eu5 biimpri ex syl9 imp32 df-reu sylibr df-rex anbi12i
  sylan2bOLD 3impb ) CDEZABCFZABDGZABCGZULBHZCIZAJZBKZUPDIZAJZBLZJZUOUMUNJULVC
      JURBLZUOULUSVBVDULVBURBMZUSVDULURVANZBOVBVENULVFBULUQUTACDUPPQRURVABSTUSV
      EVDVDUSVEJURBUAUBUCUDUEABCUFUGUMUSUNVBABCUHABDUFUIUJUK $.
$)

    $( Transfer uniqueness to a smaller class. $)
    reuun1 $p |- ( ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) )
                 -> E! x e. A ph ) $=
      ( cun wss wo wi wral wrex wreu wa ssun1 orc rgenw reuss2 mpanl12 ) DDEFZG
      AABHZIZCDJACDKTCSLMACDLDENUACDABOPATCDSQR $.
      $( [21-Oct-2005] $)

    $( Transfer uniqueness to a smaller or larger class. $)
    reuun2 $p |- ( -. E. x e. B ph ->
             ( E! x e. ( A u. B ) ph <-> E! x e. A ph ) ) $=
      ( wrex wn cv wcel wa wo weu cun wreu wex df-rex euor2 sylnbi df-reu elun
      wb anbi1i andir orcom 3bitri eubii bitri 3bitr4g ) ABDEZFBGZDHZAIZUICHZAI
      ZJZBKZUMBKZABCDLZMZABCMUHUKBNUOUPTABDOUKUMBPQURUIUQHZAIZBKUOABUQRUTUNBUTU
      LUJJZAIUMUKJUNUSVAAUICDSUAULUJAUBUMUKUCUDUEUFABCRUG $.
      $( [21-Oct-2005] $)

    $( Restricted uniqueness "picks" a member of a subclass. $)
    reupick $p |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) ->
                  ( x e. A <-> x e. B ) ) $=
      ( wss wrex wreu wa cv wcel wi ssel ad2antrr wex weu df-rex df-reu anbi12i
      ancrd anim1d an32 syl6ib eximdv eupick ex syl9 com23 imp32 exp3acom23 imp
      sylan2b impbid ) CDEZABCFZABDGZHZHZAHBIZCJZURDJZUMUSUTKUPACDURLZMUQAUTUSK
      UQUTAUSUPUMUSAHZBNZUTAHZBOZHVDUSKZUNVCUOVEABCPABDQRUMVCVEVFUMVEVCVFUMVCVD
      USHZBNZVEVFUMVBVGBUMVBUTUSHZAHVGUMUSVIAUMUSUTVASTUTUSAUAUBUCVEVHVFVDUSBUD
      UEUFUGUHUKUIUJUL $.
      $( [21-Aug-1999] $)

    $( Restricted uniqueness "picks" a member of a subclass.  (Contributed by
       Mario Carneiro, 15-Dec-2013.) $)
    reupick2 $p |- ( ( ( A. x e. A ( ps -> ph ) /\ E. x e. A ps /\
                       E! x e. A ph ) /\ x e. A ) -> ( ph <-> ps ) ) $=
      ( wi wral wrex wreu w3a cv wcel wa weu simp3 df-reu sylib r19.29 id impac
      wex reximi syl 3adant3 df-rex anass exbii bitr4i syl2anc expdimp 3ad2ant1
      eupick ra4 imp impbid ) BAEZCDFZBCDGZACDHZIZCJDKZLABUSUTABUSUTALZCMZVABLZ
      CTZVABEUSURVBUPUQURNACDOPUSABLZCDGZVDUPUQVFURUPUQLUOBLZCDGVFUOBCDQVGVECDU
      OBAUORSUAUBUCVFUTVELZCTVDVECDUDVCVHCUTABUEUFUGPVABCUKUHUIUSUTUOUPUQUTUOEU
      RUOCDULUJUMUN $.
      $( [15-Dec-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           The empty set
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the empty or null set. $)
  $c (/) $. $( null set $)

  $( Extend class notation to include the empty set. $)
  c0 $a class (/) $.

  $( Define the empty set.  Special case of Exercise 4.10(o) of [Mendelson]
     p. 231.  For a more traditional definition, but requiring a dummy
     variable, see ~ dfnul2 . $)
  df-nul $a |- (/) = ~ _V $.

  $( The empty set via class difference instead of complement. $)
  dfnul1 $p |- (/) = ( _V \ _V ) $=
    ( c0 cvv ccompl cdif df-nul dfcompl2 eqtri ) ABCBBDEBFG $.
    $( [18-Nov-2014] $)

  $( Alternate definition of the empty set.  Definition 5.14 of [TakeutiZaring]
     p. 20. $)
  dfnul2 $p |- (/) = { x | -. x = x } $=
    ( cv wceq wn c0 wcel cvv cdif wa dfnul1 eleq2i eldif eqid pm3.24 2th 3bitri
    con2bii abbi2i ) ABZSCZDZAESEFSGGHZFSGFZUCDIZUAEUBSJKSGGLTUDTUDDSMUCNOQPR
    $.
    $( [26-Dec-1996] $)

  $( Alternate definition of the empty set.. $)
  dfnul3 $p |- (/) = { x e. A | -. x e. A } $=
    ( cv wceq wn cab wcel wa crab pm3.24 eqid 2th con1bii dfnul2 df-rab 3eqtr4i
    c0 abbii ) ACZSDZEZAFSBGZUBEZHZAFQUCABIUAUDAUDTUDETUBJSKLMRANUCABOP $.
    $( [25-Mar-2004] $)

  $( The empty set exists. $)
  0ex $p |- (/) e. _V $=
    ( c0 cvv ccompl df-nul vvex complex eqeltri ) ABCBDBEFG $.
    $( [18-Nov-2014] $)

  ${
    $d A x $.
    $( The empty set has no elements.  Theorem 6.14 of [Quine] p. 44. $)
    noel $p |- -. A e. (/) $=
      ( vx cvv wcel c0 wn cv wceq eqid dfnul2 abeq2i con2bii mpbi eleq1 vtocleg
      mtbii elex con3i pm2.61i ) ACDZAEDZFZUBBACBGZAHUCEDZUAUCUCHZUDFUCIUDUEUEF
      BEBJKLMUCAENPOUATAEQRS $.
      $( [5-Aug-1993] $)
  $}

  $( If a set has elements, it is not empty. $)
  n0i $p |- ( B e. A -> -. A = (/) ) $=
    ( c0 wceq wcel noel eleq2 mtbiri con2i ) ACDZBAEZJKBCEBFACBGHI $.
    $( [31-Dec-1993] $)

  $( If a set has elements, it is not empty. $)
  ne0i $p |- ( B e. A -> A =/= (/) ) $=
    ( wcel c0 wceq wn wne n0i df-ne sylibr ) BACADEFADGABHADIJ $.
    $( [31-Dec-1993] $)

  $( The universal class is not equal to the empty set. $)
  vn0 $p |- _V =/= (/) $=
    ( vx cv cvv wcel c0 wne vex ne0i ax-mp ) ABZCDCEFAGCJHI $.
    $( [11-Sep-2008] $)

  ${
    $d x y $.  $d y A $.
    ne0f.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20.  This version of ~ n0 requires only that ` x `
       not be free in, rather than not occur in, ` A ` . $)
    n0f $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( c0 wne cv wcel wn wal wex wceq df-ne ax-17 cleqf noel nbn albii bitr4i
      wb xchbinx df-ex ) CEFZAGZCHZIZAJZIUEAKUCCELZUGCEMUHUEUDEHZTZAJUGABCEDBGE
      HANOUFUJAUIUEUDPQRSUAUEAUBS $.
      $( [2-Apr-2007] $) $( [17-Oct-2003] $)
  $}

  ${
    $d x y A $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20. $)
    n0 $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( vy cv wcel ax-17 n0f ) ACBCDBEAFG $.
      $( [29-Sep-2006] $)

    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20. $)
    neq0 $p |- ( -. A = (/) <-> E. x x e. A ) $=
      ( c0 wceq wn wne cv wcel wex df-ne n0 bitr3i ) BCDEBCFAGBHAIBCJABKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ph $.
    reximdva0.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Restricted existence deduced from non-empty class. $)
    reximdva0 $p |- ( ( ph /\ A =/= (/) ) -> E. x e. A ps ) $=
      ( c0 wne wa cv wcel wex wrex n0 ex ancld eximdv imp sylan2b df-rex sylibr
      ) ADFGZHCIDJZBHZCKZBCDLUAAUBCKZUDCDMAUEUDAUBUCCAUBBAUBBENOPQRBCDST $.
      $( [1-Feb-2012] $)
  $}

  ${
    $d A x $.
    $( A case of equivalence of "at most one" and "only one".  (Contributed by
       FL, 6-Dec-2010.) $)
    n0moeu $p |- ( A =/= (/) -> ( E* x x e. A <-> E! x x e. A ) ) $=
      ( c0 wne cv wcel wmo wex wa weu n0 biimpi biantrurd eu5 syl6bbr ) BCDZAEB
      FZAGZQAHZRIQAJPSRPSABKLMQANO $.
      $( [2-Mar-2011] $) $( [14-Nov-2010] $)
  $}

  $( Vacuous existential quantification is false. $)
  rex0 $p |- -. E. x e. (/) ph $=
    ( c0 cv wcel wn noel pm2.21i nrex ) ABCBDZCEAFJGHI $.
    $( [15-Oct-2003] $)

  ${
    $d x A $.
    $( The empty set has no elements.  Theorem 2 of [Suppes] p. 22. $)
    eq0 $p |- ( A = (/) <-> A. x -. x e. A ) $=
      ( c0 wceq cv wcel wn wal wex neq0 df-ex bitri con4bii ) BCDZAEBFZGAHZNGOA
      IPGABJOAKLM $.
      $( [29-Aug-1993] $)

  $}

  ${
    $d x A $.  $d x y $.
    $( Membership of the empty set in another class. $)
    0el $p |- ( (/) e. A <-> E. x e. A A. y -. y e. x ) $=
      ( c0 wcel cv wceq wrex wn wal risset eq0 rexbii bitri ) DCEAFZDGZACHBFOEI
      BJZACHADCKPQACBOLMN $.
      $( [29-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( The class builder of a wff not containing the abstraction variable is
       either the universal class or the empty set.  (Contributed by Mario
       Carneiro, 29-Aug-2013.) $)
    abvor0 $p |- ( { x | ph } = _V \/ { x | ph } = (/) ) $=
      ( cab cvv wceq c0 wn cv wcel vex a1i 2thd abbi1dv con3i noel 2falsed orri
      id syl ) ABCZDEZTFEZUAGAGZUBAUAAABDAABHZDIZARUEABJKLMNUCABFUCAUDFIZUCRUFG
      UCUDOKPMSQ $.
      $( [29-Aug-2013] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Nonempty class abstraction. $)
    abn0 $p |- ( { x | ph } =/= (/) <-> E. x ph ) $=
      ( vy cab c0 wne cv wcel wex n0 hbab1 ax-17 eleq1 cbvex abid exbii 3bitri
      ) ABDZEFCGZRHZCIBGZRHZBIABICRJTUBCBABCKUBCLSUARMNUBABABOPQ $.
      $( [21-Feb-2007] $) $( [26-Dec-1996] $)
  $}

  $( Non-empty restricted class abstraction. $)
  rabn0 $p |- ( { x e. A | ph } =/= (/) <-> E. x e. A ph ) $=
    ( cv wcel wa cab c0 wne wex crab wrex abn0 df-rab neeq1i df-rex 3bitr4i ) B
    DCEAFZBGZHIRBJABCKZHIABCLRBMTSHABCNOABCPQ $.
    $( [24-Feb-2007] $) $( [29-Aug-1999] $)

  $( Any restricted class abstraction restricted to the empty set is empty.
     (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  rab0 $p |- { x e. (/) | ph } = (/) $=
    ( cv c0 wcel wa cab wceq wn crab equid noel intnanr 2th abbii df-rab dfnul2
    con2bii 3eqtr4i ) BCZDEZAFZBGTTHZIZBGABDJDUBUDBUCUBUCUBIBKUAATLMNROABDPBQS
    $.
    $( [26-Jun-2011] $) $( [15-Oct-2003] $)

  $( Condition for a restricted class abstraction to be empty.  (Contributed by
     Jeff Madsen, 7-Jun-2010.) $)
  rabeq0 $p |- ( { x e. A | ph } = (/) <-> A. x e. A -. ph ) $=
    ( wn wral wrex crab c0 wceq ralnex rabn0 necon1bbii bitr2i ) ADBCEABCFZDABC
    GZHIABCJNOHABCKLM $.
    $( [7-Jun-2010] $)

  ${
    $d A x $.
    $( Law of excluded middle, in terms of restricted class abstractions.
       (Contributed by Jeff Madsen, 20-Jun-2011.) $)
    rabxm $p |- A = ( { x e. A | ph } u. { x e. A | -. ph } ) $=
      ( wn wo crab cun wceq rabid2 cv wcel exmid a1i mprgbir unrab eqtr4i ) CAA
      DZEZBCFZABCFQBCFGCSHRBCRBCIRBJCKALMNAQBCOP $.
      $( [20-Jun-2011] $)

    $( Law of noncontradiction, in terms of restricted class abstractions.
       (Contributed by Jeff Madsen, 20-Jun-2011.) $)
    rabnc $p |- ( { x e. A | ph } i^i { x e. A | -. ph } ) = (/) $=
      ( crab wn cin wa c0 inrab wceq rabeq0 cv wcel pm3.24 a1i mprgbir eqtri )
      ABCDAEZBCDFARGZBCDZHARBCITHJSEZBCSBCKUABLCMANOPQ $.
      $( [20-Jun-2011] $)
  $}

  ${
    $d x A $.
    $( The union of a class with the empty set is itself.  Theorem 24 of
       [Suppes] p. 27. $)
    un0 $p |- ( A u. (/) ) = A $=
      ( vx c0 cv wcel wo noel biorfi bicomi uneqri ) BACABDZAEZLKCEZFMLKGHIJ $.
      $( [5-Aug-1993] $)

    $( The intersection of a class with the empty set is the empty set.
       Theorem 16 of [Suppes] p. 26. $)
    in0 $p |- ( A i^i (/) ) = (/) $=
      ( vx c0 cv wcel wa noel bianfi bicomi ineqri ) BACCBDZCEZKAEZLFLMKGHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( The intersection of a class with the universal class is itself.  Exercise
     4.10(k) of [Mendelson] p. 231. $)
  inv1 $p |- ( A i^i _V ) = A $=
    ( cvv cin inss1 ssid ssv ssini eqssi ) ABCAABDAABAEAFGH $.
    $( [17-May-1998] $)

  $( The union of a class with the universal class is the universal class.
     Exercise 4.10(l) of [Mendelson] p. 231. $)
  unv $p |- ( A u. _V ) = _V $=
    ( cvv cun ssv ssun2 eqssi ) ABCZBGDBAEF $.
    $( [17-May-1998] $)

  ${
    $d A x $.
    $( The null set is a subset of any class.  Part of Exercise 1 of
       [TakeutiZaring] p. 22. $)
    0ss $p |- (/) C_ A $=
      ( vx c0 cv wcel noel pm2.21i ssriv ) BCABDZCEIAEIFGH $.
      $( [5-Aug-1993] $)
  $}

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23 and its
     converse. $)
  ss0b $p |- ( A C_ (/) <-> A = (/) ) $=
    ( c0 wceq wss eqss 0ss mpbiran2 bicomi ) ABCZABDZIJBADABEAFGH $.
    $( [17-Sep-2003] $)

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23. $)
  ss0 $p |- ( A C_ (/) -> A = (/) ) $=
    ( c0 wss wceq ss0b biimpi ) ABCABDAEF $.
    $( [13-Aug-1994] $)

  $( A subclass of an empty class is empty.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  sseq0 $p |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) $=
    ( c0 wceq wss sseq2 ss0 syl6bi impcom ) BCDZABEZACDZJKACELBCAFAGHI $.
    $( [26-Jun-2011] $) $( [7-Mar-2007] $)

  $( A class with a nonempty subclass is nonempty. $)
  ssn0 $p |- ( ( A C_ B /\ A =/= (/) ) -> B =/= (/) ) $=
    ( wss c0 wne wceq sseq0 ex necon3d imp ) ABCZADEBDEKBDADKBDFADFABGHIJ $.
    $( [17-Feb-2007] $)

  ${
    abf.1 $e |- -. ph $.
    $( A class builder with a false argument is empty. $)
    abf $p |- { x | ph } = (/) $=
      ( cab c0 wss wceq cv wcel pm2.21i abssi ss0 ax-mp ) ABDZEFNEGABEABHEICJKN
      LM $.
      $( [20-Jan-2012] $)
  $}

  ${
    $d x A $.  $d x ph $.
    eq0rdv.1 $e |- ( ph -> -. x e. A ) $.
    $( Deduction rule for equality to the empty set. $)
    eq0rdv $p |- ( ph -> A = (/) ) $=
      ( c0 wss wceq cv wcel pm2.21d ssrdv ss0 syl ) ACEFCEGABCEABHZCINEIDJKCLM
      $.
      $( [11-Jul-2014] $)
  $}

  $( Two classes are empty iff their union is empty. $)
  un00 $p |- ( ( A = (/) /\ B = (/) ) <-> ( A u. B ) = (/) ) $=
    ( c0 wceq wa cun uneq12 un0 syl6eq wss ssun1 sseq2 mpbii sylib ssun2 impbii
    ss0b jca ) ACDZBCDZEZABFZCDZUAUBCCFCACBCGCHIUCSTUCACJZSUCAUBJUDABKUBCALMAQN
    UCBCJZTUCBUBJUEBAOUBCBLMBQNRP $.
    $( [11-Aug-2004] $)

  $( Only the universal class has the universal class as a subclass.  (The
     proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  vss $p |- ( _V C_ A <-> A = _V ) $=
    ( cvv wss wa wceq ssv biantrur eqss bitr4i ) BACZABCZJDABEKJAFGABHI $.
    $( [26-Jun-2011] $) $( [17-Sep-2003] $)

  $( The null set is a proper subset of any non-empty set. $)
  0pss $p |- ( (/) C. A <-> A =/= (/) ) $=
    ( c0 wpss wne wss df-pss 0ss mpbiran necom bitri ) BACZBADZABDKBAELBAFAGHBA
    IJ $.
    $( [2-Apr-2007] $) $( [27-Feb-1996] $)

  $( No set is a proper subset of the empty set.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  npss0 $p |- -. A C. (/) $=
    ( c0 wpss wss wn wa wi 0ss a1i iman mpbi dfpss3 mtbir ) ABCABDZBADZEFZNOGPE
    ONAHINOJKABLM $.
    $( [26-Jun-2011] $) $( [17-Jun-1998] $)

  $( Any non-universal class is a proper subclass of the universal class. $)
  pssv $p |- ( A C. _V <-> -. A = _V ) $=
    ( cvv wpss wss wceq wn dfpss2 ssv mpbiran ) ABCABDABEFABGAHI $.
    $( [17-May-1998] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Two ways of saying that two classes are disjoint (have no members in
       common). $)
    disj $p |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) $=
      ( cin c0 wceq cv wcel wn wi wal wral wa cab dfin eqeq1i abeq1 imnan noel
      wb nbn bitr2i albii 3bitri df-ral bitr4i ) BCDZEFZAGZBHZUICHZIZJZAKZULABL
      UHUJUKMZANZEFUOUIEHZTZAKUNUGUPEABCOPUOAEQURUMAUMUOIURUJUKRUQUOUISUAUBUCUD
      ULABUEUF $.
      $( [17-Feb-2004] $)

    $( Two ways of saying that two classes are disjoint.  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    disjr $p |- ( ( A i^i B ) = (/) <-> A. x e. B -. x e. A ) $=
      ( cin c0 wceq cv wcel wn wral incom eqeq1i disj bitri ) BCDZEFCBDZEFAGBHI
      ACJOPEBCKLACBMN $.
      $( [19-Jun-2011] $)

    $( Two ways of saying that two classes are disjoint (have no members in
       common). $)
    disj1 $p |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) $=
      ( cin c0 wceq cv wcel wn wral wi wal disj df-ral bitri ) BCDEFAGZCHIZABJP
      BHQKALABCMQABNO $.
      $( [19-Aug-1993] $)

    $( Two ways of saying that two classes are disjoint, using the complement
       of ` B ` relative to a universe ` C ` .  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    reldisj $p |- ( A C_ C -> ( ( A i^i B ) = (/) <-> A C_ ( C \ B ) ) ) $=
      ( vx wss cv wcel wn wi wal cdif cin c0 wceq wb dfss2 pm5.44 eldif imbi2i
      wa syl6bbr a4s sylbi albidv disj1 3bitr4g ) ACEZDFZAGZUHBGHZIZDJUIUHCBKZG
      ZIZDJABLMNAULEUGUKUNDUGUIUHCGZIZDJUKUNOZDACPUPUQDUPUKUIUOUJTZIUNUIUOUJQUM
      URUIUHCBRSUAUBUCUDDABUEDAULPUF $.
      $( [26-Jun-2011] $) $( [15-Feb-2007] $)

    $( Two ways of saying that two classes are disjoint. $)
    disj3 $p |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) $=
      ( vx cv wcel wn wi wal cdif wb cin c0 wa pm4.71 eldif bibi2i bitr4i albii
      wceq disj1 dfcleq 3bitr4i ) CDZAEZUCBEFZGZCHUDUCABIZEZJZCHABKLSAUGSUFUICU
      FUDUDUEMZJUIUDUENUHUJUDUCABOPQRCABTCAUGUAUB $.
      $( [19-May-1998] $)

    $( Members of disjoint sets are not equal.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    disjne $p |- ( ( ( A i^i B ) = (/) /\ C e. A /\ D e. B ) -> C =/= D ) $=
      ( vx cin c0 wceq wcel wne cv wn wral wi disj eleq1 notbid rcla4cva eleq1a
      wa necon3bd syl5com sylanb 3impia ) ABFGHZCAIZDBIZCDJZUEEKZBIZLZEAMZUFUGU
      HNEABOULUFTCBIZLZUGUHUKUNECAUICHUJUMUICBPQRUGUMCDDBCSUAUBUCUD $.
      $( [26-Jun-2011] $) $( [28-Mar-2007] $)
  $}

  $( Two ways of saying that two classes are disjoint. $)
  disj2 $p |- ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) $=
    ( cvv wss cin c0 wceq cdif wb ssv reldisj ax-mp ) ACDABEFGACBHDIAJABCKL $.
    $( [17-May-1998] $)

  $( Two ways of saying that two classes are disjoint. $)
  disj4 $p |- ( ( A i^i B ) = (/) <-> -. ( A \ B ) C. A ) $=
    ( cin c0 wceq cdif wpss disj3 eqcom wss dfpss2 difss mpbiran con2bii 3bitri
    wn ) ABCDEAABFZEQAEZQAGZPABHAQISRSQAJRPQAKABLMNO $.
    $( [21-Mar-2004] $)

  $( Intersection with a subclass of a disjoint class.  (Contributed by FL,
     24-Jan-2007.) $)
  ssdisj $p |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) = (/) ) $=
    ( wss cin c0 wceq wa ss0b wi ssrin sstr2 syl syl5bir imp ss0 ) ABDZBCEZFGZH
    ACEZFDZTFGQSUASRFDZQUARIQTRDUBUAJABCKTRFLMNOTPM $.
    $( [23-Jan-2007] $)

  $( A class is a proper subset of its union with a disjoint nonempty class. $)
  disjpss $p |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> A C. ( A u. B ) ) $=
    ( cin c0 wceq wne wa wss wn cun wpss ssid biantru bitri sseq2 syl5bb syl6bi
    ssin ss0 necon3ad imp nsspssun uncom psseq2i sylib ) ABCZDEZBDFZGBAHZIZAABJ
    ZKZUGUHUJUGUIBDUGUIBDHZBDEUIBUFHZUGUMUIUIBBHZGUNUOUIBLMBABRNUFDBOPBSQTUAUJA
    BAJZKULBAUBUPUKABAUCUDNUE $.
    $( [30-Apr-2007] $) $( [15-Sep-2004] $)

  $( The union of disjoint classes is disjoint. $)
  undisj1 $p |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <->
               ( ( A u. B ) i^i C ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indir eqeq1i bitr4i ) ACDZEFBCDZEFGMNHZEFABHCDZEF
    MNIPOEABCJKL $.
    $( [26-Sep-2004] $)

  $( The union of disjoint classes is disjoint. $)
  undisj2 $p |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <->
               ( A i^i ( B u. C ) ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indi eqeq1i bitr4i ) ABDZEFACDZEFGMNHZEFABCHDZEFM
    NIPOEABCJKL $.
    $( [13-Sep-2004] $)

  $( Subclass expressed in terms of intersection with difference from the
     universal class. $)
  ssindif0 $p |- ( A C_ B <-> ( A i^i ( _V \ B ) ) = (/) ) $=
    ( cvv cdif cin c0 wceq wss disj2 ddif sseq2i bitr2i ) ACBDZEFGACMDZHABHAMIN
    BABJKL $.
    $( [17-Sep-2003] $)

  $( The intersection of classes with a common member is nonempty. $)
  inelcm $p |- ( ( A e. B /\ A e. C ) -> ( B i^i C ) =/= (/) ) $=
    ( wcel wa cin c0 wne elin ne0i sylbir ) ABDACDEABCFZDLGHABCILAJK $.
    $( [2-Apr-2007] $) $( [7-Apr-1994] $)

  $( A minimum element of a class has no elements in common with the class. $)
  minel $p |- ( ( A e. B /\ ( C i^i B ) = (/) ) -> -. A e. C ) $=
    ( cin c0 wceq wcel wn wa wi inelcm necon2bi imnan sylibr con2d impcom ) CBD
    ZEFZABGZACGZHRTSRTSIZHTSHJUAQEACBKLTSMNOP $.
    $( [22-Jun-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distribute union over difference.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    undif4 $p |- ( ( A i^i C ) = (/) ->
                 ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) ) $=
      ( vx cv wcel wn wi wal cdif cun wb cin c0 wceq wo wa eldif elun 3bitr4g
      pm2.621 olc impbid1 anbi2d orbi2i bitri anbi1i alimi disj1 dfcleq 3imtr4i
      ordi ) DEZAFZUMCFGZHZDIUMABCJZKZFZUMABKZCJZFZLZDIACMNOURVAOUPVCDUPUNUMUQF
      ZPZUMUTFZUOQZUSVBUPUNUMBFZPZUNUOPZQZVIUOQVEVGUPVJUOVIUPVJUOUNUOUAUOUNUBUC
      UDVEUNVHUOQZPVKVDVLUNUMBCRUEUNVHUOULUFVFVIUOUMABSUGTUMAUQSUMUTCRTUHDACUID
      URVAUJUK $.
      $( [26-Jun-2011] $) $( [17-May-1998] $)

    $( Subset relation for disjoint classes.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    disjssun $p |- ( ( A i^i B ) = (/) -> ( A C_ ( B u. C ) <-> A C_ C ) ) $=
      ( cin c0 wceq cun wss indi uncom eqtri uneq2 syl6eq syl5eq eqeq1d 3bitr4g
      un0 df-ss ) ABDZEFZABCGZDZAFACDZAFAUAHACHTUBUCATUBUCSGZUCUBSUCGUDABCISUCJ
      KTUDUCEGUCSEUCLUCQMNOAUARACRP $.
      $( [26-Jun-2011] $) $( [25-Oct-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass expressed in terms of difference.  Exercise 7 of
       [TakeutiZaring] p. 22. $)
    ssdif0 $p |- ( A C_ B <-> ( A \ B ) = (/) ) $=
      ( vx cv wcel wi wal cdif wn wss c0 wceq wa eldif xchbinxr albii dfss2 eq0
      iman 3bitr4i ) CDZAEZUABEZFZCGUAABHZEZIZCGABJUEKLUDUGCUDUBUCIMUFUBUCSUAAB
      NOPCABQCUERT $.
      $( [29-Apr-1994] $)
  $}

  $( Universal class equality in terms of empty difference. $)
  vdif0 $p |- ( A = _V <-> ( _V \ A ) = (/) ) $=
    ( cvv wceq wss cdif c0 vss ssdif0 bitr3i ) ABCBADBAEFCAGBAHI $.
    $( [17-Sep-2003] $)

  $( A proper subclass has a nonempty difference. $)
  pssdifn0 $p |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) $=
    ( wss wne cdif c0 wceq ssdif0 eqss simplbi2 syl5bir necon3d imp ) ABCZABDBA
    EZFDNOFABOFGBACZNABGZBAHQNPABIJKLM $.
    $( [3-Apr-2007] $) $( [3-May-1994] $)

  $( A subclass missing a member is a proper subclass. $)
  ssnelpss $p |- ( A C_ B -> ( ( C e. B /\ -. C e. A ) -> A C. B ) ) $=
    ( wcel wn wa wceq wss wpss nelneq2 eqcom sylnib dfpss2 baibr syl5ib ) CBDCA
    DEFZABGZEZABHZABIZPBAGQCBAJBAKLTSRABMNO $.
    $( [12-Jan-2002] $)

  ${
    $d x A $.  $d x B $.
    $( A proper subclass has a member in one argument that's not in both. $)
    pssnel $p |- ( A C. B -> E. x ( x e. B /\ -. x e. A ) ) $=
      ( wpss cv cdif wcel wex wn wa c0 wne df-pss pssdifn0 sylbi n0 sylib eldif
      wss exbii ) BCDZAEZCBFZGZAHZUBCGUBBGIJZAHUAUCKLZUEUABCSBCLJUGBCMBCNOAUCPQ
      UDUFAUBCBRTQ $.
      $( [29-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Difference, intersection, and subclass relationship.  (The proof was
       shortened by Wolf Lammen, 30-Sep-2014.) $)
    difin0ss $p |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) $=
      ( vx cdif cin c0 wceq cv wcel wn wal wss wi eq0 wa iman elin eldif dfss2
      anbi1i bitri ancom annim anbi2i 3bitr2i xchbinxr ax-2 sylbir al2imi sylbi
      3imtr4g ) ABEZCFZGHDIZUNJZKZDLZCAMZCBMZNDUNOURUOCJZUOAJZNZDLVAUOBJZNZDLUS
      UTUQVCVEDUQVAVBVDNZNZVCVENVGVAVFKZPZUPVAVFQUPVBVDKPZVAPZVAVJPVIUPUOUMJZVA
      PVKUOUMCRVLVJVAUOABSUAUBVAVJUCVJVHVAVBVDUDUEUFUGVAVBVDUHUIUJDCATDCBTULUK
      $.
      $( [30-Sep-2014] $) $( [30-Apr-1994] $)

    $( Obsolete proof of ~ difin0ss as of 30-Sep-2014. $)
    difin0ssOLD $p |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) $=
      ( vx cdif cin c0 wceq cv wcel wi wal wss wn eq0 annim anbi2i notbii dfss2
      wa ancom bitr3i iman elin eldif anbi1i 3bitr4i ax-2 sylbir al2imi 3imtr4g
      bitri sylbi ) ABEZCFZGHZDIZCJZUQAJZKZDLZURUQBJZKZDLZCAMCBMUPUQUOJZNZDLVAV
      DKDUOOVFUTVCDVFURUSVBKZKZUTVCKURVGNZTZNUSVBNTZURTZNVHVFVJVLVJURVKTVLVKVIU
      RUSVBPQURVKUAUBRURVGUCVEVLVEUQUNJZURTVLUQUNCUDVMVKURUQABUEUFULRUGURUSVBUH
      UIUJUMDCASDCBSUK $.
      $( [30-Apr-1994] $)

    $( Intersection, subclass, and difference relationship.  (The proof was
       shortened by Andrew Salmon, 26-Jun-2011.)  (The proof was shortened by
       Wolf Lammen, 30-Sep-2014.) $)
    inssdif0 $p |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) $=
      ( vx cv cin wcel wi wal cdif wn wss c0 wceq elin imbi1i iman bitri eldif
      wa anbi2i anass 3bitr4ri xchbinx albii dfss2 eq0 3bitr4i ) DEZABFZGZUICGZ
      HZDIUIABCJZFZGZKZDIUJCLUOMNUMUQDUMUIAGZUIBGZTZULKZTZUPUMUTULHVBKUKUTULUIA
      BOPUTULQRURUIUNGZTURUSVATZTUPVBVCVDURUIBCSUAUIAUNOURUSVAUBUCUDUEDUJCUFDUO
      UGUH $.
      $( [30-Sep-2014] $) $( [27-Oct-1996] $)

    $( Obsolete proof of ~ inssdif0 as of 30-Sep-2014. $)
    inssdif0OLD $p |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) $=
      ( vx cv cin wcel wi wal cdif wn c0 wceq wa iman notbii bitri elin 3bitr4i
      wss anass imbi1i eldif anbi2i albii dfss2 eq0 ) DEZABFZGZUHCGZHZDIUHABCJZ
      FZGZKZDIUICTUNLMULUPDUHAGZUHBGZNZUKHZUQURUKKZNZNZKZULUPUTUSVANZKVDUSUKOVE
      VCUQURVAUAPQUJUSUKUHABRUBUOVCUOUQUHUMGZNVCUHAUMRVFVBUQUHBCUCUDQPSUEDUICUF
      DUNUGS $.
      $( [26-Jun-2011] $) $( [27-Oct-1996] $)
  $}

  $( The difference between a class and itself is the empty set.  Proposition
     5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28. $)
  difid $p |- ( A \ A ) = (/) $=
    ( wss cdif c0 wceq ssid ssdif0 mpbi ) AABAACDEAFAAGH $.
    $( [22-Apr-2004] $)

  ${
    $d x A $.
    $( The difference between a class and itself is the empty set.  Proposition
       5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28.
       (Alternate proof of ~ difid suggested by David Abernethy,
       17-Jun-2012.) $)
    difidALT $p |- ( A \ A ) = (/) $=
      ( vx cdif cv wcel wn crab c0 dfdif2 dfnul3 eqtr4i ) AACBDAEFBAGHBAAIBAJK
      $.
      $( [17-Jun-2012] $)
  $}

  $( The difference between a class and the empty set.  Part of Exercise 4.4 of
     [Stoll] p. 16. $)
  dif0 $p |- ( A \ (/) ) = A $=
    ( cdif c0 difid difeq2i difdif eqtr3i ) AAABZBACBAHCAADEAAFG $.
    $( [17-Aug-2004] $)

  $( The difference between the empty set and a class.  Part of Exercise 4.4 of
     [Stoll] p. 16. $)
  0dif $p |- ( (/) \ A ) = (/) $=
    ( c0 cdif wss wceq difss ss0 ax-mp ) BACZBDIBEBAFIGH $.
    $( [17-Aug-2004] $)

  $( A class and its relative complement are disjoint.  Theorem 38 of [Suppes]
     p. 29. $)
  disjdif $p |- ( A i^i ( B \ A ) ) = (/) $=
    ( cin wss cdif c0 wceq inss1 inssdif0 mpbi ) ABCADABAECFGABHABAIJ $.
    $( [24-Mar-1998] $)

  $( The difference of a class from its intersection is empty.  Theorem 37 of
     [Suppes] p. 29.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  difin0 $p |- ( ( A i^i B ) \ B ) = (/) $=
    ( cin wss cdif c0 wceq inss2 ssdif0 mpbi ) ABCZBDKBEFGABHKBIJ $.
    $( [26-Jun-2011] $) $( [17-Aug-2004] $)

  $( The union of a class and its complement is the universe.  Theorem 5.1(5)
     of [Stoll] p. 17. $)
  undifv $p |- ( A u. ( _V \ A ) ) = _V $=
    ( cvv cdif cun cin c0 dfun3 disjdif difeq2i dif0 3eqtri ) ABACZDBLBLCEZCBFC
    BALGMFBLBHIBJK $.
    $( [17-Aug-2004] $)

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ disjdif ).  Theorem 35 of [Suppes] p. 29. $)
  undif1 $p |- ( ( A \ B ) u. B ) = ( A u. B ) $=
    ( cvv cdif invdif uneq1i undir uncom undifv eqtri ineq2i inv1 3eqtri eqtr3i
    cin cun ) ACBDZOZBPZABDZBPABPZRTBABEFSUAQBPZOUACOUAAQBGUBCUAUBBQPCQBHBIJKUA
    LMN $.
    $( [18-Aug-2004] $) $( [19-May-1998] $)

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ disjdif ).  Part of proof of Corollary 6K of
     [Enderton] p. 144. $)
  undif2 $p |- ( A u. ( B \ A ) ) = ( A u. B ) $=
    ( cdif cun uncom undif1 3eqtri ) ABACZDHADBADABDAHEBAFBAEG $.
    $( [4-Sep-2004] $) $( [19-May-1998] $)

  $( Absorption of difference by union. $)
  undifabs $p |- ( A u. ( A \ B ) ) = A $=
    ( cdif cun undif3 unidm difeq1i difdif 3eqtri ) AABCDAADZBACZCAKCAAABEJAKAF
    GABHI $.
    $( [18-Aug-2013] $)

  ${
    $d x A $.  $d x B $.
    $( The intersection and class difference of a class with another class
       unite to give the original class.  (Contributed by Paul Chapman,
       5-Jun-2009.)  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    inundif $p |- ( ( A i^i B ) u. ( A \ B ) ) = A $=
      ( vx cin cdif cv wcel wo wa wn elin eldif orbi12i pm4.42 bitr4i uneqri )
      CABDZABEZACFZQGZSRGZHSAGZSBGZIZUBUCJIZHUBTUDUAUESABKSABLMUBUCNOP $.
      $( [26-Jun-2011] $) $( [5-Jun-2009] $)
  $}

  $( Absorption of union by difference.  Theorem 36 of [Suppes] p. 29. $)
  difun2 $p |- ( ( A u. B ) \ B ) = ( A \ B ) $=
    ( cun cdif c0 difundir difid uneq2i un0 3eqtri ) ABCBDABDZBBDZCKECKABBFLEKB
    GHKIJ $.
    $( [18-Aug-2004] $) $( [19-May-1998] $)

  $( Union of complementary parts into whole. $)
  undif $p |- ( A C_ B <-> ( A u. ( B \ A ) ) = B ) $=
    ( wss cun wceq cdif ssequn1 undif2 eqeq1i bitr4i ) ABCABDZBEABAFDZBEABGLKBA
    BHIJ $.
    $( [22-Sep-2004] $) $( [22-Mar-1998] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A condition equivalent to inclusion in the union of two classes. $)
    ssundif $p |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) $=
      ( vx cv wcel cun wi wal cdif wss wn wa wo pm5.6 eldif imbi1i imbi2i dfss2
      elun 3bitr4ri albii 3bitr4i ) DEZAFZUDBCGZFZHZDIUDABJZFZUDCFZHZDIAUFKUICK
      UHULDUEUDBFZLMZUKHUEUMUKNZHULUHUEUMUKOUJUNUKUDABPQUGUOUEUDBCTRUAUBDAUFSDU
      ICSUC $.
      $( [26-Mar-2007] $)
  $}

  $( Swap the arguments of a class difference. $)
  difcom $p |- ( ( A \ B ) C_ C <-> ( A \ C ) C_ B ) $=
    ( cun wss cdif uncom sseq2i ssundif 3bitr3i ) ABCDZEACBDZEABFCEACFBEKLABCGH
    ABCIACBIJ $.
    $( [29-Mar-2007] $)

  $( Distributive law for class difference.  Exercise 4.8 of [Stoll] p. 16. $)
  difdifdir $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ ( B \ C ) ) $=
    ( cdif cvv cun cin c0 disjdif incom eqtr3i uneq2i invdif un0 dif32 3eqtr4ri
    indi 3eqtr4i indm difeq2i ddif 3eqtr3ri ineq2i 3eqtri ) ABDCDZACDZEBDZCFZGZ
    UFEBCDZDZGUFUJDUFUGGZHFZULUFCGZFUEUIHUNULCUFGHUNCAICUFJKLULUFBDUMUEUFBMULNA
    BCOPUFUGCQRUHUKUFEBECDZGZDUGEUODZFUKUHBUOSUPUJEBCMTUQCUGCUALUBUCUFUJMUD $.
    $( [18-Aug-2004] $)

  $( Two ways to say that ` A ` and ` B ` partition ` C ` (when ` A ` and ` B `
     don't overlap and ` A ` is a part of ` C ` ).  (Contributed by FL,
     17-Nov-2008.) $)
  uneqdifeq $p |- ( ( A C_ C /\ ( A i^i B ) = (/) )
     -> ( ( A u. B ) = C <-> ( C \ A ) = B ) ) $=
    ( wss cin c0 wceq wa cun cdif uncom eqcom biimpi difeq1 difun2 expcom com12
    wi eqtr adantl incom eqeq1i disj3 bitri sylbi syl5com 3syl mpan difss sseq1
    eqcoms sylancl syl6bi mpi adantr imp eqimss ssundif sylibr adantlr eqssd ex
    unss impbid ) ACDZABEZFGZHZABIZCGZCAJZBGZVGVJVLRVEVJVGVLBAIZVIGZVJVGVLRZBAK
    VNVJHVMCGZCVMGZVOVMVICSVPVQVMCLMVQVKVMAJZGZVRBAJZGZVOCVMANBAOVSWAHVKVTGZVGV
    LVKVRVTSVGBVTGZWBVLRZVGBAEZFGWCVFWEFABUAUBBAUCUDWDVTBWBVTBGVLVKVTBSPUKUEUFU
    LUGUHQTVHVLVJVHVLHVICVHVLVICDZVEVLWFRVGVLVEWFVLVKCDZVEWFRZCAUIVLWGBCDZWHVKB
    CUJVEWIWFVEWIHWFABCVCMPUMUNQUOUPVEVLCVIDZVGVEVLHVKBDZWJVLWKVEVKBUQTCABURUSU
    TVAVBVD $.
    $( [16-Nov-2008] $)

  ${
    $d x A $.
    $( Theorem 19.2 of [Margaris] p. 89 with restricted quantifiers (compare
       ~ 19.2 ).  The restricted version is valid only when the domain of
       quantification is not empty. $)
    r19.2z $p |- ( ( A =/= (/) /\ A. x e. A ph ) -> E. x e. A ph ) $=
      ( wral c0 wne wrex cv wex wa wi wal df-ral exintr sylbi n0 df-rex 3imtr4g
      wcel impcom ) ABCDZCEFZABCGZUABHCSZBIZUDAJBIZUBUCUAUDAKBLUEUFKABCMUDABNOB
      CPABCQRT $.
      $( [15-Nov-2003] $)

    $( A response to the notion that the condition ` A =/= (/) ` can be removed
       in ~ r19.2z .  Interestingly enough, ` ph ` does not figure in the
       left-hand side.  (Contributed by Jeff Hankins, 24-Aug-2009.) $)
    r19.2zb $p |- ( A =/= (/) <-> ( A. x e. A ph -> E. x e. A ph ) ) $=
      ( c0 wral wrex wi r19.2z ex wceq cv wcel noel pm2.21i rgen raleq necon3bi
      wne mpbiri wex wa exsimpl df-rex n0 3imtr4i ja impbii ) CDRZABCEZABCFZGUH
      UIUJABCHIUIUJUHUICDCDJUIABDEABDBKZDLAUKMNOABCDPSQUKCLZAUABTULBTUJUHULABUB
      ABCUCBCUDUEUFUG $.
      $( [24-Aug-2009] $)
  $}

  ${
    $d x A $.
    r19.3rz.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantification of wff not containing quantified variable.
       (Contributed by FL, 3-Jan-2008.) $)
    r19.3rz $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wral wb n0 biimt sylbi df-ral 19.23 bitri syl6bbr
      wal ) CEFZABGCHZBIZAJZABCKZUAUCAUDLBCMUCANOUEUBAJBTUDABCPUBABDQRS $.
      $( [3-Jan-2008] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.28z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi1d r19.26 syl6rbbr ) DFGZABCDHZIACDHZOIABICD
      HNAPOACDEJKABCDLM $.
      $( [26-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x ph $.
    $( Restricted quantification of wff not containing quantified variable. $)
    r19.3rzv $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wb n0 biimt sylbi wal df-ral 19.23v bitri syl6bbr
      wral ) CDEZABFCGZBHZAIZABCSZTUBAUCJBCKUBALMUDUAAIBNUCABCOUAABPQR $.
      $( [10-Mar-1997] $)

    $( Restricted quantification of wff not containing quantified variable. $)
    r19.9rzv $p |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) $=
      ( c0 wne wn wral wrex r19.3rzv bicomd con2bid dfrex2 syl6bbr ) CDEZAAFZBC
      GZFABCHNPANOPOBCIJKABCLM $.
      $( [27-May-1998] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.28zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi1d r19.26 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
      $( [19-Aug-2004] $)

    $( Restricted quantifier version of Theorem 19.37 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by Paul Chapman, 8-Oct-2007.) $)
    r19.37zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( ph -> E. x e. A ps ) ) ) $=
      ( c0 wne wrex wi wral r19.3rzv imbi1d r19.35 syl6rbbr ) DEFZABCDGZHACDIZO
      HABHCDGNAPOACDJKABCDLM $.
      $( [8-Oct-2007] $)

    $( Restricted version of Theorem 19.45 of [Margaris] p. 90. $)
    r19.45zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph \/ ps ) <-> ( ph \/ E. x e. A ps ) ) ) $=
      ( c0 wne wrex wo r19.9rzv orbi1d r19.43 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
      $( [27-May-1998] $)
  $}

  ${
    $d x A $.
    r19.27z.1 $e |- ( ps -> A. x ps ) $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.27z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi2d r19.26 syl6rbbr ) DFGZACDHZBIOBCDHZIABICD
      HNBPOBCDEJKABCDLM $.
      $( [26-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x ps $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.27zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi2d r19.26 syl6rbbr ) DEFZACDGZBHNBCDGZHABHC
      DGMBONBCDIJABCDKL $.
      $( [19-Aug-2004] $)

    $( Restricted quantifier version of Theorem 19.36 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.36zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> ps ) ) ) $=
      ( c0 wne wral wi wrex r19.9rzv imbi2d r19.35 syl6rbbr ) DEFZACDGZBHOBCDIZ
      HABHCDINBPOBCDJKABCDLM $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.
    $( Vacuous quantification is always true.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    rzal $p |- ( A = (/) -> A. x e. A ph ) $=
      ( c0 wceq cv wcel ne0i necon2bi pm2.21d ralrimiv ) CDEZABCLBFZCGZANCDCMHI
      JK $.
      $( [26-Jun-2011] $) $( [11-Mar-1997] $)

    $( Restricted existential quantification implies its restriction is
       nonempty.  (Contributed by Szymon Jaroszewicz, 3-Apr-2007.) $)
    rexn0 $p |- ( E. x e. A ph -> A =/= (/) ) $=
      ( c0 wne cv wcel ne0i a1d rexlimiv ) ACDEZBCBFZCGKACLHIJ $.
      $( [1-Mar-2007] $)

    $( Idempotent law for restricted quantifier. $)
    ralidm $p |- ( A. x e. A A. x e. A ph <-> A. x e. A ph ) $=
      ( c0 wceq wral wb rzal 2thd wn cv wcel wex neq0 wi biimt wal df-ral hbra1
      19.23 bitri syl6rbbr sylbi pm2.61i ) CDEZABCFZBCFZUFGZUEUGUFUFBCHABCHIUEJ
      BKCLZBMZUHBCNUJUFUJUFOZUGUJUFPUGUIUFOBQUKUFBCRUIUFBABCSTUAUBUCUD $.
      $( [28-Mar-1997] $)
  $}

  $( Vacuous universal quantification is always true. $)
  ral0 $p |- A. x e. (/) ph $=
    ( c0 cv wcel noel pm2.21i rgen ) ABCBDZCEAIFGH $.
    $( [20-Oct-2005] $)

  ${
    $d x A $.
    rgenz.1 $e |- ( ( A =/= (/) /\ x e. A ) -> ph ) $.
    $( Generalization rule that eliminates a non-zero class requirement. $)
    rgenz $p |- A. x e. A ph $=
      ( wral c0 rzal wne ralrimiva pm2.61ine ) ABCECFABCGCFHABCDIJ $.
      $( [8-Dec-2012] $)
  $}

  ${
    $d x A $.
    ralf0.1 $e |- -. ph $.
    $( The quantification of a falsehood is vacuous when true. $)
    ralf0 $p |- ( A. x e. A ph <-> A = (/) ) $=
      ( wral c0 wceq cv wcel wi wal wn con3 mpi alimi df-ral eq0 3imtr4i impbii
      rzal ) ABCEZCFGZBHCIZAJZBKUCLZBKUAUBUDUEBUDALUEDUCAMNOABCPBCQRABCTS $.
      $( [26-Nov-2005] $)
  $}

  $( MAY BE REVISED - shorten r19.3zv, r19.27zv, r19.28zv, raaanv w/ non-v $)
  ${
    $d x y A $.
    raaan.1 $e |- ( ph -> A. y ph ) $.
    raaan.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange restricted quantifiers. $)
    raaan $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb c0 wceq rzal pm5.1 syl12anc wne r19.28z ralbidv cv wcel
      ax-17 hbral r19.27z bitrd pm2.61ine ) ABHDEIZCEIZACEIZBDEIZHZJZEKEKLUGUHU
      IUKUFCEMACEMBDEMUGUJNOEKPZUGAUIHZCEIUJULUFUMCEABDEFQRAUICEBCDEDSETCUAGUBU
      CUDUE $.
      $( [26-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y A $.
    $( Rearrange restricted quantifiers. $)
    raaanv $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb wceq rzal pm5.1 syl12anc wne r19.28zv ralbidv r19.27zv bitrd
      c0 pm2.61ine ) ABFDEGZCEGZACEGZBDEGZFZHZERERIUAUBUCUETCEJACEJBDEJUAUDKLER
      MZUAAUCFZCEGUDUFTUGCEABDENOAUCCEPQS $.
      $( [11-Mar-1997] $)
  $}

  ${
    $d x A w $.  $d v x $.  $d v A $.  $d w v $.  $d w y $.
    $( Lemma for ~ sbss .  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbsslem $p |- ( [ y / x ] x C_ A
                  <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) $=
      ( cv wss wsbc wcel wi wal wa dfss2 sbbii sbal sbim elsb4 ax-17 sbf 3bitri
      wb imbi12i simpl ancl impbid2 bi2 simpr syl6 impbii albii ) AEZDFZABEZGCE
      ZUJHZUMDHZIZCJZAULGUPAULGZCJUMULHZUOKZUSTZCJUKUQABCUJDLMUPCABNURVACURUNAU
      LGZUOAULGZIUSUOIZVAUNUOABOVBUSVCUOBACPUOABUOAQRUAVDVAVDUTUSUSUOUBUSUOUCUD
      VAUSUTUOUTUSUEUSUOUFUGUHSUIS $.
      $( [29-Jun-2011] $) $( [7-Jul-2010] $)
  $}

  ${
    $d z y $.  $d z A x $.
    $( Set substitution into the first argument of a subset relation.
       (Contributed by Rodolfo Medina, 7-Jul-2010.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 26-Jun-2011.) $)
    sbss $p |- ( [ y / x ] x C_ A <-> y C_ A ) $=
      ( vz cv wss wsbc ax-17 sseq1 sbie sbbii sbco2 3bitr3i ) AEZCFZADEZGZDBEZG
      PCFZDRGOARGRCFZQSDBOSADSAHNPCIJKOABDODHLSTDBTDHPRCIJM $.
      $( [26-Jun-2011] $) $( [7-Jul-2010] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           "Weak deduction theorem" for set theory
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( These lemmas are used to convert hypotheses into antecedents,
     when there is at least one class making the hypothesis true. $)

$(
The Weak Deduction Theorem in set theory
----------------------------------------

In a Hilbert system of logic (which consists of a set of axioms, modus
ponens, and the generalization rule), converting a deduction to a proof using
the Deduction Theorem (taught in introductory logic books) involves an
exponential increase of the number of steps as hypotheses are successively
eliminated.  Here is a trick that is not as general as the Deduction Theorem
but requires only a linear increase in the number of steps.

The general problem:  We want to convert a deduction
  P |- Q
into a proof of the theorem
  |- P -> Q
i.e. we want to eliminate the hypothesis P.  Normally this is done using the
Deduction (meta)Theorem, which looks at the microscopic steps of the
deduction and usually doubles or triples the number of these microscopic
steps for each hypothesis that is eliminated.  We will look at a special case
of this problem, without appealing to the Deduction Theorem.

We assume ZF with class notation.  A and B are arbitrary (possibly
proper) classes.  P, Q, R, S and T are wffs.

We define the conditional operator, if(P,A,B), as follows:
  if(P,A,B) =def= { x | (x \in A & P) v (x \in B & ~P) }
(where x does not occur in A, B, or P).

Lemma 1.
  A = if(P,A,B) -> (P <-> R), B = if(P,A,B) -> (S <-> R), S |- R
Proof:  Logic and Axiom of Extensionality.

Lemma 2.
  A = if(P,A,B) -> (Q <-> T), T |- P -> Q
Proof:  Logic and Axiom of Extensionality.

Here's a simple example that illustrates how it works.  Suppose we have
a deduction
  Ord A |- Tr A
which means, "Assume A is an ordinal class.  Then A is a transitive class."
Note that A is a class variable that may be substituted with any class
expression, so this is really a deduction scheme.

We want to convert this to a proof of the theorem (scheme)
  |- Ord A -> Tr A.

The catch is that we must be able to prove "Ord A" for at least one
object A (and this is what makes it weaker than the ordinary Deduction
Theorem).  However it is easy to prove |- Ord 0 (the empty set is
ordinal).  (For a typical textbook "theorem," i.e. deduction, there is
usually at least one object satisfying each hypothesis, otherwise the
theorem would not be very useful.  We can always go back to the standard
Deduction Theorem for those hypotheses where this is not the case.)
Continuing with the example:

Equality axioms (and Extensionality) yield
  |- A = if(Ord A, A, 0) -> (Ord A <-> Ord if(Ord A, A, 0))  (1)
  |- 0 = if(Ord A, A, 0) -> (Ord 0 <-> Ord if(Ord A, A, 0))  (2)
From (1), (2) and |- Ord 0, Lemma 1 yields
  |- Ord if(Ord A, A, 0)                                       (3)
From (3) and substituting if(Ord A, A, 0) for
A in the original deduction,
  |- Tr if(Ord A, A, 0)                                        (4)
Equality axioms (and Extensionality) yield
  |- A = if(Ord A, A, 0) -> (Tr A <-> Tr if(Ord A, A, 0))    (5)
From (4) and (5), Lemma 2 yields
  |- Ord A -> Tr A                                               (Q.E.D.)
$)


  $( Declare new constant symbols. $)
  $c if $.  $( Conditional operator (was "ded" for "deduction class"). $)
  $c , $.  $( Comma (also used for unordered pair notation later) $)

  $( Extend class notation to include the conditional operator.  See ~ df-if
     for a description.  (In older databases this was denoted "ded".) $)
  cif $a class if ( ph , A , B ) $.

  ${
    $d x ph $.  $d x A $.  $d x B $.
    $( Define the conditional operator.  Read ` if ( ph , A , B ) ` as "if
       ` ph ` then ` A ` else ` B ` ."  See ~ iftrue and ~ iffalse for its
       values.  In mathematical literature, this operator is rarely defined
       formally but is implicit in informal definitions such as "let f(x)=0 if
       x=0 and 1/x otherwise."  (In older versions of this database, this
       operator was denoted "ded" and called the "deduction class.")

       An important use for us is in conjunction with the weak deduction
       theorem, which converts a hypothesis into an antecedent.  In that role,
       ` A ` is a class variable in the hypothesis and ` B ` is a class
       (usually a constant) that makes the hypothesis true when it is
       substituted for ` A ` .  See ~ dedth for the main part of the weak
       deduction theorem, ~ elimhyp to eliminate a hypothesis, and ~ keephyp to
       keep a hypothesis.  See the Deduction Theorem link on the Metamath Proof
       Explorer Home Page for a description of the weak deduction theorem. $)
    df-if $a |- if ( ph , A , B ) =
                 { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.  $d x C $.
    $( An alternate definition of the conditional operator ~ df-if with one
       fewer connectives (but probably less intuitive to understand). $)
    dfif2 $p |- if ( ph , A , B ) =
                 { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } $=
      ( cif cv wcel wa wn wo cab wi df-if df-or orcom iman imbi1i 3bitr4i abbii
      eqtri ) ACDEBFZCGAHZUADGZAIHZJZBKUCALZUBLZBKABCDMUEUGBUDUBJUDIZUBLUEUGUDU
      BNUBUDOUFUHUBUCAPQRST $.
      $( [30-Jan-2006] $)

    $( An alternate definition of the conditional operator ~ df-if as a simple
       class abstraction. $)
    dfif6 $p |- if ( ph , A , B ) =
                 ( { x e. A | ph } u. { x e. B | -. ph } ) $=
      ( cv wcel wa cab wn cun wo crab cif unab df-rab uneq12i df-if 3eqtr4ri )
      BEZCFAGZBHZSDFAIZGZBHZJTUCKBHABCLZUBBDLZJACDMTUCBNUEUAUFUDABCOUBBDOPABCDQ
      R $.
      $( [8-Sep-2013] $)

    $( Equality theorem for conditional operator.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    ifeq1 $p |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) $=
      ( vx wceq crab wn cun cif rabeq uneq1d dfif6 3eqtr4g ) BCFZAEBGZAHEDGZIAE
      CGZQIABDJACDJOPRQAEBCKLAEBDMAECDMN $.
      $( [8-Sep-2013] $) $( [1-Sep-2004] $)

    $( Equality theorem for conditional operator.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    ifeq2 $p |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) $=
      ( vx wceq crab wn cun cif rabeq uneq2d dfif6 3eqtr4g ) BCFZAEDGZAHZEBGZIP
      QECGZIADBJADCJORSPQEBCKLAEDBMAEDCMN $.
      $( [8-Sep-2013] $) $( [1-Sep-2004] $)

    $( Value of the conditional operator when its first argument is true.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    iftrue $p |- ( ph -> if ( ph , A , B ) = A ) $=
      ( vx cv wcel wi wa cab cif dedlem0a abbi2dv dfif2 syl6reqr ) ABDEZCFZAGOB
      FZAHGZDIABCJARDBAQPKLADBCMN $.
      $( [26-Jun-2011] $) $( [15-May-1999] $)

    $( Value of the conditional operator when its first argument is false. $)
    iffalse $p |- ( -. ph -> if ( ph , A , B ) = B ) $=
      ( vx wn cv wcel wa wo cab cif dedlemb abbi2dv df-if syl6reqr ) AEZCDFZBGZ
      AHQCGZPHIZDJABCKPTDCARSLMADBCNO $.
      $( [2-Sep-2004] $) $( [14-Aug-1999] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C y $.
    ifsb.1 $e |- ( if ( ph , A , B ) = A -> C = D ) $.
    ifsb.2 $e |- ( if ( ph , A , B ) = B -> C = E ) $.
    $( Distribute a function over an if-clause.  (Contributed by Mario
       Carneiro, 14-Aug-2013.) $)
    ifsb $p |- C = if ( ph , D , E ) $=
      ( cif wceq iftrue syl eqtr4d wn iffalse pm2.61i ) ADAEFIZJADEQAABCIZBJDEJ
      ABCKGLAEFKMANZDFQSRCJDFJABCOHLAEFOMP $.
      $( [14-Aug-2013] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y ph $.
    dfif3.1 $e |- C = { x | ph } $.
    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false. $)
    dfif3 $p |- if ( ph , A , B )
                  = ( ( A i^i C ) u. ( B i^i ( _V \ C ) ) ) $=
      ( vy cif crab wn cun cin cvv cdif dfif6 cab cv ineq2i dfrab3 eqtr4i biidd
      wceq cbvabv eqtri notab difeq2i eqtr2i uneq12i ) ACDHAGCIZAJZGDIZKCELZDME
      NZLZKAGCDOULUIUNUKULCAGPZLUIEUOCEABPUOFAABGBQGQUBAUAUCUDZRAGCSTUKDUJGPZLU
      NUJGDSUQUMDUQMUONUMAGUEEUOMUPUFTRUGUHT $.
      $( [8-Sep-2013] $) $( [25-Aug-2013] $)

    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false. $)
    dfif4 $p |- if ( ph , A , B )
        = ( ( A u. B ) i^i ( ( A u. ( _V \ C ) ) i^i ( B u. C ) ) ) $=
      ( cif cin cvv cdif cun dfif3 undir undi uncom undifv ineq12i 3eqtri inass
      inv1 eqtri ) ACDGCEHDIEJZHZKCUCKZEUCKZHZCDKZCUBKZDEKZHHZABCDEFLCEUCMUFUGU
      HHZUIHUJUDUKUEUICDUBNUEEDKZEUBKZHUIIHUIEDUBNULUIUMIEDOEPQUITRQUGUHUISUAR
      $.
      $( [25-Aug-2013] $)

    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false (see also
       ~ abvor0 ).  (Contributed by G&eacute;rard Lang, 18-Aug-2013.) $)
    dfif5 $p |- if ( ph , A , B ) = ( ( A i^i B )
          u. ( ( ( A \ B ) i^i C ) u. ( ( B \ A ) i^i ( _V \ C ) ) ) ) $=
      ( cun cdif undi undifabs ineq1i inabs undif2 3eqtr4i uneq12i unundi unidm
      cin unass 3eqtr4ri cif cvv dfif4 3eqtri uneq1i uncom eqtri 3eqtrri uneq2i
      3eqtr3ri ineq2i undir eqtr4i ineq12i inindi ) ACDUACDGZCUBEHZGZDEGZRRZCDR
      CDHZERZDCHZUQRZGZGZABCDEFUCUPURRZUPUSRZRCVEGZDVEGZRUTVFVGVIVHVJCVBGZCVDGZ
      GCCDUQRZGZGZVIVGVKCVLVNVKCVAGZCEGZRCVQRCCVAEIVPCVQCDJKCELUDCVCGZURRVGVLVN
      VRUPURCDMKCVCUQICDUQIZNOCVBVDPCCGZVMGVNVOVGVTCVMCQUECCVMSVSUJTCERZDGZDVBG
      ZDVDGZGZVHVJWBDGWADDGZGWEWBWADDSWBWCDWDDVAGZUSRDCGZUSRZWCWBWGWHUSDCMKDVAE
      IWBDWAGWIWADUFDCEIUGTWDDVCGZDUQGZRDWKRDDVCUQIWJDWKDCJKDUQLUHOWFDWADQUIUJV
      HUPEDGZRWBUSWLUPDEUFUKCEDULUMDVBVDPNUNUPURUSUOCDVEULTUM $.
      $( [25-Aug-2013] $)
  $}

  $( Equality theorem for conditional operators. $)
  ifeq12 $p |- ( ( A = B /\ C = D ) ->
                if ( ph , A , C ) = if ( ph , B , D ) ) $=
    ( wceq cif ifeq1 ifeq2 sylan9eq ) BCFDEFABDGACDGACEGABCDHADECIJ $.
    $( [1-Sep-2004] $)

  ${
    ifeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for conditional operator. $)
    ifeq1d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( wceq cif ifeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [16-Feb-2005] $)

    $( Equality deduction for conditional operator. $)
    ifeq2d $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( wceq cif ifeq2 syl ) ACDGBECHBEDHGFBCDEIJ $.
      $( [16-Feb-2005] $)
  $}

  $( Equivalence theorem for conditional operators.  (Contributed by Raph
     Levien, 15-Jan-2004.) $)
  ifbi $p |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) $=
    ( wb wa wn wo cif wceq dfbi3 iftrue eqcomd sylan9eq iffalse jaoi sylbi ) AB
    EABFZAGZBGZFZHACDIZBCDIZJZABKRUDUAABUBCUCACDLBUCCBCDLMNSTUBDUCACDOTUCDBCDOM
    NPQ $.
    $( [15-Jan-2004] $)

  ${
    ifbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalence deduction for conditional operators. $)
    ifbid $p |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) $=
      ( wb cif wceq ifbi syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [18-Apr-2005] $)
  $}

  ${
    ifbieq2i.1 $e |- ( ph <-> ps ) $.
    ifbieq2i.2 $e |- A = B $.
    $( Equivalence/equality inference for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2i $p |- if ( ph , C , A ) = if ( ps , C , B ) $=
      ( cif wb wceq ifbi ax-mp ifeq2 eqtri ) AECHZBECHZBEDHZABIOPJFABECKLCDJPQJ
      GBCDEMLN $.
      $( [20-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    ifbieq2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq2d.2 $e |- ( ph -> A = B ) $.
    $( Equivalence/equality deduction for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2d $p |- ( ph -> if ( ps , C , A ) = if ( ch , C , B ) ) $=
      ( cif ifbid ifeq2d eqtrd ) ABFDICFDICFEIABCFDGJACDEFHKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    ifbieq12i.1 $e |- ( ph <-> ps ) $.
    ifbieq12i.2 $e |- A = C $.
    ifbieq12i.3 $e |- B = D $.
    $( Equivalence deduction for conditional operators. $)
    ifbieq12i $p |- if ( ph , A , B ) = if ( ps , C , D ) $=
      ( cif wceq ifeq1 ax-mp ifbieq2i eqtri ) ACDJZAEDJZBEFJCEKPQKHACEDLMABDFEG
      INO $.
      $( [18-Mar-2013] $)
  $}

  ${
    ifbieq12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq12d.2 $e |- ( ph -> A = C ) $.
    ifbieq12d.3 $e |- ( ph -> B = D ) $.
    $( Equivalence deduction for conditional operators.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    ifbieq12d $p |- ( ph -> if ( ps , A , B ) = if ( ch , C , D ) ) $=
      ( cif ifbid ifeq1d ifeq2d 3eqtrd ) ABDEKCDEKCFEKCFGKABCDEHLACDFEIMACEGFJN
      O $.
      $( [22-Jun-2011] $) $( [2-Sep-2009] $)
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d z ph $.
    hbif.1 $e |- ( ph -> A. x ph ) $.
    hbif.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbif.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a conditional operator.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    hbif $p |- ( y e. if ( ph , A , B ) -> A. x y e. if ( ph , A , B ) ) $=
      ( vz cif cv wcel wi wa cab dfif2 hblem hbim hban hbab hbxfreq ) BCADEJIKZ
      ELZAMZUBDLZANZMZIOAIDEPUGBICUDUFBUCABBCIEHQFRUEABBCIDGQFSRTUA $.
      $( [26-Jun-2011] $) $( [16-Feb-2005] $)
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d y z ph $.  $d z ps $.
    hbifd.1 $e |- ( ph -> A. x ph ) $.
    hbifd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbifd.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbifd.4 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of ~ hbif . $)
    hbifd $p |- ( ph
  -> ( y e. if ( ps , A , B ) -> A. x y e. if ( ps , A , B ) ) ) $=
      ( vz cif cv wcel wi wa cab wceq hbeld hbimd dfif2 ax-17 alrimi a17d hband
      a1i wal hbabd hbxfrd ) ACDBEFLZKMZFNZBOZUKENZBPZOZKQZGUJUQRABKEFUAUFAUPCK
      DAAKUGCGAKUBUCAUMUOCGAULBCGACDUKFGADMUKNCUDZJSHTAUNBCACDUKEGURISHUETUHUI
      $.
      $( [15-Feb-2013] $)
  $}

  ${
    ifeq1da.1 $e |- ( ( ph /\ ps ) -> A = B ) $.
    $( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifeq1da $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( cif wceq wa ifeq1d wn iffalse eqtr4d adantl pm2.61dan ) ABBCEGZBDEGZHZA
      BIBCDEFJBKZRASPEQBCELBDELMNO $.
      $( [2-Sep-2009] $)
  $}

  ${
    ifeq2da.1 $e |- ( ( ph /\ -. ps ) -> A = B ) $.
    $( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifeq2da $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( cif wceq iftrue eqtr4d adantl wn wa ifeq2d pm2.61dan ) ABBECGZBEDGZHZBR
      ABPEQBECIBEDIJKABLMBCDEFNO $.
      $( [2-Sep-2009] $)
  $}

  ${
    ifclda.1 $e |- ( ( ph /\ ps ) -> A e. C ) $.
    ifclda.2 $e |- ( ( ph /\ -. ps ) -> B e. C ) $.
    $( Conditional closure.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifclda $p |- ( ph -> if ( ps , A , B ) e. C ) $=
      ( cif wcel wa wceq iftrue adantl eqeltrd wn iffalse pm2.61dan ) ABBCDHZEI
      ABJRCEBRCKABCDLMFNABOZJRDESRDKABCDPMGNQ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d y A $.  $d y z B $.  $d y z C $.  $d y z ph $.  $d x y z $.
    $( Distribute proper substitution through the conditional operator. $)
    csbifg $p |- ( A e. V -> [_ A / x ]_ if ( ph , B , C )
          = if ( [ A / x ] ph , [_ A / x ]_ B , [_ A / x ]_ C ) ) $=
      ( vy cif csb wsbc wceq csbeq1 dfsbcq ifbieq12d eqeq12d vex hbcsb1 csbeq1a
      vz cv hbs1 wcel ax-17 hbif sbequ12 csbief vtoclg ) BGTZADEHZIZABUHJZBUHDI
      ZBUHEIZHZKBCUIIZABCJZBCDIZBCEIZHZKGCFUHCKZUJUOUNUSBUHCUILUTUKUPULUMUQURAB
      UHCMBUHCDLBUHCELNOBSUHUIUNGPZUKBSULUMABGUABSUHDVASTUHUBBUCZQBSUHEVAVBQUDB
      TUHKAUKDEULUMABGUEBUHDRBUHERNUFUG $.
      $( [24-Feb-2013] $)
  $}

  ${
    elimif.1 $e |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) $.
    elimif.2 $e |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) $.
    $( Elimination of a conditional operator contained in a wff ` ps ` . $)
    elimif $p |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) $=
      ( wn wo wa exmid biantrur andir cif wceq wb iftrue syl pm5.32i iffalse
      orbi12i 3bitri ) BAAIZJZBKABKZUDBKZJACKZUDDKZJUEBALMAUDBNUFUHUGUIABCAAEFO
      ZEPBCQAEFRGSTUDBDUDUJFPBDQAEFUAHSTUBUC $.
      $( [15-Feb-2005] $)
  $}

  ${
    ifboth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    ifboth.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    $( A wff ` th ` containing a conditional operator is true when both of its
       cases are true. $)
    ifboth $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa cif wceq wb iftrue eqcomd syl biimpa adantrr wn iffalse bicomd
      biimpar adantrl pm2.61ian ) ABCIDABDCABDAEAEFJZKBDLAUDEAEFMNGOPQARZCDBUED
      CUEFUDKZDCLUEUDFAEFSNUFCDHTOUAUBUC $.
      $( [3-Sep-2006] $)
  $}

  $( Identical true and false arguments in the conditional operator. $)
  ifid $p |- if ( ph , A , A ) = A $=
    ( cif wceq iftrue iffalse pm2.61i ) AABBCBDABBEABBFG $.
    $( [18-Apr-2005] $)

  $( Expansion of an equality with a conditional operator. $)
  eqif $p |- ( A = if ( ph , B , C ) <->
             ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) $=
    ( cif wceq eqeq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [14-Feb-2005] $)

  $( Membership in a conditional operator. $)
  elif $p |- ( A e. if ( ph , B , C ) <->
             ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) $=
    ( cif wcel eleq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [14-Feb-2005] $)

  $( Membership of a conditional operator. $)
  ifel $p |- ( if ( ph , A , B ) e. C <->
             ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) $=
    ( cif wcel eleq1 elimif ) AABCEZDFBDFCDFBCIBDGICDGH $.
    $( [10-Sep-2005] $)

  $( Membership (closure) of a conditional operator. $)
  ifcl $p |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) $=
    ( wcel cif eleq1 ifboth ) ABDECDEABCFZDEBCBIDGCIDGH $.
    $( [4-Apr-2005] $)

  $( The possible values of a conditional operator.  (The proof was shortened
     by Andrew Salmon, 26-Jun-2011.) $)
  ifeqor $p |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) $=
    ( cif wceq wn iftrue con3i iffalse syl orri ) ABCDZBEZLCEZMFAFNAMABCGHABCIJ
    K $.
    $( [26-Jun-2011] $) $( [17-Jun-2007] $)

  $( Negating the first argument swaps the last two arguments of a conditional
     operator. $)
  ifnot $p |- if ( -. ph , A , B ) = if ( ph , B , A ) $=
    ( wn cif wceq notnot1 iffalse syl iftrue eqtr4d pm2.61i ) AADZBCEZACBEZFANC
    OAMDNCFAGMBCHIACBJKMNBOMBCJACBHKL $.
    $( [21-Jun-2007] $)
  $( Rewrite a conjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
  ifan $p |- if ( ( ph /\ ps ) , A , B ) = if ( ph , if ( ps , A , B ) , B ) $=
    ( wa cif wceq iftrue ifbid eqtr2d wn simpl con3i iffalse syl eqtr4d pm2.61i
    ibar ) AABEZCDFZABCDFZDFZGAUBUATAUADHABSCDABRIJAKZTDUBUCSKTDGSAABLMSCDNOAUA
    DNPQ $.
    $( [28-Jul-2014] $)

  $( Rewrite a disjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
  ifor $p |- if ( ( ph \/ ps ) , A , B ) = if ( ph , A , if ( ps , A , B ) ) $=
    ( wo cif wceq iftrue orcs eqtr4d wn iffalse biorf ifbid eqtr2d pm2.61i ) AA
    BEZCDFZACBCDFZFZGARCTABRCGQCDHIACSHJAKZTSRACSLUABQCDABMNOP $.
    $( [28-Jul-2014] $)

  ${
    $d x A $.  $d x B $.  $d x ph $.
    dedth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    dedth.2 $e |- ch $.
    $( Weak deduction theorem that eliminates a hypothesis ` ph ` , making it
       become an antecedent.  We assume that a proof exists for ` ph ` when the
       class variable ` A ` is replaced with a specific class ` B ` .  The
       hypothesis ` ch ` should be assigned to the inference, and the
       inference's hypothesis eliminated with ~ elimhyp .  If the inference has
       other hypotheses with class variable ` A ` , these can be kept by
       assigning ~ keephyp to them.  For more information, see the Deduction
       Theorem ~ http://us.metamath.org/mpegif/mmdeduction.html . $)
    dedth $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl mpbiri ) ABCGADADEHZIBCJAODADEKLFMN $.
      $( [15-May-1999] $)
  $}

  ${
    dedth2h.1 $e |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) $.
    dedth2h.2 $e |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) $.
    dedth2h.3 $e |- ta $.
    $( Weak deduction theorem eliminating two hypotheses.  This theorem is
       simpler to use than ~ dedth2v but requires that each hypothesis has
       exactly one class variable.  See also comments in ~ dedth . $)
    dedth2h $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wi cif wceq imbi2d dedth imp ) ABCABCMBDMFHFAFHNOCDBJPBDEGIKLQQR $.
      $( [15-May-1999] $)
  $}

  ${
    dedth3h.1 $e |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) $.
    dedth3h.2 $e |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) $.
    dedth3h.3 $e |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) $.
    dedth3h.4 $e |- ze $.
    $( Weak deduction theorem eliminating three hypotheses.  See comments in
       ~ dedth2h . $)
    dedth3h $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa wi cif wceq imbi2d dedth2h dedth 3impib ) ABCDABCRZDSUFESHKHAHKTUADE
      UFNUBBCEFGIJLMOPQUCUDUE $.
      $( [15-May-1999] $)
  $}

  ${
    dedth4h.1 $e |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) $.
    dedth4h.2 $e |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) $.
    dedth4h.3 $e |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) $.
    dedth4h.4 $e |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) $.
    dedth4h.5 $e |- rh $.
    $( Weak deduction theorem eliminating four hypotheses.  See comments in
       ~ dedth2h . $)
    dedth4h $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa wi cif wceq imbi2d dedth2h imp ) ABUCCDUCZEABUJEUDUJFUDUJGUDJKNOJAJN
      UEUFEFUJRUGKBKOUEUFFGUJSUGCDGHILMPQTUAUBUHUHUI $.
      $( [16-May-1999] $)
  $}

  ${
    dedth2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    dedth2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    dedth2v.3 $e |- th $.
    $( Weak deduction theorem for eliminating a hypothesis with 2 class
       variables.  Note: if the hypothesis can be separated into two
       hypotheses, each with one class variable, then ~ dedth2h is simpler to
       use.  See also comments in ~ dedth .  (The proof was shortened by Eric
       Schmidt, 28-Jul-2009.) $)
    dedth2v $p |- ( ph -> ps ) $=
      ( dedth2h anidms ) ABAABCDEFGHIJKLM $.
      $( [29-Jul-2009] $) $( [13-Aug-1999] $)
  $}

  ${
    dedth3v.1 $e |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) $.
    dedth3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    dedth3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    dedth3v.4 $e |- ta $.
    $( Weak deduction theorem for eliminating a hypothesis with 3 class
       variables.  See comments in ~ dedth2v .  (The proof was shortened by
       Eric Schmidt, 28-Jul-2009.) $)
    dedth3v $p |- ( ph -> ps ) $=
      ( dedth3h 3anidm12 anidms ) ABAABAAABCDEFGHIJKLMNOPQR $.
      $( [29-Jul-2009] $) $( [13-Aug-1999] $)
  $}

  ${
    dedth4v.1 $e |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) $.
    dedth4v.2 $e |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) $.
    dedth4v.3 $e |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) $.
    dedth4v.4 $e |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) $.
    dedth4v.5 $e |- et $.
    $( Weak deduction theorem for eliminating a hypothesis with 4 class
       variables.  See comments in ~ dedth2v .  (The proof was shortened by
       Eric Schmidt, 28-Jul-2009.) $)
    dedth4v $p |- ( ph -> ps ) $=
      ( anidms wa dedth4h ) ABAAUABAAAABCDEFGHIJKLMNOPQRSUBTT $.
      $( [29-Jul-2009] $) $( [21-Apr-2007] $)
  $}

  ${
    elimhyp.1 $e |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) $.
    elimhyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) $.
    elimhyp.3 $e |- ch $.
    $( Eliminate a hypothesis containing class variable ` A ` when it is known
       for a specific class ` B ` .  For more information, see comments in
       ~ dedth . $)
    elimhyp $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl ibi wn iffalse mpbii pm2.61i ) ABABADADEI
      ZJABKATDADELMFNOAPZCBHUAETJCBKUATEADEQMGNRS $.
      $( [15-May-1999] $)
  $}

  ${
    elimhyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) $.
    elimhyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    elimhyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    elimhyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    elimhyp2v.5 $e |- ta $.
    $( Eliminate a hypothesis containing 2 class variables. $)
    elimhyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd ibi wn iffalse mpbii pm2.61i ) ACAC
      AABCAFAFHOZPABQAUGFAFHRSJTAGAGIOZPBCQAUHGAGIRSKTUAUBAUCZDCNUIDECUIHUGPDEQ
      UIUGHAFHUDSLTUIIUHPECQUIUHIAGIUDSMTUAUEUF $.
      $( [14-Aug-1999] $)
  $}

  ${
    elimhyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    elimhyp3v.7 $e |- et $.
    $( Eliminate a hypothesis containing 3 class variables. $)
    elimhyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd ibi wn iffalse mpbii pm2.61i ) ADA
      DAABCDAHAHKUAZUBABUCAUMHAHKUDUENUFAIAILUAZUBBCUCAUNIAILUDUEOUFAJAJMUAZUBC
      DUCAUOJAJMUDUEPUFUGUHAUIZEDTUPEFGDUPKUMUBEFUCUPUMKAHKUJUEQUFUPLUNUBFGUCUP
      UNLAILUJUERUFUPMUOUBGDUCUPUOMAJMUJUESUFUGUKUL $.
      $( [14-Aug-1999] $)
  $}

  ${
    elimhyp4v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp4v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp4v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp4v.4 $e |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) $.
    elimhyp4v.5 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp4v.6 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp4v.7 $e |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) $.
    elimhyp4v.8 $e |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) $.
    elimhyp4v.9 $e |- et $.
    $( Eliminate a hypothesis containing 4 class variables (for use with the
       weak deduction theorem ~ dedth ). $)
    elimhyp4v $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl bitrd 3bitrd ibi wn iffalse mpbii pm2.61i
      ) ABABAADEBAACDAJAJMUGZUHACUIAUTJAJMUJUKRULAKAKNUGZUHCDUIAVAKAKNUJUKSULUM
      ALALOUGZUHDEUIAVBLALOUJUKTULAPAPQUGZUHEBUIAVCPAPQUJUKUAULUNUOAUPZFBUFVDFH
      IBVDFGHVDMUTUHFGUIVDUTMAJMUQUKUBULVDNVAUHGHUIVDVANAKNUQUKUCULUMVDOVBUHHIU
      IVDVBOALOUQUKUDULVDQVCUHIBUIVDVCQAPQUQUKUEULUNURUS $.
      $( [16-Apr-2005] $)
  $}

  ${
    elimel.1 $e |- B e. C $.
    $( Eliminate a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable. $)
    elimel $p |- if ( A e. C , A , B ) e. C $=
      ( wcel cif eleq1 elimhyp ) ACEZIABFZCEBCEABAJCGBJCGDH $.
      $( [15-May-1999] $)
  $}

  ${
    elimdhyp.1 $e |- ( ph -> ps ) $.
    elimdhyp.2 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    elimdhyp.3 $e |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) $.
    elimdhyp.4 $e |- th $.
    $( Version of ~ elimhyp where the hypothesis is deduced from the final
       antecedent.  See ~ ghomgrplem for an example of its use.  (Contributed
       by Paul Chapman, 25-Mar-2008.) $)
    elimdhyp $p |- ch $=
      ( cif wceq wb iftrue eqcomd syl mpbid wn iffalse mpbii pm2.61i ) ACABCGAE
      AEFKZLBCMAUBEAEFNOHPQARZDCJUCFUBLDCMUCUBFAEFSOIPTUA $.
      $( [25-Mar-2008] $)
  $}

  ${
    keephyp.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    keephyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    keephyp.3 $e |- ps $.
    keephyp.4 $e |- ch $.
    $( Transform a hypothesis ` ps ` that we want to keep (but contains the
       same class variable ` A ` used in the eliminated hypothesis) for use
       with the weak deduction theorem. $)
    keephyp $p |- th $=
      ( ifboth mp2an ) BCDIJABCDEFGHKL $.
      $( [15-May-1999] $)
  $}

  ${
    keephyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    keephyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    keephyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    keephyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    keephyp2v.5 $e |- ps $.
    keephyp2v.6 $e |- ta $.
    $( Keep a hypothesis containing 2 class variables (for use with the weak
       deduction theorem ~ dedth ). $)
    keephyp2v $p |- th $=
      ( wceq wb eqcomd syl cif iftrue bitrd mpbii wn iffalse pm2.61i ) ADABDOAB
      CDAGAGIUAZQBCRAUHGAGIUBSKTAHAHJUAZQCDRAUIHAHJUBSLTUCUDAUEZEDPUJEFDUJIUHQE
      FRUJUHIAGIUFSMTUJJUIQFDRUJUIJAHJUFSNTUCUDUG $.
      $( [16-Apr-2005] $)
  $}

  ${
    keephyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) $.
    keephyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    keephyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    keephyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    keephyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    keephyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    keephyp3v.7 $e |- rh $.
    keephyp3v.8 $e |- et $.
    $( Keep a hypothesis containing 3 class variables. $)
    keephyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd mpbii wn iffalse pm2.61i ) ADAHDUA
      AHBCDAIAILUCZUDHBUEAUNIAILUFUGOUHAJAJMUCZUDBCUEAUOJAJMUFUGPUHAKAKNUCZUDCD
      UEAUPKAKNUFUGQUHUIUJAUKZEDUBUQEFGDUQLUNUDEFUEUQUNLAILULUGRUHUQMUOUDFGUEUQ
      UOMAJMULUGSUHUQNUPUDGDUEUQUPNAKNULUGTUHUIUJUM $.
      $( [27-Sep-1999] $)
  $}

  ${
    keepel.1 $e |- A e. C $.
    keepel.2 $e |- B e. C $.
    $( Keep a membership hypothesis for weak deduction theorem, when special
       case ` B e. C ` is provable. $)
    keepel $p |- if ( ph , A , B ) e. C $=
      ( wcel cif eleq1 keephyp ) ABDGCDGABCHZDGBCBKDICKDIEFJ $.
      $( [14-Aug-1999] $)
  $}

  ${
    dedex.1 $e |- A e. _V $.
    dedex.2 $e |- B e. _V $.
    $( Conditional operator existence. $)
    ifex $p |- if ( ph , A , B ) e. _V $=
      ( cvv keepel ) ABCFDEG $.
      $( [2-Sep-2004] $)
  $}

  ${
    $d A x y $.  $d B y $.  $d ph x y $.
    $( Conditional operator existence. $)
    ifexg $p |- ( ( A e. V /\ B e. W ) -> if ( ph , A , B ) e. _V ) $=
      ( vx vy cv cif cvv wcel wceq ifeq1 eleq1d ifeq2 vex ifex vtocl2g ) AFHZGH
      ZIZJKABTIZJKABCIZJKFGBCDESBLUAUBJASBTMNTCLUBUCJATCBONASTFPGPQR $.
      $( [23-Nov-2012] $) $( [21-Mar-2011] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Power classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for power class. $)
  $c ~P $.  $( Calligraphic P $)

  $( Extend class notation to include power class.  (The tilde in the Metamath
     token is meant to suggest the calligraphic font of the P.) $)
  cpw $a class ~P A $.

  ${
    $d x A $.  $d y A $.  $d w x $.  $d w y $.  $d w A $.  $d w z $.  $d z x $.
    $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-pw .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    pwjust $p |- { x | x C_ A } = { y | y C_ A } $=
      ( vz cv wss cab sseq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINPD
      BMOCHIJ $.
      $( [29-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.
    $( Define power class.  Definition 5.10 of [TakeutiZaring] p. 17, but we
       also let it apply to proper classes, i.e. those that are not members of
       ` _V ` . $)
    df-pw $a |- ~P A = { x | x C_ A } $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for power class. $)
    pweq $p |- ( A = B -> ~P A = ~P B ) $=
      ( vx wceq cv wss cab cpw sseq2 abbidv df-pw 3eqtr4g ) ABDZCEZAFZCGNBFZCGA
      HBHMOPCABNIJCAKCBKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    pweqi.1 $e |- A = B $.
    $( Equality inference for power class. $)
    pweqi $p |- ~P A = ~P B $=
      ( wceq cpw pweq ax-mp ) ABDAEBEDCABFG $.
      $( [27-Nov-2013] $)
  $}

  ${
    pweqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for power class. $)
    pweqd $p |- ( ph -> ~P A = ~P B ) $=
      ( wceq cpw pweq syl ) ABCEBFCFEDBCGH $.
      $( [27-Nov-2013] $)
  $}

  ${
    $d A x $.  $d B x $.
    ${
      elpw.1 $e |- A e. _V $.
      $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
      elpw $p |- ( A e. ~P B <-> A C_ B ) $=
        ( vx cv wss cpw sseq1 df-pw elab2 ) DEZBFABFDABGCKABHDBIJ $.
        $( [31-Dec-1993] $)
    $}

    $( Membership in a power class.  Theorem 86 of [Suppes] p. 47.  See also
       ~ elpw2g . $)
    elpwg $p |- ( A e. V -> ( A e. ~P B <-> A C_ B ) ) $=
      ( vx cv cpw wcel wss eleq1 sseq1 vex elpw vtoclbg ) DEZBFZGNBHAOGABHDACNA
      OINABJNBDKLM $.
      $( [6-Aug-2000] $)
  $}

  $( Subset relation implied by membership in a power class. $)
  elpwi $p |- ( A e. ~P B -> A C_ B ) $=
    ( cpw wcel wss elpwg ibi ) ABCZDABEABHFG $.
    $( [17-Feb-2007] $)

  $( If ` A ` belongs to a part of ` C ` then ` A ` belongs to ` C ` .
     (Contributed by FL, 3-Aug-2009.) $)
  elelpwi $p |- ( ( A e. B /\ B e. ~P C ) -> A e. C ) $=
    ( cpw wcel elpwi sseld impcom ) BCDEZABEACEIBCABCFGH $.
    $( [4-Mar-2011] $) $( [2-Aug-2009] $)

  ${
    $d y z A $.  $d x y z $.
    hbpw.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for power class. $)
    hbpw $p |- ( y e. ~P A -> A. x y e. ~P A ) $=
      ( vz cv cpw wcel wss vex elpw ax-17 hblem hbss hbxfrbi ) BFZCGHPCIAPCBJKA
      EPCEFPHALABECDMNO $.
      $( [28-Oct-2003] $)
  $}

  ${
    pwid.1 $e |- A e. _V $.
    $( A set is a member of its power class.  Theorem 87 of [Suppes] p. 47. $)
    pwid $p |- A e. ~P A $=
      ( cpw wcel wss ssid elpw mpbir ) AACDAAEAFAABGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class. $)
    pwss $p |- ( ~P A C_ B <-> A. x ( x C_ A -> x e. B ) ) $=
      ( cpw wss cv wcel wi wal dfss2 df-pw abeq2i imbi1i albii bitri ) BDZCEAFZ
      PGZQCGZHZAIQBEZSHZAIAPCJTUBARUASUAAPABKLMNO $.
      $( [21-Jun-2009] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Unordered and ordered pairs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed. $)
  $c << $.  $( Bracket (the period distinguishes it from 'less than') $)
  $c >> $.  $( Bracket (the period distinguishes it from 'greater than') $)

  $( Extend class notation to include singleton. $)
  csn $a class { A } $.
  $( Extend class notation to include unordered pair. $)
  cpr $a class { A , B } $.
  $( Extend class notation to include unordered triplet. $)
  ctp $a class { A , B , C } $.
  $( Extend class notation to include ordered pair. $)
  cop $a class << A , B >> $.
  $( Extend class notation to include ordered triple. $)
  cotp $a class << A , B , C >> $.

  ${
    $d x A $.  $d y A $.  $d z x $.  $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-sn .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    snjust $p |- { x | x = A } = { y | y = A } $=
      ( vz cv wceq cab eqeq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINP
      DBMOCHIJ $.
      $( [29-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.
    $( Define the singleton of a class.  Definition 7.1 of [Quine] p. 48.  For
       convenience, it is well-defined for proper classes, i.e., those that are
       not elements of ` _V ` , although it is not very meaningful in this
       case.  For an alternate definition see ~ dfsn2 . $)
    df-sn $a |- { A } = { x | x = A } $.
  $}

  $( Define unordered pair of classes.  Definition 7.1 of [Quine] p. 48.  For a
     more traditional definition, but requiring a dummy variable, see
     ~ dfpr2 . $)
  df-pr $a |- { A , B } = ( { A } u. { B } ) $.

  $( Define unordered triple of classes.  Definition of [Enderton] p. 19. $)
  df-tp $a |- { A , B , C } = ( { A , B } u. { C } ) $.

  $( Kuratowski's ordered pair definition.  Definition 9.1 of [Quine] p. 58.
     For proper classes it is not meaningful but is well-defined and we allow
     it for convenience (see ~ opprc1 , ~ opprc1b , ~ opprc2 , and ~ opprc3 ).
     For the justifying theorem (for sets) see ~ opth .  There are other ways
     to define ordered pairs; the basic requirement is that two ordered pairs
     are equal iff their respective members are equal.  In 1914 Norbert Wiener
     gave the first successful definition ` << A , B >> ` _2
     ` = { { { A } , (/) } , { { B } } } ` , justified by ~ opthwiener , which
     was simplified by Kazimierz Kuratowski in 1921 to our present definition.
     An even simpler definition ` << A , B >> ` _3 ` = { A , { A , B } } ` is
     justified by ~ opthreg , but it requires the Axiom of Regularity for its
     justification and is not commonly used.  A definition that also works for
     proper classes is ` << A , B >> ` _4
     ` = ( ( A X. { (/) } ) u. ( B X. { { (/) } } ) ) ` , justified by
     ~ opthprc .  If we restrict our sets to nonnegative integers, an ordered
     pair definition that involves only elementary arithmetic is provided by
     ~ nn0opthi .  Finally, an ordered pair of real numbers can be represented
     by a complex number as shown by ~ crui . $)
  df-op $a |- << A , B >> = { { A } , { A , B } } $.

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for singletons.  Part of Exercise 4 of [TakeutiZaring]
       p. 15. $)
    sneq $p |- ( A = B -> { A } = { B } ) $=
      ( vx wceq cv cab csn eqeq2 abbidv df-sn 3eqtr4g ) ABDZCEZADZCFMBDZCFAGBGL
      NOCABMHICAJCBJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    sneqi.1 $e |- A = B $.
    $( Equality inference for singletons. $)
    sneqi $p |- { A } = { B } $=
      ( wceq csn sneq ax-mp ) ABDAEBEDCABFG $.
      $( [22-Jan-2004] $)
  $}

  ${
    sneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for singletons. $)
    sneqd $p |- ( ph -> { A } = { B } ) $=
      ( wceq csn sneq syl ) ABCEBFCFEDBCGH $.
      $( [22-Jan-2004] $)
  $}

  $( Alternate definition of singleton.  Definition 5.1 of [TakeutiZaring]
     p. 15. $)
  dfsn2 $p |- { A } = { A , A } $=
    ( cpr csn cun df-pr unidm eqtr2i ) AABACZHDHAAEHFG $.
    $( [24-Apr-1994] $)

  ${
    $d x A $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15. $)
    elsn $p |- ( x e. { A } <-> x = A ) $=
      ( cv wceq csn df-sn abeq2i ) ACBDABEABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of unordered pair.  Definition 5.1 of
       [TakeutiZaring] p. 15. $)
    dfpr2 $p |- { A , B } = { x | ( x = A \/ x = B ) } $=
      ( cpr csn cun cv wceq cab df-pr wcel elun elsn orbi12i bitri abbi2i eqtri
      wo ) BCDBEZCEZFZAGZBHZUBCHZRZAIBCJUEAUAUBUAKUBSKZUBTKZRUEUBSTLUFUCUGUDABM
      ACMNOPQ $.
      $( [24-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15, generalized. $)
    elprg $p |- ( A e. V -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) $=
      ( vx cv wceq wo cpr eqeq1 orbi12d dfpr2 elab2g ) EFZBGZNCGZHABGZACGZHEABC
      IDNAGOQPRNABJNACJKEBCLM $.
      $( [13-Sep-1995] $)
  $}

  ${
    elpr.1 $e |- A e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cvv wcel cpr wceq wo wb elprg ax-mp ) AEFABCGFABHACHIJDABCEKL $.
      $( [13-Sep-1995] $)
  $}

  ${
    elpr2.1 $e |- B e. _V $.
    elpr2.2 $e |- C e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr2 $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cpr wcel wceq wo elprg ibi cvv wb eleq1 mpbiri jaoi syl ibir impbii ) A
      BCFZGZABHZACHZIZUAUDABCTJKUDUAUDALGZUAUDMUBUEUCUBUEBLGDABLNOUCUECLGEACLNO
      PABCLJQRS $.
      $( [14-Oct-2005] $)
  $}

  $( If a class is an element of a pair, then it is one of the two paired
     elements.  (Contributed by Scott Fenton, 1-Apr-2011.) $)
  elpri $p |- ( A e. { B , C } -> ( A = B \/ A = C ) ) $=
    ( cpr wcel wceq wo elprg ibi ) ABCDZEABFACFGABCJHI $.
    $( [1-Apr-2011] $)

  ${
    $d A x $.  $d B x $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15 (generalized).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    elsncg $p |- ( A e. V -> ( A e. { B } <-> A = B ) ) $=
      ( vx cv wceq csn eqeq1 df-sn elab2g ) DEZBFABFDABGCKABHDBIJ $.
      $( [29-Jun-2011] $) $( [13-Sep-1995] $)
  $}

  ${
    elsnc.1 $e |- A e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15. $)
    elsnc $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsncg ax-mp ) ADEABFEABGHCABDIJ $.
      $( [13-Sep-1995] $)
  $}

  $( There is only one element in a singleton. $)
  elsni $p |- ( A e. { B } -> A = B ) $=
    ( csn wcel wceq elsncg ibi ) ABCZDABEABHFG $.
    $( [5-Jun-1994] $)

  $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
     p. 49. $)
  snidg $p |- ( A e. V -> A e. { A } ) $=
    ( wcel csn wceq eqid elsncg mpbiri ) ABCAADCAAEAFAABGH $.
    $( [28-Oct-2003] $)

  $( A class is a set iff it is a member of its singleton. $)
  snidb $p |- ( A e. _V <-> A e. { A } ) $=
    ( cvv wcel csn snidg elex impbii ) ABCAADZCABEAHFG $.
    $( [5-Apr-2004] $)

  ${
    snid.1 $e |- A e. _V $.
    $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
       p. 49. $)
    snid $p |- A e. { A } $=
      ( cvv wcel csn snidb mpbi ) ACDAAEDBAFG $.
      $( [31-Dec-1993] $)
  $}

  $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
     p. 15.  This variation requires only that ` B ` , rather than ` A ` , be a
     set. $)
  elsnc2g $p |- ( B e. V -> ( A e. { B } <-> A = B ) ) $=
    ( wcel csn wceq elsni snidg eleq1 syl5ibrcom impbid2 ) BCDZABEZDZABFZABGLNO
    BMDBCHABMIJK $.
    $( [28-Oct-2003] $)

  ${
    elsnc2.1 $e |- B e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15.  This variation requires only that ` B ` , rather than ` A ` , be
       a set. $)
    elsnc2 $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsnc2g ax-mp ) BDEABFEABGHCABDIJ $.
      $( [12-Jun-1994] $)
  $}

  ${
    $d A x $.  $d ps x $.
    rexsng.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted existential quantification over a singleton. $)
    rexsng $p |- ( A e. V -> ( E. x e. { A } ph <-> ps ) ) $=
      ( csn wrex cv wceq wa wcel df-rex elsn anbi1i exbii bitri ceqsexgv syl5bb
      wex ) ACDGZHZCIZDJZAKZCTZDELBUBUCUALZAKZCTUFACUAMUHUECUGUDACDNOPQABCDEFRS
      $.
      $( [29-Jan-2012] $)
  $}

  ${
    $d A x $.  $d ps x $.
    rexsn.1 $e |- A e. _V $.
    rexsn.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted existential quantification over a singleton.  (Contributed by
       Jeff Madsen, 5-Jan-2011.) $)
    rexsn $p |- ( E. x e. { A } ph <-> ps ) $=
      ( cvv wcel csn wrex wb rexsng ax-mp ) DGHACDIJBKEABCDGFLM $.
      $( [5-Jan-2011] $)
  $}

  ${
    eltp.1 $e |- A e. _V $.
    $( A member of an unordered triple of classes is one of them.  Special case
       of Exercise 1 of [TakeutiZaring] p. 17. $)
    eltp $p |- ( A e. { B , C , D } <-> ( A = B \/ A = C \/ A = D ) ) $=
      ( ctp wcel wceq wo w3o cpr csn cun df-tp eleq2i elun elsnc orbi12i 3bitri
      elpr df-3or bitr4i ) ABCDFZGZABHZACHZIZADHZIZUEUFUHJUDABCKZDLZMZGAUJGZAUK
      GZIUIUCULABCDNOAUJUKPUMUGUNUHABCETADEQRSUEUFUHUAUB $.
      $( [8-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Alternate definition of unordered triple of classes.  Special case of
       Definition 5.3 of [TakeutiZaring] p. 16. $)
    dftp2 $p |- { A , B , C } = { x | ( x = A \/ x = B \/ x = C ) } $=
      ( cv wceq w3o ctp vex eltp abbi2i ) AEZBFLCFLDFGABCDHLBCDAIJK $.
      $( [8-Apr-1994] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    hbpr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hppr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for unordered pairs. $)
    hbpr $p |- ( y e. { A , B } -> A. x y e. { A , B } ) $=
      ( cv cpr wcel wceq wo vex elpr hbeleq hbor hbxfrbi ) BGZCDHIQCJZQDJZKAQCD
      BLMRSAABCENABDFNOP $.
      $( [14-Nov-1995] $)
  $}

  $( Membership of a conditional operator in an unordered pair. $)
  ifpr $p |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. { A , B } ) $=
    ( wcel cvv cif cpr elex wa ifcl wceq wo ifeqor elprg mpbiri syl syl2an ) BD
    FBGFZCGFZABCHZBCIFZCEFBDJCEJTUAKUBGFZUCABCGLUDUCUBBMUBCMNABCOUBBCGPQRS $.
    $( [17-Jun-2007] $)

  ${
    $d x A $.  $d x B $.
    $( Convert a quantification over a pair to a conjunction. $)
    ralprg $p |- ( ( A e. V /\ B e. W ) -> ( A. x e. { A , B } ph <->
                ( [ A / x ] ph /\ [ B / x ] ph ) ) ) $=
      ( wcel wa wsbc cv wceq wi wal cpr wral sbc6g bi2anan9 df-ral wo vex bitri
      elpr imbi1i jaob albii 19.26 3bitri syl6rbbr ) CEGZDFGZHABCIZABDIZHBJZCKZ
      ALZBMZUMDKZALZBMZHZABCDNZOZUIUKUPUJULUSABCEPABDFPQVBUMVAGZALZBMUOURHZBMUT
      ABVARVDVEBVDUNUQSZALVEVCVFAUMCDBTUBUCUNAUQUDUAUEUOURBUFUGUH $.
      $( [17-Sep-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    ralpr.1 $e |- A e. _V $.
    ralpr.2 $e |- B e. _V $.
    $( Convert a quantification over a pair to a conjunction. $)
    ralpr $p |- ( A. x e. { A , B } ph <->
                ( [ A / x ] ph /\ [ B / x ] ph ) ) $=
      ( cvv wcel cpr wral wsbc wa wb ralprg mp2an ) CGHDGHABCDIJABCKABDKLMEFABC
      DGGNO $.
      $( [18-Sep-2011] $) $( [3-Jun-2007] $)

    $( Convert an existential quantification over a pair to a disjunction. $)
    rexpr $p |- ( E. x e. { A , B } ph <->
                ( [ A / x ] ph \/ [ B / x ] ph ) ) $=
      ( wn cpr wral wsbc wa wrex wo ralpr cvv wcel wb sbcng ax-mp anbi12i bitri
      notbii dfrex2 oran 3bitr4i ) AGZBCDHZIZGABCJZGZABDJZGZKZGABUGLUIUKMUHUMUH
      UFBCJZUFBDJZKUMUFBCDEFNUNUJUOULCOPUNUJQEABCORSDOPUOULQFABDORSTUAUBABUGUCU
      IUKUDUE $.
      $( [3-Jun-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    raltp.1 $e |- A e. _V $.
    raltp.2 $e |- B e. _V $.
    raltp.3 $e |- C e. _V $.
    $( Convert a quantification over a triple to a conjunction. $)
    raltp $p |- ( A. x e. { A , B , C } ph <->
                ( [ A / x ] ph /\ [ B / x ] ph /\ [ C / x ] ph ) ) $=
      ( cv ctp wcel wi wal wceq w3a wral wsbc w3o bitri sbc6 imbi1i 3jaob albii
      vex eltp 19.26-3an df-ral 3anbi123i 3bitr4i ) BIZCDEJZKZALZBMZUJCNZALZBMZ
      UJDNZALZBMZUJENZALZBMZOZABUKPABCQZABDQZABEQZOUNUPUSVBOZBMVDUMVHBUMUOURVAR
      ZALVHULVIAUJCDEBUDUEUAUOAURVAUBSUCUPUSVBBUFSABUKUGVEUQVFUTVGVCABCFTABDGTA
      BEHTUHUI $.
      $( [13-Sep-2011] $)
  $}

  ${
    $d x A $.
    ralsn.1 $e |- A e. _V $.
    $( MAY BE REVISED - derive from ralsng? $)
    $( Convert a quantification over a singleton to a substitution. $)
    ralsn $p |- ( A. x e. { A } ph <-> [ A / x ] ph ) $=
      ( csn wral cpr wsbc wa dfsn2 raleqi ralpr anidm 3bitri ) ABCEZFABCCGZFABC
      HZQIQABOPCJKABCCDDLQMN $.
      $( [27-Apr-2009] $)
  $}

  ${
    $d x A $.
    $( Substitution expressed in terms of quantification over a singleton. $)
    ralsng $p |- ( A e. V -> ( A. x e. { A } ph <-> [ A / x ] ph ) ) $=
      ( wcel wsbc cv wceq wal csn wral sbc6g df-ral imbi1i albii bitri syl6rbbr
      wi elsn ) CDEABCFBGZCHZARZBIZABCJZKZABCDLUETUDEZARZBIUCABUDMUGUBBUFUAABCS
      NOPQ $.
      $( [14-May-2009] $) $( [14-Dec-2005] $)

    $( MAY BE REVISED - make obsolete; use ralsng instead - also,
       shorten posn w/ ralsn or ralsng $)
    $( Substitution expressed in terms of quantification over a singleton.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcsng $p |- ( A e. V -> ( [ A / x ] ph <-> A. x e. { A } ph ) ) $=
      ( wcel csn wral wsbc ralsng bicomd ) CDEABCFGABCHABCDIJ $.
      $( [29-Jun-2011] $) $( [14-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbsn.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for singletons. $)
    hbsn $p |- ( y e. { A } -> A. x y e. { A } ) $=
      ( csn cpr dfsn2 hbpr hbxfreq ) ABCECCFCGABCCDDHI $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d A y $.  $d B y $.  $d V y $.  $d x y $.
    $( Distribute proper substitution through the singleton of a class.
       ~ csbsng is derived from the virtual deduction proof ~ csbsngVD .
       (Contributed by Alan Sare, 10-Nov-2012. ) $)
    csbsng $p |- ( A e. V -> [_ A / x ]_ { B } = { [_ A / x ]_ B } ) $=
      ( vy wcel csn csb cv wceq wsbc df-sn csbeq2i csbabg sbceq2g abbidv 3eqtrd
      cab syl6eqr ) BDFZABCGZHZEIZABCHZJZERZUDGTUBABUCCJZERZHUGABKZERUFABUAUHDE
      CLMUGAEBDNTUIUEEABUCCDOPQEUDLS $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Intersection with the singleton of a non-member is disjoint.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.)  (The proof was shortened
       by Wolf Lammen, 30-Sep-2014.) $)
    disjsn $p |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) $=
      ( vx csn cin c0 wceq cv wcel wn wi wal wa disj1 con2b imbi1i imnan 3bitri
      elsn albii wex alnex df-clel xchbinxr ) ABDZEFGCHZAIZUFUEIZJKZCLUFBGZUGMZ
      JZCLZBAIZJCAUENUIULCUIUHUGJZKUJUOKULUGUHOUHUJUOCBSPUJUGQRTUMUKCUAUNUKCUBC
      BAUCUDR $.
      $( [30-Sep-2014] $) $( [22-May-1998] $)

    $( Obsolete proof of ~ disjsn as of 30-Sep-2014. $)
    disjsnOLD $p |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) $=
      ( vx cv wcel csn wn wi wal wceq wa wex cin con2b elsn imbi1i imnan 3bitri
      c0 albii alnex bitri disj1 df-clel notbii 3bitr4i ) CDZAEZUGBFZEZGHZCIZUG
      BJZUHKZCLZGZAUIMSJBAEZGULUNGZCIUPUKURCUKUJUHGZHUMUSHURUHUJNUJUMUSCBOPUMUH
      QRTUNCUAUBCAUIUCUQUOCBAUDUEUF $.
      $( [29-Jun-2011] $) $( [22-May-1998] $)
  $}

  $( Intersection of distinct singletons is disjoint. $)
  disjsn2 $p |- ( A =/= B -> ( { A } i^i { B } ) = (/) ) $=
    ( wne csn wcel wn cin c0 wceq elsni eqcomd necon3ai disjsn sylibr ) ABCBADZ
    EZFOBDGHIPABPBABAJKLOBMN $.
    $( [2-Jun-2007] $) $( [25-May-1998] $)

  ${
    $d x A $.
    $( The singleton of a proper class (one that doesn't exist) is the empty
       set.  Theorem 7.2 of [Quine] p. 48. $)
    snprc $p |- ( -. A e. _V <-> { A } = (/) ) $=
      ( vx csn c0 wceq cvv wcel cv wex wn elsn exbii neq0 isset 3bitr4i con1bii
      ) ACZDEZAFGZBHZQGZBITAEZBIRJSUAUBBBAKLBQMBANOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x B $.
    r19.12sn.1 $e |- A e. _V $.
    $( Special case of ~ r19.12 where its converse holds. $)
    r19.12sn $p |- ( E. x e. { A } A. y e. B ph
                <-> A. y e. B E. x e. { A } ph ) $=
      ( wral cpr wrex wsbc csn wo rexpr oridm cvv wcel wb ax-mp 3bitri rexeq
      sbcralg wceq dfsn2 ralbii 3bitr4i ) ACEGZBDDHZIZABDJZCEGZUFBDKZIZABUKIZCE
      GUHUFBDJZUNLUNUJUFBDDFFMUNNDOPUNUJQFABCDEOUARSUKUGUBZULUHQDUCZUFBUKUGTRUM
      UICEUMABUGIZUIUILUIUOUMUQQUPABUKUGTRABDDFFMUINSUDUE $.
      $( [19-May-2008] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Condition where a restricted class abstraction is a singleton. $)
    rabsn $p |- ( B e. A -> { x e. A | x = B } = { B } ) $=
      ( wcel cv wceq wa cab crab csn eleq1 pm5.32ri abbidv df-rab df-sn 3eqtr4g
      baib ) CBDZAEZBDZSCFZGZAHUAAHUAABICJRUBUAAUBRUAUATRSCBKLQMUAABNACOP $.
      $( [28-May-2006] $)
  $}

  ${
    $d x y z $.  $d y ph $.
    $( Another way to express existential uniqueness of a wff: its class
       abstraction is a singleton. $)
    euabsn $p |- ( E! x ph <-> E. x { x | ph } = { x } ) $=
      ( vy vz cab cv csn wceq wex wb wal weu wcel abeq1 elsn bibi2i albii bitri
      exbii ax-17 hbab1 hbeq sneq eqeq2d cbvex df-eu 3bitr4ri ) ABEZCFZGZHZCIAB
      FZUIHZJZBKZCIUHULGZHZBIABLUKUOCUKAULUJMZJZBKUOABUJNUSUNBURUMABUIOPQRSUQUK
      BCUQCTBCDUHUJABCUADFUJMBTUBUMUPUJUHULUIUCUDUEABCUFUG $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( Two ways to express " ` A ` is a singleton." $)
    eusn $p |- ( E! x x e. A <-> E. x A = { x } ) $=
      ( cv wcel weu cab csn wceq wex euabsn abid2 eqeq1i exbii bitri ) ACZBDZAE
      PAFZOGZHZAIBRHZAIPAJSTAQBRABKLMN $.
      $( [30-Oct-2010] $)
  $}

  $( Commutative law for unordered pairs. $)
  prcom $p |- { A , B } = { B , A } $=
    ( csn cun cpr uncom df-pr 3eqtr4i ) ACZBCZDJIDABEBAEIJFABGBAGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for unordered pairs. $)
  preq1 $p |- ( A = B -> { A , C } = { B , C } ) $=
    ( wceq csn cun cpr sneq uneq1d df-pr 3eqtr4g ) ABDZAEZCEZFBEZNFACGBCGLMONAB
    HIACJBCJK $.
    $( [29-Mar-1998] $)

  $( Equality theorem for unordered pairs. $)
  preq2 $p |- ( A = B -> { C , A } = { C , B } ) $=
    ( wceq cpr preq1 prcom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for unordered pairs. $)
  preq12 $p |- ( ( A = C /\ B = D ) -> { A , B } = { C , D } ) $=
    ( wceq cpr preq1 preq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [19-Oct-2012] $)

  ${
    preq1i.1 $e |- A = B $.
    $( Equality inference for unordered pairs. $)
    preq1i $p |- { A , C } = { B , C } $=
      ( wceq cpr preq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [19-Oct-2012] $)

    $( Equality inference for unordered pairs. $)
    preq2i $p |- { C , A } = { C , B } $=
      ( wceq cpr preq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [19-Oct-2012] $)

    ${
      preq12i.2 $e |- C = D $.
      $( Equality inference for unordered pairs. $)
      preq12i $p |- { A , C } = { B , D } $=
        ( wceq cpr preq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [19-Oct-2012] $)
    $}
  $}

  ${
    preq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for unordered pairs. $)
    preq1d $p |- ( ph -> { A , C } = { B , C } ) $=
      ( wceq cpr preq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [19-Oct-2012] $)

    $( Equality deduction for unordered pairs. $)
    preq2d $p |- ( ph -> { C , A } = { C , B } ) $=
      ( wceq cpr preq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [19-Oct-2012] $)

    preq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for unordered pairs. $)
    preq12d $p |- ( ph -> { A , C } = { B , D } ) $=
      ( wceq cpr preq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
      $( [19-Oct-2012] $)
  $}

  $( Equality theorem for unordered triples. $)
  tpeq1 $p |- ( A = B -> { A , C , D } = { B , C , D } ) $=
    ( wceq cpr csn cun ctp preq1 uneq1d df-tp 3eqtr4g ) ABEZACFZDGZHBCFZPHACDIB
    CDINOQPABCJKACDLBCDLM $.
    $( [13-Sep-2011] $)

  $( Equality theorem for unordered triples. $)
  tpeq2 $p |- ( A = B -> { C , A , D } = { C , B , D } ) $=
    ( wceq cpr csn cun ctp preq2 uneq1d df-tp 3eqtr4g ) ABEZCAFZDGZHCBFZPHCADIC
    BDINOQPABCJKCADLCBDLM $.
    $( [13-Sep-2011] $)

  $( Equality theorem for unordered triples. $)
  tpeq3 $p |- ( A = B -> { C , D , A } = { C , D , B } ) $=
    ( wceq cpr csn cun ctp sneq uneq2d df-tp 3eqtr4g ) ABEZCDFZAGZHOBGZHCDAICDB
    INPQOABJKCDALCDBLM $.
    $( [13-Sep-2011] $)

  ${
    tpeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for unordered triples. $)
    tpeq1d $p |- ( ph -> { A , C , D } = { B , C , D } ) $=
      ( wceq ctp tpeq1 syl ) ABCGBDEHCDEHGFBCDEIJ $.
      $( [22-Jun-2014] $)

    $( Equality theorem for unordered triples. $)
    tpeq2d $p |- ( ph -> { C , A , D } = { C , B , D } ) $=
      ( wceq ctp tpeq2 syl ) ABCGDBEHDCEHGFBCDEIJ $.
      $( [22-Jun-2014] $)

    $( Equality theorem for unordered triples. $)
    tpeq3d $p |- ( ph -> { C , D , A } = { C , D , B } ) $=
      ( wceq ctp tpeq3 syl ) ABCGDEBHDECHGFBCDEIJ $.
      $( [22-Jun-2014] $)

    tpeq123d.2 $e |- ( ph -> C = D ) $.
    tpeq123d.3 $e |- ( ph -> E = F ) $.
    $( Equality theorem for unordered triples. $)
    tpeq123d $p |- ( ph -> { A , C , E } = { B , D , F } ) $=
      ( ctp tpeq1d tpeq2d tpeq3d 3eqtrd ) ABDFKCDFKCEFKCEGKABCDFHLADECFIMAFGCEJ
      NO $.
      $( [22-Jun-2014] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Rotation of the elements of an unordered triple.  (Contributed by Alan
       Sare, 24-Oct-2011.) $)
    tprot $p |- { A , B , C } = { B , C , A } $=
      ( vx cv wceq w3o cab ctp 3orrot abbii dftp2 3eqtr4i ) DEZAFZNBFZNCFZGZDHP
      QOGZDHABCIBCAIRSDOPQJKDABCLDBCALM $.
      $( [24-Oct-2011] $)
  $}

  $( An unordered pair contains its first member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid1g $p |- ( A e. V -> A e. { A , B } ) $=
    ( wcel cpr wceq wo eqid orci elprg mpbiri ) ACDAABEDAAFZABFZGLMAHIAABCJK $.
    $( [7-Nov-2008] $)

  $( An unordered pair contains its second member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid2g $p |- ( B e. V -> B e. { A , B } ) $=
    ( wcel cpr prid1g prcom syl6eleq ) BCDBBAEABEBACFBAGH $.
    $( [7-Nov-2008] $)

  ${
    prid1.1 $e |- A e. _V $.
    $( An unordered pair contains its first member.  Part of Theorem 7.6 of
       [Quine] p. 49. $)
    prid1 $p |- A e. { A , B } $=
      ( cvv wcel cpr prid1g ax-mp ) ADEAABFECABDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    prid2.1 $e |- B e. _V $.
    $( An unordered pair contains its second member.  Part of Theorem 7.6 of
       [Quine] p. 49. $)
    prid2 $p |- B e. { A , B } $=
      ( cpr prid1 prcom eleqtri ) BBADABDBACEBAFG $.
      $( [5-Aug-1993] $)
  $}

  $( A proper class vanishes in an unordered pair. $)
  prprc1 $p |- ( -. A e. _V -> { A , B } = { B } ) $=
    ( cvv wcel wn csn c0 wceq cpr snprc cun uneq1 df-pr uncom un0 3eqtr4g sylbi
    eqtr2i ) ACDEAFZGHZABIZBFZHAJTSUBKGUBKZUAUBSGUBLABMUCUBGKUBGUBNUBORPQ $.
    $( [5-Aug-1993] $)

  $( A proper class vanishes in an unordered pair. $)
  prprc2 $p |- ( -. B e. _V -> { A , B } = { A } ) $=
    ( cvv wcel wn cpr csn prcom prprc1 syl5eq ) BCDEABFBAFAGABHBAIJ $.
    $( [22-Mar-2006] $)

  $( An unordered pair containing two proper classes is the empty set. $)
  prprc $p |- ( ( -. A e. _V /\ -. B e. _V ) -> { A , B } = (/) ) $=
    ( cvv wcel wn cpr csn c0 prprc1 wceq snprc biimpi sylan9eq ) ACDEBCDEZABFBG
    ZHABINOHJBKLM $.
    $( [22-Mar-2006] $)

  ${
    tpid1.1 $e |- A e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid1 $p |- A e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix1 ax-mp eltp mpbir ) AABCEFAAGZABGZACGZHZNQA
      INOPJKAABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  ${
    tpid2.1 $e |- B e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid2 $p |- B e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix2 ax-mp eltp mpbir ) BABCEFBAGZBBGZBCGZHZOQB
      IONPJKBABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.  $d x ps $.
    $( Closed theorem form of ~ tpid3 .  This proof was automatically generated
       from the virtual deduction proof ~ tpid3gVD using a translation
       program.  (Contributed by Alan Sare, 24-Oct-2011.) $)
    tpid3g $p |- ( A e. B -> A e. { C , D , A } ) $=
      ( vx wcel cv wceq wex ctp elisset w3o cab wi 3mix3 a1i abid syl6ibr dftp2
      eleq2i eleq1 mpbidi exlimdv mpd ) ABFZEGZAHZEIACDAJZFZEABKUEUGUIEUGUFUHFZ
      UIUEUEUGUFUFCHZUFDHZUGLZEMZFZUJUEUGUMUOUGUMNUEUGUKULOPUMEQRUHUNUFECDASTRU
      FAUHUAUBUCUD $.
      $( [24-Oct-2011] $)
  $}

  ${
    tpid3.1 $e |- C e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid3 $p |- C e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix3 ax-mp eltp mpbir ) CABCEFCAGZCBGZCCGZHZPQC
      IPNOJKCABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  $( The singleton of a set is not empty. $)
  snnzg $p |- ( A e. V -> { A } =/= (/) ) $=
    ( wcel csn c0 wne snidg ne0i syl ) ABCAADZCJEFABGJAHI $.
    $( [14-Dec-2008] $)

  ${
    snnz.1 $e |- A e. _V $.
    $( The singleton of a set is not empty. $)
    snnz $p |- { A } =/= (/) $=
      ( cvv wcel csn c0 wne snnzg ax-mp ) ACDAEFGBACHI $.
      $( [2-Apr-2007] $) $( [10-Apr-1994] $)
  $}

  ${
    prnz.1 $e |- A e. _V $.
    $( A pair containing a set is not empty. $)
    prnz $p |- { A , B } =/= (/) $=
      ( cpr wcel c0 wne prid1 ne0i ax-mp ) AABDZEKFGABCHKAIJ $.
      $( [17-Jan-2007] $) $( [9-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A pair containing a set is not empty.  (Contributed by FL,
       19-Sep-2011.) $)
    prnzg $p |- ( A e. V -> { A , B } =/= (/) ) $=
      ( vx cv cpr c0 wne wceq preq1 neeq1d vex prnz vtoclg ) DEZBFZGHABFZGHDACO
      AIPQGOABJKOBDLMN $.
      $( [19-Sep-2011] $)
  $}

  ${
    tpnz.1 $e |- A e. _V $.
    $( A triplet containing a set is not empty. $)
    tpnz $p |- { A , B , C } =/= (/) $=
      ( ctp wcel c0 wne tpid1 ne0i ax-mp ) AABCEZFLGHABCDILAJK $.
      $( [13-Apr-2007] $) $( [10-Apr-1994] $)
  $}

  ${
    $d A x $.  $d B x $.
    snss.1 $e |- A e. _V $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49. $)
    snss $p |- ( A e. B <-> { A } C_ B ) $=
      ( vx cv csn wcel wi wal wceq wss elsn imbi1i albii dfss2 clel2 3bitr4ri )
      DEZAFZGZRBGZHZDIRAJZUAHZDISBKABGUBUDDTUCUADALMNDSBODABCPQ $.
      $( [5-Aug-1993] $)
  $}

  $( Membership in a set with an element removed. $)
  eldifsn $p |- ( A e. ( B \ { C } ) <-> ( A e. B /\ A =/= C ) ) $=
    ( csn cdif wcel wn wa wne eldif elsncg necon3bbid pm5.32i bitri ) ABCDZEFAB
    FZAOFZGZHPACIZHABOJPRSPQACACBKLMN $.
    $( [10-Oct-2007] $)

  ${
    $d A x $.  $d B x $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49. $)
    snssg $p |- ( A e. V -> ( A e. B <-> { A } C_ B ) ) $=
      ( vx cv wcel csn wss eleq1 wceq sneq sseq1d vex snss vtoclbg ) DEZBFPGZBH
      ABFAGZBHDACPABIPAJQRBPAKLPBDMNO $.
      $( [22-Jul-2001] $)

    $( An element not in a set can be removed without affecting the set.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    difsn $p |- ( -. A e. B -> ( B \ { A } ) = B ) $=
      ( vx wcel wn csn cdif cv wne wa eldifsn simpl wceq eleq1 biimpcd necon3bd
      com12 ancld impbid2 syl5bb eqrdv ) ABDZEZCBAFGZBCHZUDDUEBDZUEAIZJZUCUFUEB
      AKUCUHUFUFUGLUCUFUGUFUCUGUFUBUEAUEAMUFUBUEABNOPQRSTUA $.
      $( [29-Jun-2011] $) $( [16-Mar-2006] $)

    $( Removal of a singleton from an unordered pair.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    difprsn $p |- ( { A , B } \ { A } ) C_ { B } $=
      ( vx cpr csn cdif cv wcel wn wa wceq wo elpr elsn notbii biimparc syl2anb
      vex biorf eldif 3imtr4i ssriv ) CABDZAEZFZBEZCGZUCHZUGUDHZIZJUGBKZUGUEHUG
      UFHUHUGAKZUKLZULIZUKUJUGABCRMUIULCANOUNUKUMULUKSPQUGUCUDTCBNUAUB $.
      $( [29-Jun-2011] $) $( [16-Mar-2006] $)
  $}

  $( The singleton of an element of a class is a subset of the class. $)
  snssi $p |- ( A e. B -> { A } C_ B ) $=
    ( wcel csn wss snssg ibi ) ABCADBEABBFG $.
    $( [6-Jun-1994] $)

  ${
    snssd.1 $e |- ( ph -> A e. B ) $.
    $( The singleton of an element of a class is a subset of the class
       (deduction rule).  (Contributed by Jonathan Ben-Naim 3-Jun-2011). $)
    snssd $p |- ( ph -> { A } C_ B ) $=
      ( wcel csn wss wb snssg syl mpbid ) ABCEZBFCGZDALLMHDBCCIJK $.
      $( [3-Jun-2011] $)
  $}

  $( If we remove a single element from a class then put it back in, we end up
     with the original class. $)
  difsnid $p |- ( B e. A -> ( ( A \ { B } ) u. { B } ) = A ) $=
    ( wcel csn cdif cun uncom wss wceq snssi undif sylib syl5eq ) BACZABDZEZOFO
    PFZAPOGNOAHQAIBAJOAKLM $.
    $( [2-Oct-2006] $)

  $( Note that ` x ` is a dummy variable in the proof below. $)
  $( Compute the power set of the empty set.  Theorem 89 of [Suppes] p. 47.
     (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  pw0 $p |- ~P (/) = { (/) } $=
    ( vx cv c0 wss cab wceq cpw csn ss0b abbii df-pw df-sn 3eqtr4i ) ABZCDZAENC
    FZAECGCHOPANIJACKACLM $.
    $( [29-Jun-2011] $) $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Compute the power set of the power set of the empty set.  (See ~ pw0 for
       the power set of the empty set.)  Theorem 90 of [Suppes] p. 48.
       Although this theorem is a special case of ~ pwsn , we have chosen to
       show a direct elementary proof. $)
    pwpw0 $p |- ~P { (/) } = { (/) , { (/) } } $=
      ( vx vy cv c0 csn wss cab wceq wo cpw cpr wn wa wcel wal dfss2 elsn sylbi
      wi wex imbi2i albii bitri neq0 exintr syl5bi exancom df-clel bitr4i snssi
      syl6 anc2li eqss syl6ibr orrd sseq1 mpbiri eqimss jaoi impbii abbii df-pw
      0ss dfpr2 3eqtr4i ) ACZDEZFZAGVFDHZVFVGHZIZAGVGJDVGKVHVKAVHVKVHVIVJVHVILZ
      VHVGVFFZMVJVHVLVMVHBCZVFNZVNDHZSZBOZVLVMSVHVOVNVGNZSZBOVRBVFVGPVTVQBVSVPV
      OBDQUAUBUCVRVLVOVPMBTZVMVLVOBTVRWABVFUDVOVPBUEUFWADVFNZVMWAVPVOMBTWBVOVPB
      UGBDVFUHUIDVFUJRUKRULVFVGUMUNUOVIVHVJVIVHDVGFVGVCVFDVGUPUQVFVGURUSUTVAAVG
      VBADVGVDVE $.
      $( [28-Sep-2006] $) $( [7-Aug-1994] $)
  $}

  $( A singleton is a subset of an unordered pair containing its member. $)
  snsspr1 $p |- { A } C_ { A , B } $=
    ( csn cun cpr ssun1 df-pr sseqtr4i ) ACZIBCZDABEIJFABGH $.
    $( [27-Aug-2004] $)

  $( A singleton is a subset of an unordered pair containing its member. $)
  snsspr2 $p |- { B } C_ { A , B } $=
    ( csn cun cpr ssun2 df-pr sseqtr4i ) BCZACZIDABEIJFABGH $.
    $( [2-May-2009] $)

  $( A singleton is a subset of an unordered triple containing its member. $)
  snsstp1 $p |- { A } C_ { A , B , C } $=
    ( csn cpr cun ctp snsspr1 ssun1 sstri df-tp sseqtr4i ) ADZABEZCDZFZABCGMNPA
    BHNOIJABCKL $.
    $( [9-Oct-2013] $)

  $( A singleton is a subset of an unordered triple containing its member. $)
  snsstp2 $p |- { B } C_ { A , B , C } $=
    ( csn cpr cun ctp snsspr2 ssun1 sstri df-tp sseqtr4i ) BDZABEZCDZFZABCGMNPA
    BHNOIJABCKL $.
    $( [9-Oct-2013] $)

  $( A singleton is a subset of an unordered triple containing its member. $)
  snsstp3 $p |- { C } C_ { A , B , C } $=
    ( csn cpr cun ctp ssun2 df-tp sseqtr4i ) CDZABEZKFABCGKLHABCIJ $.
    $( [9-Oct-2013] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    prss.1 $e |- A e. _V $.
    prss.2 $e |- B e. _V $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    prss $p |- ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) $=
      ( csn wss wa cun wcel cpr unss snss anbi12i df-pr sseq1i 3bitr4i ) AFZCGZ
      BFZCGZHRTIZCGACJZBCJZHABKZCGRTCLUCSUDUAACDMBCEMNUEUBCABOPQ $.
      $( [29-Jun-2011] $) $( [30-May-1994] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    prssg $p |- ( ( A e. V /\ B e. W ) ->
                ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) $=
      ( wcel wa csn wss cpr snssg bi2anan9 cun unss df-pr sseq1i bitr4i syl6bb
      ) ADFZBEFZGACFZBCFZGAHZCIZBHZCIZGZABJZCIZSUAUDTUBUFACDKBCEKLUGUCUEMZCIUIU
      CUECNUHUJCABOPQR $.
      $( [29-Jun-2011] $) $( [22-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subsets of a singleton. $)
    sssn $p |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) $=
      ( vx csn wss c0 wceq wo wn wa wcel cv wex neq0 ssel elsni syl6 eleq1 ibd
      wb exlimdv syl5bi snssi anc2li eqss syl6ibr orrd sseq1 mpbiri eqimss jaoi
      0ss impbii ) ABDZEZAFGZAUNGZHUOUPUQUOUPIZUOUNAEZJUQUOURUSUOURBAKZUSURCLZA
      KZCMUOUTCANUOVBUTCUOVBUTUOVBVABGZVBUTTUOVBVAUNKVCAUNVAOVABPQVABARQSUAUBBA
      UCQUDAUNUEUFUGUPUOUQUPUOFUNEUNULAFUNUHUIAUNUJUKUM $.
      $( [24-Apr-2004] $)

    $( Two ways to express that a nonempty set equals a singleton. $)
    eqsn $p |- ( A =/= (/) -> ( A = { B } <-> A. x e. A x = B ) ) $=
      ( c0 wne csn wceq wss cv wral eqimss wn df-ne wo sssn biimpi syl5bi com12
      ord impbid2 wcel dfss3 elsn ralbii bitri syl6bb ) BDEZBCFZGZBUHHZAIZCGZAB
      JZUGUIUJBUHKUJUGUIUGBDGZLUJUIBDMUJUNUIUJUNUINBCOPSQRTUJUKUHUAZABJUMABUHUB
      UOULABACUCUDUEUF $.
      $( [15-Dec-2007] $)
  $}

  ${
    $( The subsets of a pair. $)
    sspr $p |- ( A C_ { B , C } <->
     ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) $=
      ( cpr wss c0 wceq csn wo wn wa wcel cdif difsn adantl adantr sseq1 mpbiri
      ex jaoi simpll pm2.45 anim1i ioran sylibr ssdif difprsn syl6ss sssn con1d
      eqsstr3d syl6ib imp sylan2 anassrs prcom sseq2i sylbi prssg syl2anc eqssd
      ibi orrd 0ss snsspr1 snsspr2 eqimss impbii ) ABCDZEZAFGZABHZGZIZACHZGZAVI
      GZIZIVJVNVRVJVNJZVRVJVSKZVPVQVTVPJZVQVTWAKZAVIVJVSWAUAWBBALZCALZVIAEZVJVS
      WAWCVSWAKZVJVKVPIZJZWCWFVKJZWAKWHVSWIWAVKVMUBUCVKVPUDUEVJWHWCVJWCWGVJWCJZ
      AVOEZWGVJWJWKVJWJKAAVLMZVOWJWLAGVJBANOVJWLVOEWJVJWLVIVLMVOAVIVLUFBCUGUHPU
      KSACUIULUJUMUNUOVTWDWAVJVSWDVJWDVNVJWDJZAVLEZVNVJWMWNVJWMKZAAVOMZVLWMWPAG
      VJCANOWOWPCBDZVOMZVLVJWPWREZWMVJAWQEWSVIWQABCUPUQAWQVOUFURPCBUGUHUKSABUIU
      LUJUMPWCWDKWEBCAAAUSVBUTVASVCSVCVNVJVRVKVJVMVKVJFVIEVIVDAFVIQRVMVJVLVIEBC
      VEAVLVIQRTVPVJVQVPVJVOVIEBCVFAVOVIQRAVIVGTTVH $.
      $( [16-Mar-2006] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.  $d D x $.
    tpss.1 $e |- A e. _V $.
    tpss.2 $e |- B e. _V $.
    tpss.3 $e |- C e. _V $.
    $( A triplet of elements of a class is a subset of the class.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpss $p |- ( ( A e. D /\ B e. D /\ C e. D ) <-> { A , B , C } C_ D ) $=
      ( cpr wss csn wa cun wcel w3a ctp unss df-3an prss snss anbi12i 3bitr4i
      bitri df-tp sseq1i ) ABHZDIZCJZDIZKZUEUGLZDIADMZBDMZCDMZNZABCOZDIUEUGDPUN
      UKULKZUMKUIUKULUMQUPUFUMUHABDEFRCDGSTUBUOUJDABCUCUDUA $.
      $( [29-Jun-2011] $) $( [9-Apr-1994] $)
  $}

  ${
    sneqr.1 $e |- A e. _V $.
    $( If the singletons of two sets are equal, the two sets are equal.  Part
       of Exercise 4 of [TakeutiZaring] p. 15. $)
    sneqr $p |- ( { A } = { B } -> A = B ) $=
      ( csn wceq wcel snid eleq2 mpbii elsnc sylib ) ADZBDZEZAMFZABENALFOACGLMA
      HIABCJK $.
      $( [27-Aug-1993] $)

    $( If a singleton is a subset of another, their members are equal. $)
    snsssn $p |- ( { A } C_ { B } -> A = B ) $=
      ( csn wss c0 wceq wo sssn wne wn snnz df-ne mpbi pm2.21i sneqr jaoi sylbi
      ) ADZBDZESFGZSTGZHABGZSBIUAUCUBUAUCSFJUAKACLSFMNOABCPQR $.
      $( [28-May-2006] $)
  $}

  ${
    $d x A $.
    $( The singleton of a class is a subset of its power class. $)
    snsspw $p |- { A } C_ ~P A $=
      ( vx csn cpw cv wceq wss wcel eqimss elsn df-pw abeq2i 3imtr4i ssriv ) BA
      CZADZBEZAFQAGZQOHQPHQAIBAJRBPBAKLMN $.
      $( [5-Aug-1993] $)
  $}


  ${
    $d x A $.  $d x B $.  $d x C $.
    prsspw.1 $e |- A e. _V $.
    prsspw.2 $e |- B e. _V $.
    $( An unordered pair belongs to the power class of a class iff each member
       belongs to the class.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    prsspw $p |- ( { A , B } C_ ~P C <-> ( A C_ C /\ B C_ C ) ) $=
      ( cpr cpw wss wcel wa prss elpw anbi12i bitr3i ) ABFCGZHAOIZBOIZJACHZBCHZ
      JABODEKPRQSACDLBCELMN $.
      $( [29-Jun-2011] $) $( [10-Dec-2003] $)
  $}

  ${
    preqr1.1 $e |- A e. _V $.
    preqr1.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same second element, the first elements are equal. $)
    preqr1 $p |- ( { A , C } = { B , C } -> A = B ) $=
      ( cpr wceq wcel wo prid1 eleq2 mpbii elpr sylib mpbiri eqcom eqeq2 oplem1
      ) ACFZBCFZGZABGZACGZBAGZBCGZUAATHZUBUCIUAASHUFACDJSTAKLABCDMNUABSHZUDUEIU
      AUGBTHBCEJSTBKOBACEMNABPACBQR $.
      $( [18-Oct-1995] $)
  $}

  ${
    preqr2.1 $e |- A e. _V $.
    preqr2.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same first element, the second elements are equal. $)
    preqr2 $p |- ( { C , A } = { C , B } -> A = B ) $=
      ( cpr wceq prcom eqeq12i preqr1 sylbi ) CAFZCBFZGACFZBCFZGABGLNMOCAHCBHIA
      BCDEJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    preq12b.1 $e |- A e. _V $.
    preq12b.2 $e |- B e. _V $.
    preq12b.3 $e |- C e. _V $.
    preq12b.4 $e |- D e. _V $.
    $( Equality relationship for two unordered pairs. $)
    preq12b $p |- ( { A , B } = { C , D } <->
                   ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) $=
      ( cpr wceq wa wo wcel preq1 eqeq1d preqr2 syl6bi com12 ancld prcom eqeq2i
      prid1 eleq2 mpbii elpr sylib wi sylbi orim12d preq12 syl6eq sylan9eq jaoi
      mpd impbii ) ABIZCDIZJZACJZBDJZKZADJZBCJZKZLZURUSVBLZVEURAUQMZVFURAUPMVGA
      BEUBUPUQAUCUDACDEUEUFURUSVAVBVDURUSUTUSURUTUSURCBIZUQJUTUSUPVHUQACBNOBDCF
      HPQRSURVBVCURUPDCIZJZVBVCUGUQVIUPCDTUAVBVJVCVBVJDBIZVIJVCVBUPVKVIADBNZOBC
      DFGPQRUHSUIUNVAURVDABCDUJVBVCUPBDIZUQVBUPVKVMVLDBTUKBCDNULUMUO $.
      $( [17-Oct-1996] $)

    $( Equality of two unordered pairs. $)
    prel12 $p |- ( -. A = B -> ( { A , B } = { C , D } <->
                   ( A e. { C , D } /\ B e. { C , D } ) ) ) $=
      ( wceq wn cpr wcel wa eleq2 mpbii wo wi elpr eqeq2 notbid prid1 prid2 jca
      orel2 syl6bi com3l imp ancrd orel1 orim12d orcom bitri preq12b 3imtr4g ex
      syl5bi imp3a impbid2 ) ABIZJZABKZCDKZIZAVBLZBVBLZMVCVDVEVCAVALVDABEUAVAVB
      ANOVCBVALVEABFUBVAVBBNOUCUTVDVEVCVDACIZADIZPZUTVEVCQZACDERUTVHVIUTVHMZBDI
      ZBCIZPZVFVKMZVGVLMZPVEVCVJVKVNVLVOVJVKVFUTVHVKVFQVKUTVHVFVKUTVGJVHVFQVKUS
      VGBDASTVGVFUDUEUFUGUHVJVLVGUTVHVLVGQVLUTVHVGVLUTVFJVHVGQVLUSVFBCASTVFVGUI
      UEUFUGUHUJVEVLVKPVMBCDFRVLVKUKULABCDEFGHUMUNUOUPUQUR $.
      $( [17-Oct-1996] $)

    $( A way to represent ordered pairs using unordered pairs with distinct
       members. $)
    opthpr $p |- ( A =/= D ->
                 ( { A , B } = { C , D } <-> ( A = C /\ B = D ) ) ) $=
      ( cpr wceq wa wo wne preq12b idd wn wi df-ne pm2.21 sylbi jaod orc syl5bb
      imp3a impbid1 ) ABICDIJACJBDJKZADJZBCJZKZLZADMZUFABCDEFGHNUKUJUFUKUFUFUIU
      KUFOUKUGUHUFUKUGPUGUHUFQZQADRUGULSTUDUAUFUIUBUEUC $.
      $( [27-Mar-2007] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C x y z w $.  $d D x y z w $.
    $d V x y z w $.  $d W x y z w $.  $d X x y z w $.  $d Y x y z w $.
    $( Closed form of ~ preq12b .  (Contributed by Scott Fenton,
       28-Mar-2014.) $)
    preq12bg $p |- ( ( ( A e. V /\ B e. W ) /\ ( C e. X /\ D e. Y ) ) ->
       ( { A , B } = { C , D } <->
         ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ) $=
      ( vx vy vz vw wcel wa cpr wceq wo wb wi cv weq preq1 eqeq1d eqeq1 orbi12d
      anbi1d bibi12d imbi2d preq2 anbi2d eqeq2 w3a vex preq12b vtoclbg vtocl3ga
      eqeq2d a1i 3expa impr ) AEMZBFMZNCGMZDHMZABOZCDOZPZACPZBDPZNZADPZBCPZNZQZ
      RZVAVBVCVDVOSZVDITZJTZOZKTZDOZPZIKUAZVRDPZNZVQDPZJKUAZNZQZRZSZVDAVROZWAPZ
      AVTPZWDNZVKWGNZQZRZSVDVEWAPZWNVINZVKBVTPZNZQZRZSVPIJKABCEFGVQAPZWJWRVDXEW
      BWMWIWQXEVSWLWAVQAVRUBUCXEWEWOWHWPXEWCWNWDVQAVTUDUFXEWFVKWGVQADUDUFUEUGUH
      VRBPZWRXDVDXFWMWSWQXCXFWLVEWAVRBAUIUCXFWOWTWPXBXFWDVIWNVRBDUDUJXFWGXAVKVR
      BVTUDUJUEUGUHVTCPZXDVOVDXGWSVGXCVNXGWAVFVEVTCDUBUQXGWTVJXBVMXGWNVHVIVTCAU
      KUFXGXAVLVKVTCBUKUJUEUGUHWKVQEMVRFMVTGMULVSVTLTZOZPWCJLUAZNZILUAZWGNZQWBW
      ILDHXHDPZXIWAVSXHDVTUIUQXNXKWEXMWHXNXJWDWCXHDVRUKUJXNXLWFWGXHDVQUKUFUEVQV
      RVTXHIUMJUMKUMLUMUNUOURUPUSUT $.
      $( [19-Apr-2014] $) $( [28-Mar-2014] $)
  $}

  ${
    preqsn.1 $e |- A e. _V $.
    preqsn.2 $e |- B e. _V $.
    preqsn.3 $e |- C e. _V $.
    $( Equivalence for a pair equal to a singleton. $)
    preqsn $p |- ( { A , B } = { C } <-> ( A = B /\ B = C ) ) $=
      ( cpr csn wceq wa dfsn2 eqeq2i preq12b oridm eqtr3 simpr jca eqtr impbii
      wo bitri 3bitri ) ABGZCHZIUCCCGZIACIZBCIZJZUHTZABIZUGJZUDUEUCCKLABCCDEFFM
      UIUHUKUHNUHUKUHUJUGABCOUFUGPQUKUFUGABCRUJUGPQSUAUB $.
      $( [3-Jun-2008] $)
  $}

  $( Equality theorem for ordered pairs. $)
  opeq1 $p |- ( A = B -> << A , C >> = << B , C >> ) $=
    ( wceq csn cpr cop sneq preq1 preq12d df-op 3eqtr4g ) ABDZAEZACFZFBEZBCFZFA
    CGBCGMNPOQABHABCIJACKBCKL $.
    $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs. $)
  opeq2 $p |- ( A = B -> << C , A >> = << C , B >> ) $=
    ( wceq csn cpr cop preq2 preq2d df-op 3eqtr4g ) ABDZCEZCAFZFMCBFZFCAGCBGLNO
    MABCHICAJCBJK $.
    $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs. $)
  opeq12 $p |- ( ( A = C /\ B = D ) -> << A , B >> = << C , D >> ) $=
    ( wceq cop opeq1 opeq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [28-May-1995] $)

  ${
    opeq1i.1 $e |- A = B $.
    $( Equality inference for ordered pairs. $)
    opeq1i $p |- << A , C >> = << B , C >> $=
      ( wceq cop opeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Dec-2006] $)

    $( Equality inference for ordered pairs. $)
    opeq2i $p |- << C , A >> = << C , B >> $=
      ( wceq cop opeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Dec-2006] $)

    ${
      opeq12i.2 $e |- C = D $.
      $( Equality inference for ordered pairs.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.) $)
      opeq12i $p |- << A , C >> = << B , D >> $=
        ( wceq cop opeq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [16-Dec-2006] $)
    $}
  $}

  ${
    opeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for ordered pairs. $)
    opeq1d $p |- ( ph -> << A , C >> = << B , C >> ) $=
      ( wceq cop opeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Dec-2006] $)

    $( Equality deduction for ordered pairs. $)
    opeq2d $p |- ( ph -> << C , A >> = << C , B >> ) $=
      ( wceq cop opeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Dec-2006] $)

    ${
      opeq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for ordered pairs.  (The proof was shortened by
         Andrew Salmon, 29-Jun-2011.) $)
      opeq12d $p |- ( ph -> << A , C >> = << B , D >> ) $=
        ( wceq cop opeq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
        $( [29-Jun-2011] $) $( [16-Dec-2006] $)
    $}
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    hbop.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbop.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for ordered pairs. $)
    hbop $p |- ( y e. << A , B >> -> A. x y e. << A , B >> ) $=
      ( cop csn cpr df-op hbsn hbpr hbxfreq ) ABCDGCHZCDIZICDJABNOABCEKABCDEFLL
      M $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d y z B $.  $d y z A $.  $d y ph $.  $d x y z $.
    hbopd.1 $e |- ( ph -> A. x ph ) $.
    hbopd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbopd.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbop . $)
    hbopd $p |- ( ph -> ( y e. << A , B >> -> A. x y e. << A , B >> ) ) $=
      ( vz cv wcel wal cab cop wi hba1 hbab wceq alrimiv abidhb a1i syl opeq12d
      hbop eleq2d albid 3imtr3d ) ACJZIJZDKZBLZIMZUIEKZBLZIMZNZKZUQBLZUHDENZKZU
      TBLUQUROABCULUOUKBICUJBPQUNBICUMBPQUDUAAUPUSUHAULDUOEAUHDKZVABLOZCLULDRAV
      BCGSBCIDTUBAUHEKZVCBLOZCLUOERAVDCHSBCIETUBUCUEZAUQUTBFVEUFUG $.
      $( [4-Feb-2008] $)
  $}

  $( The ordered pair ` << A , A >> ` in Kuratowski's representation.
     (Contributed by FL, 28-Dec-2011.) $)
  opid $p |- << A , A >> = { { A } } $=
    ( csn cpr cop dfsn2 eqcomi preq2i df-op 3eqtr4i ) ABZAACZCJJCAADJBKJJJKAEFG
    AAHJEI $.
    $( [28-Dec-2011] $)

  ${
    $d B x $.  $d ps x $.
    ralunsn.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Restricted quantification over the union of a set and a singleton, using
       implicit substitution.  (Contributed by Paul Chapman, 17-Nov-2012.) $)
    ralunsn $p |- ( B e. C -> ( A. x e. ( A u. { B } ) ph <->
                                ( A. x e. A ph /\ ps ) ) ) $=
      ( csn cun wral wa wcel ralunb wsbc ralsng sbcieg bitrd anbi2d syl5bb ) AC
      DEHZIJACDJZACTJZKEFLZUABKACDTMUCUBBUAUCUBACENBACEFOABCEFGPQRS $.
      $( [17-Nov-2012] $)
  $}

  ${
    $d A x $.  $d B x y $.  $d C x $.  $d ch x $.  $d ps y $.  $d th x $.
    2ralunsn.1 $e |- ( x = B -> ( ph <-> ch ) ) $.
    2ralunsn.2 $e |- ( y = B -> ( ph <-> ps ) ) $.
    2ralunsn.3 $e |- ( x = B -> ( ps <-> th ) ) $.
    $( Double restricted quantification over the union of a set and a
       singleton, using implicit substitution.  (Contributed by Paul Chapman,
       17-Nov-2012.) $)
    2ralunsn $p |- ( B e. C ->
                     ( A. x e. ( A u. { B } ) A. y e. ( A u. { B } ) ph <->
                       ( ( A. x e. A A. y e. A ph /\ A. x e. A ps ) /\
                         ( A. y e. A ch /\ th ) ) ) ) $=
      ( wcel csn cun wral wa ralunsn ralbidv cv wceq r19.26 anbi1i syl6bb bitrd
      anbi12d ) HIMZAFGHNOZPZEUHPAFGPZBQZEUHPZUJEGPBEGPQZCFGPZDQZQZUGUIUKEUHABF
      GHIKRSUGULUKEGPZUOQUPUKUOEGHIETHUAZUJUNBDURACFGJSLUFRUQUMUOUJBEGUBUCUDUE
      $.
      $( [17-Nov-2012] $)
  $}

  $( Expansion of an ordered pair when the first member is a proper class.  See
     also ~ opprc1b , ~ opprc2 , ~ opprc3 . $)
  opprc1 $p |- ( -. A e. _V -> << A , B >> = { (/) , { B } } ) $=
    ( cvv wcel wn cop csn cpr df-op wceq snprc preq1 sylbi prprc1 preq2d syl5eq
    c0 eqtrd ) ACDEZABFAGZABHZHZQBGZHZABISUBQUAHZUDSTQJUBUEJAKTQUALMSUAUCQABNOR
    P $.
    $( [10-Apr-2004] $)

  $( A property of an ordered pair of proper classes (due to our particular
     definition of ordered pair). $)
  opprc2 $p |- ( -. B e. _V -> << A , B >> = << A , A >> ) $=
    ( cvv wcel wn csn cpr cop prprc1 prcom dfsn2 3eqtr3g preq2d df-op 3eqtr4g )
    BCDEZAFZABGZGQAAGZGABHAAHPRSQPBAGQRSBAIBAJAKLMABNAANO $.
    $( [15-Nov-1994] $)

  ${
    $d x A $.  $d x B $.
    $( The power set of a singleton. $)
    pwsn $p |- ~P { A } = { (/) , { A } } $=
      ( vx cv csn wss cab c0 wceq wo cpw cpr sssn abbii df-pw dfpr2 3eqtr4i ) B
      CZADZEZBFQGHQRHIZBFRJGRKSTBQALMBRNBGROP $.
      $( [5-Jun-2006] $)

    $d x y $.  $d y A $.
    $( MAY BE REVISED - should we keep this? $)
    $( The power set of a singleton (direct proof). $)
    pwsnALT $p |- ~P { A } = { (/) , { A } } $=
      ( vx vy cv csn wss cab c0 wceq wo cpw cpr wn wa wcel wal dfss2 wex sylbi
      wi elsn imbi2i albii bitri neq0 exintr syl5bi df-clel exancom bitr2i syl6
      snssi anc2li eqss syl6ibr orrd 0ss sseq1 mpbiri eqimss impbii abbii df-pw
      jaoi dfpr2 3eqtr4i ) BDZAEZFZBGVGHIZVGVHIZJZBGVHKHVHLVIVLBVIVLVIVJVKVIVJM
      ZVIVHVGFZNVKVIVMVNVICDZVGOZVOAIZTZCPZVMVNTVIVPVOVHOZTZCPVSCVGVHQWAVRCVTVQ
      VPCAUAUBUCUDVSVMVPVQNCRZVNVMVPCRVSWBCVGUEVPVQCUFUGWBAVGOZVNWCVQVPNCRWBCAV
      GUHVQVPCUIUJAVGULSUKSUMVGVHUNUOUPVJVIVKVJVIHVHFVHUQVGHVHURUSVGVHUTVDVAVBB
      VHVCBHVHVEVF $.
      $( [8-Aug-2008] $) $( [5-Jun-2006] $)

    $( The power set of an unordered pair. $)
    pwpr $p |- ~P { A , B } = ( { (/) , { A } } u. { { B } , { A , B } } ) $=
      ( vx cpr cpw cv wss cab c0 csn cun wcel df-pw wceq elpr orbi12i elun sspr
      wo vex 3bitr4ri abbii abid2 3eqtri ) ABDZECFZUEGZCHUFIAJZDZBJZUEDZKZLZCHU
      LCUEMUGUMCUFUILZUFUKLZSUFINUFUHNSZUFUJNUFUENSZSUMUGUNUPUOUQUFIUHCTZOUFUJU
      EUROPUFUIUKQUFABRUAUBCULUCUD $.
      $( [1-May-2009] $)
  $}

  ${
    $d x y $.
    $( Compute the power set of the power set of the power set of the empty
       set.  (See also ~ pw0 and ~ pwpw0 .) $)
    pwpwpw0 $p |- ~P { (/) , { (/) } } =
                ( { (/) , { (/) } } u. { { { (/) } } , { (/) , { (/) } } } ) $=
      ( c0 csn pwpr ) AABC $.
      $( [29-Jul-2011] $) $( [2-May-2009] $)
  $}

  ${

    $( The power class of the universe is the universe.  Exercise 4.12(d) of
       [Mendelson] p. 235. $)
    pwv $p |- ~P _V = _V $=
      ( vx cvv cpw cv wcel wss ssv vex elpw mpbir 2th eqriv ) ABCZBADZMEZNBEONB
      FNGNBAHZIJPKL $.
      $( [14-Sep-2003] $)
  $}



$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                       The union of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class union symbol. $)
  $c U. $. $( Big cup $)

  $( Extend class notation to include the union of a class (read:  'union
     ` A ` ') $)
  cuni $a class U. A $.

  ${
    $d x y A $.
    $( Define the union of a class i.e. the collection of all members of the
       members of the class.  Definition 5.5 of [TakeutiZaring] p. 16. $)
    df-uni $a |- U. A = { x | E. y ( x e. y /\ y e. A ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class union. $)
    dfuni2 $p |- U. A = { x | E. y e. A x e. y } $=
      ( cuni cv wcel wa wex cab wrex df-uni exancom df-rex bitr4i abbii eqtri )
      CDAEBEZFZQCFZGBHZAIRBCJZAIABCKTUAATSRGBHUARSBLRBCMNOP $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x A y $.  $d x B y $.
    $( Membership in class union. $)
    eluni $p |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) $=
      ( vy cuni wcel cvv cv wa wex elex adantr exlimiv wceq eleq1 anbi1d exbidv
      df-uni elab2g pm5.21nii ) BCEZFBGFZBAHZFZUCCFZIZAJZBUAKUFUBAUDUBUEBUCKLMD
      HZUCFZUEIZAJUGDBUAGUHBNZUJUFAUKUIUDUEUHBUCOPQDACRST $.
      $( [22-May-1994] $)

    $( Membership in class union.  Restricted quantifier version. $)
    eluni2 $p |- ( A e. U. B <-> E. x e. B A e. x ) $=
      ( cv wcel wa wex cuni wrex exancom eluni df-rex 3bitr4i ) BADZEZNCEZFAGPO
      FAGBCHEOACIOPAJABCKOACLM $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in class union. $)
    elunii $p |- ( ( A e. B /\ B e. C ) -> A e. U. C ) $=
      ( vx wcel wa cv wex cuni eleq2 eleq1 anbi12d cla4egv anabsi7 eluni sylibr
      wceq ) ABEZBCEZFZADGZEZUACEZFZDHZACIERSUEUDTDBCUABQUBRUCSUABAJUABCKLMNDAC
      OP $.
      $( [24-Mar-1995] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    hbuni.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for union.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbuni $p |- ( y e. U. A -> A. x y e. U. A ) $=
      ( vz cv cuni wcel wa wex eluni ax-17 hblem hban hbex hbxfrbi ) BFZCGHQEFZ
      HZRCHZIZEJAEQCKUAAESTASALABECDMNOP $.
      $( [27-Aug-2011] $) $( [30-Dec-1996] $)
  $}

  ${
    $d y z A $.  $d x y z $.  $d y z ph $.
    hbunid.1 $e |- ( ph -> A. x ph ) $.
    hbunid.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbuni . $)
    hbunid $p |- ( ph -> ( y e. U. A -> A. x y e. U. A ) ) $=
      ( vz cv wcel wa wex wal cuni ax-17 a17d hblemd hband hbexd eluni albii
      3imtr4g ) ACHZGHZIZUCDIZJZGKZUGBLUBDMIZUHBLAUFBGAGNAUDUEBAUDBOABCGDEACNFP
      QRGUBDSZUHUGBUITUA $.
      $( [18-Feb-2013] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d V y z $.  $d x y z $.
    $( Distribute proper substitution through the union of a class. ~ csbunig
       is derived from the virtual deduction proof ~ csbunigVD .  (Contributed
       by Alan Sare, 10-Nov-2012. ) $)
    csbunig $p |- ( A e. V -> [_ A / x ]_ U. B = U. [_ A / x ]_ B ) $=
      ( vz vy wcel cuni csb wel cv wa wex cab wsbc df-uni csbeq2i csbabg sbcexg
      bitrd sbcang sbcg sbcel2g anbi12d exbidv abbidv 3eqtrd syl6eqr ) BDGZABCH
      ZIZEFJZFKZABCIZGZLZFMZENZUNHUIUKABULUMCGZLZFMZENZIVAABOZENURABUJVBDEFCPQV
      AAEBDRUIVCUQEUIVCUTABOZFMUQUTFABDSUIVDUPFUIVDULABOZUSABOZLUPULUSABDUAUIVE
      ULVFUOULABDUBABUMCDUCUDTUETUFUGEFUNPUH $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for class union.  Exercise 15 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    unieq $p |- ( A = B -> U. A = U. B ) $=
      ( vy vx wceq cv wcel wrex cab cuni rexeq abbidv dfuni2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
      $( [29-Jun-2011] $) $( [10-Aug-1993] $)
  $}

  ${
    unieqi.1 $e |- A = B $.
    $( Inference of equality of two class unions. $)
    unieqi $p |- U. A = U. B $=
      ( wceq cuni unieq ax-mp ) ABDAEBEDCABFG $.
      $( [30-Aug-1993] $)
  $}

  ${
    unieqd.1 $e |- ( ph -> A = B ) $.
    $( Deduction of equality of two class unions. $)
    unieqd $p |- ( ph -> U. A = U. B ) $=
      ( wceq cuni unieq syl ) ABCEBFCFEDBCGH $.
      $( [21-Apr-1995] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership in union of a class abstraction. $)
    eluniab $p |- ( A e. U. { x | ph } <-> E. x ( A e. x /\ ph ) ) $=
      ( vy cab cuni wcel cv wex eluni ax-17 hbab1 hban wceq eleq2 eleq1 anbi12d
      wa abid anbi2i syl6bb cbvex bitri ) CABEZFGCDHZGZUEUDGZRZDICBHZGZARZBIDCU
      DJUHUKDBUFUGBUFBKABDLMUKDKUEUINZUHUJUIUDGZRUKULUFUJUGUMUEUICOUEUIUDPQUMAU
      JABSTUAUBUC $.
      $( [11-Aug-1994] $)

    $( Membership in union of a class abstraction. $)
    elunirab $p |- ( A e. U. { x e. B | ph } <->
                   E. x e. B ( A e. x /\ ph ) ) $=
      ( cv wcel cab cuni wex crab wrex eluniab df-rab unieqi eleq2i df-rex an12
      wa exbii bitri 3bitr4i ) CBEZDFZARZBGZHZFCUBFZUDRZBIZCABDJZHZFUGARZBDKZUD
      BCLUKUFCUJUEABDMNOUMUCULRZBIUIULBDPUNUHBUCUGAQSTUA $.
      $( [4-Oct-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    unipr.1 $e |- A e. _V $.
    unipr.2 $e |- B e. _V $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16. $)
    unipr $p |- U. { A , B } = ( A u. B ) $=
      ( vx vy cv wcel wo cab cpr wa wex cun cuni wceq 19.43 bitri clel3 exancom
      vex elpr anbi2i andi exbii orbi12i 3bitr4ri abbii dfun df-uni 3eqtr4ri )
      EGZAHZULBHZIZEJULFGZHZUPABKZHZLZFMZEJABNUROUOVAEUQUPAPZLZUQUPBPZLZIZFMVCF
      MZVEFMZIVAUOVCVEFQUTVFFUTUQVBVDIZLVFUSVIUQUPABFUAUBUCUQVBVDUDRUEUMVGUNVHU
      MVBUQLFMVGFULACSVBUQFTRUNVDUQLFMVHFULBDSVDUQFTRUFUGUHEABUIEFURUJUK $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16. $)
    uniprg $p |- ( ( A e. V /\ B e. W ) -> U. { A , B } = ( A u. B ) ) $=
      ( vx vy cv cpr cuni cun wceq preq1 unieqd uneq1 eqeq12d preq2 uneq2 unipr
      vex vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAAKZUDUGUEU
      HULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBESFSRT $.
      $( [25-Aug-2006] $)
  $}

  ${
    unisn.1 $e |- A e. _V $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine]
       p. 53. $)
    unisn $p |- U. { A } = A $=
      ( csn cuni cpr cun dfsn2 unieqi unipr unidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine]
       p. 53. $)
    unisng $p |- ( A e. V -> U. { A } = A ) $=
      ( vx cv csn cuni wceq sneq unieqd id eqeq12d vex unisn vtoclg ) CDZEZFZOG
      AEZFZAGCABOAGZQSOATPROAHITJKOCLMN $.
      $( [13-Aug-2002] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbeqel.1 $e |- A e. _V $.
    hbeqel.2 $e |- ( y = A -> A. x y = A ) $.
    $( If ` x ` is effectively bound in ` y = A ` , then it is effectively
       bound in ` y e. A ` .  This is the other direction of ~ hbeleq , showing
       the two conditions are equivalent when ` A ` is a set. $)
    hbeqel $p |- ( y e. A -> A. x y e. A ) $=
      ( csn cuni unisn eqcomi cv wcel wceq elsn hbxfrbi hbuni hbxfreq ) ABCCFZG
      ZRCCDHIABQBJZQKSCLABCMENOP $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The class union of the union of two classes.  Theorem 8.3 of [Quine]
       p. 53. $)
    uniun $p |- U. ( A u. B ) = ( U. A u. U. B ) $=
      ( vx vy cun cuni cv wcel wa wo 19.43 elun anbi2i andi bitri exbii orbi12i
      wex eluni 3bitr4i eqriv ) CABEZFZAFZBFZEZCGZDGZHZUHUBHZIZDRZUGUDHZUGUEHZJ
      ZUGUCHUGUFHUIUHAHZIZUIUHBHZIZJZDRUQDRZUSDRZJULUOUQUSDKUKUTDUKUIUPURJZIUTU
      JVCUIUHABLMUIUPURNOPUMVAUNVBDUGASDUGBSQTDUGUBSUGUDUELTUA $.
      $( [20-Aug-1993] $)

    $( The class union of the intersection of two classes.  Exercise 4.12(n) of
       [Mendelson] p. 235.  See ~ uninqs for a condition where equality holds.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    uniin $p |- U. ( A i^i B ) C_ ( U. A i^i U. B ) $=
      ( vx vy cin cuni cv wcel wex 19.40 elin anbi2i anandi bitri exbii anbi12i
      wa eluni 3imtr4i ssriv ) CABEZFZAFZBFZEZCGZDGZHZUGUAHZQZDIZUFUCHZUFUDHZQZ
      UFUBHUFUEHUHUGAHZQZUHUGBHZQZQZDIUPDIZURDIZQUKUNUPURDJUJUSDUJUHUOUQQZQUSUI
      VBUHUGABKLUHUOUQMNOULUTUMVADUFARDUFBRPSDUFUARUFUCUDKST $.
      $( [29-Jun-2011] $) $( [4-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subclass relationship for class union.  Theorem 61 of [Suppes] p. 39.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    uniss $p |- ( A C_ B -> U. A C_ U. B ) $=
      ( vx vy wss cuni cv wcel wa wex ssel anim2d eximdv eluni 3imtr4g ssrdv )
      ABEZCAFZBFZQCGZDGZHZUAAHZIZDJUBUABHZIZDJTRHTSHQUDUFDQUCUEUBABUAKLMDTANDTB
      NOP $.
      $( [29-Jun-2011] $) $( [22-Mar-1998] $)

    $( Subclass relationship for class union.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    ssuni $p |- ( ( A C_ B /\ B e. C ) -> A C_ U. C ) $=
      ( vy vx wcel wss cuni cv wi wal eleq2 imbi1d elunii expcom vtoclga imim2d
      wceq alimdv dfss2 3imtr4g impcom ) BCFZABGZACHZGZUCDIZAFZUGBFZJZDKUHUGUEF
      ZJZDKUDUFUCUJULDUCUIUKUHUGEIZFZUKJUIUKJEBCUMBRUNUIUKUMBUGLMUNUMCFUKUGUMCN
      OPQSDABTDAUETUAUB $.
      $( [29-Jun-2011] $) $( [24-May-1994] $)
  $}

  ${
    $d x y A $.
    $( The union of a set is empty iff the set is included in the singleton of
       the empty set. $)
    uni0b $p |- ( U. A = (/) <-> A C_ { (/) } ) $=
      ( vx vy cv c0 csn wcel wral wceq wss cuni elsn ralbii dfss3 wex wrex neq0
      wn rexcom4 3bitr4ri rexbii eluni2 exbii rexnal 3bitri con4bii ) BDZEFZGZB
      AHUGEIZBAHZAUHJAKZEIZUIUJBABELMBAUHNUMUKUMRCDZULGZCOZUJRZBAPZUKRCULQUNUGG
      ZCOZBAPUSBAPZCOURUPUSBCASUQUTBACUGQUAUOVACBUNAUBUCTUJBAUDUEUFT $.
      $( [12-Sep-2004] $)

    $( The union of a set is empty iff all of its members are empty. $)
    uni0c $p |- ( U. A = (/) <-> A. x e. A x = (/) ) $=
      ( cuni c0 wceq csn wss cv wcel wral uni0b dfss3 elsn ralbii 3bitri ) BCDE
      BDFZGAHZPIZABJQDEZABJBKABPLRSABADMNO $.
      $( [16-Aug-2006] $)
  $}

  $( The union of the empty set is the empty set.  Theorem 8.7 of [Quine]
     p. 54.  (Reproved without relying on ~ ax-nul by Eric Schmidt,
     4-Apr-2007.) $)
  uni0 $p |- U. (/) = (/) $=
    ( c0 cuni wceq csn wss 0ss uni0b mpbir ) ABACAADZEIFAGH $.
    $( [4-Apr-2007] $) $( [16-Sep-1993] $)

  $( An element of a class is a subclass of its union.  Theorem 8.6 of [Quine]
     p. 54.  Also the basis for Proposition 7.20 of [TakeutiZaring] p. 40. $)
  elssuni $p |- ( A e. B -> A C_ U. B ) $=
    ( wss wcel cuni ssid ssuni mpan ) AACABDABECAFAABGH $.
    $( [6-Jun-1994] $)

  $( Condition turning a subclass relationship for union into an equality. $)
  unissel $p |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) $=
    ( cuni wss wcel wa simpl elssuni adantl eqssd ) ACZBDZBAEZFKBLMGMBKDLBAHIJ
    $.
    $( [18-Jul-2006] $)

  ${
    $d x y A $.  $d x y B $.
    $( Relationship involving membership, subset, and union.  Exercise 5 of
       [Enderton] p. 26 and its converse. $)
    unissb $p |- ( U. A C_ B <-> A. x e. A x C_ B ) $=
      ( vy cuni wss cv wcel wi wal wral wa dfss2 wex eluni imbi1i 19.23v bitr4i
      albii bitri alcom 19.21v impexp bi2.04 imbi2i 3bitr4i 3bitri df-ral ) BEZ
      CFZAGZBHZUKCFZIZAJZUMABKUJDGZUIHZUPCHZIZDJUPUKHZULLZURIZAJZDJZUODUICMUSVC
      DUSVAANZURIVCUQVEURAUPBOPVAURAQRSVDVBDJZAJUOVBDAUAVFUNAULUTURIZIZDJULVGDJ
      ZIVFUNULVGDUBVBVHDVBUTULURIIVHUTULURUCUTULURUDTSUMVIULDUKCMUEUFSTUGUMABUH
      R $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x y B $.
    $( A subclass condition on the members of two classes that implies a
       subclass relation on their unions.  Proposition 8.6 of [TakeutiZaring]
       p. 59.  See ~ iunss2 for a generalization to indexed unions. $)
    uniss2 $p |- ( A. x e. A E. y e. B x C_ y -> U. A C_ U. B ) $=
      ( cv wss wrex wral cuni wcel ssuni expcom rexlimiv ralimi unissb sylibr )
      AEZBEZFZBDGZACHQDIZFZACHCIUAFTUBACSUBBDSRDJUBQRDKLMNACUAOP $.
      $( [22-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( If the difference ` A \ B ` contains the largest members of ` A ` , then
       the union of the difference is the union of ` A ` . $)
    unidif $p |- ( A. x e. A E. y e. ( A \ B ) x C_ y ->
               U. ( A \ B ) = U. A ) $=
      ( cv wss cdif wrex wral cuni wa wceq uniss2 difss uniss ax-mp eqss sylibr
      jctil ) AEBEFBCDGZHACIZTJZCJZFZUCUBFZKUBUCLUAUEUDABCTMTCFUDCDNTCOPSUBUCQR
      $.
      $( [22-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Relationship implying union. $)
    ssunieq $p |- ( ( A e. B /\ A. x e. B x C_ A ) -> A = U. B ) $=
      ( wcel cv wss wral cuni wceq elssuni unissb biimpri anim12i eqss sylibr
      wa ) BCDZAEBFACGZPBCHZFZSBFZPBSIQTRUABCJUARACBKLMBSNO $.
      $( [10-Nov-1999] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Any member of a class is the largest of those members that it
       includes. $)
    unimax $p |- ( A e. B -> U. { x e. B | x C_ A } = A ) $=
      ( vy wcel cv wss crab wral cuni wceq ssid sseq1 elrab3 elrab simprbi rgen
      mpbiri wa ssunieq eqcomd sylancl ) BCEZBAFZBGZACHZEZDFZBGZDUFIZUFJZBKUCUG
      BBGZBLUEULABCUDBBMNRUIDUFUHUFEUHCEUIUEUIAUHCUDUHBMOPQUGUJSBUKDBUFTUAUB $.
      $( [9-Oct-2006] $) $( [13-Aug-2002] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Closure law for "the unique element in ` A ` such that ` ph ` ." $)
    reucl $p |- ( E! x e. A ph -> U. { x e. A | ph } e. A ) $=
      ( vy cv wcel weu cab cuni wreu crab csn wceq wex euabsn hbab1 hbuni ax-17
      wa hbel unieq unisn syl6req snid eleq2 mpbiri abid simpld eqeltrrd exlimi
      vex sylib sylbi df-reu df-rab unieqi eleq1i 3imtr4i ) BEZCFZASZBGZVABHZIZ
      CFZABCJABCKZIZCFVBVCUSLZMZBNVEVABOVIVEBBDDVDCBDVCVABDPQDECFBRTVIUSVDCVIVD
      VHIUSVCVHUAUSBUKZUBUCVIUTAVIUSVCFZVAVIVKUSVHFUSVJUDVCVHUSUEUFVABUGULUHUIU
      JUMABCUNVGVDCVFVCABCUOUPUQUR $.
      $( [22-Nov-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The intersection of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class intersection symbol. $)
  $c |^| $. $( Big cap $)

  $( Extend class notation to include the intersection of a class (read:
     'intersect ` A ` '). $)
  cint $a class |^| A $.

  ${
    $d x y A $.
    $( Define the intersection of a class.  Definition 7.35 of [TakeutiZaring]
       p. 44. $)
    df-int $a |- |^| A = { x | A. y ( y e. A -> x e. y ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class intersection. $)
    dfint2 $p |- |^| A = { x | A. y e. A x e. y } $=
      ( cint cv wcel wi wal cab wral df-int df-ral abbii eqtr4i ) CDBEZCFAEOFZG
      BHZAIPBCJZAIABCKRQAPBCLMN $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality law for intersection. $)
    inteq $p |- ( A = B -> |^| A = |^| B ) $=
      ( vx vy wceq cv wcel wral cab cint raleq abbidv dfint2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
      $( [13-Sep-1999] $)
  $}

  ${
    inteqi.1 $e |- A = B $.
    $( Equality inference for class intersection. $)
    inteqi $p |- |^| A = |^| B $=
      ( wceq cint inteq ax-mp ) ABDAEBEDCABFG $.
      $( [2-Sep-2003] $)
  $}

  ${
    inteqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for class intersection. $)
    inteqd $p |- ( ph -> |^| A = |^| B ) $=
      ( wceq cint inteq syl ) ABCEBFCFEDBCGH $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x A y $.  $d x B y $.
    elint.1 $e |- A e. _V $.
    $( Membership in class intersection. $)
    elint $p |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) $=
      ( vy cv wcel wi wal cint wceq eleq1 imbi2d albidv df-int elab2 ) AFZCGZEF
      ZQGZHZAIRBQGZHZAIEBCJDSBKZUAUCAUDTUBRSBQLMNEACOP $.
      $( [21-May-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    elint2.1 $e |- A e. _V $.
    $( Membership in class intersection. $)
    elint2 $p |- ( A e. |^| B <-> A. x e. B A e. x ) $=
      ( cint wcel cv wi wal wral elint df-ral bitr4i ) BCEFAGZCFBNFZHAIOACJABCD
      KOACLM $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Membership in class intersection, with the sethood requirement expressed
       as an antecedent. $)
    elintg $p |- ( A e. V -> ( A e. |^| B <-> A. x e. B A e. x ) ) $=
      ( vy cv cint wcel wral eleq1 wceq ralbidv vex elint2 vtoclbg ) EFZCGZHPAF
      ZHZACIBQHBRHZACIEBDPBQJPBKSTACPBRJLAPCEMNO $.
      $( [20-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in class intersection.  (The proof was shortened by Andrew
       Salmon, 9-Jul-2011.) $)
    elinti $p |- ( A e. |^| B -> ( C e. B -> A e. C ) ) $=
      ( vx cint wcel wi cv wral elintg eleq2 rcla4cv syl6bi pm2.43i ) ABEZFZCBF
      ACFZGZPPADHZFZDBIRDABOJTQDCBSCAKLMN $.
      $( [9-Jul-2011] $) $( [14-Oct-1999] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    hbint.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for intersection.  (The proof was
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    hbint $p |- ( y e. |^| A -> A. x y e. |^| A ) $=
      ( vz cv cint wcel wral vex elint2 hblem ax-17 hbral hbxfrbi ) BFZCGHPEFHZ
      ECIAEPCBJKQAECABECDLQAMNO $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)
  $}

  ${
    $d A x y $.  $d ph y $.
    inteqab.1 $e |- A e. _V $.
    $( Membership in the intersection of a class abstraction. $)
    elintab $p |- ( A e. |^| { x | ph } <-> A. x ( ph -> A e. x ) ) $=
      ( vy cab cint wcel cv wi wal elint hbab1 ax-17 hbim wceq eleq1 abid eleq2
      syl6bb imbi12d cbval bitri ) CABFZGHEIZUDHZCUEHZJZEKACBIZHZJZBKECUDDLUHUK
      EBUFUGBABEMUGBNOUKENUEUIPZUFAUGUJULUFUIUDHAUEUIUDQABRTUEUICSUAUBUC $.
      $( [30-Aug-1993] $)

    $( Membership in the intersection of a class abstraction. $)
    elintrab $p |- ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) $=
      ( cv wcel wa cab cint wi wal crab wral elintab impexp albii df-rab inteqi
      bitri eleq2i df-ral 3bitr4i ) CBFZDGZAHZBIZJZGZUEACUDGZKZKZBLZCABDMZJZGUK
      BDNUIUFUJKZBLUMUFBCEOUPULBUEAUJPQTUOUHCUNUGABDRSUAUKBDUBUC $.
      $( [17-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d y ph $.
    $( Membership in the intersection of a class abstraction. $)
    elintrabg $p |- ( A e. V -> ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) ) $=
      ( vy cv crab cint wcel wi wral eleq1 wceq imbi2d ralbidv elintrab vtoclbg
      vex ) FGZABDHIZJATBGZJZKZBDLCUAJACUBJZKZBDLFCETCUAMTCNZUDUFBDUGUCUEATCUBM
      OPABTDFSQR $.
      $( [17-Feb-2007] $)

    $( The intersection of the empty set is the universal class.  Exercise 2 of
       [TakeutiZaring] p. 44. $)
    int0 $p |- |^| (/) = _V $=
      ( vy vx cv c0 wcel wi wal cab wceq cint cvv noel pm2.21i ax-gen 2th abbii
      eqid df-int df-v 3eqtr4i ) ACZDEZBCZUAEZFZAGZBHUCUCIZBHDJKUFUGBUFUGUEAUBU
      DUALMNUCQOPBADRBST $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.
    $( An element of a class includes the intersection of the class.  Exercise
       4 of [TakeutiZaring] p. 44 (with correction), generalized to classes. $)
    intss1 $p |- ( A e. B -> |^| B C_ A ) $=
      ( vx vy wcel cint cv wi wal elint wceq eleq1 eleq2 imbi12d cla4gv pm2.43a
      vex syl5bi ssrdv ) ABEZCBFZACGZUAEDGZBEZUBUCEZHZDIZTUBAEZDUBBCQJUGTUHUFTU
      HHDABUCAKUDTUEUHUCABLUCAUBMNOPRS $.
      $( [18-Nov-1995] $)

    $( Subclass of a class intersection.  Theorem 5.11(viii) of [Monk1] p. 52
       and its converse. $)
    ssint $p |- ( A C_ |^| B <-> A. x e. B A C_ x ) $=
      ( vy cint wss cv wcel wral dfss3 vex elint2 ralbii ralcom bitr4i 3bitri )
      BCEZFDGZQHZDBIRAGZHZACIZDBIZBTFZACIZDBQJSUBDBARCDKLMUCUADBIZACIUEUADABCNU
      DUFACDBTJMOP $.
      $( [14-Oct-1999] $)

    $( Subclass of the intersection of a class abstraction.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    ssintab $p |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) $=
      ( vy cab cint wss cv wral wcel wi wal ssint df-ral hbab1 ax-17 hbim eleq1
      wceq abid syl6bb sseq2 imbi12d cbval 3bitri ) CABEZFGCDHZGZDUFIUGUFJZUHKZ
      DLACBHZGZKZBLDCUFMUHDUFNUJUMDBUIUHBABDOUHBPQUMDPUGUKSZUIAUHULUNUIUKUFJAUG
      UKUFRABTUAUGUKCUBUCUDUE $.
      $( [9-Jul-2011] $) $( [31-Jul-2006] $)

    $( Subclass of a least upper bound. $)
    ssintub $p |- A C_ |^| { x e. B | A C_ x } $=
      ( vy cv wss crab cint ssint wcel sseq2 elrab simprbi mprgbir ) BBAEZFZACG
      ZHFBDEZFZDQDBQIRQJRCJSPSARCORBKLMN $.
      $( [8-Aug-2000] $)

    $( Subclass of the minimum value of class of supersets. $)
    ssmin $p |- A C_ |^| { x | ( A C_ x /\ ph ) } $=
      ( cv wss wa cab cint wi ssintab simpl mpgbir ) CCBDEZAFZBGHENMIBNBCJMAKL
      $.
      $( [10-Aug-2006] $)

    $( Any member of a class is the smallest of those members that include it.
       (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    intmin $p |- ( A e. B -> |^| { x e. B | A C_ x } = A ) $=
      ( vy wcel cv wss crab cint wi wral elintrab ssid wceq sseq2 eleq2 imbi12d
      vex rcla4v mpii syl5bi ssrdv ssintub a1i eqssd ) BCEZBAFZGZACHIZBUFDUIBDF
      ZUIEUHUJUGEZJZACKZUFUJBEZUHAUJCDRLUFUMBBGZUNBMULUOUNJABCUGBNUHUOUKUNUGBBO
      UGBUJPQSTUAUBBUIGUFABCUCUDUE $.
      $( [9-Jul-2011] $) $( [13-Aug-2002] $)

    $( Intersection of subclasses. $)
    intss $p |- ( A C_ B -> |^| B C_ |^| A ) $=
      ( vy vx cv wcel wal cint wss imim1 al2imi vex elint 3imtr4g alrimiv dfss2
      wi 3imtr4i ) CEZAFZSBFZQZCGZDEZBHZFZUDAHZFZQZDGABIUEUGIUCUIDUCUAUDSFZQZCG
      TUJQZCGUFUHUBUKULCTUAUJJKCUDBDLZMCUDAUMMNOCABPDUEUGPR $.
      $( [14-Oct-1999] $)

    $( The intersection of a nonempty set is a subclass of its union. $)
    intssuni $p |- ( A =/= (/) -> |^| A C_ U. A ) $=
      ( vx vy c0 wne cint cuni cv wcel wral r19.2z ex vex elint2 eluni2 3imtr4g
      wrex ssrdv ) ADEZBAFZAGZSBHZCHIZCAJZUCCAQZUBTIUBUAISUDUEUCCAKLCUBABMNCUBA
      OPR $.
      $( [29-Jul-2006] $)
  $}

  $( If the union of a class is included in its intersection, the class is
     either the empty set or a singleton ( ~ uniintsn ).  (The proof was
     shortened by Andrew Salmon, 25-Jul-2011.) $)
  unissint $p |- ( U. A C_ |^| A <-> ( A = (/) \/ U. A = |^| A ) ) $=
    ( cuni cint wss c0 wo wn wa simpl wne df-ne intssuni sylbir adantl eqssd ex
    wceq orrd cvv ssv int0 sseqtr4i inteq syl5sseqr eqimss jaoi impbii ) ABZACZ
    DZAEQZUHUIQZFUJUKULUJUKGZULUJUMHUHUIUJUMIUMUIUHDZUJUMAEJUNAEKALMNOPRUKUJULU
    KECZUHUIUHSUOUHTUAUBAEUCUDUHUIUEUFUG $.
    $( [25-Jul-2011] $) $( [30-Oct-2010] $)

  $( Subclass relationship for intersection and union. $)
  intssuni2 $p |- ( ( A C_ B /\ A =/= (/) ) -> |^| A C_ U. B ) $=
    ( c0 wne wss cint cuni intssuni uniss sylan9ssr ) ACDABEAFAGBGAHABIJ $.
    $( [29-Jul-2006] $)

  ${
    $d x A $.  $d x B $.  $d x ps $.
    intminss.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Under subset ordering, the intersection of a restricted class
       abstraction is less than or equal to any of its members. $)
    intminss $p |- ( ( A e. B /\ ps ) -> |^| { x e. B | ph } C_ A ) $=
      ( wcel wa crab cint wss elrab intss1 sylbir ) DEGBHDACEIZGOJDKABCDEFLDOMN
      $.
      $( [7-Sep-2013] $)
  $}

  ${
    $d x A $.
    intmin2.1 $e |- A e. _V $.
    $( Any set is the smallest of all sets that include it. $)
    intmin2 $p |- |^| { x | A C_ x } = A $=
      ( cv wss cvv crab cint cab rabab inteqi wcel wceq intmin ax-mp eqtr3i ) B
      ADEZAFGZHZQAIZHBRTQAJKBFLSBMCABFNOP $.
      $( [30-Nov-2006] $) $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x ps $.
    intmin3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    intmin3.3 $e |- ps $.
    $( Under subset ordering, the intersection of a class abstraction is less
       than or equal to any of its members. $)
    intmin3 $p |- ( A e. V -> |^| { x | ph } C_ A ) $=
      ( wcel cab cint wss elabg mpbiri intss1 syl ) DEHZDACIZHZQJDKPRBGABCDEFLM
      DQNO $.
      $( [3-Jul-2005] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Elimination of a conjunct in a class intersection. $)
    intmin4 $p |- ( A C_ |^| { x | ph } ->
                  |^| { x | ( A C_ x /\ ph ) } = |^| { x | ph } ) $=
      ( vy cab cint wss cv wa wcel wi wal wb ssintab simpr impbid2 imbi1d alimi
      ancr elintab albi syl sylbi vex 3bitr4g eqrdv ) CABEFZGZDCBHZGZAIZBEFZUGU
      HUKDHZUIJZKZBLZAUNKZBLZUMULJUMUGJUHAUJKZBLZUPURMZABCNUTUOUQMZBLVAUSVBBUSU
      KAUNUSUKAUJAOAUJSPQRUOUQBUAUBUCUKBUMDUDZTABUMVCTUEUF $.
      $( [31-Jul-2006] $)
  $}

  ${
    $d x z A $.  $d x z ph $.  $d x y z $.
    intab.1 $e |- A e. _V $.
    intab.2 $e |- { x | E. y ( ph /\ x = A ) } e. _V $.
    $( The intersection of a special case of a class abstraction. ` y ` may be
       free in ` ph ` and ` A ` , which can be thought of a ` ph ( y ) ` and
       ` A ( y ) ` .  Typically, ~ abrexex2 or ~ abexssex can be used to
       satisfy the second hypothesis. $)
    intab $p |- |^| { x | A. y ( ph -> A e. x ) } =
                { x | E. y ( ph /\ x = A ) } $=
      ( vz cv wcel wi wal cab wceq wa wex wsbc cvv wb ax-mp sylibr eqeq1 anbi2d
      cint exbidv cbvabv eqeltri hbe1 hbab hbeleq eleq2 imbi2d albid sbcie sbcg
      wss biimpri csb csbvarg sbceq1g mpbir jctir sbcang 19.8a ax-gen a4sbc mp2
      sbcimg mpbi syl elabsbc mpgbir intss1 hba1 hbint ax-4 com12 adantr adantl
      eleq1 sylibrd alrimiv vex elintab exlimi abssi eqssi eqtri ) ADBHZIZJZCKZ
      BLZUCZAGHZDMZNZCOZGLZAWHDMZNZCOZBLZWMWRWRWLIZWMWRUOXCWKBWRPZXDADWRIZJZCWK
      XFCKBWRWRXBQWQXAGBWNWHMZWPWTCXGWOWSAWNWHDUAUBUDUEZFUFZWHWRMZWJXFCCBWRWQCG
      BWPCUGUHUIXJWIXEAWHWRDUJUKULUMAWQGDPZXEAWPGDPZXKAAGDPZWOGDPZNZXLAXMXNXMAD
      QIZXMAREAGDQUNSUPXNGDWNUQDMZXPXQEGDQURSXPXNXQREGDWNDQUSSUTVAXPXLXOREAWOGD
      QVBSTWPWQJZGDPZXLXKJZXPXRGKXSEXRGWPCVCVDXRGDQVEVFXPXSXTREWPWQGDQVGSVHVIWQ
      GDEVJTVKWKBWRXIVJUTWRWLVLSWQGWMWPWNWMIZCCGWLWKCBGWJCVMUHVNWPWKWNWHIZJZBKY
      AWPYCBWPWKWIYBAWKWIJWOWKAWIWJCVOVPVQWOYBWIRAWNDWHVSVRVTWAWKBWNGWBWCTWDWEW
      FXHWG $.
      $( [28-Jul-2006] $)
  $}

  $( The intersection of a class containing the empty set is empty. $)
  int0el $p |- ( (/) e. A -> |^| A = (/) ) $=
    ( c0 wcel cint intss1 wss 0ss a1i eqssd ) BACZADZBBAEBKFJKGHI $.
    $( [24-Apr-2004] $)

  ${
    $d x y A $.  $d x y B $.
    $( The class intersection of the union of two classes.  Theorem 78 of
       [Suppes] p. 42. $)
    intun $p |- |^| ( A u. B ) = ( |^| A i^i |^| B ) $=
      ( vx vy cun cint cin cv wcel wi wal wa 19.26 elun imbi1i jaob bitri elint
      wo 3bitr4i albii vex anbi12i elin eqriv ) CABEZFZAFZBFZGZDHZUFIZCHZUKIZJZ
      DKZUMUHIZUMUIIZLZUMUGIUMUJIUKAIZUNJZUKBIZUNJZLZDKVADKZVCDKZLUPUSVAVCDMUOV
      DDUOUTVBSZUNJVDULVGUNUKABNOUTUNVBPQUAUQVEURVFDUMACUBZRDUMBVHRUCTDUMUFVHRU
      MUHUIUDTUE $.
      $( [22-Sep-2002] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    intpr.1 $e |- A e. _V $.
    intpr.2 $e |- B e. _V $.
    $( The intersection of a pair is the intersection of its members.  Theorem
       71 of [Suppes] p. 42. $)
    intpr $p |- |^| { A , B } = ( A i^i B ) $=
      ( vx vy cpr cint cin cv wcel wi wal wa wceq 19.26 wo vex clel4 3bitr4i
      elpr imbi1i jaob bitri albii anbi12i elint elin eqriv ) EABGZHZABIZFJZUJK
      ZEJZUMKZLZFMZUOAKZUOBKZNZUOUKKUOULKUMAOZUPLZUMBOZUPLZNZFMVCFMZVEFMZNURVAV
      CVEFPUQVFFUQVBVDQZUPLVFUNVIUPUMABFRUAUBVBUPVDUCUDUEUSVGUTVHFUOACSFUOBDSUF
      TFUOUJERUGUOABUHTUI $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The intersection of a pair is the intersection of its members.  Closed
       form of ~ intpr .  Theorem 71 of [Suppes] p. 42.  (Contributed by FL,
       27-Apr-2008.) $)
    intprg $p |- ( ( A e. V /\ B e. W ) -> |^| { A , B } = ( A i^i B ) ) $=
      ( vx vy cv cpr cint cin wceq preq1 inteqd ineq1 eqeq12d preq2 ineq2 intpr
      vex vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAAKZUDUGUEU
      HULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBESFSRT $.
      $( [6-Mar-2011] $) $( [27-Apr-2008] $)
  $}

  ${
    intsn.1 $e |- A e. _V $.
    $( The intersection of a singleton is its member.  Theorem 70 of [Suppes]
       p. 41. $)
    intsn $p |- |^| { A } = A $=
      ( csn cint cpr cin dfsn2 inteqi intpr inidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
      $( [29-Sep-2002] $)
  $}

  ${
    $d x y A $.
    $( Two ways to express " ` A ` is a singleton."  See also ~ en1 , ~ card1 ,
       and ~ eusn . $)
    uniintsn $p |- ( U. A = |^| A <-> E. x A = { x } ) $=
      ( vy cuni cint wceq cv wex wcel wa wal c0 inteq syl6eq adantl unieq sylib
      wne cvv wss csn wi vn0 int0 eqeq1 syl5ib imp eqtr3d ex necon3d mpi n0 cpr
      uni0 vex prss cun cin uniss simpl sseqtrd intss sstrd unipr intpr 3sstr3g
      inss1 ssun1 sstri jctir eqss uneqin bitr3i syl5bi alrimivv jca weu euabsn
      cab eleq1 abid2 eqeq1i exbii 3bitr3i unisn intsn 3eqtr4a exlimiv impbii
      eu4 ) BDZBEZFZBAGZUAZFZAHZWMWNBIZAHZWRCGZBIZJZWNWTFZUBZCKAKZJZWQWMWSXEWMB
      LRZWSWMSLRXGUCWMBLSLWMBLFZSLFWMXHJWLSLXHWLSFWMXHWLLESBLMUDNOWMXHWLLFZXHWK
      LFWMXIXHWKLDLBLPUNNWKWLLUEUFUGUHUIUJUKABULQWMXDACXBWNWTUMZBTZWMXCWNWTBAUO
      ZCUOZUPWMXKXCWMXKJZWNWTUQZWNWTURZTZXPXOTZJZXCXNXQXRXNXJDZXJEZXOXPXNXTWLYA
      XNXTWKWLXKXTWKTWMXJBUSOWMXKUTVAXKWLYATWMXJBVBOVCWNWTXLXMVDWNWTXLXMVEVFXPW
      NXOWNWTVGWNWTVHVIVJXSXOXPFXCXOXPVKWNWTVLVMQUIVNVOVPWRAVQWRAVSZWOFZAHXFWQW
      RAVRWRXAACWNWTBVTWJYCWPAYBBWOABWAWBWCWDQWPWMAWPWODWNWKWLWNXLWEBWOPWPWLWOE
      WNBWOMWNXLWFNWGWHWI $.
      $( [2-Aug-2010] $)
  $}

  ${
    intunsn.1 $e |- B e. _V $.
    $( Theorem joining a singleton to an intersection. $)
    intunsn $p |- |^| ( A u. { B } ) = ( |^| A i^i B ) $=
      ( csn cun cint cin intun intsn ineq2i eqtri ) ABDZEFAFZLFZGMBGALHNBMBCIJK
      $.
      $( [29-Sep-2002] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Indexed union and intersection
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c U_ $. $( Underlined big cup. $)
  $c |^|_ $. $( Underlined big cap. $)

  $( Extend class notation to include indexed union.  Note:  Historically
     (prior to 21-Oct-2005), set.mm used the notation ` U. x e. A B ` , with
     the same union symbol as ~ cuni .  While that syntax was unambiguous, it
     did not allow for LALR parsing of the syntax constructions in set.mm.  The
     new syntax uses as distinguished symbol ` U_ ` instead of ` U. ` and does
     allow LALR parsing.  Thanks to Peter Backes for suggesting this change. $)
  ciun $a class U_ x e. A B $.

  $( Extend class notation to include indexed intersection.  Note:
     Historically (prior to 21-Oct-2005), set.mm used the notation
     ` |^| x e. A B ` , with the same intersection symbol as ~ cint .  Although
     that syntax was unambiguous, it did not allow for LALR parsing of the
     syntax constructions in set.mm.  The new syntax uses a distinguished
     symbol ` |^|_ ` instead of ` |^| ` and does allow LALR parsing.  Thanks to
     Peter Backes for suggesting this change. $)
  ciin $a class |^|_ x e. A B $.

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Define indexed union.  Definition indexed union in [Stoll] p. 45.  In
       most applications, ` A ` is independent of ` x ` (although this is not
       required by the definition), and ` B ` depends on ` x ` i.e. can be read
       informally as ` B ( x ) ` .  We call ` x ` the index, ` A ` the index
       set, and ` B ` the indexed set.  In most books, ` x e. A ` is written as
       a subscript or underneath a union symbol ` U. ` .  We use a special
       union symbol ` U_ ` to make it easier to distinguish from plain class
       union.  In many theorems, you will see that ` x ` and ` A ` are in the
       same distinct variable group (meaning ` A ` cannot depend on ` x ` ) and
       that ` B ` and ` x ` do not share a distinct variable group (meaning
       that can be thought of as ` B ( x ) ` i.e. can be substituted with a
       class expression containing ` x ` ).  An alternate definition tying
       indexed union to ordinary union is ~ dfiun2 .  Theorem ~ uniiun provides
       a definition of ordinary union in terms of indexed union.  Theorems
       ~ fniunfv and ~ funiunfv are useful when ` B ` is a function. $)
    df-iun $a |- U_ x e. A B = { y | E. x e. A y e. B } $.

    $( Define indexed intersection.  Definition of [Stoll] p. 45.  See the
       remarks for its sibling operation of indexed union ~ df-iun .  An
       alternate definition tying indexed intersection to ordinary intersection
       is ~ dfiin2 .  Theorem ~ intiin provides a definition of ordinary
       intersection in terms of indexed intersection. $)
    df-iin $a |- |^|_ x e. A B = { y | A. x e. A y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.
    $( Membership in indexed union. $)
    eliun $p |- ( A e. U_ x e. B C <-> E. x e. B A e. C ) $=
      ( vy ciun wcel wrex elex rexlimivw cv wceq eleq1 rexbidv df-iun pm5.21nii
      cvv elab2g ) BACDFZGBQGZBDGZACHZBSIUATACBDIJEKZDGZACHUBEBSQUCBLUDUAACUCBD
      MNAECDORP $.
      $( [3-Sep-2003] $)

    $( Membership in indexed intersection. $)
    eliin $p |- ( A e. V -> ( A e. |^|_ x e. B C <-> A. x e. B A e. C ) ) $=
      ( vy cv wcel wral ciin wceq eleq1 ralbidv df-iin elab2g ) FGZDHZACIBDHZAC
      IFBACDJEPBKQRACPBDLMAFCDNO $.
      $( [3-Sep-2003] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutation of indexed unions. $)
    iuncom $p |- U_ x e. A U_ y e. B C = U_ y e. B U_ x e. A C $=
      ( vz ciun cv wcel wrex rexcom eliun rexbii 3bitr4i eqriv ) FACBDEGZGZBDAC
      EGZGZFHZPIZACJZTRIZBDJZTQITSITEIZBDJZACJUEACJZBDJUBUDUEABCDKUAUFACBTDELMU
      CUGBDATCELMNATCPLBTDRLNO $.
      $( [18-Dec-2008] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    $( Commutation of union with indexed union.  (Contributed by Mario
       Carneiro, 18-Jan-2014.) $)
    iuncom4 $p |- U_ x e. A U. B = U. U_ x e. A B $=
      ( vy vz cuni ciun cv wcel wa wex df-rex rexbii rexcom4 bitri exbii eluni2
      wrex eliun 3bitr4i r19.41v anbi1i eqriv ) DABCFZGZABCGZFZDHZUDIZABRZUHEHZ
      IZEUFRZUHUEIUHUGIULECRZABRZUKCIZABRZULJZEKZUJUMUOUPULJZABRZEKZUSUOUTEKZAB
      RVBUNVCABULECLMUTAEBNOVAUREUPULABUAPOUIUNABEUHCQMUMUKUFIZULJZEKUSULEUFLVE
      UREVDUQULAUKBCSUBPOTAUHBUDSEUHUFQTUC $.
      $( [18-Jan-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Indexed union of a constant class, i.e. where ` B ` does not depend on
       ` x ` .  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    iunconst $p |- ( A =/= (/) -> U_ x e. A B = B ) $=
      ( vy c0 wne ciun cv wcel wrex r19.9rzv eliun syl6rbbr eqrdv ) BEFZDABCGZC
      ODHZCIZRABJQPIRABKAQBCLMN $.
      $( [25-Jul-2011] $) $( [5-Sep-2004] $)
  $}

  ${
    $d x y $.  $d y z A $.  $d x z B $.  $d z C $.
    $( Law combining indexed union with indexed intersection.  Eq.  (14),
       p. 109, in _Set Theory, with an Introduction to Descriptive Set Theory_
       by K. Kuratowski and A. Mostowski (2nd ed., 1976).  (This theorem also
       appears as the last example at
       ~ http://en.wikipedia.org/wiki/Union%5F%28set%5Ftheory%29 .)  (The proof
       was shortened by Andrew Salmon, 25-Jul-2011.) $)
    iuniin $p |- U_ x e. A |^|_ y e. B C C_ |^|_ y e. B U_ x e. A C $=
      ( vz ciin ciun cv wcel wrex wral r19.12 cvv vex eliin ax-mp eliun 3imtr4i
      wb rexbii ralbii ssriv ) FACBDEGZHZBDACEHZGZFIZUDJZACKZUHUFJZBDLZUHUEJUHU
      GJZUHEJZBDLZACKUNACKZBDLUJULUNABCDMUIUOACUHNJZUIUOTFOZBUHDENPQUAUKUPBDAUH
      CERUBSAUHCUDRUQUMULTURBUHDUFNPQSUC $.
      $( [25-Jul-2011] $) $( [17-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunss1 $p |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) $=
      ( vy wss ciun cv wcel wrex ssrexv eliun 3imtr4g ssrdv ) BCFZEABDGZACDGZOE
      HZDIZABJSACJRPIRQISABCKARBDLARCDLMN $.
      $( [25-Jul-2011] $) $( [10-Dec-2004] $)

    $( Subclass theorem for indexed union. $)
    iinss1 $p |- ( A C_ B -> |^|_ x e. B C C_ |^|_ x e. A C ) $=
      ( vy wss ciin cv wcel wral ssralv cvv wb vex eliin ax-mp 3imtr4g ssrdv )
      BCFZEACDGZABDGZSEHZDIZACJZUCABJZUBTIZUBUAIZUCABCKUBLIZUFUDMENZAUBCDLOPUHU
      GUEMUIAUBBDLOPQR $.
      $( [24-Jan-2012] $)

    $( Equality theorem for indexed union. $)
    iuneq1 $p |- ( A = B -> U_ x e. A C = U_ x e. B C ) $=
      ( wss wa ciun wceq iunss1 anim12i eqss 3imtr4i ) BCEZCBEZFABDGZACDGZEZPOE
      ZFBCHOPHMQNRABCDIACBDIJBCKOPKL $.
      $( [27-Jun-1998] $)

    $( Equality theorem for restricted existential quantifier. $)
    iineq1 $p |- ( A = B -> |^|_ x e. A C = |^|_ x e. B C ) $=
      ( vy wceq cv wcel wral cab ciin raleq abbidv df-iin 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
      $( [27-Jun-1998] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    ss2iun $p |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) $=
      ( vy wss wral ciun cv wcel wrex ssel ralimi rexim syl eliun 3imtr4g ssrdv
      wi ) CDFZABGZEABCHZABDHZUAEIZCJZABKZUDDJZABKZUDUBJUDUCJUAUEUGSZABGUFUHSTU
      IABCDUDLMUEUGABNOAUDBCPAUDBDPQR $.
      $( [25-Jul-2011] $) $( [26-Nov-2003] $)

    $( Equality theorem for indexed union. $)
    iuneq2 $p |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) $=
      ( wss wral wa ciun wceq ss2iun anim12i eqss ralbii r19.26 bitri 3imtr4i )
      CDEZABFZDCEZABFZGZABCHZABDHZEZUCUBEZGCDIZABFZUBUCIRUDTUEABCDJABDCJKUGQSGZ
      ABFUAUFUHABCDLMQSABNOUBUCLP $.
      $( [22-Oct-2003] $)

    $( Equality theorem for indexed intersection.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    iineq2 $p |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( vy wceq wral cv wcel cab ciin wb eleq2 ralimi syl abbidv df-iin 3eqtr4g
      ralbi ) CDFZABGZEHZCIZABGZEJUBDIZABGZEJABCKABDKUAUDUFEUAUCUELZABGUDUFLTUG
      ABCDUBMNUCUEABSOPAEBCQAEBDQR $.
      $( [25-Jul-2011] $) $( [22-Oct-2003] $)
  $}

  ${
    iuneq2i.1 $e |- ( x e. A -> B = C ) $.
    $( Equality inference for indexed union. $)
    iuneq2i $p |- U_ x e. A B = U_ x e. A C $=
      ( wceq ciun iuneq2 mprg ) CDFABCGABDGFABABCDHEI $.
      $( [22-Oct-2003] $)

    $( Equality inference for indexed intersection. $)
    iineq2i $p |- |^|_ x e. A B = |^|_ x e. A C $=
      ( wceq ciin iineq2 mprg ) CDFABCGABDGFABABCDHEI $.
      $( [22-Oct-2003] $)
  $}

  ${
    iineq2d.1 $e |- ( ph -> A. x ph ) $.
    iineq2d.2 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed intersection. $)
    iineq2d $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( wceq wral ciin cv wcel ex ralrimi iineq2 syl ) ADEHZBCIBCDJBCEJHAQBCFAB
      KCLQGMNBCDEOP $.
      $( [7-Dec-2011] $)
  $}

  ${
    $d x ph $.
    iuneq2dv.1 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed union. $)
    iuneq2dv $p |- ( ph -> U_ x e. A B = U_ x e. A C ) $=
      ( wceq wral ciun ralrimiva iuneq2 syl ) ADEGZBCHBCDIBCEIGAMBCFJBCDEKL $.
      $( [5-Oct-2006] $) $( [3-Aug-2004] $)

    $( Equality deduction for indexed intersection. $)
    iineq2dv $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( ax-17 iineq2d ) ABCDEABGFH $.
      $( [3-Jan-2007] $) $( [3-Aug-2004] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x y z $.
    hbiun.1 $e |- ( z e. A -> A. y z e. A ) $.
    hbiun.2 $e |- ( z e. B -> A. y z e. B ) $.
    $( Bound-variable hypothesis builder for indexed union.  (Contributed by
       Mario Carneiro, 25-Jan-2014.) $)
    hbiun $p |- ( z e. U_ x e. A B -> A. y z e. U_ x e. A B ) $=
      ( vw ciun cv wcel wrex cab df-iun hblem hbrex hbab hbxfreq ) BCADEIHJEKZA
      DLZHMAHDENTBHCSBADBCADFOBCHEGOPQR $.
      $( [25-Jan-2014] $)

    $( Bound-variable hypothesis builder for indexed intersection.
       (Contributed by Mario Carneiro, 25-Jan-2014.) $)
    hbiin $p |- ( z e. |^|_ x e. A B -> A. y z e. |^|_ x e. A B ) $=
      ( vw ciin cv wcel wral cab df-iin hblem hbral hbab hbxfreq ) BCADEIHJEKZA
      DLZHMAHDENTBHCSBADBCADFOBCHEGOPQR $.
      $( [25-Jan-2014] $)
  $}

  ${
    $d z A $.  $d z B $.  $d x y z $.
    $( Bound-variable hypothesis builder for indexed union. $)
    hbiu1 $p |- ( y e. U_ x e. A B -> A. x y e. U_ x e. A B ) $=
      ( vz ciun cv wcel wrex cab df-iun hbre1 hbab hbxfreq ) ABACDFEGDHZACIZEJA
      ECDKPAEBOACLMN $.
      $( [12-Oct-2003] $)

    $( Bound-variable hypothesis builder for indexed intersection. $)
    hbii1 $p |- ( y e. |^|_ x e. A B -> A. x y e. |^|_ x e. A B ) $=
      ( vz ciin cv wcel wral cab df-iin hbra1 hbab hbxfreq ) ABACDFEGDHZACIZEJA
      ECDKPAEBOACLMN $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C z $.  $d w x y z $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    dfiun2g $p |- ( A. x e. A B e. C ->
                  U_ x e. A B = U. { y | E. x e. A y = B } ) $=
      ( vz wcel wral ciun cv wceq wrex cab cuni wa wex hbra1 wb ra4 syl6bb syl6
      clel3g rexbida rexcom4 r19.41v exbii exancom bitri eliun eluniab 3bitr4g
      imp eqrdv ) DEGZACHZFACDIZBJZDKZACLZBMNZUOFJZDGZACLZVAUQGZUSOBPZVAUPGVAUT
      GUOVCURVDOZACLZBPZVEUOVCVFBPZACLVHUOVBVIACUNACQUOAJCGZVBVIRZUOVJUNVKUNACS
      BVADEUBUAULUCVFABCUDTVHUSVDOZBPVEVGVLBURVDACUEUFUSVDBUGUHTAVACDUIUSBVAUJU
      KUM $.
      $( [25-Jul-2011] $) $( [23-Mar-2006] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    dfiun2.1 $e |- B e. _V $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (Unnecessary distinct variable restrictions
       were removed by David Abernethy, 19-Jun-2012.) $)
    dfiun2 $p |- U_ x e. A B = U. { y | E. x e. A y = B } $=
      ( cvv wcel ciun cv wceq wrex cab cuni dfiun2g a1i mprg ) DFGZACDHBIDJACKB
      LMJACABCDFNQAICGEOP $.
      $( [19-Jun-2012] $) $( [27-Jun-1998] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C $.  $d w x y z $.
    $( Alternate definition of indexed intersection when ` B ` is a set.
       (Contributed by Jeff Hankins, 27-Aug-2009.) $)
    dfiin2g $p |- ( A. x e. A B e. C
               -> |^|_ x e. A B = |^| { y | E. x e. A y = B } ) $=
      ( vw vz wcel wral cv cab wceq wrex wi wal ciin df-ral wb eqeq1 albii cint
      eleq2 biimprcd alrimiv eqid imbi12d cla4gv mpii impbid2 imim2i alimi albi
      pm5.74d syl sylbi alcom 19.21v 3bitr2ri r19.23v vex rexbidv imbi1i bitr4i
      elab bitri syl6bb syl5bb abbidv df-iin df-int 3eqtr4g ) DEHZACIZFJZDHZACI
      ZFKGJZBJZDLZACMZBKZHZVNVQHZNZGOZFKACDPWAUAVMVPWEFVPAJCHZVONZAOZVMWEVOACQV
      MWHWFVQDLZWCNZGOZNZAOZWEVMWFVLNZAOZWHWMRZVLACQWOWGWLRZAOWPWNWQAWNWFVOWKVL
      VOWKRWFVLVOWKVOWJGWIWCVOVQDVNUBZUCUDVLWKDDLZVODUEWJWSVONGDEWIWIWSWCVOVQDD
      SWRUFUGUHUIUJUMUKWGWLAULUNUOWMWJACIZGOZWEXAWFWJNZAOZGOXBGOZAOWMWTXCGWJACQ
      TXBAGUPXDWLAWFWJGUQTURWTWDGWTWIACMZWCNWDWIWCACUSWBXEWCVTXEBVQGUTVRVQLVSWI
      ACVRVQDSVAVDVBVCTVEVFVGVHAFCDVIFGWAVJVK $.
      $( [20-Sep-2011] $) $( [27-Aug-2009] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w x y z $.
    dfiin2.1 $e |- B e. _V $.
    $( Alternate definition of indexed intersection when ` B ` is a set.
       Definition 15(b) of [Suppes] p. 44.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    dfiin2 $p |- |^|_ x e. A B = |^| { y | E. x e. A y = B } $=
      ( vz ciin cv wceq wrex cab cint wcel wral wi wal clel4 ralbii ralcom4 cvv
      r19.23v albii 3bitri wb vex eliin ax-mp elintab 3bitr4i eqriv ) FACDGZBHZ
      DIZACJZBKLZFHZDMZACNZUNUPULMZOZBPZUPUKMZUPUOMURUMUSOZBPZACNVCACNZBPVAUQVD
      ACBUPDEQRVCABCSVEUTBUMUSACUAUBUCUPTMVBURUDFUEZAUPCDTUFUGUNBUPVFUHUIUJ $.
      $( [25-Jul-2011] $) $( [28-Jun-1998] $)
  $}

  ${
    $d w y A $.  $d w x A $.  $d w z B $.  $d w z C $.
    cbviun.1 $e |- ( z e. B -> A. y z e. B ) $.
    cbviun.2 $e |- ( z e. C -> A. x z e. C ) $.
    cbviun.3 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       25-Jul-2011.) $)
    cbviun $p |- U_ x e. A B = U_ y e. A C $=
      ( vw ciun cv wcel wrex hblem wceq eleq2d cbvrex eliun 3bitr4i eqriv ) JAD
      EKZBDFKZJLZEMZADNUDFMZBDNUDUBMUDUCMUEUFABDBCJEGOACJFHOALBLPEFUDIQRAUDDESB
      UDDFSTUA $.
      $( [25-Jul-2011] $) $( [26-Mar-2006] $)

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviin $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vw ciin cv wcel wral hblem wceq cvv wb eliin ax-mp eleq2d 3bitr4i eqriv
      cbvral vex ) JADEKZBDFKZJLZEMZADNZUHFMZBDNZUHUFMZUHUGMZUIUKABDBCJEGOACJFH
      OALBLPEFUHIUAUDUHQMZUMUJRJUEZAUHDEQSTUOUNULRUPBUHDFQSTUBUC $.
      $( [26-Aug-2009] $)
  $}

  ${
    $d x A $.  $d y A $.  $d y z B $.  $d x z C $.
    cbviunv.1 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis. $)
    cbviunv $p |- U_ x e. A B = U_ y e. A C $=
      ( vz cv wcel ax-17 cbviun ) ABGCDEGHZDIBJLEIAJFK $.
      $( [25-Jul-2011] $) $( [15-Sep-2003] $)

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviinv $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vz cv wcel ax-17 cbviin ) ABGCDEGHZDIBJLEIAJFK $.
      $( [26-Aug-2009] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunss $p |- ( U_ x e. A B C_ C <-> A. x e. A B C_ C ) $=
      ( vy ciun wss cv wcel wrex cab wal wral df-iun sseq1i abss ralbii ralcom4
      wi dfss2 r19.23v albii 3bitrri 3bitri ) ABCFZDGEHZCIZABJZEKZDGUHUFDIZSZEL
      ZCDGZABMZUEUIDAEBCNOUHEDPUNUGUJSZELZABMUOABMZELULUMUPABECDTQUOAEBRUQUKEUG
      UJABUAUBUCUD $.
      $( [25-Jul-2011] $) $( [13-Sep-2003] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed union.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    ssiun $p |- ( E. x e. A C C_ B -> C C_ U_ x e. A B ) $=
      ( vy wss wrex ciun cv wcel ssel reximi r19.37av syl eliun syl6ibr ssrdv
      wi ) DCFZABGZEDABCHZTEIZDJZUBCJZABGZUBUAJTUCUDRZABGUCUERSUFABDCUBKLUCUDAB
      MNAUBBCOPQ $.
      $( [25-Jul-2011] $) $( [3-Sep-2003] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Identity law for subset of an indexed union.  (The proof was shortened
       by Andrew Salmon, 25-Jul-2011.) $)
    ssiun2 $p |- ( x e. A -> B C_ U_ x e. A B ) $=
      ( vy cv wcel ciun wrex ra4e ex eliun syl6ibr ssrdv ) AEBFZDCABCGZNDEZCFZQ
      ABHZPOFNQRQABIJAPBCKLM $.
      $( [25-Jul-2011] $) $( [12-Oct-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    ssiun2s.1 $e |- ( x = C -> B = D ) $.
    $( Subset relationship for an indexed union. $)
    ssiun2s $p |- ( C e. A -> D C_ U_ x e. A B ) $=
      ( vy ciun wss cv wcel ax-17 hbiu1 hbss wceq sseq1d ssiun2 vtoclgaf ) CABC
      HZIESIAGDBGJZDKALAGESTEKALAGBCMNAJDOCESFPABCQR $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y C $.  $d x D $.
    $( A subclass condition on the members of two indexed classes ` C ( x ) `
       and ` D ( y ) ` that implies a subclass relation on their indexed
       unions.  Generalization of Proposition 8.6 of [TakeutiZaring] p. 59.
       Compare ~ uniss2 . $)
    iunss2 $p |- ( A. x e. A E. y e. B C C_ D ->
                 U_ x e. A C C_ U_ y e. B D ) $=
      ( wss wrex wral ciun ssiun ralimi iunss sylibr ) EFGBDHZACIEBDFJZGZACIACE
      JPGOQACBDFEKLACEPMN $.
      $( [9-Dec-2004] $)
  $}

  ${
    $d y z A $.  $d x y z B $.  $d z ph $.
    $( The indexed union of a restricted class abstraction. $)
    iunrab $p |- U_ x e. A { y e. B | ph } = { y e. B | E. x e. A ph } $=
      ( vz cv wsbc wrex crab wcel cab ciun df-rab ax-17 hbs1 hbrex wceq sbequ12
      wa rexbidv cbvrab eliun elrabsf rexbii r19.42v 3bitri abbi2i 3eqtr4ri ) A
      CFGZHZBDIZFEJUJEKZULTZFLABDIZCEJBDACEJZMZULFENUOULCFBEBGZEKZCOZUSFOUOFOUK
      CBDURDKCOACFPQCGUJRAUKBDACFSUAUBUNFUQUJUQKUJUPKZBDIUMUKTZBDIUNBUJDUPUCVAV
      BBDACBUJEUTUDUEUMUKBDUFUGUHUI $.
      $( [3-Jan-2004] $)
  $}

  ${
    $d y A $.  $d x y $.
    $( The indexed union of a class abstraction. $)
    iunab $p |- U_ x e. A { y | ph } = { y | E. x e. A ph } $=
      ( cvv crab ciun wrex cab iunrab wceq cv wcel rabab a1i iuneq2i 3eqtr3i )
      BDACEFZGABDHZCEFBDACIZGSCIABCDEJBDRTRTKBLDMACNOPSCNQ $.
      $( [27-Dec-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    iunxdif2.1 $e |- ( x = y -> C = D ) $.
    $( Indexed union with a class difference as its index. $)
    iunxdif2 $p |- ( A. x e. A E. y e. ( A \ B ) C C_ D ->
                 U_ y e. ( A \ B ) D = U_ x e. A C ) $=
      ( wss cdif wrex wral ciun wceq iunss2 difss iunss1 ax-mp cbviunv sseqtr4i
      wa jctil eqss sylibr ) EFHBCDIZJACKZBUDFLZACELZHZUGUFHZTUFUGMUEUIUHABCUDE
      FNUFBCFLZUGUDCHUFUJHCDOBUDCFPQABCEFGRSUAUFUGUBUC $.
      $( [10-Dec-2004] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d x y z $.
    ssiinf.1 $e |- ( y e. C -> A. x y e. C ) $.
    $( Subset theorem for an indexed intersection.  (Contributed by FL,
       15-Oct-2012.) $)
    ssiinf $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( ciin wss cv wcel wi wal wral dfss2 cvv wb vex eliin ax-mp albii ralcom4
      imbi2i ralbii r19.21 3bitrri 3bitri ) EACDGZHBIZEJZUHUGJZKZBLUIUHDJZACMZK
      ZBLZEDHZACMZBEUGNUKUNBUJUMUIUHOJUJUMPBQAUHCDORSUBTUQUIULKZBLZACMURACMZBLU
      OUPUSACBEDNUCURABCUAUTUNBUIULACFUDTUEUF $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed intersection. $)
    ssiin $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( vy cv wcel ax-17 ssiinf ) AEBCDEFDGAHI $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed intersection.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    iinss $p |- ( E. x e. A B C_ C -> |^|_ x e. A B C_ C ) $=
      ( vy wss wrex ciin cv wcel wral cvv wb vex eliin ax-mp wi reximi r19.36av
      ssel syl syl5bi ssrdv ) CDFZABGZEABCHZDEIZUFJZUGCJZABKZUEUGDJZUGLJUHUJMEN
      AUGBCLOPUEUIUKQZABGUJUKQUDULABCDUGTRUIUKABSUAUBUC $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    $( An indexed intersection is included in any of its members.  (Contributed
       by FL, 15-Oct-2012.) $)
    iinss2 $p |- ( x e. A -> |^|_ x e. A B C_ B ) $=
      ( vy cv wcel ciin wral wi cvv wb vex eliin ax-mp ra4 sylbi com12 ssrdv )
      AEBFZDABCGZCDEZTFZSUACFZUBUCABHZSUCIUAJFUBUDKDLAUABCJMNUCABOPQR $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y A $.
    $( Class union in terms of indexed union.  Definition in [Stoll] p. 43. $)
    uniiun $p |- U. A = U_ x e. A x $=
      ( vy cuni cv wcel wrex cab ciun dfuni2 df-iun eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.
      $( [28-Jun-1998] $)

    $( Class intersection in terms of indexed intersection.  Definition in
       [Stoll] p. 44. $)
    intiin $p |- |^| A = |^|_ x e. A x $=
      ( vy cint cv wcel wral cab ciin dfint2 df-iin eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.
      $( [28-Jun-1998] $)

    $( An indexed union of singletons recovers the index set. $)
    iunid $p |- U_ x e. A { x } = A $=
      ( vy cv csn ciun wceq cab wrex df-sn equcom abbii eqtri a1i iuneq2i iunab
      wcel risset abid2 eqtr3i 3eqtri ) ABADZEZFABUBCDZGZCHZFUEABIZCHZBABUCUFUC
      UFGUBBQUCUDUBGZCHUFCUBJUIUECCAKLMNOUEACBPUDBQZCHUHBUJUGCAUDBRLCBSTUA $.
      $( [18-Dec-2008] $) $( [6-Sep-2005] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( An indexed union of the empty set is empty.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    iun0 $p |- U_ x e. A (/) = (/) $=
      ( vy c0 ciun cv wcel wrex wn noel a1i nrex eliun mtbir 2false eqriv ) CAB
      DEZDCFZQGZRDGZSTABHTABTIAFBGRJZKLARBDMNUAOP $.
      $( [25-Jul-2011] $) $( [26-Mar-2003] $)

    $( An empty indexed union is empty.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    0iun $p |- U_ x e. (/) A = (/) $=
      ( vy c0 ciun cv wcel wrex rex0 eliun mtbir noel 2false eqriv ) CADBEZDCFZ
      OGZPDGQPBGZADHRAIAPDBJKPLMN $.
      $( [25-Jul-2011] $) $( [4-Dec-2004] $)

    $( An empty indexed intersection is the universal class. $)
    0iin $p |- |^|_ x e. (/) A = _V $=
      ( vy c0 ciin cv wcel wral cab cvv df-iin vex ral0 2th abbi2i eqtr4i ) ADB
      ECFZBGZADHZCIJACDBKSCJQJGSCLRAMNOP $.
      $( [20-Oct-2005] $)

    $( Indexed intersection with a universal index class.  When ` A ` doesn't
       depend on ` x ` , this evaluates to ` A ` by ~ 19.3 and ~ abid2 .  When
       ` A = x ` , this evaluates to ` (/) ` by ~ intiin and ~ intv . $)
    viin $p |- |^|_ x e. _V A = { y | A. x y e. A } $=
      ( cvv ciin cv wcel wral cab wal df-iin ralv abbii eqtri ) ADCEBFCGZADHZBI
      OAJZBIABDCKPQBOALMN $.
      $( [11-Sep-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( There is a non-empty class in an indexed collection ` B ( x ) ` iff the
       indexed union of them is non-empty.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunn0 $p |- ( E. x e. A B =/= (/) <-> U_ x e. A B =/= (/) ) $=
      ( vy cv wcel wex wrex c0 wne rexcom4 eliun exbii bitr4i n0 rexbii 3bitr4i
      ciun ) DEZCFZDGZABHZSABCRZFZDGZCIJZABHUCIJUBTABHZDGUETADBKUDUGDASBCLMNUFU
      AABDCOPDUCOQ $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.
    $( Indexed intersection of a class builder. $)
    iinab $p |- |^|_ x e. A { y | ph } = { y | A. x e. A ph } $=
      ( vz cab wcel wral wsbc ciin df-clab ralbii abbii df-iin ax-17 hbs1 hbral
      cv wceq sbequ12 ralbidv cbvab 3eqtr4i ) ERZACFZGZBDHZEFACUDIZBDHZEFBDUEJA
      BDHZCFUGUIEUFUHBDAECKLMBEDUENUJUICEUJEOUHCBDBRDGCOACEPQCRUDSAUHBDACETUAUB
      UC $.
      $( [6-Dec-2011] $)

    $d x A $.  $d x B $.
    $( Indexed intersection of a restricted class builder. $)
    iinrab $p |- ( A =/= (/)
          -> |^|_ x e. A { y e. B | ph } = { y e. B | A. x e. A ph } ) $=
      ( c0 wne cv wcel wa wral cab crab ciin r19.28zv abbidv df-rab a1i iineq2i
      wceq iinab eqtri 3eqtr4g ) DFGZCHEIZAJZBDKZCLZUEABDKZJZCLBDACEMZNZUICEMUD
      UGUJCUEABDOPULBDUFCLZNUHBDUKUMUKUMTBHDIACEQRSUFBCDUAUBUICEQUC $.
      $( [6-Dec-2011] $)

    $d y B $.
    $( Indexed intersection of a restricted class builder. $)
    iinrab2 $p |- ( |^|_ x e. A { y e. B | ph } i^i B )
                      = { y e. B | A. x e. A ph } $=
      ( crab ciin cin wral wceq c0 cvv iineq1 0iin syl6eq incom inv1 eqtri rzal
      ineq1d rabid2 ralcom bitr2i sylib wne iinrab wss ssrab2 dfss mpbi syl6eqr
      eqtrd pm2.61ine ) BDACEFZGZEHZABDIZCEFZJDKDKJZUPEURUSUPLEHZEUSUOLEUSUOBKU
      NGLBDKUNMBUNNOTUTELHELEPEQROUSACEIZBDIZEURJZVABDSVCUQCEIVBUQCEUAACBEDUBUC
      UDULDKUEZUPUREHZURVDUOUREABCDEUFTUREUGURVEJUQCEUHUREUIUJUKUM $.
      $( [6-Dec-2011] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y C $.
    $( Indexed union of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ uniiun to recover
       Enderton's theorem. $)
    iunin2 $p |- U_ x e. A ( B i^i C ) = ( B i^i U_ x e. A C ) $=
      ( vy cin ciun cv wcel wrex r19.42v elin rexbii eliun anbi2i 3bitr4i eqriv
      wa ) EABCDFZGZCABDGZFZEHZSIZABJZUCCIZUCUAIZRZUCTIUCUBIUFUCDIZRZABJUFUIABJ
      ZRUEUHUFUIABKUDUJABUCCDLMUGUKUFAUCBDNOPAUCBSNUCCUALPQ $.
      $( [26-Mar-2004] $)

    $( Indexed intersection of union.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem. $)
    iinun2 $p |- |^|_ x e. A ( B u. C ) = ( B u. |^|_ x e. A C ) $=
      ( vy cun ciin cv wcel wral wo r19.32v elun ralbii cvv eliin ax-mp 3bitr4i
      wb vex orbi2i eqriv ) EABCDFZGZCABDGZFZEHZUCIZABJZUGCIZUGUEIZKZUGUDIZUGUF
      IUJUGDIZKZABJUJUNABJZKUIULUJUNABLUHUOABUGCDMNUKUPUJUGOIZUKUPSETZAUGBDOPQU
      ARUQUMUISURAUGBUCOPQUGCUEMRUB $.
      $( [19-Aug-2004] $)

    $( Indexed union of class difference.  Generalization of half of theorem
       "De Morgan's laws" in [Enderton] p. 31.  Use ~ intiin to recover
       Enderton's theorem. $)
    iundif2 $p |- U_ x e. A ( B \ C ) = ( B \ |^|_ x e. A C ) $=
      ( vy cdif ciun ciin cv wcel wrex wn wa eldif rexbii r19.42v rexnal cvv wb
      wral vex eliin ax-mp xchbinxr anbi2i 3bitri eliun 3bitr4i eqriv ) EABCDFZ
      GZCABDHZFZEIZUJJZABKZUNCJZUNULJZLZMZUNUKJUNUMJUPUQUNDJZLZMZABKUQVBABKZMUT
      UOVCABUNCDNOUQVBABPVDUSUQVDVAABTZURVAABQUNRJURVESEUAAUNBDRUBUCUDUEUFAUNBU
      JUGUNCULNUHUI $.
      $( [19-Aug-2004] $)
  $}

  ${
    $d x B $.  $d y C $.  $d x D $.  $d x y $.
    $( Rearrange indexed unions over intersection. $)
    2iunin $p |- U_ x e. A U_ y e. B ( C i^i D )
        = ( U_ x e. A C i^i U_ y e. B D ) $=
      ( cin ciun wceq cv wcel iunin2 a1i iuneq2i incom eqtri 3eqtri ) ACBDEFGHZ
      HACEBDFHZGZHZSACEHZGZUBSGACRTRTIAJCKZBDEFLMNUAACSEGZHUCACTUETUEIUDESOMNAC
      SELPSUBOQ $.
      $( [18-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Indexed intersection of class difference.  Generalization of half of
       theorem "De Morgan's laws" in [Enderton] p. 31.  Use ~ uniiun to recover
       Enderton's theorem. $)
    iindif2 $p |- ( A =/= (/) ->
                 |^|_ x e. A ( B \ C ) = ( B \ U_ x e. A C ) ) $=
      ( vy c0 wne cdif ciin ciun cv wcel wn wa r19.28zv eldif bicomi ralbii cvv
      wral wrex ralnex eliun xchbinxr anbi2i 3bitr3g wb vex eliin ax-mp 3bitr4g
      eqrdv ) BFGZEABCDHZIZCABDJZHZUMEKZUNLZABTZURCLZURUPLZMZNZURUOLZURUQLUMVAU
      RDLZMZNZABTVAVGABTZNUTVDVAVGABOVHUSABUSVHURCDPQRVIVCVAVIVFABUAVBVFABUBAUR
      BDUCUDUEUFURSLVEUTUGEUHAURBUNSUIUJURCUPPUKUL $.
      $( [5-Oct-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d y V $.
    iinxsng.1 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed intersection's
       argument. $)
    iinxsng $p |- ( A e. V -> |^|_ x e. { A } B = C ) $=
      ( vy wcel csn ciin cv wceq wi wal wral cvv wb vex eliin ax-mp df-ral elsn
      imbi1i albii 3bitri ax-17 eleq2d ceqsalg syl5bb eqrdv ) BEHZGABIZCJZDGKZU
      MHZAKZBLZUNCHZMZANZUKUNDHZUOURAULOZUPULHZURMZANUTUNPHUOVBQGRAUNULCPSTURAU
      LUAVDUSAVCUQURABUBUCUDUEURVAABEVAAUFUQCDUNFUGUHUIUJ $.
      $( [15-Jan-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x y D $.  $d x y E $.  $d y V $.
    $d y W $.
    iinxprg.1 $e |- ( x = A -> C = D ) $.
    iinxprg.2 $e |- ( x = B -> C = E ) $.
    $( Indexed intersection with an unordered pair index. $)
    iinxprg $p |- ( ( A e. V /\ B e. W )
        -> |^|_ x e. { A , B } C = ( D i^i E ) ) $=
      ( vy wcel wa cv wceq wi wal ax-17 eleq2d ceqsalg cpr ciin cin bi2anan9 wb
      wral cvv vex eliin ax-mp df-ral elpr imbi1i jaob bitri albii 19.26 3bitri
      wo elin 3bitr4g eqrdv ) BGLZCHLZMZKABCUAZDUBZEFUCZVEANZBOZKNZDLZPZAQZVICO
      ZVLPZAQZMZVKELZVKFLZMVKVGLZVKVHLVCVNVSVDVQVTVLVSABGVSARVJDEVKISTVLVTACHVT
      ARVODFVKJSTUDWAVLAVFUFZVIVFLZVLPZAQZVRVKUGLWAWBUEKUHAVKVFDUGUIUJVLAVFUKWE
      VMVPMZAQVRWDWFAWDVJVOUSZVLPWFWCWGVLVIBCAUHULUMVJVLVOUNUOUPVMVPAUQUOURVKEF
      UTVAVB $.
      $( [25-Jan-2012] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    iunxsn.1 $e |- A e. _V $.
    iunxsn.2 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed union's
       argument. $)
    iunxsn $p |- U_ x e. { A } B = C $=
      ( vy csn ciun cv wcel wrex wa wex eliun df-rex wceq elsn anbi1i exbii
      eleq2d ceqsexv bitri 3bitri eqriv ) GABHZCIZDGJZUGKUHCKZAUFLAJZUFKZUIMZAN
      ZUHDKZAUHUFCOUIAUFPUMUJBQZUIMZANUNULUPAUKUOUIABRSTUIUNABEUOCDUHFUAUBUCUDU
      E $.
      $( [26-Mar-2004] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Separate a union in an indexed union. $)
    iunun $p |- U_ x e. A ( B u. C ) = ( U_ x e. A B u. U_ x e. A C ) $=
      ( vy cv cun wcel wrex cab ciun elun rexbii r19.43 bitri abbii unab eqtr4i
      wo df-iun uneq12i 3eqtr4i ) EFZCDGZHZABIZEJZUCCHZABIZEJZUCDHZABIZEJZGZABU
      DKABCKZABDKZGUGUIULSZEJUNUFUQEUFUHUKSZABIUQUEURABUCCDLMUHUKABNOPUIULEQRAE
      BUDTUOUJUPUMAEBCTAEBDTUAUB $.
      $( [27-Dec-2004] $)

    $( Separate a union in the index of an indexed union. $)
    iunxun $p |- U_ x e. ( A u. B ) C = ( U_ x e. A C u. U_ x e. B C ) $=
      ( vy cun ciun cv wcel wrex wo wa wex df-rex elun anbi1i andir bitri exbii
      eliun 19.43 orbi12i bitr4i 3bitri 3bitr4i eqriv ) EABCFZDGZABDGZACDGZFZEH
      ZDIZAUGJZULUIIZULUJIZKZULUHIULUKIUNAHZUGIZUMLZAMURBIZUMLZURCIZUMLZKZAMZUQ
      UMAUGNUTVEAUTVAVCKZUMLVEUSVGUMURBCOPVAVCUMQRSVFVBAMZVDAMZKUQVBVDAUAUOVHUP
      VIUOUMABJVHAULBDTUMABNRUPUMACJVIAULCDTUMACNRUBUCUDAULUGDTULUIUJOUEUF $.
      $( [26-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A relationship involving union and indexed intersection.  Exercise 23 of
       [Enderton] p. 33. $)
    iinuni $p |- ( A u. |^| B ) = |^|_ x e. B ( A u. x ) $=
      ( vy cint cv ciin wcel wo wral r19.32v elun ralbii elint2 orbi2i 3bitr4ri
      cun vex cvv wb eliin ax-mp 3bitr4i eqriv ) DBCEZQZACBAFZQZGZDFZBHZUJUEHZI
      ZUJUHHZACJZUJUFHUJUIHZUKUJUGHZIZACJUKUQACJZIUOUMUKUQACKUNURACUJBUGLMULUSU
      KAUJCDRZNOPUJBUELUJSHUPUOTUTAUJCUHSUAUBUCUD $.
      $( [25-Nov-2003] $)

    $( A relationship involving union and indexed union.  Exercise 25 of
       [Enderton] p. 33.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    iununi $p |- ( ( B = (/) -> A = (/) ) <->
                ( A u. U. B ) = U_ x e. B ( A u. x ) ) $=
      ( vy c0 wceq wi cun cv wcel wrex wo elun wn biorf orbi2i bitri wex neq0
      wa cuni ciun rexbii wb wne df-ne r19.45zv sylbir n0i con2i rexbidv bitr3d
      syl ja syl5rbb eluni2 eliun 3bitr4g eqrdv eleq2 eluni ax-17 19.45 3bitr4i
      df-rex 3bitr3g biimpd 19.39 simpl imim12i eximi 3syl 19.37v sylib exlimdv
      orc 3imtr4g con4d impbii ) CEFZBEFZGZBCUAZHZACBAIZHZUBZFZWBDWDWGWBDIZBJZW
      IWEJZACKZLZWIWFJZACKZWIWDJZWIWGJZWOWJWKLZACKZWBWMWNWRACWIBWEMUCVTWAWSWMUD
      ZVTNZCEUEWTCEUFWJWKACUGUHWAWJNZWTWJWABWIUIUJXBWLWSWMXBWKWRACWJWKOUKWJWLOU
      LUMUNUOWPWJWIWCJZLZWMWIBWCMZXCWLWJAWICUPPQAWICWFUQZURUSWHWAVTWHWJDRWECJZA
      RZWANXAWHWJXHDWHWJXGGZARZWJXHGWHWJWKXGTZLZARZXGWNTZARZGXLXNGZARXJWHXMXOWH
      WPWQXMXOWDWGWIUTXDWJXKARZLWPXMXCXQWJAWICVAPXEWJXKAWJAVBVCVDWQWOXOXFWNACVE
      QVFVGXLXNAVHXPXIAWJXLXNXGWJXKVPXGWNVIVJVKVLWJXGAVMVNVODBSACSVQVRVS $.
      $( [25-Jul-2011] $) $( [25-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class and union. $)
    sspwuni $p |- ( A C_ ~P B <-> U. A C_ B ) $=
      ( vx cv cpw wcel wral wss cuni vex elpw ralbii dfss3 unissb 3bitr4i ) CDZ
      BEZFZCAGPBHZCAGAQHAIBHRSCAPBCJKLCAQMCABNO $.
      $( [5-May-2009] $) $( [18-Jul-2006] $)

    $( Two ways to express a collection of subclasses. $)
    pwssb $p |- ( A C_ ~P B <-> A. x e. A x C_ B ) $=
      ( cpw wss cuni cv wral sspwuni unissb bitri ) BCDEBFCEAGCEABHBCIABCJK $.
      $( [19-Jul-2006] $)
  $}

  $( Relationship for power class and union. $)
  elpwuni $p |- ( B e. A -> ( A C_ ~P B <-> U. A = B ) ) $=
    ( cpw wss cuni wcel wceq sspwuni unissel expcom eqimss impbid1 syl5bb ) ABC
    DAEZBDZBAFZNBGZABHPOQOPQABIJNBKLM $.
    $( [13-May-2007] $) $( [18-Jul-2006] $)

  ${
    $d x y A $.
    $( The power class of an intersection in terms of indexed intersection.
       Exercise 24(a) of [Enderton] p. 33. $)
    iinpw $p |- ~P |^| A = |^|_ x e. A ~P x $=
      ( vy cint cpw cv ciin wss wcel wral ssint vex elpw ralbii bitr4i wb eliin
      cvv ax-mp 3bitr4i eqriv ) CBDZEZABAFZEZGZCFZUBHZUGUEIZABJZUGUCIUGUFIZUHUG
      UDHZABJUJAUGBKUIULABUGUDCLZMNOUGUBUMMUGRIUKUJPUMAUGBUERQSTUA $.
      $( [29-Nov-2003] $)

    $( Inclusion of an indexed union of a power class in the power class of the
       union of its index.  Part of Exercise 24(b) of [Enderton] p. 33. $)
    iunpwss $p |- U_ x e. A ~P x C_ ~P U. A $=
      ( vy cpw ciun cuni wss wrex wcel ssiun eliun vex elpw rexbii bitri uniiun
      cv sseq2i 3imtr4i ssriv ) CABAQZDZEZBFZDZCQZUAGZABHZUFABUAEZGZUFUCIZUFUEI
      ZABUAUFJUKUFUBIZABHUHAUFBUBKUMUGABUFUACLZMNOULUFUDGUJUFUDUNMUDUIUFABPROST
      $.
      $( [25-Nov-2003] $)
  $}


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             New Foundations Set Theory - add singleton axiom
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

  ${ $d x y z $.
     $( The axiom of singletons. This appears to have been an omission on 
     	Haliperin's part, as ~ opth cannot be proven without it. $)
     ax-sn $a |- E. y A. z ( z e. y <-> z = x ) $.
  $}

  ${ $d A x y z $.
     $( The singleton class always exists, regardless of the sethood
     	of its argument. $)
     snex $p |- { A } e. _V $=
       ( vx vz vy cvv wcel csn cv wceq sneq eleq1d wel weq wb ax-sn isset bitri
       wal wex c0 dfcleq elsn bibi2i albii exbii mpbir vtoclg snprc 0ex eleq1
       wn mpbiri sylbi pm2.61i ) AEFZAGZEFZBHZGZEFZUQBAEURAIUSUPEURAJKUTCDLZCBM
       ZNZCRZDSZBDCOUTDHZUSIZDSVEDUSPVGVDDVGVACHUSFZNZCRVDCVFUSUAVIVCCVHVBVACUR
       UBUCUDQUEQUFUGUOUKUPTIZUQAUHVJUQTEFUIUPTEUJULUMUN $.
       $( [30-Nov-2014] $)
  $}

  $( Biconditional equality condition for singleton equality. $)
  sneqb $p |- ( A e. V -> ( { A } = { B } <-> A = B ) ) $=
    ( wcel csn wceq snidg eleq2 syl5ibcom elsncg sylibd sneq impbid1 ) ACDZA
      EZBEZFZABFZNQAPDZRNAODQSACGOPAHIABCJKABLM $.
    $( [30-Nov-2014] $)

  $( The unordered pair exists. $)
  prex $p |- { A , B } e. _V $=
    ( cpr csn cun cvv df-pr wcel snex unexg mp2an eqeltri ) ABCADZBDZEZFABGMFHN
    FHOFHAIBIMNFFJKL $.
    $( [30-Nov-2014] $)

  $( The ordered pair exists. $)
  opex $p |- << A , B >> e. _V $=
    ( cop csn cpr cvv df-op prex eqeltri ) ABCADZABEZEFABGJKHI $.
    $( [30-Nov-2014] $)

  ${ $d A x y $. $d B x y $. $d C x y $.
     $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr2g $p |- ( ( B e. V /\ C e. W ) -> 
    	      	   ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) $=
      ( vx vy cv cpr wcel wceq wo preq1 eleq2d eqeq2 orbi1d bibi12d preq2 vex
      wb orbi2d elpr2 vtocl2g ) AFHZGHZIZJZAUDKZAUEKZLZTABUEIZJZABKZUILZTABCIZJ
      ZUMACKZLZTFGBCDEUDBKZUGULUJUNUSUFUKAUDBUEMNUSUHUMUIUDBAOPQUECKZULUPUNURUT
      UKUOAUECBRNUTUIUQUMUECAOUAQAUDUEFSGSUBUC $.
      $( [30-Nov-2014] $)
  $}

  ${ $d A x y $. $d B x y $. $d C x y $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same first element, the second elements are equal. $)
    preqr2g $p |- ( ( A e. V /\ B e. W ) -> 
    	       	    ( { C , A } = { C , B } -> A = B ) ) $=
      ( vx vy cv cpr wceq weq wi preq2 eqeq1d eqeq1 imbi12d eqeq2d eqeq2 preqr2
      vex vtocl2g ) CFHZIZCGHZIZJZFGKZLCAIZUEJZAUDJZLUHCBIZJZABJZLFGABDEUBAJZUF
      UIUGUJUNUCUHUEUBACMNUBAUDOPUDBJZUIULUJUMUOUEUKUHUDBCMQUDBARPUBUDCFTGTSUA
      $.
      $( [30-Nov-2014] $)
  $}

  $( An ordered pair has two elements. $)
  elop $p |- ( A e. << B , C >> <-> ( A = { B } \/ A = { B , C } ) ) $=
    ( cop wcel csn cpr wceq wo df-op eleq2i snex prex elpr2 bitri ) ABCDZEABFZB
    CGZGZEAQHARHIPSABCJKAQRBLBCMNO $.
    $( [30-Nov-2014] $)


  $( One of the two elements in an ordered pair. $)
  opi1 $p |- { A } e. << A , B >> $=
    ( csn cpr cop snex prid1 df-op eleqtrri ) ACZJABDZDABEJKAFGABHI $.
    $( [5-Aug-1993] $)

  $( One of the two elements of an ordered pair. $)
  opi2 $p |- { A , B } e. << A , B >> $=
    ( cpr csn cop prex prid2 df-op eleqtrri ) ABCZADZJCABEKJABFGABHI $.
    $( [5-Aug-1993] $)


  $( Equality of the first members of equal ordered pairs, which holds
     whether or not the second members are sets. $)
  opth1g $p |- ( A e. V -> ( << A , B >> = << C , D >> -> A = C ) ) $=
    ( wcel cop wceq csn wo opi1 eleq2 mpbiri elop sylib snidg syl5ibrcom prid1g
    cpr jaod syl5 elsncg sylibd ) AEFZABGZCDGZHZACIZFZACHUGUHAIZHZUHABSZHZJZUDU
    IUGUHUEFZUNUGUOUHUFFCDKUEUFUHLMUHABNOUDUKUIUMUDUIUKAUJFAEPUHUJALQUDUIUMAULF
    ABERUHULALQTUAACEUBUC $.
    $( [30-Nov-2014] $)


  ${
    opth1.1 $e |- A e. _V $.
    $( Equality of the first members of equal ordered pairs, which holds
       whether or not the second members are sets. $)
    opth1 $p |- ( << A , B >> = << C , D >> -> A = C ) $=
      ( cvv wcel cop wceq wi opth1g ax-mp ) AFGABHCDHIACIJEABCDFKL $.
      $( [28-May-2008] $)
  $}

  $( The ordered pair theorem.  If two ordered pairs are equal, their first
       elements are equal and their second elements are equal.  Exercise 6 of
       [TakeutiZaring] p. 16.  Note that ` C ` is not required to be a set due
       to a peculiarity of our specific ordered pair definition. $)
  opthg $p |- ( ( A e. V /\ B e. W /\ D e. U ) ->
     ( << A , B >> = << C , D >> <-> ( A = C /\ B = D ) ) ) $=
    ( wcel w3a cop wceq wa wi opth1g 3ad2ant1 imp cpr df-op prex syl5 eqeq2d csn
    opeq1 biimparc eqeq12i preqr2 sylbi preqr2g 3adant1 expdimp jcai ex impbid1
    opeq12 ) AFHZBGHZDEHZIZABJZCDJZKZACKZBDKZLZURVAVDURVALVBVCURVAVBUOUPVAVBMUQ
    ABCDFNOPURVAVBVCVAVBLUSADJZKZURVCVBVFVAVBVEUTUSACDUCUAUDVFABQZADQZKZURVCVFA
    UBZVGQZVJVHQZKVIUSVKVEVLABRADRUEVGVHVJABSADSUFUGUPUQVIVCMUOBDAGEUHUITTUJUKU
    LABCDUNUM $.
    $( [30-Nov-2014] $)

  ${
    opth.1 $e |- A e. _V $.
    opth.2 $e |- B e. _V $.
    opth.3 $e |- D e. _V $.
    $( The ordered pair theorem.  If two ordered pairs are equal, their first
       elements are equal and their second elements are equal.  Exercise 6 of
       [TakeutiZaring] p. 16.  Note that ` C ` is not required to be a set due
       to a peculiarity of our specific ordered pair definition. $)
    opth $p |- ( << A , B >> = << C , D >> <-> ( A = C /\ B = D ) ) $=
      ( cvv wcel cop wceq wa wb opthg mp3an ) AHIBHIDHIABJCDJKACKBDKLMEFGABCDHH
      HNO $.
      $( [28-May-1995] $)
  $}


  $( An ordered pair is not empty. $)
  opnz $p |- -. << A , B >> = (/) $=
    ( csn cop wcel c0 wceq wn opi1 n0i ax-mp ) ACZABDZEMFGHABIMLJK $.
    $( [24-Jan-2004] $)

  $( The union of an ordered pair.  Theorem 65 of [Suppes] p. 39. $)
  uniop $p |- U. << A , B >> = { A , B } $=
    ( cop cuni csn cpr cun df-op unieqi snex prex wss wceq snsspr1 ssequn1 mpbi
    unipr 3eqtri ) ABCZDAEZABFZFZDTUAGZUASUBABHITUAAJABKQTUALUCUAMABNTUAOPR $.
    $( [17-Aug-2004] $)

  $( Ordered pair membership is inherited by class union. $)
  uniopel $p |- ( << A , B >> e. C -> U. << A , B >> e. U. C ) $=
    ( cop wcel cuni cpr uniop opi2 eqeltri elssuni sseld mpi ) ABDZCEZNFZNEPCFZ
    EPABGNABHABIJONQPNCKLM $.
    $( [13-May-2008] $)

  ${
    $d x z w A $.  $d y z w A $.  $d z w ph $.
    $( Substitution of class ` A ` for ordered pair ` << x , y >> ` .
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    copsexg $p |- ( A = << x , y >> ->
                  ( ph <-> E. x E. y ( A = << x , y >> /\ ph ) ) ) $=
      ( vz vw cv cop wceq wa wex wb wi vex 19.8a wal syl5bi wn syl5 weu eqvinop
      syl ex opth anbi1i 2exbii hbe1 hba1 anass anim2d eximd biidd drex1 sylibd
      a1i exbii 19.40 df-ex hbn1 dveeq2 hbnd con1d anim1d pm2.61i exlimi euequ1
      syl6 equcom eubii mpbi eupick mpan pm2.27 eqcom sylan9 sylbi impbid eqeq1
      anbi1d 2exbidv bibi2d imbi12d mpbiri adantr exlimivv pm2.43i ) DBGZCGZHZI
      ZAWJAJZCKBKZLZWJDEGZFGZHZIZWPWIIZJZFKEKWJWMMZEFDWGWHBNCNZUAWSWTEFWQWTWRWQ
      WTWRAWRAJZCKZBKZLZMWRAXDWRAXDXBXCXDXBCOXCBOUBUCWRWNWGIZWOWHIZJZXDAMWNWOWG
      WHENFNXAUDZXDXHAJZCKZBKZXHAXBXJBCWRXHAXIUEUFXLXFXGAJZCKZJZBKZXHAXKXPBXOBU
      GWHWGIZCPZXKXPMXRXKXOCKXPXRXJXOCXQCUHXJXFXMJZXRXOXFXGAUIZXRXMXNXFXMXNMXRX
      MCOUOUJQUKXOXOCBXRXOULUMUNXRRZXKXOXPXKXSCKZYAXOXJXSCXTUPYBXFCKZXNJYAXOXFX
      MCUQYAYCXFXNYCXFRCPZRYAXFXFCURYAXFYDYAXFCXQCUSCBEUTVAVBQVCSQXOBOVGVDVEXFX
      PXNXGAXPXFXNMZXFXNXFBTZXPYEWGWNIZBTYFBEVFYGXFBBEVHVIVJXFXNBVKVLXFXNVMSXNX
      GAMZXGAXGCTZXNYHWHWOIZCTYICFVFYJXGCWHWOVNVIVJXGACVKVLXGAVMSVOSQVPVQWQWJWR
      WMXEDWPWIVRZWQWLXDAWQWKXBBCWQWJWRAYKVSVTWAWBWCWDWEVPWF $.
      $( [25-Jul-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    $( Closed theorem form of ~ copsex2g . $)
    copsex2t $p |- ( ( A. x A. y ( ( x = A /\ y = B ) -> ( ph <-> ps ) )
      /\ ( A e. V /\ B e. W ) ) ->
                  ( E. x E. y ( << A , B >> = << x , y >> /\ ph ) <-> ps ) ) $=
      ( wcel wa cv wceq wb wal wex cop elisset hbe1 ax-17 hbbi wi anim12i eeanv
      sylibr hba1 hba2 hbex opeq12 copsexg eqcoms syl adantl 19.21bi imp bitr3d
      ax-4 ex exlimd sylan2 ) EGIZFHIZJZCKZELZDKZFLZJZABMZUAZDNZCNZVGDOZCOZEFPZ
      VCVEPZLAJZDOZCOZBMZVBVDCOZVFDOZJVMUTVTVAWACEGQDFHQUBVDVFCDUCUDVKVMVSVKVLV
      SCVJCUEVRBCVQCRBCSTVKVGVSDVIDCUFVRBDVQDCVPDRUGBDSTVKVGVSVKVGJAVRBVGAVRMZV
      KVGVOVNLWBVCVEEFUHWBVNVOACDVNUIUJUKULVKVGVHVKVIDVJCUPUMUNUOUQURURUNUS $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    copsex2g.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for ordered pairs. $)
    copsex2g $p |- ( ( A e. V /\ B e. W ) ->
                  ( E. x E. y ( << A , B >> = << x , y >> /\ ph ) <-> ps ) ) $=
      ( wcel cv wceq wex cop wa wb elisset hbe1 ax-17 hbbi eeanv opeq12 copsexg
      hbex eqcoms syl bitr3d exlimi sylbir syl2an ) EGJCKZELZCMZDKZFLZDMZEFNZUK
      UNNZLAOZDMZCMZBPZFHJCEGQDFHQUMUPOULUOOZDMZCMVBULUOCDUAVDVBCVABCUTCRBCSTVC
      VBDVABDUTDCUSDRUDBDSTVCAVABVCURUQLAVAPZUKUNEFUBVEUQURACDUQUCUEUFIUGUHUHUI
      UJ $.
      $( [28-May-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.  $d x y z w R $.  $d x y z w S $.
    copsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) ->
                     ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 2 ordered pairs. $)
    copsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                      ( E. x E. y E. z E. w ( ( << A , B >> = << x , y >> /\
                      << C , D >> = << z , w >> ) /\ ph ) <-> ps ) ) $=
      ( wcel wa cop cv wceq wex cvv wb eqcom vex mp3an12 syl5bb adantl bi2anan9
      opthg anbi1d 4exbidv id cgsex4g bitrd ) GKNZHLNZOZIKNZJLNZOZOZGHPZCQZDQZP
      ZRZIJPZEQZFQZPZRZOZAOZFSESDSCSVBGRVCHROZVGIRVHJROZOZAOZFSESDSCSBUTVLVPCDE
      FUTVKVOAUPVEVMUSVJVNUOVEVMUAUNVEVDVARZUOVMVAVDUBVBTNVCTNUOVQVMUACUCDUCVBV
      CGHLTTUHUDUEUFURVJVNUAUQVJVIVFRZURVNVFVIUBVGTNVHTNURVRVNUAEUCFUCVGVHIJLTT
      UHUDUEUFUGUIUJABVOCDEFGHIJKLVOUKMULUM $.
      $( [5-Aug-1995] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             New Foundations Set Theory - add cardinal one axiom
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

  ${ $d x y z w $.
    $( State the cardinal one axiom from Haliperin. This axiom guarantees
       a set with all the singletons. This set will become cardinal one
       later on in our development. $) 
    ax-card1 $a |- E. x A. y ( y e. x <-> E. z A. w ( w e. y <-> w = z ) ) $.
  $}

  $( Declare the constant for cardinal one. $)
  $c 1c $.

  $( Declare the syntax for cardinal one. $)
  c1c $a class 1c $.

  ${ $d x y $.
     $( Define cardinal one. $)
     df-1c $a |- 1c = { x | E. y x = { y } } $.
  $}

  ${ $d x y z w $.
     $( Cardinal one is a set. $)
     1cex $p |- 1c e. _V $=
       ( vy vz vx vw c1c cv csn wceq wex cab cvv df-1c wcel wel wb bibi2i albii
       wal bitri exbii weq ax-card1 isset abeq2 dfcleq elsn mpbir eqeltri ) EAF
       ZBFZGZHZBIZAJZKABLUNKMZACNZDANZDBUAZOZDRZBIZOZARZCIZCABDUBUOCFZUNHZCIVDC
       UNUCVFVCCVFUPUMOZARVCUMAVEUDVGVBAUMVAUPULUTBULUQDFUKMZOZDRUTDUIUKUEVIUSD
       VHURUQDUJUFPQSTPQSTSUGUH $.
       $( [30-Nov-2014] $)
  $}
$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             New Foundations Set Theory - add set construction axioms
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

  ${ $d x y z w t $.
     $( The axiom of the cross product. This axiom guarantees the 
     	existence of the (Kuratowski) cross product of ` _V ` with
	a set. Haliperin's axiom 5. $)
     ax-xp $a |- E. y A. z ( z e. y <-> E. w E. t ( t e. x /\ z = << w , t >> ) ) $.
  $}

  ${ $d x y z w $.
     $( The converse axiom. This axiom guarantees the existence of the
     	(Kuratowski) converse of a set. Axiom 7 of [Haliperin]. $)
     ax-cnv $a |- E. y A. z A. w ( << z , w >> e. y <-> << w , z >> e. x ) $.
  $}

  ${ $d x y z w $.
     $( The axiom of type lowering. This axiom guarantees both Kuratowski range
        and the type lowering operation. Axiom 6 of [Haliperin]. $)
     ax-typlower $a |- E. y A. z ( z e. y <-> A. w << w , { z } >> e. x ) $.
  $}

  ${ $d x y z w t $.
     $( The insert two axiom. This axiom will insert an extra variable
     	at position two into a relationship determined by ` x ` . Axiom
	3 of [Haliperin]. $)
     ax-ins2 $a |- E. y A. z A. w A. t ( << { { z } } , << w , t >> >> e. y <->
     	 << z , t >> e. x ) $.
  $}

  ${ $d x y z w t $.
     $( The insert three axiom. This axiom will insert an extra variable
     	at position three into a relationship determined by ` x ` . Axiom
	4 of [Haliperin]. $)
     ax-ins3 $a |- E. y A. z A. w A. t ( << { { z } } , << w , t >> >> e. y <->
     	 << z , w >> e. x ) $.
  $}

  ${ $d x y z w $.
     $( The singleton image axiom. This axiom gives us a (Kuratowski) 
     	relationship that raises the type of the variables in a 
	relationship by one. Axiom 2 of [Haliperin]. $)
     ax-si $a |- E. y A. z A. w ( << { z } , { w } >> e. y <-> << z , w >> e. x ) $.
  $}

  ${ $d x y z t $.
     $( The subset axiom. This axiom gives the existence of a relationship
     	between ` y ` and ` z ` that holds iff ` y C_ z ` . Generalization
	of axiom 9 of [Haliperin]. $)
     ax-sset $a |- E. x A. y A. z ( << y , z >> e. x <-> 
      A. t ( t e. y -> t e. z ) ) $.
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include ordered-pair class abstraction (class
     builder). $)
  copab $a class { << x , y >> | ph } $.

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Define the class abstraction of a collection of ordered pairs.
       Definition 3.3 of [Monk1] p. 34.  Usually ` x ` and ` y ` are distinct,
       although the definition doesn't strictly require it (see ~ dfid2 for a
       case where they are not distinct).  The brace notation is called "class
       abstraction" by Quine; it is also (more commonly) called a "class
       builder" in the literature.  An alternate definition using no
       existential quantifiers is shown by ~ dfopab2 . $)
    df-opab $a |- { << x , y >> | ph } =
                  { z | E. x E. y ( z = << x , y >> /\ ph ) } $.
  $}

  ${
    $d x z R $.  $d y z R $.
    $( The collection of ordered pairs in a class is a subclass of it.  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    opabss $p |- { << x , y >> | x R y } C_ R $=
      (  ) ? $.
      $( [9-Jul-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.  $d z ch $.
    opabbid.1 $e |- ( ph -> A. x ph ) $.
    opabbid.2 $e |- ( ph -> A. y ph ) $.
    opabbid.3 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule).  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    opabbid $p |- ( ph -> { << x , y >> | ps } = { << x , y >> | ch } ) $=
      ( vz cv cop wceq wa wex cab copab anbi2d exbid abbidv df-opab 3eqtr4g ) A
      IJDJEJKLZBMZENZDNZIOUBCMZENZDNZIOBDEPCDEPAUEUHIAUDUGDFAUCUFEGABCUBHQRRSBD
      EITCDEITUA $.
      $( [9-Jul-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x ph $.  $d y z ph $.  $d z ps $.  $d z ch $.
    opabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule). $)
    opabbidv $p |- ( ph -> { << x , y >> | ps } = { << x , y >> | ch } ) $=
      ( ax-17 opabbid ) ABCDEADGAEGFH $.
      $( [15-May-1995] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.
    opabbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions. $)
    opabbii $p |- { << x , y >> | ph } = { << x , y >> | ps } $=
      ( vz cv wceq copab eqid wb a1i opabbidv ax-mp ) FGZOHZACDIBCDIHOJPABCDABK
      PELMN $.
      $( [25-Jul-2011] $) $( [15-May-1995] $)
  $}

  ${
    $d x y z w v $.  $d v ph $.  $d v ps $.
    cbvopab.1 $e |- ( ph -> A. z ph ) $.
    cbvopab.2 $e |- ( ph -> A. w ph ) $.
    cbvopab.3 $e |- ( ps -> A. x ps ) $.
    cbvopab.4 $e |- ( ps -> A. y ps ) $.
    cbvopab.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution. $)
    cbvopab $p |- { << x , y >> | ph } = { << z , w >> | ps } $=
      ( vv cv cop wceq wa wex cab ax-17 hban copab opeq12 eqeq2d anbi12d cbvex2
      abbii df-opab 3eqtr4i ) LMZCMZDMZNZOZAPZDQCQZLRUIEMZFMZNZOZBPZFQEQZLRACDU
      ABEFUAUOVALUNUTCDEFUMAEUMESGTUMAFUMFSHTUSBCUSCSITUSBDUSDSJTUJUPOUKUQOPZUM
      USABVBULURUIUJUKUPUQUBUCKUDUEUFACDLUGBEFLUGUH $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x y z w $.  $d z w v ph $.  $d x y v ps $.
    cbvopabv.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution. $)
    cbvopabv $p |- { << x , y >> | ph } = { << z , w >> | ps } $=
      ( ax-17 cbvopab ) ABCDEFAEHAFHBCHBDHGI $.
      $( [15-Oct-1996] $)
  $}

  ${
    $d v w x y $.  $d v w y z $.  $d v w ph $.  $d v w ps $.
    cbvopab1.1 $e |- ( ph -> A. z ph ) $.
    cbvopab1.2 $e |- ( ps -> A. x ps ) $.
    cbvopab1.3 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab1 $p |- { << x , y >> | ph } = { << z , y >> | ps } $=
      ( vw vv cv cop wceq wa wex cab copab wsbc ax-17 hban opeq1 eqeq2d sbequ12
      hbs1 hbex anbi12d exbidv cbvex hbsb sbequ sbie syl6bb bitri abbii df-opab
      3eqtr4i ) IKZCKZDKZLZMZANZDOZCOZIPUQEKZUSLZMZBNZDOZEOZIPACDQBEDQVDVJIVDUQ
      JKZUSLZMZACVKRZNZDOZJOVJVCVPCJVCJSVOCDVMVNCVMCSACJUDTUEURVKMZVBVODVQVAVMA
      VNVQUTVLUQURVKUSUAUBACJUCUFUGUHVPVIJEVOEDVMVNEVMESACJEFUITUEVIJSVKVEMZVOV
      HDVRVMVGVNBVRVLVFUQVKVEUSUAUBVRVNACVERBAJECUJABCEGHUKULUFUGUHUMUNACDIUOBE
      DIUOUP $.
      $( [6-Oct-2004] $)
  $}

  ${
    $d w x y z $.  $d w ph $.  $d w ps $.
    cbvopab2.1 $e |- ( ph -> A. z ph ) $.
    cbvopab2.2 $e |- ( ps -> A. y ps ) $.
    cbvopab2.3 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Change second bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab2 $p |- { << x , y >> | ph } = { << x , z >> | ps } $=
      ( vw cv cop wceq wa wex cab copab ax-17 hban opeq2 df-opab eqeq2d anbi12d
      cbvex exbii abbii 3eqtr4i ) IJZCJZDJZKZLZAMZDNZCNZIOUGUHEJZKZLZBMZENZCNZI
      OACDPBCEPUNUTIUMUSCULURDEUKAEUKEQFRUQBDUQDQGRUIUOLZUKUQABVAUJUPUGUIUOUHSU
      AHUBUCUDUEACDITBCEITUF $.
      $( [22-Aug-2013] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab1s $p |- { << x , y >> | ph } = { << z , y >> | [ z / x ] ph } $=
      ( vw cv cop wceq wa wex cab wsbc copab ax-17 hbs1 hban hbex opeq1 df-opab
      eqeq2d sbequ12 anbi12d exbidv cbvex abbii 3eqtr4i ) EFZBFZCFZGZHZAIZCJZBJ
      ZEKUGDFZUIGZHZABUOLZIZCJZDJZEKABCMURDCMUNVAEUMUTBDUMDNUSBCUQURBUQBNABDOPQ
      UHUOHZULUSCVBUKUQAURVBUJUPUGUHUOUIRTABDUAUBUCUDUEABCESURDCESUF $.
      $( [5-Nov-2004] $) $( [31-Jul-2003] $)
  $}

  ${
    $d x y $.  $d y z $.  $d z ph $.  $d x ps $.
    cbvopab1v.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the first bound variable in an ordered pair
       abstraction, using implicit substitution.  (The proof was shortened by
       Eric Schmidt, 4-Apr-2007.) $)
    cbvopab1v $p |- { << x , y >> | ph } = { << z , y >> | ps } $=
      ( ax-17 cbvopab1 ) ABCDEAEGBCGFH $.
      $( [4-Apr-2007] $) $( [31-Jul-2003] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.  $d y w ps $.
    cbvopab2v.1 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the second bound variable in an ordered pair
       abstraction, using implicit substitution. $)
    cbvopab2v $p |- { << x , y >> | ph } = { << x , z >> | ps } $=
      ( vw cv cop wceq wex cab copab opeq2 eqeq2d anbi12d cbvexv exbii df-opab
      wa abbii 3eqtr4i ) GHZCHZDHZIZJZATZDKZCKZGLUCUDEHZIZJZBTZEKZCKZGLACDMBCEM
      UJUPGUIUOCUHUNDEUEUKJZUGUMABUQUFULUCUEUKUDNOFPQRUAACDGSBCEGSUB $.
      $( [2-Sep-1999] $)
  $}

  ${
    $d w y z A $.  $d w ph $.  $d w x y z $.
    $( Move substitution into a class abstraction. $)
    csbopabg $p |- ( A e. V -> [_ A / x ]_ { << y , z >> | ph } =
               { << y , z >> | [ A / x ] ph } ) $=
      ( vw wcel cvv copab csb wsbc wceq cv wa wex cab df-opab sbcexg bitrd elex
      cop csbeq2i csbabg sbcang sbcg anbi1d exbidv abbidv eqcomi a1i 3eqtrd syl
      eqtrd ) EFHEIHZBEACDJZKZABELZCDJZMEFUAUOUQBEGNCNDNUBMZAOZDPZCPZGQZKZUTURO
      ZDPZCPZGQZUSBEUPVDIACDGRUCUOVEVCBELZGQVIVCBGEIUDUOVJVHGUOVJVBBELZCPVHVBCB
      EISUOVKVGCUOVKVABELZDPVGVADBEISUOVLVFDUOVLUTBELZUROVFUTABEIUEUOVMUTURUTBE
      IUFUGTUHTUHTUIUNVIUSMUOUSVIURCDGRUJUKULUM $.
      $( [6-Aug-2007] $)
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    $( Union of two ordered pair class abstractions. $)
    unopab $p |- ( { << x , y >> | ph } u. { << x , y >> | ps } ) =
               { << x , y >> | ( ph \/ ps ) } $=
      ( vz cv cop wceq wa wex cab wo copab unab 19.43 andi exbii bitr2i df-opab
      cun bitr3i abbii eqtri uneq12i 3eqtr4i ) EFCFDFGHZAIZDJZCJZEKZUFBIZDJZCJZ
      EKZTZUFABLZIZDJZCJZEKZACDMZBCDMZTUPCDMUOUIUMLZEKUTUIUMENVCUSEVCUHULLZCJUS
      UHULCOVDURCURUGUKLZDJVDUQVEDUFABPQUGUKDORQUAUBUCVAUJVBUNACDESBCDESUDUPCDE
      SUE $.
      $( [30-Sep-2002] $)
  $}


  ${
    $d x z w v $.  $d y z w v $.  $d ph z w v $.
    $( The law of concretion.  Special case of Theorem 9.5 of [Quine] p. 61.
       (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    opabid $p |- ( << x , y >> e. { << x , y >> | ph } <-> ph ) $=
      ( vz cv cop wceq wa wex copab opex copsexg bicomd df-opab elab2 ) DEZBEZC
      EZFZGZAHCIBIZADSABCJQRKTAUAABCPLMABCDNO $.
      $( [25-Jul-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d x z A $.  $d y z A $.  $d z ph $.
    $( Membership in a class abstraction of pairs. $)
    elopab $p |- ( A e. { << x , y >> | ph } <->
                 E. x E. y ( A = << x , y >> /\ ph ) ) $=
      ( vz copab wcel cvv cv cop wceq wa elex opex eleq1 mpbiri adantr exlimivv
      wex eqeq1 anbi1d 2exbidv df-opab abeq2i vtoclbg pm5.21nii ) DABCFZGZDHGZD
      BIZCIZJZKZALZCSBSZDUGMUNUIBCUMUIAUMUIULHGUJUKNDULHOPQREIZUGGUPULKZALZCSBS
      ZUHUOEDHUPDUGOUPDKZURUNBCUTUQUMAUPDULTUAUBUSEUGABCEUCUDUEUF $.
      $( [24-Mar-1998] $)
  $}

  ${
    $d x z v $.  $d y z v $.  $d w z $.  $d ph v $.
    hbopab.1 $e |- ( ph -> A. z ph ) $.
    $( Bound-variable hypothesis builder for class abstraction.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       11-Jul-2011.) $)
    hbopab $p |- ( w e. { << x , y >> | ph } ->
                 A. z w e. { << x , y >> | ph } ) $=
      ( vv copab cv cop wceq wa wex cab df-opab ax-17 hban hbex hbab hbxfreq )
      DEABCHGIBICIJKZALZCMZBMZGNABCGOUDDGEUCDBUBDCUAADUADPFQRRST $.
      $( [25-Jul-2011] $) $( [1-Sep-1999] $)
  $}

  ${
    $d x w $.  $d y w $.  $d x z $.  $d w ph $.
    $( The first abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free. $)
    hbopab1 $p |- ( z e. { << x , y >> | ph } ->
                 A. x z e. { << x , y >> | ph } ) $=
      ( vw copab cv cop wceq wa wex cab df-opab hbe1 hbab hbxfreq ) BDABCFEGBGC
      GHIAJCKZBKZELABCEMRBEDQBNOP $.
      $( [16-May-1995] $)
  $}

  ${
    $d x w $.  $d y w $.  $d y z $.  $d w ph $.
    $( The second abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free. $)
    hbopab2 $p |- ( z e. { << x , y >> | ph } ->
                 A. y z e. { << x , y >> | ph } ) $=
      ( vw copab cv cop wceq wa wex cab df-opab hbe1 hbex hbab hbxfreq ) CDABCF
      EGBGCGHIAJZCKZBKZELABCEMTCEDSCBRCNOPQ $.
      $( [16-May-1995] $)
  $}


  ${
    $d x y z v $.  $d x y w v $.  $d v ph $.
    $( The law of concretion in terms of substitutions.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    opelopabsb $p |- ( << z , w >> e. { << x , y >> | ph }
                 <-> [ w / y ] [ z / x ] ph ) $=
      ( cv cop wceq wa wex copab wcel wsbc excom vex opth equcom anbi12i 3bitri
      ancom anbi1i 2exbii bitri elopab 2sb5 3bitr4i ) DFZEFZGZBFZCFZGHZAIZCJBJZ
      UKUHHZUJUGHZIZAIZBJCJZUIABCKLABUGMCUHMUNUMBJCJUSUMBCNUMURCBULUQAULUGUJHZU
      HUKHZIVAUTIUQUGUHUJUKDOEOCOPUTVATVAUOUTUPECQDBQRSUAUBUCABCUIUDACBEDUEUF
      $.
      $( [25-Jul-2011] $) $( [30-Sep-2002] $)

    ${
      brabsb.1 $e |- R = { << x , y >> | ph } $.
      $( The law of concretion in terms of substitutions. $)
      brabsb $p |- ( z R w <-> [ w / y ] [ z / x ] ph ) $=
        (  ) ? $.
        $( [17-Mar-2008] $)
    $}
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y ch $.  $d z ph $.
    $( Closed theorem form of ~ opelopab . $)
    opelopabt $p |- ( ( A. x A. y ( x = A -> ( ph <-> ps ) )
                     /\ A. x A. y ( y = B -> ( ps <-> ch ) )
                     /\ ( A e. V /\ B e. W ) ) ->
                    ( << A , B >> e. { << x , y >> | ph } <-> ch ) ) $=
      ( cop copab wcel cv wceq wa wex wb wi wal w3a elopab prth 2alimi copsex2t
      19.26-2 bitr syl6 sylbir sylan 3impa syl5bb ) FGJZADEKLULDMZEMZJNAOEPDPZU
      MFNZABQZRZESDSZUNGNZBCQZRZESDSZFHLGILOZTCADEULUAUSVCVDUOCQZUSVCOZUPUTOZAC
      QZRZESDSZVDVEVFURVBOZESDSVJURVBDEUEVKVIDEVKVGUQVAOVHUPUQUTVAUBABCUFUGUCUH
      ACDEFGHIUDUIUJUK $.
      $( [19-Feb-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    opelopabga.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       Mario Carneiro, 19-Dec-2013.) $)
    opelopabga $p |- ( ( A e. V /\ B e. W ) ->
                    ( << A , B >> e. { << x , y >> | ph } <-> ps ) ) $=
      ( cop copab wcel cv wceq wa wex elopab copsex2g syl5bb ) EFJZACDKLTCMDMJN
      AODPCPEGLFHLOBACDTQABCDEFGHIRS $.
      $( [19-Dec-2013] $)

    ${
      brabga.2 $e |- R = { << x , y >> | ph } $.
      $( The law of concretion for a binary relation.  (Contributed by Mario
         Carneiro, 19-Dec-2013.) $)
      brabga $p |- ( ( A e. V /\ B e. W ) -> ( A R B <-> ps ) ) $=
        (  ) ? $.
        $( [19-Dec-2013] $)
    $}

    $d x y C $.  $d x y D $.
    $( Ordered pair membership in an ordered pair class abstraction.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    opelopab2a $p |- ( ( A e. C /\ B e. D ) -> ( << A , B >> e.
                 { << x , y >> | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ps ) ) $=
      ( wcel wa cop cv copab wceq eleq1 bi2anan9 anbi12d opelopabga ibar bitr4d
      ) EGJZFHJZKZEFLCMZGJZDMZHJZKZAKZCDNJUDBKZBUJUKCDEFGHUEEOZUGFOZKUIUDABULUF
      UBUMUHUCUEEGPUGFHPQIRSUDBTUA $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    opelopaba.1 $e |- A e. _V $.
    opelopaba.2 $e |- B e. _V $.
    opelopaba.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       Mario Carneiro, 19-Dec-2013.) $)
    opelopaba $p |- ( << A , B >> e. { << x , y >> | ph } <-> ps ) $=
      ( cvv wcel cop copab wb opelopabga mp2an ) EJKFJKEFLACDMKBNGHABCDEFJJIOP
      $.
      $( [19-Dec-2013] $)

    ${
      braba.4 $e |- R = { << x , y >> | ph } $.
      $( The law of concretion for a binary relation. $)
      braba $p |- ( A R B <-> ps ) $=
        (  ) ? $.
        $( [19-Dec-2013] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61. $)
    opelopabg $p |- ( ( A e. V /\ B e. W ) ->
                    ( << A , B >> e. { << x , y >> | ph } <-> ch ) ) $=
      ( cv wceq sylan9bb opelopabga ) ACDEFGHIDLFMABELGMCJKNO $.
      $( [19-Dec-2013] $) $( [28-May-1995] $)

    ${
      brabg.5 $e |- R = { << x , y >> | ph } $.
      $( The law of concretion for a binary relation. $)
      brabg $p |- ( ( A e. C /\ B e. D ) -> ( A R B <-> ch ) ) $=
        ( cv wceq sylan9bb brabga ) ACDEFGJHIDNFOABENGOCKLPMQ $.
        $( [19-Dec-2013] $) $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y ch $.
    opelopab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab2.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Ordered pair membership in an ordered pair class abstraction. $)
    opelopab2 $p |- ( ( A e. C /\ B e. D ) -> ( << A , B >> e.
                 { << x , y >> | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ch ) ) $=
      ( cv wceq sylan9bb opelopab2a ) ACDEFGHIDLFMABELGMCJKNO $.
      $( [19-Dec-2013] $) $( [14-Oct-2007] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopab.1 $e |- A e. _V $.
    opelopab.2 $e |- B e. _V $.
    opelopab.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61. $)
    opelopab $p |- ( << A , B >> e. { << x , y >> | ph } <-> ch ) $=
      ( cvv wcel cop copab wb opelopabg mp2an ) FLMGLMFGNADEOMCPHIABCDEFGLLJKQR
      $.
      $( [16-May-1995] $)

    ${
      brab.5 $e |- R = { << x , y >> | ph } $.
      $( The law of concretion for a binary relation. $)
      brab $p |- ( A R B <-> ch ) $=
        (  ) ? $.
        $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z ph $.  $d w z ps $.
    opelopabaf.x $e |- ( ps -> A. x ps ) $.
    opelopabaf.y $e |- ( ps -> A. y ps ) $.
    opelopabaf.1 $e |- A e. _V $.
    opelopabaf.2 $e |- B e. _V $.
    opelopabaf.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions."  (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    opelopabaf $p |- ( << A , B >> e. { << x , y >> | ph } <-> ps ) $=
      ( vw vz copab wcel cv wsbc ax-17 wceq cvv cop hbs1 hbsb sbequ12 sylan9bbr
      cbvopab eleq2i wa dfsbcq sbbid wb sbc2iegf mp2an syl6bb opelopaba bitri )
      EFUAZACDNZOUQADLPZQZCMPZQZMLNZOBURVCUQAVBCDMLAMRALRUTCMUBUTCMDADLUBUCDPUS
      SAUTCPVASVBADLUDUTCMUDUEUFUGVBBMLEFIJVAESZUSFSZUHVBADFQZCEQZBVEVBVFCVAQVD
      VGVEUTVFCMVECRADUSFUIUJVFCVAEUIUEETOFTOZVGBUKIJABCDEFTTGHVHCRKULUMUNUOUP
      $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d w z ch $.  $d w z ph $.
    opelopabf.x $e |- ( ps -> A. x ps ) $.
    opelopabf.y $e |- ( ch -> A. y ch ) $.
    opelopabf.1 $e |- A e. _V $.
    opelopabf.2 $e |- B e. _V $.
    opelopabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions." $)
    opelopabf $p |- ( << A , B >> e. { << x , y >> | ph } <-> ch ) $=
      ( vz vw copab cv wsbc ax-17 wceq cop wcel sbequ12 sylan9bb cbvopab eleq2i
      hbs1 hbsb sbhypf sbbid opelopab bitri ) FGUAZADEPZUBUMADNQZRZEOQZRZNOPZUB
      CUNUSUMAURDENOANSAOSUPEODADNUGUHUPEOUGDQUOTAUPEQUQTURADNUCUPEOUCUDUEUFURB
      EUQRCNOFGJKUOFTZUPBEOUTESABDNFHLUIUJBCEOGIMUIUKUL $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication.
       (Revised by Mario Carneiro, 19-May-2013.) $)
    ssopab2 $p |- ( A. x A. y ( ph -> ps ) ->
        { << x , y >> | ph } C_ { << x , y >> | ps } ) $=
      ( vz wi wal cv cop wceq wex cab copab hba1 ax-4 anim2d eximd a4s df-opab
      wa ss2abdv 3sstr4g ) ABFZDGZCGZEHCHDHIJZATZDKZCKZELUFBTZDKZCKZELACDMBCDMU
      EUIULEUEUHUKCUDCNUDUHUKFCUDUGUJDUCDNUDABUFUCDOPQRQUAACDESBCDESUB $.
      $( [19-May-2013] $) $( [27-Dec-1996] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication. $)
    ssopab2b $p |- ( { << x , y >> | ph } C_ { << x , y >> | ps } <->
               A. x A. y ( ph -> ps ) ) $=
      ( vz copab wss wi wal hbopab1 hbss hbopab2 cv cop wex cab df-opab copsexg
      wa alrimi wceq opex isseti sseq12i ss2ab ax-4 sylbi imbi12d syl5ibr ax-mp
      syl5bi exlimiv ssopab2 impbii ) ACDFZBCDFZGZABHZDIZCIUQUSCCEUOUPACDEJBCDE
      JKUQURDDEUOUPACDELBCDELKEMZCMZDMZNZUAZEOUQURHZEVCVAVBUBUCVDVEEUQVDASDOCOZ
      EPZVDBSDOCOZEPZGZVDURUOVGUPVIACDEQBCDEQUDVJURVDVFVHHZVJVKEIVKVFVHEUEVKEUF
      UGVDAVFBVHACDUTRBCDUTRUHUIUKULUJTTABCDUMUN $.
      $( [27-Dec-1996] $)
  $}

  ${
    ssopab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of ordered pair abstraction subclass from implication. $)
    ssopab2i $p |- { << x , y >> | ph } C_ { << x , y >> | ps } $=
      ( wi wal copab wss ssopab2 ax-gen mpg ) ABFZDGACDHBCDHICABCDJMDEKL $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    ssopab2dv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference of ordered pair abstraction subclass from implication. $)
    ssopab2dv $p |- ( ph -> { << x , y >> | ps } C_ { << x , y >> | ch } ) $=
      ( wi wal copab wss alrimivv ssopab2 syl ) ABCGZEHDHBDEICDEIJANDEFKBCDELM
      $.
      $( [24-Jun-2014] $) $( [19-Jan-2014] $)
  $}

  ${
    $d z ph $.  $d z x $.  $d z y $.
    $( Non-empty ordered pair class abstraction. $)
    opabn0 $p |- ( { << x , y >> | ph } =/= (/) <-> E. x E. y ph ) $=
      ( vz copab c0 wne cv wcel wex cop wceq wa elopab exbii exrot3 19.41v opex
      n0 isseti mpbiran 2exbii bitri 3bitri ) ABCEZFGDHZUEIZDJUFBHZCHZKZLZAMZCJ
      BJZDJZACJBJZDUESUGUMDABCUFNOUNULDJZCJBJUOULDBCPUPABCUPUKDJAUKADQDUJUHUIRT
      UAUBUCUD $.
      $( [10-Oct-2007] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Kuratowski relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c X. $. $( Times symbol (cross product symbol) (read: 'cross') $)
  $c `' $. $( Small elevated smiley (converse operation) $)
  $c dom $. $( Domain $)
  $c ran $. $( Range $)
  $c |` $. $( Right hook (restriction symbol) $)
  $c " $. $( Left quote (image symbol) $)
  $c Rel $. $( Relation predicate $)
  $c _I $. $( Identiy relationship $)

  $( Extend the definition of a class to include the cross product. $)
  cxp $a class ( A X. B ) $.

  $( Extend the definition of a class to include the converse of a class. $)
  ccnv $a class `' A $.

  $( Extend the definition of a class to include the domain of a class. $)
  cdm $a class dom A $.

  $( Extend the definition of a class to include the range of a class. $)
  crn $a class ran A $.

  $( Extend the definition of a class to include the restriction of a class.
     (Read:  The restriction of ` A ` to ` B ` .) $)
  cres $a class ( A |` B ) $.

  $( Extend the definition of a class to include the image of a class.  (Read:
     The image of ` B ` under ` A ` .) $)
  cima $a class ( A " B ) $.

  $( Extend the definition of a wff to include the relation predicate.  (Read:
     ` A ` is a relation.) $)
  wrel $a wff Rel A $.

  $( Extend the definition of a class to include the identity relationship. $)
  cid $a class _I $.

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Define the cross product of two classes.  Definition 9.11 of [Quine]
       p. 64. $)
    df-xp $a |- ( A X. B ) = { << x , y >> | ( x e. A /\ y e. B ) } $.

    $( Define the relation predicate.  Definition 6.4(1) of [TakeutiZaring]
       p. 23.  For alternate definitions, see ~ dfrel2 and ~ dfrel3 . $)
    df-rel $a |- ( Rel A <-> A C_ ( _V X. _V ) ) $.

    $( Define the converse of a class.  Definition 9.12 of [Quine] p. 64.  We
       use Quine's breve accent (smile) notation.  Like Quine, we use it as a
       prefix, which eliminates the need for parentheses.  Many authors use the
       postfix superscript "to the minus one."  "Converse" is Quine's
       terminology; some authors call it "inverse," especially when the
       argument is a function. $)
    df-cnv $a |- `' A = { << x , y >> | << y , x >> e. A } $.

    $( Define the domain of a class.  Definition 3 of [Suppes] p. 59.  For
       alternate definitions see ~ dfdm2 , ~ dfdm3 , and ~ dfdm4 .  The
       notation " ` dom ` " is used by Enderton; other authors sometimes use
       script D. $)
    df-dm $a |- dom A = { x | E. y << x , y >> e. A } $.

    $( Define the range of a class.  For an alternate definitions, see
       ~ dfrn2 , ~ dfrn3 , and ~ dfrn4 .  The notation " ` ran ` " is used by
       Enderton; other authors sometimes use script R or script W. $)
    df-rn $a |- ran A = dom `' A $.

    $( Define the restriction of a class.  Definition 6.6(1) of [TakeutiZaring]
       p. 24. $)
    df-res $a |- ( A |` B ) = ( A i^i ( B X. _V ) ) $.

    $( Define the image of a class.  Definition 6.6(2) of [TakeutiZaring]
       p. 24.  For an alternate definition, see ~ dfima2 . $)
    df-ima $a |- ( A " B ) = ran ( A |` B ) $.

    $( Define the identity relationship. $)
    df-id $a |- _I = { << x , y >> | x = y } $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for cross product. $)
    xpeq1 $p |- ( A = B -> ( A X. C ) = ( B X. C ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi1d opabbidv df-xp 3eqtr4g ) A
      BFZDGZAHZEGCHZIZDEJRBHZTIZDEJACKBCKQUAUCDEQSUBTABRLMNDEACODEBCOP $.
      $( [4-Jul-1994] $)

    $( Equality theorem for cross product. $)
    xpeq2 $p |- ( A = B -> ( C X. A ) = ( C X. B ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi2d opabbidv df-xp 3eqtr4g ) A
      BFZDGCHZEGZAHZIZDEJRSBHZIZDEJCAKCBKQUAUCDEQTUBRABSLMNDECAODECBOP $.
      $( [5-Jul-1994] $)

    $( Membership in a cross product.  Uses fewer axioms than ~ elxp . $)
    elxpi $p |- ( A e. ( B X. C ) -> E. x E. y ( A = << x , y >> /\
               ( x e. B /\ y e. C ) ) ) $=
      ( vz cv cop wceq wcel wa wex cab cxp eqeq1 anbi1d 2exbidv elabg ibi copab
      df-xp df-opab eqtri eleq2s ) CAGZBGZHZIZUEDJUFEJKZKZBLALZCFGZUGIZUIKZBLAL
      ZFMZDENZCUPJUKUOUKFCUPULCIZUNUJABURUMUHUIULCUGOPQRSUQUIABTUPABDEUAUIABFUB
      UCUD $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product. $)
    elxp $p |- ( A e. ( B X. C ) <-> E. x E. y ( A = << x , y >> /\
               ( x e. B /\ y e. C ) ) ) $=
      ( cxp wcel cv wa copab cop wceq wex df-xp eleq2i elopab bitri ) CDEFZGCAH
      ZDGBHZEGIZABJZGCSTKLUAIBMAMRUBCABDENOUAABCPQ $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product. $)
    elxp2 $p |- ( A e. ( B X. C ) <-> E. x e. B E. y e. C A = << x , y >> ) $=
      ( cv wcel cop wceq wrex wex cxp df-rex r19.42v anass ancom 3bitr4ri exbii
      wa an12 3bitr3i elxp ) AFZDGZCUCBFZHIZBEJZSZAKUFUDUEEGZSZSZBKZAKUGADJCDEL
      GUHULAUDUFSZBEJUIUMSZBKUHULUMBEMUDUFBENUNUKBUJUFSUDUIUFSSUKUNUDUIUFOUFUJP
      UIUDUFTQRUARUGADMABCDEUBQ $.
      $( [23-Feb-2004] $)
  $}

  $( Equality theorem for cross product.  (Contributed by FL, 31-Aug-2009.) $)
  xpeq12 $p |- ( ( A = B /\ C = D ) -> ( A X. C ) = ( B X. D ) ) $=
    ( wceq cxp xpeq1 xpeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [31-Aug-2009] $)

  ${
    xpeq1i.1 $e |- A = B $.
    $( Equality inference for cross product. $)
    xpeq1i $p |- ( A X. C ) = ( B X. C ) $=
      ( wceq cxp xpeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality inference for cross product. $)
    xpeq2i $p |- ( C X. A ) = ( C X. B ) $=
      ( wceq cxp xpeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    xpeq12i.1 $e |- A = B $.
    xpeq12i.2 $e |- C = D $.
    $( Equality inference for cross product.  (Contributed by FL,
       31-Aug-2009.) $)
    xpeq12i $p |- ( A X. C ) = ( B X. D ) $=
      ( wceq cxp xpeq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [31-Aug-2009] $)
  $}

  ${
    xpeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for cross product.  (Contributed by Jeff Madsen,
       17-Jun-2010.) $)
    xpeq1d $p |- ( ph -> ( A X. C ) = ( B X. C ) ) $=
      ( wceq cxp xpeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [17-Jun-2010] $)

    $( Equality deduction for cross product.  (Contributed by Jeff Madsen,
       17-Jun-2010.) $)
    xpeq2d $p |- ( ph -> ( C X. A ) = ( C X. B ) ) $=
      ( wceq cxp xpeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [17-Jun-2010] $)

    xpeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for cross product. $)
    xpeq12d $p |- ( ph -> ( A X. C ) = ( B X. D ) ) $=
      ( wceq cxp xpeq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d x y z w $.
    hbxp.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbxp.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for cross product.  (The proof was
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    hbxp $p |- ( y e. ( A X. B ) -> A. x y e. ( A X. B ) ) $=
      ( vz vw cxp cv wcel wa copab df-xp hblem hban hbopab hbxfreq ) ABCDIGJCKZ
      HJDKZLZGHMGHCDNUAGHABSTAABGCEOABHDFOPQR $.
      $( [12-Aug-2011] $) $( [15-Sep-2003] $)
  $}

  ${
    $d A w y z $.  $d B w y z $.  $d C w y z $.  $d D w y z $.  $d w x y z $.
    $( Distribute proper substitution through the cross product of two classes.
       ~ csbxpg is derived from the virtual deduction proof ~ csbxpgVD .
       (Contributed by Alan Sare, 10-Nov-2012. ) $)
    csbxpg $p |- ( A e. D -> [_ A / x ]_ ( B X. C ) =
                ( [_ A / x ]_ B X. [_ A / x ]_ C ) ) $=
      ( vz vw vy wcel cxp csb cv wa wex cab wsbc copab df-xp df-opab bitrd wceq
      cop eqtri csbeq2i csbabg sbcexg sbcang sbcg sbcel2g anbi12d exbidv abbidv
      3eqtrd syl6eqr ) BEIZABCDJZKZFLGLZHLZUBUAZURABCKZIZUSABDKZIZMZMZHNZGNZFOZ
      VAVCJZUOUQABUTURCIZUSDIZMZMZHNZGNZFOZKVPABPZFOVIABUPVQEUPVMGHQVQGHCDRVMGH
      FSUCUDVPAFBEUEUOVRVHFUOVRVOABPZGNVHVOGABEUFUOVSVGGUOVSVNABPZHNVGVNHABEUFU
      OVTVFHUOVTUTABPZVMABPZMVFUTVMABEUGUOWAUTWBVEUTABEUHUOWBVKABPZVLABPZMVEVKV
      LABEUGUOWCVBWDVDABURCEUIABUSDEUIUJTUJTUKTUKTULUMVJVEGHQVIGHVAVCRVEGHFSUCU
      N $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    $( The first member of an ordered pair of classes in a cross product
       belongs to first cross product argument. $)
    opelxp1 $p |- ( << A , B >> e. ( C X. D ) -> A e. C ) $=
      ( vx vy cop cxp wcel cv wceq wa wex elxp vex eqcoms eleq1d biimpa adantrr
      opth1 exlimivv sylbi ) ABGZCDHIUCEJZFJZGZKZUDCIZUEDIZLLZFMEMACIZEFUCCDNUJ
      UKEFUGUHUKUIUGUHUKUGUDACUDAKUFUCUDUEABEOTPQRSUAUB $.
      $( [28-May-2008] $)
  $}

  $( The first member of an ordered triple of classes in a cross product
     belongs to first cross product argument. $)
  otelxp1 $p |- ( << << A , B >> , C >> e. ( ( R X. S ) X. T )
          -> A e. R ) $=
    ( cop cxp wcel opelxp1 syl ) ABGZCGDEHZFHILMIADILCMFJABDEJK $.
    $( [28-May-2008] $)

  ${
    $d x y z A $.  $d x y z B $.  $d y z ph $.  $d x ps $.
    rabxp.1 $e |- ( x = << y , z >> -> ( ph <-> ps ) ) $.
    $( Membership in a class builder restricted to a cross product. $)
    rabxp $p |- { x e. ( A X. B ) | ph }
             = { << y , z >> | ( y e. A /\ z e. B /\ ps ) } $=
      ( cv cxp wcel wa cab cop wceq w3a wex crab copab elxp anbi1i anass anbi2d
      19.41vv df-3an syl6bbr pm5.32i bitri 2exbii 3bitr2i abbii df-opab 3eqtr4i
      df-rab ) CIZFGJZKZALZCMUODIZEIZNOZUSFKZUTGKZBPZLZEQDQZCMACUPRVDDESURVFCUR
      VAVBVCLZLZEQDQZALVHALZEQDQVFUQVIADEUOFGTUAVHADEUDVJVEDEVJVAVGALZLVEVAVGAU
      BVAVKVDVAVKVGBLVDVAABVGHUCVBVCBUEUFUGUHUIUJUKACUPUNVDDECULUM $.
      $( [20-Feb-2014] $)
  $}

  $( A true binary relation on a relation implies the first argument is a set.
     (This is a property of our ordered pair definition.) $)
  brrelex $p |- ( ( Rel R /\ A R B ) -> A e. _V ) $=
    (  ) ? $.
    $( [18-May-2004] $)

  ${
    brrelexi.1 $e |- Rel R $.
    $( The first argument of a binary relation exists.  (An artifact of our
       ordered pair definition.) $)
    brrelexi $p |- ( A R B -> A e. _V ) $=
      (  ) ? $.
      $( [4-Jun-1998] $)
  $}

  ${
    nprrel.1 $e |- Rel R $.
    nprrel.2 $e |- -. A e. _V $.
    $( No proper class is related to anything via any relation.  (Contributed
       by Roy F. Longton, 30-Jul-2005.) $)
    nprrel $p |- -. A R B $=
      (  ) ? $.
      $( [30-Jul-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Representation of a constant function using ordered pairs. $)
    fconstopab $p |- ( A X. { B } ) = { << x , y >> | ( x e. A /\ y = B ) } $=
      ( csn cxp cv wcel wa copab wceq df-xp elsn anbi2i opabbii eqtri ) CDEZFAG
      CHZBGZQHZIZABJRSDKZIZABJABCQLUAUCABTUBRBDMNOP $.
      $( [12-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y z C $.  $d x y z R $.
    vtoclr.1 $e |- Rel R $.
    vtoclr.2 $e |- ( ( x R y /\ y R z ) -> x R z ) $.
    $( Variable to class conversion of transitive relation. $)
    vtoclr $p |- ( C e. D -> ( ( A R B /\ B R C ) -> A R C ) ) $=
      (  ) ? $.
      $( [9-Jun-1998] $)

    ${
      vtoclrbr.3 $e |- x R x $.
      $( Variable to class conversion of transitive, reflexive relation.  (The
         proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
      vtoclrbr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        (  ) ? $.
        $( [27-Aug-2011] $) $( [9-Jun-1998] $)
    $}

    ${
      $d x B $.
      vtoclibr.3 $e |- -. x R x $.
      $( Variable to class conversion of transitive, irreflexive relation. $)
      vtoclibr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        (  ) ? $.
        $( [9-Jun-1998] $)
    $}
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    opelxp.1 $e |- B e. _V $.
    $( Ordered pair membership in a cross product.  (The proof was shortened by
       Andrew Salmon, 12-Aug-2011.) $)
    opelxp $p |- ( << A , B >> e. ( C X. D ) <-> ( A e. C /\ B e. D ) ) $=
      ( vx vy cop cxp wcel wa opelxp1 simpl cv wceq wex elxp cvv wb eleq1 mpan2
      bi2anan9 copsex2g syl5bb pm5.21nii ) ABHZCDIJZACJZUHBDJZKZABCDLUHUIMUGUFF
      NZGNZHOUKCJZULDJZKZKGPFPZUHUJFGUFCDQUHBRJUPUJSEUOUJFGABCRUKAOUMUHULBOUNUI
      UKACTULBDTUBUCUAUDUE $.
      $( [12-Aug-2011] $) $( [15-Nov-1994] $)

    $( Binary relation on a cross product. $)
    brxp $p |- ( A ( C X. D ) B <-> ( A e. C /\ B e. D ) ) $=
      (  ) ? $.
      $( [22-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    $( Ordered pair membership in a cross product. $)
    opelxpg $p |- ( B e. V ->
                    ( << A , B >> e. ( C X. D ) <-> ( A e. C /\ B e. D ) ) ) $=
      ( vx cv cop cxp wcel wa wceq opeq2 eleq1d eleq1 anbi2d vex opelxp vtoclbg
      ) AFGZHZCDIZJACJZTDJZKABHZUBJUCBDJZKFBETBLZUAUEUBTBAMNUGUDUFUCTBDOPATCDFQ
      RS $.
      $( [28-May-1995] $)
  $}

  $( Ordered pair membership in a cross product (implication). $)
  opelxpi $p |- ( ( A e. C /\ B e. D ) -> << A , B >> e. ( C X. D ) ) $=
    ( wcel cop cxp wa opelxpg biimprd anabsi7 ) ACEZBDEZABFCDGEZMNLMHABCDDIJK
    $.
    $( [28-May-1995] $)

  $( Ordered pair membership in a semi-universal class of ordered pairs. $)
  opelxpv $p |- ( A e. C <-> << A , B >> e. ( C X. _V ) ) $=
    ( wcel cop cvv opelxpi wn wa wceq opprc2 adantl opelxpg id mpbir2and adantr
    cxp elex eqeltrd pm2.61dan opelxp1 impbii ) ACDZABEZCFQZDZUCBFDZUFABCFGUCUG
    HZIUDAAEZUEUHUDUIJUCABKLUCUIUEDZUHUCUJUCAFDAACFCMUCNACROPSTABCFUAUB $.
    $( [1-Oct-2013] $)

  ${
    opelvv.1 $e |- A e. _V $.
    $( Ordered pair membership in the universal class of ordered pairs. $)
    opelvv $p |- << A , B >> e. ( _V X. _V ) $=
      ( cvv wcel cop cxp opelxpv mpbi ) ADEABFDDGECABDHI $.
      $( [22-Aug-2013] $)
  $}

  $( A property of an ordered pair of proper classes (due to our particular
     definition of ordered pair). $)
  opprc4b $p |- ( -. A e. _V <-> -. << A , B >> e. ( _V X. _V ) ) $=
    ( cvv wcel cop cxp opelxpv notbii ) ACDABECCFDABCGH $.
    $( [1-Oct-2013] $)

  ${
    $d x y z A $.  $d x y z B $.  $d y z ph $.  $d x ps $.
    ralxp.1 $e |- ( x = << y , z >> -> ( ph <-> ps ) ) $.
    $( Universal quantification restricted to a cross product is equivalent to
       a double restricted quantification.  The hypothesis specifies an
       implicit substitution. $)
    ralxp $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( cxp wral cv wcel wa cop wex wi hbra1 ax-17 hbim exlimi opelxp ralrimivv
      vex rcla4cv syl5bir wceq elxp simpl 2eximi sylbi hbral ra42 eleq1 imbi12d
      syl6bb syl5ibr syl pm2.43b ralrimiv impbii ) ACFGIZJZBEGJZDFJZVBBDEFGDKZF
      LZEKZGLMZVEVGNZVALZVBBVEVGFGEUCUAZABCVIVAHUDUEUBVDACVAVDCKZVALZAVMVLVIUFZ
      EOZDOZVDVMAPZPZVMVNVHMZEODOVPDEVLFGUGVSVNDEVNVHUHUIUJVOVRDVDVQDVCDFQVQDRS
      VNVREVDVQEVCEDFVFERBEGQUKVQERSVDVQVNVHBPBDEFGULVNVMVHABVNVMVJVHVLVIVAUMVK
      UOHUNUPTTUQURUSUT $.
      $( [7-Feb-2004] $)

    $( Existential quantification restricted to a cross product is equivalent
       to a double restricted quantification. $)
    rexxp $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( wn cxp wral wrex cv cop wceq notbid ralxp ralnex ralbii dfrex2 3bitr4i
      bitri notbii ) AIZCFGJZKZIBEGLZIZDFKZIACUELUGDFLUFUIUFBIZEGKZDFKUIUDUJCDE
      FGCMDMEMNOABHPQUKUHDFBEGRSUBUCACUETUGDFTUA $.
      $( [14-Sep-2006] $) $( [11-Nov-1995] $)
  $}

  ${
    $d u v w x y A $.  $d u v w x y z B $.  $d u v w ph $.  $d u v w ps $.
    ralxpf.1 $e |- ( ph -> A. y ph ) $.
    ralxpf.2 $e |- ( ph -> A. z ph ) $.
    ralxpf.3 $e |- ( ps -> A. x ps ) $.
    ralxpf.4 $e |- ( x = << y , z >> -> ( ph <-> ps ) ) $.
    $( Version of ~ ralxp with bound-variable hypotheses. $)
    ralxpf $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( vw vu vv wral cv ax-17 wcel wceq vex wsbc cbvralsv ralbii hbral sbequ12
      cxp hbs1 ralbidv cbvral cop wa wex wb eqvinop cvv wal hbsbcg ax-mp sbhypf
      wi hbbi opth sylan9bb sylbi exlimi ralxp 3bitr4ri bitri ) ACFGUFZOACLPZUA
      ZLVIOZBEGOZDFOZACLVIUBBDMPZUAZEGOZMFOVPENPZUAZNGOZMFOVNVLVQVTMFVPENGUBUCV
      MVQDMFVMMQVPDEGEPZGRDQBDMUGZUDDPZVOSZBVPEGBDMUEZUHUIVKVSLMNFGVJVOVRUJZSVJ
      WCWAUJZSZWGWFSZUKZEULZDULVKVSUMZDEVJVOVRMTNTZUNWKWLDVKVSDVJUORZVKVKDUPUTL
      TZADCCVJUOCPZVJRZDQHUQURVRUORVSVSDUPUTWMVPDECVRUOWPVRRDQWBUQURVAWJWLEVKVS
      EWNVKVKEUPUTWOAECCVJUOWQEQIUQURVPENUGVAWHVKBWIVSABCLWGJKUSWIWDWAVRSZUKBVS
      UMWCWAVOVRDTETWMVBWDBVPWRVSWEVPENUEVCVDVCVEVEVDVFVGVH $.
      $( [20-Dec-2008] $) $( [18-Aug-2006] $)

    $( Version of ~ rexxp with bound-variable hypotheses. $)
    rexxpf $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( wn cxp wral wrex hbn cv cop wceq dfrex2 notbid ralxpf ralnex 3bitr4i
      ralbii bitri notbii ) ALZCFGMZNZLBEGOZLZDFNZLACUIOUKDFOUJUMUJBLZEGNZDFNUM
      UHUNCDEFGADHPAEIPBCJPCQDQEQRSABKUAUBUOULDFBEGUCUEUFUGACUITUKDFTUD $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d w x y A $.  $d w x y z B $.  $d w C $.  $d w D $.
    iunxpf.1 $e |- ( w e. C -> A. y w e. C ) $.
    iunxpf.2 $e |- ( w e. C -> A. z w e. C ) $.
    iunxpf.3 $e |- ( w e. D -> A. x w e. D ) $.
    iunxpf.4 $e |- ( x = << y , z >> -> C = D ) $.
    $( Indexed union on a cross product is equals a double indexed union.  The
       hypothesis specifies an implicit substitution. $)
    iunxpf $p |- U_ x e. ( A X. B ) C = U_ y e. A U_ z e. B D $=
      ( cxp ciun cv wcel wrex cop wceq eliun eleq2d rexxpf rexbii bitri 3bitr4i
      eqriv ) DAEFMZGNZBECFHNZNZDOZGPZAUGQUKHPZCFQZBEQZUKUHPUKUJPZULUMABCEFIJKA
      OBOCORSGHUKLUAUBAUKUGGTUPUKUIPZBEQUOBUKEUITUQUNBECUKFHTUCUDUEUF $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    $( Justification theorem for an ordered pair definition that works for any
       classes, including proper classes.  This is a possible definition
       implied by the footnote in [Jech] p. 78, which says, "The sophisticated
       reader will not object to our use of a pair of classes." $)
    opthprc $p |- ( ( ( A X. { (/) } ) u. ( B X. { { (/) } } ) ) =
                    ( ( C X. { (/) } ) u. ( D X. { { (/) } } ) )
                  <-> ( A = C /\ B = D ) ) $=
      ( vx c0 cxp wceq wa wo 0ex opelxp mpbiran2 bianfi bitr4i orbi12i 3bitr4ri
      wcel elun p0ex csn cun cv cop eleq2 snid 0nep0 elsnc nemtbir biorfi eqrdv
      3bitr4g eqcom bitri wn wb biorf ax-mp jca xpeq1 uneq12 syl2an impbii ) AF
      UAZGZBVDUAZGZUBZCVDGZDVFGZUBZHZACHZBDHZIVLVMVNVLEACVLEUCZFUDZVHRZVPVKRZVO
      ARZVOCRZVHVKVPUEVPVERZVPVGRZJVSFVFRZJVQVSWAVSWBWCWAVSFVDRZVOFAVDKLFKUFZMW
      BVOBRZWCIWCVOFBVFKLWCWFWCFVDUGFVDKUHUIZNOPVPVEVGSWCVSWGUJQVPVIRZVPVJRZJVT
      WCJVRVTWHVTWIWCWHVTWDVOFCVDKLWEMWIVODRZWCIWCVOFDVFKLWCWJWGNOPVPVIVJSWCVTW
      GUJQULUKVLEBDVLVOVDUDZVHRZWKVKRZWFWJVHVKWKUEWKVERZWKVGRZJVDVDRZWFJZWLWFWN
      WPWOWFWNVSWPIWPVOVDAVDTLWPVSWPFVDUGWPVDFHFVDHVDFTUHVDFUMUNUIZNOWOWFVDVFRZ
      VOVDBVFTLVDTUFZMPWKVEVGSWPUOZWFWQUPWRWPWFUQURQWKVIRZWKVJRZJWPWJJZWMWJXBWP
      XCWJXBVTWPIWPVOVDCVDTLWPVTWRNOXCWJWSVOVDDVFTLWTMPWKVIVJSXAWJXDUPWRWPWJUQU
      RQULUKUSVMVEVIHVGVJHVLVNACVDUTBDVFUTVEVIVGVJVAVBVC $.
      $( [28-Sep-2003] $)
  $}

  ${
    brelg.1 $e |- R C_ ( C X. D ) $.
    $( Two things in a binary relation belong to the relation's domain. $)
    brelg $p |- ( B e. V -> ( A R B -> ( A e. C /\ B e. D ) ) ) $=
      (  ) ? $.
      $( [17-May-1996] $)
  $}

  ${
    brel.1 $e |- B e. _V $.
    brel.2 $e |- R C_ ( C X. D ) $.
    $( Membership in superset of binary relation. $)
    brel $p |- ( A R B -> ( A e. C /\ B e. D ) ) $=
      (  ) ? $.
      $( [16-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a cross product. $)
    elxp3 $p |- ( A e. ( B X. C ) <->
            E. x E. y ( << x , y >> = A /\ << x , y >> e. ( B X. C ) ) ) $=
      ( cxp wcel cv cop wceq wa wex elxp eqcom vex opelxp anbi12i 2exbii bitr4i
      ) CDEFZGCAHZBHZIZJZUADGUBEGKZKZBLALUCCJZUCTGZKZBLALABCDEMUIUFABUGUDUHUEUC
      CNUAUBDEBOPQRS $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Distributive law for cross product over union.  Theorem 103 of [Suppes]
       p. 52. $)
    xpundi $p |- ( A X. ( B u. C ) ) = ( ( A X. B ) u. ( A X. C ) ) $=
      ( vx vy cv wcel cun wa copab cxp wo elun anbi2i andi bitri opabbii unopab
      eqtr4i df-xp uneq12i 3eqtr4i ) DFAGZEFZBCHZGZIZDEJZUCUDBGZIZDEJZUCUDCGZIZ
      DEJZHZAUEKABKZACKZHUHUJUMLZDEJUOUGURDEUGUCUIULLZIURUFUSUCUDBCMNUCUIULOPQU
      JUMDERSDEAUETUPUKUQUNDEABTDEACTUAUB $.
      $( [12-Aug-2004] $)

    $( Distributive law for cross product over union.  Similar to Theorem 103
       of [Suppes] p. 52. $)
    xpundir $p |- ( ( A u. B ) X. C ) = ( ( A X. C ) u. ( B X. C ) ) $=
      ( vx vy cv cun wcel wa copab cxp wo elun anbi1i andir bitri unopab eqtr4i
      opabbii df-xp uneq12i 3eqtr4i ) DFZABGZHZEFCHZIZDEJZUCAHZUFIZDEJZUCBHZUFI
      ZDEJZGZUDCKACKZBCKZGUHUJUMLZDEJUOUGURDEUGUIULLZUFIURUEUSUFUCABMNUIULUFOPS
      UJUMDEQRDEUDCTUPUKUQUNDEACTDEBCTUAUB $.
      $( [30-Sep-2002] $)
  $}

  ${
    $d w y z A $.  $d w y z B $.  $d w x y z C $.
    $( Distributive law for cross product over indexed union.  (Revised by
       Mario Carneiro, 27-Apr-2014.) $)
    xpiundi $p |- ( C X. U_ x e. A B ) = U_ x e. A ( C X. B ) $=
      ( vz vw vy ciun cxp cv wrex wcel wa wex eliun exbii df-rex rexbii 3bitr4i
      elxp2 cop wceq rexcom anbi1i rexcom4 r19.41v 3bitri eqriv ) EDABCHZIZABDC
      IZHZEJZFJGJZUAUBZGUIKZFDKZUMUKLZABKZUMUJLUMULLUOGCKZABKZFDKUTFDKZABKUQUSU
      TFADBUCUPVAFDUNUILZUOMZGNUNCLZABKZUOMZGNZUPVAVDVGGVCVFUOAUNBCOUDPUOGUIQVA
      VEUOMZGNZABKVIABKZGNVHUTVJABUOGCQRVIAGBUEVKVGGVEUOABUFPUGSRURVBABFGUMDCTR
      SFGUMDUITAUMBUKOSUH $.
      $( [27-Apr-2014] $)

    $( Distributive law for cross product over indexed union.  (Revised by
       Mario Carneiro, 27-Apr-2014.) $)
    xpiundir $p |- ( U_ x e. A B X. C ) = U_ x e. A ( B X. C ) $=
      ( vz vy vw ciun cxp cv cop wrex wcel wa df-rex rexbii eliun elxp2 3bitr4i
      wex wceq rexcom4 anbi1i r19.41v bitr4i exbii 3bitr4ri eqriv ) EABCHZDIZAB
      CDIZHZEJZFJZGJKUAGDLZFUILZUMUKMZABLZUMUJMUMULMUNUIMZUONZFTZUOFCLZABLZUPUR
      UNCMZUONZFTZABLVEABLZFTVCVAVEAFBUBVBVFABUOFCOPUTVGFUTVDABLZUONVGUSVHUOAUN
      BCQUCVDUOABUDUEUFUGUOFUIOUQVBABFGUMCDRPSFGUMUIDRAUMBUKQSUH $.
      $( [27-Apr-2014] $)
  $}

  $( The cross product of two unions. $)
  xpun $p |- ( ( A u. B ) X. ( C u. D ) ) =
            ( ( ( A X. C ) u. ( A X. D ) ) u. ( ( B X. C ) u. ( B X. D ) ) ) $=
    ( cun cxp xpundi xpundir uneq12i un4 3eqtri ) ABEZCDEFLCFZLDFZEACFZBCFZEZAD
    FZBDFZEZEOREPSEELCDGMQNTABCHABDHIOPRSJK $.
    $( [12-Aug-2004] $)

  ${
    $d w x y z A $.
    $( Membership in universal class of ordered pairs. $)
    elvv $p |- ( A e. ( _V X. _V ) <-> E. x E. y A = << x , y >> ) $=
      ( cvv cxp wcel cv cop wceq wa wex elxp vex pm3.2i biantru 2exbii bitr4i )
      CDDEFCAGZBGZHIZRDFZSDFZJZJZBKAKTBKAKABCDDLTUDABUCTUAUBAMBMNOPQ $.
      $( [4-Jul-1994] $)

    $( Membership in universal class of ordered triples. $)
    elvvv $p |- ( A e. ( ( _V X. _V ) X. _V )
                 <-> E. x E. y E. z A = << << x , y >> , z >> ) $=
      ( vw cvv cxp wcel cv cop wceq wa wex elxp anass elvv anbi2i 2exbii bitr3i
      vex biantru ancom 19.42vv bitr2i 3bitr3i exrot4 excom opex eqeq2d ceqsexv
      opeq1 exbii bitri 3bitri ) DFFGZFGHDEIZCIZJZKZUPUOHZUQFHZLLZCMEMUPAIZBIZJ
      ZKZUSLZBMAMZCMEMZDVEUQJZKZCMZBMAMZECDUOFNVBVHECVBUSUTLZVALZVHUSUTVAOVNUSV
      FBMAMZLZVOVHUTVPUSABUPPQVAVNCTUAVHUSVFLZBMAMVQVGVRABVFUSUBRUSVFABUCUDUESR
      VIVGCMEMZBMAMVMVGABECUFVSVLABVSVGEMZCMVLVGECUGVTVKCUSVKEVEVCVDUHVFURVJDUP
      VEUQUKUIUJULUMRSUN $.
      $( [17-Dec-2008] $)

    $( An ordered pair contains its union. $)
    elvvuni $p |- ( A e. ( _V X. _V ) -> U. A e. A ) $=
      ( vx vy cvv cxp wcel cv cop wceq wex cuni elvv cpr uniop eqeltri unieq id
      opi2 eleq12d mpbiri exlimivv sylbi ) ADDEFABGZCGZHZIZCJBJAKZAFZBCALUFUHBC
      UFUHUEKZUEFUIUCUDMUEUCUDNUCUDROUFUGUIAUEAUEPUFQSTUAUB $.
      $( [16-Sep-2006] $)
  $}

  $( Intersection of binary relation with cross product. $)
  brinxp2 $p |- ( B e. S -> ( A ( R i^i ( C X. D ) ) B <->
                ( A e. C /\ B e. D /\ A R B ) ) ) $=
    (  ) ? $.
    $( [3-Mar-2007] $)

  $( Intersection of binary relation with cross product. $)
  brinxp $p |- ( ( A e. C /\ B e. D ) ->
               ( A R B <-> A ( R i^i ( C X. D ) ) B ) ) $=
    (  ) ? $.
    $( [9-Mar-1997] $)

  ${
    $d x y A $.  $d x y B $.
    $( An abstraction relation is a subset of a related cross product. $)
    opabssxp $p |- { << x , y >> | ( ( x e. A /\ y e. B ) /\ ph ) }
                   C_ ( A X. B ) $=
      ( cv wcel wa copab cxp simpl ssopab2i df-xp sseqtr4i ) BFDGCFEGHZAHZBCIOB
      CIDEJPOBCOAKLBCDEMN $.
      $( [16-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ps $.
    optocl.1 $e |- D = ( B X. C ) $.
    optocl.2 $e |- ( << x , y >> = A -> ( ph <-> ps ) ) $.
    optocl.3 $e |- ( ( x e. B /\ y e. C ) -> ph ) $.
    $( Implicit substitution of class for ordered pair. $)
    optocl $p |- ( A e. D -> ps ) $=
      ( wcel cxp eleq2i cv cop wceq wa wex sylbi vex opelxp syl5ib imp exlimivv
      elxp3 ) EHLEFGMZLZBHUGEINUHCOZDOZPZEQZUKUGLZRZDSCSBCDEFGUFUNBCDULUMBUMAUL
      BUMUIFLUJGLRAUIUJFGDUAUBKTJUCUDUETT $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y ps $.  $d z w ch $.  $d z w R $.
    2optocl.1 $e |- R = ( C X. D ) $.
    2optocl.2 $e |- ( << x , y >> = A -> ( ph <-> ps ) ) $.
    2optocl.3 $e |- ( << z , w >> = B -> ( ps <-> ch ) ) $.
    2optocl.4 $e |- ( ( ( x e. C /\ y e. D ) /\ ( z e. C /\ w e. D ) ) ->
                   ph ) $.
    $( Implicit substitution of classes for ordered pairs. $)
    2optocl $p |- ( ( A e. R /\ B e. R ) -> ch ) $=
      ( wcel wi cv cop wceq imbi2d wa ex optocl com12 impcom ) ILQHLQZCUHBRUHCR
      FGIJKLMFSZGSZTIUABCUHOUBUHUIJQUJKQUCZBUKARUKBRDEHJKLMDSZESZTHUAABUKNUBULJ
      QUMKQUCUKAPUDUEUFUEUG $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d z w v u B $.  $d v u C $.  $d x y z w v u D $.
    $d x y z w v u F $.  $d z w v u R $.  $d x y ps $.  $d z w ch $.
    $d v u th $.
    3optocl.1 $e |- R = ( D X. F ) $.
    3optocl.2 $e |- ( << x , y >> = A -> ( ph <-> ps ) ) $.
    3optocl.3 $e |- ( << z , w >> = B -> ( ps <-> ch ) ) $.
    3optocl.4 $e |- ( << v , u >> = C -> ( ch <-> th ) ) $.
    3optocl.5 $e |- ( ( ( x e. D /\ y e. F ) /\ ( z e. D /\ w e. F )
                    /\ ( v e. D /\ u e. F ) ) -> ph ) $.
    $( Implicit substitution of classes for ordered pairs. $)
    3optocl $p |- ( ( A e. R /\ B e. R /\ C e. R ) -> th ) $=
      ( wcel wa wi cv cop wceq imbi2d 3expia 2optocl com12 optocl impcom 3impa
      ) KOUBZLOUBZMOUBZDUQUOUPUCZDURCUDURDUDIJMNPOQIUEZJUEZUFMUGCDURTUHURUSNUBU
      TPUBUCZCVAAUDVABUDVACUDEFGHKLNPOQEUEZFUEZUFKUGABVARUHGUEZHUEZUFLUGBCVASUH
      VBNUBVCPUBUCVDNUBVEPUBUCVAAUAUIUJUKULUMUN $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u S $.  $d x y ph $.  $d z w v u ps $.
    opbrop.1 $e |- ( ( ( z = A /\ w = B ) /\ ( v = C /\ u = D ) ) ->
                     ( ph <-> ps ) ) $.
    opbrop.2 $e |- R = { << x , y >> | ( ( x e. ( S X. S ) /\
                      y e. ( S X. S ) ) /\
                      E. z E. w E. v E. u ( ( x = << z , w >> /\
                      y = << v , u >> ) /\ ph ) ) } $.
    $( Ordered pair membership in a relation.  Special case. $)
    opbrop $p |- ( ( ( A e. S /\ B e. S ) /\ ( C e. S /\ D e. S ) ) ->
                   ( << A , B >> R << C , D >> <-> ps ) ) $=
      (  ) ? $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x y z A $.
    $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
       of [Monk1] p. 37. $)
    xp0r $p |- ( (/) X. A ) = (/) $=
      ( vz vx vy c0 cxp cv wcel cop wceq wa wex elxp noel simprl mto nex 2false
      bitri eqriv ) BEAFZEBGZUAHUBCGZDGZIJZUCEHZUDAHZKKZDLZCLZUBEHZCDUBEAMUJUKU
      ICUHDUHUFUCNUEUFUGOPQQUBNRST $.
      $( [4-Jul-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( The empty set is not a member of a cross product. $)
    0nelxp $p |- -. (/) e. ( A X. B ) $=
      ( vx vy c0 cxp wcel cv cop wceq wa wex csn noel opi1 eleq2 mpbiri intnanr
      mto nex elxp mtbir ) EABFGECHZDHZIZJZUCAGUDBGKZKZDLZCLUICUHDUFUGUFUCMZEGZ
      UJNUFUKUJUEGUCUDOEUEUJPQSRTTCDEABUAUB $.
      $( [2-May-1996] $)

    $( A member of a cross product (ordered pair) doesn't contain the empty
       set. $)
    0nelelxp $p |- ( C e. ( A X. B ) -> -. (/) e. C ) $=
      ( vx vy cxp wcel cv cop wceq wa wex c0 elxp cvv vex notnoti opprc1b mtbi
      wn eleq2 mtbiri adantr exlimivv sylbi ) CABFGCDHZEHZIZJZUFAGUGBGKZKZELDLM
      CGZTZDECABNUKUMDEUIUMUJUIULMUHGZUFOGZTUNUODPQUFUGRSCUHMUAUBUCUDUE $.
      $( [15-Dec-2008] $)
  $}

  $( Equality theorem for the relation predicate. $)
  releq $p |- ( A = B -> ( Rel A <-> Rel B ) ) $=
    ( wceq cvv cxp wss wrel sseq1 df-rel 3bitr4g ) ABCADDEZFBKFAGBGABKHAIBIJ $.
    $( [1-Aug-1994] $)

  ${
    releqi.1 $e |- A = B $.
    $( Equality inference for the relation predicate. $)
    releqi $p |- ( Rel A <-> Rel B ) $=
      ( wceq wrel wb releq ax-mp ) ABDAEBEFCABGH $.
      $( [8-Dec-2006] $)
  $}

  ${
    releqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for the relation predicate. $)
    releqd $p |- ( ph -> ( Rel A <-> Rel B ) ) $=
      ( wceq wrel wb releq syl ) ABCEBFCFGDBCHI $.
      $( [8-Mar-2014] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbrel.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for a relation. $)
    hbrel $p |- ( Rel A -> A. x Rel A ) $=
      ( wrel cvv cxp wss df-rel cv wcel ax-17 hbss hbxfrbi ) CECFFGZHACIABCODBJ
      OKALMN $.
      $( [31-Jan-2004] $)
  $}

  $( Subclass theorem for relation predicate.  Theorem 2 of [Suppes] p. 58. $)
  relss $p |- ( A C_ B -> ( Rel B -> Rel A ) ) $=
    ( wss cvv cxp wrel sstr2 df-rel 3imtr4g ) ABCBDDEZCAJCBFAFABJGBHAHI $.
    $( [15-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A subclass relationship depends only on a relation's ordered pairs.
       Theorem 3.2(i) of [Monk1] p. 33.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    ssrel $p |- ( Rel A -> ( A C_ B <->
                A. x A. y ( << x , y >> e. A -> << x , y >> e. B ) ) ) $=
      ( vz wrel wss cv cop wcel wi wal ssel alrimivv wceq wex eleq1 imbi12d cvv
      dfss2 biimprcd 2alimi 19.23vv sylib com23 alimdv df-rel elvv imbi2i albii
      a2d cxp 3bitri 3imtr4g com12 impbid2 ) CFZCDGZAHBHIZCJZUSDJZKZBLALZURVBAB
      CDUSMNVCUQURVCEHZCJZVDUSOZBPAPZKZELZVEVDDJZKZELUQURVCVHVKEVCVEVGVJVCVGVEV
      JVCVFVKKZBLALVGVKKVBVLABVFVKVBVFVEUTVJVAVDUSCQVDUSDQRUAUBVFVKABUCUDUEUKUF
      UQCSSULZGVEVDVMJZKZELVICUGECVMTVOVHEVNVGVEABVDUHUIUJUMECDTUNUOUP $.
      $( [27-Aug-2011] $) $( [2-Aug-1994] $)

    $( Extensionality principle for relations.  Theorem 3.2(ii) of [Monk1]
       p. 33. $)
    eqrel $p |- ( ( Rel A /\ Rel B ) -> ( A = B <->
                A. x A. y ( << x , y >> e. A <-> << x , y >> e. B ) ) ) $=
      ( wrel wa wss cv cop wcel wi wal wceq ssrel bi2anan9 eqss 2albiim 3bitr4g
      wb ) CEZDEZFCDGZDCGZFAHBHIZCJZUDDJZKBLALZUFUEKBLALZFCDMUEUFSBLALTUBUGUAUC
      UHABCDNABDCNOCDPUEUFABQR $.
      $( [2-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    relssi.1 $e |- Rel A $.
    relssi.2 $e |- ( << x , y >> e. A -> << x , y >> e. B ) $.
    $( Inference from subclass principle for relations. $)
    relssi $p |- A C_ B $=
      ( wss cv cop wcel wi wal wrel wb ssrel ax-mp ax-gen mpgbir ) CDGZAHBHIZCJ
      TDJKZBLZACMSUBALNEABCDOPUABFQR $.
      $( [31-Mar-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ph $.
    relssdv.1 $e |- ( ph -> Rel A ) $.
    relssdv.2 $e |- ( ph -> ( << x , y >> e. A -> << x , y >> e. B ) ) $.
    $( Deduction from subclass principle for relations. $)
    relssdv $p |- ( ph -> A C_ B ) $=
      ( wss cv cop wcel wi wal alrimivv wrel wb ssrel syl mpbird ) ADEHZBICIJZD
      KUAEKLZCMBMZAUBBCGNADOTUCPFBCDEQRS $.
      $( [11-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqrelriv.1 $e |- ( << x , y >> e. A <-> << x , y >> e. B ) $.
    $( Inference from extensionality principle for relations.  (Contributed by
       FL, 15-Oct-2012.) $)
    eqrelriv $p |- ( ( Rel A /\ Rel B ) -> A = B ) $=
      ( wrel wa wceq cv cop wcel wb wal gen2 eqrel mpbiri ) CFDFGCDHAIBIJZCKQDK
      LZBMAMRABENABCDOP $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqreliiv.1 $e |- Rel A $.
    eqreliiv.2 $e |- Rel B $.
    eqreliiv.3 $e |- ( << x , y >> e. A <-> << x , y >> e. B ) $.
    $( Inference from extensionality principle for relations. $)
    eqrelriiv $p |- A = B $=
      ( wrel wceq eqrelriv mp2an ) CHDHCDIEFABCDGJK $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqbrriv.1 $e |- Rel A $.
    eqbrriv.2 $e |- Rel B $.
    eqbrriv.3 $e |- ( x A y <-> x B y ) $.
    $( Inference from extensionality principle for relations. $)
    eqbrriv $p |- A = B $=
      (  ) ? $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d ph x $.  $d ph y $.
    eqrelrdv.1 $e |- Rel A $.
    eqrelrdv.2 $e |- Rel B $.
    eqrelrdv.3 $e |- ( ph -> ( << x , y >> e. A <-> << x , y >> e. B ) ) $.
    $( Deduce equality of relations from equivalence of membership.
       (Contributed by Rodolfo Medina, 10-Oct-2010.) $)
    eqrelrdv $p |- ( ph -> A = B ) $=
      ( cv cop wcel wb wal wceq alrimivv wrel eqrel mp2an sylibr ) ABICIJZDKTEK
      LZCMBMZDENZAUABCHODPEPUCUBLFGBCDEQRS $.
      $( [10-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d ph x $.  $d ph y $.
    eqrelrdv2.1 $e |- ( ph
       -> ( << x , y >> e. A <-> << x , y >> e. B ) ) $.
    $( A version of ~ eqrelrdv .  (Contributed by Rodolfo Medina,
       10-Oct-2010.) $)
    eqrelrdv2 $p |- ( ( ( Rel A /\ Rel B ) /\ ph ) -> A = B ) $=
      ( wrel wa wceq cv cop wcel wb wal alrimivv adantl eqrel adantr mpbird ) D
      GEGHZAHDEIZBJCJKZDLUBELMZCNBNZAUDTAUCBCFOPTUAUDMABCDEQRS $.
      $( [10-Oct-2010] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.
    $( A subclass relationship determined by ordered triples.  Use ~ relrelss
       to express the antecedent in terms of the relation predicate.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    ssrelrel $p |- ( A C_ ( ( _V X. _V ) X. _V ) -> ( A C_ B <->
                   A. x A. y A. z ( << << x , y >> , z >> e. A
                       -> << << x , y >> , z >> e. B ) ) ) $=
      ( vw cvv cxp wss cv cop wcel wi wal ssel alrimiv wex eleq1 sylib dfss2
      alrimivv wceq elvvv imbi12d biimprcd alimi 19.23v 2alimi syl5bi com23 a2d
      19.23vv alimdv 3imtr4g com12 impbid2 ) DGGHGHZIZDEIZAJBJKCJKZDLZUTELZMZCN
      ZBNANZUSVDABUSVCCDEUTOPUAVEURUSVEFJZDLZVFUQLZMZFNVGVFELZMZFNURUSVEVIVKFVE
      VGVHVJVEVHVGVJVHVFUTUBZCQZBQAQZVEVKABCVFUCVEVMVKMZBNANVNVKMVDVOABVDVLVKMZ
      CNVOVCVPCVLVKVCVLVGVAVJVBVFUTDRVFUTERUDUEUFVLVKCUGSUHVMVKABULSUIUJUKUMFDU
      QTFDETUNUOUP $.
      $( [27-Aug-2011] $) $( [17-Dec-2008] $)

    $( Extensionality principle for ordered triples (used by 2-place operations
       ~ df-oprab ), analogous to ~ eqrel .  Use ~ relrelss to express the
       antecedent in terms of the relation predicate. $)
    eqrelrel $p |- ( ( A u. B ) C_ ( ( _V X. _V ) X. _V ) -> ( A = B <->
                   A. x A. y A. z ( << << x , y >> , z >> e. A
                       <-> << << x , y >> , z >> e. B ) ) ) $=
      ( cun cvv cxp wss wa wceq cv cop wcel wb wal unss wi ssrelrel bi2anan9
      eqss 2albiim albii 19.26 bitri 3bitr4g sylbir ) DEFGGHGHZIDUHIZEUHIZJZDEK
      ZALBLMCLMZDNZUMENZOCPBPZAPZODEUHQUKDEIZEDIZJUNUORCPBPZAPZUOUNRCPBPZAPZJZU
      LUQUIURVAUJUSVCABCDESABCEDSTDEUAUQUTVBJZAPVDUPVEAUNUOBCUBUCUTVBAUDUEUFUG
      $.
      $( [17-Dec-2008] $)
  $}

  ${
    $d x y A $.
    $( A member of a relation is an ordered pair. $)
    elrel $p |- ( ( Rel R /\ A e. R ) -> E. x E. y A = << x , y >> ) $=
      ( wrel wcel wa cvv cxp cv cop wceq wex wss df-rel biimpi sseld elvv sylib
      imp ) DEZCDFZGCHHIZFZCAJBJKLBMAMUAUBUDUADUCCUADUCNDOPQTABCRS $.
      $( [17-Sep-2006] $)
  $}

  ${
    relsn.1 $e |- A e. _V $.
    $( A singleton is a relation iff it is an ordered pair. $)
    relsn $p |- ( Rel { A } <-> A e. ( _V X. _V ) ) $=
      ( csn wrel cvv cxp wss wcel df-rel snss bitr4i ) ACZDLEEFZGAMHLIAMBJK $.
      $( [24-Sep-2013] $)

    $( A singleton of an ordered pair is a relation. $)
    relsnop $p |- Rel { << A , B >> } $=
      ( cop csn wrel cvv cxp wcel opelvv opex relsn mpbir ) ABDZEFNGGHIABCJNABK
      LM $.
      $( [17-May-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    $( Subset theorem for cross product.  Generalization of Theorem 101 of
       [Suppes] p. 52.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    xpss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A X. C ) C_ ( B X. D ) ) $=
      ( vx vy wss wa cv wcel copab cxp ssel im2anan9 ssopab2dv df-xp 3sstr4g )
      ABGZCDGZHZEIZAJZFIZCJZHZEFKUABJZUCDJZHZEFKACLBDLTUEUHEFRUBUFSUDUGABUAMCDU
      CMNOEFACPEFBDPQ $.
      $( [27-Aug-2011] $) $( [26-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is included in the ordered pair universe.  Exercise 3 of
       [TakeutiZaring] p. 25. $)
    xpss $p |- ( A X. B ) C_ ( _V X. _V ) $=
      ( cvv wss cxp ssv xpss12 mp2an ) ACDBCDABECCEDAFBFACBCGH $.
      $( [2-Aug-1994] $)
  $}

  $( A cross product is a relation.  Theorem 3.13(i) of [Monk1] p. 37. $)
  relxp $p |- Rel ( A X. B ) $=
    ( cxp wrel cvv wss xpss df-rel mpbir ) ABCZDJEECFABGJHI $.
    $( [2-Aug-1994] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss1 $p |- ( A C_ B -> ( A X. C ) C_ ( B X. C ) ) $=
    ( wss cxp ssid xpss12 mpan2 ) ABDCCDACEBCEDCFABCCGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss2 $p |- ( A C_ B -> ( C X. A ) C_ ( C X. B ) ) $=
    ( wss cxp ssid xpss12 mpan ) CCDABDCAECBEDCFCCABGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  ${
    $d A x y z $.  $d B x y z $.
    $( A cross product is included in the power of the power of the union of
       its arguments. $)
    xpsspw $p |- ( A X. B ) C_ ~P ~P ( A u. B ) $=
      ( vz vx vy cun cpw cv wcel wss wceq wa wex csn cpr snssi sseq1 syl5ibrcom
      syl syl5eqss cxp cop elxpi df-op wo elpr ssun3 adantr df-pr ssun4 anim12i
      vex unss sylib jaod elpw syl6ibr syl5bi ssrdv biimpar sylan2 sylibr ssriv
      exlimivv ) CABUAZABFZGZGZCHZVEIZVIVGJZVIVHIVJVIDHZEHZUBZKZVLAIZVMBIZLZLZE
      MDMVKDEVIABUCVSVKDEVRVOVNVGJZVKVRVNVLNZVLVMOZOZVGVLVMUDVRCWCVGVIWCIVIWAKZ
      VIWBKZUEZVRVIVGIZVIWAWBCULZUFVRWFVIVFJZWGVRWDWIWEVRWIWDWAVFJZVPWJVQVPWAAJ
      WJVLAPWAABUGSZUHVIWAVFQRVRWIWEWBVFJVRWBWAVMNZFZVFVLVMUIVRWJWLVFJZLWMVFJVP
      WJVQWNWKVQWLBJWNVMBPWLBAUJSUKWAWLVFUMUNTVIWBVFQRUOVIVFWHUPUQURUSTVOVKVTVI
      VNVGQUTVAVDSVIVGWHUPVBVC $.
      $( [13-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A cross product is included in the power of the power of the union of
       its arguments. $)
    xpsspwOLD $p |- ( A X. B ) C_ ~P ~P ( A u. B ) $=
      ( vx vy cxp cun cpw relxp cv cop wcel wa csn cpr wss snssi syl elpw sylib
      sylibr opelxp ssun3 snex adantr df-pr ssun4 anim12i unss syl5eqss zfpair2
      vex jca prex df-op eleq1i prss 3bitr4ri sylbi relssi ) CDABEZABFZGZGZABHC
      IZDIZJZUTKVDAKZVEBKZLZVFVCKZVDVEABDUKUAVIVDMZVBKZVDVENZVBKZLZVJVIVLVNVGVL
      VHVGVKVAOZVLVGVKAOVPVDAPVKABUBQZVKVAVDUCZRTUDVIVMVAOVNVIVMVKVEMZFZVAVDVEU
      EVIVPVSVAOZLVTVAOVGVPVHWAVQVHVSBOWAVEBPVSBAUFQUGVKVSVAUHSUIVMVACDUJZRTULV
      KVMNZVCKWCVBOVJVOWCVBVKVMUMRVFWCVCVDVEUNUOVKVMVBVRWBUPUQSURUS $.
      $( [13-Sep-2006] $)
  $}

  $( The double class union of a cross product is included in the union of its
     arguments. $)
  unixpss $p |- U. U. ( A X. B ) C_ ( A u. B ) $=
    ( cxp cuni cun cpw wss xpsspw uniss ax-mp unipw sseqtri ) ABCZDZDZABEZFZDZP
    NQGORGNQFZDZQMSGNTGABHMSIJQKLNQIJPKL $.
    $( [16-Sep-2006] $)

  $( The union of two relations is a relation.  Compare Exercise 5 of
     [TakeutiZaring] p. 25. $)
  relun $p |- ( Rel ( A u. B ) <-> ( Rel A /\ Rel B ) ) $=
    ( cvv cxp wss wa cun wrel unss df-rel anbi12i 3bitr4ri ) ACCDZEZBMEZFABGZME
    AHZBHZFPHABMIQNROAJBJKPJL $.
    $( [12-Aug-1994] $)

  $( The intersection with a relation is a relation. $)
  relin1 $p |- ( Rel A -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss1 relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [16-Aug-1994] $)

  $( The intersection with a relation is a relation. $)
  relin2 $p |- ( Rel B -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss2 relss ax-mp ) ABCZBDBEJEFABGJBHI $.
    $( [17-Jan-2006] $)

  $( A difference cutting down a relation is a relation. $)
  reldif $p |- ( Rel A -> Rel ( A \ B ) ) $=
    ( cdif wss wrel wi difss relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [31-Mar-1998] $)

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( An indexed union is a relation iff each member of its indexed family is
       a relation. $)
    reliun $p |- ( Rel U_ x e. A B <-> A. x e. A Rel B ) $=
      ( vy ciun wrel cv wcel wrex cab cvv cxp wss wral df-iun releqi df-rel wal
      wi 3bitri abss dfss2 bitri ralbii ralcom4 r19.23v albii bitr4i ) ABCEZFDG
      ZCHZABIZDJZFUMKKLZMZCFZABNZUIUMADBCOPUMQUOULUJUNHZSZDRZUQULDUNUAUQUKURSZD
      RZABNVAABNZDRUTUPVBABUPCUNMVBCQDCUNUBUCUDVAADBUEVCUSDUKURABUFUGTUHT $.
      $( [19-Dec-2008] $)
  $}

  $( An indexed intersection is a relation if if at least one of the member of
     the indexed family is a relation. $)
  reliin $p |- ( E. x e. A Rel B -> Rel |^|_ x e. A B ) $=
    ( cvv cxp wss wrex ciin wrel iinss df-rel rexbii 3imtr4i ) CDDEZFZABGABCHZN
    FCIZABGPIABCNJQOABCKLPKM $.
    $( [8-Mar-2014] $)

  ${
    $d x A $.
    $( The union of a class is a relation iff any member is a relation.
       Exercise 6 of [TakeutiZaring] p. 25 and its converse. $)
    reluni $p |- ( Rel U. A <-> A. x e. A Rel x ) $=
      ( cuni wrel cv ciun wral uniiun releqi reliun bitri ) BCZDABAEZFZDMDABGLN
      ABHIABMJK $.
      $( [21-Dec-2008] $) $( [13-Aug-2004] $)

    $( The intersection of a class is a relation if at least one member is a
       relation. $)
    relint $p |- ( E. x e. A Rel x -> Rel |^| A ) $=
      ( cv wrel wrex ciin cint reliin intiin releqi sylibr ) ACZDABEABLFZDBGZDA
      BLHNMABIJK $.
      $( [8-Mar-2014] $)
  $}

  $( The empty set is a relation. $)
  rel0 $p |- Rel (/) $=
    ( c0 wrel cvv cxp wss 0ss df-rel mpbir ) ABACCDZEIFAGH $.
    $( [26-Apr-1998] $)

  ${
    $d ph z $.  $d u v x z $.  $d u v y z $.
    relopabi.1 $e |- A = { << x , y >> | ph } $.
    $( A class of ordered pairs is a relation.  (The proof was shortened by
       Mario Carneiro, 21-Dec-2013.) $)
    relopabi $p |- Rel A $=
      ( vz wrel cvv cxp wss cv cop wceq wa wex cab copab df-opab wcel vex eqtri
      opelxp mpbir2an eleq1 mpbiri adantr exlimivv abssi eqsstri df-rel mpbir )
      DGDHHIZJDFKZBKZCKZLZMZANZCOBOZFPZULDABCQUTEABCFRUAUSFULURUMULSZBCUQVAAUQV
      AUPULSZVBUNHSUOHSUNUOHHCTZUBBTVCUCUMUPULUDUEUFUGUHUIDUJUK $.
      $( [21-Dec-2013] $)
  $}

  $( A class of ordered pairs is a relation.  (Unnecessary distinct variable
     restrictions were removed by Alan Sare, 9-Jul-2013.)  (The proof was
     shortened by Mario Carneiro, 21-Dec-2013.) $)
  relopab $p |- Rel { << x , y >> | ph } $=
    ( copab eqid relopabi ) ABCABCDZGEF $.
    $( [9-Jul-2013] $) $( [8-Mar-1995] $)

  ${
    $d w x y z A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d ph z w $.
    $d ps z w $.
    $( Obsolete proof of ~ relopab as of 21-Dec-2013. $)
    relopabOLD $p |- Rel { << x , y >> | ph } $=
      ( copab wrel cvv cxp wss cv wcel wa pm3.2i ssopab2i df-xp sseqtr4i df-rel
      vex a1i mpbir ) ABCDZETFFGZHTBIFJZCIFJZKZBCDUAAUDBCUDAUBUCBQCQLRMBCFFNOTP
      S $.
      $( [8-Mar-1995] $)

    $( The identity relation is a relation.  Part of Exercise 4.12(p) of
       [Mendelson] p. 235. $)
    reli $p |- Rel _I $=
      ( vx vy cv wceq cid dfid3 relopabi ) ACBCDABEABFG $.
      $( [21-Dec-2013] $) $( [26-Apr-1998] $)

    $( A relation expressed as an ordered pair abstraction. $)
    opabid2 $p |- ( Rel A -> { << x , y >> | << x , y >> e. A } = A ) $=
      ( vz vw wrel cv cop wcel copab wceq wb wal vex opeq1 eleq1d opelopab gen2
      opeq2 relopab eqrel mpan mpbiri ) CFZAGZBGZHZCIZABJZCKZDGZEGZHZUIIUMCIZLZ
      EMDMZUODEUHUKUFHZCIUNABUKULDNENUEUKKUGUQCUEUKUFOPUFULKUQUMCUFULUKSPQRUIFU
      DUJUPLUHABTDEUICUAUBUC $.
      $( [11-Dec-2006] $)

    $( Intersection of two ordered pair class abstractions. $)
    inopab $p |- ( { << x , y >> | ph } i^i { << x , y >> | ps } ) =
               { << x , y >> | ( ph /\ ps ) } $=
      ( vz vw copab cin wrel relopab relin1 ax-mp cop wcel wsbc sban opelopabsb
      wa cv sbbii anbi12i 3bitr4ri elin 3bitr4i eqrelriiv ) EFACDGZBCDGZHZABRZC
      DGZUFIUHIACDJUFUGKLUICDJESZFSZMZUFNZUMUGNZRZUICUKOZDULOZUMUHNUMUJNACUKOZB
      CUKOZRZDULOUSDULOZUTDULOZRURUPUSUTDFPUQVADFABCEPTUNVBUOVCACDEFQBCDEFQUAUB
      UMUFUGUCUICDEFQUDUE $.
      $( [30-Sep-2002] $)

    $( The intersection of two cross products.  Exercise 9 of [TakeutiZaring]
       p. 25.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    inxp $p |- ( ( A X. B ) i^i ( C X. D ) ) =
                   ( ( A i^i C ) X. ( B i^i D ) ) $=
      ( vx vy cv wcel wa copab cin cxp inopab elin anbi12i bitr4i opabbii eqtri
      an4 df-xp ineq12i 3eqtr4i ) EGZAHZFGZBHZIZEFJZUCCHZUEDHZIZEFJZKZUCACKZHZU
      EBDKZHZIZEFJZABLZCDLZKUNUPLUMUGUKIZEFJUSUGUKEFMVBUREFVBUDUIIZUFUJIZIURUDU
      FUIUJSUOVCUQVDUCACNUEBDNOPQRUTUHVAULEFABTEFCDTUAEFUNUPTUB $.
      $( [27-Aug-2011] $) $( [3-Aug-1994] $)

    $( Distributive law for cross product over intersection.  Theorem 102 of
       [Suppes] p. 52. $)
    xpindi $p |- ( A X. ( B i^i C ) ) = ( ( A X. B ) i^i ( A X. C ) ) $=
      ( cxp cin inxp inidm xpeq1i eqtr2i ) ABDACDEAAEZBCEZDAKDABACFJAKAGHI $.
      $( [26-Sep-2004] $)

    $( Distributive law for cross product over intersection.  Similar to
       Theorem 102 of [Suppes] p. 52. $)
    xpindir $p |- ( ( A i^i B ) X. C ) = ( ( A X. C ) i^i ( B X. C ) ) $=
      ( cxp cin inxp inidm xpeq2i eqtr2i ) ACDBCDEABEZCCEZDJCDACBCFKCJCGHI $.
      $( [26-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y ph $.
    opabbi2dv.1 $e |- Rel A $.
    opabbi2dv.3 $e |- ( ph -> ( << x , y >> e. A <-> ps ) ) $.
    $( Deduce equality of a relation and an ordered-pair class builder.
       Compare ~ abbi2dv . $)
    opabbi2dv $p |- ( ph -> A = { << x , y >> | ps } ) $=
      ( cv cop wcel copab wrel wceq opabid2 ax-mp opabbidv syl5eqr ) AECHDHIEJZ
      CDKZBCDKELSEMFCDENOARBCDGPQ $.
      $( [24-Feb-2014] $)
  $}

  ${
    $d v w x y z A $.  $d v w x y z B $.
    relop.1 $e |- A e. _V $.
    relop.2 $e |- B e. _V $.
    $( A necessary and sufficient condition for a Kuratowski ordered pair to be
       a relation. $)
    relop $p |- ( Rel << A , B >>
             <-> E. x E. y ( A = { x } /\ B = { x , y } ) ) $=
      ( vz vw vv cop cv wceq cpr wa wex wi wal vex bitri eqeq2d cvv cxp wss csn
      wrel df-rel wcel dfss2 wo elop elvv imbi12i jaob albii 19.26 3bitri eqeq1
      snex eqcom opeqsn syl6bb 2exbidv imbi12d cla4v cbvexv 19.41v equcom exbii
      sneq a9e mpbi mpbiran eqid a1bi 3bitr2ri sylib prex mpi opeqpr idd preqsn
      eqtr2 simplbi syl dfsn2 preq2 syl5req syl5eq anbi12d biimpd adantr expcom
      exp3a com12 mpd imp3a syl5bi 2eximdv exlimiv imp syl2an sylbi simpr equid
      jaod jctl sylibr eqtr4d opeq12 cla42ev adantlr preq12 biimpa df-op jaodan
      syl6eqr ex 3imtr4g ssrdv exlimivv impbii ) CDJZUEYBUAUAUBZUCZCAKZUDZLZDYE
      BKZMZLZNZBOAOZYBUFYDYLYDGKZCUDZLZYMYEYHJZLZBOAOZPZGQZYMCDMZLZYRPZGQZNZYLY
      DYMYBUGZYMYCUGZPZGQYSUUCNZGQUUEGYBYCUHUUHUUIGUUHYOUUBUIZYRPUUIUUFUUJUUGYR
      YMCDGRUJZABYMUKULYOYRUUBUMSUNYSUUCGUOUPYTCHKZUDZLZHOZUUAYPLZBOAOZYLUUDYTY
      NYNLZYEYHLZYGNZBOZAOZPZUUOYSUVCGYNCURYOYOUURYRUVBYMYNYNUQYOYQUUTABYOYQYNY
      PLZUUTYMYNYPUQUVDYPYNLUUTYNYPUSYEYHCARZBRZEUTSVAVBVCVDUUOYGAOUVBUVCUUNYGH
      AUULYELZUUMYFCUULYEVITVEUVAYGAUVAUUSBOZYGUUSYGBVFYHYELZBOUVHBAVJUVIUUSBBA
      VGVHVKVLVHUURUVBYNVMVNVOVPUUDUUAUUALZUUQUUAVMUUCUVJUUQPGUUACDVQUUBUUBUVJY
      RUUQYMUUAUUAUQUUBYQUUPABYMUUAYPUQVBVCVDVRUUOUUQYLUUNUUQYLPHUUNUUPYKABUUPY
      KCYILZDYFLZNZUIZUUNYKUUPYPUUALUVNUUAYPUSYEYHCDEFVSSUUNYKYKUVMUUNYKVTUUNUV
      KUVLYKUVKUUNUVLYKPZUVKUUNNZUUSUVOUVPYIUUMLZUUSCYIUUMWBUVQUUSYHUULLYEYHUUL
      UVEUVFHRWAWCWDUVKUUSUVOPUUNUUSUVKUVOUUSUVKUVLYKUUSUVMYKUUSUVKYGUVLYJUUSYI
      YFCUUSYFYEYEMZYIYEWEZYEYHYEWFZWGTUUSYFYIDUUSYFUVRYIUVSUVTWHTWIWJWMWNWKWOW
      LWPXEWQWRWSWTXAXBYKYDABYKGYBYCYKUUJYMUULIKZJZLZIOHOZUUFUUGYKUUJUWDYKYOUWD
      UUBYGYOUWDYJYGYONZYMYEYEJZLZUWDUWEYMYNUWFYGYOXCYGUWFYNLZYOYGYEYELZYGNUWHY
      GUWIAXDXFYEYECUVEUVEEUTXGWKXHUWCUWGHIYEYEUVEUVEUVGUWAYELNUWBUWFYMUULUWAYE
      YEXITXJWDXKYKUUBNZYQUWDUWJYMYFYIMZYPYKUUBYMUWKLYKUUAUWKYMCDYFYIXLTXMYEYHX
      NXPUWCYQHIYEYHUVEUVFUVGUWAYHLNUWBYPYMUULUWAYEYHXITXJWDXOXQUUKHIYMUKXRXSXT
      YAS $.
      $( [3-Jun-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( For sets, the identity relation is the same as equality.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    ideqg $p |- ( B e. V -> ( A _I B <-> A = B ) ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    ideq.1 $e |- B e. _V $.
    $( For sets, the identity relation is the same as equality. $)
    ideq $p |- ( A _I B <-> A = B ) $=
      (  ) ? $.
      $( [1-Jun-2008] $) $( [13-Aug-1995] $)
  $}

  ${
    $d x A $.
    $( A set is identical to itself.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    ididg $p |- ( A e. V -> A _I A ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [28-May-2008] $)
  $}

  $( The second member of an ordered pair of classes in a cross product exists
     when the order pair doesn't belong to ` _I ` .  (The proof was shortened
     by Andrew Salmon, 27-Aug-2011.) $)
  opelxpex2 $p |- ( << A , B >> e. ( ( C X. D ) \ _I ) -> B e. _V ) $=
    (  ) ? $.
    $( [27-Aug-2011] $) $( [28-May-2008] $)

  $( Two ways of expressing set existence.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  issetid $p |- ( A e. _V <-> A _I _V ) $=
    (  ) ? $.
    $( [27-Aug-2011] $) $( [16-Feb-2008] $)

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for converse. $)
    cnvss $p |- ( A C_ B -> `' A C_ `' B ) $=
      (  ) ? $.
      $( [22-Mar-1998] $)
  $}

  $( Equality theorem for converse. $)
  cnveq $p |- ( A = B -> `' A = `' B ) $=
    ( wss wa ccnv wceq cnvss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMN
    FKOLPABGBAGHABIMNIJ $.
    $( [13-Aug-1995] $)

  ${
    cnveqi.1 $e |- A = B $.
    $( Equality inference for converse. $)
    cnveqi $p |- `' A = `' B $=
      ( wceq ccnv cnveq ax-mp ) ABDAEBEDCABFG $.
      $( [23-Dec-2008] $)
  $}

  ${
    cnveqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for converse. $)
    cnveqd $p |- ( ph -> `' A = `' B ) $=
      ( wceq ccnv cnveq syl ) ABCEBFCFEDBCGH $.
      $( [6-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Membership in a converse.  Equation 5 of [Suppes] p. 62. $)
    elcnv $p |- ( A e. `' R <-> E. x E. y ( A = << x , y >> /\ y R x ) ) $=
      (  ) ? $.
      $( [24-Mar-1998] $)

    $( Membership in a converse.  Equation 5 of [Suppes] p. 62. $)
    elcnv2 $p |- ( A e. `' R <->
                 E. x E. y ( A = << x , y >> /\ << y , x >> e. R ) ) $=
      (  ) ? $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d y z w A $.  $d x y z w $.
    hbcnv.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for converse. $)
    hbcnv $p |- ( y e. `' A -> A. x y e. `' A ) $=
      (  ) ? $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( Ordered-pair membership in converse.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    opelcnvg $p |- ( ( A e. C /\ B e. D ) ->
                     ( << A , B >> e. `' R <-> << B , A >> e. R ) ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [13-May-1999] $)
  $}

  $( The converse of a binary relation swaps arguments.  Theorem 11 of [Suppes]
     p. 61. $)
  brcnvg $p |- ( ( A e. C /\ B e. D ) -> ( A `' R B <-> B R A ) ) $=
    (  ) ? $.
    $( [10-Oct-2005] $)

  ${
    opelcnv.1 $e |- A e. _V $.
    opelcnv.2 $e |- B e. _V $.
    $( Ordered-pair membership in converse. $)
    opelcnv $p |- ( << A , B >> e. `' R <-> << B , A >> e. R ) $=
      ( cvv wcel cop ccnv wb opelcnvg mp2an ) AFGBFGABHCIGBAHCGJDEABFFCKL $.
      $( [13-Aug-1995] $)

    $( The converse of a binary relation swaps arguments.  Theorem 11 of
       [Suppes] p. 61. $)
    brcnv $p |- ( A `' R B <-> B R A ) $=
      (  ) ? $.
      $( [13-Aug-1995] $)
  $}

  ${
    $d x y z w A $.
    $( The converse of a class union is the (indexed) union of the converses of
       its members. $)
    cnvuni $p |- `' U. A = U_ x e. A `' x $=
      ( vy vz vw cuni ccnv cv ciun wcel wrex cop wa elcnv2 eluni2 anbi2i bitr4i
      wceq wex rexcom4 r19.42v 2exbii rexbii exbii 3bitrri 3bitri eliun eqriv )
      CBFZGZABAHZGZIZCHZUJJZUNULJZABKZUNUMJUOUNDHZEHZLRZUSURLZUIJZMZESDSUTVAUKJ
      ZMZABKZESZDSZUQDEUNUINVCVFDEVCUTVDABKZMVFVBVIUTAVABOPUTVDABUAQUBUQVEESZDS
      ZABKVJABKZDSVHUPVKABDEUNUKNUCVJADBTVLVGDVEAEBTUDUEUFAUNBULUGQUH $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain.  Definition 6.5(1) of [TakeutiZaring]
       p. 24. $)
    dfdm3 $p |- dom A = { x | E. y << x , y >> e. A } $=
      (  ) ? $.
      $( [28-Dec-1996] $)

    $( Alternate definition of range.  Definition 4 of [Suppes] p. 60. $)
    dfrn2 $p |- ran A = { y | E. x x A y } $=
      (  ) ? $.
      $( [27-Dec-1996] $)

    $( Alternate definition of range.  Definition 6.5(2) of [TakeutiZaring]
       p. 24. $)
    dfrn3 $p |- ran A = { y | E. x << x , y >> e. A } $=
      (  ) ? $.
      $( [28-Dec-1996] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain. $)
    dfdm4 $p |- dom A = ran `' A $=
      (  ) ? $.
      $( [28-Dec-1996] $)
  $}

  ${
    $d x y z w v $.  $d z w v A $.
    dfdmf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfdmf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of domain, using bound-variable hypotheses instead of
       distinct variable conditions. $)
    dfdmf $p |- dom A = { x | E. y << x , y >> e. A } $=
      ( vw vv cdm cv cop wcel wex cab dfdm3 ax-17 hbel wceq opeq2 eleq1d exbidv
      cbvex abbii hbex opeq1 cbvab 3eqtri ) DIGJZHJZKZDLZHMZGNUHBJZKZDLZBMZGNAJ
      ZUMKZDLZBMZANGHDOULUPGUKUOHBBCCUJDCJZUJLBPFQUOHPUIUMRUJUNDUIUMUHSTUBUCUPU
      TGAUOABACCUNDVAUNLAPEQUDUTGPUHUQRZUOUSBVBUNURDUHUQUMUETUAUFUG $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Domain membership.  Theorem 4 of [Suppes] p. 59. $)
    eldmg $p |- ( A e. V -> ( A e. dom B <-> E. y A B y ) ) $=
      (  ) ? $.
      $( [9-Jul-2014] $)

    $( Domain membership.  Theorem 4 of [Suppes] p. 59. $)
    eldm2g $p |- ( A e. V -> ( A e. dom B <-> E. y << A , y >> e. B ) ) $=
      (  ) ? $.
      $( [9-Jul-2014] $) $( [27-Jan-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eldm.1 $e |- A e. _V $.
    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59. $)
    eldm $p |- ( A e. dom B <-> E. y A B y ) $=
      (  ) ? $.
      $( [2-Apr-2004] $)

    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59. $)
    eldm2 $p |- ( A e. dom B <-> E. y << A , y >> e. B ) $=
      ( cvv wcel cdm cv cop wex wb eldm2g ax-mp ) BEFBCGFBAHICFAJKDABCELM $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for domain. $)
    dmss $p |- ( A C_ B -> dom A C_ dom B ) $=
      ( vx vy wss cdm cv cop wcel wex ssel eximdv vex eldm2 3imtr4g ssrdv ) ABE
      ZCAFZBFZQCGZDGHZAIZDJUABIZDJTRITSIQUBUCDABUAKLDTACMZNDTBUDNOP $.
      $( [11-Aug-1994] $)
  $}

  $( Equality theorem for domain. $)
  dmeq $p |- ( A = B -> dom A = dom B ) $=
    ( wss wa cdm wceq dmss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMNFK
    OLPABGBAGHABIMNIJ $.
    $( [11-Aug-1994] $)

  ${
    dmeqi.1 $e |- A = B $.
    $( Equality inference for domain. $)
    dmeqi $p |- dom A = dom B $=
      ( wceq cdm dmeq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    dmeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for domain. $)
    dmeqd $p |- ( ph -> dom A = dom B ) $=
      ( wceq cdm dmeq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.
    opeldm.1 $e |- A e. _V $.
    $( Membership of first of an ordered pair in a domain. $)
    opeldm $p |- ( << A , B >> e. C -> A e. dom C ) $=
      ( vy cvv wcel cop cdm wi cv wex opeq2 eleq1d cla4egv eldm2 syl6ibr opprc2
      wceq wn cla4ev sylibr syl6bi pm2.61i ) BFGZABHZCGZACIGZJUEUGAEKZHZCGZELZU
      HUKUGEBFUIBSUJUFCUIBAMNOEACDPZQUETZUGAAHZCGZUHUNUFUOCABRNUPULUHUKUPEADUIA
      SUJUOCUIAAMNUAUMUBUCUD $.
      $( [30-Jul-1995] $)
  $}

  ${
    breldm.1 $e |- A e. _V $.
    $( Membership of first of a binary relation in a domain. $)
    breldm $p |- ( A R B -> A e. dom R ) $=
      (  ) ? $.
      $( [30-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x R $.
    $( Membership of first of a binary relation in a domain. $)
    breldmg $p |- ( ( A e. C /\ A R B ) -> A e. dom R ) $=
      (  ) ? $.
      $( [21-Mar-2007] $)

    $( The domain of a union is the union of domains.  Exercise 56(a) of
       [Enderton] p. 65.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmun $p |- dom ( A u. B ) = ( dom A u. dom B ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [12-Aug-1994] $)

    $( The domain of an intersection belong to the intersection of domains.
       Theorem 6 of [Suppes] p. 60. $)
    dmin $p |- dom ( A i^i B ) C_ ( dom A i^i dom B ) $=
      ( vx vy cin cdm cv cop wcel wa wex 19.40 eldm2 elin exbii anbi12i 3imtr4i
      vex bitri ssriv ) CABEZFZAFZBFZEZCGZDGHZAIZUGBIZJZDKZUHDKZUIDKZJZUFUBIZUF
      UEIZUHUIDLUOUGUAIZDKUKDUFUACRZMUQUJDUGABNOSUPUFUCIZUFUDIZJUNUFUCUDNUSULUT
      UMDUFAURMDUFBURMPSQT $.
      $( [15-Sep-2004] $)

  $}

  ${
    $d x y z A $.
    $( The domain of a union.  Part of Exercise 8 of [Enderton] p. 41. $)
    dmuni $p |- dom U. A = U_ x e. A dom x $=
      ( vy vz cuni cdm cv ciun cop wcel wex wrex eluni exbii excom ancom 19.41v
      wa eldm2 3bitr4i vex anbi2i 3bitri df-rex bitr4i eliun eqriv ) CBEZFZABAG
      ZFZHZCGZDGIZUHJZDKZUMUKJZABLZUMUIJUMULJUPUJBJZUQRZAKZURUPUNUJJZUSRZAKZDKV
      CDKZAKVAUOVDDAUNBMNVCDAOVEUTAVBDKZUSRUSVFRVEUTVFUSPVBUSDQUQVFUSDUMUJCUAZS
      UBTNUCUQABUDUEDUMUHVGSAUMBUKUFTUG $.
      $( [3-Feb-2004] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The domain of a class of ordered pairs. $)
    dmopab $p |- dom { << x , y >> | ph } = { x | E. y ph } $=
      ( vz copab cdm cv cop wcel wex cab hbopab1 dfdmf opabid exbii abbii eqtri
      hbopab2 ) ABCEZFBGCGHSIZCJZBKACJZBKBCDSABCDLABCDRMUAUBBTACABCNOPQ $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y A $.
    $( Upper bound for the domain of a restricted class of ordered pairs. $)
    dmopabss $p |- dom { << x , y >> | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa copab cdm wex cab dmopab 19.42v abbii ssab2 eqsstri ) BEDFZA
      GZBCHIRCJZBKZDRBCLTQACJZGZBKDSUBBQACMNUABDOPP $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.
    $( The domain of a restricted class of ordered pairs. $)
    dmopab3 $p |- ( A. x e. A E. y ph <->
               dom { << x , y >> | ( x e. A /\ ph ) } = A ) $=
      ( wex wral cv wcel wi wal wa wb copab cdm wceq df-ral pm4.71 albii dmopab
      cab 19.42v abbii eqtri eqeq1i eqcom abeq2 3bitr2ri 3bitri ) ACEZBDFBGDHZU
      IIZBJUJUJUIKZLZBJZUJAKZBCMNZDOZUIBDPUKUMBUJUIQRUQULBTZDODUROUNUPURDUPUOCE
      ZBTURUOBCSUSULBUJACUAUBUCUDDURUEULBDUFUGUH $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y $.
    $( The domain of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dm0 $p |- dom (/) = (/) $=
      ( vx vy c0 cdm wceq cv wcel eq0 cop wex noel nex vex eldm2 mtbir mpgbir
      wn ) CDZCEAFZRGZQAARHTSBFIZCGZBJUBBUAKLBSCAMNOP $.
      $( [27-Aug-2011] $) $( [4-Jul-1994] $)

    $( The domain of the identity relation is the universe.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmi $p |- dom _I = _V $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [30-Apr-1998] $)

    $( The domain of the universe is the universe. $)
    dmv $p |- dom _V = _V $=
      ( cvv cdm ssv cid dmi wss dmss ax-mp eqsstr3i eqssi ) ABZAKCADBZKEDAFLKFD
      CDAGHIJ $.
      $( [8-Aug-2003] $)
  $}

  ${
    $d x y A $.
    $( An empty domain implies an empty range. $)
    dm0rn0 $p |- ( dom A = (/) <-> ran A = (/) ) $=
      (  ) ? $.
      $( [21-May-1998] $)

    $( A relation is empty iff its domain is empty. $)
    reldm0 $p |- ( Rel A -> ( A = (/) <-> dom A = (/) ) ) $=
      ( vx vy wrel c0 wceq cv cop wcel wb wal cdm rel0 eqrel mpan2 wn eq0 albii
      wex vex eldm2 notbii alnex noel nbn 3bitr2i bitr2i syl6bb ) ADZAEFZBGZCGH
      ZAIZULEIZJZCKZBKZALZEFZUIEDUJUQJMBCAENOUSUKURIZPZBKUQBURQVAUPBVAUMCSZPUMP
      ZCKUPUTVBCUKABTUAUBUMCUCVCUOCUNUMULUDUERUFRUGUH $.
      $( [15-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a cross product.  Part of Theorem 3.13(x) of [Monk1]
       p. 37.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmxp $p |- ( B =/= (/) -> dom ( A X. B ) = A ) $=
      ( vy vx c0 wne cxp cdm cv wcel copab df-xp dmeqi wex wral wceq biimpi a1d
      wa n0 ralrimiv dmopab3 sylib syl5eq ) BEFZABGZHCIAJZDIBJZSCDKZHZAUFUICDAB
      LMUEUHDNZCAOUJAPUEUKCAUEUKUGUEUKDBTQRUAUHCDAUBUCUD $.
      $( [27-Aug-2011] $) $( [28-Jul-1995] $)
  $}

  $( The domain of a square cross product. $)
  dmxpid $p |- dom ( A X. A ) = A $=
    ( cxp cdm wceq c0 dm0 xpeq1 xp0r syl6eq dmeqd id 3eqtr4a dmxp pm2.61ine ) A
    ABZCZADAEAEDZECEPAFQOEQOEABEAEAGAHIJQKLAAMN $.
    $( [28-Jul-1995] $)

  $( The domain of the intersection of two square cross products.  Unlike
     ~ dmin , equality holds. $)
  dmxpin $p |- dom ( ( A X. A ) i^i ( B X. B ) ) = ( A i^i B ) $=
    ( cxp cin cdm inxp dmeqi dmxpid eqtri ) AACBBCDZEABDZKCZEKJLAABBFGKHI $.
    $( [29-Jan-2008] $)

  $( The cross product of a class with itself is one-to-one.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  xpid11 $p |- ( ( A X. A ) = ( B X. B ) <-> A = B ) $=
    ( cxp wceq cdm dmeq dmxpid 3eqtr3g xpeq12 anidms impbii ) AACZBBCZDZABDZNLE
    MEABLMFAGBGHONABABIJK $.
    $( [27-Aug-2011] $) $( [5-Nov-2006] $)

  $( The domain of the double converse of a class (which doesn't have to be a
     relation as in ~ dfrel2 ). $)
  dmcnvcnv $p |- dom `' `' A = dom A $=
    ( cdm ccnv crn dfdm4 df-rn eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  $( The range of the double converse of a class. $)
  rncnvcnv $p |- ran `' `' A = ran A $=
    ( crn ccnv cdm df-rn dfdm4 eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  ${
    $d x y A $.  $d x y B $.
    $( The first member of an ordered pair in a relation belongs to the domain
       of the relation. $)
    elreldm $p |- ( ( Rel A /\ B e. A ) -> |^| |^| B e. dom A ) $=
      ( vx vy wrel wcel cint cdm cv cop wceq wex cvv cxp wss wi ssel sylbi elvv
      df-rel syl6ib eleq1 vex opeldm syl6bi inteqd op1stb syl6eq eleq1d sylibrd
      inteq exlimivv syli imp ) AEZBAFZBGZGZAHZFZUPUOBCIZDIZJZKZDLCLZUTUOUPBMMN
      ZFZVEUOAVFOUPVGPATAVFBQRCDBSUAVDUPUTPCDVDUPVAUSFZUTVDUPVCAFVHBVCAUBVAVBAC
      UCZUDUEVDURVAUSVDURVCGZGVAVDUQVJBVCUKUFVAVBVIUGUHUIUJULUMUN $.
      $( [28-Jul-2004] $)
  $}

  $( Equality theorem for range. $)
  rneq $p |- ( A = B -> ran A = ran B ) $=
    ( wceq ccnv cdm crn cnveq dmeqd df-rn 3eqtr4g ) ABCZADZEBDZEAFBFKLMABGHAIBI
    J $.
    $( [29-Dec-1996] $)

  ${
    rneqi.1 $e |- A = B $.
    $( Equality inference for range. $)
    rneqi $p |- ran A = ran B $=
      ( wceq crn rneq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    rneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for range. $)
    rneqd $p |- ( ph -> ran A = ran B ) $=
      ( wceq crn rneq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  $( Subset theorem for range. $)
  rnss $p |- ( A C_ B -> ran A C_ ran B ) $=
    ( wss ccnv cdm crn cnvss dmss syl df-rn 3sstr4g ) ABCZADZEZBDZEZAFBFLMOCNPC
    ABGMOHIAJBJK $.
    $( [22-Mar-1998] $)

  $( The second argument of a binary relation belongs to its range. $)
  brelrng $p |- ( ( A e. F /\ B e. G /\ A C B ) -> B e. ran C ) $=
    (  ) ? $.
    $( [29-Jun-2008] $)

  ${
    brelrn.1 $e |- A e. _V $.
    brelrn.2 $e |- B e. _V $.
    $( The second argument of a binary relation belongs to its range. $)
    brelrn $p |- ( A C B -> B e. ran C ) $=
      (  ) ? $.
      $( [29-Jun-2008] $) $( [13-Aug-2004] $)

    $( Membership of second member of an ordered pair in a range. $)
    opelrn $p |- ( << A , B >> e. C -> B e. ran C ) $=
      (  ) ? $.
      $( [23-Feb-1997] $)
  $}

  $( The first argument of a binary relation belongs to its domain. $)
  releldm $p |- ( ( Rel R /\ A R B ) -> A e. dom R ) $=
    (  ) ? $.
    $( [2-Jul-2008] $)

  $( The second argument of a binary relation belongs to its range. $)
  relelrng $p |- ( ( B e. C /\ Rel R /\ A R B ) -> B e. ran R ) $=
    (  ) ? $.
    $( [2-Jul-2008] $)

  ${
    $d x y z w v $.  $d z w v A $.
    dfrnf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfrnf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of range, using bound-variable hypotheses instead of distinct
       variable conditions. $)
    dfrnf $p |- ran A = { y | E. x << x , y >> e. A } $=
      ( vv vw crn cv cop wcel wex cab dfrn3 ax-17 hbel wceq opeq1 eleq1d exbidv
      cbvex abbii hbex opeq2 cbvab 3eqtri ) DIGJZHJZKZDLZGMZHNAJZUIKZDLZAMZHNUM
      BJZKZDLZAMZBNGHDOULUPHUKUOGAACCUJDCJZUJLAPEQUOGPUHUMRUJUNDUHUMUISTUBUCUPU
      THBUOBABCCUNDVAUNLBPFQUDUTHPUIUQRZUOUSAVBUNURDUIUQUMUETUAUFUG $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    elrn.1 $e |- A e. _V $.
    $( Membership in a range. $)
    elrn2 $p |- ( A e. ran B <-> E. x << x , A >> e. B ) $=
      ( vy cv cop wcel wex crn wceq opeq2 eleq1d exbidv dfrn3 elab2 ) AFZEFZGZC
      HZAIQBGZCHZAIEBCJDRBKZTUBAUCSUACRBQLMNAECOP $.
      $( [10-Jul-1994] $)

    $( Membership in a range. $)
    elrn $p |- ( A e. ran B <-> E. x x B A ) $=
      (  ) ? $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x y z w $.  $d y z w A $.
    hbrn.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for range.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbrn $p |- ( y e. ran A -> A. x y e. ran A ) $=
      ( vz vw cv crn wcel cop wex vex elrn2 ax-17 hbel hbex hbxfrbi ) BGZCHIEGR
      JZCIZEKAERCBLMTAEAFBSCFGSIANDOPQ $.
      $( [27-Aug-2011] $) $( [1-Sep-1999] $)
  $}

  ${
    $d x y z w $.  $d y z w A $.
    hbdm.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for domain. $)
    hbdm $p |- ( y e. dom A -> A. x y e. dom A ) $=
      ( cdm ccnv crn dfdm4 hbcnv hbrn hbxfreq ) ABCECFZGCHABLABCDIJK $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d A z $.  $d B z $.  $d x z $.
    $( Domain of an intersection.  (Contributed by FL, 15-Oct-2012.) $)
    dmiin $p |- dom |^|_ x e. A B C_ |^|_ x e. A dom B $=
      ( vz ciin cdm wss hbii1 hbdm ssiinf cv wcel iinss2 dmss syl mprgbir ) ABC
      EZFZABCFZEGRSGZABADBSRADQADBCHIJAKBLQCGTABCMQCNOP $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d A w y $.  $d B w y $.  $d V w y $.  $d x w y $.
    $( Distribute proper substitution through the range of a class. ~ csbrng is
       derived from the virtual deduction proof ~ csbrngVD .  (Contributed by
       Alan Sare, 10-Nov-2012. ) $)
    csbrng $p |- ( A e. V -> [_ A / x ]_ ran B = ran [_ A / x ]_ B ) $=
      ( vw vy wcel crn csb cop wex cab wsbc dfrn3 csbeq2i csbabg sbcexg sbcel2g
      cv exbidv bitrd abbidv 3eqtrd syl6eqr ) BDGZABCHZIZESFSJZABCIZGZEKZFLZUIH
      UEUGABUHCGZEKZFLZIUNABMZFLULABUFUODEFCNOUNAFBDPUEUPUKFUEUPUMABMZEKUKUMEAB
      DQUEUQUJEABUHCDRTUAUBUCEFUINUD $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The range of a class of ordered pairs. $)
    rnopab $p |- ran { << x , y >> | ph } = { y | E. x ph } $=
      ( vz copab crn cv cop wcel wex cab hbopab1 dfrnf opabid exbii abbii eqtri
      hbopab2 ) ABCEZFBGCGHSIZBJZCKABJZCKBCDSABCDLABCDRMUAUBCTABABCNOPQ $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y $.
    $( The range of a function expressed as a class abstraction. $)
    rnopab2 $p |- ran { << x , y >> | ( x e. A /\ y = B ) } =
                 { y | E. x e. A y = B } $=
      ( cv wcel wceq wa copab crn wex cab wrex rnopab df-rex abbii eqtr4i ) AEC
      FBEDGZHZABIJSAKZBLRACMZBLSABNUATBRACOPQ $.
      $( [23-Mar-2006] $)
  $}

  $( The range of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
     p. 36. $)
  rn0 $p |- ran (/) = (/) $=
    ( c0 cdm wceq crn dm0 dm0rn0 mpbi ) ABACADACEAFG $.
    $( [4-Jul-1994] $)

  ${
    $d x y A $.
    $( A relation is empty iff its range is empty. $)
    relrn0 $p |- ( Rel A -> ( A = (/) <-> ran A = (/) ) ) $=
      ( wrel c0 wceq cdm crn reldm0 dm0rn0 syl6bb ) ABACDAECDAFCDAGAHI $.
      $( [15-Sep-2004] $)

    $( The domain and range of a class are included in its double union. $)
    dmrnssfld $p |- ( dom A u. ran A ) C_ U. U. A $=
      ( vx vy cdm crn cuni cv cop wex vex eldm2 cpr prid1 wss sseld mpi exlimiv
      wcel sylbi ssriv uniop uniopel syl5eqelr elssuni syl elrn2 prid2 unssi )
      ADZAEZAFZFZBUIULBGZUIRUMCGZHZARZCIUMULRZCUMABJZKUPUQCUPUMUMUNLZRUQUMUNURM
      UPUSULUMUPUSUKRUSULNUPUSUOFUKUMUNUAUMUNAUBUCUSUKUDUEZOPQSTCUJULUNUJRUPBIU
      NULRZBUNACJZUFUPVABUPUNUSRVAUMUNVBUGUPUSULUNUTOPQSTUH $.
      $( [13-May-2008] $)
  $}

  $( Equality theorem for restrictions. $)
  reseq1 $p |- ( A = B -> ( A |` C ) = ( B |` C ) ) $=
    ( wceq cvv cxp cin cres ineq1 df-res 3eqtr4g ) ABDACEFZGBLGACHBCHABLIACJBCJ
    K $.
    $( [7-Aug-1994] $)

  $( Equality theorem for restrictions. $)
  reseq2 $p |- ( A = B -> ( C |` A ) = ( C |` B ) ) $=
    ( wceq cvv cxp cin cres xpeq1 ineq2d df-res 3eqtr4g ) ABDZCAEFZGCBEFZGCAHCB
    HMNOCABEIJCAKCBKL $.
    $( [8-Aug-1994] $)

  ${
    reseq2i.1 $e |- A = B $.
    $( Equality inference for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2i $p |- ( F |` A ) = ( F |` B ) $=
      ( wceq cres reseq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [22-Jun-2011] $)
  $}

  ${
    reseq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2d $p |- ( ph -> ( F |` A ) = ( F |` B ) ) $=
      ( wceq cres reseq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [22-Jun-2011] $)
  $}

  ${
    $d y B $.  $d x y $.
    hbres.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbres.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for restriction.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    hbres $p |- ( y e. ( A |` B ) -> A. x y e. ( A |` B ) ) $=
      ( cres cvv cxp cin df-res cv wcel ax-17 hbxp hbin hbxfreq ) ABCDGCDHIZJCD
      KABCREABDHFBLHMANOPQ $.
      $( [24-Jul-2012] $) $( [15-Sep-2003] $)
  $}

  $( Distribute proper substitution through the restriction of a class.
     ~ csbresg is derived from the virtual deduction proof ~ csbresgVD .
     (Contributed by Alan Sare, 10-Nov-2012. ) $)
  csbresg $p |- ( A e. V -> [_ A / x ]_ ( B |` C ) =
                 ( [_ A / x ]_ B |` [_ A / x ]_ C ) ) $=
    ( wcel cres csb cvv cxp df-res csbeq2i csbing csbxpg wceq csbconstgfv xpeq2
    cin syl eqtrd ineq2d 3eqtrd syl6eqr ) BEFZABCDGZHZABCHZABDHZIJZRZUGUHGUDUFA
    BCDIJZRZHUGABUKHZRUJABUEULECDKLABECUKMUDUMUIUGUDUMUHABIHZJZUIABDIENUDUNIOUO
    UIOABIEPUNIUHQSTUAUBUGUHKUC $.
    $( [10-Nov-2012] $)

  $( A restriction to the empty set is empty. $)
  res0 $p |- ( A |` (/) ) = (/) $=
    ( c0 cres cvv cxp cin df-res xp0r ineq2i in0 3eqtri ) ABCABDEZFABFBABGLBADH
    IAJK $.
    $( [12-Nov-1994] $)

  ${
    opelres.1 $e |- B e. _V $.
    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25. $)
    opelres $p |- ( << A , B >> e. ( C |` D ) <->
                    ( << A , B >> e. C /\ A e. D ) ) $=
      ( cop cres wcel cvv cxp cin wa df-res eleq2i elin opelxp mpbiran2 anbi2i
      3bitri ) ABFZCDGZHTCDIJZKZHTCHZTUBHZLUDADHZLUAUCTCDMNTCUBOUEUFUDUEUFBIHAB
      DIEPEQRS $.
      $( [13-Nov-1995] $)

    $( Binary relation on a restriction. $)
    brres $p |- ( A ( C |` D ) B <-> ( A C B /\ A e. D ) ) $=
      (  ) ? $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.  $d y D $.
    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25. $)
    opelresg $p |- ( B e. V -> ( << A , B >> e. ( C |` D ) <->
                    ( << A , B >> e. C /\ A e. D ) ) ) $=
      ( vy cv cop cres wcel wa wceq opeq2 eleq1d anbi1d vex opelres vtoclbg ) A
      FGZHZCDIZJTCJZADJZKABHZUAJUDCJZUCKFBESBLZTUDUASBAMZNUFUBUEUCUFTUDCUGNOASC
      DFPQR $.
      $( [14-Oct-2005] $)
  $}

  ${
    opres.1 $e |- B e. _V $.
    $( Ordered pair membership in a restriction when the first member belongs
       to the restricting class.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    opres $p |- ( A e. D ->
                    ( << A , B >> e. ( C |` D ) <-> << A , B >> e. C ) ) $=
      ( cop cres wcel wa opelres ancom bitri baib ) ABFZCDGHZADHZNCHZOQPIPQIABC
      DEJQPKLM $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A restricted identity relation is equivalent to equality in its
       domain. $)
    resieq $p |- ( ( B e. A /\ C e. A ) -> ( B ( _I |` A ) C <-> B = C ) ) $=
      (  ) ? $.
      $( [30-Apr-2004] $)
  $}

  $( The restriction of a restriction. $)
  resres $p |- ( ( A |` B ) |` C ) = ( A |` ( B i^i C ) ) $=
    ( cres cvv cxp cin df-res ineq1i xpindir ineq2i inass 3eqtr4ri 3eqtri ) ABD
    ZCDOCEFZGABEFZGZPGZABCGZDZOCHORPABHIATEFZGAQPGZGUASUBUCABCEJKATHAQPLMN $.
    $( [27-Mar-2008] $)

  $( Distributive law for restriction over union.  Theorem 31 of [Suppes]
     p. 65. $)
  resundi $p |- ( A |` ( B u. C ) ) = ( ( A |` B ) u. ( A |` C ) ) $=
    ( cun cvv cxp cin cres xpundir ineq2i indi eqtri df-res uneq12i 3eqtr4i ) A
    BCDZEFZGZABEFZGZACEFZGZDZAPHABHZACHZDRASUADZGUCQUFABCEIJASUAKLAPMUDTUEUBABM
    ACMNO $.
    $( [30-Sep-2002] $)

  $( Distributive law for restriction over union. $)
  resundir $p |- ( ( A u. B ) |` C ) = ( ( A |` C ) u. ( B |` C ) ) $=
    ( cun cvv cxp cin cres indir df-res uneq12i 3eqtr4i ) ABDZCEFZGANGZBNGZDMCH
    ACHZBCHZDABNIMCJQORPACJBCJKL $.
    $( [23-Sep-2004] $)

  $( Class restriction distributes over intersection.  (Contributed by FL,
     6-Oct-2008.) $)
  resindi $p |- ( A |` ( B i^i C ) ) = ( ( A |` B ) i^i ( A |` C ) ) $=
    ( cin cvv cxp cres xpindir ineq2i inindi eqtri df-res ineq12i 3eqtr4i ) ABC
    DZEFZDZABEFZDZACEFZDZDZAOGABGZACGZDQARTDZDUBPUEABCEHIARTJKAOLUCSUDUAABLACLM
    N $.
    $( [6-Oct-2008] $)

  $( Class restriction distributes over intersection. $)
  resindir $p |- ( ( A i^i B ) |` C ) = ( ( A |` C ) i^i ( B |` C ) ) $=
    ( cin cvv cxp cres inindir df-res ineq12i 3eqtr4i ) ABDZCEFZDAMDZBMDZDLCGAC
    GZBCGZDABMHLCIPNQOACIBCIJK $.
    $( [18-Dec-2008] $)

  $( Move intersection into class restriction. $)
  inres $p |- ( A i^i ( B |` C ) ) = ( ( A i^i B ) |` C ) $=
    ( cin cvv cxp cres inass df-res ineq2i 3eqtr4ri ) ABDZCEFZDABMDZDLCGABCGZDA
    BMHLCIONABCIJK $.
    $( [18-Dec-2008] $)

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a restriction.  Exercise 14 of [TakeutiZaring] p. 25. $)
    dmres $p |- dom ( A |` B ) = ( B i^i dom A ) $=
      ( vx vy cdm cin cres cv cop wcel wex wa opelres exbii eldm2 anbi1i 19.41v
      vex bitr4i 3bitr4ri ineqri incom eqtr3i ) AEZBFABGZEZBUDFCUDBUFCHZDHZIZUE
      JZDKUIAJZUGBJZLZDKZUGUFJUGUDJZULLZUJUMDUGUHABDRMNDUGUECRZOUPUKDKZULLUNUOU
      RULDUGAUQOPUKULDQSTUAUDBUBUC $.
      $( [1-Aug-1994] $)
  $}

  $( A domain restricted to a subclass equals the subclass. $)
  ssdmres $p |- ( A C_ dom B <-> dom ( B |` A ) = A ) $=
    ( cdm wss cin wceq cres df-ss dmres eqeq1i bitr4i ) ABCZDALEZAFBAGCZAFALHNM
    ABAIJK $.
    $( [28-Aug-2004] $) $( [2-Mar-1997] $)

  $( A class includes its restriction.  Exercise 15 of [TakeutiZaring]
     p. 25. $)
  resss $p |- ( A |` B ) C_ A $=
    ( cres cvv cxp cin df-res inss1 eqsstri ) ABCABDEZFAABGAJHI $.
    $( [2-Aug-1994] $)

  $( Commutative law for restriction. $)
  rescom $p |- ( ( A |` B ) |` C ) = ( ( A |` C ) |` B ) $=
    ( cin cres incom reseq2i resres 3eqtr4i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [27-Mar-1998] $)

  $( Subclass theorem for restriction. $)
  ssres $p |- ( A C_ B -> ( A |` C ) C_ ( B |` C ) ) $=
    ( wss cvv cxp cin cres ssrin df-res 3sstr4g ) ABDACEFZGBLGACHBCHABLIACJBCJK
    $.
    $( [16-Aug-1994] $)

  $( Subclass theorem for restriction.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  ssres2 $p |- ( A C_ B -> ( C |` A ) C_ ( C |` B ) ) $=
    ( wss cvv cxp cin cres xpss1 sslin syl df-res 3sstr4g ) ABDZCAEFZGZCBEFZGZC
    AHCBHNOQDPRDABEIOQCJKCALCBLM $.
    $( [27-Aug-2011] $) $( [22-Mar-1998] $)

  $( A restriction is a relation.  Exercise 12 of [TakeutiZaring] p. 25.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
  relres $p |- Rel ( A |` B ) $=
    ( cres cvv cxp wss wrel cin df-res inss2 eqsstri relxp relss mp2 ) ABCZBDEZ
    FPGOGOAPHPABIAPJKBDLOPMN $.
    $( [27-Aug-2011] $) $( [2-Aug-1994] $)

  $( Absorption law for restriction.  Exercise 17 of [TakeutiZaring] p. 25. $)
  resabs1 $p |- ( B C_ C -> ( ( A |` C ) |` B ) = ( A |` B ) ) $=
    ( wss cres cin resres wceq sseqin2 reseq2 sylbi syl5eq ) BCDZACEBEACBFZEZAB
    EZACBGMNBHOPHBCINBAJKL $.
    $( [9-Aug-1994] $)

  $( Absorption law for restriction. $)
  resabs2 $p |- ( B C_ C -> ( ( A |` B ) |` C ) = ( A |` B ) ) $=
    ( wss cres rescom resabs1 syl5eq ) BCDABEZCEACEBEIABCFABCGH $.
    $( [27-Mar-1998] $)

  $( Idempotent law for restriction. $)
  residm $p |- ( ( A |` B ) |` B ) = ( A |` B ) $=
    ( wss cres wceq ssid resabs2 ax-mp ) BBCABDZBDIEBFABBGH $.
    $( [27-Mar-1998] $)

  $( A restriction to an image. $)
  resima $p |- ( ( A |` B ) " B ) = ( A " B ) $=
    ( cres crn cima residm rneqi df-ima 3eqtr4i ) ABCZBCZDJDJBEABEKJABFGJBHABHI
    $.
    $( [29-Sep-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a restriction.  (Contributed by Scott Fenton,
       17-Mar-2011.) $)
    elres $p |- ( A e. ( B |` C )
          <-> E. x e. C E. y ( A = << x , y >> /\ << x , y >> e. B ) ) $=
      ( cres wcel cv cop wceq wex wrex wrel relres elrel mpan eleq1 biimpd vex
      wa opelres biimpi ancomd syl6com ancld an12 syl6ib 2eximdv rexcom4 df-rex
      mpd exbii excom 3bitri sylibr biimpri biimprd syl9 imp3a exlimdv rexlimiv
      expcom impbii ) CDEFZGZCAHZBHZIZJZVHDGZTZBKZAELZVEVFEGZVKTZBKAKZVMVEVIBKA
      KZVPVDMVEVQDENABCVDOPVEVIVOABVEVIVIVNVJTZTVOVEVIVRVIVEVHVDGZVRVIVEVSCVHVD
      QZRVSVJVNVSVJVNTZVFVGDEBSUAZUBUCUDUEVIVNVJUFUGUHUKVMVKAELZBKVOAKZBKVPVKAB
      EUIWCWDBVKAEUJULVOBAUMUNUOVLVEAEVNVKVEBVNVIVJVEVNVJVSVIVEVJVNVSVSWAWBUPVB
      VIVEVSVTUQURUSUTVAVC $.
      $( [17-Mar-2011] $)

    ${
      elsnres.1 $e |- C e. _V $.
      $( Memebership in restriction to a singleton.  (Contributed by Scott
         Fenton, 17-Mar-2011.) $)
      elsnres $p |- ( A e. ( B |` { C } )
            <-> E. y ( A = << C , y >> /\ << C , y >> e. B ) ) $=
        ( vx csn cres wcel cv cop wceq wa wex elres rexcom4 opeq1 eqeq2d eleq1d
        wrex anbi12d rexsn exbii 3bitri ) BCDGZHIBFJZAJZKZLZUHCIZMZANFUETUKFUET
        ZANBDUGKZLZUMCIZMZANFABCUEOUKFAUEPULUPAUKUPFDEUFDLZUIUNUJUOUQUHUMBUFDUG
        QZRUQUHUMCURSUAUBUCUD $.
        $( [17-Mar-2011] $)
    $}

    $( Simplification law for restriction. $)
    relssres $p |- ( ( Rel A /\ dom A C_ B ) -> ( A |` B ) = A ) $=
      ( vx vy wrel cdm wss wa cres wceq simpl cv cop wcel vex opeldm ssel ancld
      wi syl5 opelres syl6ibr adantl relssdv resss jctil eqss sylibr ) AEZAFZBG
      ZHZABIZAGZAUMGZHUMAJULUOUNULCDAUMUIUKKUKCLZDLZMZANZURUMNZSUIUKUSUSUPBNZHU
      TUKUSVAUSUPUJNUKVAUPUQACOPUJBUPQTRUPUQABDOUAUBUCUDABUEUFUMAUGUH $.
      $( [15-Mar-2004] $) $( [16-Aug-1994] $)
  $}

  $( A relation restricted to its domain equals itself. $)
  resdm $p |- ( Rel A -> ( A |` dom A ) = A ) $=
    ( wrel cdm wss cres wceq ssid relssres mpan2 ) ABACZJDAJEAFJGAJHI $.
    $( [12-Dec-2006] $)

  ${
    $d x y A $.
    $( Restriction of a class abstraction of ordered pairs. $)
    resopab $p |- ( { << x , y >> | ph } |` A ) =
                  { << x , y >> | ( x e. A /\ ph ) } $=
      ( copab cres cvv cxp cin cv wa df-res df-xp biantru opabbii eqtr4i ineq2i
      wcel vex incom eqtri inopab 3eqtri ) ABCEZDFUDDGHZIZBJDRZBCEZUDIZUGAKBCEU
      DDLUFUDUHIUIUEUHUDUEUGCJGRZKZBCEUHBCDGMUGUKBCUJUGCSNOPQUDUHTUAUGABCUBUC
      $.
      $( [5-Nov-2002] $)

    $( The existence of a restricted identity function, proved without using
       the Axiom of Replacement (unlike ~ resfunexg ). $)
    resiexg $p |- ( A e. V -> ( _I |` A ) e. _V ) $=
      (  ) ? $.
      $( [13-Jan-2007] $)

    $( A subclass of the identity function is the identity function restricted
       to its domain.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    iss $p |- ( A C_ _I <-> A = ( _I |` dom A ) ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Restriction of a class abstraction of ordered pairs. $)
    resopab2 $p |- ( A C_ B -> ( { << x , y >> | ( x e. B /\ ph ) } |` A ) =
                  { << x , y >> | ( x e. A /\ ph ) } ) $=
      ( wss cv wcel wa copab cres resopab wi wb ssel pm4.71 sylib anass syl6rbb
      anbi1d opabbidv syl5eq ) DEFZBGZEHZAIZBCJDKUDDHZUFIZBCJUGAIZBCJUFBCDLUCUH
      UIBCUCUIUGUEIZAIUHUCUGUJAUCUGUEMUGUJNDEUDOUGUEPQTUGUEARSUAUB $.
      $( [24-Aug-2007] $)
  $}

  ${
    $d w x y z A $.  $d w x y z R $.
    $( Alternate definition of the restriction operation.  (Contributed by
       Mario Carneiro, 5-Nov-2013.) $)
    dfres2 $p |- ( R |` A ) = { << x , y >> | ( x e. A /\ x R y ) } $=
      (  ) ? $.
      $( [5-Nov-2013] $)
  $}

  ${
    $d A x y $.
    $( The restricted identity expressed with the class builder.  (Contributed
       by FL, 25-Apr-2012.) $)
    opabresid $p |- { << x , y >> | ( x e. A /\ y = x ) } = ( _I |` A ) $=
      ( weq copab cres cv wcel wa cid resopab wceq equcom opabbii eqtr4i reseq1
      dfid3 ax-mp eqtr3i ) BADZABEZCFZAGCHTIABEJCFZTABCKUAJLUBUCLUAABDZABEJTUDA
      BBAMNABQOUAJCPRS $.
      $( [25-Apr-2012] $)
  $}

  $( The domain of a restricted identity function. $)
  dmresi $p |- dom ( _I |` A ) = A $=
    ( cid cdm wss cres wceq cvv ssv dmi sseqtr4i ssdmres mpbi ) ABCZDBAECAFAGMA
    HIJABKL $.
    $( [27-Aug-2004] $)

  $( MAY BE REVISED - delete this and replace w/ dfres3 (in FL's mathbox) $)
  $( Any relation restricted to the universe is itself. $)
  resid $p |- ( Rel A -> ( A |` _V ) = A ) $=
    ( wrel cdm cvv wss cres wceq ssv relssres mpan2 ) ABACZDEADFAGKHADIJ $.
    $( [16-Mar-2004] $)

  $( Equality theorem for image. $)
  imaeq1 $p |- ( A = B -> ( A " C ) = ( B " C ) ) $=
    ( wceq cres crn cima reseq1 rneqd df-ima 3eqtr4g ) ABDZACEZFBCEZFACGBCGLMNA
    BCHIACJBCJK $.
    $( [14-Aug-1994] $)

  $( Equality theorem for image. $)
  imaeq2 $p |- ( A = B -> ( C " A ) = ( C " B ) ) $=
    ( wceq cres crn cima reseq2 rneqd df-ima 3eqtr4g ) ABDZCAEZFCBEZFCAGCBGLMNA
    BCHICAJCBJK $.
    $( [14-Aug-1994] $)

  ${
    imaeq1i.1 $e |- A = B $.
    $( Equality theorem for image. $)
    imaeq1i $p |- ( A " C ) = ( B " C ) $=
      ( wceq cima imaeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality theorem for image. $)
    imaeq2i $p |- ( C " A ) = ( C " B ) $=
      ( wceq cima imaeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    imaeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq1d $p |- ( ph -> ( A " C ) = ( B " C ) ) $=
      ( wceq cima imaeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Dec-2006] $)

    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq2d $p |- ( ph -> ( C " A ) = ( C " B ) ) $=
      ( wceq cima imaeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dfima2 $p |- ( A " B ) = { y | E. x e. B x A y } $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [19-Apr-2004] $)

    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dfima3 $p |- ( A " B ) = { y | E. x ( x e. B /\ << x , y >> e. A ) } $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [14-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elimag $p |- ( A e. V -> ( A e. ( B " C ) <-> E. x e. C x B A ) ) $=
      (  ) ? $.
      $( [20-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    elima.1 $e |- A e. _V $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima $p |- ( A e. ( B " C ) <-> E. x e. C x B A ) $=
      (  ) ? $.
      $( [19-Apr-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima2 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ x B A ) ) $=
      (  ) ? $.
      $( [11-Aug-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima3 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ << x , A >> e. B ) ) $=
      (  ) ? $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z w $.
    hbima.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbima.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for image.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbima $p |- ( y e. ( A " B ) -> A. x y e. ( A " B ) ) $=
      ( cima cres crn df-ima hbres hbrn hbxfreq ) ABCDGCDHZICDJABNABCDEFKLM $.
      $( [27-Aug-2011] $) $( [30-Dec-1996] $)
  $}

  ${
    $d x y z $.  $d B y z $.  $d A y z $.  $d ph y $.
    hbimad.1 $e |- ( ph -> A. x ph ) $.
    hbimad.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbimad.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbima .
       (Contributed by FL, 15-Dec-2006.) $)
    hbimad $p |- ( ph -> ( y e. ( A " B ) -> A. x y e. ( A " B ) ) ) $=
      ( vz cv wcel wal cab cima wi hba1 hbab wceq alrimiv abidhb a1i syl eleq2d
      hbima imaeq1d imaeq2d eqtrd albid 3imtr3d ) ACJZIJZDKZBLZIMZUKEKZBLZIMZNZ
      KZUSBLZUJDENZKZVBBLUSUTOABCUNUQUMBICULBPQUPBICUOBPQUDUAAURVAUJAURDUQNVAAU
      NDUQAUJDKZVCBLOZCLUNDRAVDCGSBCIDTUBUEAUQEDAUJEKZVEBLOZCLUQERAVFCHSBCIETUB
      UFUGUCZAUSVBBFVGUHUI $.
      $( [14-Dec-2006] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.  $d x y z $.  $d F y z $.
    $( Move class substitution in and out of the image of a function.
       (Contributed by FL, 15-Dec-2006.) $)
    csbima12g $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cima ax-17 hbcsb1g hbcsb1 csbeq1a imaeq1d imaeq2d 3eqtr3d
      csb wceq csbcog hbimad wex a9e vex hbima hbeq exlimi ax-mp 3eqtrd csbiegf
      a1i eqtrd ) BDHZFBAFIZECJZRZRFBAUNERZRZFBAUNCRZRZJZABUORABERZABCRZJZFGBUP
      VADUMFGURUTUMFKFGBUQDGIZBHFKZLFGBUSDVFLUAUNBSZUPUQUSJZURUSJVAUPVHSZVGAIUN
      SZAUBVIAFUCVJVIAAGGUPVHAGUNUOFUDZVEUNHAKZMAGUQUSAGUNEVKVLMAGUNCVKVLMUEUFV
      JUOUQCJUPVHVJEUQCAUNENOAUNUONVJCUSUQAUNCNPQUGUHUKVGUQURUSFBUQNOVGUSUTURFB
      USNPUIUJAFBUODTUMVAVBUTJVDUMURVBUTAFBEDTOUMUTVCVBAFBCDTPULQ $.
      $( [13-Dec-2006] $)
  $}

  $( Move class substitution in and out of the image of a function.(This is
     ~ csbima12g with a shortened proof, shortened by Alan Sare, 10-Nov-2012.)
     The proof is derived from the virtual deduction proof ~ csbima12gALTVD .
     Although the proof is shorter, the total number of steps of all theorems
     used in the proof is probably longer. $)
  csbima12gALT $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
    ( wcel cima csb cres crn df-ima csbeq2i csbrng csbresg rneqd 3eqtrd syl6eqr
    ) BDFZABECGZHZABEHZABCHZIZJZUAUBGRTABECIZJZHABUEHZJUDABSUFDECKLABUEDMRUGUCA
    BECDNOPUAUBKQ $.
    $( [10-Nov-2012] $)

  ${
    $d x y A $.  $d x y B $.
    $( The image of the domain of a class is the range of the class. $)
    imadmrn $p |- ( A " dom A ) = ran A $=
      ( vx vy cv cdm wcel cop wa wex cab cima crn vex opeldm ancom bitr2i exbii
      pm4.71i abbii dfima3 dfrn3 3eqtr4i ) BDZAEZFZUCCDZGAFZHZBIZCJUGBIZCJAUDKA
      LUIUJCUHUGBUGUGUEHUHUGUEUCUFABMNRUGUEOPQSBCAUDTBCAUAUB $.
      $( [14-Aug-1994] $)

    $( The image of a class is a subset of its range.  Theorem 3.16(xi) of
       [Monk1] p. 39. $)
    imassrn $p |- ( A " B ) C_ ran A $=
      ( vx vy cv wcel cop wa wex cab cima crn simpr eximi ss2abi dfima3 3sstr4i
      dfrn3 ) CEZBFZSDEGAFZHZCIZDJUACIZDJABKALUCUDDUBUACTUAMNOCDABPCDARQ $.
      $( [31-Mar-1995] $)
  $}

  ${
    $d x y A $.
    $( Image under the identity relation.  Theorem 3.16(viii) of [Monk1]
       p. 38. $)
    imai $p |- ( _I " A ) = A $=
      (  ) ? $.
      $( [30-Apr-1998] $)
  $}

  $( The range of the restricted identity function. $)
  rnresi $p |- ran ( _I |` A ) = A $=
    ( cid cima cres crn df-ima imai eqtr3i ) BACBADEABAFAGH $.
    $( [27-Aug-2004] $)

  $( The image of a restriction of the identity function.  (Contributed by FL,
     31-Dec-2006.) $)
  resiima $p |- ( B C_ A -> ( ( _I |` A ) " B ) = B ) $=
    ( wss cid cres cima crn wceq df-ima a1i resabs1 rneqd rnresi 3eqtrd ) BACZD
    AEZBFZPBEZGZDBEZGZBQSHOPBIJORTDBAKLUABHOBMJN $.
    $( [28-Dec-2006] $)

  $( Image of the empty set.  Theorem 3.16(ii) of [Monk1] p. 38. $)
  ima0 $p |- ( A " (/) ) = (/) $=
    ( c0 cima cres crn df-ima res0 rneqi rn0 3eqtri ) ABCABDZEBEBABFKBAGHIJ $.
    $( [20-May-1998] $)

  $( Image under the empty relation.  (Contributed by FL, 11-Jan-2007.) $)
  0ima $p |- ( (/) " A ) = (/) $=
    ( c0 cima crn imassrn rn0 sseqtri 0ss eqssi ) BACZBJBDBBAEFGJHI $.
    $( [4-Jan-2007] $)

  $( A class whose image under another is empty is disjoint with the other's
     domain.  (Contributed by FL, 24-Jan-2007.) $)
  imadisj $p |- ( ( A " B ) = (/) <-> ( dom A i^i B ) = (/) ) $=
    ( cima wceq cres crn cdm cin df-ima eqeq1i dm0rn0 dmres incom eqtri 3bitr2i
    c0 ) ABCZPDABEZFZPDRGZPDAGZBHZPDQSPABIJRKTUBPTBUAHUBABLBUAMNJO $.
    $( [15-Jan-2007] $)

  $( A preimage under any class is included in the domain of the class.
     (Contributed by FL, 29-Jan-2007.) $)
  cnvimass $p |- ( `' A " B ) C_ dom A $=
    ( ccnv cima crn cdm imassrn dfdm4 sseqtr4i ) ACZBDJEAFJBGAHI $.
    $( [29-Jan-2007] $)

  $( The preimage of the range of a class is the domain of the class.
     (Contributed by Jeff Hankins, 15-Jul-2009.) $)
  cnvimarndm $p |- ( `' A " ran A ) = dom A $=
    ( ccnv cdm cima crn imadmrn df-rn imaeq2i dfdm4 3eqtr4i ) ABZKCZDKEKAEZDACK
    FMLKAGHAIJ $.
    $( [12-Jul-2009] $)

  ${
    $d y x A $.  $d y x R $.
    $( The image of a singleton. $)
    imasng $p |- ( A e. B -> ( R " { A } ) = { y | A R y } ) $=
      (  ) ? $.
      $( [8-May-2005] $)

    $( The image of a singleton. $)
    relimasn $p |- ( Rel R -> ( R " { A } ) = { y | A R y } ) $=
      (  ) ? $.
      $( [10-May-2005] $) $( [20-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    elimasn.1 $e |- B e. _V $.
    elimasn.2 $e |- C e. _V $.
    $( Membership in an image of a singleton.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    elimasn $p |- ( C e. ( A " { B } ) <-> << B , C >> e. A ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [15-Mar-2004] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.
    $( Membership in an image of a singleton.  (Contributed by Raph Levien,
       21-Oct-2006.) $)
    elimasng $p |- ( ( B e. V /\ C e. W ) ->
                   ( C e. ( A " { B } ) <-> << B , C >> e. A ) ) $=
      ( vz vy cv csn cima wcel cop wceq sneq imaeq2d eleq2d eleq1d bibi12d vex
      wb opeq1 eleq1 opeq2 elimasn vtocl2g ) FHZAGHZIZJZKZUGUFLZAKZTUFABIZJZKZB
      UFLZAKZTCUNKZBCLZAKZTGFBCDEUGBMZUJUOULUQVAUIUNUFVAUHUMAUGBNOPVAUKUPAUGBUF
      UAQRUFCMZUOURUQUTUFCUNUBVBUPUSAUFCBUCQRAUGUFGSFSUDUE $.
      $( [21-Oct-2006] $)
  $}

  $( Membership in an image of a singleton. $)
  elimasni $p |- ( C e. ( A " { B } ) -> B A C ) $=
    (  ) ? $.
    $( [5-Aug-2010] $)

  ${
    $d y F $.  $d x y $.
    $( Two ways to express the class of unique-valued arguments of ` F ` ,
       which is the same as the domain of ` F ` whenever ` F ` is a function.
       The left-hand side of the equality is from Definition 10.2 of [Quine]
       p. 65.  Quine uses the notation "arg ` F ` " for this class (for which
       we have no separate notation).  Observe the resemblance to our ~ df-fv ,
       which was based on the idea in Quine's definition. $)
    args $p |- { x | E. y ( F " { x } ) = { y } } = { x | E! y x F y } $=
      (  ) ? $.
      $( [8-May-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    eliniseg.1 $e |- C e. _V $.
    $( Membership in an initial segment.  The idiom ` ( ``' A " { B } ) ` ,
       meaning ` { x | x A B } ` , is used to specify an initial segment in
       (for example) Definition 6.21 of [TakeutiZaring] p. 30.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    eliniseg $p |- ( B e. V -> ( C e. ( `' A " { B } ) <-> C A B ) ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [28-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An idiom that signifies an initial segment of an ordering, used, for
       example, in Definition 6.21 of [TakeutiZaring] p. 30. $)
    iniseg $p |- ( B e. V -> ( `' A " { B } ) = { x | x A B } ) $=
      (  ) ? $.
      $( [28-Apr-2004] $)
  $}

  $( Subset theorem for image. $)
  imass1 $p |- ( A C_ B -> ( A " C ) C_ ( B " C ) ) $=
    ( wss cres crn cima ssres rnss syl df-ima 3sstr4g ) ABDZACEZFZBCEZFZACGBCGM
    NPDOQDABCHNPIJACKBCKL $.
    $( [16-Mar-2004] $)

  $( Subset theorem for image.  Exercise 22(a) of [Enderton] p. 53. $)
  imass2 $p |- ( A C_ B -> ( C " A ) C_ ( C " B ) ) $=
    ( wss cres crn cima ssres2 rnss syl df-ima 3sstr4g ) ABDZCAEZFZCBEZFZCAGCBG
    MNPDOQDABCHNPIJCAKCBKL $.
    $( [22-Mar-1998] $)

  $( The image of a singleton outside the domain is empty. $)
  ndmima $p |- ( -. A e. dom B -> ( B " { A } ) = (/) ) $=
    ( cdm wcel wn csn cima cres crn c0 df-ima wceq cin dmres incom eqtri disjsn
    biimpri syl5eq dm0rn0 sylib ) ABCZDEZBAFZGBUDHZIZJBUDKUCUECZJLUFJLUCUGUBUDM
    ZJUGUDUBMUHBUDNUDUBOPUHJLUCUBAQRSUETUAS $.
    $( [22-May-1998] $)

  ${
    $d x y A $.
    $( A converse is a relation.  Theorem 12 of [Suppes] p. 62. $)
    relcnv $p |- Rel `' A $=
      (  ) ? $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( The converse of a class abstraction of ordered pairs.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvopab $p |- `' { << x , y >> | ph } = { << y , x >> | ph } $=
      ( vz vw copab ccnv relcnv relopab cv cop wcel opelopabsb sbcom2 bitri vex
      wsbc opelcnv 3bitr4i eqrelriiv ) DEABCFZGZACBFZUAHACBIEJZDJZKUALZACUEQBUD
      QZUEUDKZUBLUHUCLUFABUDQCUEQUGABCEDMABECDNOUEUDUADPEPRACBDEMST $.
      $( [27-Aug-2011] $) $( [11-Dec-2003] $)
  $}

  ${
    $d x y $.
    $( The converse of the empty set. $)
    cnv0 $p |- `' (/) = (/) $=
      ( vx vy c0 ccnv relcnv rel0 cv cop wcel vex opelcnv noel 2false eqrelriiv
      bitr4i ) ABCDZCCEFAGZBGZHZPIRQHZCIZSCIZQRCAJBJKUBUASLTLMON $.
      $( [6-Apr-1998] $)

    $( The converse of the identity relation.  Theorem 3.7(ii) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvi $p |- `' _I = _I $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [26-Apr-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a union is the union of converses.  Theorem 16 of
       [Suppes] p. 62.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cnvun $p |- `' ( A u. B ) = ( `' A u. `' B ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [25-Mar-1998] $)

    $( Distributive law for converse over set difference. $)
    cnvdif $p |- `' ( A \ B ) = ( `' A \ `' B ) $=
      ( vx vy cdif ccnv relcnv wss wrel difss relss mp2 cv cop wcel wn wa eldif
      vex opelcnv notbii anbi12i bitri 3bitr4i eqrelriiv ) CDABEZFZAFZBFZEZUFGU
      JUHHUHIUJIUHUIJAGUJUHKLDMZCMZNZUFOUMAOZUMBOZPZQZULUKNZUGOURUJOZUMABRULUKU
      FCSZDSZTUSURUHOZURUIOZPZQUQURUHUIRVBUNVDUPULUKAUTVATVCUOULUKBUTVATUAUBUCU
      DUE $.
      $( [26-Jun-2014] $)

    $( Distributive law for converse over intersection.  Theorem 15 of [Suppes]
       p. 62. $)
    cnvin $p |- `' ( A i^i B ) = ( `' A i^i `' B ) $=
      ( cdif ccnv cin cnvdif difeq2i eqtri dfin4 cnveqi 3eqtr4i ) AABCZCZDZADZO
      BDZCZCZABEZDOPENOLDZCRALFTQOABFGHSMABIJOPIK $.
      $( [26-Jun-2014] $) $( [25-Mar-1998] $)
  $}

  $( Distributive law for range over union.  Theorem 8 of [Suppes] p. 60. $)
  rnun $p |- ran ( A u. B ) = ( ran A u. ran B ) $=
    ( cun ccnv cdm crn cnvun dmeqi dmun eqtri df-rn uneq12i 3eqtr4i ) ABCZDZEZA
    DZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [24-Mar-1998] $)

  $( The range of an intersection belongs the intersection of ranges.  Theorem
     9 of [Suppes] p. 60. $)
  rnin $p |- ran ( A i^i B ) C_ ( ran A i^i ran B ) $=
    ( cin ccnv cdm crn cnvin dmeqi dmin eqsstri df-rn ineq12i 3sstr4i ) ABCZDZE
    ZADZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [15-Sep-2004] $)

  ${
    $d x y z A $.
    $( The range of a union.  Part of Exercise 8 of [Enderton] p. 41. $)
    rnuni $p |- ran U. A = U_ x e. A ran x $=
      ( vz vy cuni crn cv ciun cop wcel wex wrex eluni exbii excom ancom 19.41v
      wa elrn2 3bitr4i vex anbi2i 3bitri df-rex bitr4i eliun eqriv ) CBEZFZABAG
      ZFZHZDGCGZIZUHJZDKZUMUKJZABLZUMUIJUMULJUPUJBJZUQRZAKZURUPUNUJJZUSRZAKZDKV
      CDKZAKVAUOVDDAUNBMNVCDAOVEUTAVBDKZUSRUSVFRVEUTVFUSPVBUSDQUQVFUSDUMUJCUAZS
      UBTNUCUQABUDUEDUMUHVGSAUMBUKUFTUG $.
      $( [17-Mar-2004] $)
  $}

  $( Distributive law for image over union.  Theorem 35 of [Suppes] p. 65. $)
  imaundi $p |- ( A " ( B u. C ) ) = ( ( A " B ) u. ( A " C ) ) $=
    ( cun cres crn cima resundi rneqi rnun eqtri df-ima uneq12i 3eqtr4i ) ABCDZ
    EZFZABEZFZACEZFZDZAOGABGZACGZDQRTDZFUBPUEABCHIRTJKAOLUCSUDUAABLACLMN $.
    $( [30-Sep-2002] $)

  $( The image of a union.  (Contributed by Jeff Hoffman, 17-Feb-2008.) $)
  imaundir $p |- ( ( A u. B ) " C ) = ( ( A " C ) u. ( B " C ) ) $=
    ( cun cima cres crn df-ima resundir rneqi rnun 3eqtri uneq12i eqtr4i ) ABDZ
    CEZACFZGZBCFZGZDZACEZBCEZDPOCFZGQSDZGUAOCHUDUEABCIJQSKLUBRUCTACHBCHMN $.
    $( [17-Feb-2008] $)

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( An upper bound for intersection with a domain.  Theorem 40 of [Suppes]
       p. 66, who calls it "somewhat surprising." $)
    dminss $p |- ( dom R i^i A ) C_ ( `' R " ( R " A ) ) $=
      (  ) ? $.
      $( [11-Aug-2004] $)

    $( An upper bound for intersection with an image.  Theorem 41 of [Suppes]
       p. 66. $)
    imainss $p |- ( ( R " A ) i^i B ) C_ ( R " ( A i^i ( `' R " B ) ) ) $=
      (  ) ? $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a cross product.  Exercise 11 of [Suppes] p. 67.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvxp $p |- `' ( A X. B ) = ( B X. A ) $=
      ( vy vx cv wcel copab ccnv cxp cnvopab ancom opabbii eqtri cnveqi 3eqtr4i
      wa df-xp ) CEAFZDEBFZPZCDGZHZSRPZDCGZABIZHBAIUBTDCGUDTCDJTUCDCRSKLMUEUACD
      ABQNDCBAQO $.
      $( [27-Aug-2011] $) $( [14-Aug-1999] $)
  $}

  $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
     of [Monk1] p. 37. $)
  xp0 $p |- ( A X. (/) ) = (/) $=
    ( c0 cxp ccnv xp0r cnveqi cnvxp cnv0 3eqtr3i ) BACZDBDABCBJBAEFBAGHI $.
    $( [12-Apr-2004] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( The cross product of nonempty classes is nonempty.  (Variation of a
       theorem contributed by Raph Levien, 30-Jun-2006.) $)
    xpnz $p |- ( ( A =/= (/) /\ B =/= (/) ) <-> ( A X. B ) =/= (/) ) $=
      ( vx vy vz c0 wne wa cxp cv wcel wex anbi12i eeanv bitr4i cop wceq syl6eq
      n0 necon3i opex eleq1 vex opelxp syl6bb cla4ev sylibr exlimivv sylbi xp0r
      xpeq1 xpeq2 xp0 jca impbii ) AFGZBFGZHZABIZFGZURCJZAKZDJZBKZHZDLCLZUTURVB
      CLZVDDLZHVFUPVGUQVHCASDBSMVBVDCDNOVEUTCDVEEJZUSKZELUTVJVEEVAVCPZVAVCUAVIV
      KQVJVKUSKVEVIVKUSUBVAVCABDUCUDUEUFEUSSUGUHUIUTUPUQAFUSFAFQUSFBIFAFBUKBUJR
      TBFUSFBFQUSAFIFBFAULAUMRTUNUO $.
      $( [19-Apr-2007] $) $( [30-Jun-2006] $)
  $}

  $( At least one member of an empty cross product is empty. $)
  xpeq0 $p |- ( ( A X. B ) = (/) <-> ( A = (/) \/ B = (/) ) ) $=
    ( cxp c0 wceq wne wa wn wo xpnz necon2bbii ianor nne orbi12i 3bitri ) ABCZD
    EADFZBDFZGZHQHZRHZIADEZBDEZISPDABJKQRLTUBUAUCADMBDMNO $.
    $( [27-Aug-2006] $)

  $( Cross products with disjoint sets are disjoint. $)
  xpdisj1 $p |- ( ( A i^i B ) = (/) -> ( ( A X. C ) i^i ( B X. D ) ) = (/) ) $=
    ( cin c0 wceq cxp inxp xpeq1 xp0r syl6eq syl5eq ) ABEZFGZACHBDHENCDEZHZFACB
    DIOQFPHFNFPJPKLM $.
    $( [13-Sep-2004] $)

  $( Cross products with disjoint sets are disjoint. $)
  xpdisj2 $p |- ( ( A i^i B ) = (/) -> ( ( C X. A ) i^i ( D X. B ) ) = (/) ) $=
    ( cin c0 wceq cxp inxp xpeq2 xp0 syl6eq syl5eq ) ABEZFGZCAHDBHECDEZNHZFCADB
    IOQPFHFNFPJPKLM $.
    $( [13-Sep-2004] $)

  $( Cross products with two different singletons are disjoint. $)
  xpsndisj $p |- ( B =/= D -> ( ( A X. { B } ) i^i ( C X. { D } ) ) = (/) ) $=
    ( wne csn cin c0 wceq cxp disjsn2 xpdisj2 syl ) BDEBFZDFZGHIANJCOJGHIBDKNOA
    CLM $.
    $( [3-Jun-2007] $) $( [28-Jul-2004] $)

  $( A double restriction to disjoint classes is the empty set.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  resdisj $p |- ( ( A i^i B ) = (/) -> ( ( C |` A ) |` B ) = (/) ) $=
    ( cin c0 wceq cres resres reseq2 res0 syl6eq syl5eq ) ABDZEFZCAGBGCMGZECABH
    NOCEGEMECICJKL $.
    $( [27-Aug-2011] $) $( [7-Oct-2004] $)

  $( The range of a cross product.  Part of Theorem 3.13(x) of [Monk1]
     p. 37. $)
  rnxp $p |- ( A =/= (/) -> ran ( A X. B ) = B ) $=
    ( c0 wne cxp crn cdm ccnv df-rn cnvxp dmeqi eqtri dmxp syl5eq ) ACDABEZFZBA
    EZGZBPOHZGROISQABJKLBAMN $.
    $( [9-Apr-2007] $) $( [12-Apr-2004] $)

  $( The domain of a cross product is a subclass of the first factor. $)
  dmxpss $p |- dom ( A X. B ) C_ A $=
    ( cxp cdm wss c0 wceq 0ss xpeq2 xp0 syl6eq dmeqd dm0 sseq1d mpbiri wne dmxp
    eqimss syl pm2.61ine ) ABCZDZAEZBFBFGZUCFAEAHUDUBFAUDUBFDFUDUAFUDUAAFCFBFAI
    AJKLMKNOBFPUBAGUCABQUBARST $.
    $( [19-Mar-2007] $)

  $( The range of a cross product is a subclass of the second factor.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
  rnxpss $p |- ran ( A X. B ) C_ B $=
    ( cxp crn ccnv cdm df-rn cnvxp dmeqi dmxpss eqsstri ) ABCZDLEZFZBLGNBACZFBM
    OABHIBAJKK $.
    $( [27-Aug-2011] $) $( [16-Jan-2006] $)

  $( The range of a square cross product.  (Contributed by FL, 17-May-2010.) $)
  rnxpid $p |- ran ( A X. A ) = A $=
    ( cxp crn wceq c0 rn0 xpeq2 xp0 syl6eq rneqd id 3eqtr4a rnxp pm2.61ine ) AA
    BZCZADAEAEDZECEPAFQOEQOAEBEAEAGAHIJQKLAAMN $.
    $( [17-May-2010] $)

  $( A cross-product subclass relationship is equivalent to the relationship
     for it components. $)
  ssxpb $p |- ( ( A X. B ) =/= (/) -> ( ( A X. B ) C_ ( C X. D ) <->
              ( A C_ C /\ B C_ D ) ) ) $=
    ( cxp c0 wne wss wa cdm wceq xpnz dmxp adantl sylbir adantr eqsstr3d syl6ss
    dmss crn dmxpss rnxp rnss rnxpss jca ex xpss12 impbid1 ) ABEZFGZUICDEZHZACH
    ZBDHZIZUJULUOUJULIZUMUNUPAUKJZCUPAUIJZUQUJURAKZULUJAFGZBFGZIZUSABLZVAUSUTAB
    MNOPULURUQHUJUIUKSNQCDUARUPBUKTZDUPBUITZVDUJVEBKZULUJVBVFVCUTVFVAABUBPOPULV
    EVDHUJUIUKUCNQCDUDRUEUFACBDUGUH $.
    $( [17-Dec-2008] $)

  $( The cross product of non-empty classes is one-to-one. $)
  xp11 $p |- ( ( A =/= (/) /\ B =/= (/) )
      -> ( ( A X. B ) = ( C X. D ) <-> ( A = C /\ B = D ) ) ) $=
    ( c0 wne wa cxp wceq wi xpnz anidm neeq1 anbi2d syl5bbr wss ssxpb syl5ibcom
    eqimss eqss eqimss2 anim12d an4 anbi12i bitr4i syl6ib sylbid com12 sylan9eq
    sylbi xpeq1 xpeq2 impbid1 ) AEFBEFGZABHZCDHZIZACIZBDIZGZUNUOEFZUQUTJABKUQVA
    UTUQVAVAUPEFZGZUTVAVAVAGUQVCVALUQVAVBVAUOUPEMNOUQVCACPZBDPZGZCAPZDBPZGZGZUT
    UQVAVFVBVIUQUOUPPVAVFUOUPSABCDQRUQUPUOPVBVIUPUOUACDABQRUBVJVDVGGZVEVHGZGUTV
    DVEVGVHUCURVKUSVLACTBDTUDUEUFUGUHUJURUSUOCBHUPACBUKBDCULUIUM $.
    $( [31-May-2008] $)

  $( Cancellation law for cross-product. $)
  xpcan $p |- ( C =/= (/) -> ( ( C X. A ) = ( C X. B ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 biantrur syl6bbr wn wi nne xpeq2 syl6eq eqeq1d
    eqid xp0 eqcom syl6bb adantl df-ne wo xpeq0 orel1 syl5bi sylbi adantr simpr
    sylbid jctild eqtr3 syl6 sylan2b impbid1 pm2.61dan ) CDEZADEZCAFZCBFZGZABGZ
    HUSUTIVCCCGZVDIVDCACBJVEVDCSKLUSUTMZIVCVDVFUSADGZVCVDNADOUSVGIZVCVGBDGZIVDV
    HVCVIVGVHVCVBDGZVIVGVCVJHUSVGVCDVBGVJVGVADVBVGVACDFDADCPCTQRDVBUAUBUCUSVJVI
    NZVGUSCDGZMZVKCDUDVJVLVIUEVMVICBUFVLVIUGUHUIUJULUSVGUKUMABDUNUOUPABCPUQUR
    $.
    $( [30-Aug-2011] $)

  $( Cancellation law for cross-product. $)
  xpcan2 $p |- ( C =/= (/) -> ( ( A X. C ) = ( B X. C ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantru syl6bbr wn nne xp0r syl6eq eqeq1d
    xpeq1 eqcom syl6bb adantr wi df-ne wo xpeq0 orel2 syl5bi sylbi adantl simpl
    sylbid jctild eqtr3 syl6 impbid1 sylanb pm2.61ian ) ADEZCDEZACFZBCFZGZABGZH
    ZUSUTIVCVDCCGZIVDACBCJVFVDCKLMUSNADGZUTVEADOVGUTIZVCVDVHVCVGBDGZIVDVHVCVIVG
    VHVCVBDGZVIVGVCVJHUTVGVCDVBGVJVGVADVBVGVADCFDADCSCPQRDVBTUAUBUTVJVIUCZVGUTC
    DGZNZVKCDUDVJVIVLUEVMVIBCUFVLVIUGUHUIUJULVGUTUKUMABDUNUOABCSUPUQUR $.
    $( [30-Aug-2011] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subset of the range of a restriction. $)
    ssrnres $p |- ( B C_ ran ( C |` A ) <-> ran ( C i^i ( A X. B ) ) = B ) $=
      ( vy vx cxp cin crn wceq wss wa cres rnss ax-mp cvv wcel wex elrn2 3bitri
      cv eqss inss2 rnxpss sstri biantrur ssid ssv xpss12 mp2an df-res sseqtr4i
      sslin sstr mpan2 cop ssel syl6ib ancrd opelxp anbi2i opelres anbi1i anass
      vex elin bitr2i exbii 19.41v syl6ibr ssrdv impbii 3bitr2ri ) CABFZGZHZBIV
      OBJZBVOJZKVQBCALZHZJZVOBUAVPVQVOVMHZBVNVMJVOWAJCVMUBVNVMMNABUCUDUEVQVTVQV
      OVSJZVTVNVRJWBVNCAOFZGZVRVMWCJZVNWDJAAJBOJWEAUFBUGAABOUHUIVMWCCULNCAUJUKV
      NVRMNBVOVSUMUNVTDBVOVTDTZBPZETZWFUOZVRPZEQZWGKZWFVOPZVTWGWKVTWGWFVSPWKBVS
      WFUPEWFVRDVDZRUQURWMWIVNPZEQWJWGKZEQWLEWFVNWNRWOWPEWOWICPZWIVMPZKWQWHAPZW
      GKZKZWPWICVMVEWRWTWQWHWFABWNUSUTWPWQWSKZWGKXAWJXBWGWHWFCAWNVAVBWQWSWGVCVF
      SVGWJWGEVHSVIVJVKVL $.
      $( [16-Jan-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( Range of the intersection with a cross product.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    rninxp $p |- ( ran ( C i^i ( A X. B ) ) = B <->
                 A. y e. B E. x e. A x C y ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [17-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y C $.
    $( Domain of the intersection with a cross product. $)
    dminxp $p |- ( dom ( C i^i ( A X. B ) ) = A <->
                 A. x e. A E. y e. B x C y ) $=
      (  ) ? $.
      $( [17-Jan-2006] $)
  $}

  ${
    $d x y R $.
    $( Alternate definition of relation.  Exercise 2 of [TakeutiZaring]
       p. 25. $)
    dfrel2 $p |- ( Rel R <-> `' `' R = R ) $=
      ( vx vy wrel ccnv wceq relcnv cv cop wcel vex opelcnv bitri eqrelriv mpan
      releq mpbii impbii ) ADZAEZEZAFZUADZSUBTGZBCUAABHZCHZIZUAJUFUEITJUGAJUEUF
      TBKZCKZLUFUEAUIUHLMNOUBUCSUDUAAPQR $.
      $( [15-Aug-2004] $) $( [29-Dec-1996] $)
  $}

  $( Equality theorem for converse.  (Contributed by FL, 19-Sep-2011.) $)
  cnveqb $p |- ( ( Rel A /\ Rel B ) -> ( A = B <-> `' A = `' B ) ) $=
    ( wrel wa wceq ccnv cnveq wi dfrel2 eqeq2 syl5ibr eqcoms sylbi eqeq1 imbi2d
    imp impbid2 ) ACZBCZDABEZAFZBFZEZABGRSUCTHZRUAFZAESUDHZAIUFAUESUDAUEEZUCUEB
    EZHZSUBFZBEUIBIUIBUJUCUHBUJEUEUJEUAUBGBUJUEJKLMUGTUHUCAUEBNOKLMPQ $.
    $( [19-Sep-2011] $)

  $( The double converse of a class strips out all elements that are not
     ordered pairs. $)
  cnvcnv $p |- `' `' A = ( A i^i ( _V X. _V ) ) $=
    ( cvv cxp ccnv cnvin cnveqi wrel wceq inss2 df-rel mpbir dfrel2 mpbi relcnv
    cin wss relxp sseqtr4i dfss eqtr4i 3eqtr3ri ) ABBCZOZDZDZADZUBDZOZDZUCUFDZU
    DUHAUBEFUCGZUEUCHUKUCUBPAUBIUCJKUCLMUIUJUGDZOZUJUFUGEUJULPUJUMHUJUBULUJGUJU
    BPUFNUJJMUBGULUBHBBQUBLMRUJULSMTUA $.
    $( [8-Dec-2003] $)

  $( The double converse of a class equals its restriction to the universe. $)
  cnvcnv2 $p |- `' `' A = ( A |` _V ) $=
    ( ccnv cvv cxp cin cres cnvcnv df-res eqtr4i ) ABBACCDEACFAGACHI $.
    $( [8-Oct-2007] $)

  $( The double converse of a class is a subclass.  Exercise 2 of
     [TakeutiZaring] p. 25. $)
  cnvcnvss $p |- `' `' A C_ A $=
    ( ccnv cvv cxp cin cnvcnv inss1 eqsstri ) ABBACCDZEAAFAIGH $.
    $( [23-Jul-2004] $)
  ${
    $d x y A $.
    $( The domain of a singleton is nonzero iff the singleton argument is an
       ordered pair.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmsnn0 $p |- ( A e. ( _V X. _V ) <-> dom { A } =/= (/) ) $=
      (  ) ? $.
      $( [27-Aug-2011] $) $( [14-Dec-2008] $)
  $}

  $( The range of a singleton is nonzero iff the singleton argument is an
     ordered pair. $)
  rnsnn0 $p |- ( A e. ( _V X. _V ) <-> ran { A } =/= (/) ) $=
    ( cvv cxp wcel csn cdm c0 wne crn dmsnn0 dm0rn0 necon3bii bitri ) ABBCDAEZF
    ZGHNIZGHAJOGPGNKLM $.
    $( [14-Dec-2008] $)

  $( The domain of the singleton of the empty set is empty. $)
  dmsn0 $p |- dom { (/) } = (/) $=
    ( c0 csn cdm wceq cvv cxp wcel wn 0nelxp dmsnn0 necon2bbii mpbir ) ABCZADAE
    EFGZHEEINMAAJKL $.
    $( [17-Dec-2008] $) $( [30-Jan-2004] $)

  $( The domain of a singleton is empty if the singleton's argument contains
     the empty set. $)
  dmsn0el $p |- ( (/) e. A -> dom { A } = (/) ) $=
    ( c0 wcel csn cdm wne cvv cxp wn dmsnn0 0nelelxp sylbir necon4ai ) BACZADEZ
    BOBFAGGHCNIAJGGAKLM $.
    $( [15-Dec-2008] $)

  ${
    relsn2.1 $e |- A e. _V $.
    $( A singleton is a relation iff it has a nonempty domain. $)
    relsn2 $p |- ( Rel { A } <-> dom { A } =/= (/) ) $=
      ( csn wrel cvv cxp wcel cdm c0 wne relsn dmsnn0 bitri ) ACZDAEEFGNHIJABKA
      LM $.
      $( [25-Sep-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a singleton of an ordered pair is the singleton of the
       first member.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmsnop $p |- dom { << A , B >> } = { A } $=
      ( vx vy cop csn cdm wcel wex wceq opex elsnc exbii vex opth1 opeq2 eqeq2d
      cv eximi exbidv exlimiv cvv isset sylbi wn a9e ax-mp opprc2 pm2.61i opeq1
      mpbiri mpbii impbii bitri eldm2 elsn 3bitr4i eqriv ) CABEZFZGZAFZCRZDRZEZ
      UTHZDIZVCAJZVCVAHVCVBHVGVEUSJZDIZVHVFVIDVEUSVCVDKLMVJVHVIVHDVCVDABCNZOUAV
      HVEVCBEZJZDIZVJBUBHZVNVOVDBJZDIVNDBUCVPVMDVDBVCPSUDVOUEZVNVEVCVCEZJZDIZVD
      VCJZDIVTDCUFWAVSDVDVCVCPSUGVQVMVSDVQVLVRVEVCBUHQTUKUIVHVMVIDVHVLUSVEVCABU
      JQTULUMUNDVCUTVKUOCAUPUQUR $.
      $( [27-Aug-2011] $) $( [30-Jan-2004] $)
  $}

  $( The domain of an unordered pair of ordered pairs. $)
  dmprop $p |- dom { << A , C >> , << B , D >> } = { A , B } $=
    ( cop cpr cdm csn cun df-pr dmeqi dmsnop uneq12i dmun 3eqtr4i eqtri ) ACEZB
    DEZFZGQHZRHZIZGZABFZSUBQRJKTGZUAGZIAHZBHZIUCUDUEUGUFUHACLBDLMTUANABJOP $.
    $( [13-Sep-2011] $)

  $( The domain of an unordered triple of ordered pairs. $)
  dmtpop $p |- dom { << A , D >> , << B , E >> , << C , F >> }
                      = { A , B , C } $=
    ( cop ctp cdm cpr csn df-tp dmeqi dmun dmprop dmsnop uneq12i 3eqtri eqtr4i
    cun ) ADGZBEGZCFGZHZIZABJZCKZTZABCHUEUAUBJZUCKZTZIUIIZUJIZTUHUDUKUAUBUCLMUI
    UJNULUFUMUGABDEOCFPQRABCLS $.
    $( [14-Sep-2011] $)

  $( The domain of the singleton of the singleton of a singleton. $)
  dmsnsnsn $p |- dom { { { A } } } = { A } $=
    ( cop csn cdm cpr dfsn2 preq2i df-op 3eqtr4ri sneqi dmeqi dmsnop eqtr3i ) A
    ABZCZDACZCZCZDPORNQPPEPAAEZEQNPSPAFGPFAAHIJKAALM $.
    $( [15-Sep-2004] $)

  ${
    op1sta.1 $e |- A e. _V $.
    $( Extract the first member of an ordered pair.  (See ~ op2nda to extract
       the second member, ~ op1stb for an alternate version, and ~ op1st for
       the preferred version..)  (Contributed by Raph Levien, 4-Dec-2003.) $)
    op1sta $p |- U. dom { << A , B >> } = A $=
      ( cop csn cdm cuni dmsnop unieqi unisn eqtri ) ABDEFZGAEZGALMABHIACJK $.
      $( [4-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    cnvsn.1 $e |- A e. _V $.
    cnvsn.2 $e |- B e. _V $.
    $( Converse of a singleton of an ordered pair. $)
    cnvsn $p |- `' { << A , B >> } = { << B , A >> } $=
      ( vy vx cop csn ccnv relcnv relsnop cv wceq wa wcel ancom opex elsnc opth
      vex bitri opelcnv 3bitri 3bitr4ri eqrelriiv ) EFABGZHZIZBAGZHZUGJBADKELZB
      MZFLZAMZNZUNULNZUKUMGZUJOZUQUHOZULUNPURUQUIMUOUQUIUKUMQRUKUMBAETZFTZCSUAU
      SUMUKGZUGOVBUFMUPUKUMUGUTVAUBVBUFUMUKQRUMUKABVAUTDSUCUDUE $.
      $( [11-May-1998] $)

    $( Swap the members of an ordered pair. $)
    opswap $p |- U. `' { << A , B >> } = << B , A >> $=
      ( cop csn ccnv cuni cnvsn unieqi opex unisn eqtri ) ABEFGZHBAEZFZHONPABCD
      IJOBAKLM $.
      $( [14-Dec-2008] $)

    $( The range of a singleton of an ordered pair is the singleton of the
       second member. $)
    rnsnop $p |- ran { << A , B >> } = { B } $=
      ( cop csn crn ccnv cdm df-rn cnvsn dmeqi dmsnop 3eqtri ) ABEFZGOHZIBAEFZI
      BFOJPQABCDKLBAMN $.
      $( [24-Jul-2004] $)

    $( Extract the second member of an ordered pair.  Theorem 5.12(ii) of
       [Monk1] p. 52.  (See ~ op1stb to extract the first member, ~ op2nda for
       an alternate version, and ~ op2nd for the preferred version.) $)
    op2ndb $p |- |^| |^| |^| `' { << A , B >> } = B $=
      ( cop csn ccnv cint cnvsn inteqi opex intsn eqtri op1stb ) ABEFGZHZHZHBAE
      ZHZHBQSPRPRFZHROTABCDIJRBAKLMJJBADNM $.
      $( [25-Nov-2003] $)

    $( Extract the second member of an ordered pair.  (See ~ op1sta to extract
       the first member, ~ op2ndb for an alternate version, and ~ op2nd for the
       preferred version.)  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    op2nda $p |- U. ran { << A , B >> } = B $=
      ( cop csn crn cuni rnsnop unieqi unisn eqtri ) ABEFGZHBFZHBMNABCDIJBDKL
      $.
      $( [27-Aug-2011] $) $( [17-Feb-2004] $)
  $}

  $( Alternate definition of relation. $)
  dfrel3 $p |- ( Rel R <-> ( R |` _V ) = R ) $=
    ( wrel ccnv wceq cvv cres dfrel2 cnvcnv2 eqeq1i bitri ) ABACCZADAEFZADAGKLA
    AHIJ $.
    $( [14-May-2008] $)

  $( The domain of a universal restriction. $)
  dmresv $p |- dom ( A |` _V ) = dom A $=
    ( cvv cres cdm cin dmres incom inv1 3eqtri ) ABCDBADZEJBEJABFBJGJHI $.
    $( [14-May-2008] $)

  $( The range of a universal restriction. $)
  rnresv $p |- ran ( A |` _V ) = ran A $=
    ( ccnv crn cvv cres cnvcnv2 rneqi rncnvcnv eqtr3i ) ABBZCADEZCACJKAFGAHI $.
    $( [14-May-2008] $)

  $( Range defined in terms of image. $)
  dfrn4 $p |- ran A = ( A " _V ) $=
    ( cvv cima cres crn df-ima rnresv eqtr2i ) ABCABDEAEABFAGH $.
    $( [14-May-2008] $)

  $( The restriction of the double converse of a class.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  rescnvcnv $p |- ( `' `' A |` B ) = ( A |` B ) $=
    ( ccnv cres cvv cin wceq cnvcnv2 reseq1 resres wss ssv sseqin2 mpbi reseq2i
    ax-mp 3eqtri ) ACCZBDZAEDZBDZAEBFZDABDRTGSUAGAHRTBIPAEBJUBBABEKUBBGBLBEMNOQ
    $.
    $( [27-Aug-2011] $) $( [8-Apr-2007] $)

  $( The double converse of the restriction of a class. $)
  cnvcnvres $p |- `' `' ( A |` B ) = ( `' `' A |` B ) $=
    ( cres ccnv wrel wceq relres dfrel2 mpbi rescnvcnv eqtr4i ) ABCZDDZLADDBCLE
    MLFABGLHIABJK $.
    $( [3-Jun-2007] $)

  $( The image of the double converse of a class. $)
  imacnvcnv $p |- ( `' `' A " B ) = ( A " B ) $=
    ( ccnv cres crn cima rescnvcnv rneqi df-ima 3eqtr4i ) ACCZBDZEABDZEKBFABFLM
    ABGHKBIABIJ $.
    $( [8-Apr-2007] $)

  ${
    $d s t A $.  $d s t B $.  $d s t F $.
    $( An image under the converse of a restriction.  (Contributed by Jeff
       Hankins, 12-Jul-2009.) $)
    cnvresima $p |- ( `' ( F |` A ) " B ) = ( ( `' F " B ) i^i A ) $=
      ( vt vs cres ccnv cima cin wcel cop wex vex elima3 opelres opelcnv anbi1i
      cv wa 3bitr4i anbi2i anass bitr4i exbii 19.41v bitri bitr2i 3bitri eqriv
      elin ) DCAFZGZBHZCGZBHZAIZDRZUMJERZBJZURUQKZULJZSZELZUSUTUNJZSZELZUQAJZSZ
      UQUPJZEUQULBDMZNVCVEVGSZELVHVBVKEVBUSVDVGSZSVKVAVLUSUQURKZUKJVMCJZVGSVAVL
      UQURCAEMZOURUQUKVOVJPVDVNVGURUQCVOVJPQTUAUSVDVGUBUCUDVEVGEUEUFVIUQUOJZVGS
      VHUQUOAUJVPVFVGEUQUNBVJNQUGUHUI $.
      $( [12-Jul-2009] $)
  $}

  $( A class restricted to its domain equals its double converse. $)
  resdm2 $p |- ( A |` dom A ) = `' `' A $=
    ( ccnv cdm cres rescnvcnv wrel relcnv resdm ax-mp dmcnvcnv reseq2i 3eqtr3ri
    wceq ) ABZBZOCZDZAPDOAACZDAPEOFQOMNGOHIPRAAJKL $.
    $( [8-Apr-2007] $)

  $( Restriction to the domain of a restriction. $)
  resdmres $p |- ( A |` dom ( A |` B ) ) = ( A |` B ) $=
    ( cres cdm ccnv cvv cxp in12 df-res resdm2 eqtr3i ineq2i incom 3eqtri dmres
    cin xpeq1i xpindir eqtri 3eqtr4i rescnvcnv ) AABCZDZCZAEEZBCZUBABFGZADZFGZP
    ZPZUEUGPZUDUFUKUGAUIPZPUGUEPULAUGUIHUMUEUGAUHCUMUEAUHIAJKLUGUEMNUDAUCFGZPUK
    AUCIUNUJAUNBUHPZFGUJUCUOFABOQBUHFRSLSUEBITABUAS $.
    $( [8-Apr-2007] $)

  $( The image of the domain of a restriction. $)
  imadmres $p |- ( A " dom ( A |` B ) ) = ( A " B ) $=
    ( cres cdm crn cima resdmres rneqi df-ima 3eqtr4i ) AABCZDZCZEKEALFABFMKABG
    HALIABIJ $.
    $( [8-Apr-2007] $)


  ${
    $d x y A $.
    $( A relation is included in the cross product of its domain and range.
       Exercise 4.12(t) of [Mendelson] p. 235. $)
    relssdmrn $p |- ( Rel A -> A C_ ( dom A X. ran A ) ) $=
      ( vx vy wrel cdm crn cxp id cv cop wi wex 19.8a wa vex opelxp eldm2 elrn2
      wcel anbi12i bitri sylanbrc a1i relssdv ) ADZBCAAEZAFZGZUEHBIZCIZJZASZUKU
      HSZKUEULULCLZULBLZUMULCMULBMUMUIUFSZUJUGSZNUNUONUIUJUFUGCOZPUPUNUQUOCUIAB
      OQBUJAURRTUAUBUCUD $.
      $( [3-Aug-1994] $)
  $}

  $( Two ways to describe the structure of a two-place operation. $)
  relrelss $p |- ( ( Rel A /\ Rel dom A ) <-> A C_ ( ( _V X. _V ) X. _V ) ) $=
    ( wrel cdm wa cvv cxp wss df-rel anbi2i crn relssdmrn xpss12 mpan2 sylan9ss
    ssv xpss sstr sylibr dmss c0 wne wceq vn0 dmxp ax-mp syl6sseq impbii bitri
    jca ) ABZACZBZDUJUKEEFZGZDZAUMEFZGZULUNUJUKHIUOUQUJUNAUKAJZFZUPAKUNUREGUSUP
    GUROUKUMURELMNUQUJUNUQAUMGZUJUQUPUMGUTUMEPAUPUMQMAHRUQUKUPCZUMAUPSETUAVAUMU
    BUCUMEUDUEUFUIUGUH $.
    $( [17-Dec-2008] $)

  ${
    $d x y A $.  $d x y R $.
    $( The membership relation for a relation is inherited by class union. $)
    unielrel $p |- ( ( Rel R /\ A e. R ) -> U. A e. U. R ) $=
      ( vx vy wrel wcel wa cv cop wceq wex cuni elrel simpr uniopel eleq1 unieq
      wi a1i eleq1d 3imtr4d exlimivv sylc ) BEZABFZGACHZDHZIZJZDKCKUEALZBLZFZCD
      ABMUDUENUIUEULRCDUIUHBFZUHLZUKFZUEULUMUORUIUFUGBOSAUHBPUIUJUNUKAUHQTUAUBU
      C $.
      $( [17-Sep-2006] $)
  $}

  $( The double union of a relation is its field. $)
  relfld $p |- ( Rel R -> U. U. R = ( dom R u. ran R ) ) $=
    ( wrel cuni cdm crn cun cxp wss relssdmrn 3syl unixpss syl6ss dmrnssfld a1i
    uniss eqssd ) ABZACZCZADZAEZFZQSTUAGZCZCZUBQAUCHRUDHSUEHAIAUCORUDOJTUAKLUBS
    HQAMNP $.
    $( [17-Sep-2006] $)

  $( Restriction of a relation to its field.  (Contributed by FL,
     15-Apr-2012.) $)
  relresfld $p |- ( Rel R -> ( R |` U. U. R ) = R ) $=
    ( wrel cuni cres wceq cdm crn cun wi relfld reseq2 resundi eqtr resss resdm
    wa wss ssequn2 uneq1 eqeq2d ex com3r sylbi mpsyl syl5com mpan2 3syl pm2.43i
    syl6bi ) ABZAACCZDZAEZUJUKAFZAGZHZEULAUPDZEZUJUMIZAJUKUPAKURUQAUNDZAUODZHZE
    ZUSAUNUOLURVCPULVBEZUJUMULUQVBMVAAQZUJUTAEZVDUMIZAUONAOVEAVAHZAEZVFVGIVAARV
    FVDVIUMVFVDULVHEZVIUMIVFVBVHULUTAVASTVJVIUMULVHAMUAUIUBUCUDUEUFUGUH $.
    $( [15-Apr-2012] $)

  $( The double union of the converse of a class is its field. $)
  unidmrn $p |- U. U. `' A = ( dom A u. ran A ) $=
    ( ccnv crn cdm cuni uncom dfdm4 df-rn uneq12i wrel wceq relcnv relfld ax-mp
    cun 3eqtr4ri ) ABZCZQDZOSROZADZACZOQEEZRSFUARUBSAGAHIQJUCTKALQMNP $.
    $( [4-Jun-2008] $)

  $( if ` R ` is a relation, its double union equals the double union of its
     converse.  (Contributed by FL, 5-Jan-2009.) $)
  relcnvfld $p |- ( Rel R -> U. U. R = U. U. `' R ) $=
    ( wrel cuni cdm crn cun ccnv relfld unidmrn syl6eqr ) ABACCADAEFAGCCAHAIJ
    $.
    $( [5-Jan-2009] $)

  $( The double class union of a non-empty cross product is the union of it
     members. $)
  unixp $p |- ( ( A X. B ) =/= (/) -> U. U. ( A X. B ) = ( A u. B ) ) $=
    ( cxp c0 wne cuni cdm crn cun wrel wceq relxp relfld ax-mp xpeq2 xp0 syl6eq
    necon3i xpeq1 xp0r dmxp rnxp uneq12 syl2an syl2anc syl5eq ) ABCZDEZUGFFZUGG
    ZUGHZIZABIZUGJUIULKABLUGMNUHBDEZADEZULUMKZBDUGDBDKUGADCDBDAOAPQRADUGDADKUGD
    BCDADBSBTQRUNUJAKUKBKUPUOABUAABUBUJAUKBUCUDUEUF $.
    $( [17-Sep-2006] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is empty iff its union is empty. $)
    unixp0 $p |- ( ( A X. B ) = (/) <-> U. ( A X. B ) = (/) ) $=
      ( vz vx vy cxp c0 wceq cuni unieq uni0 syl6eq wn cv wcel wex neq0 cop wss
      sylbi wa elxp3 csn snssi opex unisn uniss syl5eqssr opnz sseq2 biimpd ss0
      syl6com mtoi 3syl adantl exlimivv exlimiv con4i impbii ) ABFZGHZVAIZGHZVB
      VCGIGVAGJKLVBVDVBMCNZVAOZCPVDMZCVAQVFVGCVFDNZENZRZVEHZVJVAOZUAZEPDPVGDEVE
      ABUBVMVGDEVLVGVKVLVJUCZVASZVJVCSZVGVJVAUDVOVJVNIVCVJVHVIUEUFVNVAUGUHVPVDV
      JGHZVHVIUIVDVPVJGSZVQVDVPVRVCGVJUJUKVJULUMUNUOUPUQTURTUSUT $.
      $( [20-Sep-2006] $)
  $}

  ${
    $d A a b x $.  $d B a b $.
    $( The converse of an intersection is the intersection of the converse.
       (Contributed by FL, 15-Oct-2012.) $)
    cnviin $p |- ( A =/= (/) -> `' |^|_ x e. A B = |^|_ x e. A `' B ) $=
      ( va vb ciin ccnv wrel relcnv cvv wss wral cv wcel df-rel cop eliin ax-mp
      wb opex c0 wne wceq cxp wrex r19.2z expcom mpbi a1i mprg iinss syl sylibr
      wi vex opelcnv ralbii bitri 3bitr4i eqrelriv sylancr ) BUAUBZABCFZGZHABCG
      ZFZHZVDVFUCVCIVBVFJJUDZKZVGVBVEVHKZABUEZVIVJVBVKUNABVBVJABLVKVJABUFUGVJAM
      BNVEHVJCIVEOUHUIUJABVEVHUKULVFOUMDEVDVFEMZDMZPZVCNZVNCNZABLZVMVLPZVDNVRVF
      NZVNJNVOVQSVLVMTAVNBCJQRVMVLVCDUOZEUOZUPVSVRVENZABLZVQVRJNVSWCSVMVLTAVRBV
      EJQRWBVPABVMVLCVTWAUPUQURUSUTVA $.
      $( [15-Oct-2012] $)
  $}



$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Existence theorems for Kuratowski relationships
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${ $d A x y z w t $.
     $( The cross product of ` _V ` and a set is a set. $)
     vxpexg $p |- ( A e. V -> ( _V X. A ) e. _V ) $=
       ( vx vz vy vt vw cvv cv cxp wcel wceq xpeq2 wel wa wex wb wal vex bitri
       eleq1d cop ax-xp dfcleq biantrur anbi2i ancom bitr3i 2exbii bibi2i albii
       elxp biimpri syl6eqelr exlimiv ax-mp vtoclg ) HCIZJZHKZHAJZHKCABURALUSVA
       HURAHMUADENZFCNZDIZGIZFIUBLZOZFPGPZQZDRZEPUTCEDGFUCVJUTEVJUSEIZHVKUSLZVJ
       VLVBVDUSKZQZDRVJDVKUSUDVNVIDVMVHVBVMVFVEHKZVCOZOZFPGPVHGFVDHURULVQVGGFVQ
       VFVCOVGVCVPVFVOVCGSUEUFVFVCUGUHUITUJUKTUMESUNUOUPUQ $.
       $( [27-Dec-2014] $)
  $}

  ${ $d A x y z w $.
    $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
       p. 26. $)
    cnvexg $p |- ( A e. V -> `' A e. _V ) $=
      ( vx vz vw vy cv ccnv cvv wcel wceq cnveq eleq1d cop wal wrel mp2an ax-mp
      wb vex wex ax-cnv cxp cin wss inss1 relxp relss relcnv eqrel elin mpbiran
      mp2 opelvv opelcnv bibi12i 2albii bitri biimpri vvex vxpexg inexg exlimiv
      syl6eqelr vtoclg ) CGZHZIJZAHZIJCABVFAKVGVIIVFALMDGZEGZNZFGZJZVKVJNVFJZSZ
      EODOZFUAVHCFDEUBVQVHFVQVGIIUCZVMUDZIVSVGKZVQVTVLVSJZVLVGJZSZEODOZVQVSPZVG
      PVTWDSVSVRUEVRPWEVRVMUFIIUGVSVRUHUMVFUIDEVSVGUJQWCVPDEWAVNWBVOWAVLVRJVNVL
      VRVMUKVJVKDTZUNULVJVKVFWFETUOUPUQURUSVRIJZVMIJVSIJIIJWGUTIIVARFTVRVMIIVBQ
      VDVCRVE $.
      $( [27-Dec-2014] $)
  $}

  ${
    cnvex.1 $e |- A e. _V $.
    $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
       p. 26. $)
    cnvex $p |- `' A e. _V $=
      ( cvv wcel ccnv cnvexg ax-mp ) ACDAECDBACFG $.
      $( [19-Dec-2003] $)
  $}

  $( A relation is a set iff its converse is a set.  (Contributed by FL,
     3-Mar-2007.) $)
  relcnvexb $p |- ( Rel R -> ( R e. _V <-> `' R e. _V ) ) $=
    ( wrel cvv wcel ccnv cnvexg wceq wi dfrel2 eleq1 syl5ib sylbi impbid2 ) ABZ
    ACDZAEZCDZACFNPEZAGZQOHAIQRCDSOPCFRACJKLM $.
    $( [5-Mar-2007] $)

  $( The cross product of two sets is a set.  Proposition 6.2 of
     [TakeutiZaring] p. 23. $)
  xpexg $p |- ( ( A e. V /\ B e. W ) -> ( A X. B ) e. _V ) $=
    ( wcel wa cxp cvv cin inxp inv1 incom eqtri xpeq12i cnvxp vxpexg cnvexg syl
    ccnv syl5eqelr inexg syl2an ) ACEZBDEZFABGZAHGZHBGZIZHUHAHIZHBIZGUEAHHBJUIA
    UJBAKUJBHIBHBLBKMNMUCUFHEUGHEUHHEUDUCUFHAGZSZHHAOUCUKHEULHEACPUKHQRTBDPUFUG
    HHUAUBT $.
    $( [14-Aug-1994] $)

  ${
    xpex.1 $e |- A e. _V $.
    xpex.2 $e |- B e. _V $.
    $( The cross product of two sets is a set.  Proposition 6.2 of
       [TakeutiZaring] p. 23. $)
    xpex $p |- ( A X. B ) e. _V $=
      ( cvv wcel cxp xpexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Aug-1994] $)
  $}

  $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring] p. 26.
     Similar to Lemma 3D of [Enderton] p. 41. $)
  rnexg $p |- ( A e. V -> ran A e. _V ) $= ? $.

  $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
     p. 26. $)
  dmexg $p |- ( A e. V -> dom A e. _V ) $=
    ( wcel cdm ccnv crn cvv dfdm4 cnvexg rnexg syl syl5eqel ) ABCZADAEZFZGAHMNG
    COGCABINGJKL $.
    $( [28-Dec-2014] $)


  $( The restriction of a set to a set is a set. $)
  resexg $p |- ( ( A e. V /\ B e. W ) -> ( A |` B ) e. _V ) $=
    ( wcel wa cres cvv cxp cin df-res vvex xpexg mpan2 inexg sylan2 syl5eqel )
    ACEZBDEZFABGABHIZJZHABKSRTHEZUAHESHHEUBLBHDHMNATCHOPQ $.
    $( [28-Dec-2014] $)

  ${
    resex.1 $e |- A e. _V $.
    resex.2 $e |- B e. _V $.
    $( The restriction of a set to a set is a set. $)
    resex $p |- ( A |` B ) e. _V $=
      ( cvv wcel cres resexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [28-Dec-2014] $)
  $}

  ${
    dmex.1 $e |- A e. _V $.
    $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
       p. 26. $)
    dmex $p |- dom A e. _V $=
      ( cvv wcel cdm dmexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)

    $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring]
       p. 26.  Similar to Lemma 3D of [Enderton] p. 41. $)
    rnex $p |- ran A e. _V $=
      ( cvv wcel crn rnexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)
  $}

  $( The image of a set under a set is a set. $)
  imaexg $p |- ( ( A e. V /\ B e. W ) -> ( A " B ) e. _V ) $= ? $.
