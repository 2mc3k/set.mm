$( -*-text-*- $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                           Pre-logic
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

  $( Declare the primitive constant symbols for propositional calculus. $)
  $c ( $.  $( Left parenthesis $)
  $c ) $.  $( Right parenthesis $)
  $c -> $. $( Right arrow (read:  "implies") $)
  $c -. $. $( Right handle (read:  "not") $)
  $c wff $. $( Well-formed formula symbol (read:  "the following symbol
               sequence is a wff") $)
  $c |- $. $( Turnstile (read:  "the following symbol sequence is provable" or
              'a proof exists for") $)

  $( wff variable sequence:  ph ps ch th ta et ze si rh mu la ka $)
  $( Introduce some variable names we will use to represent well-formed
     formulas (wff's). $)
  $v ph $.  $( Greek phi $)
  $v ps $.  $( Greek psi $)
  $v ch $.  $( Greek chi $)
  $v th $.  $( Greek theta $)
  $v ta $.  $( Greek tau $)
  $v et $.  $( Greek eta $)
  $v ze $.  $( Greek zeta $)
  $v si $.  $( Greek sigma $)
  $v rh $.  $( Greek rho $)
  $v mu $.  $( Greek mu $)
  $v la $.  $( Greek lambda $)
  $v ka $.  $( Greek kappa $)

  $( Specify some variables that we will use to represent wff's.
     The fact that a variable represents a wff is relevant only to a theorem
     referring to that variable, so we may use $f hypotheses.  The symbol
     ` wff ` specifies that the variable that follows it represents a wff. $)
  $( Let variable ` ph ` be a wff. $)
  wph $f wff ph $.
  $( Let variable ` ps ` be a wff. $)
  wps $f wff ps $.
  $( Let variable ` ch ` be a wff. $)
  wch $f wff ch $.
  $( Let variable ` th ` be a wff. $)
  wth $f wff th $.
  $( Let variable ` ta ` be a wff. $)
  wta $f wff ta $.
  $( Let variable ` et ` be a wff. $)
  wet $f wff et $.
  $( Let variable ` ze ` be a wff. $)
  wze $f wff ze $.
  $( Let variable ` si ` be a wff. $)
  wsi $f wff si $.
  $( Let variable ` rh ` be a wff. $)
  wrh $f wff rh $.
  $( Let variable ` mu ` be a wff. $)
  wmu $f wff mu $.
  $( Let variable ` la ` be a wff. $)
  wla $f wff la $.
  $( Let variable ` ka ` be a wff. $)
  wka $f wff ka $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Dummy link theorem for assisting proof development
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    dummylink.1 $e |- ph $.
    dummylink.2 $e |- ps $.
    $( (_Note_:  This theorem will never appear in a completed proof and can be
       ignored if you are using this database to learn logic - please start
       with the next statement, ~ wn .)

       This is a technical theorem to assist proof development.  It provides a
       temporary way to add an independent subproof to a proof under
       development, for later assignment to a normal proof step.

       The Metamath program's Proof Assistant requires proofs to be developed
       backwards from the conclusion with no gaps, and it has no mechanism that
       lets the user to work on isolated subproofs.  This theorem provides a
       workaround for this limitation.  It can be inserted at any point in a
       proof to allow an independent subproof to be developed on the side, for
       later use as part of the final proof.

       _Instructions_:  (1) Assign this theorem to any unknown step in the
       proof.  Typically, the last unknown step is the most convenient, since
       'assign last' can be used.  This step will be replicated in hypothesis
       dummylink.1, from where the development of the main proof can continue.
       (2) Develop the independent subproof backwards from hypothesis
       dummylink.2.  If desired, use a 'let' command to pre-assign the
       conclusion of the independent subproof to dummylink.2.  (3) After the
       independent subproof is complete, use 'improve all' to assign it
       automatically to an unknown step in the main proof that matches it.  (4)
       After the entire proof is complete, use 'minimize */n/b/e 3syl,we?,wsb'
       to clean up (discard) all dummylink references automatically.

       This theorem was originally designed to assist importing partially
       completed Proof Worksheets from Mel O'Cat's mmj2 Proof Assistant GUI,
       but it can also be useful on its own.  Interestingly, this "theorem" -
       or more precisely, inference - requires no axioms for its proof. $)
    dummylink $p |- ph $=
      (  ) C $.
      $( [7-Feb-2006] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                           Propositional calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Recursively define primitive wffs for propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( If ` ph ` is a wff, so is ` -. ph ` or "not ` ph ` ."  Part of the
     recursive definition of a wff (well-formed formula).  In classical logic
     (which is our logic), a wff is interpreted as either true or false.  So if
     ` ph ` is true, then ` -. ph ` is false; if ` ph ` is false, then
     ` -. ph ` is true.  Traditionally, Greek letters are used to represent
     wffs, and we follow this convention.  In propositional calculus, we define
     only wffs built up from other wffs, i.e. there is no starting or "atomic"
     wff.  Later, in predicate calculus, we will extend the basic wff
     definition by including atomic wffs ( ~ weq and ~ wel ). $)
  wn $a wff -. ph $.

  $( If ` ph ` and ` ps ` are wff's, so is ` ( ph -> ps ) ` or " ` ph ` implies
     ` ps ` ."  Part of the recursive definition of a wff.  The resulting wff
     is (interpreted as) false when ` ph ` is true and ` ps ` is false; it is
     true otherwise.  (Think of the truth table for an OR gate with input
     ` ph ` connected through an inverter.)  The left-hand wff is called the
     antecedent, and the right-hand wff is called the consequent.  In the case
     of ` ( ph -> ( ps -> ch ) ) ` , the middle ` ps ` may be informally called
     either an antecedent or part of the consequent depending on context. $)
  wi $a wff ( ph -> ps ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The axioms of propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $(
     Postulate the three axioms of classical propositional calculus.
  $)

  $( Axiom _Simp_.  Axiom A1 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  The 3 axioms are also given as Definition 2.1 of
     [Hamilton] p. 28.  This axiom is called _Simp_ or "the principle of
     simplification" in _Principia Mathematica_ (Theorem *2.02 of
     [WhiteheadRussell] p. 100) because "it enables us to pass from the joint
     assertion of ` ph ` and ` ps ` to the assertion of ` ph ` simply."

     _General remarks_:  Propositional calculus (axioms ~ ax-1 through ~ ax-3
     and rule ~ ax-mp ) can be thought of as asserting formulas that are
     universally "true" when their variables are replaced by any combination of
     "true" and "false."  Propositional calculus was first formalized by Frege
     in 1879, using as his axioms (in addition to rule ~ ax-mp ) the wffs
     ~ ax-1 , ~ ax-2 , ~ pm2.04 , ~ con3 , ~ notnot2 , and ~ notnot1 .  Around
     1930, Lukasiewicz simplified the system by eliminating the third (which
     follows from the first two, as you can see by looking at the proof of
     ~ pm2.04 ) and replacing the last three with our ~ ax-3 .  (Thanks to Ted
     Ulrich for this information.)

     The theorems of propositional calculus are also called _tautologies_.
     Tautologies can be proved very simply using truth tables, based on the
     true/false interpretation of propositional calculus.  To do this, we
     assign all possible combinations of true and false to the wff variables
     and verify that the result (using the rules described in ~ wi and ~ wn )
     always evaluates to true.  This is called the _semantic_ approach.  Our
     approach is called the _syntactic_ approach, in which everything is
     derived from axioms.  A metatheorem called the Completeness Theorem for
     Propositional Calculus shows that the two approaches are equivalent and
     even provides an algorithm for automatically generating syntactic proofs
     from a truth table.  Those proofs, however, tend to be long, and the much
     shorter proofs that we show here were found manually.  Truth tables grow
     exponentially with the number of variables, but it is unknown if the same
     is true of proofs - an answer to this would resolve the P=NP conjecture in
     complexity theory. $)
  ax-1 $a |- ( ph -> ( ps -> ph ) ) $.

  $( Axiom _Frege_.  Axiom A2 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  It "distributes" an antecedent over two
     consequents.  This axiom was part of Frege's original system and is known
     as _Frege_ in the literature.  It is also proved as Theorem *2.77 of
     [WhiteheadRussell] p. 108.  The other direction of this axiom also turns
     out to be true, as demonstrated by ~ pm5.41 . $)
  ax-2 $a |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) $.

  $( Axiom _Transp_.  Axiom A3 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  It swaps or "transposes" the order of the
     consequents when negation is removed.  An informal example is that the
     statement "if there are no clouds in the sky, it is not raining" implies
     the statement "if it is raining, there are clouds in the sky."  This axiom
     is called _Transp_ or "the principle of transposition" in _Principia
     Mathematica_ (Theorem *2.17 of [WhiteheadRussell] p. 103).  We will also
     use the term "contraposition" for this principle, although the reader is
     advised that in the field of philosophical logic, "contraposition" has a
     different technical meaning. $)
  ax-3 $a |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) $.

  $(
     Postulate the modus ponens rule of inference.
  $)

  ${
    $( Minor premise for modus ponens. $)
    min $e |- ph $.
    $( Major premise for modus ponens. $)
    maj $e |- ( ph -> ps ) $.
    $( Rule of Modus Ponens.  The postulated inference rule of propositional
       calculus.  See e.g.  Rule 1 of [Hamilton] p. 73.  The rule says, "if
       ` ph ` is true, and ` ph ` implies ` ps ` , then ` ps ` must also be
       true."  This rule is sometimes called "detachment," since it detaches
       the minor premise from the major premise.

       Note:  In some web page displays such as the Statement List, the symbols
       "&" and "=>" informally indicate the relationship between the hypotheses
       and the assertion (conclusion), abbreviating the English words "and" and
       "implies."  They are not part of the formal language. $)
    ax-mp $a |- ps $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical implication
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( The results in this section are based on implication only, and avoid ax-3.
   In an implication, the wff before the arrow is called the "antecedent" and
   the wff after the arrow is called the "consequent." $)

$( We will use the following descriptive terms very loosely:  A "closed form"
   or "tautology" has no $e hypotheses.  An "inference" has one or more $e
   hypotheses.  A "deduction" is an inference in which the hypotheses and the
   conclusion share the same antecedent. $)

  ${
    $( Premise for ~ a1i . $)
    a1i.1 $e |- ph $.
    $( Inference derived from axiom ~ ax-1 .  See ~ a1d for an explanation of
       our informal use of the terms "inference" and "deduction."  See also the
       comment in ~ syld . $)
    a1i $p |- ( ps -> ph ) $=
      ( wi ax-1 ax-mp ) ABADCABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    a1i12.1 $e |- ch $.
    $( Add two antecedents to a wff.  (Contributed by Jeff Hankins,
       4-Aug-2009.) $)
    a1i12 $p |- ( ph -> ( ps -> ch ) ) $=
      ( wi a1i ) BCEACBDFF $.
      $( [18-Apr-2010] $) $( [4-Aug-2009] $)
  $}

  ${
    $( Premise for ~ a2i . $)
    a2i.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference derived from axiom ~ ax-2 . $)
    a2i $p |- ( ( ph -> ps ) -> ( ph -> ch ) ) $=
      ( wi ax-2 ax-mp ) ABCEEABEACEEDABCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpd.1 $e |- ( ph -> ps ) $.
    mpd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A modus ponens deduction. $)
    mpd $p |- ( ph -> ch ) $=
      ( wi a2i ax-mp ) ABFACFDABCEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim2i.1 $e |- ( ph -> ps ) $.
    $( Inference adding common antecedents in an implication. $)
    imim2i $p |- ( ( ch -> ph ) -> ( ch -> ps ) ) $=
      ( wi a1i a2i ) CABABECDFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( First of 2 premises for ~ syl . $)
    syl.1 $e |- ( ph -> ps ) $.
    $( Second of 2 premises for ~ syl . $)
    syl.2 $e |- ( ps -> ch ) $.
    $( An inference version of the transitive laws for implication ~ imim2 and
       ~ imim1 , which Russell and Whitehead call "the principle of the
       syllogism...because...the syllogism in Barbara is derived from them"
       (quote after Theorem *2.06 of [WhiteheadRussell] p. 101).  Some authors
       call this law a "hypothetical syllogism."  (The proof was shortened by
       O'Cat, 20-Oct-2011.)  (The proof was shortened by Wolf Lammen,
       26-Jul-2012.)

       (A bit of trivia: this is the most commonly referenced assertion in our
       database.  In second place is ~ ax-mp , followed by ~ visset , ~ bitri ,
       ~ imp , and ~ ex .  The Metamath program command 'show usage' shows the
       number of references.) $)
    syl $p |- ( ph -> ch ) $=
      ( wi a1i mpd ) ABCDBCFAEGH $.
      $( [27-Jul-2012] $) $( [5-Aug-1993] $)

    $( Obsolete previous proof of ~ syl . $)
    sylOLD $p |- ( ph -> ch ) $=
      ( wi imim2i ax-mp ) ABFACFDBCAEGH $.
      $( [22-Oct-2011] $) $( [5-Aug-1993] $)
  $}

  $( Principle of identity.  Theorem *2.08 of [WhiteheadRussell] p. 101.  For
     another version of the proof directly from axioms, see ~ id1 .  (The proof
     was shortened by Stefan Allan, 20-Mar-2006.) $)
  id $p |- ( ph -> ph ) $=
    ( wi ax-1 mpd ) AAABZAAACAECD $.
    $( [20-Mar-2006] $)

  $( Principle of identity.  Theorem *2.08 of [WhiteheadRussell] p. 101.  This
     version is proved directly from the axioms for demonstration purposes.
     This proof is a popular example in the literature and is identical, step
     for step, to the proofs of Theorem 1 of [Margaris] p. 51, Example 2.7(a)
     of [Hamilton] p. 31, Lemma 10.3 of [BellMachover] p. 36, and Lemma 1.8 of
     [Mendelson] p. 36.  It is also "Our first proof" in Hirst and Hirst's _A
     Primer for Logic and Proof_ p. 16 (PDF p. 22) at
     ~ http://www.mathsci.appstate.edu/~~jlh/primer/hirst.pdf .  For a shorter
     version of the proof that takes advantage of previously proved theorems,
     see ~ id . $)
  id1 $p |- ( ph -> ph ) $=
    ( wi ax-1 ax-2 ax-mp ) AAABZBZFAACAFABBGFBAFCAFADEE $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  idd $p |- ( ph -> ( ps -> ps ) ) $=
    ( wi id a1i ) BBCABDE $.
    $( [26-Nov-1995] $)

  ${
    a1d.1 $e |- ( ph -> ps ) $.
    $( Deduction introducing an embedded antecedent.  (The proof was revised by
       Stefan Allan, 20-Mar-2006.)

       _Naming convention_:  We often call a theorem a "deduction" and suffix
       its label with "d" whenever the hypotheses and conclusion are each
       prefixed with the same antecedent.  This allows us to use the theorem in
       places where (in traditional textbook formalizations) the standard
       Deduction Theorem would be used; here ` ph ` would be replaced with a
       conjunction ( ~ df-an ) of the hypotheses of the would-be deduction.  By
       contrast, we tend to call the simpler version with no common antecedent
       an "inference" and suffix its label with "i"; compare theorem ~ a1i .
       Finally, a "theorem" would be the form with no hypotheses; in this case
       the "theorem" form would be the original axiom ~ ax-1 .  We usually show
       the theorem form without a suffix on its label (e.g. ~ pm2.43 vs.
       ~ pm2.43i vs. ~ pm2.43d ).  When an inference is converted to a theorem
       by eliminating an "is a set" hypothesis, we sometimes suffix the theorem
       form with "g" (for "more general") as in ~ uniex vs. ~ uniexg . $)
    a1d $p |- ( ph -> ( ch -> ps ) ) $=
      ( wi ax-1 syl ) ABCBEDBCFG $.
      $( [20-Mar-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    a2d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Deduction distributing an embedded antecedent. $)
    a2d $p |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) $=
      ( wi ax-2 syl ) ABCDFFBCFBDFFEBCDGH $.
      $( [23-Jun-1994] $)
  $}

  ${
    mpdd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    mpdd.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction. $)
    mpdd $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a2d mpd ) ABCGBDGEABCDFHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpid.1 $e |- ( ph -> ch ) $.
    mpid.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction. $)
    mpid $p |- ( ph -> ( ps -> th ) ) $=
      ( a1d mpdd ) ABCDACBEGFH $.
      $( [14-Dec-2004] $)
  $}

  ${
    pm2.43a.1 $e |- ( ps -> ( ph -> ( ps -> ch ) ) ) $.
    $( Inference absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43a $p |- ( ps -> ( ph -> ch ) ) $=
      ( id mpid ) BABCBEDF $.
      $( [29-Nov-2008] $) $( [7-Nov-1995] $)
  $}

  ${
    sylcom.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylcom.2 $e |- ( ps -> ( ch -> th ) ) $.
    $( Syllogism inference with commutation of antecedents.  (The proof was
       shortened by O'Cat, 2-Feb-2006.)  (The proof was shortened by Stefan
       Allan, 23-Feb-2006.) $)
    sylcom $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a2i syl ) ABCGBDGEBCDFHI $.
      $( [23-Feb-2006] $) $( [29-Aug-2004] $)
  $}

  ${
    syl5com.2 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5com.1 $e |- ( th -> ps ) $.
    $( Syllogism inference with commuted antecedents. $)
    syl5com $p |- ( th -> ( ph -> ch ) ) $=
      ( a1d sylcom ) DABCDBAFGEH $.
      $( [24-May-2005] $)
  $}

  ${
    $( Premise for ~ com12 .  See ~ pm2.04 for the theorem form. $)
    com12.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference that swaps (commutes) antecedents in an implication.  (The
       proof was shortened by Wolf Lammen, 4-Aug-2012.) $)
    com12 $p |- ( ps -> ( ph -> ch ) ) $=
      ( id syl5com ) ABCBDBEF $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)

    $( Inference that swaps (commutes) antecedents in an implication. $)
    com12OLD $p |- ( ps -> ( ph -> ch ) ) $=
      ( wi ax-1 a2i syl ) BABEACEBAFABCDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim2d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding nested antecedents. $)
    imim2d $p |- ( ph -> ( ( th -> ps ) -> ( th -> ch ) ) ) $=
      ( wi a1d a2d ) ADBCABCFDEGH $.
      $( [5-Aug-1993] $)
  $}

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.05 of
     [WhiteheadRussell] p. 100.  (The proof was shortened by Wolf Lammen,
     6-Sep-2012.) $)
  imim2 $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi id imim2d ) ABDZABCGEF $.
    $( [6-Sep-2012] $) $( [5-Aug-1993] $)

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.05 of
     [WhiteheadRussell] p. 100. $)
  imim2OLD $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi ax-1 a2d ) ABDZCABGCEF $.
    $( [5-Aug-1993] $)

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.06 of
     [WhiteheadRussell] p. 100. $)
  imim1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi imim2 com12 ) BCDABDACDBCAEF $.
    $( [5-Aug-1993] $)

  ${
    imim1i.1OLD $e |- ( ph -> ps ) $.
    $( Inference adding common consequents in an implication, thereby
       interchanging the original antecedent and consequent. $)
    imim1iOLD $p |- ( ( ps -> ch ) -> ( ph -> ch ) ) $=
      ( wi imim1 ax-mp ) ABEBCEACEEDABCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    syld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syld.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Syllogism deduction.  (The proof was shortened by O'Cat, 19-Feb-2008.)
       (The proof was shortened by Wolf Lammen, 3-Aug-2012.)

       Notice that ~ syld has the same form as ~ syl with ` ph ` added in front
       of each hypothesis and conclusion.  When all theorems referenced in a
       proof are converted in this way, we can replace ` ph ` with a hypothesis
       of the proof, allowing the hypothesis to be eliminated with ~ id and
       become an antecedent.  The Deduction Theorem for propositional calculus,
       e.g.  Theorem 3 in [Margaris] p. 56, tells us that this procedure is
       always possible. $)
    syld $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1d mpdd ) ABCDEACDGBFHI $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)

    $( Syllogism deduction.  (The proof was shortened by O'Cat,
       19-Feb-2008.). $)
    syldOLD $p |- ( ph -> ( ps -> th ) ) $=
      ( wi imim2d mpd ) ABCGBDGEACDBFHI $.
      $( [19-Feb-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    syl5.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5.2 $e |- ( th -> ps ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the second antecedent of the first premise.  (The proof was shortened by
       Wolf Lammen, 3-Aug-2012.) $)
    syl5 $p |- ( ph -> ( th -> ch ) ) $=
      ( wi a1i syld ) ADBCDBGAFHEI $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)

    $( Obsolete previous proof. $)
    syl5OLD $p |- ( ph -> ( th -> ch ) ) $=
      ( wi imim1iOLD syl ) ABCGDCGEDBCFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim12i.1 $e |- ( ph -> ps ) $.
    imim12i.2 $e |- ( ch -> th ) $.
    $( Inference joining two implications.  (The proof was shortened by O'Cat,
       29-Oct-2011.) $)
    imim12i $p |- ( ( ps -> ch ) -> ( ph -> th ) ) $=
      ( wi imim2i syl5 ) BCGBDACDBFHEI $.
      $( [29-Oct-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    imim1i.1 $e |- ( ph -> ps ) $.
    $( Inference adding common consequents in an implication, thereby
       interchanging the original antecedent and consequent.  (The proof was
       shortened by Wolf Lammen, 4-Aug-2012.) $)
    imim1i $p |- ( ( ps -> ch ) -> ( ph -> ch ) ) $=
      ( id imim12i ) ABCCDCEF $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    imim3i.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference adding three nested antecedents. $)
    imim3i $p |- ( ( th -> ph ) -> ( ( th -> ps ) -> ( th -> ch ) ) ) $=
      ( wi imim2i a2d ) DAFDBCABCFDEGH $.
      $( [19-Dec-2006] $)
  $}

  ${
    3syl.1 $e |- ( ph -> ps ) $.
    3syl.2 $e |- ( ps -> ch ) $.
    3syl.3 $e |- ( ch -> th ) $.
    $( Inference chaining two syllogisms. $)
    3syl $p |- ( ph -> th ) $=
      ( syl ) ACDABCEFHGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6.2 $e |- ( ch -> th ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise.  (The proof was shortened by Wolf
       Lammen, 30-Jul-2012.) $)
    syl6 $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1i sylcom ) ABCDECDGBFHI $.
      $( [31-Jul-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of syl6. $)
    syl6OLD $p |- ( ph -> ( ps -> th ) ) $=
      ( wi imim2i syl ) ABCGBDGECDBFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syldd.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syldd.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    $( Nested syllogism deduction. $)
    syldd $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi imim2 syl6 mpdd ) ABCDHZCEHZFABDEHLMHGDECIJK $.
      $( [12-Dec-2004] $)
  $}

  ${
    syl5d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl5d.2 $e |- ( ph -> ( ta -> ch ) ) $.
    $( A nested syllogism deduction.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000 and shortened further by O'Cat, 2-Feb-2006.) $)
    syl5d $p |- ( ph -> ( ps -> ( ta -> th ) ) ) $=
      ( wi a1d syldd ) ABECDAECHBGIFJ $.
      $( [3-Feb-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    syl7.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl7.2 $e |- ( ta -> ch ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the third antecedent of the first premise.  (The proof was shortened by
       Wolf Lammen, 3-Aug-2012.) $)
    syl7 $p |- ( ph -> ( ps -> ( ta -> th ) ) ) $=
      ( wi a1i syl5d ) ABCDEFECHAGIJ $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of syl7. $)
    syl7OLD $p |- ( ph -> ( ps -> ( ta -> th ) ) ) $=
      ( wi imim1iOLD syl6 ) ABCDHEDHFECDGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl6d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( A nested syllogism deduction.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000 and shortened further by O'Cat, 2-Feb-2006.) $)
    syl6d $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi a1d syldd ) ABCDEFADEHBGIJ $.
      $( [3-Feb-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    syl8.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8.2 $e |- ( th -> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise.  (The proof was shortened by Wolf
       Lammen, 3-Aug-2012.) $)
    syl8 $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi a1i syl6d ) ABCDEFDEHAGIJ $.
      $( [3-Aug-2012] $) $( [1-Aug-1994] $)

    $( Obsolete proof of syl8. $)
    syl8OLD $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi imim2i syl6 ) ABCDHCEHFDECGIJ $.
      $( [1-Aug-1994] $)
  $}

  ${
    syl9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl9.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( A nested syllogism inference with different antecedents.  (The proof was
       shortened by Josh Purinton, 29-Dec-2000.) $)
    syl9 $p |- ( ph -> ( th -> ( ps -> ta ) ) ) $=
      ( wi a1i syl5d ) ADCEBDCEHHAGIFJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl9r.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl9r.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( A nested syllogism inference with different antecedents. $)
    syl9r $p |- ( th -> ( ph -> ( ps -> ta ) ) ) $=
      ( wi syl9 com12 ) ADBEHABCDEFGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    3syld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3syld.2 $e |- ( ph -> ( ch -> th ) ) $.
    3syld.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( Triple syllogism deduction.  (Contributed by Jeff Hankins,
       4-Aug-2009.) $)
    3syld $p |- ( ph -> ( ps -> ta ) ) $=
      ( syld ) ABDEABCDFGIHI $.
      $( [24-Sep-2010] $) $( [4-Aug-2009] $)
  $}

  ${
    sylsyld.1 $e |- ( ph -> ps ) $.
    sylsyld.2 $e |- ( ph -> ( ch -> th ) ) $.
    sylsyld.3 $e |- ( ps -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e12 without virtual deduction symbols.
       (Contributed by Alan Sare, 20-Apr-2011.) $)
    sylsyld $p |- ( ph -> ( ch -> ta ) ) $=
      ( wi syl syld ) ACDEGABDEIFHJK $.
      $( [20-Apr-2011] $)
  $}

  ${
    imim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    imim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Deduction combining antecedents and consequents.  (The proof was
       shortened by O'Cat, 30-Oct-2011.) $)
    imim12d $p |- ( ph -> ( ( ch -> th ) -> ( ps -> ta ) ) ) $=
      ( wi imim2d syl5d ) ACDHCEBADECGIFJ $.
      $( [3-Nov-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    imim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding nested consequents.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2012.) $)
    imim1d $p |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) $=
      ( idd imim12d ) ABCDDEADFG $.
      $( [12-Sep-2012] $) $( [3-Apr-1994] $)

    $( Deduction adding nested consequents. $)
    imim1dOLD $p |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) $=
      ( wi imim1 syl ) ABCFCDFBDFFEBCDGH $.
      $( [3-Apr-1994] $)
  $}

  $( This theorem, called "Assertion," can be thought of as closed form of
     modus ponens ~ ax-mp .  Theorem *2.27 of [WhiteheadRussell] p. 104. $)
  pm2.27 $p |- ( ph -> ( ( ph -> ps ) -> ps ) ) $=
    ( wi id com12 ) ABCZABFDE $.
    $( [5-Aug-1993] $)

  ${
    com3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Commutation of antecedents.  Swap 2nd and 3rd.  (The proof was shortened
       by Wolf Lammen, 4-Aug-2012.) $)
    com23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( wi pm2.27 syl9 ) ABCDFCDECDGH $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)

    $( Commutation of antecedents.  Rotate right. $)
    com3r $p |- ( ch -> ( ph -> ( ps -> th ) ) ) $=
      ( wi com23 com12 ) ACBDFABCDEGH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 3rd.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com13 $p |- ( ch -> ( ps -> ( ph -> th ) ) ) $=
      ( com3r com23 ) CABDABCDEFG $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       Wolf Lammen, 28-Jul-2012.) $)
    com3l $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( com3r ) CABDABCDEFF $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)
  $}

  $( Swap antecedents.  Theorem *2.04 of [WhiteheadRussell] p. 100.  (The proof
     was shortened by Wolf Lammen, 12-Sep-2012.) $)
  pm2.04 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi id com23 ) ABCDDZABCGEF $.
    $( [12-Sep-2012] $) $( [5-Aug-1993] $)

  $( Swap antecedents.  Theorem *2.04 of [WhiteheadRussell] p. 100. $)
  pm2.04OLD $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi ax-2 ax-1 syl5 ) ABCDDABDACDBABCEBAFG $.
    $( [5-Aug-1993] $)

  $( Theorem *2.83 of [WhiteheadRussell] p. 108. $)
  pm2.83 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ( ch -> th ) ) ->
                ( ph -> ( ps -> th ) ) ) ) $=
    ( wi imim1 imim3i ) BCECDEBDEABCDFG $.
    $( [3-Jan-2005] $)

  ${
    com3.1OLD $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Commutation of antecedents.  Swap 2nd and 3rd. $)
    com23OLD $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( wi pm2.04 syl ) ABCDFFCBDFFEBCDGH $.
      $( [5-Aug-1993] $)

    $( Commutation of antecedents.  Swap 1st and 3rd. $)
    com13OLD $p |- ( ch -> ( ps -> ( ph -> th ) ) ) $=
      ( wi com12 com23 ) BCADFBACDABCDFEGHG $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left. $)
    com3lOLD $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( com23 com13 ) ACBDABCDEFG $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate right. $)
    com3rOLD $p |- ( ch -> ( ph -> ( ps -> th ) ) ) $=
      ( com3l ) BCADABCDEFF $.
      $( [25-Apr-1994] $)
  $}

  ${
    com4.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( Commutation of antecedents.  Swap 3rd and 4th. $)
    com34 $p |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) $=
      ( wi pm2.04 syl6 ) ABCDEGGDCEGGFCDEHI $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       O'Cat, 15-Aug-2004.) $)
    com4l $p |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) $=
      ( wi com3l com34 ) BCADEABCDEGFHI $.
      $( [15-Aug-2004] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate twice. $)
    com4t $p |- ( ch -> ( th -> ( ph -> ( ps -> ta ) ) ) ) $=
      ( com4l ) BCDAEABCDEFGG $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate right. $)
    com4r $p |- ( th -> ( ph -> ( ps -> ( ch -> ta ) ) ) ) $=
      ( com4t com4l ) CDABEABCDEFGH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 2nd and 4th.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com24 $p |- ( ph -> ( th -> ( ch -> ( ps -> ta ) ) ) ) $=
      ( wi com4t com13 ) CDABEGABCDEFHI $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 4th.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com14 $p |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) $=
      ( wi com4l com3r ) BCDAEGABCDEFHI $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 2nd and 4th. $)
    com24OLD $p |- ( ph -> ( th -> ( ch -> ( ps -> ta ) ) ) ) $=
      ( wi com34 com23 ) ADBCEABDCEGABCDEFHIH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 4th. $)
    com14OLD $p |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) $=
      ( wi com34 com13 ) DBACEABDCEGABCDEFHIH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       O'Cat, 15-Aug-2004.) $)
    com4lOLD $p |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) $=
      ( wi com14 com3l ) DBCAEGABCDEFHI $.
      $( [15-Aug-2004] $) $( [25-Apr-1994] $)
  $}

  ${
    com5.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $.
    $( Commutation of antecedents.  Swap 4th and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com45 $p |- ( ph -> ( ps -> ( ch -> ( ta -> ( th -> et ) ) ) ) ) $=
      ( wi pm2.04 syl8 ) ABCDEFHHEDFHHGDEFIJ $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 3rd and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com35 $p |- ( ph -> ( ps -> ( ta -> ( th -> ( ch -> et ) ) ) ) ) $=
      ( wi com34 com45 ) ABDECFHABDCEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 2nd and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com25 $p |- ( ph -> ( ta -> ( ch -> ( th -> ( ps -> et ) ) ) ) ) $=
      ( wi com24 com45 ) ADCEBFHADCBEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left.  (Contributed by Jeff Hankins,
       28-Jun-2009.)  (The proof was shortened by Wolf Lammen, 29-Jul-2012.) $)
    com5l $p |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) $=
      ( wi com4l com45 ) BCDAEFABCDEFHGIJ $.
      $( [29-Jul-2012] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 1st and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.)  (The proof was shortened by Wolf Lammen,
       29-Jul-2012.) $)
    com15 $p |- ( ta -> ( ps -> ( ch -> ( th -> ( ph -> et ) ) ) ) ) $=
      ( wi com5l com4r ) BCDEAFHABCDEFGIJ $.
      $( [29-Jul-2012] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 1st and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com15OLD $p |- ( ta -> ( ps -> ( ch -> ( th -> ( ph -> et ) ) ) ) ) $=
      ( wi com14 com45 ) DBCEAFHDBCAEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left.  (Contributed by Jeff Hankins,
       28-Jun-2009.) $)
    com5lOLD $p |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) $=
      ( com45 com35 com25 com15 ) ACDEBFABDECFABCEDFABCDEFGHIJK $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left twice.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com52l $p |- ( ch -> ( th -> ( ta -> ( ph -> ( ps -> et ) ) ) ) ) $=
      ( com5l ) BCDEAFABCDEFGHH $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate right twice.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com52r $p |- ( th -> ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) ) $=
      ( com52l com5l ) CDEABFABCDEFGHI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate right.  (Contributed by Wolf Lammen,
       29-Jul-2012.) $)
    com5r $p |- ( ta -> ( ph -> ( ps -> ( ch -> ( th -> et ) ) ) ) ) $=
      ( com52l ) CDEABFABCDEFGHH $.
      $( [29-Jul-2012] $)
  $}

  ${
    a1dd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction introducing a nested embedded antecedent.  (The proof was
       shortened by O'Cat, 15-Jan-2008.) $)
    a1dd $p |- ( ph -> ( ps -> ( th -> ch ) ) ) $=
      ( wi ax-1 syl6 ) ABCDCFECDGH $.
      $( [15-Jan-2008] $) $( [17-Dec-2004] $)
  $}

  ${
    mp2.1 $e |- ph $.
    mp2.2 $e |- ps $.
    mp2.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A double modus ponens inference. $)
    mp2 $p |- ch $=
      ( wi ax-mp ) BCEABCGDFHH $.
      $( [5-Apr-1994] $)
  $}

  ${
    mpi.1 $e |- ps $.
    mpi.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A nested modus ponens inference.  (The proof was shortened by Stefan
       Allan, 20-Mar-2006.) $)
    mpi $p |- ( ph -> ch ) $=
      ( a1i mpd ) ABCBADFEG $.
      $( [20-Mar-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    mpdi.1 $e |- ( ps -> ch ) $.
    mpdi.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction.  (The proof was shortened by O'Cat,
       15-Jan-2008.) $)
    mpdi $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1i mpdd ) ABCDBCGAEHFI $.
      $( [15-Jan-2008] $) $( [16-Apr-2005] $)
  $}

  ${
    mpii.1 $e |- ch $.
    mpii.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A doubly nested modus ponens inference.  (The proof was shortened by
       Wolf Lammen, 31-Jul-2012.) $)
    mpii $p |- ( ph -> ( ps -> th ) ) $=
      ( a1i mpdi ) ABCDCBEGFH $.
      $( [31-Jul-2012] $) $( [31-Dec-1993] $)

    $( A doubly nested modus ponens inference. $)
    mpiiOLD $p |- ( ph -> ( ps -> th ) ) $=
      ( wi com23 mpi ) ACBDGEABCDFHI $.
      $( [31-Dec-1993] $)
  $}

  ${
    mpcom.1 $e |- ( ps -> ph ) $.
    mpcom.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus ponens inference with commutation of antecedents. $)
    mpcom $p |- ( ps -> ch ) $=
      ( com12 mpd ) BACDABCEFG $.
      $( [17-Mar-1996] $)
  $}

  ${
    syl6com.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6com.2 $e |- ( ch -> th ) $.
    $( Syllogism inference with commuted antecedents. $)
    syl6com $p |- ( ps -> ( ph -> th ) ) $=
      ( syl6 com12 ) ABDABCDEFGH $.
      $( [25-May-2005] $)
  $}

  ${
    syli.1 $e |- ( ps -> ( ph -> ch ) ) $.
    syli.2 $e |- ( ch -> ( ph -> th ) ) $.
    $( Syllogism inference with common nested antecedent. $)
    syli $p |- ( ps -> ( ph -> th ) ) $=
      ( com12 sylcom ) BACDECADFGH $.
      $( [4-Nov-2004] $)
  $}

  ${
    syl6mpi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6mpi.2 $e |- th $.
    syl6mpi.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e20 without virtual deductions.  (Contributed by Alan Sare,
       8-Jul-2011.)  (The proof was shortened by Wolf Lammen, 13-Sep-2012.) $)
    syl6mpi $p |- ( ph -> ( ps -> ta ) ) $=
      ( mpi syl6 ) ABCEFCDEGHIJ $.
      $( [13-Sep-2012] $) $( [8-Jul-2011] $)

    $( Obsolete proof of ~ syl6mpi . $)
    syl6mpiOLD $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1i12 wi syl6 mpdd ) ABDEABDGIABCDEJFHKL $.
      $( [8-Jul-2011] $)
  $}

  ${
    imim12dOLD.1 $e |- ( ph -> ( ps -> ch ) ) $.
    imim12dOLD.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Deduction combining antecedents and consequents. $)
    imim12dOLD $p |- ( ph -> ( ( ch -> th ) -> ( ps -> ta ) ) ) $=
      ( wi imim1d imim2d syld ) ACDHBDHBEHABCDFIADEBGJK $.
      $( [7-Aug-1994] $)
  $}

  $( Absorption of redundant antecedent.  Also called the "Contraction" or
     "Hilbert" axiom.  Theorem *2.43 of [WhiteheadRussell] p. 106.  (The proof
     was shortened by O'Cat, 15-Aug-2004.) $)
  pm2.43 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi pm2.27 a2i ) AABCBABDE $.
    $( [15-Aug-2004] $) $( [5-Aug-1993] $)

  ${
    pm2.43i.1 $e |- ( ph -> ( ph -> ps ) ) $.
    $( Inference absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43i $p |- ( ph -> ps ) $=
      ( id mpd ) AABADCE $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.43d.1 $e |- ( ph -> ( ps -> ( ps -> ch ) ) ) $.
    $( Deduction absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43d $p |- ( ph -> ( ps -> ch ) ) $=
      ( id mpdi ) ABBCBEDF $.
      $( [29-Nov-2008] $) $( [18-Aug-1993] $)
  $}

  ${
    pm2.43b.1 $e |- ( ps -> ( ph -> ( ps -> ch ) ) ) $.
    $( Inference absorbing redundant antecedent. $)
    pm2.43b $p |- ( ph -> ( ps -> ch ) ) $=
      ( pm2.43a com12 ) BACABCDEF $.
      $( [31-Oct-1995] $)
  $}

  ${
    sylcOLD.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylcOLD.2 $e |- ( th -> ph ) $.
    sylcOLD.3 $e |- ( th -> ps ) $.
    $( A syllogism inference combined with contraction.  (OBSOLETE - replaced
       by new ~ sylc 21-Mar-2012. --NM) $)
    sylcOLD $p |- ( th -> ch ) $=
      ( wi syl mpd ) DBCGDABCHFEIJ $.
      $( [4-May-1994] $)
  $}

  ${
    sylc.1 $e |- ( ph -> ps ) $.
    sylc.2 $e |- ( ph -> ch ) $.
    sylc.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( A syllogism inference combined with contraction. $)
    sylc $p |- ( ph -> th ) $=
      ( wi syl mpd ) ACDFABCDHEGIJ $.
      $( [21-Mar-2012] $) $( [4-May-1994] $)
  $}

  ${
    syl3c.1 $e |- ( ph -> ps ) $.
    syl3c.2 $e |- ( ph -> ch ) $.
    syl3c.3 $e |- ( ph -> th ) $.
    syl3c.4 $e |- ( ps -> ( ch -> ( th -> ta ) ) ) $.
    $( A syllogism inference combined with contraction. ~ e111 without virtual
       deductions.  (Contributed by Alan Sare, 7-Jul-2011.) $)
    syl3c $p |- ( ph -> ta ) $=
      ( wi sylc mpd ) ADEHABCDEJFGIKL $.
      $( [7-Jul-2011] $)
  $}

  $( Converse of axiom ~ ax-2 .  Theorem *2.86 of [WhiteheadRussell] p. 108. $)
  pm2.86 $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) ->
               ( ph -> ( ps -> ch ) ) ) $=
    ( wi ax-1 imim1i com23 ) ABDZACDZDBACBHIBAEFG $.
    $( [25-Apr-1994] $)

  ${
    pm2.86i.1 $e |- ( ( ph -> ps ) -> ( ph -> ch ) ) $.
    $( Inference based on ~ pm2.86 . $)
    pm2.86i $p |- ( ph -> ( ps -> ch ) ) $=
      ( wi pm2.86 ax-mp ) ABEACEEABCEEDABCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    pm2.86d.1 $e |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) $.
    $( Deduction based on ~ pm2.86 . $)
    pm2.86d $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi pm2.86 syl ) ABCFBDFFBCDFFEBCDGH $.
      $( [29-Jun-1995] $)
  $}

  $( The Linearity Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  This version of ~ loolin does not use ~ ax-3 , meaning
     that this theorem is intuitionistically valid.  (Contributed by O'Cat,
     12-Aug-2004.) $)
  loolinALT $p |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) $=
    ( wi ax-1 imim1i pm2.43d ) ABCZBACZCBABGHBADEF $.
    $( [12-Aug-2004] $)

  $( An alternate for the Linearity Axiom of the infinite-valued sentential
     logic (L-infinity) of Lukasiewicz, due to Barbara Wozniakowska, _Reports
     on Mathematical Logic_ 10, 129-137 (1978).  (Contributed by O'Cat,
     8-Aug-2004.) $)
  loowoz $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) ->
                 ( ( ps -> ph ) -> ( ps -> ch ) ) ) $=
    ( wi ax-1 imim1i a2d ) ABDZACDZDBACBHIBAEFG $.
    $( [8-Aug-2004] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical negation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( This section makes our first use of the third axiom of propositonal
   calculus. $)

  ${
    con4i.1 $e |- ( -. ph -> -. ps ) $.
    $( Inference rule derived from axiom ~ ax-3 . $)
    con4i $p |- ( ps -> ph ) $=
      ( wn wi ax-3 ax-mp ) ADBDEBAECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    con4d.1 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( Deduction derived from axiom ~ ax-3 . $)
    con4d $p |- ( ph -> ( ch -> ps ) ) $=
      ( wn wi ax-3 syl ) ABECEFCBFDBCGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    pm2.21d.1 $e |- ( ph -> -. ps ) $.
    $( A contradiction implies anything.  Deduction from ~ pm2.21 . $)
    pm2.21d $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn a1d con4d ) ACBABECEDFG $.
      $( [10-Feb-1996] $)
  $}

  $( From a wff and its negation, anything is true.  Theorem *2.21 of
     [WhiteheadRussell] p. 104.  Also called the Duns Scotus law.  (The proof
     was shortened by Wolf Lammen, 14-Sep-2012.) $)
  pm2.21 $p |- ( -. ph -> ( ph -> ps ) ) $=
    ( wn id pm2.21d ) ACZABFDE $.
    $( [14-Sep-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ pm2.21 . $)
  pm2.21OLD $p |- ( -. ph -> ( ph -> ps ) ) $=
    ( wn ax-1 con4d ) ACZBAFBCDE $.
    $( [5-Aug-1993] $)

  ${
    pm2.21i.1 $e |- -. ph $.
    $( A contradiction implies anything.  Inference from ~ pm2.21 . $)
    pm2.21i $p |- ( ph -> ps ) $=
      ( wn a1i con4i ) BAADBDCEF $.
      $( [16-Sep-1993] $)
  $}

  $( Theorem *2.24 of [WhiteheadRussell] p. 104. $)
  pm2.24 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn pm2.21 com12 ) ACABABDE $.
    $( [3-Jan-2005] $)

  ${
    pm2.24ii.1 $e |- ph $.
    pm2.24ii.2 $e |- -. ph $.
    $( A contradiction implies anything.  Inference from ~ pm2.24 . $)
    pm2.24ii $p |- ps $=
      ( pm2.21i ax-mp ) ABCABDEF $.
      $( [27-Feb-2008] $)
  $}

  $( Proof by contradiction.  Theorem *2.18 of [WhiteheadRussell] p. 103.  Also
     called the Law of Clavius. $)
  pm2.18 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi pm2.21 a2i con4d pm2.43i ) ABZACZAIAIHAIBZAJDEFG $.
    $( [5-Aug-1993] $)

  $( Converse of double negation.  Theorem *2.14 of [WhiteheadRussell] p. 102.
     (The proof was shortened by David Harvey, 5-Sep-1999.  An even shorter
     proof found by Josh Purinton, 29-Dec-2000.) $)
  notnot2 $p |- ( -. -. ph -> ph ) $=
    ( wn wi pm2.21 pm2.18 syl ) ABZBGACAGADAEF $.
    $( [5-Aug-1993] $)

  ${
    negai.1 $e |- -. -. ph $.
    $( Inference from double negation. $)
    notnotri $p |- ph $=
      ( wn notnot2 ax-mp ) ACCABADE $.
      $( [27-Feb-2008] $)
  $}

  $( Converse of double negation.  Theorem *2.12 of [WhiteheadRussell]
     p. 101. $)
  notnot1 $p |- ( ph -> -. -. ph ) $=
    ( wn notnot2 con4i ) ABZBAECD $.
    $( [5-Aug-1993] $)

  ${
    negbi.1 $e |- ph $.
    $( Infer double negation. $)
    notnoti $p |- -. -. ph $=
      ( wn notnot1 ax-mp ) AACCBADE $.
      $( [27-Feb-2008] $)
  $}

  $( Contraposition.  Theorem *2.15 of [WhiteheadRussell] p. 102. $)
  con1 $p |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) $=
    ( wn wi notnot1 imim2i con4d ) ACZBDABCZBICHBEFG $.
    $( [5-Aug-1993] $)

  ${
    con1d.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( A contraposition deduction. $)
    con1d $p |- ( ph -> ( -. ch -> ps ) ) $=
      ( wn wi con1 syl ) ABECFCEBFDBCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    con1i.a $e |- ( -. ph -> ps ) $.
    $( A contraposition inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.) $)
    con1i $p |- ( -. ps -> ph ) $=
      ( wn wi con1 ax-mp ) ADBEBDAECABFG $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    nsyl4.1 $e |- ( ph -> ps ) $.
    nsyl4.2 $e |- ( -. ph -> ch ) $.
    $( A negated syllogism inference. $)
    nsyl4 $p |- ( -. ch -> ps ) $=
      ( wn con1i syl ) CFABACEGDH $.
      $( [15-Feb-1996] $)
  $}

  $( Obsolete proof of ~ pm2.61 . $)
  pm2.61OLD $p |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) $=
    ( wn wi con1 imim1d pm2.18 syl6com ) ACBDZABDBCZBDBIJABABEFBGH $.
    $( [6-Mar-2008] $) $( [5-Aug-1993] $)

  ${
    pm2.61i.1 $e |- ( ph -> ps ) $.
    pm2.61i.2 $e |- ( -. ph -> ps ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61i $p |- ps $=
      ( wn wi nsyl4 pm2.18 ax-mp ) BEBFBABBCDGBHI $.
      $( [31-Oct-2012] $) $( [5-Apr-1994] $)

    $( Obsolete proof of ~ pm2.61i . $)
    pm2.61iOLD $p |- ps $=
      ( wi wn pm2.61OLD mp2 ) ABEAFBEBCDABGH $.
      $( [5-Apr-1994] $)
  $}

  ${
    pm2.61d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61d.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Deduction eliminating an antecedent. $)
    pm2.61d $p |- ( ph -> ch ) $=
      ( wi com12 wn pm2.61i ) BACFABCDGABHCEGI $.
      $( [27-Apr-1994] $)
  $}

  ${
    pm2.61d1.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61d1.2 $e |- ( -. ps -> ch ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61d1 $p |- ( ph -> ch ) $=
      ( wn wi a1i pm2.61d ) ABCDBFCGAEHI $.
      $( [15-Jul-2005] $)
  $}

  ${
    pm2.61d2.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    pm2.61d2.2 $e |- ( ps -> ch ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61d2 $p |- ( ph -> ch ) $=
      ( wi a1i pm2.61d ) ABCBCFAEGDH $.
      $( [18-Aug-1993] $)
  $}

  ${
    pm2.61ii.1 $e |- ( -. ph -> ( -. ps -> ch ) ) $.
    pm2.61ii.2 $e |- ( ph -> ch ) $.
    pm2.61ii.3 $e |- ( ps -> ch ) $.
    $( Inference eliminating two antecedents.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000.) $)
    pm2.61ii $p |- ch $=
      ( wn pm2.61d2 pm2.61i ) ACEAGBCDFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    pm2.61nii.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61nii.2 $e |- ( -. ph -> ch ) $.
    pm2.61nii.3 $e |- ( -. ps -> ch ) $.
    $( Inference eliminating two antecedents.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.)  (The proof was shortened by Wolf Lammen,
       13-Nov-2012.) $)
    pm2.61nii $p |- ch $=
      ( pm2.61d1 pm2.61i ) ACABCDFGEH $.
      $( [13-Nov-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ pm2.61nii . $)
    pm2.61niiOLD $p |- ch $=
      ( wi wn a1d pm2.61i ) BCABCGDAHCBEIJFJ $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.61iii.1 $e |- ( -. ph -> ( -. ps -> ( -. ch -> th ) ) ) $.
    pm2.61iii.2 $e |- ( ph -> th ) $.
    pm2.61iii.3 $e |- ( ps -> th ) $.
    pm2.61iii.4 $e |- ( ch -> th ) $.
    $( Inference eliminating three antecedents. $)
    pm2.61iii $p |- th $=
      ( wn wi a1d pm2.61i pm2.61ii ) BCDABIZCIZDJZJAPNADOFKKELGHM $.
      $( [2-Jan-2002] $)
  $}

  ${
    ja.1 $e |- ( -. ph -> ch ) $.
    ja.2 $e |- ( ps -> ch ) $.
    $( Inference joining the antecedents of two premises.  (The proof was
       shortened by O'Cat, 19-Feb-2008.) $)
    ja $p |- ( ( ph -> ps ) -> ch ) $=
      ( wi imim2i pm2.61d1 ) ABFACBCAEGDH $.
      $( [19-Feb-2008] $) $( [5-Aug-1993] $)
  $}

  $( Theorem *2.61 of [WhiteheadRussell] p. 107.  Useful for eliminating an
     antecedent.  (The proof was shortened by Wolf Lammen, 31-Oct-2012.) $)
  pm2.61 $p |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) $=
    ( wn wi pm2.27 ax-1 ja ) ABACZBDZBDHBEBIFG $.
    $( [31-Oct-2012] $) $( [5-Aug-1993] $)

  $( Contraposition.  Theorem *2.03 of [WhiteheadRussell] p. 100.  (The proof
     was shortened by Wolf Lammen, 31-Oct-2012.) $)
  con2 $p |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) $=
    ( wn wi ax-1 pm2.21 ja ) ABCBACZDHBEBHFG $.
    $( [31-Oct-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ con2 . $)
  con2OLD $p |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) $=
    ( wn wi notnot2 imim1i con4d ) ABCZDACZBICAHAEFG $.
    $( [5-Aug-1993] $)

  ${
    con2d.1 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( A contraposition deduction. $)
    con2d $p |- ( ph -> ( ch -> -. ps ) ) $=
      ( wn wi con2 syl ) ABCEFCBEFDBCGH $.
      $( [19-Aug-1993] $)
  $}

  $( Theorem *3.2 of [WhiteheadRussell] p. 111, expressed with primitive
     connectives.  (The proof was shortened by Josh Purinton, 29-Dec-2000.) $)
  pm3.2im $p |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) $=
    ( wn wi pm2.27 con2d ) AABCZDBAGEF $.
    $( [5-Aug-1993] $)

  $( Theorem *2.65 of [WhiteheadRussell] p. 107.  Proof by contradiction. $)
  pm2.65 $p |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) $=
    ( wi wn pm3.2im a2i con2d ) ABCAABDCZABHDABEFG $.
    $( [5-Aug-1993] $)

  $( Reductio ad absurdum.  Theorem *2.01 of [WhiteheadRussell] p. 100.  (The
     proof was shortened by O'Cat, 21-Nov-2008.)  (The proof was shortened by
     Wolf Lammen, 31-Oct-2012.) $)
  pm2.01 $p |- ( ( ph -> -. ph ) -> -. ph ) $=
    ( wn id ja ) AABZEECZFD $.
    $( [31-Oct-2012] $) $( [18-Aug-1993] $)

  ${
    pm2.01d.1 $e |- ( ph -> ( ps -> -. ps ) ) $.
    $( Deduction based on reductio ad absurdum. $)
    pm2.01d $p |- ( ph -> -. ps ) $=
      ( wn wi pm2.01 syl ) ABBDZEHCBFG $.
      $( [18-Aug-1993] $)
  $}

  $( Contraposition.  Theorem *2.16 of [WhiteheadRussell] p. 103. $)
  con3 $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi wn notnot1 imim2i con2d ) ABCABDZBHDABEFG $.
    $( [5-Aug-1993] $)

  ${
    con3d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A contraposition deduction. $)
    con3d $p |- ( ph -> ( -. ch -> -. ps ) ) $=
      ( wi wn con3 syl ) ABCECFBFEDBCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    con2i.a $e |- ( ph -> -. ps ) $.
    $( A contraposition inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.) $)
    con2i $p |- ( ps -> -. ph ) $=
      ( wn wi con2 ax-mp ) ABDEBADECABFG $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    con3i.a $e |- ( ph -> ps ) $.
    $( A contraposition inference.  (The proof was shortened by Wolf Lammen,
       14-Sep-2012.) $)
    con3i $p |- ( -. ps -> -. ph ) $=
      ( wi wn con3 ax-mp ) ABDBEAEDCABFG $.
      $( [14-Sep-2012] $) $( [5-Aug-1993] $)

    $( A contraposition inference. $)
    con3iOLD $p |- ( -. ps -> -. ph ) $=
      ( wn notnot2 syl con1i ) ADZBHDABAECFG $.
      $( [5-Aug-1993] $)
  $}

  $( Importation theorem expressed with primitive connectives. $)
  impt $p |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) $=
    ( wi wn con3 imim2i com23 con1d ) ABCDZDZCABEZDKACEZLJMLDABCFGHI $.
    $( [25-Apr-1994] $)

  $( Exportation theorem expressed with primitive connectives. $)
  expt $p |- ( ( -. ( ph -> -. ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) $=
    ( wn wi pm3.2im imim1d com12 ) AABDEDZCEBCEABICABFGH $.
    $( [5-Aug-1993] $)

  ${
    impi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( An importation inference. $)
    impi $p |- ( -. ( ph -> -. ps ) -> ch ) $=
      ( wi wn impt ax-mp ) ABCEEABFEFCEDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    expi.1 $e |- ( -. ( ph -> -. ps ) -> ch ) $.
    $( An exportation inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.) $)
    expi $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn wi pm3.2im syl6 ) ABABEFECABGDH $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  $( Simplification.  Similar to Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 21-Jul-2012.) $)
  simplim $p |- ( -. ( ph -> ps ) -> ph ) $=
    ( wi pm2.21 con1i ) AABCABDE $.
    $( [23-Jul-2012] $) $( [5-Aug-1993] $)

  $( Simplification.  Similar to Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112. $)
  simplimOLD $p |- ( -. ( ph -> -. ps ) -> ph ) $=
    ( wn wi pm2.21 con1i ) AABCZDAGEF $.
    $( [5-Aug-1993] $)

  $( Simplification.  Similar to Theorem *3.27 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simprim $p |- ( -. ( ph -> -. ps ) -> ps ) $=
    ( idd impi ) ABBABCD $.
    $( [13-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ simprim . $)
  simprimOLD $p |- ( -. ( ph -> -. ps ) -> ps ) $=
    ( wn wi ax-1 con1i ) BABCZDGAEF $.
    $( [5-Aug-1993] $)

  ${
    pm2.24d.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ pm2.21 . $)
    pm2.24d $p |- ( ph -> ( -. ps -> ch ) ) $=
      ( wn a1d con1d ) ACBABCEDFG $.
      $( [30-Jan-2006] $)
  $}

  $( Theorem *2.5 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 9-Oct-2012.) $)
  pm2.5 $p |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) $=
    ( wi wn simplim pm2.24d ) ABCDABABEF $.
    $( [9-Oct-2012] $) $( [3-Jan-2005] $)

  $( obsolete proof of ~ pm2.5 . $)
  pm2.5OLD $p |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) $=
    ( wi wn pm2.21 con3i pm2.21d ) ABCZDADZBIHABEFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.51 of [WhiteheadRussell] p. 107. $)
  pm2.51 $p |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) $=
    ( wi wn ax-1 con3i a1d ) ABCZDBDABHBAEFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.521 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 8-Oct-2012.) $)
  pm2.521 $p |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) $=
    ( wi wn simplim a1d ) ABCDABABEF $.
    $( [8-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.52 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 8-Oct-2012.) $)
  pm2.52 $p |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) $=
    ( wi wn pm2.521 con3d ) ABCDBAABEF $.
    $( [8-Oct-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm2.52 . $)
  pm2.52OLD $p |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) $=
    ( wi wn ax-1 con3i a1d ) ABCZDBDADBHBAEFG $.
    $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm2.521 . $)
  pm2.521OLD $p |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) $=
    ( wi wn pm2.52 con4d ) ABCDABABEF $.
    $( [3-Jan-2005] $)

  ${
    pm2.24i.1 $e |- ph $.
    $( Inference version of ~ pm2.24 . $)
    pm2.24i $p |- ( -. ph -> ps ) $=
      ( wn a1i con1i ) BAABDCEF $.
      $( [20-Aug-2001] $)
  $}

  ${
    mto.1 $e |- -. ps $.
    mto.2 $e |- ( ph -> ps ) $.
    $( The rule of modus tollens. $)
    mto $p |- -. ph $=
      ( wn con3i ax-mp ) BEAECABDFG $.
      $( [19-Aug-1993] $)
  $}

  ${
    mtod.1 $e |- ( ph -> -. ch ) $.
    mtod.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus tollens deduction. $)
    mtod $p |- ( ph -> -. ps ) $=
      ( wn con3d mpd ) ACFBFDABCEGH $.
      $( [3-Apr-1994] $)
  $}

  ${
    mtoi.1 $e |- -. ch $.
    mtoi.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mtoi $p |- ( ph -> -. ps ) $=
      ( wn a1i mtod ) ABCCFADGEH $.
      $( [15-Sep-2012] $) $( [5-Jul-1994] $)

    $( Modus tollens inference. $)
    mtoiOLD $p |- ( ph -> -. ps ) $=
      ( wn con3d mpi ) ACFBFDABCEGH $.
      $( [5-Jul-1994] $)
  $}

  ${
    mt2.1 $e |- ps $.
    mt2.2 $e |- ( ph -> -. ps ) $.
    $( A rule similar to modus tollens. $)
    mt2 $p |- -. ph $=
      ( wn con2i ax-mp ) BAECABDFG $.
      $( [19-Aug-1993] $)
  $}

  ${
    mt2d.1 $e |- ( ph -> ch ) $.
    mt2d.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Modus tollens deduction. $)
    mt2d $p |- ( ph -> -. ps ) $=
      ( wn con2d mpd ) ACBFDABCEGH $.
      $( [4-Jul-1994] $)
  $}

  ${
    mt2i.1 $e |- ch $.
    mt2i.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mt2i $p |- ( ph -> -. ps ) $=
      ( a1i mt2d ) ABCCADFEG $.
      $( [15-Sep-2012] $) $( [26-Mar-1995] $)

    $( Modus tollens inference. $)
    mt2iOLD $p |- ( ph -> -. ps ) $=
      ( wn con2d mpi ) ACBFDABCEGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    mt3.1 $e |- -. ps $.
    mt3.2 $e |- ( -. ph -> ps ) $.
    $( A rule similar to modus tollens. $)
    mt3 $p |- ph $=
      ( wn con1i ax-mp ) BEACABDFG $.
      $( [18-May-1994] $)
  $}

  ${
    mt3d.1 $e |- ( ph -> -. ch ) $.
    mt3d.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Modus tollens deduction. $)
    mt3d $p |- ( ph -> ps ) $=
      ( wn con1d mpd ) ACFBDABCEGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    mt3i.1 $e |- -. ch $.
    mt3i.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mt3i $p |- ( ph -> ps ) $=
      ( wn a1i mt3d ) ABCCFADGEH $.
      $( [15-Sep-2012] $) $( [26-Mar-1995] $)

    $( Modus tollens inference. $)
    mt3iOLD $p |- ( ph -> ps ) $=
      ( wn con1d mpi ) ACFBDABCEGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    mt4d.1 $e |- ( ph -> ps ) $.
    mt4d.2 $e |- ( ph -> ( -. ch -> -. ps ) ) $.
    $( Modus tollens deduction. $)
    mt4d $p |- ( ph -> ch ) $=
      ( con4d mpd ) ABCDACBEFG $.
      $( [9-Jun-2006] $)
  $}

  ${
    nsyl.1 $e |- ( ph -> -. ps ) $.
    nsyl.2 $e |- ( ch -> ps ) $.
    $( A negated syllogism inference. $)
    nsyl $p |- ( ph -> -. ch ) $=
      ( wn con3i syl ) ABFCFDCBEGH $.
      $( [31-Dec-1993] $)

    $( A negated syllogism inference.  (The proof was shortened by Wolf Lammen,
       10-Oct-2012.) $)
    nsyl3 $p |- ( ch -> -. ph ) $=
      ( nsyl con2i ) ACABCDEFG $.
      $( [10-Oct-2012] $) $( [1-Dec-1995] $)

    $( Obsoleted proof of ~ nsyl3 . $)
    nsyl3OLD $p |- ( ch -> -. ph ) $=
      ( wn con2i syl ) CBAFEABDGH $.
      $( [1-Dec-1995] $)
  $}

  ${
    nsyld.1 $e |- ( ph -> ( ps -> -. ch ) ) $.
    nsyld.2 $e |- ( ph -> ( ta -> ch ) ) $.
    $( A negated syllogism deduction. $)
    nsyld $p |- ( ph -> ( ps -> -. ta ) ) $=
      ( wn con3d syld ) ABCGDGEADCFHI $.
      $( [9-Apr-2005] $)
  $}

  ${
    nsyl2.1 $e |- ( ph -> -. ps ) $.
    nsyl2.2 $e |- ( -. ch -> ps ) $.
    $( A negated syllogism inference. $)
    nsyl2 $p |- ( ph -> ch ) $=
      ( wn con1i syl ) ABFCDCBEGH $.
      $( [26-Jun-1994] $)
  $}

  ${
    nsyli.1 $e |- ( ph -> ( ps -> ch ) ) $.
    nsyli.2 $e |- ( th -> -. ch ) $.
    $( A negated syllogism inference. $)
    nsyli $p |- ( ph -> ( th -> -. ps ) ) $=
      ( wn con3d syl5 ) ACGBGDABCEHFI $.
      $( [3-May-1994] $)
  $}

  $( Theorem 8 of [Margaris] p. 60.  (The proof was shortened by Josh Purinton,
     29-Dec-2000.) $)
  mth8 $p |- ( ph -> ( -. ps -> -. ( ph -> ps ) ) ) $=
    ( wi pm2.27 con3d ) AABCBABDE $.
    $( [5-Aug-1993] $)

  $( Theorem *2.6 of [WhiteheadRussell] p. 107. $)
  pm2.6 $p |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wi wn pm2.61 com12 ) ABCADBCBABEF $.
    $( [3-Jan-2005] $)

  ${
    pm2.65i.1 $e |- ( ph -> ps ) $.
    pm2.65i.2 $e |- ( ph -> -. ps ) $.
    $( Inference rule for proof by contradiction. $)
    pm2.65i $p |- -. ph $=
      ( wi wn pm2.65 mp2 ) ABEABFEAFCDABGH $.
      $( [18-May-1994] $)
  $}

  ${
    pm2.65d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.65d.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Deduction rule for proof by contradiction. $)
    pm2.65d $p |- ( ph -> -. ps ) $=
      ( wi wn pm2.65 sylc ) ABCFBCGFBGDEBCHI $.
      $( [26-Jun-1994] $)
  $}

  ${
    jc.1 $e |- ( ph -> ps ) $.
    jc.2 $e |- ( ph -> ch ) $.
    $( Inference joining the consequents of two premises. $)
    jc $p |- ( ph -> -. ( ps -> -. ch ) ) $=
      ( wn wi pm3.2im sylc ) ABCBCFGFDEBCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    jad.1 $e |- ( ph -> ( -. ps -> th ) ) $.
    jad.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Deduction form of ~ ja .  (Contributed by Scott Fenton, 13-Dec-2010.)
       (The proof was shortened by Andrew Salmon, 17-Sep-2011.)  (The proof was
       shortened by NM, 30-Nov-2012.) $)
    jad $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi wn com12 ja ) BCGADBCADGABHDEIACDFIJI $.
      $( [30-Nov-2012] $) $( [13-Dec-2010] $)

    $( Deduction form of ~ ja .  (Contributed by Scott Fenton, 13-Dec-2010.)
       (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    jadOLD $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi wn con1d imim12d pm2.18 syl6 ) ABCGDHZDGDAMBCDABDEIFJDKL $.
      $( [18-Sep-2011] $) $( [13-Dec-2010] $)

    $( Deduction form of ~ ja .  (Contributed by Scott Fenton, 13-Dec-2010.) $)
    jadOLDOLD $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi wn imim2d pm2.27 syl9r simprim syl5 pm2.61d ) ABCGZBHZGZODGZAPDOEIAB
      RQHBOCADBCJFKOBLMN $.
      $( [17-Aug-2010] $) $( [13-Dec-2010] $)
  $}

  $( Peirce's axiom.  This odd-looking theorem is the "difference" between an
     intuitionistic system of propositional calculus and a classical system and
     is not accepted by intuitionists.  When Peirce's axiom is added to an
     intuitionistic system, the system becomes equivalent to our classical
     system ~ ax-1 through ~ ax-3 .  A curious fact about this theorem is that
     it requires ~ ax-3 for its proof even though the result has no negation
     connectives in it.  (The proof was shortened by Wolf Lammen,
     9-Oct-2012.) $)
  peirce $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( wi simplim id ja ) ABCAAABDAEF $.
    $( [9-Oct-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ peirce . $)
  peirceOLD $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( wi wn pm2.21 imim1i pm2.18 syl ) ABCZACADZACAJIAABEFAGH $.
    $( [5-Aug-1993] $)

  $( The Linearity Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  For a version not using ~ ax-3 , see ~ loolinALT .
     (Contributed by O'Cat, 12-Aug-2004.)  (The proof was shortened by Wolf
     Lammen, 2-Nov-2012.) $)
  loolin $p |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) $=
    ( wi pm2.521 id ja ) ABCBACZGABDGEF $.
    $( [2-Nov-2012] $) $( [12-Aug-2004] $)

  $( The Inversion Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  Using ~ dfor2 , we can see that this essentially
     expresses "disjunction commutes."  Theorem *2.69 of [WhiteheadRussell]
     p. 108. $)
  looinv $p |- ( ( ( ph -> ps ) -> ps ) -> ( ( ps -> ph ) -> ph ) ) $=
    ( wi imim1 peirce syl6 ) ABCZBCBACGACAGBADABEF $.
    $( [12-Aug-2004] $)

  $( Reductio ad absurdum.  Theorem *2.01 of [WhiteheadRussell] p. 100.  (The
     proof was shortened by O'Cat, 21-Nov-2008. $)
  pm2.01OLD $p |- ( ( ph -> -. ph ) -> -. ph ) $=
    ( wn wi pm2.18 looinv ax-mp ) ABZACACAGCGCADGAEF $.
    $( [21-Nov-2008] $) $( [18-Aug-1993] $)

  $( Theorem used to justify definition of biconditional ~ df-bi .  (The proof
     was shortened by Josh Purinton, 29-Dec-2000.) $)
  bijust $p |- -. ( ( ph -> ph ) -> -. ( ph -> ph ) ) $=
    ( wi wn id pm2.01 mt2 ) AABZGCBGADGEF $.
    $( [11-May-1999] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical equivalence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the biconditional connective. $)
  $c <-> $. $( Double arrow (read:  'if and only if' or
               'is logically equivalent to') $)

  $( Extend our wff definition to include the biconditional connective. $)
  wb $a wff ( ph <-> ps ) $.

  $( This is our first definition, which introduces and defines the
     biconditional connective ` <-> ` .  We define a wff of the form
     ` ( ph <-> ps ) ` as an abbreviation for
     ` -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ` .

     Unlike most traditional developments, we have chosen not to have a
     separate symbol such as "Df." to mean "is defined as."  Instead, we will
     later use the biconditional connective for this purpose ( ~ df-or is its
     first use), as it allows us to use logic to manipulate definitions
     directly.  This greatly simplifies many proofs since it eliminates the
     need for a separate mechanism for introducing and eliminating
     definitions.  Of course, we cannot use this mechanism to define the
     biconditional itself, since it hasn't been introduced yet.  Instead, we
     use a more general form of definition, described as follows.

     In its most general form, a definition is simply an assertion that
     introduces a new symbol (or a new combination of existing symbols, as in
     ~ df-3an ) that is eliminable and does not strengthen the existing
     language.  The latter requirement means that the set of provable
     statements not containing the new symbol (or new combination) should
     remain exactly the same after the definition is introduced.  Our
     definition of the biconditional may look unusual compared to most
     definitions, but it strictly satisfies these requirements.

     The justification for our definition is that if we mechanically replace
     the first wff above (the definiendum i.e. the thing being defined) with
     the second (the definiens i.e. the defining expression) in the definition,
     the definition becomes a substitution instance of previously proved
     theorem ~ bijust .  It is impossible to use ~ df-bi to prove any statement
     expressed in the original language that can't be proved from the original
     axioms.  For if it were, we could replace it with instances of ~ bijust
     throughout the proof, thus obtaining a proof from the original axioms
     (contradiction).

     Note that from Metamath's point of view, a definition is just another
     axiom - i.e. an assertion we claim to be true - but from our high level
     point of view, we are are not strengthening the language.  To indicate
     this fact, we prefix definition labels with "df-" instead of "ax-".  (This
     prefixing is an informal convention that means nothing to the Metamath
     proof verifier; it is just for human readability.)

     See ~ dfbi1 , ~ dfbi2 , and ~ dfbi3 for theorems suggesting typical
     textbook definitions of ` <-> ` , showing that our definition has the
     properties we expect.  Theorem ~ dfbi shows this definition rewritten in
     an abbreviated form after conjunction is introduced, for easier
     understanding. $)
  df-bi $a |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
        -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $.

  $( Property of the biconditional connective. $)
  bi1 $p |- ( ( ph <-> ps ) -> ( ph -> ps ) ) $=
    ( wb wi wn df-bi simplim ax-mp syl ) ABCZABDZBADEZDEZKJMDZMJDEZDENABFNOGHKL
    GI $.
    $( [11-May-1999] $)

  $( Property of the biconditional connective. $)
  bi3 $p |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) $=
    ( wi wb wn df-bi simprim ax-mp expi ) ABCZBACZABDZLJKECEZCZMLCZECEOABFNOGHI
    $.
    $( [11-May-1999] $)

  ${
    impbi.1 $e |- ( ph -> ps ) $.
    impbi.2 $e |- ( ps -> ph ) $.
    $( Infer an equivalence from an implication and its converse. $)
    impbii $p |- ( ph <-> ps ) $=
      ( wi wb bi3 mp2 ) ABEBAEABFCDABGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    biimp.1 $e |- ( ph <-> ps ) $.
    $( Infer an implication from a logical equivalence. $)
    biimpi $p |- ( ph -> ps ) $=
      ( wb wi bi1 ax-mp ) ABDABECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbi.1 $e |- ( ph <-> ps ) $.
    sylbi.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       Useful for substituting an antecedent with a definition. $)
    sylbi $p |- ( ph -> ch ) $=
      ( biimpi syl ) ABCABDFEG $.
      $( [5-Aug-1993] $)
  $}

  $( Relate the biconditional connective to primitive connectives.  See
     ~ dfbi1gb for an unusual version proved directly from axioms. $)
  dfbi1 $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wb wi wn df-bi simplim ax-mp bi3 impi impbii ) ABCZABDZBADZEDEZLODZOLDEZD
    EPABFPQGHMNLABIJK $.
    $( [11-Nov-2012] $) $( [5-Aug-1993] $)

  $( Property of the biconditional connective.  (The proof was shortened by
     Wolf Lammen, 11-Nov-2012.) $)
  bi2 $p |- ( ( ph <-> ps ) -> ( ps -> ph ) ) $=
    ( wb wi wn dfbi1 simprim sylbi ) ABCABDZBADZEDEJABFIJGH $.
    $( [11-Nov-2012] $) $( [11-May-1999] $)

  $( Obsolete proof of ~ bi2 . $)
  bi2OLD $p |- ( ( ph <-> ps ) -> ( ps -> ph ) ) $=
    ( wb wi wn df-bi simplim ax-mp simprim syl ) ABCZABDZBADZEDEZMKNDZNKDEZDEOA
    BFOPGHLMIJ $.
    $( [11-May-1999] $)

  $( Obsolete proof of ~ dfbi1 . $)
  dfbi1OLD $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
      $=
    ( wb wi wn bi1 bi2 jc bi3 impi impbii ) ABCZABDZBADZEDELMNABFABGHMNLABIJK 
    $.
    $( [5-Aug-1993] $)

  ${
    biimpr.1 $e |- ( ph <-> ps ) $.
    $( Infer a converse implication from a logical equivalence. $)
    biimpri $p |- ( ps -> ph ) $=
      ( wb wi bi2 ax-mp ) ABDBAECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    biimpd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce an implication from a logical equivalence. $)
    biimpd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb wi bi1 syl ) ABCEBCFDBCGH $.
      $( [5-Aug-1993] $)

    $( Deduce a converse implication from a logical equivalence. $)
    biimprd $p |- ( ph -> ( ch -> ps ) ) $=
      ( wb wi bi2 syl ) ABCECBFDBCGH $.
      $( [5-Aug-1993] $)

    $( Deduce a commuted implication from a logical equivalence. $)
    biimpcd $p |- ( ps -> ( ph -> ch ) ) $=
      ( biimpd com12 ) ABCABCDEF $.
      $( [3-May-1994] $)

    $( Deduce a converse commuted implication from a logical equivalence. $)
    biimprcd $p |- ( ch -> ( ph -> ps ) ) $=
      ( biimprd com12 ) ACBABCDEF $.
      $( [3-May-1994] $)
  $}

  ${
    impbid.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbid.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Deduce an equivalence from two implications.  (Dependency on df-an
       removed by Wolf Lammen, 3-Nov-2012.) $)
    impbid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wi wb bi3 sylc ) ABCFCBFBCGDEBCHI $.
      $( [3-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    impbid1.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbid1.2 $e |- ( ch -> ps ) $.
    $( Infer an equivalence from two implications. $)
    impbid1 $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wi a1i impbid ) ABCDCBFAEGH $.
      $( [6-Mar-2007] $)
  $}

  ${
    impbid2.1 $e |- ( ps -> ch ) $.
    impbid2.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Infer an equivalence from two implications. $)
    impbid2 $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wi a1i impbid ) ABCBCFADGEH $.
      $( [6-Mar-2007] $)
  $}

  $( This proof of ~ dfbi1 , discovered by Gregory Bush on 8-Mar-2004, has
     several curious properties.  First, it has only 17 steps directly from the
     axioms and ~ df-bi , compared to over 800 steps were the proof of ~ dfbi1
     expanded into axioms.  Second, step 2 demands only the property of "true";
     any axiom (or theorem) could be used.  It might be thought, therefore,
     that it is in some sense redundant, but in fact no proof is shorter than
     this (measured by number of steps).  Third, it illustrates how
     intermediate steps can "blow up" in size even in short proofs.  Fourth,
     the compressed proof is only 182 bytes (or 17 bytes in D-proof notation),
     but the generated web page is over 200kB with intermediate steps that are
     essentially incomprehensible to humans (other than Gregory Bush).  If
     there were an obfuscated code contest for proofs, this would be a
     contender. $)
  dfbi1gb $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wch wth wb wi wn df-bi ax-1 ax-mp ax-3 ax-2 ) ABEZABFBAFGFGZFNMFGFGZMNEZA
    BHCDCFFZOPFZCDIRGZQGZFZQRFSPOFZSFZFZUASUBISUCTFZFZUDUAFUEUFTGZUCGZFZUEUHUIM
    NHUHUGIJTUCKJUESIJSUCTLJJRQKJJJ $.
    $( [10-Mar-2004] $)

  $( Logical equivalence of commuted antecedents.  Part of Theorem *4.87 of
     [WhiteheadRussell] p. 122. $)
  bi2.04 $p |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.04 impbii ) ABCDDBACDDABCEBACEF $.
    $( [5-Aug-1993] $)

  $( Principle of identity for logical equivalence.  Theorem *4.2 of
     [WhiteheadRussell] p. 117. $)
  biid $p |- ( ph <-> ph ) $=
    ( id impbii ) AAABZDC $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  biidd $p |- ( ph -> ( ps <-> ps ) ) $=
    ( wb biid a1i ) BBCABDE $.
    $( [25-Nov-1995] $)

  ${
    sylib.1 $e |- ( ph -> ps ) $.
    sylib.2 $e |- ( ps <-> ch ) $.
    $( A mixed syllogism inference from an implication and a biconditional. $)
    sylib $p |- ( ph -> ch ) $=
      ( biimpi syl ) ABCDBCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylibr.1 $e |- ( ph -> ps ) $.
    sylibr.2 $e |- ( ch <-> ps ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       Useful for substituting a consequent with a definition. $)
    sylibr $p |- ( ph -> ch ) $=
      ( biimpri syl ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbir.1 $e |- ( ps <-> ph ) $.
    sylbir.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication. $)
    sylbir $p |- ( ph -> ch ) $=
      ( biimpri syl ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylibd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( A syllogism deduction. $)
    sylibd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDEACDFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylbid.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbid $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDABCEGFH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylibrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibrd.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( A syllogism deduction. $)
    sylibrd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDEADCFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbird.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    sylbird.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbird $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDACBEGFH $.
      $( [3-Aug-1994] $)
  $}

  ${
    syl5ib.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5ib.2 $e |- ( th <-> ps ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded antecedent with a
       definition. $)
    syl5ib $p |- ( ph -> ( th -> ch ) ) $=
      ( biimpi syl5 ) ABCDEDBFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5ibr.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5ibr.2 $e |- ( ps <-> th ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl5ibr $p |- ( ph -> ( th -> ch ) ) $=
      ( biimpri syl5 ) ABCDEBDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bi.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5bi.2 $e |- ( th -> ps ) $.
    $( A mixed syllogism inference. $)
    syl5bi $p |- ( ph -> ( th -> ch ) ) $=
      ( biimpd syl5 ) ABCDABCEGFH $.
      $( [5-Aug-1993] $)

    $( A mixed syllogism inference. $)
    syl5cbi $p |- ( th -> ( ph -> ch ) ) $=
      ( syl5bi com12 ) ADCABCDEFGH $.
      $( [19-Jun-2007] $)
  $}

  ${
    syl5bir.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5bir.2 $e |- ( th -> ch ) $.
    $( A mixed syllogism inference. $)
    syl5bir $p |- ( ph -> ( th -> ps ) ) $=
      ( biimprd syl5 ) ACBDABCEGFH $.
      $( [3-Apr-1994] $)

    $( A mixed syllogism inference. $)
    syl5cbir $p |- ( th -> ( ph -> ps ) ) $=
      ( syl5bir com12 ) ADBABCDEFGH $.
      $( [20-Jun-2007] $)
  $}

  ${
    syl6ib.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ib.2 $e |- ( ch <-> th ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl6ib $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpi syl6 ) ABCDECDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6ibr.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ibr.2 $e |- ( th <-> ch ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded consequent with a
       definition. $)
    syl6ibr $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpri syl6 ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}


  ${
    syl6bi.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bi.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bi $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syl6 ) ABCDABCEGFH $.
      $( [2-Jan-1994] $)
  $}

  ${
    syl6bir.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    syl6bir.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bir $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syl6 ) ABCDACBEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    syl7ib.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl7ib.2 $e |- ( ta <-> ch ) $.
    $( A mixed syllogism inference from a doubly nested implication and a
       biconditional. $)
    syl7ib $p |- ( ph -> ( ps -> ( ta -> th ) ) ) $=
      ( biimpi syl7 ) ABCDEFECGHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl8ib.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8ib.2 $e |- ( th <-> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise. $)
    syl8ib $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimpi syl8 ) ABCDEFDEGHI $.
      $( [1-Aug-1994] $)
  $}

  ${
    bicomi.1 $e |- ( ph <-> ps ) $.
    $( Inference from commutative law for logical equivalence. $)
    bicomi $p |- ( ps <-> ph ) $=
      ( biimpri biimpi impbii ) BAABCDABCEF $.
      $( [5-Aug-1993] $)
  $}

  $( Commutative law for equivalence.  (Contributed by Wolf Lammen,
     10-Nov-2012.) $)
  bicom1 $p |- ( ( ph <-> ps ) -> ( ps <-> ph ) ) $=
    ( wb bi2 bi1 impbid ) ABCBAABDABEF $.
    $( [10-Nov-2012] $)

  $( Commutative law for equivalence.  Theorem *4.21 of [WhiteheadRussell]
     p. 117. $)
  bicom $p |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) $=
    ( wb bicom1 impbii ) ABCBACABDBADE $.
    $( [11-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    bicomd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Commute two sides of a biconditional in a deduction. $)
    bicomd $p |- ( ph -> ( ch <-> ps ) ) $=
      ( wb bicom sylib ) ABCECBEDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitri.1 $e |- ( ph <-> ps ) $.
    bitri.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence.  (The proof
       was shortened by Wolf Lammen, 13-Oct-2012.) $)
    bitri $p |- ( ph <-> ch ) $=
      ( biimpi sylib biimpri sylibr impbii ) ACABCABDFEGCBABCEHDIJ $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ bitri . $)
    bitriOLD $p |- ( ph <-> ch ) $=
      ( biimpi syl biimpri impbii ) ACABCABDFBCEFGCBABCEHABDHGI $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    bitr2i.1 $e |- ( ph <-> ps ) $.
    bitr2i.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr2i $p |- ( ch <-> ph ) $=
      ( bitri bicomi ) ACABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr3i.1 $e |- ( ps <-> ph ) $.
    bitr3i.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr3i $p |- ( ph <-> ch ) $=
      ( bicomi bitri ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4i.1 $e |- ( ph <-> ps ) $.
    bitr4i.2 $e |- ( ch <-> ps ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr4i $p |- ( ph <-> ch ) $=
      ( bicomi bitri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    3bitri.1 $e |- ( ph <-> ps ) $.
    3bitri.2 $e |- ( ps <-> ch ) $.
    3bitri.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitri $p |- ( ph <-> th ) $=
      ( bitri ) ABDEBCDFGHH $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitrri $p |- ( th <-> ph ) $=
      ( bitr2i bitr3i ) DCAGABCEFHI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr2i.1 $e |- ( ph <-> ps ) $.
    3bitr2i.2 $e |- ( ch <-> ps ) $.
    3bitr2i.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2i $p |- ( ph <-> th ) $=
      ( bitr4i bitri ) ACDABCEFHGI $.
      $( [4-Aug-2006] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2ri $p |- ( th <-> ph ) $=
      ( bitr4i bitr2i ) ACDABCEFHGI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3i.1 $e |- ( ph <-> ps ) $.
    3bitr3i.2 $e |- ( ph <-> ch ) $.
    3bitr3i.3 $e |- ( ps <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3i $p |- ( ch <-> th ) $=
      ( bitr3i bitri ) CBDCABFEHGI $.
      $( [19-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3ri $p |- ( th <-> ch ) $=
      ( bitr3i ) DBCGBACEFHH $.
      $( [5-Aug-1993] $)
  $}

  ${
    3bitr4i.1 $e |- ( ph <-> ps ) $.
    3bitr4i.2 $e |- ( ch <-> ph ) $.
    3bitr4i.3 $e |- ( th <-> ps ) $.
    $( A chained inference from transitive law for logical equivalence.  This
       inference is frequently used to apply a definition to both sides of a
       logical equivalence. $)
    3bitr4i $p |- ( ch <-> th ) $=
      ( bitr4i bitri ) CADFABDEGHI $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr4ri $p |- ( th <-> ch ) $=
      ( bitr4i bitr2i ) CADFABDEGHI $.
      $( [2-Sep-1995] $)
  $}

  ${
    mpbi.min $e |- ph $.
    mpbi.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbi $p |- ps $=
      ( biimpi ax-mp ) ABCABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbir.min $e |- ps $.
    mpbir.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbir $p |- ph $=
      ( biimpri ax-mp ) BACABDEF $.
      $( [5-Aug-1993] $)
  $}

  $( The next three rules are useful for building up wff's around a
     definition, in order to make use of the definition. $)

  ${
    bi.a $e |- ( ph <-> ps ) $.
    $( Introduce an antecedent to both sides of a logical equivalence. $)
    imbi2i $p |- ( ( ch -> ph ) <-> ( ch -> ps ) ) $=
      ( wi biimpi imim2i biimpri impbii ) CAECBEABCABDFGBACABDHGI $.
      $( [5-Aug-1993] $)

    $( Introduce a consequent to both sides of a logical equivalence. $)
    imbi1i $p |- ( ( ph -> ch ) <-> ( ps -> ch ) ) $=
      ( wi biimpri imim1i biimpi impbii ) ACEBCEBACABDFGABCABDHGI $.
      $( [5-Aug-1993] $)

    $( Negate both sides of a logical equivalence. $)
    notbii $p |- ( -. ph <-> -. ps ) $=
      ( wn biimpri con3i biimpi impbii ) ADBDBAABCEFABABCGFH $.
      $( [5-Aug-1993] $)

  $}

  ${
    imbi12i.1 $e |- ( ph <-> ps ) $.
    imbi12i.2 $e |- ( ch <-> th ) $.
    $( Join two logical equivalences to form equivalence of implications. $)
    imbi12i $p |- ( ( ph -> ch ) <-> ( ps -> th ) ) $=
      ( wi imbi2i imbi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Antecedent absorption implication.  Theorem *5.4 of [WhiteheadRussell]
     p. 125. $)
  pm5.4 $p |- ( ( ph -> ( ph -> ps ) ) <-> ( ph -> ps ) ) $=
    ( wi pm2.43 ax-1 impbii ) AABCZCGABDGAEF $.
    $( [5-Aug-1993] $)

  $( Distributive law for implication.  Compare Theorem *5.41 of
     [WhiteheadRussell] p. 125. $)
  imdi $p |- ( ( ph -> ( ps -> ch ) ) <->
               ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi ax-2 pm2.86 impbii ) ABCDDABDACDDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( Theorem *5.41 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 12-Oct-2012.) $)
  pm5.41 $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) <->
                ( ph -> ( ps -> ch ) ) ) $=
    ( wi imdi bicomi ) ABCDDABDACDDABCEF $.
    $( [13-Oct-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.41 . $)
  pm5.41OLD $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) <->
                ( ph -> ( ps -> ch ) ) ) $=
    ( wi pm2.86 ax-2 impbii ) ABDACDDABCDDABCEABCFG $.
    $( [13-Oct-2012] $) $( [3-Jan-2005] $)

  $( Double negation.  Theorem *4.13 of [WhiteheadRussell] p. 117. $)
  notnot $p |- ( ph <-> -. -. ph ) $=
    ( wn notnot1 notnot2 impbii ) AABBACADE $.
    $( [5-Aug-1993] $)

  $( Theorem *4.8 of [WhiteheadRussell] p. 122. $)
  pm4.8 $p |- ( ( ph -> -. ph ) <-> -. ph ) $=
    ( wn wi pm2.01 ax-1 impbii ) AABZCGADGAEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.81 of [WhiteheadRussell] p. 122. $)
  pm4.81 $p |- ( ( -. ph -> ph ) <-> ph ) $=
    ( wn wi pm2.18 pm2.24 impbii ) ABACAADAAEF $.
    $( [3-Jan-2005] $)

  $( Contraposition.  Bidirectional version of ~ con1 . $)
  con1b $p |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) $=
    ( wn wi con1 impbii ) ACBDBCADABEBAEF $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Bidirectional version of ~ con2 . $)
  con2b $p |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) $=
    ( wn wi con2 impbii ) ABCDBACDABEBAEF $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Theorem *4.1 of [WhiteheadRussell] p. 116. $)
  con34b $p |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) $=
    ( wi wn con3 ax-3 impbii ) ABCBDADCABEBAFG $.
    $( [5-Aug-1993] $)

  ${
    mtbi.1 $e |- -. ph $.
    mtbi.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens.  (The proof
       was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mtbi $p |- -. ps $=
      ( biimpri mto ) BACABDEF $.
      $( [25-Oct-2012] $) $( [15-Nov-1994] $)

    $( Obsolete proof of ~ mtbi . $)
    mtbiOLD $p |- -. ps $=
      ( wn notbii mpbi ) AEBECABDFG $.
      $( [15-Nov-1994] $)
  $}

  ${
    mtbir.1 $e |- -. ps $.
    mtbir.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens.  (The proof
       was shortened by Wolf Lammen, 14-Oct-2012.) $)
    mtbir $p |- -. ph $=
      ( bicomi mtbi ) BACABDEF $.
      $( [13-Oct-2012] $) $( [15-Nov-1994] $)

    $( Obsolete proof of ~ mtbir . $)
    mtbirOLD $p |- -. ph $=
      ( wn notbii mpbir ) AEBECABDFG $.
      $( [13-Oct-2012] $) $( [15-Nov-1994] $)
  $}

  ${
    impcon4bid.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impcon4bid.2 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( A variation on ~ impbid with contraposition.  (Contributed by Jeff
       Hankins, 3-Jul-2009.) $)
    impcon4bid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( con4d impbid ) ABCDABCEFG $.
      $( [3-Jul-2009] $)
  $}

  ${
    mpbid.min $e |- ( ph -> ps ) $.
    mpbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbid $p |- ( ph -> ch ) $=
      ( biimpd mpd ) ABCDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbird.min $e |- ( ph -> ch ) $.
    mpbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbird $p |- ( ph -> ps ) $=
      ( biimprd mpd ) ACBDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbii.min $e |- ps $.
    mpbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens.  (The
       proof was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mpbii $p |- ( ph -> ch ) $=
      ( a1i mpbid ) ABCBADFEG $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ mpbii . $)
    mpbiiOLD $p |- ( ph -> ch ) $=
      ( biimpd mpi ) ABCDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbiri.min $e |- ch $.
    mpbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens.  The
       proof was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mpbiri $p |- ( ph -> ps ) $=
      ( a1i mpbird ) ABCCADFEG $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ mpbiri . $)
    mpbiriOLD $p |- ( ph -> ps ) $=
      ( biimprd mpi ) ACBDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  $( A wff is equivalent to itself with true antecedent. $)
  biimt $p |- ( ph -> ( ps <-> ( ph -> ps ) ) ) $=
    ( wi ax-1 pm2.27 impbid2 ) ABABCBADABEF $.
    $( [28-Jan-1996] $)

  ${
    a1bi.1 $e |- ph $.
    $( Inference rule introducing a theorem as an antecedent.  The proof was
       shortened by Wolf Lammen, 11-Nov-2012.) $)
    a1bi $p |- ( ps <-> ( ph -> ps ) ) $=
      ( wi wb biimt ax-mp ) ABABDECABFG $.
      $( [11-Nov-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ a1bi . $)
    a1biOLD $p |- ( ps <-> ( ph -> ps ) ) $=
      ( wi ax-1 pm2.27 ax-mp impbii ) BABDZBAEAIBDCABFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    mt2bi.1 $e |- ph $.
    $( A false consequent falsifies an antecedent.  (The proof was shortened by
       Wolf Lammen, 12-Nov-2012.) $)
    mt2bi $p |- ( -. ps <-> ( ps -> -. ph ) ) $=
      ( wn wi a1bi con2b bitri ) BDZAIEBADEAICFABGH $.
      $( [12-Nov-2012] $) $( [19-Aug-1993] $)
  $}

  ${
    3imtr3.1 $e |- ( ph -> ps ) $.
    3imtr3.2 $e |- ( ph <-> ch ) $.
    3imtr3.3 $e |- ( ps <-> th ) $.
    $( A mixed syllogism inference, useful for removing a definition from both
       sides of an implication. $)
    3imtr3i $p |- ( ch -> th ) $=
      ( sylbir sylib ) CBDCABFEHGI $.
      $( [10-Aug-1994] $)
  $}

  ${
    3imtr4.1 $e |- ( ph -> ps ) $.
    3imtr4.2 $e |- ( ch <-> ph ) $.
    3imtr4.3 $e |- ( th <-> ps ) $.
    $( A mixed syllogism inference, useful for applying a definition to both
       sides of an implication. $)
    3imtr4i $p |- ( ch -> th ) $=
      ( sylbi sylibr ) CBDCABFEHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    3imtr3d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    3imtr3d.3 $e |- ( ph -> ( ch <-> ta ) ) $.
    $( More general version of ~ 3imtr3i .  Useful for converting conditional
       definitions in a formula. $)
    3imtr3d $p |- ( ph -> ( th -> ta ) ) $=
      ( sylibd sylbird ) ADBEGABCEFHIJ $.
      $( [8-Apr-1996] $)
  $}

  ${
    3imtr4d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr4d.2 $e |- ( ph -> ( th <-> ps ) ) $.
    3imtr4d.3 $e |- ( ph -> ( ta <-> ch ) ) $.
    $( More general version of ~ 3imtr4i .  Useful for converting conditional
       definitions in a formula. $)
    3imtr4d $p |- ( ph -> ( th -> ta ) ) $=
      ( sylibrd sylbid ) ADBEGABCEFHIJ $.
      $( [26-Oct-1995] $)
  $}

  ${
    3imtr3g.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3g.2 $e |- ( ps <-> th ) $.
    3imtr3g.3 $e |- ( ch <-> ta ) $.
    $( More general version of ~ 3imtr3i .  Useful for converting definitions
       in a formula.  (The proof was shortened by Wolf Lammen, 7-Nov-2012.) $)
    3imtr3g $p |- ( ph -> ( th -> ta ) ) $=
      ( wb a1i 3imtr3d ) ABCDEFBDIAGJCEIAHJK $.
      $( [7-Nov-2012] $) $( [20-May-1996] $)
  $}

  ${
    3imtr4g.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr4g.2 $e |- ( th <-> ps ) $.
    3imtr4g.3 $e |- ( ta <-> ch ) $.
    $( More general version of ~ 3imtr4i .  Useful for converting definitions
       in a formula. $)
    3imtr4g $p |- ( ph -> ( th -> ta ) ) $=
      ( bicomi 3imtr3g ) ABCDEFDBGIECHIJ $.
      $( [20-May-1996] $)
  $}

  ${
    con1bii.1 $e |- ( -. ph <-> ps ) $.
    $( A contraposition inference.  (The proof was shortened by Wolf Lammen,
       13-Oct-2012.) $)
    con1bii $p |- ( -. ps <-> ph ) $=
      ( wn notnot notbii bitr2i ) AADZDBDAEHBCFG $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ con1bii . $)
    con1biiOLD $p |- ( -. ps <-> ph ) $=
      ( wn biimpi con1i biimpri con2i impbii ) BDAABADZBCEFBAJBCGHI $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    con2bii.1 $e |- ( ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con2bii $p |- ( ps <-> -. ph ) $=
      ( wn bicomi con1bii ) ADBBAABDCEFE $.
      $( [5-Aug-1993] $)
  $}

  $( For ~ bicon3 :  See ~ notbii . $)

  $( For ~ con4bii :  Later. $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical disjunction and conjunction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare connectives for disjunction ('or') and conjunction ('and'). $)
  $c \/ $. $( Vee (read:  'or') $)
  $c /\ $. $( Wedge (read:  'and') $)

  $( Extend wff definition to include disjunction ('or'). $)
  wo $a wff ( ph \/ ps ) $.
  $( Extend wff definition to include conjunction ('and'). $)
  wa $a wff ( ph /\ ps ) $.

  $( Define disjunction (logical 'or').  This is our first use of the
     biconditional connective in a definition; we use it in place of the
     traditional "<=def=>", which means the same thing, except that we can
     manipulate the biconditional connective directly in proofs rather than
     having to rely on an informal definition substitution rule.  Note that if
     we mechanically substitute ` ( -. ph -> ps ) ` for ` ( ph \/ ps ) ` , we
     end up with an instance of previously proved theorem ~ biid .  This is the
     justification for the definition, along with the fact that it introduces a
     new symbol ` \/ ` .  Definition of [Margaris] p. 49. $)
  df-or $a |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) $.

  $( Define conjunction (logical 'and').  Definition of [Margaris] p. 49. $)
  df-an $a |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) $.

  $( Theorem *4.64 of [WhiteheadRussell] p. 120. $)
  pm4.64 $p |- ( ( -. ph -> ps ) <-> ( ph \/ ps ) ) $=
    ( wo wn wi df-or bicomi ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.54 of [WhiteheadRussell] p. 107. $)
  pm2.54 $p |- ( ( -. ph -> ps ) -> ( ph \/ ps ) ) $=
    ( wo wn wi df-or biimpri ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.63 of [WhiteheadRussell] p. 120. $)
  pm4.63 $p |- ( -. ( ph -> -. ps ) <-> ( ph /\ ps ) ) $=
    ( wa wn wi df-an bicomi ) ABCABDEDABFG $.
    $( [3-Jan-2005] $)

  ${
    ori.1 $e |- ( ph \/ ps ) $.
    $( Infer implication from disjunction. $)
    ori $p |- ( -. ph -> ps ) $=
      ( wo wn wi df-or mpbi ) ABDAEBFCABGH $.
      $( [11-Jun-1994] $)
  $}

  ${
    orri.1 $e |- ( -. ph -> ps ) $.
    $( Infer implication from disjunction. $)
    orri $p |- ( ph \/ ps ) $=
      ( wo wn wi df-or mpbir ) ABDAEBFCABGH $.
      $( [11-Jun-1994] $)
  $}

  ${
    ord.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Deduce implication from disjunction. $)
    ord $p |- ( ph -> ( -. ps -> ch ) ) $=
      ( wo wn wi df-or sylib ) ABCEBFCGDBCHI $.
      $( [18-May-1994] $)
  $}

  ${
    orrd.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Deduce implication from disjunction. $)
    orrd $p |- ( ph -> ( ps \/ ch ) ) $=
      ( wn wi wo pm2.54 syl ) ABECFBCGDBCHI $.
      $( [27-Nov-1995] $)
  $}

  $( Theorem *2.62 of [WhiteheadRussell] p. 107. $)
  pm2.62 $p |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wo wn wi df-or pm2.6 sylbi ) ABCADBEABEBEABFABGH $.
    $( [21-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.68 of [WhiteheadRussell] p. 108. $)
  pm2.68 $p |- ( ( ( ph -> ps ) -> ps ) -> ( ph \/ ps ) ) $=
    ( wi wn pm2.21 imim1i orrd ) ABCZBCABADHBABEFG $.
    $( [21-Oct-2012] $) $( [3-Jan-2005] $)

  $( Logical 'or' expressed in terms of implication only.  Theorem *5.25 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     20-Oct-2012.) $)
  dfor2 $p |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) $=
    ( wo wi pm2.62 pm2.68 impbii ) ABCABDBDABEABFG $.
    $( [21-Oct-2012] $) $( [12-Aug-2004] $)

  $( Obsolete proof of ~ dfor2 . $)
  dfor2OLD $p |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) $=
    ( wo wn wi df-or pm2.6 pm2.21 imim1i impbii bitri ) ABCADZBEZABEZBEZABFMOAB
    GLNBABHIJK $.
    $( [12-Aug-2004] $)

  $( Obsolete proof of ~ pm2.62 . $)
  pm2.62OLD $p |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wo wi dfor2 biimpi ) ABCABDBDABEF $.
    $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm2.68 . $)
  pm2.68OLD $p |- ( ( ( ph -> ps ) -> ps ) -> ( ph \/ ps ) ) $=
    ( wo wi dfor2 biimpri ) ABCABDBDABEF $.
    $( [3-Jan-2005] $)

  $( Implication in terms of disjunction.  Theorem *4.6 of [WhiteheadRussell]
     p. 120. $)
  imor $p |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) $=
    ( wi wn wo notnot imbi1i df-or bitr4i ) ABCADZDZBCJBEAKBAFGJBHI $.
    $( [5-Aug-1993] $)

  ${
    imori.1 $e |- ( ph -> ps ) $.
    $( Infer disjunction from implication. $)
    imori $p |- ( -. ph \/ ps ) $=
      ( wi wn wo imor mpbi ) ABDAEBFCABGH $.
      $( [12-Mar-2012] $)
  $}

  ${
    imorri.1 $e |- ( -. ph \/ ps ) $.
    $( Infer implication from disjunction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    imorri $p |- ( ph -> ps ) $=
      ( wi wn wo imor mpbir ) ABDAEBFCABGH $.
      $( [3-Jun-2011] $)
  $}

  $( Law of excluded middle, also called the principle of _tertium non datur_.
     Theorem *2.11 of [WhiteheadRussell] p. 101.  It says that something is
     either true or not true; there are no in-between values of truth.  This is
     an essential distinction of our classical logic and is not a theorem of
     intuitionistic logic. $)
  exmid $p |- ( ph \/ -. ph ) $=
    ( wn id orri ) AABZECD $.
    $( [5-Aug-1993] $)

  $( Theorem *2.1 of [WhiteheadRussell] p. 101.  (The proof was shortened by
     Wolf Lammen, 23-Nov-2012.) $)
  pm2.1 $p |- ( -. ph \/ ph ) $=
    ( id imori ) AAABC $.
    $( [23-Nov-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm2.1 . $)
  pm2.1OLD $p |- ( -. ph \/ ph ) $=
    ( wn notnot2 orri ) ABAACD $.
    $( [3-Jan-2005] $)

  $( Theorem *2.13 of [WhiteheadRussell] p. 101. $)
  pm2.13 $p |- ( ph \/ -. -. -. ph ) $=
    ( wn notnot1 orri ) AABZBBECD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.62 of [WhiteheadRussell] p. 120. $)
  pm4.62 $p |- ( ( ph -> -. ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wn imor ) ABCD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.66 of [WhiteheadRussell] p. 120. $)
  pm4.66 $p |- ( ( -. ph -> -. ps ) <-> ( ph \/ -. ps ) ) $=
    ( wn pm4.64 ) ABCD $.
    $( [3-Jan-2005] $)

  $( Express implication in terms of conjunction. $)
  imnan $p |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) $=
    ( wa wn wi df-an con2bii ) ABCABDEABFG $.
    $( [9-Apr-1994] $)

  $( Express implication in terms of conjunction.  Theorem 3.4(27) of [Stoll]
     p. 176.  (The proof was shortened by Wolf Lammen, 30-Oct-2012.) $)
  iman $p |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) $=
    ( wi wn wa notnot imbi2i imnan bitri ) ABCABDZDZCAJEDBKABFGAJHI $.
    $( [30-Oct-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ iman . $)
  imanOLD $p |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) $=
    ( wi wn wa notnot imbi2i df-an con2bii bitri ) ABCABDZDZCZAKEZDBLABFGNMAKHI
    J $.
    $( [5-Aug-1993] $)

  $( Express conjunction in terms of implication. $)
  annim $p |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) $=
    ( wi wn wa iman con2bii ) ABCABDEABFG $.
    $( [2-Aug-1994] $)

  $( Theorem *4.61 of [WhiteheadRussell] p. 120. $)
  pm4.61 $p |- ( -. ( ph -> ps ) <-> ( ph /\ -. ps ) ) $=
    ( wn wa wi annim bicomi ) ABCDABECABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.65 of [WhiteheadRussell] p. 120. $)
  pm4.65 $p |- ( -. ( -. ph -> ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wn pm4.61 ) ACBD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.67 of [WhiteheadRussell] p. 120. $)
  pm4.67 $p |- ( -. ( -. ph -> -. ps ) <-> ( -. ph /\ ps ) ) $=
    ( wn pm4.63 ) ACBD $.
    $( [3-Jan-2005] $)

  $( Idempotent law for disjunction.  Theorem *4.25 of [WhiteheadRussell]
     p. 117.  (The proof was shortened by Andrew Salmon, 16-Apr-2011.) $)
  oridm $p |- ( ( ph \/ ph ) <-> ph ) $=
    ( wo wn wi df-or pm4.81 bitri ) AABACADAAAEAFG $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.25 of [WhiteheadRussell] p. 117. $)
  pm4.25 $p |- ( ph <-> ( ph \/ ph ) ) $=
    ( wo oridm bicomi ) AABAACD $.
    $( [3-Jan-2005] $)

  $( Axiom *1.2 (Taut) of [WhiteheadRussell] p. 96. $)
  pm1.2 $p |- ( ( ph \/ ph ) -> ph ) $=
    ( wo oridm biimpi ) AABAACD $.
    $( [3-Jan-2005] $)

  $( Theorem *2.621 of [WhiteheadRussell] p. 107. $)
  pm2.621 $p |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wi pm2.62 com12 ) ABCABDBABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.53 of [WhiteheadRussell] p. 107. $)
  pm2.53 $p |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) $=
    ( wo wn wi df-or biimpi ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.55 of
     [WhiteheadRussell] p. 107.  (The proof was shortened by Wolf Lammen,
     21-Jul-2012.) $)
  orel1 $p |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wn pm2.53 com12 ) ABCADBABEF $.
    $( [23-Jul-2012] $) $( [12-Aug-1994] $)

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.55 of
     [WhiteheadRussell] p. 107. $)
  orel1OLD $p |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wn wi df-or biimpi com12 ) ABCZADZBIJBEABFGH $.
    $( [12-Aug-1994] $)

  $( Theorem *2.53 of [WhiteheadRussell] p. 107. $)
  pm2.53OLD $p |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) $=
    ( wn wo orel1OLD com12 ) ACABDBABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.25 of [WhiteheadRussell] p. 104. $)
  pm2.25 $p |- ( ph \/ ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wi orel1 orri ) AABCBDABEF $.
    $( [3-Jan-2005] $)

  $( Introduction of a disjunct.  Axiom *1.3 of [WhiteheadRussell] p. 96. $)
  olc $p |- ( ph -> ( ps \/ ph ) ) $=
    ( wn ax-1 orrd ) ABAABCDE $.
    $( [30-Aug-1993] $)

  $( Introduction of a disjunct.  Theorem *2.2 of [WhiteheadRussell] p. 104. $)
  orc $p |- ( ph -> ( ph \/ ps ) ) $=
    ( pm2.24 orrd ) AABABCD $.
    $( [30-Aug-1993] $)

  ${
    orci.1 $e |- ph $.
    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 14-Nov-2012.) $)
    orci $p |- ( ph \/ ps ) $=
      ( pm2.24i orri ) ABABCDE $.
      $( [14-Nov-2012] $) $( [19-Jan-2008] $)

    $( Obsolete proof of ~ orci . $)
    orciOLD $p |- ( ph \/ ps ) $=
      ( wo orc ax-mp ) AABDCABEF $.
      $( [19-Jan-2008] $)

    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 14-Nov-2012.) $)
    olci $p |- ( ps \/ ph ) $=
      ( wn a1i orri ) BAABDCEF $.
      $( [14-Nov-2012] $) $( [19-Jan-2008] $)

    $( Deduction introducing a disjunct. $)
    olciOLD $p |- ( ps \/ ph ) $=
      ( wo olc ax-mp ) ABADCABEF $.
      $( [19-Jan-2008] $)
  $}

  ${
    orcd.1 $e |- ( ph -> ps ) $.
    $( Deduction introducing a disjunct. $)
    orcd $p |- ( ph -> ( ps \/ ch ) ) $=
      ( wo orc syl ) ABBCEDBCFG $.
      $( [20-Sep-2007] $)

    $( Deduction introducing a disjunct. $)
    olcd $p |- ( ph -> ( ch \/ ps ) ) $=
      ( wo olc syl ) ABCBEDBCFG $.
      $( [11-Apr-2008] $)
  $}

  ${
    orcs.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Deduction eliminating disjunct. _Notational convention_:  We sometimes
       suffix with "s" the label of an inference that manipulates an
       antecedent, leaving the consequent unchanged.  The "s" means that the
       inference eliminates the need for a syllogism ( ~ syl ) -type inference
       in a proof. $)
    orcs $p |- ( ph -> ch ) $=
      ( wo orc syl ) AABECABFDG $.
      $( [21-Jun-1994] $)
  $}

  ${
    olcs.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Deduction eliminating disjunct. $)
    olcs $p |- ( ps -> ch ) $=
      ( wo olc syl ) BABECBAFDG $.
      $( [21-Jun-1994] $)
  $}

  $( Theorem *2.07 of [WhiteheadRussell] p. 101. $)
  pm2.07 $p |- ( ph -> ( ph \/ ph ) ) $=
    ( olc ) AAB $.
    $( [3-Jan-2005] $)

  $( Theorem *2.45 of [WhiteheadRussell] p. 106. $)
  pm2.45 $p |- ( -. ( ph \/ ps ) -> -. ph ) $=
    ( wo orc con3i ) AABCABDE $.
    $( [3-Jan-2005] $)

  $( Theorem *2.46 of [WhiteheadRussell] p. 106. $)
  pm2.46 $p |- ( -. ( ph \/ ps ) -> -. ps ) $=
    ( wo olc con3i ) BABCBADE $.
    $( [3-Jan-2005] $)

  $( Theorem *2.47 of [WhiteheadRussell] p. 107. $)
  pm2.47 $p |- ( -. ( ph \/ ps ) -> ( -. ph \/ ps ) ) $=
    ( wo wn pm2.45 orcd ) ABCDADBABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.48 of [WhiteheadRussell] p. 107. $)
  pm2.48 $p |- ( -. ( ph \/ ps ) -> ( ph \/ -. ps ) ) $=
    ( wo wn pm2.46 olcd ) ABCDBDAABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.49 of [WhiteheadRussell] p. 107. $)
  pm2.49 $p |- ( -. ( ph \/ ps ) -> ( -. ph \/ -. ps ) ) $=
    ( wo wn pm2.46 olcd ) ABCDBDADABEF $.
    $( [3-Jan-2005] $)

  $( Slight generalization of Theorem *2.67 of [WhiteheadRussell] p. 107. $)
  pm2.67-2 $p |- ( ( ( ph \/ ch ) -> ps ) -> ( ph -> ps ) ) $=
    ( wo orc imim1i ) AACDBACEF $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.67 of [WhiteheadRussell] p. 107. $)
  pm2.67 $p |- ( ( ( ph \/ ps ) -> ps ) -> ( ph -> ps ) ) $=
    ( pm2.67-2 ) ABBC $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Import-export theorem.  Part of Theorem *4.87 of [WhiteheadRussell]
     p. 122. $)
  impexp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) $=
    ( wa wi wn df-an imbi1i expt impt impbii bitri ) ABDZCEABFEFZCEZABCEEZMNCAB
    GHOPABCIABCJKL $.
    $( [5-Aug-1993] $)

  ${
    imp.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Importation inference.  (The proof was shortened by Eric Schmidt,
       22-Dec-2006.) $)
    imp $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa wi impexp mpbir ) ABECFABCFFDABCGH $.
      $( [22-Dec-2006] $) $( [5-Aug-1993] $)

    $( Importation inference with commuted antecedents. $)
    impcom $p |- ( ( ps /\ ph ) -> ch ) $=
      ( com12 imp ) BACABCDEF $.
      $( [25-May-2005] $)
  $}

  ${
    exp.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Exportation inference.  (This theorem used to be labeled "exp" but was
       changed to "ex" so as not to conflict with the math token "exp", per the
       June 2006 Metamath spec change.)  (The proof was shortened by Eric
       Schmidt, 22-Dec-2006.) $)
    ex $p |- ( ph -> ( ps -> ch ) ) $=
      ( wa wi impexp mpbi ) ABECFABCFFDABCGH $.
      $( [22-Dec-2006] $) $( [5-Aug-1993] $)

    $( Exportation inference with commuted antecedents. $)
    expcom $p |- ( ps -> ( ph -> ch ) ) $=
      ( ex com12 ) ABCABCDEF $.
      $( [25-May-2005] $)
  $}

  $( Join antecedents with conjunction.  Theorem *3.2 of [WhiteheadRussell]
     p. 111.  (The proof was shortened by Wolf Lammen, 12-Nov-2012.) $)
  pm3.2 $p |- ( ph -> ( ps -> ( ph /\ ps ) ) ) $=
    ( wa id ex ) ABABCZFDE $.
    $( [12-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ pm3.2 . $)
  pm3.2OLD $p |- ( ph -> ( ps -> ( ph /\ ps ) ) ) $=
    ( wa wn wi df-an biimpri expi ) ABABCZIABDEDABFGH $.
    $( [5-Aug-1993] $)

  $( Join antecedents with conjunction.  Theorem *3.21 of [WhiteheadRussell]
     p. 111. $)
  pm3.21 $p |- ( ph -> ( ps -> ( ps /\ ph ) ) ) $=
    ( wa pm3.2 com12 ) BABACBADE $.
    $( [5-Aug-1993] $)

  $( Theorem *3.22 of [WhiteheadRussell] p. 111.  (The proof was shortened by
     Wolf Lammen, 13-Nov-2012.) $)
  pm3.22 $p |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) $=
    ( wa pm3.21 imp ) ABBACABDE $.
    $( [13-Nov-2012] $) $( [3-Jan-2005] $)

  $( Commutative law for conjunction.  Theorem *4.3 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 4-Nov-2012.) $)
  ancom $p |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) $=
    ( wa pm3.22 impbii ) ABCBACABDBADE $.
    $( [4-Nov-2012] $) $( [25-Jun-1998] $)

  ${
    ancomd.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Commutation of conjuncts in consequent.  (Contributed by Jeff Hankins,
       14-Aug-2009.) $)
    ancomd $p |- ( ph -> ( ch /\ ps ) ) $=
      ( wa ancom sylib ) ABCECBEDBCFG $.
      $( [18-Apr-2010] $) $( [14-Aug-2009] $)
  $}

  ${
    ancoms.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Inference commuting conjunction in antecedent.  (The proof was shortened
       by NM, 1-Dec-2012.) $)
    ancoms $p |- ( ( ps /\ ph ) -> ch ) $=
      ( expcom imp ) BACABCDEF $.
      $( [1-Dec-2012] $) $( [21-Apr-1994] $)

    $( Obsolete ~ ancoms . $)
    ancomsOLD $p |- ( ( ps /\ ph ) -> ch ) $=
      ( wa ancom sylbi ) BAEABECBAFDG $.
      $( [21-Apr-1994] $)
  $}

  ${
    ancomsd.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Deduction commuting conjunction in antecedent. $)
    ancomsd $p |- ( ph -> ( ( ch /\ ps ) -> th ) ) $=
      ( wa ancom syl5ib ) ABCFDCBFECBGH $.
      $( [12-Dec-2004] $)
  $}

  ${
    pm3.2i.1 $e |- ph $.
    pm3.2i.2 $e |- ps $.
    $( Infer conjunction of premises. $)
    pm3.2i $p |- ( ph /\ ps ) $=
      ( wa pm3.2 mp2 ) ABABECDABFG $.
      $( [5-Aug-1993] $)
  $}

  $( Nested conjunction of antecedents. $)
  pm3.43i $p |- ( ( ph -> ps ) ->
                ( ( ph -> ch ) -> ( ph -> ( ps /\ ch ) ) ) ) $=
    ( wa pm3.2 imim3i ) BCBCDABCEF $.
    $( [5-Aug-1993] $)

  $( Negated conjunction in terms of disjunction (DeMorgan's law).  Theorem
     *4.51 of [WhiteheadRussell] p. 120.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  ianor $p |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wa wn wi wo imnan pm4.62 bitr3i ) ABCDABDZEADJFABGABHI $.
    $( [3-Nov-2012] $) $( [5-Aug-1993] $)

  $( Conjunction in terms of disjunction (DeMorgan's law).  Theorem *4.5 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     3-Nov-2012.) $)
  anor $p |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) $=
    ( wn wo wa ianor bicomi con2bii ) ACBCDZABEZJCIABFGH $.
    $( [3-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ anor . $)
  anorOLD $p |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) $=
    ( wa wn wi wo df-an pm4.62 notbii bitri ) ABCABDZEZDADKFZDABGLMABHIJ $.
    $( [5-Aug-1993] $)

  $( Obsolete proof of ~ ianor . $)
  ianorOLD $p |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wn wo wa anor bicomi con1bii ) ACBCDZABEZJICABFGH $.
    $( [16-May-2011] $) $( [5-Aug-1993] $)

  $( Negated disjunction in terms of conjunction (DeMorgan's law).  Compare
     Theorem *4.56 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  ioran $p |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wo wn wi wa df-or notbii annim bitr4i ) ABCZDADZBEZDLBDFKMABGHLBIJ $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.52 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Wolf Lammen, 5-Nov-2012.) $)
  pm4.52 $p |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) $=
    ( wn wa wi wo annim imor notbii bitri ) ABCDABEZCACBFZCABGKLABHIJ $.
    $( [5-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.53 of [WhiteheadRussell] p. 120. $)
  pm4.53 $p |- ( -. ( ph /\ -. ps ) <-> ( -. ph \/ ps ) ) $=
    ( wn wo wa pm4.52 con2bii bicomi ) ACBDZABCEZCJIABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *4.54 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Wolf Lammen, 5-Nov-2012.) $)
  pm4.54 $p |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) $=
    ( wn wa wi wo pm4.67 pm4.66 notbii bitr3i ) ACZBDKBCZEZCALFZCABGMNABHIJ $.
    $( [5-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.55 of [WhiteheadRussell] p. 120. $)
  pm4.55 $p |- ( -. ( -. ph /\ ps ) <-> ( ph \/ -. ps ) ) $=
    ( wn wo wa pm4.54 con2bii bicomi ) ABCDZACBEZCJIABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *4.56 of [WhiteheadRussell] p. 120. $)
  pm4.56 $p |- ( ( -. ph /\ -. ps ) <-> -. ( ph \/ ps ) ) $=
    ( wo wn wa ioran bicomi ) ABCDADBDEABFG $.
    $( [3-Jan-2005] $)

  $( Disjunction in terms of conjunction (DeMorgan's law).  Compare Theorem
     *4.57 of [WhiteheadRussell] p. 120.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  oran $p |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) $=
    ( wn wa wo pm4.56 con2bii ) ACBCDABEABFG $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.57 of [WhiteheadRussell] p. 120. $)
  pm4.57 $p |- ( -. ( -. ph /\ -. ps ) <-> ( ph \/ ps ) ) $=
    ( wo wn wa oran bicomi ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.1 of [WhiteheadRussell] p. 111. $)
  pm3.1 $p |- ( ( ph /\ ps ) -> -. ( -. ph \/ -. ps ) ) $=
    ( wa wn wo anor biimpi ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.11 of [WhiteheadRussell] p. 111. $)
  pm3.11 $p |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) $=
    ( wa wn wo anor biimpri ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.12 of [WhiteheadRussell] p. 111. $)
  pm3.12 $p |- ( ( -. ph \/ -. ps ) \/ ( ph /\ ps ) ) $=
    ( wn wo wa pm3.11 orri ) ACBCDABEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.13 of [WhiteheadRussell] p. 111. $)
  pm3.13 $p |- ( -. ( ph /\ ps ) -> ( -. ph \/ -. ps ) ) $=
    ( wn wo wa pm3.11 con1i ) ACBCDABEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.14 of [WhiteheadRussell] p. 111. $)
  pm3.14 $p |- ( ( -. ph \/ -. ps ) -> -. ( ph /\ ps ) ) $=
    ( wa wn wo pm3.1 con2i ) ABCADBDEABFG $.
    $( [3-Jan-2005] $)

  $( Elimination of a conjunct.  Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simpl $p |- ( ( ph /\ ps ) -> ph ) $=
    ( ax-1 imp ) ABAABCD $.
    $( [13-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ simpl . $)
  simplOLD $p |- ( ( ph /\ ps ) -> ph ) $=
    ( wa wn wi df-an simplim sylbi ) ABCABDZEDAABFAIGH $.
    $( [5-Aug-1993] $)

  ${
    simpli.1 $e |- ( ph /\ ps ) $.
    $( Inference eliminating a conjunct. $)
    simpli $p |- ph $=
      ( wa simpl ax-mp ) ABDACABEF $.
      $( [15-Jun-1994] $)
  $}

  ${
    simpld.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simpld $p |- ( ph -> ps ) $=
      ( wa simpl syl ) ABCEBDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    simplbi.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simplbi $p |- ( ph -> ps ) $=
      ( wa biimpi simpld ) ABCABCEDFG $.
      $( [27-May-1998] $)
  $}

  $( Elimination of a conjunct.  Theorem *3.27 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simpr $p |- ( ( ph /\ ps ) -> ps ) $=
    ( idd imp ) ABBABCD $.
    $( [13-Nov-2012] $)  $( [5-Aug-1993] $)

  $( Obsolete proof of ~ simpr . $)
  simprOLD $p |- ( ( ph /\ ps ) -> ps ) $=
    ( wa wn wi df-an simprim sylbi ) ABCABDEDBABFABGH $.
    $( [5-Aug-1993] $)

  ${
    simpri.1 $e |- ( ph /\ ps ) $.
    $( Inference eliminating a conjunct. $)
    simpri $p |- ps $=
      ( wa simpr ax-mp ) ABDBCABEF $.
      $( [15-Jun-1994] $)
  $}

  ${
    simprd.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprd $p |- ( ph -> ch ) $=
      ( wa simpr syl ) ABCECDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    simprbi.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprbi $p |- ( ph -> ch ) $=
      ( wa biimpi simprd ) ABCABCEDFG $.
      $( [27-May-1998] $)
  $}

  $( Disjunction of antecedents.  Compare Theorem *3.44 of [WhiteheadRussell]
     p. 113.  (The proof was shortened by Wolf Lammen, 15-Nov-2012.)  (The
     proof was shortened by NM, 1-Dec-2012.) $)
  jao $p |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) $=
    ( wi wo wn orel1 imim1d ax-1 a1d ja ) ABCBDZACEZBDZDAFMCBACGHBNLBMIJK $.
    $( [1-Dec-2012] $) $( [5-Apr-1994] $)

  $( Obsolete proof of ~ jao . $)
  jaoOLD $p |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) )
      $=
    ( wi wo wa wn simpl notnot2 syl5 simpr jad pm2.53 ex ) ABDZCBDZACEZBDOPFZAG
    ZCDBQRSCBRABSGOPHAIJOPKLACMJN $.
    $( [15-Nov-2012] $) $( [5-Apr-1994] $)

  $( Obsolete proof of ~ jao . $)
  jaoOLDOLD $p |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) )
      ) $=
    ( wi wn wo con3 wa pm3.43i con1 syl6 oran syl7ib syl5 syl ) ABDBEZAEZDZCBDZ
    ACFZBDZDABGRPCEZDZUASRUCQUBHZEZBTRUCPUDDUEBDPQUBIBUDJKACLMCBGNO $.
    $( [5-Apr-1994] $)

  ${
    jaoi.1 $e |- ( ph -> ps ) $.
    jaoi.2 $e |- ( ch -> ps ) $.
    $( Inference disjoining the antecedents of two implications. $)
    jaoi $p |- ( ( ph \/ ch ) -> ps ) $=
      ( wi wo jao mp2 ) ABFCBFACGBFDEABCHI $.
      $( [5-Apr-1994] $)
  $}
  $( Axiom *1.4 of [WhiteheadRussell] p. 96. $)
  pm1.4 $p |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) $=
    ( wo olc orc jaoi ) ABACBABDBAEF $.
    $( [15-Nov-2012] $) $( [3-Jan-2005] $)

  $( Commutative law for disjunction.  Theorem *4.31 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 15-Nov-2012.) $)
  orcom $p |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) $=
    ( wo pm1.4 impbii ) ABCBACABDBADE $.
    $( [15-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ orcom . $)
  orcomOLD $p |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) $=
    ( wn wi wo con1b df-or 3bitr4i ) ACBDBCADABEBAEABFABGBAGH $.
    $( [5-Aug-1993] $)

  ${
    orcomd.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Commutation of disjuncts in consequent. $)
    orcomd $p |- ( ph -> ( ch \/ ps ) ) $=
      ( wo orcom sylib ) ABCECBEDBCFG $.
      $( [2-Dec-2010] $)
  $}

  ${
    orcoms.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Commutation of disjuncts in antecedent. $)
    orcoms $p |- ( ( ps \/ ph ) -> ch ) $=
      ( wo pm1.4 syl ) BAEABECBAFDG $.
      $( [2-Dec-2012] $)
  $}

  $( Obsolete proof of ~ pm1.4 . $)
  pm1.4OLD $p |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) $=
    ( wo orcom biimpi ) ABCBACABDE $.
    $( [3-Jan-2005] $)

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.56 of
     [WhiteheadRussell] p. 107. $)
  orel2 $p |- ( -. ph -> ( ( ps \/ ph ) -> ps ) ) $=
    ( wo wn pm2.53 con1d com12 ) BACZADBHBABAEFG $.
    $( [12-Aug-1994] $)

  ${
    orim12i.1 $e |- ( ph -> ps ) $.
    orim12i.2 $e |- ( ch -> th ) $.
    $( Disjoin antecedents and consequents of two premises.  (The proof was
       shortened by Wolf Lammen, 25-Jul-2012.) $)
    orim12i $p |- ( ( ph \/ ch ) -> ( ps \/ th ) ) $=
      ( wo orcd olcd jaoi ) ABDGCABDEHCDBFIJ $.
      $( [26-Jul-2012] $) $( [6-Jun-1994] $)
  $}

  ${
    orim1i.1 $e |- ( ph -> ps ) $.
    $( Introduce disjunct to both sides of an implication. $)
    orim1i $p |- ( ( ph \/ ch ) -> ( ps \/ ch ) ) $=
      ( id orim12i ) ABCCDCEF $.
      $( [6-Jun-1994] $)

    $( Introduce disjunct to both sides of an implication. $)
    orim2i $p |- ( ( ch \/ ph ) -> ( ch \/ ps ) ) $=
      ( id orim12i ) CCABCEDF $.
      $( [6-Jun-1994] $)
  $}

  ${
    orbi2i.1 $e |- ( ph <-> ps ) $.
    $( Inference adding a left disjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 12-Dec-2012.) $)
    orbi2i $p |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) $=
      ( wo biimpi orim2i biimpri impbii ) CAECBEABCABDFGBACABDHGI $.
      $( [12-Dec-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ orbi2i . $)
    orbi2iOLD $p |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) $=
      ( wn wi wo imbi2i df-or 3bitr4i ) CEZAFKBFCAGCBGABKDHCAICBIJ $.
      $( [5-Aug-1993] $)

    $( Inference adding a right disjunct to both sides of a logical
       equivalence. $)
    orbi1i $p |- ( ( ph \/ ch ) <-> ( ps \/ ch ) ) $=
      ( wo orcom orbi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    orbi12i.1 $e |- ( ph <-> ps ) $.
    orbi12i.2 $e |- ( ch <-> th ) $.
    $( Infer the disjunction of two equivalences. $)
    orbi12i $p |- ( ( ph \/ ch ) <-> ( ps \/ th ) ) $=
      ( wo orbi2i orbi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Obsolete proof of ~ pm4.52 . $)
  pm4.52OLD $p |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) $=
    ( wn wa wo anor notnot orbi2i notbii bitr4i ) ABCZDACZKCZEZCLBEZCAKFONBMLBG
    HIJ $.
    $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.54 . $)
  pm4.54OLD $p |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) $=
    ( wn wa wo anor notnot orbi1i notbii bitr4i ) ACZBDKCZBCZEZCAMEZCKBFONALMAG
    HIJ $.
    $( [3-Jan-2005] $)

  $( Axiom *1.5 (Assoc) of [WhiteheadRussell] p. 96.  (The proof was shortened
     by NM, 1-Dec-2012.) $)
  pm1.5 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo orc olcd olc jaoi ) ABACDZDZBCDAIBACEFBJCBIECIBCAGFHH $.
    $( [1-Dec-2012] $) $( [3-Jan-2005] $)

  $( Axiom *1.5 (Assoc) of [WhiteheadRussell] p. 96. $)
  pm1.5OLD $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo orc olc syl jaoi ) ABACDZDZBCDAIJACEIBFZGBJCBIECIJCAFKGHH $.
    $( [14-Nov-2012] $) $( [3-Jan-2005] $)

  $( Swap two disjuncts.  (The proof was shortened by Wolf Lammen,
     14-Nov-2012.) $)
  or12 $p |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo pm1.5 impbii ) ABCDDBACDDABCEBACEF $.
    $( [14-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ or12 . $)
  or12OLD $p |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wn wo wi bi2.04 df-or imbi2i 3bitr4ri 3bitr4i ) ADZBCEZFZBDZACEZFZAMEBPEO
    LCFZFLOCFZFQNOLCGPROACHIMSLBCHIJAMHBPHK $.
    $( [5-Aug-1993] $)

  $( Obsolete proof of ~ pm1.5 . $)
  pm1.5OLDOLD $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo or12 biimpi ) ABCDDBACDDABCEF $.
    $( [3-Jan-2005] $)

  $( Associative law for disjunction.  Theorem *4.33 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  orass $p |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) $=
    ( wo orcom or12 orbi2i 3bitri ) ABDZCDCIDACBDZDABCDZDICECABFJKACBEGH $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Theorem *2.31 of [WhiteheadRussell] p. 104. $)
  pm2.31 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ( ph \/ ps ) \/ ch ) ) $=
    ( wo orass biimpri ) ABDCDABCDDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.32 of [WhiteheadRussell] p. 105. $)
  pm2.32 $p |- ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ( ps \/ ch ) ) ) $=
    ( wo orass biimpi ) ABDCDABCDDABCEF $.
    $( [3-Jan-2005] $)

  $( A rearrangement of disjuncts.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  or23 $p |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ps ) ) $=
    ( wo orass or12 orcom 3bitri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [18-Oct-1995] $)

  $( Rearrangement of 4 disjuncts. $)
  or4 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <->
                ( ( ph \/ ch ) \/ ( ps \/ th ) ) ) $=
    ( wo or12 orbi2i orass 3bitr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHAC
    LHI $.
    $( [12-Aug-1994] $)

  $( Rearrangement of 4 disjuncts. $)
  or42 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <->
                 ( ( ph \/ ch ) \/ ( th \/ ps ) ) ) $=
    ( wo or4 orcom orbi2i bitri ) ABECDEEACEZBDEZEJDBEZEABCDFKLJBDGHI $.
    $( [10-Jan-2005] $)

  $( Distribution of disjunction over disjunction. $)
  orordi $p |- ( ( ph \/ ( ps \/ ch ) ) <->
               ( ( ph \/ ps ) \/ ( ph \/ ch ) ) ) $=
    ( wo oridm orbi1i or4 bitr3i ) ABCDZDAADZIDABDACDDJAIAEFAABCGH $.
    $( [25-Feb-1995] $)

  $( Distribution of disjunction over disjunction. $)
  orordir $p |- ( ( ( ph \/ ps ) \/ ch ) <->
               ( ( ph \/ ch ) \/ ( ps \/ ch ) ) ) $=
    ( wo oridm orbi2i or4 bitr3i ) ABDZCDICCDZDACDBCDDJCICEFABCCGH $.
    $( [25-Feb-1995] $)

  ${
    jca.1 $e |- ( ph -> ps ) $.
    jca.2 $e |- ( ph -> ch ) $.
    $( Deduce conjunction of the consequents of two implications ("join
       consequents with 'and'").  (The proof was shortened by Wolf Lammen,
       25-Oct-2012.) $)
    jca $p |- ( ph -> ( ps /\ ch ) ) $=
      ( wa pm3.2 sylc ) ABCBCFDEBCGH $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ jca . $)
    jcaOLD $p |- ( ph -> ( ps /\ ch ) ) $=
      ( wn wi wa jc df-an sylibr ) ABCFGFBCHABCDEIBCJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    jcad.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jcad.2 $e |- ( ph -> ( ps -> th ) ) $.
    $( Deduction conjoining the consequents of two implications.  (The proof
       was shortened by Wolf Lammen, 27-Nov-2012.) $)
    jcad $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( wi wa pm3.43i sylc ) ABCGBDGBCDHGEFBCDIJ $.
      $( [27-Nov-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ jcad . $)
    jcadOLD $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( wa imp jca ex ) ABCDGABGCDABCEHABDFHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    jca31.1 $e |- ( ph -> ps ) $.
    jca31.2 $e |- ( ph -> ch ) $.
    jca31.3 $e |- ( ph -> th ) $.
    $( Join three consequents.  (Contributed by Jeff Hankins, 1-Aug-2009.) $)
    jca31 $p |- ( ph -> ( ( ps /\ ch ) /\ th ) ) $=
      ( wa jca ) ABCHDABCEFIGI $.
      $( [1-Aug-2009] $)

    $( Join three consequents.  (Contributed by FL, 1-Aug-2009.) $)
    jca32 $p |- ( ph -> ( ps /\ ( ch /\ th ) ) ) $=
      ( wa jca ) ABCDHEACDFGII $.
      $( [1-Aug-2009] $)
  $}

  ${
    jcai.1 $e |- ( ph -> ps ) $.
    jcai.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction replacing implication with conjunction. $)
    jcai $p |- ( ph -> ( ps /\ ch ) ) $=
      ( mpd jca ) ABCDABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    jctil.1 $e |- ( ph -> ps ) $.
    jctil.2 $e |- ch $.
    $( Inference conjoining a theorem to left of consequent in an
       implication. $)
    jctil $p |- ( ph -> ( ch /\ ps ) ) $=
      ( a1i jca ) ACBCAEFDG $.
      $( [31-Dec-1993] $)

    $( Inference conjoining a theorem to right of consequent in an
       implication. $)
    jctir $p |- ( ph -> ( ps /\ ch ) ) $=
      ( a1i jca ) ABCDCAEFG $.
      $( [31-Dec-1993] $)
  $}

  ${
    jctl.1 $e |- ps $.
    $( Inference conjoining a theorem to the left of a consequent.  (The proof
       was shortened by Wolf Lammen, 24-Oct-2012.) $)
    jctl $p |- ( ph -> ( ps /\ ph ) ) $=
      ( id jctil ) AABADCE $.
      $( [25-Oct-2012] $) $( [31-Dec-1993] $)

    $( Obsolete proof of ~ jctl . $)
    jctlOLD $p |- ( ph -> ( ps /\ ph ) ) $=
      ( a1i id jca ) ABABACDAEF $.
      $( [31-Dec-1993] $)

    $( Inference conjoining a theorem to the right of a consequent.  (The proof
       was shortened by Wolf Lammen, 24-Oct-2012.) $)
    jctr $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id jctir ) AABADCE $.
      $( [25-Oct-2012] $) $( [18-Aug-1993] $)

    $( Obsolete proof of ~ jctr . $)
    jctrOLD $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id a1i jca ) AABADBACEF $.
      $( [18-Aug-1993] $)
  $}

  ${
    jctild.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jctild.2 $e |- ( ph -> th ) $.
    $( Deduction conjoining a theorem to left of consequent in an
       implication. $)
    jctild $p |- ( ph -> ( ps -> ( th /\ ch ) ) ) $=
      ( a1d jcad ) ABDCADBFGEH $.
      $( [21-Apr-2005] $)
  $}

  ${
    jctird.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jctird.2 $e |- ( ph -> th ) $.
    $( Deduction conjoining a theorem to right of consequent in an
       implication. $)
    jctird $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( a1d jcad ) ABCDEADBFGH $.
      $( [21-Apr-2005] $)
  $}

  $( Conjoin antecedent to left of consequent. $)
  ancl $p |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) $=
    ( wa pm3.2 a2i ) ABABCABDE $.
    $( [15-Aug-1994] $)

  $( Conjoin antecedent to right of consequent. $)
  ancr $p |- ( ( ph -> ps ) -> ( ph -> ( ps /\ ph ) ) ) $=
    ( wa pm3.21 a2i ) ABBACABDE $.
    $( [15-Aug-1994] $)

  ${
    ancli.1 $e |- ( ph -> ps ) $.
    $( Deduction conjoining antecedent to left of consequent. $)
    ancli $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id jca ) AABADCE $.
      $( [12-Aug-1993] $)
  $}

  ${
    ancri.1 $e |- ( ph -> ps ) $.
    $( Deduction conjoining antecedent to right of consequent. $)
    ancri $p |- ( ph -> ( ps /\ ph ) ) $=
      ( id jca ) ABACADE $.
      $( [15-Aug-1994] $)
  $}

  ${
    ancld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to left of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 1-Nov-2012.) $)
    ancld $p |- ( ph -> ( ps -> ( ps /\ ch ) ) ) $=
      ( idd jcad ) ABBCABEDF $.
      $( [1-Nov-2012] $) $( [15-Aug-1994] $)

    $( Obsolete proof of ~ ancld . $)
    ancldOLD $p |- ( ph -> ( ps -> ( ps /\ ch ) ) ) $=
      ( wi wa ancl syl ) ABCEBBCFEDBCGH $.
      $( [15-Aug-1994] $)
  $}

  ${
    ancrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to right of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 1-Nov-2012.) $)
    ancrd $p |- ( ph -> ( ps -> ( ch /\ ps ) ) ) $=
      ( idd jcad ) ABCBDABEF $.
      $( [1-Nov-2012] $) $( [15-Aug-1994] $)

    $( Obsolete proof of ~ ancrd . $)
    ancrdOLD $p |- ( ph -> ( ps -> ( ch /\ ps ) ) ) $=
      ( wi wa ancr syl ) ABCEBCBFEDBCGH $.
      $( [15-Aug-1994] $)
  $}

  $( Conjoin antecedent to left of consequent in nested implication. $)
  anc2l $p |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) $=
    ( wi wa pm3.2 imim2d a2i ) ABCDBACEZDACIBACFGH $.
    $( [10-Aug-1994] $)

  $( Conjoin antecedent to right of consequent in nested implication. $)
  anc2r $p |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ch /\ ph ) ) ) ) $=
    ( wi wa pm3.21 imim2d a2i ) ABCDBCAEZDACIBACFGH $.
    $( [15-Aug-1994] $)

  ${
    anc2li.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to left of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 7-Dec-2012.) $)
    anc2li $p |- ( ph -> ( ps -> ( ph /\ ch ) ) ) $=
      ( id jctild ) ABCADAEF $.
      $( [7-Dec-2012] $) $( [10-Aug-1994] $)

    $( Obsolete proof of ~ anc2li . $)
    anc2liOLD $p |- ( ph -> ( ps -> ( ph /\ ch ) ) ) $=
      ( wi wa anc2l ax-mp ) ABCEEABACFEEDABCGH $.
      $( [10-Aug-1994] $)
  $}

  ${
    anc2ri.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to right of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 7-Dec-2012.) $)
    anc2ri $p |- ( ph -> ( ps -> ( ch /\ ph ) ) ) $=
      ( id jctird ) ABCADAEF $.
      $( [7-Dec-2012] $) $( [15-Aug-1994] $)

    $( Obsolete proof of ~ anc2ri . $)
    anc2riOLD $p |- ( ph -> ( ps -> ( ch /\ ph ) ) ) $=
      ( wi wa anc2r ax-mp ) ABCEEABCAFEEDABCGH $.
      $( [15-Aug-1994] $)
  $}

  $( Theorem *3.41 of [WhiteheadRussell] p. 113. $)
  pm3.41 $p |- ( ( ph -> ch ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa simpl imim1i ) ABDACABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *3.42 of [WhiteheadRussell] p. 113. $)
  pm3.42 $p |- ( ( ps -> ch ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa simpr imim1i ) ABDBCABEF $.
    $( [3-Jan-2005] $)

  $( Conjoin antecedent to left of consequent.  Theorem *4.7 of
     [WhiteheadRussell] p. 120. $)
  anclb $p |- ( ( ph -> ps ) <-> ( ph -> ( ph /\ ps ) ) ) $=
    ( wi wa ancl simpr imim2i impbii ) ABCAABDZCABEIBAABFGH $.
    $( [25-Jul-1999] $)

  $( Conjoin antecedent to right of consequent. $)
  ancrb $p |- ( ( ph -> ps ) <-> ( ph -> ( ps /\ ph ) ) ) $=
    ( wi wa ancr simpl imim2i impbii ) ABCABADZCABEIBABAFGH $.
    $( [25-Jul-1999] $)

  $( Conjunction implies implication.  Theorem *3.4 of [WhiteheadRussell]
     p. 113. $)
  pm3.4 $p |- ( ( ph /\ ps ) -> ( ph -> ps ) ) $=
    ( wa simpr a1d ) ABCBAABDE $.
    $( [31-Jul-1995] $)

  $( Conjunction with implication.  Compare Theorem *4.45 of [WhiteheadRussell]
     p. 119. $)
  pm4.45im $p |- ( ph <-> ( ph /\ ( ps -> ph ) ) ) $=
    ( wi wa ax-1 ancli simpl impbii ) AABACZDAIABEFAIGH $.
    $( [17-May-1998] $)

  ${
    anim12i.1 $e |- ( ph -> ps ) $.
    anim12i.2 $e |- ( ch -> th ) $.
    $( Conjoin antecedents and consequents of two premises.  (The proof was
       shortened by Wolf Lammen, 27-Nov-2012.) $)
    anim12i $p |- ( ( ph /\ ch ) -> ( ps /\ th ) ) $=
      ( wa wi a1i jctild imp ) ACBDGACDBCDHAFIEJK $.
      $( [27-Nov-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ anim12i . $)
    anim12iOLD $p |- ( ( ph /\ ch ) -> ( ps /\ th ) ) $=
      ( wa simpl syl simpr jca ) ACGZBDLABACHEILCDACJFIK $.
      $( [5-Aug-1993] $)
  $}

  ${
    anim1i.1 $e |- ( ph -> ps ) $.
    $( Introduce conjunct to both sides of an implication. $)
    anim1i $p |- ( ( ph /\ ch ) -> ( ps /\ ch ) ) $=
      ( id anim12i ) ABCCDCEF $.
      $( [5-Aug-1993] $)

    $( Introduce conjunct to both sides of an implication. $)
    anim2i $p |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) $=
      ( id anim12i ) CCABCEDF $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *2.3 of [WhiteheadRussell] p. 104. $)
  pm2.3 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ph \/ ( ch \/ ps ) ) ) $=
    ( wo pm1.4 orim2i ) BCDCBDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.41 of [WhiteheadRussell] p. 106. $)
  pm2.41 $p |- ( ( ps \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) $=
    ( wo olc id jaoi ) BABCZGBADGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.42 of [WhiteheadRussell] p. 106. $)
  pm2.42 $p |- ( ( -. ph \/ ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wn wi pm2.21 id jaoi ) ACABDZHABEHFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.4 of [WhiteheadRussell] p. 106. $)
  pm2.4 $p |- ( ( ph \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) $=
    ( wo orc id jaoi ) AABCZGABDGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.44 of [WhiteheadRussell] p. 119. $)
  pm4.44 $p |- ( ph <-> ( ph \/ ( ph /\ ps ) ) ) $=
    ( wa wo orc id simpl jaoi impbii ) AAABCZDAJEAAJAFABGHI $.
    $( [3-Jan-2005] $)

  $( Theorem *3.3 (Exp) of [WhiteheadRussell] p. 112. $)
  pm3.3 $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) $=
    ( wa wi impexp biimpi ) ABDCEABCEEABCFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.31 (Imp) of [WhiteheadRussell] p. 112. $)
  pm3.31 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa wi impexp biimpri ) ABDCEABCEEABCFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.14 of [WhiteheadRussell] p. 117.  (The proof was shortened by
     Wolf Lammen, 23-Oct-2012.) $)
  pm4.14 $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wi wn wa con34b imbi2i impexp 3bitr4i ) ABCDZDACEZBEZDZDABFCDALFMDKNABCGH
    ABCIALMIJ $.
    $( [23-Oct-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.14 . $)
  pm4.14OLD $p |- ( ( ( ph /\ ps ) -> ch )
         <-> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wa wi wn impexp bi2.04 bitri iman imbi2i con2b 3bitri ) ABDCEZBACEZEZBACF
    DZFZEQBFENABCEEPABCGABCHIORBACJKBQLM $.
    $( [3-Jan-2005] $)

  $( Theorem *3.37 (Transp) of [WhiteheadRussell] p. 112.  (The proof was
     shortened by Wolf Lammen, 23-Oct-2012.) $)
  pm3.37 $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wa wi wn pm4.14 biimpi ) ABDCEACFDBFEABCGH $.
    $( [23-Oct-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm3.37 . $)
  pm3.37OLD $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wa wi wn pm3.21 imim1d com12 iman syl6ib con2d ) ABDZCEZBACFDZNBACEZOFBNP
    BAMCBAGHIACJKL $.
    $( [3-Jan-2005] $)

  $( Theorem to move a conjunct in and out of a negation. $)
  nan $p |- ( ( ph -> -. ( ps /\ ch ) ) <-> ( ( ph /\ ps ) -> -. ch ) ) $=
    ( wa wn wi impexp imnan imbi2i bitr2i ) ABDCEZFABKFZFABCDEZFABKGLMABCHIJ $.
    $( [9-Nov-2003] $)

  $( Theorem *4.15 of [WhiteheadRussell] p. 117.  (The proof was shortened by
     Wolf Lammen, 18-Nov-2012.) $)
  pm4.15 $p |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ( ps /\ ch ) -> -. ph ) ) $=
    ( wa wn wi con2b nan bitr2i ) BCDZAEFAJEFABDCEFJAGABCHI $.
    $( [18-Nov-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.15 . $)
  pm4.15OLD $p |- ( ( ( ph /\ ps ) -> -. ch )
             <-> ( ( ps /\ ch ) -> -. ph ) ) $=
    ( wa wn wi impexp imnan imbi2i con2b 3bitri ) ABDCEZFABLFZFABCDZEZFNAEFABLG
    MOABCHIANJK $.
    $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.78 . $)
  pm4.78OLD $p |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <->
                ( ph -> ( ps \/ ch ) ) ) $=
    ( wi wn wo wa impexp annim imbi1i bi2.04 imbi2i pm5.4 bitri 3bitr3i df-or 
    3bitr4i ) ABDZEZACDZDZABEZCDZDZRTFABCFZDAUBGZTDAUBTDZDZUAUDAUBTHUFSTABIJUHA
    UDDUDUGUDAUBACKLAUCMNORTPUEUCABCPLQ $.
    $( [3-Jan-2005] $)

  $( Theorem *4.78 of [WhiteheadRussell] p. 121.  (The proof was shortened by
     Wolf Lammen, 19-Nov-2012.) $)
  pm4.78 $p |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <->
                ( ph -> ( ps \/ ch ) ) ) $=
    ( wn wo wi orordi imor orbi12i 3bitr4ri ) ADZBCEZEKBEZKCEZEALFABFZACFZEKBCG
    ALHOMPNABHACHIJ $.
    $( [19-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.79 of [WhiteheadRussell] p. 121.  (The proof was shortened by
    Wolf Lammen, 3-Jan-2013.) $)
  pm4.79 $p |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <->
                ( ( ps /\ ch ) -> ph ) ) $=
    ( wi wo wa pm3.41 pm3.42 jaoi wn pm3.3 simplim syl5 orrd impbii ) BADZCADZE
    BCFADZPRQBCAGBCAHIRPQRBQPJBCAKBALMNO $.
    $( [3-Jan-2013] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.79 . $)
  pm4.79OLD $p |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <->
                ( ( ps /\ ch ) -> ph ) ) $=
    ( wn wi wo wa pm4.78 ianor imbi2i bitr4i con34b orbi12i 3bitr4i ) ADZBDZEZO
    CDZEZFZOBCGZDZEZBAEZCAEZFUAAETOPRFZEUCOPRHUBUFOBCIJKUDQUESBALCALMUAALN $.
    $( [3-Jan-2005] $)

  $( Theorem *4.87 of [WhiteheadRussell] p. 122.  (The proof was shortened by
     Eric Schmidt, 26-Oct-2006.) $)
  pm4.87 $p |- ( ( ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) /\
                ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ) /\
                ( ( ps -> ( ph -> ch ) ) <-> ( ( ps /\ ph ) -> ch ) ) ) $=
    ( wa wi wb impexp bi2.04 pm3.2i bicomi ) ABDCEABCEEZFZKBACEEZFZDMBADCEZFLNA
    BCGABCHIOMBACGJI $.
    $( [27-Oct-2006] $) $( [3-Jan-2005] $)

  $( Theorem *3.33 (Syll) of [WhiteheadRussell] p. 112. $)
  pm3.33 $p |- ( ( ( ph -> ps ) /\ ( ps -> ch ) ) -> ( ph -> ch ) ) $=
    ( wi imim1 imp ) ABDBCDACDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *3.34 (Syll) of [WhiteheadRussell] p. 112. $)
  pm3.34 $p |- ( ( ( ps -> ch ) /\ ( ph -> ps ) ) -> ( ph -> ch ) ) $=
    ( wi imim2 imp ) BCDABDACDBCAEF $.
    $( [3-Jan-2005] $)

  $( Conjunctive detachment.  Theorem *3.35 of [WhiteheadRussell] p. 112. $)
  pm3.35 $p |- ( ( ph /\ ( ph -> ps ) ) -> ps ) $=
    ( wi pm2.27 imp ) AABCBABDE $.
    $( [14-Dec-2002] $)

  $( Theorem *5.31 of [WhiteheadRussell] p. 125. $)
  pm5.31 $p |- ( ( ch /\ ( ph -> ps ) ) -> ( ph -> ( ps /\ ch ) ) ) $=
    ( wi wa pm3.21 imim2d imp ) CABDABCEZDCBIACBFGH $.
    $( [3-Jan-2005] $)

  ${
    imp3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Importation deduction. $)
    imp3a $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( wi wa impexp sylibr ) ABCDFFBCGDFEBCDHI $.
      $( [31-Mar-1994] $)

    $( An importation inference. $)
    imp31 $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( wa wi imp ) ABFCDABCDGEHH $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp32 $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( wa imp3a imp ) ABCFDABCDEGH $.
      $( [26-Apr-1994] $)

  $}

  ${
    imp4.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( An importation inference. $)
    imp4a $p |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) $=
      ( wi wa impexp syl6ibr ) ABCDEGGCDHEGFCDEIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4b $p |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) $=
      ( wa wi imp4a imp ) ABCDGEHABCDEFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4c $p |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) $=
      ( wa wi imp3a ) ABCGDEABCDEHFII $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4d $p |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) $=
      ( wa imp4a imp3a ) ABCDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp41 $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) $=
      ( wa wi imp imp31 ) ABGCDEABCDEHHFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp42 $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $=
      ( wa wi imp32 imp ) ABCGGDEABCDEHFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp43 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa imp4b imp ) ABGCDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp44 $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) $=
      ( wa imp4c imp ) ABCGDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp45 $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) $=
      ( wa imp4d imp ) ABCDGGEABCDEFHI $.
      $( [26-Apr-1994] $)

  $}

  ${
    imp5a.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $.
    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.)
       (The proof was shortened by NM, 1-Dec-2012.) $)
    imp5a $p |- ( ph -> ( ps -> ( ch -> ( ( th /\ ta ) -> et ) ) ) ) $=
      ( wi wa pm3.31 syl8 ) ABCDEFHHDEIFHGDEFJK $.
      $( [1-Dec-2012] $) $( [7-Jul-2009] $)

    $( Obsolete proof of ~ imp5a . $)
    imp5aOLD $p |- ( ph -> ( ps -> ( ch -> ( ( th /\ ta ) -> et ) ) ) ) $=
      ( wa wi com52r imp com4l ) DEHABCFDEABCFIIIABCDEFGJKL $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5d $p |- ( ( ( ph /\ ps ) /\ ch ) -> ( ( th /\ ta ) -> et ) ) $=
      ( wa wi imp31 imp3a ) ABHCHDEFABCDEFIIGJK $.
      $( [21-Feb-2011] $) $( [7-Jul-2009] $)
  $}

  ${
    expimpd.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Exportation followed by a deduction version of importation. $)
    expimpd $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( wi ex imp3a ) ABCDABCDFEGH $.
      $( [6-Sep-2008] $)
  $}

  ${
    exp3a.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Exportation deduction. $)
    exp3a $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wa wi impexp sylib ) ABCFDGBCDGGEBCDHI $.
      $( [20-Aug-1993] $)

    $( A deduction version of exportation, followed by importation. $)
    expdimp $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi exp3a imp ) ABCDFABCDEGH $.
      $( [6-Sep-2008] $)
  $}

  ${
    exp31.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An exportation inference. $)
    exp31 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi wa ex ) ABCDFABGCDEHH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp32.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An exportation inference. $)
    exp32 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wa ex exp3a ) ABCDABCFDEGH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4a.1 $e |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) $.
    $( An exportation inference. $)
    exp4a $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa wi impexp syl6ib ) ABCDGEHCDEHHFCDEIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4b.1 $e |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) $.
    $( An exportation inference.  (The proof was shortened by Wolf Lammen,
       23-Nov-2012.) $)
    exp4b $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa wi ex exp4a ) ABCDEABCDGEHFIJ $.
      $( [23-Nov-2012] $) $( [26-Apr-1994] $)

    $( Obsolete proof of ~ exp4b . $)
    exp4bOLD $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp3a ex ) ABCDEGGABHCDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4c.1 $e |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) $.
    $( An exportation inference. $)
    exp4c $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp3a ) ABCDEGABCHDEFII $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4d.1 $e |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) $.
    $( An exportation inference. $)
    exp4d $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa exp3a exp4a ) ABCDEABCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp41.1 $e |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) $.
    $( An exportation inference. $)
    exp41 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa ex exp31 ) ABCDEGABHCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp42.1 $e |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $.
    $( An exportation inference. $)
    exp42 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp31 exp3a ) ABCDEGABCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp43.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( An exportation inference. $)
    exp43 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa ex exp4b ) ABCDEABGCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp44.1 $e |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) $.
    $( An exportation inference. $)
    exp44 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp32 exp3a ) ABCDEGABCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp45.1 $e |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) $.
    $( An exportation inference. $)
    exp45 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa exp32 exp4a ) ABCDEABCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    expr.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Export a wff from a right conjunct.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    expr $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi exp32 imp ) ABCDFABCDEGH $.
      $( [21-Feb-2011] $) $( [28-Aug-2009] $)
  $}

  ${
    exp53.1 $e |- ( ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) /\ ta ) -> et ) $.
    $( An exportation inference.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    exp53 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi wa ex exp43 ) ABCDEFHABICDIIEFGJK $.
      $( [21-Feb-2011] $) $( [7-Jul-2009] $)
  $}

  ${
    expl.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Export a wff from a left conjunct.  (Contributed by Jeff Hankins,
       28-Aug-2009.) $)
    expl $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( exp31 imp3a ) ABCDABCDEFG $.
      $( [28-Aug-2009] $)
  $}

  ${
    exbiri.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Inference form of ~ exbir .  This proof is ~ exbiriVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
    exbiri $p |- ( ph -> ( ps -> ( th -> ch ) ) ) $=
      ( wb wi ex bi2 syl6 ) ABCDFZDCGABKEHCDIJ $.
      $( [31-Dec-2011] $)
  $}

  ${
    impr.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Import a wff into a right conjunct.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    impr $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( wi ex imp32 ) ABCDABCDFEGH $.
      $( [21-Feb-2011] $) $( [28-Aug-2009] $)
  $}

  ${
    impac.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Importation with conjunction in consequent. $)
    impac $p |- ( ( ph /\ ps ) -> ( ch /\ ps ) ) $=
      ( wa ancrd imp ) ABCBEABCDFG $.
      $( [9-Aug-1994] $)
  $}

  ${
    adantr.1 $e |- ( ph -> ps ) $.
    $( Inference adding a conjunct to the right of an antecedent. $)
    adantr $p |- ( ( ph /\ ch ) -> ps ) $=
      ( a1d imp ) ACBABCDEF $.
      $( [30-Aug-1993] $)
  $}

  ${
    adantl.1 $e |- ( ph -> ps ) $.
    $( Inference adding a conjunct to the left of an antecedent.  (The proof
       was shortened by Wolf Lammen, 23-Nov-2012.) $)
    adantl $p |- ( ( ch /\ ph ) -> ps ) $=
      ( adantr ancoms ) ACBABCDEF $.
      $( [23-Nov-2012] $) $( [30-Aug-1993] $)

    $( Obsolete proof of ~ adantl . $)
    adantlOLD $p |- ( ( ch /\ ph ) -> ps ) $=
      ( wi a1i imp ) CABABECDFG $.
      $( [30-Aug-1993] $)
  $}

  ${
    mpan9.1 $e |- ( ph -> ps ) $.
    mpan9.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( Modus ponens conjoining dissimilar antecedents.  (The proof was
       shortened by Andrew Salmon, 7-May-2011.) $)
    mpan9 $p |- ( ( ph /\ ch ) -> th ) $=
      ( syl5 impcom ) CADCBDAFEGH $.
      $( [12-May-2011] $) $( [1-Feb-2008] $)
  $}

  ${
    syldan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    syldan.2 $e |- ( ( ph /\ ch ) -> th ) $.
    $( A syllogism deduction with conjoined antecents. $)
    syldan $p |- ( ( ph /\ ps ) -> th ) $=
      ( ex syld imp ) ABDABCDABCEGACDFGHI $.
      $( [24-Feb-2005] $)
  $}

  ${
    sylan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    ${
      sylan.2 $e |- ( th -> ph ) $.
      $( A syllogism inference.  (The proof was shortened by Wolf Lammen,
         22-Nov-2012.) $)
      sylan $p |- ( ( th /\ ps ) -> ch ) $=
        ( expcom mpan9 ) DABCFABCEGH $.
        $( [22-Nov-2012] $) $( [21-Apr-1994] $)

      $( Obsolete proof of ~ sylan . $)
      sylanOLD $p |- ( ( th /\ ps ) -> ch ) $=
        ( wi ex syl imp ) DBCDABCGFABCEHIJ $.
        $( [21-Apr-1994] $)
    $}

    ${
      sylanb.2 $e |- ( th <-> ph ) $.
      $( A syllogism inference. $)
      sylanb $p |- ( ( th /\ ps ) -> ch ) $=
        ( biimpi sylan ) ABCDEDAFGH $.
        $( [18-May-1994] $)
    $}

    ${
      sylanbr.2 $e |- ( ph <-> th ) $.
      $( A syllogism inference. $)
      sylanbr $p |- ( ( th /\ ps ) -> ch ) $=
        ( biimpri sylan ) ABCDEADFGH $.
        $( [18-May-1994] $)
    $}

    ${
      sylan2.2 $e |- ( th -> ps ) $.
      $( A syllogism inference.  (The proof was shortened by Wolf Lammen,
         22-Nov-2012.) $)
      sylan2 $p |- ( ( ph /\ th ) -> ch ) $=
        ( adantl syldan ) ADBCDBAFGEH $.
        $( [22-Nov-2012] $) $( [21-Apr-1994] $)

      $( Obsolete proof of ~ sylan2 . $)
      sylan2OLD $p |- ( ( ph /\ th ) -> ch ) $=
        ( ex syl5 imp ) ADCABCDABCEGFHI $.
        $( [21-Apr-1994] $)
    $}

    ${
      sylan2b.2 $e |- ( th <-> ps ) $.
      $( A syllogism inference. $)
      sylan2b $p |- ( ( ph /\ th ) -> ch ) $=
        ( biimpi sylan2 ) ABCDEDBFGH $.
        $( [21-Apr-1994] $)
    $}

    ${
      sylan2br.2 $e |- ( ps <-> th ) $.
      $( A syllogism inference. $)
      sylan2br $p |- ( ( ph /\ th ) -> ch ) $=
        ( biimpri sylan2 ) ABCDEBDFGH $.
        $( [21-Apr-1994] $)
    $}

    ${
      syl2an.2 $e |- ( th -> ph ) $.
      syl2an.3 $e |- ( ta -> ps ) $.
      $( A double syllogism inference. $)
      syl2an $p |- ( ( th /\ ta ) -> ch ) $=
        ( sylan sylan2 ) DBCEABCDFGIHJ $.
        $( [31-Jan-1997] $)
    $}

    ${
      syl2anb.2 $e |- ( th <-> ph ) $.
      syl2anb.3 $e |- ( ta <-> ps ) $.
      $( A double syllogism inference. $)
      syl2anb $p |- ( ( th /\ ta ) -> ch ) $=
        ( sylanb sylan2b ) DBCEABCDFGIHJ $.
        $( [29-Jul-1999] $)
    $}

    ${
      syl2anbr.2 $e |- ( ph <-> th ) $.
      syl2anbr.3 $e |- ( ps <-> ta ) $.
      $( A double syllogism inference. $)
      syl2anbr $p |- ( ( th /\ ta ) -> ch ) $=
        ( sylanbr sylan2br ) DBCEABCDFGIHJ $.
        $( [29-Jul-1999] $)
    $}
  $}

  ${
    biimpa.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Inference from a logical equivalence. $)
    biimpa $p |- ( ( ph /\ ps ) -> ch ) $=
      ( biimpd imp ) ABCABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimpar $p |- ( ( ph /\ ch ) -> ps ) $=
      ( biimprd imp ) ACBABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimpac $p |- ( ( ps /\ ph ) -> ch ) $=
      ( biimpcd imp ) BACABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimparc $p |- ( ( ch /\ ph ) -> ps ) $=
      ( biimprcd imp ) CABABCDEF $.
      $( [3-May-1994] $)
  $}

  ${
    pm3.26bda.1 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprbda $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa biimpa simpld ) ABFCDABCDFEGH $.
      $( [22-Oct-2007] $)

    $( Deduction eliminating a conjunct. $)
    simplbda $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa biimpa simprd ) ABFCDABCDFEGH $.
      $( [22-Oct-2007] $)
  $}

  ${
    pm3.26bi2.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct.  Automatically derived from
       ~ simplbi2VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    simplbi2 $p |- ( ps -> ( ch -> ph ) ) $=
      ( wa biimpri ex ) BCAABCEDFG $.
      $( [31-Dec-2011] $)
  $}

  $( Idempotent law for conjunction.  (The proof was shortened by Wolf Lammen,
     6-Nov-2012.) $)
  anidm $p |- ( ( ph /\ ph ) <-> ph ) $=
    ( wa simpl id ancli impbii ) AABAAACAAADEF $.
    $( [6-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ anidm . $)
  anidmOLD $p |- ( ( ph /\ ph ) <-> ph ) $=
    ( wa simpl pm3.2 pm2.43i impbii ) AABZAAACAGAADEF $.
    $( [5-Aug-1993] $)

  $( Theorem *4.24 of [WhiteheadRussell] p. 117. $)
  pm4.24 $p |- ( ph <-> ( ph /\ ph ) ) $=
    ( wa anidm bicomi ) AABAACD $.
    $( [3-Jan-2005] $)

  ${
    anidms.1 $e |- ( ( ph /\ ph ) -> ps ) $.
    $( Inference from idempotent law for conjunction. $)
    anidms $p |- ( ph -> ps ) $=
      ( ex pm2.43i ) ABAABCDE $.
      $( [15-Jun-1994] $)
  $}

  $( Conjunction idempotence with antecedent.  (Contributed by Roy F. Longton,
     8-Aug-2005.) $)
  anidmdbi $p |- ( ( ph -> ( ps /\ ps ) ) <-> ( ph -> ps ) ) $=
    ( wa anidm imbi2i ) BBCBABDE $.
    $( [31-Oct-2007] $) $( [8-Aug-2005] $)

  $( Obsolete proof of ~ pm3.22 . $)
  pm3.22OLD $p |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) $=
    ( wa ancom biimpi ) ABCBACABDE $.
    $( [3-Jan-2005] $)

  $( Obsolete proof of ~ ancom . $)
  ancomOLD $p |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) $=
    ( wa simpr simpl jca impbii ) ABCZBACZHBAABDABEFIABBADBAEFG $.
    $( [25-Jun-1998] $)

  ${
    anasss.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Associative law for conjunction applied to antecedent (eliminates
       syllogism). $)
    anasss $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( exp31 imp32 ) ABCDABCDEFG $.
      $( [15-Nov-2002] $)
  $}

  ${
    anassrs.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Associative law for conjunction applied to antecedent (eliminates
       syllogism). $)
    anassrs $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( exp32 imp31 ) ABCDABCDEFG $.
      $( [15-Nov-2002] $)
  $}

  $( Associative law for conjunction.  Theorem *4.32 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 24-Nov-2012.) $)
  anass $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( wa id anassrs anasss impbii ) ABDCDZABCDDZABCJJEFABCIIEGH $.
    $( [24-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ anass . $)
  anassOLD $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( wa wn wi impexp imnan imbi2i bitri notbii df-an 3bitr4i ) ABDZCEZFZEABCDZ
    EZFZENCDAQDPSPABOFZFSABOGTRABCHIJKNCLAQLM $.
    $( [5-Aug-1993] $)

  ${
    syland.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    syland.2 $e |- ( ph -> ( ta -> ps ) ) $.
    $( A syllogism deduction. $)
    syland $p |- ( ph -> ( ( ta /\ ch ) -> th ) ) $=
      ( wi exp3a syld imp3a ) AECDAEBCDHGABCDFIJK $.
      $( [15-Dec-2004] $)
  $}

  ${
    sylan2d.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    sylan2d.2 $e |- ( ph -> ( ta -> ch ) ) $.
    $( A syllogism deduction. $)
    sylan2d $p |- ( ph -> ( ( ps /\ ta ) -> th ) ) $=
      ( ancomsd syland ) AEBDACBDEABCDFHGIH $.
      $( [15-Dec-2004] $)
  $}

  ${
    syl2and.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    syl2and.2 $e |- ( ph -> ( ta -> ps ) ) $.
    syl2and.3 $e |- ( ph -> ( et -> ch ) ) $.
    $( A syllogism deduction. $)
    syl2and $p |- ( ph -> ( ( ta /\ et ) -> th ) ) $=
      ( sylan2d syland ) ABFDEABCDFGIJHK $.
      $( [15-Dec-2004] $)
  $}

  ${
    sylanl1.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    sylanl1.2 $e |- ( ta -> ph ) $.
    $( A syllogism inference. $)
    sylanl1 $p |- ( ( ( ta /\ ps ) /\ ch ) -> th ) $=
      ( wa anim1i sylan ) ABHCDEBHFEABGIJ $.
      $( [10-Mar-2005] $)
  $}

  ${
    sylanl2.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    sylanl2.2 $e |- ( ta -> ps ) $.
    $( A syllogism inference. $)
    sylanl2 $p |- ( ( ( ph /\ ta ) /\ ch ) -> th ) $=
      ( wa anim2i sylan ) ABHCDAEHFEBAGIJ $.
      $( [1-Jan-2005] $)
  $}

  ${
    sylanr1.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    sylanr1.2 $e |- ( ta -> ps ) $.
    $( A syllogism inference. $)
    sylanr1 $p |- ( ( ph /\ ( ta /\ ch ) ) -> th ) $=
      ( wa anim1i sylan2 ) ABCHDECHFEBCGIJ $.
      $( [9-Apr-2005] $)
  $}

  ${
    sylanr2.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    sylanr2.2 $e |- ( ta -> ch ) $.
    $( A syllogism inference. $)
    sylanr2 $p |- ( ( ph /\ ( ps /\ ta ) ) -> th ) $=
      ( wa anim2i sylan2 ) ABCHDBEHFECBGIJ $.
      $( [9-Apr-2005] $)
  $}

  ${
    sylani.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    sylani.2 $e |- ( ta -> ps ) $.
    $( A syllogism inference. $)
    sylani $p |- ( ph -> ( ( ta /\ ch ) -> th ) ) $=
      ( wi a1i syland ) ABCDEFEBHAGIJ $.
      $( [2-May-1996] $)
  $}

  ${
    sylan2i.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    sylan2i.2 $e |- ( ta -> ch ) $.
    $( A syllogism inference. $)
    sylan2i $p |- ( ph -> ( ( ps /\ ta ) -> th ) ) $=
      ( wi a1i sylan2d ) ABCDEFECHAGIJ $.
      $( [1-Aug-1994] $)
  $}

  ${
    syl2ani.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    syl2ani.2 $e |- ( ta -> ps ) $.
    syl2ani.3 $e |- ( et -> ch ) $.
    $( A syllogism inference. $)
    syl2ani $p |- ( ph -> ( ( ta /\ et ) -> th ) ) $=
      ( sylan2i sylani ) ABFDEABCDFGIJHK $.
      $( [3-Aug-1999] $)
  $}

  ${
    sylan9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan9.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents.  (The
       proof was shortened by Andrew Salmon, 7-May-2011.) $)
    sylan9 $p |- ( ( ph /\ th ) -> ( ps -> ta ) ) $=
      ( wi syl9 imp ) ADBEHABCDEFGIJ $.
      $( [12-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sylan9r.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan9r.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9r $p |- ( ( th /\ ph ) -> ( ps -> ta ) ) $=
      ( wi syl9r imp ) DABEHABCDEFGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    mtand.1 $e |- ( ph -> -. ch ) $.
    mtand.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( A modus tollens deduction.  (Contributed by Jeff Hankins,
       19-Aug-2009.) $)
    mtand $p |- ( ph -> -. ps ) $=
      ( ex mtod ) ABCDABCEFG $.
      $( [21-Feb-2011] $) $( [15-Jul-2009] $)
  $}

  ${
    sylanc.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylanc.2 $e |- ( th -> ph ) $.
    sylanc.3 $e |- ( th -> ps ) $.
    $( A syllogism inference combined with contraction.  (OBSOLETE - replaced
       by ~ syl11anc 21-Mar-2012. --NM) $)
    sylancOLD $p |- ( th -> ch ) $=
      ( ex sylc ) DABCFGABCEHI $.
      $( [3-Oct-1999] $)
  $}

  ${
    syl11anc.1 $e |- ( ph -> ps ) $.
    syl11anc.2 $e |- ( ph -> ch ) $.
    syl11anc.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with contraction. $)
    syl11anc $p |- ( ph -> th ) $=
      ( ex sylc ) ABCDEFBCDGHI $.
      $( [16-Mar-2012] $)
  $}

  ${
    sylancl.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancl.2 $e |- ( th -> ph ) $.
    sylancl.3 $e |- ps $.
    $( Syllogism inference combined with modus ponens.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    sylancl $p |- ( th -> ch ) $=
      ( a1i syl11anc ) DABCFBDGHEI $.
      $( [18-Apr-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    sylancr.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancr.2 $e |- ph $.
    sylancr.3 $e |- ( th -> ps ) $.
    $( Syllogism inference combined with modus ponens.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    sylancr $p |- ( th -> ch ) $=
      ( a1i syl11anc ) DABCADFHGEI $.
      $( [2-Sep-2009] $)
  $}

  ${
    sylanbrc.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    sylanbrc.2 $e |- ( th -> ps ) $.
    sylanbrc.3 $e |- ( th -> ch ) $.
    $( Syllogism inference.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    sylanbrc $p |- ( th -> ph ) $=
      ( wa jca sylibr ) DBCHADBCFGIEJ $.
      $( [11-Oct-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    syl2anc.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    syl2anc.2 $e |- ( et -> ph ) $.
    syl2anc.3 $e |- ( et -> ps ) $.
    syl2anc.4 $e |- ( et -> ch ) $.
    syl2anc.5 $e |- ( et -> th ) $.
    $( A syllogism inference combined with contraction.  (OBSOLETE - replaced
       by ~ syl22anc 21-Mar-2012. --NM) $)
    syl2ancOLD $p |- ( et -> ta ) $=
      ( wa jca syl11anc ) FABLCDLEFABHIMFCDJKMGN $.
      $( [16-Jun-2007] $)
  $}

  ${
    sylancb.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancb.2 $e |- ( th <-> ph ) $.
    sylancb.3 $e |- ( th <-> ps ) $.
    $( A syllogism inference combined with contraction. $)
    sylancb $p |- ( th -> ch ) $=
      ( syl2anb anidms ) DCABCDDEFGHI $.
      $( [3-Sep-2004] $)
  $}

  ${
    sylancbr.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancbr.2 $e |- ( ph <-> th ) $.
    sylancbr.3 $e |- ( ps <-> th ) $.
    $( A syllogism inference combined with contraction. $)
    sylancbr $p |- ( th -> ch ) $=
      ( syl2anbr anidms ) DCABCDDEFGHI $.
      $( [3-Sep-2004] $)
  $}

  ${
    sylancom.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancom.2 $e |- ( ( ch /\ ps ) -> th ) $.
    $( Syllogism inference with commutation of antecents. $)
    sylancom $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa simpr syl11anc ) ABGCBDEABHFI $.
      $( [2-Jul-2008] $)
  $}

  ${
    sylan31c.1 $e |- ( ta -> ph ) $.
    sylan31c.2 $e |- ( ta -> ps ) $.
    sylan31c.3 $e |- ( ta -> ch ) $.
    ${
      sylan31c.4 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
      $( A syllogism inference combined with contraction.  (Contributed by Jeff
         Hankins, 1-Aug-2009.)  (OBSOLETE - replaced by ~ syl21anc 21-Mar-2012.
         --NM) $)
      sylan31cOLD $p |- ( ta -> th ) $=
        ( wa jca31 syl ) EABJCJDEABCFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      sylan32c.4 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
      $( A syllogism inference combined with contraction.  (Contributed by Jeff
         Hankins, 1-Aug-2009.)  (OBSOLETE - replaced by ~ syl12anc 21-Mar-2012.
         --NM) $)
      sylan32cOLD $p |- ( ta -> th ) $=
        ( wa jca32 syl ) EABCJJDEABCFGHKIL $.
        $( [1-Aug-2009] $)
    $}
  $}

  ${
    mpan.1 $e |- ph $.
    mpan.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 22-Nov-2012.) $)
    mpan $p |- ( ps -> ch ) $=
      ( id sylancr ) ABCBEDBFG $.
      $( [22-Nov-2012] $) $( [30-Aug-1993] $)

    $( Obsolete proof of ~ mpan . $)
    mpanOLD $p |- ( ps -> ch ) $=
      ( wi ex ax-mp ) ABCFDABCEGH $.
      $( [30-Aug-1993] $)
  $}

  ${
    mp2an.1 $e |- ph $.
    mp2an.2 $e |- ps $.
    mp2an.3 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens. $)
    mp2an $p |- ch $=
      ( mpan ax-mp ) BCEABCDFGH $.
      $( [13-Apr-1995] $)
  $}

  ${
    mp4an.1 $e |- ph $.
    mp4an.2 $e |- ps $.
    mp4an.3 $e |- ch $.
    mp4an.4 $e |- th $.
    mp4an.5 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens.  (Contributed by Jeff Madsen,
       15-Jun-2011.) $)
    mp4an $p |- ta $=
      ( wa pm3.2i mp2an ) ABKCDKEABFGLCDHILJM $.
      $( [15-Jun-2010] $)
  $}

  ${
    mpand.1 $e |- ( ph -> ps ) $.
    mpand.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mpand $p |- ( ph -> ( ch -> th ) ) $=
      ( wi exp3a mpd ) ABCDGEABCDFHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpan2d.1 $e |- ( ph -> ch ) $.
    mpan2d.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mpan2d $p |- ( ph -> ( ps -> th ) ) $=
      ( exp3a mpid ) ABCDEABCDFGH $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpani.1 $e |- ps $.
    mpani.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpani $p |- ( ph -> ( ch -> th ) ) $=
      ( a1i mpand ) ABCDBAEGFH $.
      $( [19-Nov-2012] $) $( [10-Apr-1994] $)

    $( Obsolete proof of ~ mpani . $)
    mpaniOLD $p |- ( ph -> ( ch -> th ) ) $=
      ( wi exp3a mpi ) ABCDGEABCDFHI $.
      $( [10-Apr-1994] $)
  $}

  ${
    mpan2i.1 $e |- ch $.
    mpan2i.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpan2i $p |- ( ph -> ( ps -> th ) ) $=
      ( a1i mpan2d ) ABCDCAEGFH $.
      $( [19-Nov-2012] $) $( [10-Apr-1994] $)

    $( Obsolete proof of ~ mpan2i . $)
    mpan2iOLD $p |- ( ph -> ( ps -> th ) ) $=
      ( exp3a mpii ) ABCDEABCDFGH $.
      $( [10-Apr-1994] $)
  $}

  ${
    mp2ani.1 $e |- ps $.
    mp2ani.2 $e |- ch $.
    mp2ani.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens. $)
    mp2ani $p |- ( ph -> th ) $=
      ( mpani mpi ) ACDFABCDEGHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mp2and.1 $e |- ( ph -> ps ) $.
    mp2and.2 $e |- ( ph -> ch ) $.
    mp2and.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mp2and $p |- ( ph -> th ) $=
      ( mpand mpd ) ACDFABCDEGHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpdan.1 $e |- ( ph -> ps ) $.
    mpdan.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 22-Nov-2012.) $)
    mpdan $p |- ( ph -> ch ) $=
      ( id syl11anc ) AABCAFDEG $.
      $( [22-Nov-2012] $) $( [23-May-1999] $)

    $( Obsolete proof of ~ mpdan . $)
    mpdanOLD $p |- ( ph -> ch ) $=
      ( ex mpd ) ABCDABCEFG $.
      $( [23-May-1999] $)
  $}

  ${
    mpan2.1 $e |- ps $.
    mpan2.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpan2 $p |- ( ph -> ch ) $=
      ( a1i mpdan ) ABCBADFEG $.
      $( [19-Nov-2012] $) $( [16-Sep-1993] $)
  $}

  ${
    mpan2OLD.1 $e |- ps $.
    mpan2OLD.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Obsolete proof of ~ mpan2 . $)
    mpan2OLD $p |- ( ph -> ch ) $=
      ( ex mpi ) ABCDABCEFG $.
      $( [16-Sep-1993] $)
  $}

  ${
    mpancom.1 $e |- ( ps -> ph ) $.
    mpancom.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens with commutation of antecedents. $)
    mpancom $p |- ( ps -> ch ) $=
      ( ancoms mpdan ) BACDABCEFG $.
      $( [28-Oct-2003] $)
  $}

  ${
    mpanl1.1 $e |- ph $.
    mpanl1.2 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 6-Dec-2012.) $)
    mpanl1 $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa anasss mpan ) ABCGDEABCDFHI $.
      $( [6-Dec-2012] $) $( [16-Aug-1994] $)

    $( Obsolete proof of ~ mpanl1 . $)
    mpanl1OLD $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa wi expl ax-mp ) ABCGDHEABCDFIJ $.
      $( [16-Aug-1994] $)
  $}

  ${
    mpanl2.1 $e |- ps $.
    mpanl2.2 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanl2 $p |- ( ( ph /\ ch ) -> th ) $=
      ( wa jctr sylan ) ABGCDAFABEHI $.
      $( [22-Nov-2012] $) $( [16-Aug-1994] $)
  $}

  ${
    mpanl12.1 $e |- ph $.
    mpanl12.2 $e |- ps $.
    mpanl12.3 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpanl12 $p |- ( ch -> th ) $=
      ( mpanl1 mpan ) BCDFABCDEGHI $.
      $( [13-Jul-2005] $)
  $}

  ${
    mpanr1.1 $e |- ps $.
    mpanr1.2 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanr1 $p |- ( ( ph /\ ch ) -> th ) $=
      ( anassrs mpanl2 ) ABCDEABCDFGH $.
      $( [12-May-2011] $) $( [3-May-1994] $)
  $}

  ${
    mpanr2.1 $e |- ch $.
    mpanr2.2 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanr2 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa expr mpi ) ABGCDEABCDFHI $.
      $( [12-May-2011] $) $( [3-May-1994] $)
  $}

  ${
    mpanr12.1 $e |- ps $.
    mpanr12.2 $e |- ch $.
    mpanr12.3 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpanr12 $p |- ( ph -> th ) $=
      ( mpanr1 mpan2 ) ACDFABCDEGHI $.
      $( [24-Jul-2009] $)
  $}

  ${
    mpanlr1.1 $e |- ps $.
    mpanlr1.2 $e |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mpanlr1 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa wi ex mpanr1 imp ) ACHDEABCDEIFABCHHDEGJKL $.
      $( [30-Dec-2004] $)
  $}

  $( Theorem *3.47 of [WhiteheadRussell] p. 113.  It was proved by Leibniz, and
     it evidently pleased him enough to call it 'praeclarum theorema' (splendid
     theorem). $)
  prth $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
               ( ( ph /\ ch ) -> ( ps /\ th ) ) ) $=
    ( wi wa pm3.2 imim2d imim2i com23 imp4b ) ABEZCDEZACBDFZLAMCNEZBMOEABDNCBDG
    HIJK $.
    $( [12-Aug-1993] $)

  ${
    anim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    anim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Conjoin antecedents and consequents in a deduction. $)
    anim12d $p |- ( ph -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) $=
      ( wi wa prth syl11anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [3-Apr-1994] $)
  $}

  ${
    anim12ii.1 $e |- ( ph -> ( ps -> ch ) ) $.
    anim12ii.2 $e |- ( th -> ( ps -> ta ) ) $.
    $( Conjoin antecedents and consequents in a deduction. $)
    anim12ii $p |- ( ( ph /\ th ) -> ( ps -> ( ch /\ ta ) ) ) $=
      ( wa com12 anim12d ) BADHCEHBACDEABCFIDBEGIJI $.
      $( [11-Nov-2007] $)
  $}

  ${
    anim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Add a conjunct to right of antecedent and consequent in a deduction. $)
    anim1d $p |- ( ph -> ( ( ps /\ th ) -> ( ch /\ th ) ) ) $=
      ( idd anim12d ) ABCDDEADFG $.
      $( [3-Apr-1994] $)

    $( Add a conjunct to left of antecedent and consequent in a deduction. $)
    anim2d $p |- ( ph -> ( ( th /\ ps ) -> ( th /\ ch ) ) ) $=
      ( idd anim12d ) ADDBCADFEG $.
      $( [5-Aug-1993] $)
  $}

  $( A theorem similar to the standard definition of the biconditional.
     Definition of [Margaris] p. 49. $)
  dfbi2 $p |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) $=
    ( wb wi wn wa dfbi1 df-an bitr4i ) ABCABDZBADZEDEJKFABGJKHI $.
    $( [5-Aug-1993] $)

  $( Definition ~ df-bi rewritten in an abbreviated form to help intuitive
     understanding of that definition.  Note that it is a conjunction of two
     implications; one which asserts properties that follow from the
     biconditional and one which asserts properties that imply the
     biconditional. $)
  dfbi $p |- ( ( ( ph <-> ps ) -> ( ( ph -> ps ) /\ ( ps -> ph ) ) )
        /\ ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $=
    ( wb wi wa dfbi2 biimpi biimpri pm3.2i ) ABCZABDBADEZDKJDJKABFZGJKLHI $.
    $( [15-Aug-2008] $)

  $( Distribution of implication over biconditional.  Theorem *5.74 of
     [WhiteheadRussell] p. 126. $)
  pm5.74 $p |- ( ( ph -> ( ps <-> ch ) ) <->
               ( ( ph -> ps ) <-> ( ph -> ch ) ) ) $=
    ( wb wi bi1 imim3i bi2 impbid wa pm2.86d anim12d pm4.24 dfbi2 3imtr4g 
    impbii ) ABCDZEZABEZACEZDZRSTQBCABCFGQCBABCHGIUAAAJBCEZCBEZJAQUAAUBAUCUAABC
    STFKUAACBSTHKLAMBCNOP $.
    $( [1-Aug-1994] $)

  ${
    pm5.74i.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Distribution of implication over biconditional (inference rule). $)
    pm5.74i $p |- ( ( ph -> ps ) <-> ( ph -> ch ) ) $=
      ( wb wi pm5.74 mpbi ) ABCEFABFACFEDABCGH $.
      $( [1-Aug-1994] $)
  $}

  ${
    pm5.74d.1 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74d $p |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $=
      ( wb wi pm5.74 sylib ) ABCDFGBCGBDGFEBCDHI $.
      $( [21-Mar-1996] $)
  $}

  ${
    pm5.74da.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74da $p |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $=
      ( wb ex pm5.74d ) ABCDABCDFEGH $.
      $( [4-May-2007] $)
  $}

  ${
    pm5.74ri.1 $e |- ( ( ph -> ps ) <-> ( ph -> ch ) ) $.
    $( Distribution of implication over biconditional (reverse inference
       rule). $)
    pm5.74ri $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb wi pm5.74 mpbir ) ABCEFABFACFEDABCGH $.
      $( [1-Aug-1994] $)
  $}

  ${
    pm5.74rd.1 $e |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74rd $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi wb pm5.74 sylibr ) ABCFBDFGBCDGFEBCDHI $.
      $( [19-Mar-1997] $)
  $}

  ${
    bi.aa $e |- ( ph <-> ps ) $.
    $( Introduce a left conjunct to both sides of a logical equivalence. $)
    anbi2i $p |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) $=
      ( wa biimpi anim2i biimpri impbii ) CAECBEABCABDFGBACABDHGI $.
      $( [5-Aug-1993] $)

    $( Introduce a right conjunct to both sides of a logical equivalence. $)
    anbi1i $p |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) $=
      ( wa ancom anbi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    anbi12.1 $e |- ( ph <-> ps ) $.
    anbi12.2 $e |- ( ch <-> th ) $.
    $( Conjoin both sides of two equivalences. $)
    anbi12i $p |- ( ( ph /\ ch ) <-> ( ps /\ th ) ) $=
      ( wa anbi1i anbi2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Contraposition.  Theorem *4.11 of [WhiteheadRussell] p. 117. $)
  notbi $p |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) $=
    ( wb wn wi wa con34b anbi12i dfbi2 3bitr4i bicom bitri ) ABCZBDZADZCZONCABE
    ZBAEZFNOEZONEZFMPQSRTABGBAGHABINOIJNOKL $.
    $( [21-May-1994] $)

  ${
    bibi.a $e |- ( ph <-> ps ) $.
    $( Inference adding a biconditional to the left in an equivalence.  (The
       proof was shortened by Andrew Salmon, 7-May-2011.) $)
    bibi2i $p |- ( ( ch <-> ph ) <-> ( ch <-> ps ) ) $=
      ( wi wa wb imbi2i imbi1i anbi12i dfbi2 3bitr4i ) CAEZACEZFCBEZBCEZFCAGCBG
      MONPABCDHABCDIJCAKCBKL $.
      $( [12-May-2011] $) $( [5-Aug-1993] $)

    $( Inference adding a biconditional to the right in an equivalence. $)
    bibi1i $p |- ( ( ph <-> ch ) <-> ( ps <-> ch ) ) $=
      ( wb bicom bibi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)

    ${
      bibi12.2 $e |- ( ch <-> th ) $.
      $( The equivalence of two equivalences. $)
      bibi12i $p |- ( ( ph <-> ch ) <-> ( ps <-> th ) ) $=
        ( wb bibi2i bibi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
        $( [5-Aug-1993] $)
    $}
  $}

  ${
    con4bii.1 $e |- ( -. ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con4bii $p |- ( ph <-> ps ) $=
      ( wb wn notbi mpbir ) ABDAEBEDCABFG $.
      $( [21-May-1994] $)
  $}

  ${
    con4bid.1 $e |- ( ph -> ( -. ps <-> -. ch ) ) $.
    $( A contraposition deduction. $)
    con4bid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wn wb notbi sylibr ) ABECEFBCFDBCGH $.
      $( [21-May-1994] $)
  $}

  $( Contraposition.  Theorem *4.12 of [WhiteheadRussell] p. 117.  (The proof
     was shortened by Wolf Lammen, 3-Jan-2013.) $)
  con2bi $p |- ( ( ph <-> -. ps ) <-> ( ps <-> -. ph ) ) $=
    ( wn wb notbi notnot bibi2i bicom 3bitr2i ) ABCZDACZJCZDKBDBKDAJEBLKBFGKBHI
    $.
    $( [3-Jan-2013] $) $( [15-Apr-1995] $)

  $( Obsolete proof of ~ con2bi . $)
  con2biOLD $p |- ( ( ph <-> -. ps ) <-> ( ps <-> -. ph ) ) $=
    ( wn wi wa wb con2b con1b anbi12i dfbi2 3bitr4i ) ABCZDZLADZEBACZDZOBDZEALF
    BOFMPNQABGBAHIALJBOJK $.
    $( [15-Apr-1995] $)

  ${
    con2bid.1 $e |- ( ph -> ( ps <-> -. ch ) ) $.
    $( A contraposition deduction. $)
    con2bid $p |- ( ph -> ( ch <-> -. ps ) ) $=
      ( wn wb con2bi sylibr ) ABCEFCBEFDCBGH $.
      $( [15-Apr-1995] $)
  $}

  ${
    con1bid.1 $e |- ( ph -> ( -. ps <-> ch ) ) $.
    $( A contraposition deduction. $)
    con1bid $p |- ( ph -> ( -. ch <-> ps ) ) $=
      ( wn bicomd con2bid ) ABCEACBABECDFGF $.
      $( [9-Oct-1999] $)
  $}

  ${
    bitrd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitrd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( Deduction form of ~ bitri . $)
    bitrd $p |- ( ph -> ( ps <-> th ) ) $=
      ( biimpd sylibd biimprd sylibrd impbid ) ABDABCDABCEGFHADCBACDFIEJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr2d.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( Deduction form of ~ bitr2i . $)
    bitr2d $p |- ( ph -> ( th <-> ps ) ) $=
      ( bitrd bicomd ) ABDABCDEFGH $.
      $( [9-Jun-2004] $)
  $}

  ${
    bitr3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    $( Deduction form of ~ bitr3i . $)
    bitr3d $p |- ( ph -> ( ch <-> th ) ) $=
      ( bicomd bitrd ) ACBDABCEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr4d.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( Deduction form of ~ bitr4i . $)
    bitr4d $p |- ( ph -> ( ps <-> th ) ) $=
      ( bicomd bitrd ) ABCDEADCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5bb.2 $e |- ( th <-> ps ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5bb $p |- ( ph -> ( th <-> ch ) ) $=
      ( wb a1i bitrd ) ADBCDBGAFHEI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5rbb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5rbb.2 $e |- ( th <-> ps ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5rbb $p |- ( ph -> ( ch <-> th ) ) $=
      ( syl5bb bicomd ) ADCABCDEFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5bbr.2 $e |- ( ps <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5bbr $p |- ( ph -> ( th <-> ch ) ) $=
      ( bicomi syl5bb ) ABCDEBDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5rbbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl5rbbr.2 $e |- ( ps <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5rbbr $p |- ( ph -> ( ch <-> th ) ) $=
      ( bicomi syl5rbb ) ABCDEBDFGH $.
      $( [25-Nov-1994] $)
  $}

  ${
    syl6bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bb.2 $e |- ( ch <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6bb $p |- ( ph -> ( ps <-> th ) ) $=
      ( wb a1i bitrd ) ABCDECDGAFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6rbb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6rbb.2 $e |- ( ch <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6rbb $p |- ( ph -> ( th <-> ps ) ) $=
      ( syl6bb bicomd ) ABDABCDEFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bbr.2 $e |- ( th <-> ch ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6bbr $p |- ( ph -> ( ps <-> th ) ) $=
      ( bicomi syl6bb ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6rbbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6rbbr.2 $e |- ( th <-> ch ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6rbbr $p |- ( ph -> ( th <-> ps ) ) $=
      ( bicomi syl6rbb ) ABCDEDCFGH $.
      $( [25-Nov-1994] $)
  $}

  ${
    sylan9bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylan9bb.2 $e |- ( th -> ( ch <-> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9bb $p |- ( ( ph /\ th ) -> ( ps <-> ta ) ) $=
      ( wa wb adantr adantl bitrd ) ADHBCEABCIDFJDCEIAGKL $.
      $( [4-Mar-1995] $)
  $}

  ${
    sylan9bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylan9bbr.2 $e |- ( th -> ( ch <-> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9bbr $p |- ( ( th /\ ph ) -> ( ps <-> ta ) ) $=
      ( wb sylan9bb ancoms ) ADBEHABCDEFGIJ $.
      $( [4-Mar-1995] $)
  $}

  ${
    3bitrd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitrd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    3bitrd.3 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction from transitivity of biconditional. $)
    3bitrd $p |- ( ph -> ( ps <-> ta ) ) $=
      ( bitrd ) ABDEABCDFGIHI $.
      $( [13-Aug-1999] $)

    $( Deduction from transitivity of biconditional. $)
    3bitrrd $p |- ( ph -> ( ta <-> ps ) ) $=
      ( bitr2d bitr3d ) ADEBHABCDFGIJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr2d.2 $e |- ( ph -> ( th <-> ch ) ) $.
    3bitr2d.3 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction from transitivity of biconditional. $)
    3bitr2d $p |- ( ph -> ( ps <-> ta ) ) $=
      ( bitr4d bitrd ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr2rd $p |- ( ph -> ( ta <-> ps ) ) $=
      ( bitr4d bitr2d ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    3bitr3d.3 $e |- ( ph -> ( ch <-> ta ) ) $.
    $( Deduction from transitivity of biconditional.  Useful for converting
       conditional definitions in a formula. $)
    3bitr3d $p |- ( ph -> ( th <-> ta ) ) $=
      ( bitr3d bitrd ) ADCEABDCGFIHJ $.
      $( [24-Apr-1996] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr3rd $p |- ( ph -> ( ta <-> th ) ) $=
      ( bitr3d ) ACEDHABCDFGII $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr4d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr4d.2 $e |- ( ph -> ( th <-> ps ) ) $.
    3bitr4d.3 $e |- ( ph -> ( ta <-> ch ) ) $.
    $( Deduction from transitivity of biconditional.  Useful for converting
       conditional definitions in a formula. $)
    3bitr4d $p |- ( ph -> ( th <-> ta ) ) $=
      ( bitr4d bitrd ) ADBEGABCEFHIJ $.
      $( [18-Oct-1995] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr4rd $p |- ( ph -> ( ta <-> th ) ) $=
      ( bitr4d ) AEBDAECBHFIGI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3imtr3gOLD.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3gOLD.2 $e |- ( ps <-> th ) $.
    3imtr3gOLD.3 $e |- ( ch <-> ta ) $.
    $( Obsolete proof of ~ 3imtr3g . $)
    3imtr3gOLD $p |- ( ph -> ( th -> ta ) ) $=
      ( wa imp anbi2i 3imtr3i ex ) ADEABICADIEABCFJBDAGKHLM $.
      $( [20-May-1996] $)
  $}

  ${
    3bitr3g.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr3g.2 $e |- ( ps <-> th ) $.
    3bitr3g.3 $e |- ( ch <-> ta ) $.
    $( More general version of ~ 3bitr3i .  Useful for converting definitions
       in a formula. $)
    3bitr3g $p |- ( ph -> ( th <-> ta ) ) $=
      ( syl5bbr syl6bb ) ADCEABCDFGIHJ $.
      $( [4-Jun-1995] $)
  $}

  ${
    3bitr4g.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr4g.2 $e |- ( th <-> ps ) $.
    3bitr4g.3 $e |- ( ta <-> ch ) $.
    $( More general version of ~ 3bitr4i .  Useful for converting definitions
       in a formula. $)
    3bitr4g $p |- ( ph -> ( th <-> ta ) ) $=
      ( syl5bb syl6bbr ) ADCEABCDFGIHJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    bid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction negating both sides of a logical equivalence. $)
    notbid $p |- ( ph -> ( -. ps <-> -. ch ) ) $=
      ( wb wn notbi sylib ) ABCEBFCFEDBCGH $.
      $( [21-May-1994] $)

    $( Deduction adding an antecedent to both sides of a logical
       equivalence. $)
    imbi2d $p |- ( ph -> ( ( th -> ps ) <-> ( th -> ch ) ) ) $=
      ( wb a1d pm5.74d ) ADBCABCFDEGH $.
      $( [5-Aug-1993] $)

    $( Deduction adding a consequent to both sides of a logical equivalence. $)
    imbi1d $p |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) $=
      ( wn wi notbid imbi2d con34b 3bitr4g ) ADFZBFZGLCFZGBDGCDGAMNLABCEHIBDJCD
      JK $.
      $( [5-Aug-1993] $)

    $( Deduction adding a left disjunct to both sides of a logical
       equivalence. $)
    orbi2d $p |- ( ph -> ( ( th \/ ps ) <-> ( th \/ ch ) ) ) $=
      ( wn wi wo imbi2d df-or 3bitr4g ) ADFZBGLCGDBHDCHABCLEIDBJDCJK $.
      $( [5-Aug-1993] $)

    $( Deduction adding a right disjunct to both sides of a logical
       equivalence. $)
    orbi1d $p |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ th ) ) ) $=
      ( wo orbi2d orcom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)

    $( Deduction adding a left conjunct to both sides of a logical
       equivalence. $)
    anbi2d $p |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) $=
      ( wa biimpd anim2d biimprd impbid ) ADBFDCFABCDABCEGHACBDABCEIHJ $.
      $( [5-Aug-1993] $)

    $( Deduction adding a right conjunct to both sides of a logical
       equivalence. $)
    anbi1d $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) $=
      ( wa anbi2d ancom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)

    $( Deduction adding a biconditional to the left in an equivalence. $)
    bibi2d $p |- ( ph -> ( ( th <-> ps ) <-> ( th <-> ch ) ) ) $=
      ( wi wa wb imbi2d anbi1d imbi1d anbi2d bitrd dfbi2 3bitr4g ) ADBFZBDFZGZD
      CFZCDFZGZDBHDCHARSQGUAAPSQABCDEIJAQTSABCDEKLMDBNDCNO $.
      $( [5-Aug-1993] $)

    $( Deduction adding a biconditional to the right in an equivalence. $)
    bibi1d $p |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> th ) ) ) $=
      ( wb bibi2d bicom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *4.37 of [WhiteheadRussell] p. 118. $)
  orbi1 $p |- ( ( ph <-> ps ) -> ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ) $=
    ( wb id orbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.36 of [WhiteheadRussell] p. 118. $)
  anbi1 $p |- ( ( ph <-> ps ) -> ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ) $=
    ( wb id anbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.22 of [WhiteheadRussell] p. 117. $)
  bitr $p |- ( ( ( ph <-> ps ) /\ ( ps <-> ch ) ) -> ( ph <-> ch ) ) $=
    ( wb id bibi1d biimpar ) ABDZACDBCDHABCHEFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.84 of [WhiteheadRussell] p. 122. $)
  imbi1 $p |- ( ( ph <-> ps ) -> ( ( ph -> ch ) <-> ( ps -> ch ) ) ) $=
    ( wb id imbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.85 of [WhiteheadRussell] p. 122. $)
  imbi2 $p |- ( ( ph <-> ps ) -> ( ( ch -> ph ) <-> ( ch -> ps ) ) ) $=
    ( wb ax-1 pm5.74d ) ABDZCABGCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.86 of [WhiteheadRussell] p. 122. $)
  bibi1 $p |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ) $=
    ( wb id bibi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  ${
    bi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       implications. $)
    imbi12d $p |- ( ph -> ( ( ps -> th ) <-> ( ch -> ta ) ) ) $=
      ( wi imbi1d imbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

    $( Deduction joining two equivalences to form equivalence of
       disjunctions. $)
    orbi12d $p |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ ta ) ) ) $=
      ( wo orbi1d orbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    anbi12d $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ ta ) ) ) $=
      ( wa anbi1d anbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

    $( Deduction joining two equivalences to form equivalence of
       biconditionals. $)
    bibi12d $p |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> ta ) ) ) $=
      ( wb bibi1d bibi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)
  $}

  $( Introduction of antecedent as conjunct.  Theorem *4.73 of
     [WhiteheadRussell] p. 121. $)
  iba $p |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) $=
    ( wa ancrb pm5.74ri ) ABBACABDE $.
    $( [30-Mar-1994] $)

  $( Introduction of antecedent as conjunct. $)
  ibar $p |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) $=
    ( wa anclb pm5.74ri ) ABABCABDE $.
    $( [5-Dec-1995] $)

  $( Theorem *5.42 of [WhiteheadRussell] p. 125. $)
  pm5.42 $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ph -> ( ps -> ( ph /\ ch ) ) ) ) $=
    ( wi wa ibar imbi2d pm5.74i ) ABCDBACEZDACIBACFGH $.
    $( [3-Jan-2005] $)

  $( Distribution of implication with conjunction.  (The proof was shortened by
     Wolf Lammen, 6-Dec-2012.) $)
  imdistan $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wi wa pm5.42 impexp bitr4i ) ABCDDABACEZDDABEIDABCFABIGH $.
    $( [6-Dec-2012] $) $( [31-May-1999] $)

  $( Obsolete proof of ~ imdistan . $)
  imdistanOLD $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wi wa anc2l imp3a simpr imim2i exp3a impbii ) ABCDDZABEZACEZDZLABNABCFGOA
    BCNCMACHIJK $.
    $( [31-May-1999] $)

  ${
    imdistani.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Distribution of implication with conjunction. $)
    imdistani $p |- ( ( ph /\ ps ) -> ( ph /\ ch ) ) $=
      ( wa anc2li imp ) ABACEABCDFG $.
      $( [1-Aug-1994] $)
  $}

  ${
    imdistanri.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Distribution of implication with conjunction. $)
    imdistanri $p |- ( ( ps /\ ph ) -> ( ch /\ ph ) ) $=
      ( com12 impac ) BACABCDEF $.
      $( [8-Jan-2002] $)
  $}

  ${
    imdistand.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Distribution of implication with conjunction (deduction rule). $)
    imdistand $p |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) $=
      ( wi wa imdistan sylib ) ABCDFFBCGBDGFEBCDHI $.
      $( [27-Aug-2004] $)
  $}

  $( Theorem *5.3 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  pm5.3 $p |- ( ( ( ph /\ ps ) -> ch ) <->
               ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wa wi impexp imdistan bitri ) ABDZCEABCEEIACDEABCFABCGH $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Theorem *5.61 of [WhiteheadRussell] p. 125. $)
  pm5.61 $p |- ( ( ( ph \/ ps ) /\ -. ps ) <-> ( ph /\ -. ps ) ) $=
    ( wo wn wa orel2 imdistanri orc anim1i impbii ) ABCZBDZEALELKABAFGAKLABHIJ 
    $.
    $( [3-Jan-2005] $)

  ${
    adantld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding a conjunct to the left of an antecedent.  (The proof
       was shortened by Wolf Lammen, 20-Dec-2012.) $)
    adantld $p |- ( ph -> ( ( th /\ ps ) -> ch ) ) $=
      ( wa simpr syl5 ) ABCDBFEDBGH $.
      $( [20-Dec-2012] $) $( [4-May-1994] $)

    $( Obsolete proof of ~ adantld . $)
    adantldOLD $p |- ( ph -> ( ( th /\ ps ) -> ch ) ) $=
      ( wi a1d imp3a ) ADBCABCFDEGH $.
      $( [4-May-1994] $)
  $}

  ${
    adantrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding a conjunct to the right of an antecedent. $)
    adantrd $p |- ( ph -> ( ( ps /\ th ) -> ch ) ) $=
      ( wa simpl syl5 ) ABCBDFEBDGH $.
      $( [4-May-1994] $)
  $}

  ${
    adant2.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantll $p |- ( ( ( th /\ ph ) /\ ps ) -> ch ) $=
      ( wa simpr sylan ) ABCDAFEDAGH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Obsolete proof of ~ adantll . $)
    adantllOLD $p |- ( ( ( th /\ ph ) /\ ps ) -> ch ) $=
      ( wa wi ex adantl imp ) DAFBCABCGDABCEHIJ $.
      $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantlr $p |- ( ( ( ph /\ th ) /\ ps ) -> ch ) $=
      ( wa simpl sylan ) ABCADFEADGH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Obsolete proof of ~ adantlr . $)
    adantlrOLD $p |- ( ( ( ph /\ th ) /\ ps ) -> ch ) $=
      ( wa wi ex adantr imp ) ADFBCABCGDABCEHIJ $.
      $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantrl $p |- ( ( ph /\ ( th /\ ps ) ) -> ch ) $=
      ( wa simpr sylan2 ) ABCDBFEDBGH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Obsolete proof of ~ adantrl . $)
    adantrlOLD $p |- ( ( ph /\ ( th /\ ps ) ) -> ch ) $=
      ( wa ex adantld imp ) ADBFCABCDABCEGHI $.
      $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantrr $p |- ( ( ph /\ ( ps /\ th ) ) -> ch ) $=
      ( wa simpl sylan2 ) ABCBDFEBDGH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Obsolete proof of ~ adantrr . $)
    adantrrOLD $p |- ( ( ph /\ ( ps /\ th ) ) -> ch ) $=
      ( wa ex adantrd imp ) ABDFCABCDABCEGHI $.
      $( [4-May-1994] $)
  $}

  ${
    adantl2.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 2-Dec-2012.) $)
    adantlll $p |- ( ( ( ( ta /\ ph ) /\ ps ) /\ ch ) -> th ) $=
      ( wa simpr sylanl1 ) ABCDEAGFEAHI $.
      $( [2-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantlll . $)
    adantlllOLD $p |- ( ( ( ( ta /\ ph ) /\ ps ) /\ ch ) -> th ) $=
      ( wi exp31 a1i imp41 ) EABCDABCDGGGEABCDFHIJ $.
      $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantllr $p |- ( ( ( ( ph /\ ta ) /\ ps ) /\ ch ) -> th ) $=
      ( wa simpl sylanl1 ) ABCDAEGFAEHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantllr . $)
    adantllrOLD $p |- ( ( ( ( ph /\ ta ) /\ ps ) /\ ch ) -> th ) $=
      ( wi exp31 a1d imp41 ) AEBCDABCDGGEABCDFHIJ $.
      $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantlrl $p |- ( ( ( ph /\ ( ta /\ ps ) ) /\ ch ) -> th ) $=
      ( wa simpr sylanl2 ) ABCDEBGFEBHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantlrl . $)
    adantlrlOLD $p |- ( ( ( ph /\ ( ta /\ ps ) ) /\ ch ) -> th ) $=
      ( wi exp31 a1d imp42 ) AEBCDABCDGGEABCDFHIJ $.
      $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantlrr $p |- ( ( ( ph /\ ( ps /\ ta ) ) /\ ch ) -> th ) $=
      ( wa simpl sylanl2 ) ABCDBEGFBEHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantlrr . $)
    adantlrrOLD $p |- ( ( ( ph /\ ( ps /\ ta ) ) /\ ch ) -> th ) $=
      ( wi exp31 a1dd imp42 ) ABECDABCDGEABCDFHIJ $.
      $( [26-Dec-2004] $)
  $}

  ${
    adantr2.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrll $p |- ( ( ph /\ ( ( ta /\ ps ) /\ ch ) ) -> th ) $=
      ( wa simpr sylanr1 ) ABCDEBGFEBHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantrll . $)
    adantrllOLD $p |- ( ( ph /\ ( ( ta /\ ps ) /\ ch ) ) -> th ) $=
      ( wi exp32 a1d imp44 ) AEBCDABCDGGEABCDFHIJ $.
      $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrlr $p |- ( ( ph /\ ( ( ps /\ ta ) /\ ch ) ) -> th ) $=
      ( wa simpl sylanr1 ) ABCDBEGFBEHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantrlr . $)
    adantrlrOLD $p |- ( ( ph /\ ( ( ps /\ ta ) /\ ch ) ) -> th ) $=
      ( wi exp32 a1dd imp44 ) ABECDABCDGEABCDFHIJ $.
      $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrrl $p |- ( ( ph /\ ( ps /\ ( ta /\ ch ) ) ) -> th ) $=
      ( wa simpr sylanr2 ) ABCDECGFECHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantrrl . $)
    adantrrlOLD $p |- ( ( ph /\ ( ps /\ ( ta /\ ch ) ) ) -> th ) $=
      ( wi exp32 a1dd imp45 ) ABECDABCDGEABCDFHIJ $.
      $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrrr $p |- ( ( ph /\ ( ps /\ ( ch /\ ta ) ) ) -> th ) $=
      ( wa simpl sylanr2 ) ABCDCEGFCEHI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Obsolete proof of ~ adantrrr . $)
    adantrrrOLD $p |- ( ( ph /\ ( ps /\ ( ch /\ ta ) ) ) -> th ) $=
      ( wi wa a1d exp32 imp45 ) ABCEDABCEDGABCHHDEFIJK $.
      $( [26-Dec-2004] $)
  $}

  ${
    ad2ant.1 $e |- ( ph -> ps ) $.
    $( Deduction adding conjuncts to antecedent.  (The proof was shortened by
       Wolf Lammen, 20-Nov-2012.) $)
    ad2antrr $p |- ( ( ( ph /\ ch ) /\ th ) -> ps ) $=
      ( adantr adantlr ) ADBCABDEFG $.
      $( [20-Nov-2012] $) $( [19-Oct-1999] $)

    $( Obsolete proof of ~ ad2antrr . $)
    ad2antrrOLD $p |- ( ( ( ph /\ ch ) /\ th ) -> ps ) $=
      ( wa adantr ) ACFBDABCEGG $.
      $( [19-Oct-1999] $)

    $( Deduction adding 3 conjuncts to antecedent. $)
    ad3antrrr $p |- ( ( ( ( ph /\ ch ) /\ th ) /\ ta ) -> ps ) $=
      ( wa adantr ad2antrr ) ACGBDEABCFHI $.
      $( [28-Jul-2012] $)

    $( Deduction adding conjuncts to antecedent.  (The proof was shortened by
       Wolf Lammen, 20-Nov-2012.) $)
    ad2antlr $p |- ( ( ( ch /\ ph ) /\ th ) -> ps ) $=
      ( adantr adantll ) ADBCABDEFG $.
      $( [20-Nov-2012] $) $( [19-Oct-1999] $)

    $( Obsolete proof of ~ ad2antrr . $)
    ad2antlrOLD $p |- ( ( ( ch /\ ph ) /\ th ) -> ps ) $=
      ( wa adantl adantr ) CAFBDABCEGH $.
      $( [19-Oct-1999] $)

    $( Deduction adding conjuncts to antecedent. $)
    ad2antrl $p |- ( ( ch /\ ( ph /\ th ) ) -> ps ) $=
      ( wa adantr adantl ) ADFBCABDEGH $.
      $( [19-Oct-1999] $)

    $( Deduction adding conjuncts to antecedent. $)
    ad2antll $p |- ( ( ch /\ ( th /\ ph ) ) -> ps ) $=
      ( wa adantl ) DAFBCABDEGG $.
      $( [19-Oct-1999] $)
  $}

  ${
    ad2ant2.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2l $p |- ( ( ( th /\ ph ) /\ ( ta /\ ps ) ) -> ch ) $=
      ( wa adantrl adantll ) AEBGCDABCEFHI $.
      $( [8-Jan-2006] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2r $p |- ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) -> ch ) $=
      ( wa adantrr adantlr ) ABEGCDABCEFHI $.
      $( [8-Jan-2006] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2lr $p |- ( ( ( th /\ ph ) /\ ( ps /\ ta ) ) -> ch ) $=
      ( wa adantrr adantll ) ABEGCDABCEFHI $.
      $( [23-Nov-2007] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2rl $p |- ( ( ( ph /\ th ) /\ ( ta /\ ps ) ) -> ch ) $=
      ( wa adantrl adantlr ) AEBGCDABCEFHI $.
      $( [24-Nov-2007] $)
  $}

  $( Simplification of a conjunction. $)
  simpll $p |- ( ( ( ph /\ ps ) /\ ch ) -> ph ) $=
    ( id ad2antrr ) AABCADE $.
    $( [18-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simplr $p |- ( ( ( ph /\ ps ) /\ ch ) -> ps ) $=
    ( id ad2antlr ) BBACBDE $.
    $( [20-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simprl $p |- ( ( ph /\ ( ps /\ ch ) ) -> ps ) $=
    ( id ad2antrl ) BBACBDE $.
    $( [21-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simprr $p |- ( ( ph /\ ( ps /\ ch ) ) -> ch ) $=
    ( id ad2antll ) CCABCDE $.
    $( [21-Mar-2007] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplll $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ph ) $=
    ( wa simpl ad2antrr ) ABEACDABFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simpllr $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ps ) $=
    ( wa simpr ad2antrr ) ABEBCDABFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplrl $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ps ) $=
    ( wa simpl ad2antlr ) BCEBADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplrr $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ch ) $=
    ( wa simpr ad2antlr ) BCECADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprll $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ps ) $=
    ( wa simpl ad2antrl ) BCEBADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprlr $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ch ) $=
    ( wa simpr ad2antrl ) BCECADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprrl $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ch ) $=
    ( wa simpl ad2antll ) CDECABCDFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprrr $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> th ) $=
    ( wa simpr ad2antll ) CDEDABCDFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Theorem *3.44 of [WhiteheadRussell] p. 113.  (The proof was shortened by
     Wolf Lammen, 9-Dec-2012.) $)
  pm3.44 $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) ->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wi wo jao imp ) BADCADBCEADBACFG $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Disjunction of antecedents.  Compare Theorem *4.77 of [WhiteheadRussell]
     p. 121.  (The proof was shortened by Wolf Lammen, 9-Dec-2012.) $)
  jaob $p |- ( ( ( ph \/ ch ) -> ps ) <-> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) $=
    ( wo wi wa pm2.67-2 olc imim1i jca pm3.44 impbii ) ACDZBEZABEZCBEZFNOPABCGC
    MBCAHIJBACKL $.
    $( [9-Dec-2012] $) $( [30-May-1994] $)

  $( Obsolete proof of ~ jaob . $)
  jaobOLD $p |- ( ( ( ph \/ ch ) -> ps )
           <-> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) $=
    ( wo wi wa orc imim1i olc jca jao imp impbii ) ACDZBEZABEZCBEZFOPQANBACGHCN
    BCAIHJPQOABCKLM $.
    $( [30-May-1994] $)

  $( Obsolete proof of ~ pm3.44 . $)
  pm3.44OLD $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) ->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wo wi wa jaob biimpri ) BCDAEBAECAEFBACGH $.
    $( [3-Jan-2005] $)

  ${
    jaod.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jaod.2 $e |- ( ph -> ( th -> ch ) ) $.
    $( Deduction disjoining the antecedents of two implications. $)
    jaod $p |- ( ph -> ( ( ps \/ th ) -> ch ) ) $=
      ( wi wo jao sylc ) ABCGDCGBDHCGEFBCDIJ $.
      $( [18-Aug-1994] $)
  $}

  ${
    jaoian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    jaoian.2 $e |- ( ( th /\ ps ) -> ch ) $.
    $( Inference disjoining the antecedents of two implications. $)
    jaoian $p |- ( ( ( ph \/ th ) /\ ps ) -> ch ) $=
      ( wo wi ex jaoi imp ) ADGBCABCHDABCEIDBCFIJK $.
      $( [23-Oct-2005] $)
  $}

  ${
    jaodan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    jaodan.2 $e |- ( ( ph /\ th ) -> ch ) $.
    $( Deduction disjoining the antecedents of two implications. $)
    jaodan $p |- ( ( ph /\ ( ps \/ th ) ) -> ch ) $=
      ( wo ex jaod imp ) ABDGCABCDABCEHADCFHIJ $.
      $( [14-Oct-2005] $)
  $}

  ${
    jaao.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jaao.2 $e |- ( th -> ( ta -> ch ) ) $.
    $( Inference conjoining and disjoining the antecedents of two
       implications. $)
    jaao $p |- ( ( ph /\ th ) -> ( ( ps \/ ta ) -> ch ) ) $=
      ( wa wi adantr adantl jaod ) ADHBCEABCIDFJDECIAGKL $.
      $( [30-Sep-1999] $)

    $( Inference disjoining and conjoining the antecedents of two
       implications.  (Contributed by Stefan Allan, 1-Nov-2008.) $)
    jaoa $p |- ( ( ph \/ th ) -> ( ( ps /\ ta ) -> ch ) ) $=
      ( wa wi adantrd adantld jaoi ) ABEHCIDABCEFJDECBGKL $.
      $( [1-Nov-2008] $)
  $}

  $( Theorem *4.77 of [WhiteheadRussell] p. 121. $)
  pm4.77 $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) <->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wo wi wa jaob bicomi ) BCDAEBAECAEFBACGH $.
    $( [3-Jan-2005] $)

  $( Theorem *2.63 of [WhiteheadRussell] p. 107. $)
  pm2.63 $p |- ( ( ph \/ ps ) -> ( ( -. ph \/ ps ) -> ps ) ) $=
    ( wo wn pm2.53 idd jaod ) ABCZADBBABEHBFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.64 of [WhiteheadRussell] p. 107. $)
  pm2.64 $p |- ( ( ph \/ ps ) -> ( ( ph \/ -. ps ) -> ph ) ) $=
    ( wn wo wi ax-1 orel2 jaoi com12 ) ABCZDABDZAAKAEJAKFBAGHI $.
    $( [3-Jan-2005] $)

  ${
    pm2.61ian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.61ian.2 $e |- ( ( -. ph /\ ps ) -> ch ) $.
    $( Elimination of an antecedent. $)
    pm2.61ian $p |- ( ps -> ch ) $=
      ( wi ex wn pm2.61i ) ABCFABCDGAHBCEGI $.
      $( [1-Jan-2005] $)
  $}

  ${
    pm2.61dan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.61dan.2 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    $( Elimination of an antecedent. $)
    pm2.61dan $p |- ( ph -> ch ) $=
      ( ex wn pm2.61d ) ABCABCDFABGCEFH $.
      $( [1-Jan-2005] $)
  $}

  ${
    condan.1 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    condan.2 $e |- ( ( ph /\ -. ps ) -> -. ch ) $.
    $( Proof by contradiction. $)
    condan $p |- ( ph -> ps ) $=
      ( wn ex pm2.65d notnot2 syl ) ABFZFBAKCAKCDGAKCFEGHBIJ $.
      $( [9-Feb-2006] $)
  $}

  $( Distribution of implication over biconditional.  Theorem *5.32 of
     [WhiteheadRussell] p. 125. $)
  pm5.32 $p |- ( ( ph -> ( ps <-> ch ) ) <->
               ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) $=
    ( wb wi wn wa notbi imbi2i pm5.74 3bitri df-an bibi12i bitr4i ) ABCDZEZABFZ
    EZFZACFZEZFZDZABGZACGZDPAQTDZERUADUCOUFABCHIAQTJRUAHKUDSUEUBABLACLMN $.
    $( [1-Aug-1994] $)

  ${
    pm5.32i.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Distribution of implication over biconditional (inference rule). $)
    pm5.32i $p |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) $=
      ( wb wi wa pm5.32 mpbi ) ABCEFABGACGEDABCHI $.
      $( [1-Aug-1994] $)

    $( Distribution of implication over biconditional (inference rule). $)
    pm5.32ri $p |- ( ( ps /\ ph ) <-> ( ch /\ ph ) ) $=
      ( wa pm5.32i ancom 3bitr4i ) ABEACEBAECAEABCDFBAGCAGH $.
      $( [12-Mar-1995] $)
  $}

  ${
    pm5.32d.1 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32d $p |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) $=
      ( wb wi wa pm5.32 sylib ) ABCDFGBCHBDHFEBCDIJ $.
      $( [29-Oct-1996] $)

    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32rd $p |- ( ph -> ( ( ch /\ ps ) <-> ( th /\ ps ) ) ) $=
      ( wa pm5.32d ancom 3bitr4g ) ABCFBDFCBFDBFABCDEGCBHDBHI $.
      $( [25-Dec-2004] $)
  $}

  ${
    pm5.32da.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32da $p |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) $=
      ( wb ex pm5.32d ) ABCDABCDFEGH $.
      $( [9-Dec-2006] $)
  $}

  $( Introduce one conjunct as an antecedent to the another.  (The proof was
     shortened by Wolf Lammen, 7-Dec-2012.) $)
  abai $p |- ( ( ph /\ ps ) <-> ( ph /\ ( ph -> ps ) ) ) $=
    ( wi biimt pm5.32i ) ABABCABDE $.
    $( [7-Dec-2012] $) $( [12-Aug-1993] $)

  $( Obsolete proof of ~ abai . $)
  abaiOLD $p |- ( ( ph /\ ps ) <-> ( ph /\ ( ph -> ps ) ) ) $=
    ( wa wi simpl pm3.4 jca pm3.35 impbii ) ABCZAABDZCZJAKABEABFGLABAKEABHGI $.
    $( [12-Aug-1993] $)

  $( Theorem *5.53 of [WhiteheadRussell] p. 125. $)
  pm5.53 $p |- ( ( ( ( ph \/ ps ) \/ ch ) -> th ) <->
                ( ( ( ph -> th ) /\ ( ps -> th ) ) /\ ( ch -> th ) ) ) $=
    ( wo wi wa jaob anbi1i bitri ) ABEZCEDFKDFZCDFZGADFBDFGZMGKDCHLNMADBHIJ $.
    $( [3-Jan-2005] $)

  $( Swap two conjuncts.  Note that the first digit (1) in the label refers to
     the outer conjunct position, and the next digit (2) to the inner conjunct
     position. $)
  an12 $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ps /\ ( ph /\ ch ) ) ) $=
    ( wa ancom anbi1i anass 3bitr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH $.
    $( [12-Mar-1995] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     25-Dec-2012.) $)
  an32 $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ps ) ) $=
    ( wa anass an12 ancom 3bitri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [25-Dec-2012] $) $( [12-Mar-1995] $)

  $( Obsolete proof of ~ an32 . $)
  an32OLD $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ps ) ) $=
    ( wa ancom anbi2i anass 3bitr4i ) ABCDZDACBDZDABDCDACDBDIJABCEFABCGACBGH $.
    $( [12-Mar-1995] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
    31-Dec-2012.) $)
  an13 $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ch /\ ( ps /\ ph ) ) ) $=
    ( wa an12 anass ancom 3bitr2i ) ABCDDBACDDBADZCDCIDABCEBACFICGH $.
    $( [31-Dec-2012] $) $( [24-Jun-2012] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
    31-Dec-2012.) $)
  an31 $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ch /\ ps ) /\ ph ) ) $=
    ( wa an13 anass 3bitr4i ) ABCDDCBADDABDCDCBDADABCEABCFCBAFG $.
    $( [31-Dec-2012] $) $( [24-Jun-2012] $)

  $( Obsolete proof of ~ an31 . $)
  an31OLD $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ch /\ ps ) /\ ph ) ) $=
    ( wa anass ancom anbi1i 3bitri ) ABDCDABCDZDIADCBDZADABCEAIFIJABCFGH $.
    $( [24-Jun-2012] $)

  $( Obsolete proof of ~ an13 . $)
  an13OLD $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ch /\ ( ps /\ ph ) ) ) $=
    ( wa an31 anass 3bitr3i ) ABDCDCBDADABCDDCBADDABCEABCFCBAFG $.
    $( [24-Jun-2012] $)

  ${
    an12s.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Swap two conjuncts in antecedent.  The label suffix "s" means that
       ~ an12 is combined with ~ syl (or a variant). $)
    an12s $p |- ( ( ps /\ ( ph /\ ch ) ) -> th ) $=
      ( wa an12 sylbi ) BACFFABCFFDBACGEH $.
      $( [13-Mar-1996] $)

    $( Inference commuting a nested conjunction in antecedent.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    ancom2s $p |- ( ( ph /\ ( ch /\ ps ) ) -> th ) $=
      ( wa pm3.22 sylan2 ) ABCFDCBFECBGH $.
      $( [24-Nov-2012] $) $( [24-May-2006] $)

    $( Obsolete proof of ~ ancom2s . $)
    ancom2sOLD $p |- ( ( ph /\ ( ch /\ ps ) ) -> th ) $=
      ( exp32 com23 imp32 ) ACBDABCDABCDEFGH $.
      $( [24-May-2006] $)

    $( Swap two conjuncts in antecedent. $)
    an13s $p |- ( ( ch /\ ( ps /\ ph ) ) -> th ) $=
      ( exp32 com13 imp32 ) CBADABCDABCDEFGH $.
      $( [31-May-2006] $)
  $}

  ${
    an32s.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Swap two conjuncts in antecedent. $)
    an32s $p |- ( ( ( ph /\ ch ) /\ ps ) -> th ) $=
      ( wa an32 sylbi ) ACFBFABFCFDACBGEH $.
      $( [13-Mar-1996] $)

    $( Inference commuting a nested conjunction in antecedent.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    ancom1s $p |- ( ( ( ps /\ ph ) /\ ch ) -> th ) $=
      ( wa pm3.22 sylan ) ABFCDBAFEBAGH $.
      $( [24-Nov-2012] $) $( [24-May-2006] $)

    $( Obsolete proof of ~ ancom1s . $)
    ancom1sOLD $p |- ( ( ( ps /\ ph ) /\ ch ) -> th ) $=
      ( wi exp31 com12 imp31 ) BACDABCDFABCDEGHI $.
      $( [24-May-2006] $)

    $( Swap two conjuncts in antecedent. $)
    an31s $p |- ( ( ( ch /\ ps ) /\ ph ) -> th ) $=
      ( exp31 com13 imp31 ) CBADABCDABCDEFGH $.
      $( [31-May-2006] $)
  $}

  ${
    mpanl2.1OLD $e |- ps $.
    mpanl2.2OLD $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanl2OLD $p |- ( ( ph /\ ch ) -> th ) $=
      ( wa an32s mpan2 ) ACGBDEABCDFHI $.
      $( [7-May-2011] $) $( [16-Aug-1994] $)
  $}

  $( Absorption into embedded conjunct. $)
  anabs1 $p |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) $=
    ( wa simpl ancli impbii ) ABCZACGGADGAABDEF $.
    $( [4-Sep-1995] $)

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 9-Dec-2012.) $)
  anabs5 $p |- ( ( ph /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa ibar bicomd pm5.32i ) AABCZBABGABDEF $.
    $( [9-Dec-2012] $) $( [20-Jul-1996] $)

  $( Obsolete proof of ~ anabs5 . $)
  anabs5OLD $p |- ( ( ph /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa ancom anabs1 bitr3i ) AABCZCGACGGADABEF $.
    $( [20-Jul-1996] $)

  $( Absorption into embedded conjunct. $)
  anabs7 $p |- ( ( ps /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa simpr ancri impbii ) BABCZCGBGDGBABDEF $.
    $( [20-Jul-1996] $)

  ${
    anabsi5.1 $e |- ( ph -> ( ( ph /\ ps ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 22-Nov-2012.) $)
    anabsi5 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( id mpand imp ) ABCAABCAEDFG $.
      $( [22-Nov-2012] $) $( [11-Jun-1995] $)

    $( Obsolete proof of ~ anabsi5 . $)
    anabsi5OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa wi adantr pm2.43i ) ABEZCAICFBDGH $.
      $( [11-Jun-1995] $)
  $}

  ${
    anabsi6.1 $e |- ( ph -> ( ( ps /\ ph ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction. $)
    anabsi6 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( ancomsd anabsi5 ) ABCABACDEF $.
      $( [14-Aug-2000] $)
  $}

  ${
    anabsi7.1 $e |- ( ps -> ( ( ph /\ ps ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 21-Nov-2012.) $)
    anabsi7 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( id mpan2d impcom ) BACBABCBEDFG $.
      $( [21-Nov-2012] $) $( [20-Jul-1996] $)

    $( Obsolete proof of ~ anabsi7 . $)
    anabsi7OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( exp3a pm2.43b imp ) ABCABCBABCDEFG $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabsi8.1 $e |- ( ps -> ( ( ps /\ ph ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction. $)
    anabsi8 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabsi5 ancoms ) BACBACDEF $.
      $( [26-Sep-1999] $)
  $}

  ${
    anabss7.1 $e |- ( ( ps /\ ( ph /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent into conjunction. $)
    anabss7 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa ex anabsi7 ) ABCBABECDFG $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabss4.1 $e |- ( ( ( ps /\ ph ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent into conjunction. $)
    anabss4 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anasss anabss7 ) ABCBABCDEF $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabss1.1 $e |- ( ( ( ph /\ ps ) /\ ph ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
      Wolf Lammen, 31-Dec-2012.) $)
    anabss1 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabss4 ancoms ) BACBACDEF $.
      $( [31-Dec-2012] $) $( [20-Jul-1996] $)

    $( Obsolete proof of ~ anabss1 . $)
    anabss1OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa adantrr anidms ) ABEZCHACBDFG $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabsan2.1 $e |- ( ( ph /\ ( ps /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent with conjunction. $)
    anabsan2 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an12s anabss7 ) ABCABBCDEF $.
      $( [1-Jan-2013] $) $( [10-May-2004] $)
  $}

  ${
    anabss3.1 $e |- ( ( ( ph /\ ps ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
      Wolf Lammen, 1-Jan-2013.) $)
    anabss3 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anasss anabsan2 ) ABCABBCDEF $.
      $( [1-Jan-2013] $) $( [20-Jul-1996] $)

    $( Obsolete proof of ~ anabss3 . $)
    anabss3OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa adantrl anidms ) ABEZCHBCADFG $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabss4OLD.1 $e |- ( ( ( ps /\ ph ) /\ ps ) -> ch ) $.
    $( Obsolete proof of ~ anabss4 . $)
    anabss4OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabss1 ancoms ) BACBACDEF $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabsan.1 $e |- ( ( ( ph /\ ph ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent with conjunction. $)
    anabsan $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an32s anabss1 ) ABCAABCDEF $.
      $( [24-Mar-1996] $)
  $}

  ${
    anabss5.1 $e |- ( ( ph /\ ( ph /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
      Wolf Lammen, 1-Jan-2013.) $)
    anabss5 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anassrs anabsan ) ABCAABCDEF $.
      $( [1-Jan-2013] $) $( [10-May-1994] $)

    $( Obsolete proof of ~ anabss5 . $)
    anabss5OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa adantlr anidms ) ABEZCAHCBDFG $.
      $( [10-May-1994] $)
  $}

  ${
    anabsan2OLD.1 $e |- ( ( ph /\ ( ps /\ ps ) ) -> ch ) $.
    $( Obsolete proof of ~ anabsan2 . $)
    anabsan2OLD $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anassrs anabss3 ) ABCABBCDEF $.
      $( [10-May-2004] $)
  $}

  $( Rearrangement of 4 conjuncts. $)
  an4 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
              ( ( ph /\ ch ) /\ ( ps /\ th ) ) ) $=
    ( wa an12 anbi2i anass 3bitr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHAC
    LHI $.
    $( [10-Jul-1994] $)

  $( Rearrangement of 4 conjuncts. $)
  an42 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
                 ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) $=
    ( wa an4 ancom anbi2i bitri ) ABECDEEACEZBDEZEJDBEZEABCDFKLJBDGHI $.
    $( [7-Feb-1996] $)

  ${
    an4s.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( Inference rearranging 4 conjuncts in antecedent. $)
    an4s $p |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) -> ta ) $=
      ( wa an4 sylbi ) ACGBDGGABGCDGGEACBDHFI $.
      $( [10-Aug-1995] $)
  $}

  ${
    an41r3s.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( Inference rearranging 4 conjuncts in antecedent.  (The proof was
       shortened by NM, 1-Dec-2012.) $)
    an42s $p |- ( ( ( ph /\ ch ) /\ ( th /\ ps ) ) -> ta ) $=
      ( wa an4s ancom2s ) ACGBDEABCDEFHI $.
      $( [1-Dec-2012] $) $( [10-Aug-1995] $)

    $( Obsolete proof of ~ an42s . $)
    an42sOLD $p |- ( ( ( ph /\ ch ) /\ ( th /\ ps ) ) -> ta ) $=
      ( wa an42 sylbir ) ACGDBGGABGCDGGEABCDHFI $.
      $( [10-Aug-1995] $)
  $}

  $( Distribution of conjunction over conjunction. $)
  anandi $p |- ( ( ph /\ ( ps /\ ch ) ) <->
               ( ( ph /\ ps ) /\ ( ph /\ ch ) ) ) $=
    ( wa anidm anbi1i an4 bitr3i ) ABCDZDAADZIDABDACDDJAIAEFAABCGH $.
    $( [14-Aug-1995] $)

  $( Distribution of conjunction over conjunction. $)
  anandir $p |- ( ( ( ph /\ ps ) /\ ch ) <->
               ( ( ph /\ ch ) /\ ( ps /\ ch ) ) ) $=
    ( wa anidm anbi2i an4 bitr3i ) ABDZCDICCDZDACDBCDDJCICEFABCCGH $.
    $( [24-Aug-1995] $)

  ${
    anandis.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> ta ) $.
    $( Inference that undistributes conjunction in the antecedent. $)
    anandis $p |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) $=
      ( wa an4s anabsan ) ABCFDABACDEGH $.
      $( [7-Jun-2004] $)
  $}

  ${
    anandirs.1 $e |- ( ( ( ph /\ ch ) /\ ( ps /\ ch ) ) -> ta ) $.
    $( Inference that undistributes conjunction in the antecedent. $)
    anandirs $p |- ( ( ( ph /\ ps ) /\ ch ) -> ta ) $=
      ( wa an4s anabsan2 ) ABFCDACBCDEGH $.
      $( [7-Jun-2004] $)
  $}

  ${
    impbidOLD.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbidOLD.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Obsolete proof of ~ impbid . $)
    impbidOLD $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb wi dfbi2 sylanbrc ) BCFBCGCBGABCHDEI $.
      $( [5-Aug-1993] $)
  $}

  ${
    impbida.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    impbida.2 $e |- ( ( ph /\ ch ) -> ps ) $.
    $( Deduce an equivalence from two implications. $)
    impbida $p |- ( ph -> ( ps <-> ch ) ) $=
      ( ex impbid ) ABCABCDFACBEFG $.
      $( [17-Feb-2007] $)
  $}

  $( Theorem *3.48 of [WhiteheadRussell] p. 114.  (The proof was shortened by
     NM, 1-Dec-2012.) $)
  pm3.48 $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
               ( ( ph \/ ch ) -> ( ps \/ th ) ) ) $=
    ( wi wo orc imim2i olc jaao ) ABEABDFZCDECBKABDGHDKCDBIHJ $.
    $( [1-Dec-2012] $) $( [28-Jan-1997] $)

  $( Obsolete proof of ~ pm3.48 . $)
  pm3.48OLD $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
               ( ( ph \/ ch ) -> ( ps \/ th ) ) ) $=
    ( wi wa wn wo simpl con3d simpr imim12d df-or 3imtr4g ) ABEZCDEZFZAGZCEBGZD
    EACHBDHQSRCDQABOPIJOPKLACMBDMN $.
    $( [28-Jan-1997] $)

  $( Theorem *3.45 (Fact) of [WhiteheadRussell] p. 113. $)
  pm3.45 $p |- ( ( ph -> ps ) -> ( ( ph /\ ch ) -> ( ps /\ ch ) ) ) $=
    ( wi id anim1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  ${
    im2an9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    im2an9.2 $e |- ( th -> ( ta -> et ) ) $.
    $( Deduction joining nested implications to form implication of
       conjunctions. $)
    im2anan9 $p |- ( ( ph /\ th ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi adantr adantl anim12d ) ADIBCEFABCJDGKDEFJAHLM $.
      $( [29-Feb-1996] $)

    $( Deduction joining nested implications to form implication of
       conjunctions.  (The proof was shortened by NM, 3-Dec-2012.) $)
    im2anan9r $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi im2anan9 ancoms ) ADBEICFIJABCDEFGHKL $.
      $( [3-Dec-2012] $) $( [29-Feb-1996] $)

    $( Obsolete proof of ~ im2anan9r . $)
    im2anan9rOLD $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi adantl adantr anim12d ) DAIBCEFABCJDGKDEFJAHLM $.
      $( [29-Feb-1996] $)
  $}

  ${
    orim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    orim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Disjoin antecedents and consequents in a deduction. $)
    orim12d $p |- ( ph -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) $=
      ( wi wo pm3.48 syl11anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [10-May-1994] $)
  $}

  ${
    orim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Disjoin antecedents and consequents in a deduction. $)
    orim1d $p |- ( ph -> ( ( ps \/ th ) -> ( ch \/ th ) ) ) $=
      ( idd orim12d ) ABCDDEADFG $.
      $( [23-Apr-1995] $)

    $( Disjoin antecedents and consequents in a deduction. $)
    orim2d $p |- ( ph -> ( ( th \/ ps ) -> ( th \/ ch ) ) ) $=
      ( idd orim12d ) ADDBCADFEG $.
      $( [23-Apr-1995] $)
  $}

  $( Axiom *1.6 (Sum) of [WhiteheadRussell] p. 97. $)
  orim2 $p |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wi id orim2d ) BCDZBCAGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.38 of [WhiteheadRussell] p. 105. $)
  pm2.38 $p |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) $=
    ( wi id orim1d ) BCDZBCAGEF $.
    $( [6-Mar-2008] $)

  $( Theorem *2.36 of [WhiteheadRussell] p. 105. $)
  pm2.36 $p |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ch \/ ph ) ) ) $=
    ( wi wo pm2.38 pm1.4 syl5 ) BCDBAECAEABEABCFABGH $.
    $( [6-Mar-2008] $)

  $( Theorem *2.37 of [WhiteheadRussell] p. 105. $)
  pm2.37 $p |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ph \/ ch ) ) ) $=
    ( wi wo pm2.38 pm1.4 syl6 ) BCDBAECAEACEABCFCAGH $.
    $( [6-Mar-2008] $)

  $( Theorem *2.73 of [WhiteheadRussell] p. 108. $)
  pm2.73 $p |- ( ( ph -> ps ) -> ( ( ( ph \/ ps ) \/ ch ) ->
                ( ps \/ ch ) ) ) $=
    ( wi wo pm2.621 orim1d ) ABDABEBCABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.74 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  pm2.74 $p |- ( ( ps -> ph ) -> ( ( ( ph \/ ps ) \/ ch ) ->
                ( ph \/ ch ) ) ) $=
    ( wi wo orel2 ax-1 ja orim1d ) BADABEZACBAJADBAFAJGHI $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Theorem *2.75 of [WhiteheadRussell] p. 108. $)
  pm2.75 $p |- ( ( ph \/ ps ) ->
                ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) $=
    ( wi wo orc a1d pm2.27 orim2d jaoi ) AABCDZEZACEZDBAMLACFGBKCABCHIJ $.
    $( [3-Jan-2005] $)

  $( Theorem *2.76 of [WhiteheadRussell] p. 108. $)
  pm2.76 $p |- ( ( ph \/ ( ps -> ch ) ) ->
                ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wo wi pm2.75 com12 ) ABDABCEDACDABCFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.8 of [WhiteheadRussell] p. 108. $)
  pm2.8 $p |- ( ( ps \/ ch ) -> ( ( -. ch \/ th ) -> ( ps \/ th ) ) ) $=
    ( wn wo wi orc a1d pm2.24 orim1d jaoi ) ABDZCEZACEZFBANMACGHBLACBAIJK $.
    $( [3-Jan-2005] $)

  $( Theorem *2.81 of [WhiteheadRussell] p. 108. $)
  pm2.81 $p |- ( ( ps -> ( ch -> th ) ) -> ( ( ph \/ ps ) ->
                ( ( ph \/ ch ) -> ( ph \/ th ) ) ) ) $=
    ( wi wo orim2 pm2.76 syl6 ) BCDEZEABFAJFACFADFEABJGACDHI $.
    $( [3-Jan-2005] $)

  $( Theorem *2.82 of [WhiteheadRussell] p. 108. $)
  pm2.82 $p |- ( ( ( ph \/ ps ) \/ ch ) -> ( ( ( ph \/ -. ch ) \/ th ) ->
                ( ( ph \/ ps ) \/ th ) ) ) $=
    ( wo wn wi ax-1 pm2.24 orim2d jaoi orim1d ) ABEZCEACFZEZMDMOMGCMOHCNBACBIJK
    L $.
    $( [3-Jan-2005] $)

  $( Theorem *2.85 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     NM, 3-Dec-2012.) $)
  pm2.85 $p |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) ->
                ( ph \/ ( ps -> ch ) ) ) $=
    ( wo wi wn pm2.46 pm2.21d olcd pm2.53 a1dd orrd ja ) ABDZACDZABCEZDNFZPAQBC
    ABGHIOAPOAFCBACJKLM $.
    $( [3-Dec-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm2.85 . $)
  pm2.85OLD $p |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) ->
                ( ph \/ ( ps -> ch ) ) ) $=
    ( wo wi wn imor pm2.48 orim1i sylbi orbi2i orordi bitr2i sylib ) ABDZACDZEZ
    ABFZDZPDZABCEZDZQOFZPDTOPGUCSPABHIJUBARCDZDTUAUDABCGKARCLMN $.
    $( [3-Jan-2005] $)

  ${
    pm3.2ni.1 $e |- -. ph $.
    pm3.2ni.2 $e |- -. ps $.
    $( Infer negated disjunction of negated premises. $)
    pm3.2ni $p |- -. ( ph \/ ps ) $=
      ( wo id pm2.21i jaoi mto ) ABEACAABAFBADGHI $.
      $( [4-Apr-1995] $)
  $}

  $( Absorption of redundant internal disjunct.  Compare Theorem *4.45 of
     [WhiteheadRussell] p. 119. $)
  orabs $p |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) $=
    ( wo wa orc ancri simpr impbii ) AABCZADAIABEFIAGH $.
    $( [5-Aug-1993] $)

  $( Absorb a disjunct into a conjunct.  (Contributed by Roy F. Longton
     23-Jun-2005.) $)
  oranabs $p |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ph /\ ps ) ) $=
    ( wn wo wa pm5.61 notnot anbi2i 3bitr4i ) ABCZDZJCZEALEKBEABEAJFBLKBGZHBLAM
    HI $.
    $( [12-Apr-2008] $) $( [23-Jun-2005] $)

  ${
    mpbidi.min $e |- ( th -> ( ph -> ps ) ) $.
    mpbidi.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbidi $p |- ( th -> ( ph -> ch ) ) $=
      ( biimpd sylcom ) DABCEABCFGH $.
      $( [9-Aug-1994] $)
  $}

  $( Implication in terms of implication and biconditional. $)
  ibib $p |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) $=
    ( wb wa pm3.4 simpl a1d impbid ex bi1 com12 pm5.74i ) ABABCZABMABMABDZABABE
    NABABFGHIMABABJKHL $.
    $( [31-Mar-1994] $)

  $( Implication in terms of implication and biconditional. $)
  ibibr $p |- ( ( ph -> ps ) <-> ( ph -> ( ps <-> ph ) ) ) $=
    ( wi wb ibib bicom imbi2i bitri ) ABCAABDZCABADZCABEIJAABFGH $.
    $( [29-Apr-2005] $)

  ${
    ibi.1 $e |- ( ph -> ( ph <-> ps ) ) $.
    $( Inference that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibi $p |- ( ph -> ps ) $=
      ( biimpd pm2.43i ) ABAABCDE $.
      $( [17-Oct-2003] $)
  $}

  ${
    ibir.1 $e |- ( ph -> ( ps <-> ph ) ) $.
    $( Inference that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibir $p |- ( ph -> ps ) $=
      ( bicomd ibi ) ABABACDE $.
      $( [22-Jul-2004] $)
  $}

  ${
    ibd.1 $e |- ( ph -> ( ps -> ( ps <-> ch ) ) ) $.
    $( Deduction that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb bi1 syli ) BABCECDBCFG $.
      $( [26-Jun-2004] $)
  $}

  $( Theorem *5.501 of [WhiteheadRussell] p. 125. $)
  pm5.501 $p |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) $=
    ( wb ibib pm5.74ri ) ABABCABDE $.
    $( [3-Jan-2005] $)

  $( Distributive law for disjunction.  Theorem *4.41 of [WhiteheadRussell]
     p. 119.  (The proof was shortened by Andrew Salmon, 7-May-2011.) $)
  ordi $p |- ( ( ph \/ ( ps /\ ch ) ) <-> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) ) $=
    ( wa wo orc jca olc anim12i jaoi wn pm2.53 anim12ii orrd impbii ) ABCDZEABE
    ZACEZDZASPAQRABFACFGBQCRBAHCAHIJSAPQAKBRCABLACLMNO $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Distributive law for disjunction. $)
  ordir $p |- ( ( ( ph /\ ps ) \/ ch ) <->
              ( ( ph \/ ch ) /\ ( ps \/ ch ) ) ) $=
    ( wa wo ordi orcom anbi12i 3bitr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMKNL
    ACGBCGHI $.
    $( [12-Aug-1994] $)

  $( Distributive law for implication over conjunction.  Compare Theorem *4.76
     of [WhiteheadRussell] p. 121. $)
  jcab $p |- ( ( ph -> ( ps /\ ch ) ) <->
                 ( ( ph -> ps ) /\ ( ph -> ch ) ) ) $=
    ( wn wa wo wi ordi imor anbi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZELBCH
    AMIPNQOABIACIJK $.
    $( [3-Apr-1994] $)

  $( Theorem *4.76 of [WhiteheadRussell] p. 121. $)
  pm4.76 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) <->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wa wi jcab bicomi ) ABCDEABEACEDABCFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.43 (Comp) of [WhiteheadRussell] p. 113. $)
  pm3.43 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wa wi jcab biimpri ) ABCDEABEACEDABCFG $.
    $( [3-Jan-2005] $)

  $( Distributive law for conjunction.  Theorem *4.4 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by NM, 3-Dec-2012.) $)
  andi $p |- ( ( ph /\ ( ps \/ ch ) ) <-> ( ( ph /\ ps ) \/ ( ph /\ ch ) ) ) $=
    ( wo wa wn wi pm2.24 ax-1 jaodan orrd orc anim2i olc jaoi impbii ) ABCDZEZA
    BEZACEZDRSTABSFZTGCSTHTUAIJKSRTBQABCLMCQACBNMOP $.
    $( [3-Dec-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ andi . $)
  andiOLD $p |- ( ( ph /\ ( ps \/ ch ) ) <-> ( ( ph /\ ps ) \/ ( ph /\ ch ) ) )
      $=
    ( wn wo wa ordi ioran orbi2i ianor anbi12i 3bitr4i notbii anor oran ) ADZBC
    EZDZEZDABFZDZACFZDZFZDAQFTUBESUDPBDZCDZFZEPUEEZPUFEZFSUDPUEUFGRUGPBCHIUAUHU
    CUIABJACJKLMAQNTUBOL $.
    $( [5-Aug-1993] $)

  $( Distributive law for conjunction. $)
  andir $p |- ( ( ( ph \/ ps ) /\ ch ) <->
              ( ( ph /\ ch ) \/ ( ps /\ ch ) ) ) $=
    ( wo wa andi ancom orbi12i 3bitr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMKNL
    ACGBCGHI $.
    $( [12-Aug-1994] $)

  $( Double distributive law for disjunction. $)
  orddi $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ( ph \/ ch ) /\ ( ph \/ th ) ) /\
              ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ) $=
    ( wa wo ordir ordi anbi12i bitri ) ABECDEZFAKFZBKFZEACFADFEZBCFBDFEZEABKGLN
    MOACDHBCDHIJ $.
    $( [12-Aug-1994] $)

  $( Double distributive law for conjunction. $)
  anddi $p |- ( ( ( ph \/ ps ) /\ ( ch \/ th ) ) <->
              ( ( ( ph /\ ch ) \/ ( ph /\ th ) ) \/
              ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ) $=
    ( wo wa andir andi orbi12i bitri ) ABECDEZFAKFZBKFZEACFADFEZBCFBDFEZEABKGLN
    MOACDHBCDHIJ $.
    $( [12-Aug-1994] $)

  $( Prove formula-building rules for the biconditional connective. $)

  $( Theorem *4.39 of [WhiteheadRussell] p. 118. $)
  pm4.39 $p |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) ->
                ( ( ph \/ ps ) <-> ( ch \/ th ) ) ) $=
    ( wb wa simpl simpr orbi12d ) ACEZBDEZFACBDJKGJKHI $.
    $( [3-Jan-2005] $)

  $( Theorem *4.38 of [WhiteheadRussell] p. 118. $)
  pm4.38 $p |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) ->
                ( ( ph /\ ps ) <-> ( ch /\ th ) ) ) $=
    ( wb wa simpl simpr anbi12d ) ACEZBDEZFACBDJKGJKHI $.
    $( [3-Jan-2005] $)

  ${
    bi2an9.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi2an9.2 $e |- ( th -> ( ta <-> et ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    bi2anan9 $p |- ( ( ph /\ th ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) $=
      ( wa anbi1d anbi2d sylan9bb ) ABEICEIDCFIABCEGJDEFCHKL $.
      $( [31-Jul-1995] $)

    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    bi2anan9r $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) $=
      ( wa wb bi2anan9 ancoms ) ADBEICFIJABCDEFGHKL $.
      $( [19-Feb-1996] $)

    $( Deduction joining two biconditionals with different antecedents. $)
    bi2bian9 $p |- ( ( ph /\ th ) -> ( ( ps <-> ta ) <-> ( ch <-> et ) ) ) $=
      ( wa wb adantr adantl bibi12d ) ADIBCEFABCJDGKDEFJAHLM $.
      $( [12-May-2004] $)
  $}

  ${
    biantru.1 $e |- ph $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantru $p |- ( ps <-> ( ps /\ ph ) ) $=
      ( wa wb iba ax-mp ) ABBADECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    biantrur.1 $e |- ph $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantrur $p |- ( ps <-> ( ph /\ ps ) ) $=
      ( wa wb ibar ax-mp ) ABABDECABFG $.
      $( [3-Aug-1994] $)
  $}

  ${
    biantrud.1 $e |- ( ph -> ps ) $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantrud $p |- ( ph -> ( ch <-> ( ch /\ ps ) ) ) $=
      ( wa idd jctird simpl impbid1 ) ACCBEACCBACFDGCBHI $.
      $( [2-Aug-1994] $)

    $( A wff is equivalent to its conjunction with truth.  (The proof was
       shortened by Andrew Salmon, 7-May-2011.) $)
    biantrurd $p |- ( ph -> ( ch <-> ( ps /\ ch ) ) ) $=
      ( wa wb ibar syl ) ABCBCEFDBCGH $.
      $( [12-May-2011] $) $( [1-May-1995] $)
  $}

  $( Implication in terms of biconditional and conjunction.  Theorem *4.71 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     2-Dec-2012.) $)
  pm4.71 $p |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) $=
    ( wa wi wb simpl biantru anclb dfbi2 3bitr4i ) AABCZDZLKADZCABDAKEMLABFGABH
    AKIJ $.
    $( [2-Dec-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ pm4.71 . $)
  pm4.71OLD $p |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) $=
    ( wi wa wb ancl simpl impbid1 bi1 simpr syl6 impbii ) ABCZAABDZEZMANABFABGH
    OANBANIABJKL $.
    $( [5-Aug-1993] $)

  $( Implication in terms of biconditional and conjunction.  Theorem *4.71 of
     [WhiteheadRussell] p. 120 (with conjunct reversed). $)
  pm4.71r $p |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) $=
    ( wi wa wb pm4.71 ancom bibi2i bitri ) ABCAABDZEABADZEABFJKAABGHI $.
    $( [25-Jul-1999] $)

  ${
    pm4.71i.1 $e |- ( ph -> ps ) $.
    $( Inference converting an implication to a biconditional with
       conjunction.  Inference from Theorem *4.71 of [WhiteheadRussell]
       p. 120. $)
    pm4.71i $p |- ( ph <-> ( ph /\ ps ) ) $=
      ( wi wa wb pm4.71 mpbi ) ABDAABEFCABGH $.
      $( [4-Jan-2004] $)
  $}

  ${
    pm4.71ri.1 $e |- ( ph -> ps ) $.
    $( Inference converting an implication to a biconditional with
       conjunction.  Inference from Theorem *4.71 of [WhiteheadRussell] p. 120
       (with conjunct reversed). $)
    pm4.71ri $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wi wa wb pm4.71r mpbi ) ABDABAEFCABGH $.
      $( [1-Dec-2003] $)
  $}

  ${
    pm4.71rd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction converting an implication to a biconditional with
       conjunction.  Deduction from Theorem *4.71 of [WhiteheadRussell]
       p. 120. $)
    pm4.71rd $p |- ( ph -> ( ps <-> ( ch /\ ps ) ) ) $=
      ( wi wa wb pm4.71r sylib ) ABCEBCBFGDBCHI $.
      $( [10-Feb-2005] $)
  $}


  $( Theorem *4.45 of [WhiteheadRussell] p. 119. $)
  pm4.45 $p |- ( ph <-> ( ph /\ ( ph \/ ps ) ) ) $=
    ( wo orc pm4.71i ) AABCABDE $.
    $( [3-Jan-2005] $)

  $( Implication in terms of biconditional and disjunction.  Theorem *4.72 of
     [WhiteheadRussell] p. 121. $)
  pm4.72 $p |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wi wo wb olc pm2.621 impbid2 bi2 pm2.67 syl impbii ) ABCZBABDZEZMBNBAFABG
    HONBCMBNIABJKL $.
    $( [30-Aug-1993] $)

  $( Theorem *5.33 of [WhiteheadRussell] p. 125. $)
  pm5.33 $p |- ( ( ph /\ ( ps -> ch ) ) <->
                ( ph /\ ( ( ph /\ ps ) -> ch ) ) ) $=
    ( wi wa ibar imbi1d pm5.32i ) ABCDABEZCDABICABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *5.36 of [WhiteheadRussell] p. 125. $)
  pm5.36 $p |- ( ( ph /\ ( ph <-> ps ) ) <-> ( ps /\ ( ph <-> ps ) ) ) $=
    ( wb id pm5.32ri ) ABCZABFDE $.
    $( [3-Jan-2005] $)

  ${
    bianabs.1 $e |- ( ph -> ( ps <-> ( ph /\ ch ) ) ) $.
    $( Absorb a hypothesis into the second member of a biconditional.
       (Contributed by FL, 15-Feb-2007.) $)
    bianabs $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wa ibar bitr4d ) ABACECDACFG $.
      $( [22-May-2008] $) $( [15-Feb-2007] $)
  $}

  $( Absorption of disjunction into equivalence. $)
  oibabs $p |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) <-> ( ph <-> ps ) ) $=
    ( wo wb wi pm2.67-2 ibd olc imim1i ibibr sylibr impbid ax-1 impbii ) ABCZAB
    DZEZPQABQABAPBFGQBPEBAEBOPBAHIBAJKLPOMN $.
    $( [10-Dec-2012] $)  $( [6-Aug-1995] $)

  $( Law of noncontradiction.  Theorem *3.24 of [WhiteheadRussell] p. 111 (who
     call it the "law of contradiction").  (The proof was shortened by Wolf
     Lammen, 24-Nov-2012.) $)
  pm3.24 $p |- -. ( ph /\ -. ph ) $=
    ( wi wn wa id iman mpbi ) AABAACDCAEAAFG $.
    $( [24-Nov-2012] $) $( [16-Sep-1993] $)

  $( Obsolete proof of ~ pm3.24 . $)
  pm3.24OLD $p |- -. ( ph /\ -. ph ) $=
    ( wn wa wo exmid ianor mpbir ) AABZCBHHBDHEAHFG $.
    $( [16-Sep-1993] $)

  $( Theorem *2.26 of [WhiteheadRussell] p. 104.  (The proof was shortened by
     Wolf Lammen, 23-Nov-2012.) $)
  pm2.26 $p |- ( -. ph \/ ( ( ph -> ps ) -> ps ) ) $=
    ( wi pm2.27 imori ) AABCBCABDE $.
    $( [23-Nov-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm2.26 . $)
  pm2.26OLD $p |- ( -. ph \/ ( ( ph -> ps ) -> ps ) ) $=
    ( wn wi notnot2 imim1i com12 orri ) ACZABDZBDJICZBKABAEFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *5.18 of [WhiteheadRussell] p. 124.  This theorem says that
     logical equivalence is the same as negated "exclusive-or."  (The proof was
     shortened by Andrew Salmon, 20-Jun-2011.) $)
  pm5.18 $p |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) $=
    ( wi wa wn wb pm2.65 con2 syl5com com12 anim12d ancoms pm4.65 syl6ibr 
    df-an ax-1 anim12i sylbir pm2.21 sylbi ja impbii notnot bitri dfbi2 dfbi1 
    notbii 3bitr4i ) ABCZBACZDZABEZCZULACEZCZEZEZABFAULFZEUKUOUQUKUOUKUMULAEZDZ
    UNUJUIUMUTCUMUJUIDUTUMUJULUIUSUJBUSCULUMBAGABHIUIUMUSABGJKJLBAMZNUMUNUKUMEA
    BDUKABOBAUKBUIAUJBAPABPQLRUNUTUKVAUSULUKUSUIULUJABSBASQLTUAUBUOUCUDABUEURUP
    AULUFUGUH $.
    $( [26-Jun-2011] $) $( [28-Jun-2002] $)

  $( Move negation outside of biconditional.  Compare Theorem *5.18 of
     [WhiteheadRussell] p. 124. $)
  nbbn $p |- ( ( -. ph <-> ps ) <-> -. ( ph <-> ps ) ) $=
    ( wn wb bicom pm5.18 bitri con2bii ) ACZBDBIDZABDZCIBEKJKBADJCABEBAFGHG $.
    $( [27-Jun-2002] $)

  $( Theorem *5.11 of [WhiteheadRussell] p. 123. $)
  pm5.11 $p |- ( ( ph -> ps ) \/ ( -. ph -> ps ) ) $=
    ( wi wn pm2.5 orri ) ABCADBCABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *5.12 of [WhiteheadRussell] p. 123. $)
  pm5.12 $p |- ( ( ph -> ps ) \/ ( ph -> -. ps ) ) $=
    ( wi wn pm2.51 orri ) ABCABDCABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *5.14 of [WhiteheadRussell] p. 123. $)
  pm5.14 $p |- ( ( ph -> ps ) \/ ( ps -> ch ) ) $=
    ( wi wn ax-1 con3i pm2.21d orri ) ABDZBCDJEBCBJBAFGHI $.
    $( [3-Jan-2005] $)

  $( Theorem *5.13 of [WhiteheadRussell] p. 123.  (The proof was shortened by
     Wolf Lammen, 14-Nov-2012.) $)
  pm5.13 $p |- ( ( ph -> ps ) \/ ( ps -> ph ) ) $=
    ( pm5.14 ) ABAC $.
    $( [14-Nov-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.13 . $)
  pm5.13OLD $p |- ( ( ph -> ps ) \/ ( ps -> ph ) ) $=
    ( wi pm2.521 orri ) ABCBACABDE $.
    $( [3-Jan-2005] $)

  $( Theorem *5.15 of [WhiteheadRussell] p. 124. $)
  pm5.15 $p |- ( ( ph <-> ps ) \/ ( ph <-> -. ps ) ) $=
    ( wb wn pm5.18 biimpri con1i orri ) ABCZABDCZJIIJDABEFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *5.16 of [WhiteheadRussell] p. 124. $)
  pm5.16 $p |- -. ( ( ph <-> ps ) /\ ( ph <-> -. ps ) ) $=
    ( wb wn wa wo wi pm5.18 biimpi pm4.62 mpbi ianor mpbir ) ABCZABDCZEDNDODZFZ
    NPGQNPABHINOJKNOLM $.
    $( [3-Jan-2005] $)

  $( Theorem *5.17 of [WhiteheadRussell] p. 124.  (The proof was shortened by
    Wolf Lammen, 3-Jan-2013.) $)
  pm5.17 $p |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ph <-> -. ps ) ) $=
    ( wn wb wi wa wo bicom dfbi2 orcom df-or bitr2i imnan anbi12i 3bitrri ) ABC
    ZDPADPAEZAPEZFABGZABFCZFAPHPAIQSRTSBAGQABJBAKLABMNO $.
    $( [3-Jan-2013] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.17 . $)
  pm5.17OLD $p |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ph <-> -. ps ) ) $=
    ( wo wa wn wi wb orcom df-or bitri imnan bicomi anbi12i dfbi2 bicom 
    3bitr2i ) ABCZABDEZDBEZAFZASFZDSAGASGQTRUAQBACTABHBAIJUARABKLMSANSAOP $.
    $( [3-Jan-2005] $)

  $( Theorem *5.19 of [WhiteheadRussell] p. 124. $)
  pm5.19 $p |- -. ( ph <-> -. ph ) $=
    ( wb wn biid pm5.18 mpbi ) AABAACBCADAAEF $.
    $( [3-Jan-2005] $)

  $( An alternate definition of the biconditional.  Theorem *5.23 of
     [WhiteheadRussell] p. 124. $)
  dfbi3 $p |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) $=
    ( wb wn wa wo pm5.18 wi imnan con1b iman bitri anbi12i dfbi2 ioran 
    3bitr4ri con1bii ) ABCABDZCZDABEZADZREZFZABGUCSARHZRAHZETDZUBDZESUCDUDUFUEU
    GABIUEUABHUGBAJUABKLMARNTUBOPQL $.
    $( [27-Jun-2002] $)

  $( Two ways to express "exclusive or."  Theorem *5.22 of [WhiteheadRussell]
     p. 124. $)
  xor $p |- ( -. ( ph <-> ps ) <->
                ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wn wb wa wo dfbi3 nbbn ancom notnot anbi1i orbi12i orcom bitr3i 3bitr3i 
    ) ACZBDPBEZPCZBCZEZFZABDCASEZBPEZFZPBGABHUAUCUBFUDUCQUBTBPIARSAJKLUCUBMNO 
    $.
    $( [3-Jan-2005] $)

  $( Theorem *5.24 of [WhiteheadRussell] p. 124. $)
  pm5.24 $p |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <->
                ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wa wn wo wb dfbi3 notbii xor bitr3i ) ABCADZBDZCEZDABFZDALCBKCENMABGHABIJ
    $.
    $( [3-Jan-2005] $)

  $( Two ways to express "exclusive or." $)
  xor2 $p |- ( -. ( ph <-> ps ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) $=
    ( wb wn wa wo xor ioran pm5.24 oran anbi2i ancom bitr3i 3bitr3i bitri ) ABC
    DABDZEBADZEFZABFZABEZDZEZABGTQPEZFDUAUCDZEZRUBTUCHABIUEUASEUBSUDUAABJKUASLM
    NO $.
    $( [3-Jan-2005] $)

  $( Two ways to express "exclusive or." $)
  xor3 $p |- ( -. ( ph <-> ps ) <-> ( ph <-> -. ps ) ) $=
    ( wn wb pm5.18 con2bii bicomi ) ABCDZABDZCIHABEFG $.
    $( [1-Jan-2006] $)

  $( Conjunction distributes over exclusive-or, using ` -. ( ph <-> ps ) ` to
     express exclusive-or.  This is one way to interpret the distributive law
     of multiplication over addition in modulo 2 arithmetic. $)
  xordi $p |- ( ( ph /\ -. ( ps <-> ch ) ) <->
                -. ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) $=
    ( wb wn wa wi annim pm5.32 notbii bitri ) ABCDZEFALGZEABFACFDZEALHMNABCIJK 
    $.
    $( [3-Oct-2008] $)

  $( A wff is disjoined with truth is true. $)
  biort $p |- ( ph -> ( ph <-> ( ph \/ ps ) ) ) $=
    ( wo orc ax-1 impbid2 ) AAABCZABDAGEF $.
    $( [23-May-1999] $)

  $( A wff is equivalent to its disjunction with falsehood.  Theorem *4.74 of
     [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     18-Nov-2012. $)
  biorf $p |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wn wo olc orel1 impbid2 ) ACBABDBAEABFG $.
    $( [18-Nov-2012] $) $( [23-Mar-1995] $)

  $( Theorem *5.55 of [WhiteheadRussell] p. 125.  (The proof was shortened by
      Wolf Lammen, 3-Jan-2013.) $)
  pm5.55 $p |- ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) $=
    ( wo wb biort bicomd orcd wn biorf olcd pm2.61i ) AABCZADZLBDZCAMNAALABEFGA
    HZNMOBLABIFJK $.
    $( [3-Jan-2013] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.55 . $)
  pm5.55OLD $p |- ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) $=
    ( wi wo wb pm5.13 pm4.72 orcom bibi2i bicom 3bitri bitri orbi12i mpbi ) BAC
    ZABCZDABDZAEZQBEZDBAFORPSOABADZEAQERBAGTQABAHIAQJKPBQESABGBQJLMN $.
    $( [3-Jan-2005] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Miscellaneous theorems of propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Two propositions are equivalent if they are both true.  Theorem *5.1 of
     [WhiteheadRussell] p. 123. $)
  pm5.1 $p |- ( ( ph /\ ps ) -> ( ph <-> ps ) ) $=
    ( wb pm5.501 biimpa ) ABABCABDE $.
    $( [21-May-1994] $)

  ${
    2thd.1 $e |- ( ph -> ps ) $.
    2thd.2 $e |- ( ph -> ch ) $.
    $( Two truths are equivalent (deduction rule). $)
    2thd $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb pm5.1 syl11anc ) ABCBCFDEBCGH $.
      $( [3-Jun-2012] $)
  $}

  $( Two propositions are equivalent if they are both false.  Theorem *5.21 of
     [WhiteheadRussell] p. 124. $)
  pm5.21 $p |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) $=
    ( wn wa pm5.1 con4bid ) ACZBCZDABGHEF $.
    $( [21-May-1994] $)


  ${
    pm5.21ni.1 $e |- ( ph -> ps ) $.
    pm5.21ni.2 $e |- ( ch -> ps ) $.
    $( Two propositions implying a false one are equivalent. $)
    pm5.21ni $p |- ( -. ps -> ( ph <-> ch ) ) $=
      ( wn wb con3i pm5.21 syl11anc ) BFAFCFACGABDHCBEHACIJ $.
      $( [16-Feb-1996] $)

    ${
      pm5.21nii.3 $e |- ( ps -> ( ph <-> ch ) ) $.
      $( Eliminate an antecedent implied by each side of a biconditional. $)
      pm5.21nii $p |- ( ph <-> ch ) $=
        ( wb pm5.21ni pm2.61i ) BACGFABCDEHI $.
        $( [21-May-1999] $)
    $}
  $}

  ${
    pm5.21nd.1 $e |- ( ( ph /\ ps ) -> th ) $.
    pm5.21nd.2 $e |- ( ( ph /\ ch ) -> th ) $.
    pm5.21nd.3 $e |- ( th -> ( ps <-> ch ) ) $.
    $( Eliminate an antecedent implied by each side of a biconditional. $)
    pm5.21nd $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb wn wa ex con3d jcad pm5.21 syl6 pm2.61d2 ) ADBCHZADIZBIZCIZJQARSTABD
      ABDEKLACDACDFKLMBCNOGP $.
      $( [20-Nov-2005] $)
  $}

  $( Transfer negation via an equivalence. $)
  bibif $p |- ( -. ps -> ( ( ph <-> ps ) <-> -. ph ) ) $=
    ( wn wb bi1 con3d com12 pm5.21 expcom impbid ) BCZABDZACZLKMLABABEFGMKLABHI
    J $.
    $( [3-Oct-2007] $)

  $( Theorem *5.35 of [WhiteheadRussell] p. 125. $)
  pm5.35 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps <-> ch ) ) ) $=
    ( wi wa pm5.1 pm5.74rd ) ABDZACDZEABCHIFG $.
    $( [3-Jan-2005] $)

  $( Theorem *5.54 of [WhiteheadRussell] p. 125. $)
  pm5.54 $p |- ( ( ( ph /\ ps ) <-> ph ) \/ ( ( ph /\ ps ) <-> ps ) ) $=
    ( wa wb pm5.1 anabss1 iba bicomd pm5.21ni orri ) ABCZADZKBDKLBABLKAEFBAKBAG
    HIJ $.
    $( [3-Jan-2005] $)

  ${
    baib.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Move conjunction outside of biconditional. $)
    baib $p |- ( ps -> ( ph <-> ch ) ) $=
      ( wa ibar syl6rbbr ) BCBCEABCFDG $.
      $( [13-May-1999] $)
  $}

  ${
    baibr.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Move conjunction outside of biconditional. $)
    baibr $p |- ( ps -> ( ch <-> ph ) ) $=
      ( baib bicomd ) BACABCDEF $.
      $( [11-Jul-1994] $)
  $}

  ${
    x.1 $e |- ( ph -> ps ) $.
    x.2 $e |- ( ch -> ( th <-> ps ) ) $.
  $}

  $( Theorem *5.44 of [WhiteheadRussell] p. 125. $)
  pm5.44 $p |- ( ( ph -> ps ) -> ( ( ph -> ch ) <->
                ( ph -> ( ps /\ ch ) ) ) ) $=
    ( wa wi jcab baibr ) ABCDEABEACEABCFG $.
    $( [3-Jan-2005] $)

  $( Conjunction in antecedent versus disjunction in consequent.  Theorem *5.6
     of [WhiteheadRussell] p. 125. $)
  pm5.6 $p |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( ps \/ ch ) ) ) $=
    ( wn wa wi wo impexp df-or imbi2i bitr4i ) ABDZECFALCFZFABCGZFALCHNMABCIJK 
    $.
    $( [22-Mar-2005] $) $( [8-Jun-1994] $)

  ${
    orcanai.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Change disjunction in consequent to conjunction in antecedent. $)
    orcanai $p |- ( ( ph /\ -. ps ) -> ch ) $=
      ( wn ord imp ) ABECABCDFG $.
      $( [8-Jun-1994] $)
  $}


  ${
    intnan.1 $e |- -. ph $.
    $( Introduction of conjunct inside of a contradiction. $)
    intnan $p |- -. ( ps /\ ph ) $=
      ( wa simpr mto ) BADACBAEF $.
      $( [16-Sep-1993] $)

    $( Introduction of conjunct inside of a contradiction. $)
    intnanr $p |- -. ( ph /\ ps ) $=
      ( wa simpl mto ) ABDACABEF $.
      $( [3-Apr-1995] $)
  $}

  ${
    intnand.1 $e |- ( ph -> -. ps ) $.
    $( Introduction of conjunct inside of a contradiction. $)
    intnand $p |- ( ph -> -. ( ch /\ ps ) ) $=
      ( wa simpr nsyl ) ABCBEDCBFG $.
      $( [10-Jul-2005] $)

    $( Introduction of conjunct inside of a contradiction. $)
    intnanrd $p |- ( ph -> -. ( ps /\ ch ) ) $=
      ( wa simpl nsyl ) ABBCEDBCFG $.
      $( [10-Jul-2005] $)
  $}

  $( Modus-tollens-like theorem.  (The proof was shortened by Wolf Lammen,
     12-Nov-2012.) $)
  mtt $p |- ( -. ph -> ( -. ps <-> ( ps -> ph ) ) ) $=
    ( wn wi biimt con34b syl6bbr ) ACZBCZHIDBADHIEBAFG $.
    $( [12-Nov-2012] $) $( [7-Apr-2001] $)

  $( Obsolete proof of ~ mtt . $)
  mttOLD $p |- ( -. ph -> ( -. ps <-> ( ps -> ph ) ) ) $=
    ( wn wi pm2.21 con3 com12 impbid2 ) ACZBCZBADZBAEKIJBAFGH $.
    $( [7-Apr-2001] $)

  ${
    mt2bi.1OLD $e |- ph $.
    $( Obsolete proof of ~ mt2bi . $)
    mt2biOLD $p |- ( -. ps <-> ( ps -> -. ph ) ) $=
      ( wn wi pm2.21 con2 mpi impbii ) BDZBADZEZBKFLAJCBAGHI $.
      $( [19-Aug-1993] $)
  $}

  ${
    mtbid.min $e |- ( ph -> -. ps ) $.
    mtbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, similar to modus tollens. $)
    mtbid $p |- ( ph -> -. ch ) $=
      ( biimprd mtod ) ACBDABCEFG $.
      $( [26-Nov-1995] $)
  $}

  ${
    mtbird.min $e |- ( ph -> -. ch ) $.
    mtbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, similar to modus tollens. $)
    mtbird $p |- ( ph -> -. ps ) $=
      ( biimpd mtod ) ABCDABCEFG $.
      $( [10-May-1994] $)
  $}

  ${
    mtbii.min $e |- -. ps $.
    mtbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a biconditional, similar to modus tollens. $)
    mtbii $p |- ( ph -> -. ch ) $=
      ( biimprd mtoi ) ACBDABCEFG $.
      $( [27-Nov-1995] $)
  $}

  ${
    mtbiri.min $e |- -. ch $.
    mtbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a biconditional, similar to modus tollens. $)
    mtbiri $p |- ( ph -> -. ps ) $=
      ( biimpd mtoi ) ABCDABCEFG $.
      $( [24-Aug-1995] $)
  $}

  ${
    2th.1 $e |- ph $.
    2th.2 $e |- ps $.
    $( Two truths are equivalent. $)
    2th $p |- ( ph <-> ps ) $=
      ( a1i impbii ) ABBADEABCEF $.
      $( [18-Aug-1993] $)
  $}

  ${
    2false.1 $e |- -. ph $.
    2false.2 $e |- -. ps $.
    $( Two falsehoods are equivalent. $)
    2false $p |- ( ph <-> ps ) $=
      ( pm2.21i impbii ) ABABCEBADEF $.
      $( [4-Apr-2005] $)
  $}

  ${
    tbt.1 $e |- ph $.
    $( A wff is equivalent to its equivalence with truth.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    tbt $p |- ( ps <-> ( ps <-> ph ) ) $=
      ( wb ibibr pm5.74ri ax-mp ) ABBADZDCABHABEFG $.
      $( [16-May-2011] $) $( [18-Aug-1993] $)
  $}

  $( The negation of a wff is equivalent to the wff's equivalence to
     falsehood.  (Contributed by Juha Arpiainen, 19-Jan-2006.) $)
  nbn2 $p |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) $=
    ( wn wb bibif biimprcd bi2 con3d com12 impbid ) ACZBCZABDZLMKABEFMKLMBAABGH
    IJ $.
    $( [19-Jan-2006] $)

  ${
    nbn.1 $e |- -. ph $.
    $( The negation of a wff is equivalent to the wff's equivalence to
       falsehood. $)
    nbn $p |- ( -. ps <-> ( ps <-> ph ) ) $=
      ( wn wb bibif bicomd ax-mp ) ADZBDZBAEZECIKJBAFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    nbn3.1 $e |- ph $.
    $( Transfer falsehood via equivalence. $)
    nbn3 $p |- ( -. ps <-> ( ps <-> -. ph ) ) $=
      ( wn notnoti nbn ) ADBACEF $.
      $( [11-Sep-2006] $)
  $}

  ${
    mpbiran.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    ${
      mpbiran.2 $e |- ps $.
      $( Detach truth from conjunction in biconditional. $)
      mpbiran $p |- ( ph <-> ch ) $=
        ( wa biantrur bitr4i ) ABCFCDBCEGH $.
        $( [27-Feb-1996] $)
    $}

    ${
      mpbiran2.2 $e |- ch $.
      $( Detach truth from conjunction in biconditional. $)
      mpbiran2 $p |- ( ph <-> ps ) $=
        ( wa biantru bitr4i ) ABCFBDCBEGH $.
        $( [22-Feb-1996] $)
    $}

    ${
      mpbir2an.2 $e |- ps $.
      mpbir2an.3 $e |- ch $.
      $( Detach a conjunction of truths in a biconditional. $)
      mpbir2an $p |- ph $=
        ( mpbiran mpbir ) ACFABCDEGH $.
        $( [10-May-2005] $)
    $}
  $}

  ${
    mpbi2and.1 $e |- ( ph -> ( ( ps /\ ch ) <-> th ) ) $.
    mpbi2and.2 $e |- ( ph -> ps ) $.
    mpbi2and.3 $e |- ( ph -> ch ) $.
    $( Detach a conjunction of truths in a biconditional.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    mpbi2and $p |- ( ph -> th ) $=
      ( wa jca mpbid ) ABCHDABCFGIEJ $.
      $( [24-Nov-2012] $) $( [6-Nov-2011] $)

    $( Obsolete proof of ~ mpbi2and . $)
    mpbi2andOLD $p |- ( ph -> th ) $=
      ( wa biimpd mp2and ) ABCDFGABCHDEIJ $.
      $( [6-Nov-2011] $)
  $}

  ${
    mpbir2and.1 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    mpbir2and.2 $e |- ( ph -> ch ) $.
    mpbir2and.3 $e |- ( ph -> th ) $.
    $( Detach a conjunction of truths in a biconditional.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    mpbir2and $p |- ( ph -> ps ) $=
      ( wa jca mpbird ) ABCDHACDFGIEJ $.
      $( [24-Nov-2012] $) $( [6-Nov-2011] $)

    $( Obsolete proof of ~ mpbir2and . $)
    mpbir2andOLD $p |- ( ph -> ps ) $=
      ( wa biimprd mp2and ) ACDBFGABCDHEIJ $.
      $( [6-Nov-2011] $)
  $}

  $( Theorem *5.5 of [WhiteheadRussell] p. 125. $)
  pm5.5 $p |- ( ph -> ( ( ph -> ps ) <-> ps ) ) $=
    ( wi biimt bicomd ) ABABCABDE $.
    $( [3-Jan-2005] $)

  $( Theorem *5.62 of [WhiteheadRussell] p. 125.  (Contributed by Roy F.
     Longton, 21-Jun-2005.) $)
  pm5.62 $p |- ( ( ( ph /\ ps ) \/ -. ps ) <-> ( ph \/ -. ps ) ) $=
    ( wa wn wo ordir exmid mpbiran2 ) ABCBDZEAIEBIEABIFBGH $.
    $( [21-Jun-2005] $)

  $( Theorem *5.63 of [WhiteheadRussell] p. 125.  (The proof was
     shortened by Wolf Lammen, 25-Dec-2012.) $)
  pm5.63 $p |- ( ( ph \/ ps ) <-> ( ph \/ ( -. ph /\ ps ) ) ) $=
    ( wn wa wo ordi exmid mpbiran bicomi ) AACZBDEZABEZKAJELAJBFAGHI $.
    $( [25-Dec-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.63 . $)
  pm5.63OLD $p |- ( ( ph \/ ps ) <-> ( ph \/ ( -. ph /\ ps ) ) ) $=
    ( wo wn wa pm2.53 ancld orrd wi pm2.24 pm3.4 jaoi impbii ) ABCZAADZBEZCZNAP
    NOBABFGHQABAOBIPABJOBKLHM $.
    $( [3-Jan-2005] $)

  $( Obsolete proof of ~ biorf . $)
  biorfOLD $p |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wn wi wo biimt df-or syl6bbr ) ACZBIBDABEIBFABGH $.
    $( [23-Mar-1995] $)

  $( A wff is equivalent to its negated disjunction with falsehood. $)
  biortn $p |- ( ph -> ( ps <-> ( -. ph \/ ps ) ) ) $=
    ( wn wo wb notnot1 biorf syl ) AACZCBIBDEAFIBGH $.
    $( [9-Jul-2012] $)

  ${
    biorfi.1 $e |- -. ph $.
    $( A wff is equivalent to its disjunction with falsehood. $)
    biorfi $p |- ( ps <-> ( ps \/ ph ) ) $=
      ( wn wo wb orc orel2 impbid2 ax-mp ) ADZBBAEZFCKBLBAGABHIJ $.
      $( [23-Mar-1995] $)
  $}

  ${
    bianfi.1 $e |- -. ph $.
    $( A wff conjoined with falsehood is false.  (The proof was shortened by
       Wolf Lammen, 26-Nov-2012.) $)
    bianfi $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wa intnan 2false ) ABADCABCEF $.
      $( [26-Nov-2012] $) $( [5-Aug-1993] $)

    $( Obsolete proof of ~ bianfi . $)
    bianfiOLD $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wa pm2.21i simpr impbii ) ABADZAHCEBAFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bianfd.1 $e |- ( ph -> -. ps ) $.
    $( A wff conjoined with falsehood is false. $)
    bianfd $p |- ( ph -> ( ps <-> ( ps /\ ch ) ) ) $=
      ( wa pm2.21d simpl impbid1 ) ABBCEZABIDFBCGH $.
      $( [27-Mar-1995] $)
  $}

  $( Theorem *4.43 of [WhiteheadRussell] p. 119.  (The proof was shortened by
     Wolf Lammen, 26-Nov-2012.) $)
  pm4.43 $p |- ( ph <-> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) $=
    ( wn wa wo pm3.24 biorfi ordi bitri ) AABBCZDZEABEAJEDKABFGABJHI $.
    $( [26-Nov-2012] $) $( [3-Jan-2005] $)

  $( Obsolete version of ~ pm4.43 . $)
  pm4.43OLD $p |- ( ph <-> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) $=
    ( wo wn wa orc jca pm2.64 imp impbii ) AABCZABDZCZEAKMABFALFGKMAABHIJ $.
    $( [3-Jan-2005] $)

  $( Theorem *4.82 of [WhiteheadRussell] p. 122. $)
  pm4.82 $p |- ( ( ( ph -> ps ) /\ ( ph -> -. ps ) ) <-> -. ph ) $=
    ( wi wn wa pm2.65 imp pm2.21 jca impbii ) ABCZABDZCZEADZKMNABFGNKMABHALHIJ 
    $.
    $( [3-Jan-2005] $)

  $( Theorem *4.83 of [WhiteheadRussell] p. 122. $)
  pm4.83 $p |- ( ( ( ph -> ps ) /\ ( -. ph -> ps ) ) <-> ps ) $=
    ( wn wo wi wa exmid a1bi jaob bitr2i ) BAACZDZBEABEKBEFLBAGHABKIJ $.
    $( [3-Jan-2005] $)

  $( Negation inferred from embedded conjunct.  (The proof was shortened by
     Wolf Lammen, 25-Nov-2012.) $)
  pclem6 $p |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ps ) $=
    ( wn wa wb ibar nbbn sylib con2i ) BABACZDZEZBJKELCBJFAKGHI $.
    $( [25-Nov-2012] $) $( [20-Aug-1993] $)

  $( Negation inferred from embedded conjunct. $)
  pclem6OLD $p |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ps ) $=
    ( wn wa wb bi1 simpr syl6 pm2.01d wi bi2 exp3a com23 con3 syli mpd ) ABACZD
    ZEZQBCZSASARQARFBQGHIQSBAJTSBQASBQAARKLMBANOP $.
    $( [20-Aug-1993] $)

  $( A transitive law of equivalence.  Compare Theorem *4.22 of
     [WhiteheadRussell] p. 117. $)
  biantr $p |- ( ( ( ph <-> ps ) /\ ( ch <-> ps ) ) -> ( ph <-> ch ) ) $=
    ( wb id bibi2d biimparc ) CBDZACDABDHCBAHEFG $.
    $( [18-Aug-1993] $)

  $( Disjunction distributes over the biconditional.  An axiom of system DS in
     Vladimir Lifschitz, "On calculational proofs", Annals of Pure and Applied
     Logic, 113:207-224, 2002,
     ~ http://www.cs.utexas.edu/users/ai-lab/pub-view.php?PubID=26805 . $)
  orbidi $p |- ( ( ph \/ ( ps <-> ch ) ) <->
                ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) $=
    ( wb wo orc a1d impbid id orbi2d jaoi wi wa pm2.85 anim12i dfbi2 orbi2i 
    ordi bitri 3imtr4i impbii ) ABCDZEZABEZACEZDZAUFUBAUDUEAUEUDACFGAUDUEABFGHU
    BBCAUBIJKUDUELZUEUDLZMABCLZEZACBLZEZMZUFUCUGUJUHULABCNACBNOUDUEPUCAUIUKMZEU
    MUBUNABCPQAUIUKRSTUA $.
    $( [8-Jan-2005] $)

  $( Associative law for the biconditional.  An axiom of system DS in Vladimir
     Lifschitz, "On calculational proofs", Annals of Pure and Applied Logic,
     113:207-224, 2002,
     ~ http://www.cs.utexas.edu/users/ai-lab/pub-view.php?PubID=26805 .
     Interestingly, this law was not included in _Principia Mathematica_ but
     was apparently first noted by Jan Lukasiewicz circa 1923.  (The proof was
     shortened by Juha Arpiainen, 19-Jan-2006.) $)
  biass $p |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) $=
    ( wb pm5.501 bibi1d bitr3d wn nbbn a1i nbn2 3bitr3d pm2.61i ) AABDZCDZABCDZ
    DZDAPOQABNCABEFAPEGAHZBHZCDZPHZOQTUADRBCIJRSNCABKFAPKLM $.
    $( [21-Jan-2006] $) $( [8-Jan-2005] $)

  $( Lukasiewicz's shortest axiom for equivalential calculus.  Storrs McCall,
     ed., _Polish Logic 1920-1939_ (Oxford, 1967), p. 96. $)
  biluk $p |- ( ( ph <-> ps ) <-> ( ( ch <-> ps ) <-> ( ph <-> ch ) ) ) $=
    ( wb bicom bibi1i biass bitri mpbi bitr4i ) ABDZCBACDZDZDZCBDLDKCDZMDKNDOBA
    DZCDMKPCABEFBACGHKCMGICBLGJ $.
    $( [10-Jan-2005] $)

  $( Disjunction distributes over the biconditional.  Theorem *5.7 of
     [WhiteheadRussell] p. 125.  This theorem is similar to ~ orbidi .
     (Contributed by Roy F. Longton, 21-Jun-2005.) $)
  pm5.7 $p |- ( ( ( ph \/ ch ) <-> ( ps \/ ch ) ) <->
               ( ch \/ ( ph <-> ps ) ) ) $=
    ( wb wo orbidi orcom bibi12i bitr2i ) CABDECAEZCBEZDACEZBCEZDCABFJLKMCAGCBG
    HI $.
    $( [21-Jun-2005] $)

  $( Dijkstra-Scholten's Golden Rule for calculational proofs. $)
  bigolden $p |- ( ( ( ph /\ ps ) <-> ph ) <-> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wi wa wb wo pm4.71 pm4.72 bicom 3bitr3ri ) ABCAABDZEBABFEKAEABGABHAKIJ $.
    $( [10-Jan-2005] $)

  $( Theorem *5.71 of [WhiteheadRussell] p. 125.  (Contributed by Roy F.
     Longton, 23-Jun-2005.) $)
  pm5.71 $p |- ( ( ps -> -. ch ) -> ( ( ( ph \/ ps ) /\ ch ) <->
                ( ph /\ ch ) ) ) $=
    ( wn wo wa wb orel2 orc impbid1 anbi1d pm2.21 pm5.32rd ja ) BCDZABEZCFACFGB
    DZPACQPABAHABIJKOCPACPAGLMN $.
    $( [23-Jun-2005] $)

  $( Theorem *5.75 of [WhiteheadRussell] p. 126.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.)  (The proof was shortened by Wolf Lammen,
     23-Dec-2012.) $)
  pm5.75 $p |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) ->
                ( ( ph /\ -. ps ) <-> ch ) ) $=
    ( wo wb wn wa wi anbi1 orcom anbi1i pm5.61 bitri syl6bb pm4.71 biimpi 
    bicomd sylan9bbr ) ABCDZEZABFZGZCUAGZCUAHZCTUBSUAGZUCASUAIUECBDZUAGUCSUFUAB
    CJKCBLMNUDCUCUDCUCECUAOPQR $.
    $( [23-Dec-2012] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm5.75 . $)
  pm5.75OLD $p |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) ->
                ( ( ph /\ -. ps ) <-> ch ) ) $=
    ( wn wi wo wb wa bi1 pm5.6 sylibr adantl bi2 simpl olcd syl5 exp3a a2d 
    impcom jcad impbid ) CBDZEZABCFZGZHZAUBHZCUEUGCEZUCUEAUDEUHAUDIABCJKLUFCAUB
    UEUCCAEUECUBAUECUBAUEUDACUBHZAUDMUICBCUBNOPQRSUCUENTUA $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Removal of conjunct from one side of an equivalence. $)
  bimsc1 $p |- ( ( ( ph -> ps ) /\ ( ch <-> ( ps /\ ph ) ) )
               -> ( ch <-> ph ) ) $=
    ( wi wa wb simpr ancr impbid2 bibi2d biimpa ) ABDZCBAEZFCAFLMACLMABAGABHIJK
    $.
    $( [5-Aug-1993] $)

  ${
    ecase2d.1 $e |- ( ph -> ps ) $.
    ecase2d.2 $e |- ( ph -> -. ( ps /\ ch ) ) $.
    ecase2d.3 $e |- ( ph -> -. ( ps /\ th ) ) $.
    ecase2d.4 $e |- ( ph -> ( ta \/ ( ch \/ th ) ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Wolf
       Lammen, 22-Dec-2012.) $)
    ecase2d $p |- ( ph -> ta ) $=
      ( wo wn ioran wa wi imnan sylibr mpd sylanbrc ord mt3d ) AECDJZUAKCKZDKZA
      CDLABUBFABCMKBUBNGBCOPQABUCFABDMKBUCNHBDOPQRAEUAIST $.
      $( [22-Dec-2012] $) $( [21-Apr-1994] $)

    $( Obsolete proof of ~ ecase2d . $)
    ecase2dOLD $p |- ( ph -> ta ) $=
      ( wo wn ioran wa wi imnan sylibr mpd sylanbrc orcomd ord ) ACDJZKZEUBCKZD
      KZACDLABUCFABCMKBUCNGBCOPQABUDFABDMKBUDNHBDOPQRAUAEAEUAISTQ $.
      $( [21-Apr-1994] $)
  $}

  ${
    ecase3.1 $e |- ( ph -> ch ) $.
    ecase3.2 $e |- ( ps -> ch ) $.
    ecase3.3 $e |- ( -. ( ph \/ ps ) -> ch ) $.
    $( Inference for elimination by cases.  (The proof was shortened by Wolf
       Lammen, 26-Nov-2012.) $)
    ecase3 $p |- ch $=
      ( wo jaoi pm2.61i ) ABGCACBDEHFI $.
      $( [26-Nov-2012] $) $( [23-Mar-1995] $)

    $( Obsolete proof of ~ ecase3 . $)
    ecase3OLD $p |- ch $=
      ( wn wa wo ioran sylbir ex pm2.61ii ) ABCAGZBGZCNOHABIGCABJFKLDEM $.
      $( [23-Mar-1995] $)
  $}

  ${
    ecase.1 $e |- ( -. ph -> ch ) $.
    ecase.2 $e |- ( -. ps -> ch ) $.
    ecase.3 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Inference for elimination by cases. $)
    ecase $p |- ch $=
      ( ex pm2.61nii ) ABCABCFGDEH $.
      $( [13-Jul-2005] $)
  $}

  ${
    ecase3d.1 $e |- ( ph -> ( ps -> th ) ) $.
    ecase3d.2 $e |- ( ph -> ( ch -> th ) ) $.
    ecase3d.3 $e |- ( ph -> ( -. ( ps \/ ch ) -> th ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    ecase3d $p |- ( ph -> th ) $=
      ( wo jaod pm2.61d ) ABCHDABDCEFIGJ $.
      $( [12-May-2011] $) $( [2-May-1996] $)
  $}

  ${
    ecased.1 $e |- ( ph -> ( -. ps -> th ) ) $.
    ecased.2 $e |- ( ph -> ( -. ch -> th ) ) $.
    ecased.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    ecased $p |- ( ph -> th ) $=
      ( wn wa wo pm3.11 syl5 ecase3d ) ABHZCHZDEFABCIDNOJHGBCKLM $.
      $( [8-Oct-2012] $)
  $}

  ${
    ccase.1 $e |- ( ( ph /\ ps ) -> ta ) $.
    ccase.2 $e |- ( ( ch /\ ps ) -> ta ) $.
    ccase.3 $e |- ( ( ph /\ th ) -> ta ) $.
    ccase.4 $e |- ( ( ch /\ th ) -> ta ) $.
    $( Inference for combining cases. $)
    ccase $p |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) $=
      ( wo wa anddi or4 bitri jaoi sylbi ) ACJBDJKZABKZCBKZJZADKZCDKZJZJZEQRUAJ
      SUBJJUDACBDLRUASUBMNTEUCRESFGOUAEUBHIOOP $.
      $( [29-Jul-1999] $)
  $}

  ${
    ccased.1 $e |- ( ph -> ( ( ps /\ ch ) -> et ) ) $.
    ccased.2 $e |- ( ph -> ( ( th /\ ch ) -> et ) ) $.
    ccased.3 $e |- ( ph -> ( ( ps /\ ta ) -> et ) ) $.
    ccased.4 $e |- ( ph -> ( ( th /\ ta ) -> et ) ) $.
    $( Deduction for combining cases.  (The proof was shortened by NM,
       3-Dec-2012.) $)
    ccased $p |- ( ph -> ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) -> et ) ) $=
      ( wo wa wi com12 ccase ) BDKCEKLAFBCDEAFMABCLFGNADCLFHNABELFINADELFJNON 
      $.
      $( [3-Dec-2012] $) $( [9-May-2004] $)

    $( Obsolete proof of ~ ccased . $)
    ccasedOLD $p |- ( ph -> ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) -> et ) ) $=
      ( wa wo jaod anddi or4 bitri syl5ib ) ABCKZDCKZLZBEKZDEKZLZLZFBDLCELKZATF
      UCARFSGHMAUAFUBIJMMUERUALSUBLLUDBDCENRUASUBOPQ $.
      $( [9-May-2004] $)
  $}

  ${
    ccase2.1 $e |- ( ( ph /\ ps ) -> ta ) $.
    ccase2.2 $e |- ( ch -> ta ) $.
    ccase2.3 $e |- ( th -> ta ) $.
    $( Inference for combining cases. $)
    ccase2 $p |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) $=
      ( adantr adantl ccase ) ABCDEFCEBGIDEAHJDECHJK $.
      $( [29-Jul-1999] $)
  $}

  ${
    4cases.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    4cases.2 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    4cases.3 $e |- ( ( -. ph /\ ps ) -> ch ) $.
    4cases.4 $e |- ( ( -. ph /\ -. ps ) -> ch ) $.
    $( Inference eliminating two antecedents from the four possible cases that
       result from their true/false combinations. $)
    4cases $p |- ch $=
      ( pm2.61ian wn pm2.61i ) BCABCDFHABICEGHJ $.
      $( [25-Oct-2003] $)
  $}

  ${
    niabn.1 $e |- ph $.
    $( Miscellaneous inference relating falsehoods. $)
    niabn $p |- ( -. ps -> ( ( ch /\ ps ) <-> -. ph ) ) $=
      ( wa wn simpr pm2.24i pm5.21ni ) CBEBAFCBGABDHI $.
      $( [31-Mar-1994] $)
  $}

  $( Lemma for an alternate version of weak deduction theorem.  (The proof was
     shortened by Andrew Salmon, 7-May-2011.)  (The proof was shortened by Wolf
     Lammen, 4-Dec-2012.) $)
  dedlem0a $p |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) $=
    ( wa wi iba wb ax-1 biimt syl bitrd ) ABBADZCAEZLEZABFAMLNGACHMLIJK $.
    $( [4-Dec-2012] $) $( [2-Apr-1994] $)

  $( Obsolete proof of ~ dedlem0a .) $)
  dedlem0aOLD $p |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) $=
    ( wi wa pm3.21 a1dd ax-1 simpl imim12i com12 impbid ) ABCADZBAEZDZABNMABFGO
    ABAMNBACHBAIJKL $.
    $( [12-May-2011] $) $( [2-Apr-1994] $)

  $( Lemma for an alternate version of weak deduction theorem. $)
  dedlem0b $p |- ( -. ph -> ( ps <-> ( ( ps -> ph ) -> ( ch /\ ph ) ) ) ) $=
    ( wn wi wa pm2.21 imim2d com23 simpr imim12i con1d com12 impbid ) ADZBBAEZC
    AFZEZOPBQOAQBAQGHIROBRBABDPQABAGCAJKLMN $.
    $( [2-Apr-1994] $)

  $( Lemma for weak deduction theorem.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  dedlema $p |- ( ph -> ( ps <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) $=
    ( wa wn wo orc expcom wi simpl a1i pm2.24 adantld jaod impbid ) ABBADZCAEZD
    ZFZBASPRGHAPBRPBIABAJKAQBCABLMNO $.
    $( [12-May-2011] $) $( [26-Jun-2002] $)

  $( Lemma for weak deduction theorem.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  dedlemb $p |- ( -. ph -> ( ch <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) $=
    ( wn wa wo olc expcom pm2.21 adantld wi simpl a1i jaod impbid ) ADZCBAEZCPE
    ZFZCPSRQGHPQCRPACBACIJRCKPCPLMNO $.
    $( [12-May-2011] $) $( [15-May-1999] $)

  ${
    elimh.1 $e |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( ch <-> ta ) ) $.
    elimh.2 $e |- ( ( ps <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( th <-> ta ) ) $.
    elimh.3 $e |- th $.
    $( Hypothesis builder for weak deduction theorem.  For more information,
       see the Deduction Theorem link on the Metamath Proof Explorer home
       page. $)
    elimh $p |- ta $=
      ( wa wn wo wb dedlema syl ibi dedlemb mpbii pm2.61i ) CECECAACIBCJZIKZLCE
      LCABMFNOSDEHSBTLDELCABPGNQR $.
      $( [26-Jun-2002] $)
  $}

  ${
    dedt.1 $e |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( th <-> ta ) ) $.
    dedt.2 $e |- ta $.
    $( The weak deduction theorem.  For more information, see the Deduction
       Theorem link on the Metamath Proof Explorer home page. $)
    dedt $p |- ( ch -> th ) $=
      ( wa wn wo wb dedlema mpbiri syl ) CAACHBCIHJKZDCABLODEGFMN $.
      $( [26-Jun-2002] $)
  $}

  $( Contraposition.  Theorem *2.16 of [WhiteheadRussell] p. 103.  This version
     of ~ con3 demonstrates the use of the weak deduction theorem to derive it
     from ~ con3i . $)
  con3th $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi wn wa wo wb id notbid imbi1d imbi2d elimh con3i dedt ) BAABCZBDZADZCBO
    EAODEFZDZQCBRGZPSQTBRTHZIJARBAOAACARCTBRAUAKARGZARAUBHKAHLMN $.
    $( [27-Jun-2002] $)

  $( The consensus theorem.  This theorem and its dual (with ` \/ ` and ` /\ `
     interchanged) are commonly used in computer logic design to eliminate
     redundant terms from Boolean expressions.  Specifically, we prove that the
     term ` ( ps /\ ch ) ` on the left-hand side is redundant.  (The proof was
     shortened by Andrew Salmon, 13-May-2011.) $)
  consensus $p |- ( ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) <->
                      ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) $=
    ( wa wn wo id pm3.21 con3d com12 anim1d imp con2i oran sylibr jaoi orc 
    impbii ) ABDZAEZCDZFZBCDZFUBUBUBUCUBGUCSEZUAEZDZEUBUFUCUDUEUCEUDUCUAUDBTCBU
    DTBASBAHIJKILMSUANOPUBUCQR $.
    $( [16-May-2011] $) $( [16-May-2003] $)

  $( Theorem *4.42 of [WhiteheadRussell] p. 119.  (Contributed by Roy F.
     Longton, 21-Jun-2005.) $)
  pm4.42 $p |- ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) $=
    ( wa wn wo wb dedlema dedlemb pm2.61i ) BAABCABDCEFBAAGBAAHI $.
    $( [21-Jun-2005] $)

  ${
    ninba.1 $e |- ph $.
    $( Miscellaneous inference relating falsehoods. $)
    ninba $p |- ( -. ps -> ( -. ph <-> ( ch /\ ps ) ) ) $=
      ( wn wa niabn bicomd ) BECBFAEABCDGH $.
      $( [31-Mar-1994] $)
  $}

  ${
    prlem1.1 $e |- ( ph -> ( et <-> ch ) ) $.
    prlem1.2 $e |- ( ps -> -. th ) $.
    $( A specialized lemma for set theory (to derive the Axiom of Pairing).
       (The proof was shortened by Andrew Salmon, 13-May-2011.) $)
    prlem1 $p |- ( ph -> ( ps ->
                  ( ( ( ps /\ ch ) \/ ( th /\ ta ) ) -> et ) ) ) $=
      ( wa wo wi biimprd adantld adantr pm2.21d adantrd adantl jaod ex ) ABBCIZ
      DEIZJFKABITFUAATFKBACFBAFCGLMNBUAFKABDFEBDFHOPQRS $.
      $( [16-May-2011] $) $( [18-Oct-1995] $)
  $}

  $( A specialized lemma for set theory (to derive the Axiom of Pairing).  (The
     proof was shortened by Andrew Salmon, 13-May-2011.)  (The proof was
     shortened by Wolf Lammen, 9-Dec-2012.) $)
  prlem2 $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) ) $=
    ( wa wo simpl orim12i pm4.71ri ) ABEZCDEZFACFJAKCABGCDGHI $.
    $( [9-Dec-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ prlem2 . $)
  prlem2OLD $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) ) $=
    ( wa wo orc adantr olc jaoi id jca simpr impbii ) ABEZCDEZFZACFZQEQRQORPARB
    ACGHCRDCAIHJQKLRQMN $.
    $( [16-May-2011] $) $( [5-Aug-1993] $)

  ${
    oplem1.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    oplem1.2 $e |- ( ph -> ( th \/ ta ) ) $.
    oplem1.3 $e |- ( ps <-> th ) $.
    oplem1.4 $e |- ( ch -> ( th <-> ta ) ) $.
    $( A specialized lemma for set theory (ordered pair theorem).  (The proof
       was shortened by Wolf Lammen, 8-Dec-2012.) $)
    oplem1 $p |- ( ph -> ps ) $=
      ( wn wi wa ord notbii syl5ibr jcad biimpar syl6 pm2.18 syl sylibr ) ADBAD
      JZDKDAUBCELDAUBCEABJCUBABCFMBDHNOADEGMPCDEIQRDSTHUA $.
      $( [8-Dec-2012] $) $( [18-Oct-1995] $)

    $( Obsolete proof of ~ oplem1 . $)
    oplem1OLD $p |- ( ph -> ps ) $=
      ( wn wi wa ord notbii syl5ib jcad syl5bb biimpar syl6 pm2.18 syl ) ABJZBK
      BAUBCELBAUBCEABCFMADJEUBADEGMBDHNOPCBECDEBIHQRSBTUA $.
      $( [18-Oct-1995] $)
  $}

  $( Lemma used in construction of real numbers.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  rnlem $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
  ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) $=
    ( wa an4 biimpi an42 biimpri jca adantl impbii ) ABECDEEZACEBDEEZADEBCEEZEM
    NOMNABCDFGOMADBCHZIJOMNOMPGKL $.
    $( [26-Jun-2011] $) $( [4-Sep-1995] $)

  $( A single axiom for Boolean algebra known as DN_1.  See
     ~ http://www-unix.mcs.anl.gov/~~mccune/papers/basax/v12.pdf .
     (Contributed by Jeffrey Hankins, 3-Jul-2009.)  (The proof was shortened by
     Andrew Salmon, 13-May-2011.) $)
  dn1 $p |- ( -. ( -. ( -. ( ph \/ ps ) \/ ch ) \/
            -. ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> ch ) $=
    ( wo wn wa anor wi pm2.45 pm2.21d simpl sylbir a1i jaod ax-1 jaoi imp olc 
    orc ancli sylib olcd jca impbii bitr3i ) ABEFZCEZFACFCDEZFEFZEZFEFUHUKGZCUH
    UKHULCUHUKCUGUKCICUGACUJUGACABJKUJCIUGUJCUIGZCCUIHZCUILMNOCUKPQRCUHUKCUGSCU
    JACUMUJCUICDTUAUNUBUCUDUEUF $.
    $( [16-May-2011] $) $( [22-Jun-2005] $)

  $( Simplify an implication between two implications when the antecedent of
     the first is a consequence of the antecedent of the second.  The reverse
     form is useful in producing the successor step in induction proofs.
     (Contributed by Paul Chapman, 22-Jun-2011.) $)
  imim21b $p |- ( ( ps -> ph ) -> ( ( ( ph -> ch ) -> ( ps -> th ) ) <->
                                    ( ps -> ( ch -> th ) ) ) ) $=
    ( wi wa wb pm5.5 imim2i pm5.32rd ancom syl6bb imbi1d impexp 3bitr3g ) BAEZA
    CEZBFZDEBCFZDEQBDEEBCDEEPRSDPRCBFSPBQCAQCGBACHIJCBKLMQBDNBCDNO $.
    $( [22-Jun-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Abbreviated conjunction and disjunction of three wff's
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff definition to include 3-way disjunction ('or'). $)
  w3o $a wff ( ph \/ ps \/ ch ) $.
  $( Extend wff definition to include 3-way conjunction ('and'). $)
  w3a $a wff ( ph /\ ps /\ ch ) $.

  $( These abbreviations help eliminate parentheses to aid readability. $)

  $( Define disjunction ('or') of 3 wff's.  Definition *2.33 of
     [WhiteheadRussell] p. 105.  This abbreviation reduces the number of
     parentheses and emphasizes that the order of bracketing is not important
     by virtue of the associative law ~ orass . $)
  df-3or $a |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) $.

  $( Define conjunction ('and') of 3 wff.s.  Definition *4.34 of
     [WhiteheadRussell] p. 118.  This abbreviation reduces the number of
     parentheses and emphasizes that the order of bracketing is not important
     by virtue of the associative law ~ anass . $)
  df-3an $a |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) $.

  $( Associative law for triple disjunction. $)
  3orass $p |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) $=
    ( w3o wo df-3or orass bitri ) ABCDABECEABCEEABCFABCGH $.
    $( [8-Apr-1994] $)

  $( Associative law for triple conjunction. $)
  3anass $p |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( w3a wa df-3an anass bitri ) ABCDABECEABCEEABCFABCGH $.
    $( [8-Apr-1994] $)

  $( Rotation law for triple conjunction. $)
  3anrot $p |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ch /\ ph ) ) $=
    ( wa w3a ancom 3anass df-3an 3bitr4i ) ABCDZDJADABCEBCAEAJFABCGBCAHI $.
    $( [8-Apr-1994] $)

  $( Rotation law for triple disjunction. $)
  3orrot $p |- ( ( ph \/ ps \/ ch ) <-> ( ps \/ ch \/ ph ) ) $=
    ( wo w3o orcom 3orass df-3or 3bitr4i ) ABCDZDJADABCEBCAEAJFABCGBCAHI $.
    $( [4-Apr-1995] $)

  $( Commutation law for triple conjunction. $)
  3ancoma $p |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) $=
    ( wa w3a ancom anbi1i df-3an 3bitr4i ) ABDZCDBADZCDABCEBACEJKCABFGABCHBACHI
    $.
    $( [21-Apr-1994] $)

  $( Commutation law for triple conjunction. $)
  3ancomb $p |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ch /\ ps ) ) $=
    ( w3a 3ancoma 3anrot bitri ) ABCDBACDACBDABCEBACFG $.
    $( [21-Apr-1994] $)

  $( Commutation law for triple disjunction.  (Contributed by Scott Fenton,
     20-Apr-2011.) $)
  3orcomb $p |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ch \/ ps ) ) $=
    ( wo w3o orcom orbi2i 3orass 3bitr4i ) ABCDZDACBDZDABCEACBEJKABCFGABCHACBHI
    $.
    $( [20-Feb-2012] $) $( [20-Apr-2011] $)

  $( Reversal law for triple conjunction. $)
  3anrev $p |- ( ( ph /\ ps /\ ch ) <-> ( ch /\ ps /\ ph ) ) $=
    ( w3a 3ancoma 3anrot bitr4i ) ABCDBACDCBADABCECBAFG $.
    $( [21-Apr-1994] $)

  $( Triple conjunction expressed in terms of triple disjunction.  (Contributed
     by Jeff Hankins, 15-Aug-2009.) $)
  3anor $p |- ( ( ph /\ ps /\ ch ) <-> -. ( -. ph \/ -. ps \/ -. ch ) ) $=
    ( wa wn wo w3a w3o anor ianor orbi1i notbii bitri df-3an df-3or 3bitr4i ) 
    ABDZCDZAEZBEZFZCEZFZEZABCGSTUBHZERQEZUBFZEUDQCIUGUCUFUAUBABJKLMABCNUEUCSTUB
    OLP $.
    $( [2-Mar-2011] $) $( [28-Jul-2009] $)

  $( Negated triple conjunction expressed in terms of triple disjunction.
     (Contributed by Jeff Hankins, 15-Aug-2009.)  (The proof was shortened by
     Andrew Salmon, 13-May-2011.) $)
  3ianor $p |- ( -. ( ph /\ ps /\ ch ) <-> ( -. ph \/ -. ps \/ -. ch ) ) $=
    ( wn w3o w3a 3anor con2bii bicomi ) ADBDCDEZABCFZDKJABCGHI $.
    $( [16-May-2011] $) $( [28-Jul-2009] $)

  $( Negated triple disjunction as triple conjunction.  (Contributed by Scott
     Fenton, 19-Apr-2011.) $)
  3ioran $p |- ( -. ( ph \/ ps \/ ch ) <-> ( -. ph /\ -. ps /\ -. ch ) ) $=
    ( wo wn wa w3o w3a ioran anbi1i df-3or notbii bitri df-3an 3bitr4i ) ABDZEZ
    CEZFZAEZBEZFZRFABCGZEZTUARHQUBRABIJUDPCDZESUCUEABCKLPCIMTUARNO $.
    $( [19-Apr-2011] $)

  $( Triple disjunction in terms of triple conjunction. $)
  3oran $p |- ( ( ph \/ ps \/ ch ) <-> -. ( -. ph /\ -. ps /\ -. ch ) ) $=
    ( wn w3a w3o 3ioran con1bii bicomi ) ADBDCDEZDABCFZKJABCGHI $.
    $( [8-Oct-2012] $)

  $( Simplification of triple conjunction. $)
  3simpa $p |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) $=
    ( w3a wa df-3an simplbi ) ABCDABECABCFG $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  3simpb $p |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ch ) ) $=
    ( w3a wa 3ancomb 3simpa sylbi ) ABCDACBDACEABCFACBGH $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  3simpc $p |- ( ( ph /\ ps /\ ch ) -> ( ps /\ ch ) ) $=
    ( w3a wa 3anrot 3simpa sylbi ) ABCDBCADBCEABCFBCAGH $.
    $( [16-May-2011] $) $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp1 $p |- ( ( ph /\ ps /\ ch ) -> ph ) $=
    ( w3a 3simpa simpld ) ABCDABABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp2 $p |- ( ( ph /\ ps /\ ch ) -> ps ) $=
    ( w3a 3simpa simprd ) ABCDABABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp3 $p |- ( ( ph /\ ps /\ ch ) -> ch ) $=
    ( w3a 3simpc simprd ) ABCDBCABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl1 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ph ) $=
    ( w3a simp1 adantr ) ABCEADABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl2 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ps ) $=
    ( w3a simp2 adantr ) ABCEBDABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl3 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ch ) $=
    ( w3a simp3 adantr ) ABCECDABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr1 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ps ) $=
    ( w3a simp1 adantl ) BCDEBABCDFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr2 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ch ) $=
    ( w3a simp2 adantl ) BCDECABCDFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr3 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> th ) $=
    ( w3a simp3 adantl ) BCDEDABCDFG $.
    $( [17-Nov-2009] $)

  ${
    3simp1i.1 $e |- ( ph /\ ps /\ ch ) $.
    $( Infer a conjunct from a triple conjunction. $)
    simp1i $p |- ph $=
      ( w3a simp1 ax-mp ) ABCEADABCFG $.
      $( [19-Apr-2005] $)

    $( Infer a conjunct from a triple conjunction. $)
    simp2i $p |- ps $=
      ( w3a simp2 ax-mp ) ABCEBDABCFG $.
      $( [19-Apr-2005] $)

    $( Infer a conjunct from a triple conjunction. $)
    simp3i $p |- ch $=
      ( w3a simp3 ax-mp ) ABCECDABCFG $.
      $( [19-Apr-2005] $)
  $}

  ${
    3simp1d.1 $e |- ( ph -> ( ps /\ ch /\ th ) ) $.
    $( Deduce a conjunct from a triple conjunction. $)
    simp1d $p |- ( ph -> ps ) $=
      ( w3a simp1 syl ) ABCDFBEBCDGH $.
      $( [4-Sep-2005] $)

    $( Deduce a conjunct from a triple conjunction. $)
    simp2d $p |- ( ph -> ch ) $=
      ( w3a simp2 syl ) ABCDFCEBCDGH $.
      $( [4-Sep-2005] $)

    $( Deduce a conjunct from a triple conjunction. $)
    simp3d $p |- ( ph -> th ) $=
      ( w3a simp3 syl ) ABCDFDEBCDGH $.
      $( [4-Sep-2005] $)
  $}

  ${
    3simp1bi.1 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp1bi $p |- ( ph -> ps ) $=
      ( w3a biimpi simp1d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)

    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp2bi $p |- ( ph -> ch ) $=
      ( w3a biimpi simp2d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)

    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp3bi $p |- ( ph -> th ) $=
      ( w3a biimpi simp3d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    3adant.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adant1 $p |- ( ( th /\ ph /\ ps ) -> ch ) $=
      ( w3a wa 3simpc syl ) DABFABGCDABHEI $.
      $( [16-Jul-1995] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2 $p |- ( ( ph /\ th /\ ps ) -> ch ) $=
      ( w3a wa 3simpb syl ) ADBFABGCADBHEI $.
      $( [16-Jul-1995] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3 $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( w3a wa 3simpa syl ) ABDFABGCABDHEI $.
      $( [16-Jul-1995] $)
  $}

  ${
    3ad2ant.1 $e |- ( ph -> ch ) $.
    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant1 $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( adantr 3adant2 ) ADCBACDEFG $.
      $( [21-Apr-2005] $)

    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant2 $p |- ( ( ps /\ ph /\ th ) -> ch ) $=
      ( adantr 3adant1 ) ADCBACDEFG $.
      $( [21-Apr-2005] $)

    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant3 $p |- ( ( ps /\ th /\ ph ) -> ch ) $=
      ( adantl 3adant1 ) DACBACDEFG $.
      $( [21-Apr-2005] $)
  $}

  $( Simplification of triple conjunction. $)
  simp1l $p |- ( ( ( ph /\ ps ) /\ ch /\ th ) -> ph ) $=
    ( wa simpl 3ad2ant1 ) ABECADABFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp1r $p |- ( ( ( ph /\ ps ) /\ ch /\ th ) -> ps ) $=
    ( wa simpr 3ad2ant1 ) ABECBDABFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp2l $p |- ( ( ph /\ ( ps /\ ch ) /\ th ) -> ps ) $=
    ( wa simpl 3ad2ant2 ) BCEABDBCFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp2r $p |- ( ( ph /\ ( ps /\ ch ) /\ th ) -> ch ) $=
    ( wa simpr 3ad2ant2 ) BCEACDBCFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp3l $p |- ( ( ph /\ ps /\ ( ch /\ th ) ) -> ch ) $=
    ( wa simpl 3ad2ant3 ) CDEACBCDFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp3r $p |- ( ( ph /\ ps /\ ( ch /\ th ) ) -> th ) $=
    ( wa simpr 3ad2ant3 ) CDEADBCDFG $.
    $( [9-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp11 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ph ) $=
    ( w3a simp1 3ad2ant1 ) ABCFDAEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp12 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ps ) $=
    ( w3a simp2 3ad2ant1 ) ABCFDBEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp13 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ch ) $=
    ( w3a simp3 3ad2ant1 ) ABCFDCEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp21 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> ps ) $=
    ( w3a simp1 3ad2ant2 ) BCDFABEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp22 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> ch ) $=
    ( w3a simp2 3ad2ant2 ) BCDFACEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp23 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> th ) $=
    ( w3a simp3 3ad2ant2 ) BCDFADEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp31 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp1 3ad2ant3 ) CDEFACBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp32 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> th ) $=
    ( w3a simp2 3ad2ant3 ) CDEFADBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp33 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> ta ) $=
    ( w3a simp3 3ad2ant3 ) CDEFAEBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of conjunction. $)
  simpll1 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ph ) $=
    ( w3a wa simpl1 adantr ) ABCFDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpll2 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ps ) $=
    ( w3a wa simpl2 adantr ) ABCFDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpll3 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ch ) $=
    ( w3a wa simpl3 adantr ) ABCFDGCEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr1 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ph ) $=
    ( w3a wa simpr1 adantr ) DABCFGAEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr2 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ps ) $=
    ( w3a wa simpr2 adantr ) DABCFGBEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr3 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ch ) $=
    ( w3a wa simpr3 adantr ) DABCFGCEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl1 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ph ) $=
    ( w3a wa simpl1 adantl ) ABCFDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl2 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ps ) $=
    ( w3a wa simpl2 adantl ) ABCFDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl3 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ch ) $=
    ( w3a wa simpl3 adantl ) ABCFDGCEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr1 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a wa simpr1 adantl ) DABCFGAEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr2 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a wa simpr2 adantl ) DABCFGBEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr3 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a wa simpr3 adantl ) DABCFGCEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl1l $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta ) -> ph ) $=
    ( wa w3a simp1l adantr ) ABFCDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl1r $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta ) -> ps ) $=
    ( wa w3a simp1r adantr ) ABFCDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl2l $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta ) -> ph ) $=
    ( wa w3a simp2l adantr ) CABFDGAECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl2r $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta ) -> ps ) $=
    ( wa w3a simp2r adantr ) CABFDGBECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl3l $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta ) -> ph ) $=
    ( wa w3a simp3l adantr ) CDABFGAECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl3r $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta ) -> ps ) $=
    ( wa w3a simp3r adantr ) CDABFGBECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr1l $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ph ) $=
    ( wa w3a simp1l adantl ) ABFCDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr1r $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ps ) $=
    ( wa w3a simp1r adantl ) ABFCDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr2l $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ph ) $=
    ( wa w3a simp2l adantl ) CABFDGAECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr2r $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ps ) $=
    ( wa w3a simp2r adantl ) CABFDGBECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr3l $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa w3a simp3l adantl ) CDABFGAECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr3r $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa w3a simp3r adantl ) CDABFGBECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1ll $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th /\ ta ) -> ph ) $=
    ( wa simpll 3ad2ant1 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1lr $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th /\ ta ) -> ps ) $=
    ( wa simplr 3ad2ant1 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1rl $p |- ( ( ( ch /\ ( ph /\ ps ) ) /\ th /\ ta ) -> ph ) $=
    ( wa simprl 3ad2ant1 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1rr $p |- ( ( ( ch /\ ( ph /\ ps ) ) /\ th /\ ta ) -> ps ) $=
    ( wa simprr 3ad2ant1 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2ll $p |- ( ( th /\ ( ( ph /\ ps ) /\ ch ) /\ ta ) -> ph ) $=
    ( wa simpll 3ad2ant2 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2lr $p |- ( ( th /\ ( ( ph /\ ps ) /\ ch ) /\ ta ) -> ps ) $=
    ( wa simplr 3ad2ant2 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2rl $p |- ( ( th /\ ( ch /\ ( ph /\ ps ) ) /\ ta ) -> ph ) $=
    ( wa simprl 3ad2ant2 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2rr $p |- ( ( th /\ ( ch /\ ( ph /\ ps ) ) /\ ta ) -> ps ) $=
    ( wa simprr 3ad2ant2 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3ll $p |- ( ( th /\ ta /\ ( ( ph /\ ps ) /\ ch ) ) -> ph ) $=
    ( wa simpll 3ad2ant3 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3lr $p |- ( ( th /\ ta /\ ( ( ph /\ ps ) /\ ch ) ) -> ps ) $=
    ( wa simplr 3ad2ant3 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3rl $p |- ( ( th /\ ta /\ ( ch /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa simprl 3ad2ant3 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3rr $p |- ( ( th /\ ta /\ ( ch /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa simprr 3ad2ant3 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl11 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ph ) $=
    ( w3a simp11 adantr ) ABCGDEGAFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl12 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ps ) $=
    ( w3a simp12 adantr ) ABCGDEGBFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl13 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ch ) $=
    ( w3a simp13 adantr ) ABCGDEGCFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl21 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ph ) $=
    ( w3a simp21 adantr ) DABCGEGAFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl22 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ps ) $=
    ( w3a simp22 adantr ) DABCGEGBFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl23 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ch ) $=
    ( w3a simp23 adantr ) DABCGEGCFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl31 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ph ) $=
    ( w3a simp31 adantr ) DEABCGGAFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl32 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ps ) $=
    ( w3a simp32 adantr ) DEABCGGBFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl33 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ch ) $=
    ( w3a simp33 adantr ) DEABCGGCFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr11 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ph ) $=
    ( w3a simp11 adantl ) ABCGDEGAFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr12 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ps ) $=
    ( w3a simp12 adantl ) ABCGDEGBFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr13 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp13 adantl ) ABCGDEGCFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr21 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ph ) $=
    ( w3a simp21 adantl ) DABCGEGAFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr22 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ps ) $=
    ( w3a simp22 adantl ) DABCGEGBFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr23 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ch ) $=
    ( w3a simp23 adantl ) DABCGEGCFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr31 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a simp31 adantl ) DEABCGGAFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr32 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a simp32 adantl ) DEABCGGBFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr33 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a simp33 adantl ) DEABCGGCFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l1 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant1 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l2 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant1 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l3 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant1 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r1 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant1 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r2 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant1 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r3 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant1 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l1 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant2 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l2 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant2 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l3 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant2 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r1 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant2 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r2 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant2 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r3 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant2 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l1 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant3 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l2 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant3 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l3 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant3 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r1 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant3 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r2 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant3 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r3 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant3 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp11l $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant1 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp11r $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant1 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp12l $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant1 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp12r $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant1 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp13l $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant1 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp13r $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant1 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp21l $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) /\ et ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant2 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp21r $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) /\ et ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant2 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp22l $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) /\ et ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant2 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp22r $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) /\ et ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant2 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp23l $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) /\ et ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant2 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp23r $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) /\ et ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant2 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp31l $p |- ( ( ta /\ et /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant3 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp31r $p |- ( ( ta /\ et /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant3 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp32l $p |- ( ( ta /\ et /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant3 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp32r $p |- ( ( ta /\ et /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant3 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp33l $p |- ( ( ta /\ et /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant3 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp33r $p |- ( ( ta /\ et /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant3 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp111 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp11 3ad2ant1 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp112 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp12 3ad2ant1 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp113 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp13 3ad2ant1 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp121 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp21 3ad2ant1 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp122 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp22 3ad2ant1 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp123 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp23 3ad2ant1 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp131 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp31 3ad2ant1 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp132 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp32 3ad2ant1 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp133 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp33 3ad2ant1 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp211 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ph ) $=
    ( w3a simp11 3ad2ant2 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp212 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ps ) $=
    ( w3a simp12 3ad2ant2 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp213 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ch ) $=
    ( w3a simp13 3ad2ant2 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp221 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ph ) $=
    ( w3a simp21 3ad2ant2 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp222 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ps ) $=
    ( w3a simp22 3ad2ant2 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp223 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ch ) $=
    ( w3a simp23 3ad2ant2 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp231 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ph ) $=
    ( w3a simp31 3ad2ant2 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp232 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ps ) $=
    ( w3a simp32 3ad2ant2 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp233 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ch ) $=
    ( w3a simp33 3ad2ant2 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp311 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ph ) $=
    ( w3a simp11 3ad2ant3 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp312 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ps ) $=
    ( w3a simp12 3ad2ant3 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp313 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp13 3ad2ant3 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp321 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ph ) $=
    ( w3a simp21 3ad2ant3 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp322 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ps ) $=
    ( w3a simp22 3ad2ant3 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp323 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ch ) $=
    ( w3a simp23 3ad2ant3 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp331 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a simp31 3ad2ant3 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp332 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a simp32 3ad2ant3 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp333 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a simp33 3ad2ant3 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  ${
    3adantl.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       NM, 4-Dec-2012.) $)
    3adantl1 $p |- ( ( ( ta /\ ph /\ ps ) /\ ch ) -> th ) $=
      ( wa w3a 3simpc sylan ) ABGCDEABHFEABIJ $.
      $( [4-Dec-2012] $) $( [24-Feb-2005] $)

    $( Obsolete proof of ~ 3adantl1 . $)
    3adantl1OLD $p |- ( ( ( ta /\ ph /\ ps ) /\ ch ) -> th ) $=
      ( w3a wi wa ex 3adant1 imp ) EABGCDABCDHEABICDFJKL $.
      $( [24-Feb-2005] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       NM, 5-Dec-2012.) $)
    3adantl2 $p |- ( ( ( ph /\ ta /\ ps ) /\ ch ) -> th ) $=
      ( wa w3a 3simpb sylan ) ABGCDAEBHFAEBIJ $.
      $( [5-Dec-2012] $) $( [24-Feb-2005] $)

    $( Obsolete proof of ~ 3adantl2 . $)
    3adantl2OLD $p |- ( ( ( ph /\ ta /\ ps ) /\ ch ) -> th ) $=
      ( w3a wi wa ex 3adant2 imp ) AEBGCDABCDHEABICDFJKL $.
      $( [24-Feb-2005] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       NM, 5-Dec-2012.) $)
    3adantl3 $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( wa w3a 3simpa sylan ) ABGCDABEHFABEIJ $.
      $( [5-Dec-2012] $) $( [24-Feb-2005] $)

    $( Obsolete proof of ~ 3adantl3 . $)
    3adantl3OLD $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( w3a wi wa ex 3adant3 imp ) ABEGCDABCDHEABICDFJKL $.
      $( [24-Feb-2005] $)
  $}

  ${
    3adantr.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       NM, 7-Dec-2012.) $)
    3adantr1 $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( wa w3a 3simpc sylan2 ) ABCGDEBCHFEBCIJ $.
      $( [7-Dec-2012] $) $( [27-Apr-2005] $)

    $( Obsolete proof of ~ 3adantr1 . $)
    3adantr1OLD $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( w3a wa ancoms 3adantl1 ) EBCGADBCADEABCHDFIJI $.
      $( [27-Apr-2005] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       NM, 7-Dec-2012.) $)
    3adantr2 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( wa w3a 3simpb sylan2 ) ABCGDBECHFBECIJ $.
      $( [7-Dec-2012] $) $( [27-Apr-2005] $)

    $( Obsolete proof of ~ 3adantr1 . $)
    3adantr2OLD $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( w3a wa ancoms 3adantl2 ) BECGADBCADEABCHDFIJI $.
      $( [27-Apr-2005] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       NM, 7-Dec-2012.) $)
    3adantr3 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( wa w3a 3simpa sylan2 ) ABCGDBCEHFBCEIJ $.
      $( [7-Dec-2012] $) $( [27-Apr-2005] $)

    $( Obsolete proof of ~ 3adantr1 . $)
    3adantr3OLD $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( w3a wa ancoms 3adantl3 ) BCEGADBCADEABCHDFIJI $.
      $( [27-Apr-2005] $)
  $}

  ${
    3ad2antl.1 $e |- ( ( ph /\ ch ) -> th ) $.
    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl1 $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( adantlr 3adantl2 ) AECDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl2 $p |- ( ( ( ps /\ ph /\ ta ) /\ ch ) -> th ) $=
      ( adantlr 3adantl1 ) AECDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl3 $p |- ( ( ( ps /\ ta /\ ph ) /\ ch ) -> th ) $=
      ( adantll 3adantl1 ) EACDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr1 $p |- ( ( ph /\ ( ch /\ ps /\ ta ) ) -> th ) $=
      ( adantrr 3adantr3 ) ACBDEACDBFGH $.
      $( [25-Dec-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr2 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( adantrl 3adantr3 ) ABCDEACDBFGH $.
      $( [27-Dec-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr3 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( adantrl 3adantr1 ) AECDBACDEFGH $.
      $( [30-Dec-2007] $)
  $}

  ${
    3anibar.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ( ch /\ ta ) ) ) $.
    $( Remove a hypothesis from the second member of a biimplication.
       (Contributed by FL, 22-Jul-2008.) $)
    3anibar $p |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $=
      ( w3a wa simp3 biantrurd bitr4d ) ABCGZDCEHEFLCEABCIJK $.
      $( [2-Mar-2011] $) $( [14-Jul-2008] $)
  $}

  $( Introduction in triple disjunction. $)
  3mix1 $p |- ( ph -> ( ph \/ ps \/ ch ) ) $=
    ( wo w3o orc 3orass sylibr ) AABCDZDABCEAIFABCGH $.
    $( [4-Apr-1995] $)

  $( Introduction in triple disjunction. $)
  3mix2 $p |- ( ph -> ( ps \/ ph \/ ch ) ) $=
    ( w3o 3mix1 3orrot sylibr ) AACBDBACDACBEBACFG $.
    $( [4-Apr-1995] $)

  $( Introduction in triple disjunction. $)
  3mix3 $p |- ( ph -> ( ps \/ ch \/ ph ) ) $=
    ( w3o 3mix1 3orrot sylib ) AABCDBCADABCEABCFG $.
    $( [4-Apr-1995] $)

  ${
    3pm3.2i.1 $e |- ph $.
    3pm3.2i.2 $e |- ps $.
    3pm3.2i.3 $e |- ch $.
    $( Infer conjunction of premises. $)
    3pm3.2i $p |- ( ph /\ ps /\ ch ) $=
      ( w3a wa df-3an pm3.2i mpbir2an ) ABCGABHCABCIABDEJFK $.
      $( [10-Feb-1995] $)
  $}

  ${
    $( ~ pm3.2 for a triple conjunction.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    pm3.2an3 $p |- ( ph -> ( ps -> ( ch -> ( ph /\ ps /\ ch ) ) ) ) $=
      ( wa w3a wi pm3.2 ex df-3an bicomi syl8ib ) ABCABDZCDZABCEZABCMFLCGHNMABC
      IJK $.
      $( [24-Oct-2011] $)
  $}

  ${
    3jca.1 $e |- ( ph -> ps ) $.
    3jca.2 $e |- ( ph -> ch ) $.
    3jca.3 $e |- ( ph -> th ) $.
    $( Join consequents with conjunction. $)
    3jca $p |- ( ph -> ( ps /\ ch /\ th ) ) $=
      ( wa w3a jca31 df-3an sylibr ) ABCHDHBCDIABCDEFGJBCDKL $.
      $( [9-Apr-1994] $)
  $}

  ${
    3jcad.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jcad.2 $e |- ( ph -> ( ps -> th ) ) $.
    3jcad.3 $e |- ( ph -> ( ps -> ta ) ) $.
    $( Deduction conjoining the consequents of three implications. $)
    3jcad $p |- ( ph -> ( ps -> ( ch /\ th /\ ta ) ) ) $=
      ( w3a wa imp 3jca ex ) ABCDEIABJCDEABCFKABDGKABEHKLM $.
      $( [25-Sep-2005] $)
  $}

  ${
    mpbir3an.1 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    mpbir3an.2 $e |- ps $.
    mpbir3an.3 $e |- ch $.
    mpbir3an.4 $e |- th $.
    $( Detach a conjunction of truths in a biconditional. $)
    mpbir3an $p |- ph $=
      ( w3a 3pm3.2i mpbir ) ABCDIBCDFGHJEK $.
      $( [16-Sep-2011] $)
  $}

  ${
    3anim123i.1 $e |- ( ph -> ps ) $.
    3anim123i.2 $e |- ( ch -> th ) $.
    3anim123i.3 $e |- ( ta -> et ) $.
    $( Join antecedents and consequents with conjunction.  (The proof was
       shortened by NM, 22-Dec-2012.) $)
    3anim123i $p |- ( ( ph /\ ch /\ ta ) -> ( ps /\ th /\ et ) ) $=
      ( w3a 3ad2ant1 3ad2ant2 3ad2ant3 3jca ) ACEJBDFACBEGKCADEHLEAFCIMN $.
      $( [22-Dec-2012] $) $( [8-Apr-1994] $)

    $( Obsolete proof of ~ 3anim123i . $)
    3anim123iOLD $p |- ( ( ph /\ ch /\ ta ) -> ( ps /\ th /\ et ) ) $=
      ( wa w3a anim12i df-3an 3imtr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [8-Apr-1994] $)
  $}

  ${
    3animi.1 $e |- ( ph -> ps ) $.
    $( Add two conjuncts to antecedent and consequent.  (Contributed by Jeff
       Hankins, 16-Aug-2009.) $)
    3anim1i $p |- ( ( ph /\ ch /\ th ) -> ( ps /\ ch /\ th ) ) $=
      ( id 3anim123i ) ABCCDDECFDFG $.
      $( [21-Feb-2011] $) $( [16-Aug-2009] $)

    $( Add two conjuncts to antecedent and consequent.  (Contributed by Jeff
       Hankins, 19-Aug-2009.) $)
    3anim3i $p |- ( ( ch /\ th /\ ph ) -> ( ch /\ th /\ ps ) ) $=
      ( id 3anim123i ) CCDDABCFDFEG $.
      $( [21-Feb-2011] $) $( [16-Aug-2009] $)
  $}

  ${
    bi3.1 $e |- ( ph <-> ps ) $.
    bi3.2 $e |- ( ch <-> th ) $.
    bi3.3 $e |- ( ta <-> et ) $.
    $( Join 3 biconditionals with conjunction. $)
    3anbi123i $p |- ( ( ph /\ ch /\ ta ) <-> ( ps /\ th /\ et ) ) $=
      ( wa w3a anbi12i df-3an 3bitr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [21-Apr-1994] $)

    $( Join 3 biconditionals with disjunction. $)
    3orbi123i $p |- ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) $=
      ( wo w3o orbi12i df-3or 3bitr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [17-May-1994] $)
  $}

  ${
    3anbi1i.1 $e |- ( ph <-> ps ) $.
    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi1i $p |- ( ( ph /\ ch /\ th ) <-> ( ps /\ ch /\ th ) ) $=
      ( biid 3anbi123i ) ABCCDDECFDFG $.
      $( [8-Sep-2006] $)

    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi2i $p |- ( ( ch /\ ph /\ th ) <-> ( ch /\ ps /\ th ) ) $=
      ( biid 3anbi123i ) CCABDDCFEDFG $.
      $( [8-Sep-2006] $)

    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi3i $p |- ( ( ch /\ th /\ ph ) <-> ( ch /\ th /\ ps ) ) $=
      ( biid 3anbi123i ) CCDDABCFDFEG $.
      $( [8-Sep-2006] $)
  $}

  ${
    3imp.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Importation inference. $)
    3imp $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( w3a wa df-3an imp31 sylbi ) ABCFABGCGDABCHABCDEIJ $.
      $( [8-Apr-1994] $)
  $}

  ${
    3impa.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Importation from double to triple conjunction. $)
    3impa $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp31 3imp ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3impb.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Importation from double to triple conjunction. $)
    3impb $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp32 3imp ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3impia.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Importation to triple conjunction. $)
    3impia $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wi ex 3imp ) ABCDABCDFEGH $.
      $( [13-Jun-2006] $)
  $}

  ${
    3impib.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Importation to triple conjunction. $)
    3impib $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp3a 3imp ) ABCDABCDEFG $.
      $( [13-Jun-2006] $)
  $}

  ${
    3exp.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Exportation inference.  (The proof was shortened by NM, 22-Dec-2012.) $)
    3exp $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( w3a pm3.2an3 syl8 ) ABCABCFDABCGEH $.
      $( [24-Dec-2012] $) $( [30-May-1994] $)

    $( Obsolete proof of ~ 3exp . $)
    3expOLD $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wa w3a df-3an sylbir exp31 ) ABCDABFCFABCGDABCHEIJ $.
      $( [30-May-1994] $)

    $( Exportation from triple to double conjunction. $)
    3expa $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( 3exp imp31 ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)

    $( Exportation from triple to double conjunction. $)
    3expb $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( 3exp imp32 ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)

    $( Exportation from triple conjunction. $)
    3expia $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi 3exp imp ) ABCDFABCDEGH $.
      $( [19-May-2007] $)

    $( Exportation from triple conjunction. $)
    3expib $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( 3exp imp3a ) ABCDABCDEFG $.
      $( [19-May-2007] $)

    $( Commutation in antecedent.  Swap 1st and 3rd.  (The proof was shortened
       by Andrew Salmon, 13-May-2011.) $)
    3com12 $p |- ( ( ps /\ ph /\ ch ) -> th ) $=
      ( w3a 3ancoma sylbi ) BACFABCFDBACGEH $.
      $( [16-May-2011] $) $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Swap 1st and 3rd. $)
    3com13 $p |- ( ( ch /\ ps /\ ph ) -> th ) $=
      ( w3a 3anrev sylbi ) CBAFABCFDCBAGEH $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Swap 2nd and 3rd. $)
    3com23 $p |- ( ( ph /\ ch /\ ps ) -> th ) $=
      ( 3exp com23 3imp ) ACBDABCDABCDEFGH $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Rotate left. $)
    3coml $p |- ( ( ps /\ ch /\ ph ) -> th ) $=
      ( 3com23 3com13 ) ACBDABCDEFG $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Rotate right. $)
    3comr $p |- ( ( ch /\ ph /\ ps ) -> th ) $=
      ( 3coml ) BCADABCDEFF $.
      $( [28-Jan-1996] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r1 $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( 3expb 3adantr1 ) ABCDEABCDFGH $.
      $( [16-Feb-2008] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r2 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( 3expb 3adantr2 ) ABCDEABCDFGH $.
      $( [17-Feb-2008] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r3 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( 3expb 3adantr3 ) ABCDEABCDFGH $.
      $( [18-Feb-2008] $)
  $}

  ${
    3an1rs.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( Swap conjuncts. $)
    3an1rs $p |- ( ( ( ph /\ ps /\ th ) /\ ch ) -> ta ) $=
      ( w3a wi ex 3exp com34 3imp imp ) ABDGCEABDCEHABCDEABCDEHABCGDEFIJKLM $.
      $( [16-Dec-2007] $)
  $}

  ${
    3imp1.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( Importation to left triple conjunction. $)
    3imp1 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $=
      ( w3a wi 3imp imp ) ABCGDEABCDEHFIJ $.
      $( [24-Feb-2005] $)

    $( Importation deduction for triple conjunction. $)
    3impd $p |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $=
      ( w3a wi com4l 3imp com12 ) BCDGAEBCDAEHABCDEFIJK $.
      $( [26-Oct-2006] $)

    $( Importation to right triple conjunction. $)
    3imp2 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $=
      ( w3a 3impd imp ) ABCDGEABCDEFHI $.
      $( [26-Oct-2006] $)
  $}

  ${
    3exp1.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( Exportation from left triple conjunction. $)
    3exp1 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi w3a ex 3exp ) ABCDEGABCHDEFIJ $.
      $( [24-Feb-2005] $)
  $}

  ${
    3expd.1 $e |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $.
    $( Exportation deduction for triple conjunction. $)
    3expd $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi w3a com12 3exp com4r ) BCDAEBCDAEGABCDHEFIJK $.
      $( [26-Oct-2006] $)
  $}

  ${
    3exp2.1 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( Exportation from right triple conjunction. $)
    3exp2 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( w3a ex 3expd ) ABCDEABCDGEFHI $.
      $( [26-Oct-2006] $)
  $}

  ${
    exp5o.1 $e |- ( ( ph /\ ps /\ ch ) -> ( ( th /\ ta ) -> et ) ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp5o $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi w3a exp3a 3exp ) ABCDEFHHABCIDEFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    exp516.1 $e |- ( ( ( ph /\ ( ps /\ ch /\ th ) ) /\ ta ) -> et ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp516 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi w3a exp31 3expd ) ABCDEFHABCDIEFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    exp520.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta ) ) -> et ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp520 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( w3a wa ex exp5o ) ABCDEFABCHDEIFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    3adant1l.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adant1l $p |- ( ( ( ta /\ ph ) /\ ps /\ ch ) -> th ) $=
      ( wa 3expb adantll 3impb ) EAGBCDABCGDEABCDFHIJ $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant1r $p |- ( ( ( ph /\ ta ) /\ ps /\ ch ) -> th ) $=
      ( wa 3expb adantlr 3impb ) AEGBCDABCGDEABCDFHIJ $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2l $p |- ( ( ph /\ ( ta /\ ps ) /\ ch ) -> th ) $=
      ( wa 3com12 3adant1l ) EBGACDBACDEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2r $p |- ( ( ph /\ ( ps /\ ta ) /\ ch ) -> th ) $=
      ( wa 3com12 3adant1r ) BEGACDBACDEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3l $p |- ( ( ph /\ ps /\ ( ta /\ ch ) ) -> th ) $=
      ( wa 3com13 3adant1l ) ECGBADCBADEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r $p |- ( ( ph /\ ps /\ ( ch /\ ta ) ) -> th ) $=
      ( wa 3com13 3adant1r ) CEGBADCBADEABCDFHIH $.
      $( [8-Jan-2006] $)
  $}

  ${
    syl3anc.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    syl3anc.2 $e |- ( ta -> ph ) $.
    syl3anc.3 $e |- ( ta -> ps ) $.
    syl3anc.4 $e |- ( ta -> ch ) $.
    $( A syllogism inference combined with contraction.  OBSOLETE - replaced
       with ~ syl111anc . $)
    syl3ancOLD $p |- ( ta -> th ) $=
      ( w3a 3jca syl ) EABCJDEABCGHIKFL $.
      $( [1-Jan-2005] $)
  $}

  ${
    syl3an2c.1 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    syl3an2c.2 $e |- ( et -> ph ) $.
    syl3an2c.3 $e |- ( et -> ps ) $.
    syl3an2c.4 $e |- ( et -> ch ) $.
    syl3an2c.5 $e |- ( et -> th ) $.
    $( A syllogism inference combined with contraction.  (Contributed by Jeff
       Madsen, 17-Jun-2011.)  OBSOLETE - replaced with ~ syl12anc . $)
    syl3an2cOLD $p |- ( et -> ta ) $=
      ( w3a 3jca syl11anc ) FABCDLEHFBCDIJKMGN $.
      $( [8-Sep-2011] $) $( [17-Jun-2011] $)
  $}

  ${
    sylXanc.1 $e |- ( ph -> ps ) $.
    sylXanc.2 $e |- ( ph -> ch ) $.
    sylXanc.3 $e |- ( ph -> th ) $.
    ${
      syl12anc.4 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
      $( Syllogism combined with contraction.  (Contributed by Jeff Hankins,
         1-Aug-2009.) $)
      syl12anc $p |- ( ph -> ta ) $=
        ( wa jca32 syl ) ABCDJJEABCDFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      syl21anc.4 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
      $( Syllogism combined with contraction.  (Contributed by Jeff Hankins,
         1-Aug-2009.) $)
      syl21anc $p |- ( ph -> ta ) $=
        ( wa jca31 syl ) ABCJDJEABCDFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      syl111anc.4 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
      $( Syllogism combined with contraction. $)
      syl111anc $p |- ( ph -> ta ) $=
        ( w3a 3jca syl ) ABCDJEABCDFGHKIL $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.4 $e |- ( ph -> ta ) $.
    ${
      syl22anc.5 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl22anc $p |- ( ph -> et ) $=
        ( wa jca syl11anc ) ABCLDELFABCGHMADEIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl13anc.5 $e |- ( ( ps /\ ( ch /\ th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl13anc $p |- ( ph -> et ) $=
        ( w3a 3jca syl11anc ) ABCDELFGACDEHIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl31anc.5 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl31anc $p |- ( ph -> et ) $=
        ( w3a 3jca syl11anc ) ABCDLEFABCDGHIMJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl112anc.5 $e |- ( ( ps /\ ch /\ ( th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl112anc $p |- ( ph -> et ) $=
        ( wa jca syl111anc ) ABCDELFGHADEIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl121anc.5 $e |- ( ( ps /\ ( ch /\ th ) /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl121anc $p |- ( ph -> et ) $=
        ( wa jca syl111anc ) ABCDLEFGACDHIMJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl211anc.5 $e |- ( ( ( ps /\ ch ) /\ th /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl211anc $p |- ( ph -> et ) $=
        ( wa jca syl111anc ) ABCLDEFABCGHMIJKN $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.5 $e |- ( ph -> et ) $.
    ${
      syl23anc.6 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl23anc $p |- ( ph -> ze ) $=
        ( wa jca syl13anc ) ABCNDEFGABCHIOJKLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl32anc.6 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl32anc $p |- ( ph -> ze ) $=
        ( wa jca syl31anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl122anc.6 $e |- ( ( ps /\ ( ch /\ th ) /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl122anc $p |- ( ph -> ze ) $=
        ( wa jca syl121anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl212anc.6 $e |- ( ( ( ps /\ ch ) /\ th /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl212anc $p |- ( ph -> ze ) $=
        ( wa jca syl211anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl221anc.6 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl221anc $p |- ( ph -> ze ) $=
        ( wa jca syl211anc ) ABCDENFGHIADEJKOLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl113anc.6 $e |- ( ( ps /\ ch /\ ( th /\ ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl113anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl111anc ) ABCDEFNGHIADEFJKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl131anc.6 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl131anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl111anc ) ABCDENFGHACDEIJKOLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl311anc.6 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl311anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl111anc ) ABCDNEFGABCDHIJOKLMP $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.6 $e |- ( ph -> ze ) $.
    ${
      syl33anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl33anc $p |- ( ph -> si ) $=
        ( w3a 3jca syl13anc ) ABCDPEFGHABCDIJKQLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl222anc.7 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl222anc $p |- ( ph -> si ) $=
        ( wa jca syl221anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl123anc.7 $e |- ( ( ps /\ ( ch /\ th ) /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl123anc $p |- ( ph -> si ) $=
        ( wa jca syl113anc ) ABCDPEFGHIACDJKQLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl132anc.7 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl132anc $p |- ( ph -> si ) $=
        ( w3a wa 3com23 syl123anc ) ABFGCDEHIMNJKLBCDEPFGQHORS $.
        $( [11-Jul-2012] $)
    $}

    ${
      syl213anc.7 $e |- ( ( ( ps /\ ch ) /\ th /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl213anc $p |- ( ph -> si ) $=
        ( wa jca syl113anc ) ABCPDEFGHABCIJQKLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl231anc.7 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ze )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl231anc $p |- ( ph -> si ) $=
        ( wa jca syl131anc ) ABCPDEFGHABCIJQKLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl312anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl312anc $p |- ( ph -> si ) $=
        ( w3a wa 3coml syl123anc ) AEFGBCDHLMNIJKBCDPEFGQHORS $.
        $( [11-Jul-2012] $)
    $}

    ${
      syl321anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ze )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl321anc $p |- ( ph -> si ) $=
        ( w3a wa 3com13 syl123anc ) AGEFBCDHNLMIJKBCDPEFQGHORS $.
        $( [11-Jul-2012] $)
    $}

    sylXanc.7 $e |- ( ph -> si ) $.
    ${
      syl133anc.8 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ ( et /\ ze /\ si ) )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl133anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl131anc ) ABCDEFGHRIJKLMAFGHNOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl313anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ ( et /\ ze /\ si ) )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl313anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl311anc ) ABCDEFGHRIJKLMAFGHNOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl331anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) /\ si )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl331anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl311anc ) ABCDEFGRHIJKLAEFGMNOSPQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl223anc.8 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ ( et /\ ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl223anc $p |- ( ph -> rh ) $=
        ( wa jca syl213anc ) ABCDERFGHIJKADELMSNOPQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl232anc.8 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ( ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl232anc $p |- ( ph -> rh ) $=
        ( wa jca syl231anc ) ABCDEFGHRIJKLMNAGHOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl322anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ( ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. (The proof was shortened
         by NM, 2-Jan-2013.  $)
      syl322anc $p |- ( ph -> rh ) $=
        ( wa jca syl321anc ) ABCDEFGHRIJKLMNAGHOPSQT $.
        $( [2-Jan-2013] $) $( [11-Mar-2012] $)

      $( Obsolete proof of ~ syl322anc . $)
      syl322ancOLD $p |- ( ph -> rh ) $=
        ( wa jca syl311anc ) ABCDEFRGHRIJKLAEFMNSAGHOPSQT $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.8 $e |- ( ph -> rh ) $.
    ${
      syl233anc.9 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ( ze /\ si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl233anc $p |- ( ph -> mu ) $=
        ( wa jca syl133anc ) ABCTDEFGHIJABCKLUAMNOPQRSUB $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl323anc.9 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ( ze /\ si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl323anc $p |- ( ph -> mu ) $=
        ( wa jca syl313anc ) ABCDEFTGHIJKLMAEFNOUAPQRSUB $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl332anc.9 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) /\ ( si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl332anc $p |- ( ph -> mu ) $=
        ( wa jca syl331anc ) ABCDEFGHITJKLMNOPAHIQRUASUB $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.9 $e |- ( ph -> mu ) $.
    ${
      syl333anc.10 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze )
          /\ ( si /\ rh /\ mu ) ) -> la ) $.
      $( A syllogism inference combined with contraction. $)
      syl333anc $p |- ( ph -> la ) $=
        ( w3a 3jca syl331anc ) ABCDEFGHIJUBKLMNOPQAHIJRSTUCUAUD $.
        $( [10-Mar-2012] $)
    $}
  $}

  ${
    syl3an.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    ${
      syl3an1.2 $e |- ( ta -> ph ) $.
      $( A syllogism inference. $)
      syl3an1 $p |- ( ( ta /\ ps /\ ch ) -> th ) $=
        ( wa 3expb sylan 3impb ) EBCDABCHDEABCDFIGJK $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an2.2 $e |- ( ta -> ps ) $.
      $( A syllogism inference. $)
      syl3an2 $p |- ( ( ph /\ ta /\ ch ) -> th ) $=
        ( wi 3exp syl5 3imp ) AECDABCDHEABCDFIGJK $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an3.2 $e |- ( ta -> ch ) $.
      $( A syllogism inference. $)
      syl3an3 $p |- ( ( ph /\ ps /\ ta ) -> th ) $=
        ( 3exp syl7 3imp ) ABEDABCDEABCDFHGIJ $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an1b.2 $e |- ( ta <-> ph ) $.
      $( A syllogism inference. $)
      syl3an1b $p |- ( ( ta /\ ps /\ ch ) -> th ) $=
        ( biimpi syl3an1 ) ABCDEFEAGHI $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an2b.2 $e |- ( ta <-> ps ) $.
      $( A syllogism inference. $)
      syl3an2b $p |- ( ( ph /\ ta /\ ch ) -> th ) $=
        ( biimpi syl3an2 ) ABCDEFEBGHI $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an3b.2 $e |- ( ta <-> ch ) $.
      $( A syllogism inference. $)
      syl3an3b $p |- ( ( ph /\ ps /\ ta ) -> th ) $=
        ( biimpi syl3an3 ) ABCDEFECGHI $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an1br.2 $e |- ( ph <-> ta ) $.
      $( A syllogism inference. $)
      syl3an1br $p |- ( ( ta /\ ps /\ ch ) -> th ) $=
        ( biimpri syl3an1 ) ABCDEFAEGHI $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an2br.2 $e |- ( ps <-> ta ) $.
      $( A syllogism inference. $)
      syl3an2br $p |- ( ( ph /\ ta /\ ch ) -> th ) $=
        ( biimpri syl3an2 ) ABCDEFBEGHI $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an3br.2 $e |- ( ch <-> ta ) $.
      $( A syllogism inference. $)
      syl3an3br $p |- ( ( ph /\ ps /\ ta ) -> th ) $=
        ( biimpri syl3an3 ) ABCDEFCEGHI $.
        $( [22-Aug-1995] $)
    $}

    ${
      syl3an.2 $e |- ( ta -> ph ) $.
      syl3an.3 $e |- ( et -> ps ) $.
      syl3an.4 $e |- ( ze -> ch ) $.
      $( A triple syllogism inference. $)
      syl3an $p |- ( ( ta /\ et /\ ze ) -> th ) $=
        ( w3a 3anim123i syl ) EFGLABCLDEAFBGCIJKMHN $.
        $( [13-May-2004] $)
    $}

    ${
      syl3anb.2 $e |- ( ta <-> ph ) $.
      syl3anb.3 $e |- ( et <-> ps ) $.
      syl3anb.4 $e |- ( ze <-> ch ) $.
      $( A triple syllogism inference. $)
      syl3anb $p |- ( ( ta /\ et /\ ze ) -> th ) $=
        ( w3a 3anbi123i sylbi ) EFGLABCLDEAFBGCIJKMHN $.
        $( [15-Oct-2005] $)
    $}

    ${
      syl3anbr.2 $e |- ( ph <-> ta ) $.
      syl3anbr.3 $e |- ( ps <-> et ) $.
      syl3anbr.4 $e |- ( ch <-> ze ) $.
      $( A triple syllogism inference. $)
      syl3anbr $p |- ( ( ta /\ et /\ ze ) -> th ) $=
        ( bicomi syl3anb ) ABCDEFGHAEILBFJLCGKLM $.
        $( [29-Dec-2011] $)
    $}

    ${
      syld3an3.2 $e |- ( ( ph /\ ps /\ ta ) -> ch ) $.
      $( A syllogism inference. $)
      syld3an3 $p |- ( ( ph /\ ps /\ ta ) -> th ) $=
        ( w3a simp1 simp2 syl111anc ) ABEHABCDABEIABEJGFK $.
        $( [20-May-2007] $)
    $}

    ${
      syld3an1.2 $e |- ( ( ta /\ ps /\ ch ) -> ph ) $.
      $( A syllogism inference. $)
      syld3an1 $p |- ( ( ta /\ ps /\ ch ) -> th ) $=
        ( 3com13 syld3an3 ) CBEDCBADEABCDFHEBCAGHIH $.
        $( [7-Jul-2008] $)
    $}

    ${
      syld3an2.2 $e |- ( ( ph /\ ta /\ ch ) -> ps ) $.
      $( A syllogism inference. $)
      syld3an2 $p |- ( ( ph /\ ta /\ ch ) -> th ) $=
        ( 3com23 syld3an3 ) ACEDACBDEABCDFHAECBGHIH $.
        $( [20-May-2007] $)
    $}
  $}

  ${
    syl3anl1.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    ${
      syl3anl1.2 $e |- ( et -> ph ) $.
      $( A syllogism inference. $)
      syl3anl1 $p |- ( ( ( et /\ ps /\ ch ) /\ th ) -> ta ) $=
        ( w3a 3anim1i sylan ) ABCIDEFBCIGFABCHJK $.
        $( [24-Feb-2005] $)
    $}

    ${
      syl3anl2.2 $e |- ( et -> ps ) $.
      $( A syllogism inference. $)
      syl3anl2 $p |- ( ( ( ph /\ et /\ ch ) /\ th ) -> ta ) $=
        ( w3a wi ex syl3an2 imp ) AFCIDEABCDEJFABCIDEGKHLM $.
        $( [24-Feb-2005] $)
    $}

    ${
      syl3anl3.2 $e |- ( et -> ch ) $.
      $( A syllogism inference. $)
      syl3anl3 $p |- ( ( ( ph /\ ps /\ et ) /\ th ) -> ta ) $=
        ( w3a 3anim3i sylan ) ABCIDEABFIGFCABHJK $.
        $( [24-Feb-2005] $)
    $}

    ${
      syl3anl.2 $e |- ( et -> ph ) $.
      syl3anl.3 $e |- ( ze -> ps ) $.
      syl3anl.4 $e |- ( si -> ch ) $.
      $( A triple syllogism inference. $)
      syl3anl $p |- ( ( ( et /\ ze /\ si ) /\ th ) -> ta ) $=
        ( w3a 3anim123i sylan ) ABCMDEFGHMIFAGBHCJKLNO $.
        $( [24-Dec-2006] $)
    $}
  $}

  ${
    syl3anr1.1 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    ${
      syl3anr1.2 $e |- ( et -> ps ) $.
      $( A syllogism inference. $)
      syl3anr1 $p |- ( ( ph /\ ( et /\ ch /\ th ) ) -> ta ) $=
        ( w3a 3anim1i sylan2 ) ABCDIEFCDIGFBCDHJK $.
        $( [31-Jul-2007] $)
    $}

    ${
      syl3anr2.2 $e |- ( et -> ch ) $.
      $( A syllogism inference. $)
      syl3anr2 $p |- ( ( ph /\ ( ps /\ et /\ th ) ) -> ta ) $=
        ( w3a ancoms syl3anl2 ) BFDIAEBCDAEFABCDIEGJHKJ $.
        $( [1-Aug-2007] $)
    $}

    ${
      syl3anr3.2 $e |- ( et -> th ) $.
      $( A syllogism inference. $)
      syl3anr3 $p |- ( ( ph /\ ( ps /\ ch /\ et ) ) -> ta ) $=
        ( w3a 3anim3i sylan2 ) ABCDIEBCFIGFDBCHJK $.
        $( [23-Aug-2007] $)
    $}
  $}

  ${
    3impdi.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> th ) $.
    $( Importation inference (undistribute conjunction). $)
    3impdi $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( anandis 3impb ) ABCDABCDEFG $.
      $( [14-Aug-1995] $)
  $}

  ${
    3impdir.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ ps ) ) -> th ) $.
    $( Importation inference (undistribute conjunction). $)
    3impdir $p |- ( ( ph /\ ch /\ ps ) -> th ) $=
      ( anandirs 3impa ) ACBDACBDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3anidm12.1 $e |- ( ( ph /\ ph /\ ps ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm12 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3expib anabsi5 ) ABCAABCDEF $.
      $( [7-Mar-2008] $)
  $}

  ${
    3anidm13.1 $e |- ( ( ph /\ ps /\ ph ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm13 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3com23 3anidm12 ) ABCABACDEF $.
      $( [7-Mar-2008] $)
  $}

  ${
    3anidm23.1 $e |- ( ( ph /\ ps /\ ps ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm23 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3expa anabss3 ) ABCABBCDEF $.
      $( [1-Feb-2007] $)
  $}

  ${
    3ori.1 $e |- ( ph \/ ps \/ ch ) $.
    $( Infer implication from triple disjunction. $)
    3ori $p |- ( ( -. ph /\ -. ps ) -> ch ) $=
      ( wn wa wo ioran w3o df-3or mpbi ori sylbir ) AEBEFABGZECABHNCABCINCGDABC
      JKLM $.
      $( [26-Sep-2006] $)
  $}

  $( Disjunction of 3 antecedents. $)
  3jao $p |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ->
              ( ( ph \/ ch \/ th ) -> ps ) ) $=
    ( wi w3a wo w3o jao syl6 3imp df-3or syl5ib ) ABEZCBEZDBEZFACGZDGZBACDHNOPR
    BEZNOQBEPSEABCIQBDIJKACDLM $.
    $( [8-Apr-1994] $)

  $( Disjunction of 3 antecedents. $)
  3jaob $p |- ( ( ( ph \/ ch \/ th ) -> ps ) <->
              ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ) $=
    ( w3o wi w3a 3mix1 imim1i 3mix2 3mix3 3jca 3jao impbii ) ACDEZBFZABFZCBFZDB
    FZGPQRSAOBACDHICOBCADJIDOBDACKILABCDMN $.
    $( [13-Sep-2011] $)

  ${
    3jaoi.1 $e |- ( ph -> ps ) $.
    3jaoi.2 $e |- ( ch -> ps ) $.
    3jaoi.3 $e |- ( th -> ps ) $.
    $( Disjunction of 3 antecedents (inference). $)
    3jaoi $p |- ( ( ph \/ ch \/ th ) -> ps ) $=
      ( wi w3a w3o 3pm3.2i 3jao ax-mp ) ABHZCBHZDBHZIACDJBHNOPEFGKABCDLM $.
      $( [12-Sep-1995] $)
  $}

  ${
    3jaod.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jaod.2 $e |- ( ph -> ( th -> ch ) ) $.
    3jaod.3 $e |- ( ph -> ( ta -> ch ) ) $.
    $( Disjunction of 3 antecedents (deduction). $)
    3jaod $p |- ( ph -> ( ( ps \/ th \/ ta ) -> ch ) ) $=
      ( wi w3o 3jao syl111anc ) ABCIDCIECIBDEJCIFGHBCDEKL $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaoian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    3jaoian.2 $e |- ( ( th /\ ps ) -> ch ) $.
    3jaoian.3 $e |- ( ( ta /\ ps ) -> ch ) $.
    $( Disjunction of 3 antecedents (inference). $)
    3jaoian $p |- ( ( ( ph \/ th \/ ta ) /\ ps ) -> ch ) $=
      ( w3o wi ex 3jaoi imp ) ADEIBCABCJDEABCFKDBCGKEBCHKLM $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaodan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    3jaodan.2 $e |- ( ( ph /\ th ) -> ch ) $.
    3jaodan.3 $e |- ( ( ph /\ ta ) -> ch ) $.
    $( Disjunction of 3 antecedents (deduction). $)
    3jaodan $p |- ( ( ph /\ ( ps \/ th \/ ta ) ) -> ch ) $=
      ( w3o ex 3jaod imp ) ABDEICABCDEABCFJADCGJAECHJKL $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaao.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jaao.2 $e |- ( th -> ( ta -> ch ) ) $.
    3jaao.3 $e |- ( et -> ( ze -> ch ) ) $.
    $( Inference conjoining and disjoining the antecedents of three
       implications.  (Contributed by Jeff Hankins, 15-Aug-2009.)  (The proof
       was shortened by Andrew Salmon, 13-May-2011.) $)
    3jaao $p |- ( ( ph /\ th /\ et ) -> ( ( ps \/ ta \/ ze ) -> ch ) ) $=
      ( w3a wi 3ad2ant1 3ad2ant2 3ad2ant3 3jaod ) ADFKBCEGADBCLFHMDAECLFINFAGCL
      DJOP $.
      $( [16-May-2011] $) $( [3-Aug-2009] $)
  $}

  ${
    syl3an9b.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl3an9b.2 $e |- ( th -> ( ch <-> ta ) ) $.
    syl3an9b.3 $e |- ( et -> ( ta <-> ze ) ) $.
    $( Nested syllogism inference conjoining 3 dissimilar antecedents. $)
    syl3an9b $p |- ( ( ph /\ th /\ et ) -> ( ps <-> ze ) ) $=
      ( wb wa sylan9bb 3impa ) ADFBGKADLBEFGABCDEHIMJMN $.
      $( [1-May-1995] $)
  $}

  ${
    bi3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi3d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    bi3d.3 $e |- ( ph -> ( et <-> ze ) ) $.
    $( Deduction joining 3 equivalences to form equivalence of disjunctions. $)
    3orbi123d $p |- ( ph -> ( ( ps \/ th \/ et ) <-> ( ch \/ ta \/ ze ) ) ) $=
      ( wo w3o orbi12d df-3or 3bitr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [20-Apr-1994] $)

    $( Deduction joining 3 equivalences to form equivalence of conjunctions. $)
    3anbi123d $p |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ ze ) ) ) $=
      ( wa w3a anbi12d df-3an 3bitr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [22-Apr-1994] $)
  $}

  ${
    3anbi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3anbi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi12d $p |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ et ) ) ) $=
      ( biidd 3anbi123d ) ABCDEFFGHAFIJ $.
      $( [8-Sep-2006] $)

    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi13d $p |- ( ph -> ( ( ps /\ et /\ th ) <-> ( ch /\ et /\ ta ) ) ) $=
      ( biidd 3anbi123d ) ABCFFDEGAFIHJ $.
      $( [8-Sep-2006] $)

    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi23d $p |- ( ph -> ( ( et /\ ps /\ th ) <-> ( et /\ ch /\ ta ) ) ) $=
      ( biidd 3anbi123d ) AFFBCDEAFIGHJ $.
      $( [8-Sep-2006] $)
  $}

  ${
    3anbi1d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding conjuncts to an equivalence. $)
    3anbi1d $p |- ( ph -> ( ( ps /\ th /\ ta ) <-> ( ch /\ th /\ ta ) ) ) $=
      ( biidd 3anbi12d ) ABCDDEFADGH $.
      $( [8-Sep-2006] $)

    $( Deduction adding conjuncts to an equivalence. $)
    3anbi2d $p |- ( ph -> ( ( th /\ ps /\ ta ) <-> ( th /\ ch /\ ta ) ) ) $=
      ( biidd 3anbi12d ) ADDBCEADGFH $.
      $( [8-Sep-2006] $)

    $( Deduction adding conjuncts to an equivalence. $)
    3anbi3d $p |- ( ph -> ( ( th /\ ta /\ ps ) <-> ( th /\ ta /\ ch ) ) ) $=
      ( biidd 3anbi13d ) ADDBCEADGFH $.
      $( [8-Sep-2006] $)
  $}

  ${
    3anim123d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3anim123d.2 $e |- ( ph -> ( th -> ta ) ) $.
    3anim123d.3 $e |- ( ph -> ( et -> ze ) ) $.
    $( Deduction joining 3 implications to form implication of conjunctions. $)
    3anim123d $p |- ( ph -> ( ( ps /\ th /\ et ) -> ( ch /\ ta /\ ze ) ) ) $=
      ( wa w3a anim12d df-3an 3imtr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [24-Feb-2005] $)

    $( Deduction joining 3 implications to form implication of disjunctions. $)
    3orim123d $p |- ( ph -> ( ( ps \/ th \/ et ) -> ( ch \/ ta \/ ze ) ) ) $=
      ( wo w3o orim12d df-3or 3imtr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [4-Apr-1997] $)
  $}

  $( Rearrangement of 6 conjuncts. $)
  an6 $p |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <->
              ( ( ph /\ th ) /\ ( ps /\ ta ) /\ ( ch /\ et ) ) ) $=
    ( w3a wa df-3an anbi12i an4 anbi1i 3bitri bitr4i ) ABCGZDEFGZHZADHZBEHZHZCF
    HZHZRSUAGQABHZCHZDEHZFHZHUCUEHZUAHUBOUDPUFABCIDEFIJUCCUEFKUGTUAABDEKLMRSUAI
    N $.
    $( [13-Mar-1995] $)

  ${
    mp3an1.1 $e |- ph $.
    mp3an1.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an1 $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa 3expb mpan ) ABCGDEABCDFHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an2.1 $e |- ps $.
    mp3an2.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an2 $p |- ( ( ph /\ ch ) -> th ) $=
      ( 3expa mpanl2 ) ABCDEABCDFGH $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an3.1 $e |- ch $.
    mp3an3.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an3 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa 3expia mpi ) ABGCDEABCDFHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an12.1 $e |- ph $.
    mp3an12.2 $e |- ps $.
    mp3an12.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an12 $p |- ( ch -> th ) $=
      ( mp3an1 mpan ) BCDFABCDEGHI $.
      $( [13-Jul-2005] $)
  $}

  ${
    mp3an13.1 $e |- ph $.
    mp3an13.2 $e |- ch $.
    mp3an13.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an13 $p |- ( ps -> th ) $=
      ( mp3an3 mpan ) ABDEABCDFGHI $.
      $( [14-Jul-2005] $)
  $}

  ${
    mp3an23.1 $e |- ps $.
    mp3an23.2 $e |- ch $.
    mp3an23.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an23 $p |- ( ph -> th ) $=
      ( mp3an3 mpan2 ) ABDEABCDFGHI $.
      $( [14-Jul-2005] $)
  $}

  ${
    mp3an1i.1 $e |- ps $.
    mp3an1i.2 $e |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $.
    $( An inference based on modus ponens. $)
    mp3an1i $p |- ( ph -> ( ( ch /\ th ) -> ta ) ) $=
      ( wa wi w3a com12 mp3an1 ) CDHAEBCDAEIFABCDJEGKLK $.
      $( [5-Jul-2005] $)
  $}

  ${
    mp3anl1.1 $e |- ph $.
    mp3anl1.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl1 $p |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an1 imp ) BCHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anl2.1 $e |- ps $.
    mp3anl2.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl2 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an2 imp ) ACHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anl3.1 $e |- ch $.
    mp3anl3.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl3 $p |- ( ( ( ph /\ ps ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an3 imp ) ABHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anr1.1 $e |- ps $.
    mp3anr1.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr1 $p |- ( ( ph /\ ( ch /\ th ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl1 ) CDHAEBCDAEFABCDIEGJKJ $.
      $( [4-Nov-2006] $)
  $}

  ${
    mp3anr2.1 $e |- ch $.
    mp3anr2.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr2 $p |- ( ( ph /\ ( ps /\ th ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl2 ) BDHAEBCDAEFABCDIEGJKJ $.
      $( [24-Nov-2006] $)
  $}

  ${
    mp3anr3.1 $e |- th $.
    mp3anr3.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr3 $p |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl3 ) BCHAEBCDAEFABCDIEGJKJ $.
      $( [19-Oct-2007] $)
  $}

  ${
    mp3an.1 $e |- ph $.
    mp3an.2 $e |- ps $.
    mp3an.3 $e |- ch $.
    mp3an.4 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an $p |- th $=
      ( mp3an1 mp2an ) BCDFGABCDEHIJ $.
      $( [14-May-1999] $)
  $}

  ${
    mpd3an3.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    mpd3an3.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpd3an3 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa 3expa mpdan ) ABGCDEABCDFHI $.
      $( [8-Nov-2007] $)
  $}

  ${
    mpd3an23.1 $e |- ( ph -> ps ) $.
    mpd3an23.2 $e |- ( ph -> ch ) $.
    mpd3an23.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpd3an23 $p |- ( ph -> th ) $=
      ( id syl111anc ) AABCDAHEFGI $.
      $( [4-Dec-2006] $)
  $}

  ${
    biimp3a.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Infer implication from a logical equivalence.  Similar to ~ biimpa . $)
    biimp3a $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa biimpa 3impa ) ABCDABFCDEGH $.
      $( [4-Sep-2005] $)

    $( Infer implication from a logical equivalence.  Similar to ~ biimpar . $)
    biimp3ar $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( exbiri 3imp ) ABDCABCDEFG $.
      $( [2-Jan-2009] $)
  $}

  ${
    3anandis.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) /\ ( ph /\ th ) )
                      -> ta ) $.
    $( Inference that undistributes a triple conjunction in the antecedent. $)
    3anandis $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $=
      ( w3a wa simpl simpr1 simpr2 simpr3 syl222anc ) ABCDGZHABACADEANIZABCDJOA
      BCDKOABCDLFM $.
      $( [18-Apr-2007] $)
  $}

  ${
    3anandirs.1 $e |- ( ( ( ph /\ th ) /\ ( ps /\ th ) /\ ( ch /\ th ) )
                      -> ta ) $.
    $( Inference that undistributes a triple conjunction in the antecedent. $)
    3anandirs $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $=
      ( w3a wa simpl1 simpr simpl2 simpl3 syl222anc ) ABCGZDHADBDCDEABCDINDJZAB
      CDKOABCDLOFM $.
      $( [18-Apr-2007] $) $( [25-Jul-2006] $)
  $}

  ${
    ecase23d.1 $e |- ( ph -> -. ch ) $.
    ecase23d.2 $e |- ( ph -> -. th ) $.
    ecase23d.3 $e |- ( ph -> ( ps \/ ch \/ th ) ) $.
    $( Deduction for elimination by cases. $)
    ecase23d $p |- ( ph -> ps ) $=
      ( wo wn ioran sylanbrc w3o 3orass sylib ord mt3d ) ABCDHZQICIDIACDJEFKABQ
      ABCDLBQHGBCDMNOP $.
      $( [15-Jul-2005] $) $( [22-Apr-1994] $)
  $}

  ${
    3ecase.1 $e |- ( -. ph -> th ) $.
    3ecase.2 $e |- ( -. ps -> th ) $.
    3ecase.3 $e |- ( -. ch -> th ) $.
    3ecase.4 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Inference for elimination by cases. $)
    3ecase $p |- th $=
      ( wi 3exp wn a1d pm2.61i pm2.61nii ) BCDABCDIZIABCDHJAKZOBPDCELLMFGN $.
      $( [13-Jul-2005] $)
  $}


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
      Other axiomatizations of classical propositional calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the Lukasiewicz axioms from Meredith's sole axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Carew Meredith's sole axiom for propositional calculus.  This amazing
     formula is thought to be the shortest possible single axiom for
     propositional calculus with inference rule ~ ax-mp , where negation and
     implication are primitive.  Here we prove Meredith's axiom from ~ ax-1 ,
     ~ ax-2 , and ~ ax-3 .  Then from it we derive the Lukasiewicz axioms
     ~ luk-1 , ~ luk-2 , and ~ luk-3 .  Using these we finally re-derive our
     axioms as ~ ax1 , ~ ax2 , and ~ ax3 , thus proving the equivalence of all
     three systems.  C. A. Meredith, "Single Axioms for the Systems (C,N),
     (C,O) and (A,N) of the Two-Valued Propositional Calculus," _The Journal of
     Computing Systems_ vol. 1 (1953), pp. 155-164.  Meredith claimed to be
     close to a proof that this axiom is the shortest possible, but the proof
     was apparently never completed.

     An obscure Irish lecturer, Meredith (1904-1976) became enamored with logic
     somewhat late in life after attending talks by Lukasiewicz and produced
     many remarkable results such as this axiom.  From his obituary:  "He did
     logic whenever time and opportunity presented themselves, and he did it on
     whatever materials came to hand: in a pub, his favored pint of porter
     within reach, he would use the inside of cigarette packs to write proofs
     for logical colleagues."  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.)  (The proof was shortened by Wolf Lammen, 12-Oct-2012.) $)
  meredith $p |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ->
       ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn wa annim simplim a1d pm2.21 imim2i ja imp sylbir pm2.27 a1dd ) ABFZ
    CGZDGZFZFZCFZEEAFZDAFZFUDGZUFUEUGUCTHUFUCCIUCTUFSUBTUFFSGZUFTUHADABJKKUAUFT
    DALMNOPKEUEADEAQRN $.
    $( [12-Oct-2012] $) $( [14-Dec-2002] $)

  $( Obsolete proof of ~ meredith .  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  meredithOLD $p |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ->
       ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn wa annim pm2.21 con1i a1d imim2i ja imp sylbir pm2.27 a1dd ) ABFZCG
    ZDGZFZFZCFZEEAFZDAFZFUDGZUFUEUGUCTHUFUCCIUCTUFSUBTUFFSGZUFTUHADASABJKLLUAUF
    TDAJMNOPLEUEADEAQRN $.
    $( [12-Oct-2012] $) $( [14-Dec-2002] $)

  $( Step 3 of Meredith's proof of Lukasiewicz axioms from his sole axiom.
     (The step numbers refer to Meredith's original paper.) $)
  merlem1 $p |- ( ( ( ch -> ( -. ph -> ps ) ) -> ta ) -> ( ph -> ta ) ) $=
    ( wn wi meredith ax-mp ) DAEZFIBFZEZIFFZJFCJFZFZMDFADFFJDECEFZEKEFZFOFDFLFN
    IBOKDGJPDCLGHDIJAMGH $.
    $( [14-Dec-2002] $)

  $( Step 4 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem2 $p |- ( ( ( ph -> ph ) -> ch ) -> ( th -> ch ) ) $=
    ( wi wn merlem1 meredith ax-mp ) BBDZAECEZDDADAADZDKBDCBDDAJIAFBBACKGH $.
    $( [14-Dec-2002] $)

  $( Step 7 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem3 $p |- ( ( ( ps -> ch ) -> ph ) -> ( ch -> ph ) ) $=
    ( wi wn merlem2 ax-mp meredith ) AADZCEZJDZDZCDBCDZDZMADCADZDOBEZPDDBDZLDZN
    KKDLDRJKIFKLQFGCABBLHGAACCMHG $.
    $( [14-Dec-2002] $)

  $( Step 8 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem4 $p |- ( ta -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn meredith merlem3 ax-mp ) AADBEZIDDBDZCDCADBADDZDCKDAABBCFKJCGH $.
    $( [14-Dec-2002] $)

  $( Step 11 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem5 $p |- ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) $=
    ( wi wn meredith merlem1 merlem4 ax-mp ) BBCZBDZJCCBCBCIICCZABCZADZDZBCCZBB
    BBBEIJNDCCBCZACZOCZKOCZBBBNAEOKDZCMTCCZACQCZRSCUAUBMBLTFAPUAGHOTAKQEHHH $.
    $( [14-Dec-2002] $)

  $( Step 12 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem6 $p |- ( ch -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) $=
    ( wi merlem4 merlem3 ax-mp ) BCEZIAEDAEEZECJEADIFJBCGH $.
    $( [14-Dec-2002] $)

  $( Between steps 14 and 15 of Meredith's proof of Lukasiewicz axioms from his
     sole axiom. $)
  merlem7 $p |- ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) ->
                  ( -. th -> -. ps ) ) -> th ) ) ) $=
    ( wi wn merlem4 merlem6 meredith ax-mp ) BCFZLDFZCEFDGBGFFZDFZFZFZAPFZDNLHP
    AGZFCGZSFFZCFLFZQRFOUAFUBSMOTICEDBUAJKPSCALJKK $.
    $( [22-Dec-2002] $)

  $( Step 15 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem8 $p |- ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) ->
                  ( -. th -> -. ps ) ) -> th ) ) $=
    ( wph wi wn meredith merlem7 ax-mp ) EEFZEGZLFFEFEFKKFFZABFCFBDFCGAGFFCFFEE
    EEEHMABCDIJ $.
    $( [22-Dec-2002] $)

  $( Step 18 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem9 $p |- ( ( ( ph -> ps ) -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ->
                    ( et -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ) $=
    ( wi wn merlem6 merlem8 ax-mp meredith ) CDBEGZGZGZFHZGBHZPGGZBGABGZGZSOGFO
    GGMRHDHGZHAHGZGUAGRGZTNRGUCPCNQIDMRUBJKBEUAARLKOPBFSLK $.
    $( [22-Dec-2002] $)

  $( Step 19 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem10 $p |- ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) $=
    ( wi wn meredith merlem9 ax-mp ) AADZAEZJDDADADIIDDZAABDZDZCLDDZAAAAAFLADJC
    EDDADZADNDKNDLAACAFOAMCBKGHH $.
    $( [14-Dec-2002] $)

  $( Step 20 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem11 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi wn meredith merlem10 ax-mp ) AACZADZICCACACHHCCZAABCZCZKCZAAAAAELMCJMC
    ABLFLKJFGG $.
    $( [14-Dec-2002] $)

  $( Step 28 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem12 $p |- ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) $=
    ( wn wi merlem5 merlem2 ax-mp merlem4 merlem11 ) CBDDBEZEZAEZMAEZEZNLOBBEKE
    LBBFBKCGHAMLIHMAJH $.
    $( [14-Dec-2002] $)

  $( Step 35 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem13 $p |- ( ( ph -> ps ) ->
              ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) ) $=
    ( wi wn merlem12 merlem5 ax-mp merlem6 meredith merlem11 ) BBEZAFZDCFFCEEZN
    FZEZFZEZEAEZAEZABEQBEETUAEZUASUBOREZREZSRCDGRBEZRFPEZEREUCEZUDSEUFUGQPEUFPC
    DGQPHIRUEUFOJIRBRNUCKIIAMSTJITALIBBAQAKI $.
    $( [14-Dec-2002] $)

  $( 1 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi wn meredith merlem13 ax-mp ) CCDZAEZEZEJDDKDBDZBCDACDDZDZABDZMDZCCKABF
    MADZOEZEZERDDSDLDZNPDOLDTABJIGOLRQGHMASOLFHH $.
    $( [14-Dec-2002] $)

  $( 2 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi merlem5 merlem4 ax-mp merlem11 meredith ) ABZACZJACZCZKAJBZCIBMCCZI
    CZICZLOPCZPNQAMDIONEFOIGFAMIJIHFJAGF $.
    $( [14-Dec-2002] $)

  $( 3 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wi merlem11 merlem1 ax-mp ) ACZHBDZDIDAIDHBEABHIFG $.
    $( [14-Dec-2002] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the standard axioms from the Lukasiewicz axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    luklem1.1 $e |- ( ph -> ps ) $.
    luklem1.2 $e |- ( ps -> ch ) $.
    $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
    luklem1 $p |- ( ph -> ch ) $=
      ( wi luk-1 ax-mp ) BCFZACFZEABFIJFDABCGHH $.
      $( [23-Dec-2002] $)
  $}

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem2 $p |- ( ( ph -> -. ps ) ->
                ( ( ( ph -> ch ) -> th ) -> ( ps -> th ) ) ) $=
    ( wn wi luk-1 luk-3 ax-mp luklem1 ) ABEZFZBACFZFZMDFBDFFLKCFZMFZNAKCGBOFPNF
    BCHBOMGIJBMDGJ $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem3 $p |- ( ph -> ( ( ( -. ph -> ps ) -> ch ) -> ( th -> ch ) ) ) $=
    ( wn wi luk-3 luklem2 luklem1 ) AAEZDEZFJBFCFDCFFAKGJDBCHI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem4 $p |- ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ps ) $=
    ( wn wi luk-2 luklem3 ax-mp luk-1 luklem1 ) ACADADZBDZBCZBDZBLJDZKMDJCJDJDZ
    NJEJONDAEJJJLFGGLJBHGBEI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem5 $p |- ( ph -> ( ps -> ph ) ) $=
    ( wn wi luklem3 luklem4 luklem1 ) AACADADBADZDHAAABEAHFG $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem6 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi luk-1 wn luklem5 luklem2 luklem4 luklem1 ax-mp ) AABCZCKBCZKCZKAKBDKEZ
    KCZKCMKCZCZPMOCZQNLCRNBEZNCZLNSFTSBCBCLCLSKBBGBLHIINLKDJMOKDJKPHJI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem7 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi luk-1 luklem5 luklem1 luklem6 ax-mp ) ABCDZDJCDZACDZDZBLDZAJCEBKDMNDBJ
    KDZKBJBDOBJFJBCEGJCHGBKLEIG $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem8 $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi luk-1 luklem7 ax-mp ) CADZABDZCBDZDDIHJDDCABEHIJFG $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax1 $p |- ( ph -> ( ps -> ph ) ) $=
    ( luklem5 ) ABC $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax2 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi luklem7 luklem8 luklem6 ax-mp luklem1 ) ABCDDBACDZDZABDZJDZABCEKLAJDZD
    ZMBJAFNJDOMDACGNJLFHII $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax3 $p |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) $=
    ( wn wi luklem2 luklem4 luklem1 ) ACZBCDHADADBADZDIHBAAEAIFG $.
    $( [22-Dec-2002] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical 'nand' (Sheffer stroke)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c -/\ $. $( 'nand' ) $)
  $( Extend wff definition to include 'nand'. $)
  wnand $a wff ( ph -/\ ps ) $.

  $( Define incompatibility ('not-and' or 'nand').  This is also called the
     Sheffer stroke, represented by a vertical bar, but we use a different
     symbol to avoid ambiguity with other uses of the vertical bar. $)
  df-nand $a |- ( ( ph -/\ ps ) <-> -. ( ph /\ ps ) ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Derive Nicod's axiom from the standard axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Lemma for handling nested 'nand's. $)
  nic-justlem $p |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) $=
    ( wnand wa wn wi df-nand anbi2i notbii iman 3bitr4i ) ACBDZEZFACBEZFZEZFAMD
    AOGNQMPACBHIJAMHAOKL $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between implication and the Nicod version.  To derive
     ~ nic-dfim , apply ~ nic-justbi . $)
  nic-justim $p |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) $=
    ( wnand wa wi nic-justlem anidmdbi bitr2i ) ABBCCABBDEABEABBFABGH $.
    $( [17-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between negation and the Nicod version.  To derive
     ~ nic-dfneg , apply ~ nic-justbi . $)
  nic-justneg $p |- ( -. ps <-> ( ps -/\ ps ) ) $=
    ( wnand wa wn df-nand anidm notbii bitr2i ) AABAACZDADAAEIAAFGH $.
    $( [16-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between the bidirectional and the Nicod version.
     (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
  nic-justbi $p |- ( ( ph <-> ps ) <->
          ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) $=
    ( wa wn wo wnand wb pm4.57 df-nand nic-justneg anbi12i notbii bitr4i bitri 
    dfbi3 3bitr4ri ) ABCZDZADZBDZCZDZCZDZQUAEABFZAAFZBBFZFZFZABGQUAHUIUEUHCZDUD
    UEUHIUJUCUERUHUBABIUHUFUGCZDUBUFUGIUAUKSUFTUGAJBJKLMKLNABOP $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

$( [suppress from the Table of Contents by breaking whitespace before "=-=-"]
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Prove Nicod's axiom and implication and negation definitions
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Define implication in terms of 'nand'.  Analogous to
     ` ( ( ph -/\ ( ps -/\ ps ) ) <-> ( ph -> ps ) ) ` .  In a pure
     (standalone) treatment of Nicod's axiom, this theorem would be changed to
     a definition ($a statement). $)
  nic-dfim $p |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\
                   ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) )
                          -/\
                     ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) $=
    ( wnand wi wb nic-justim bicomi nic-justbi mpbi ) ABBCCZABDZEJKCJJCKKCCCKJA
    BFGJKHI $.
    $( [11-Dec-2008] $)

  $( Define negation in terms of 'nand'.  Analogous to
     ` ( ( ph -/\ ph ) <-> -. ph ) ` .  In a pure (standalone) treatment of
     Nicod's axiom, this theorem would be changed to a definition ($a
     statement). $)
  nic-dfneg $p |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\
                    ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\
                      ( -. ph -/\ -. ph ) ) ) $=
    ( wnand wn wb nic-justneg bicomi nic-justbi mpbi ) AABZACZDIJBIIBJJBBBJIAEF
    IJGH $.
    $( [11-Dec-2008] $)

  ${
    $( Minor premise. $)
    nic-jmin $e |- ph $.
    $( Major premise. $)
    nic-jmaj $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Derive Nicod's rule of modus ponens using 'nand', from the standard
       one.  Although the major and minor premise together also imply ` ch ` ,
       this form is necessary for useful derivations from ~ nic-ax .  In a pure
       (standalone) treatment of Nicod's axiom, this theorem would be changed
       to an axiom ($a statement).  (Contributed by Jeff Hoffman,
       19-Nov-2007.) $)
    nic-mp $p |- ps $=
      ( wnand wa wi nic-justlem mpbi simprd ax-mp ) ABDACBACBFFACBGHEABCIJKL $.
      $( [11-Dec-2008] $) $( [19-Nov-2007] $)

    $( A direct proof of ~ nic-mp . $)
    nic-mpALT $p |- ps $=
      ( wa wi wn wnand df-nand anbi2i notbii bitri mpbi iman mpbir simprd 
      ax-mp ) ABDACBACBFZGASHZFZHZACBIZIZUBEUDAUCFZHUBAUCJUEUAUCTACBJKLMNASOPQR
      $.
      $( [30-Dec-2008] $)
  $}

  $( Nicod's axiom derived from the standard ones.  See _Intro. to Math.
     Phil._ by B. Russell, p. 152.  Like ~ meredith , the usual axioms can be
     derived from this and vice versa.  Unlike ~ meredith , Nicod uses a
     different connective ('nand'), so another form of modus ponens must be
     used in proofs, e.g. ` { ` ~ nic-ax , ~ nic-mp ` } ` is equivalent to
     ` { ` ~ luk-1 , ~ luk-2 , ~ luk-3 , ~ ax-mp ` } ` .  In a pure
     (standalone) treatment of Nicod's axiom, this theorem would be changed to
     an axiom ($a statement).  (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
  nic-ax $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\
                   ( ( ta -/\ ( ta -/\ ta ) ) -/\
                     ( ( th -/\ ch ) -/\
                       ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnand wa wi nic-justlem biimpi simpl imim2i wn con3 imim2d imnan con2b 
    df-nand 3bitr4ri syl6ibr bitr4i syl5ibr nic-justim sylib 3syl pm4.24 mpbir 
    jctil ) ACBFFZEEEFFZDCFZADFZULFFZFFUIUJUMGHUIUMUJUIACBGZHZACHZUMUIUOABCIJUN
    CACBKLUPUKULHUMUPDCMZHZULUKUPURDAMZHZULUPUQUSDACNOADMHADGMUTULADPDAQADRSTUR
    DCGMUKDCPDCRUAUBUKULUCUDUEUJEEEGZHEVAEUFJEEEIUGUHUIUMUJIUG $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

  $( A direct proof of ~ nic-ax . $)
  nic-axALT $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) )
          -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnand wa wn wi simpl imim2i con3 imim2d syl anidm biimpri jctil df-nand 
    anbi2i notbii iman 3bitr4i imnan bitr4i con2b bitr3i 3bitri bitri anbi12i 
    mpbir ) ACBFZFZEEEFZFZDCFZADFZUPFZFZFZFULUSGZHZVAACBGZIZEEEGZIZDCHZIZDAHZIZ
    IZGZIZVCVJVEVCACIZVJVBCACBJKVMVFVHDACLMNVDEEOPQVAVCVKHZGZHVLUTVOULVCUSVNAUK
    GZHAVBHZGZHULVCVPVRUKVQACBRSTAUKRAVBUAUBUSUNURGZHVNUNURRVSVKUNVEURVJEUMGZHE
    VDHZGZHUNVEVTWBUMWAEEERSTEUMREVDUAUBUOUQGZHVGVIHZGZHURVJWCWEUOVGUQWDUODCGHV
    GDCRDCUCUDUQUPUPGZHWDUPUPRWFVIWFUPADGHZVIUPOADRWGADHIVIADUCADUEUFUGTUHUITUO
    UQRVGVIUAUBUITUHUITVCVKUAUDUJULUSRUJ $.
    $( [11-Dec-2008] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Derive the Lukasiewicz axioms from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( Minor premise. $)
    nic-imp.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Inference for ~ nic-mp using ~ nic-ax as major premise.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-imp $p |- ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) $=
      ( wta wnand nic-ax nic-mp ) ACBGGDCGADGZJGGFFFGGEABCDFHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  $( Lemma for ~ nic-id . $)
  nic-idlem1 $p |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\
                 ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) -/\
                   ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ) $=
    ( wnand nic-ax nic-imp ) ACBFFACFAAFZIFFEEEFFDABCAEGH $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  ${
    nic-idlem2.1 $e |- ( et -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) $.
    $( Lemma for ~ nic-id .  Inference used by ~ nic-id . $)
    nic-idlem2 $p |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) $=
      ( wnand nic-ax nic-imp nic-mp ) FACBHHZDHZHDEEEHHZHZFHZPGOMMFLACHAAHZQHHN
      DABCAEIJJK $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  $( Theorem ~ id expressed with ` -/\ ` .  (Contributed by Jeff Hoffman,
     17-Nov-2007.) $)
  nic-id $p |- ( ta -/\ ( ta -/\ ta ) ) $=
    ( wph wps wch wth wnand nic-ax nic-idlem2 nic-idlem1 nic-mp ) BCFZCBFZLFFZD
    DDFZFZFZCCCFFZFAAAFFZOEEEMDQCCCBEGHMNDPCORFKLLOAIHJ $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  $( ` -/\ ` is symmetric.  (Contributed by Jeff Hoffman, 17-Nov-2007.) $)
  nic-swap $p |- ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) $=
    ( wta wnand nic-id nic-ax nic-mp ) AAADDBADABDZHDDCCCDDAEAAABCFG $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  ${
    nic-isw1.1 $e |- ( th -/\ ph ) $.
    $( Inference version of ~ nic-swap .  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-isw1 $p |- ( ph -/\ th ) $=
      ( wnand nic-swap nic-mp ) BADABDZGCABEF $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-isw2.1 $e |- ( ps -/\ ( th -/\ ph ) ) $.
    $( Inference for swapping nested terms.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-isw2 $p |- ( ps -/\ ( ph -/\ th ) ) $=
      ( wnand nic-swap nic-imp nic-mp nic-isw1 ) BACEZBCAEZEJBEZLDJKKBCAFGHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-iimp1.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    nic-iimp1.2 $e |- ( th -/\ ch ) $.
    $( Inference version of ~ nic-imp using right-handed term.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-iimp1 $p |- ( th -/\ ph ) $=
      ( wnand nic-imp nic-mp nic-isw1 ) DADCGADGZKFABCDEHIJ $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-iimp2.1 $e |- ( ( ph -/\ ps ) -/\ ( ch -/\ ch ) ) $.
    nic-iimp2.2 $e |- ( th -/\ ph ) $.
    $( Inference version of ~ nic-imp using left-handed term.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-iimp2 $p |- ( th -/\ ( ch -/\ ch ) ) $=
      ( wnand nic-isw1 nic-iimp1 ) CCGZBADJABGEHFI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-idel.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Inference to remove the trailing term.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-idel $p |- ( ph -/\ ( ch -/\ ch ) ) $=
      ( wnand nic-id nic-isw1 nic-imp nic-mp ) CCEZCEAJEZKJCCFGABCJDHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-ich.1 $e |- ( ph -/\ ( ps -/\ ps ) ) $.
    nic-ich.2 $e |- ( ps -/\ ( ch -/\ ch ) ) $.
    $( Chained inference.  (Contributed by Jeff Hoffman, 17-Nov-2007.) $)
    nic-ich $p |- ( ph -/\ ( ch -/\ ch ) ) $=
      ( wnand nic-isw1 nic-imp nic-mp ) CCFZBFAJFZKJBEGABBJDHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-idbl.1 $e |- ( ph -/\ ( ps -/\ ps ) ) $.
    $( Double the terms.  Since doubling is the same as negation, this can be
       viewed as a contraposition inference.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-idbl $p |- ( ( ps -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) $=
      ( wnand nic-imp nic-ich ) BBDABDAADABBBCEABBACEF $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

$( (not in Table of Contents)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Biconditional justification from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( For nic-* definitions, the biconditional connective is not used.  Instead,
     definitions are made based on this form. ~ nic-bi1 and ~ nic-bi2 are used
     to convert the definitions into usable theorems about one side of the
     implication.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
  nic-bijust $p |- ( ( ta -/\ ta ) -/\ ( ( ta -/\ ta ) -/\ ( ta -/\ ta ) ) ) $=
    ( nic-swap ) AAB $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  ${
    $( 'Biconditional' premise.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
    nic-bi1.1 $e |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph )
         -/\ ( ps -/\ ps ) ) ) $.
    $( Inference to extract one side of an implication from a definition. $)
    nic-bi1 $p |- ( ph -/\ ( ps -/\ ps ) ) $=
      ( wnand nic-id nic-iimp1 nic-isw2 nic-idel ) AABBAAABDBBDAADACAEFGH $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

  ${
    $( 'Biconditional' premise.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
    nic-bi2.1 $e |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph )
         -/\ ( ps -/\ ps ) ) ) $.
    $( Inference to extract the other side of an implication from a
       'biconditional' definition. $)
    nic-bi2 $p |- ( ps -/\ ( ph -/\ ph ) ) $=
      ( wnand nic-isw2 nic-id nic-iimp1 nic-idel ) BBAABDZAADZBBDZBKIJCEBFGH $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

$( (not in Table of Contents)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
             Prove the Lukasiewicz axioms from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( Minor premise. $)
    nic-smin $e |- ph $.
    $( Major premise. $)
    nic-smaj $e |- ( ph -> ps ) $.
    $( Derive the standard modus ponens from ~ nic-mp .  (Contributed by Jeff
       Hoffman, 18-Nov-2007.) $)
    nic-stdmp $p |- ps $=
      ( wi wnand nic-dfim nic-bi2 nic-mp ) ABBCABEZABBFFZKDKJABGHII $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

  $( Proof of ~ luk-1 from ~ nic-ax and ~ nic-mp (and definitions ~ nic-dfim
     and ~ nic-dfneg ).  Note that the standard axioms ~ ax-1 , ~ ax-2 , and
     ~ ax-3 are proved from the Lukasiewicz axioms by theorems ~ ax1 , ~ ax2 ,
     and ~ ax3 .  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
  nic-luk1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wta wi wnand nic-dfim nic-bi2 nic-ax nic-isw2 nic-idel nic-bi1 nic-idbl 
    nic-imp nic-swap nic-ich nic-mp ) ABEZBCEZACEZEZUAFFZRUAEZUCRABBFFZUAUDRABG
    HUDSTTFZFZUAUDCCFZBFZAUGFZUIFZFZUFUDDDDFFZUKUKUDULABBUGDIJKUKUEUHFUFUEUJUJU
    HUITUITACGLMNSUHUHUESBUGFZUHUMSBCGHUGBOPNPPUFUASTGLPPUBUCRUAGLQ $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  $( Proof of ~ luk-2 from ~ nic-ax and ~ nic-mp .  (Contributed by Jeff
     Hoffman, 18-Nov-2007.) $)
  nic-luk2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi wnand nic-dfim nic-bi2 nic-dfneg nic-id nic-iimp1 nic-isw2 
    nic-isw1 nic-bi1 nic-mp ) ABZACZAADZDZOACZROPONPDZSPSONAEFNPPPNDNNDPPDPAGPH
    IJIKQROAELM $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  $( Proof of ~ luk-3 from ~ nic-ax and ~ nic-mp .  (Contributed by Jeff
     Hoffman, 18-Nov-2007.) $)
  nic-luk3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wi wnand nic-dfim nic-bi1 nic-dfneg nic-bi2 nic-id nic-iimp1 
    nic-iimp2 nic-mp ) AACZBDZOEEZAODZQNBBEZOANREONBFGNAAEZSASNAHIAJKLPQAOFGM 
    $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                True and false constants
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c T. $.
  $c F. $.

  $( ` T. ` is a wff. $)
  wtru $a wff T. $.

  $( ` F. ` is a wff. $)
  wfal $a wff F. $.

  $( Definition of ` T. ` , a tautology. ` T. ` is a constant true.  In this
     definition ~ biid is used as an antecedent, however, any true wff, such as
     an axiom, can be used in its place. $)
  df-tru $a |- ( T. <-> ( ph <-> ph ) ) $.

  $( Definition of ` F. ` , a contradiction. ` F. ` is a constant false. $)
  df-fal $a |- ( F. <-> -. T. ) $.

  $( ` T. ` is provable.  (Contributed by Anthony Hart, 13-Oct-2010.) $)
  tru $p |- T. $=
    ( wph wtru wb biid df-tru mpbir ) BAACADAEF $.
    $( [6-Sep-2010] $) $( [13-Oct-2010] $)

  $( ` F. ` is not provable.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Mel L. O'Cat, 11-Mar-2012.) $)
  notfal $p |- -. F. $=
    ( wfal wtru wn tru notnoti df-fal mtbir ) ABCBDEFG $.
    $( [11-Mar-2012] $) $( [22-Oct-2010] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       Auxiliary theorems for Alan Sare's virtual deduction, part 1
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    iin3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( ~ in3 without virtual deduction connectives.  Special theorem needed for
       Alan Sare's virtual deduction translation tool.  (Contributed by Alan
       Sare, 23-Jul-2011.) $)
    iin3 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      (  ) E $.
      $( [28-Oct-2011] $) $( [23-Jul-2011] $)
  $}

  $( ~ idn3 without virtual deduction connectives.  Special theorem needed for
     Alan Sare's virtual deduction translation tool.  (Contributed by Alan
     Sare, 23-Jul-2011.) $)
  iidn3 $p |- ( ph -> ( ps -> ( ch -> ch ) ) ) $=
    ( wi id a1i12 ) ABCCDCEF $.
    $( [28-Oct-2011] $) $( [23-Jul-2011] $)

  ${
    ee222.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee222.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee222.3 $e |- ( ph -> ( ps -> ta ) ) $.
    ee222.4 $e |- ( ch -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e222 without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 7-Jul-2011.) $)
    ee222 $p |- ( ph -> ( ps -> et ) ) $=
      ( wa imp syl3c ex ) ABFABKCDEFABCGLABDHLABEILJMN $.
      $( [28-Oct-2011] $) $( [7-Jul-2011] $)
  $}

  ${
    ee22.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee22.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee22.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e22 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 2-May-2011.) $)
    ee22 $p |- ( ph -> ( ps -> ta ) ) $=
      ( wi syl6 mpdd ) ABDEGABCDEIFHJK $.
      $( [28-Oct-2011] $) $( [2-May-2011] $)
  $}

  ${
    ee12an.1 $e |- ( ph -> ps ) $.
    ee12an.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee12an.3 $e |- ( ( ps /\ th ) -> ta ) $.
    $( ~ e12an without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 28-Oct-2011.) $)
    ee12an $p |- ( ph -> ( ch -> ta ) ) $=
      ( wa jctild syl6 ) ACBDIEACDBGFJHK $.
      $( [28-Oct-2011] $) $( [28-Oct-2011] $)
  $}

  ${
    ee3bir.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee3bir.2 $e |- ( ta <-> th ) $.
    $( Right-biconditional form of ~ e3 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 22-Jul-2011.) $)
    ee3bir $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimpri syl8 ) ABCDEFEDGHI $.
      $( [28-Oct-2011] $) $( [22-Jul-2011] $)
  $}

  ${
    ee13.1 $e |- ( ph -> ps ) $.
    ee13.2 $e |- ( ph -> ( ch -> ( th -> ta ) ) ) $.
    ee13.3 $e |- ( ps -> ( ta -> et ) ) $.
    $( ~ e13 without virtual deduction connectives.  Special theorem needed for
       Alan Sare's virtual deduction translation tool.  (Contributed by Alan
       Sare, 28-Oct-2011.) $)
    ee13 $p |- ( ph -> ( ch -> ( th -> et ) ) ) $=
      ( wi syl syl6d ) ACDEFHABEFJGIKL $.
      $( [28-Oct-2011] $)
  $}

  ${
    ee23.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee23.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee23.3 $e |- ( ch -> ( ta -> et ) ) $.
    $( ~ e23 without virtual deductions.  (Contributed by Alan Sare,
       17-Jul-2011.) $)
    ee23 $p |- ( ph -> ( ps -> ( th -> et ) ) ) $=
      ( wi syl6 syldd ) ABDEFHABCEFJGIKL $.
      $( [17-Jul-2011] $)
  $}

  ${
    ee121.1 $e |- ( ph -> ps ) $.
    ee121.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee121.3 $e |- ( ph -> ta ) $.
    ee121.4 $e |- ( ps -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e121 without virtual deductions.  (Contributed by Alan Sare,
       13-Jul-2011.) $)
    ee121 $p |- ( ph -> ( ch -> et ) ) $=
      ( a1d ee222 ) ACBDEFABCGKHAECIKJL $.
      $( [13-Jul-2011] $)
  $}

  ${
    ee122.1 $e |- ( ph -> ps ) $.
    ee122.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee122.3 $e |- ( ph -> ( ch -> ta ) ) $.
    ee122.4 $e |- ( ps -> ( th -> ( ta -> et ) ) ) $.
    $( ~ e122 without virtual deductions.  (Contributed by Alan Sare,
       13-Jul-2011.) $)
    ee122 $p |- ( ph -> ( ch -> et ) ) $=
      ( a1d ee222 ) ACBDEFABCGKHIJL $.
      $( [13-Jul-2011] $)
  $}

  ${
    ee333.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee333.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee333.3 $e |- ( ph -> ( ps -> ( ch -> et ) ) ) $.
    ee333.4 $e |- ( th -> ( ta -> ( et -> ze ) ) ) $.
    $( ~ e333 without virtual deductions. $)
    ee333 $p |- ( ph -> ( ps -> ( ch -> ze ) ) ) $=
      ( w3a 3imp syl3c 3exp ) ABCGABCLDEFGABCDHMABCEIMABCFJMKNO $.
      $( [17-Jul-2011] $)
  $}

  ${
    ee323.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee323.2 $e |- ( ph -> ( ps -> ta ) ) $.
    ee323.3 $e |- ( ph -> ( ps -> ( ch -> et ) ) ) $.
    ee323.4 $e |- ( th -> ( ta -> ( et -> ze ) ) ) $.
    $( ~ e323 without virtual deductions. $)
    ee323 $p |- ( ph -> ( ps -> ( ch -> ze ) ) ) $=
      ( a1dd ee333 ) ABCDEFGHABECILJKM $.
      $( [17-Apr-2012] $)
  $}

  $( If the second and third disjuncts of a true triple disjunction are false,
     then the first disjunct is true.  Automatically derived from
     ~ 3ornot23VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
  3ornot23 $p |- ( ( -. ph /\ -. ps ) -> ( ( ch \/ ph \/ ps ) -> ch ) ) $=
    ( wn w3o wi idd pm2.21 3jaao 3anidm12 ) ADZBDZCABECFKCCKALBKCGACHBCHIJ $.
    $( [31-Dec-2011] $)

  $( ~ orbi1 with order of disjuncts reversed.  Derived from ~ orbi1rVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  orbi1r $p |- ( ( ph <-> ps ) -> ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ) $=
    ( wb id orbi2d ) ABDZABCGEF $.
    $( [31-Dec-2011] $)

  $( Closed nested implication form of ~ bitr3i .  Derived automatically from
     ~ bitr3VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
  bitr3 $p |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) -> ( ps <-> ch ) ) ) $=
    ( wb bibi1 biimpd ) ABDACDBCDABCEF $.
    $( [11-Nov-2012] $) $( [31-Dec-2011] $)

  $( ~ pm4.39 with a 3-conjunct antecedent.  This proof is ~ 3orbi123VD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011). $)
  3orbi123 $p |- ( ( ( ph <-> ps ) /\ ( ch <-> th ) /\ ( ta <-> et ) ) ->
                 ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) ) $=
    ( wb w3a simp1 simp2 simp3 3orbi123d ) ABGZCDGZEFGZHABCDEFMNOIMNOJMNOKL $.
    $( [31-Dec-2011] $)

  $( Exportation implication also converting head from biconditional to
     conditional.  This proof is ~ exbirVD automatically translated and
     minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
  exbir $p |- ( ( ( ph /\ ps ) -> ( ch <-> th ) ) ->
              ( ph -> ( ps -> ( th -> ch ) ) ) ) $=
    ( wa wb wi bi2 imim2i exp3a ) ABEZCDFZGABDCGZLMKCDHIJ $.
    $( [31-Dec-2011] $)

  $( ~ impexp with a 3-conjunct antecedent.  This proof is ~ 3impexpVD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011.) $)
  3impexp $p |- ( ( ( ph /\ ps /\ ch ) -> th ) <->
                ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( w3a wi id 3expd 3impd impbii ) ABCEDFZABCDFFFZKABCDKGHLABCDLGIJ $.
    $( [31-Dec-2011] $)

  $( ~ 3impexp with biconditional consequent of antecedent that is commuted in
     consequent.  Derived automatically from ~ 3impexpVD .  (Contributed by
     Alan Sare, 31-Dec-2011.) $)
  3impexpbicom $p |- ( ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) <->
                     ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) ) $=
    ( w3a wb wi bicom imbi2 biimpcd mpi 3expd 3impexp biimpri syl6ibr impbii ) 
    ABCFZDEGZHZABCEDGZHHHZTABCUATSUAGZRUAHZDEIZUCTUDSUARJKLMUBRUASUDUBABCUANOUE
    PQ $.
    $( [31-Dec-2011] $)

  ${
    3impexpbicomi.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $.
    $( Deduction form of ~ 3impexpbicom .  Derived automatically from
       ~ 3impexpbicomiVD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3impexpbicomi $p |- ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) $=
      ( wb w3a bicomd 3exp ) ABCEDGABCHDEFIJ $.
      $( [31-Dec-2011] $)
  $}

  $( Closed form of ~ syl5 .  Derived automatically from ~ syl5impVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  syl5imp $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( th -> ps ) ->
                ( ph -> ( th -> ch ) ) ) ) $=
    ( wi pm2.04 imim2d com34 ) ABCEEZDBEDACIBACEDABCFGH $.
    $( [31-Dec-2011] $)

  ${
    idi.1 $e |- ph $.
    $( Deduction form of ~ id .  Derived automatically from ~ idiVD .
       (Contributed by Alan Sare, 31-Dec-2011.) $)
    idi $p |- ph $=
      (  ) B $.
      $( [31-Dec-2011] $)
  $}

  $( Closed form of ~ ancoms .  Derived automatically from ~ ancomsimpVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  ancomsimp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ps /\ ph ) -> ch ) ) $=
    ( wa ancom imbi1i ) ABDBADCABEF $.
    $( [31-Dec-2011] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant.  After the
     User's Proof was completed it was minimized.  The completed User's Proof
     before minimization is not shown.
     <HTML> <TABLE>
     <TR> <TD> 1::    <TD> ` |- ( ( ( ps /\ ch ) -> th ) <-> ( ps -> ( ch -> `
     ` th ) ) ) `
     <TR> <TD> qed:1: <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <-> ( ph `
     ` -> ( ps -> ( ch -> th ) ) ) ) `
     </TABLE> </HTML> $)
  impexp3a $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                 ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( wa wi impexp imbi2i ) BCEDFBCDFFABCDGH $.
    $( [18-Mar-2012] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual Deduction Proof (not shown) was minimized.  The
     minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` -> ( ph -> ( ch -> ( ps -> th ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ch -> ( ps -> th ) ) ) `
     ` -> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` -> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ch -> ( ph -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ch -> ( ps -> th ) ) ) ) `
     <TR> <TD> 5::      <TD> ` |- ( ( ph -> ( ch -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> 6:4,5:   <TD> ` |- ( ( ch -> ( ph -> ( ps -> th ) ) ) `
     ` -> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> qed:3,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> th ) ) ) `
     ` <-> ( ch -> ( ph -> ( ps -> th ) ) ) ) `
     </TABLE> </HTML> $)
  com3rgbi $p |- ( ( ph -> ( ps -> ( ch -> th ) ) ) <->
                 ( ch -> ( ph -> ( ps -> th ) ) ) ) $=
    ( wi pm2.04 com24 com34 impbii ) ABCDEZEEZCABDEZEEZKBACDABJFGMACBDCALFHI $.
    $( [18-Mar-2012] $)

  $( The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual Deduction Proof (not shown) was minimized.  The
     minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) `
     ` <-> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` <-> ( ph -> ( ps -> ( ch -> th ) ) ) ) `
     <TR> <TD> qed:1,2: <TD> ` |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) `
     ` <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  impexp3acom3r $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                      ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wa wi impexp3a com3rgbi bitr4i ) ABCEDFFABCDFFFBCADFFFABCDGBCADHI $.
    $( [18-Mar-2012] $)

  ${
    exp3acom3r.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual Deduction Proof (not shown) was minimized.  The
       minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ( ps /\ ch ) -> th ) ) `
       <TR> <TD> qed:1: <TD> ` |- ( ps -> ( ch -> ( ph -> th ) ) ) `
       </TABLE> </HTML> $)
    exp3acom3r $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( exp3a com3l ) ABCDABCDEFG $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ exp3acom23 .(Contributed by Alan Sare,
     22-Jul-2012.) $)
  exp3acom23g $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                        ( ph -> ( ch -> ( ps -> th ) ) ) ) $=
    ( wa wi ancomsimp impexp bitri imbi2i ) BCEDFZCBDFFZAKCBEDFLBCDGCBDHIJ $.
    $( [22-Jul-2012] $)

  ${
    exp3acom23.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( The exportation deduction ~ exp3a with commutation of the conjoined
       wwfs.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    exp3acom23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( exp3a com23 ) ABCDABCDEFG $.
      $( [22-Jul-2012] $)
  $}

  $( Implication form of ~ simplbi2com .  (Contributed by Alan Sare,
     22-Jul-2012.) $)
  simplbi2comg $p |- ( ( ph <-> ( ps /\ ch ) ) -> ( ch -> ( ps -> ph ) ) ) $=
    ( wa wb bi2 exp3acom23 ) ABCDZEBCAAHFG $.
    $( [22-Jul-2012] $)

  ${
    simplbi2com.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( A deduction eliminating a conjunct, similar to ~ simplbi2 .
       (Contributed by Alan Sare, 22-Jul-2012.)  (The proof was shortened by
       Wolf Lammen, 10-Nov-2012. $)
    simplbi2com $p |- ( ch -> ( ps -> ph ) ) $=
      ( simplbi2 com12 ) BCAABCDEF $.
      $( [10-Nov-2012] $) $( [22-Jul-2012] $)

    $( Obsolete version of ~ simplbi2com . $)
    simplbi2comOLD $p |- ( ch -> ( ps -> ph ) ) $=
      ( wa wb wi simplbi2comg ax-mp ) ABCEFCBAGGDABCHI $.
      $( [22-Jul-2012] $)
  $}

  ${
    ee1111.1 $e |- ( ph -> ps ) $.
    ee1111.2 $e |- ( ph -> ch ) $.
    ee1111.3 $e |- ( ph -> th ) $.
    ee1111.4 $e |- ( ph -> ta ) $.
    ee1111.5 $e |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) $.
    $( Non-virtual deduction form of ~ e1111 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ps )  `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ch ) `
       <TR> <TD> h3::     <TD> ` |- ( ph -> th ) `
       <TR> <TD> h4::     <TD> ` |- ( ph -> ta ) `
       <TR> <TD> h5::    <TD> ` |- ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 6:1,5:  <TD> ` |- ( ph -> ( ch -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 7:6:    <TD> ` |- ( ch -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 8:2,7:  <TD> ` |- ( ph -> ( ph -> ( th -> ( ta -> et ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( ph -> ( th -> ( ta -> et ) ) ) `
       <TR> <TD> 10:9:    <TD> ` |- ( th -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 11:3,10: <TD> ` |- ( ph -> ( ph -> ( ta -> et ) ) ) `
       <TR> <TD> 12:11:   <TD> ` |- ( ph -> ( ta -> et ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ta -> ( ph -> et ) ) `
       <TR> <TD> 14:4,13: <TD> ` |- ( ph -> ( ph -> et ) ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> et )  `
       </TABLE> </HTML> $)
    ee1111 $p |- ( ph -> et ) $=
      ( wi syl3c mpd ) AEFJABCDEFLGHIKMN $.
      $( [18-Mar-2012] $)
  $}

  $( Logical equivalence of a 2-left-nested implication and a 1-left-nested
     implicated
     when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).
     The following User's Proof is a Virtual Deduction proof completed
     automatically by the tools program completeusersproof.cmd, which invokes
     Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
     completed Virtual
     Deduction Proof (not shown) was minimized.  The minimized proof is
     shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ph -> ( ps -> ch ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ph -> ( ps -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ph -> ( ps -> ch ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ph -> ( ps -> ch ) ) -> ( ps `
     ` -> ( ph -> ch ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` -> ( ps -> ( ph -> ch ) ) ) `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ph -> ch ) ) -> ( ph `
     ` -> ( ps -> ( ph -> ch ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) `
     ` <-> ( ps -> ( ph -> ch ) ) ) `
     </TABLE> </HTML> $)
  pm2.43bgbi $p |- ( ( ph -> ( ps -> ( ph -> ch ) ) ) <->
               ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.21 pm2.04 ja com23 ax-1 impbii ) ABACDDZDZKLABCAKABCDZDAMEBACFGHKA
    IJ $.
    $( [18-Mar-2012] $)

  $( Logical equivalence of a 3-left-nested implication and a 2-left-nested
     implicated when two antecedents of the former implication are identical.
     (Contributed by Alan Sare, 18-Mar-2012.).  The following User's Proof is
     a Virtual Deduction proof completed automatically by the tools program
     completeusersproof.cmd, which invokes Mel O'Cat's mmj2 and Norm Megill's
     Metamath Proof Assistant.  The completed Virtual Deduction Proof (not
     shown) was minimized.  The minimized proof is shown.
     <HTML> <TABLE>
     <TR> <TD> 1::      <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ) `
     <TR> <TD> 2::      <TD> ` |- ( ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 3:1,2:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) `
     <TR> <TD> 4::      <TD> ` |- ( ( ps -> ( ph -> ( ch -> th ) ) )  `
     ` -> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     <TR> <TD> 5:3,4:   <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) -> ( ps -> ( ch -> ( ph -> th ) ) ) )  `
     <TR> <TD> 6::      <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) )  `
     ` -> ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ) `
     <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) `
     ` ) <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) `
     </TABLE> </HTML> $)
  pm2.43cbi $p |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) <->
                   ( ps -> ( ch -> ( ph -> th ) ) ) ) $=
    ( wi wn pm2.24 com4l id1 ja ax-1 impbii ) ABCADEEEZEMAMMAAFBCDABCDEEGHMIJMA
    KL $.
    $( [18-Mar-2012] $)

  ${
    ee233.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee233.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee233.3 $e |- ( ph -> ( ps -> ( th -> et ) ) ) $.
    ee233.4 $e |- ( ch -> ( ta -> ( et -> ze ) ) ) $.
    $( Non-virtual deduction form of ~ e233 . (Contributed by Alan Sare,
       18-Mar-2012.)
       The following User's Proof is a Virtual Deduction proof completed
       automatically by the tools program completeusersproof.cmd, which invokes
       Mel O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The
       completed Virtual
       Deduction Proof (not shown) was minimized.  The minimized proof is
       shown.
       <HTML> <TABLE>
       <TR> <TD> h1::     <TD> ` |- ( ph -> ( ps -> ch ) )   `
       <TR> <TD> h2::     <TD> ` |- ( ph -> ( ps -> ( th -> ta ) ) )  `
       <TR> <TD> h3::     <TD> ` |- ( ph -> ( ps -> ( th -> et ) ) )  `
       <TR> <TD> h4::     <TD> ` |- ( ch -> ( ta -> ( et -> ze ) ) ) `
       <TR> <TD> 5:1,4:   <TD> ` |- ( ph -> ( ps -> ( ta -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 6:5:     <TD> ` |- ( ta -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 7:2,6:   <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( et -> ze ) ) ) ) ) ) `
       <TR> <TD> 8:7:     <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( et  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 9:8:     <TD> ` |- ( th -> ( ph -> ( ps -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 10:9:    <TD> ` |- ( ph -> ( ps -> ( th -> ( et -> ze ) ) ) `
       ` ) `
       <TR> <TD> 11:10:   <TD> ` |- ( et -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> 12:3,11: <TD> ` |- ( ph -> ( ps -> ( th -> ( ph -> ( ps  `
       ` -> ( th -> ze ) ) ) ) ) ) `
       <TR> <TD> 13:12:   <TD> ` |- ( ps -> ( th -> ( ph -> ( ps -> ( th  `
       ` -> ze ) ) ) ) ) `
       <TR> <TD> 14:13:   <TD> ` |- ( th -> ( ph -> ( ps -> ( th -> ze ) ) ) `
       ` ) `
       <TR> <TD> qed:14:  <TD> ` |- ( ph -> ( ps -> ( th -> ze ) ) ) `
       </TABLE> </HTML> $)
    ee233 $p |- ( ph -> ( ps -> ( th -> ze ) ) ) $=
      ( wi syl6 com3r syl8 pm2.43cbi mpbi com14 ) DABDGLZLZLZLZUABUBLZUBAUCLUCA
      BDFUAJDABFGBDABFGLZLZLZLZLZUGAUHLUHABDEUFIABEUDABCEUDLHKMNOABDUEPQBDAUDPQ
      ROABDTPQBDASPQDABGPQ $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ imbi12i . ~ imbi12 is ~ imbi12VD without virtual
     deductions and was automatically derived from ~ imbi12VD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi12 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ph -> ch )
               <-> ( ps -> th ) ) ) ) $=
    ( wb wi wn simplim simprim imbi12d expi ) ABEZCDEZACFBDFELMGZFGABCDLNHLMIJK
    $.
    $( [18-Mar-2012] $)

  $( Join three logical equivalences to form equivalence of implications.
     ~ imbi13 is ~ imbi13VD without virtual deductions and was automatically
     derived from ~ imbi13VD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  imbi13 $p |- ( ( ph <-> ps ) -> ( ( ch <-> th ) -> ( ( ta <-> et ) ->
               ( ( ph -> ( ch -> ta ) ) <-> ( ps -> ( th -> et ) ) ) ) ) ) $=
    ( wb wi imbi12 syl9r ) CDGEFGCEHZDFHZGABGAKHBLHGCDEFIABKLIJ $.
    $( [18-Mar-2012] $)

  ${
    $( Non-virtual deduction from of ~ e21 . ~ ee21 is ~ ee21VD without virtual
       deductions and was automatically derived from ~ ee21VD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Mar-2012.)  $)

    ee21.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee21.2 $e |- ( ph -> th ) $.
    ee21.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e21 without virtual deductions. $)
    ee21 $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1d ee22 ) ABCDEFADBGIHJ $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee33.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    ee33.2 $e |- ( ph -> ( ps -> ( ch -> ta ) ) ) $.
    ee33.3 $e |- ( th -> ( ta -> et ) ) $.
    $( Non-virtual deduction form of ~ e33 . (Contributed by Alan Sare,
       18-Mar-2012.).  The following User's Proof is a Virtual Deduction proof
       completed automatically by the tools program completeusersproof.cmd,
       which invokes Mel O'Cat's mmj2 and Norm Megill's Metamath Proof
       Assistant.  The completed Virtual Deduction Proof (not shown) was
       minimized.  The minimized proof is shown.
       <HTML> <TABLE>
       <TR> <TD> h1::   <TD> ` |- ( ph -> ( ps -> ( ch -> th ) ) )  `
       <TR> <TD> h2::   <TD> ` |- ( ph -> ( ps -> ( ch -> ta ) ) )  `
       <TR> <TD> h3::   <TD> ` |- ( th -> ( ta -> et ) ) `
       <TR> <TD> 4:1,3: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ta -> et ) ) ) ) `
       <TR> <TD> 5:4:   <TD> ` |- ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> 6:2,5: <TD> ` |- ( ph -> ( ps -> ( ch -> ( ph -> ( ps -> `
       ` ( ch -> et ) ) ) ) ) ) `
       <TR> <TD> 7:6:   <TD> ` |- ( ps -> ( ch -> ( ph -> ( ps -> ( ch -> `
       ` et ) ) ) ) ) `
       <TR> <TD> 8:7:   <TD> ` |- ( ch -> ( ph -> ( ps -> ( ch -> et ) ) ) ) `
       <TR> <TD> qed:8: <TD> ` |- ( ph -> ( ps -> ( ch -> et ) ) ) `
       </TABLE> </HTML> $)
    ee33 $p |- ( ph -> ( ps -> ( ch -> et ) ) ) $=
      ( wi imim3i ee22 ) ABCDJCEJCFJGHDEFCIKL $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee10.1 $e |- ( ph -> ps ) $.
    ee10.2 $e |- ch $.
    ee10.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( ~ e10 without virtual deductions. $)
    ee10 $p |- ( ph -> th ) $=
      ( mpi syl ) ABDEBCDFGHI $.
      $( [25-Jul-2011] $)
  $}

  ${
    iin1.1 $e |- ( ph -> ps ) $.
    $( ~ in1 without virtual deductions. $)
    iin1 $p |- ( ph -> ps ) $=
      (  ) C $.
      $( [23-Jul-2011] $)
  $}

  ${
    ee02.1 $e |- ph $.
    ee02.2 $e |- ( ps -> ( ch -> th ) ) $.
    ee02.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( ~ e02 without virtual deductions. $)
    ee02 $p |- ( ps -> ( ch -> ta ) ) $=
      ( a1i sylsyld ) BACDEABFIGHJ $.
      $( [22-Jul-2012] $)
  $}

$( End of auxiliary theorems for Alan Sare's virtual deduction, part 1 $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                Predicate calculus axiomatization
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The axioms of predicate calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed for pure predicate calculus. $)
  $c A. $. $( "inverted A" universal quantifier (read:  "for all") $)
  $c set $. $( Individual variable type (read:  "the following is an
             individual (set) variable" $)

  $( Declare some names for individual variables. $)
  $v x $.
  $v y $.
  $v z $.
  $v w $.
  $v v $.
  $v u $.
  $( Let ` x ` be an individual variable. $)
  vx $f set x $.
  $( Let ` y ` be an individual variable. $)
  vy $f set y $.
  $( Let ` z ` be an individual variable. $)
  vz $f set z $.
  $( Let ` w ` be an individual variable. $)
  vw $f set w $.
  $( Let ` v ` be an individual variable. $)
  vv $f set v $.
  $( Let ` u ` be an individual variable. $)
  vu $f set u $.

  $( Extend wff definition to include the universal quantifier ('for all').
     ` A. x ph ` is read " ` ph ` (phi) is true for all ` x ` ."  Typically, in
     its final application ` ph ` would be replaced with a wff containing a
     (free) occurrence of the variable ` x ` , for example ` x = y ` .  In a
     universe with a finite number of objects, "for all" is equivalent to a big
     conjunction (AND) with one wff for each possible case of ` x ` .  When the
     universe is infinite (as with set theory), such a propositional-calculus
     equivalent is not possible because an infinitely long formula has no
     meaning, but conceptually the idea is the same. $)
  wal $a wff A. x ph $.

  $( Declare the equality predicate symbol. $)
  $c = $.  $( Equal sign (read:  'is equal to') $)

  $( --- Start of patch to prevent connective overloading $)
  $c class $.
  $( This syntax construction states that a variable ` x ` , which has been
     declared to be a set variable by $f statement vx, is also a class
     expression.  This can be justified informally as follows.  We know that
     the class builder ` { y | y e. x } ` is a class by ~ cab .  Since (when
     ` y ` is distinct from ` x ` ) we have ` x = { y | y e. x } ` by
     ~ cvjust , we can argue that that the syntax " ` class x ` " can be viewed
     as an abbreviation for " ` class { y | y e. x } ` ".  See the discussion
     under the definition of class in [Jech] p. 4 showing that "Every set can
     be considered to be a class."

     While it is tempting and perhaps occasionally useful to view ~ cv as a
     "type conversion" from a set variable to a class variable, keep in mind
     that ~ cv is intrinsically no different from any other class-building
     syntax such as ~ cab , ~ cun , or ~ c0 .

     (The description above applies to set theory, not predicate calculus.  The
     purpose of introducing ` class x ` here, and not in set theory where it
     belongs, is to allow us to express i.e.  "prove" the ~ weq of predicate
     calculus from the ~ wceq of set theory, so that we don't "overload" the
     ` = ` connective with two syntax definitions.  This is done to prevent
     ambiguity that would complicate some Metamath parsers.) $)
  cv $a class x $.

  ${
    $v A $.
    $v B $.
    wceq.cA $f class A $.
    wceq.cB $f class B $.
    $( Extend wff definition to include class equality.

       (The purpose of introducing ` wff A = B ` here, and not in set theory
       where it belongs, is to allow us to express i.e.  "prove" the ~ weq of
       predicate calculus in terms of the ~ wceq of set theory, so that we
       don't "overload" the ` = ` connective with two syntax definitions.  This
       is done to prevent ambiguity that would complicate some Metamath
       parsers.  For example, some parsers - although not the Metamath program
       - stumble on the fact that the ` = ` in ` x = y ` could be the ` = ` of
       either ~ weq or ~ wceq , although mathematically it makes no
       difference.  The class variables ` A ` and ` B ` are introduced
       temporarily for the purpose of this definition but otherwise not used in
       predicate calculus.  See ~ df-cleq for more information on the set
       theory usage of ~ wceq .) $)
    wceq $a wff A = B $.
  $}

  $( Extend wff definition to include atomic formulas using the equality
     predicate.

     (Instead of introducing ~ weq as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wceq .  This lets us avoid overloading
     the ` = ` connective, thus preventing ambiguity that would complicate
     certain Metamath parsers.  However, logically ~ weq is considered to be a
     primitive syntax, even though here it is artificially "derived" from
     ~ wceq .  Note:  To see the proof steps of this syntax proof, type "show
     proof weq /all" in the Metamath program.) $)
  weq $p wff x = y $=
    ( cv wceq ) ACBCD $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include atomic formulas using the equality
     predicate.

     After we introduce ~ cv and ~ wceq in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "vx cv vy cv wceq". @)
  weq @a wff x = y @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare the membership predicate symbol. $)
  $c e. $. $( Stylized epsilon $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    $v B $.
    wcel.cA $f class A $.
    wcel.cB $f class B $.
    $( Extend wff definition to include the membership connective between
       classes.

       (The purpose of introducing ` wff A e. B ` here is to allow us to
       express i.e.  "prove" the ~ wel of predicate calculus in terms of the
       ~ wceq of set theory, so that we don't "overload" the ` e. ` connective
       with two syntax definitions.  This is done to prevent ambiguity that
       would complicate some Metamath parsers.  The class variables ` A ` and
       ` B ` are introduced temporarily for the purpose of this definition but
       otherwise not used in predicate calculus.  See ~ df-clab for more
       information on the set theory usage of ~ wcel .) $)
    wcel $a wff A e. B $.
  $}

  $( Extend wff definition to include atomic formulas with the epsilon
     (membership) predicate.  This is read " ` x ` is an element of
     ` y ` ," " ` x ` is a member of ` y ` ," " ` x ` belongs to ` y ` ,"
     or " ` y ` contains ` x ` ."  Note:  The phrase " ` y ` includes
     ` x ` " means " ` x ` is a subset of ` y ` ;" to use it also for
     ` x e. y ` , as some authors occasionally do, is poor form and causes
     confusion, according to George Boolos (1992 lecture at MIT).

     This syntactical construction introduces a binary non-logical predicate
     symbol ` e. ` (epsilon) into our predicate calculus.  We will eventually
     use it for the membership predicate of set theory, but that is irrelevant
     at this point: the predicate calculus axioms for ` e. ` apply to any
     arbitrary binary predicate symbol.  "Non-logical" means that the predicate
     is presumed to have additional properties beyond the realm of predicate
     calculus, although these additional properties are not specified by
     predicate calculus itself but rather by the axioms of a theory (in our
     case set theory) added to predicate calculus.  "Binary" means that the
     predicate has two arguments.

     (Instead of introducing ~ wel as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wcel .  This lets us avoid overloading
     the ` e. ` connective, thus preventing ambiguity that would complicate
     certain Metamath parsers.  However, logically ~ wel is considered to be a
     primitive syntax, even though here it is artificially "derived" from
     ~ wcel .  Note:  To see the proof steps of this syntax proof, type "show
     proof wel /all" in the Metamath program.) $)
  wel $p wff x e. y $=
    ( cv wcel ) ACBCD $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include atomic formulas with the epsilon
     (membership) predicate.  This is read " ` x ` is an element of ` y ` ,"
     " ` x ` is a member of ` y ` ," " ` x ` belongs to ` y ` ," or " ` y `
     contains ` x ` ."  Note:  The phrase " ` y ` includes ` x ` " means
     " ` x ` is a subset of ` y ` "; to use it also for ` x e. y ` (as some
     authors occasionally do) is poor form and causes confusion.

     After we introduce ~ cv and ~ wcel in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "vx cv vy cv wcel". @)
  wel @a wff x e. y @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Axiom of Quantified Implication.  Axiom C4 of [Monk2] p. 105. $)
  ax-5 $a |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $.

  $( Axiom of Quantified Negation.  Axiom C5-2 of [Monk2] p. 113. $)
  ax-6 $a |- ( -. A. x ph -> A. x -. A. x ph ) $.

  $( Axiom of Quantifier Commutation.  This axiom says universal quantifiers
     can be swapped.  One of the 4 axioms of pure predicate calculus.  Axiom
     scheme C6' in [Megill] p. 448 (p. 16 of the preprint).  Also appears as
     Lemma 12 of [Monk2] p. 109 and Axiom C5-3 of [Monk2] p. 113.  An alternate
     axiomatization could use ~ ax467 in place of ~ ax-4 , ~ ax-6o , and
     ~ ax-7 . $)
  ax-7 $a |- ( A. x A. y ph -> A. y A. x ph ) $.

  ${
    ax-g.1 $e |- ph $.
    $( Rule of Generalization.  The postulated inference rule of pure predicate
       calculus.  See e.g.  Rule 2 of [Hamilton] p. 74.  This rule says that if
       something is unconditionally true, then it is true for all values of a
       variable.  For example, if we have proved ` x = x ` , we can conclude
       ` A. x x = x ` or even ` A. y x = x ` .  Theorem ~ a4i shows we can go
       the other way also: in other words we can add or remove universal
       quantifiers from the beginning of any theorem as required. $)
    ax-gen $a |- A. x ph $.
  $}

  $( Axiom of Equality.  One of the equality and substitution axioms of
     predicate calculus with equality.  This is similar to, but not quite, a
     transitive law for equality (proved later as ~ equtr ).  Axiom scheme C8'
     in [Megill] p. 448 (p. 16 of the preprint).  Also appears as Axiom C7 of
     [Monk2] p. 105.

     Axioms ~ ax-8 through ~ ax-16 are the axioms having to do with equality,
     substitution, and logical properties of our binary predicate ` e. ` (which
     later in set theory will mean "is a member of").  Note that all axioms
     except ~ ax-16 and ~ ax-17 are still valid even when ` x ` , ` y ` , and
     ` z ` are replaced with the same variable because they do not have any
     distinct variable (Metamath's $d) restrictions.  Distinct variable
     restrictions are required for ~ ax-16 and ~ ax-17 only. $)
  ax-8 $a |- ( x = y -> ( x = z -> y = z ) ) $.

  $( Axiom of Existence.  One of the equality and substitution axioms of
     predicate calculus with equality.  One thing this axiom tells us is that
     at least one thing exists (although ~ ax-4 and possibly others also tell
     us that, i.e. they are not valid in the empty domain of a "free logic.")
     In this form (not requiring that ` x ` and ` y ` be distinct) it was used
     in an axiom system of Tarski (see Axiom B7' in footnote 1 of
     [KalishMontague] p. 81.)  It is equivalent to axiom scheme C10' in
     [Megill] p. 448 (p. 16 of the preprint); the equivalence is established by
     ~ ax9o and ~ ax9 .  A more convenient form of this axiom is ~ a9e , which
     has additional remarks.

     Raph Levien proved the independence of this axiom from the others on
     12-Apr-2005.  See item 16 at ~ http://us.metamath.org/award2003.html . $)
  ax-9 $a |- -. A. x -. x = y $.

  $( Axiom of Quantifier Substitution.  One of the equality and substitution
     axioms of predicate calculus with equality.  Appears as Lemma L12 in
     [Megill] p. 445 (p. 12 of the preprint).

     The original version of this axiom was ~ ax-10o ("o" for "old") and was
     replaced with this shorter ~ ax-10 in May 2008.  The old axiom is proved
     from this one as theorem ~ ax10o .  Conversely, this axiom is proved from
     ~ ax-10o as theorem ~ ax10 . $)
  ax-10 $a |- ( A. x x = y -> A. y y = x ) $.

  $( Axiom of Variable Substitution.  One of the 5 equality axioms of predicate
     calculus.  The final consequent ` A. x ( x = y -> ph ) ` is a way of
     expressing " ` y ` substituted for ` x ` in wff ` ph ` " (cf. ~ sb6 ).  It
     is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of [Monk2] p. 105,
     from which it can be proved by cases.

     The original version of this axiom was ~ ax-11o ("o" for "old") and was
     replaced with this shorter ~ ax-11 in Jan. 2007.  The old axiom is proved
     from this one as theorem ~ ax11o .  Conversely, this axiom is proved from
     ~ ax-11o as theorem ~ ax11 .

     Juha Arpiainen proved the independence of this axiom (in the form of the
     older axiom ~ ax-11o ) from the others on 19-Jan-2006.  See item 9a at
     ~ http://us.metamath.org/award2003.html .

     Interestingly, if the wff expression substituted for ` ph ` contains no
     wff variables, the resulting statement _can_ be proved without invoking
     this axiom.  This means that even though this axiom is _metalogically_
     independent from the others, it is not _logically_ independent.
     Specifically, we can prove any wff-variable-free instance of axiom
     ~ ax-11o (from which the ~ ax-11 instance follows by theorem ~ ax11 .)
     The proof is by induction on formula length, using ~ ax11eq and ~ ax11el
     for the basis steps and ~ ax11indn , ~ ax11indi , and ~ ax11inda for the
     induction steps.

     See also ~ ax11v and ~ ax11v2 for other equivalents of this axiom that
     (unlike this axiom) have distinct variable restrictions. $)
  ax-11 $a |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $.

  $( Axiom of Quantifier Introduction.  One of the equality and substitution
     axioms of predicate calculus with equality.  Informally, it says that
     whenever ` z ` is distinct from ` x ` and ` y ` , and ` x = y ` is true,
     then ` x = y ` quantified with ` z ` is also true.  In other words, ` z `
     is irrelevant to the truth of ` x = y ` .  Axiom scheme C9' in [Megill]
     p. 448 (p. 16 of the preprint).  It apparently does not otherwise appear
     in the literature but is easily proved from textbook predicate calculus by
     cases.

     An open problem is whether this axiom is redundant.  Note that the
     analogous axiom for the membership connective, ~ ax-15 , has been shown to
     be redundant.  It is also unknown whether this axiom can be replaced by a
     shorter formula.  However, it can be derived from two slightly shorter
     formulas, as shown by ~ a12study . $)
  ax-12 $a |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x = y -> A. z x = y ) ) ) $.

  $( Axiom of Equality.  One of the equality and substitution axioms for a
     non-logical predicate in our predicate calculus with equality.  It
     substitutes equal variables into the left-hand side of the ` e. ` binary
     predicate.  Axiom scheme C12' in [Megill] p. 448 (p. 16 of the preprint).
     It is a special case of Axiom B8 (p. 75) of system S2 of [Tarski] p. 77.
     "Non-logical" means that the predicate is not a primitive of predicate
     calculus proper but instead is an extension to it.  "Binary" means that
     the predicate has two arguments.  In a system of predicate calculus with
     equality, like ours, equality is not usually considered to be a
     non-logical predicate.  In systems of predicate calculus without equality,
     it typically would be. $)
  ax-13 $a |- ( x = y -> ( x e. z -> y e. z ) ) $.

  $( Axiom of Equality.  One of the equality and substitution axioms for a
     non-logical predicate in our predicate calculus with equality.  It
     substitutes equal variables into the right-hand side of the ` e. ` binary
     predicate.  Axiom scheme C13' in [Megill] p. 448 (p. 16 of the preprint).
     It is a special case of Axiom B8 (p. 75) of system S2 of [Tarski]
     p. 77. $)
  ax-14 $a |- ( x = y -> ( z e. x -> z e. y ) ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Some theorems that use neither ax-17 nor ax-4
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A more general version of ~ hbequid2 using ~ ax-5 , ~ ax-8 , ~ ax-12 , and
     ~ ax-gen . $)
  hbequid $p |- ( x = x -> A. y x = x ) $=
    ( cv wceq wal wi ax-12 ax-8 pm2.43i ax-gen ax-5 ax-mp a1d pm2.61ii ) BCACZD
    ZBEZQOODZRBEZFAABGQSRPRFZBEQSFTBPRBAAHIJPRBKLMZUAN $.
    $( [13-Jan-2011] $)

  $( ~ equid with existential quantifier without using ~ ax-4 or ~ ax-17 . $)
  equidqe $p |- -. A. y -. x = x $=
    ( weq wn wal ax-9 wi ax-8 pm2.43i con3i ax-gen ax-5 ax-mp mto ) AACZDZBEZBA
    CZDZBEZBAFPSGZBEQTGUABROROBAAHIJKPSBLMN $.
    $( [13-Jan-2011] $)

  $( ~ equid with universal quantifier without using ~ ax-4 or ~ ax-17 . $)
  equidq $p |- A. y x = x $=
    ( weq wal wn equidqe ax-6 wi hbequid con3i ax-gen ax-5 ax-mp syl mt3 ) AACZ
    BDZPEZBDZABFQEZTBDZSPBGTRHZBDUASHUBBPQABIJKTRBLMNO $.
    $( [13-Jan-2011] $)

  $( A special case of ~ ax-4 without using ~ ax-4 or ~ ax-17 . $)
  ax4sp1 $p |- ( A. y -. x = x -> -. x = x ) $=
    ( weq wn wal equidqe pm2.21i ) AACDZBEHABFG $.
    $( [13-Jan-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Axiom ax-17 - first use of the $d distinct variable statement
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    $d x ph $.
    $( Axiom to quantify a variable over a formula in which it does not occur.
       Axiom C5 in [Megill] p. 444 (p. 11 of the preprint).  Also appears as
       Axiom B6 (p. 75) of system S2 of [Tarski] p. 77 and Axiom C5-1 of
       [Monk2] p. 113.

       This axiom is _logically_ redundant in the (logically complete)
       predicate calculus axiom system consisting of ~ ax-gen , ~ ax-4 through
       ~ ax-9 , ~ ax-10o , and ~ ax-12 through ~ ax-16 : in that system, we can
       derive any instance of ~ ax-17 not containing wff variables by induction
       on formula length, using ~ ax17eq and ~ ax17el for the basis together
       ~ hbn , ~ hbal , and ~ hbim .  However, if we omit this axiom, our
       development would be quite inconvenient since we could work only with
       specific instances of wffs containing no wff variables - this axiom
       introduces the concept of a set variable not occurring in a wff (as
       opposed to just two set variables being distinct). $)
    ax-17 $a |- ( ph -> A. x ph ) $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive ax-4, ax-5o, and ax-6o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.  $d y ph $.
    $( Theorem showing that ~ ax-4 can be derived from ~ ax-5 , ~ ax-gen ,
       ~ ax-8 , ~ ax-9 , ~ ax-11 , and ~ ax-17 and is therefore redundant in a
       system including the latter axioms.  Lemma 21 of [Monk2] p. 114.

       This theorem should not be referenced in any proof.  Instead, we will
       use ~ ax-4 below so that explicit uses of ~ ax-4 can be more easily
       identified.  In particular, this will more cleanly separate out the
       theorems of "pure" predicate calculus that don't involve equality or
       distinct variables.  A beginner may wish to accept ~ ax-4 a priori, so
       that the proof of this theorem ( ~ ax4 ), which involves equality as
       well as the distinct variable requirements of ~ ax-17 , can be put off
       until those axioms are studied.

       Note:  All predicate calculus axioms introduced from this point forward
       are redundant.  Immediately before their introduction, we prove them
       from earlier axioms to demonstrate their redundancy.  Specifically,
       redundant axioms ~ ax-4 , ~ ax-5o , ~ ax-6o , ~ ax-9o , ~ ax-10o ,
       ~ ax-11o , ~ ax-15 , and ~ ax-16 are proved by theorems ~ ax4 , ~ ax5o ,
       ~ ax6o , ~ ax9o , ~ ax10o , ~ ax11o , ~ ax15 , and ~ ax16 .  We never
       reference those theorems directly - instead, we use the axiom version
       that immediately follows it - in order to better isolate the uses of the
       redundant axioms for easier study of subsystems containing them.

       (The proof was shortened by Scott Fenton, 24-Jan-2011.) $)
    ax4 $p |- ( A. x ph -> ph ) $=
      ( vy wal wi weq wn ax-9 ax-17 ax-8 pm2.43i con3i ax-gen ax-5 ax-mp syl 
      mt3 mpi ax-11 syl5 con2 mtoi syl6 con4d ) ABDZAEZCBFZGZCDZCBHUFGZUJCDZUIU
      JCIUJUHEZCDUKUIEULCUGUFUGAUEUGAGZBCFZUMEZBDZUEGUGUMCDZUPUMUGUNUQUPEUGCCFZ
      UNURUNGZBDZBCHZURGZVBBDZUTVBBIVBUSEZBDVCUTEVDBUNURUNURBCCJKLMVBUSBNOPQCBC
      JRUMBCSPUMCITUPUEUTVAUPAUSEZBDZUEUTEUOVEEZBDUPVFEVGBUNAUAMUOVEBNOAUSBNPUB
      UCUDLMUJUHCNOPQ $.
      $( [24-Jan-2011] $) $( [21-May-2008] $)
  $}

  $( Axiom of Specialization.  A quantified wff implies the wff without a
     quantifier (i.e. an instance, or special case, of the generalized wff).
     In other words if something is true for all ` x ` , it is true for any
     specific ` x ` (that would typically occur as a free variable in the wff
     substituted for ` ph ` ).  (A free variable is one that does not occur in
     the scope of a quantifier: ` x ` and ` y ` are both free in ` x = y ` ,
     but only ` x ` is free in ` A. y x = y ` .)  This is one of the axioms of
     what we call "pure" predicate calculus ( ~ ax-4 through ~ ax-7 plus rule
     ~ ax-gen ).  Axiom scheme C5' in [Megill] p. 448 (p. 16 of the preprint).
     Also appears as Axiom B5 of [Tarski] p. 67 (under his system S2, defined
     in the last paragraph on p. 77).

     Note that the converse of this axiom does not hold in general, but a
     weaker inference form of the converse holds and is expressed as rule
     ~ ax-gen .  Conditional forms of the converse are given by ~ ax-12 ,
     ~ ax-15 , ~ ax-16 , and ~ ax-17 .

     Unlike the more general textbook Axiom of Specialization, we cannot choose
     a variable different from ` x ` for the special case.  For use, that
     requires the assistance of equality axioms, and we deal with it later
     after we introduce the definition of proper substitution - see ~ stdpc4 .

     An nice alternate axiomatization uses ~ ax467 and ~ ax-5o in place of
     ~ ax-4 , ~ ax-5 , ~ ax-6 , and ~ ax-7 .

     This axiom is redundant in the presence of certain other axioms, as shown
     by theorem ~ ax4 .  (We replaced the older ~ ax-5o and ~ ax-6o with newer
     versions ~ ax-5 and ~ ax-6 in order to prove this redundancy.) $)
  ax-4 $a |- ( A. x ph -> ph ) $.

  $( Show that the original axiom ~ ax-5o can be derived from ~ ax-5 and
     others.  See ~ ax5 for the rederivation of ~ ax-5 from ~ ax-5o .

     Part of the proof is based on the proof of Lemma 22 of [Monk2] p. 114.

     This theorem should not be referenced in any proof.  Instead, use ~ ax-5o
     below so that uses of ~ ax-5o can be more easily identified. $)
  ax5o $p |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wal wi ax-5 wn ax-4 con2i ax-6 con1i ax-gen ax-mp 3syl syl5 ) ACDZBECDPCD
    ZBCDPPBCFPPGZCDZGZTCDZQSPRCHIRCJTPEZCDUAQEUBCPSACJKLTPCFMNO $.
    $( [21-May-2008] $)

  $( Axiom of Quantified Implication.  This axiom moves a quantifier from
     outside to inside an implication, quantifying ` ps ` .  Notice that ` x `
     must not be a free variable in the antecedent of the quantified
     implication, and we express this by binding ` ph ` to "protect" the axiom
     from a ` ph ` containing a free ` x ` .  One of the 4 axioms of "pure"
     predicate calculus.  Axiom scheme C4' in [Megill] p. 448 (p. 16 of the
     preprint).  It is a special case of Lemma 5 of [Monk2] p. 108 and Axiom 5
     of [Mendelson] p. 69.

     This axiom is redundant, as shown by theorem ~ ax5o . $)
  ax-5o $a |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) $.

  $( Rederivation of axiom ~ ax-5 from the orginal version, ~ ax-5o .  See
     ~ ax5o for the derivation of ~ ax-5o from ~ ax-5 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-5
     above so that uses of ~ ax-5 can be more easily identified.

     Note:  This is the same as theorem ~ alim below.  It is proved separately
     here so that it won't be dependent on the axioms used for ~ alim (which
     may change in the future). $)
  ax5 $p |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wi wal ax-4 syl5 ax-gen ax-5o ax-mp syl ) ABDZCEZACEZBDZCEZNBCEDMODZCEMPD
    QCMABNLCFACFGHLOCIJABCIK $.
    $( [5-Dec-2010] $) $( [23-May-2008] $)

  $( Show that the original axiom ~ ax-6o can be derived from ~ ax-6 and
     others.  See ~ ax6 for the rederivation of ~ ax-6 from ~ ax-6o .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-6o
     below so that uses of ~ ax-6o can be more easily identified. $)
  ax6o $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn ax-4 ax-6 nsyl4 ) ABCZAHDBCABEABFG $.
    $( [21-May-2008] $)

  $( Axiom of Quantified Negation.  This axiom is used to manipulate negated
     quantifiers.  One of the 4 axioms of pure predicate calculus.  Equivalent
     to axiom scheme C7' in [Megill] p. 448 (p. 16 of the preprint).  An
     alternate axiomatization could use ~ ax467 in place of ~ ax-4 , ~ ax-6o ,
     and ~ ax-7 .

     This axiom is redundant, as shown by theorem ~ ax6o . $)
  ax-6o $a |- ( -. A. x -. A. x ph -> ph ) $.

  $( Rederivation of axiom ~ ax-6 from the orginal version, ~ ax-6o .  See
     ~ ax6o for the derivation of ~ ax-6o from ~ ax-6 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-6
     above so that uses of ~ ax-6 can be more easily identified. $)
  ax6 $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( wal wn wi ax-4 id ax-gen ax-5o ax-mp nsyl ax-6o nsyl4 ) ABCZBCZDZBCZNDZBC
    ZNQREZBCQSETBQONPBFNNEZBCNOEUABNGHANBIJKHPRBIJNBLM $.
    $( [23-May-2008] $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                Predicate calculus without distinct variables
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    "Pure" predicate calculus ax-4, ax-5o, ax-6o, ax-gen
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  $( Declare the existential quantifier symbol. $)
  $c E. $.   $( Backwards E (read:  "there exists") $)

  $( Extend wff definition to include the existential quantifier ("there
     exists"). $)
  wex $a wff E. x ph $.

  $( Define existential quantification. ` E. x ph ` means "there exists at
     least one set ` x ` such that ` ph ` is true."  Definition of [Margaris]
     p. 49. $)
  df-ex $a |- ( E. x ph <-> -. A. x -. ph ) $.

  ${
    a4i.1 $e |- A. x ph $.
    $( Inference rule reversing generalization. $)
    a4i $p |- ph $=
      ( wal ax-4 ax-mp ) ABDACABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    gen2.1 $e |- ph $.
    $( Generalization applied twice. $)
    gen2 $p |- A. x A. y ph $=
      ( wal ax-gen ) ACEBACDFF $.
      $( [30-Apr-1998] $)
  $}

  ${
    a4s.1 $e |- ( ph -> ps ) $.
    $( Generalization of antecedent. $)
    a4s $p |- ( A. x ph -> ps ) $=
      ( wal ax-4 syl ) ACEABACFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    a4sd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction generalizing antecedent. $)
    a4sd $p |- ( ph -> ( A. x ps -> ch ) ) $=
      ( wal ax-4 syl5 ) ABCBDFEBDGH $.
      $( [17-Aug-1994] $)
  $}

  ${
    mpg.1 $e |- ( A. x ph -> ps ) $.
    mpg.2 $e |- ph $.
    $( Modus ponens combined with generalization. $)
    mpg $p |- ps $=
      ( wal ax-gen ax-mp ) ACFBACEGDH $.
      $( [24-May-1994] $)
  $}

  ${
    mpgbi.1 $e |- ( A. x ph <-> ps ) $.
    mpgbi.2 $e |- ph $.
    $( Modus ponens on biconditional combined with generalization.  (The proof
       was shortened by Stefan Allan, 28-Oct-2008.) $)
    mpgbi $p |- ps $=
      ( wal ax-gen mpbi ) ACFBACEGDH $.
      $( [31-Oct-2008] $) $( [24-May-1994] $)
  $}

  ${
    mpgbir.1 $e |- ( ph <-> A. x ps ) $.
    mpgbir.2 $e |- ps $.
    $( Modus ponens on biconditional combined with generalization.  (The proof
       was shortened by Stefan Allan, 28-Oct-2008.) $)
    mpgbir $p |- ph $=
      ( wal ax-gen mpbir ) ABCFBCEGDH $.
      $( [31-Oct-2008] $) $( [24-May-1994] $)
  $}

  ${
    a5i.1 $e |- ( A. x ph -> ps ) $.
    $( Inference from ~ ax-5o . $)
    a5i $p |- ( A. x ph -> A. x ps ) $=
      ( wal wi ax-5o mpg ) ACEZBFIBCEFCABCGDH $.
      $( [5-Aug-1993] $)
  $}

  $( Abbreviated version of ~ ax-6o . $)
  a6e $p |- ( E. x A. x ph -> ph ) $=
    ( wal wex wn df-ex ax-6o sylbi ) ABCZBDIEBCEAIBFABGH $.
    $( [5-Aug-1993] $)

  ${
    a7s.1 $e |- ( A. x A. y ph -> ps ) $.
    $( Swap quantifiers in an antecedent. $)
    a7s $p |- ( A. y A. x ph -> ps ) $=
      ( wal ax-7 syl ) ACFDFADFCFBADCGEH $.
      $( [5-Aug-1993] $)
  $}

  ${
    alimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    alimi $p |- ( A. x ph -> A. x ps ) $=
      ( a4s a5i ) ABCABCDEF $.
      $( [5-Aug-1993] $)

    $( Inference doubly quantifying both antecedent and consequent. $)
    2alimi $p |- ( A. x A. y ph -> A. x A. y ps ) $=
      ( wal alimi ) ADFBDFCABDEGG $.
      $( [3-Feb-2005] $)
  $}

  $( Theorem 19.20 of [Margaris] p. 90.  (The proof was shortened by O'Cat,
     30-Mar-2008.) $)
  alim $p |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wi wal id a4sd alimi ax-5o syl ) ABDZCEACEZBDZCELBCEDKMCKABCKFGHABCIJ $.
    $( [30-Mar-2008] $) $( [5-Aug-1993] $)

  ${
    al2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent. $)
    al2imi $p |- ( A. x ph -> ( A. x ps -> A. x ch ) ) $=
      ( wal wi alimi alim syl ) ADFBCGZDFBDFCDFGAKDEHBCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    alanimi.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Variant of ~ al2imi with conjunctive antecedent.  (Contributed by Andrew
       Salmon, 8-Jun-2011.) $)
    alanimi $p |- ( ( A. x ph /\ A. x ps ) -> A. x ch ) $=
      ( wal ex al2imi imp ) ADFBDFCDFABCDABCEGHI $.
      $( [8-Jun-2011] $)
  $}

  ${
    alimd.1 $e |- ( ph -> A. x ph ) $.
    alimd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.20 of [Margaris] p. 90. $)
    alimd $p |- ( ph -> ( A. x ps -> A. x ch ) ) $=
      ( wal wi al2imi syl ) AADGBDGCDGHEABCDFIJ $.
      $( [4-Jan-2002] $)
  $}

  $( Theorem 19.15 of [Margaris] p. 90. $)
  albi $p |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) $=
    ( wb wal bi1 al2imi bi2 impbid ) ABDZCEACEBCEJABCABFGJBACABHGI $.
    $( [5-Aug-1993] $)

  ${
    19.21ai.1 $e |- ( ph -> A. x ph ) $.
    19.21ai.2 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    19.21ai $p |- ( ph -> A. x ps ) $=
      ( wal alimi syl ) AACFBCFDABCEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    albii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding universal quantifier to both sides of an
       equivalence. $)
    albii $p |- ( A. x ph <-> A. x ps ) $=
      ( wb wal albi mpg ) ABEACFBCFECABCGDH $.
      $( [7-Aug-1994] $)

    $( Inference adding 2 universal quantifiers to both sides of an
       equivalence. $)
    2albii $p |- ( A. x A. y ph <-> A. x A. y ps ) $=
      ( wal albii ) ADFBDFCABDEGG $.
      $( [9-Mar-1997] $)
  $}

  ${
    hbth.1 $e |- ph $.
    $( No variable is (effectively) free in a theorem.

       This and later "hypothesis-building" lemmas, with labels starting
       "hb...", allow us to construct proofs of formulas of the form
       ` |- ( ph -> A. x ph ) ` from smaller formulas of this form.  These are
       useful for constructing hypotheses that state " ` x ` is (effectively)
       not free in ` ph ` ." $)
    hbth $p |- ( ph -> A. x ph ) $=
      ( wal ax-gen a1i ) ABDAABCEF $.
      $( [5-Aug-1993] $)
  $}

  $( Closed theorem version of bound-variable hypothesis builder ~ hbn . $)
  hbnt $p |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) $=
    ( wal wi wn con3 al2imi ax-6o con1i syl5 ) AABCZDZBCKEZBCZAEZBCOLMOBAKFGNAA
    BHIJ $.
    $( [5-Aug-1993] $)

  $( ` x ` is not free in ` A. x ph ` .  Example in Appendix in [Megill] p. 450
     (p. 19 of the preprint).  Also Lemma 22 of [Monk2] p. 114. $)
  hba1 $p |- ( A. x ph -> A. x A. x ph ) $=
    ( wal id a5i ) AABCZBFDE $.
    $( [5-Aug-1993] $)

  ${
    hb.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` -. ph ` . $)
    hbn $p |- ( -. ph -> A. x -. ph ) $=
      ( wal wi wn hbnt mpg ) AABDEAFZIBDEBABGCH $.
      $( [5-Aug-1993] $)

    $( If ` x ` is not free in ` ph ` , it is not free in ` A. y ph ` . $)
    hbal $p |- ( A. y ph -> A. x A. y ph ) $=
      ( wal alimi ax-7 syl ) ACEZABEZCEIBEAJCDFACBGH $.
      $( [5-Aug-1993] $)

    $( If ` x ` is not free in ` ph ` , it is not free in ` E. y ph ` . $)
    hbex $p |- ( E. y ph -> A. x E. y ph ) $=
      ( wn wal wex hbn hbal df-ex albii 3imtr4i ) AEZCFZEZOBFACGZPBFNBMBCABDHIH
      ACJZPOBQKL $.
      $( [5-Aug-1993] $)

    ${
      hb.2 $e |- ( ps -> A. x ps ) $.
      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph -> ps ) ` .  (The proof was shortened by O'Cat, 3-Mar-2008.) $)
      hbim $p |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) $=
        ( wi wal wn hbn pm2.21 19.21ai ax-1 ja ) ABABFZCGAHNCACDIABJKBNCEBALKM 
        $.
        $( [4-Mar-2008] $)  $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph \/ ps ) ` . $)
      hbor $p |- ( ( ph \/ ps ) -> A. x ( ph \/ ps ) ) $=
        ( wn wi wal wo hbn hbim df-or albii 3imtr4i ) AFZBGZPCHABIZQCHOBCACDJEK
        ABLZQPCRMN $.
        $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph /\ ps ) ` . $)
      hban $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
        ( wn wi wal wa hbn hbim df-an albii 3imtr4i ) ABFZGZFZQCHABIZRCHPCAOCDB
        CEJKJABLZRQCSMN $.
        $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph <-> ps ) ` . $)
      hbbi $p |- ( ( ph <-> ps ) -> A. x ( ph <-> ps ) ) $=
        ( wi wa wal wb hbim hban dfbi2 albii 3imtr4i ) ABFZBAFZGZQCHABIZRCHOPCA
        BCDEJBACEDJKABLZRQCSMN $.
        $( [5-Aug-1993] $)

      ${
        hb.3 $e |- ( ch -> A. x ch ) $.
        $( If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not
           free in ` ( ph \/ ps \/ ch ) ` . $)
        hb3or $p |- ( ( ph \/ ps \/ ch ) -> A. x ( ph \/ ps \/ ch ) ) $=
          ( wo wal w3o hbor df-3or albii 3imtr4i ) ABHZCHZPDIABCJZQDIOCDABDEFKG
          KABCLZQPDRMN $.
          $( [14-Sep-2003] $)

        $( If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not
           free in ` ( ph /\ ps /\ ch ) ` . $)
        hb3an $p |- ( ( ph /\ ps /\ ch ) -> A. x ( ph /\ ps /\ ch ) ) $=
          ( wa wal w3a hban df-3an albii 3imtr4i ) ABHZCHZPDIABCJZQDIOCDABDEFKG
          KABCLZQPDRMN $.
          $( [14-Sep-2003] $)
      $}
    $}
  $}

  $( Lemma 24 of [Monk2] p. 114. $)
  hba2 $p |- ( A. y A. x ph -> A. x A. y A. x ph ) $=
    ( wal hba1 hbal ) ABDBCABEF $.
    $( [29-May-2008] $)

  $( Lemma 23 of [Monk2] p. 114. $)
  hbia1 $p |- ( ( A. x ph -> A. x ps ) -> A. x ( A. x ph -> A. x ps ) ) $=
    ( wal hba1 hbim ) ACDBCDCACEBCEF $.
    $( [29-May-2008] $)

  $( ` x ` is not free in ` -. A. x ph ` . $)
  hbn1 $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( wal hba1 hbn ) ABCBABDE $.
    $( [5-Aug-1993] $)

  $( ` x ` is not free in ` E. x ph ` . $)
  hbe1 $p |- ( E. x ph -> A. x E. x ph ) $=
    ( wn wal wex hbn1 df-ex albii 3imtr4i ) ACZBDCZKBDABEZLBDJBFABGZLKBMHI $.
    $( [5-Aug-1993] $)

  $( Proof of a single axiom that can replace ~ ax-4 and ~ ax-6o .  See
     ~ ax46to4 and ~ ax46to6 for the re-derivation of those axioms.
     (Contributed by Scott Fenton, 12-Sep-2005.) $)
  ax46 $p |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) $=
    ( wal wn ax-6o ax-4 ja ) ABCZDBCHAABEABFG $.
    $( [12-Sep-2005] $)

  $( Re-derivation of ~ ax-4 from ~ ax46 .  Only propositional calculus is used
     for the re-derivation.  (Contributed by Scott Fenton, 12-Sep-2005.) $)
  ax46to4 $p |- ( A. x ph -> ph ) $=
    ( wal wn wi ax-1 ax46 syl ) ABCZIDBCZIEAIJFABGH $.
    $( [12-Sep-2005] $)

  $( Re-derivation of ~ ax-6o from ~ ax46 .  Only propositional calculus is
     used for the re-derivation.  (Contributed by Scott Fenton,
     12-Sep-2005.) $)
  ax46to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn wi pm2.21 ax46 syl ) ABCZDBCZDJIEAJIFABGH $.
    $( [12-Sep-2005] $)

  $( Proof of a single axiom that can replace both ~ ax-6o and ~ ax-7 .  See
     ~ ax67to6 and ~ ax67to7 for the re-derivation of those axioms. $)
  ax67 $p |- ( -. A. x -. A. y A. x ph -> A. y ph ) $=
    ( wal wn ax-7 con3i alimi ax-6o syl ) ABDCDZEZBDZEACDZBDZEZBDZENQMPLBKOACBF
    GHGNBIJ $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-6o from ~ ax67 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation. $)
  ax67to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn hba1 con3i alimi ax67 ax-4 3syl ) ABCZDZBCZDKBCZDZBCZDKAPMOLBKNABE
    FGFABBHABIJ $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-7 from ~ ax67 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation. $)
  ax67to7 $p |- ( A. x A. y ph -> A. y A. x ph ) $=
    ( wal wn ax67to6 con4i ax67 alimi syl ) ACDBDZKEZCDEZCDZABDZCDNKLCFGMOCACBH
    IJ $.
    $( [18-Nov-2006] $)

  $( Proof of a single axiom that can replace ~ ax-4 , ~ ax-6o , and ~ ax-7 in
     a subsystem that includes these axioms plus ~ ax-5o and ~ ax-gen (and
     propositional calculus).  See ~ ax467to4 , ~ ax467to6 , and ~ ax467to7 for
     the re-derivation of those axioms.  This theorem extends the idea in Scott
     Fenton's ~ ax46 . $)
  ax467 $p |- ( ( A. x A. y -. A. x A. y ph -> A. x ph ) -> ph ) $=
    ( wal wn ax-4 hbn1 ax-6o con1i alimi ax-7 3syl nsyl4 ja ) ACDZBDEZCDBDZABDA
    OAQACFOEZRCDPBDZCDQACGRSCSOOBHIJPCBKLMABFN $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-4 from ~ ax467 .  Only propositional calculus is
     used by the re-derivation. $)
  ax467to4 $p |- ( A. x ph -> ph ) $=
    ( wal wn wi ax-1 ax467 syl ) ABCZIBCDBCBCZIEAIJFABBGH $.
    $( [19-Nov-2006] $)

  $( Re-derivation of ~ ax-6o from ~ ax467 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation.  The use of ~ alimi (which uses ~ ax-4 ) is
     allowed since we have already proved ~ ax467to4 . $)
  ax467to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn wi ax467to4 hba1 con3i alimi syl pm2.21 ax467 3syl ) ABCZDZBCZDNBC
    ZDZBCZBCZDTNEATPTSPSBFROBNQABGHIJHTNKABBLM $.
    $( [19-Nov-2006] $)

  $( Re-derivation of ~ ax-7 from ~ ax467 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation.  The use of ~ alimi (which uses ~ ax-4 ) is
     allowed since we have already proved ~ ax467to4 . $)
  ax467to7 $p |- ( A. x A. y ph -> A. y A. x ph ) $=
    ( wal wn ax467to6 con4i wi pm2.21 ax467 syl alimi nsyl4 ) ACDBDZNEZCDZEZCDZ
    ABDZCDRNOCFGQSCPBDZEZBDSPUAABUATSHATSIABCJKLPBFMLK $.
    $( [19-Nov-2006] $)

  $( The analog in our "pure" predicate calculus of axiom 5 of modal logic
     S5. $)
  modal-5 $p |- ( -. A. x -. ph -> A. x -. A. x -. ph ) $=
    ( wn hbn1 ) ACBD $.
    $( [5-Oct-2005] $)

  $( The analog in our "pure" predicate calculus of the Brouwer axiom (B) of
     modal logic S5. $)
  modal-b $p |- ( ph -> A. x -. A. x -. ph ) $=
    ( wn wal ax-6o con4i ) ACZBDCBDAGBEF $.
    $( [5-Oct-2005] $)

  $( If a wff is true, it is true for at least one instance.  Special case of
     Theorem 19.8 of [Margaris] p. 89. $)
  19.8a $p |- ( ph -> E. x ph ) $=
    ( wn wal wex ax-4 con2i df-ex sylibr ) AACZBDZCABEKAJBFGABHI $.
    $( [5-Aug-1993] $)

  $( Theorem 19.2 of [Margaris] p. 89, generalized to use two set variables.
     (Contributed by O'Cat, 31-Mar-2008.) $)
  19.2 $p |- ( A. x ph -> E. y ph ) $=
    ( wex 19.8a a4s ) AACDBACEF $.
    $( [31-Mar-2008] $)

  ${
    19.3.1 $e |- ( ph -> A. x ph ) $.
    $( A wff may be quantified with a variable not free in it.  Theorem 19.3 of
       [Margaris] p. 89. $)
    19.3 $p |- ( A. x ph <-> ph ) $=
      ( wal ax-4 impbii ) ABDAABECF $.
      $( [21-May-2007] $) $( [5-Aug-1993] $)
  $}

  $( Theorem 19.5 of [Margaris] p. 89. $)
  alcom $p |- ( A. x A. y ph <-> A. y A. x ph ) $=
    ( wal ax-7 impbii ) ACDBDABDCDABCEACBEF $.
    $( [5-Aug-1993] $)

  $( Theorem 19.7 of [Margaris] p. 89. $)
  alnex $p |- ( A. x -. ph <-> -. E. x ph ) $=
    ( wex wn wal df-ex con2bii ) ABCADBEABFG $.
    $( [5-Aug-1993] $)

  $( Theorem 19.6 of [Margaris] p. 89. $)
  alex $p |- ( A. x ph <-> -. E. x -. ph ) $=
    ( wal wn wex notnot albii alnex bitri ) ABCADZDZBCJBEDAKBAFGJBHI $.
    $( [5-Aug-1993] $)

  $( A closed version of one direction of ~ 19.9 . $)
  19.9t $p |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) $=
    ( wal wi wn wex hbnt con1d df-ex syl5ib ) AABCDBCZAEBCZEAABFKALABGHABIJ $.
    $( [5-Aug-1993] $)

  ${
    19.9.1 $e |- ( ph -> A. x ph ) $.
    $( A wff may be existentially quantified with a variable not free in it.
       Theorem 19.9 of [Margaris] p. 89.  (Contributed by FL, 24-Mar-2007.) $)
    19.9 $p |- ( E. x ph <-> ph ) $=
      ( wex wal wi 19.9t mpg 19.8a impbii ) ABDZAAABEFKAFBABGCHABIJ $.
      $( [24-Mar-2007] $)
  $}

  ${
    19.9d.1 $e |- ( ps -> A. x ps ) $.
    19.9d.2 $e |- ( ps -> ( ph -> A. x ph ) ) $.
    $( A deduction version of one direction of ~ 19.9 . $)
    19.9d $p |- ( ps -> ( E. x ph -> ph ) ) $=
      ( wal wi wex alimi 19.9t 3syl ) BBCFAACFGZCFACHAGDBLCEIACJK $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.14 of [Margaris] p. 90. $)
  exnal $p |- ( E. x -. ph <-> -. A. x ph ) $=
    ( wal wn wex alex con2bii ) ABCADBEABFG $.
    $( [5-Aug-1993] $)

  $( Theorem 19.22 of [Margaris] p. 90. $)
  exim $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) $=
    ( wi wal wn wex con3 al2imi con3d df-ex 3imtr4g ) ABDZCEZAFZCEZFBFZCEZFACGB
    CGNRPMQOCABHIJACKBCKL $.
    $( [5-Aug-1993] $)

  ${
    eximi.1 $e |- ( ph -> ps ) $.
    $( Inference adding existential quantifier to antecedent and consequent. $)
    eximi $p |- ( E. x ph -> E. x ps ) $=
      ( wi wex exim mpg ) ABEACFBCFECABCGDH $.
      $( [5-Aug-1993] $)

    $( Inference adding 2 existential quantifiers to antecedent and
       consequent. $)
    2eximi $p |- ( E. x E. y ph -> E. x E. y ps ) $=
      ( wex eximi ) ADFBDFCABDEGG $.
      $( [3-Feb-2005] $)
  $}

  $( A transformation of quantifiers and logical connectives. $)
  alinexa $p |- ( A. x ( ph -> -. ps ) <-> -. E. x ( ph /\ ps ) ) $=
    ( wn wi wal wa wex imnan albii alnex bitri ) ABDEZCFABGZDZCFNCHDMOCABIJNCKL
    $.
    $( [19-Aug-1993] $)

  $( A transformation of quantifiers and logical connectives. $)
  exanali $p |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) $=
    ( wi wal wn wa wex iman albii alnex bitri con2bii ) ABDZCEZABFGZCHZOPFZCEQF
    NRCABIJPCKLM $.
    $( [25-Mar-1996] $)

  $( A relationship between two quantifiers and negation. $)
  alexn $p |- ( A. x E. y -. ph <-> -. E. x A. y ph ) $=
    ( wn wex wal exnal albii alnex bitri ) ADCEZBFACFZDZBFLBEDKMBACGHLBIJ $.
    $( [18-Aug-1993] $)

  $( One direction of Theorem 19.11 of [Margaris] p. 89. $)
  excomim $p |- ( E. x E. y ph -> E. y E. x ph ) $=
    ( wex 19.8a 2eximi hbe1 hbex 19.9 sylib ) ACDBDABDZCDZBDLAKBCABEFLBKBCABGHI
    J $.
    $( [5-Aug-1993] $)

  $( Theorem 19.11 of [Margaris] p. 89. $)
  excom $p |- ( E. x E. y ph <-> E. y E. x ph ) $=
    ( wex excomim impbii ) ACDBDABDCDABCEACBEF $.
    $( [5-Aug-1993] $)

  $( Theorem 19.12 of [Margaris] p. 89.  Assuming the converse is a mistake
     sometimes made by beginners!  But sometimes the converse does hold, as in
     ~ 19.12vv and ~ r19.12sn . $)
  19.12 $p |- ( E. x A. y ph -> A. y E. x ph ) $=
    ( wal wex hba1 hbex ax-4 eximi 19.21ai ) ACDZBEABECKCBACFGKABACHIJ $.
    $( [5-Aug-1993] $)

  ${
    19.16.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.16 of [Margaris] p. 90. $)
    19.16 $p |- ( A. x ( ph <-> ps ) -> ( ph <-> A. x ps ) ) $=
      ( wb wal albi 19.3 syl5bbr ) ABECFACFBCFAABCGACDHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.17.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.17 of [Margaris] p. 90. $)
    19.17 $p |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> ps ) ) $=
      ( wb wal albi 19.3 syl6bb ) ABECFACFBCFBABCGBCDHI $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.18 of [Margaris] p. 90. $)
  exbi $p |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) $=
    ( wb wal wex wi bi1 alimi exim syl bi2 impbid ) ABDZCEZACFZBCFZOABGZCEPQGNR
    CABHIABCJKOBAGZCEQPGNSCABLIBACJKM $.
    $( [5-Aug-1993] $)

  ${
    exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding existential quantifier to both sides of an
       equivalence. $)
    exbii $p |- ( E. x ph <-> E. x ps ) $=
      ( wb wex exbi mpg ) ABEACFBCFECABCGDH $.
      $( [24-May-1994] $)
  $}

  ${
    2exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding 2 existential quantifiers to both sides of an
       equivalence. $)
    2exbii $p |- ( E. x E. y ph <-> E. x E. y ps ) $=
      ( wex exbii ) ADFBDFCABDEGG $.
      $( [16-Mar-1995] $)
  $}

  ${
    3exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding 3 existential quantifiers to both sides of an
       equivalence. $)
    3exbii $p |- ( E. x E. y E. z ph <-> E. x E. y E. z ps ) $=
      ( wex exbii 2exbii ) AEGBEGCDABEFHI $.
      $( [2-May-1995] $)
  $}

  $( Commutation of conjunction inside an existential quantifier. $)
  exancom $p |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) $=
    ( wa ancom exbii ) ABDBADCABEF $.
    $( [18-Aug-1993] $)

  ${
    19.19.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.19 of [Margaris] p. 90. $)
    19.19 $p |- ( A. x ( ph <-> ps ) -> ( ph <-> E. x ps ) ) $=
      ( wb wal wex exbi 19.9 syl5bbr ) ABECFACGBCGAABCHACDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90.  The hypothesis can be thought of
       as " ` x ` is not free in ` ph ` ." $)
    19.21 $p |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) $=
      ( wi wal alim syl5 hba1 hbim ax-4 imim2i 19.21ai impbii ) ABEZCFZABCFZEZP
      ACFQAABCGDHROCAQCDBCIJQBABCKLMN $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21-2.1 $e |- ( ph -> A. x ph ) $.
    19.21-2.2 $e |- ( ph -> A. y ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90 but with 2 quantifiers. $)
    19.21-2 $p |- ( A. x A. y ( ph -> ps ) <-> ( ph -> A. x A. y ps ) ) $=
      ( wi wal 19.21 albii bitri ) ABGDHZCHABDHZGZCHAMCHGLNCABDFIJAMCEIK $.
      $( [4-Feb-2005] $)
  $}

  ${
    stdpc5.1 $e |- ( ph -> A. x ph ) $.
    $( An axiom scheme of standard predicate calculus that emulates Axiom 5 of
       [Mendelson] p. 69.  The hypothesis ` ( ph -> A. x ph ) ` can be thought
       of as emulating " ` x ` is not free in ` ph ` ."  With this convention,
       the meaning of "not free" is less restrictive than the usual textbook
       definition; for example ` x ` would not (for us) be free in ` x = x ` by
       ~ hbequid2 .  This theorem scheme can be proved as a metatheorem of
       Mendelson's axiom system, even though it is slightly stronger than his
       Axiom 5. $)
    stdpc5 $p |- ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) $=
      ( wi wal 19.21 biimpi ) ABECFABCFEABCDGH $.
      $( [22-Sep-1993] $)
  $}

  ${
    19.21ad.1 $e |- ( ph -> A. x ph ) $.
    19.21ad.2 $e |- ( ps -> A. x ps ) $.
    19.21ad.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.21 of [Margaris] p. 90.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    19.21ad $p |- ( ph -> ( ps -> A. x ch ) ) $=
      ( wal alimd syl5 ) ABDHCDHBABCDEGIFJ $.
      $( [16-May-2011] $) $( [10-Feb-1997] $)
  $}

  ${
    19.21bi.1 $e |- ( ph -> A. x ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    19.21bi $p |- ( ph -> ps ) $=
      ( wal ax-4 syl ) ABCEBDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21bbi.1 $e |- ( ph -> A. x A. y ps ) $.
    $( Inference removing double quantifier. $)
    19.21bbi $p |- ( ph -> ps ) $=
      ( wal 19.21bi ) ABDABDFCEGG $.
      $( [20-Apr-1994] $)
  $}

  ${
    eximd.1 $e |- ( ph -> A. x ph ) $.
    eximd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    eximd $p |- ( ph -> ( E. x ps -> E. x ch ) ) $=
      ( wi wal wex 19.21ai exim syl ) ABCGZDHBDICDIGAMDEFJBCDKL $.
      $( [20-May-1996] $)
  $}

  ${
    19.23.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.23 of [Margaris] p. 90. $)
    19.23 $p |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) $=
      ( wi wal wex exim 19.9 syl6ib hbe1 hbim 19.8a imim1i 19.21ai impbii ) ABE
      ZCFZACGZBEZRSBCGBABCHBCDIJTQCSBCACKDLASBACMNOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.23ai.1 $e |- ( ps -> A. x ps ) $.
    19.23ai.2 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    19.23ai $p |- ( E. x ph -> ps ) $=
      ( wi wex 19.23 mpgbi ) ABFACGBFCABCDHEI $.
      $( [16-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    19.23bi.1 $e |- ( E. x ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90. $)
    19.23bi $p |- ( ph -> ps ) $=
      ( wex 19.8a syl ) AACEBACFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.23ad.1 $e |- ( ph -> A. x ph ) $.
    19.23ad.2 $e |- ( ch -> A. x ch ) $.
    19.23ad.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    19.23ad $p |- ( ph -> ( E. x ps -> ch ) ) $=
      ( wi wal wex 19.21ai 19.23 sylib ) ABCHZDIBDJCHANDEGKBCDFLM $.
      $( [28-Jan-1997] $)
  $}

  $( Theorem 19.26 of [Margaris] p. 90.  Also Theorem *10.22 of
     [WhiteheadRussell] p. 119. $)
  19.26 $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) $=
    ( wa wal simpl alimi simpr jca pm3.2 al2imi imp impbii ) ABDZCEZACEZBCEZDOP
    QNACABFGNBCABHGIPQOABNCABJKLM $.
    $( [5-Aug-1993] $)

  $( Theorem 19.26 of [Margaris] p. 90 with two quantifiers. $)
  19.26-2 $p |- ( A. x A. y ( ph /\ ps ) <->
                ( A. x A. y ph /\ A. x A. y ps ) ) $=
    ( wa wal 19.26 albii bitri ) ABEDFZCFADFZBDFZEZCFKCFLCFEJMCABDGHKLCGI $.
    $( [3-Feb-2005] $)

  $( Theorem 19.26 of [Margaris] p. 90 with triple conjunction. $)
  19.26-3an $p |- ( A. x ( ph /\ ps /\ ch )
                   <-> ( A. x ph /\ A. x ps /\ A. x ch ) ) $=
    ( wa wal w3a 19.26 anbi1i bitri df-3an albii 3bitr4i ) ABEZCEZDFZADFZBDFZEZ
    CDFZEZABCGZDFQRTGPNDFZTEUANCDHUCSTABDHIJUBODABCKLQRTKM $.
    $( [13-Sep-2011] $)

  ${
    19.27.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.27 of [Margaris] p. 90. $)
    19.27 $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) $=
      ( wa wal 19.26 19.3 anbi2i bitri ) ABECFACFZBCFZEKBEABCGLBKBCDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.28.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.28 of [Margaris] p. 90. $)
    19.28 $p |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) $=
      ( wa wal 19.26 19.3 anbi1i bitri ) ABECFACFZBCFZEALEABCGKALACDHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.29 of [Margaris] p. 90.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  19.29 $p |- ( ( A. x ph /\ E. x ps ) -> E. x ( ph /\ ps ) ) $=
    ( wal wex wa wi pm3.2 alimi exim syl imp ) ACDZBCEZABFZCEZMBOGZCDNPGAQCABHI
    BOCJKL $.
    $( [16-May-2011] $) $( [5-Aug-1993] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90. $)
  19.29r $p |- ( ( E. x ph /\ A. x ps ) -> E. x ( ph /\ ps ) ) $=
    ( wal wex wa 19.29 ancom exancom 3imtr4i ) BCDZACEZFBAFCELKFABFCEBACGLKHABC
    IJ $.
    $( [18-Aug-1993] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with double
     quantification. $)
  19.29r2 $p |- ( ( E. x E. y ph /\ A. x A. y ps ) ->
             E. x E. y ( ph /\ ps ) ) $=
    ( wex wal wa 19.29r eximi syl ) ADEZCEBDFZCFGKLGZCEABGDEZCEKLCHMNCABDHIJ $.
    $( [3-Feb-2005] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with mixed
     quantification. $)
  19.29x $p |- ( ( E. x A. y ph /\ A. x E. y ps ) ->
             E. x E. y ( ph /\ ps ) ) $=
    ( wal wex wa 19.29r 19.29 eximi syl ) ADEZCFBDFZCEGLMGZCFABGDFZCFLMCHNOCABD
    IJK $.
    $( [11-Feb-2005] $)

  $( Theorem 19.35 of [Margaris] p. 90.  This theorem is useful for moving an
     implication (in the form of the right-hand side) into the scope of a
     single existential quantifier. $)
  19.35 $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) $=
    ( wal wn wi wex wa 19.26 annim albii df-an 3bitr3i con2bii df-ex imbi2i 
    3bitr4ri ) ACDZBEZCDZEZFZABFZEZCDZERBCGZFUCCGUEUBASHZCDRTHUEUBEASCIUGUDCABJ
    KRTLMNUFUARBCOPUCCOQ $.
    $( [5-Aug-1993] $)

  ${
    19.35i.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.35 of [Margaris] p. 90. $)
    19.35i $p |- ( A. x ph -> E. x ps ) $=
      ( wi wex wal 19.35 mpbi ) ABECFACGBCFEDABCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.35ri.1 $e |- ( A. x ph -> E. x ps ) $.
    $( Inference from Theorem 19.35 of [Margaris] p. 90. $)
    19.35ri $p |- E. x ( ph -> ps ) $=
      ( wi wex wal 19.35 mpbir ) ABECFACGBCFEDABCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.36.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.36 of [Margaris] p. 90. $)
    19.36 $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) $=
      ( wi wex wal 19.35 19.9 imbi2i bitri ) ABECFACGZBCFZELBEABCHMBLBCDIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.36i.1 $e |- ( ps -> A. x ps ) $.
    19.36i.2 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.36 of [Margaris] p. 90. $)
    19.36i $p |- ( A. x ph -> ps ) $=
      ( wi wex wal 19.36 mpbi ) ABFCGACHBFEABCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.37.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.37 of [Margaris] p. 90. $)
    19.37 $p |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) $=
      ( wi wex wal 19.35 19.3 imbi1i bitri ) ABECFACGZBCFZEAMEABCHLAMACDIJK $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.38 of [Margaris] p. 90. $)
  19.38 $p |- ( ( E. x ph -> A. x ps ) -> A. x ( ph -> ps ) ) $=
    ( wex wal wi hbe1 hba1 hbim 19.8a ax-4 imim12i 19.21ai ) ACDZBCEZFABFCNOCAC
    GBCHIANOBACJBCKLM $.
    $( [5-Aug-1993] $)

  $( Theorem 19.39 of [Margaris] p. 90. $)
  19.39 $p |- ( ( E. x ph -> E. x ps ) -> E. x ( ph -> ps ) ) $=
    ( wex wi wal 19.2 imim1i 19.35 sylibr ) ACDZBCDZEACFZLEABECDMKLACCGHABCIJ 
    $.
    $( [5-Aug-1993] $)

  $( Theorem 19.24 of [Margaris] p. 90. $)
  19.24 $p |- ( ( A. x ph -> A. x ps ) -> E. x ( ph -> ps ) ) $=
    ( wal wi wex 19.2 imim2i 19.35 sylibr ) ACDZBCDZEKBCFZEABECFLMKBCCGHABCIJ 
    $.
    $( [5-Aug-1993] $)

  $( Theorem 19.25 of [Margaris] p. 90. $)
  19.25 $p |- ( A. y E. x ( ph -> ps ) ->
              ( E. y A. x ph -> E. y E. x ps ) ) $=
    ( wi wex wal 19.35 biimpi alimi exim syl ) ABECFZDGACGZBCFZEZDGNDFODFEMPDMP
    ABCHIJNODKL $.
    $( [5-Aug-1993] $)

  $( Theorem 19.30 of [Margaris] p. 90.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  19.30 $p |- ( A. x ( ph \/ ps ) -> ( A. x ph \/ E. x ps ) ) $=
    ( wn wi wal wex wo exim exnal syl5ibr df-or albii 3imtr4i ) ADZBEZCFZACFZDZ
    BCGZEABHZCFRTHQOCGTSOBCIACJKUAPCABLMRTLN $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  ${
    19.32.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.32 of [Margaris] p. 90. $)
    19.32 $p |- ( A. x ( ph \/ ps ) <-> ( ph \/ A. x ps ) ) $=
      ( wn wi wal wo hbn 19.21 df-or albii 3bitr4i ) AEZBFZCGNBCGZFABHZCGAPHNBC
      ACDIJQOCABKLAPKM $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.31.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.31 of [Margaris] p. 90. $)
    19.31 $p |- ( A. x ( ph \/ ps ) <-> ( A. x ph \/ ps ) ) $=
      ( wo wal 19.32 orcom albii 3bitr4i ) BAEZCFBACFZEABEZCFLBEBACDGMKCABHILBH
      J $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.43 of [Margaris] p. 90. $)
  19.43 $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) $=
    ( wo wn wal wex wa ioran albii 19.26 alnex anbi12i 3bitri notbii df-ex 
    oran 3bitr4i ) ABDZEZCFZEACGZEZBCGZEZHZESCGUBUDDUAUFUAAEZBEZHZCFUGCFZUHCFZH
    UFTUICABIJUGUHCKUJUCUKUEACLBCLMNOSCPUBUDQR $.
    $( [5-Aug-1993] $)

  ${
    19.44.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.44 of [Margaris] p. 90. $)
    19.44 $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ ps ) ) $=
      ( wo wex 19.43 19.9 orbi2i bitri ) ABECFACFZBCFZEKBEABCGLBKBCDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.45.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.45 of [Margaris] p. 90. $)
    19.45 $p |- ( E. x ( ph \/ ps ) <-> ( ph \/ E. x ps ) ) $=
      ( wo wex 19.43 19.9 orbi1i bitri ) ABECFACFZBCFZEALEABCGKALACDHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.33 of [Margaris] p. 90. $)
  19.33 $p |- ( ( A. x ph \/ A. x ps ) -> A. x ( ph \/ ps ) ) $=
    ( wal wo orc alimi olc jaoi ) ACDABEZCDBCDAJCABFGBJCBAHGI $.
    $( [5-Aug-1993] $)

  $( The antecedent provides a condition implying the converse of ~ 19.33 .
     Compare Theorem 19.33 of [Margaris] p. 90.  (The proof was shortened by
     Andrew Salmon, 25-May-2011.) $)
  19.33b $p |- ( -. ( E. x ph /\ E. x ps ) ->
               ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) $=
    ( wex wa wn wo wal wi ianor alnex wb biorf alimi albi syl olc syl6bir 
    sylbir orc a1i pm2.21 jaod 19.30 syl5 jaoi sylbi 19.33 impbid1 ) ACDZBCDZEF
    ZABGZCHZACHZBCHZGZULUJFZUKFZGUNUQIZUJUKJURUTUSURAFZCHZUTACKVBUNUPUQVBBUMLZC
    HUPUNLVAVCCABMNBUMCOPUPUOQRSUSUOUKGUQUNUSUOUQUKUOUQIUSUOUPTUAUKUQUBUCABCUDU
    EUFUGABCUHUI $.
    $( [25-May-2011] $) $( [27-Mar-2004] $)

  $( Theorem 19.34 of [Margaris] p. 90. $)
  19.34 $p |- ( ( A. x ph \/ E. x ps ) -> E. x ( ph \/ ps ) ) $=
    ( wal wex wo 19.2 orim1i 19.43 sylibr ) ACDZBCEZFACEZLFABFCEKMLACCGHABCIJ 
    $.
    $( [5-Aug-1993] $)

  $( Theorem 19.40 of [Margaris] p. 90. $)
  19.40 $p |- ( E. x ( ph /\ ps ) -> ( E. x ph /\ E. x ps ) ) $=
    ( wa wex simpl eximi simpr jca ) ABDZCEACEBCEJACABFGJBCABHGI $.
    $( [5-Aug-1993] $)

  ${
    19.41.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.41 of [Margaris] p. 90.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    19.41 $p |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) $=
      ( wa wex 19.40 id 19.23ai anim2i syl pm3.21 eximd impcom impbii ) ABEZCFZ
      ACFZBEZQRBCFZESABCGTBRBBCDBHIJKBRQBAPCDBALMNO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    19.42.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.42 of [Margaris] p. 90. $)
    19.42 $p |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) $=
      ( wa wex 19.41 exancom ancom 3bitr4i ) BAECFBCFZAEABECFAKEBACDGABCHAKIJ 
      $.
      $( [18-Aug-1993] $)
  $}

  $( Rotate 4 universal quantifiers twice. $)
  alrot4 $p |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) $=
    ( wal alcom albii bitri 3bitri ) AEFZDFCFZBFACFZEFZDFZBFNBFZDFMBFEFZDFLOBLK
    CFZDFOKCDGRNDACEGHIHNBDGPQDMBEGHJ $.
    $( [2-Feb-2005] $)

  $( Swap 1st and 3rd existential quantifiers. $)
  excom13 $p |- ( E. x E. y E. z ph <-> E. z E. y E. x ph ) $=
    ( wex excom exbii 3bitri ) ADEZCEBEIBEZCEABEZDEZCEKCEDEIBCFJLCABDFGKCDFH $.
    $( [9-Mar-1995] $)

  $( Rotate existential quantifiers. $)
  exrot3 $p |- ( E. x E. y E. z ph <-> E. y E. z E. x ph ) $=
    ( wex excom13 excom bitri ) ADECEBEABEZCEDEIDECEABCDFIDCGH $.
    $( [17-Mar-1995] $)

  $( Rotate existential quantifiers twice. $)
  exrot4 $p |- ( E. x E. y E. z E. w ph <-> E. z E. w E. x E. y ph ) $=
    ( wex excom13 exbii bitri ) AEFDFCFZBFACFZDFEFZBFKBFEFDFJLBACDEGHKBEDGI $.
    $( [9-Mar-1995] $)

  ${
    nexr.1 $e |- -. E. x ph $.
    $( Inference from ~ 19.8a .  (Contributed by Jeff Hankins, 26-Jul-2009.) $)
    nexr $p |- -. ph $=
      ( wex 19.8a mto ) AABDCABEF $.
      $( [26-Jul-2009] $)
  $}

  ${
    nex.1 $e |- -. ph $.
    $( Generalization rule for negated wff. $)
    nex $p |- -. E. x ph $=
      ( wn wex alnex mpgbi ) ADABEDBABFCG $.
      $( [18-May-1994] $)
  $}

  ${
    nexd.1 $e |- ( ph -> A. x ph ) $.
    nexd.2 $e |- ( ph -> -. ps ) $.
    $( Deduction for generalization rule for negated wff. $)
    nexd $p |- ( ph -> -. E. x ps ) $=
      ( wn wal wex 19.21ai alnex sylib ) ABFZCGBCHFALCDEIBCJK $.
      $( [2-Jan-2002] $)
  $}

  ${
    hbim1.1 $e |- ( ph -> A. x ph ) $.
    hbim1.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( A closed form of ~ hbim . $)
    hbim1 $p |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) $=
      ( wi wal a2i 19.21 sylibr ) ABFZABCGZFKCGABLEHABCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    albid.1 $e |- ( ph -> A. x ph ) $.
    albid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for universal quantifier (deduction rule). $)
    albid $p |- ( ph -> ( A. x ps <-> A. x ch ) ) $=
      ( wb wal 19.21ai albi syl ) ABCGZDHBDHCDHGALDEFIBCDJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    exbid.1 $e |- ( ph -> A. x ph ) $.
    exbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for existential quantifier (deduction rule). $)
    exbid $p |- ( ph -> ( E. x ps <-> E. x ch ) ) $=
      ( wb wal wex 19.21ai exbi syl ) ABCGZDHBDICDIGAMDEFJBCDKL $.
      $( [5-Aug-1993] $)
  $}

  $( Simplification of an existentially quantified conjunction.  (Contributed
     by Rodolfo Medina, 25-Sep-2010.)  (The proof was shortened by Andrew
     Salmon, 29-Jun-2011.) $)
  exsimpl $p |- ( E. x ( ph /\ ps ) -> E. x ph ) $=
    ( wa simpl eximi ) ABDACABEF $.
    $( [29-Jun-2011] $) $( [25-Sep-2010] $)

  ${
    exan.1 $e |- ( E. x ph /\ ps ) $.
    $( Place a conjunct in the scope of an existential quantifier.  (The proof
       was shortened by Andrew Salmon, 25-May-2011.) $)
    exan $p |- E. x ( ph /\ ps ) $=
      ( wex wal wa hbe1 19.28 mpgbi 19.29r ax-mp ) ACEZBCFGZABGCEMBGNCMBCACHIDJ
      ABCKL $.
      $( [25-May-2011] $) $( [18-Aug-1993] $)
  $}

  $( Split a biconditional and distribute quantifier. $)
  albiim $p |- ( A. x ( ph <-> ps ) <->
             ( A. x ( ph -> ps ) /\ A. x ( ps -> ph ) ) ) $=
    ( wb wal wi wa dfbi2 albii 19.26 bitri ) ABDZCEABFZBAFZGZCEMCENCEGLOCABHIMN
    CJK $.
    $( [18-Aug-1993] $)

  $( Split a biconditional and distribute 2 quantifiers. $)
  2albiim $p |- ( A. x A. y ( ph <-> ps ) <->
             ( A. x A. y ( ph -> ps ) /\ A. x A. y ( ps -> ph ) ) ) $=
    ( wb wal wi wa albiim albii 19.26 bitri ) ABEDFZCFABGDFZBAGDFZHZCFNCFOCFHMP
    CABDIJNOCKL $.
    $( [3-Feb-2005] $)

  ${
    hbnd.1 $e |- ( ph -> A. x ph ) $.
    hbnd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbn . $)
    hbnd $p |- ( ph -> ( -. ps -> A. x -. ps ) ) $=
      ( wal wi wn 19.21ai hbnt syl ) ABBCFGZCFBHZMCFGALCDEIBCJK $.
      $( [3-Jan-2002] $)
  $}

  ${
    hbimd.1 $e |- ( ph -> A. x ph ) $.
    hbimd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbimd.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbim . $)
    hbimd $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn hbnd pm2.21 alimi syl6com ax-1 ja com12 ) BCHZARDIZBCASHABJZT
      DISABDEFKTRDBCLMNACCDISGCRDCBOMNPQ $.
      $( [1-Jan-2002] $)
  $}

  ${
    hband.1 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hband.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hban . $)
    hband $p |- ( ph -> ( ( ps /\ ch ) -> A. x ( ps /\ ch ) ) ) $=
      ( wa wal anim12d 19.26 syl6ibr ) ABCGZBDHZCDHZGLDHABMCNEFIBCDJK $.
      $( [2-Jan-2002] $)
  $}

  ${
    hbbid.1 $e |- ( ph -> A. x ph ) $.
    hbbid.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbbid.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbbi . $)
    hbbid $p |- ( ph -> ( ( ps <-> ch ) -> A. x ( ps <-> ch ) ) ) $=
      ( wi wa wal wb hbimd anim12d dfbi2 albiim 3imtr4g ) ABCHZCBHZIQDJZRDJZIBC
      KZUADJAQSRTABCDEFGLACBDEGFLMBCNBCDOP $.
      $( [1-Jan-2002] $)
  $}

  ${
    hbald.1 $e |- ( ph -> A. y ph ) $.
    hbald.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbal . $)
    hbald $p |- ( ph -> ( A. y ps -> A. x A. y ps ) ) $=
      ( wal alimd ax-7 syl6 ) ABDGZBCGZDGKCGABLDEFHBDCIJ $.
      $( [2-Jan-2002] $)
  $}

  ${
    hbexd.1 $e |- ( ph -> A. y ph ) $.
    hbexd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbex . $)
    hbexd $p |- ( ph -> ( E. y ps -> A. x E. y ps ) ) $=
      ( wex wal eximd 19.12 syl6 ) ABDGZBCHZDGLCHABMDEFIBDCJK $.
      $( [2-Jan-2002] $)
  $}

  $( Closed form of Theorem 19.21 of [Margaris] p. 90. $)
  19.21t $p |- ( A. x ( ph -> A. x ph ) ->
               ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ) $=
    ( wal wi alim imim2d com12 a4s hba1 ax-4 a1i hbimd imim2i alimi syl6 
    impbid ) AACDZEZCDZABEZCDZABCDZEZSUBUDECUBSUDUBRUCAABCFGHITUDUDCDUBTAUCCSCJ
    SCKUCUCCDETBCJLMUDUACUCBABCKNOPQ $.
    $( [27-May-1997] $)

  $( Closed form of Theorem 19.23 of [Margaris] p. 90. $)
  19.23t $p |- ( A. x ( ps -> A. x ps ) ->
               ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ) $=
    ( wal wi wex hba1 ax-4 impbid2 imbi2d albid 19.23 syl5bb bitr3d ) BBCDZEZCD
    ZAOEZCDZABEZCDACFZBEZQRTCPCGQOBAQOBBCHPCHIZJKQUAOEUBSQOBUAUCJAOCBCGLMN $.
    $( [7-Nov-2005] $)

  $( Introduce a conjunct in the scope of an existential quantifier. $)
  exintr $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ( ph /\ ps ) ) ) $=
    ( wi wal wa hba1 ancl a4s eximd ) ABDZCEAABFZCKCGKALDCABHIJ $.
    $( [11-Aug-1993] $)

  $( Add/remove a conjunct in the scope of an existential quantifier.
     (Contributed by Raph Levien, 3-Jul-2006.) $)
  exintrbi $p |- ( A. x ( ph -> ps ) -> ( E. x ph <-> E. x ( ph /\ ps ) ) ) $=
    ( wi wal wa wb wex pm4.71 albii exbi sylbi ) ABDZCEAABFZGZCEACHNCHGMOCABIJA
    NCKL $.
    $( [3-Jul-2006] $)

  ${
    aaan.1 $e |- ( ph -> A. y ph ) $.
    aaan.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange universal quantifiers. $)
    aaan $p |- ( A. x A. y ( ph /\ ps ) <-> ( A. x ph /\ A. y ps ) ) $=
      ( wa wal 19.28 albii hbal 19.27 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [12-Aug-1993] $)
  $}

  ${
    eeor.1 $e |- ( ph -> A. y ph ) $.
    eeor.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers. $)
    eeor $p |- ( E. x E. y ( ph \/ ps ) <-> ( E. x ph \/ E. y ps ) ) $=
      ( wo wex 19.45 exbii hbex 19.44 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [8-Aug-1994] $)
  $}

  $( Quantified "excluded middle."  Exercise 9.2a of Boolos, p. 111,
     _Computability and Logic_. $)
  qexmid $p |- E. x ( ph -> A. x ph ) $=
    ( wal 19.8a 19.35ri ) AABCZBFBDE $.
    $( [10-Dec-2000] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Equality
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that the original axiom ~ ax-9o can be derived from ~ ax-9 and
     others.  See ~ ax9 for the rederivation of ~ ax-9 from ~ ax-9o .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-9o
     below so that uses of ~ ax-9o can be more easily identified. $)
  ax9o $p |- ( A. x ( x = y -> A. x ph ) -> ph ) $=
    ( weq wal wi wex wn ax-9 df-ex mpbir exim mpi a6e syl ) BCDZABEZFBEZQBGZARP
    BGZSTPHBEHBCIPBJKPQBLMABNO $.
    $( [5-Aug-1993] $)

  $( A variant of ~ ax-9 .  Axiom scheme C10' in [Megill] p. 448 (p. 16 of the
     preprint).

     This axiom is redundant, as shown by theorem ~ ax9o . $)
  ax-9o $a |- ( A. x ( x = y -> A. x ph ) -> ph ) $.

  $( Rederivation of axiom ~ ax-9 from the orginal version, ~ ax-9o .  See
     ~ ax9o for the derivation of ~ ax-9o from ~ ax-9 .  Lemma L18 in [Megill]
     p. 446 (p. 14 of the preprint).

     This theorem should not be referenced in any proof.  Instead, use ~ ax-9
     above so that uses of ~ ax-9 can be more easily identified. $)
  ax9 $p |- -. A. x -. x = y $=
    ( weq wn wal wi ax-9o modal-b mpg ) ABCZJDAEDZAEFKAKABGJAHI $.
    $( [5-Aug-1993] $)

  $( At least one individual exists.  This is not a theorem of free logic,
     which is sound in empty domains.  For such a logic, we would add this
     theorem as an axiom of set theory (Axiom 0 of [Kunen] p. 10).  In the
     system consisting of ~ ax-5 through ~ ax-14 and ~ ax-17 , all axioms other
     than ~ ax-9 are believed to be theorems of free logic, although the system
     without ~ ax-9 is probably not complete in free logic. $)
  a9e $p |- E. x x = y $=
    ( weq wex wn wal ax-9 df-ex mpbir ) ABCZADJEAFEABGJAHI $.
    $( [5-Aug-1993] $)

  $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.  This
     is often an axiom of equality in textbook systems, but we don't need it as
     an axiom since it can be proved from our other axioms (although the proof,
     as you can see below, is not as obvious as you might think).  This proof
     uses only axioms without distinct variable conditions and thus requires no
     dummy variables.  A simpler proof, similar to Tarki's, is possible if we
     make use of ~ ax-17 ; see the proof of ~ equid1 .  See ~ equidALT for an
     alternate proof. $)
  equid $p |- x = x $=
    ( weq wal wn wi ax-12 pm2.43i alimi ax-9o syl ax-6o pm2.61i ) AABZACZDZACZM
    PMNEZACMOQAOQAAAFGHMAAIJMAKL $.
    $( [5-Aug-1993] $)

  $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.
     Alternate proof of ~ equid directly from equality axioms ~ ax-9 and
     ~ ax-12 . $)
  equidALT $p |- x = x $=
    ( weq wal wn ax-9 hbn1 wi ax-12 pm2.43i con3d 19.21ai mt3 a4i ) AABZANACZND
    ZACAAEODZPANAFQPQNOQNOGAAAHIJIKLM $.
    $( [30-Nov-2008] $)

  $( One of the two equality axioms of standard predicate calculus, called
     reflexivity of equality.  (The other one is ~ stdpc7 .)  Axiom 6 of
     [Mendelson] p. 95.  Mendelson doesn't say why he prepended the redundant
     quantifier, but it was probably to be compatible with free logic (which is
     valid in the empty domain). $)
  stdpc6 $p |- A. x x = x $=
    ( weq equid ax-gen ) AABAACD $.
    $( [16-Feb-2005] $)

  $( Commutative law for equality.  Lemma 7 of [Tarski] p. 69. $)
  equcomi $p |- ( x = y -> y = x ) $=
    ( weq equid ax-8 mpi ) ABCAACBACADABAEF $.
    $( [5-Aug-1993] $)

  $( Commutative law for equality. $)
  equcom $p |- ( x = y <-> y = x ) $=
    ( weq equcomi impbii ) ABCBACABDBADE $.
    $( [20-Aug-1993] $)

  ${
    equcoms.1 $e |- ( x = y -> ph ) $.
    $( An inference commuting equality in antecedent.  Used to eliminate the
       need for a syllogism. $)
    equcoms $p |- ( y = x -> ph ) $=
      ( weq equcomi syl ) CBEBCEACBFDG $.
      $( [5-Aug-1993] $)
  $}

  $( A transitive law for equality. $)
  equtr $p |- ( x = y -> ( y = z -> x = z ) ) $=
    ( weq wi ax-8 equcoms ) BCDACDEBABACFG $.
    $( [23-Aug-1993] $)

  $( A transitive law for equality.  Lemma L17 in [Megill] p. 446 (p. 14 of the
     preprint). $)
  equtrr $p |- ( x = y -> ( z = x -> z = y ) ) $=
    ( weq equtr com12 ) CADABDCBDCABEF $.
    $( [23-Aug-1993] $)

  $( A transitive law for equality.  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equtr2 $p |- ( ( x = z /\ y = z ) -> x = y ) $=
    ( weq wi equtrr equcoms impcom ) BCDACDZABDZIJECBCBAFGH $.
    $( [25-May-2011] $) $( [12-Aug-1993] $)

  $( An equivalence law for equality. $)
  equequ1 $p |- ( x = y -> ( x = z <-> y = z ) ) $=
    ( weq ax-8 equtr impbid ) ABDACDBCDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( An equivalence law for equality. $)
  equequ2 $p |- ( x = y -> ( z = x <-> z = y ) ) $=
    ( weq equtrr wi equcoms impbid ) ABDCADZCBDZABCEJIFBABACEGH $.
    $( [5-Aug-1993] $)

  $( An identity law for the non-logical predicate. $)
  elequ1 $p |- ( x = y -> ( x e. z <-> y e. z ) ) $=
    ( weq wel ax-13 wi equcoms impbid ) ABDACEZBCEZABCFKJGBABACFHI $.
    $( [5-Aug-1993] $)

  $( An identity law for the non-logical predicate. $)
  elequ2 $p |- ( x = y -> ( z e. x <-> z e. y ) ) $=
    ( weq wel ax-14 wi equcoms impbid ) ABDCAEZCBEZABCFKJGBABACFHI $.
    $( [5-Aug-1993] $)

  ${
    ax11i.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    ax11i.2 $e |- ( ps -> A. x ps ) $.
    $( Inference that has ~ ax-11 (without ` A. y ` ) as its conclusion and
       doesn't require ~ ax-10 , ~ ax-11 , or ~ ax-12 for its proof.  The
       hypotheses may be eliminable without one or more of these axioms in
       special cases.  Proof similar to Lemma 16 of [Tarski] p. 70. $)
    ax11i $p |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) $=
      ( weq wi wal biimprcd 19.21ai syl6bi ) CDGZABMAHZCIEBNCFMABEJKL $.
      $( [20-May-2008] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Axioms ax-10 and ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that ~ ax-10o can be derived from ~ ax-10 .  An open problem is
     whether this theorem can be derived from ~ ax-10 and the others when
     ~ ax-11 is replaced with ~ ax-11o .  See theorem ~ ax10 for the
     rederivation of ~ ax-10 from ~ ax10o .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-10o
     below so that uses of ~ ax-10o can be more easily identified. $)
  ax10o $p |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $=
    ( weq wal wi ax-10 ax-11 equcoms a4s pm2.27 al2imi sylsyld ) BCDZBECBDZCEAB
    EZOAFZCEZACEBCGNPRFZBSCBACBHIJOQACOAKLM $.
    $( [16-May-2008] $)

  $( Axiom ~ ax-10o ("o" for "old") was the original version of ~ ax-10 ,
     before it was discovered (in May 2008) that the shorter ~ ax-10 could
     replace it.  It appears as Axiom scheme C11' in [Megill] p. 448 (p. 16 of
     the preprint).

     This axiom is redundant, as shown by theorem ~ ax10o . $)
  ax-10o $a |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $.

  $( Rederivation of ~ ax-10 from original version ~ ax-10o .  See theorem
     ~ ax10o for the derivation of ~ ax-10o from ~ ax-10 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-10
     above so that uses of ~ ax-10 can be more easily identified. $)
  ax10 $p |- ( A. x x = y -> A. y y = x ) $=
    ( weq wal ax-10o pm2.43i equcomi alimi syl ) ABCZADZJBDZBACZBDKLJABEFJMBABG
    HI $.
    $( [16-May-2008] $)

  $( Commutation law for identical variable specifiers.  The antecedent and
     consequent are true when ` x ` and ` y ` are substituted with the same
     variable.  Lemma L12 in [Megill] p. 445 (p. 12 of the preprint). $)
  alequcom $p |- ( A. x x = y -> A. y y = x ) $=
    ( ax-10 ) ABC $.
    $( [5-Aug-1993] $)

  ${
    alequcoms.1 $e |- ( A. x x = y -> ph ) $.
    $( A commutation rule for identical variable specifiers. $)
    alequcoms $p |- ( A. y y = x -> ph ) $=
      ( weq wal alequcom syl ) CBECFBCEBFACBGDH $.
      $( [5-Aug-1993] $)
  $}

  ${
    nalequcoms.1 $e |- ( -. A. x x = y -> ph ) $.
    $( A commutation rule for distinct variable specifiers. $)
    nalequcoms $p |- ( -. A. y y = x -> ph ) $=
      ( weq wal alequcom nsyl4 con1i ) ACBECFZBCEBFJABCGDHI $.
      $( [2-Jan-2002] $)
  $}

  $( All variables are effectively bound in an identical variable specifier. $)
  hbae $p |- ( A. x x = y -> A. z A. x x = y ) $=
    ( weq wal wi wn ax-12 ax-4 syl7 ax-10o alequcoms pm2.43i syl5 pm2.61ii a5i 
    ax-7 syl ) ABDZAEZSCEZAETCESUAACADCEZCBDCEZTUAFZUBGUCGSUATABCHSAIJUDACSACKL
    UDBCBCDBESBEZUATSBCKTUESABKMNLOPSACQR $.
    $( [5-Aug-1993] $)

  ${
    hbalequs.1 $e |- ( A. z A. x x = y -> ph ) $.
    $( Rule that applies ~ hbae to antecedent. $)
    hbaes $p |- ( A. x x = y -> ph ) $=
      ( weq wal hbae syl ) BCFBGZJDGABCDHEI $.
      $( [5-Aug-1993] $)
  $}

  $( All variables are effectively bound in a distinct variable specifier.
     Lemma L19 in [Megill] p. 446 (p. 14 of the preprint). $)
  hbnae $p |- ( -. A. x x = y -> A. z -. A. x x = y ) $=
    ( weq wal hbae hbn ) ABDAECABCFG $.
    $( [5-Aug-1993] $)

  ${
    hbnalequs.1 $e |- ( A. z -. A. x x = y -> ph ) $.
    $( Rule that applies ~ hbnae to antecedent. $)
    hbnaes $p |- ( -. A. x x = y -> ph ) $=
      ( weq wal wn hbnae syl ) BCFBGHZKDGABCDIEJ $.
      $( [5-Aug-1993] $)
  $}

  $( Lemma used in proofs of substitution properties. $)
  equs3 $p |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) $=
    ( weq wn wi wal wa wex alinexa con2bii ) BCDZAEFBGLAHBILABJK $.
    $( [5-Aug-1993] $)

  $( Lemma used in proofs of substitution properties. $)
  equs4 $p |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) $=
    ( weq wi wal wn wa wex simpr ax-4 imp jc nsyl ex hbn1 syl6 a5i ax-9o syl 
    equs3 sylibr ) BCDZAEZBFZUCAGEZBFZGZUCAHBIUEUCUHBFZEZBFUHUDUJBUEUCUHUIUEUCU
    HUEUCHZUFUGUKUCAUEUCJUEUCAUDBKLMUFBKNOUFBPQRUHBCSTABCUAUB $.
    $( [5-Aug-1993] $)

  ${
    equsal.1 $e |- ( ps -> A. x ps ) $.
    equsal.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution.  (The proof was shortened
       by Andrew Salmon, 12-Aug-2011.) $)
    equsal $p |- ( A. x ( x = y -> ph ) <-> ps ) $=
      ( weq wi wal 19.3 syl6bbr pm5.74i albii a1d 19.21ai ax-9o impbii bitr4i 
      ) CDGZAHZCISBCIZHZCIZBTUBCSAUASABUAFBCEJKLMBUCBUBCEBUASENOBCDPQR $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    equsex.1 $e |- ( ps -> A. x ps ) $.
    equsex.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution. $)
    equsex $p |- ( E. x ( x = y /\ ph ) <-> ps ) $=
      ( weq wn wi wex wal wa exnal df-an exbii hbn notbid equsal con2bii 
      3bitr4i ) CDGZAHZIZHZCJUCCKZHUAALZCJBUCCMUFUDCUAANOUEBUBBHCDBCEPUAABFQRST
      $.
      $( [5-Aug-1993] $)
  $}

  ${
    dvelimfALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimfALT.2 $e |- ( ps -> A. z ps ) $.
    dvelimfALT.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Proof of ~ dvelimf without using ~ ax-11 .  See ~ dvelimALT for a proof
       (of the distinct variable version ~ dvelim ) that doesn't require
       ~ ax-10 . $)
    dvelimfALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi ax-10o alequcoms hba1 syl5 a1d wa hbnae hban ax-12 imp 
      a1i hbimd hbald ex pm2.61i equsal albii 3imtr3g ) CDICJKZEDIZALZEJZUNCJZB
      BCJCEICJZUKUNUOLZLUPUQUKUPUNEJZUOUNURUOLECUNECMNUMEOPQUPKZUKUQUSUKRZUMCEU
      SUKECEESCDESTUTULACUSUKCCECSCDCSTUSUKULULCJLEDCUAUBAACJLUTFUCUDUEUFUGABED
      GHUHZUNBCVAUIUJ $.
      $( [12-Nov-2002] $)
  $}

  ${
    dral1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral1 $p |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) $=
      ( weq wal hbae biimpd alimd ax-10o syld biimprd wi alequcoms impbid ) CDF
      CGZACGZBDGZQRBCGSQABCCDCHQABEIJBCDKLQSADGZRQBADCDDHQABEMJTRNDCADCKOLP $.
      $( [24-Nov-1994] $)
  $}

  ${
    dral2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral2 $p |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) $=
      ( weq wal hbae albid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex1 $p |- ( A. x x = y -> ( E. x ph <-> E. y ps ) ) $=
      ( weq wal wn wex notbid dral1 df-ex 3bitr4g ) CDFCGZAHZCGZHBHZDGZHACIBDIN
      PROQCDNABEJKJACLBDLM $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex2 $p |- ( A. x x = y -> ( E. z ph <-> E. z ps ) ) $=
      ( weq wal hbae exbid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  $( Closed theorem form of ~ a4im . $)
  a4imt $p |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) ->
              ( A. x ph -> ps ) ) $=
    ( wal wi weq wa imim2 imim2d imp com23 al2imi ax-9o syl6 ) BBCEZFZCDGZABFZF
    ZHZCEACERPFZCEBUAAUBCUARAPQTRAPFZFQSUCRBPAIJKLMBCDNO $.
    $( [15-Jan-2008] $)

  ${
    a4im.1 $e |- ( ps -> A. x ps ) $.
    a4im.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Specialization, using implicit substitition.  Compare Lemma 14 of
       [Tarski] p. 70.  The ~ a4im series of theorems requires that only one
       direction of the substitution hypothesis hold. $)
    a4im $p |- ( A. x ph -> ps ) $=
      ( wal weq wi syl6com alimi ax-9o syl ) ACGCDHZBCGZIZCGBAPCNABOFEJKBCDLM 
      $.
      $( [8-May-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    a4ime.1 $e |- ( ph -> A. x ph ) $.
    a4ime.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Existential introduction, using implicit substitition.  Compare Lemma 14
       of [Tarski] p. 70. $)
    a4ime $p |- ( ph -> E. x ps ) $=
      ( wn wal wex hbn weq con3d a4im con2i df-ex sylibr ) ABGZCHZGBCIRAQAGCDAC
      EJCDKABFLMNBCOP $.
      $( [7-Aug-1994] $)
  $}

  ${
    a4imed.1 $e |- ( ch -> A. x ch ) $.
    a4imed.2 $e |- ( ch -> ( ph -> A. x ph ) ) $.
    a4imed.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Deduction version of ~ a4ime . $)
    a4imed $p |- ( ch -> ( ph -> E. x ps ) ) $=
      ( wex wa wal 19.26 adantr imp sylanbrc weq adantld a4ime ex ) CABDICAJZBD
      ETDKCDKZADKZTCADLCUAAFMCAUBGNODEPABCHQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv1.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv1.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv1.3 $e |- ( ph -> ( x = y -> ( ps -> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv1 $p |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) $=
      ( wal wi a4s al2imi ax-7 syl6 weq com23 syl6d ax-9o a7s syld ) AEIZDIZBDI
      ZUCEIZCEIZUBUCBEIZDIUDUABUFDABUFJEFKLBDEMNAUDUEJEDADIZUCCEUGUCDEOZCDIZJZD
      ICABUJDABUHCUIAUHBCHPGQLCDERNLST $.
      $( [5-Aug-1993] $)
  $}


  ${
    cbv2.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv2.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv2.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv2 $p |- ( A. x A. y ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal weq wb wi bi1 syl6 cbv1 bi2 equcomi syl5 a7s impbid ) AEIDIBDIZCEIZ
      ABCDEFGADEJZBCKZBCLHBCMNOAUBUALEDACBEDGFAUCCBLZEDJAUCUDUEHBCPNEDQROST $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv3.1 $e |- ( ph -> A. y ph ) $.
    cbv3.2 $e |- ( ps -> A. x ps ) $.
    cbv3.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition, that
       does not use ~ ax-12 . $)
    cbv3 $p |- ( A. x ph -> A. y ps ) $=
      ( wi wal imim2i a1i weq cbv1 id ax-gen mpg ) AAHZDIACIBDIHCQABCDAADIAEJBB
      CIHQFKCDLABHHQGKMQDANOP $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbv3ALT $p |- ( A. x ph -> A. y ps ) $=
      ( weq wal wi a1i cbv1 stdpc6 mpg ) DDHZDIACIBDIJCOABCDAADIJOEKBBCIJOFKCDH
      ABJJOGKLDMN $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbval.1 $e |- ( ph -> A. y ph ) $.
    cbval.2 $e |- ( ps -> A. x ps ) $.
    cbval.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbval $p |- ( A. x ph <-> A. y ps ) $=
      ( wal weq biimpd cbv3 wb equcoms biimprd impbii ) ACHBDHABCDEFCDIABGJKBAD
      CFEDCIABABLCDGMNKO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbvex.1 $e |- ( ph -> A. y ph ) $.
    cbvex.2 $e |- ( ps -> A. x ps ) $.
    cbvex.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex $p |- ( E. x ph <-> E. y ps ) $=
      ( wn wal wex hbn weq notbid cbval notbii df-ex 3bitr4i ) AHZCIZHBHZDIZHAC
      JBDJSUARTCDADEKBCFKCDLABGMNOACPBDPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    chv2.1 $e |- ( ps -> A. x ps ) $.
    chv2.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv2.3 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem.  (Contributed
       by Raph Levien, 9-Jul-2003.) $)
    chvar $p |- ps $=
      ( weq biimpd a4im mpg ) ABCABCDECDHABFIJGK $.
      $( [9-Jul-2003] $)
  $}

  $( A variable introduction law for equality.  Lemma 15 of [Monk2] p. 109,
     however we do not require ` z ` to be distinct from ` x ` and ` y `
     (making the proof longer).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equvini $p |- ( x = y -> E. z ( x = z /\ z = y ) ) $=
    ( weq wal wa wex wi equcomi alimi a9e jctir a1d 19.29 syl6 eximi ax-mp 
    a1i12 anc2ri 19.29r wo wn ioran hbnae hban ax-12 imp ax-8 anc2li equcoms 
    a4imed sylbi ecase3 ) CADZCEZCBDZCEZABDZACDZUPFZCGZHZUOURUSCEZUPCGZFZVAUOVE
    URUOVCVDUNUSCCAIZJCBKLMUSUPCNOUQURUSCGZUQFVAUQURVGUQURVGUNCGVGCAKUNUSCVFPQR
    SUSUPCTOUOUQUAUBUOUBZUQUBZFZVBUOUQUCURUTVJCAVHVICCACUDCBCUDUEVHVIURURCEHABC
    UFUGURUTHACUSURUPACBUHUIUJUKULUM $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( Bound-variable hypothesis builder for ` x = x ` .  This theorem tells us
     that ` x ` is effectively not free in ` x = x ` , even though it is
     technically free according to the traditional definition of free
     variable.  (The proof shows that this can be proved without ~ ax-9 , even
     though the theorem ~ equid cannot be.  A shorter proof that uses ~ ax-9 is
     obtainable from ~ equid and ~ hbth .)  See ~ hbequid for a more general
     version. $)
  hbequid2 $p |- ( x = x -> A. x x = x ) $=
    ( weq wal wi ax-12 ax-1 pm2.61ii ) AABZACZIHIDAAAEIHFZJG $.
    $( [3-Aug-2008] $) $( [27-Dec-2004] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Substitution (without distinct variables)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [ $. $( Left bracket $)
  $c / $. $( Division. $)
  $c ] $.  $( Right bracket $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    wsbc.cA $f class A $.
    $( Extend wff notation to include the proper substitution of a class for a
       set.  Read this notation as "the proper substitution of class ` A ` for
       set variable ` x ` in wff ` ph ` ."

       (The purpose of introducing ` wff [ A / x ] ph ` here is to allow us to
       express i.e.  "prove" the ~ wsb of predicate calculus in terms of the
       ~ wsbc of set theory, so that we don't "overload" its connectives with
       two syntax definitions.  This is done to prevent ambiguity that would
       complicate some Metamath parsers.  The class variable ` A ` is
       introduced temporarily for the purpose of this definition but otherwise
       not used in predicate calculus.  See ~ df-sbc for more information on
       the set theory usage of ~ wsbc .) $)
    wsbc $a wff [ A / x ] ph $.
  $}

  $( Extend wff definition to include proper substitution (read "the wff that
     results when ` y ` is properly substituted for ` x ` in wff ` ph ` ").

     (Instead of introducing ~ wsb as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wsbc .  This lets us avoid overloading
     its connectives, thus preventing ambiguity that would complicate some
     Metamath parsers.  Note:  To see the proof steps of this syntax proof,
     type "show proof wsb /all" in the Metamath program.) $)
  wsb $p wff [ y / x ] ph $=
    ( cv wsbc ) ABCDE $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include proper substitution (read "the wff that
     results when ` y ` is properly substituted for ` x ` in wff ` ph ` ").

     After we introduce ~ cv and ~ wsbc in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "wph vx vy cv wsbc". @)
  wsb @a wff [ y / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define proper substitution.  Remark 9.1 in [Megill] p. 447 (p. 15 of the
     preprint).  For our notation, we use ` [ y / x ] ph ` to mean "the wff
     that results when ` y ` is properly substituted for ` x ` in the wff
     ` ph ` ."  We can also use ` [ y / x ] ph ` in place of the "free for"
     side condition used in traditional predicate calculus; see, for example,
     ~ stdpc4 .

     Our notation was introduced in Haskell B. Curry's _Foundations of
     Mathematical Logic_ (1977), p. 316 and is frequently used in textbooks of
     lambda calculus and combinatory logic.  This notation improves the common
     but ambiguous notation, " ` ph ( y ) ` is the wff that results when ` y `
     is properly substituted for ` x ` in ` ph ( x ) ` ."  For example, if the
     original ` ph ( x ) ` is ` x = y ` , then ` ph ( y ) ` is ` y = y ` , from
     which we obtain that ` ph ( x ) ` is ` x = x ` .  So what exactly does
     ` ph ( x ) ` mean?  Curry's notation solves this problem.

     In most books, proper substitution has a somewhat complicated recursive
     definition with multiple cases based on the occurrences of free and bound
     variables in the wff.  Instead, we use a single formula that is exactly
     equivalent and gives us a direct definition.  We later prove that our
     definition has the properties we expect of proper substitution (see
     theorems ~ sbequ , ~ sbcom2 and ~ sbid2v ).

     Note that our definition is valid even when ` x ` and ` y ` are replaced
     with the same variable, as ~ sbid shows.  We achieve this by having ` x `
     free in the first conjunct and bound in the second.  We can also achieve
     this by using a dummy variable, as the alternate definition ~ dfsb7 shows
     (which some logicians may prefer because it doesn't mix free and bound
     variables).  Another version that mixes free and bound variables is
     ~ dfsb3 .  When ` x ` and ` y ` are distinct, we can express proper
     substitution with the simpler expressions of ~ sb5 and ~ sb6 .

     There are no restrictions on any of the variables, including what
     variables may occur in wff ` ph ` . $)
  df-sb $a |- ( [ y / x ] ph <->
              ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) $.

  ${
    sbimi.1 $e |- ( ph -> ps ) $.
    $( Infer substitution into antecedent and consequent of an implication. $)
    sbimi $p |- ( [ y / x ] ph -> [ y / x ] ps ) $=
      ( weq wi wa wex wsb imim2i anim2i eximi anim12i df-sb 3imtr4i ) CDFZAGZQA
      HZCIZHQBGZQBHZCIZHACDJBCDJRUATUCABQEKSUBCABQELMNACDOBCDOP $.
      $( [25-Jun-1998] $)
  $}

  ${
    sbbii.1 $e |- ( ph <-> ps ) $.
    $( Infer substitution into both sides of a logical equivalence. $)
    sbbii $p |- ( [ y / x ] ph <-> [ y / x ] ps ) $=
      ( wsb biimpi sbimi biimpri impbii ) ACDFBCDFABCDABEGHBACDABEIHJ $.
      $( [5-Aug-1993] $)
  $}

  $( Formula-building lemma for use with the Distinctor Reduction Theorem.
     Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
  drsb1 $p |- ( A. x x = y -> ( [ z / x ] ph <-> [ z / y ] ph ) ) $=
    ( weq wal wi wa wex wsb wb equequ1 a4s imbi1d anbi1d drex1 anbi12d df-sb 
    3bitr4g ) BCEZBFZBDEZAGZUBAHZBIZHCDEZAGZUFAHZCIZHABDJACDJUAUCUGUEUIUAUBUFAT
    UBUFKBBCDLMZNUDUHBCUAUBUFAUJOPQABDRACDRS $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution. $)
  sb1 $p |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) $=
    ( wsb weq wi wa wex df-sb simprbi ) ABCDBCEZAFKAGBHABCIJ $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution. $)
  sb2 $p |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) $=
    ( wsb weq wi wa wex wal df-sb ax-4 equs4 sylanbrc ) ABCDBCEZAFZNAGBHOBIABCJ
    OBKABCLM $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequ1 $p |- ( x = y -> ( ph -> [ y / x ] ph ) ) $=
    ( weq wsb wi wa wex df-sb pm3.4 19.8a sylanbrc ex ) BCDZAABCEZONAFNAGZBHPAB
    CINAJPBKLM $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequ2 $p |- ( x = y -> ( [ y / x ] ph -> ph ) ) $=
    ( weq wi wa wex wsb simpl com12 df-sb syl5ib ) BCDZMAEZMAFBGZFZAABCHPMANOIJ
    ABCKL $.
    $( [5-Aug-1993] $)

  $( One of the two equality axioms of standard predicate calculus, called
     substitutivity of equality.  (The other one is ~ stdpc6 .)  Translated to
     traditional notation, it can be
     read:  " ` x = y -> ( ph ( x , x ) -> ph ( x , y ) ) ` , provided that
     ` y ` is free for ` x ` in ` ph ( x , y ) ` ."  Axiom 7 of [Mendelson]
     p. 95. $)
  stdpc7 $p |- ( x = y -> ( [ x / y ] ph -> ph ) ) $=
    ( wsb wi sbequ2 equcoms ) ACBDAECBACBFG $.
    $( [15-Feb-2005] $)

  $( An equality theorem for substitution. $)
  sbequ12 $p |- ( x = y -> ( ph <-> [ y / x ] ph ) ) $=
    ( weq wsb sbequ1 sbequ2 impbid ) BCDAABCEABCFABCGH $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution.  (The proof was shortened by Andrew
     Salmon, 21-Jun-2011.) $)
  sbequ12r $p |- ( x = y -> ( [ x / y ] ph <-> ph ) ) $=
    ( wsb wb weq sbequ12 bicomd equcoms ) ACBDZAECBCBFAJACBGHI $.
    $( [26-Jun-2011] $) $( [6-Oct-2004] $)

  $( An equality theorem for substitution. $)
  sbequ12a $p |- ( x = y -> ( [ y / x ] ph <-> [ x / y ] ph ) ) $=
    ( weq wsb sbequ12 wb equcoms bitr3d ) BCDAABCEACBEZABCFAJGCBACBFHI $.
    $( [5-Aug-1993] $)

  $( An identity theorem for substitution.  Remark 9.1 in [Megill] p. 447 (p.
     15 of the preprint). $)
  sbid $p |- ( [ x / x ] ph <-> ph ) $=
    ( wsb weq wb equid sbequ12 ax-mp bicomi ) AABBCZBBDAJEBFABBGHI $.
    $( [5-Aug-1993] $)

  $( The specialization axiom of standard predicate calculus.  It states that
     if a statement ` ph ` holds for all ` x ` , then it also holds for the
     specific case of ` y ` (properly) substituted for ` x ` .  Translated to
     traditional notation, it can be read:  " ` A. x ph ( x ) -> ph ( y ) ` ,
     provided that ` y ` is free for ` x ` in ` ph ( x ) ` ."  Axiom 4 of
     [Mendelson] p. 69.  See also ~ a4sbc and ~ ra4sbc . $)
  stdpc4 $p |- ( A. x ph -> [ y / x ] ph ) $=
    ( wal weq wi wsb ax-1 alimi sb2 syl ) ABDBCEZAFZBDABCGAMBALHIABCJK $.
    $( [5-Aug-1993] $)

  ${
    sbf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it. $)
    sbf $p |- ( [ y / x ] ph <-> ph ) $=
      ( wsb weq wex wa sb1 19.41 sylib simprd wal stdpc4 syl impbii ) ABCEZAQBC
      FZBGZAQRAHBGSAHABCIRABDJKLAABMQDABCNOP $.
      $( [17-Oct-2004] $) $( [5-Aug-1993] $)
  $}

  $( Substitution has no effect on a bound variable. $)
  sbf2 $p |- ( [ y / x ] A. x ph <-> A. x ph ) $=
    ( wal hba1 sbf ) ABDBCABEF $.
    $( [1-Jul-2005] $)

  ${
    sb6x.1 $e |- ( ph -> A. x ph ) $.
    $( Equivalence involving substitution for a variable not free.  (The proof
       was shortened by Andrew Salmon, 12-Aug-2011.) $)
    sb6x $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( cv wsbc wceq wi wal sbf biidd equsal bitr4i ) ABCEZFABENGZAHBIABCDJAABC
      DOAKLM $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    hbs1f.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` .
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    hbs1f $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( wal wsb sbf albii 3imtr4i ) AABEABCFZJBEDABCDGZJABKHI $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  $( Substitution does not change an identical variable specifier. $)
  sbequ5 $p |- ( [ w / z ] A. x x = y <-> A. x x = y ) $=
    ( weq wal hbae sbf ) ABEAFCDABCGH $.
    $( [21-Dec-2004] $) $( [5-Aug-1993] $)

  $( Substitution does not change a distinctor. $)
  sbequ6 $p |- ( [ w / z ] -. A. x x = y <-> -. A. x x = y ) $=
    ( weq wal wn hbnae sbf ) ABEAFGCDABCHI $.
    $( [14-May-2005] $) $( [5-Aug-1993] $)

  ${
    sbt.1 $e |- ph $.
    $( A substitution into a theorem remains true.  (See ~ chvar and ~ chvarv
       for versions using implicit substitition.)  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    sbt $p |- [ y / x ] ph $=
      ( wsb hbth sbf mpbir ) ABCEADABCABDFGH $.
      $( [25-May-2011] $) $( [21-Jan-2004] $)
  $}

  $( Substitution applied to an atomic wff. $)
  equsb1 $p |- [ y / x ] x = y $=
    ( weq wi wsb sb2 id mpg ) ABCZIDIABEAIABFIGH $.
    $( [5-Aug-1993] $)

  $( Substitution applied to an atomic wff. $)
  equsb2 $p |- [ y / x ] y = x $=
    ( weq wi wsb sb2 equcomi mpg ) ABCBACZDIABEAIABFABGH $.
    $( [5-Aug-1993] $)

  ${
    sbied.1 $e |- ( ph -> A. x ph ) $.
    sbied.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    sbied.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit substitution (deduction
       version of ~ sbie ).  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sbied $p |- ( ph -> ( [ y / x ] ps <-> ch ) ) $=
      ( wsb wex weq wa wb wi bi1 syl6 imp3a eximd sb1 syl5 19.9d syld wal bi2 
      com23 alimd sb2 impbid ) ABDEIZCAUICDJZCADEKZBLZDJUJUIAULCDFAUKBCAUKBCMZB
      CNHBCOPQRBDESTCADFGUAUBACCDUCZUIGAUNUKBNZDUCUIACUODFAUKCBAUKUMCBNHBCUDPUE
      UFBDEUGPUBUH $.
      $( [25-May-2011] $) $( [30-Jun-1994] $)
  $}

  ${
    sbie.1 $e |- ( ps -> A. x ps ) $.
    sbie.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit substitution. $)
    sbie $p |- ( [ y / x ] ph <-> ps ) $=
      ( wi wsb wb id hbth wal a1i weq sbied ax-mp ) AAGZACDHBIAJZQABCDQCRKBBCLG
      QEMCDNABIGQFMOP $.
      $( [30-Jun-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Theorems using axiom ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A property related to substitution that unlike ~ equs5 doesn't require a
     distinctor antecedent. $)
  equs5a $p |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) $=
    ( weq wal wa wi hba1 ax-11 imp 19.23ai ) BCDZACEZFLAGZBEZBNBHLMOABCIJK $.
    $( [2-Feb-2007] $)

  $( A property related to substitution that unlike ~ equs5 doesn't require a
     distinctor antecedent. $)
  equs5e $p |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> E. y ph ) ) $=
    ( weq wa wex wn wi wal equs3 hbn1 ax-11 con3d com12 df-ex syl6ibr 19.21ai 
    sylbi ) BCDZAEBFSAGZHZBIZGZSACFZHZBIABCJUCUEBUABKUCSTCIZGZUDSUCUGSUFUBTBCLM
    NACOPQR $.
    $( [2-Feb-2007] $)

  $( A version of ~ sb4 that doesn't require a distinctor antecedent. $)
  sb4a $p |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) $=
    ( wal wsb weq wa wex wi sb1 equs5a syl ) ACDZBCEBCFZMGBHNAIBDMBCJABCKL $.
    $( [2-Feb-2007] $)

  ${
    equs45f.1 $e |- ( ph -> A. y ph ) $.
    $( Two ways of expressing substitution when ` y ` is not free in
       ` ph ` . $)
    equs45f $p |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) $=
      ( weq wa wex wi wal anim2i eximi equs5a syl equs4 impbii ) BCEZAFZBGZPAHB
      IZRPACIZFZBGSQUABATPDJKABCLMABCNO $.
      $( [25-Apr-2008] $)

    $( Equivalence for substitution when ` y ` is not free in ` ph ` . $)
    sb6f $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( wsb weq wi wal sbimi sb4a syl sb2 impbii ) ABCEZBCFAGBHZNACHZBCEOAPBCDI
      ABCJKABCLM $.
      $( [30-Apr-2008] $)  $( [5-Aug-1993] $)

    $( Equivalence for substitution when ` y ` is not free in ` ph ` . $)
    sb5f $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wi wal wa wex sb6f equs45f bitr4i ) ABCEBCFZAGBHNAIBJABCDKABCDL
      M $.
      $( [18-May-2008] $)  $( [5-Aug-1993] $)
  $}

  $( One direction of a simplified definition of substitution that unlike ~ sb4
     doesn't require a distinctor antecedent. $)
  sb4e $p |- ( [ y / x ] ph -> A. x ( x = y -> E. y ph ) ) $=
    ( wsb weq wa wex wi wal sb1 equs5e syl ) ABCDBCEZAFBGMACGHBIABCJABCKL $.
    $( [2-Feb-2007] $)

  $( Special case of a bound-variable hypothesis builder for substitution. $)
  hbsb2a $p |- ( [ y / x ] A. y ph -> A. x [ y / x ] ph ) $=
    ( wal wsb weq wi sb4a sb2 a5i syl ) ACDBCEBCFAGZBDABCEZBDABCHLMBABCIJK $.
    $( [2-Feb-2007] $)

  $( Special case of a bound-variable hypothesis builder for substitution. $)
  hbsb2e $p |- ( [ y / x ] ph -> A. x [ y / x ] E. y ph ) $=
    ( wsb weq wex wi wal sb4e sb2 a5i syl ) ABCDBCEACFZGZBHMBCDZBHABCINOBMBCJKL
    $.
    $( [2-Feb-2007] $)

  ${
    hbsb3.1 $e |- ( ph -> A. y ph ) $.
    $( If ` y ` is not free in ` ph ` , ` x ` is not free in
       ` [ y / x ] ph ` . $)
    hbsb3 $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( wsb wal sbimi hbsb2a syl ) ABCEZACFZBCEJBFAKBCDGABCHI $.
      $( [5-Aug-1993] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                  Predicate calculus with distinct variables
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
            The axiom of quantifier introduction ax-17
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x ps $.
    a4imv.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( A version of ~ a4im with a distinct variable requirement instead of a
       bound variable hypothesis. $)
    a4imv $p |- ( A. x ph -> ps ) $=
      ( ax-17 a4im ) ABCDBCFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $v f $.
    $( Define a temporary individual variable. $)
    aev.vf $f set f $.
    $d f u v $.  $d f u x y $.  $d u w $.
    $( A "distinctor elimination" lemma with no restrictions on variables in
       the consequent, proved without using ~ ax-16 .  (The proof was shortened
       by Andrew Salmon, 21-Jun-2011.) $)
    aev $p |- ( A. x x = y -> A. z w = v ) $=
      ( aev.vf vu weq wal hbae ax-8 a4imv 19.21ai equcomi syl6 alequcoms a5i 
      alequcom 3syl ) ABHZAIZDEHZCABCJUAFBHZFIZGEHZGIZUBUAUCFABFJTUCAFAFBKLMUDF
      GHZFIZEGHZEIUFUCUGFUGBFBFHZUGBGBGHUJGFHUGBGFKGFNOLPQUHUIEFGEJUGUIFEFEGKLM
      EGRSUEUBGDGDEKLSM $.
      $( [26-Jun-2011] $) $( [8-Nov-2006] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive the axiom of distinct variables ax-16
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.  $d z ph $.
    $( Theorem showing that ~ ax-16 is redundant if ~ ax-17 is included in the
       axiom system.  The important part of the proof is provided by ~ aev .

       See ~ ax16ALT for an alternate proof that does not require ~ ax-10 or
       ~ ax-12 .

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-16 below so that theorems needing ~ ax-16 can be more easily
       identified. $)
    ax16 $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( vz weq wal wi aev wsb ax-17 sbequ12 biimpcd alimd hbsb3 stdpc7 cbv3 
      syl6com syl ) BCEBFBDEZDFZAABFZGBCDBDHATABDIZDFUAASUBDADJZSAUBABDKLMUBADB
      ABDUCNUCADBOPQR $.
      $( [8-Nov-2006] $)
  $}

  ${
    $d x y $.
    $( Axiom of Distinct Variables.  The only axiom of predicate calculus
       requiring that variables be distinct (if we consider ~ ax-17 to be a
       metatheorem and not an axiom).  Axiom scheme C16' in [Megill] p. 448 (p.
       16 of the preprint).  It apparently does not otherwise appear in the
       literature but is easily proved from textbook predicate calculus by
       cases.  It is a somewhat bizarre axiom since the antecedent is always
       false in set theory (see ~ dtru ), but nonetheless it is technically
       necessary as you can see from its uses.

       This axiom is redundant if we include ~ ax-17 ; see theorem ~ ax16 .
       Alternately, ~ ax-17 becomes logically redundant in the presence of this
       axiom, but without ~ ax-17 we lose the more powerful metalogic that
       results from being able to express the concept of a set variable not
       occurring in a wff (as opposed to just two set variables being
       distinct).  We retain ~ ax-16 here to provide logical completeness for
       systems with the simpler metalogic that results from omitting ~ ax-17 ,
       which might be easier to study for some theoretical purposes. $)
    ax-16 $a |- ( A. x x = y -> ( ph -> A. x ph ) ) $.
  $}

  ${
    $d x z $.  $d y z $.
    $( Theorem to add distinct quantifier to atomic formula.  (This theorem
       demonstrates the induction basis for ~ ax-17 considered as a
       metatheorem.  Do not use it for later proofs - use ~ ax-17 instead, to
       avoid reference to the redundant axiom ~ ax-16 .) $)
    ax17eq $p |- ( x = y -> A. z x = y ) $=
      ( weq wal wi ax-12 ax-16 pm2.61ii ) CADCECBDCEABDZJCEFABCGJCAHJCBHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveeq2 $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax-17 equequ2 dvelimfALT ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)

    $( Version of ~ dveeq2 using ~ ax-16 instead of ~ ax-17 . $)
    dveeq2ALT $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax17eq equequ2 dvelimfALT ) CDECBEABDCDAFCBDFDBCGH $.
      $( [29-Apr-2008] $)
  $}

  ${
    $d x ch $.  $d x ph $.
    19.23adv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    19.23adv $p |- ( ph -> ( E. x ps -> ch ) ) $=
      ( ax-17 19.23ad ) ABCDADFCDFEG $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    ax11v2.1 $e |- ( x = z -> ( ph -> A. x ( x = z -> ph ) ) ) $.
    $( Recovery of ~ ax11o from ~ ax11v without using ~ ax-11 .  The hypothesis
       is even weaker than ~ ax11v , with ` z ` both distinct from ` x ` _and_
       not occurring in ` ph ` .  Thus the hypothesis provides an alternate
       axiom that can be used in place of ~ ax11o . $)
    ax11v2 $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wex wi a9e wa wb equequ2 adantl dveeq2 imp hba1 imbi1d a4s 
      albid syl imbi2d imbi12d mpbii ex 19.23adv mpi ) BCFZBGHZDCFZDIUIAUIAJZBG
      ZJZJZDCKUJUKUODUJUKUOUJUKLZBDFZAUQAJZBGZJZJUOEUPUQUIUTUNUKUQUIMUJDCBNZOUP
      USUMAUPUKBGZUSUMMUJUKVBBCDPQVBURULBUKBRUKURULMBUKUQUIAVASTUAUBUCUDUEUFUGU
      H $.
      $( [2-Feb-2007] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    ax11a2.1 $e |- ( x = z -> ( A. z ph -> A. x ( x = z -> ph ) ) ) $.
    $( Derive ~ ax-11o from a hypothesis in the form of ~ ax-11 .  The
       hypothesis is even weaker than ~ ax-11 , with ` z ` both distinct from
       ` x ` and not occurring in ` ph ` .  Thus the hypothesis provides an
       alternate axiom that can be used in place of ~ ax11o .  As theorem
       ~ ax11 shows, the distinct variable conditions are optional.  An open
       problem is whether ~ ax11o can be derived from ~ ax-11 without relying
       on ~ ax-17 . $)
    ax11a2 $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wi ax-17 syl5 ax11v2 ) ABCDBDFZADGLAHBGAEADIJK $.
      $( [2-Feb-2007] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive the original axiom of variable substitution ax-11o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Derivation of set.mm's original ~ ax-11o from the shorter ~ ax-11 that
       has replaced it.

       An open problem is whether this theorem can be proved without relying on
       ~ ax-16 or ~ ax-17 .

       Another open problem is whether this theorem can be proved without
       relying on ~ ax-12 (see note in ~ a12study ).

       Theorem ~ ax11 shows the reverse derivation of ~ ax-11 from ~ ax-11o .

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-11o below so that theorems needing ~ ax-11o can be more easily
       identified. $)
    ax11o $p |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( vz ax-11 ax11a2 ) ABCDABDEF $.
      $( [3-Feb-2007] $)
  $}

  $( Axiom ~ ax-11o ("o" for "old") was the original version of ~ ax-11 ,
     before it was discovered (in Jan. 2007) that the shorter ~ ax-11 could
     replace it.  It appears as Axiom scheme C15' in [Megill] p. 448 (p. 16 of
     the preprint).  It is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of
     [Monk2] p. 105, from which it can be proved by cases.  To understand this
     theorem more easily, think of " ` -. A. x x = y -> ` ..." as informally
     meaning "if ` x ` and ` y ` are distinct variables then..."  The
     antecedent becomes false if the same variable is substituted for ` x ` and
     ` y ` , ensuring the theorem is sound whenever this is the case.  In some
     later theorems, we call an antecedent of the form ` -. A. x x = y ` a
     "distinctor."

     This axiom is redundant, as shown by theorem ~ ax11o . $)
  ax-11o $a |- ( -. A. x x = y ->
             ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.

  $( Rederivation of axiom ~ ax-11 from the orginal version, ~ ax-11o .  See
     theorem ~ ax11o for the derivation of ~ ax-11o from ~ ax-11 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-11
     above so that uses of ~ ax-11 can be more easily identified. $)
  ax11 $p |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wi biidd dral1 ax-1 alimi syl6bir a1d wn ax-11o ax-4 syl7 
    pm2.61i ) BCDZBEZRACEZRAFZBEZFZFSUCRSTABEUBAABCSAGHAUABARIJKLSMRAUBTABCNACO
    PQ $.
    $( [22-Jan-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Theorems without distinct variables that use axiom ax-11o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A bidirectional version of ~ ax-11o . $)
  ax11b $p |- ( ( -. A. x x = y /\ x = y ) ->
              ( ph <-> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wi ax-11o imp ax-4 com12 adantl impbid ) BCDZBEFZOGAOAHZBEZ
    POARHABCIJORAHPROAQBKLMN $.
    $( [30-Jun-2006] $)

  $( Lemma used in proofs of substitution properties. $)
  equs5 $p |- ( -. A. x x = y ->
             ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wi hbnae hba1 ax-11o imp3a 19.23ad ) BCDZBEFZNAGNAHZBEZBBCB
    IPBJONAQABCKLM $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution when variables
     are distinct. $)
  sb3 $p |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> [ y / x ] ph ) ) $=
    ( weq wal wn wa wex wi wsb equs5 sb2 syl6 ) BCDZBEFNAGBHNAIBEABCJABCKABCLM 
    $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution when variables
     are distinct. $)
  sb4 $p |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wex wi wsb equs5 sb1 syl5 ) BCDZBEFNAGBHNAIBEABCJABCKABCLM 
    $.
    $( [5-Aug-1993] $)

  $( Simplified definition of substitution when variables are distinct. $)
  sb4b $p |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wsb wi sb4 sb2 impbid1 ) BCDZBEFABCGLAHBEABCIABCJK $.
    $( [27-May-1997] $)

  $( An alternate definition of proper substitution that, like ~ df-sb , mixes
     free and bound variables to avoid distinct variable requirements. $)
  dfsb2 $p |- ( [ y / x ] ph <->
              ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) $=
    ( wsb weq wa wi wal wo sbequ2 a4s ax-4 jctild orc syl6 wn sb4 olc pm2.61i 
    sbequ1 imp sb2 jaoi impbii ) ABCDZBCEZAFZUFAGBHZIZUFBHZUEUIGUJUEUGUIUJUEAUF
    UFUEAGBABCJKUFBLMUGUHNOUJPUEUHUIABCQUHUGROSUGUEUHUFAUEABCTUAABCUBUCUD $.
    $( [17-Feb-2005] $)

  $( An alternate definition of proper substitution ~ df-sb that uses only
     primitive connectives (no defined terms) on the right-hand side. $)
  dfsb3 $p |- ( [ y / x ] ph <->
              ( ( x = y -> -. ph ) -> A. x ( x = y -> ph ) ) ) $=
    ( weq wa wi wal wo wn wsb df-or dfsb2 imnan imbi1i 3bitr4i ) BCDZAEZPAFBGZH
    QIZRFABCJPAIFZRFQRKABCLTSRPAMNO $.
    $( [6-Mar-2007] $)

  $( Bound-variable hypothesis builder for substitution. $)
  hbsb2 $p |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) $=
    ( weq wal wn wsb wi sb4 sb2 a5i syl6 ) BCDZBEFABCGZMAHZBENBEABCIONBABCJKL 
    $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequi $p |- ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) $=
    ( weq wal wsb wi wn wa wex hbsb2 equvini stdpc7 sbequ1 sylan9 eximi syl 
    19.35 sylib hbnae 19.9d syl9 ex com23 sbequ2 a4s adantr drsb1 biimpd 
    alequcoms sylan9r syld pm2.61ii ) DBEZDFZDCEZDFZBCEZADBGZADCGZHZHUPIZUSURIZ
    VBVCUSVDVBHVCUSJUTVADKZVDVAVCUTUTDFZUSVEADBLUSVBDKZVFVEHUSBDEZUQJZDKVGBCDMV
    IVBDVHUTAUQVAABDNADCOZPQRUTVADSTPVAVDDDCDUAADCLUBUCUDUEUPUSVBUPUSJUTAVAUPUT
    AHZUSUOVKDADBUFUGUHUSAABCGZUPVAABCOVLVAHBDVHBFVLVAABDCUIUJUKULUMUDURUSVBURU
    SJUTAVAURUTACBGZUSAURUTVMADCBUIUJABCNPURAVAHZUSUQVNDVJUGUHUMUDUN $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution.  Used in proof of Theorem 9.7 in
     [Megill] p. 449 (p. 16 of the preprint). $)
  sbequ $p |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) $=
    ( weq wsb sbequi wi equcoms impbid ) BCEADBFZADCFZABCDGLKHCBACBDGIJ $.
    $( [5-Aug-1993] $)

  $( Formula-building lemma for use with the Distinctor Reduction Theorem.
     Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
  drsb2 $p |- ( A. x x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) $=
    ( cv wceq wsbc wb sbequ a4s ) BEZCEZFADKGADLGHBABCDIJ $.
    $( [27-Feb-2005] $)

  $( Negation inside and outside of substitution are equivalent. $)
  sbn $p |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) $=
    ( wn wsb weq wal wi sbequ2 nsyld a4s sb4 wa wex sb1 equs3 sylib con2i syl6 
    pm2.61i df-sb sbequ1 con3d com12 sb2 notnot sbbii sylibr con3i sylanbrc 
    impbii ) ADZBCEZABCEZDZBCFZBGZUMUOHZUPURBUPUMAUNULBCIABCIJKUQDUMUPULHZBGZUO
    ULBCLUNUTUNUPAMBNUTDABCOABCPQRSTUMUSUPULMBNZUOULBCUAUPUOULUPAUNABCUBUCUDUOU
    PULDZHBGZDVAVCUNVCVBBCEUNVBBCUEAVBBCAUFUGUHUIULBCPUHUJUK $.
    $( [5-Aug-1993] $)

  $( Removal of implication from substitution. $)
  sbi1 $p |- ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( weq wal wi wsb sbequ2 syl5d sbequ1 syl6d a4s wn sb4 ax-2 al2imi sb2 syl6 
    pm2.61i ) CDEZCFZABGZCDHZACDHZBCDHZGGZUAUGCUAUDUEBUFUAUDABUEUCCDIACDIJBCDKL
    MUBNZUDUAAGZCFZUFUEUHUDUAUCGZCFZUJUFGUCCDOULUJUABGZCFUFUKUIUMCUAABPQBCDRSSA
    CDOJT $.
    $( [5-Aug-1993] $)

  $( Introduction of implication into substitution. $)
  sbi2 $p |- ( ( [ y / x ] ph -> [ y / x ] ps ) -> [ y / x ] ( ph -> ps ) ) $=
    ( wsb wi wn sbn pm2.21 sbimi sylbir ax-1 ja ) ACDEZBCDEABFZCDEZNGAGZCDEPACD
    HQOCDABIJKBOCDBALJM $.
    $( [5-Aug-1993] $)

  $( Implication inside and outside of substitution are equivalent. $)
  sbim $p |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( wi wsb sbi1 sbi2 impbii ) ABECDFACDFBCDFEABCDGABCDHI $.
    $( [5-Aug-1993] $)

  $( Logical OR inside and outside of substitution are equivalent. $)
  sbor $p |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) $=
    ( wn wi wsb wo sbim sbn imbi1i bitri df-or sbbii 3bitr4i ) AEZBFZCDGZACDGZE
    ZBCDGZFZABHZCDGSUAHRPCDGZUAFUBPBCDIUDTUAACDJKLUCQCDABMNSUAMO $.
    $( [29-Sep-2002] $)

  ${
    sb19.21.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution with a variable not free in antecedent affects only the
       consequent. $)
    sb19.21 $p |- ( [ y / x ] ( ph -> ps ) <-> ( ph -> [ y / x ] ps ) ) $=
      ( wi wsb sbim sbf imbi1i bitri ) ABFCDGACDGZBCDGZFAMFABCDHLAMACDEIJK $.
      $( [5-Aug-1993] $)
  $}

  $( Conjunction inside and outside of a substitution are equivalent. $)
  sban $p |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) $=
    ( wn wi wsb wa sbn sbim imbi2i bitri notbii df-an sbbii 3bitr4i ) ABEZFZEZC
    DGZACDGZBCDGZEZFZEZABHZCDGUAUBHTRCDGZEUERCDIUGUDUGUAQCDGZFUDAQCDJUHUCUABCDI
    KLMLUFSCDABNOUAUBNP $.
    $( [5-Aug-1993] $)

  $( Conjunction inside and outside of a substitution are equivalent. $)
  sb3an $p |- ( [ y / x ] ( ph /\ ps /\ ch ) <->
              ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) ) $=
    ( w3a wsb wa df-3an sbbii sban anbi1i bitr4i 3bitri ) ABCFZDEGABHZCHZDEGPDE
    GZCDEGZHZADEGZBDEGZSFZOQDEABCIJPCDEKTUAUBHZSHUCRUDSABDEKLUAUBSIMN $.
    $( [14-Dec-2006] $)

  $( Equivalence inside and outside of a substitution are equivalent. $)
  sbbi $p |- ( [ y / x ] ( ph <-> ps )
     <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) $=
    ( wb wsb wi wa dfbi2 sbbii sbim anbi12i sban 3bitr4i bitri ) ABEZCDFABGZBAG
    ZHZCDFZACDFZBCDFZEZPSCDABIJQCDFZRCDFZHUAUBGZUBUAGZHTUCUDUFUEUGABCDKBACDKLQR
    CDMUAUBINO $.
    $( [5-Aug-1993] $)

  ${
    sblbis.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce left biconditional inside of a substitution. $)
    sblbis $p |- ( [ y / x ] ( ch <-> ph ) <-> ( [ y / x ] ch <-> ps ) ) $=
      ( wb wsb sbbi bibi2i bitri ) CAGDEHCDEHZADEHZGLBGCADEIMBLFJK $.
      $( [19-Aug-1993] $)
  $}

  ${
    sbrbis.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce right biconditional inside of a substitution. $)
    sbrbis $p |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> [ y / x ] ch ) ) $=
      ( wb wsb sbbi bibi1i bitri ) ACGDEHADEHZCDEHZGBMGACDEILBMFJK $.
      $( [18-Aug-1993] $)
  $}

  ${
    sbrbif.1 $e |- ( ch -> A. x ch ) $.
    sbrbif.2 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce right biconditional inside of a substitution. $)
    sbrbif $p |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> ch ) ) $=
      ( wb wsb sbrbis sbf bibi2i bitri ) ACHDEIBCDEIZHBCHABCDEGJNCBCDEFKLM $.
      $( [18-Aug-1993] $)
  $}

  $( A specialization theorem. $)
  a4sbe $p |- ( [ y / x ] ph -> E. x ph ) $=
    ( wsb wn wal wex stdpc4 sbn sylib con2i df-ex sylibr ) ABCDZAEZBFZEABGPNPOB
    CDNEOBCHABCIJKABLM $.
    $( [5-Aug-1993] $)

  $( Specialization of implication.  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  a4sbim $p |- ( A. x ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( wi wal wsb stdpc4 sbi1 syl ) ABEZCFKCDGACDGBCDGEKCDHABCDIJ $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( Specialization of biconditional. $)
  a4sbbi $p |- ( A. x ( ph <-> ps ) -> ( [ y / x ] ph <-> [ y / x ] ps ) ) $=
    ( wb wal wsb stdpc4 sbbi sylib ) ABEZCFKCDGACDGBCDGEKCDHABCDIJ $.
    $( [5-Aug-1993] $)

  ${
    sbbid.1 $e |- ( ph -> A. x ph ) $.
    sbbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction substituting both sides of a biconditional. $)
    sbbid $p |- ( ph -> ( [ y / x ] ps <-> [ y / x ] ch ) ) $=
      ( wb wal wsb 19.21ai a4sbbi syl ) ABCHZDIBDEJCDEJHANDFGKBCDELM $.
      $( [5-Aug-1993] $)
  $}

  $( Elimination of equality from antecedent after substitution. $)
  sbequ8 $p |- ( [ y / x ] ph <-> [ y / x ] ( x = y -> ph ) ) $=
    ( wsb weq wi equsb1 a1bi sbim bitr4i ) ABCDZBCEZBCDZKFLAFBCDMKBCGHLABCIJ $.
    $( [5-Aug-1993] $)

  $( Substitution has no effect on a non-free variable. $)
  sbf3t $p |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph <-> ph ) ) $=
    ( wal wi wsb a4sbim sbf2 ax-4 sylbi syl6 stdpc4 imim2i a4s impbid ) AABDZEZ
    BDZABCFZARSPBCFZAAPBCGTPAABCHABIJKQASEBPSAABCLMNO $.
    $( [30-May-2009] $)

  ${
    hbsb4.1 $e |- ( ph -> A. z ph ) $.
    $( A variable not free remains so after substitution with a distinct
       variable. $)
    hbsb4 $p |- ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) $=
      ( weq wal wn wsb wi wb equequ1 a4s dral1 notbid hbsb2 ax-10o alequcoms 
      syl9r sylbid wa hbae ax-4 alimi sbequ2 sbequ1 al2imi syl5 syld 3syl a1d 
      sb4 hbnae hban ax-12 imp a1i hbimd alimd sb2 a7s syl6 syl9 pm2.61i ex ) 
      DBFZDGZDCFZDGZHZABCIZVKDGZJZJVGVJBCFZBGZHZVMVGVIVOVHVNDBVFVHVNKDDBCLMNOVP
      VKVKBGZVGVLABCPVQVLJBDVKBDQRSTVGHZVJVMVOVRVJUAZVMJVOVMVSVOVODGVNDGZVMBCDU
      BVOVNDVNBUCUDVTVKAVLVNVKAJDABCUEMVTADGZVLAVNAVKDABCUFUGEUHUIUJUKVPVKVNAJZ
      BGZVSVLABCULVSWCWBDGZBGVLVSWBWDBVRVJBDBBUMDCBUMUNVSVNADVRVJDDBDUMDCDUMUNV
      RVJVNVTJBCDUOUPAWAJVSEUQURUSWBVLDBWCVKDABCUTUDVAVBVCVDVEVD $.
      $( [5-Aug-1993] $)
  $}

  $( A variable not free remains so after substitution with a distinct variable
     (closed form of ~ hbsb4 ).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  hbsb4t $p |- ( A. x A. z ( ph -> A. z ph ) ->
               ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) $=
    ( wal wi wsb weq wn a4sbim a4s ax-4 sbimi alimi a1i imim12d a7s hba1 hbsb4 
    syl5 ) AADEZFZDEBEUABCGZUCDEZFZABCGZUFDEZFZDCHDEIUBUEUHFDBUBBEZDEZUFUCUDUGU
    IUFUCFDAUABCJKUDUGFUJUCUFDUAABCADLMNOPQUABCDADRST $.
    $( [25-May-2011] $) $( [7-Apr-2004] $)

  ${
    dvelimf.1 $e |- ( ph -> A. x ph ) $.
    dvelimf.2 $e |- ( ps -> A. z ps ) $.
    dvelimf.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Version of ~ dvelim without any variable restrictions. $)
    dvelimf $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wsb hbsb4 sbie albii 3imtr3g ) CDICJKAEDLZQCJBBCJAEDCFMABEDG
      HNZQBCROP $.
      $( [1-Oct-2002] $)
  $}

  ${
    dvelimdf.1 $e |- ( ph -> A. x ph ) $.
    dvelimdf.2 $e |- ( ph -> A. z ph ) $.
    dvelimdf.3 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    dvelimdf.4 $e |- ( ph -> ( ch -> A. z ch ) ) $.
    dvelimdf.5 $e |- ( ph -> ( z = y -> ( ps <-> ch ) ) ) $.
    $( Deduction form of ~ dvelimf .  This version may be useful if we want to
       avoid ~ ax-17 and use ~ ax-16 instead. $)
    dvelimdf $p |- ( ph -> ( -. A. x x = y -> ( ch -> A. x ch ) ) ) $=
      ( weq wal wn wi wa wsb 19.21ai 2alimi hbsb4t 3syl imp wb sbied adantr 
      albid 3imtr3d ex ) ADELDMNZCCDMZOAUIPBFEQZUKDMZCUJAUIUKULOZAADMZFMBBDMOZD
      MFMUIUMOAUNFHGRAUOFDISBFEDTUAUBAUKCUCUIABCFEHJKUDZUEAULUJUCUIAUKCDGUPUFUE
      UGUH $.
      $( [7-Apr-2004] $)
  $}

  $( A composition law for substitution. $)
  sbco $p |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) $=
    ( wsb wb weq equsb2 sbequ12 bicomd sbimi ax-mp sbbi mpbi ) ACBDZAEZBCDZNBCD
    ABCDECBFZBCDPBCGQOBCQANACBHIJKNABCLM $.
    $( [5-Aug-1993] $)

  ${
    sbid2.1 $e |- ( ph -> A. x ph ) $.
    $( An identity law for substitution. $)
    sbid2 $p |- ( [ y / x ] [ x / y ] ph <-> ph ) $=
      ( wsb sbco sbf bitri ) ACBEBCEABCEAABCFABCDGH $.
      $( [5-Aug-1993] $)
  $}

  $( An idempotent law for substitution.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  sbidm $p |- ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) $=
    ( wsb wb weq equsb2 sbequ12r sbimi ax-mp sbbi mpbi ) ABCDZAEZBCDZMBCDMECBFZ
    BCDOBCGPNBCACBHIJMABCKL $.
    $( [25-May-2011] $) $( [30-Jun-1994] $)

  ${
    sbco2.1 $e |- ( ph -> A. z ph ) $.
    $( A composition law for substitution. $)
    sbco2 $p |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) $=
      ( weq wal wsb wb sbequ sbid2 syl5bbr sbequ12 bitr3d a4s wn hbnae hbsb3 
      hbsb4 wi a1i sbied bicomd pm2.61i ) BCFZBGZABDHZDCHZABCHZIZUEUJBUEAUHUIUE
      UGDBHUHAUGBCDJADBEKLZABCMNOUFPZUIUHULAUHBCBCBQUGDCBABDERSUEAUHITULUKUAUBU
      CUD $.
      $( [30-Jun-1994] $)
  $}

  ${
    sbco2d.1 $e |- ( ph -> A. x ph ) $.
    sbco2d.2 $e |- ( ph -> A. z ph ) $.
    sbco2d.3 $e |- ( ph -> ( ps -> A. z ps ) ) $.
    $( A composition law for substitution. $)
    sbco2d $p |- ( ph -> ( [ y / z ] [ z / x ] ps <-> [ y / x ] ps ) ) $=
      ( wsb wi hbim1 sbco2 sb19.21 sbbii bitri 3bitr3i pm5.74ri ) ABCEIZEDIZBCD
      IZABJZCEIZEDIZUACDIASJZATJUACDEABEGHKLUCARJZEDIUDUBUEEDABCEFMNAREDGMOABCD
      FMPQ $.
      $( [5-Aug-1993] $)
  $}

  $( A composition law for substitution. $)
  sbco3 $p |- ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) $=
    ( weq wal wsb wb drsb1 sbequ12a alimi a4sbbi syl bitr3d wn hbnae hbsb2 
    sbco2d sbco sbbii syl5rbbr pm2.61i ) BCEZBFZABCGZCDGZACBGZBDGZHUDUEBDGZUFUH
    UEBCDIUDUEUGHZBFUIUHHUCUJBABCJKUEUGBDLMNUDOZUECBGZBDGUFUHUKUECDBBCCPBCBPABC
    QRULUGBDACBSTUAUB $.
    $( [5-Aug-1993] $)

  $( A commutativity law for substitution. $)
  sbcom $p |- ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) $=
    ( weq wal wsb wb wn wa drsb1 hbae sbbid bitr3d adantr wi hbnae hban ax-12 
    imp alimi 19.21t 3syl albid adantrr nalequcoms bi2.04 albii syl5bb alcom 
    adantrl sb4b imbi2d sylan9bbr adantl sylan9bb 3bitr4d pm2.61ian ex sbequ12 
    a4s pm2.61ii ) BCEZBFZDCEZDFZABCGZDCGZADCGZBCGZHZVDIZVFIZVKBDEBFZVLVMJZVKVN
    VKVOVNVGBCGVHVJVGBDCKVNVGVIBCBDBLABDCKMNOVNIZVOJZVEVCAPZBFZPZDFZVCVEAPZDFZP
    ZBFZVHVJVQVEVRPZBFZDFZWAWEVPVLWHWAHVMVPVLJZWGVTDVPVLDBDDQZBCDQZRWIWIBFVEVEB
    FPZBFWGVTHVPVLBBDBQZBCBQRWIWLBVPVLWLDCBSTUAVEVRBUBUCUDUEVPVMWHWEHVLVPVMJZWF
    DFZBFWEWHWNWOWDBVPVMBWMDCBQZRWNVCWBPZDFZWDWOWNWNDFVCVCDFPZDFWRWDHVPVMDWJDCD
    QRWNWSDVPVMWSVMWSPDBBCDSUFTUAVCWBDUBUCWFWQDVEVCAUGUHUIUDWFDBUJUIUKNVOVHWAHV
    PVMVHVEVGPZDFVLWAVGDCULVLWTVTDWKVLVGVSVEABCULUMUDUNUOVOVJWEHVPVLVJVCVIPZBFV
    MWEVIBCULVMXAWDBWPVMVIWCVCADCULUMUDUPUOUQURUSVDVIVHVJVDAVGDCBCDLVCAVGHBABCU
    TVAMVCVIVJHBVIBCUTVANVFVGVHVJVEVGVHHDVGDCUTVAVFAVIBCDCBLVEAVIHDADCUTVAMNVB 
    $.
    $( [27-May-1997] $)

  ${
    sb5rf.1 $e |- ( ph -> A. y ph ) $.
    $( Reversed substitution.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sb5rf $p |- ( ph <-> E. y ( y = x /\ [ y / x ] ph ) ) $=
      ( weq wsb wa wex sbid2 sb1 sylbir stdpc7 imp 19.23ai impbii ) ACBEZABCFZG
      ZCHZAQCBFSACBDIQCBJKRACDPQAACBLMNO $.
      $( [25-May-2011] $) $( [3-Feb-2005] $)

    $( Reversed substitution.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sb6rf $p |- ( ph <-> A. y ( y = x -> [ y / x ] ph ) ) $=
      ( weq wsb wi wal sbequ1 equcoms com12 19.21ai sb2 sbid2 sylib impbii ) AC
      BEZABCFZGZCHZASCDQARARGBCABCIJKLTRCBFARCBMACBDNOP $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sb8.1 $e |- ( ph -> A. y ph ) $.
    $( Substitution of variable in universal quantifier.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    sb8 $p |- ( A. x ph <-> A. y [ y / x ] ph ) $=
      ( wal wsb hbal stdpc4 19.21ai hbsb3 stdpc7 cbv3 impbii ) ABEZABCFZCENOCAC
      BDGABCHIOACBABCDJDACBKLM $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sb8e.1 $e |- ( ph -> A. y ph ) $.
    $( Substitution of variable in existential quantifier. $)
    sb8e $p |- ( E. x ph <-> E. y [ y / x ] ph ) $=
      ( wn wal wsb wex hbn sb8 sbn albii bitri notbii df-ex 3bitr4i ) AEZBFZEAB
      CGZEZCFZEABHSCHRUARQBCGZCFUAQBCACDIJUBTCABCKLMNABOSCOP $.
      $( [12-Aug-1993] $)
  $}

  $( Commutation of quantification and substitution variables. $)
  sb9i $p |- ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) $=
    ( weq wal wsb wi drsb1 drsb2 bitr3d dral1 biimprd wn hbsb2 al2imi hbnaes 
    stdpc4 sbco sylib alimi a7s syl6 pm2.61i ) CBDCEZACBFZBEZABCFZCEZGUDUHUFUGU
    ECBUDACCFUGUEACBCHACBCIJKLUDMZUFUECEZBEZUHUFUKGCBBUIUEUJBACBNOPUEUHCBUFUGCU
    FUEBCFUGUEBCQABCRSTUAUBUC $.
    $( [5-Aug-1993] $)

  $( Commutation of quantification and substitution variables. $)
  sb9 $p |- ( A. x [ x / y ] ph <-> A. y [ y / x ] ph ) $=
    ( wsb wal sb9i impbii ) ACBDBEABCDCEABCFACBFG $.
    $( [5-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Predicate calculus with distinct variables (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( This is a version of ~ ax-11o when the variables are distinct.  Axiom
       (C8) of [Monk2] p. 105.  See theorem ~ ax11v2 for the rederivation of
       ~ ax-11o from this theorem. $)
    ax11v $p |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) $=
      ( weq wal wi ax-16 ax-1 syl5 a1d ax-11o pm2.61i ) BCDZBEZMAMAFZBEZFZFNQMN
      OPAOBCGAMHIJABCKL $.
      $( [5-Aug-1993] $)

    $( Two equivalent ways of expressing the proper substitution of ` y ` for
       ` x ` in ` ph ` , when ` x ` and ` y ` are distinct.  Theorem 6.2 of
       [Quine] p. 40.  The proof does not involve ~ df-sb . $)
    sb56 $p |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) $=
      ( weq wi wal hba1 ax11v ax-4 com12 impbid equsex ) ABCDZAEZBFZBCNBGMAOABC
      HOMANBIJKL $.
      $( [14-Apr-2008] $)

    $( Equivalence for substitution.  Compare Theorem 6.2 of [Quine] p. 40.
       Also proved as Lemmas 16 and 17 of [Tarski] p. 70. $)
    sb6 $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( weq wi wa wex wal wsb sb56 anbi2i df-sb ax-4 pm4.71ri 3bitr4i ) BCDZAEZ
      PAFBGZFQQBHZFABCISRSQABCJKABCLSQQBMNO $.
      $( [14-Apr-2008] $) $( [18-Aug-1993] $)

    $( Equivalence for substitution.  Similar to Theorem 6.1 of [Quine]
       p. 40. $)
    sb5 $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wi wal wa wex sb6 sb56 bitr4i ) ABCDBCEZAFBGMAHBIABCJABCKL $.
      $( [14-Apr-2008] $) $( [18-Aug-1993] $)

    $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.
       This proof is similar to Tarski's and makes use of a dummy variable
       ` y ` .  See ~ equid for a proof that avoids dummy variables (but is
       less intuitive). $)
    equid1 $p |- x = x $=
      ( vy weq wex a9e ax-17 ax-8 pm2.43i 19.23ai ax-mp ) BACZBDAACZBAEKLBLBFKL
      BAAGHIJ $.
      $( [1-Apr-2005] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    ax16i.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    ax16i.2 $e |- ( ps -> A. x ps ) $.
    $( Inference with ~ ax-16 as its conclusion, that doesn't require ~ ax-10 ,
       ~ ax-11 , or ~ ax-12 for its proof.  The hypotheses may be eliminable
       without one or more of these axioms in special cases. $)
    ax16i $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( weq wal wi ax-17 ax-8 cbv3 a4imv equid1 mpi syl syl5com alimd mpcom 
      alimi biimpcd biimprd syl6com ) CDHZCIZCEHZEIZAACIZJUFEDHZEIZUHUEUJCEUEEK
      ZUJCKCEDLMUKECHZEIZUHUEUKUNUJUEECECDLNUEUJUMEULUJDCHZUMUEUJDEHZUOUMJUJEEH
      ZUPEOZEDELPDECLQUECCHUOCOCDCLPRSTUMUGEUMUQUGURECELPZUAQQAUHBEIUIAUGBEAEKZ
      UGABFUBSBAECGUTUMUGBAJUSUGABFUCQMUDQ $.
      $( [20-May-2008] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( Version of ~ ax16 that doesn't require ~ ax-10 or ~ ax-12 for its
       proof. $)
    ax16ALT $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( vz wsb sbequ12 ax-17 hbsb3 ax16i ) AABDEBCDABDFABDADGHI $.
      $( [17-May-2008] $)
  $}

  ${
    $d x ps $.
    a4v.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Specialization, using implicit substitition. $)
    a4v $p |- ( A. x ph -> ps ) $=
      ( weq biimpd a4imv ) ABCDCDFABEGH $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x ph $.
    a4imev.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Distinct-variable version of ~ a4ime . $)
    a4imev $p |- ( ph -> E. x ps ) $=
      ( ax-17 a4ime ) ABCDACFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    a4eiv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    a4eiv.2 $e |- ps $.
    $( Inference from existential specialization, using implicit
       substitition. $)
    a4eiv $p |- E. x ph $=
      ( wex weq biimprd a4imev ax-mp ) BACGFBACDCDHABEIJK $.
      $( [19-Aug-1993] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( A variable introduction law for equality.  Lemma 15 of [Monk2]
       p. 109. $)
    equvin $p |- ( x = y <-> E. z ( x = z /\ z = y ) ) $=
      ( weq wa wex equvini ax-17 equtr imp 19.23ai impbii ) ABDZACDZCBDZEZCFABC
      GPMCMCHNOMACBIJKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( A generalization of axiom ~ ax-16 .  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    a16g $p |- ( A. x x = y -> ( ph -> A. z ph ) ) $=
      ( weq wal aev ax-16 biidd dral1 biimprd sylsyld ) BCEBFDBEDFZAABFZADFZBCD
      DBGABCHMONAADBMAIJKL $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( A generalization of axiom ~ ax-16 . $)
    a16gb $p |- ( A. x x = y -> ( ph <-> A. z ph ) ) $=
      ( weq wal a16g ax-4 impbid1 ) BCEBFAADFABCDGADHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    albidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for universal quantifier (deduction rule). $)
    albidv $p |- ( ph -> ( A. x ps <-> A. x ch ) ) $=
      ( ax-17 albid ) ABCDADFEG $.
      $( [5-Aug-1993] $)

    $( Formula-building rule for existential quantifier (deduction rule). $)
    exbidv $p |- ( ph -> ( E. x ps <-> E. x ch ) ) $=
      ( ax-17 exbid ) ABCDADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2albidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 2 existential quantifiers (deduction rule). $)
    2albidv $p |- ( ph -> ( A. x A. y ps <-> A. x A. y ch ) ) $=
      ( wal albidv ) ABEGCEGDABCEFHH $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for 2 existential quantifiers (deduction rule). $)
    2exbidv $p |- ( ph -> ( E. x E. y ps <-> E. x E. y ch ) ) $=
      ( wex exbidv ) ABEGCEGDABCEFHH $.
      $( [1-May-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.
    3exbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 3 existential quantifiers (deduction rule). $)
    3exbidv $p |- ( ph -> ( E. x E. y E. z ps <-> E. x E. y E. z ch ) ) $=
      ( wex exbidv 2exbidv ) ABFHCFHDEABCFGIJ $.
      $( [1-May-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.  $d w ph $.
    4exbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 4 existential quantifiers (deduction rule). $)
    4exbidv $p |- ( ph ->
                     ( E. x E. y E. z E. w ps <-> E. x E. y E. z E. w ch ) ) $=
      ( wex 2exbidv ) ABGIFICGIFIDEABCFGHJJ $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.9 of [Margaris] p. 89. $)
    19.9v $p |- ( E. x ph <-> ph ) $=
      ( ax-17 19.9 ) ABABCD $.
      $( [21-May-2007] $) $( [28-May-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.21 of [Margaris] p. 90. _Notational
       convention_:  We sometimes suffix with "v" the label of a theorem
       eliminating a hypothesis such as ` ( ph -> A. x ph ) ` in ~ 19.21 via
       the use of distinct variable conditions combined with ~ ax-17 .
       Conversely, we sometimes suffix with "f" the label of a theorem
       introducing such a hypothesis to eliminate the need for the distinct
       variable condition; e.g. ~ euf derived from ~ df-eu .  The "f" stands
       for "not free in" which is less restrictive than "does not occur in." $)
    19.21v $p |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) $=
      ( ax-17 19.21 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    19.21aiv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    19.21aiv $p |- ( ph -> A. x ps ) $=
      ( ax-17 19.21ai ) ABCACEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    19.21aivv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    19.21aivv $p |- ( ph -> A. x A. y ps ) $=
      ( wal 19.21aiv ) ABDFCABDEGG $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    19.21adv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.21 of [Margaris] p. 90. $)
    19.21adv $p |- ( ph -> ( ps -> A. x ch ) ) $=
      ( ax-17 19.21ad ) ABCDADFBDFEG $.
      $( [10-Feb-1997] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    $( Quantification of two variables over a formula in which they do not
       occur.  (Contributed by Alan Sare, 12-Apr-2011.) $)
    2ax17 $p |- ( ph -> A. x A. y ph ) $=
      ( id 19.21aivv ) AABCADE $.
      $( [12-Apr-2011] $)
  $}

  ${
    $d x ph $.
    alimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.20 of [Margaris] p. 90. $)
    alimdv $p |- ( ph -> ( A. x ps -> A. x ch ) ) $=
      ( ax-17 alimd ) ABCDADFEG $.
      $( [3-Apr-1994] $)

    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    eximdv $p |- ( ph -> ( E. x ps -> E. x ch ) ) $=
      ( ax-17 eximd ) ABCDADFEG $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2alimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    2alimdv $p |- ( ph -> ( A. x A. y ps -> A. x A. y ch ) ) $=
      ( wal alimdv ) ABEGCEGDABCEFHH $.
      $( [27-Apr-2004] $)

    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    2eximdv $p |- ( ph -> ( E. x E. y ps -> E. x E. y ch ) ) $=
      ( wex eximdv ) ABEGCEGDABCEFHH $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.23 of [Margaris] p. 90. $)
    19.23v $p |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) $=
      ( ax-17 19.23 ) ABCBCDE $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    $( Theorem 19.23 of [Margaris] p. 90 extended to two variables. $)
    19.23vv $p |- ( A. x A. y ( ph -> ps ) <-> ( E. x E. y ph -> ps ) ) $=
      ( wi wal wex 19.23v albii bitri ) ABEDFZCFADGZBEZCFLCGBEKMCABDHILBCHJ $.
      $( [10-Aug-2004] $)
  $}

  ${
    $d x ps $.
    19.23aiv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.

       This inference, along with our many variants such as ~ r19.23adv , is
       used to implement a metatheorem called "Rule C" that is given in many
       logic textbooks.  See, for example, Rule C in [Mendelson] p. 81, Rule C
       in [Margaris] p. 40, or Rule C in Hirst and Hirst's _A Primer for Logic
       and Proof_ p. 59 (PDF p. 65) at
       ~ http://www.mathsci.appstate.edu/~~jlh/primer/hirst.pdf .

       In informal proofs, the statement "Let ` C ` be an element such that..."
       almost always means an implicit application of Rule C.

       In essence, Rule C states that if we can prove that some element ` x `
       exists satisfying a wff, i.e. ` E. x ph ( x ) ` where ` ph ( x ) ` has
       ` x ` free, then we can use ` ph ( C ) ` as a hypothesis for the proof
       where ` C ` is a new (ficticious) constant not appearing previously in
       the proof, nor in any axioms used, nor in the theorem to be proved.  The
       purpose of Rule C is to get rid of the existential quantifier.

       We cannot do this in Metamath directly.  Instead, we use the original
       ` ph ` (containing ` x ` ) as an antecedent for the main part of the
       proof.  We eventually arrive at ` ( ph -> ps ) ` where ` ps ` is the
       theorem to be proved and does not contain ` x ` .  Then we apply
       ~ 19.23aiv to arrive at ` ( E. x ph -> ps ) ` .  Finally, we separately
       prove ` E. x ph ` and detach it with modus ponens ~ ax-mp to arrive at
       the final theorem ` ps ` . $)
    19.23aiv $p |- ( E. x ph -> ps ) $=
      ( ax-17 19.23ai ) ABCBCEDF $.
      $( [25-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    19.23aivv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90. $)
    19.23aivv $p |- ( E. x E. y ph -> ps ) $=
      ( wex 19.23aiv ) ADFBCABDEGG $.
      $( [1-Aug-1995] $)
  $}

  ${
    $d x ch $.  $d x ph $.  $d y ch $.  $d y ph $.
    19.23advv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    19.23advv $p |- ( ph -> ( E. x E. y ps -> ch ) ) $=
      ( wex 19.23adv ) ABEGCDABCEFHH $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ps $.
    $( Theorem 19.27 of [Margaris] p. 90. $)
    19.27v $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) $=
      ( ax-17 19.27 ) ABCBCDE $.
      $( [3-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( Theorem 19.28 of [Margaris] p. 90. $)
    19.28v $p |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) $=
      ( ax-17 19.28 ) ABCACDE $.
      $( [25-Mar-2004] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.36 of [Margaris] p. 90. $)
    19.36v $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) $=
      ( ax-17 19.36 ) ABCBCDE $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x ps $.
    19.36aiv.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.36 of [Margaris] p. 90. $)
    19.36aiv $p |- ( A. x ph -> ps ) $=
      ( ax-17 19.36i ) ABCBCEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ph $.
    $( Special case of ~ 19.12 where its converse holds.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    19.12vv $p |- ( E. x A. y ( ph -> ps ) <-> A. y E. x ( ph -> ps ) ) $=
      ( wi wal wex 19.21v exbii ax-17 hbal 19.36 19.36v albii 19.21 bitr2i 
      3bitri ) ABEZDFZCGABDFZEZCGACFZTEZRCGZDFZSUACABDHIATCBCDBCJKLUEUBBEZDFUCU
      DUFDABCMNUBBDADCADJKOPQ $.
      $( [11-Jul-2011] $) $( [18-Jul-2001] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.37 of [Margaris] p. 90. $)
    19.37v $p |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) $=
      ( ax-17 19.37 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    19.37aiv.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.37 of [Margaris] p. 90. $)
    19.37aiv $p |- ( ph -> E. x ps ) $=
      ( wi wex 19.37v mpbi ) ABECFABCFEDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.41 of [Margaris] p. 90. $)
    19.41v $p |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) $=
      ( ax-17 19.41 ) ABCBCDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 2 quantifiers. $)
    19.41vv $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x E. y ph /\ ps ) ) $=
      ( wa wex 19.41v exbii bitri ) ABEDFZCFADFZBEZCFKCFBEJLCABDGHKBCGI $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d x ps $.  $d y ps $.  $d z ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 3 quantifiers. $)
    19.41vvv $p |- ( E. x E. y E. z ( ph /\ ps ) <->
                     ( E. x E. y E. z ph /\ ps ) ) $=
      ( wa wex 19.41vv exbii 19.41v bitri ) ABFEGDGZCGAEGDGZBFZCGMCGBFLNCABDEHI
      MBCJK $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.42 of [Margaris] p. 90. $)
    19.42v $p |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) $=
      ( ax-17 19.42 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y ph $.
    $( Distribution of existential quantifiers. $)
    exdistr $p |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) $=
      ( wa wex 19.42v exbii ) ABEDFABDFECABDGH $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    $( Theorem 19.42 of [Margaris] p. 90 with 2 quantifiers. $)
    19.42vv $p |- ( E. x E. y ( ph /\ ps ) <-> ( ph /\ E. x E. y ps ) ) $=
      ( wa wex exdistr 19.42v bitri ) ABEDFCFABDFZECFAJCFEABCDGAJCHI $.
      $( [16-Mar-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.
    $( Theorem 19.42 of [Margaris] p. 90 with 3 quantifiers. $)
    19.42vvv $p |- ( E. x E. y E. z ( ph /\ ps )
                       <-> ( ph /\ E. x E. y E. z ps ) ) $=
      ( wa wex 19.42vv exbii 19.42v bitri ) ABFEGDGZCGABEGDGZFZCGAMCGFLNCABDEHI
      AMCJK $.
      $( [21-Sep-2011] $)
  $}

  ${
    $d y ph $.  $d z ph $.
    $( Distribution of existential quantifiers. $)
    exdistr2 $p |- ( E. x E. y E. z ( ph /\ ps ) <->
                   E. x ( ph /\ E. y E. z ps ) ) $=
      ( wa wex 19.42vv exbii ) ABFEGDGABEGDGFCABDEHI $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d z ps $.
    $( Distribution of existential quantifiers.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3exdistr $p |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <->
                E. x ( ph /\ E. y ( ps /\ E. z ch ) ) ) $=
      ( w3a wex wa 3anass 2exbii 19.42vv exdistr anbi2i 3bitri exbii ) ABCGZFHE
      HZABCFHIEHZIZDRABCIZIZFHEHAUAFHEHZITQUBEFABCJKAUAEFLUCSABCEFMNOP $.
      $( [25-May-2011] $) $( [9-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d w ph $.  $d z ps $.  $d w ps $.  $d w ch $.
    $( Distribution of existential quantifiers. $)
    4exdistr $p |- ( E. x E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
                E. x ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) $=
      ( wa wex anass exbii 19.42v anbi2i 3bitri bitri ) ABICDIZIZHJZGJZFJZABCDH
      JIZGJIZFJIZEUAAUCIZFJUDTUEFTABUBIZIZGJAUFGJZIUESUGGSABQIZIZHJZUGRUJHABQKL
      UKAUIHJZIABQHJZIZIUGAUIHMULUNABQHMNUNUFAUMUBBCDHMNNOPLAUFGMUHUCABUBGMNOLA
      UCFMPL $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvalv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvalv $p |- ( A. x ph <-> A. y ps ) $=
      ( ax-17 cbval ) ABCDADFBCFEG $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvexv $p |- ( E. x ph <-> E. y ps ) $=
      ( ax-17 cbvex ) ABCDADFBCFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y x $.  $d y z $.  $d w x $.  $d w z $.
    cbval2.1 $e |- ( ph -> A. z ph ) $.
    cbval2.2 $e |- ( ph -> A. w ph ) $.
    cbval2.3 $e |- ( ps -> A. x ps ) $.
    cbval2.4 $e |- ( ps -> A. y ps ) $.
    cbval2.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbval2 $p |- ( A. x A. y ph <-> A. z A. w ps ) $=
      ( wal hbal weq wb wi wa ax-17 hban expcom pm5.32d cbval 19.28 3bitr3i 
      pm5.32 mpbir ) ADLZBFLZCEAEDGMBCFIMCENZUGUHOPUIUGQZUIUHQZOUIAQZDLUIBQZFLU
      JUKULUMDFUIAFUIFRZHSUIBDUIDRZJSDFNZUIABUIUPABOKTUAUBUIADUOUCUIBFUNUCUDUIU
      GUHUEUFUB $.
      $( [22-Dec-2003] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex2 $p |- ( E. x E. y ph <-> E. z E. w ps ) $=
      ( wex hbex weq wb wi wa ax-17 hban expcom pm5.32d cbvex 19.42 3bitr3i 
      pm5.32 mpbir ) ADLZBFLZCEAEDGMBCFIMCENZUGUHOPUIUGQZUIUHQZOUIAQZDLUIBQZFLU
      JUKULUMDFUIAFUIFRZHSUIBDUIDRZJSDFNZUIABUIUPABOKTUAUBUIADUOUCUIBFUNUCUDUIU
      GUHUEUFUB $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d z w ph $.  $d x y ps $.  $d x w $.  $d z y $.
    cbval2v.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbval2v $p |- ( A. x A. y ph <-> A. z A. w ps ) $=
      ( ax-17 cbval2 ) ABCDEFAEHAFHBCHBDHGI $.
      $( [4-Feb-2005] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex2v $p |- ( E. x E. y ph <-> E. z E. w ps ) $=
      ( ax-17 cbvex2 ) ABCDEFAEHAFHBCHBDHGI $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    cbvald.1 $e |- ( ph -> A. y ph ) $.
    cbvald.2 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbvald.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Deduction used to change bound variables, using implicit substitition,
       particularly useful in conjunction with ~ dvelim .  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    cbvald $p |- ( ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal wb ax-17 hbal wi a1i cbv2 3syl ) AAEIZQDIBDICEIJFADEADKLABCDEGCCDIM
      ACDKNHOP $.
      $( [25-May-2011] $) $( [2-Jan-2002] $)

    $( Deduction used to change bound variables, using implicit substitition,
       particularly useful in conjunction with ~ dvelim . $)
    cbvexd $p |- ( ph -> ( E. x ps <-> E. y ch ) ) $=
      ( wn wal wex hbnd weq wb notbi syl6ib cbvald notbid df-ex 3bitr4g ) ABIZD
      JZICIZEJZIBDKCEKAUBUDAUAUCDEFABEFGLADEMBCNUAUCNHBCOPQRBDSCEST $.
      $( [2-Jan-2002] $)
  $}

  ${
    $v f $.
    $v g $.
    $( Define temporary individual variables. $)
    cbvex4v.vf $f set f $.
    cbvex4v.vg $f set g $.
    $d w z ch $.  $d u v ph $.  $d x y ps $.  $d f g ps $.  $d f w $.
    $d g z $.  $d u v w x y z $.
    cbvex4v.1 $e |- ( ( x = v /\ y = u ) -> ( ph <-> ps ) ) $.
    cbvex4v.2 $e |- ( ( z = f /\ w = g ) -> ( ps <-> ch ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex4v $p |- ( E. x E. y E. z E. w ph <-> E. v E. u E. f E. g ch ) $=
      ( wex weq wa 2exbidv cbvex2v 2exbii bitri ) AGNFNZENDNBGNFNZINHNCKNJNZINH
      NUAUBDEHIDHOEIOPABFGLQRUBUCHIBCFGJKMRST $.
      $( [26-Jul-1995] $)
  $}

  ${
    eean.1 $e |- ( ph -> A. y ph ) $.
    eean.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers. $)
    eean $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) $=
      ( wa wex 19.42 exbii hbex 19.41 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    $( Rearrange existential quantifiers. $)
    eeanv $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) $=
      ( ax-17 eean ) ABCDADEBCEF $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d x z ps $.  $d x y ch $.
    $( Rearrange existential quantifiers.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    eeeanv $p |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <->
                 ( E. x ph /\ E. y ps /\ E. z ch ) ) $=
      ( w3a wex wa df-3an 3exbii eeanv exbii anbi1i 19.41v 3bitr4i 3bitri ) ABC
      GZFHEHDHABIZCIZFHEHZDHSEHZCFHZIZDHZADHZBEHZUCGZRTDEFABCJKUAUDDSCEFLMUBDHZ
      UCIUFUGIZUCIUEUHUIUJUCABDELNUBUCDOUFUGUCJPQ $.
      $( [25-May-2011] $) $( [26-Jul-1995] $)
  $}

  ${
    $d z ph $.  $d w ph $.  $d x ps $.  $d y ps $.  $d y z $.  $d w x $.
    $( Rearrange existential quantifiers. $)
    ee4anv $p |- ( E. x E. y E. z E. w ( ph /\ ps ) <->
                  ( E. x E. y ph /\ E. z E. w ps ) ) $=
      ( wa wex excom exbii eeanv 2exbii 3bitri ) ABGFHZEHDHZCHNDHZEHZCHADHZBFHZ
      GZEHCHRCHSEHGOQCNDEIJPTCEABDFKLRSCEKM $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ph $.
    nexdv.1 $e |- ( ph -> -. ps ) $.
    $( Deduction for generalization rule for negated wff. $)
    nexdv $p |- ( ph -> -. E. x ps ) $=
      ( ax-17 nexd ) ABCACEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    chv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv.2 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem. $)
    chvarv $p |- ps $=
      ( a4v mpg ) ABCABCDEGFH $.
      $( [20-Apr-1994] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( When the class variables in definition ~ df-clel are replaced with set
       variables, this theorem of predicate calculus is the result.  This
       theorem provides part of the justification for the consistency of that
       definition, which "overloads" the set variables in ~ wel with the class
       variables in ~ wcel . $)
    cleljust $p |- ( x e. y <-> E. z ( z = x /\ z e. y ) ) $=
      ( weq wel wa wex ax-17 elequ1 equsex bicomi ) CADCBEZFCGABEZLMCAMCHCABIJK
      $.
      $( [28-Jan-2004] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        More substitution theorems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( The theorems in this section make use of the $d statement. $)

  ${
    $d y ph $.
    $( Two ways of expressing " ` x ` is not free in ` ph ` ." $)
    sbhb $p |- ( ( ph -> A. x ph ) <-> A. y ( ph -> [ y / x ] ph ) ) $=
      ( wal wi wsb ax-17 sb8 imbi2i 19.21v bitr4i ) AABDZEAABCFZCDZEAMECDLNAABC
      ACGHIAMCJK $.
      $( [29-May-2009] $)
  $}

  ${
    $d y z $.  $d x y $.
    $( Lemma for ~ equsb3 .  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    equsb3lem $p |- ( [ x / y ] y = z <-> x = z ) $=
      ( cv wceq ax-17 equequ1 sbie ) BDCDZEADIEZBAJBFBACGH $.
      $( [14-Jun-2011] $) $( [4-Dec-2005] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic wff.  (Contributed by Raph Levien and
       FL, 4-Dec-2005.) $)
    equsb3 $p |- ( [ x / y ] y = z <-> x = z ) $=
      ( vw weq wsb equsb3lem sbbii ax-17 sbco2 3bitr3i ) BCEZBDFZDAFDCEZDAFLBAF
      ACEMNDADBCGHLBADLDIJADCGK $.
      $( [4-Dec-2005] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic membership wff.  (The proof was
       shortened by Andrew Salmon, 14-Jun-2011.) $)
    elsb3 $p |- ( [ x / y ] y e. z <-> x e. z ) $=
      ( vw wel wsb ax-17 elequ1 sbie sbbii sbco2 bitr3i wb weq equsb1 sbimi 
      ax-mp sbbi mpbi sbf 3bitri ) BCEZBAFZDCEZDAFZACEZDAFZUFUCUDDBFZBAFUEUHUBB
      AUDUBDBUBDGDBCHIJUDDABUDBGKLUDUFMZDAFZUEUGMDANZDAFUJDAOUKUIDADACHPQUDUFDA
      RSUFDAUFDGTUA $.
      $( [14-Jun-2011] $) $( [7-Nov-2006] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic membership wff.  (Contributed by
       Rodolfo Medina, 3-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    elsb4 $p |- ( [ x / y ] z e. y <-> z e. x ) $=
      ( vw wel wsb ax-17 elequ2 sbie sbbii sbco2 bitr3i wb weq equsb1 sbimi 
      ax-mp sbbi mpbi sbf 3bitri ) CBEZBAFZCDEZDAFZCAEZDAFZUFUCUDDBFZBAFUEUHUBB
      AUDUBDBUBDGDBCHIJUDDABUDBGKLUDUFMZDAFZUEUGMDANZDAFUJDAOUKUIDADACHPQUDUFDA
      RSUFDAUFDGTUA $.
      $( [14-Jun-2011] $) $( [3-Apr-2010] $)
  $}

  ${
    $d x y $.
    $( ` x ` is not free in ` [ y / x ] ph ` when ` x ` and ` y ` are
       distinct. $)
    hbs1 $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( weq wal wsb wi ax-16 hbsb2 pm2.61i ) BCDBEABCFZKBEGKBCHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y z $.
    hbsb.1 $e |- ( ph -> A. z ph ) $.
    $( If ` z ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` when
       ` y ` and ` z ` are distinct. $)
    hbsb $p |- ( [ y / x ] ph -> A. z [ y / x ] ph ) $=
      ( weq wal wsb wi ax-16 hbsb4 pm2.61i ) DCFDGABCHZMDGIMDCJABCDEKL $.
      $( [12-Aug-1993] $)
  $}

  ${
    $d x z $.  $d x w $.  $d y z $.
    $( Commutativity law for substitution.  Used in proof of Theorem 9.7 of
       [Megill] p. 449 (p. 16 of the preprint). $)
    sbcom2 $p |- ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) $=
      ( weq wal wsb wb wn wa wi alcom bi2.04 albii 19.21v bitri 3bitr3i a1i 
      sb4b imbi2d albidv sylan9bbr sylan9bb 3bitr4d ex hbae sbequ12 a4s sbbid 
      bitr3d pm2.61ii ) BCFZBGZDEFZDGZABCHZDEHZADEHZBCHZIZUNJZUPJZVAVBVCKZUOUMA
      LZBGZLZDGZUMUOALZDGZLZBGZURUTVHVLIVDUMVILZBGZDGVMDGZBGVHVLVMDBMVNVGDVNUOV
      ELZBGVGVMVPBUMUOANOUOVEBPQOVOVKBUMVIDPORSVCURUOUQLZDGVBVHUQDETVBVQVGDVBUQ
      VFUOABCTUAUBUCVBUTUMUSLZBGVCVLUSBCTVCVRVKBVCUSVJUMADETUAUBUDUEUFUNUSURUTU
      NAUQDEBCDUGUMAUQIBABCUHUIUJUMUSUTIBUSBCUHUIUKUPUQURUTUOUQURIDUQDEUHUIUPAU
      SBCDEBUGUOAUSIDADEUHUIUJUKUL $.
      $( [27-May-1997] $)
  $}

  ${
    $d x y z $.  $d w y $.
    $( Equivalence for double substitution. $)
    2sb5 $p |- ( [ z / x ] [ w / y ] ph <->
               E. x E. y ( ( x = z /\ y = w ) /\ ph ) ) $=
      ( wsb weq wa wex sb5 19.42v anass exbii anbi2i 3bitr4ri bitri ) ACEFZBDFB
      DGZQHZBIRCEGZHAHZCIZBIQBDJSUBBRTAHZHZCIRUCCIZHUBSRUCCKUAUDCRTALMQUERACEJN
      OMP $.
      $( [3-Feb-2005] $)

    $( Equivalence for double substitution. $)
    2sb6 $p |- ( [ z / x ] [ w / y ] ph <->
               A. x A. y ( ( x = z /\ y = w ) -> ph ) ) $=
      ( wsb weq wi wal wa sb6 19.21v impexp albii imbi2i 3bitr4ri bitri ) ACEFZ
      BDFBDGZRHZBISCEGZJAHZCIZBIRBDKTUCBSUAAHZHZCISUDCIZHUCTSUDCLUBUECSUAAMNRUF
      SACEKOPNQ $.
      $( [3-Feb-2005] $)
  $}

  ${
    $d x y $.
    $( Equivalence for substitution. $)
    sb6a $p |- ( [ y / x ] ph <-> A. x ( x = y -> [ x / y ] ph ) ) $=
      ( wsb weq wi wal sb6 wb sbequ12 equcoms pm5.74i albii bitri ) ABCDBCEZAFZ
      BGOACBDZFZBGABCHPRBOAQAQICBACBJKLMN $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x w $.  $d y z $.  $d z w $.
    2sb5rf.1 $e |- ( ph -> A. z ph ) $.
    2sb5rf.2 $e |- ( ph -> A. w ph ) $.
    $( Reversed double substitution. $)
    2sb5rf $p |- ( ph <->
                E. z E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) $=
      ( weq wsb wa wex sb5rf 19.42v sbcom2 anbi2i anass bitri exbii hbsb 
      3bitr4ri ) ADBHZABDIZJZDKUAECHZJZACEIBDIZJZEKZDKABDFLUCUHDUAUDUBCEIZJZJZE
      KUAUJEKZJUHUCUAUJEMUGUKEUGUEUIJUKUFUIUEACEBDNOUAUDUIPQRUBULUAUBCEABDEGSLO
      TRQ $.
      $( [3-Feb-2005] $)

    $( Reversed double substitution. $)
    2sb6rf $p |- ( ph <->
                A. z A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) $=
      ( weq wsb wi wal wa sb6rf 19.21v sbcom2 imbi2i impexp bitri albii hbsb 
      3bitr4ri ) ADBHZABDIZJZDKUBECHZLZACEIBDIZJZEKZDKABDFMUDUIDUBUEUCCEIZJZJZE
      KUBUKEKZJUIUDUBUKENUHULEUHUFUJJULUGUJUFACEBDOPUBUEUJQRSUCUMUBUCCEABDEGTMP
      UASR $.
      $( [3-Feb-2005] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( An alternate definition of proper substitution ~ df-sb .  By introducing
       a dummy variable ` z ` in the definiens, we are able to eliminate any
       distinct variable restrictions among the variables ` x ` , ` y ` , and
       ` ph ` of the definiendum.  No distinct variable conflicts arise because
       ` z ` effectively insulates ` x ` from ` y ` .  To achieve this, we use
       a chain of two substitutions in the form of ~ sb5 , first ` z ` for
       ` x ` then ` y ` for ` z ` .  Compare Definition 2.1'' of [Quine] p. 17,
       which is obtained from this theorem by applying ~ df-clab .  Theorem
       ~ sb7f provides a version where ` ph ` and ` z ` don't have to be
       distinct. $)
    dfsb7 $p |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) $=
      ( wsb weq wa wex sb5 sbbii ax-17 sbco2 3bitr3i ) ABDEZDCEBDFAGBHZDCEABCED
      CFOGDHNODCABDIJABCDADKLODCIM $.
      $( [28-Jan-2004] $)
  $}

  ${
    $d w x z $.  $d w y z $.  $d w ph $.
    sb7f.1 $e |- ( ph -> A. z ph ) $.
    $( This version of ~ dfsb7 does not require that ` ph ` and ` z ` be
       distinct.  This permits it to be used as a definition for substitution
       in a formalization that omits the logically redundant axiom ~ ax-17 i.e.
       that doesn't have the concept of a variable not occurring in a wff.
       ( ~ df-sb is also suitable, but its mixing of free and bound variables
       is distasteful to some logicians.)  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    sb7f $p |- ( [ y / x ] ph <->
               E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) $=
      ( wsb weq wa wex sb5 sbbii sbco2 3bitr3i ) ABDFZDCFBDGAHBIZDCFABCFDCGOHDI
      NODCABDJKABCDELODCJM $.
      $( [25-May-2011] $) $( [26-Jul-2006] $)
  $}

  ${
    $d x y $.
    sb10f.1 $e |- ( ph -> A. x ph ) $.
    $( Hao Wang's identity axiom P6 in Irving Copi, _Symbolic Logic_ (5th ed.,
       1979), p. 328.  In traditional predicate calculus, this is a sole axiom
       for identity from which the usual ones can be derived. $)
    sb10f $p |- ( [ y / z ] ph <-> E. x ( x = y /\ [ x / z ] ph ) ) $=
      ( weq wsb wa wex hbsb sbequ equsex bicomi ) BCFADBGZHBIADCGZNOBCADCBEJABC
      DKLM $.
      $( [9-May-2005] $)
  $}

  ${
    $d x ph $.
    $( An identity law for substitution.  Used in proof of Theorem 9.7 of
       [Megill] p. 449 (p. 16 of the preprint). $)
    sbid2v $p |- ( [ y / x ] [ x / y ] ph <-> ph ) $=
      ( ax-17 sbid2 ) ABCABDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x ph $.
    $( Elimination of substitution. $)
    sbelx $p |- ( ph <-> E. x ( x = y /\ [ x / y ] ph ) ) $=
      ( wsb weq wa wex sbid2v sb5 bitr3i ) AACBDZBCDBCEKFBGABCHKBCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( Note:  A more general case could also be proved with
       "$d x z $.  $d y w $.  $d x ph $.  $d y ph $.", but with more
       difficulty. $)
    $d x y z $.  $d w y $.  $d x y ph $.
    $( Elimination of double substitution. $)
    sbel2x $p |- ( ph <-> E. x E. y ( ( x = z /\ y = w ) /\
                     [ y / w ] [ x / z ] ph ) ) $=
      ( weq wsb wa wex sbelx anbi2i exbii exdistr 3bitr4i anass 2exbii bitr4i 
      ) ABDFZCEFZADBGZECGZHZHZCIBIZRSHUAHZCIBIRTHZBIRUBCIZHZBIAUDUFUHBTUGRTCEJK
      LABDJRUBBCMNUEUCBCRSUAOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( A theorem used in elimination of disjoint variable restriction on ` x `
       and ` y ` by replacing it with a distinctor ` -. A. x x = z ` . $)
    sbal1 $p |- ( -. A. x x = z ->
             ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) $=
      ( weq wal wn wsb wb wi sbequ12 a4s dral2 bitr3d a1d wa hba1 hbsb4 ax-4 
      sbimi alimi syl6 adantl sb4 al2imi hbnaes ax-7 ax-16 ax-12 pm2.61i alim 
      syl9 sb2 sylan9 impbid ex ) CDEZCFZBDEBFGZABFZCDHZACDHZBFZIZJURVDUSURUTVA
      VCUQUTVAICUTCDKLAVBCDBUQAVBICACDKLMNOURGZUSVDVEUSPVAVCUSVAVCJVEUSVAVABFVC
      UTCDBABQRVAVBBUTACDABSTUAUBUCVEVCUQAJZBFZCFZUSVAVEVCVFCFZBFZVHVCVJJCDBVEV
      BVIBACDUDUEUFVFBCUGUBVHVAJBDCUSCFVHUQUTJZCFVAUSVGVKCUSUQUQBFZVGUTBCEBFZUS
      UQVLJZJVMVNUSUQBCUHOCDBUIUJUQABUKULUEUTCDUMUBUFUNUOUPUJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Move universal quantifier in and out of substitution. $)
    sbal $p |- ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) $=
      ( weq wal wsb wb a16gb sbimi sbequ5 sbbi 3imtr3i bitr3d sbal1 pm2.61i ) 
      BDEBFZABFZCDGZACDGZBFZHQTSUAQCDGARHZCDGQTSHQUBCDABDBIJBDCDKARCDLMTBDBINAB
      CDOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Move existential quantifier in and out of substitution. $)
    sbex $p |- ( [ z / y ] E. x ph <-> E. x [ z / y ] ph ) $=
      ( wn wal wsb wex sbn sbal albii bitri notbii df-ex sbbii 3bitr4i ) AEZBFZ
      EZCDGZACDGZEZBFZEZABHZCDGUABHTRCDGZEUDRCDIUFUCUFQCDGZBFUCQBCDJUGUBBACDIKL
      MLUESCDABNOUABNP $.
      $( [27-Sep-2003] $)
  $}

  ${
    $d x z $.  $d y z $.
    sbalv.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Quantify with new variable inside substitution. $)
    sbalv $p |- ( [ y / x ] A. z ph <-> A. z ps ) $=
      ( wal wsb sbal albii bitri ) AEGCDHACDHZEGBEGAECDILBEFJK $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( An equivalent expression for existence. $)
    exsb $p |- ( E. x ph <-> E. y A. x ( x = y -> ph ) ) $=
      ( wex wsb weq wi wal ax-17 sb8e sb6 exbii bitri ) ABDABCEZCDBCFAGBHZCDABC
      ACIJNOCABCKLM $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d x y z $.  $d y w $.  $d z w ph $.
    $( An equivalent expression for double existence. $)
    2exsb $p |- ( E. x E. y ph <->
                  E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) $=
      ( wex weq wi wal wa exsb exbii excom bitri impexp albii 19.21v bitr2i 
      3bitri ) ACFZBFZCEGZAHZCIZBFZEFZBDGZUBJAHZCIZBIZDFZEFUJEFDFUAUDEFZBFUFTUL
      BACEKLUDBEMNUEUKEUEUGUDHZBIZDFUKUDBDKUNUJDUMUIBUIUGUCHZCIUMUHUOCUGUBAOPUG
      UCCQRPLNLUJEDMS $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d z ps $.
    dvelim.1 $e |- ( ph -> A. x ph ) $.
    dvelim.2 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( This theorem can be used to eliminate a distinct variable restriction on
       ` x ` and ` z ` and replace it with the "distinctor" ` -. A. x x = y `
       as an antecedent. ` ph ` normally has ` z ` free and can be read
       ` ph ( z ) ` , and ` ps ` substitutes ` y ` for ` z ` and can be read
       ` ph ( y ) ` .  We don't require that ` x ` and ` y ` be distinct: if
       they aren't, the distinctor will become false (in multiple-element
       domains of discourse) and "protect" the consequent.

       To obtain a closed-theorem form of this inference, prefix the hypotheses
       with ` A. x A. z ` , conjoin them, and apply ~ dvelimdf .

       Other variants of this theorem are ~ dvelimf (with no distinct variable
       restrictions), ~ dvelimfALT (that avoids ~ ax-11 ), and ~ dvelimALT
       (that avoids ~ ax-10 ). $)
    dvelim $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( ax-17 dvelimf ) ABCDEFBEHGI $.
      $( [23-Nov-1994] $)
  $}

  ${
    $d z ps $.  $d x z $.  $d y z $.
    dvelimALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimALT.2 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Version of ~ dvelim that doesn't use ~ ax-10 .  (See ~ dvelimfALT for a
       version that doesn't use ~ ax-11 .) $)
    dvelimALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi ax-17 hba1 ax16ALT a1i hbimd a1d wa hbn hban ax-12 imp 
      ex pm2.61i hbald equsal albii 3imtr3g ) CDHZCIZJZEDHZAKZEIZUNCIBBCIUKUMCE
      UKELCEHZCIZUKUMUMCIKZKUPUQUKUPULACUOCMZULCENAACIKZUPFOPQUPJZUKUQUTUKRZULA
      CUTUKCUPCURSUJCUICMSTUTUKULULCIKEDCUAUBUSVAFOPUCUDUEABEDBELGUFZUNBCVBUGUH
      $.
      $( [17-May-2008] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveeq1 $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax-17 equequ1 dvelimfALT ) DCEZBCEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)

    $( Version of ~ dveeq1 using ~ ax-16 instead of ~ ax-17 . $)
    dveeq1ALT $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax17eq equequ1 dvelimfALT ) DCEBCEABDDCAFBCDFDBCGH $.
      $( [29-Apr-2008] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveel1 $p |- ( -. A. x x = y -> ( y e. z -> A. x y e. z ) ) $=
      ( vw wel ax-17 elequ1 dvelimfALT ) DCEZBCEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveel2 $p |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) $=
      ( vw wel ax-17 elequ2 dvelimfALT ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d z y $.  $d z x $.
    $( Move quantifier in and out of substitution. $)
    sbal2 $p |- ( -. A. x x = y ->
             ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) $=
      ( weq wal wn wi wsb hbnae wb dveeq1 alimi hbnaes 19.21t syl albid alcom 
      syl5rbbr sb6 albii 3bitr4g ) BCEBFGZCDEZABFZHZCFZUDAHZCFZBFZUECDIACDIZBFU
      CUHBFZCFUGUJUCULUFCBCCJUCUDUDBFHZBFZULUFKUNBCBUCUMBBCDLMNUDABOPQUHCBRSUEC
      DTUKUIBACDTUAUB $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d w y $.  $d w z $.  $d w x $.  $( ` w ` is dummy. $)
    $( Axiom ~ ax-15 is redundant if we assume ~ ax-17 .  Remark 9.6 in
       [Megill] p. 448 (p. 16 of the preprint), regarding axiom scheme C14'.

       Note that ` w ` is a dummy variable introduced in the proof.  On the web
       page, it is implicitly assumed to be distinct from all other variables.
       (This is made explicit in the database file set.mm).  Its purpose is to
       satisfy the distinct variable requirements of ~ dveel2 and ~ ax-17 .  By
       the end of the proof it has vanished, and the final theorem has no
       distinct variable requirements.

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-15 below so that theorems needing ~ ax-15 can be more easily
       identified. $)
    ax15 $p |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x e. y -> A. z x e. y ) ) ) $=
      ( vw weq wal wn wel wi hbn1 dveel2 hbim1 ax-17 elequ1 imbi2d dvelimfALT 
      19.21 syl6ib pm2.86d ) CAECFGZCBEZCFGZABHZUCCFZTUBUCIZUECFUBUDIUBDBHZIUEC
      ADUBUFCUACJZCBDKLUEDMDAEUFUCUBDABNOPUBUCCUGQRS $.
      $( [29-Jun-1995] $)
  $}

  $( Axiom of Quantifier Introduction.  One of the equality and substitution
     axioms for a non-logical predicate in our predicate calculus with
     equality.  Axiom scheme C14' in [Megill] p. 448 (p. 16 of the preprint).
     It is redundant if we include ~ ax-17 ; see theorem ~ ax15 .  Alternately,
     ~ ax-17 becomes unnecessary in principle with this axiom, but we lose the
     more powerful metalogic afforded by ~ ax-17 .  We retain ~ ax-15 here to
     provide completeness for systems with the simpler metalogic that results
     from omitting ~ ax-17 , which might be easier to study for some
     theoretical purposes. $)
  ax-15 $a |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x e. y -> A. z x e. y ) ) ) $.

  ${
    $d x z $.  $d y z $.
    $( Theorem to add distinct quantifier to atomic formula.  This theorem
       demonstrates the induction basis for ~ ax-17 considered as a
       metatheorem.) $)
    ax17el $p |- ( x e. y -> A. z x e. y ) $=
      ( weq wal wel wi ax-15 ax-16 pm2.61ii ) CADCECBDCEABFZKCEGABCHKCAIKCBIJ 
      $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Version of ~ dveel2 using ~ ax-16 instead of ~ ax-17 . $)
    dveel2ALT $p |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) $=
      ( vw wel ax17el elequ2 dvelimfALT ) CDECBEABDCDAFCBDFDBCGH $.
      $( [10-May-2008] $)
  $}

  ${
    $d x u v $.  $d y u v $.  $d z u v $.  $d w u v $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  Atomic formula for equality predicate. $)
    ax11eq $p |- ( -. A. x x = y ->
               ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) $=
      ( vu vv weq wal wn wi wa 19.26 equid a1i ax-gen wb equequ1 equequ2 
      sylan9bb a4s hba1 imbi2d albid imbi12d adantr mpbii exp32 sylbir 
      ad2antll ax-12 impcom adantrr equtrr alimi syl6 sylbid adantll dral2 
      ad2antrr mpbid imp biimprcd adantlr ad2antlr wex a9e ax-1 19.21aiv 
      adantl dveeq2 im2anan9 sylibr syl 19.23adv mpi a1d 4cases ) ACGZAHZADGZAH
      ZABGZAHIZWBCDGZWBWDJZAHZJZJZJZVSWAKVRVTKZAHZWIVRVTALWKWCWBWGWKWCWBKZKAAGZ
      WBWMJZAHZJZWGWOWMWNAWMWBAMNONWKWPWGPWLWKWMWDWOWFWJWMWDPAVRWMCAGZVTWDACAQA
      DCRZSTZWKWNWEAWJAUAWKWMWDWBWSUBUCUDUEUFUGUHVSWAIZKZWCWBWGXAWLKVTWBVTJZAHZ
      JZWGWTWLXDVSWTWLKZVTBDGZXCWBVTXFPWTWCABDQUIXEXFXFAHZXCWTWCXFXGJZWBWCWTXHB
      DAUJUKULXFXBABDAUMUNUOUPUQVSXDWGPWTWLVSVTWDXCWFVRVTWDPAACDQTZXBWEACAVSVTW
      DWBXIUBURUDUSUTUGVSIZWAKZWCWBWGXKWLKWQWBWQJZAHZJZWGXJWLXNWAXJWLKZWQCBGZXM
      WBWQXPPXJWCABCRZUIXOXPXPAHZXMXJWCXPXRJZWBXJWCXSCBAUJVAULXPXLAWBWQXPXQVBUN
      UOUPVCWAXNWGPXJWLWAWQWDXMWFVTWQWDPAWRTZXLWEADAWAWQWDWBXTUBURUDVDUTUGXJWTK
      ZWHWCYAWGWBYAEDGZEVEWGEDVFYAYBWGEYAFCGZFVEYBWGJZFCVFYAYCYDFYAYCYBWGYAYCYB
      KZKZFEGZWBYGJZAHZJWGYGYHAYGWBVGVHYFYGWDYIWFYEYGWDPZYAYCYGCEGYBWDFCEQEDCRS
      ZVIYFYEAHZYIWFPYFYCAHZYBAHZKZYLYAYEYOXJYCYMWTYBYNACFVJADEVJVKVAYCYBALVLYL
      YHWEAYEAUAYLYGWDWBYEYJAYKTUBUCVMUDUFUGVNVOVNVOVPVPVQ $.
      $( [22-Jan-2007] $)
  $}

  ${
    $d x u v $.  $d y u v $.  $d z u v $.  $d w u v $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  Atomic formula for membership predicate. $)
    ax11el $p |- ( -. A. x x = y ->
               ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) $=
      ( vv vu weq wal wn wel wi wa 19.26 wb elequ1 elequ2 bitrd adantl ax-17 
      dvelimfALT biimprcd alimi syl6 adantr sylbid sylan9bb a4s hba1 imbi2d 
      albid imbi12d mpbid exp32 sylbir ad2antll ax-15 impcom adantrr adantll 
      dral2 ad2antrr imp adantlr ad2antlr wex a9e ax-1 19.21aiv dveeq2 
      im2anan9 sylibr syl mpbii 19.23adv mpi a1d 4cases ) ACGZAHZADGZAHZABGZAHI
      ZWBCDJZWBWDKZAHZKZKZKZVSWALVRVTLZAHZWIVRVTAMWKWCWBWGWKWCWBLZLAAJZWBWMKZAH
      ZKZWGWLWPWKWLWMBBJZWOWBWMWQNWCWBWMBAJWQABAOABBPQZRWCWQWOKWBWCWQWQAHWOEEJZ
      WQABEWSASWQESEBGWSBEJWQEBEOEBBPQTWQWNAWBWMWQWRUAUBUCUDUERWKWPWGNWLWKWMWDW
      OWFWJWMWDNAVRWMCAJZVTWDACAOADCPZUFUGZWKWNWEAWJAUHWKWMWDWBXBUIUJUKUDULUMUN
      VSWAIZLZWCWBWGXDWLLADJZWBXEKZAHZKZWGXCWLXHVSXCWLLZXEBDJZXGWBXEXJNXCWCABDO
      ZUOXIXJXJAHZXGXCWCXJXLKZWBWCXCXMBDAUPUQURXJXFAWBXEXJXKUAUBUCUEUSVSXHWGNXC
      WLVSXEWDXGWFVRXEWDNAACDOUGZXFWEACAVSXEWDWBXNUIUTUKVAULUMVSIZWALZWCWBWGXPW
      LLWTWBWTKZAHZKZWGXOWLXSWAXOWLLZWTCBJZXRWBWTYANXOWCABCPZUOXTYAYAAHZXRXOWCY
      AYCKZWBXOWCYDCBAUPVBURYAXQAWBWTYAYBUAUBUCUEVCWAXSWGNXOWLWAWTWDXRWFVTWTWDN
      AXAUGZXQWEADAWAWTWDWBYEUIUTUKVDULUMXOXCLZWHWCYFWGWBYFFDGZFVEWGFDVFYFYGWGF
      YFECGZEVEYGWGKZECVFYFYHYIEYFYHYGWGYFYHYGLZLZEFJZWBYLKZAHZKWGYLYMAYLWBVGVH
      YKYLWDYNWFYJYLWDNZYFYHYLCFJYGWDECFOFDCPUFZRYKYJAHZYNWFNYKYHAHZYGAHZLZYQYF
      YJYTXOYHYRXCYGYSACEVIADFVIVJVBYHYGAMVKYQYMWEAYJAUHYQYLWDWBYJYOAYPUGUIUJVL
      UKVMUMVNVOVNVOVPVPVQ $.
      $( [22-Jan-2007] $)
  $}

  ${
    ax11f.1 $e |- ( ph -> A. x ph ) $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  We can start with any formula ` ph ` in which ` x ` is
       not free. $)
    ax11f $p |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wi ax-1 19.21ai a1i12 ) BCEZBFGLALAHZBFHAMBDALIJK $.
      $( [21-Jan-2007] $)
  $}

  ${
    ax11indn.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Negation case. $)
    ax11indn $p |- ( -. A. x x = y ->
               ( x = y -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ) $=
      ( weq wal wn wi wa wex hbn1 con3 syl6 com23 19.21ad exanali syl5ib 19.8a 
      syl5 exp3a ) BCEZBFGZUAAGZUAUCHZBFZUBUAUCIZBJZUEUFUBUAAHZBFZGZUEUGUBUJUDB
      UABKUHBKUBUAUJUCUBUAAUIHUJUCHDAUILMNOUAABPQUFBRST $.
      $( [21-Jan-2007] $)

    ${
      ax11indi.2 $e |- ( -. A. x x = y ->
                 ( x = y -> ( ps -> A. x ( x = y -> ps ) ) ) ) $.
      $( Induction step for constructing a substitution instance of ~ ax-11o
         without using ~ ax-11o .  Implication case. $)
      ax11indi $p |- ( -. A. x x = y ->
           ( x = y -> ( ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ) $=
        ( weq wal wn wi wa ax11indn imp pm2.21 imim2i alimi syl6 ax-1 jad ex ) 
        CDGZCHIZUAABJZUAUCJZCHZJUBUAKZABUEUFAIZUAUGJZCHZUEUBUAUGUIJACDELMUHUDCU
        GUCUAABNOPQUFBUABJZCHZUEUBUABUKJFMUJUDCBUCUABAROPQST $.
        $( [21-Jan-2007] $)
    $}
  $}

  ${
    ax11indalem.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( Lemma for ~ ax11inda2 and ~ ax11inda . $)
    ax11indalem $p |- ( -. A. y y = z -> ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) $=
      ( weq wal wn wi ax-1 a5i a1i biidd dral1 imbi2d dral2 3imtr4d alequcoms 
      a1d adantr wa simplr ax-12 imp alequcom con3i syl2an adantlr hbnae hba1 
      hban ax-4 sylan2 alimd syl11anc wb 19.21ai 19.21t syl albid ax-7 syl5bi 
      ad2antrr syld exp31 pm2.61ian ) BDFBGZCDFCGZHZBCFZBGHZVJADGZVJVLIZBGZIZIZ
      IZVGVQVIVGVPVKVGVOVJVODBDBFDGZABGZVJVSIZBGZVLVNVSWAIVRAVTBVSVJJKLAADBVRAM
      NZVMVTDBBVRVLVSVJWBOPQRSSTVGHZVIUAZVKVJVOWDVKUAVJUAZVLVJAIZBGZDGZVNWEVKVJ
      DGZVLWHIWDVKVJUBWDVJWIVKWDVJWIVRHZDCFDGZHZVJWIIZWCVIWJWLWMBCDUCUDVRVGDBUE
      UFWKVHDCUEUFUGZUDUHVKWIUAAWGDVKWIDBCDUIVJDUJUKVKVJAWGIZWIVKVJWOEUDVJDULUM
      UNUOWDWHVNIVKVJWDWFDGZBGVNWHWDWPVMBWCVIBBDBUICDBUIUKWDWMDGWPVMUPWDWMDWCVI
      DBDDUICDDUIUKWNUQVJADURUSUTWFDBVAVBVCVDVEVF $.
      $( [24-Jan-2007] $)
  $}

  ${
    $d z y $.
    ax11inda2.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( A proof of ~ ax11inda2 that is slightly more direct. $)
    ax11inda2ALT $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi ax-1 a5i a1i biidd dral1 imbi2d dral2 3imtr4d alequcoms 
      a1d wa simplr dveeq1 nalequcoms imp adantlr hbnae hba1 hban ax-4 sylan2 
      alimd syl11anc wb 19.21ai 19.21t syl albid ax-7 syl5bi ad2antrr syld 
      exp31 pm2.61i ) BDFBGZBCFZBGHZVEADGZVEVGIZBGZIZIZIVDVKVFVDVJVEVJDBDBFDGZA
      BGZVEVMIZBGZVGVIVMVOIVLAVNBVMVEJKLAADBVLAMNZVHVNDBBVLVGVMVEVPOPQRSSVDHZVF
      VEVJVQVFTVETZVGVEAIZBGZDGZVIVRVFVEDGZVGWAIVQVFVEUAVQVEWBVFVQVEWBVEWBIZDBD
      BCUBUCZUDUEVFWBTAVTDVFWBDBCDUFVEDUGUHVFVEAVTIZWBVFVEWEEUDVEDUIUJUKULVQWAV
      IIVFVEVQVSDGZBGVIWAVQWFVHBBDBUFVQWCDGWFVHUMVQWCDBDDUFWDUNVEADUOUPUQVSDBUR
      USUTVAVBVC $.
      $( [4-May-2007] $)

    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Quantification case.  When ` z ` and ` y ` are
       distinct, this theorem avoids the dummy variables needed by the more
       general ~ ax11inda . $)
    ax11inda2 $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi a16g ax-1 syl5 a1d ax11indalem pm2.61i ) CDFCGZBCFZBGHZQA
      DGZQSIZBGZIZIZIPUCRPUBQPTUASTCDBJSQKLMMABCDENO $.
      $( [24-Jan-2007] $)
  $}

  ${
    $d w ph $.  $d w x $.  $d w y $.  $d w z $.
    ax11inda.1 $e |- ( -. A. x x = w ->
               ( x = w -> ( ph -> A. x ( x = w -> ph ) ) ) ) $.
    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Quantification case.  (When ` z ` and ` y `
       are distinct, ~ ax11inda2 may be used instead to avoid the dummy
       variable ` w ` in the proof.) $)
    ax11inda $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi wex a9e wa ax11inda2 wb dveeq2 imp hba1 equequ2 a4s 
      albid notbid syl adantl imbi1d imbi2d imbi12d mpbii ex 19.23adv mpi 
      pm2.43i ) BCGZBHZIZUMADHZUMUPJZBHZJZJZUOECGZEKUOUTJZECLUOVAVBEUOVAVBUOVAM
      ZBEGZBHZIZVDUPVDUPJZBHZJZJZJVBABEDFNVCVFUOVJUTVCVABHZVFUOOUOVAVKBCEPQZVKV
      EUNVKVDUMBVABRZVAVDUMOZBECBSZTZUAUBUCVCVDUMVIUSVAVNUOVOUDVCVHURUPVCVKVHUR
      OVLVKVGUQBVMVKVDUMUPVPUEUAUCUFUGUGUHUIUJUKUL $.
      $( [24-Jan-2007] $)
  $}

  $( Part of a study related to ~ ax-12 .  The consequent introduces a new
     variable ` z ` .  There are no distinct variable restrictions. $)
  a12stdy1 $p |- ( A. x x = y -> E. x y = z ) $=
    ( weq wal wex a9e wn ax-10o con3d df-ex 3imtr4g mpi ) ABDAEZBCDZBFZOAFZBCGN
    OHZBEZHRAEZHPQNTSRABIJOBKOAKLM $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The consequent is quantified with a
     different variable.  There are no distinct variable restrictions. $)
  a12stdy2 $p |- ( A. z ( z = x /\ x = y ) -> A. y y = x ) $=
    ( weq wa wal 19.26 ax-10o alequcom syl6 imp sylbi ) CADZABDZECFMCFZNCFZEBAD
    BFZMNCGOPQOPNAFQNCAHABIJKL $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The consequent introduces two new
     variables.  There are no distinct variable restrictions. $)
  a12stdy3 $p |- ( A. z ( z = x /\ x = y ) -> A. v E. y x = w ) $=
    ( weq wa wal wex a12stdy2 hbae a12stdy1 alimi 3syl ) CAFABFGCHBAFBHZOEHADFB
    IZEHABCJBAEKOPEBADLMN $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The second antecedent of ~ ax-12 is
     replaced.  There are no distinct variable restrictions. $)
  a12stdy4 $p |- ( -. A. z z = x -> ( A. y z = x ->
           ( x = y -> A. z x = y ) ) ) $=
    ( weq wal wn wi wa ax-10o alequcoms con3d impcom pm2.21d ex ax-12 a1dd 
    pm2.61d ) CADZCEZFZCBDCEZRBEZABDZUCCEGZGZTUAUETUAHUBUDUATUBFUAUBSUBSGBCRBCI
    JKLMNTUAFUDUBABCOPQ $.
    $( [14-Jan-2008] $)

  $( Proof of first hypothesis of ~ a12study . $)
  a12lem1 $p |- ( -. A. z z = y ->
                  ( A. z ( z = x -> z = y ) -> x = y ) ) $=
    ( weq wal wn wi wb equequ1 imbi12d a4s dral2 equid a1bi biimpri syl6bi a1d 
    wa 19.26 a4imt sylbir hbn1 hban hbth a1i ax-12 imp hbimd 19.21ai equtr 
    ax-8 imim12d ax-gen sylancl mpii ex pm2.61i ) CADZCEZCBDZCEFZURUTGZCEZABDZG
    ZGUSVEVAUSVCAADZVDGZCEZVDVBVGCACURVBVGHCURURVFUTVDCAAICABIJKLVGVDCVDVGVFVDA
    MZNOKPQUSFZVAVEVJVARZVCVFVDVIVGVHGZCEZURVBVGGGZCEZVCVGGZVKVMVORVLVNRCEVPVLV
    NCSVBVGCATUAVKVLCVJVACURCUBUTCUBUCZVKVFVDCVQVFVFCEGVKVFCVIUDUEVJVAVDVDCEGAB
    CUFUGUHUIVNCURVFURUTVDCAAUJCABUKULUMUNUOUPUQ $.
    $( [15-Jan-2008] $)

  $( Proof of second hypothesis of ~ a12study . $)
  a12lem2 $p |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) $=
    ( weq wn wi wal wa wex equcom imbi1i imnan bitri albii alnex equvini con3i 
    sylbi ) CADZCBDZEZFZCGZACDZTHZCIZEZABDZEUCUEEZCGUGUBUICUBUDUAFUISUDUACAJKUD
    TLMNUECOMUHUFABCPQR $.
    $( [15-Jan-2008] $)

  ${
    a12study.1 $e |- ( -. A. z z = y ->
                    ( A. z ( z = x -> z = y ) -> x = y ) ) $.
    a12study.2 $e |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) $.
    $( Rederivation of axiom ~ ax-12 from two shorter formulas, without using
       ~ ax-12 .  See ~ a12lem1 and ~ a12lem2 for the proofs of the hypotheses
       (using ~ ax-12 ).  This is the only known breakdown of ~ ax-12 into
       shorter formulas.  See ~ a12studyALT for an alternate proof.  Note that
       the proof depends on ~ ax-11o , whose proof ~ ax11o depends on ~ ax-12 ,
       meaning that we would have to replace ~ ax-11 with ~ ax-11o in an
       axiomatization that uses the hypotheses in place of ~ ax-12 .  Whether
       this can be avoided is an open problem. $)
    a12study $p |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x = y -> A. z x = y ) ) ) $=
      ( weq wal wn wa wex wi hbn1 hban hba1 ax-11o equid1 ax-8 mpi syl5 imp3a 
      19.21ad sylan9 19.23ad ex imnan imim1i sylbir alimi syl con2i df-ex 
      sylibr syl7 ) CAFZCGHZCBFZCGHZACFZUPIZCJZABFZCGZVAUOUQUTVBKUOUQIUSVBCUOUQ
      CUNCLUPCLZMVACNUOUSUNUPKZCGZUQVBUOURUPVEUOUNUPVEKURUPCAOURAAFUNAPACAQRSTU
      QVEVACVCVDCNDUAUBUCUDVAUSHZCGZHUTVGVAVGUNUPHZKZCGVAHVFVICVFURVHKVIURUPUEU
      NURVHUNCCFURCPCACQRUFUGUHEUIUJUSCUKULUM $.
      $( [15-Jan-2008] $)

    $( Alternate proof of ~ a12study , also without using ~ ax-12 . $)
    a12studyALT $p |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x = y -> A. z x = y ) ) ) $=
      ( weq wal wn wi wa hbn1 hban con3d wex hba1 ax-11o ax11indn a5i syl8 
      imp3a annim syl5ibr 19.23ad exnal sylan9r hbnd notnot albii 3imtr4g ex ) 
      CAFZCGHZCBFZCGHZABFZUOCGZIULUNJZUOHZHZUSCGUOUPUQURCULUNCUKCKZUMCKLUNURUKU
      MIZCGZHZULURCGZUNVBUODMULVAHZCNVDVCULVEVDCUTURCOULUKUMHZJVDVEULUKVFVDULUK
      VFUKVFIZCGVDUMCAUMCAPQVGURCERSTUKUMUAUBUCVACUDUBUEUFUOUGZUOUSCVHUHUIUJ $.
      $( [17-Jan-2008] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Existential uniqueness
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed for uniqueness notation. $)
  $c E! $.  $( Backwards E exclamation point. $)
  $c E* $.  $( Backwards E superscript *. $)

  $( Extend wff definition to include existential uniqueness ("there exists a
     unique ` x ` such that ` ph ` "). $)
  weu $a wff E! x ph $.

  $( Extend wff definition to include uniqueness ("there exists at most one
     ` x ` such that ` ph ` "). $)
  wmo $a wff E* x ph $.

  ${
    $d w x y $.  $d x z $.  $d y ph $.  $d w z ph $.
    $( A soundness justification theorem for ~ df-eu , showing that the
       definition is equivalent to itself with its dummy variable renamed.
       Note that ` y ` and ` z ` needn't be distinct variables.  See
       ~ eujustALT for a proof that provides an example of how it can be
       achieved through the use of ~ dvelim .  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    eujust $p |- ( E. y A. x ( ph <-> x = y )
        <-> E. z A. x ( ph <-> x = z ) ) $=
      ( vw cv wceq wb wal wex equequ2 bibi2d albidv cbvexv bitri ) ABFZCFZGZHZB
      IZCJAPEFZGZHZBIZEJAPDFZGZHZBIZDJTUDCEQUAGZSUCBUIRUBACEBKLMNUDUHEDUAUEGZUC
      UGBUJUBUFAEDBKLMNO $.
      $( [9-Jul-2011] $) $( [11-Mar-2010] $)

    $( A soundness justification theorem for ~ df-eu , showing that the
       definition is equivalent to itself with its dummy variable renamed.
       Note that ` y ` and ` z ` needn't be distinct variables.  While this
       isn't strictly necessary for soundness, the proof provides an example of
       how it can be achieved through the use of ~ dvelim . $)
    eujustALT $p |- ( E. y A. x ( ph <-> x = y )
        <-> E. z A. x ( ph <-> x = z ) ) $=
      ( vw weq wal wb wex equequ2 bibi2d albidv a4s drex1 wn hbnae 19.21ai wi 
      ax-17 notbid dvelim nalequcoms a1i cbv2 syl df-ex 3bitr4g pm2.61i ) CDFZC
      GZABCFZHZBGZCIZABDFZHZBGZDIZHUMUQCDUIUMUQHCUIULUPBUIUKUOACDBJKLZMNUJOZUMO
      ZCGZOUQOZDGZOUNURUTVBVDUTUTDGZCGVBVDHUTVECCDCPCDDPQUTVAVCCDVAVADGRDCABEFZ
      HZBGZOZVADCEVIDSECFZVHUMVJVGULBVJVFUKAECBJKLTUAUBVIVCCDEVICSEDFZVHUQVKVGU
      PBVKVFUOAEDBJKLTUAUIVAVCHRUTUIUMUQUSTUCUDUETUMCUFUQDUFUGUH $.
      $( [11-Mar-2010] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Define existential uniqueness, i.e.  "there exists exactly one ` x `
       such that ` ph ` ."  Definition 10.1 of [BellMachover] p. 97; also
       Definition *14.02 of [WhiteheadRussell] p. 175.  Other possible
       definitions are given by ~ eu1 , ~ eu2 , ~ eu3 , and ~ eu5 (which in
       some cases we show with a hypothesis ` ph -> A. y ph ` in place of a
       distinct variable condition on ` y ` and ` ph ` ).  Double uniqueness is
       tricky: ` E! x E! y ph ` does not mean "exactly one ` x ` and one
       ` y ` " (see ~ 2eu4 ). $)
    df-eu $a |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) $.
  $}

  $( Define "there exists at most one ` x ` such that ` ph ` ."  Here we define
     it in terms of existential uniqueness.  Notation of [BellMachover] p. 460,
     whose definition we show as ~ mo3 .  For other possible definitions see
     ~ mo2 and ~ mo4 . $)
  df-mo $a |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) $.

  ${
    $d x y z $.  $d ph z $.
    euf.1 $e |- ( ph -> A. y ph ) $.
    $( A version of the existential uniqueness definition with a hypothesis
       instead of a distinct variable condition. $)
    euf $p |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) $=
      ( vz weu weq wb wal wex df-eu ax-17 hbbi hbal equequ2 bibi2d albidv 
      cbvex bitri ) ABFABEGZHZBIZEJABCGZHZBIZCJABEKUBUEECUACBATCDTCLMNUEELECGZU
      AUDBUFTUCAECBOPQRS $.
      $( [12-Aug-1993] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d y ps $.  $d y ch $.
    eubid.1 $e |- ( ph -> A. x ph ) $.
    eubid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for uniqueness quantifier (deduction rule). $)
    eubid $p |- ( ph -> ( E! x ps <-> E! x ch ) ) $=
      ( vy weq wb wal wex weu bibi1d albid exbidv df-eu 3bitr4g ) ABDGHZIZDJZGK
      CRIZDJZGKBDLCDLATUBGASUADEABCRFMNOBDGPCDGPQ $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x ph $.
    eubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for uniqueness quantifier (deduction rule). $)
    eubidv $p |- ( ph -> ( E! x ps <-> E! x ch ) ) $=
      ( ax-17 eubid ) ABCDADFEG $.
      $( [9-Jul-1994] $)
  $}

  ${
    eubii.1 $e |- ( ph <-> ps ) $.
    $( Introduce uniqueness quantifier to both sides of an equivalence. $)
    eubii $p |- ( E! x ph <-> E! x ps ) $=
      ( weq weu wb equid hbequid2 a1i eubid ax-mp ) CCEZACFBCFGCHMABCCIABGMDJKL
      $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Bound-variable hypothesis builder for uniqueness. $)
    hbeu1 $p |- ( E! x ph -> A. x E! x ph ) $=
      ( vy weq wb wal wex weu hba1 hbex df-eu albii 3imtr4i ) ABCDEZBFZCGZPBFAB
      HZQBFOBCNBIJABCKZQPBRLM $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d y z $.  $d x z $.  $d z ph $.
    hbeu.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for "at most one."  Note that ` x `
       and ` y ` needn't be distinct (this makes the proof more difficult). $)
    hbeu $p |- ( E! y ph -> A. x E! y ph ) $=
      ( vz weq wb wal wex weu wi ax-10o alequcoms hba1 syl5 wn hbnae a1i 
      dveeq1 hbbid hbald pm2.61i hbex df-eu albii 3imtr4i ) ACEFZGZCHZEIZUJBHAC
      JZUKBHUIBEBCFBHZUIUIBHZKULUICHZUMUIUNUMKCBUICBLMUHCNOULPZUHBCBCCQUOAUGBBC
      BQAABHKUODRBCESTUAUBUCACEUDZUKUJBUPUEUF $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d w y z $.  $d ph z w $.  $d w x z $.
    sb8eu.1 $e |- ( ph -> A. y ph ) $.
    $( Variable substitution in uniqueness quantifier.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 9-Jul-2011.) $)
    sb8eu $p |- ( E! x ph <-> E! y [ y / x ] ph ) $=
      ( vz vw cv wceq wb wal wex wsbc weu ax-17 sb8 hbsb equsb3 albii 3imtr4i 
      hbbi sbbi sbequ cbval bibi2i bitri 3bitri exbii df-eu 3bitr4i ) ABGEGZHZI
      ZBJZEKABCGZLZUNUJHZIZCJZEKABMUOCMUMUREUMULBFGZLZFJULBUNLZCJURULBFULFNOUTV
      AFCABUSLZUKBUSLZIZVDCJUTUTCJVBVCCABFCDPUSUJHZVECJVCVCCJVECNFBEQZVCVECVFRS
      TAUKBFUAZUTVDCVGRSVAFNULFCBUBUCVAUQCVAUOUKBUNLZIUQAUKBCUAVHUPUOCBEQUDUERU
      FUGABEUHUOCEUHUI $.
      $( [9-Jul-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    cbveu.1 $e |- ( ph -> A. y ph ) $.
    cbveu.2 $e |- ( ps -> A. x ps ) $.
    cbveu.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 8-Jun-2011.) $)
    cbveu $p |- ( E! x ph <-> E! y ps ) $=
      ( weu wsb sb8eu sbie eubii bitri ) ACHACDIZDHBDHACDEJNBDABCDFGKLM $.
      $( [9-Jul-2011] $) $( [25-Nov-1994] $)
  $}

  ${
    $d x y $.
    eu1.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way to express uniqueness used by some authors.  Exercise
       2(b) of [Margaris] p. 110. $)
    eu1 $p |- ( E! x ph <->
                E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) $=
      ( wsb weu weq wb wal wex wi wa hbs1 euf sb8eu equcom imbi2i albii sb6rf 
      anbi12i ancom albiim 3bitr4i exbii ) ABCEZCFUECBGZHCIZBJABFAUEBCGZKZCIZLZ
      BJUECBABCMNABCDOUKUGBUJALUEUFKZCIZUFUEKCIZLUKUGUJUMAUNUIULCUHUFUEBCPQRABC
      DSTAUJUAUEUFCUBUCUDUC $.
      $( [20-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d ph z $.
    mo.1 $e |- ( ph -> A. y ph ) $.
    $( Equivalent definitions of "there exists at most one." $)
    mo $p |- ( E. y A. x ( ph -> x = y ) <->
               A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( vz weq wi wal wex wsb wa ax-17 hbim hbal equequ2 imbi2d albidv cbvex 
      hbs1 sbequ2 ax-8 imim12d cbv3 ancli aaan sylibr prth equtr2 syl6 2alimi 
      syl 19.23aiv sylbir alim alimi a7s exim hbsb3 eximi syl5com impexp 
      bi2.04 bitri 2albii syl5ib wn alnex hbn sbequ1 equcoms con3d pm2.21 
      19.8a 3syl a1d pm2.61i impbii ) ABCFZGZBHZCIZAABCJZKZVRGZCHBHZWAABEFZGZBH
      ZEIWEWHVTECWGCBAWFCDWFCLMZNVTELECFZWGVSBWJWFVRAECBOPQRWHWEEWHWGWBCEFZGZKZ
      CHBHZWEWHWHWLCHZKWNWHWOWGWLBCWIWBWKBABCSWKBLMZVRWBAWFWKABCTBCEUAUBUCUDWGW
      LBCWIWPUEUFWMWDBCWMWCWFWKKVRAWFWBWKUGBCEUHUIUJUKULUMWBCIZWEWAGWQWBVSGZCHB
      HZWAWEWSWBBHZCIZWAWQWSWTVTGZCHZXAWAGWRXCCBWRBHXBCWBVSBUNUOUPWTVTCUQUKWBWT
      CABCDURZUSUTWDWRBCWDAWBVRGGWRAWBVRVAAWBVRVBVCVDVEWQVFZWAWEXEWBVFZCHZWAWBC
      VGXGAVFZBHVTWAXFXHCBWBBXDVHACDVHCBFAWBAWBGBCABCVIVJVKUCXHVSBAVRVLUOVTCVMV
      NUMVOVPVQ $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x y $.  $d ph y $.
    $( Existential uniqueness implies existence.  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    euex $p |- ( E! x ph -> E. x ph ) $=
      ( vy weu wsb weq wi wal wa wex ax-17 eu1 exsimpl sylbi ) ABDAABCEBCFGCHZI
      BJABJABCACKLAOBMN $.
      $( [9-Jul-2011] $) $( [15-Sep-1993] $)
  $}

  ${
    $d x y $.
    eumo0.1 $e |- ( ph -> A. y ph ) $.
    $( Existential uniqueness implies "at most one." $)
    eumo0 $p |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) $=
      ( weu weq wb wal wex wi euf bi1 alimi eximi sylbi ) ABEABCFZGZBHZCIAPJZBH
      ZCIABCDKRTCQSBAPLMNO $.
      $( [8-Jul-1994] $)
  $}

  ${
    $d x y $.
    eu2.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way of defining existential uniqueness.  Definition 6.10 of
       [TakeutiZaring] p. 26. $)
    eu2 $p |- ( E! x ph <->
    ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( weu wex wsb wa weq wi wal euex eumo0 mo sylib jca 19.29r impexp albii 
      19.21 bitri anbi2i abai bitr4i exbii eu1 sylibr impbii ) ABEZABFZAABCGZHB
      CIZJZCKZBKZHZUIUJUOABLUIAULJBKCFUOABCDMABCDNOPUPAUKULJZCKZHZBFZUIUPAUNHZB
      FUTAUNBQVAUSBVAAAURJZHUSUNVBAUNAUQJZCKVBUMVCCAUKULRSAUQCDTUAUBAURUCUDUEOA
      BCDUFUGUH $.
      $( [8-Jul-1994] $)
  $}

  ${
    $d x y $.
    eu3.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way to express existential uniqueness. $)
    eu3 $p |- ( E! x ph <->
                ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) $=
      ( weu wex wsb wa weq wi wal eu2 mo anbi2i bitr4i ) ABEABFZAABCGHBCIZJCKBK
      ZHPAQJBKCFZHABCDLSRPABCDMNO $.
      $( [8-Jul-1994] $)
  $}

  ${
    euor.1 $e |- ( ph -> A. x ph ) $.
    $( Introduce a disjunct into a uniqueness quantifier. $)
    euor $p |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) $=
      ( wn weu wo hbn biorf eubid biimpa ) AEZBCFABGZCFLBMCACDHABIJK $.
      $( [21-Oct-2005] $)
  $}

  ${
    $d x ph $.
    $( Introduce a disjunct into a uniqueness quantifier. $)
    euorv $p |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) $=
      ( ax-17 euor ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.
    mo2.1 $e |- ( ph -> A. y ph ) $.
    $( Alternate definition of "at most one." $)
    mo2 $p |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) $=
      ( wmo wex weu wi weq wal df-mo wn alnex pm2.21 alimi 19.8a syl sylbir 
      eumo0 ja wa eu3 biimpri expcom impbii bitri ) ABEABFZABGZHZABCIZHZBJZCFZA
      BKUIUMUGUHUMUGLALZBJZUMABMUOULUMUNUKBAUJNOULCPQRABCDSTUGUMUHUHUGUMUAABCDU
      BUCUDUEUF $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d w x z $.  $d w y z $.  $d w ph $.
    $( Substitution into "at most one".  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    sbmo $p |- ( [ y / x ] E* z ph <-> E* z [ y / x ] ph ) $=
      ( vw cv wceq wi wal wex wsbc wmo sbex sbim ax-17 sbf imbi2i bitri sbalv 
      exbii mo2 sbbii 3bitr4i ) ADFEFGZHZDIZEJZBCFZKZABUHKZUDHZDIZEJZADLZBUHKUJ
      DLUIUFBUHKZEJUMUFEBCMUOULEUEUKBCDUEBUHKUJUDBUHKZHUKAUDBCNUPUDUJUDBCUDBOPQ
      RSTRUNUGBCADEAEOUAUBUJDEUJEOUAUC $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y $.
    mo3.1 $e |- ( ph -> A. y ph ) $.
    $( Alternate definition of "at most one."  Definition of [BellMachover]
       p. 460, except that definition has the side condition that ` y ` not
       occur in ` ph ` in place of our hypothesis. $)
    mo3 $p |- ( E* x ph <->
               A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( wmo weq wi wal wex wsb wa mo2 mo bitri ) ABEABCFZGBHCIAABCJKOGCHBHABCDL
      ABCDMN $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.
    mo4f.1 $e |- ( ps -> A. x ps ) $.
    mo4f.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( "At most one" expressed using implicit substitution. $)
    mo4f $p |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) $=
      ( wmo wsb wa weq wi wal ax-17 mo3 sbie anbi2i imbi1i 2albii bitri ) ACGAA
      CDHZIZCDJZKZDLCLABIZUBKZDLCLACDADMNUCUECDUAUDUBTBAABCDEFOPQRS $.
      $( [10-Apr-2004] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    mo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( "At most one" expressed using implicit substitution. $)
    mo4 $p |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) $=
      ( ax-17 mo4f ) ABCDBCFEG $.
      $( [26-Jul-1995] $)
  $}

  ${
    mobid.1 $e |- ( ph -> A. x ph ) $.
    mobid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for "at most one" quantifier (deduction rule). $)
    mobid $p |- ( ph -> ( E* x ps <-> E* x ch ) ) $=
      ( wex weu wi wmo exbid eubid imbi12d df-mo 3bitr4g ) ABDGZBDHZICDGZCDHZIB
      DJCDJAPRQSABCDEFKABCDEFLMBDNCDNO $.
      $( [8-Mar-1995] $)
  $}

  ${
    mobii.1 $e |- ( ps <-> ch ) $.
    $( Formula-building rule for "at most one" quantifier (inference rule). $)
    mobii $p |- ( E* x ps <-> E* x ch ) $=
      ( weq wmo wb equid hbequid2 a1i mobid ax-mp ) CCEZACFBCFGCHMABCCIABGMDJKL
      $.
      $( [9-Mar-1995] $)
  $}

  $( Bound-variable hypothesis builder for "at most one." $)
  hbmo1 $p |- ( E* x ph -> A. x E* x ph ) $=
    ( wex weu wi wal wmo hbe1 hbeu1 hbim df-mo albii 3imtr4i ) ABCZABDZEZPBFABG
    ZQBFNOBABHABIJABKZQPBRLM $.
    $( [8-Mar-1995] $)

  ${
    hbmo.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for "at most one." $)
    hbmo $p |- ( E* y ph -> A. x E* y ph ) $=
      ( wex weu wi wal wmo hbex hbeu hbim df-mo albii 3imtr4i ) ACEZACFZGZRBHAC
      IZSBHPQBABCDJABCDKLACMZSRBTNO $.
      $( [9-Mar-1995] $)
  $}

  ${
    cbvmo.1 $e |- ( ph -> A. y ph ) $.
    cbvmo.2 $e |- ( ps -> A. x ps ) $.
    cbvmo.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 8-Jun-2011.) $)
    cbvmo $p |- ( E* x ph <-> E* y ps ) $=
      ( wex weu wi wmo cbvex cbveu imbi12i df-mo 3bitr4i ) ACHZACIZJBDHZBDIZJAC
      KBDKQSRTABCDEFGLABCDEFGMNACOBDOP $.
      $( [9-Jul-2011] $) $( [9-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Uniqueness in terms of "at most one." $)
    eu5 $p |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) $=
      ( vy weu wex weq wi wal wa wmo ax-17 eu3 mo2 anbi2i bitr4i ) ABDABEZABCFG
      BHCEZIPABJZIABCACKZLRQPABCSMNO $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    eu4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Uniqueness using implicit substitution. $)
    eu4 $p |- ( E! x ph <-> ( E. x ph /\
             A. x A. y ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( weu wex wmo wa weq wi wal eu5 mo4 anbi2i bitri ) ACFACGZACHZIQABICDJKDL
      CLZIACMRSQABCDENOP $.
      $( [26-Jul-1995] $)
  $}

  $( Existential uniqueness implies "at most one." $)
  eumo $p |- ( E! x ph -> E* x ph ) $=
    ( weu wex wmo eu5 simprbi ) ABCABDABEABFG $.
    $( [23-Mar-1995] $)

  ${
    eumoi.1 $e |- E! x ph $.
    $( "At most one" inferred from existential uniqueness. $)
    eumoi $p |- E* x ph $=
      ( weu wmo eumo ax-mp ) ABDABECABFG $.
      $( [5-Apr-1995] $)
  $}

  $( Existence in terms of "at most one" and uniqueness. $)
  exmoeu $p |- ( E. x ph <-> ( E* x ph -> E! x ph ) ) $=
    ( wex wmo weu wi df-mo biimpi com12 biimpri euex imim12i peirce syl impbii 
    ) ABCZABDZABEZFZQPRQPRFZABGZHISTPFPTQRPQTUAJABKLPRMNO $.
    $( [5-Apr-2004] $)

  $( Existence implies "at most one" is equivalent to uniqueness. $)
  exmoeu2 $p |- ( E. x ph -> ( E* x ph <-> E! x ph ) ) $=
    ( weu wex wmo eu5 baibr ) ABCABDABEABFG $.
    $( [5-Apr-2004] $)

  $( Absorption of existence condition by "at most one." $)
  moabs $p |- ( E* x ph <-> ( E. x ph -> E* x ph ) ) $=
    ( wex weu wi wmo pm5.4 df-mo imbi2i 3bitr4ri ) ABCZKABDZEZEMKABFZENKLGNMKAB
    HZIOJ $.
    $( [4-Nov-2002] $)

  $( Something exists or at most one exists. $)
  exmo $p |- ( E. x ph \/ E* x ph ) $=
    ( wex wmo wn weu wi pm2.21 df-mo sylibr orri ) ABCZABDZLELABFZGMLNHABIJK $.
    $( [8-Mar-1995] $)

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    $( "At most one" is preserved through implication (notice wff reversal). $)
    immo $p |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) $=
      ( vy wi wal weq wex wmo imim1 al2imi eximdv ax-17 mo2 3imtr4g ) ABEZCFZBC
      DGZEZCFZDHAREZCFZDHBCIACIQTUBDPSUACABRJKLBCDBDMNACDADMNO $.
      $( [22-Apr-1995] $)
  $}

  ${
    immoi.1 $e |- ( ph -> ps ) $.
    $( "At most one" is preserved through implication (notice wff reversal). $)
    immoi $p |- ( E* x ps -> E* x ph ) $=
      ( wi wmo immo mpg ) ABEBCFACFECABCGDH $.
      $( [15-Feb-2006] $)
  $}

  ${
    $d x y $.  $d x y ph $.  $d y ps $.
    $( Move antecedent outside of "at most one." $)
    moimv $p |- ( E* x ( ph -> ps ) -> ( ph -> E* x ps ) ) $=
      ( vy wi wmo weq wal wex ax-1 a1i imim1d alimdv eximdv ax-17 mo2 3imtr4g 
      com12 ) AABEZCFZBCFZASCDGZEZCHZDIBUBEZCHZDITUAAUDUFDAUCUECABSUBBSEABAJKLM
      NSCDSDOPBCDBDOPQR $.
      $( [28-Jul-1995] $)
  $}

  $( Uniqueness implies "at most one" through implication. $)
  euimmo $p |- ( A. x ( ph -> ps ) -> ( E! x ps -> E* x ph ) ) $=
    ( wi wal wmo weu immo eumo syl5 ) ABDCEBCFACFBCGABCHBCIJ $.
    $( [22-Apr-1995] $)

  $( Add existential uniqueness quantifiers to an implication.  Note the
     reversed implication in the antecedent.  (The proof was shortened by
     Andrew Salmon, 14-Jun-2011.) $)
  euim $p |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E! x ps -> E! x ph ) ) $=
    ( wex wi wal wa weu wmo ax-1 euimmo anim12ii eu5 syl6ibr ) ACDZABECFZGBCHZO
    ACIZGACHOQOPROQJABCKLACMN $.
    $( [14-Jun-2011] $) $( [19-Oct-2005] $)

  $( "At most one" is still the case when a conjunct is added. $)
  moan $p |- ( E* x ph -> E* x ( ps /\ ph ) ) $=
    ( wa simpr immoi ) BADACBAEF $.
    $( [22-Apr-1995] $)

  ${
    moani.1 $e |- E* x ph $.
    $( "At most one" is still true when a conjunct is added. $)
    moani $p |- E* x ( ps /\ ph ) $=
      ( wmo wa moan ax-mp ) ACEBAFCEDABCGH $.
      $( [9-Mar-1995] $)
  $}

  $( "At most one" is still the case when a disjunct is removed. $)
  moor $p |- ( E* x ( ph \/ ps ) -> E* x ph ) $=
    ( wo orc immoi ) AABDCABEF $.
    $( [5-Apr-2004] $)

  $( "At most one" imports disjunction to conjunction.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  mooran1 $p |- ( ( E* x ph \/ E* x ps ) -> E* x ( ph /\ ps ) ) $=
    ( wmo wa simpl immoi moan jaoi ) ACDABEZCDBCDJACABFGBACHI $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  $( "At most one" exports disjunction to conjunction.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  mooran2 $p |- ( E* x ( ph \/ ps ) -> ( E* x ph /\ E* x ps ) ) $=
    ( wo wmo moor olc immoi jca ) ABDZCEACEBCEABCFBJCBAGHI $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    moanim.1 $e |- ( ph -> A. x ph ) $.
    $( Introduction of a conjunct into "at most one" quantifier. $)
    moanim $p |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) $=
      ( vy wa weq wi wal wex wmo impexp albii 19.21 bitri exbii ax-17 mo2 
      imbi2i 19.37v bitr4i 3bitr4i ) ABFZCEGZHZCIZEJABUDHZCIZHZEJZUCCKABCKZHZUF
      UIEUFAUGHZCIUIUEUMCABUDLMAUGCDNOPUCCEUCEQRULAUHEJZHUJUKUNABCEBEQRSAUHETUA
      UB $.
      $( [3-Dec-2001] $)

    $( Introduction of a conjunct into uniqueness quantifier.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    euan $p |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) $=
      ( wa weu wex wmo simpl 19.23ai adantr simpr eximi hbe1 a1d ancrd impbid2 
      mobid biimpa jca eu5 anbi2i 3imtr4i ibar eubid impbii ) ABEZCFZABCFZEZUGC
      GZUGCHZEZABCGZBCHZEZEUHUJUMAUPUKAULUGACDABIJZKUMUNUOUKUNULUGBCABLZMKUKULU
      OUKUGBCUGCNUKUGBURUKBAUKABUQOPQRSTTUGCUAUIUPABCUAUBUCAUIUHABUGCDABUDUESUF
      $.
      $( [9-Jul-2011] $) $( [19-Feb-2005] $)
  $}

  ${
    $d x y ph $.  $d y ps $.
    $( Introduction of a conjunct into "at most one" quantifier. $)
    moanimv $p |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) $=
      ( ax-17 moanim ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  $( Nested "at most one" and uniqueness quantifiers. $)
  moaneu $p |- E* x ( ph /\ E! x ph ) $=
    ( weu wa wmo wi eumo hbeu1 moanim mpbir ancom mobii ) AABCZDZBEMADZBEZPMABE
    FABGMABABHIJNOBAMKLJ $.
    $( [25-Jan-2006] $)

  $( Nested "at most one" quantifiers. $)
  moanmo $p |- E* x ( ph /\ E* x ph ) $=
    ( wmo wa wi id hbmo1 moanim mpbir ancom mobii ) AABCZDZBCLADZBCZOLLELFLABAB
    GHIMNBALJKI $.
    $( [25-Jan-2006] $)

  ${
    $d x ph $.
    $( Introduction of a conjunct into uniqueness quantifier. $)
    euanv $p |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) $=
      ( ax-17 euan ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    $( "At most one" picks a variable value, eliminating an existential
       quantifier. $)
    mopick $p |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) $=
      ( vy wa wex wmo wi wsb ax-17 hbs1 hban weq sbequ12 anbi12d cbvex sbequ2 
      imim2i exp3a com4t imp wal mo3 ax-4 a4s sylbi syl5 19.23aiv impcom ) ABEZ
      CFZACGZABHZUKACDIZBCDIZEZDFULUMHZUJUPCDUJDJUNUOCACDKBCDKLCDMZAUNBUOACDNBC
      DNOPUPUQDUPAUNEZURHZUMULUNUOUTUMHUTAUNUOBUTAUNUOBHZURVAUSBCDQRSTUAULUTDUB
      ZCUBUTACDADJUCVBUTCUTDUDUEUFUGUHUFUI $.
      $( [27-Jan-1997] $)
  $}

  $( Existential uniqueness "picks" a variable value for which another wff is
     true.  If there is only one thing ` x ` such that ` ph ` is true, and
     there is also an ` x ` (actually the same one) such that ` ph ` and ` ps `
     are both true, then ` ph ` implies ` ps ` regardless of ` x ` .  This
     theorem can be useful for eliminating existential quantifiers in a
     hypothesis.  Compare Theorem *14.26 in [WhiteheadRussell] p. 192. $)
  eupick $p |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) $=
    ( wmo wa wex wi weu mopick eumo sylan ) ACDABECFABGACHABCIACJK $.
    $( [10-Jul-1994] $)

  $( Version of ~ eupick with closed formulas. $)
  eupicka $p |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> A. x ( ph -> ps ) ) $=
    ( weu wa wex wi hbeu1 hbe1 hban eupick 19.21ai ) ACDZABEZCFZEABGCMOCACHNCIJ
    ABCKL $.
    $( [6-Sep-2008] $)

  $( Existential uniqueness "pick" showing wff equivalence. $)
  eupickb $p |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) ->
               ( ph <-> ps ) ) $=
    ( weu wa wex w3a wi eupick 3adant2 3simpc pm3.22 eximi anim2i 3syl impbid 
    ) ACDZBCDZABEZCFZGZABQTABHRABCIJUARTERBAEZCFZEBAHQRTKTUCRSUBCABLMNBACIOP $.
    $( [25-Nov-1994] $)

  $( "At most one" can show the existence of a common value.  In this case we
     can infer existence of conjunction from a conjunction of existence, and it
     is one way to achieve the converse of ~ 19.40 .  (The proof was shortened
     by Andrew Salmon, 9-Jul-2011.) $)
  mopick2 $p |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) ->
                E. x ( ph /\ ps /\ ch ) ) $=
    ( wmo wa wex w3a hbmo1 hbe1 hban mopick ancld anim1d df-3an syl6ibr eximd 
    3impia ) ADEZABFZDGZACFZDGABCHZDGSUAFZUBUCDSUADADITDJKUDUBTCFUCUDATCUDABABD
    LMNABCOPQR $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  $( Introduce or eliminate a disjunct in a uniqueness quantifier.  (The proof
     was shortened by Andrew Salmon, 9-Jul-2011.) $)
  euor2 $p |- ( -. E. x ph -> ( E! x ( ph \/ ps ) <-> E! x ps ) ) $=
    ( wex wn wo hbe1 hbn wb 19.8a con3i orel1 olc impbid1 syl eubid ) ACDZEZABF
    ZBCQCACGHRAEZSBIAQACJKTSBABLBAMNOP $.
    $( [9-Jul-2011] $) $( [21-Oct-2005] $)

  ${
    moexex.1 $e |- ( ph -> A. y ph ) $.
    $( "At most one" double quantification. $)
    moexex $p |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) $=
      ( wmo wal wa wex wi hbmo1 hba1 hbe1 hbmo hbim mopick ex com3r 19.21ad 
      immo a4sd syl6 19.23ai wn hbex exsimpl con3i exmo ori syl a1d pm2.61i 
      imp ) ACFZBDFZCGZABHZCIZDFZACIZUNUPUSJZJZAVBCUNVACACKUPUSCUOCLURCDUQCMNOO
      AUNURBJZDGZVAAUNVCDEADCENUNURABUNURABJABCPQRSVDUOUSCURBDTUAUBUCUTUDZVAUNV
      EUSUPVEURDIZUDUSVFUTURUTDADCEUEABCUFUCUGVFUSURDUHUIUJUKUKULUM $.
      $( [3-Dec-2001] $)
  $}

  ${
    $d y ph $.
    $( "At most one" double quantification. $)
    moexexv $p |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) $=
      ( ax-17 moexex ) ABCDADEF $.
      $( [26-Jan-1997] $)
  $}

  $( Double quantification with "at most one." $)
  2moex $p |- ( E* x E. y ph -> A. y E* x ph ) $=
    ( wex wmo hbe1 hbmo 19.8a immoi 19.21ai ) ACDZBEABECKCBACFGAKBACHIJ $.
    $( [3-Dec-2001] $)

  $( Double quantification with existential uniqueness.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  2euex $p |- ( E! x E. y ph -> E. y E! x ph ) $=
    ( wex weu wmo wa eu5 hbe1 hbmo wi 19.8a immoi df-mo sylib eximd excom 
    syl5ib impcom sylbi ) ACDZBEUABDZUABFZGABEZCDZUABHUCUBUEUCABDZCDUEUBUCUFUDC
    UACBACIJUCABFUFUDKAUABACLMABNOPABCQRST $.
    $( [9-Jul-2011] $) $( [3-Dec-2001] $)

  $( Double quantification with existential uniqueness and "at most one." $)
  2eumo $p |- ( E! x E* y ph -> E* x E! y ph ) $=
    ( weu wmo wi euimmo eumo mpg ) ACDZACEZFKBDJBEFBJKBGACHI $.
    $( [3-Dec-2001] $)

  $( Double existential uniqueness. $)
  2eu2ex $p |- ( E! x E! y ph -> E. x E. y ph ) $=
    ( weu wex euex eximi syl ) ACDZBDIBEACEZBEIBFIJBACFGH $.
    $( [3-Dec-2001] $)

  $( A condition allowing swap of "at most one" and existential quantifiers. $)
  2moswap $p |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) $=
    ( wmo wal wex wa hbe1 moexex expcom 19.8a pm4.71ri exbii mobii syl6ibr ) AC
    DBEZACFZBDZQAGZBFZCDZABFZCDRPUAQABCACHIJUBTCASBAQACKLMNO $.
    $( [10-Apr-2004] $)

  $( A condition allowing swap of uniqueness and existential quantifiers. $)
  2euswap $p |- ( A. x E* y ph -> ( E! x E. y ph -> E! y E. x ph ) ) $=
    ( wmo wal wex wa weu wi excomim a1i 2moswap anim12d eu5 3imtr4g ) ACDBEZACF
    ZBFZQBDZGABFZCFZTCDZGQBHTCHPRUASUBRUAIPABCJKABCLMQBNTCNO $.
    $( [10-Apr-2004] $)

  $( Double existential uniqueness implies double uniqueness quantification. $)
  2exeu $p |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) $=
    ( wex wmo wa weu hbe1 hbmo 19.41 19.8a immoi anim2i eximi sylbir excom 
    sylanb simpl adantl anim12i ancoms eu5 anbi12i exbii mobii bitri 3imtr4i ) 
    ACDZBDZUHBEZFZABDZCDZULCEZFZFUHACEZFZBDZUQBEZFZUHBGZULCGZFACGZBGZUOUKUTUOUR
    UKUSUIUNURUMUIUNFUHUNFZBDURUHUNBULBCABHIJVEUQBUNUPUHAULCABKLMNOACBPQUJUSUIU
    QUHBUHUPRLSTUAVAUKVBUOUHBUBULCUBUCVDVCBDZVCBEZFUTVCBUBVFURVGUSVCUQBACUBZUDV
    CUQBVHUEUCUFUG $.
    $( [3-Dec-2001] $)

  ${
    $d x y z w v u $.  $d z w v u ph $.
    $( Two equivalent expressions for double "at most one." $)
    2mo $p |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <->
              A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) ->
                   ( x = z /\ y = w ) ) ) $=
      ( vv vu weq wa wi wal wex wsb equequ2 bi2anan9 imbi2d 2albidv cbvex2v 
      ax-17 hbs1 hbim hbsb sbequ12 sylan9bbr equequ1 imbi12d cbval2 biimpi 
      ancli alcom aaan albii bitri hbal sylibr prth equtr2 anim12i an4s syl6 
      2alimi syl 19.23aivv sylbir alrot4 alim al2imi sylbi exim alimi 3syl 
      19.21ai 2eximi syl5com impexp bi2.04 2albii syl5ib wn alnex hbn notbid 
      biimpri pm2.21 19.8a 19.23bi a1d pm2.61i impbii ) ABDHZCEHZIZJZCKZBKZELZD
      LZAACEMZBDMZIZWLJZEKDKZCKBKZWQABFHZCGHZIZJZCKZBKZGLFLXCXIWOFGDEFDHZGEHZIZ
      XGWMBCXLXFWLAXJXDWJXKXEWKFDBNGECNOPQRXIXCFGXIXGWSDFHZEGHZIZJZIZEKZDKZCKZB
      KZXCXIXIXPEKZDKZIZYAXIYCXIYCXGXPBCDEXGDSXGESZWSXOBWRBDTZXOBSUAZWSXOCWRBDC
      ACETUBZXOCSUAZWLAWSXFXOWKAWRWJWSACEUCWRBDUCUDZWJXDXMWKXEXNBDFUECEGUEOUFUG
      UHUIYAXHYBIZDKZBKYDXTYLBXTXRCKZDKYLXRCDUJYMYKDXGXPCEYEYIUKULUMULXHYBBDXHD
      SXPBEYGUNUKUMUOXSXBBCXQXADEXQWTXFXOIWLAXFWSXOUPXDXMXEXNWLXDXMIWJXEXNIWKBD
      FUQCEGUQURUSUTVAVAVBVCVDWSELZDLZXCWQJYOWSWMJZEKDKZCKBKZWQXCYRWSCKZBKZELZD
      LZWQYOYRYTWOJZEKZDKZUUAWPJZDKUUBWQJYRYPCKZBKZEKDKUUEYPBCDEVEUUHUUCDEUUGYS
      WNBWSWMCVFVGVAVHUUDUUFDYTWOEVIVJUUAWPDVIVKWSYTDEWSYSBYFYHVLVMVNXBYQBCXAYP
      DEXAAWSWLJJYPAWSWLVOAWSWLVPUMVQVQVRYOVSZWQXCUUIWSVSZEKZDKZWQUULYNVSZDKUUI
      UUKUUMDWSEVTULYNDVTUMUULAVSZCKBKZWOWQUUOUULUUNUUJBCDEUUNDSUUNESWSBYFWAWSC
      YHWAWLAWSYJWBUGWCUUNWMBCAWLWDVAWOWQEWPDWEWFVKVDWGWHWI $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d z w ph $.  $d x y ps $.  $d x y z w $.
    2mos.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Double "exists at most one", using implicit substitition. $)
    2mos $p |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <->
             A. x A. y A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) $=
      ( weq wa wi wal wex wsb 2mo ax-17 sb19.21 wb expcom pm5.74d sbie bitr3i 
      pm5.74ri anbi2i imbi1i 2albii bitri ) ACEHZDFHZIZJDKCKFLELAADFMZCEMZIZUIJ
      ZFKEKZDKCKABIZUIJZFKEKZDKCKACDEFNUNUQCDUMUPEFULUOUIUKBAUJBCEBCOUGUJBUGUJJ
      UGAJZDFMUGBJZUGADFUGDOPURUSDFUSDOUHUGABUGUHABQGRSTUAUBTUCUDUEUEUF $.
      $( [10-Feb-2005] $)
  $}

  $( Double existential uniqueness.  This theorem shows a condition under which
     a "naive" definition matches the correct one. $)
  2eu1 $p |- ( A. x E* y ph ->
        ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) $=
    ( wmo wal weu wex wa wi eu5 exbii mobii anbi12i bitri simprbi ax-4 anim2i 
    ancoms immoi hba1 moanim sylib ancrd 2moswap com12 imdistani syl6 syl 
    2eu2ex excom jca jctild an4 syl6ibr 2exeu impbid1 ) ACDZBEZACFZBFZACGZBFZAB
    GZCFZHZUTURVEUTURVABGZVCCGZHZVABDZVCCDZHZHZVEUTURVKVHUTVAUQHZBDZURVKIUTVMBG
    ZVNUTUSBGZUSBDZHVOVNHUSBJVPVOVQVNUSVMBACJZKUSVMBVRLMNOVNURVIURHVKVNURVIVNUR
    VAHZBDURVIIVSVMBVAURVMURUQVAUQBPQRSURVABUQBTUAUBUCVIURVJURVIVJABCUDUEUFUGUH
    UTVFVGABCUIZUTVFVGVTABCUJUBUKULVEVFVIHZVGVJHZHVLVBWAVDWBVABJVCCJMVFVIVGVJUM
    NUNUEABCUOUP $.
    $( [3-Dec-2001] $)

  $( Double existential uniqueness. $)
  2eu2 $p |- ( E! y E. x ph -> ( E! x E! y ph <-> E! x E. y ph ) ) $=
    ( wex weu wmo wal wi eumo 2moex wa 2eu1 simpl syl6bi 3syl 2exeu expcom 
    impbid ) ABDZCEZACEBEZACDBEZTSCFACFBGZUAUBHSCIACBJUCUAUBTKUBABCLUBTMNOUBTUA
    ABCPQR $.
    $( [3-Dec-2001] $)


  $( Double existential uniqueness. $)
  2eu3 $p |- ( A. x A. y ( E* x ph \/ E* y ph ) ->
 ( ( E! x E! y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) $=
    ( wmo wo wal weu wa wex wb hbmo1 19.31 albii hbal 19.32 bitri wi 2eu1 
    biimpd ancom syl6ib adantld adantrd jaoi 2exeu ancoms jca impbid1 sylbi ) 
    ABDZACDZECFZBFZUJCFZUKBFZEZACGBGZABGCGZHZACIBGZABICGZHZJUMUNUKEZBFUPULVCBUJ
    UKCACKLMUNUKBUJBCABKNOPUPUSVBUNUSVBQUOUNURVBUQUNURVAUTHZVBUNURVDACBRSVAUTTU
    AUBUOUQVBURUOUQVBABCRSUCUDVBUQURABCUEVAUTURACBUEUFUGUHUI $.
    $( [3-Dec-2001] $)

  ${
    $d x y z w $.  $d z w ph $.
    $( This theorem provides us with a definition of double existential
       uniqueness ("exactly one ` x ` and exactly one ` y ` ").  Naively one
       might think (incorrectly) that it could be defined by
       ` E! x E! y ph ` .  See ~ 2eu1 for a condition under which the naive
       definition holds and ~ 2exeu for a one-way implication.  See ~ 2eu5 and
       ~ 2eu8 for alternate definitions. $)
    2eu4 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
      ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( wex weu wa weq wi wal ax-17 eu3 anbi12i an4 excom anbi2i anidm bitri 
      hba1 19.3 19.26 jcab albii 3bitr4ri alcom bitr4i 19.23v 2albii hbe1 hbim 
      aaan 3bitri 2exbii eeanv bitr2i ) ACFZBGZABFZCGZHUQBFZUQBDIZJZBKZDFZHZUSC
      FZUSCEIZJZCKZEFZHZHVAVGHZVEVKHZHVAAVBVHHJZCKZBKZEFDFZHURVFUTVLUQBDUQDLMUS
      CEUSELMNVAVEVGVKOVMVAVNVRVMVAVAHVAVGVAVAACBPQVARSVRVDVJHZEFDFVNVQVSDEVQAV
      BJZCKZAVHJZBKZHZCKZBKZVCVIHZCKBKVSVQWAWBCKZBKZHZBKZWFWABKZWIBKZHWLWIHZWKV
      QWMWIWLWIBWHBTUAQWAWIBUBVQWAWHHZBKWNVPWOBVPVTWBHZCKWOVOWPCAVBVHUCUDVTWBCU
      BSUDWAWHBUBSUEWEWJBWEWACKZWCCKZHWJWAWCCUBWQWAWRWIWACVTCTUAWBCBUFNSUDUGWDW
      GBCWAVCWCVIAVBCUHAVHBUHNUIVCVIBCUQVBCACUJVBCLUKUSVHBABUJVHBLUKULUMUNVDVJD
      EUOUPNUM $.
      $( [3-Dec-2001] $)

    $( An alternate definition of double existential uniqueness (see ~ 2eu4 ).
       A mistake sometimes made in the literature is to use ` E! x E! y ` to
       mean "exactly one ` x ` and exactly one ` y ` ."  (For example, see
       Proposition 7.53 of [TakeutiZaring] p. 53.)  It turns out that this is
       actually a weaker assertion, as can be seen by expanding out the formal
       definitions.  This theorem shows that the erroneous definition can be
       repaired by conjoining ` A. x E* y ph ` as an additional condition.  The
       correct definition apparently has never been published.  ( ` E* ` means
       "exists at most one.") $)
    2eu5 $p |- ( ( E! x E! y ph /\ A. x E* y ph ) <->
      ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( weu wmo wal wa wex weq wi 2eu1 pm5.32ri eumo adantl 2moex syl pm4.71i 
      2eu4 3bitr2i ) ACFBFZACGBHZIACJZBFZABJZCFZIZUCIUHUDBJABDKCEKILCHBHEJDJIUC
      UBUHABCMNUHUCUHUFCGZUCUGUIUEUFCOPACBQRSABCDETUA $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y z w v u $.  $d z w v u ph $.
    $( Two equivalent expressions for double existential uniqueness. $)
    2eu6 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
               E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) $=
      ( vu vv wex weu wa weq wi wal wb 2eu4 wsb 19.29r2 ax-17 hbs1 hbsb 
      sbequ12 sylan9bbr cbvex2 equequ2 bi2anan9 imbi2d 2albidv cbvex2v hbim 
      equequ1 imbi12d cbval2 2exbii 2mo 3bitri anbi12i 2albiim ancom bitri 
      equcom imbi2i impexp 2albii hban sbco2 sbcom2 sbbii 3bitr3ri syl6bb 
      anbi2d 19.21-2 3bitr3i anbi2i abai 2sb6 anbi1i 3bitr2i bitr4i 3imtr4i 
      bi2 2alimi 2eximi 2exsb sylibr bi1 jca impbii ) ACHZBIABHCIJWHBHZABDKZCEK
      ZJZLZCMBMZEHDHZJZAWLNZCMBMZEHDHZABCDEOWPWSACEPZBDPZEHDHZXAXAEFPZDGPZJZDGK
      ZEFKZJZLZFMGMZEMDMZJXAXJJZEHDHZWPWSXAXJDEQWIXBWOXKAXABCDEADRAERZWTBDSZWTB
      DCACESTZWKAWTWJXAACEUAWTBDUAUBZUCWOABGKZCFKZJZLZCMBMZFHGHXAXHLZEMDMZFHGHX
      KWNYBDEGFXHWMYABCXHWLXTAXFWJXRXGWKXSDGBUDEFCUDUEUFUGUHYBYDGFYAYCBCDEYADRY
      AERXAXHBXOXHBRZUIXAXHCXPXHCRZUIWLAXAXTXHXQWJXRXFWKXSXGBDGUJCEFUJUEUKULUMX
      ADEGFUNUOUPWSWLALZCMBMZWNJZEHDHXMWRYIDEWRWNYHJYIAWLBCUQWNYHURUSUMXLYIDEXL
      XAXAWNLZJXAWNJYIXJYJXAXAAJZDBKZECKZJZLZCMBMXAWMLZCMBMXJYJYOYPBCYOYKWLLYPY
      NWLYKYLWJYMWKDBUTECUTUPVAXAAWLVBUSVCYOXIBCGFYOGRYOFRXEXHBXAXDBXOXCDGBXAEF
      BXOTTVDYEUIXEXHCXAXDCXPXCDGCXAEFCXPTTVDYFUIXTYKXEYNXHXTAXDXAXTAACFPZBGPZX
      DXSAYQXRYRACFUAYQBGUAUBWTEFPZBDPZDGPYSBGPXDYRYSBGDYSDRVEYTXCDGWTEFBDVFVGY
      SYQBGACFEXNVEVGVHVIVJXRYLXFXSYMXGBGDUDCFEUDUEUKULXAWMBCXOXPVKVLVMXAWNVNXA
      YHWNABCDEVOVPVQUMVRVSWSWIWOWSYHEHDHWIWRYHDEWQYGBCAWLVTWAWBABCDEWCWDWRWNDE
      WQWMBCAWLWEWAWBWFWGUS $.
      $( [2-Feb-2005] $)
  $}

  $( Two equivalent expressions for double existential uniqueness. $)
  2eu7 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
             E! x E! y ( E. x ph /\ E. y ph ) ) $=
    ( wex weu wa hbe1 hbeu euan ancom eubii 3bitri 3bitr4ri ) ABDZCEZACDZFZBEOP
    BEZFNPFZCEZBEROFOPBNBCABGHITQBTPNFZCEPOFQSUACNPJKPNCACGIPOJLKROJM $.
    $( [19-Feb-2005] $)

  $( Two equivalent expressions for double existential uniqueness.  Curiously,
     we can put ` E! ` on either of the internal conjuncts but not both.  We
     can also commute ` E! x E! y ` using ~ 2eu7 . $)
  2eu8 $p |- ( E! x E! y ( E. x ph /\ E. y ph ) <->
                E! x E! y ( E! x ph /\ E. y ph ) ) $=
    ( wex weu wa 2eu2 pm5.32i hbeu1 hbeu euan ancom eubii hbe1 3bitri 3bitr4ri 
    2eu7 3bitr3ri ) ACDZBEZABEZCEZFZTABDZCEZFUASFZCEZBEZUDSFCEBETUBUEACBGHUBSFZ
    BEUBTFUHUCUBSBUABCABIJKUGUIBUGSUAFZCESUBFUIUFUJCUASLMSUACACNKSUBLOMTUBLPABC
    QR $.
    $( [20-Feb-2005] $)

  ${
    $d x y z $.
    $( Equality has existential uniqueness.  Special case of ~ eueq1 proved
       using only predicate calculus.  (Contributed by Stefan Allan,
       4-Dec-2008.) $)
    euequ1 $p |- E! x x = y $=
      ( vz weq weu wex wa wi wal a9e equtr2 gen2 pm3.2i equequ1 eu4 mpbir ) ABD
      ZAEQAFZQCBDZGACDHZCIAIZGRUAABJTACACBKLMQSACACBNOP $.
      $( [4-Dec-2008] $)
  $}

  ${
    $d x y $.
    $( Two ways to express "only one thing exists."  The left-hand side
       requires only one variable to express this.  Both sides are false in set
       theory; see theorem ~ dtru . $)
    exists1 $p |- ( E! x x = x <-> A. x x = y ) $=
      ( weq weu wb wal wex df-eu equid tbt bicom bitri albii exbii hbae 19.9 
      3bitr2i ) AACZADRABCZEZAFZBGSAFZBGUBRABHUBUABSTASSRETRSAIJSRKLMNUBBABBOPQ
      $.
      $( [5-Apr-2004] $)

    $( A condition implying that at least two things exist.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    exists2 $p |- ( ( E. x ph /\ E. x -. ph ) -> -. E! x x = x ) $=
      ( vy wex wn cv wceq weu wal hbeu1 hba1 wi exists1 ax-16 sylbi 19.23ad 
      com12 alex syl6ib con2d imp ) ABDZAEBDZBFZUDGZBHZEUBUFUCUBUFABIZUCEUFUBUG
      UFAUGBUEBJABKUFUDCFGBIAUGLBCMABCNOPQABRSTUA $.
      $( [9-Jul-2011] $) $( [10-Apr-2004] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                    Zermelo-Fraenkel Set Theory
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - start with the Axiom of Extensionality
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$( Logic is a prerequisite. $)
$( $[ logic.mm $] $) $( Use this if logic is separated out of set.mm. $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce the Axiom of Extensionality
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $v t $.
  $( Let ` t ` be an individual variable. $)
  vt $f set t $.

$(
$)

  ${
    $d x y z $.
    $( Axiom of Extensionality.  An axiom of Zermelo-Fraenkel set theory.  It
       states that two sets are identical if they contain the same elements.
       Axiom Ext of [BellMachover] p. 461.

       Set theory can also be formulated with a _single_ primitive predicate
       ` e. ` on top of traditional predicate calculus _without_ equality.  In
       that case the Axiom of Extensionality becomes
       ` ( A. w ( w e. x <-> w e. y ) -> ( x e. z -> y e. z ) ) ` , and
       equality ` x = y ` is _defined_ as ` A. w ( w e. x <-> w e. y ) ` .  All
       of the usual axioms of equality then become theorems of set theory.
       See, for example, Axiom 1 of [TakeutiZaring] p. 8.

       To use the above "equality-free" version of Extensionality with
       Metamath's logical axioms, we would rewrite ~ ax-8 through ~ ax-16 with
       equality expanded according to the above definition.  Some of those
       axioms could be proved from set theory and would be redundant.  Not all
       of them are redundant, since our axioms of predicate calculus make
       essential use of equality for the proper substitution that is a
       primitive notion in traditional predicate calculus.  A study of such an
       axiomatization would be an interesting project for someone exploring the
       foundations of logic.

       _General remarks_:  Our set theory axioms are presented using defined
       connectives ( ` <-> ` , ` E. ` , etc.) for convenience.  However, it is
       implicitly understood that the actual axioms use only the primitive
       connectives ` -> ` , ` -. ` , ` A. ` , ` = ` , and ` e. ` .  It is
       straightforward to establish the equivalence between the actual axioms
       and the ones we display, and we will not do so.

       It is important to understand that strictly speaking, all of our set
       theory axioms are really schemes that represent an infinite number of
       actual axioms.  This is inherent in the design of Metamath
       ("metavariable math"), which manipulates only metavariables.  For
       example, the metavariable ` x ` in ~ ax-ext can represent any actual
       variable _v1_, _v2_, _v3_,... .  Distinct variable restrictions ($d)
       prevent us from substituting say _v1_ for both ` x ` and ` z ` .  This
       is in contrast to typical textbook presentations that present actual
       axioms (except for Replacement ~ ax-rep , which involves a wff
       metavariable).  In practice, though, the theorems and proofs are
       essentially the same.  The $d restrictions make each of the the infinite
       axioms generated by the ~ ax-ext scheme exactly logically equivalent to
       each other and in particular to the actual axiom of the textbook
       version. $)
    ax-ext $a |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $.

    $( The Axiom of Extensionality ( ~ ax-ext ) restated so that it postulates
       the existence of a set ` z ` given two arbitrary sets ` x ` and ` y ` .
       This way to express it follows the general idea of the other ZFC axioms,
       which is to postulate the existence of sets given other sets. $)
    axext2 $p |- E. z ( ( z e. x <-> z e. y ) -> x = y ) $=
      ( cv wcel wb wceq wi wex wal ax-ext 19.36v mpbir ) CDZADZENBDZEFZOPGZHCIQ
      CJRHABCKQRCLM $.
      $( [28-Sep-2003] $)
  $}

  ${
    $d z x w $.  $d z y w $.
    $( A generalization of the Axiom of Extensionality in which ` x ` and ` y `
       need not be distinct.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    axext3 $p |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $=
      ( vw cv wcel wb wal wceq wi elequ2 bibi1d albidv equequ1 imbi12d ax-ext 
      chvarv ) CEZDEZFZRBEZFZGZCHZSUAIZJRAEZFZUBGZCHZUFUAIZJDASUFIZUDUIUEUJUKUC
      UHCUKTUGUBDACKLMDABNODBCPQ $.
      $( [12-Aug-2011] $) $( [15-Sep-1993] $)

    $( A bidirectional version of Extensionality.  Although this theorem
       "looks" like it is just a definition of equality, it requires the Axiom
       of Extensionality for its proof under our axiomatization.  See the
       comments for ~ ax-ext and ~ df-cleq . $)
    axext4 $p |- ( x = y <-> A. z ( z e. x <-> z e. y ) ) $=
      ( cv wceq wcel wb wal elequ2 19.21aiv axext3 impbii ) ADZBDZEZCDZMFPNFGZC
      HOQCABCIJABCKL $.
      $( [14-Nov-2008] $)
  $}

  ${
    $d x y z $.  $d ph z $.
    bm1.1.1 $e |- ( ph -> A. x ph ) $.
    $( Any set defined by a property is the only set defined by that property.
       Theorem 1.1 of [BellMachover] p. 462. $)
    bm1.1 $p |- ( E. x A. y ( y e. x <-> ph ) ->
                  E! x A. y ( y e. x <-> ph ) ) $=
      ( vz cv wcel wb wal wex wsbc wa wceq wi weu 19.26 biantr alimi ax-ext 
      syl sylbir ax-17 hbbi hbal elequ2 bibi1d albidv sbie sylan2b gen2 jctr 
      eu2 sylibr ) CFZBFZGZAHZCIZBJZUSURURBEFZKZLUOUTMZNZEIBIZLURBOUSVDVCBEURUN
      UTGZAHZCIZVBVAURVGLUQVFLZCIZVBUQVFCPVIUPVEHZCIVBVHVJCUPAVEQRBECSTUAURVGBE
      VFBCVEABVEBUBDUCUDVBUQVFCVBUPVEABECUEUFUGUHUIUJUKURBEUREUBULUM $.
      $( [30-Jun-1994] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Class abstractions (a.k.a. class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constants use in class definition. $)
  $c { $. $( Left brace $)
  $c | $.  $( Vertical bar $)
  $c } $. $( Right brace $)
  $( --- Start of old code before overloading prevention patch. $)
  $(
  @c class @. @( Class variable type @)
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare variable symbols that will be used to represent classes.  Note
     that later on ` R ` , ` S ` , ` F ` and ` G ` denote relations and
     functions, but these letters serve as mnemonics only and in fact behave
     no differently from the variables ` A ` through ` D ` . $)
  $v A $.
  $v B $.
  $v C $.
  $v D $.
  $v P $.
  $v Q $.
  $v R $.
  $v S $.
  $v T $.
  $v U $.

  $( Introduce the class builder or class abstraction notation ("the class of
     sets ` x ` such that ` ph ` is true").  Our class variables ` A ` ,
     ` B ` , etc. range over class builders (implicitly in the case of defined
     class terms such as ~ df-nul ).  Note that a set variable can be expressed
     as a class builder per theorem ~ cvjust , justifying the assignment of set
     variables to class variables via the use of ~ cv . $)
  cab $a class { x | ph } $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( A set variable is a class expression.  The syntax " ` class x ` " can be
     viewed as an abbreviation for " ` class { y | y e. x } ` " (a special case
     of ~ cab ), where ` y ` is distinct from ` x ` .  See the discussion under
     the definition of class in [Jech] p. 4.  Note that ` { y | y e. x } = x `
     by ~ cvjust . @)
  cv @a class x @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Let ` A ` be a class variable. $)
  cA $f class A $.
  $( Let ` B ` be a class variable. $)
  cB $f class B $.
  $( Let ` C ` be a class variable. $)
  cC $f class C $.
  $( Let ` D ` be a class variable. $)
  cD $f class D $.
  $( Let ` P ` be a class variable. $)
  cP $f class P $.
  $( Let ` Q ` be a class variable. $)
  cQ $f class Q $.
  $( Let ` R ` be a class variable. $)
  cR $f class R $.
  $( Let ` S ` be a class variable. $)
  cS $f class S $.
  $( Let ` T ` be a class variable. $)
  cT $f class T $.
  $( Let ` U ` be a class variable. $)
  cU $f class U $.

  $v e $.
  $v f $.
  $v g $.
  $v h $.
  $v i $.
  $v j $.
  $v k $.
  $v m $.
  $v n $.
  $v o $.
  $v E $.
  $v F $.
  $v G $.
  $v H $.
  $v I $.
  $v J $.
  $v K $.
  $v L $.
  $v M $.
  $v N $.
  $v V $.
  $v W $.
  $v X $.
  $v Y $.
  $v Z $.
  $v O $.
  $v s $.
  $v r $.
  $v q $.
  $v p $.
  $v a $.
  $v b $.
  $v c $.
  $v d $.
  $v l $.


  $( Let ` e ` be an individual variable. $)
  ve $f set e $.
  $( Let ` f ` be an individual variable. $)
  vf $f set f $.
  $( Let ` g ` be an individual variable. $)
  vg $f set g $.
  $( Let ` h ` be an individual variable. $)
  vh $f set h $.
  $( Let ` i ` be an individual variable. $)
  vi $f set i $.
  $( Let ` j ` be an individual variable. $)
  vj $f set j $.
  $( Let ` k ` be an individual variable. $)
  vk $f set k $.
  $( Let ` m ` be an individual variable. $)
  vm $f set m $.
  $( Let ` n ` be an individual variable. $)
  vn $f set n $.
  $( Let ` o ` be an individual variable. $)
  vo $f set o $.
  $( Let ` E ` be a class variable. $)
  cE $f class E $.
  $( Let ` F ` be a class variable. $)
  cF $f class F $.
  $( Let ` G ` be a class variable. $)
  cG $f class G $.
  $( Let ` H ` be a class variable. $)
  cH $f class H $.
  $( Let ` I ` be a class variable. $)
  cI $f class I $.
  $( Let ` J ` be a class variable. $)
  cJ $f class J $.
  $( Let ` K ` be a class variable. $)
  cK $f class K $.
  $( Let ` L ` be a class variable. $)
  cL $f class L $.
  $( Let ` M ` be a class variable. $)
  cM $f class M $.
  $( Let ` N ` be a class variable. $)
  cN $f class N $.
  $( Let ` O ` be a class variable. $)
  cO $f class O $.
  $( Let ` V ` be a class variable. $)
  cV $f class V $.
  $( Let ` W ` be a class variable. $)
  cW $f class W $.
  $( Let ` X ` be a class variable. $)
  cX $f class X $.
  $( Let ` Y ` be a class variable. $)
  cY $f class Y $.
  $( Let ` Z ` be a class variable. $)
  cZ $f class Z $.
  $( Let ` s ` be an individual variable. $)
  vs $f set s $.
  $( Let ` r ` be an individual variable. $)
  vr $f set r $.
  $( Let ` q ` be an individual variable. $)
  vq $f set q $.
  $( Let ` p ` be an individual variable. $)
  vp $f set p $.
  $( Let ` a ` be an individual variable. $)
  va $f set a $.
  $( Let ` b ` be an individual variable. $)
  vb $f set b $.
  $( Let ` c ` be an individual variable. $)
  vc $f set c $.
  $( Let ` d ` be an individual variable. $)
  vd $f set d $.
  $( Let ` l ` be an individual variable. $)
  vl $f set l $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include class equality. @)
  wceq @a wff A = B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include the membership connective between
     classes. @)
  wcel @a wff A e. B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define class abstraction notation (so-called by Quine), also called a
     "class builder" in the literature. ` x ` and ` y ` need not be distinct.
     Definition 2.1 of [Quine] p. 16.  Typically, ` ph ` will have ` y ` as a
     free variable, and " ` { y | ph } ` " is read "the class of all sets ` y `
     such that ` ph ( y ) ` is true."  We do not define ` { y | ph } ` in
     isolation but only as part of an expression that extends or "overloads"
     the ` e. ` relationship.

     This is our first use of the ` e. ` symbol to connect classes instead of
     sets.  The syntax definition ~ wcel , which extends or "overloads" the
     ~ wel definition connecting set variables, requires that both sides of
     ` e. ` be a class.  In ~ df-cleq and ~ df-clel , we introduce a new kind
     of variable (class variable) that can substituted with expressions such as
     ` { y | ph } ` .  In the present definition, the ` x ` on the left-hand
     side is a set variable.  Syntax definition ~ cv allows us to substitute a
     set variable ` x ` for a class variable: all sets are classes by ~ cvjust
     (but not necessarily vice-versa).  For a full description of how classes
     are introduced and how to recover the primitive language, see the
     discussion in Quine (and under ~ abeq2 for a quick overview).

     Because class variables can be substituted with compound expressions and
     set variables cannot, it is often useful to convert a theorem containing a
     free set variable to a more general version with a class variable.  This
     is done with theorems such as ~ vtoclg which is used, for example, to
     convert ~ elirrv to ~ elirr . $)
  df-clab $a |- ( x e. { y | ph } <-> [ x / y ] ph ) $.

  $( Simplification of class abstraction notation when the free and bound
     variables are identical. $)
  abid $p |- ( x e. { x | ph } <-> ph ) $=
    ( cv cab wcel wsbc df-clab sbid bitri ) BCZABDEABJFAABBGABHI $.
    $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Bound-variable hypothesis builder for a class abstraction. $)
    hbab1 $p |- ( y e. { x | ph } -> A. x y e. { x | ph } ) $=
      ( cv wsbc wal cab wcel hbs1 df-clab albii 3imtr4i ) ABCDZEZNBFMABGHZOBFAB
      CIACBJZONBPKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x z $.
    hbab.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for a class abstraction. $)
    hbab $p |- ( z e. { y | ph } -> A. x z e. { y | ph } ) $=
      ( cv wsbc wal cab wcel wceq wi ax-16 hbsb4 pm2.61i df-clab albii 3imtr4i 
      ) ACDFZGZTBHZSACIJZUBBHBFSKBHTUALTBDMACDBENOADCPZUBTBUCQR $.
      $( [1-Mar-1995] $)
  $}

  ${
    $d x z $.
    hbabd.1 $e |- ( ph -> A. x A. y ph ) $.
    hbabd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbab . $)
    hbabd $p |- ( ph -> ( z e. { y | ps } -> A. x z e. { y | ps } ) ) $=
      ( cv wsbc wal cab wcel wceq wi wn ax-7 syl 2alimi hbsb4t 3syl ax-16 
      pm2.61d2 df-clab albii 3imtr4g ) ABDEHZIZUGCJZUFBDKLZUICJACHUFMCJZUGUHNZA
      ACJDJZBBCJNZCJDJUJOUKNAADJCJULFACDPQAUMDCGRBDECSTUGCEUAUBBEDUCZUIUGCUNUDU
      E $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    df-cleq.1 $e |- ( A. x ( x e. y <-> x e. z ) -> y = z ) $.
    $( Define the equality connective between classes.  Definition 2.7 of
       [Quine] p. 18.  Also Definition 4.5 of [TakeutiZaring] p. 13; Chapter 4
       provides its justification and methods for eliminating it.  Note that
       its elimination will not necessarily result in a single wff in the
       original language but possibly a "scheme" of wffs.

       This is an example of a somewhat "risky" definition, meaning that it has
       a more complex than usual soundness justification (outside of Metamath),
       because it "overloads" or reuses the existing equality symbol rather
       than introducing a new symbol.  This allows us to make statements that
       may not hold for the original symbol.  For example, it permits us to
       deduce ` y = z <-> A. x ( x e. y <-> x e. z ) ` , which is not a theorem
       of logic but rather presupposes the Axiom of Extensionality (see theorem
       ~ axext4 ).  We therefore include this axiom as a hypothesis, so that
       the use of Extensionality is properly indicated.

       We could avoid this complication by introducing a new symbol, say =_2,
       in place of ` = ` .  This would also have the advantage of making
       elimination of the definition straightforward, so that we could
       eliminate Extensionality as a hypothesis.  We would then also have the
       advantage of being able to identify in various proofs exactly where
       Extensionality truly comes into play rather than just being an artifact
       of a definition..  One of our theorems would then be ` x ` =_2
       ` y <-> x = y ` by invoking Extensionality.

       However, to conform to literature usage, we retain this overloaded
       definition.  This also makes some proofs shorter and probably easier to
       read, without the constant switching between two kinds of equality.

       See also comments under ~ df-clab , ~ df-clel , and ~ abeq2 . $)
    df-cleq $a |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    $( The same as ~ df-cleq with the hypothesis removed using the Axiom of
       Extensionality ~ ax-ext . $)
    dfcleq $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( vy vz ax-ext df-cleq ) ADEBCDEAFG $.
      $( [15-Sep-1993] $)
  $}

  ${
    $d x y z $.
    $( Every set is a class.  Proposition 4.9 of [TakeutiZaring] p. 13.  This
       theorem shows that a set variable can be expressed as a class
       abstraction.  This provides a motivation for the class syntax
       construction ~ cv , which allows us to substitute a set variable for a
       class variable.  See also ~ cab and ~ df-clab .  Note that this is not a
       rigorous justification, because ~ cv is used as part of the proof of
       this theorem, but a careful argument can be made outside of the
       formalism of Metamath, for example as is done in Chapter 4 of Takeuti
       and Zaring.  See also the discussion under the definition of class in
       [Jech] p. 4 showing that "Every set can be considered to be a class." $)
    cvjust $p |- x = { y | y e. x } $=
      ( vz cv wcel cab wceq wb dfcleq wsbc df-clab elsb3 bitr2i mpgbir ) ADZBDO
      EZBFZGCDZOEZRQEZHCCOQITPBRJSPCBKCBALMN $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the membership connective between classes.  Theorem 6.3 of
       [Quine] p. 41, or Proposition 4.6 of [TakeutiZaring] p. 13, which we
       adopt as a definition.  See these references for its metalogical
       justification.  Note that like ~ df-cleq it extends or "overloads" the
       use of the existing membership symbol, but unlike ~ df-cleq it does not
       strengthen the set of valid wffs of logic when the class variables are
       replaced with set variables (see ~ cleljust ), so we don't include any
       set theory axiom as a hypothesis.  See also comments about the syntax
       under ~ df-clab . $)
    df-clel $a |- ( A e. B <-> E. x ( x = A /\ x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.
    eqriv.1 $e |- ( x e. A <-> x e. B ) $.
    $( Infer equality of classes from equivalence of membership. $)
    eqriv $p |- A = B $=
      ( wceq cv wcel wb dfcleq mpgbir ) BCEAFZBGKCGHAABCIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdv.1 $e |- ( ph -> ( x e. A <-> x e. B ) ) $.
    $( Deduce equality of classes from equivalence of membership. $)
    eqrdv $p |- ( ph -> A = B ) $=
      ( cv wcel wb wal wceq 19.21aiv dfcleq sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM
      $.
      $( [17-Mar-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdav.1 $e |- ( ( ph /\ x e. A ) -> x e. C ) $.
    eqrdav.2 $e |- ( ( ph /\ x e. B ) -> x e. C ) $.
    eqrdav.3 $e |- ( ( ph /\ x e. C ) -> ( x e. A <-> x e. B ) ) $.
    $( MAY BE REVISED - delete this if it is unused / not useful $)
    $( Deduce equality of classes from an equivalence of membership that
       depends on the membership variable. $)
    eqrdav $p |- ( ph -> A = B ) $=
      ( cv wcel wa wi biimpd ex com23 imp mpd exbiri impbida eqrdv ) ABCDABIZCJ
      ZUADJZAUBKUAEJZUCFAUBUDUCLAUDUBUCAUDUBUCLAUDKUBUCHMNOPQAUCKUDUBGAUCUDUBLA
      UDUCUBAUDUBUCHROPQST $.
      $( [7-Nov-2008] $)
  $}

  ${
    $d x A $.
    $( Law of identity (reflexivity of class equality).  Theorem 6.4 of [Quine]
       p. 41.

       This law is thought to have originated with Aristotle (_Metaphysics_,
       Book VII, Part 17).  (Thanks to Stefan Allan for this information.) $)
    eqid $p |- A = A $=
      ( vx cv wcel biid eqriv ) BAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  $( Class identity law with antecedent. $)
  eqidd $p |- ( ph -> A = A ) $=
    ( wceq eqid a1i ) BBCABDE $.
    $( [21-Aug-2008] $)

  ${
    $d x A $.  $d x B $.
    $( Commutative law for class equality.  Theorem 6.5 of [Quine] p. 41. $)
    eqcom $p |- ( A = B <-> B = A ) $=
      ( vx cv wcel wb wal wceq bicom albii dfcleq 3bitr4i ) CDZAEZMBEZFZCGONFZC
      GABHBAHPQCNOIJCABKCBAKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcoms.1 $e |- ( A = B -> ph ) $.
    $( Inference applying commutative law for class equality to an
       antecedent. $)
    eqcoms $p |- ( B = A -> ph ) $=
      ( wceq eqcom sylbi ) CBEBCEACBFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcomi.1 $e |- A = B $.
    $( Inference from commutative law for class equality. $)
    eqcomi $p |- B = A $=
      ( wceq eqcom mpbi ) ABDBADCABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcomd.1 $e |- ( ph -> A = B ) $.
    $( Deduction from commutative law for class equality. $)
    eqcomd $p |- ( ph -> B = A ) $=
      ( wceq eqcom sylib ) ABCECBEDBCFG $.
      $( [15-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of equalities. $)
    eqeq1 $p |- ( A = B -> ( A = C <-> B = C ) ) $=
      ( vx wceq cv wcel wb wal dfcleq biimpi 19.21bi bibi1d albidv 3bitr4g ) AB
      EZDFZAGZQCGZHZDIQBGZSHZDIACEBCEPTUBDPRUASPRUAHZDPUCDIDABJKLMNDACJDBCJO $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities. $)
    eqeq1i $p |- ( A = C <-> B = C ) $=
      ( wceq wb eqeq1 ax-mp ) ABEACEBCEFDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities. $)
    eqeq1d $p |- ( ph -> ( A = C <-> B = C ) ) $=
      ( wceq wb eqeq1 syl ) ABCFBDFCDFGEBCDHI $.
      $( [27-Dec-1993] $)
  $}

  $( Equality implies equivalence of equalities. $)
  eqeq2 $p |- ( A = B -> ( C = A <-> C = B ) ) $=
    ( wceq eqeq1 eqcom 3bitr4g ) ABDACDBCDCADCBDABCECAFCBFG $.
    $( [5-Aug-1993] $)

  ${
    eqeq2i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities. $)
    eqeq2i $p |- ( C = A <-> C = B ) $=
      ( wceq wb eqeq2 ax-mp ) ABECAECBEFDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq2d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities. $)
    eqeq2d $p |- ( ph -> ( C = A <-> C = B ) ) $=
      ( wceq wb eqeq2 syl ) ABCFDBFDCFGEBCDHI $.
      $( [27-Dec-1993] $)
  $}

  $( Equality relationship among 4 classes. $)
  eqeq12 $p |- ( ( A = B /\ C = D ) -> ( A = C <-> B = D ) ) $=
    ( wceq eqeq1 eqeq2 sylan9bb ) ABEACEBCECDEBDEABCFCDBGH $.
    $( [3-Aug-1994] $)

  ${
    eqeq12i.1 $e |- A = B $.
    eqeq12i.2 $e |- C = D $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeq12i $p |- ( A = C <-> B = D ) $=
      ( wceq wb eqeq12 mp2an ) ABGCDGACGBDGHEFABCDIJ $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    eqeq12d.1 $e |- ( ph -> A = B ) $.
    eqeq12d.2 $e |- ( ph -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeq12d $p |- ( ph -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl11anc ) ABCHDEHBDHCEHIFGBCDEJK $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    eqeqan12d.1 $e |- ( ph -> A = B ) $.
    eqeqan12d.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeqan12d $p |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2an ) CDIEFICEIDFIJABCDEFKGHL $.
      $( [25-May-2011] $) $( [9-Aug-1994] $)
  $}

  ${
    eqeqan12rd.1 $e |- ( ph -> A = B ) $.
    eqeqan12rd.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality. $)
    eqeqan12rd $p |- ( ( ps /\ ph ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeqan12d ancoms ) ABCEIDFIJABCDEFGHKL $.
      $( [9-Aug-1994] $)
  $}

  $( Transitive law for class equality.  Proposition 4.7(3) of [TakeutiZaring]
     p. 13. $)
  eqtr $p |- ( ( A = B /\ B = C ) -> A = C ) $=
    ( wceq eqeq1 biimpar ) ABDACDBCDABCEF $.
    $( [25-Jan-2004] $)

  $( A transitive law for class equality.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  eqtr2 $p |- ( ( A = B /\ A = C ) -> B = C ) $=
    ( wceq eqtr eqcom sylanb ) BADACDBCDABDBACEABFG $.
    $( [25-May-2011] $) $( [20-May-2005] $)

  $( A transitive law for class equality. $)
  eqtr3 $p |- ( ( A = C /\ B = C ) -> A = B ) $=
    ( wceq eqtr eqcom sylan2b ) ACDCBDABDBCDACBEBCFG $.
    $( [20-May-2005] $)

  ${
    eqtri.1 $e |- A = B $.
    eqtri.2 $e |- B = C $.
    $( An equality transitivity inference. $)
    eqtri $p |- A = C $=
      ( wceq eqeq2i mpbi ) ABFACFDBCAEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqtr2i.1 $e |- A = B $.
    eqtr2i.2 $e |- B = C $.
    $( An equality transitivity inference. $)
    eqtr2i $p |- C = A $=
      ( eqtri eqcomi ) ACABCDEFG $.
      $( [21-Feb-1995] $)
  $}

  ${
    eqtr3i.1 $e |- A = B $.
    eqtr3i.2 $e |- A = C $.
    $( An equality transitivity inference. $)
    eqtr3i $p |- B = C $=
      ( eqcomi eqtri ) BACABDFEG $.
      $( [6-May-1994] $)
  $}

  ${
    eqtr4i.1 $e |- A = B $.
    eqtr4i.2 $e |- C = B $.
    $( An equality transitivity inference. $)
    eqtr4i $p |- A = C $=
      ( eqcomi eqtri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    3eqtri.1 $e |- A = B $.
    3eqtri.2 $e |- B = C $.
    3eqtri.3 $e |- C = D $.
    $( An inference from three chained equalities. $)
    3eqtri $p |- A = D $=
      ( eqtri ) ABDEBCDFGHH $.
      $( [29-Aug-1993] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtrri $p |- D = A $=
      ( eqtri eqtr2i ) ACDABCEFHGI $.
      $( [25-May-2011] $) $( [3-Aug-2006] $)
  $}

  ${
    3eqtr2i.1 $e |- A = B $.
    3eqtr2i.2 $e |- C = B $.
    3eqtr2i.3 $e |- C = D $.
    $( An inference from three chained equalities. $)
    3eqtr2i $p |- A = D $=
      ( eqtr4i eqtri ) ACDABCEFHGI $.
      $( [3-Aug-2006] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr2ri $p |- D = A $=
      ( eqtr4i eqtr2i ) ACDABCEFHGI $.
      $( [3-Aug-2006] $)
  $}

  ${
    3eqtr3i.1 $e |- A = B $.
    3eqtr3i.2 $e |- A = C $.
    3eqtr3i.3 $e |- B = D $.
    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr3i $p |- C = D $=
      ( eqtr3i ) BCDABCEFHGH $.
      $( [25-May-2011] $) $( [6-May-1994] $)

    $( An inference from three chained equalities. $)
    3eqtr3ri $p |- D = C $=
      ( eqtr3i ) BDCGABCEFHH $.
      $( [15-Aug-2004] $)
  $}

  ${
    3eqtr4i.1 $e |- A = B $.
    3eqtr4i.2 $e |- C = A $.
    3eqtr4i.3 $e |- D = B $.
    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4i $p |- C = D $=
      ( eqtr4i ) CADFDBAGEHH $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4ri $p |- D = C $=
      ( eqtr4i ) DACDBAGEHFH $.
      $( [25-May-2011] $) $( [2-Sep-1995] $)
  $}

  ${
    eqtrd.1 $e |- ( ph -> A = B ) $.
    eqtrd.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    eqtrd $p |- ( ph -> A = C ) $=
      ( wceq eqeq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqtr2d.1 $e |- ( ph -> A = B ) $.
    eqtr2d.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    eqtr2d $p |- ( ph -> C = A ) $=
      ( eqtrd eqcomd ) ABDABCDEFGH $.
      $( [18-Oct-1999] $)
  $}

  ${
    eqtr3d.1 $e |- ( ph -> A = B ) $.
    eqtr3d.2 $e |- ( ph -> A = C ) $.
    $( An equality transitivity equality deduction. $)
    eqtr3d $p |- ( ph -> B = C ) $=
      ( eqcomd eqtrd ) ACBDABCEGFH $.
      $( [18-Jul-1995] $)
  $}

  ${
    eqtr4d.1 $e |- ( ph -> A = B ) $.
    eqtr4d.2 $e |- ( ph -> C = B ) $.
    $( An equality transitivity equality deduction. $)
    eqtr4d $p |- ( ph -> A = C ) $=
      ( eqcomd eqtrd ) ABCDEADCFGH $.
      $( [18-Jul-1995] $)
  $}

  ${
    3eqtrd.1 $e |- ( ph -> A = B ) $.
    3eqtrd.2 $e |- ( ph -> B = C ) $.
    3eqtrd.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities. $)
    3eqtrd $p |- ( ph -> A = D ) $=
      ( eqtrd ) ABCEFACDEGHII $.
      $( [29-Oct-1995] $)

    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtrrd $p |- ( ph -> D = A ) $=
      ( eqtrd eqtr2d ) ABDEABCDFGIHJ $.
      $( [25-May-2011] $) $( [4-Aug-2006] $)
  $}

  ${
    3eqtr2d.1 $e |- ( ph -> A = B ) $.
    3eqtr2d.2 $e |- ( ph -> C = B ) $.
    3eqtr2d.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities. $)
    3eqtr2d $p |- ( ph -> A = D ) $=
      ( eqtr4d eqtrd ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)

    $( A deduction from three chained equalities. $)
    3eqtr2rd $p |- ( ph -> D = A ) $=
      ( eqtr4d eqtr2d ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3eqtr3d.1 $e |- ( ph -> A = B ) $.
    3eqtr3d.2 $e |- ( ph -> A = C ) $.
    3eqtr3d.3 $e |- ( ph -> B = D ) $.
    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr3d $p |- ( ph -> C = D ) $=
      ( eqtr3d ) ACDEABCDFGIHI $.
      $( [25-May-2011] $) $( [4-Aug-1995] $)

    $( A deduction from three chained equalities. $)
    3eqtr3rd $p |- ( ph -> D = C ) $=
      ( eqtr3d ) ACEDHABCDFGII $.
      $( [14-Jan-2006] $)
  $}

  ${
    3eqtr4d.1 $e |- ( ph -> A = B ) $.
    3eqtr4d.2 $e |- ( ph -> C = A ) $.
    3eqtr4d.3 $e |- ( ph -> D = B ) $.
    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4d $p |- ( ph -> C = D ) $=
      ( eqtr4d ) ADBEGAECBHFII $.
      $( [25-May-2011] $) $( [4-Aug-1995] $)

    $( A deduction from three chained equalities. $)
    3eqtr4rd $p |- ( ph -> D = C ) $=
      ( eqtr4d ) AEBDAECBHFIGI $.
      $( [21-Sep-1995] $)
  $}

  ${
    syl5eq.1 $e |- ( ph -> A = B ) $.
    syl5eq.2 $e |- C = A $.
    $( An equality transitivity deduction. $)
    syl5eq $p |- ( ph -> C = B ) $=
      ( wceq a1i eqtrd ) ADBCDBGAFHEI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5req.1 $e |- ( ph -> A = B ) $.
    syl5req.2 $e |- C = A $.
    $( An equality transitivity deduction. $)
    syl5req $p |- ( ph -> B = C ) $=
      ( syl5eq eqcomd ) ADCABCDEFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl5eqr.1 $e |- ( ph -> A = B ) $.
    syl5eqr.2 $e |- A = C $.
    $( An equality transitivity deduction. $)
    syl5eqr $p |- ( ph -> C = B ) $=
      ( eqcomi syl5eq ) ABCDEBDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5reqr.1 $e |- ( ph -> A = B ) $.
    syl5reqr.2 $e |- A = C $.
    $( An equality transitivity deduction. $)
    syl5reqr $p |- ( ph -> B = C ) $=
      ( eqcomi syl5req ) ABCDEBDFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl6eq.1 $e |- ( ph -> A = B ) $.
    syl6eq.2 $e |- B = C $.
    $( An equality transitivity deduction. $)
    syl6eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDECDGAFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6req.1 $e |- ( ph -> A = B ) $.
    syl6req.2 $e |- B = C $.
    $( An equality transitivity deduction. $)
    syl6req $p |- ( ph -> C = A ) $=
      ( syl6eq eqcomd ) ABDABCDEFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl6eqr.1 $e |- ( ph -> A = B ) $.
    syl6eqr.2 $e |- C = B $.
    $( An equality transitivity deduction. $)
    syl6eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl6eq ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6reqr.1 $e |- ( ph -> A = B ) $.
    syl6reqr.2 $e |- C = B $.
    $( An equality transitivity deduction. $)
    syl6reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl6req ) ABCDEDCFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    sylan9eq.1 $e |- ( ph -> A = B ) $.
    sylan9eq.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    sylan9eq $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( wceq eqtr syl2an ) CDHDEHCEHABCDEIFGJ $.
      $( [25-May-2011] $) $( [8-May-1994] $)
  $}

  ${
    sylan9req.1 $e |- ( ph -> B = A ) $.
    sylan9req.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction. $)
    sylan9req $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( eqcomd sylan9eq ) ABCDEADCFHGI $.
      $( [23-Jun-2007] $)
  $}

  ${
    sylan9eqr.1 $e |- ( ph -> A = B ) $.
    sylan9eqr.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction. $)
    sylan9eqr $p |- ( ( ps /\ ph ) -> A = C ) $=
      ( wceq sylan9eq ancoms ) ABCEHABCDEFGIJ $.
      $( [8-May-1994] $)
  $}

  ${
    3eqtr3g.1 $e |- ( ph -> A = B ) $.
    3eqtr3g.2 $e |- A = C $.
    3eqtr3g.3 $e |- B = D $.
    $( A chained equality inference, useful for converting from definitions. $)
    3eqtr3g $p |- ( ph -> C = D ) $=
      ( syl5eqr syl6eq ) ADCEABCDFGIHJ $.
      $( [15-Nov-1994] $)
  $}

  ${
    3eqtr4g.1 $e |- ( ph -> A = B ) $.
    3eqtr4g.2 $e |- C = A $.
    3eqtr4g.3 $e |- D = B $.
    $( A chained equality inference, useful for converting to definitions. $)
    3eqtr4g $p |- ( ph -> C = D ) $=
      ( syl5eq syl6eqr ) ADCEABCDFGIHJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    3eqtr4a.1 $e |- A = B $.
    3eqtr4a.2 $e |- ( ph -> C = A ) $.
    3eqtr4a.3 $e |- ( ph -> D = B ) $.
    $( A chained equality inference, useful for converting to definitions.
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr4a $p |- ( ph -> C = D ) $=
      ( syl6eq eqtr4d ) ADCEADBCGFIHJ $.
      $( [25-May-2011] $) $( [2-Feb-2007] $)
  $}

  ${
    eq2tr.1 $e |- ( A = C -> D = F ) $.
    eq2tr.2 $e |- ( B = D -> C = G ) $.
    $( A compound transitive inference for class equality. $)
    eq2tri $p |- ( ( A = C /\ B = F ) <-> ( B = D /\ A = G ) ) $=
      ( wceq wa ancom eqeq2d pm5.32i 3bitr3i ) ACIZBDIZJPOJOBEIZJPAFIZJOPKOPQOD
      EBGLMPORPCFAHLMN $.
      $( [22-Jan-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of membership. $)
    eleq1 $p |- ( A = B -> ( A e. C <-> B e. C ) ) $=
      ( vx wceq cv wcel wa wex eqeq2 anbi1d exbidv df-clel 3bitr4g ) ABEZDFZAEZ
      PCGZHZDIPBEZRHZDIACGBCGOSUADOQTRABPJKLDACMDBCMN $.
      $( [5-Aug-1993] $)

    $( Equality implies equivalence of membership. $)
    eleq2 $p |- ( A = B -> ( C e. A <-> C e. B ) ) $=
      ( vx wceq cv wcel wa wex wb wal dfcleq biimpi 19.21bi anbi2d exbidv 
      df-clel 3bitr4g ) ABEZDFZCEZTAGZHZDIUATBGZHZDICAGCBGSUCUEDSUBUDUASUBUDJZD
      SUFDKDABLMNOPDCAQDCBQR $.
      $( [5-Aug-1993] $)
  $}

  $( Equality implies equivalence of membership. $)
  eleq12 $p |- ( ( A = B /\ C = D ) -> ( A e. C <-> B e. D ) ) $=
    ( wceq wcel eleq1 eleq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [31-May-1999] $)

  ${
    eleq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of membership. $)
    eleq1i $p |- ( A e. C <-> B e. C ) $=
      ( wceq wcel wb eleq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [5-Aug-1993] $)

    $( Inference from equality to equivalence of membership. $)
    eleq2i $p |- ( C e. A <-> C e. B ) $=
      ( wceq wcel wb eleq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [5-Aug-1993] $)

    ${
      eleq12i.2 $e |- C = D $.
      $( Inference from equality to equivalence of membership. $)
      eleq12i $p |- ( A e. C <-> B e. D ) $=
        ( wcel eleq2i eleq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
        $( [31-May-1994] $)
    $}
  $}

  ${
    eleq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of membership. $)
    eleq1d $p |- ( ph -> ( A e. C <-> B e. C ) ) $=
      ( wceq wcel wb eleq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [5-Aug-1993] $)

    $( Deduction from equality to equivalence of membership. $)
    eleq2d $p |- ( ph -> ( C e. A <-> C e. B ) ) $=
      ( wceq wcel wb eleq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [27-Dec-1993] $)

    ${
      eleq12d.2 $e |- ( ph -> C = D ) $.
      $( Deduction from equality to equivalence of membership. $)
      eleq12d $p |- ( ph -> ( A e. C <-> B e. D ) ) $=
        ( wcel eleq2d eleq1d bitrd ) ABDHBEHCEHADEBGIABCEFJK $.
        $( [31-May-1994] $)
    $}
  $}

  $( A transitive-type law relating membership and equality. $)
  eleq1a $p |- ( A e. B -> ( C = A -> C e. B ) ) $=
    ( wceq wcel eleq1 biimprcd ) CADCBEABECABFG $.
    $( [9-Apr-1994] $)

  ${
    eqeltr.1 $e |- A = B $.
    eqeltr.2 $e |- B e. C $.
    $( Substitution of equal classes into membership relation. $)
    eqeltri $p |- A e. C $=
      ( wcel eleq1i mpbir ) ACFBCFEABCDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeltrr.1 $e |- A = B $.
    eqeltrr.2 $e |- A e. C $.
    $( Substitution of equal classes into membership relation. $)
    eqeltrri $p |- B e. C $=
      ( eqcomi eqeltri ) BACABDFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eleqtr.1 $e |- A e. B $.
    eleqtr.2 $e |- B = C $.
    $( Substitution of equal classes into membership relation. $)
    eleqtri $p |- A e. C $=
      ( wcel eleq2i mpbi ) ABFACFDBCAEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eleqtrr.1 $e |- A e. B $.
    eleqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into membership relation. $)
    eleqtrri $p |- A e. C $=
      ( eqcomi eleqtri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeltrd.1 $e |- ( ph -> A = B ) $.
    eqeltrd.2 $e |- ( ph -> B e. C ) $.
    $( Substitution of equal classes into membership relation, deduction form.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    eqeltrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [10-Dec-2002] $)
  $}

  ${
    eqeltrrd.1 $e |- ( ph -> A = B ) $.
    eqeltrrd.2 $e |- ( ph -> A e. C ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eqeltrrd $p |- ( ph -> B e. C ) $=
      ( eqcomd eqeltrd ) ACBDABCEGFH $.
      $( [14-Dec-2004] $)
  $}

  ${
    eleqtrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrd.2 $e |- ( ph -> B = C ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eleqtrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [14-Dec-2004] $)
  $}

  ${
    eleqtrrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eleqtrrd $p |- ( ph -> A e. C ) $=
      ( eqcomd eleqtrd ) ABCDEADCFGH $.
      $( [14-Dec-2004] $)
  $}

  ${
    syl5eqel.1 $e |- ( ph -> A e. B ) $.
    syl5eqel.2 $e |- C = A $.
    $( A membership and equality inference. $)
    syl5eqel $p |- ( ph -> C e. B ) $=
      ( wceq a1i eqeltrd ) ADBCDBGAFHEI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eqelr.1 $e |- ( ph -> A e. B ) $.
    syl5eqelr.2 $e |- A = C $.
    $( A membership and equality inference. $)
    syl5eqelr $p |- ( ph -> C e. B ) $=
      ( eqcomi syl5eqel ) ABCDEBDFGH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eleq.1 $e |- ( ph -> A = B ) $.
    syl5eleq.2 $e |- C e. A $.
    $( A membership and equality inference. $)
    syl5eleq $p |- ( ph -> C e. B ) $=
      ( wcel a1i eleqtrd ) ADBCDBGAFHEI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eleqr.1 $e |- ( ph -> B = A ) $.
    syl5eleqr.2 $e |- C e. A $.
    $( A membership and equality inference. $)
    syl5eleqr $p |- ( ph -> C e. B ) $=
      ( eqcomd syl5eleq ) ABCDACBEGFH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eqel.1 $e |- ( ph -> A = B ) $.
    syl6eqel.2 $e |- B e. C $.
    $( A membership and equality inference. $)
    syl6eqel $p |- ( ph -> A e. C ) $=
      ( wcel a1i eqeltrd ) ABCDECDGAFHI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eqelr.1 $e |- ( ph -> B = A ) $.
    syl6eqelr.2 $e |- B e. C $.
    $( A membership and equality inference. $)
    syl6eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl6eqel ) ABCDACBEGFH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eleq.1 $e |- ( ph -> A e. B ) $.
    syl6eleq.2 $e |- B = C $.
    $( A membership and equality inference. $)
    syl6eleq $p |- ( ph -> A e. C ) $=
      ( wceq a1i eleqtrd ) ABCDECDGAFHI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eleqr.1 $e |- ( ph -> A e. B ) $.
    syl6eleqr.2 $e |- C = B $.
    $( A membership and equality inference. $)
    syl6eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl6eleq ) ABCDEDCFGH $.
      $( [24-Apr-2005] $)
  $}

  ${
    eleq2s.1 $e |- ( A e. B -> ph ) $.
    eleq2s.2 $e |- C = B $.
    $( Substitution of equal classes into a membership antecedent.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    eleq2s $p |- ( A e. C -> ph ) $=
      ( wcel eleq2i sylbi ) BDGBCGADCBFHEI $.
      $( [12-Jun-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    cleqf.1 $e |- ( y e. A -> A. x y e. A ) $.
    cleqf.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Establish equality between classes, using bound-variable hypotheses
       instead of distinct variable conditions. $)
    cleqf $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( wceq cv wcel wb wal dfcleq ax-17 hbbi eleq1 bibi12d cbval bitr4i ) CDGB
      HZCIZSDIZJZBKAHZCIZUCDIZJZAKBCDLUFUBABUFBMTUAAEFNUCSGUDTUEUAUCSCOUCSDOPQR
      $.
      $( [5-Aug-1993] $)
  $}

  $( A way of showing two classes are not equal. $)
  nelneq $p |- ( ( A e. C /\ -. B e. C ) -> -. A = B ) $=
    ( wcel wn wceq eleq1 biimpcd con3d imp ) ACDZBCDZEABFZEKMLMKLABCGHIJ $.
    $( [1-Apr-1997] $)

  $( A way of showing two classes are not equal. $)
  nelneq2 $p |- ( ( A e. B /\ -. A e. C ) -> -. B = C ) $=
    ( wcel wn wceq eleq2 biimpcd con3d imp ) ABDZACDZEBCFZEKMLMKLBCAGHIJ $.
    $( [12-Jan-2002] $)

  ${
    $d x y $.  $d y A $.
    $( Lemma for ~ eqsb3 .  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    eqsb3lem $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( cv wceq ax-17 eqeq1 sbie ) BDZCEADZCEZBAKBFIJCGH $.
      $( [14-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d x w $.
    $( Substitution applied to an atomic wff (class version of ~ equsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.) $)
    eqsb3 $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( vw cv wceq wsbc eqsb3lem sbbii ax-17 sbco2 3bitr3i ) BECFZBDEZGZDAEZGNC
      FZDPGMBPGPCFOQDADBCHIMBADMDJKADCHL $.
      $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d w x $.
    $( Substitution applied to an atomic wff (class version of ~ elsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.)  (The proof was shortened
       by Andrew Salmon, 14-Jun-2011.) $)
    clelsb3 $p |- ( [ x / y ] y e. A <-> x e. A ) $=
      ( vw cv wcel wsbc ax-17 eleq1 sbie sbbii sbco2 bitr3i wb wceq equsb1 
      sbimi ax-mp sbbi mpbi sbf 3bitri ) BEZCFZBAEZGZDEZCFZDUEGZUECFZDUEGZUJUFU
      HDUCGZBUEGUIULUDBAUHUDDBUDDHUGUCCIJKUHDABUHBHLMUHUJNZDUEGZUIUKNUGUEOZDUEG
      UNDAPUOUMDAUGUECIQRUHUJDASTUJDAUJDHUAUB $.
      $( [14-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    hbxfr.1 $e |- A = B $.
    hbxfr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( A utility lemma to transfer a bound-variable hypothesis builder into a
       definition. $)
    hbxfr $p |- ( y e. A -> A. x y e. A ) $=
      ( cv wcel wal eleq2i albii 3imtr4i ) BGZDHZNAIMCHZOAIFCDMEJZONAPKL $.
      $( [21-Aug-2007] $)
  $}

  ${
    $d w y A $.  $d w x z $.
    hblem.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Lemma for ~ hbeq and ~ hbel .  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hblem $p |- ( z e. A -> A. x z e. A ) $=
      ( cv wcel wsbc wal hbsb clelsb3 albii 3imtr3i ) BFDGZBCFZHZPAIODGZQAINBCA
      EJCBDKZPQARLM $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d y A w $.  $d z B w $.  $d w x $.
    hbeq.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbeq.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( If ` x ` is effectively bound in ` A ` and ` B ` , it is effectively
       bound in ` A = B ` .  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbeq $p |- ( A = B -> A. x A = B ) $=
      ( vw cv wcel wb wal wceq hblem hbbi hbal dfcleq albii 3imtr4i ) HIZDJZTEJ
      ZKZHLZUDALDEMZUEALUCAHUAUBAABHDFNACHEGNOPHDEQZUEUDAUFRS $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d y A w $.  $d z B w $.  $d w x v $.
    hbel.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbel.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( If ` x ` is effectively bound in ` A ` and ` B ` , it is effectively
       bound in ` A e. B ` .  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbel $p |- ( A e. B -> A. x A e. B ) $=
      ( vw vv cv wceq wcel wa wex wal ax-17 hbeq hblem hban hbex df-clel albii 
      3imtr4i ) HJZDKZUDELZMZHNZUHAODELZUIAOUGAHUEUFAAIBUDDIJUDLAPFQACHEGRSTHDE
      UAZUIUHAUJUBUC $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d y z A $.
    hbeleq.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( If ` x ` is effectively bound in ` y e. A ` , then it is effectively
       bound in ` y = A ` .  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    hbeleq $p |- ( y = A -> A. x y = A ) $=
      ( vz cv wcel ax-17 hbeq ) AEBBFZCEFJGAHDI $.
      $( [12-Aug-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction (also called a
       class builder).  Theorem 5.1 of [Quine] p. 34.  This theorem shows the
       relationship between expressions with class abstractions and expressions
       with class variables.  Note that ~ eq2ab and its relatives are among
       those useful for converting theorems with class variables to equivalent
       theorems with wff variables, by first substituting a class abstraction
       for each class variable.

       Class variables can always be eliminated from a theorem to result in an
       equivalent theorem with wff variables, and vice-versa.  The idea is
       roughly as follows.  To convert a theorem with a wff variable ` ph `
       (that has a free variable ` x ` ) to a theorem with a class variable
       ` A ` , we substitute ` x e. A ` for ` ph ` throughout and simplify,
       where ` A ` is a new class variable not already in the wff.  An example
       is the conversion of ~ zfauscl to ~ inex1 (look at the instance of
       ~ zfauscl that occurs in the proof of ~ inex1 ).  Conversely, to convert
       a theorem with a class variable ` A ` to one with ` ph ` , we substitute
       ` { x | ph } ` for ` A ` throughout and simplify, where ` x ` and ` ph `
       are new set and wff variables not already in the wff.  An example is
       ~ cp , which derives a formula containing wff variables from
       substitution instances of the class variables in its equivalent
       formulation ~ cplem2 . $)
    abeq2 $p |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) $=
      ( vy cab wceq cv wcel wb wal ax-17 hbab1 cleqf abid bibi2i albii bitri ) 
      CABEZFBGZCHZSRHZIZBJTAIZBJBDCRDGCHBKABDLMUBUCBUAATABNOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction. $)
    abeq1 $p |- ( { x | ph } = A <-> A. x ( ph <-> x e. A ) ) $=
      ( cab wceq cv wcel wb wal abeq2 eqcom bicom albii 3bitr4i ) CABDZEBFCGZAH
      ZBIOCEAPHZBIABCJOCKRQBAPLMN $.
      $( [20-Aug-1993] $)
  $}

  ${
    abeqi.1 $e |- A = { x | ph } $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abeq2i $p |- ( x e. A <-> ph ) $=
      ( cv wcel cab eleq2i abid bitri ) BEZCFKABGZFACLKDHABIJ $.
      $( [3-Apr-1996] $)
  $}

  ${
    abeqri.1 $e |- { x | ph } = A $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abeq1i $p |- ( ph <-> x e. A ) $=
      ( cv cab wcel abid eleq2i bitr3i ) ABEZABFZGKCGABHLCKDIJ $.
      $( [31-Jul-1994] $)
  $}

  ${
    abeqd.1 $e |- ( ph -> A = { x | ps } ) $.
    $( Equality of a class variable and a class abstraction (deduction). $)
    abeq2d $p |- ( ph -> ( x e. A <-> ps ) ) $=
      ( cv wcel cab eleq2d abid syl6bb ) ACFZDGLBCHZGBADMLEIBCJK $.
      $( [16-Nov-1995] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Equality of two class abstractions means their wff's are equivalent. $)
    eq2ab $p |- ( { x | ph } = { x | ps } <-> A. x ( ph <-> ps ) ) $=
      ( vy cab wceq cv wcel wb wal hbab1 cleqf abid bibi12i albii bitri ) ACEZB
      CEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    abbiri.1 $e |- ( x e. A <-> ph ) $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abbi2i $p |- A = { x | ph } $=
      ( cab wceq cv wcel wb abeq2 mpgbir ) CABEFBGCHAIBABCJDK $.
      $( [5-Aug-1993] $)
  $}

  ${
    abbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions (inference rule). $)
    abbii $p |- { x | ph } = { x | ps } $=
      ( cab wceq wb eq2ab mpgbir ) ACEBCEFABGCABCHDI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.  $d ch y $.  $( ` y ` is a dummy var. $)
    abbid.1 $e |- ( ph -> A. x ph ) $.
    abbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule). $)
    abbid $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( wb wal cab wceq 19.21ai eq2ab sylibr ) ABCGZDHBDICDIJANDEFKBCDLM $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    abbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule). $)
    abbidv $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( ax-17 abbid ) ABCDADFEG $.
      $( [10-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbirdv.1 $e |- ( ph -> ( x e. A <-> ps ) ) $.
    $( Deduction from a wff to a class abstraction. $)
    abbi2dv $p |- ( ph -> A = { x | ps } ) $=
      ( cv wcel wb wal cab wceq 19.21aiv abeq2 sylibr ) ACFDGBHZCIDBCJKAOCELBCD
      MN $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbildv.1 $e |- ( ph -> ( ps <-> x e. A ) ) $.
    $( Deduction from a wff to a class abstraction. $)
    abbi1dv $p |- ( ph -> { x | ps } = A ) $=
      ( cv wcel wb wal cab wceq 19.21aiv abeq1 sylibr ) ABCFDGHZCIBCJDKAOCELBCD
      MN $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x A $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35. $)
    abid2 $p |- { x | x e. A } = A $=
      ( cv wcel cab biid abbi2i eqcomi ) BACBDZAEIABIFGH $.
      $( [26-Dec-1993] $)
  $}

  ${
    $d y A $.  $d x y $.
    abid2f.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35. $)
    abid2f $p |- { x | x e. A } = A $=
      ( cv wcel cab wceq wb wal hbab1 cleqf abid bibi2i albii bitri biid 
      mpgbir eqcomi ) CAEZCFZAGZCUBHZUAUAIZAUCUATUBFZIZAJUDAJABCUBDUAABKLUFUDAU
      EUAUAUAAMNOPUAQRS $.
      $( [5-Sep-2011] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership of a class variable in a class abstraction. $)
    clelab $p |- ( A e. { x | ph } <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq cab wcel wa wex wsbc df-clab anbi2i exbii df-clel ax-17 
      hbs1 hban eqeq1 sbequ12 anbi12d cbvex 3bitr4i ) DEZCFZUDABGZHZIZDJUEABUDK
      ZIZDJCUFHBEZCFZAIZBJUHUJDUGUIUEADBLMNDCUFOUMUJBDUMDPUEUIBUEBPABDQRUKUDFUL
      UEAUIUKUDCSABDTUAUBUC $.
      $( [23-Dec-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( Membership of a class abstraction in another class. $)
    clabel $p |- ( { x | ph } e. A <->
                 E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) $=
      ( cab wcel cv wceq wa wex wb wal df-clel abeq2 anbi1i ancom bitri exbii 
      ) ABEZDFCGZSHZTDFZIZCJUBBGTFAKBLZIZCJCSDMUCUECUCUDUBIUEUAUDUBABTNOUDUBPQR
      Q $.
      $( [17-Jan-2006] $)
  $}

  ${
    $d z A $.  $d z x $.  $d z y $.
    $( The right-hand side of the second equality is a way of representing
       proper substitution of ` y ` for ` x ` into a class variable. $)
    sbab $p |- ( x = y -> A = { z | [ y / x ] z e. A } ) $=
      ( cv wceq wcel wsbc sbequ12 abbi2dv ) AEBEZFCEDGZAKHCDLABIJ $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d v A w $.  $d x z v u $.  $d y z v u $.  $d v ph $.
    sbabel.1 $e |- ( w e. A -> A. x w e. A ) $.
    $( Theorem to move a substitution in and out of a class abstraction.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    sbabel $p |- ( [ y / x ] { z | ph } e. A <-> { z | [ y / x ] ph } e. A ) $=
      ( vv cv cab wceq wcel wa wex wsbc sbex sban wb wal sbal ax-17 sbf sbrbis 
      albii bitri abeq2 sbbii 3bitr4i hblem anbi12i exbii df-clel ) HIZADJZKZUM
      FLZMZHNZBCIZOZUMABUSOZDJZKZUPMZHNZUNFLZBUSOVBFLUTUQBUSOZHNVEUQHBCPVGVDHVG
      UOBUSOZUPBUSOZMVDUOUPBCQVHVCVIUPDIUMLZARZDSZBUSOZVJVARZDSZVHVCVMVKBUSOZDS
      VOVKDBCTVPVNDVJVJABCVJBCVJBUAUBUCUDUEUOVLBCADUMUFUGVADUMUFUHUPBCBEHFGUIUB
      UJUEUKUEVFURBCHUNFULUGHVBFULUH $.
      $( [11-Jul-2011] $) $( [27-Sep-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Negated equality and membership
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new connectives. $)
  $c =/= $. $( Not equal to (equal sign with slash through it). $)
  $c e/ $. $( Not an element of (epsilon with slash through it). $)

  $( Extend wff notation to include inequality. $)
  wne $a wff A =/= B $.

  $( Extend wff notation to include negated membership. $)
  wnel $a wff A e/ B $.

  $( Define inequality. $)
  df-ne $a |- ( A =/= B <-> -. A = B ) $.

  $( Define negated membership. $)
  df-nel $a |- ( A e/ B <-> -. A e. B ) $.

  $( Negation of inequality. $)
  nne $p |- ( -. A =/= B <-> A = B ) $=
    ( wceq wne wn df-ne con2bii bicomi ) ABCZABDZEJIABFGH $.
    $( [9-Jun-2006] $)

  $( Excluded middle with equality and inequality. $)
  exmidne $p |- ( A = B \/ A =/= B ) $=
    ( wceq wne wo wn exmid df-ne orbi2i mpbir ) ABCZABDZEKKFZEKGLMKABHIJ $.
    $( [3-Feb-2012] $)

  $( Law of noncontradiction with equality and inequality. $)
  nonconne $p |- -. ( A = B /\ A =/= B ) $=
    ( wceq wne wa wn pm3.24 df-ne anbi2i mtbir ) ABCZABDZEKKFZEKGLMKABHIJ $.
    $( [3-Feb-2012] $)

  $( Equality theorem for inequality. $)
  neeq1 $p |- ( A = B -> ( A =/= C <-> B =/= C ) ) $=
    ( wceq wn wne eqeq1 notbid df-ne 3bitr4g ) ABDZACDZEBCDZEACFBCFKLMABCGHACIB
    CIJ $.
    $( [19-Nov-1994] $)

  $( Equality theorem for inequality. $)
  neeq2 $p |- ( A = B -> ( C =/= A <-> C =/= B ) ) $=
    ( wceq wn wne eqeq2 notbid df-ne 3bitr4g ) ABDZCADZECBDZECAFCBFKLMABCGHCAIC
    BIJ $.
    $( [19-Nov-1994] $)

  ${
    neeq1i.1 $e |- A = B $.
    $( Inference for inequality. $)
    neeq1i $p |- ( A =/= C <-> B =/= C ) $=
      ( wceq wne wb neeq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [29-Apr-2005] $)

    $( Inference for inequality. $)
    neeq2i $p |- ( C =/= A <-> C =/= B ) $=
      ( wceq wne wb neeq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [29-Apr-2005] $)

    neeq12i.2 $e |- C = D $.
    $( Inference for inequality. $)
    neeq12i $p |- ( A =/= C <-> B =/= D ) $=
      ( wne neeq2i neeq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [24-Jul-2012] $)
  $}

  ${
    neeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction for inequality. $)
    neeq1d $p |- ( ph -> ( A =/= C <-> B =/= C ) ) $=
      ( wceq wne wb neeq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [25-Oct-1999] $)

    $( Deduction for inequality. $)
    neeq2d $p |- ( ph -> ( C =/= A <-> C =/= B ) ) $=
      ( wceq wne wb neeq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [25-Oct-1999] $)

    neeq12d.2 $e |- ( ph -> C = D ) $.
    $( Deduction for inequality. $)
    neeq12d $p |- ( ph -> ( A =/= C <-> B =/= D ) ) $=
      ( wne neeq1d neeq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    eqnetr.1 $e |- A = B $.
    eqnetr.2 $e |- B =/= C $.
    $( Substitution of equal classes into an inequality. $)
    eqnetri $p |- A =/= C $=
      ( wne neeq1i mpbir ) ACFBCFEABCDGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrd.1 $e |- ( ph -> A = B ) $.
    eqnetrd.2 $e |- ( ph -> B =/= C ) $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrr.1 $e |- A = B $.
    eqnetrr.2 $e |- A =/= C $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrri $p |- B =/= C $=
      ( eqcomi eqnetri ) BACABDFEG $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrrd.1 $e |- ( ph -> A = B ) $.
    eqnetrrd.2 $e |- ( ph -> A =/= C ) $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrrd $p |- ( ph -> B =/= C ) $=
      ( eqcomd eqnetrd ) ACBDABCEGFH $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtr.1 $e |- A =/= B $.
    neeqtr.2 $e |- B = C $.
    $( Substitution of equal classes into an inequality. $)
    neeqtri $p |- A =/= C $=
      ( wne neeq2i mpbi ) ABFACFDBCAEGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrr.1 $e |- A =/= B $.
    neeqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrri $p |- A =/= C $=
      ( eqcomi neeqtri ) ABCDCBEFG $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrrd $p |- ( ph -> A =/= C ) $=
      ( eqcomd neeqtrd ) ABCDEADCFGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    syl5eqner.1 $e |- ( ph -> A =/= B ) $.
    syl5eqner.2 $e |- A = C $.
    $( A chained equality inference for inequality. $)
    syl5eqner $p |- ( ph -> C =/= B ) $=
      ( wne neeq1i sylib ) ABCGDCGEBDCFHI $.
      $( [6-Jun-2012] $)
  $}

  ${
    3netr3d.1 $e |- ( ph -> A =/= B ) $.
    3netr3d.2 $e |- ( ph -> A = C ) $.
    3netr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr3d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbid ) ABCIDEIFABDCEGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr4d.1 $e |- ( ph -> A =/= B ) $.
    3netr4d.2 $e |- ( ph -> C = A ) $.
    3netr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr4d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbird ) ADEIBCIFADBECGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr3g.1 $e |- ( ph -> A =/= B ) $.
    3netr3g.2 $e |- A = C $.
    3netr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr3g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylib ) ABCIDEIFBDCEGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr4g.1 $e |- ( ph -> A =/= B ) $.
    3netr4g.2 $e |- C = A $.
    3netr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr4g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylibr ) ABCIDEIFDBECGHJK $.
      $( [14-Jun-2012] $)
  $}

  ${
    necon3abii.1 $e |- ( A = B <-> ph ) $.
    $( Deduction from equality to inequality. $)
    necon3abii $p |- ( A =/= B <-> -. ph ) $=
      ( wne wceq wn df-ne notbii bitri ) BCEBCFZGAGBCHKADIJ $.
      $( [9-Nov-2007] $)
  $}

  ${
    necon3bbii.1 $e |- ( ph <-> A = B ) $.
    $( Deduction from equality to inequality. $)
    necon3bbii $p |- ( -. ph <-> A =/= B ) $=
      ( wne wn wceq bicomi necon3abii ) BCEAFABCABCGDHIH $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon3bii.1 $e |- ( A = B <-> C = D ) $.
    $( Inference from equality to inequality. $)
    necon3bii $p |- ( A =/= B <-> C =/= D ) $=
      ( wne wceq wn necon3abii df-ne bitr4i ) ABFCDGZHCDFLABEICDJK $.
      $( [23-Feb-2005] $)
  $}

  ${
    necon3abid.1 $e |- ( ph -> ( A = B <-> ps ) ) $.
    $( Deduction from equality to inequality. $)
    necon3abid $p |- ( ph -> ( A =/= B <-> -. ps ) ) $=
      ( wceq wn wne notbid df-ne syl5bb ) ACDFZGBGCDHALBEICDJK $.
      $( [21-Mar-2007] $)
  $}

  ${
    necon3bbid.1 $e |- ( ph -> ( ps <-> A = B ) ) $.
    $( Deduction from equality to inequality. $)
    necon3bbid $p |- ( ph -> ( -. ps <-> A =/= B ) ) $=
      ( wne wn wceq bicomd necon3abid ) ACDFBGABCDABCDHEIJI $.
      $( [2-Jun-2007] $)
  $}

  ${
    necon3bid.1 $e |- ( ph -> ( A = B <-> C = D ) ) $.
    $( Deduction from equality to inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3bid $p |- ( ph -> ( A =/= B <-> C =/= D ) ) $=
      ( wceq wn wne necon3bbid df-ne syl5bb ) ABCGZHDEIBCIAMDEFJBCKL $.
      $( [25-May-2011] $) $( [23-Feb-2005] $)
  $}

  ${
    necon3ad.1 $e |- ( ph -> ( ps -> A = B ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon3ad $p |- ( ph -> ( A =/= B -> -. ps ) ) $=
      ( wne wceq wn nne syl6ibr con2d ) ABCDFZABCDGLHECDIJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon3bd.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon3bd $p |- ( ph -> ( -. ps -> A =/= B ) ) $=
      ( wne wceq wn nne syl5ib con1d ) ACDFZBACDGBLHECDIJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon3d.1 $e |- ( ph -> ( A = B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon3d $p |- ( ph -> ( C =/= D -> A =/= B ) ) $=
      ( wne wceq wn necon3ad df-ne syl6ibr ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [10-Jun-2006] $)
  $}

  ${
    necon3i.1 $e |- ( A = B -> C = D ) $.
    $( Contrapositive inference for inequality. $)
    necon3i $p |- ( C =/= D -> A =/= B ) $=
      ( wceq wi wne id necon3d ax-mp ) ABFCDFGZCDHABHGELABCDLIJK $.
      $( [9-Aug-2006] $)
  $}

  ${
    necon3ai.1 $e |- ( ph -> A = B ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3ai $p |- ( A =/= B -> -. ph ) $=
      ( wne wceq wn nne sylibr con2i ) ABCEZABCFKGDBCHIJ $.
      $( [25-May-2011] $) $( [23-May-2007] $)
  $}

  ${
    necon3bi.1 $e |- ( A = B -> ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3bi $p |- ( -. ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con1i ) BCEZAKFBCGABCHDIJ $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    necon1ai.1 $e |- ( -. ph -> A = B ) $.
    $( Contrapositive inference for inequality. $)
    necon1ai $p |- ( A =/= B -> ph ) $=
      ( wne wceq wn df-ne con1i sylbi ) BCEBCFZGABCHAKDIJ $.
      $( [12-Feb-2007] $)
  $}

  ${
    necon1bi.1 $e |- ( A =/= B -> ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon1bi $p |- ( -. ph -> A = B ) $=
      ( wn wne wceq con3i nne sylib ) AEBCFZEBCGKADHBCIJ $.
      $( [25-May-2011] $) $( [18-Mar-2007] $)
  $}

  ${
    necon1i.1 $e |- ( A =/= B -> C = D ) $.
    $( Contrapositive inference for inequality. $)
    necon1i $p |- ( C =/= D -> A = B ) $=
      ( wceq wn wne df-ne sylbir necon1ai ) ABFZCDLGABHCDFABIEJK $.
      $( [18-Mar-2007] $)
  $}

  ${
    necon2ai.1 $e |- ( A = B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon2ai $p |- ( ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con4i ) BCEZAKFBCGAFBCHDIJ $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    necon2bi.1 $e |- ( ph -> A =/= B ) $.
    $( Contrapositive inference for inequality. $)
    necon2bi $p |- ( A = B -> -. ph ) $=
      ( wceq wne wn df-ne sylib con2i ) ABCEZABCFKGDBCHIJ $.
      $( [1-Apr-2007] $)
  $}

  ${
    necon2i.1 $e |- ( A = B -> C =/= D ) $.
    $( Contrapositive inference for inequality. $)
    necon2i $p |- ( C = D -> A =/= B ) $=
      ( wceq wne wn df-ne sylib necon2ai ) CDFZABABFCDGLHECDIJK $.
      $( [18-Mar-2007] $)
  $}

  ${
    necon2ad.1 $e |- ( ph -> ( A = B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon2ad $p |- ( ph -> ( ps -> A =/= B ) ) $=
      ( wne wceq wn nne syl5ib con4d ) ACDFZBACDGBHLHECDIJK $.
      $( [25-May-2011] $) $( [19-Apr-2007] $)
  $}

  ${
    necon2bd.1 $e |- ( ph -> ( ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality. $)
    necon2bd $p |- ( ph -> ( A = B -> -. ps ) ) $=
      ( wceq wne wn df-ne syl6ib con2d ) ABCDFZABCDGLHECDIJK $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon2d.1 $e |- ( ph -> ( A = B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality. $)
    necon2d $p |- ( ph -> ( C = D -> A =/= B ) ) $=
      ( wceq wne wn df-ne syl6ib necon2ad ) ADEGZBCABCGDEHMIFDEJKL $.
      $( [28-Dec-2008] $)
  $}

  ${
    necon1abii.1 $e |- ( -. ph <-> A = B ) $.
    $( Contrapositive inference for inequality. $)
    necon1abii $p |- ( A =/= B <-> ph ) $=
      ( wne wceq wn df-ne con1bii bitri ) BCEBCFZGABCHAKDIJ $.
      $( [17-Mar-2007] $)
  $}

  ${
    necon1bbii.1 $e |- ( A =/= B <-> ph ) $.
    $( Contrapositive inference for inequality. $)
    necon1bbii $p |- ( -. ph <-> A = B ) $=
      ( wceq wn wne df-ne bitr3i con1bii ) BCEZAKFBCGABCHDIJ $.
      $( [17-Mar-2007] $)
  $}

  ${
    necon1abid.1 $e |- ( ph -> ( -. ps <-> A = B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon1abid $p |- ( ph -> ( A =/= B <-> ps ) ) $=
      ( wceq wn wne con1bid df-ne syl5bb ) ACDFZGBCDHABLEICDJK $.
      $( [21-Aug-2007] $)
  $}

  ${
    necon1bbid.1 $e |- ( ph -> ( A =/= B <-> ps ) ) $.
    $( Contrapositive inference for inequality. $)
    necon1bbid $p |- ( ph -> ( -. ps <-> A = B ) ) $=
      ( wceq wne wn df-ne syl5bbr con1bid ) ACDFZBACDGBLHECDIJK $.
      $( [31-Jan-2008] $)
  $}

  ${
    necon2abii.1 $e |- ( A = B <-> -. ph ) $.
    $( Contrapositive inference for inequality. $)
    necon2abii $p |- ( ph <-> A =/= B ) $=
      ( wne wceq wn bicomi necon1abii ) BCEAABCBCFAGDHIH $.
      $( [2-Mar-2007] $)
  $}

  ${
    necon2bbii.1 $e |- ( ph <-> A =/= B ) $.
    $( Contrapositive inference for inequality. $)
    necon2bbii $p |- ( A = B <-> -. ph ) $=
      ( wn wceq wne bicomi necon1bbii ) AEBCFABCABCGDHIH $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon2abid.1 $e |- ( ph -> ( A = B <-> -. ps ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon2abid $p |- ( ph -> ( ps <-> A =/= B ) ) $=
      ( wceq wn wne con2bid df-ne syl6bbr ) ABCDFZGCDHALBEICDJK $.
      $( [18-Jul-2007] $)
  $}

  ${
    necon2bbid.1 $e |- ( ph -> ( ps <-> A =/= B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon2bbid $p |- ( ph -> ( A = B <-> -. ps ) ) $=
      ( wceq wne wn df-ne syl6bb con2bid ) ABCDFZABCDGLHECDIJK $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon4ai.1 $e |- ( A =/= B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4ai $p |- ( ph -> A = B ) $=
      ( wne wn wceq con2i nne sylib ) ABCEZFBCGKADHBCIJ $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    necon4i.1 $e |- ( A =/= B -> C =/= D ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4i $p |- ( C = D -> A = B ) $=
      ( wceq wne wn necon2bi nne sylib ) CDFABGZHABFLCDEIABJK $.
      $( [25-May-2011] $) $( [17-Mar-2007] $)
  $}

  ${
    necon4ad.1 $e |- ( ph -> ( A =/= B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4ad $p |- ( ph -> ( ps -> A = B ) ) $=
      ( wne wn wceq con2d nne syl6ib ) ABCDFZGCDHALBEICDJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon4bd.1 $e |- ( ph -> ( -. ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4bd $p |- ( ph -> ( A = B -> ps ) ) $=
      ( wne wn wceq con1d nne syl5ibr ) ACDFZGBCDHABLEICDJK $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    necon4d.1 $e |- ( ph -> ( A =/= B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4d $p |- ( ph -> ( C = D -> A = B ) ) $=
      ( wceq wne wn necon2bd nne syl6ib ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon4abid.1 $e |- ( ph -> ( A =/= B <-> -. ps ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4abid $p |- ( ph -> ( A = B <-> ps ) ) $=
      ( wceq wne wn df-ne syl5bbr con4bid ) ACDFZBACDGBHLHECDIJK $.
      $( [11-Jan-2008] $)
  $}

  ${
    necon4bbid.1 $e |- ( ph -> ( -. ps <-> A =/= B ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4bbid $p |- ( ph -> ( ps <-> A = B ) ) $=
      ( wceq wn wne bicomd necon4abid ) ACDFBABCDABGCDHEIJI $.
      $( [9-May-2012] $)
  $}

  ${
    necon4bid.1 $e |- ( ph -> ( A =/= B <-> C =/= D ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4bid $p |- ( ph -> ( A = B <-> C = D ) ) $=
      ( wceq wne wn necon2bbid nne syl6rbb ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [29-Jun-2007] $)
  $}

  ${
    necon1ad.1 $e |- ( ph -> ( -. ps -> A = B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon1ad $p |- ( ph -> ( A =/= B -> ps ) ) $=
      ( wceq wn wne con1d df-ne syl5ib ) ACDFZGBCDHABLEICDJK $.
      $( [2-Apr-2007] $)
  $}

  ${
    necon1bd.1 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Contrapositive deduction for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon1bd $p |- ( ph -> ( -. ps -> A = B ) ) $=
      ( wn wne wceq con3d nne syl6ib ) ABFCDGZFCDHALBEICDJK $.
      $( [25-May-2011] $) $( [21-Mar-2007] $)
  $}

  ${
    necon1d.1 $e |- ( ph -> ( A =/= B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon1d $p |- ( ph -> ( C =/= D -> A = B ) ) $=
      ( wne wceq wn nne syl6ibr necon4ad ) ADEGZBCABCGDEHMIFDEJKL $.
      $( [25-May-2011] $) $( [28-Dec-2008] $)
  $}

  $( Contraposition law for inequality. $)
  nebi $p |- ( ( A = B <-> C = D ) <-> ( A =/= B <-> C =/= D ) ) $=
    ( wceq wb wne id necon3bid necon4bid impbii ) ABECDEFZABGCDGFZLABCDLHIMABCD
    MHJK $.
    $( [28-Dec-2008] $)

  $( Theorem *13.18 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.18 $p |- ( ( A = B /\ A =/= C ) -> B =/= C ) $=
    ( wceq wne eqeq1 biimprd necon3d imp ) ABDZACEBCEJBCACJACDBCDABCFGHI $.
    $( [6-Sep-2011] $) $( [3-Jun-2011] $)

  $( Theorem *13.181 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.181 $p |- ( ( A = B /\ B =/= C ) -> A =/= C ) $=
    ( wceq wne pm13.18 eqcom sylanb ) BADBCEACEABDBACFABGH $.
    $( [6-Sep-2011] $) $( [3-Jun-2011] $)

  ${
    pm2.61ne.1 $e |- ( A = B -> ( ps <-> ch ) ) $.
    pm2.61ne.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    pm2.61ne.3 $e |- ( ph -> ch ) $.
    $( Deduction eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ne $p |- ( ph -> ps ) $=
      ( wne wi expcom wn wceq nne syl5bir sylbi pm2.61i ) DEIZABJZARBGKRLDEMZSD
      ENTBCAFHOPQ $.
      $( [25-May-2011] $) $( [24-May-2006] $)
  $}

  ${
    pm2.61ine.1 $e |- ( A = B -> ph ) $.
    pm2.61ine.2 $e |- ( A =/= B -> ph ) $.
    $( Inference eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ine $p |- ph $=
      ( wne wn wceq nne sylbi pm2.61i ) BCFZAELGBCHABCIDJK $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    pm2.61dne.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    pm2.61dne.2 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Deduction eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61dne $p |- ( ph -> ps ) $=
      ( wne wceq wn nne syl5ib pm2.61d ) ACDGZBFACDHBMIECDJKL $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    pm2.61dane.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61dane.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    $( Deduction eliminating an inequality in an antecedent. $)
    pm2.61dane $p |- ( ph -> ps ) $=
      ( wceq ex wne pm2.61dne ) ABCDACDGBEHACDIBFHJ $.
      $( [30-Nov-2011] $)
  $}

  $( Commutation of inequality. $)
  necom $p |- ( A =/= B <-> B =/= A ) $=
    ( eqcom necon3bii ) ABBAABCD $.
    $( [14-May-1999] $)

  ${
    necomi.1 $e |- A =/= B $.
    $( Inference from commutative law for inequality. $)
    necomi $p |- B =/= A $=
      ( wne necom mpbi ) ABDBADCABEF $.
      $( [17-Oct-2012] $)
  $}

  ${
    necomd.1 $e |- ( ph -> A =/= B ) $.
    $( Deduction from commutative law for inequality. $)
    necomd $p |- ( ph -> B =/= A ) $=
      ( wne necom sylib ) ABCECBEDBCFG $.
      $( [12-Feb-2008] $)
  $}

  $( Logical OR with an equality. $)
  neor $p |- ( ( A = B \/ ps ) <-> ( A =/= B -> ps ) ) $=
    ( wceq wo wn wi wne df-or df-ne imbi1i bitr4i ) BCDZAEMFZAGBCHZAGMAIONABCJK
    L $.
    $( [29-Apr-2007] $)

  $( A DeMorgan's law for inequality. $)
  neanior $p |- ( ( A =/= B /\ C =/= D ) <-> -. ( A = B \/ C = D ) ) $=
    ( wne wa wceq wn wo df-ne anbi12i pm4.56 bitri ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.
    $( [18-May-2007] $)

  $( A DeMorgan's law for inequality. $)
  neorian $p |- ( ( A =/= B \/ C =/= D ) <-> -. ( A = B /\ C = D ) ) $=
    ( wne wo wceq wn wa df-ne orbi12i ianor bitr4i ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.
    $( [18-May-2007] $)

  ${
    nemtbir.1 $e |- A =/= B $.
    nemtbir.2 $e |- ( ph <-> A = B ) $.
    $( An inference from an inequality, related to modus tollens. $)
    nemtbir $p |- -. ph $=
      ( wceq wne wn df-ne mpbi mtbir ) ABCFZBCGLHDBCIJEK $.
      $( [13-Apr-2007] $)
  $}

  $( Two classes are different if they don't contain the same element. $)
  nelne1 $p |- ( ( A e. B /\ -. A e. C ) -> B =/= C ) $=
    ( wcel wn wne wceq eleq2 biimpcd necon3bd imp ) ABDZACDZEBCFLMBCBCGLMBCAHIJ
    K $.
    $( [3-Feb-2012] $)

  $( Two classes are different if they don't belong to the same class. $)
  nelne2 $p |- ( ( A e. C /\ -. B e. C ) -> A =/= B ) $=
    ( wcel wn wne wceq eleq1 biimpcd necon3bd imp ) ACDZBCDZEABFLMABABGLMABCHIJ
    K $.
    $( [25-Jun-2012] $)

  $( Equality theorem for negated membership. $)
  neleq1 $p |- ( A = B -> ( A e/ C <-> B e/ C ) ) $=
    ( wceq wcel wn wnel eleq1 notbid df-nel 3bitr4g ) ABDZACEZFBCEZFACGBCGLMNAB
    CHIACJBCJK $.
    $( [20-Nov-1994] $)

  $( Equality theorem for negated membership. $)
  neleq2 $p |- ( A = B -> ( C e/ A <-> C e/ B ) ) $=
    ( wceq wcel wn wnel eleq2 notbid df-nel 3bitr4g ) ABDZCAEZFCBEZFCAGCBGLMNAB
    CHICAJCBJK $.
    $( [20-Nov-1994] $)

  ${
    $d y A $.  $d y B $.
    hbne.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbne.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbne $p |- ( A =/= B -> A. x A =/= B ) $=
      ( wceq wn wal wne hbeq hbn df-ne albii 3imtr4i ) CDGZHZQAICDJZRAIPAABBCDE
      FKLCDMZRQASNO $.
      $( [11-Jul-2011] $) $( [10-Nov-2007] $)
  $}

  ${
    $d y A $.  $d z B $.
    hbnel.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbnel.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by by
       David Abernethy, 26-Jun-2011.)  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbnel $p |- ( A e/ B -> A. x A e/ B ) $=
      ( wcel wn wal wnel hbel hbn df-nel albii 3imtr4i ) DEHZIZRAJDEKZSAJQAABCD
      EFGLMDENZSRATOP $.
      $( [11-Jul-2011] $) $( [26-Jun-2011] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Restricted quantification
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include restricted universal quantification. $)
  wral $a wff A. x e. A ph $.

  $( Extend wff notation to include restricted existential quantification. $)
  wrex $a wff E. x e. A ph $.

  $( Extend wff notation to include restricted existential uniqueness. $)
  wreu $a wff E! x e. A ph $.

  $( Extend class notation to include the restricted class abstraction (class
     builder). $)
  crab $a class { x e. A | ph } $.

  $( Define restricted universal quantification.  Special case of Definition
     4.15(3) of [TakeutiZaring] p. 22. $)
  df-ral $a |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) $.

  $( Define restricted existential quantification.  Special case of Definition
     4.15(4) of [TakeutiZaring] p. 22. $)
  df-rex $a |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) $.

  $( Define restricted existential uniqueness. $)
  df-reu $a |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) $.

  $( Define a restricted class abstraction (class builder), which is the class
     of all ` x ` in ` A ` such that ` ph ` is true.  Definition of
     [TakeutiZaring] p. 20. $)
  df-rab $a |- { x e. A | ph } = { x | ( x e. A /\ ph ) } $.

  $( Relationship between restricted universal and existential quantifiers. $)
  ralnex $p |- ( A. x e. A -. ph <-> -. E. x e. A ph ) $=
    ( cv wcel wn wi wal wa wex wral wrex alinexa df-ral df-rex notbii 3bitr4i 
    ) BDCEZAFZGBHRAIBJZFSBCKABCLZFRABMSBCNUATABCOPQ $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  rexnal $p |- ( E. x e. A -. ph <-> -. A. x e. A ph ) $=
    ( cv wcel wn wa wex wi wal wrex wral exanali df-rex df-ral notbii 3bitr4i 
    ) BDCEZAFZGBHRAIBJZFSBCKABCLZFRABMSBCNUATABCOPQ $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  dfral2 $p |- ( A. x e. A ph <-> -. E. x e. A -. ph ) $=
    ( wn wrex wral rexnal con2bii ) ADBCEABCFABCGH $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  dfrex2 $p |- ( E. x e. A ph <-> -. A. x e. A -. ph ) $=
    ( wn wral wrex ralnex con2bii ) ADBCEABCFABCGH $.
    $( [21-Jan-1997] $)

  ${
    ralbida.1 $e |- ( ph -> A. x ph ) $.
    ralbida.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbida $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral pm5.74da albid df-ral 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
      $( [6-Oct-2003] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbida $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( cv wcel wa wex wrex pm5.32da exbid df-rex 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
      $( [6-Oct-2003] $)
  $}

  ${
    $d x ph $.
    ralbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidva $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( ax-17 ralbida ) ABCDEADGFH $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidva $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( ax-17 rexbida ) ABCDEADGFH $.
      $( [9-Mar-1997] $)
  $}

  ${
    ralbid.1 $e |- ( ph -> A. x ph ) $.
    ralbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbid $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( wb cv wcel adantr ralbida ) ABCDEFABCHDIEJGKL $.
      $( [27-Jun-1998] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbid $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( wb cv wcel adantr rexbida ) ABCDEFABCHDIEJGKL $.
      $( [27-Jun-1998] $)
  $}

  ${
    $d x ph $.
    ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( ax-17 ralbid ) ABCDEADGFH $.
      $( [20-Nov-1994] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( ax-17 rexbid ) ABCDEADGFH $.
      $( [20-Nov-1994] $)
  $}

  ${
    $d x ph $.
    ralbidv2.1 $e |- ( ph -> ( ( x e. A -> ps ) <-> ( x e. B -> ch ) ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidv2 $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral albidv df-ral 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [6-Apr-1997] $)
  $}

  ${
    $d x ph $.
    rexbidv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. B /\ ch ) ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidv2 $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex exbidv df-rex 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [22-May-1999] $)
  $}

  ${
    ralbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence. $)
    ralbii $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( wb wral biid hbth a1i ralbid ax-mp ) AAFZACDGBCDGFAHZMABCDMCNIABFMEJKL 
      $.
      $( [23-Nov-1994] $)

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence. $)
    rexbii $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( wb wrex biid hbth a1i rexbid ax-mp ) AAFZACDGBCDGFAHZMABCDMCNIABFMEJKL 
      $.
      $( [23-Nov-1994] $)

    $( Inference adding 2 restricted universal quantifiers to both sides of an
       equivalence. $)
    2ralbii $p |- ( A. x e. A A. y e. B ph <-> A. x e. A A. y e. B ps ) $=
      ( wral ralbii ) ADFHBDFHCEABDFGII $.
      $( [1-Aug-2004] $)

    $( Inference adding 2 restricted existential quantifiers to both sides of
       an equivalence. $)
    2rexbii $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex rexbii ) ADFHBDFHCEABDFGII $.
      $( [11-Nov-1995] $)
  $}

  ${
    ralbii2.1 $e |- ( ( x e. A -> ph ) <-> ( x e. B -> ps ) ) $.
    $( Inference adding different restricted universal quantifiers to each side
       of an equivalence. $)
    ralbii2 $p |- ( A. x e. A ph <-> A. x e. B ps ) $=
      ( cv wcel wi wal wral albii df-ral 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [15-Aug-2005] $)
  $}

  ${
    rexbii2.1 $e |- ( ( x e. A /\ ph ) <-> ( x e. B /\ ps ) ) $.
    $( Inference adding different restricted existential quantifiers to each
       side of an equivalence. $)
    rexbii2 $p |- ( E. x e. A ph <-> E. x e. B ps ) $=
      ( cv wcel wa wex wrex exbii df-rex 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [4-Feb-2004] $)
  $}

  ${
    ralbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence. $)
    ralbiia $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( cv wcel pm5.74i ralbii2 ) ABCDDCFDGABEHI $.
      $( [26-Nov-2000] $)

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence. $)
    rexbiia $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( cv wcel pm5.32i rexbii2 ) ABCDDCFDGABEHI $.
      $( [26-Oct-1999] $)
  $}

  ${
    $d x y $.  $d y A $.
    2rexbiia.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph <-> ps ) ) $.
    $( Inference adding 2 restricted existential quantifiers to both sides of
       an equivalence. $)
    2rexbiia $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex cv wcel rexbidva rexbiia ) ADFHBDFHCECIEJABDFGKL $.
      $( [1-Aug-2004] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted universal quantification. $)
    r2al $p |- ( A. x e. A A. y e. B ph <->
               A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) $=
      ( wral cv wcel wi wal wa df-ral 19.21v impexp albii imbi2i 3bitr4i 
      bitr4i ) ACEFZBDFBGDHZSIZBJTCGEHZKAIZCJZBJSBDLUDUABTUBAIZIZCJTUECJZIUDUAT
      UECMUCUFCTUBANOSUGTACELPQOR $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    2ralbida.1 $e |- ( ph -> A. x ph ) $.
    2ralbida.2 $e |- ( ph -> A. y ph ) $.
    2ralbida.3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    2ralbida $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral cv wcel wa ax-17 hban wb anassrs ralbida ) ABEGKCEGKDFHADLFMZNBCEG
      ATEITEOPATELGMBCQJRSS $.
      $( [24-Feb-2004] $)
  $}

  ${
    $d x y ph $.  $d y A $.
    2ralbidva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule). $)
    2ralbidva $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( ax-17 2ralbida ) ABCDEFGADIAEIHJ $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule). $)
    2rexbidva $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex cv wcel wa wb anassrs rexbidva ) ABEGICEGIDFADJFKZLBCEGAPEJGKBCMHN
      OO $.
      $( [15-Dec-2004] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule).  (Unnecessary distinct variable restrictions were removed by
       Szymon Jaroszewicz, 16-Mar-2006.) $)
    2ralbidv $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv ) ABEGICEGIDFABCEGHJJ $.
      $( [16-Mar-2007] $) $( [28-Jan-2006] $)

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule). $)
    2rexbidv $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex rexbidv ) ABEGICEGIDFABCEGHJJ $.
      $( [28-Jan-2006] $)

    $( Formula-building rule for restricted quantifiers (deduction rule). $)
    rexralbidv $p |- ( ph ->
                    ( E. x e. A A. y e. B ps <-> E. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv rexbidv ) ABEGICEGIDFABCEGHJK $.
      $( [28-Jan-2006] $)
  $}

  $( A transformation of restricted quantifiers and logical connectives. $)
  ralinexa $p |- ( A. x e. A ( ph -> -. ps ) <-> -. E. x e. A ( ph /\ ps ) ) $=
    ( wn wi wral wa wrex imnan ralbii ralnex bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.
    $( [4-Sep-2005] $)

  $( A transformation of restricted quantifiers and logical connectives. $)
  rexanali $p |- ( E. x e. A ( ph /\ -. ps ) <-> -. A. x e. A ( ph -> ps ) ) $=
    ( wn wa wrex wi wral annim rexbii rexnal bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.
    $( [4-Sep-2005] $)

  ${
    $d x A $.  $d x B $.
    $( Two ways to say " ` A ` belongs to ` B ` ." $)
    risset $p |- ( A e. B <-> E. x e. B x = A ) $=
      ( cv wcel wceq wa wex wrex exancom df-rex df-clel 3bitr4ri ) ADZCEZNBFZGA
      HPOGAHPACIBCEOPAJPACKABCLM $.
      $( [22-Nov-1994] $)
  $}

  ${
    hbral.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbral.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 13-Dec-2009.) $)
    hbral $p |- ( A. y e. A ph -> A. x A. y e. A ph ) $=
      ( cv wcel wi wal wral hbim hbal df-ral albii 3imtr4i ) CGDHZAIZCJZSBJACDK
      ZTBJRBCQABEFLMACDNZTSBUAOP $.
      $( [13-Dec-2009] $) $( [1-Sep-1999] $)
  $}

  $( ` x ` is not free in ` A. x e. A ph ` . $)
  hbra1 $p |- ( A. x e. A ph -> A. x A. x e. A ph ) $=
    ( cv wcel wi wal wral hba1 df-ral albii 3imtr4i ) BDCEAFZBGZNBGABCHZOBGMBIA
    BCJZONBPKL $.
    $( [18-Oct-1996] $)

  ${
    $d A y $.  $d x y $.
    $( Similar to Lemma 24 of [Monk2] p. 114, except the quantification of the
       antecedent is restricted.  Derived automatically from ~ hbra2VD .
       Contributed by Alan Sare 31-Dec-2011. $)
    hbra2 $p |- ( A. x e. A A. y e. B ph -> A. y A. x e. A A. y e. B ph ) $=
      ( cv wcel wi wal wral ax-17 hba1 hbral df-ral ralbii albii 3imtr4i ) CFEG
      AHZCIZBDJZTCIACEJZBDJZUBCISCBDBFDGCKRCLMUASBDACENOZUBTCUCPQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    hbrex.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbrex.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 13-Dec-2009.) $)
    hbrex $p |- ( E. y e. A ph -> A. x E. y e. A ph ) $=
      ( cv wcel wa wex wal wrex hban hbex df-rex albii 3imtr4i ) CGDHZAIZCJZTBK
      ACDLZUABKSBCRABEFMNACDOZUATBUBPQ $.
      $( [13-Dec-2009] $) $( [1-Sep-1999] $)
  $}

  $( ` x ` is not free in ` E. x e. A ph ` . $)
  hbre1 $p |- ( E. x e. A ph -> A. x E. x e. A ph ) $=
    ( cv wcel wa wex wal wrex hbe1 df-rex albii 3imtr4i ) BDCEAFZBGZOBHABCIZPBH
    NBJABCKZPOBQLM $.
    $( [19-Mar-1997] $)

  ${
    $d x y z $.  $d y z A $.  $d z B $.
    $( Triple restricted universal quantification. $)
    r3al $p |- ( A. x e. A A. y e. B A. z e. C ph <->
               A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ) $=
      ( cv wcel wa wi wal wral w3a df-ral r2al ralbii 3anass imbi1i impexp 
      bitri albii 19.21v 3bitr4i ) CHFIZDHGIZJZAKZDLZCLZBEMBHEIZUJKZBLADGMCFMZB
      EMUKUEUFNZAKZDLZCLZBLUJBEOUMUJBEACDFGPQUQULBUQUKUIKZCLULUPURCUPUKUHKZDLUR
      UOUSDUOUKUGJZAKUSUNUTAUKUEUFRSUKUGATUAUBUKUHDUCUAUBUKUICUCUAUBUD $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted existential quantification. $)
    r2ex $p |- ( E. x e. A E. y e. B ph <->
               E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) $=
      ( wrex cv wcel wa wex df-rex 19.42v anass exbii anbi2i 3bitr4i bitr4i ) 
      ACEFZBDFBGDHZRIZBJSCGEHZIAIZCJZBJRBDKUCTBSUAAIZIZCJSUDCJZIUCTSUDCLUBUECSU
      AAMNRUFSACEKOPNQ $.
      $( [11-Nov-1995] $)
  $}

  $( Universal quantification implies restricted quantification. $)
  alral $p |- ( A. x ph -> A. x e. A ph ) $=
    ( wal cv wcel wi wral ax-1 alimi df-ral sylibr ) ABDBECFZAGZBDABCHANBAMIJAB
    CKL $.
    $( [20-Oct-2006] $)

  $( Restricted existence implies existence. $)
  rexex $p |- ( E. x e. A ph -> E. x ph ) $=
    ( wrex cv wcel wa wex df-rex simpr eximi sylbi ) ABCDBECFZAGZBHABHABCINABMA
    JKL $.
    $( [11-Nov-1995] $)

  $( Restricted specialization. $)
  ra4 $p |- ( A. x e. A ph -> ( x e. A -> ph ) ) $=
    ( wral cv wcel wi wal df-ral ax-4 sylbi ) ABCDBECFAGZBHLABCILBJK $.
    $( [17-Oct-1996] $)

  $( Restricted specialization. $)
  ra4e $p |- ( ( x e. A /\ ph ) -> E. x e. A ph ) $=
    ( cv wcel wa wex wrex 19.8a df-rex sylibr ) BDCEAFZLBGABCHLBIABCJK $.
    $( [12-Oct-1999] $)

  $( Restricted specialization. $)
  ra42 $p |- ( A. x e. A A. y e. B ph -> ( ( x e. A /\ y e. B ) -> ph ) ) $=
    ( wral cv wcel wi ra4 syl6 imp3a ) ACEFZBDFZBGDHZCGEHZANOMPAIMBDJACEJKL $.
    $( [11-Feb-1997] $)

  ${
    rspec.1 $e |- A. x e. A ph $.
    $( Specialization rule for restricted quantification. $)
    rspec $p |- ( x e. A -> ph ) $=
      ( wral cv wcel wi ra4 ax-mp ) ABCEBFCGAHDABCIJ $.
      $( [19-Nov-1994] $)
  $}

  ${
    rgen.1 $e |- ( x e. A -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen $p |- A. x e. A ph $=
      ( wral cv wcel wi df-ral mpgbir ) ABCEBFCGAHBABCIDJ $.
      $( [19-Nov-1994] $)
  $}

  ${
    $d y z A $.  $d x z $.
    rgen2a.1 $e |- ( ( x e. A /\ y e. A ) -> ph ) $.
    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    rgen2a $p |- A. x e. A A. y e. A ph $=
      ( vz wral cv wcel wi wal wceq ex eleq1 imbi1d mpbiri pm2.43d alimi a1d 
      wn ax-17 dvelim syl6 pm2.61i df-ral sylibr rgen ) ACDGZBDBHZDIZCHZDIZAJZC
      KZUHUKUILZCKZUJUNJUPUNUJUOUMCUOULAUOULUMJUJUMJUJULAEMZUOULUJUMUKUIDNOPQRS
      UPTUJUJCKUNFHZDIZUJCBFUSCUAURUIDNUBUJUMCUQRUCUDACDUEUFUG $.
      $( [25-May-2011] $) $( [23-Nov-1994] $)
  $}

  ${
    mprg.1 $e |- ( A. x e. A ph -> ps ) $.
    mprg.2 $e |- ( x e. A -> ph ) $.
    $( Modus ponens combined with restricted generalization. $)
    mprg $p |- ps $=
      ( wral rgen ax-mp ) ACDGBACDFHEI $.
      $( [10-Aug-2004] $)
  $}

  ${
    mprgbir.1 $e |- ( ph <-> A. x e. A ps ) $.
    mprgbir.2 $e |- ( x e. A -> ps ) $.
    $( Modus ponens on biconditional combined with restricted
       generalization. $)
    mprgbir $p |- ph $=
      ( wral rgen mpbir ) ABCDGBCDFHEI $.
      $( [21-Mar-2004] $)
  $}

  $( Distribution of restricted quantification over implication. $)
  ralim $p |- ( A. x e. A ( ph -> ps ) ->
               ( A. x e. A ph -> A. x e. A ps ) ) $=
    ( wi wral cv wcel wal df-ral ax-2 al2imi sylbi 3imtr4g ) ABEZCDFZCGDHZAEZCI
    ZQBEZCIZACDFBCDFPQOEZCISUAEOCDJUBRTCQABKLMACDJBCDJN $.
    $( [9-Feb-1997] $)

  ${
    ralimi2.1 $e |- ( ( x e. A -> ph ) -> ( x e. B -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimi2 $p |- ( A. x e. A ph -> A. x e. B ps ) $=
      ( cv wcel wi wal wral alimi df-ral 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [22-Feb-2004] $)
  $}

  ${
    ralimia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimia $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel a2i ralimi2 ) ABCDDCFDGABEHI $.
      $( [19-Jul-1996] $)
  $}

  ${
    ralimiaa.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimiaa $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel ex ralimia ) ABCDCFDGABEHI $.
      $( [4-Aug-2007] $)
  $}

  ${
    ralimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent, with strong
       hypothesis. $)
    ralimi $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( wi cv wcel a1i ralimia ) ABCDABFCGDHEIJ $.
      $( [4-Mar-1997] $)
  $}

  ${
    ral2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent,
       with a strong hypothesis. $)
    ral2imi $p |- ( A. x e. A ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wral wi ralimi ralim syl ) ADEGBCHZDEGBDEGCDEGHALDEFIBCDEJK $.
      $( [19-Dec-2006] $)
  $}

  ${
    ralimdaa.1 $e |- ( ph -> A. x ph ) $.
    ralimdaa.2 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdaa $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral ex a2d alimd df-ral 3imtr4g ) ADHEIZBJZDKRCJZDKBDEL
      CDELASTDFARBCARBCJGMNOBDEPCDEPQ $.
      $( [22-Sep-2003] $)
  $}

  ${
    $d x ph $.
    ralimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdva $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( ax-17 ralimdaa ) ABCDEADGFH $.
      $( [22-May-1999] $)
  $}

  ${
    $d x ph $.
    ralimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdv $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wi cv wcel adantr ralimdva ) ABCDEABCGDHEIFJK $.
      $( [8-Oct-2003] $)
  $}

  ${
    $d x ph $.
    ralimdv2.1 $e |- ( ph -> ( ( x e. A -> ps ) -> ( x e. B -> ch ) ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimdv2 $p |- ( ph -> ( A. x e. A ps -> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral alimdv df-ral 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [1-Feb-2005] $)
  $}

  ${
    r19.21ai.1 $e |- ( ph -> A. x ph ) $.
    r19.21ai.2 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21ai $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel wi wal wral 19.21ai df-ral sylibr ) ACGDHBIZCJBCDKAOCEFLBCDMN 
      $.
      $( [10-Oct-1999] $)
  $}

  ${
    $d x ph $.
    r19.21aiv.1 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21aiv $p |- ( ph -> A. x e. A ps ) $=
      ( ax-17 r19.21ai ) ABCDACFEG $.
      $( [22-Nov-1994] $)
  $}

  ${
    $d x ph $.
    r19.21aiva.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21aiva $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel ex r19.21aiv ) ABCDACFDGBEHI $.
      $( [2-Jan-2006] $)
  $}

  ${
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers (closed
       theorem version). $)
    r19.21t $p |- ( A. x ( ph -> A. x ph ) ->
             ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) $=
      ( wal wi cv wcel wral 19.21t bi2.04 albii syl5bb df-ral imbi2i 3bitr4g ) 
      AACEFCEZCGDHZABFZFZCEZARBFZCEZFZSCDIABCDIZFQAUBFZCEUDUAAUBCJTUFCRABKLMSCD
      NUEUCABCDNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d x ph $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.21v $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( wal wi wral wb r19.21t ax-17 mpg ) AACEFABFCDGABCDGFHCABCDIACJK $.
      $( [30-May-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    r19.21ad.1 $e |- ( ph -> A. x ph ) $.
    r19.21ad.2 $e |- ( ps -> A. x ps ) $.
    r19.21ad.3 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21ad $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral 19.21ad df-ral syl6ibr ) ABDIEJCKZDLCDEMABQDFGHNCDE
      OP $.
      $( [16-Feb-2004] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    r19.21adv.1 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21adv $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( ax-17 r19.21ad ) ABCDEADGBDGFH $.
      $( [27-May-1998] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    r19.21adva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21adva $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi ex com23 r19.21adv ) ABCDEADGEHZBCAMBCIFJKL $.
      $( [2-Feb-2008] $)
  $}

  ${
    $d x y ph $.  $d y A $.
    r19.21aivv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    r19.21aivv $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( wral cv wcel exp3a r19.21adv r19.21aiv ) ABDFHCEACIEJZBDFANDIFJBGKLM $.
      $( [24-Jul-2004] $)
  $}

  ${
    $d ph x y $.  $d A y $.
    r19.21aivva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    r19.21aivva $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( cv wcel wa ex r19.21aivv ) ABCDEFACHEIDHFIJBGKL $.
      $( [19-Jun-2011] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    r19.21advv.1 $e |- ( ph -> ( ps -> ( ( x e. A /\ y e. B ) -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    r19.21advv $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( wral wa cv wcel wi imp r19.21aivv ex ) ABCEGIDFIABJCDEFGABDKFLEKGLJCMHN
      OP $.
      $( [1-Jun-2005] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    r19.21advva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    r19.21advva $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( cv wcel wa wi ex com23 r19.21advv ) ABCDEFGADIFJEIGJKZBCAPBCLHMNO $.
      $( [2-Feb-2008] $)
  $}

  ${
    $d x y $.  $d y A $.
    rgen2.1 $e |- ( ( x e. A /\ y e. B ) -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen2 $p |- A. x e. A A. y e. B ph $=
      ( wral cv wcel r19.21aiva rgen ) ACEGBDBHDIACEFJK $.
      $( [30-May-1999] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    rgen3.1 $e |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen3 $p |- A. x e. A A. y e. B A. z e. C ph $=
      ( wral cv wcel wa 3expa r19.21aiva rgen2 ) ADGIBCEFBJEKZCJFKZLADGPQDJGKAH
      MNO $.
      $( [12-Jan-2008] $)
  $}

  ${
    r19.21bi.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21bi $p |- ( ( ph /\ x e. A ) -> ps ) $=
      ( cv wcel wi wral wal df-ral sylib 19.21bi imp ) ACFDGZBAOBHZCABCDIPCJEBC
      DKLMN $.
      $( [20-Nov-1994] $)
  $}

  ${
    rspec2.1 $e |- A. x e. A A. y e. B ph $.
    $( Specialization rule for restricted quantification. $)
    rspec2 $p |- ( ( x e. A /\ y e. B ) -> ph ) $=
      ( cv wcel wral rspec r19.21bi ) BGDHACEACEIBDFJK $.
      $( [20-Nov-1994] $)
  $}

  ${
    rspec3.1 $e |- A. x e. A A. y e. B A. z e. C ph $.
    $( Specialization rule for restricted quantification. $)
    rspec3 $p |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $=
      ( cv wcel wa wral rspec2 r19.21bi 3impa ) BIEJZCIFJZDIGJAPQKADGADGLBCEFHM
      NO $.
      $( [20-Nov-1994] $)
  $}

  ${
    r19.21be.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21be $p |- A. x e. A ( ph -> ps ) $=
      ( wi cv wcel r19.21bi expcom rgen ) ABFCDACGDHBABCDEIJK $.
      $( [21-Nov-1994] $)
  $}

  ${
    nrex.1 $e |- ( x e. A -> -. ps ) $.
    $( Inference adding restricted existential quantifier to negated wff. $)
    nrex $p |- -. E. x e. A ps $=
      ( wn wral wrex rgen ralnex mpbi ) AEZBCFABCGEKBCDHABCIJ $.
      $( [16-Oct-2003] $)
  $}

  ${
    $d x ph $.
    nrexdv.1 $e |- ( ( ph /\ x e. A ) -> -. ps ) $.
    $( Deduction adding restricted existential quantifier to negated wff. $)
    nrexdv $p |- ( ph -> -. E. x e. A ps ) $=
      ( wn wral wrex r19.21aiva ralnex sylib ) ABFZCDGBCDHFALCDEIBCDJK $.
      $( [16-Oct-2003] $)
  $}

  $( Theorem 19.22 of [Margaris] p. 90.  (Restricted quantifier version.)  (The
     proof was shortened by Andrew Salmon, 30-May-2011.) $)
  rexim $p |- ( A. x e. A ( ph -> ps ) ->
               ( E. x e. A ph -> E. x e. A ps ) ) $=
    ( wi wral wn wrex con3 ral2imi con3d ralnex con2bii 3imtr4g ) ABEZCDFZAGZCD
    FZGBGZCDFZGACDHZBCDHZPTROSQCDABIJKRUAACDLMTUBBCDLMN $.
    $( [30-May-2011] $) $( [22-Nov-1994] $)

  ${
    reximia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    reximia $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi wrex rexim mprg ) ABFACDGBCDGFCDABCDHEI $.
      $( [10-Feb-1997] $)
  $}

  ${
    reximi2.1 $e |- ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) $.
    $( Inference quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximi2 $p |- ( E. x e. A ph -> E. x e. B ps ) $=
      ( cv wcel wa wex wrex eximi df-rex 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [8-Nov-2004] $)
  $}

  ${
    reximi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    reximi $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi cv wcel a1i reximia ) ABCDABFCGDHEIJ $.
      $( [18-Oct-1996] $)
  $}

  ${
    reximdai.1 $e |- ( ph -> A. x ph ) $.
    reximdai.2 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    reximdai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi wral wrex r19.21ai rexim syl ) ABCHZDEIBDEJCDEJHANDEFGKBCDELM $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x ph $.
    reximdv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) -> ( x e. B /\ ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdv2 $p |- ( ph -> ( E. x e. A ps -> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex eximdv df-rex 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [17-Sep-2003] $)
  $}

  ${
    $d x ph $.
    reximdvai.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdvai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( ax-17 reximdai ) ABCDEADGFH $.
      $( [14-Nov-2002] $)
  $}

  ${
    $d x ph $.
    reximdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version with strong hypothesis.) $)
    reximdv $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi cv wcel a1d reximdvai ) ABCDEABCGDHEIFJK $.
      $( [24-Jun-1998] $)
  $}

  ${
    $d x ph $.
    reximdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdva $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( cv wcel wi ex reximdvai ) ABCDEADGEHBCIFJK $.
      $( [22-May-1999] $)
  $}

  ${
    $d x y $.  $d y A $.  $d x B $.
    $( Theorem 19.12 of [Margaris] p. 89 with restricted quantifiers.  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.12 $p |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) $=
      ( wral wrex cv wcel ax-17 hbra1 hbrex ax-1 r19.21ai ra4 com12 reximdv 
      ralimia syl ) ACEFZBDGZUACEFABDGZCEFUAUACETCBDBHDICJACEKLUACHEIZMNUAUBCEU
      CTABDTUCAACEOPQRS $.
      $( [30-May-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    r19.23.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.23 $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( cv wcel wi wal wa wex wral wrex impexp albii 19.23 bitr3i df-ral 
      df-rex imbi1i 3bitr4i ) CFDGZABHZHZCIZUBAJZCKZBHZUCCDLACDMZBHUEUFBHZCIUHU
      JUDCUBABNOUFBCEPQUCCDRUIUGBACDSTUA $.
      $( [25-May-2011] $) $( [22-Oct-2010] $)
  $}

  ${
    $d x ps $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.23v $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( ax-17 r19.23 ) ABCDBCEF $.
      $( [31-Aug-1999] $)
  $}

  ${
    r19.23ai.1 $e |- ( ps -> A. x ps ) $.
    r19.23ai.2 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (The proof was shortened by Andrew Salmon,
       30-May-2011.) $)
    r19.23ai $p |- ( E. x e. A ph -> ps ) $=
      ( wi wral wrex rgen r19.23 mpbi ) ABGZCDHACDIBGMCDFJABCDEKL $.
      $( [30-May-2011] $) $( [30-Nov-2003] $)
  $}

  ${
    $d x ps $.
    r19.23aiv.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.23aiv $p |- ( E. x e. A ph -> ps ) $=
      ( ax-17 r19.23ai ) ABCDBCFEG $.
      $( [20-Nov-1994] $)
  $}

  ${
    $d x ps $.
    r19.23aiva.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    r19.23aiva $p |- ( E. x e. A ph -> ps ) $=
      ( cv wcel ex r19.23aiv ) ABCDCFDGABEHI $.
      $( [18-Dec-2006] $)
  $}

  ${
    r19.23ad.1 $e |- ( ph -> A. x ph ) $.
    r19.23ad.2 $e |- ( ch -> A. x ch ) $.
    r19.23ad.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (The proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.23ad $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex r19.21ai r19.23 sylib ) ABCIZDEJBDEKCIAODEFHLBCDEGMN $.
      $( [30-May-2011] $) $( [27-May-1998] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    r19.23adv.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (The proof was shortened by Eric Schmidt, 22-Dec-2006.) $)
    r19.23adv $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( ax-17 r19.23ad ) ABCDEADGCDGFH $.
      $( [22-Dec-2006] $) $( [14-Nov-2002] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    r19.23adva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    r19.23adva $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel wi ex r19.23adv ) ABCDEADGEHBCIFJK $.
      $( [20-Jan-2007] $)
  $}

  ${
    $d x y ps $.  $d y A $.
    r19.23aivv.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    r19.23aivv $p |- ( E. x e. A E. y e. B ph -> ps ) $=
      ( wrex cv wcel r19.23adva r19.23aiv ) ADFHBCECIEJABDFGKL $.
      $( [17-Feb-2004] $)
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    r19.23advv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.23advv $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( wrex cv wcel wa wi expdimp r19.23adv r19.23adva ) ABEGICDFADJFKZLBCEGAQ
      EJGKBCMHNOP $.
      $( [22-Jul-2004] $)
  $}

  $( Theorem 19.26 of [Margaris] p. 90 with restricted quantifiers.  (The proof
     was shortened by Andrew Salmon, 30-May-2011.) $)
  r19.26 $p |- ( A. x e. A ( ph /\ ps ) <->
               ( A. x e. A ph /\ A. x e. A ps ) ) $=
    ( wa wral simpl ralimi simpr jca pm3.2 ral2imi imp impbii ) ABEZCDFZACDFZBC
    DFZEPQROACDABGHOBCDABIHJQRPABOCDABKLMN $.
    $( [30-May-2011] $) $( [28-Jan-1997] $)

  $( Theorem 19.26 of [Margaris] p. 90 with 2 restricted quantifiers. $)
  r19.26-2 $p |- ( A. x e. A A. y e. B ( ph /\ ps ) <->
               ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) $=
    ( wa wral r19.26 ralbii bitri ) ABGDFHZCEHADFHZBDFHZGZCEHMCEHNCEHGLOCEABDFI
    JMNCEIK $.
    $( [10-Aug-2004] $)

  $( Theorem 19.26 of [Margaris] p. 90 with mixed quantifiers. $)
  r19.26m $p |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <->
               ( A. x e. A ph /\ A. x e. B ps ) ) $=
    ( cv wcel wi wa wal wral 19.26 df-ral anbi12i bitr4i ) CFZDGAHZPEGBHZICJQCJ
    ZRCJZIACDKZBCEKZIQRCLUASUBTACDMBCEMNO $.
    $( [22-Feb-2004] $)

  $( Distribute a restricted universal quantifier over a biconditional.
     Theorem 19.15 of [Margaris] p. 90 with restricted quantification. $)
  ralbi $p |- ( A. x e. A ( ph <-> ps ) ->
               ( A. x e. A ph <-> A. x e. A ps ) ) $=
    ( wb wral hbra1 cv wcel ra4 imp ralbida ) ABEZCDFZABCDMCDGNCHDIMMCDJKL $.
    $( [6-Oct-2003] $)

  $( Split a biconditional and distribute quantifier. $)
  ralbiim $p |- ( A. x e. A ( ph <-> ps ) <->
             ( A. x e. A ( ph -> ps ) /\ A. x e. A ( ps -> ph ) ) ) $=
    ( wb wral wi wa dfbi2 ralbii r19.26 bitri ) ABEZCDFABGZBAGZHZCDFNCDFOCDFHMP
    CDABIJNOCDKL $.
    $( [3-Jun-2012] $)

  ${
    $d x ps $.
    $( Restricted version of one direction of Theorem 19.27 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.27av $p |- ( ( A. x e. A ph /\ ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa cv wcel ax-1 r19.21aiv anim2i r19.26 sylibr ) ACDEZBFNBCDEZFABF
      CDEBONBBCDBCGDHIJKABCDLM $.
      $( [30-May-2011] $) $( [3-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.28 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.28av $p |- ( ( ph /\ A. x e. A ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa r19.27av ancom ralbii 3imtr4i ) BCDEZAFBAFZCDEAKFABFZCDEBACDGAK
      HMLCDABHIJ $.
      $( [2-Apr-2004] $)
  $}

  $( Theorem 19.29 of [Margaris] p. 90 with restricted quantifiers.  (The proof
     was shortened by Andrew Salmon, 30-May-2011.) $)
  r19.29 $p |- ( ( A. x e. A ph /\ E. x e. A ps ) ->
               E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa wi pm3.2 ralimi rexim syl imp ) ACDEZBCDFZABGZCDFZNBPHZCDEOQ
    HARCDABIJBPCDKLM $.
    $( [30-May-2011] $) $( [31-Aug-1999] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with restricted
     quantifiers. $)
  r19.29r $p |- ( ( E. x e. A ph /\ A. x e. A ps ) ->
                E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa r19.29 ancom rexbii 3imtr4i ) BCDEZACDFZGBAGZCDFMLGABGZCDFBA
    CDHMLIONCDABIJK $.
    $( [31-Aug-1999] $)

  ${
    $d x ph $.
    $( Theorem 19.32 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.32v $p |- ( A. x e. A ( ph \/ ps ) <-> ( ph \/ A. x e. A ps ) ) $=
      ( wn wi wral wo r19.21v df-or ralbii 3bitr4i ) AEZBFZCDGMBCDGZFABHZCDGAOH
      MBCDIPNCDABJKAOJL $.
      $( [25-Nov-2003] $)
  $}

  $( Restricted quantifier version of Theorem 19.35 of [Margaris] p. 90. $)
  r19.35 $p |- ( E. x e. A ( ph -> ps ) <->
               ( A. x e. A ph -> E. x e. A ps ) ) $=
    ( wral wn wi wrex wa r19.26 annim ralbii df-an 3bitr3i con2bii dfrex2 
    imbi2i 3bitr4ri ) ACDEZBFZCDEZFZGZABGZFZCDEZFSBCDHZGUDCDHUFUCATIZCDESUAIUFU
    CFATCDJUHUECDABKLSUAMNOUGUBSBCDPQUDCDPR $.
    $( [20-Sep-2003] $)

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.36 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty. $)
    r19.36av $p |- ( E. x e. A ( ph -> ps ) -> ( A. x e. A ph -> ps ) ) $=
      ( wi wrex wral r19.35 cv wcel idd r19.23aiv imim2i sylbi ) ABECDFACDGZBCD
      FZEOBEABCDHPBOBBCDCIDJBKLMN $.
      $( [22-Oct-2003] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.37 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.37av $p |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) $=
      ( wi wrex wral r19.35 cv wcel ax-1 r19.21aiv imim1i sylbi ) ABECDFACDGZBC
      DFZEAPEABCDHAOPAACDACIDJKLMN $.
      $( [2-Apr-2004] $)
  $}

  $( Restricted quantifier version of Theorem 19.40 of [Margaris] p. 90. $)
  r19.40 $p |- ( E. x e. A ( ph /\ ps ) ->
               ( E. x e. A ph /\ E. x e. A ps ) ) $=
    ( wa wrex simpl reximi simpr jca ) ABEZCDFACDFBCDFKACDABGHKBCDABIHJ $.
    $( [2-Apr-2004] $)

  ${
    r19.41.1 $e |- ( ps -> A. x ps ) $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90. $)
    r19.41 $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( cv wcel wa wex wrex anass exbii 19.41 bitr3i df-rex anbi1i 3bitr4i ) CF
      DGZABHZHZCIZRAHZCIZBHZSCDJACDJZBHUAUBBHZCIUDUFTCRABKLUBBCEMNSCDOUEUCBACDO
      PQ $.
      $( [1-Nov-2010] $)
  $}

  ${
    $d x ps $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90. $)
    r19.41v $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( ax-17 r19.41 ) ABCDBCEF $.
      $( [17-Dec-2003] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of Theorem 19.42 of [Margaris] p. 90. $)
    r19.42v $p |- ( E. x e. A ( ph /\ ps ) <-> ( ph /\ E. x e. A ps ) ) $=
      ( wa wrex r19.41v ancom rexbii 3bitr4i ) BAEZCDFBCDFZAEABEZCDFALEBACDGMKC
      DABHIALHJ $.
      $( [27-May-1998] $)
  $}

  $( Restricted version of Theorem 19.43 of [Margaris] p. 90.  (The proof was
     shortened by Andrew Salmon, 30-May-2011.) $)
  r19.43 $p |- ( E. x e. A ( ph \/ ps ) <->
               ( E. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wrex wral wo r19.35 df-or rexbii ralnex imbi1i bitr4i 3bitr4i ) AEZ
    BFZCDGQCDHZBCDGZFZABIZCDGACDGZTIZQBCDJUBRCDABKLUDUCEZTFUAUCTKSUETACDMNOP $.
    $( [30-May-2011] $) $( [27-May-1998] $)

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.44 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty. $)
    r19.44av $p |- ( E. x e. A ( ph \/ ps ) -> ( E. x e. A ph \/ ps ) ) $=
      ( wo wrex r19.43 cv wcel idd r19.23aiv orim2i sylbi ) ABECDFACDFZBCDFZENB
      EABCDGOBNBBCDCHDIBJKLM $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.45 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.45av $p |- ( E. x e. A ( ph \/ ps ) -> ( ph \/ E. x e. A ps ) ) $=
      ( wo wrex r19.43 cv wcel idd r19.23aiv orim1i sylbi ) ABECDFACDFZBCDFZEAO
      EABCDGNAOAACDCHDIAJKLM $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers. $)
    ralcom $p |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) $=
      ( cv wcel wa wi wal wral ancom imbi1i 2albii alcom bitri r2al 3bitr4i ) 
      BFDGZCFEGZHZAIZCJBJZTSHZAIZBJCJZACEKBDKABDKCEKUCUECJBJUFUBUEBCUAUDASTLMNU
      EBCOPABCDEQACBEDQR $.
      $( [13-Oct-1999] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers. $)
    rexcom $p |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) $=
      ( cv wcel wa wex wrex ancom anbi1i 2exbii excom bitri r2ex 3bitr4i ) BFDG
      ZCFEGZHZAHZCIBIZSRHZAHZBICIZACEJBDJABDJCEJUBUDCIBIUEUAUDBCTUCARSKLMUDBCNO
      ABCDEPACBEDPQ $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d y z A $.  $d x z A $.
    $( Commutation of restricted quantifiers.  Note that ` x ` and ` y `
       needn't be distinct (this makes the proof longer but illustrates the use
       of ~ dvelim ).  (The proof was shortened by Andrew Salmon,
       30-May-2011.) $)
    ralcom2 $p |- ( A. x e. A A. y e. A ph -> A. y e. A A. x e. A ph ) $=
      ( vz cv wcel wi wal wral wceq wb eleq1 a4s imbi1d dral1 bicomd imbi12d 
      biimpd wn hbnae ax-17 dvelim nalequcoms hba1 a1i hbimd hbald ax-4 imim2i 
      com23 al2imi syl9 sylsyld pm2.61i df-ral imbi2i albii bitri 3imtr4i ) BFZ
      DGZCFZDGZAHZCIZHZBIZVDVBAHZBIZHZCIZACDJZBDJZABDJZCDJZVAVCKZBIZVHVLHVRVHVL
      VGVKBCVRVBVDVFVJVQVBVDLBVAVCDMNZVRVJVFVIVEBCVRVBVDAVSOPQRPSVRTZVTCIVHVHCI
      VLBCCUAZVTVGCBBCBUAVTVBVFCWAVBVBCIHCBEFZDGZVBCBEWCCUBWBVADMUCUDVFVFCIHVTV
      ECUEUFUGUHVTVHVKCVTVDVDBIVHVJWCVDBCEWCBUBWBVCDMUCVGVDVIBVGVBVDAVFVEVBVECU
      IUJUKULUMULUNUOVNVBVMHZBIVHVMBDUPWDVGBVMVFVBACDUPUQURUSVPVDVOHZCIVLVOCDUP
      WEVKCVOVJVDABDUPUQURUSUT $.
      $( [8-Jun-2011] $) $( [24-Nov-1994] $)
  $}

  ${
    $( A commutative law for restricted quantifiers that swaps the domain of
       the restriction. $)
    ralcom3 $p |- ( A. x e. A ( x e. B -> ph ) <->
                    A. x e. B ( x e. A -> ph ) ) $=
      ( cv wcel wi wral pm2.04 ralimi2 impbii ) BEZDFZAGZBCHLCFZAGZBDHNPBCDOMAI
      JPNBDCMOAIJK $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d y A $.  $d x B $.  $d x y $.
    reean.1 $e |- ( ph -> A. y ph ) $.
    reean.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers.  (The proof was shortened by Andrew
       Salmon, 30-May-2011.) $)
    reean $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( cv wcel wa wex wrex an4 2exbii ax-17 hban eean bitri r2ex df-rex 
      anbi12i 3bitr4i ) CIEJZDIFJZKABKZKZDLCLZUDAKZCLZUEBKZDLZKZUFDFMCEMACEMZBD
      FMZKUHUIUKKZDLCLUMUGUPCDUDUEABNOUIUKCDUDADUDDPGQUEBCUECPHQRSUFCDEFTUNUJUO
      ULACEUABDFUAUBUC $.
      $( [30-May-2011] $) $( [27-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y $.  $d y A $.  $d x B $.
    $( Rearrange existential quantifiers. $)
    reeanv $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( ax-17 reean ) ABCDEFADGBCGH $.
      $( [9-May-1999] $)
  $}

  ${
    $d ph y $.  $d ps x $.  $d A y $.  $d B x $.  $d x y $.
    $( Distribute quantification over "or".  (Contributed by Jeff Madsen,
       19-Jun-2010.) $)
    2ralor $p |- ( A. x e. A A. y e. B ( ph \/ ps ) <->
                  ( A. x e. A ph \/ A. y e. B ps ) ) $=
      ( wo wral wn wa wrex reeanv ioran rexbii rexnal bitr3i bitri anbi12i 
      bitr4i 3bitr3i con4bii ) ABGZDFHZCEHZACEHZBDFHZGZAIZBIZJZDFKZCEKZUHCEKZUI
      DFKZJZUDIZUGIZUHUICDEFLULUCIZCEKUPUKURCEUKUBIZDFKURUSUJDFABMNUBDFOPNUCCEO
      QUOUEIZUFIZJUQUMUTUNVAACEOBDFORUEUFMSTUA $.
      $( [19-Jun-2010] $)
  $}

  ${
    hbreu.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbreu.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted uniqueness. $)
    hbreu $p |- ( E! y e. A ph -> A. x E! y e. A ph ) $=
      ( cv wcel wa weu wal wreu hban hbeu df-reu albii 3imtr4i ) CGDHZAIZCJZTBK
      ACDLZUABKSBCRABEFMNACDOZUATBUBPQ $.
      $( [11-Jun-2011] $) $( [30-Oct-2010] $)
  $}

  $( ` x ` is not free in ` E! x e. A ph ` . $)
  hbreu1 $p |- ( E! x e. A ph -> A. x E! x e. A ph ) $=
    ( cv wcel wa weu wal wreu hbeu1 df-reu albii 3imtr4i ) BDCEAFZBGZOBHABCIZPB
    HNBJABCKZPOBQLM $.
    $( [19-Mar-1997] $)

  $( An "identity" law of concretion for restricted abstraction.  Special case
     of Definition 2.1 of [Quine] p. 16. $)
  rabid $p |- ( x e. { x e. A | ph } <-> ( x e. A /\ ph ) ) $=
    ( cv wcel wa crab df-rab abeq2i ) BDCEAFBABCGABCHI $.
    $( [9-Oct-2003] $)

  ${
    $d x A $.
    $( An "identity" law for restricted class abstraction.  (The proof was
       shortened by Andrew Salmon, 30-May-2011.) $)
    rabid2 $p |- ( A = { x e. A | ph } <-> A. x e. A ph ) $=
      ( cv wcel wa cab wceq wi wal crab wral wb abeq2 pm4.71 albii bitr4i 
      df-rab eqeq2i df-ral 3bitr4i ) CBDCEZAFZBGZHZUBAIZBJZCABCKZHABCLUEUBUCMZB
      JUGUCBCNUFUIBUBAOPQUHUDCABCRSABCTUA $.
      $( [30-May-2011] $) $( [9-Oct-2003] $)
  $}

  $( Swap with a membership relation in a restricted class abstraction. $)
  rabswap $p |- { x e. A | x e. B } = { x e. B | x e. A } $=
    ( cv wcel wa cab crab ancom abbii df-rab 3eqtr4i ) ADZBEZMCEZFZAGONFZAGOABH
    NACHPQANOIJOABKNACKL $.
    $( [4-Jul-2005] $)

  ${
    $d x y $.
    $( The abstraction variable in a restricted class abstraction isn't
       free. $)
    hbrab1 $p |- ( y e. { x e. A | ph } -> A. x y e. { x e. A | ph } ) $=
      ( crab cv wcel wa cab df-rab hbab1 hbxfr ) BCABDEBFDGAHZBIABDJMBCKL $.
      $( [19-Mar-1997] $)
  $}

  ${
    $d x y $.  $d x z $.  $d z A $.
    hbrab.1 $e |- ( ph -> A. x ph ) $.
    hbrab.2 $e |- ( z e. A -> A. x z e. A ) $.
    $( A variable not free in a wff remains so in a restricted class
       abstraction.  (Unnecessary distinct variable restrictions were removed
       by Andrew Salmon, 11-Jul-2011.) $)
    hbrab $p |- ( z e. { y e. A | ph } -> A. x z e. { y e. A | ph } ) $=
      ( crab cv wcel wa cab df-rab hblem hban hbab hbxfr ) BDACEHCIEJZAKZCLACEM
      SBCDRABBDCEGNFOPQ $.
      $( [11-Jul-2011] $) $( [13-Oct-2003] $)
  $}

  ${
    $d x ph $.
    reubidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    reubidva $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( cv wcel wa weu wreu pm5.32da eubidv df-reu 3bitr4g ) ADGEHZBIZDJPCIZDJB
      DEKCDEKAQRDAPBCFLMBDENCDENO $.
      $( [13-Nov-2004] $)
  $}

  ${
    $d x ph $.
    reubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    reubidv $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( wb cv wcel adantr reubidva ) ABCDEABCGDHEIFJK $.
      $( [17-Oct-1996] $)
  $}

  ${
    reubiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule). $)
    reubiia $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( cv wcel wa weu wreu pm5.32i eubii df-reu 3bitr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
      $( [14-Nov-2004] $)
  $}

  ${
    reubii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule). $)
    reubii $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( wb cv wcel a1i reubiia ) ABCDABFCGDHEIJ $.
      $( [22-Oct-1999] $)
  $}

  ${
    $d y A $.  $d y B $.
    raleq1f.1 $e |- ( y e. A -> A. x y e. A ) $.
    raleq1f.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equality theorem for restricted universal quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    raleqf $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( wceq cv wcel wi wal wral hbeq eleq2 imbi1d albid df-ral 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)

    $( Equality theorem for restricted existential quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    rexeqf $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( wceq cv wcel wa wex wrex hbeq eleq2 anbi1d exbid df-rex 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [9-Oct-2003] $)

    $( Equality theorem for restricted uniqueness quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    reueq1f $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( wceq cv wcel wa weu wreu hbeq eleq2 anbi1d eubid df-reu 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted universal quantifier. $)
    raleq $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( vy cv wcel ax-17 raleqf ) ABECDEFZCGBHJDGBHI $.
      $( [16-Nov-1995] $)

    $( Equality theorem for restricted existential quantifier. $)
    rexeq $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( vy cv wcel ax-17 rexeqf ) ABECDEFZCGBHJDGBHI $.
      $( [29-Oct-1995] $)

    $( Equality theorem for restricted uniqueness quantifier. $)
    reueq1 $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( vy cv wcel ax-17 reueq1f ) ABECDEFZCGBHJDGBHI $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d A x $.  $d B x $.
    raleq1i.1 $e |- A = B $.
    $( Equality inference for restricted universal qualifier.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    raleqi $p |- ( A. x e. A ph <-> A. x e. B ph ) $=
      ( wceq wral wb raleq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [22-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    raleq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqdv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) $=
      ( wceq wral wb raleq syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [13-Nov-2005] $)

    $( Equality deduction for restricted existential quantifier. $)
    rexeqdv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) $=
      ( wceq wrex wb rexeq syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [14-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.
    raleqd.1 $e |- ( A = B -> ( ph <-> ps ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqbi1dv $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ps ) ) $=
      ( wceq wral raleq ralbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [16-Nov-1995] $)

    $( Equality deduction for restricted existential quantifier. $)
    rexeqbi1dv $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ps ) ) $=
      ( wceq wrex rexeq rexbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [18-Mar-1997] $)

    $( Equality deduction for restricted uniqueness quantifier. $)
    reueqd $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ps ) ) $=
      ( wceq wreu reueq1 reubidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    raleqbidv.1 $e |- ( ph -> A = B ) $.
    raleqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( wral raleqdv ralbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $) $( [6-Nov-2007] $)

    $( Equality deduction for restricted universal quantifier. $)
    rexeqbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( wrex rexeqdv rexbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $) $( [6-Nov-2007] $)
  $}

  ${
    $d z A w $.  $d w x $.  $d w y $.  $d w z $.  $d w ps $.  $d w ph $.
    cbvralf.1 $e |- ( z e. A -> A. x z e. A ) $.
    cbvralf.2 $e |- ( z e. A -> A. y z e. A ) $.
    cbvralf.3 $e |- ( ph -> A. y ph ) $.
    cbvralf.4 $e |- ( ps -> A. x ps ) $.
    cbvralf.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    cbvralf $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vw cv wcel wi wal wral wsbc ax-17 hblem hbs1 hbim wceq eleq1 sbequ12 
      imbi12d cbval hbsb sbequ sbie syl6bb bitri df-ral 3bitr4i ) CMZFNZAOZCPZD
      MZFNZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUC
      UPVDAVEUOVCFUDACLUEUFUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUCZVDUTVEBVCUSFU
      DVGVEACUSRBALDCUIABCDJKUJUKUFUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)

    $( Rule used to change bound variables, using implicit substitition.
       (Contributed by FL, 11-Jul-2011.)  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexf $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( vw cv wcel wa wex wrex wsbc ax-17 hblem hbs1 hban wceq eleq1 sbequ12 
      anbi12d cbvex hbsb sbequ sbie syl6bb bitri df-rex 3bitr4i ) CMZFNZAOZCPZD
      MZFNZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUC
      UPVDAVEUOVCFUDACLUEUFUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUCZVDUTVEBVCUSFU
      DVGVEACUSRBALDCUIABCDJKUJUKUFUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [27-Apr-2008] $)
  $}

  ${
    $d x z A $.  $d y z A $.
    cbvral.1 $e |- ( ph -> A. y ph ) $.
    cbvral.2 $e |- ( ps -> A. x ps ) $.
    cbvral.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvral $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vz cv wcel ax-17 cbvralf ) ABCDIEIJEKZCLNDLFGHM $.
      $( [11-Jul-2011] $) $( [31-Jul-2003] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    cbvrex $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( vz cv wcel ax-17 cbvrexf ) ABCDIEIJEKZCLNDLFGHM $.
      $( [11-Jul-2011] $) $( [31-Jul-2003] $)
  $}

  ${
    $d z y ph $.  $d z x ps $.  $d z x A $.  $d z y A $.
    cbvralv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a restricted universal quantifier using
       implicit substitution. $)
    cbvralv $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( ax-17 cbvral ) ABCDEADGBCGFH $.
      $( [11-Jul-2011] $) $( [28-Jan-1997] $)

    $( Change the bound variable of a restricted existential quantifier using
       implicit substitution. $)
    cbvrexv $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( ax-17 cbvrex ) ABCDEADGBCGFH $.
      $( [11-Jul-2011] $) $( [2-Jun-1998] $)

    $( Change the bound variable of a restricted uniqueness quantifier using
       implicit substitution.  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvreuv $p |- ( E! x e. A ph <-> E! y e. A ps ) $=
      ( vz cv wcel wa weu wreu wsbc ax-17 sb8eu sban eubii clelsb3 anbi1i hbsb 
      hban wceq eleq1 sbequ sbie syl6bb anbi12d cbveu bitri 3bitri df-reu 
      3bitr4i ) CHEIZAJZCKZDHZEIZBJZDKZACELBDELUOUNCGHZMZGKUMCUTMZACUTMZJZGKZUS
      UNCGUNGNOVAVDGUMACGPQVEUTEIZVCJZGKUSVDVGGVBVFVCGCERSQVGURGDVFVCDVFDNACGDA
      DNTUAURGNUTUPUBZVFUQVCBUTUPEUCVHVCACUPMBAGDCUDABCDBCNFUEUFUGUHUIUJACEUKBD
      EUKUL $.
      $( [11-Jul-2011] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x A $.  $d z A $.  $d x y B $.  $d z y B $.  $d w B $.  $d z ph $.
    $d y ps $.  $d x ch $.  $d w ch $.
    cbvral2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvral2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution. $)
    cbvral2v $p |- ( A. x e. A A. y e. B ph <-> A. z e. A A. w e. B ps ) $=
      ( wral cv wceq ralbidv cbvralv ralbii bitri ) AEILZDHLCEILZFHLBGILZFHLSTD
      FHDMFMNACEIJOPTUAFHCBEGIKPQR $.
      $( [11-Jul-2011] $) $( [10-Aug-2004] $)
  $}

  ${
    $d w ph $.  $d z ps $.  $d x ch $.  $d v ch $.  $d y u th $.  $d x A $.
    $d w A $.  $d x y B $.  $d w y B $.  $d v B $.  $d x y z C $.
    $d w y z C $.  $d v z C $.  $d z y C $.  $d z C $.  $d u C $.
    cbvral3v.1 $e |- ( x = w -> ( ph <-> ch ) ) $.
    cbvral3v.2 $e |- ( y = v -> ( ch <-> th ) ) $.
    cbvral3v.3 $e |- ( z = u -> ( th <-> ps ) ) $.
    $( Change bound variables of triple restricted universal quantification,
       using implicit substitution. $)
    cbvral3v $p |- ( A. x e. A A. y e. B A. z e. C ph <->
                     A. w e. A A. v e. B A. u e. C ps ) $=
      ( wral cv wceq 2ralbidv cbvralv cbvral2v ralbii bitri ) AGMQFLQZEKQCGMQFL
      QZHKQBJMQILQZHKQUEUFEHKERHRSACFGLMNTUAUFUGHKCBDFGIJLMOPUBUCUD $.
      $( [11-Jul-2011] $) $( [10-May-2005] $)
  $}

  ${
    rabbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (inference
       rule). $)
    rabbiia $p |- { x e. A | ph } = { x e. A | ps } $=
      ( cv wcel wa cab crab pm5.32i abbii df-rab 3eqtr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
      $( [22-May-1999] $)
  $}

  ${
    $d x ph $.
    rabbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule). $)
    rabbidva $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( cv wcel wa cab crab pm5.32da abbidv df-rab 3eqtr4g ) ADGEHZBIZDJPCIZDJB
      DEKCDEKAQRDAPBCFLMBDENCDENO $.
      $( [7-Feb-2007] $) $( [28-Nov-2003] $)
  $}

  ${
    $d x ph $.
    rabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule). $)
    rabbidv $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb cv wcel adantr rabbidva ) ABCDEABCGDHEIFJK $.
      $( [10-Feb-1995] $)
  $}

  ${
    $d y A $.  $d y B $.
    rabeqf.1 $e |- ( y e. A -> A. x y e. A ) $.
    rabeqf.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equality theorem for restricted class abstractions, with bound-variable
       hypotheses instead of distinct variable restrictions. $)
    rabeqf $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( wceq cv wcel wa cab crab hbeq eleq2 anbi1d abbid df-rab 3eqtr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted class abstractions. $)
    rabeq $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( vy cv wcel ax-17 rabeqf ) ABECDEFZCGBHJDGBHI $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d A x $.  $d B x $.  $d ph x $.
    rabeqbidv.1 $e |- ( ph -> A = B ) $.
    rabeqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality of restricted class abstractions.  (Contributed by Jeff Madsen,
       1-Dec-2009.) $)
    rabeqbidv $p |- ( ph -> { x e. A | ps } = { x e. B | ch } ) $=
      ( crab wceq rabeq syl rabbidv eqtrd ) ABDEIZBDFIZCDFIAEFJOPJGBDEFKLABCDFH
      MN $.
      $( [15-Sep-2011] $) $( [1-Dec-2009] $)
  $}

  ${
    rabeqi.1 $e |- A = { x e. B | ph } $.
    $( Inference rule from equality of a class variable and a restricted class
       abstraction. $)
    rabeq2i $p |- ( x e. A <-> ( x e. B /\ ph ) ) $=
      ( cv wcel crab wa eleq2i rabid bitri ) BFZCGMABDHZGMDGAICNMEJABDKL $.
      $( [16-Feb-2004] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The universal class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the universal class. $)
  $c _V $. $( Letter V (for the universal class) $)

  $( Extend class notation to include the universal class symbol. $)
  cvv $a class _V $.

  ${
    $d z x $.  $d z y $.
    $( Soundness justification theorem for ~ df-v .  (Contributed by Rodolfo
       Medina, 27-Apr-2010.) $)
    vjust $p |- { x | x = x } = { y | y = y } $=
      ( vz cv wceq cab wsbc wcel equid sbt 2th df-clab 3bitr4i eqriv ) CADZOEZA
      FZBDZREZBFZPACDZGZSBUAGZUAQHUATHUBUCPACAIJSBCBIJKPCALSCBLMN $.
      $( [27-Apr-2010] $)
  $}

  $( Define the universal class.  Definition 5.20 of [TakeutiZaring] p. 21. $)
  df-v $a |- _V = { x | x = x } $.

  $( All set variables are sets (see ~ isset ).  Theorem 6.8 of [Quine]
     p. 43. $)
  visset $p |- x e. _V $=
    ( cv cvv wcel wceq eqid df-v abeq2i mpbir ) ABZCDJJEZJFKACAGHI $.
    $( [5-Aug-1993] $)

  ${
    $d x A $.
    $( Two ways to say " ` A ` is a set":  A class ` A ` is a member of the
       universal class ` _V ` (see ~ df-v ) if and only if the class ` A `
       exists (i.e. there exists some set ` x ` equal to class ` A ` ).
       Theorem 6.9 of [Quine] p. 43. _Notational convention_:  We will use the
       notational device " ` A e. _V ` " to mean " ` A ` is a set" very
       frequently, for example in ~ uniex .  Note the when ` A ` is not a set,
       it is called a proper class.  In some theorems, such as ~ uniexg , in
       order to shorten certain proofs we use the more general antecedent
       ` A e. B ` instead of ` A e. _V ` to mean " ` A ` is a set."

       Note that a constant is considered distinct from all variables.  This is
       why ` _V ` is not included in the distinct variable list, even though
       ~ df-clel requires that the expression substituted for ` B ` not contain
       ` x ` .  (Also, the Metamath spec does not allow constants in the
       distinct variable list.) $)
    isset $p |- ( A e. _V <-> E. x x = A ) $=
      ( cvv wcel cv wceq wa wex df-clel visset biantru exbii bitr4i ) BCDAEZBFZ
      NCDZGZAHOAHABCIOQAPOAJKLM $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    isseti.1 $e |- A e. _V $.
    $( A way to say " ` A ` is a set" (inference rule). $)
    isseti $p |- E. x x = A $=
      ( cvv wcel cv wceq wex isset mpbi ) BDEAFBGAHCABIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    issetri.1 $e |- E. x x = A $.
    $( A way to say " ` A ` is a set" (inference rule). $)
    issetri $p |- A e. _V $=
      ( cvv wcel cv wceq wex isset mpbir ) BDEAFBGAHCABIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class is a member of another class, it is a set.  Theorem 6.12 of
       [Quine] p. 44.  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    elisset $p |- ( A e. B -> A e. _V ) $=
      ( vx cv wceq wcel wa wex cvv exsimpl df-clel isset 3imtr4i ) CDZAEZNBFZGC
      HOCHABFAIFOPCJCABKCALM $.
      $( [8-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    elisseti.1 $e |- A e. B $.
    $( If a class is a member of another class, it is a set. $)
    elisseti $p |- A e. _V $=
      ( wcel cvv elisset ax-mp ) ABDAEDCABFG $.
      $( [11-Jun-1994] $)
  $}

  ${
    $d x A $.
    $( An element of a class exists. $)
    elex $p |- ( A e. B -> E. x x = A ) $=
      ( wcel cvv cv wceq wex elisset isset sylib ) BCDBEDAFBGAHBCIABJK $.
      $( [1-May-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( If two classes each contain another class, then both contain some set.
       This proof was automatically generated from the virtual deduction proof
       ~ elex22VD using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    elex22 $p |- ( ( A e. B /\ A e. C ) -> E. x ( x e. B /\ x e. C ) ) $=
      ( wcel wa cv wceq wi wal wex eleq1a anim12ii 19.21aiv elex adantr exim 
      sylc ) BCEZBDEZFZAGZBHZUBCEZUBDEZFZIZAJUCAKZUFAKUAUGASUCUDTUEBCUBLBDUBLMN
      SUHTABCOPUCUFAQR $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class contains another class, then it contains some set.  This
       proof was generated automatically from the virtual deduction proof
       ~ elex2 using the tools command file
       translate_without_overwriting_minimize_excluding_duplicates.cmd .
       (Contributed by Alan Sare, 25-Sep-2011.) $)
    elex2 $p |- ( A e. B -> E. x x e. B ) $=
      ( wcel cv wceq wi wal wex eleq1a 19.21aiv elex exim sylc ) BCDZAEZBFZPCDZ
      GZAHQAIRAIOSABCPJKABCLQRAMN $.
      $( [24-Oct-2011] $) $( [25-Sep-2011] $)
  $}

  $( A universal quantifier restricted to the universe is unrestricted. $)
  ralv $p |- ( A. x e. _V ph <-> A. x ph ) $=
    ( cvv wral cv wcel wi wal df-ral visset a1bi albii bitr4i ) ABCDBECFZAGZBHA
    BHABCIAOBNABJKLM $.
    $( [26-Mar-2004] $)

  $( An existential quantifier restricted to the universe is unrestricted. $)
  rexv $p |- ( E. x e. _V ph <-> E. x ph ) $=
    ( cvv wrex cv wcel wa wex df-rex visset biantrur exbii bitr4i ) ABCDBECFZAG
    ZBHABHABCIAOBNABJKLM $.
    $( [26-Mar-2004] $)

  $( A uniqueness quantifier restricted to the universe is unrestricted. $)
  reuv $p |- ( E! x e. _V ph <-> E! x ph ) $=
    ( cvv wreu cv wcel wa weu df-reu visset biantrur eubii bitr4i ) ABCDBECFZAG
    ZBHABHABCIAOBNABJKLM $.
    $( [7-Jun-2011] $) $( [1-Nov-2010] $)

  $( A class abstraction restricted to the universe is unrestricted.  (The
     proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
  rabab $p |- { x e. _V | ph } = { x | ph } $=
    ( cvv crab cv wcel wa cab df-rab visset biantrur abbii eqtr4i ) ABCDBECFZAG
    ZBHABHABCIAOBNABJKLM $.
    $( [8-Jun-2011] $) $( [27-Dec-2004] $)

  ${
    $d x y $.  $d y A $.
    $( Commutation of restricted and unrestricted universal quantifiers.  (The
       proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    ralcom4 $p |- ( A. x e. A A. y ph <-> A. y A. x e. A ph ) $=
      ( cvv wral wal ralcom ralv ralbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
      $( [8-Jun-2011] $) $( [26-Mar-2004] $)

    $( Commutation of restricted and unrestricted existential quantifiers.
       (The proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    rexcom4 $p |- ( E. x e. A E. y ph <-> E. y E. x e. A ph ) $=
      ( cvv wrex wex rexcom rexv rexbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
      $( [8-Jun-2011] $) $( [12-Apr-2004] $)
  $}

  ${
    $d A x $.  $d x y $.  $d ph x $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4a $p |- ( E. x E. y e. A ( ph /\ ps )
                          <-> E. y e. A ( ph /\ E. x ps ) ) $=
      ( wa wrex wex rexcom4 19.42v rexbii bitr3i ) ABFZDEGCHMCHZDEGABCHFZDEGMDC
      EINODEABCJKL $.
      $( [1-Jun-2011] $)

    $d B x $.
    rexcom4b.1 $e |- B e. _V $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4b $p |- ( E. x E. y e. A ( ph /\ x = B ) <-> E. y e. A ph ) $=
      ( cv wceq wa wrex wex rexcom4a isseti biantru rexbii bitr4i ) ABGEHZICDJB
      KAQBKZIZCDJACDJAQBCDLASCDRABEFMNOP $.
      $( [1-Jun-2011] $)
  $}

  ${
    $d x A $.
    ceqsalg.1 $e |- ( ps -> A. x ps ) $.
    ceqsalg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    ceqsalg $p |- ( A e. B -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wcel cv wceq wi wal wex hba1 biimpd a2i a4s 19.23ad elex syl5com 
      biimprcd 19.21ai impbid1 ) DEHZCIDJZAKZCLZBUGUECMBUDUGUEBCUFCNFUFUEBKCUEA
      BUEABGOPQRCDESTBUFCFUEABGUAUBUC $.
      $( [8-Jun-2011] $) $( [29-Oct-2003] $)
  $}

  ${
    $d x A $.
    ceqsal.1 $e |- ( ps -> A. x ps ) $.
    ceqsal.2 $e |- A e. _V $.
    ceqsal.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsal $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( cvv wcel cv wceq wi wal wb ceqsalg ax-mp ) DHICJDKALCMBNFABCDHEGOP $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsalv.1 $e |- A e. _V $.
    ceqsalv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsalv $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( ax-17 ceqsal ) ABCDBCGEFH $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x ps $.
    gencl.1 $e |- ( th <-> E. x ( ch /\ A = B ) ) $.
    gencl.2 $e |- ( A = B -> ( ph <-> ps ) ) $.
    gencl.3 $e |- ( ch -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    gencl $p |- ( th -> ps ) $=
      ( wceq wa wex syl5bi impcom 19.23aiv sylbi ) DCFGKZLZEMBHSBERCBRABCIJNOPQ
      $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y $.  $d x R $.  $d x ps $.  $d y C $.  $d y S $.  $d y ch $.
    2gencl.1 $e |- ( C e. S <-> E. x ( x e. R /\ A = C ) ) $.
    2gencl.2 $e |- ( D e. S <-> E. y ( y e. R /\ B = D ) ) $.
    2gencl.3 $e |- ( A = C -> ( ph <-> ps ) ) $.
    2gencl.4 $e |- ( B = D -> ( ps <-> ch ) ) $.
    2gencl.5 $e |- ( ( x e. R /\ y e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    2gencl $p |- ( ( C e. S /\ D e. S ) -> ch ) $=
      ( wcel wi cv wceq imbi2d ex gencl com12 impcom ) IKQZHKQZCUGBRUGCRESJQZUF
      EGIMGITBCUGOUAUGUHBUHARUHBRDSJQZUGDFHLFHTABUHNUAUIUHAPUBUCUDUCUE $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y z $.  $d y z D $.  $d z F $.  $d x y R $.  $d y z S $.  $d x ps $.
    $d y ch $.  $d z th $.
    3gencl.1 $e |- ( D e. S <-> E. x ( x e. R /\ A = D ) ) $.
    3gencl.2 $e |- ( F e. S <-> E. y ( y e. R /\ B = F ) ) $.
    3gencl.3 $e |- ( G e. S <-> E. z ( z e. R /\ C = G ) ) $.
    3gencl.4 $e |- ( A = D -> ( ph <-> ps ) ) $.
    3gencl.5 $e |- ( B = F -> ( ps <-> ch ) ) $.
    3gencl.6 $e |- ( C = G -> ( ch <-> th ) ) $.
    3gencl.7 $e |- ( ( x e. R /\ y e. R /\ z e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    3gencl $p |- ( ( D e. S /\ F e. S /\ G e. S ) -> th ) $=
      ( wcel wa wi cv wceq imbi2d 3expia 2gencl com12 gencl 3impia ) KMUCZNMUCZ
      OMUCZDUPUNUOUDZDUQCUEUQDUEGUFLUCZUPGJORJOUGCDUQUAUHUQURCURAUEURBUEURCUEEF
      HIKNLMPQHKUGABURSUHINUGBCURTUHEUFLUCFUFLUCURAUBUIUJUKULUKUM $.
      $( [17-May-1996] $)
  $}

  ${
    $d x A $.  $d x ps $.
    cgsexg.1 $e |- ( x = A -> ch ) $.
    cgsexg.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes. $)
    cgsexg $p |- ( A e. B ->
                     ( E. x ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa 19.23aiv biimprcd ancld eximdv cv wceq elex eximi 
      syl syl5com impbid2 ) EFIZCAJZDKZBUEBDCABHLMBCDKZUFUDBCUEDBCACABHNOPUDDQE
      RZDKUGDEFSUHCDGTUAUBUC $.
      $( [21-Apr-2008] $) $( [26-Aug-2007] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    cgsex2g.1 $e |- ( ( x = A /\ y = B ) -> ch ) $.
    cgsex2g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes. $)
    cgsex2g $p |- ( ( A e. C /\ B e. D ) ->
                     ( E. x E. y ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa 19.23aivv biimprcd ancld 2eximdv cv wceq elex 
      anim12i eeanv sylibr 2eximi syl syl5com impbid2 ) FHLZGILZMZCAMZENDNZBUMB
      DECABKOPBCENDNZUNULBCUMDEBCACABKQRSULDTFUAZETGUAZMZENDNZUOULUPDNZUQENZMUS
      UJUTUKVADFHUBEGIUBUCUPUQDEUDUEURCDEJUFUGUHUI $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.
    cgsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> ch ) $.
    cgsex4g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 4 general classes. $)
    cgsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                    ( E. x E. y E. z E. w ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa 19.23aivv biimprcd ancld 2eximdv cv wceq elex 
      anim12i eeanv sylibr ee4anv 2eximi syl syl5com impbid2 ) HLPZIMPZQZJLPZKM
      PZQZQZCAQZGRFRZERDRZBVCBDEVBBFGCABOSTTBCGRFRZERDRZVDVABVEVCDEBCVBFGBCACAB
      OUAUBUCUCVADUDHUEZEUDIUEZQZFUDJUEZGUDKUEZQZQZGRFRZERDRZVFVAVIERDRZVLGRFRZ
      QVOUQVPUTVQUQVGDRZVHERZQVPUOVRUPVSDHLUFEIMUFUGVGVHDEUHUIUTVJFRZVKGRZQVQUR
      VTUSWAFJLUFGKMUFUGVJVKFGUHUIUGVIVLDEFGUJUIVNVEDEVMCFGNUKUKULUMUN $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x A $.
    ceqsex.1 $e |- ( ps -> A. x ps ) $.
    ceqsex.2 $e |- A e. _V $.
    ceqsex.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsex $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( cv wceq wa wex biimpa 19.23ai isseti wi wal biimprcd 19.21ai exintr 
      syl mpi impbii ) CHDIZAJZCKZBUDBCEUCABGLMBUCCKZUECDFNBUCAOZCPUFUEOBUGCEUC
      ABGQRUCACSTUAUB $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsexv.1 $e |- A e. _V $.
    ceqsexv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsexv $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( ax-17 ceqsex ) ABCDBCGEFH $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    ceqsex2.1 $e |- ( ps -> A. x ps ) $.
    ceqsex2.2 $e |- ( ch -> A. y ch ) $.
    ceqsex2.3 $e |- A e. _V $.
    ceqsex2.4 $e |- B e. _V $.
    ceqsex2.5 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2.6 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2 $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( cv wceq w3a wex wa 3anass exbii 19.42v bitri ax-17 hban hbex anbi2d 
      exbidv ceqsex 3bitri ) DNFOZENGOZAPZEQZDQUJUKARZEQZRZDQUKBRZEQZCUMUPDUMUJ
      UNRZEQUPULUSEUJUKASTUJUNEUAUBTUOURDFUQDEUKBDUKDUCHUDUEJUJUNUQEUJABUKLUFUG
      UHBCEGIKMUHUI $.
      $( [13-Aug-2011] $) $( [7-Jun-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.  $d y ch $.
    ceqsex2v.1 $e |- A e. _V $.
    ceqsex2v.2 $e |- B e. _V $.
    ceqsex2v.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2v.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2v $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( ax-17 ceqsex2 ) ABCDEFGBDLCELHIJKM $.
      $( [13-Aug-2011] $) $( [7-Jun-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x ps $.  $d y ch $.
    $d z th $.
    ceqsex3v.1 $e |- A e. _V $.
    ceqsex3v.2 $e |- B e. _V $.
    ceqsex3v.3 $e |- C e. _V $.
    ceqsex3v.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex3v.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex3v.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( Elimination of three existential quantifiers, using implicit
       substitution. $)
    ceqsex3v $p |- ( E. x E. y E. z ( ( x = A /\ y = B /\ z = C ) /\ ph )
                 <-> th ) $=
      ( cv wceq w3a wa wex anass 3anass anbi1i df-3an anbi2i 3bitr4i 2exbii 
      19.42vv bitri exbii 3anbi3d 2exbidv ceqsexv ceqsex2v 3bitri ) EQHRZFQIRZG
      QJRZSZATZGUAFUAZEUAUQURUSASZGUAFUAZTZEUAURUSBSZGUAFUAZDVBVEEVBUQVCTZGUAFU
      AVEVAVHFGUQURUSTZTZATUQVIATZTVAVHUQVIAUBUTVJAUQURUSUCUDVCVKUQURUSAUEUFUGU
      HUQVCFGUIUJUKVDVGEHKUQVCVFFGUQABURUSNULUMUNBCDFGIJLMOPUOUP $.
      $( [16-Aug-2011] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x ps $.  $d y ch $.  $d z th $.  $d w ta $.
    ceqsex4v.1 $e |- A e. _V $.
    ceqsex4v.2 $e |- B e. _V $.
    ceqsex4v.3 $e |- C e. _V $.
    ceqsex4v.4 $e |- D e. _V $.
    ceqsex4v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex4v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex4v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex4v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    $( Elimination of four existential quantifiers, using implicit
       substitution. $)
    ceqsex4v $p |- ( E. x E. y E. z E. w
          ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) /\ ph ) <-> ta ) $=
      ( cv wceq wa w3a wex 19.42vv 3anass df-3an anbi2i bitr4i 2exbii 3bitr4i 
      3anbi3d 2exbidv ceqsex2v 3bitri ) FUBJUCZGUBKUCZUDZHUBLUCZIUBMUCZUDZAUEZI
      UFHUFZGUFFUFURUSVAVBAUEZIUFHUFZUEZGUFFUFVAVBCUEZIUFHUFZEVEVHFGUTVFUDZIUFH
      UFUTVGUDVEVHUTVFHIUGVDVKHIVDUTVCAUDZUDVKUTVCAUHVFVLUTVAVBAUIUJUKULURUSVGU
      IUMULVGVAVBBUEZIUFHUFVJFGJKNOURVFVMHIURABVAVBRUNUOUSVMVIHIUSBCVAVBSUNUOUP
      CDEHILMPQTUAUPUQ $.
      $( [23-Sep-2011] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u E $.  $d x y z w v u F $.  $d x ps $.
    $d y ch $.  $d z th $.  $d w ta $.  $d v et $.  $d u ze $.
    ceqsex6v.1 $e |- A e. _V $.
    ceqsex6v.2 $e |- B e. _V $.
    ceqsex6v.3 $e |- C e. _V $.
    ceqsex6v.4 $e |- D e. _V $.
    ceqsex6v.5 $e |- E e. _V $.
    ceqsex6v.6 $e |- F e. _V $.
    ceqsex6v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex6v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex6v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex6v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex6v.11 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex6v.12 $e |- ( u = F -> ( et <-> ze ) ) $.
    $( Elimination of six existential quantifiers, using implicit
       substitution. $)
    ceqsex6v $p |- ( E. x E. y E. z E. w E. v E. u
          ( ( x = A /\ y = B /\ z = C ) /\ ( w = D /\ v = E /\ u = F ) /\ ph )
                 <-> ze ) $=
      ( cv wceq w3a wex wa 3anass 3exbii 19.42vvv bitri anbi2d 3exbidv 
      ceqsex3v 3bitri ) HULNUMZIULOUMZJULPUMZUNZKULQUMLULRUMMULSUMUNZAUNZMUOLUO
      KUOZJUOIUOHUOVHVIAUPZMUOLUOKUOZUPZJUOIUOHUOVIDUPZMUOLUOKUOZGVKVNHIJVKVHVL
      UPZMUOLUOKUOVNVJVQKLMVHVIAUQURVHVLKLMUSUTURVMVIBUPZMUOLUOKUOVICUPZMUOLUOK
      UOVPHIJNOPTUAUBVEVLVRKLMVEABVIUFVAVBVFVRVSKLMVFBCVIUGVAVBVGVSVOKLMVGCDVIU
      HVAVBVCDEFGKLMQRSUCUDUEUIUJUKVCVD $.
      $( [21-Sep-2011] $)
  $}

  ${
    $d x y z w v u t s A $.  $d x y z w v u t s B $.  $d x y z w v u t s C $.
    $d x y z w v u t s D $.  $d x y z w v u t s E $.  $d x y z w v u t s F $.
    $d x y z w v u t s G $.  $d x y z w v u t s H $.  $d x ps $.  $d y ch $.
    $d z th $.  $d w ta $.  $d v et $.  $d u ze $.  $d t si $.  $d s rh $.
    ceqsex8v.1 $e |- A e. _V $.
    ceqsex8v.2 $e |- B e. _V $.
    ceqsex8v.3 $e |- C e. _V $.
    ceqsex8v.4 $e |- D e. _V $.
    ceqsex8v.5 $e |- E e. _V $.
    ceqsex8v.6 $e |- F e. _V $.
    ceqsex8v.7 $e |- G e. _V $.
    ceqsex8v.8 $e |- H e. _V $.
    ceqsex8v.9 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex8v.10 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex8v.11 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex8v.12 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex8v.13 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex8v.14 $e |- ( u = F -> ( et <-> ze ) ) $.
    ceqsex8v.15 $e |- ( t = G -> ( ze <-> si ) ) $.
    ceqsex8v.16 $e |- ( s = H -> ( si <-> rh ) ) $.
    $( Elimination of eight existential quantifiers, using implicit
       substitution. $)
    ceqsex8v $p |- ( E. x E. y E. z E. w E. v E. u E. t E. s
              ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) )
         /\ ( ( v = E /\ u = F ) /\ ( t = G /\ s = H ) ) /\ ph ) <-> rh ) $=
      ( cv wceq wa w3a wex 19.42vv 2exbii bitri 3anass df-3an anbi2i bitr4i 
      3bitr4i 3anbi3d 4exbidv ceqsex4v 3bitri ) JVBQVCZKVBRVCZVDZLVBSVCZMVBTVCZ
      VDZVDZNVBUAVCOVBUBVCVDZPVBUCVCUEVBUDVCVDZVDZAVEZUEVFPVFZOVFNVFZMVFLVFZKVF
      JVFWAWDWFWGAVEZUEVFPVFZOVFNVFZVEZMVFLVFZKVFJVFWFWGEVEZUEVFPVFOVFNVFZIWLWQ
      JKWKWPLMWEWMVDZUEVFPVFZOVFNVFZWEWOVDZWKWPXBWEWNVDZOVFNVFXCXAXDNOWEWMPUEVG
      VHWEWNNOVGVIWJXANOWIWTPUEWIWEWHAVDZVDWTWEWHAVJWMXEWEWFWGAVKVLVMVHVHWAWDWO
      VKVNVHVHWOWFWGBVEZUEVFPVFOVFNVFWFWGCVEZUEVFPVFOVFNVFWFWGDVEZUEVFPVFOVFNVF
      WSJKLMQRSTUFUGUHUIVSWMXFNOPUEVSABWFWGUNVOVPVTXFXGNOPUEVTBCWFWGUOVOVPWBXGX
      HNOPUEWBCDWFWGUPVOVPWCXHWRNOPUEWCDEWFWGUQVOVPVQEFGHINOPUEUAUBUCUDUJUKULUM
      URUSUTVAVQVR $.
      $( [23-Sep-2011] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex.1 $e |- A e. _V $.
    gencbvex.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    gencbvex $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex excom wb anbi12d bicomd eqcoms ceqsexv exbii 19.41v 
      simpr eqcom biimpi adantl eximi sylbi adantr ancri impbii bitri 3bitr3i 
      ) FLZGMZDBNZNZFOZEOUREOZFOCANZEOUQFOUREFPUSVAEUQVAFGHUQVAQGUOGUOMZVAUQVBC
      DABJIRSTUAUBUTUQFUTUPEOZUQNZUQUPUQEUCVDUQVCUQUDUQVCDVCBDCVBNZEOVCKVEUPEVB
      UPCVBUPGUOUEUFUGUHUIUJUKULUMUBUN $.
      $( [8-Jun-2011] $) $( [17-May-1996] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex2.1 $e |- A e. _V $.
    gencbvex2.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex2.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex2.4 $e |- ( th -> E. x ( ch /\ A = y ) ) $.
    $( Restatement of ~ gencbvex with weaker hypotheses.  (Contributed by
       Jeffrey Hankins, 6-Dec-2006.) $)
    gencbvex2 $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex biimpac 19.23aiv impbii gencbvex ) ABCDEFGHIJDCGFLMZNZEO
      KUADETCDJPQRS $.
      $( [6-Dec-2006] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbval.1 $e |- A e. _V $.
    gencbval.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbval.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbval.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution. $)
    gencbval $p |- ( A. x ( ch -> ph ) <-> A. y ( th -> ps ) ) $=
      ( wi wal wn wa wex cv wceq notbid gencbvex exanali 3bitr3i con4bii ) CALE
      MZDBLFMZCANZOEPDBNZOFPUDNUENUFUGCDEFGHGFQRABISJKTCAEUADBFUAUBUC $.
      $( [17-May-1996] $)
  $}

  ${
    $d x A $.
    vtoclf.1 $e |- ( ps -> A. x ps ) $.
    vtoclf.2 $e |- A e. _V $.
    vtoclf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  This is a
       generalization of ~ chvar . $)
    vtoclf $p |- ps $=
      ( cv wceq wex wi isseti biimpd eximi ax-mp 19.36i mpg ) ABCABCECIDJZCKABL
      ZCKCDFMSTCSABGNOPQHR $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ps $.
    vtocl.1 $e |- A e. _V $.
    vtocl.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl.3 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl $p |- ps $=
      ( ax-17 vtoclf ) ABCDBCHEFGI $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    vtocl2.1 $e |- A e. _V $.
    vtocl2.2 $e |- B e. _V $.
    vtocl2.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    vtocl2.4 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl2 $p |- ps $=
      ( wal wi wex cv wceq isseti wa eeanv biimpd 2eximi sylbir mp2an 19.36v 
      exbii mpbi 19.36aiv ax-gen mpg ) ADKZBCUIBCABLZDMZCMZUIBLZCMCNEOZCMZDNFOZ
      DMZULCEGPDFHPUOUQQUNUPQZDMCMULUNUPCDRURUJCDURABISTUAUBUKUMCABDUCUDUEUFADJ
      UGUH $.
      $( [8-Jun-2011] $) $( [26-Jul-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    vtocl3.1 $e |- A e. _V $.
    vtocl3.2 $e |- B e. _V $.
    vtocl3.3 $e |- C e. _V $.
    vtocl3.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    vtocl3.5 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl3 $p |- ps $=
      ( wal wi wex cv wceq isseti w3a eeeanv biimpd eximi 2eximi sylbir mp3an 
      19.36v 2exbii mpbi exbii 19.36aiv gen2 mpg ) AENZDNZBCUOBCUNBOZDPZCPZUOBO
      ZCPABOZEPZDPCPZURCQFRZCPZDQGRZDPZEQHRZEPZVBCFISDGJSEHKSVDVFVHTVCVEVGTZEPZ
      DPCPVBVCVEVGCDEUAVJVACDVIUTEVIABLUBUCUDUEUFVAUPCDABEUGUHUIUQUSCUNBDUGUJUI
      UKADEMULUM $.
      $( [8-Jun-2011] $) $( [3-Jun-1995] $)
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclb.1 $e |- A e. _V $.
    vtoclb.2 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclb.3 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclb.4 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclb $p |- ( ch <-> th ) $=
      ( wb cv wceq bibi12d vtocl ) ABKCDKEFGELFMACBDHINJO $.
      $( [23-Dec-1993] $)
  $}

  ${
    $d y A z $.  $d x z $.  $d y z $.
    vtoclgf.1 $e |- ( y e. A -> A. x y e. A ) $.
    vtoclgf.2 $e |- ( ps -> A. x ps ) $.
    vtoclgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable, with bound-variable
       hypotheses in place of distinct variable restrictions.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       11-Jul-2011.) $)
    vtoclgf $p |- ( A e. B -> ps ) $=
      ( vz wcel cvv elisset cv wceq wex isset hblem hbeleq ax-17 eqeq1 cbvex 
      bitri mpbii 19.23ai sylbi syl ) EFLEMLZBEFNUICOZEPZCQZBUIKOZEPZKQULKERUNU
      KKCCKECDKEGSTUKKUAUMUJEUBUCUDUKBCHUKABJIUEUFUGUH $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x y A $.  $d x ps $.
    vtoclg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclg.2 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclg $p |- ( A e. B -> ps ) $=
      ( vy cv wcel ax-17 vtoclgf ) ABCHDEHIDJCKBCKFGL $.
      $( [17-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclbg.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclbg.2 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclbg.3 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclbg $p |- ( A e. B -> ( ch <-> th ) ) $=
      ( wb cv wceq bibi12d vtoclg ) ABKCDKEFGELFMACBDHINJO $.
      $( [29-Apr-1994] $)
  $}

  ${
    $d x A $.  $d y z A $.  $d y z B $.  $d z x $.
    vtocl2gf.1 $e |- ( ps -> A. x ps ) $.
    vtocl2gf.2 $e |- ( ch -> A. y ch ) $.
    vtocl2gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gf.5 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl2gf $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( vz cvv wcel wi cv ax-17 hbim wceq imbi2d vtoclgf impcom elisset sylan 
      ) FPQZGIQZCFHQUIUHCUHBRUHCREOGIOSZGQETUHCEUHETKUAESGUBBCUHMUCABDOFPUJFQDT
      JLNUDUDUEFHUFUG $.
      $( [25-Apr-1995] $)
  $}

  ${
    $d x A $.  $d y A $.  $d y B $.  $d x ps $.  $d y ch $.
    vtocl2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2g.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2g.3 $e |- ph $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2g $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( ax-17 vtocl2gf ) ABCDEFGHIBDMCEMJKLN $.
      $( [25-Apr-1995] $)
  $}

  ${
    $d y A $.  $d x B z $.
    vtoclgaf.1 $e |- ( y e. A -> A. x y e. A ) $.
    vtoclgaf.2 $e |- ( ps -> A. x ps ) $.
    vtoclgaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgaf.4 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       8-Jun-2011.) $)
    vtoclgaf $p |- ( A e. B -> ps ) $=
      ( vz wcel cv wi ax-17 hbel hbim wceq eleq1 imbi12d vtoclgf pm2.43i ) EFLZ
      BCMZFLZANUCBNCDEFGUCBCCDKEFGKMFLCOPHQUDERUEUCABUDEFSITJUAUB $.
      $( [11-Jul-2011] $) $( [17-Feb-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.
    vtoclga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclga.2 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclga $p |- ( A e. B -> ps ) $=
      ( vy cv wcel ax-17 vtoclgaf ) ABCHDEHIDJCKBCKFGL $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.  $d x ps $.  $d y ch $.
    vtocl2ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2ga.3 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2ga $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( wcel wi cv wceq imbi2d ex vtoclga com12 impcom ) GIMFHMZCUBBNUBCNEGIEOZ
      GPBCUBKQUBUCIMZBUDANUDBNDFHDOZFPABUDJQUEHMUDALRSTSUA $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d z C $.  $d x y z D $.  $d x y z R $.
    $d x y z S $.  $d x ps $.  $d y ch $.  $d z th $.
    vtocl3ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3ga.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3ga.4 $e |- ( ( x e. D /\ y e. R /\ z e. S ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables. $)
    vtocl3ga $p |- ( ( A e. D /\ B e. R /\ C e. S ) -> th ) $=
      ( wcel wi cv wceq imbi2d wa 3expib vtoclga com12 vtocl2ga ex com3r 3imp 
      ) HKRZILRZJMRZDULUMUKDULUMUKDSZUKBSUKCSUNFGIJLMFTZIUABCUKOUBGTZJUACDUKPUB
      UKUOLRZUPMRZUCZBUSASUSBSEHKETZHUAABUSNUBUTKRUQURAQUDUEUFUGUHUIUJ $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d x A $.  $d x ph $.
    vtocleg.1 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtocleg $p |- ( A e. B -> ph ) $=
      ( wcel cv wceq wex elex 19.23aiv syl ) CDFBGCHZBIABCDJMABEKL $.
      $( [10-Jan-2004] $)
  $}

  ${
    $d x A $.
    $( Implicit substitution of a class for a set variable.  (Closed theorem
       version of ~ vtoclef .)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    vtoclegft $p |- ( ( A e. B /\ A. x ( ph -> A. x ph ) /\
                   A. x ( x = A -> ph ) ) -> ph ) $=
      ( wcel wal wi cv wceq wex elex pm2.27 19.9t syl9 exim syl7 syl 3imp ) CDE
      ZAABFGBFZBHCIZAGBFZASUABJZTUBAGGBCDKUCTUCABJZGZAUBUCUEUDTAUCUDLABMNUAABOP
      QR $.
      $( [8-Jun-2011] $) $( [7-Nov-2005] $)
  $}

  ${
    $d x A $.
    vtoclef.1 $e |- ( ph -> A. x ph ) $.
    vtoclef.2 $e |- A e. _V $.
    vtoclef.3 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclef $p |- ph $=
      ( cv wceq wex isseti 19.23ai ax-mp ) BGCHZBIABCEJMABDFKL $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ph $.
    vtocle.1 $e |- A e. _V $.
    vtocle.2 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtocle $p |- ph $=
      ( cvv wcel vtocleg ax-mp ) CFGADABCFEHI $.
      $( [9-Sep-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    vtoclri.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclri.2 $e |- A. x e. B ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclri $p |- ( A e. B -> ps ) $=
      ( rspec vtoclga ) ABCDEFACEGHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    $d y A z $.  $d x z $.
    cla4gf.1 $e |- ( y e. A -> A. x y e. A ) $.
    cla4gf.2 $e |- ( ps -> A. x ps ) $.
    cla4gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition.  Compare Theorem
       7.3 of [Quine] p. 44.  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 12-Aug-2011.) $)
    cla4gf $p |- ( A e. B -> ( A. x ph -> ps ) ) $=
      ( vz wcel cvv wal wi elisset wex cv wceq isset hblem hbeleq ax-17 eqeq1 
      cbvex bitri biimpd eximi sylbi 19.36 sylib syl ) EFKELKZACMBNZEFOULABNZCP
      ZUMULCQZERZCPZUOULJQZERZJPURJESUTUQJCCJECDJEGTUAUQJUBUSUPEUCUDUEUQUNCUQAB
      IUFUGUHABCHUIUJUK $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)

    $d y A $.
    $( Existential specialization, using implicit substitition. $)
    cla4egf $p |- ( A e. B -> ( ps -> E. x ph ) ) $=
      ( wcel wn wal wex hbn cv wceq notbid cla4gf con2d df-ex syl6ibr ) EFJZBAK
      ZCLZKACMUBUDBUCBKCDEFGBCHNCOEPABIQRSACTUA $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    cla4gv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition.  Compare Theorem
       7.3 of [Quine] p. 44. $)
    cla4gv $p |- ( A e. B -> ( A. x ph -> ps ) ) $=
      ( vy cv wcel ax-17 cla4gf ) ABCGDEGHDICJBCJFK $.
      $( [22-Jun-1994] $)

    $( Existential specialization, using implicit substitition. $)
    cla4egv $p |- ( A e. B -> ( ps -> E. x ph ) ) $=
      ( vy cv wcel ax-17 cla4egf ) ABCGDEGHDICJBCJFK $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    cla42egv.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 2 quantifiers, using implicit
       substitution. $)
    cla42egv $p |- ( ( A e. C /\ B e. D ) -> ( ps -> E. x E. y ph ) ) $=
      ( cv wceq wa wex wcel biimprcd 2eximdv elex anim12i eeanv sylibr syl5com 
      ) BCJEKZDJFKZLZDMCMZADMCMEGNZFHNZLZBUDACDUDABIOPUHUBCMZUCDMZLUEUFUIUGUJCE
      GQDFHQRUBUCCDSTUA $.
      $( [3-Aug-1995] $)

    $( Specialization with 2 quantifiers, using implicit substitution. $)
    cla42gv $p |- ( ( A e. C /\ B e. D ) -> ( A. x A. y ph -> ps ) ) $=
      ( wcel wa wal wn wex cv wceq notbid cla42egv exnal exbii bitr2i syl6ibr 
      con4d ) EGJFHJKZBADLZCLZUDBMZAMZDNZCNZUFMZUHUGCDEFGHCOEPDOFPKABIQRUJUEMZC
      NUKUIULCADSTUECSUAUBUC $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    cla43egv.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 3 quantifiers, using implicit
       substitution. $)
    cla43egv $p |- ( ( A e. R /\ B e. S /\ C e. T ) ->
               ( ps -> E. x E. y E. z ph ) ) $=
      ( cv wceq w3a wex wcel biimprcd eximdv 2eximdv elex 3anim123i eeeanv 
      sylibr syl5com ) BCMFNZDMGNZEMHNZOZEPZDPCPZAEPZDPCPFIQZGJQZHKQZOZBUJULCDB
      UIAEUIABLRSTUPUFCPZUGDPZUHEPZOUKUMUQUNURUOUSCFIUADGJUAEHKUAUBUFUGUHCDEUCU
      DUE $.
      $( [12-May-2008] $)

    $( Specialization with 3 quantifiers, using implicit substitution. $)
    cla43gv $p |- ( ( A e. R /\ B e. S /\ C e. T ) ->
               ( A. x A. y A. z ph -> ps ) ) $=
      ( wcel w3a wal wn wex cv wceq notbid cla43egv exnal exbii bitri bitr2i 
      syl6ibr con4d ) FIMGJMHKMNZBAEOZDOZCOZUHBPZAPZEQZDQZCQZUKPZUMULCDEFGHIJKC
      RFSDRGSERHSNABLTUAUPUJPZCQUQUOURCUOUIPZDQURUNUSDAEUBUCUIDUBUDUCUJCUBUEUFU
      G $.
      $( [12-May-2008] $)
  $}

  ${
    $d x A $.  $d x ps $.
    cla4v.1 $e |- A e. _V $.
    cla4v.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition. $)
    cla4v $p |- ( A. x ph -> ps ) $=
      ( cvv wcel wal wi cla4gv ax-mp ) DGHACIBJEABCDGFKL $.
      $( [22-Jun-1994] $)

    $( Existential specialization, using implicit substitition.  (The proof was
       shortened by Eric Schmidt, 22-Dec-2006.) $)
    cla4ev $p |- ( ps -> E. x ph ) $=
      ( cvv wcel wex wi cla4egv ax-mp ) DGHBACIJEABCDGFKL $.
      $( [22-Dec-2006] $) $( [31-Dec-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    cla4e2v.1 $e |- A e. _V $.
    cla4e2v.2 $e |- B e. _V $.
    cla4e2v.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization, using implicit substitition. $)
    cla42ev $p |- ( ps -> E. x E. y ph ) $=
      ( cvv wcel wex wi cla42egv mp2an ) EJKFJKBADLCLMGHABCDEFJJINO $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x y A $.  $d x B $.
    rcla4.1 $e |- ( ps -> A. x ps ) $.
    rcla4.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitition.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    rcla4 $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( vy wcel cv wi wal wral ax-17 hbim wceq eleq1 imbi12d cla4gf pm2.43a 
      df-ral syl5ib ) DEIZCJZEIZAKZCLZBACEMUGUCBUFUCBKCHDEHJDICNUCBCUCCNFOUDDPU
      EUCABUDDEQGRSTACEUAUB $.
      $( [8-Jun-2011] $) $( [19-Apr-2005] $)

    $( Restricted existential specialization, using implicit substitition. $)
    rcla4e $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( vy wcel wa cv wex wrex ax-17 hban wceq eleq1 anbi12d cla4egf anabsi5 
      df-rex sylibr ) DEIZBJZCKZEIZAJZCLZACEMUCBUHUGUDCHDEHKDICNUCBCUCCNFOUEDPU
      FUCABUEDEQGRSTACEUAUB $.
      $( [26-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rcla4v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitition. $)
    rcla4v $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( ax-17 rcla4 ) ABCDEBCGFH $.
      $( [24-May-2005] $) $( [26-May-1998] $)

    $( Restricted specialization, using implicit substitition. $)
    rcla4cv $p |- ( A. x e. B ph -> ( A e. B -> ps ) ) $=
      ( wcel wral rcla4v com12 ) DEGACEHBABCDEFIJ $.
      $( [2-Feb-2006] $)

    $( Restricted specialization, using implicit substitition. $)
    rcla4va $p |- ( ( A e. B /\ A. x e. B ph ) -> ps ) $=
      ( wcel wral rcla4v imp ) DEGACEHBABCDEFIJ $.
      $( [13-Sep-2005] $)

    $( Restricted specialization, using implicit substitition.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    rcla4cva $p |- ( ( A. x e. B ph /\ A e. B ) -> ps ) $=
      ( wcel wral rcla4v impcom ) DEGACEHBABCDEFIJ $.
      $( [8-Jun-2011] $) $( [26-Jul-2006] $)

    $( Restricted existential specialization, using implicit substitition. $)
    rcla4ev $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( ax-17 rcla4e ) ABCDEBCGFH $.
      $( [26-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.  $d x ch $.
    rcla4dv.1 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Restricted specialization, using implicit substitition. $)
    rcla4dv $p |- ( ( ph /\ A e. B ) -> ( A. x e. B ps -> ch ) ) $=
      ( wcel wral wi cv wceq wb expcom pm5.74d rcla4v r19.21v syl5ibr pm2.86d 
      impcom ) EFHZABDFIZCJUAAUBCUAABJZDFIACJZAUBJUCUDDEFDKELZABCAUEBCMGNOPABDF
      QRST $.
      $( [17-Feb-2007] $)

    $( Restricted existential specialization, using implicit substitition.
       (Contributed by FL, 17-Apr-2007.) $)
    rcla4edv $p |- ( ( ph /\ A e. B ) -> ( ch -> E. x e. B ps ) ) $=
      ( wcel wrex wi wa cv wceq wb expcom pm5.74d rcla4ev r19.37av syl ex 
      pm2.86d impcom ) EFHZACBDFIZJUCACUDUCACJZAUDJZUCUEKABJZDFIUFUGUEDEFDLEMZA
      BCAUHBCNGOPQABDFRSTUAUB $.
      $( [10-May-2008] $) $( [17-Apr-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.
    rcla42.1 $e |- ( ch -> A. x ch ) $.
    rcla42.2 $e |- ( ps -> A. y ps ) $.
    rcla42.3 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla42.4 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42 $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( wcel wral cv ax-17 hbral wceq ralbidv rcla4 sylan9 ) FHNAEIOZDHOCEIOZGI
      NBUCUDDFHCDEIEPINDQJRDPFSACEILTUACBEGIKMUAUB $.
      $( [9-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.  $d x ch $.  $d y ps $.
    rcla42v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla42v.2 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42v $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( ax-17 rcla42 ) ABCDEFGHICDLBELJKM $.
      $( [24-May-2005] $) $( [13-Sep-1999] $)

    $( 2-variable restricted existential specialization, using implicit
       substitution. $)
    rcla42ev $p |- ( ( A e. C /\ B e. D /\ ps ) -> E. x e. C E. y e. D ph ) $=
      ( wcel w3a wrex wa rcla4ev anim2i 3impb cv wceq rexbidv syl ) FHLZGILZBMU
      CCEINZOZAEINZDHNUCUDBUFUDBOUEUCCBEGIKPQRUGUEDFHDSFTACEIJUAPUB $.
      $( [13-Feb-2007] $) $( [16-Oct-1999] $)
  $}

  ${
    $d z ps $.  $d x ch $.  $d y th $.  $d x y z A $.  $d y z B $.  $d z C $.
    $d x R $.  $d x y S $.  $d x y z T $.
    rcla43v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla43v.2 $e |- ( y = B -> ( ch <-> th ) ) $.
    rcla43v.3 $e |- ( z = C -> ( th <-> ps ) ) $.
    $( 3-variable restricted specialization, using implicit substitition. $)
    rcla43v $p |- ( ( A e. R /\ B e. S /\ C e. T ) ->
                  ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) $=
      ( wcel wral wi wa cv wceq ralbidv rcla42v rcla4v sylan9 3impa ) HKQZILQZJ
      MQZAGMRZFLREKRZBSUHUITULDGMRZUJBUKUMCGMREFHIKLEUAHUBACGMNUCFUAIUBCDGMOUCU
      DDBGJMPUEUFUG $.
      $( [10-May-2005] $)

    $( 3-variable restricted existentional specialization, using implicit
       substitition. $)
    rcla43ev $p |- ( ( ( A e. R /\ B e. S /\ C e. T ) /\ ps ) ->
                  E. x e. R E. y e. S E. z e. T ph ) $=
      ( wcel w3a wa wrex simpl1 simpl2 rcla4ev 3ad2antl3 cv wceq rexbidv 
      rcla42ev syl111anc ) HKQZILQZJMQZRBSUJUKDGMTZAGMTZFLTEKTUJUKULBUAUJUKULBU
      BULUJBUMUKDBGJMPUCUDUNUMCGMTEFHIKLEUEHUFACGMNUGFUEIUFCDGMOUGUHUI $.
      $( [25-Jul-2012] $)
  $}

  ${
    $d x A y z $.  $d x B y z $.
    eqvinc.1 $e |- A e. _V $.
    $( A variable introduction law for class equality.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    eqvinc $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex wi isseti ax-1 eqtr ex jca eximi ax-mp pm3.43 19.37aiv 
      eqtr2 19.23aiv impbii ) BCEZAFZBEZUCCEZGZAHUBUFAUBUDIZUBUEIZGZAHZUBUFIZAH
      UDAHUJABDJUDUIAUDUGUHUDUBKUDUBUEUCBCLMNOPUIUKAUBUDUEQOPRUFUBAUCBCSTUA $.
      $( [8-Jun-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    eqvincf.1 $e |- ( y e. A -> A. x y e. A ) $.
    eqvincf.2 $e |- ( y e. B -> A. x y e. B ) $.
    eqvincf.3 $e |- A e. _V $.
    $( A variable introduction law for class equality, using bound-variable
       hypotheses instead of distinct variable conditions. $)
    eqvincf $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex eqvinc hbeleq hban ax-17 eqeq1 anbi12d cbvex bitri ) CDH
      BIZCHZTDHZJZBKAIZCHZUDDHZJZAKBCDGLUCUGBAUAUBAABCEMABDFMNUGBOTUDHUAUEUBUFT
      UDCPTUDDPQRS $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    alexeq.1 $e |- A e. _V $.
    $( Two ways to express substitution of ` A ` for ` x ` in ` ph ` . $)
    alexeq $p |- ( A. x ( x = A -> ph ) <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq wa wex wi wal eqeq2 anbi1d exbidv imbi1d albidv sb56 vtoclb 
      bicomi ) BFZCGZAHZBIZUAAJZBKZTEFZGZAHZBIUGAJZBKUCUEECDUFCGZUHUBBUJUGUAAUF
      CTLZMNUJUIUDBUJUGUAAUKOPABEQRS $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality implies equivalence with substitution. $)
    ceqex $p |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cvv wcel cv wceq wa wex wb 19.8a isset sylibr wi eqeq2 anbi1d 
      exbidv bibi2d imbi12d ex wal ax-4 com12 visset alexeq syl5ibr impbid 
      vtoclg mpcom ) CEFZBGZCHZAUMAIZBJZKZUMUMBJUKUMBLBCMNULDGZHZAURAIZBJZKZOUM
      UPODCEUQCHZURUMVAUPUQCULPZVBUTUOAVBUSUNBVBURUMAVCQRSTURAUTURAUTUSBLUAURUR
      AOZBUBZAUTVEURAVDBUCUDABUQDUEUFUGUHUIUJ $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x y A $.
    ceqsexg.1 $e |- ( ps -> A. x ps ) $.
    ceqsexg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsexg $p |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( vy wb cv wceq wa wex wcel ax-17 hbe1 hbbi ceqex bibi12d biid vtoclgf ) 
      AAICJDKZALZCMZBICHDEHJDNCOUDBCUCCPFQUBAUDABACDRGSATUA $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d x ps $.
    ceqsexgv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsexgv $p |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( ax-17 ceqsexg ) ABCDEBCGFH $.
      $( [29-Dec-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsrexv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrexv $p |- ( A e. B -> ( E. x e. B ( x = A /\ ph ) <-> ps ) ) $=
      ( wcel cv wceq wa wex wrex eleq1 anbi12d ceqsexgv bianabs df-rex an12 
      exbii bitr4i syl5bb ) DEGZCHZDIZUCEGZAJZJZCKZBUDAJZCELZUBUHBUFUBBJCDEUDUE
      UBABUCDEMFNOPUJUEUIJZCKUHUICEQUGUKCUDUEARSTUA $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x C $.  $d x y D $.  $d x ps $.  $d y ch $.
    ceqsrex2v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsrex2v.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrex2v $p |- ( ( A e. C /\ B e. D ) ->
      ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ) $=
      ( wcel cv wceq wa wrex anbi2d rexbidv ceqsrexv anass rexbii r19.42v 
      bitri syl5bb sylan9bb ) FHLZDMFNZEMGNZOAOZEIPZDHPZUHBOZEIPZGILCUFUGUHAOZE
      IPZOZDHPUMUKUOUMDFHUGUNULEIUGABUHJQRSUJUPDHUJUGUNOZEIPUPUIUQEIUGUHATUAUGU
      NEIUBUCUAUDBCEGIKSUE $.
      $( [29-Oct-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel2.1 $e |- A e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel2 $p |- ( A e. B <-> A. x ( x = A -> x e. B ) ) $=
      ( cv wceq wcel wi wal eleq1 ceqsalv bicomi ) AEZBFMCGZHAIBCGZNOABDMBCJKL 
      $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An alternate definition of class membership when the class is a set. $)
    clel3g $p |- ( B e. C -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) $=
      ( wcel cv wceq wa wex eleq2 ceqsexgv bicomd ) CDEAFZCGBMEZHAIBCEZNOACDMCB
      JKL $.
      $( [13-Aug-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel3.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel3 $p |- ( A e. B <-> E. x ( x = B /\ A e. x ) ) $=
      ( cvv wcel cv wceq wa wex wb clel3g ax-mp ) CEFBCFAGZCHBNFIAJKDABCELM $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel4.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel4 $p |- ( A e. B <-> A. x ( x = B -> A e. x ) ) $=
      ( cv wceq wcel wi wal eleq2 ceqsalv bicomi ) AEZCFBMGZHAIBCGZNOACDMCBJKL 
      $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d y A $.  $d x y $.  $d y ph $.
    $( Restricted quantifier version of Theorem 19.3 of [Margaris] p. 89.  We
       don't need the non-empty class condition of ~ r19.3rzv when there is an
       outer quantifier. $)
    rr19.3v $p |- ( A. x e. A A. y e. A ph <-> A. x e. A ph ) $=
      ( wral cv wceq biidd rcla4v ralimia wcel ax-1 r19.21aiv ralimi impbii ) 
      ACDEZBDEABDEPABDAACBFZDCFZQGAHIJAPBDAACDARDKLMNO $.
      $( [25-Oct-2012] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  We
       don't need the non-empty class condition of ~ r19.28zv when there is an
       outer quantifier. $)
    rr19.28v $p |- ( A. x e. A A. y e. A ( ph /\ ps )
                      <-> A. x e. A ( ph /\ A. y e. A ps ) ) $=
      ( wa wral cv wcel wceq biidd rcla4v simpl ralimi syl5 wi simpr a1i jcad 
      ralimia r19.28av impbii ) ABFZDEGZCEGABDEGZFZCEGUDUFCECHZEIZUDAUEUHADEGAU
      DAADUGEDHUGJAKLUCADEABMNOUDUEPUHUCBDEABQNRSTUFUDCEABDEUANUB $.
      $( [29-Oct-2012] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x ps $.
    $( Membership in a class abstraction, using implicit substitition.  (Closed
       theorem version of ~ elabg .)  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    elabgt $p |- ( ( A e. B /\ A. x ( x = A -> ( ph <-> ps ) ) ) ->
                 ( A e. { x | ph } <-> ps ) ) $=
      ( vy wcel cv wceq cab wb wi wal ax-17 hbab1 hbel hbbi pm5.5 cla4gf imp 
      eleq1 abid syl5bbr bibi1d biimpd a2i alimi sylan2 ) DEGZCHZDIZDACJZGZBKZL
      ZCMZUNUKABKZLZCMUIUPUNUOUNCFDEFHDGCNZUMBCCFFDULUSACFOPBCNQUKUNRSTURUOCUKU
      QUNUKUQUNUKAUMBUKUJULGUMAUJDULUAACUBUCUDUEUFUGUH $.
      $( [8-Jun-2011] $) $( [7-Nov-2005] $)
  $}

  ${
    $d ps y $.  $d x A y $.  $d y ph $.
    elabf.1 $e |- ( ps -> A. x ps ) $.
    elabf.2 $e |- A e. _V $.
    elabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition. $)
    elabf $p |- ( A e. { x | ph } <-> ps ) $=
      ( vy cab wcel wb cv ax-17 hbab1 hbel hbbi wceq eleq1 abid syl5bbr bitr3d 
      vtoclef ) DACIZJZBKCDUDBCCHHDUCHLDJCMACHNOEPFCLZDQZAUDBUFUEUCJUDAUEDUCRAC
      STGUAUB $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab.1 $e |- A e. _V $.
    elab.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44. $)
    elab $p |- ( A e. { x | ph } <-> ps ) $=
      ( ax-17 elabf ) ABCDBCGEFH $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d y A $.  $d z ph $.  $d x z $.  $d y z $.
    elabgf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elabgf.2 $e |- ( ps -> A. x ps ) $.
    elabgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44.  This version has bound-variable
       hypotheses in place of distinct variable restrictions. $)
    elabgf $p |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) $=
      ( vz cv cab wcel wb hbab1 hbel hbbi wceq eleq1 bibi12d abid vtoclgf ) CKZ
      ACLZMZANEUDMZBNCDEFGUFBCCDJEUDGACJOPHQUCERUEUFABUCEUDSITACUAUB $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    elabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44. $)
    elabg $p |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wcel ax-17 elabgf ) ABCGDEGHDICJBCJFK $.
      $( [14-Apr-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab2g $p |- ( A e. C -> ( A e. B <-> ps ) ) $=
      ( wcel cab elabg eleq2i syl5bb ) DFIDACJZIBDEIABCDFGKENDHLM $.
      $( [12-Sep-2004] $) $( [13-Sep-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab2.1 $e |- A e. _V $.
    elab2.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2.3 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab2 $p |- ( A e. B <-> ps ) $=
      ( cvv wcel wb elab2g ax-mp ) DIJDEJBKFABCDEIGHLM $.
      $( [12-Sep-2004] $) $( [13-Sep-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab4g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab4g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab4g $p |- ( A e. B <-> ( A e. _V /\ ps ) ) $=
      ( wcel cvv wa elisset pm4.71ri elab2g pm5.32i bitri ) DEHZDIHZPJQBJPQDEKL
      QPBABCDEIFGMNO $.
      $( [17-Oct-2012] $)
  $}

  ${
    $d y A $.
    elab3gf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elab3gf.2 $e |- ( ps -> A. x ps ) $.
    elab3gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabgf . $)
    elab3gf $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( wcel cab wb wn elabgf ibi pm2.21 impbid2 ja ) BEFJEACKZJZBLBMTBTBABCDES
      GHINOBTPQABCDEFGHINR $.
      $( [6-Sep-2011] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    elab3g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabg . $)
    elab3g $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wcel ax-17 elab3gf ) ABCGDEGHDICJBCJFK $.
      $( [14-Jun-2011] $) $( [29-Aug-2006] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab3.1 $e |- ( ps -> A e. _V ) $.
    elab3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction using implicit substitution. $)
    elab3 $p |- ( A e. { x | ph } <-> ps ) $=
      ( cvv wcel wi cab wb elab3g ax-mp ) BDGHIDACJHBKEABCDGFLM $.
      $( [10-Nov-2000] $)
  $}

  ${
    $d y A $.  $d y B $.
    elrabf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elrabf.2 $e |- ( y e. B -> A. x y e. B ) $.
    elrabf.3 $e |- ( ps -> A. x ps ) $.
    elrabf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution.  This version has bound-variable hypotheses in place of
       distinct variable restrictions. $)
    elrabf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( crab wcel cvv wa elisset adantr cv cab hbel hban wceq eleq1 anbi12d 
      elabgf df-rab eleq2i syl5bb pm5.21nii ) EACFKZLZEMLZEFLZBNZEUIOULUKBEFOPU
      KECQZFLZANZCRZLUMUJUPUMCDEMGULBCCDDEFGHSITUNEUAUOULABUNEFUBJUCUDUIUQEACFU
      EUFUGUH $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution. $)
    elrab $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( vy cv wcel ax-17 elrabf ) ABCGDEGHZDICJLEICJBCJFK $.
      $( [21-May-1999] $)

    $( Membership in a restricted class abstraction, using implicit
       substitution. $)
    elrab3 $p |- ( A e. B -> ( A e. { x e. B | ph } <-> ps ) ) $=
      ( crab wcel elrab baib ) DACEGHDEHBABCDEFIJ $.
      $( [5-Oct-2006] $)
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elrab2.2 $e |- C = { x e. B | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elrab2 $p |- ( A e. C <-> ( A e. B /\ ps ) ) $=
      ( wcel crab wa eleq2i elrab bitri ) DFIDACEJZIDEIBKFODHLABCDEGMN $.
      $( [2-Nov-2006] $)
  $}

  ${
    $d x y $.  $d ps y $.
    ralab.1 $e |- ( y = x -> ( ph <-> ps ) ) $.
    $( Universal quantification over a class abstraction.  (Contributed by Jeff
       Madsen, 10-Jun-2010.) $)
    ralab $p |- ( A. x e. { y | ph } ch <-> A. x ( ps -> ch ) ) $=
      ( cab wral cv wcel wi wal df-ral visset elab imbi1i albii bitri ) CDAEGZH
      DIZSJZCKZDLBCKZDLCDSMUBUCDUABCABETDNFOPQR $.
      $( [20-Oct-2011] $) $( [10-Jun-2010] $)

    $d A x y $.  $d ph x $.
    $( Universal quantification over a restricted class abstraction.
       (Contributed by Jeff Madsen, 10-Jun-2010.) $)
    ralrab $p |- ( A. x e. { y e. A | ph } ch <-> A. x e. A ( ps -> ch ) ) $=
      ( cv wcel wa cab wral wi wal crab wceq eleq1 anbi12d ralab df-rab raleqi 
      df-ral impexp albii bitr4i 3bitr4i ) CDEHZFIZAJZEKZLDHZFIZBJZCMZDNZCDAEFO
      ZLBCMZDFLZUIUMCDEUGUKPUHULABUGUKFQGRSCDUPUJAEFTUAURULUQMZDNUOUQDFUBUNUSDU
      LBCUCUDUEUF $.
      $( [20-Oct-2011] $) $( [10-Jun-2010] $)
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    cbvab.1 $e |- ( ph -> A. y ph ) $.
    cbvab.2 $e |- ( ps -> A. x ps ) $.
    cbvab.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by Andrew Salmon, 11-Jul-2011.) $)
    cbvab $p |- { x | ph } = { y | ps } $=
      ( vz cab cv wsbc wcel hbsb wceq sbequ wb equcoms bicomd sbie syl5bbr 
      df-clab 3bitr4i eqriv ) HACIZBDIZACHJZKBDUFKZUFUDLUFUELAUGCHBDHCFMCJZUFNB
      DUHKUGABCHDOBADCEDJUHNABABPCDGQRSTSAHCUABHDUAUBUC $.
      $( [11-Jul-2011] $) $( [10-Jul-2011] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution. $)
    cbvabv $p |- { x | ph } = { y | ps } $=
      ( ax-17 cbvab ) ABCDADFBCFEG $.
      $( [11-Jul-2011] $) $( [26-May-1999] $)
  $}

  ${
    $d A w z $.  $d y w $.  $d x w $.  $d ph w $.  $d ps w $.
    cbvrab.1 $e |- ( z e. A -> A. x z e. A ) $.
    cbvrab.2 $e |- ( z e. A -> A. y z e. A ) $.
    cbvrab.3 $e |- ( ph -> A. y ph ) $.
    cbvrab.4 $e |- ( ps -> A. x ps ) $.
    cbvrab.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution.  This version has bound-variable hypotheses
       in place of distinct variable conditions.  (Contributed by Andrew
       Salmon, 11-Jul-2011.) $)
    cbvrab $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vw cv wcel wa cab crab wsbc ax-17 hblem hbs1 hban wceq eleq1 sbequ12 
      anbi12d cbvab hbsb sbequ sbie syl6bb eqtri df-rab 3eqtr4i ) CMZFNZAOZCPZD
      MZFNZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUC
      UPVDAVEUOVCFUDACLUEUFUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUCZVDUTVEBVCUSFU
      DVGVEACUSRBALDCUIABCDJKUJUKUFUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [26-Sep-2003] $)
  $}

  ${
    $d x y z A $.  $d y ph $.  $d x ps $.
    cbvrabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution. $)
    cbvrabv $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vz cv wcel ax-17 cbvrab ) ABCDGEGHEIZCJLDJADJBCJFK $.
      $( [11-Jul-2011] $) $( [26-May-1999] $)
  $}

  ${
    $d w y A $.  $d w x z $.  $d x y $.  $d A z $.
    $( Identity used to create closed-form versions of bound-variable
       hypothesis builders for class expressions.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    abidhb $p |- ( A. y ( y e. A -> A. x y e. A ) ->
                 { z | A. x z e. A } = A ) $=
      ( vw cv wcel wal wi cab hba1 ax4 impbid2 abbid wceq eleq1 albidv cbvabv 
      abid2 3eqtr3g ax-17 cbvab syl5eq ) BFZDGZUEAHZIZBHZEFZDGZAHZEJZDCFZDGZAHZ
      CJUHUFBJUEBJULDUHUFUEBUGBKUHUFUEUEALUGBLMNUFUKBEUDUIOUEUJAUDUIDPQRBDSTUOU
      KCEUOEUAUKCUAUMUIOUNUJAUMUIDPQUBUC $.
      $( [11-Jul-2011] $) $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y ph $.  $d x y z $.
    hbeqd.1 $e |- ( ph -> A. x ph ) $.
    hbeqd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbeqd.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbeq . $)
    hbeqd $p |- ( ph -> ( A = B -> A. x A = B ) ) $=
      ( vz cv wcel wal cab wceq wi hba1 hbab hbeq a1i 19.21aiv abidhb syl 
      eqeq12d albid 3imtr3d ) AIJZDKZBLZIMZUFEKZBLZIMZNZUMBLZDENZUOBLUMUNOABCCU
      IULUHBICUGBPQUKBICUJBPQRSAUIDULEACJZDKZUQBLOZCLUIDNAURCGTBCIDUAUBAUPEKZUS
      BLOZCLULENAUTCHTBCIEUAUBUCZAUMUOBFVAUDUE $.
      $( [6-Dec-2005] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y ph $.  $d x y z $.
    hbeld.1 $e |- ( ph -> A. x ph ) $.
    hbeld.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbeld.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbel . $)
    hbeld $p |- ( ph -> ( A e. B -> A. x A e. B ) ) $=
      ( vz cv wcel wal cab wi hba1 hbab hbel a1i wceq 19.21aiv abidhb syl 
      eleq12d albid 3imtr3d ) AIJZDKZBLZIMZUFEKZBLZIMZKZUMBLZDEKZUOBLUMUNNABCCU
      IULUHBICUGBOPUKBICUJBOPQRAUIDULEACJZDKZUQBLNZCLUIDSAURCGTBCIDUAUBAUPEKZUS
      BLNZCLULESAUTCHTBCIEUAUBUCZAUMUOBFVAUDUE $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x z $.  $d x y $.  $d z A $.
    dedhb.1 $e |- ( A = { z | A. x z e. A } -> ( ph <-> ps ) ) $.
    dedhb.2 $e |- ps $.
    $( A deduction theorem for converting the inference
       ` |- ( y e. A -> A. x y e. A ) ` => ` |- ph ` into a closed theorem.
       Use ~ hba1 and ~ hbab to eliminate the hypothesis of the substitution
       instance ` ps ` of the inference.  For converting the inference form
       into a deduction form, ~ abidhb is useful. $)
    dedhb $p |- ( A. y ( y e. A -> A. x y e. A ) -> ph ) $=
      ( cv wcel wal wi cab wceq wb abidhb eqcomd syl mpbiri ) DIFJZTCKLDKZABHUA
      FEIFJCKEMZNABOUAUBFCDEFPQGRS $.
      $( [11-Jul-2011] $) $( [8-Dec-2006] $)
  $}

  ${
    $d x y A $.
    $( Equality has existential uniqueness. $)
    eueq $p |- ( A e. _V <-> E! x x = A ) $=
      ( vy cv wceq wex wa wi wal cvv wcel weu eqtr3 gen2 biantru isset eqeq1 
      eu4 3bitr4i ) ADZBEZAFZUBUACDZBEZGTUCEHZCIAIZGBJKUAALUFUBUEACTUCBMNOABPUA
      UDACTUCBQRS $.
      $( [25-Nov-1994] $)
  $}

  ${
    $d x A $.
    eueq1.1 $e |- A e. _V $.
    $( Equality has existential uniqueness. $)
    eueq1 $p |- E! x x = A $=
      ( cvv wcel cv wceq weu eueq mpbi ) BDEAFBGAHCABIJ $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    eueq2.1 $e |- A e. _V $.
    eueq2.2 $e |- B e. _V $.
    $( Equality has existential uniqueness (split into 2 cases). $)
    eueq2 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) $=
      ( cv wceq wa wn wo weu notnot1 eueq1 euanv biimpri mpan2 euorv syl11anc 
      bianfd orbi2d orcom syl5bb eubidv mpbid mpdan id orbi1d pm2.61i ) AABGZCH
      ZIZAJZUJDHZIZKZBLZAUMULKZBLZUQAUMJULBLZUSAMZAUKBLZUTBCENUTAVBIAUKBOPQUMUL
      BRSAURUPBAULUMKUPURAUMUOULAUMUNVATUAUMULUBUCUDUEUMAUOKZBLZUQUMUOBLZVDUMUN
      BLZVEBDFNVEUMVFIUMUNBOPQAUOBRUFUMVCUPBUMAULUOUMAUKUMUGTUHUDUEUI $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d x ps $.  $d x A $.  $d x B $.  $d x C $.
    eueq3.1 $e |- A e. _V $.
    eueq3.2 $e |- B e. _V $.
    eueq3.3 $e |- C e. _V $.
    eueq3.4 $e |- -. ( ph /\ ps ) $.
    $( Equality has existential uniqueness (split into 3 cases). $)
    eueq3 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( cv wceq wa wo wn w3o weu pm2.45 wi imnan mpbir con2i jaoi eueq1 euanv 
      biimpri mpan2 euorv syl11anc notnot1 orcs bianfd orbi12d orbi2d orcom 
      3orass 3bitr4g eubidv mpbid pm2.46 olcs orbi1d df-3or syl6bbr mpdan 
      syl6bb orass ecase3 ) ABACKZDLZMZABNZOZVIELZMZBVIFLZMZPZCQZAVMBNZVKNZCQZV
      SAVTOVKCQZWBVTAVMAOBABRZABABOZSABMOJABTUAZUBZUCUBAVJCQZWCCDGUDWCAWHMAVJCU
      EUFUGVTVKCUHUIAWAVRCAVKVTNVKVOVQNZNZWAVRAVTWIVKAVMVOBVQAVMVNABVMOZVLUJZUK
      ULABVPWFULUMUNVTVKUOVKVOVQUPZUQURUSBAVMNZVQNZCQZVSBWNOVQCQZWPWNBAWEVMWFAB
      UTZUCUBBVPCQZWQCFIUDWQBWSMBVPCUEUFUGWNVQCUHUIBWOVRCBWOVKVONZVQNVRBWNWTVQB
      AVKVMVOBAVJWGULBVMVNABWKWLVAULUMVBVKVOVQVCVDURUSVMVLVONZCQZVSVMVOCQZXBVMV
      NCQZXCCEHUDXCVMXDMVMVNCUEUFUGVLVOCUHVEVMXAVRCVMABVONZNWJXAVRVMAVKXEWIVMAV
      JWDULVMXEVQVONWIVMBVQVOVMBVPWRULVBVQVOUOVFUMABVOVGWMUQURUSVH $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x A $.
    $( There is at most one set equal to a class. $)
    moeq $p |- E* x x = A $=
      ( cv wceq wmo wex weu wi cvv wcel isset eueq bitr3i biimpi df-mo mpbir ) 
      ACBDZAEQAFZQAGZHRSRBIJSABKABLMNQAOP $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d x y A $.  $d x y B $.  $d x y C $.
    moeq3.1 $e |- B e. _V $.
    moeq3.2 $e |- C e. _V $.
    moeq3.3 $e |- -. ( ph /\ ps ) $.
    $( "At most one" property of equality (split into 3 cases).  (The first 2
       hypotheses could be eliminated with longer proof.) $)
    moeq3 $p |- E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( vy cvv wcel cv wceq wa wo wn w3o wmo weu eqeq2 anbi2d biidd 3orbi123d 
      eubidv visset eueq3 vtoclg eumo syl wi wal pm2.21 eleq1 mpbii syl5 
      anim2d orim1d 3orass 3imtr4g 19.21aiv euimmo mpi pm2.61i ) DKLZACMZDNZOZA
      BPQVFENOZBVFFNOZRZCSZVEVKCTZVLAVFJMZNZOZVIVJRZCTZVMJDKVNDNZVQVKCVSVPVHVIV
      IVJVJVSVOVGAVNDVFUAUBVSVIUCVSVJUCUDUEABCVNEFJUFGHIUGZUHVKCUIUJVEQZVRVLVTW
      AVKVQUKZCULVRVLUKWAWBCWAVHVIVJPZPVPWCPVKVQWAVHVPWCWAVGVOAWAVEVOVGVEVOUMVG
      VFKLVECUFVFDKUNUOUPUQURVHVIVJUSVPVIVJUSUTVAVKVQCVBUJVCVD $.
      $( [23-Apr-1995] $)
  $}

  ${
    $d x y A $.
    mosub.1 $e |- E* x ph $.
    $( "At most one" remains true after substitution. $)
    mosub $p |- E* x E. y ( y = A /\ ph ) $=
      ( cv wceq wmo wal wa wex moeq ax-gen moexexv mp2an ) CFDGZCHABHZCIPAJCKBH
      CDLQCEMPACBNO $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Theorem for inferring "at most one." $)
    mo2icl $p |- ( A. x ( ph -> x = A ) -> E* x ph ) $=
      ( vy cvv wcel cv wceq wi wal wmo eqeq2 imbi2d albidv imbi1d wex 19.8a 
      ax-17 mo2 sylibr vtoclg wn visset eleq1 mpbii imim2i con3d com12 alimdv 
      alnex exmo ori sylbi syl6 pm2.61i ) CEFZABGZCHZIZBJZABKZIZAUQDGZHZIZBJZVA
      IVBDCEVCCHZVFUTVAVGVEUSBVGVDURAVCCUQLMNOVFVFDPVAVFDQABDADRSTUAUPUBZUTAUBZ
      BJZVAVHUSVIBUSVHVIUSAUPURUPAURUQEFUPBUCUQCEUDUEUFUGUHUIVJABPZUBVAABUJVKVA
      ABUKULUMUNUO $.
      $( [17-Oct-1996] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x y ps $.
    moi2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Consequence of "at most one." $)
    moi2 $p |- ( ( ( A e. B /\ E* x ph ) /\ ( ph /\ ps ) ) -> x = A ) $=
      ( vy wcel wmo wa cv wceq wsbc wi wal wex wb visset eqvinc hbs1 ax-17 
      hbbi sbequ12 bicomd sylan9bb 19.23ai sylbi anbi2d eqeq2 imbi12d cla4gv 
      a4sd mo4f syl5ib imp31 ) DEHZACIZABJZCKZDLZUPAACGKZMZJZUSVALZNZGOZCOURUTN
      ZUQUPVFVGCVEVGGDEVADLZVCURVDUTVHVBBAVHVDUTJZCPVBBQZCVADGRSVIVJCVBBCACGTZB
      CUAUBVDVBAUTBVDAVBACGUCZUDFUEUFUGUHVADUSUIUJUKULAVBCGVKVLUMUNUO $.
      $( [29-Jun-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.  $d y ph $.  $d x y ps $.
    moi.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    moi.2 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( MAY BE REVISED - is there a way to shorten w/ moi2? $)
    $( Equality implied by "at most one." $)
    moi $p |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ( ps /\ ch ) ) ->
              A = B ) $=
      ( vy wcel wa wmo wceq cv wsbc wi wal ax-17 hbs1 hban hbim hbal anbi1d 
      eqeq1 imbi12d albidv cla4gf wex wb visset eqvinc hbbi sbequ12 bicomd 
      sylan9bb 19.23ai sylbi anbi2d eqeq2 cla4gv sylan9 mo4f syl5ib 3imp ) EGLZ
      FHLZMZADNZBCMZEFOZVIAADKPZQZMZDPZVMOZRZKSZDSZVKVLRZVJVGVTBVNMZEVMOZRZKSZV
      HWAVSWEDKEGVMELDTWDDKWBWCDBVNDBDTADKUAZUBWCDTUCUDVPEOZVRWDKWGVOWBVQWCWGAB
      VNIUEVPEVMUFUGUHUIWDWAKFHVMFOZWBVKWCVLWHVNCBWHVQVPFOZMZDUJVNCUKZDVMFKULUM
      WJWKDVNCDWFCDTUNVQVNAWICVQAVNADKUOZUPJUQURUSUTVMFEVAUGVBVCAVNDKWFWLVDVEVF
      $.
      $( [18-Feb-2006] $)
  $}

  ${
    $d x ph $.  $d x A $.
    euxfr2.1 $e |- A e. _V $.
    euxfr2.2 $e |- E* y x = A $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    euxfr2 $p |- ( E! x E. y ( x = A /\ ph ) <-> E! y ph ) $=
      ( cv wceq wa wex weu wmo wi 2euswap moani ancom mobii mpbi mpg moeq 
      impbii biidd ceqsexv eubii bitri ) BGDHZAIZCJBKZUGBJZCKZACKUHUJUGCLZUHUJM
      BUGBCNAUFIZCLUKUFACFOULUGCAUFPZQRSUGBLZUJUHMCUGCBNULBLUNUFABBDTOULUGBUMQR
      SUAUIACAABDEUFAUBUCUDUE $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.
    euxfr.1 $e |- A e. _V $.
    euxfr.2 $e |- E! y x = A $.
    euxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    euxfr $p |- ( E! x ph <-> E! y ps ) $=
      ( weu cv wceq wa wex euex ax-mp biantrur 19.41v pm5.32i exbii 3bitr2i 
      eubii eumoi euxfr2 bitri ) ACICJEKZBLZDMZCIBDIAUGCAUEDMZALUEALZDMUGUHAUED
      IUHGUEDNOPUEADQUIUFDUEABHRSTUABCDEFUEDGUBUCUD $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d y z w ph $.  $d x z ps $.  $d y z w A $.  $d x z B $.  $d x y w $.
    euind.0 $e |- B e. _V $.
    euind.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    euind.2 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality. $)
    euind $p |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph )
                 -> E! z A. x ( ph -> z = A ) ) $=
      ( vw cv wceq wi wal weu wex wa eqeq1 imbi2d albidv eu4 wb eqeq2 imim2i 
      bi2 an32 ancom anbi1i 3bitri imbi1i impexp 3bitr3i sylib syl 2alimi 
      19.23v albii 19.21v bitri eximdv cbvexv isseti biantrur exbii 19.41v 
      excom bitr3i syl5ib imp biimpi com12 19.26 prth pm4.24 eqtr3 imim12i 
      alimi sylbir syl5 19.21aivv adantl sylanbrc ) AELZFMZNZCOZEPWGEQZWGAKLZFM
      ZNZCOZRZWDWIMZNZKOEOZABRZFGMZNZDOCOZACQZRWGWLEKWNWFWKCWNWEWJAWDWIFSTUAUBW
      TXAWHWTWDGMZBRZDQZEQZWHXAWTXDWGEWTXCWFNZDOZCOZXDWGNZWSXFCDWSWQWEXBUCZNZXF
      WRXJWQFGWDUDUEXKWQXBWENZNZXFXJXLWQWEXBUFUEWQXBRZWENXCARZWENXMXFXNXOWEXNAX
      BRZBRXBARZBRXOABXBUGXPXQBAXBUHUIXBABUGUJUKWQXBWEULXCAWEULUMUNUOUPXHXDWFNZ
      COXIXGXRCXCWFDUQURXDWFCUSUTUNVAXABDQXBEQZBRZDQZXEABCDIVBBXTDXSBEGHVCVDVEY
      AXCEQZDQXEYBXTDXBBEVFVEXCDEVGVHUJVIVJXAWPWTXAWOEKXAAWNNZCOZWNWMYDXAWNYDXA
      WNNAWNCUQVKVLWMWFWKRZCOYDWFWKCVMYEYCCYEAARZWEWJRZNYCAWEAWJVNAYFYGWNAYFAVO
      VKWDWIFVPVQUOVRVSVTWAWBWC $.
      $( [11-Oct-2010] $)
  $}

  $( Restricted unique existence implies restricted existence. $)
  reurex $p |- ( E! x e. A ph -> E. x e. A ph ) $=
    ( cv wcel wa weu wex wreu wrex euex df-reu df-rex 3imtr4i ) BDCEAFZBGOBHABC
    IABCJOBKABCLABCMN $.
    $( [19-Aug-1999] $)

  $( Restricted uniqueness in terms of "at most one." $)
  reu5 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) ) $=
    ( cv wcel wa weu wex wmo wreu wrex eu5 df-reu df-rex anbi1i 3bitr4i ) BDCEA
    FZBGQBHZQBIZFABCJABCKZSFQBLABCMTRSABCNOP $.
    $( [23-May-1999] $)

  ${
    $d x y A $.  $d y ph $.
    $( A way to express restricted uniqueness. $)
    reu2 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( cv wcel wa weu wex wsbc wceq wi wal wreu wrex wral ax-17 eu2 df-reu 
      df-rex df-ral 19.21v hbs1 hban eleq1 sbequ12 anbi12d sbie anbi2i an4 
      bitri imbi1i impexp 3bitri albii imbi2i 3bitr4i bitr4i anbi12i ) BEZDFZAG
      ZBHVBBIZVBVBBCEZJZGZUTVDKZLZCMZBMZGABDNABDOZAABVDJZGZVGLZCDPZBDPZGVBBCVBC
      QRABDSVKVCVPVJABDTVPVAVOLZBMVJVOBDUAVIVQBVAVDDFZVNLZLZCMVAVSCMZLVIVQVAVSC
      UBVHVTCVHVAVRGZVMGZVGLWBVNLVTVFWCVGVFVBVRVLGZGWCVEWDVBVBWDBCVRVLBVRBQABCU
      CUDVGVAVRAVLUTVDDUEABCUFUGUHUIVAAVRVLUJUKULWBVMVGUMVAVRVNUMUNUOVOWAVAVNCD
      UAUPUQUOURUSUQ $.
      $( [22-Nov-1994] $)

    $( A way to express restricted uniqueness. $)
    reu6 $p |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) $=
      ( wreu cv wcel wa weu wceq wb wal wex wral wrex df-reu df-eu wi 19.28v 
      wsbc eleq1 sbequ12 anbi12d eqeq1 bibi12d eqid tbt simpl sylbir syl6bi 
      a4imv bi1 expdimp bi2 simpr syl6 adantr impbid ex a4s jca a5i imim2i 
      imp3a adantl eleq1a imp com23 adantll jcai alimi impbii df-ral anbi2i 
      3bitr4i exbii df-rex bitr4i 3bitri ) ABDEBFZDGZAHZBIWBVTCFZJZKZBLZCMZAWDK
      ZBDNZCDOZABDPWBBCQWGWCDGZWIHZCMWJWFWLCWKWAWHRZHZBLZWKWMBLZHWFWLWKWMBSWFWO
      WEWNBWFWKWMWEWKBCWDWEWKABWCTZHZWCWCJZKZWKWDWBWRWDWSWDWAWKAWQVTWCDUAABCUBU
      CVTWCWCUDUEWTWRWKWSWRWCUFUGWKWQUHUIUJUKWEWMBWEWAWHWEWAHAWDWEWAAWDWBWDULUM
      WEWDARZWAWEWDWBAWBWDUNWAAUOUPUQURUSUTVAVBWNWEBWNWBWDWMWBWDRWKWMWAAWDWHAWD
      RWAAWDULVCVDVEWNWDWBWNWDHWAAWNWDWAWKWDWARWMWCDVTVFUQVGWMWDWAARZWKWMWDXBWM
      WAWDAWHXAWAAWDUNVCVHVGVIVJUSURVKVLWIWPWKWHBDVMVNVOVPWICDVQVRVS $.
      $( [20-Oct-2006] $)

    $( A way to express restricted uniqueness. $)
    reu3 $p |- ( E! x e. A ph <->
               ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) $=
      ( wreu wrex cv wceq wi wral wa reurex wb reu6 bi1 ralimi reximi sylbi 
      jca wex rexex anim2i wcel weu wal ax-17 eu3 df-reu df-rex df-ral impexp 
      albii bitr4i exbii anbi12i 3bitr4i sylibr impbii ) ABDEZABDFZABGZCGHZIZBD
      JZCDFZKZUSUTVEABDLUSAVBMZBDJZCDFVEABCDNVHVDCDVGVCBDAVBOPQRSVFUTVDCTZKZUSV
      EVIUTVDCDUAUBVADUCZAKZBUDVLBTZVLVBIZBUEZCTZKUSVJVLBCVLCUFUGABDUHUTVMVIVPA
      BDUIVDVOCVDVKVCIZBUEVOVCBDUJVNVQBVKAVBUKULUMUNUOUPUQUR $.
      $( [24-Oct-2006] $)
  $}

  ${
    $d x y z A $.  $d y z ph $.  $d x z ps $.
    rmo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Restricted "at most one" using implicit substitution. $)
    rmo4 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) $=
      ( cv wcel wa wceq wi wal wral wmo an4 ancom anbi1i bitri imbi1i impexp 
      3bitri albii df-ral r19.21v 3bitr2i eleq1 anbi12d mo4 3bitr4i ) CGZEHZAIZ
      DGZEHZBIZIZUJUMJZKZDLZCLUKABIZUQKZDEMZKZCLULCNVBCEMUSVCCUSUNUKVAKZKZDLVDD
      EMVCURVEDURUNUKIZUTIZUQKVFVAKVEUPVGUQUPUKUNIZUTIVGUKAUNBOVHVFUTUKUNPQRSVF
      UTUQTUNUKVATUAUBVDDEUCUKVADEUDUEUBULUOCDUQUKUNABUJUMEUFFUGUHVBCEUCUI $.
      $( [24-Oct-2006] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu4 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( wreu wrex cv wcel wa wmo wceq wi wral reu5 rmo4 anbi2i bitri ) ACEGACEH
      ZCIZEJAKCLZKTABKUADIMNDEOCEOZKACEPUBUCTABCDEFQRS $.
      $( [23-Nov-1994] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu7 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             E. x e. A A. y e. A ( ps -> x = y ) ) ) $=
      ( vz wreu wrex cv wceq wi wral wa reu3 eqeq1 eqcom syl6bb imbi12d 
      cbvralv rexbii imbi2d ralbidv cbvrexv bitri anbi2i ) ACEHACEIZACJZGJZKZLZ
      CEMZGEIZNUGBUHDJZKZLZDEMZCEIZNACGEOUMURUGUMBUIUNKZLZDEMZGEIURULVAGEUKUTCD
      EUOABUJUSFUOUJUNUIKUSUHUNUIPUNUIQRSTUAVAUQGCEUIUHKZUTUPDEVBUSUOBUIUHUNPUB
      UCUDUEUFUE $.
      $( [24-Oct-2006] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu8 $p |- ( E! x e. A ph <-> E. x e. A ( ph /\
                A. y e. A ( ps -> x = y ) ) ) $=
      ( wreu cv wceq wb wral wrex wi wa cbvreuv reu6 wcel eqcom imbi2i ralbii 
      a1i biimt wal df-ral bi2.04 albii visset eleq1 imbi12d bicomd eqcoms 
      ceqsalv 3bitrri syl6bb anbi12d ancom syl5bb r19.26 syl6rbbr dfbi2 
      rexbiia 3bitri ) ACEGBDEGBDHZCHZIZJZDEKZCELABVDVCIZMZDEKZNZCELABCDEFOBDCE
      PVGVKCEVDEQZBVEMZVEBMZNZDEKZVKVGVLVKVMDEKZVNDEKZNZVPVLVJANVSVKVLVJVQAVRVJ
      VQJVLVIVMDEVHVEBVDVCRSTUAVLAVLAMZVRVLAUBVRVCEQZVNMZDUCVEWABMZMZDUCVTVNDEU
      DWBWDDWAVEBUEUFWCVTDVDCUGWCVTJVDVCVHVTWCVHVLWAABVDVCEUHFUIUJUKULUMUNUOAVJ
      UPUQVMVNDEURUSVFVODEBVEUTTUQVAVB $.
      $( [24-Oct-2006] $)
  $}

  ${
    $d x y A $.
    $( A condition allowing swap of uniqueness and existential quantifiers. $)
    2reuswap $p |- ( A. x e. A E* y ( y e. A /\ ph ) ->
                   ( E! x e. A E. y e. A ph -> E! y e. A E. x e. A ph ) ) $=
      ( cv wcel wa wmo wral wal wrex wreu wi df-ral moanimv albii bitr4i wex 
      weu 2euswap df-reu df-rex r19.42v an12 exbii 3bitr3i eubii bitri bitr3i 
      3imtr4g sylbi ) CEDFZAGZCHZBDIZBEDFZUMGZCHZBJZACDKZBDLZABDKZCDLZMUOUPUNMZ
      BJUSUNBDNURVDBUPUMCOPQUSUQCRZBSZUQBRZCSZVAVCUQBCTVAUPUTGZBSVFUTBDUAVIVEBU
      PAGZCDKULVJGZCRVIVEVJCDUBUPACDUCVKUQCULUPAUDUEUFUGUHVCULVBGZCSVHVBCDUAVLV
      GCVLUMBDKVGULABDUCUMBDUBUIUGUHUJUK $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d w y z A $.  $d x z B $.  $d w x y z C $.  $d w y z ph $.  $d x z ps $.
    reuind.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    reuind.2 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality. $)
    reuind $p |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) )
         -> A = B ) /\ E. x ( A e. C /\ ph ) )
                 -> E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) $=
      ( vw wcel wa cv wceq wi wal wreu wrex wral wex eqeq1 imbi2d albidv reu4 
      wb eqeq2 imim2i bi2 an32 ancom anbi1i 3bitri imbi1i impexp 3bitr3i sylib 
      syl 2alimi 19.23v an12 eleq1 adantr pm5.32ri bitr4i exbii 19.42v bitri 
      albii 19.21v exp3a reximdvai eleq1d anbi12d cbvexv risset rexcom4 
      r19.41v bitr2i syl5ib imp biimpi com12 19.26 prth pm4.24 eqtr3 imim12i 
      alimi sylbir syl5 a1d r19.21aivv adantl sylanbrc ) FHLZAMZENZFOZPZCQZEHRX
      AEHSZXAWQKNZFOZPZCQZMZWRXCOZPZKHTEHTZWQGHLZBMZMZFGOZPZDQCQZWQCUAZMXAXFEKH
      XHWTXECXHWSXDWQWRXCFUBUCUDUEXPXQXBXPWRGOZBMZDUAZEHSZXBXQXPXTXAEHXPWRHLZXT
      XAXPXRXLMZWTPZDQZCQZYBXTMZXAPZXOYDCDXOXMWSXRUFZPZYDXNYIXMFGWRUGUHYJXMXRWS
      PZPZYDYIYKXMWSXRUIUHXMXRMZWSPYCWQMZWSPYLYDYMYNWSYMWQXRMZXLMXRWQMZXLMYNWQX
      LXRUJYOYPXLWQXRUKULXRWQXLUJUMUNXMXRWSUOYCWQWSUOUPUQURUSYFYGWTPZCQYHYEYQCY
      EYCDUAZWTPYQYCWTDUTYRYGWTYRYBXSMZDUAYGYCYSDYCXKXSMYSXRXKBVAXSYBXKXRYBXKUF
      BWRGHVBVCVDVEVFYBXSDVGVHUNVHVIYGWTCVJVHUQVKVLXQXLDUAXREHSZBMZDUAZYAWQXLCD
      CNDNOZWPXKABUUCFGHJVMIVNVOXLUUADXKYTBEGHVPULVFYAXSEHSZDUAUUBXSEDHVQUUDUUA
      DXRBEHVRVFVSUMVTWAXQXJXPXQXIEKHHXQXIYBXCHLMXQWQXHPZCQZXHXGUUFXQXHUUFXQXHP
      WQXHCUTWBWCXGWTXEMZCQUUFWTXECWDUUGUUECUUGWQWQMZWSXDMZPUUEWQWSWQXDWEWQUUHU
      UIXHWQUUHWQWFWBWRXCFWGWHURWIWJWKWLWMWNWO $.
      $( [16-Oct-2010] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Russell's Paradox
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( Russell's Paradox.  Proposition 4.14 of [TakeutiZaring] p. 14.

       In the late 1800s, Frege's Axiom of (unrestricted) Comprehension,
       expressed in our notation as ` A e. _V ` , asserted that any collection
       of sets ` A ` is a set i.e. belongs to the universe ` _V ` of all sets.
       In particular, by substituting ` { x | x e/ x } ` (the "Russell class")
       for ` A ` , it asserted ` { x | x e/ x } e. _V ` , meaning that the
       "collection of all sets which are not members of themselves" is a set.
       However, here we prove ` { x | x e/ x } e/ _V ` .  This contradiction
       was discovered by Russell in 1901 (published in 1903), invalidating the
       Comprehension Axiom and leading to the collapse of Frege's system.

       In 1908, Zermelo rectified this fatal flaw by replacing Comprehension
       with a weaker Subset (or Separation) Axiom ~ ssex asserting that ` A `
       is a set only when it is smaller than some other set ` B ` .  However,
       Zermelo was then faced with a "chicken and egg" problem of how to show
       ` B ` is a set, leading him to introduce the set-building axioms of Null
       Set ~ 0ex , Pairing ~ prex , Union ~ uniex , Power Set ~ pwex , and
       Infinity ~ omex to give him some starting sets to work with (all of
       which, before Russell's Paradox, were immediate consequences of Frege's
       Comprehension).  In 1922 Fraenkel strengthened the Subset Axiom with our
       present Replacement Axiom ~ funimaex (whose modern formalization is due
       to Skolem, also in 1922).  Thus in a very real sense Russell's Paradox
       spawned the invention of ZF set theory and completely revised the
       foundations of mathematics!

       Another mainstream formalization of set theory, devised by von Neumann,
       Bernays, and Goedel, uses class variables rather than set variables as
       its primitives.  The axiom system NBG in [Mendelson] p. 225 is suitable
       for a Metamath encoding.  NBG is a conservative extension of ZF in that
       it proves exactly the same theorems as ZF that are expressible in the
       language of ZF. An advantage of NBG is that it is finitely axiomatizable
       - the Axiom of Replacement can be broken down into a finite set of
       formulas that eliminate its wff metavariable.  Finite axiomatizability
       is required by some proof languages (although not by Metamath).  There
       is a stronger version of NBG called Morse-Kelley (axiom system MK in
       [Mendelson] p. 287).

       Russell himself continued in a different direction, avoiding the paradox
       with his "theory of types."  Quine extended Russell's ideas to formulate
       the very strong New Foundations set theory (axiom system NF of [Quine]
       p. 331).  In NF, the collection of all sets is a set, contradicting ZF
       and NBG set theories, and it has other bizarre consequences: when sets
       become too huge (beyond the size of those used in standard mathematics),
       the Axiom of Choice ~ ac4 and Cantor's Theorem ~ canth are provably
       false!  (See ~ ncanth for some intuition behind the latter.)
       Nonetheless, NF has not been shown to be inconsistent and has its
       advocates - who's to say which set theory is "right"?  NF is finitely
       axiomatizable and can be encoded in Metamath using the axioms from T.
       Hailperin, "A set of axioms for logic," _J. Symb.  Logic_ 9:1-19 (1944).

       Under our ZF set theory, every set is a member of the Russell class by
       ~ elirrv (derived from the Axiom of Regularity), so for us the Russell
       class equals the universe ` _V ` (theorem ~ ruv ).  See ~ ruALT for an
       alternate proof of ~ ru derived from that fact. $)
    ru $p |- { x | x e/ x } e/ _V $=
      ( vy cv wnel cab cvv wcel wn wceq wex wb wal pm5.19 eleq1 id eleq12d 
      notbid df-nel syl5bb bibi12d a4v mto abeq2 mtbir nex isset mpbir ) ACZUHD
      ZAEZFDUJFGZHUKBCZUJIZBJUMBUMUHULGZUIKZALZUPULULGZUQHZKZUQMUOUSABUHULIZUNU
      QUIURUHULULNUTUHUHGZHURUIUTVAUQUTUHULUHULUTOZVBPQUHUHRSTUAUBUIAULUCUDUEBU
      JUFUDUJFRUG $.
      $( [4-Oct-2008] $) $( [7-Aug-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d A x $.  $d x y $.
    sbhypf.1 $e |- ( ps -> A. x ps ) $.
    sbhypf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See also ~ csbhypf .  (Contributed by Raph Levien,
       10-Apr-2004.) $)
    sbhypf $p |- ( y = A -> ( [ y / x ] ph <-> ps ) ) $=
      ( cv wceq wa wex wsbc wb visset eqeq1 ceqsexv hbs1 hbbi sbequ12 bicomd 
      sylan9bb 19.23ai sylbir ) DHZEIZCHZUDIZUFEIZJZCKACUDLZBMZUHUECUDDNUFUDEOP
      UIUKCUJBCACDQFRUGUJAUHBUGAUJACDSTGUAUBUC $.
      $( [5-Mar-2008] $) $( 2-Mar-2008] $)
  $}

  ${
    $d x y z $.  $d y z ph $.  $d x z ps $.
    sbralie.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Implicit to explicit substitution that swaps variables in a quantified
       expression. $)
    sbralie $p |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) $=
      ( vz cv wral wsbc ax-17 hbs1 sbequ12 cbvral sbbii raleq sbie bitri sbco2 
      ralbii 3bitri ) ACDGZHZDCGZIZACFGIZFUCHZUEFUAIZDUCHBDUCHUDUEFUAHZDUCIUFUB
      UHDCAUECFUAAFJZACFKACFLMNUHUFDCUFDJUEFUAUCOPQUEUGFDUCUEDJUEFDKUEFDLMUGBDU
      CUGACUAIBACDFUIRABCDBCJEPQST $.
      $( [5-Sep-2004] $)
  $}

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff notation to include the proper substitution of a class for a
     set.  This definition "overloads" the previously defined variable
     substitution ~ wsb (where the first argument is a set variable rather
     than a class variable).  We take care to ensure that this new definition
     is a conservative extension.  Read this notation as "the proper
     substitution of class ` A ` for set variable ` x ` in wff ` ph ` ." @)
  wsbc @a wff [ A / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define the proper substitution of a class for a set.  This definition
     applies to proper classes but is not meaningful in that case (and does not
     produce the same results as Definition 6.6 of [Quine] p. 42).  This
     definition is somewhat arbitrary in how it behaves with proper classes -
     e.g., we could have used ~ sbc6 , which yields a different result for
     proper classes.  In order to allow for a possible alternate but
     conflicting definition in the future, we will not commit to any specific
     proper class behavior.  Instead, we will use this definition _only_ to
     prove ~ dfsbcq , which will in turn serve as the starting point for all
     theorems based on the definition.  Note: this definition extends or
     "overloads" ~ df-sb which (via ~ df-clab ) becomes a special case of it,
     so a careful metalogical soundness justification, outside of Metamath, is
     needed for complete rigor; alternately, we could treat this definition as
     a new axiom.

     The related definition ~ df-csb defines proper substitution into a class
     variable (as opposed to a wff variable). $)
  df-sbc $a |- ( [ A / x ] ph <-> A e. { x | ph } ) $.

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42, provides
     us with a weak definition of the proper substitution of a class for a set,
     which we will use in place of ~ df-sbc above.  We will derive all our
     results from starting from here instead of ~ df-sbc .  As a consequence,
     we can derive ~ elabs , which is a weaker version of ~ df-sbc that leaves
     substitution undefined when ` A ` is a proper class.  We thus leave
     unspecified the "official" behavior for proper classes, which could be as
     in the ~ sbc5 assertion (always false) or as in ~ sbc6 (always true), or
     some more meaningful possibility in the future, that some clever person
     may discover, that is closer to Quine's definition.  (Quine's definition
     has neither behavior for proper classes, and by using ~ dfsbcq as the
     definition, we leave it unspecified so as not to conflict.  Quine's
     definition is based on the formula's structure rather than its logical
     properties and apparently cannot be expressed directly in our formal
     system.)

     While in principle we could have made this theorem the official
     definition, we use ~ df-sbc because it is more obviously eliminable and
     thus easier to justify metalogically.  But to avoid conflict with Quine,
     we never use ~ df-sbc except indirectly via this theorem. $)
  dfsbcq $p |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) $=
    ( wceq cab wcel wsbc eleq1 df-sbc 3bitr4g ) CDECABFZGDLGABCHABDHCDLIABCJABD
    JK $.
    $( [14-Apr-1995] $)

  $( Equality theorem for class substitution. $)
  sbceq1a $p |- ( x = A -> ( ph <-> [ A / x ] ph ) ) $=
    ( cv wceq wsbc dfsbcq sbid syl5bbr ) BDZCEABJFABCFAABJCGABHI $.
    $( [26-Sep-2003] $)

  ${
    $d ph y $.  $d A y $.  $d x y $.
    $( Specialization: if a formula is true for all sets, it is true for any
       class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44.  See
       also ~ stdpc4 and ~ ra4sbc . $)
    a4sbc $p |- ( A e. B -> ( A. x ph -> [ A / x ] ph ) ) $=
      ( vy wal wsbc wi cv wceq dfsbcq stdpc4 syl5bi vtocleg ) ABFZABCGZHECDEIZC
      JABQGPOABQCKABELMN $.
      $( [16-Jan-2004] $)
  $}

  ${
    sbcth.1 $e |- ph $.
    $( A substitution into a theorem remains true (when ` A ` is a set). $)
    sbcth $p |- ( A e. B -> [ A / x ] ph ) $=
      ( wcel wal wsbc ax-gen a4sbc mpi ) CDFABGABCHABEIABCDJK $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcthdv.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ sbcth .  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    sbcthdv $p |- ( ( ph /\ A e. B ) -> [ A / x ] ps ) $=
      ( wcel wsbc wal a4sbc 19.21aiv syl5 impcom ) DEGZABCDHZNBCIOABCDEJABCFKLM
      $.
      $( [8-Jun-2011] $) $( [30-Nov-2005] $)
  $}

  ${
    $d x z $.  $d y A z $.  $d ph z $.
    hbsbc1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for class substitution.  (The
       antecedent ensures that ` A ` is a set, which is necessary if we
       restrict ourselves to using only the "weak" class substitution
       definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbc1g $p |- ( A e. B -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) $=
      ( vz wsbc wal wi cv wceq dfsbcq hblem hbeleq albid hbs1 syl5bi sylbird 
      vtocleg ) ABDHZUABIZJGDEGKZDLZUAABUCHZUBABUCDMZUDUEBIUBUEUDUEUABBGDBCGDFN
      OUFPABGQRST $.
      $( [11-Jul-2011] $) $( [11-Oct-2004] $)

    ${
      $d x B $.  $d B z $.
      $( Bound-variable hypothesis builder for class substitution.  (The
         antecedent ensures that ` A ` is a set, which is necessary if we
         restrict ourselves to using only the "weak" class substitution
         definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions
         were removed by Andrew Salmon, 8-Jun-2011.) $)
      hbsbc1 $p |- ( ( A e. B -> [ A / x ] ph ) ->
                        A. x ( A e. B -> [ A / x ] ph ) ) $=
        ( vz wcel wsbc cv ax-17 hbel hbsbc1g hbim1 ) DEHABDIBBCGDEFGJEHBKLABCDE
        FMN $.
        $( [11-Jul-2011] $) $( [23-Aug-1993] $)
    $}
  $}

  ${
    $d x A y $.
    hbsbcv.1 $e |- A e. _V $.
    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Andrew Salmon, 8-Jun-2011.) $)
    hbsbc1v $p |- ( [ A / x ] ph -> A. x [ A / x ] ph ) $=
      ( vy cvv wcel wsbc wal wi cv ax-17 hbsbc1g ax-mp ) CFGABCHZOBIJDABECFEKCG
      BLMN $.
      $( [8-Jun-2011] $) $( [18-Aug-1993] $)
  $}

  ${
    $d w z A $.  $d w y $.  $d w x $.  $d w ph $.
    hbsbcg.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbsbcg.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Eric Schmidt, 17-Jan-2007.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbcg $p |- ( A e. B -> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) $=
      ( vw cv wsbc wal wi wceq dfsbcq hblem hbeleq albid imbi12d hbsb vtoclg ) 
      ACIJZKZUCBLZMACEKZUEBLZMIEFUBENZUCUEUDUFACUBEOZUGUCUEBBIEBDIEGPQUHRSACIBH
      TUA $.
      $( [11-Jul-2011] $) $( [17-Nov-2005] $)
  $}

  ${
    $d x z $.  $d z A $.  $d y z ph $.
    $( A composition law for class substitution. $)
    sbccog $p |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) $=
      ( vz cv wsbc dfsbcq ax-17 sbco2 vtoclbg ) ABCGHZCFGZHABNHMCDHABDHFDEMCNDI
      ABNDIABFCACJKL $.
      $( [26-Sep-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d A y $.
    sbcco2.1 $e |- ( x = y -> A = B ) $.
    $( A composition law for class substitution.  Importantly, ` x ` may occur
       free in the class expression substituted for ` A ` .  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbcco2 $p |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) $=
      ( wsbc ax-17 cv wceq wb equcoms dfsbcq bicomd syl sbie ) ABEGZABDGZCBRCHC
      IBIJDEJZQRKSBCFLSRQABDEMNOP $.
      $( [8-Jun-2011] $) $( [5-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    sbc5g $p |- ( A e. B -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cv wsbc wceq wa wex dfsbcq eqeq2 anbi1d exbidv sb5 vtoclbg ) ABEFZGB
      FZQHZAIZBJABCGRCHZAIZBJECDABQCKQCHZTUBBUCSUAAQCRLMNABEOP $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 8-Jun-2011.) $)
    sbc6g $p |- ( A e. B -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( wcel wsbc cv wceq wa wex wi wal sbc5g hbe1 ceqex ceqsalg bitr4d ) CDEAB
      CFBGCHZAIZBJZRAKBLABCDMATBCDSBNABCOPQ $.
      $( [8-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    sbc5.1 $e |- A e. _V $.
    $( An equivalence for class substitution. $)
    sbc5 $p |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb sbc5g ax-mp ) CEFABCGBHCIAJBKLDABCEMN 
      $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x A $.
    sbc6.1 $e |- A e. _V $.
    $( An equivalence for class substitution.  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    sbc6 $p |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) $=
      ( cvv wcel wsbc cv wceq wi wal wb sbc6g ax-mp ) CEFABCGBHCIAJBKLDABCEMN 
      $.
      $( [18-Jan-2007] $) $( [23-Aug-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( An equivalence for class substitution in the spirit of ~df-clab .  Note
       that ` x ` and ` A ` don't have to be distinct. $)
    sbc7g $p |- ( A e. B -> ( [ A / x ] ph
                     <-> E. y ( y = A /\ [ y / x ] ph ) ) ) $=
      ( wcel wsb wsbc cv wceq wa wex sbccog sbc5g bitr3d ) DEFABCGZCDHABDHCIDJP
      KCLABCDEMPCDENO $.
      $( [18-Nov-2008] $)

    $( This is the closest we can get to ~ df-sbc if we start from ~ dfsbcq
       (see its comments).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbc8g $p |- ( A e. B -> ( [ A / x ] ph <-> A e. { x | ph } ) ) $=
      ( vy cv wsbc cab wcel dfsbcq eleq1 df-clab bicomi vtoclbg ) ABEFZGZOABHZI
      ZABCGCQIECDABOCJOCQKRPAEBLMN $.
      $( [29-Jun-2011] $) $( [18-Nov-2008] $)
  $}

  ${
    cbvsbc.1 $e |- ( ph -> A. y ph ) $.
    cbvsbc.2 $e |- ( ps -> A. x ps ) $.
    cbvsbc.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change bound variables in a wff substitution.  (Contributed by Jeff
       Hankins, 19-Sep-2009.)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    cbvsbc $p |- ( A e. B -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( wcel cab wsbc wb cbvab eleq2i a1i sbc8g 3bitr4d ) EFJZEACKZJZEBDKZJZACE
      LBDELUAUCMSTUBEABCDGHINOPACEFQBDEFQR $.
      $( [25-Aug-2011] $) $( [19-Sep-2009] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvsbcv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a class substitution using implicit
       substitution. $)
    cbvsbcv $p |- ( A e. B -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( ax-17 cbvsbc ) ABCDEFADHBCHGI $.
      $( [25-Aug-2011] $) $( [30-Sep-2008] $)
  $}

  ${
    $d x A $.
    $( The disjunction of two equivalences for class substitution does not
       require a class existence hypothesis.  This theorem tells us that there
       are only 2 possibilities for defining ` [ A / x ] ph ` behavior at
       proper classes (given a specific ` A ` ), which is interesting since
       ~ dfsbcq (from which it is derived) does not say anything obvious about
       that. $)
    sbc2or $p |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/
                  ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb wi wal wo sbc5g orcd wn pm5.15 visset 
      eleq1 mpbii adantr con3i nexdv pm2.21d 19.21aiv 2thd bibi2d orbi2d 
      pm2.61i ) CDEZABCFZBGZCHZAIZBJZKZULUNALZBMZKZNZUKUQUTABCDOPUKQZUQULUPQZKZ
      NVAULUPRVBVDUTUQVBVCUSULVBVCUSVBUOBUOUKUNUKAUNUMDEUKBSUMCDTUAZUBUCUDVBURB
      VBUNAUNUKVEUCUEUFUGUHUIUAUJ $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d y ps $.
    $( Conversion of implicit substitution to explicit class substitution,
       using a bound-variable hypothesis instead of distinct variables.
       (Closed theorem version of ~ sbciegf .) $)
    sbciegft $p |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\
              A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi cv wceq wb w3a wsbc wa wex sbc5g 3ad2ant1 19.23t biimpa 
      bi1 imim2i imp3a alimi sylan2 3adant1 sylbid 19.21t bi2 com23 sbc6g 
      sylibrd impbid ) DEFZBBCGHCGZCIDJZABKZHZCGZLZACDMZBUSUTUOANZCOZBUMUNUTVBK
      URACDEPQUNURVBBHZUMUNVABHZCGZVCURUNVEVCVABCRSUQVDCUQUOABUPABHUOABTUAUBUCU
      DUEUFUSBUOAHZCGZUTUNURBVGHZUMUNBVFHZCGZVHURUNVJVHBVFCUGSUQVICUQUOBAUPBAHU
      OABUHUAUIUCUDUEUMUNUTVGKURACDEUJQUKUL $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    sbciegf.1 $e |- ( A e. B -> ( ps -> A. x ps ) ) $.
    sbciegf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbciegf $p |- ( A e. B -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi wsbc wb 19.21aiv cv wceq ax-gen sbciegft 3exp mpii mpd ) DE
      HZBBCIJZCIZACDKBLZUAUBCFMUAUCCNDOABLJZCIZUDUECGPUAUCUFUDABCDEQRST $.
      $( [14-Dec-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcieg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcieg $p |- ( A e. B -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel cvv wsbc wb elisset wal wi ax-17 a1i sbciegf syl ) DEGDHGZACDIBJDE
      KABCDHBBCLMRBCNOFPQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcie.1 $e |- A e. _V $.
    sbcie.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcie $p |- ( [ A / x ] ph <-> ps ) $=
      ( cvv wcel wsbc wb sbcieg ax-mp ) DGHACDIBJEABCDGFKL $.
      $( [4-Sep-2004] $)
  $}

  ${
    $d z w A $.  $d y z w B $.  $d z ph $.  $d x z w $.
    elrabsf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Membership in a restricted class abstraction, expressed with explicit
       class substitution.  (The variation ~ elrabf has implicit
       substitution).  The hypothesis specifies that ` x ` must not be a free
       variable in ` B ` . $)
    elrabsf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) $=
      ( vz vw crab wcel cv wsbc wa ax-17 hbs1 sbequ12 cbvrab eleq2i cvv wi 
      hbsbc1 wceq sbceq1a wb wex 19.8a isset sylibr biimt syl bitrd elrabf 
      elisset pm5.32i bitr4i sbccog 3bitri ) DABEIZJDABGKZLZGEIZJZDEJZUTGDLZMZV
      CABDLZMURVADAUTBGCEFCKEJGNAGNABGOABGPQRVBVCDSJZVDTZMVEUTVHGHDEHKZDJGNZVIE
      JGNUTGHDSVJUAUSDUBZUTVDVHUTGDUCVKVGVDVHUDZVKVKGUEVGVKGUFGDUGUHVGVDUIZUJUK
      ULVCVDVHVCVGVLDEUMVMUJUNUOVCVDVFABGDEUPUNUQ $.
      $( [30-Sep-2003] $)
  $}

  ${
    $d x y $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution.  Theorem 6.13 of [Quine] p. 44. $)
    elabs2 $p |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) $=
      ( vy cab wcel cvv crab wsbc wa rabab eleq2i cv ax-17 elrabsf bitr3i ) CAB
      EZFCABGHZFCGFABCIJRQCABKLABDCGDMGFBNOP $.
      $( [7-Mar-2004] $)
  $}

  $( Membership in a class abstraction, expressed in terms of class
     substitution.  Conveniently, this theorem has no distinct variable
     restrictions.  Except for the antecedent, this theorem is "almost" like
     ~ df-sbc but was proved using only ~ dfsbcq as its starting point (making
     no other reference to ~ df-sbc ).  We prefer not to make direct reference
     to ~ df-sbc (i.e. commit to it) since its behavior at proper classes is at
     odds with Quine, whereas ~ dfsbcq is not.  (Quine's class substitution
     cannot be expressed in closed form.)  This theorem serves as a weaker
     Quine-compatible substitute for ~ df-sbc . $)
  elabsg $p |- ( A e. B -> ( A e. { x | ph } <-> [ A / x ] ph ) ) $=
    ( wcel cvv cab wsbc wb elisset elabs2 baib syl ) CDECFEZCABGEZABCHZICDJONPA
    BCKLM $.
    $( [4-Nov-2005] $)

  ${
    elabs.1 $e |- A e. _V $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution. $)
    elabs $p |- ( A e. { x | ph } <-> [ A / x ] ph ) $=
      ( cab wcel cvv wsbc elabs2 mpbiran ) CABEFCGFABCHABCIDJ $.
      $( [7-Mar-2004] $)
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.
    $( Change bound variable by using a substitution.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvralsv $p |- ( A. x e. A ph <-> A. y e. A [ y / x ] ph ) $=
      ( vz wral cv wsbc ax-17 hbs1 sbequ12 cbvral hbsb sbequ bitri ) ABDFABEGHZ
      EDFABCGHZCDFAPBEDAEIZABEJABEKLPQECDABECACIMABCERMAECBNLO $.
      $( [11-Jul-2011] $) $( [20-Nov-2005] $)
  $}

  ${
    $d z x A $.  $d y z ph $.  $d y A $.
    $( Change bound variable by using a substitution.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexsv $p |- ( E. x e. A ph <-> E. y e. A [ y / x ] ph ) $=
      ( vz wrex cv wsbc ax-17 hbs1 sbequ12 cbvrex hbsb sbequ bitri ) ABDFABEGHZ
      EDFABCGHZCDFAPBEDAEIZABEJABEKLPQECDABECACIMABCERMAECBNLO $.
      $( [11-Jul-2011] $) $( [2-Mar-2008] $)
  $}

  ${
    $d x y B $.  $d y A $.
    $( Substitution applied to an atomic wff.  Set theory version of ~ eqsb3 .
       (Contributed by Andrew Salmon, 29-Jun-2011.) $)
    eqsbc3 $p |- ( A e. C -> ( [ A / x ] x = B <-> A = B ) ) $=
      ( vy cv wceq wsbc dfsbcq eqeq1 eqsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDMAN
      BINBCJEACKL $.
      $( [29-Jun-2011] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.  $d y ps $.
    $( Move negation in and out of class substitution. $)
    sbcng $p |- ( A e. B -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) $=
      ( vy wn cv wsbc dfsbcq wceq notbid sbn vtoclbg ) AFZBEGZHABOHZFNBCHABCHZF
      ECDNBOCIOCJPQABOCIKABELM $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over implication. $)
    sbcimg $p |- ( A e. B ->
           ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) $=
      ( vy wi cv wsbc dfsbcq wceq imbi12d sbim vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over conjunction. $)
    sbcang $p |- ( A e. B ->
           ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) $=
      ( vy wa cv wsbc dfsbcq wceq anbi12d sban vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over disjunction. $)
    sbcorg $p |- ( A e. B ->
           ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) $=
      ( vy wo cv wsbc dfsbcq wceq orbi12d sbor vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over biconditional.  (Contributed by
       Raph Levien, 10-Apr-2004.) $)
    sbcbidig $p |- ( A e. B ->
         ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) $=
      ( vy wb cv wsbc dfsbcq wceq bibi12d sbbi vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x z A $.  $d x y z $.  $d z ph $.
    $( Move universal quantifier in and out of class substitution. $)
    sbcalg $p |- ( A e. B -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) $=
      ( vz wal cv wsbc dfsbcq wceq albidv sbal vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Move existential quantifier in and out of class substitution. $)
    sbcexg $p |- ( A e. B -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) $=
      ( vz wex cv wsbc dfsbcq wceq exbidv sbex vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [21-May-2004] $)
  $}

  ${
    $d x B $.  $d x A $.
    $( Set theory version of ~ sbeqal1 .  (Contributed by Andrew Salmon,
       28-Jun-2011.) $)
    sbceqal $p |- ( A e. C -> ( A. x ( x = A -> x = B ) -> A = B ) ) $=
      ( wcel cv wceq wi wal wsbc a4sbc sbcimg wb eqid eqeq1 sbcieg mpbiri 
      pm5.5 syl eqsbc3 3bitrd sylibd ) BDEZAFZBGZUDCGZHZAIUGABJZBCGZUGABDKUCUHU
      EABJZUFABJZHZUKUIUEUFABDLUCUJULUKMUCUJBBGZBNUEUMABDUDBBOPQUJUKRSABCDTUAUB
      $.
      $( [28-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Theorem *14.121 in [WhiteheadRussell] p. 185.  (Contributed by Andrew
       Salmon, 28-Jun-2011.) $)
    sbeqalb $p |- ( A e. C -> ( ( A. x ( ph <-> x = A ) /\ A. x ( ph <->
      x = B ) ) -> A = B ) ) $=
      ( wcel cv wceq wi wal wb wa sbceqal bibi1 biimpa bi1 syl alanimi syl5 ) 
      CEFBGZCHZTDHZIZBJCDHAUAKZBJAUBKZBJLBCDEMUDUEUCBUDUELUAUBKZUCUDUEUFAUAUBNO
      UAUBPQRS $.
      $( [28-Jun-2011] $) $( [9-Jun-2011] $)
  $}

  ${
    sbcbid.1 $e |- ( ph -> A. x ph ) $.
    sbcbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution. $)
    sbcbid $p |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( wcel wsbc wb wal a4sbc 19.21ai syl5 sbcbidig sylibd impcom ) EFIZABDEJC
      DEJKZSABCKZDEJZTSUADLUBAUADEFMAUADGHNOBCDEFPQR $.
      $( [26-Feb-2005] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution.  (The proof was
       shortened by Eric Schmidt, 17-Jan-2007.) $)
    sbcbidv $p |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( ax-17 sbcbid ) ABCDEFADHGI $.
      $( [18-Jan-2007] $) $( [11-Oct-2004] $)
  $}

  ${
    sbcbii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building inference rule for class substitution. $)
    sbcbii $p |- ( A e. B -> ( [ A / x ] ph <-> [ A / x ] ps ) ) $=
      ( cvv wceq wcel wsbc wb eqid a1i sbcbidv mpan ) GGHZDEIACDJBCDJKGLPABCDEA
      BKPFMNO $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x C $.  $d x A $.
    $( ~ eqsbc3 with set variable on right side of equals sign.  This proof was
       automatically generated from the virtual deduction proof ~ eqsbc3rVD
       using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    eqsbc3r $p |- ( A e. B -> ( [ A / x ] C = x <-> C = A ) ) $=
      ( wcel cv wceq wsbc eqcom sbcbii biimpd eqsbc3 sylibd syl6ib idd syl6ibr 
      sylibrd impbid ) BCEZDAFZGZABHZDBGZSUBBDGZUCSUBTDGZABHZUDSUBUFUAUEABCDTIJ
      ZKABDCLZMBDIZNSUCUFUBSUCUDUFSUCUCUDSUCOUIPUHQUGQR $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d y ch $.  $d y ps $.  $d y ph $.  $d y A $.  $d x y $.
    $( Distribution of class substitution over triple conjunction.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbc3ang $p |- ( A e. B -> ( [ A / x ] ( ph /\ ps /\ ch ) <->
                ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) $=
      ( vy w3a cv wsbc dfsbcq wceq 3anbi123d sb3an vtoclbg ) ABCHZDGIZJADQJZBDQ
      JZCDQJZHPDEJADEJZBDEJZCDEJZHGEFPDQEKQELRUASUBTUCADQEKBDQEKCDQEKMABCDGNO 
      $.
      $( [29-Jun-2011] $) $( [14-Dec-2006] $)
  $}

  ${
    $d y z A $.  $d x y B $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel1gv $p |- ( A e. C -> ( [ A / x ] x e. B <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq1 clelsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDM
      ANBINBCJEACKL $.
      $( [29-Jun-2006] $) $( [17-Nov-2006] $)
  $}

  ${
    $d y z B $.  $d x y A $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel2gv $p |- ( B e. C -> ( [ B / x ] A e. x <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq2 ax-17 sbie vtoclbg ) BAFZGZAEFZHBPGZOACHBC
      GECDOAPCIPCBJOQAEQAKNPBJLM $.
      $( [29-Jun-2011] $) $( [17-Nov-2006] $)
  $}

  ${
    $d x B $.
    sbcth2.1 $e |- ( x e. B -> ph ) $.
    $( A substitution into a theorem. $)
    sbcth2 $p |- ( A e. B -> [ A / x ] ph ) $=
      ( wcel wsbc cv wi sbcth sbcimg sbcel1gv imbi1d bitrd mpbid pm2.43i ) CDFZ
      ABCGZQBHDFZAIZBCGZQRIZTBCDEJQUASBCGZRIUBSABCDKQUCQRBCDDLMNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d y ph $.  $d x y z $.
    hbsbc1gd.1 $e |- ( ph -> A. x ph ) $.
    hbsbc1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbsbc1g .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbc1gd $p |- ( ( ph /\ A e. B ) ->
                   ( [ A / x ] ps -> A. x [ A / x ] ps ) ) $=
      ( vz cvv wcel wsbc wal wi wa cv cab wceq wb 19.21aiv abidhb eleq1 3syl 
      biimpar hba1 hbab hbsbc1g syl dfsbcq adantr a1d ax-17 a1i hbeld hband 
      anabsi5 albid 3imtr3d elisset sylan2 ) AEJKZBCELZVBCMZNEFKAVAOZBCIPEKZCMZ
      IQZLZVHCMZVBVCVDVGJKZVHVINAVJVAADPZEKZVLCMNZDMZVGERZVJVASAVMDHTZCDIEUAZVG
      EJUBUCUDBCDVGJVFCIDVECUEUFUGUHAVHVBSZVAAVNVOVRVPVQBCVGEUIUCUJZVDVHVBCAVAV
      DCMAAVACAACMAGUKACDEJGHVKJKZVTCMNAVTCULUMUNUOUPVSUQUREFUSUT $.
      $( [26-Jun-2011] $) $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d z ph $.  $d w x z $.
    hbsbcgd.1 $e |- ( ph -> A. x ph ) $.
    hbsbcgd.2 $e |- ( ph -> A. y ph ) $.
    hbsbcgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbsbcgd.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbsbcg .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbcgd $p |- ( ( ph /\ A e. C ) ->
                 ( [ A / y ] ps -> A. x [ A / y ] ps ) ) $=
      ( vw cvv wcel wsbc wal wi wa cv cab wceq wb 19.21aiv abidhb eleq1 3syl 
      biimpar hba1 hbab hbsbcg syl dfsbcq adantr ax-4 impbid2 sbcbid bitrd a1d 
      ax-17 a1i hbeld hband anabsi5 albid 3imtr3d elisset sylan2 ) AFMNZBDFOZVI
      CPZQFGNAVHRZBCPZDLSFNZCPZLTZOZVPCPZVIVJVKVOMNZVPVQQAVRVHAESZFNZVTCPQZEPZV
      OFUAZVRVHUBAWAEJUCZCELFUDZVOFMUEUFUGVLCDEVOMVNCLEVMCUHUIBCUHUJUKVKVPVLDFO
      ZVIAVPWFUBZVHAWBWCWGWDWEVLDVOFULUFUMAVLBDFMIAVLBBCUNKUOUPUQZVKVPVICAVHVKC
      PAAVHCAACPAHURACEFMHJVSMNZWICPQAWICUSUTVAVBVCWHVDVEFGVFVG $.
      $( [21-Jun-2011] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Substitution analog of Theorem 19.20 of [Margaris] p. 90. $)
    sbcimdv $p |- ( ( ph /\ A e. B ) ->
                     ( [ A / x ] ps -> [ A / x ] ch ) ) $=
      ( wcel wsbc wi wal a4sbc 19.21aiv syl5 sbcimg sylibd impcom ) EFHZABDEICD
      EIJZRABCJZDEIZSRTDKUAATDEFLATDGMNBCDEFOPQ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    sbcgf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcgf $p |- ( A e. B -> ( [ A / x ] ph <-> ph ) ) $=
      ( vy cv wsbc dfsbcq wceq biidd sbf vtoclbg ) ABFGZHAABCHAFCDABNCINCJAKABF
      ELM $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x ph $.
    $( Substitution for a variable not occurring in a wff does not affect it.
       Distinct variable form of ~ sbcgf .  (Contributed by Alan Sare,
       10-Nov-2012.) $)
    sbcg $p |- ( A e. B -> ( [ A / x ] ph <-> ph ) ) $=
      ( ax-17 sbcgf ) ABCDABEF $.
      $( [10-Nov-2012] $)
  $}

  ${
    sbc19.21g.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in antecedent affects only the
       consequent. $)
    sbc19.21g $p |- ( A e. B ->
                    ( [ A / x ] ( ph -> ps ) <-> ( ph -> [ A / x ] ps ) ) ) $=
      ( wcel wi wsbc sbcimg sbcgf imbi1d bitrd ) DEGZABHCDIACDIZBCDIZHAPHABCDEJ
      NOAPACDEFKLM $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ps $.
    sbc2ie.1 $e |- A e. _V $.
    sbc2ie.2 $e |- B e. _V $.
    sbc2ie.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2ie $p |- ( [ A / x ] [ B / y ] ph <-> ps ) $=
      ( wsbc cv wceq wi cvv wcel wb sbcimg ax-mp expcom pm5.74d sbcie ax-17 
      sbcgf imbi1i 3bitr3ri pm5.74ri ) ADFJZBCEGCKELZUGBUHAMZDFJZUHDFJZUGMZUHBM
      ZUHUGMFNOZUJULPHUHADFNQRUIUMDFHDKFLZUHABUHUOABPISTUAUKUHUGUNUKUHPHUHDFNUH
      DUBUCRUDUEUFUA $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ph $.  $d x y ch $.
    sbc2iedv.1 $e |- A e. _V $.
    sbc2iedv.2 $e |- B e. _V $.
    sbc2iedv.3 $e |- ( ph -> ( ( x = A /\ y = B ) -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2iedv $p |- ( ph -> ( [ A / x ] [ B / y ] ps <-> ch ) ) $=
      ( wsbc wi cvv wcel wb ax-17 sbc19.21g ax-mp sbcbii cv wceq wa impcom 
      pm5.74da sbc2ie 3bitr3ri pm5.74ri ) ABEGKZDFKZCABLZEGKZDFKZAUHLZDFKZACLZA
      UILZFMNZULUNOHUKUMDFMGMNUKUMOIABEGMAEPQRSRUJUODEFGHIDTFUAETGUAUBZABCAURBC
      OJUCUDUEUQUNUPOHAUHDFMADPQRUFUG $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    $( Lemma for ~ sbccomg . $)
    sbccomglem $p |- ( ( A e. C /\ B e. D ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( wcel wa wsbc cv wceq wex wb sbc5g sbcbidv ancoms adantr adantl bitr2d 
      excom exdistr an12 exbii 19.42v bitri 3bitr3i syl5bb 3bitrd ) DFHZEGHZIZA
      CEJZBDJZCKELZAIZCMZBDJZBKDLZUQIBMZABDJZCEJZUKUJUNURNUKUMUQBDFACEGOPQUJURU
      TNUKUQBDFORULUOUSAIZBMZIZCMZVBUTULVBVDCEJZVFUJVAVDCEGABDFOPUKVGVFNUJVDCEG
      OSTUSUPIZCMBMVHBMZCMUTVFVHBCUAUSUPBCUBVIVECVIUOVCIZBMVEVHVJBUSUOAUCUDUOVC
      BUEUFUDUGUHUI $.
      $( [14-Nov-2005] $)
  $}

  ${
    $d w y z A $.  $d w x z B $.  $d w z ph $.  $d x y $.
    $( Commutative law for double class substitution.  (The proof was shortened
       by Eric Schmidt, 17-Jan-2007.) $)
    sbccomg $p |- ( ( A e. C /\ B e. D ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( vw vz cvv wcel wsbc wb wa cv sbccog adantr visset sbccomglem mpan2 
      mp2an sbcbii bitr3d sbcbidv ancoms 3bitrd adantl 3bitr3rd elisset syl2an 
      ) DJKZEJKZACELZBDLZABDLZCELZMDFKEGKUKULNZACHOZLZHELZBIOZLZIDLZUTBDLZUPUNU
      KVCVDMULUTBIDJPQUQVCABVALZIDLZCURLZHELZVFCELZUPUQVCVECURLZHELZIDLZVJIDLZH
      ELVHULUKVCVLMULVBVKIDJULUSBVALZHELZVBVKULVAJKZVOVBMIRZUSHBEVAJJSTVNVJHEJV
      PURJKZVNVJMVQHRZABCVAURJJSUAUBUCUDUEVJIHDEJJSUKVMVGHEJUKVRVMVGMVSVEICDURJ
      JSTUDUFULVHVIMUKVFCHEJPUGUKVFUOCEJABIDJPUDUFULUKVDUNMULUTUMBDJACHEJPUDUEU
      HDFUIEGUIUJ $.
      $( [18-Jan-2007] $) $( [15-Nov-2005] $)
  $}

  ${
    $d v w z A $.  $d w x B $.  $d v w C $.  $d w ph $.  $d x y $.
    $d v w y z $.
    $( Interchange class substitution and restricted quantifier.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       22-Feb-2010.) $)
    sbcralt $p |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw vv wcel cv wal wi wa wral wsbc wceq wb sbc6g adantr a4s hba1 ax-17 
      a1i eleq1 albidv imbi12d a4v adantl hbeqd a5i r19.21t syl ralcom4 
      syl5rbb bitrd cvv visset r19.21v albii bitr2i syl6bb ralbidv bitr4d 
      ax-mp sbcbii ralbid 3bitr4d sbccog 3bitr3d ) EGJZDKZEJZVMCLZMZDLZNZCLZACF
      OZBHKZPZHEPZABVTPZHEPZCFOZVSBEPZABEPZCFOVRWCCFOZHEPZVTEQZWCMZHLZCFOZWBWEV
      RWIWJWHMZHLZWMVQWIWORZCVKWPVPWHHEGSTUAVRWKCFOZHLWOWMVRWQWNHVRWJWJCLMZCLWQ
      WNRVQWRCVRCIVTEVQCUBZIKZVTJZXACLMVRXACUCUDVQWTEJZXBCLZMZCVPXDVKVOXDDIVLWT
      QZVMXBVNXCVLWTEUEZXEVMXBCXFUFUGUHUIUAUJUKWJWCCFULUMUFWKCHFUNUOUPVQWBWIRZC
      VKXGVPWAWHHEGVTUQJZWAWHRHURXHWABKVTQZAMZBLZCFOZWHXHWAXIVSMZBLZXLVSBVTUQSX
      LXJCFOZBLXNXJCBFUNXOXMBXIACFUSUTVAVBXHWCXKCFABVTUQSVCVDVEVFTUAVRWDWLCFWSV
      QWDWLRZCVKXPVPWCHEGSTUAVGVHVQWBWFRZCVKXQVPVSBHEGVITUAVRWDWGCFWSVQWDWGRZCV
      KXRVPABHEGVITUAVGVJ $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 22-Feb-2010.) $)
    sbcrext $p |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel cv wal wi wa wrex wsbc wn wral wb dfrex2 sbcbii sbcng bitrd 
      adantr a4s sbcralt hba1 ralbid notbid syl6bbr ) EGHZDIEHZUJCJKDJZLZCJZACF
      MZBENZABENZOZCFPZOZUPCFMUMUOAOZCFPZBENZOZUSULUOVCQZCUIVDUKUIUOVAOZBENVCUN
      VEBEGACFRSVABEGTUAUBUCUMVBURUMVBUTBENZCFPURUTBCDEFGUDUMVFUQCFULCUEULVFUQQ
      ZCUIVGUKABEGTUBUCUFUAUGUAUPCFRUH $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)
  $}

  $( MAY BE REVISED - may be deleted $)
  ${
    $d w z A $.  $d x w B $.  $d w z C $.  $d w ph $.  $d x y z w $.
    sbcralgf.1 $e |- ( A. y A e. C -> ( z e. A -> A. y z e. A ) ) $.
    $( Interchange class substitution and restricted quantifier. $)
    sbcralgf $p |- ( A. y A e. C ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel wal wral cv wsbc wceq wi wb sbc6g a4s hba1 ax-17 a1i hbeqd a5i 
      r19.21t syl albidv ralcom4 syl5rbb bitrd cvv visset r19.21v albii bitr2i 
      syl6bb ralbidv bitr4d ax-mp sbcbii ralbid 3bitr4d sbccog 3bitr3d ) EGJZCK
      ZACFLZBIMZNZIENZABVHNZIENZCFLZVGBENZABENZCFLVFVKCFLZIENZVHEOZVKPZIKZCFLZV
      JVMVFVQVRVPPZIKZWAVEVQWCQCVPIEGRSVFVSCFLZIKWCWAVFWDWBIVFVRVRCKPZCKWDWBQVE
      WECVFCDVHEVECTZDMVHJZWGCKPVFWGCUAUBHUCUDVRVKCFUEUFUGVSCIFUHUIUJVEVJVQQCVI
      VPIEGVHUKJZVIVPQIULWHVIBMVHOZAPZBKZCFLZVPWHVIWIVGPZBKZWLVGBVHUKRWLWJCFLZB
      KWNWJCBFUHWOWMBWIACFUMUNUOUPWHVKWKCFABVHUKRUQURUSUTSVFVLVTCFWFVEVLVTQCVKI
      EGRSVAVBVEVJVNQCVGBIEGVCSVFVLVOCFWFVEVLVOQCABIEGVCSVAVD $.
      $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier. $)
    sbcrexgf $p |- ( A. y A e. C ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel wal wrex wsbc wn wral wb dfrex2 sbcbii sbcng bitrd a4s sbcralgf 
      hba1 ralbid notbid syl6bbr ) EGIZCJZACFKZBELZABELZMZCFNZMZUJCFKUGUIAMZCFN
      ZBELZMZUMUFUIUQOCUFUIUOMZBELUQUHURBEGACFPQUOBEGRSTUGUPULUGUPUNBELZCFNULUN
      BCDEFGHUAUGUSUKCFUFCUBUFUSUKOCABEGRTUCSUDSUJCFPUE $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d x B $.  $d x y z $.  $d ph z $.  $d B z $.
    $( Interchange class substitution and restricted quantifier.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcralg $p |- ( A e. C ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vz wral cv wsbc dfsbcq wceq ralbidv wcel ax-17 hbs1 hbral sbequ12 sbie 
      vtoclbg ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDKUBDLUCUECEABUBDKMUAU
      DBGUCBCECIENBOABGPQBIUBLAUCCEABGRMST $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted existential quantifier.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcrexg $p |- ( A e. C ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( vz wrex cv wsbc dfsbcq wceq rexbidv wcel ax-17 hbs1 hbrex sbequ12 sbie 
      vtoclbg ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDKUBDLUCUECEABUBDKMUAU
      DBGUCBCECIENBOABGPQBIUBLAUCCEABGRMST $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)
  $}

  ${
    $d y w A $.  $d w z B $.  $d w ph $.  $d x y $.  $d w x z $.
    sbcabel.1 $e |- ( z e. B -> A. x z e. B ) $.
    $( Interchange class substitution and class abstraction. $)
    sbcabel $p |- ( A e. C -> ( [ A / x ] { y | ph } e. B <->
                  { y | [ A / x ] ph } e. B ) ) $=
      ( vw wcel cvv cab wsbc wb elisset cv wceq wa wex df-clel sbcbii sbcexg 
      sbcang wal abeq2 sbcalg sbcbidig ax-17 sbcgf bibi1d bitrd albidv 3bitrd 
      syl6bbr hbel anbi12d exbidv syl ) EGJEKJZACLZFJZBEMZABEMZCLZFJZNEGOUSVBIP
      ZVDQZVFFJZRZISZVEUSVBVFUTQZVHRZISZBEMVLBEMZISVJVAVMBEKIUTFTUAVLIBEKUBUSVN
      VIIUSVNVKBEMZVHBEMZRVIVKVHBEKUCUSVOVGVPVHUSVOCPVFJZVCNZCUDZVGUSVOVQANZCUD
      ZBEMVTBEMZCUDVSVKWABEKACVFUEUAVTCBEKUFUSWBVRCUSWBVQBEMZVCNVRVQABEKUGUSWCV
      QVCVQBEKVQBUHUIUJUKULUMVCCVFUEUNVHBEKBDDVFFDPVFJBUHHUOUIUPUKUQUMIVDFTUNUR
      $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y ph $.
    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69.  This
       provides an axiom for a predicate calculus for a restricted domain.
       This theorem generalizes the unrestricted ~ stdpc4 and ~ a4sbc .  See
       also ~ ra4sbca and ~ ra4csbela . $)
    ra4sbc $p |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) $=
      ( vy wral wcel wsbc wi cv wceq dfsbcq sbcimg sbcel1gv imbi1d bitrd 
      biimpd pm2.43b syl6bi wal df-ral stdpc4 sylbi syl5 vtocleg pm2.43a ) ABDF
      ZCDGZABCHZUGUHUIIZIECDEJZCKZBJDGZAIZBUKHZUJUGULUOUNBCHZUJUNBUKCLUPUHUIUHU
      PUJUHUPUMBCHZUIIUJUMABCDMUHUQUHUIBCDDNOPQRSUGUNBTUOABDUAUNBEUBUCUDUEUF $.
      $( [17-Nov-2006] $)

    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69. $)
    ra4sbca $p |- ( ( A e. B /\ A. x e. B ph ) -> [ A / x ] ph ) $=
      ( wcel wral wsbc ra4sbc imp ) CDEABDFABCGABCDHI $.
      $( [18-Nov-2006] $) $( [14-Dec-2005] $)

    $( Existence form of ~ ra4sbca . $)
    ra4esbca $p |- ( ( A e. B /\ [ A / x ] ph ) -> E. x e. B ph ) $=
      ( wcel wsbc wrex wn wral ra4sbc sbcng sylibd ralnex syl5ibr con4d imp ) 
      CDEZABCFZABDGZQSRQAHZBDIZRHZSHQUATBCFUBTBCDJABCDKLABDMNOP $.
      $( [29-Feb-2008] $)
  $}

  ${
    ra5.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantifier version of Axiom 5 of [Mendelson] p. 69.  This is
       an axiom of a predicate calculus for a restricted domain.  Compare the
       unrestricted ~ stdpc5 . $)
    ra5 $p |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) $=
      ( wi wral cv wcel wal df-ral bi2.04 albii bitri stdpc5 sylbi syl6ibr ) AB
      FZCDGZACHDIZBFZCJZBCDGSAUAFZCJZAUBFSTRFZCJUDRCDKUEUCCTABLMNAUACEOPBCDKQ 
      $.
      $( [16-Jan-2004] $)
  $}

  ${
    $d x y A $.
    rmo3.1 $e |- ( ph -> A. y ph ) $.
    $( Restricted "at most one" using explicit substitution. $)
    rmo3 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( cv wcel wa wsbc wceq wi wal wral wmo sban cvv wb visset sbcel1gv ax-mp 
      anbi1i bitri anbi2i an4 ancom imbi1i impexp 3bitri albii df-ral r19.21v 
      3bitr2i ax-17 hban mo3 3bitr4i ) BFZDGZAHZUSBCFZIZHZUQUTJZKZCLZBLURAABUTI
      ZHZVCKZCDMZKZBLUSBNVIBDMVEVJBVEUTDGZURVHKZKZCLVLCDMVJVDVMCVDVKURHZVGHZVCK
      VNVHKVMVBVOVCVBUSVKVFHZHZVOVAVPUSVAURBUTIZVFHVPURABCOVRVKVFUTPGVRVKQCRBUT
      DPSTUAUBUCVQURVKHZVGHVOURAVKVFUDVSVNVGURVKUEUAUBUBUFVNVGVCUGVKURVHUGUHUIV
      LCDUJURVHCDUKULUIUSBCURACURCUMEUNUOVIBDUJUP $.
      $( [4-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d y ph $.  $d x y ps $.  $d x ch $.
    rmoi.b $e |- ( x = B -> ( ph <-> ps ) ) $.
    rmoi.c $e |- ( x = C -> ( ph <-> ch ) ) $.
    $( Consequence of "at most one", using implicit substitution. $)
    rmoi $p |- ( ( E* x ( x e. A /\ ph )
          /\ ( B e. A /\ ps ) /\ ( C e. A /\ ch ) ) -> B = C ) $=
      ( vy cv wcel wa wmo w3a wsbc wceq wi wral 3anass ax-17 rmo3 an4 anbi12i 
      bitri wb sbcieg anbi2d ad2antlr hbs1 hban hbim anbi1d eqeq1 imbi12d 
      dfsbcq eqeq2 rcla42 imp sylbird expcom imp32 sylbi ) DKZELAMDNZFELZBMZGEL
      ZCMZOZAADJKZPZMZVDVKQZRZJESDESZVFVHMZBCMZMZMZFGQZVJVEVGVIMZMVTVEVGVITVEVP
      WBVSADJEAJUAUBVFBVHCUCUDUEVPVQVRWAVQVPVRWARVQVPMVRBADGPZMZWAVHWDVRUFVFVPV
      HWCCBACDGEIUGUHUIVQVPWDWARZVOWEBVLMZFVKQZRDJFGEEWFWGDBVLDBDUAADJUJUKWGDUA
      ULWEJUAVDFQZVMWFVNWGWHABVLHUMVDFVKUNUOVKGQZWFWDWGWAWIVLWCBADVKGUPUHVKGFUQ
      UOURUSUTVAVBVC $.
      $( [4-Nov-2012] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets into classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [_ $.  $( Underlined left bracket $)
  $c ]_ $.  $( Underlined right bracket $)

  $( Extend class notation to include the proper substitution of a class for a
     set into another class. $)
  csb $a class [_ A / x ]_ B $.

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Define the proper substitution of a class for a set into another class.
       The underlined brackets distinguish it from the substitution into a wff,
       ~ wsbc , to prevent ambiguity.  Theorem ~ sbcel1g shows an example of
       how ambiguity could arise if we didn't use distinguished brackets.
       Theorem ~ sbccsbg recreates substitution into a wff from this
       definition. $)
    df-csb $a |- [_ A / x ]_ B = { y | [ A / x ] y e. B } $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Analog of ~ dfsbcq for proper substitution into a class. $)
    csbeq1 $p |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( vy wceq cv wcel wsbc cab csb dfsbcq abbidv df-csb 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x z C $.  $d z D $.
    cbvcsbv.1 $e |- ( x = y -> B = C ) $.
    $( Change the bound variable of a proper substitution into a class using
       implicit substitution. $)
    cbvcsbv $p |- ( A e. D -> [_ A / x ]_ B = [_ A / y ]_ C ) $=
      ( vz wcel cv wsbc cab csb wceq eleq2d cbvsbcv abbidv df-csb 3eqtr4g ) CFI
      ZHJZDIZACKZHLUAEIZBCKZHLACDMBCEMTUCUEHUBUDABCFAJBJNDEUAGOPQAHCDRBHCERS $.
      $( [30-Sep-2008] $)
  $}

  ${
    csbeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for proper substitution into a class. $)
    csbeq1d $p |- ( ph -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( wceq csb csbeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [3-Dec-2005] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Analog of ~ sbid for proper substitution into a class. $)
    csbid $p |- [_ x / x ]_ A = A $=
      ( vy cv csb wcel wsbc cab df-csb sbid abbii abid2 3eqtri ) AADZBECDBFZANG
      ZCHOCHBACNBIPOCOAJKCBLM $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Equality theorem for proper substitution into a class. $)
    csbeq1a $p |- ( x = A -> B = [_ A / x ]_ B ) $=
      ( cv wceq csb csbeq1 csbid syl5eqr ) ADZBEAJCFABCFCAJBCGACHI $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d z A $.  $d y z B $.  $d z C $.  $d x z $.
    $( Composition law for chained substitutions into a class. $)
    csbcog $p |- ( A e. C -> [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B ) $=
      ( vz wcel cv csb wsbc cab df-csb abeq2i sbcbii sbccog bitrd abbidv 
      3eqtr4g ) CEGZFHZABHZDIZGZBCJZFKTDGZACJZFKBCUBIACDISUDUFFSUDUEAUAJZBCJUFU
      CUGBCEUGFUBAFUADLMNUEABCEOPQBFCUBLAFCDLR $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( The existence of proper substitution into a class. $)
    csbexg $p |- ( ( A e. C /\ A. x B e. D ) -> [_ A / x ]_ B e. _V ) $=
      ( vy wcel wal wa cv wsbc cab cvv csb a4sbc elisset abid2 syl5eqel alimi 
      syl5 imp wb ax-17 sbcabel adantr mpbid df-csb ) BDGZCEGZAHZIZFJZCGZABKFLZ
      MABCNUKUMFLZMGZABKZUNMGZUHUJUQUHUPAHUQUJUPABDOUIUPAUICMUOCEPFCQRSTUAUHUQU
      RUBUJUMAFFBMDULMGAUCUDUEUFAFBCUGR $.
      $( [10-Nov-2005] $)
  $}

  ${
    csbex.1 $e |- A e. _V $.
    csbex.2 $e |- B e. _V $.
    $( The existence of proper substitution into a class.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    csbex $p |- [_ A / x ]_ B e. _V $=
      ( cvv wcel csb wal csbexg mpan mpg ) CFGZABCHFGZABFGMAINDABCFFJKEL $.
      $( [29-Jun-2011] $) $( [7-Aug-2007] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.  $d x y $.
    csbconstgf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). $)
    csbconstgf $p |- ( A e. C -> [_ A / x ]_ B = B ) $=
      ( wcel cv wsbc cab csb sbcgf abbidv abid2 syl6eq df-csb syl5eq ) CEGZBHDG
      ZACIZBJZDACDKRUASBJDRTSBSACEFLMBDNOABCDPQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d A y $.  $d B x y $.  $d C y $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). ~ csbconstgf with distinct variable requirement.(Contributed by
       Alan Sare, 22-Jul-2012.) $)
    csbconstgfv $p |- ( A e. C -> [_ A / x ]_ B = B ) $=
      ( vy cv wcel ax-17 csbconstgf ) AEBCDEFCGAHI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d w x y z $.  $d w y z A $.  $d w y z B $.  $d w y z C $.
    $( Distribute proper substitution through a membership relation.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcel12g $p |- ( A e. D -> ( [ A / x ] B e. C <->
                   [_ A / x ]_ B e. [_ A / x ]_ C ) ) $=
      ( vy vz vw wcel wsbc cv cab csb dfsbcq wceq abbidv eleq12d wal hbs1 hbsb 
      df-clab albii 3imtr4i hbel sbab sbie vtoclbg df-csb eleq12i syl6bbr ) BEI
      CDIZABJZFKZCIZABJZFLZUMDIZABJZFLZIZABCMZABDMZIUKAGKZJUNAVCJZFLZUQAVCJZFLZ
      IZULUTGBEUKAVCBNVCBOZVEUPVGUSVIVDUOFUNAVCBNPVIVFURFUQAVCBNPQUKVHAGAHHVEVG
      VDFHKZJZVKARVJVEIZVLARVDFHAUNAGSTVDHFUAZVLVKAVMUBUCVFFVJJZVNARVJVGIZVOARV
      FFHAUQAGSTVFHFUAZVOVNAVPUBUCUDAKVCOCVEDVGAGFCUEAGFDUEQUFUGVAUPVBUSAFBCUHA
      FBDUHUIUJ $.
      $( [29-Jun-2011] $) $( [10-Nov-2005] $)

    $( Distribute proper substitution through an equality relation.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbceqdig $p |- ( A e. D -> ( [ A / x ] B = C <->
                   [_ A / x ]_ B = [_ A / x ]_ C ) ) $=
      ( vz vy vw wcel wceq wsbc cv cab csb dfsbcq abbidv eqeq12d wal hbs1 hbsb 
      df-clab albii 3imtr4i hbeq sbab sbie vtoclbg df-csb eqeq12i syl6bbr ) BEI
      CDJZABKZFLZCIZABKZFMZUMDIZABKZFMZJZABCNZABDNZJUKAGLZKUNAVCKZFMZUQAVCKZFMZ
      JZULUTGBEUKAVCBOVCBJZVEUPVGUSVIVDUOFUNAVCBOPVIVFURFUQAVCBOPQUKVHAGAHHVEVG
      VDFHLZKZVKARVJVEIZVLARVDFHAUNAGSTVDHFUAZVLVKAVMUBUCVFFVJKZVNARVJVGIZVOARV
      FFHAUQAGSTVFHFUAZVOVNAVPUBUCUDALVCJCVEDVGAGFCUEAGFDUEQUFUGVAUPVBUSAFBCUHA
      FBDUHUIUJ $.
      $( [29-Jun-2011] $) $( [10-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y C $.  $d y D $.
    $( Move proper substitution in and out of a membership relation.  Note that
       the scope of ` [ A / x ] ` is the wff ` B e. C ` , whereas the scope of
       ` [_ A / x ]_ ` is the class ` B ` . $)
    sbcel1g $p |- ( A e. D -> ( [ A / x ] B e. C <->
                    [_ A / x ]_ B e. C ) ) $=
      ( vy wcel wsbc csb sbcel12g cv ax-17 csbconstgf eleq2d bitrd ) BEGZCDGABH
      ABCIZABDIZGQDGABCDEJPRDQAFBDEFKDGALMNO $.
      $( [10-Nov-2005] $)

    $( Move proper substitution to first argument of an equality. $)
    sbceq1dig $p |- ( A e. D -> ( [ A / x ] B = C <->
                    [_ A / x ]_ B = C ) ) $=
      ( vy wcel wceq wsbc csb sbceqdig cv ax-17 csbconstgf eqeq2d bitrd ) BEGZC
      DHABIABCJZABDJZHRDHABCDEKQSDRAFBDEFLDGAMNOP $.
      $( [30-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y D $.
    $( Move proper substitution in and out of a membership relation. $)
    sbcel2g $p |- ( A e. D -> ( [ A / x ] B e. C <->
                    B e. [_ A / x ]_ C ) ) $=
      ( vy wcel wsbc csb sbcel12g cv ax-17 csbconstgf eleq1d bitrd ) BEGZCDGABH
      ABCIZABDIZGCRGABCDEJPQCRAFBCEFKCGALMNO $.
      $( [14-Nov-2005] $)

    $( Move proper substitution to second argument of an equality. $)
    sbceq2dig $p |- ( A e. D -> ( [ A / x ] B = C <->
                    B = [_ A / x ]_ C ) ) $=
      ( vy wcel wceq wsbc csb sbceqdig cv ax-17 csbconstgf eqeq1d bitrd ) BEGZC
      DHABIABCJZABDJZHCSHABCDEKQRCSAFBCEFLCGAMNOP $.
      $( [30-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutative law for double substitution into a class. $)
    csbcomg $p |- ( ( A e. R /\ B e. S ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) $=
      ( vz cvv wcel csb wceq wa cv wsbc sbccomg wb sbcel2g sbcbidv ancoms 
      3bitr3d adantr adantl eqrdv elisset syl2an ) CIJZDIJZACBDEKZKZBDACEKZKZLC
      FJDGJUGUHMZHUJULUMHNZUIJZACOZUNUKJZBDOZUNUJJZUNULJZUMUNEJZBDOZACOZVAACOZB
      DOUPURVAABCDIIPUHUGVCUPQUHVBUOACIBDUNEIRSTUGVDUQBDIACUNEIRSUAUGUPUSQUHACU
      NUIIRUBUHURUTQUGBDUNUKIRUCUAUDCFUEDGUEUF $.
      $( [14-Nov-2005] $)
  $}

  ${
    csbeq2d.1 $e |- ( ph -> A. x ph ) $.
    csbeq2d.2 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution. $)
    csbeq2d $p |- ( ( ph /\ A e. D ) -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( wcel csb wceq wsbc wal a4sbc 19.21ai syl5 sbceqdig sylibd impcom ) CFIZ
      ABCDJBCEJKZTADEKZBCLZUATUBBMUCAUBBCFNAUBBGHOPBCDEFQRS $.
      $( [22-Nov-2005] $)
  $}

  ${
    $d x ph $.
    csbeq2dv.1 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution. $)
    csbeq2dv $p |- ( ( ph /\ A e. D ) -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( ax-17 csbeq2d ) ABCDEFABHGI $.
      $( [10-Nov-2005] $)
  $}

  ${
    csbeq2i.1 $e |- B = C $.
    $( Formula-building inference rule for class substitution. $)
    csbeq2i $p |- ( A e. D -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( wcel wceq wsbc csb sbcth sbceqdig mpbid ) BEGCDHZABIABCJABDJHNABEFKABCD
      ELM $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    $( The proper substitution of a class for set variable results in the class
       (if the class exists). $)
    csbvarg $p |- ( A e. B -> [_ A / x ]_ x = A ) $=
      ( vy vz wcel cvv cv csb wceq elisset visset wsbc cab sbcel2gv abbi1dv 
      df-csb syl5eq ax-mp csbeq2i csbcog 3eqtr3d syl ) BCFBGFZABAHZIZBJBCKUDDBA
      DHZUEIZIDBUGIZUFBDBUHUGGUGGFZUHUGJDLUJEHZUEFAUGMZENUGUHUJULEUGAUKUGGOPAEU
      GUEQRSTADBUEGUAUDUKUGFDBMZENBUIUDUMEBDUKBGOPDEBUGQRUBUC $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y $.
    $( Substitution into a wff expressed in terms of substitution into a
       class. $)
    sbccsbg $p |- ( A e. B ->
                 ( [ A / x ] ph <-> y e. [_ A / x ]_ { y | ph } ) ) $=
      ( wcel cv cab wsbc csb abid sbcbii sbcel2g bitr3d ) DEFCGZACHZFZBDIABDIOB
      DPJFQABDEACKLBDOPEMN $.
      $( [15-Aug-2007] $)
  $}

  $( Substitution into a wff expressed in using substitution into a class. $)
  sbccsb2g $p |- ( A e. B ->
               ( [ A / x ] ph <-> A e. [_ A / x ]_ { x | ph } ) ) $=
    ( wcel cv cab wsbc csb sbcel12g abid sbcbii csbvarg eleq1d 3bitr3d ) CDEZBF
    ZABGZEZBCHBCQIZBCRIZEABCHCUAEBCQRDJSABCDABKLPTCUABCDMNO $.
    $( [27-Nov-2005] $)

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1g $p |- ( A e. C ->
                 ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) $=
      ( vz wcel cvv cv csb wal wi elisset wsbc cab ax-17 hbel 19.21ai hbsbc1g 
      hbabd df-csb eleq2i albii 3imtr4g syl ) CEHCIHZBJZACDKZHZUJALZMCENUGUHGJD
      HZACOZGPZHZUOALUJUKUGUMAGBUGUGGLAABBCIFUHIHAQRUGGQSULABCIFTUAUIUNUHAGCDUB
      UCZUJUOAUPUDUEUF $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1.1 $e |- A e. _V $.
    hbcsb1.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1 $p |- ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) $=
      ( cvv wcel cv csb wal wi hbcsb1g ax-mp ) CGHBIACDJHZOAKLEABCDGFMN $.
      $( [17-Aug-2006] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x z $.  $d w y $.
    hbcsbg.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbcsbg.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsbg $p |- ( A e. C ->
                 ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) $=
      ( vw wcel cvv cv csb wal wi elisset wsbc cab ax-17 hbel 19.21ai hbsbcg 
      hbabd df-csb eleq2i albii 3imtr4g syl ) DFJDKJZCLZBDEMZJZULANZODFPUIUJILZ
      EJZBDQZIRZJZURANULUMUIUPAICUIUIINAACCDKGUJKJASTUIISUAUOABCDKGACCUNEUJUNJA
      SHTUBUCUKUQUJBIDEUDUEZULURAUSUFUGUH $.
      $( [20-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d y z ph $.  $d x y z $.
    hbcsb1gd.1 $e |- ( ph -> A. x ph ) $.
    hbcsb1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbcsb1g . $)
    hbcsb1gd $p |- ( ( ph /\ A e. C ) ->
                 ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) $=
      ( vz cvv wcel cv csb wal wi wa a1d ax-17 a1i hbeld hband anabsi5 wsbc 
      hbsbc1gd wb sbcel2g adantl albid 3imtr3d elisset sylan2 ) ADJKZCLZBDEMZKZ
      UOBNODFKAULPZBIUMUNAULUPBNAAULBAABNAGQABCDJGHUMJKZUQBNOAUQBRSTUAUBZILZUMK
      ZUTBNOUPUTBRSUPUSEKZBDUCZVBBNUSUNKZVCBNAVABCDJGHUDULVBVCUEABDUSEJUFUGZUPV
      BVCBURVDUHUITDFUJUK $.
      $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w z ph $.  $d w x z $.  $d w y $.
    hbcsbgd.1 $e |- ( ph -> A. x ph ) $.
    hbcsbgd.2 $e |- ( ph -> A. y ph ) $.
    hbcsbgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbcsbgd.4 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of ~ hbcsbg . $)
    hbcsbgd $p |- ( ( ph /\ A e. C ) ->
                 ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) $=
      ( vw cvv wcel cv csb wal wi wa a1d ax-17 a1i hbeld hband anabsi5 wsbc 
      hbsbcgd wb sbcel2g adantl albid 3imtr3d elisset sylan2 ) AEMNZDOZCEFPZNZU
      RBQREGNAUOSZBLUPUQAUOUSBQAAUOBAABQAHTABDEMHJUPMNZUTBQRAUTBUAUBUCUDUEZLOZU
      PNZVCBQRUSVCBUAUBUSVBFNZCEUFZVEBQVBUQNZVFBQAVDBCDEMHIJABDVBFHUPVBNZVGBQRA
      VGBUAUBKUCUGUOVEVFUHACEVBFMUIUJZUSVEVFBVAVHUKULUCEGUMUN $.
      $( [21-Nov-2005] $)
  $}

  ${
    $d z A $.  $d w B $.  $d z C $.  $d w x y z $.
    csbhypf.1 $e |- ( z e. A -> A. x z e. A ) $.
    csbhypf.2 $e |- ( z e. C -> A. x z e. C ) $.
    csbhypf.3 $e |- ( x = A -> B = C ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See ~ sbhypf for class substitution version. $)
    csbhypf $p |- ( y = A -> [_ y / x ]_ B = C ) $=
      ( vw cv wceq wa wex csb wcel ax-17 visset eqvincf hbcsb1 hbeq csbeq1a 
      sylan9req 19.23ai sylbi ) BKZDLAKZUFLZUGDLZMZANAUFEOZFLZACUFDCKUFPAQGBRZS
      UJULAAJCUKFAJUFEUMJKUFPAQTHUAUHUIUKEFAUFEUBIUCUDUE $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x z A $.  $d z B $.  $d y z C $.  $d z D $.  $d x y z $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Closed theorem version of ~ csbiegf .) $)
    csbiegft $p |- ( ( A e. D /\ A. x A. y ( y e. C -> A. x y e. C ) /\
                 A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) $=
      ( vz wcel cv wal wi wceq w3a wsbc cab csb wb sbciegft id visset eleq1 
      albidv imbi12d cla4v alimi eleq2 imim2i syl3an abbi1dv df-csb syl5eq ) CF
      HZBIZEHZUNAJZKZBJZAJZAICLZDELZKZAJZMZGIZDHZACNZGOEACDPVCVFGEULVDEHZVGAJZK
      ZAJUSVEVGQZKZAJVFVGQULURVBVEVGACFRULSUQVIAUPVIBVDGTUMVDLZUNVGUOVHUMVDEUAZ
      VLUNVGAVMUBUCUDUEVAVKAUTVJUSDEVDUFUGUEUHUIAGCDUJUK $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x z A $.  $d z B $.  $d y C $.  $d x y $.
    csbieb.1 $e |- A e. _V $.
    csbieb.2 $e |- ( y e. C -> A. x y e. C ) $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution
       equivalent. $)
    csbieb $p |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) $=
      ( vz wceq csb cv wcel ax-17 hbcsb1 hbeq csbeq1a eqeq1d ceqsal ) DEIACDJZE
      IACAHBSEAHCDFHKCLAMNGOFAKCIDSEACDPQR $.
      $( [2-Mar-2008] $)
  $}

  ${
    $d x y A $.  $d y C $.  $d x y D $.
    csbiegf.1 $e |- ( A e. D -> ( y e. C -> A. x y e. C ) ) $.
    csbiegf.2 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class. $)
    csbiegf $p |- ( A e. D -> [_ A / x ]_ B = C ) $=
      ( wcel cv wal wi wceq wa csb 19.21aivv ax-gen jctir csbiegft 3expb mpdan 
      ) CFIZBJEIZUCAKLZBKAKZAJCMDEMLZAKZNACDOEMZUBUEUGUBUDABGPUFAHQRUBUEUGUHABC
      DEFSTUA $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x A $.  $d y C $.  $d x y $.
    csbief.1 $e |- A e. _V $.
    csbief.2 $e |- ( y e. C -> A. x y e. C ) $.
    csbief.3 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    csbief $p |- [_ A / x ]_ B = C $=
      ( cv wceq wi csb csbieb mpgbi ) AICJDEJKACDLEJAABCDEFGMHN $.
      $( [9-Jul-2011] $) $( [26-Nov-2005] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.  $d x y z D $.
    csbie2g.1 $e |- A e. _V $.
    csbie2g.2 $e |- B e. _V $.
    $( Conversion of implicit substitution to explicit substitution into a
       class (closed form of ~ csbie2 ). $)
    csbie2t $p |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) ->
                  [_ A / x ]_ [_ B / y ]_ C = D ) $=
      ( vz cv wceq wa wi wal wex csb isseti hba1 wcel ax-17 hbcsb1 hbeq cvv 
      hbcsbg ax-mp csbeq1a sylan9eqr pm3.43 mpan eqtr2 syl6 a4s 19.23ad eeanv 
      syl5ibr mp2ani ) AJCKZBJDKZLZEFKZMZBNZANZUQAOZURBOZACBDEPZPZFKZACGQBDHQVC
      USBOZAOVHVDVELVCVIVHAVBARAIIVGFAICVFGIJZCSZATUAVJFSZATUBVBVIVHMAVBUSVHBVA
      BRBIIVGFCUCSVJVGSZVMBNMGBAICVFUCVKBTBIDEHVJDSBTUAUDUEVLBTUBVAUSVHMBVAUSEV
      GKZUTLZVHUSVNMVAUSVOMURUQEVFVGBDEUFACVFUFUGUSVNUTUHUIEVGFUJUKULUMULUMUQUR
      ABUNUOUP $.
      $( [3-Sep-2007] $)

    ${
      csbie2.3 $e |- ( ( x = A /\ y = B ) -> C = D ) $.
      $( Conversion of implicit substitution to explicit substitution into a
         class. $)
      csbie2 $p |- [_ A / x ]_ [_ B / y ]_ C = D $=
        ( cv wceq wa wi wal csb gen2 csbie2t ax-mp ) AJCKBJDKLEFKMZBNANACBDEOOF
        KSABIPABCDEFGHQR $.
        $( [27-Aug-2007] $)
    $}
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x z C $.  $d x y z R $.  $d y z S $.
    $( Lemma for ~ csbnestg . $)
    csbnestglem $p |- ( ( A e. R /\ A. x B e. S ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz wcel wal wa cv csb wi wceq simpl ax-17 hba1 hban cvv csbexg hbcsb1g 
      adantr a1i hbcsbgd mpdan 19.21aiv 19.21ai csbeq1a csbeq1d ax-gen 
      csbiegft syl111anc ) CFIZDGIZAJZKZUNHLZBACDMZEMZIZVAAJNZHJZAJALCOZBDEMZUT
      ONZAJZACVEMUTOUNUPPUQVCAUNUPAUNAQUOARSZUQVBHUQUSTIVBACDFGUAUQABHUSETVHUNU
      PBUNBQUPBQSUNURUSIZVIAJNUPAHCDFURCIAQUBUCUREIZVJAJNUQVJAQUDUEUFUGUHVGUQVF
      AVDBDUSEACDUIUJUKUDAHCVEUTFULUM $.
      $( [23-Nov-2005] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x z C $.  $d w x y $.
    $( Nest the composition of two substitutions. $)
    csbnestg $p |- ( ( A e. R /\ A. x B e. S ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz vw cvv wcel wal csb wceq wa cv csbcog adantr visset csbnestglem 
      mpan csbeq2dv ancoms csbexg 19.21aiv sylan2 csbeq1d 3eqtrd eqtr3d hba1 
      a4s csbeq2d syl 3eqtr3d elisset alimi syl2an ) CJKZDJKZALZACBDEMZMZBACDMZ
      EMZNCFKDGKZALURUTOZACHDBHPEMZMZMZHVCVGMZVBVDVFICAIPZVHMZMZVIVJURVMVINUTAI
      CVHJQRVFVMICHAVKDMZVGMZMZHICVNMZVGMZVJUTURVMVPNUTICVLVOJVKJKZUTVLVONISZAH
      VKDVGJJTUAUBUCURVNJKZILVPVRNUTIHCVNVGJJTUTWAIVSUTWAVTAVKDJJUDUAUEUFURVRVJ
      NUTURHVQVCVGAICDJQUGRUHUIUTURVIVBNUTACVHVAJUSAUJUSVHVANABHDEJQUKULUCVFVCJ
      KVJVDNACDJJUDBHVCEJQUMUNCFUOVEUSADGUOUPUQ $.
      $( [23-Nov-2005] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.  $d y S $.
    $( Nest the composition of two substitutions. $)
    csbnest1g $p |- ( ( A e. R /\ A. x B e. S ) ->
                  [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) $=
      ( vy cvv wcel wal csb wceq wa cv wi simpl ax-17 hba1 hban csbexg hbcsb1g 
      hbcsb1gd syldan 19.21aiv 19.21ai csbeq1a csbeq1d ax-gen a1i csbiegft 
      syl111anc elisset sylan ) BHIZCFIZAJZABACDKZKAABCKZDKZLZBEIUNUPMZUNGNZUSI
      ZVCAJOZGJZAJANBLZUQUSLOZAJZUTUNUPPVAVEAUNUPAUNAQZUOARSVAVDGUNUPURHIVDABCH
      FTUNAGURDHVIAGBCHVBBIAQUAUBUCUDUEVHVAVGAVFACURDABCUFUGUHUIAGBUQUSHUJUKBEU
      LUM $.
      $( [23-May-2006] $)
  $}

  ${
    $d x ph $.  $d x y $.
    $( Nest the composition of two substitutions. $)
    sbcnestg $p |- ( ( A e. R /\ A. x B e. S ) ->
                ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) $=
      ( wcel cvv wal wsbc csb wb wa cab hba1 sbccsb2g a4s sbcbid ancoms 
      sbcel12g adantr csbnestg eleq2d csbexg syl bitr4d 3bitrd elisset alimi 
      sylan2 ) DFHZEIHZBJZACEKZBDKZACBDELZKZMEGHZBJULUNNZUPECEACOZLZHZBDKZUQBDV
      BLZHZURUNULUPVDMUNUOVCBDFUMBPUMUOVCMBACEIQRSTULVDVFMUNBDEVBFUAUBUTVFUQCUQ
      VALZHZURUTVEVGUQBCDEVAFIUCUDUTUQIHURVHMBDEFIUEACUQIQUFUGUHUSUMBEGUIUJUK 
      $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x y A $.
    $( Idempotent law for class substitutions. $)
    csbidmg $p |- ( A e. C -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) $=
      ( vy wcel cvv csb wceq elisset wal ax-17 csbnest1g mpdan cv csbconstgf 
      csbeq1d eqtrd syl ) BDFBGFZABABCHZHZUAIBDJTUBAABBHZCHZUATTAKUBUDITALABBCG
      GMNTAUCBCAEBBGEOBFALPQRS $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d x A $.  $d x C $.  $d x z D $.  $d x y $.
    csbco3g.1 $e |- ( x = A -> B = D ) $.
    $( Composition of two class substitutions. $)
    csbco3g $p |- ( ( A e. R /\ A. x B e. S ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ D / y ]_ C ) $=
      ( vz wcel wal wa csb csbnestg wceq cv wi ax-17 gen2 ax-gen csbiegft 
      mp3an23 csbeq1d adantr eqtrd ) CGKZDHKALZMACBDENNBACDNZENZBFENZABCDEGHOUG
      UJUKPUHUGBUIFEUGJQFKZULALRZJLALAQCPDFPRZALUIFPUMAJULASTUNAIUAAJCDFGUBUCUD
      UEUF $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ph $.  $d x z C $.  $d x y $.
    sbcco3g.1 $e |- ( x = A -> B = C ) $.
    $( Composition of two substitutions. $)
    sbcco3g $p |- ( ( A e. R /\ A. x B e. S ) ->
                ( [ A / x ] [ B / y ] ph <-> [ C / y ] ph ) ) $=
      ( vz wcel wal wa wsbc csb sbcnestg wb wceq cv wi ax-17 gen2 ax-gen 
      csbiegft mp3an23 dfsbcq syl adantr bitrd ) DGKZEHKBLZMACENBDNACBDEOZNZACF
      NZABCDEGHPUJUMUNQZUKUJULFRZUOUJJSFKZUQBLTZJLBLBSDREFRTZBLUPURBJUQBUAUBUSB
      IUCBJDEFGUDUEACULFUFUGUHUI $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x B $.  $d x D $.
    $( Special case related to ~ ra4sbc .  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    ra4csbela $p |- ( ( A e. B /\ A. x e. B C e. D ) -> [_ A / x ]_ C e. D ) $=
      ( wcel wral csb wsbc ra4sbc sbcel1g sylibd imp ) BCFZDEFZACGZABDHEFZNPOAB
      IQOABCJABDECKLM $.
      $( [18-Jan-2007] $) $( [10-Dec-2005] $)
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.  $d B z $.
    $( Move substitution into a class abstraction.  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    csbabg $p |- ( A e. B ->
                 [_ A / x ]_ { y | ph } = { y | [ A / x ] ph } ) $=
      ( vz wcel cab csb wsbc cv cvv wb visset sbccomg mpan df-clab syl5bb 
      sbcbii sbcel2g 3bitr2rd eqrdv ) DEGZFBDACHZIZABDJZCHZUCFKZUGGZACUHJZBDJZU
      HUDGZBDJUHUEGUCUFCUHJZUKUIUHLGUCUMUKMFNACBUHDLEOPUFFCQRULUJBDEAFCQSBDUHUD
      ETUAUB $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Define basic set operations and relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols. $)
  $c \ $. $( Backslash (difference) $)
  $c u. $. $( Cup (union) $)
  $c i^i $. $( Cap (intersection) $)
  $c C_ $. $( Subclass or subset symbol $)
  $c C. $. $( Proper subclass or subset symbol $)

  $( Extend class notation to include class difference (read:  " ` A ` minus
     ` B ` "). $)
  cdif $a class ( A \ B ) $.

  $( Extend class notation to include union of two classes (read:  " ` A `
     union ` B ` "). $)
  cun $a class ( A u. B ) $.

  $( Extend class notation to include the intersection of two classes
     (read:  " ` A ` intersect ` B ` "). $)
  cin $a class ( A i^i B ) $.

  $( Extend wff notation to include the subclass relation.  This is
     read " ` A ` is a subclass of ` B ` " or " ` B ` includes ` A ` ."  When
     ` A ` exists as a set, it is also read " ` A ` is a subset of ` B ` ." $)
  wss $a wff A C_ B $.

  $( Extend wff notation with proper subclass relation. $)
  wpss $a wff A C. B $.

  ${
    $d x A $.  $d x B $.  $d y A $.  $d y B $.  $d z x $.  $d z y $.  $d z A $.
    $d z B $.
    $( Soundness justification theorem for ~ df-dif .  (Contributed by Rodolfo
       Medina, 27-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       9-Jul-2011.) $)
    difjust $p |- { x | ( x e. A /\ -. x e. B ) }
                  = { y | ( y e. A /\ -. y e. B ) } $=
      ( vz cv wcel wn wa cab wceq eleq1 notbid anbi12d cbvabv eqtri ) AFZCGZQDG
      ZHZIZAJEFZCGZUBDGZHZIZEJBFZCGZUGDGZHZIZBJUAUFAEQUBKZRUCTUEQUBCLULSUDQUBDL
      MNOUFUKEBUBUGKZUCUHUEUJUBUGCLUMUDUIUBUGDLMNOP $.
      $( [9-Jul-2011] $) $( [27-Apr-2010] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define class difference, also called relative complement.  Definition
       5.12 of [TakeutiZaring] p. 20.  Several notations are used in the
       literature; we chose the ` \ ` convention used in Definition 5.3 of
       [Eisenberg] p. 67 instead of the more common minus sign to reserve the
       latter for later use in, e.g., arithmetic.  We will use the
       terminology " ` A ` excludes ` B ` " to mean ` A \ B ` .  We will
       use " ` B ` is removed from ` A ` " to mean ` A \ { B } ` i.e. the
       removal of an element or equivalently the exclusion of a singleton. $)
    df-dif $a |- ( A \ B ) = { x | ( x e. A /\ -. x e. B ) } $.
  $}

  ${
    $d x A $.  $d x B $.  $d y A $.  $d y B $.  $d z x $.  $d z y $.  $d z A $.
    $d z B $.
    $( Soundness justification theorem for ~ df-un .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       9-Jul-2011.) $)
    unjust $p |- { x | ( x e. A \/ x e. B ) } = { y | ( y e. A \/ y e. B ) } $=
      ( vz cv wcel wo cab wceq eleq1 orbi12d cbvabv eqtri ) AFZCGZODGZHZAIEFZCG
      ZSDGZHZEIBFZCGZUCDGZHZBIRUBAEOSJPTQUAOSCKOSDKLMUBUFEBSUCJTUDUAUESUCCKSUCD
      KLMN $.
      $( [9-Jul-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the union of two classes.  Definition 5.6 of [TakeutiZaring]
       p. 16.  For an alternate definition in terms of class difference,
       requiring no dummy variables, see ~ dfun2 .  For union defined in terms
       of intersection, see ~ dfun3 . $)
    df-un $a |- ( A u. B ) = { x | ( x e. A \/ x e. B ) } $.
  $}

  ${
    $d x A $.  $d x B $.  $d y A $.  $d y B $.  $d z x $.  $d z y $.  $d z A $.
    $d z B $.
    $( Soundness justification theorem for ~ df-in .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       9-Jul-2011.) $)
    injust $p |- { x | ( x e. A /\ x e. B ) }
                  = { y | ( y e. A /\ y e. B ) } $=
      ( vz cv wcel wa cab wceq eleq1 anbi12d cbvabv eqtri ) AFZCGZODGZHZAIEFZCG
      ZSDGZHZEIBFZCGZUCDGZHZBIRUBAEOSJPTQUAOSCKOSDKLMUBUFEBSUCJTUDUAUESUCCKSUCD
      KLMN $.
      $( [9-Jul-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the intersection of two classes.  Definition 5.6 of
       [TakeutiZaring] p. 16.  For alternate definitions in terms of class
       difference, requiring no dummy variables, see ~ dfin2 and ~ dfin4 .  For
       intersection defined in terms of union, see ~ dfin3 . $)
    df-in $a |- ( A i^i B ) = { x | ( x e. A /\ x e. B ) } $.

    $( Alternate definition for the intersection of two classes. $)
    dfin5 $p |- ( A i^i B ) = { x e. A | x e. B } $=
      ( cin cv wcel wa cab crab df-in df-rab eqtr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
      $( [6-Jul-2005] $)
  $}

  $( Define the subclass relationship.  Exercise 9 of [TakeutiZaring] p. 18.
     For a more traditional definition, but requiring a dummy variable, see
     ~ dfss2 .  Other possible definitions are given by ~ dfss3 , ~ dfss4 ,
     ~ sspss , ~ ssequn1 , ~ ssequn2 , ~ sseqin2 , and ~ ssdif0 . $)
  df-ss $a |- ( A C_ B <-> ( A i^i B ) = A ) $.

  $( A frequently-used variant of subclass definition ~ df-ss . $)
  dfss $p |- ( A C_ B <-> A = ( A i^i B ) ) $=
    ( wss cin wceq df-ss eqcom bitri ) ABCABDZAEAIEABFIAGH $.
    $( [3-Sep-2004] $)

  $( Define proper subclass relationship between two classes.  Definition 5.9
     of [TakeutiZaring] p. 17.  Other possible definitions are given by
     ~ dfpss2 and ~ dfpss3 . $)
  df-pss $a |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) $.

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of class difference. $)
    dfdif2 $p |- ( A \ B ) = { x e. A | -. x e. B } $=
      ( cdif cv wcel wn wa cab crab df-dif df-rab eqtr4i ) BCDAEZBFNCFGZHAIOABJ
      ABCKOABLM $.
      $( [25-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Expansion of membership in a class difference. $)
    eldif $p |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) $=
      ( vx cdif wcel cvv wn wa elisset adantr cv wceq eleq1 notbid anbi12d 
      df-dif elab2g pm5.21nii ) ABCEZFAGFZABFZACFZHZIZATJUBUAUDABJKDLZBFZUFCFZH
      ZIUEDATGUFAMZUGUBUIUDUFABNUJUHUCUFACNOPDBCQRS $.
      $( [29-Apr-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Subclasses and subsets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of the subclass relationship between two classes.
       Definition 5.9 of [TakeutiZaring] p. 17. $)
    dfss2 $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( wss cv wcel wa wb wal wi cin wceq cab dfss df-in eqeq2i abeq2 3bitri 
      pm4.71 albii bitr4i ) BCDZAEZBFZUDUCCFZGZHZAIZUDUEJZAIUBBBCKZLBUFAMZLUHBC
      NUJUKBABCOPUFABQRUIUGAUDUESTUA $.
      $( [8-Jan-2002] $)

    $( Alternate definition of subclass relationship. $)
    dfss3 $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2 df-ral bitr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d z y A $.  $d z y B $.  $d x z $.
    dfss2f.1 $e |- ( y e. A -> A. x y e. A ) $.
    dfss2f.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions.  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 27-Aug-2011.) $)
    dfss2f $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( vz wss cv wcel wi wal dfss2 hblem hbim ax-17 wceq eleq1 imbi12d cbval 
      bitri ) CDHGIZCJZUBDJZKZGLAIZCJZUFDJZKZALGCDMUEUIGAUCUDAABGCENABGDFNOUIGP
      UBUFQUCUGUDUHUBUFCRUBUFDRSTUA $.
      $( [27-Aug-2011] $) $( [3-Jul-1994] $)

    $d y A $.  $d y B $.

    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions. $)
    dfss3f $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2f df-ral bitr4i ) CDGAHZCIPDIZJAKQACLABCDE
      FMQACNO $.
      $( [27-Aug-2011] $) $( [20-Mar-2004] $)

    $( If ` x ` is not free in ` A ` and ` B ` , it is not free in
       ` A C_ B ` . $)
    hbss $p |- ( A C_ B -> A. x A C_ B ) $=
      ( cv wcel wi wal wss hba1 dfss2f albii 3imtr4i ) AGZCHPDHIZAJZRAJCDKZSAJQ
      ALABCDEFMZSRATNO $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership relationships follow from a subclass relationship. $)
    ssel $p |- ( A C_ B -> ( C e. A -> C e. B ) ) $=
      ( vx wss cv wceq wcel wa wex wi wal dfss2 biimpi 19.21bi anim2d eximdv 
      df-clel 3imtr4g ) ABEZDFZCGZUAAHZIZDJUBUABHZIZDJCAHCBHTUDUFDTUCUEUBTUCUEK
      ZDTUGDLDABMNOPQDCARDCBRS $.
      $( [5-Aug-1993] $)
  $}

  $( Membership relationships follow from a subclass relationship. $)
  ssel2 $p |- ( ( A C_ B /\ C e. A ) -> C e. B ) $=
    ( wss wcel ssel imp ) ABDCAECBEABCFG $.
    $( [7-Jun-2004] $)

  ${
    sseli.1 $e |- A C_ B $.
    $( Membership inference from subclass relationship. $)
    sseli $p |- ( C e. A -> C e. B ) $=
      ( wss wcel wi ssel ax-mp ) ABECAFCBFGDABCHI $.
      $( [5-Aug-1993] $)
    ${
      sselii.2 $e |- C e. A $.
      $( Membership inference from subclass relationship. $)
      sselii $p |- C e. B $=
        ( wcel sseli ax-mp ) CAFCBFEABCDGH $.
        $( [31-May-1999] $)
    $}
  $}

  ${
    sseld.1 $e |- ( ph -> A C_ B ) $.
    $( Membership deduction from subclass relationship. $)
    sseld $p |- ( ph -> ( C e. A -> C e. B ) ) $=
      ( wss wcel wi ssel syl ) ABCFDBGDCGHEBCDIJ $.
      $( [15-Nov-1995] $)
    ${
      sseldd.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship. $)
      sseldd $p |- ( ph -> C e. B ) $=
        ( wcel sseld mpd ) ADBGDCGFABCDEHI $.
        $( [14-Dec-2004] $)
    $}
  $}

  ${
    $d x A $.  $d x B $.
    ssriv.1 $e |- ( x e. A -> x e. B ) $.
    $( Inference rule based on subclass definition. $)
    ssriv $p |- A C_ B $=
      ( wss cv wcel wi dfss2 mpgbir ) BCEAFZBGKCGHAABCIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrdv.1 $e |- ( ph -> ( x e. A -> x e. B ) ) $.
    $( Deduction rule based on subclass definition. $)
    ssrdv $p |- ( ph -> A C_ B ) $=
      ( cv wcel wi wal wss 19.21aiv dfss2 sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM 
      $.
      $( [15-Nov-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Transitivity of subclasses.  Exercise 5 of [TakeutiZaring] p. 17.  (The
       proof was shortened by Andrew Salmon, 14-Jun-2011.) $)
    sstr2 $p |- ( A C_ B -> ( B C_ C -> A C_ C ) ) $=
      ( vx wss cv wcel wi wal ssel imim1d alimdv dfss2 3imtr4g ) ABEZDFZBGZPCGZ
      HZDIPAGZRHZDIBCEACEOSUADOTQRABPJKLDBCMDACMN $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  $( Transitivity of subclasses.  Theorem 6 of [Suppes] p. 23. $)
  sstr $p |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) $=
    ( wss sstr2 imp ) ABDBCDACDABCEF $.
    $( [5-Sep-2003] $)

  ${
    sstri.1 $e |- A C_ B $.
    sstri.2 $e |- B C_ C $.
    $( Subclass transitivity inference. $)
    sstri $p |- A C_ C $=
      ( wss sstr2 mp2 ) ABFBCFACFDEABCGH $.
      $( [5-May-2000] $)
  $}

  ${
    sstrd.1 $e |- ( ph -> A C_ B ) $.
    sstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction. $)
    sstrd $p |- ( ph -> A C_ C ) $=
      ( wss sstr syl11anc ) ABCGCDGBDGEFBCDHI $.
      $( [2-Jun-2004] $)
  $}

  ${
    sylan9ss.1 $e |- ( ph -> A C_ B ) $.
    sylan9ss.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction.  (The proof was shortened by Andrew
       Salmon, 14-Jun-2011.) $)
    sylan9ss $p |- ( ( ph /\ ps ) -> A C_ C ) $=
      ( wss sstr syl2an ) CDHDEHCEHABCDEIFGJ $.
      $( [14-Jun-2011] $) $( [27-Sep-2004] $)
  $}

  ${
    sylan9ssr.1 $e |- ( ph -> A C_ B ) $.
    sylan9ssr.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction. $)
    sylan9ssr $p |- ( ( ps /\ ph ) -> A C_ C ) $=
      ( wss sylan9ss ancoms ) ABCEHABCDEFGIJ $.
      $( [27-Sep-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subclass relationship is antisymmetric.  Compare Theorem 4 of
       [Suppes] p. 22. $)
    eqss $p |- ( A = B <-> ( A C_ B /\ B C_ A ) ) $=
      ( vx cv wcel wb wal wi wa wceq wss albiim dfcleq dfss2 anbi12i 3bitr4i ) 
      CDZAEZQBEZFCGRSHCGZSRHCGZIABJABKZBAKZIRSCLCABMUBTUCUACABNCBANOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqssi.1 $e |- A C_ B $.
    eqssi.2 $e |- B C_ A $.
    $( Infer equality from two subclass relationships.  Compare Theorem 4 of
       [Suppes] p. 22. $)
    eqssi $p |- A = B $=
      ( wceq wss eqss mpbir2an ) ABEABFBAFABGCDH $.
      $( [9-Sep-1993] $)
  $}

  ${
    eqssd.1 $e |- ( ph -> A C_ B ) $.
    eqssd.2 $e |- ( ph -> B C_ A ) $.
    $( Equality deduction from two subclass relationships.  Compare Theorem 4
       of [Suppes] p. 22. $)
    eqssd $p |- ( ph -> A = B ) $=
      ( wceq wss eqss sylanbrc ) BCFBCGCBGABCHDEI $.
      $( [27-Jun-2004] $)
  $}

  ${
    $d A x $.
    $( Any class is a subclass of itself.  Exercise 10 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 14-Jun-2011.) $)
    ssid $p |- A C_ A $=
      ( vx cv wcel id ssriv ) BAABCADEF $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.
    $( Any class is a subclass of the universal class. $)
    ssv $p |- A C_ _V $=
      ( vx cvv cv elisset ssriv ) BACBDAEF $.
      $( [31-Oct-1995] $)
  $}

  $( Equality theorem for subclasses.  (The proof was shortened by Andrew
     Salmon, 21-Jun-2011.) $)
  sseq1 $p |- ( A = B -> ( A C_ C <-> B C_ C ) ) $=
    ( wceq wss wa wb eqss wi sstr2 adantl adantr impbid sylbi ) ABDABEZBAEZFZAC
    EZBCEZGABHQRSPRSIOBACJKOSRIPABCJLMN $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Equality theorem for the subclass relationship. $)
  sseq2 $p |- ( A = B -> ( C C_ A <-> C C_ B ) ) $=
    ( wss wa wi wceq wb sstr2 com12 anim12i eqss dfbi2 3imtr4i ) ABDZBADZECADZC
    BDZFZRQFZEABGQRHOSPTQORCABIJRPQCBAIJKABLQRMN $.
    $( [25-Jun-1998] $)

  $( Equality theorem for the subclass relationship. $)
  sseq12 $p |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) $=
    ( wceq wss sseq1 sseq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [31-May-1999] $)

  ${
    sseq1i.1 $e |- A = B $.
    $( An equality inference for the subclass relationship. $)
    sseq1i $p |- ( A C_ C <-> B C_ C ) $=
      ( wceq wss wb sseq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [18-Aug-1993] $)

    $( An equality inference for the subclass relationship. $)
    sseq2i $p |- ( C C_ A <-> C C_ B ) $=
      ( wceq wss wb sseq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [30-Aug-1993] $)

    ${
      sseq12i.2 $e |- C = D $.
      $( An equality inference for the subclass relationship.  (The proof was
         shortened by Eric Schmidt, 26-Jan-2007.) $)
      sseq12i $p |- ( A C_ C <-> B C_ D ) $=
        ( wceq wss wb sseq12 mp2an ) ABGCDGACHBDHIEFABCDJK $.
        $( [27-Jan-2007] $) $( [31-May-1999] $)
    $}
  $}

  ${
    sseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the subclass relationship. $)
    sseq1d $p |- ( ph -> ( A C_ C <-> B C_ C ) ) $=
      ( wceq wss wb sseq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [14-Aug-1994] $)

    $( An equality deduction for the subclass relationship. $)
    sseq2d $p |- ( ph -> ( C C_ A <-> C C_ B ) ) $=
      ( wceq wss wb sseq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [14-Aug-1994] $)

    ${
      sseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the subclass relationship. $)
      sseq12d $p |- ( ph -> ( A C_ C <-> B C_ D ) ) $=
        ( wss sseq1d sseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [31-May-1999] $)
    $}
  $}

  ${
    eqsstr.1 $e |- A = B $.
    eqsstr.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstri $p |- A C_ C $=
      ( wss sseq1i mpbir ) ACFBCFEABCDGH $.
      $( [16-Jul-1995] $)
  $}

  ${
    eqsstr3.1 $e |- B = A $.
    eqsstr3.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstr3i $p |- A C_ C $=
      ( eqcomi eqsstri ) ABCBADFEG $.
      $( [19-Oct-1999] $)
  $}

  ${
    sseqtr.1 $e |- A C_ B $.
    sseqtr.2 $e |- B = C $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtri $p |- A C_ C $=
      ( wss sseq2i mpbi ) ABFACFDBCAEGH $.
      $( [28-Jul-1995] $)
  $}

  ${
    sseqtr4.1 $e |- A C_ B $.
    sseqtr4.2 $e |- C = B $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtr4i $p |- A C_ C $=
      ( eqcomi sseqtri ) ABCDCBEFG $.
      $( [4-Apr-1995] $)
  $}

  ${
    eqsstrd.1 $e |- ( ph -> A = B ) $.
    eqsstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    eqsstr3d.1 $e |- ( ph -> B = A ) $.
    eqsstr3d.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstr3d $p |- ( ph -> A C_ C ) $=
      ( eqcomd eqsstrd ) ABCDACBEGFH $.
      $( [25-Apr-2004] $)
  $}

  ${
    sseqtrd.1 $e |- ( ph -> A C_ B ) $.
    sseqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    sseqtr4d.1 $e |- ( ph -> A C_ B ) $.
    sseqtr4d.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtr4d $p |- ( ph -> A C_ C ) $=
      ( eqcomd sseqtrd ) ABCDEADCFGH $.
      $( [25-Apr-2004] $)
  $}

  ${
    3sstr3.1 $e |- A C_ B $.
    3sstr3.2 $e |- A = C $.
    3sstr3.3 $e |- B = D $.
    $( Substitution of equality in both sides of a subclass relationship.  (The
       proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr3i $p |- C C_ D $=
      ( wss sseq12i mpbi ) ABHCDHEACBDFGIJ $.
      $( [27-Jan-2007] $) $( [13-Jan-1996] $)
  $}

  ${
    3sstr4.1 $e |- A C_ B $.
    3sstr4.2 $e |- C = A $.
    3sstr4.3 $e |- D = B $.
    $( Substitution of equality in both sides of a subclass relationship.  (The
       proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4i $p |- C C_ D $=
      ( wss sseq12i mpbir ) CDHABHECADBFGIJ $.
      $( [27-Jan-2007] $) $( [13-Jan-1996] $)
  $}

  ${
    3sstr3g.1 $e |- ( ph -> A C_ B ) $.
    3sstr3g.2 $e |- A = C $.
    3sstr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a subclass relationship. $)
    3sstr3g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylib ) ABCIDEIFBDCEGHJK $.
      $( [1-Oct-2000] $)
  $}

  ${
    3sstr4g.1 $e |- ( ph -> A C_ B ) $.
    3sstr4g.2 $e |- C = A $.
    3sstr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a subclass relationship.
       (The proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylibr ) ABCIDEIFDBECGHJK $.
      $( [27-Jan-2007] $) $( [16-Aug-1994] $)
  $}

  ${
    3sstr3d.1 $e |- ( ph -> A C_ B ) $.
    3sstr3d.2 $e |- ( ph -> A = C ) $.
    3sstr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a subclass relationship. $)
    3sstr3d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbid ) ABCIDEIFABDCEGHJK $.
      $( [1-Oct-2000] $)
  $}

  ${
    3sstr4d.1 $e |- ( ph -> A C_ B ) $.
    3sstr4d.2 $e |- ( ph -> C = A ) $.
    3sstr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a subclass relationship.
       (The proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbird ) ADEIBCIFADBECGHJK $.
      $( [27-Jan-2007] $) $( [30-Nov-1995] $)
  $}

  ${
    syl5ss.1 $e |- ( ph -> A C_ B ) $.
    syl5ss.2 $e |- C = A $.
    $( A chained subclass and equality deduction. $)
    syl5ss $p |- ( ph -> C C_ B ) $=
      ( wss sseq1i sylibr ) ABCGDCGEDBCFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl5ssr.1 $e |- ( ph -> A C_ B ) $.
    syl5ssr.2 $e |- A = C $.
    $( A chained subclass and equality deduction. $)
    syl5ssr $p |- ( ph -> C C_ B ) $=
      ( eqcomi syl5ss ) ABCDEBDFGH $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl6ss.1 $e |- ( ph -> A C_ B ) $.
    syl6ss.2 $e |- B = C $.
    $( A chained subclass and equality deduction. $)
    syl6ss $p |- ( ph -> A C_ C ) $=
      ( wss sseq2i sylib ) ABCGBDGECDBFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl6ssr.1 $e |- ( ph -> A C_ B ) $.
    syl6ssr.2 $e |- C = B $.
    $( A chained subclass and equality deduction. $)
    syl6ssr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl6ss ) ABCDEDCFGH $.
      $( [25-Apr-2004] $)
  $}

  $( Equality implies the subclass relation.  (The proof was shortened by
     Andrew Salmon, 21-Jun-2011.) $)
  eqimss $p |- ( A = B -> A C_ B ) $=
    ( wceq wss eqss simplbi ) ABCABDBADABEF $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Equality implies the subclass relation. $)
  eqimss2 $p |- ( B = A -> A C_ B ) $=
    ( wss eqimss eqcoms ) ABCABABDE $.
    $( [23-Nov-2003] $)

  ${
    eqimssi.1 $e |- A = B $.
    $( Infer subclass relationship from equality. $)
    eqimssi $p |- A C_ B $=
      ( ssid sseqtri ) AABADCE $.
      $( [6-Jan-2007] $)

    $( Infer subclass relationship from equality. $)
    eqimss2i $p |- B C_ A $=
      ( ssid sseqtr4i ) BBABDCE $.
      $( [7-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Negation of subclass relationship.  Exercise 13 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 21-Jun-2011.) $)
    nss $p |- ( -. A C_ B <-> E. x ( x e. A /\ -. x e. B ) ) $=
      ( wss wn cv wcel wi wal wa wex dfss2 notbii exanali bitr4i ) BCDZEAFZBGZQ
      CGZHAIZERSEJAKPTABCLMRSANO $.
      $( [26-Jun-2011] $) $( [25-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Quantification restricted to a subclass. $)
    ssralv $p |- ( A C_ B -> ( A. x e. B ph -> A. x e. A ph ) ) $=
      ( wss cv wcel ssel imim1d ralimdv2 ) CDEZAABDCKBFZCGLDGACDLHIJ $.
      $( [11-Mar-2006] $)

    $( Existential quantification restricted to a subclass. $)
    ssrexv $p |- ( A C_ B -> ( E. x e. A ph -> E. x e. B ph ) ) $=
      ( wss cv wcel ssel anim1d reximdv2 ) CDEZAABCDKBFZCGLDGACDLHIJ $.
      $( [11-Jan-2007] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Class abstractions in a subclass relationship. $)
    ss2ab $p |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) $=
      ( vy cab wss cv wcel wi wal hbab1 dfss2f abid imbi12i albii bitri ) ACEZB
      CEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [3-Jul-1994] $)
  $}

  ${
    $d x A $.
    $( Class abstraction in a subclass relationship. $)
    abss $p |- ( { x | ph } C_ A <-> A. x ( ph -> x e. A ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq2i ss2ab bitr3i ) ABDZCENBFCGZBDZEAOHB
      IPCNBCJKAOBLM $.
      $( [16-Aug-2006] $)

    $( Subclass of a class abstraction. $)
    ssab $p |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq1i ss2ab bitr3i ) CABDZEBFCGZBDZNEOAHB
      IPCNBCJKOABLM $.
      $( [16-Aug-2006] $)

    $( The relation for a subclass of a class abstraction is equivalent to
       restricted quantification. $)
    ssabral $p |- ( A C_ { x | ph } <-> A. x e. A ph ) $=
      ( cab wss cv wcel wi wal wral ssab df-ral bitr4i ) CABDEBFCGAHBIABCJABCKA
      BCLM $.
      $( [6-Sep-2006] $)
  $}

  ${
    ss2abi.1 $e |- ( ph -> ps ) $.
    $( Inference of abstraction subclass from implication. $)
    ss2abi $p |- { x | ph } C_ { x | ps } $=
      ( cab wss wi ss2ab mpgbir ) ACEBCEFABGCABCHDI $.
      $( [31-Mar-1995] $)
  $}

  ${
    $d x ph $.
    ss2abdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction of abstraction subclass from implication. $)
    ss2abdv $p |- ( ph -> { x | ps } C_ { x | ch } ) $=
      ( wi wal cab wss 19.21aiv ss2ab sylibr ) ABCFZDGBDHCDHIAMDEJBCDKL $.
      $( [29-Jul-2011] $)
  $}

  ${
    $d x ph $.  $d x A $.
    abssdv.1 $e |- ( ph -> ( ps -> x e. A ) ) $.
    $( Deduction of abstraction subclass from implication. $)
    abssdv $p |- ( ph -> { x | ps } C_ A ) $=
      ( cv wcel wi wal cab wss 19.21aiv abss sylibr ) ABCFDGHZCIBCJDKAOCELBCDMN
      $.
      $( [20-Jan-2006] $)
  $}

  ${
    $d x A $.
    abssi.1 $e |- ( ph -> x e. A ) $.
    $( Inference of abstraction subclass from implication. $)
    abssi $p |- { x | ph } C_ A $=
      ( cab cv wcel ss2abi abid2 sseqtri ) ABEBFCGZBECAKBDHBCIJ $.
      $( [20-Jan-2006] $)
  $}

  $( Restricted abstraction classes in a subclass relationship. $)
  ss2rab $p |- ( { x e. A | ph } C_ { x e. A | ps } <->
               A. x e. A ( ph -> ps ) ) $=
    ( crab wss cv wcel wa cab wi wal wral df-rab sseq12i ss2ab df-ral imdistan 
    albii bitr2i 3bitri ) ACDEZBCDEZFCGDHZAIZCJZUDBIZCJZFUEUGKZCLZABKZCDMZUBUFU
    CUHACDNBCDNOUEUGCPULUDUKKZCLUJUKCDQUMUICUDABRSTUA $.
    $( [30-May-1999] $)

  ${
    $d x B $.
    $( Restricted class abstraction in a subclass relationship. $)
    rabss $p |- ( { x e. A | ph } C_ B <-> A. x e. A ( ph -> x e. B ) ) $=
      ( crab wss cv wcel wa cab wi wal wral df-rab sseq1i abss impexp albii 
      df-ral bitr4i 3bitri ) ABCEZDFBGZCHZAIZBJZDFUEUCDHZKZBLZAUGKZBCMZUBUFDABC
      NOUEBDPUIUDUJKZBLUKUHULBUDAUGQRUJBCSTUA $.
      $( [16-Aug-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass of a restricted class abstraction. $)
    ssrab $p |- ( B C_ { x e. A | ph } <-> ( B C_ A /\ A. x e. B ph ) ) $=
      ( crab wss cv wcel wa cab wi wal wral df-rab sseq2i ssab dfss3 anbi1i 
      r19.26 df-ral 3bitr2ri 3bitri ) DABCEZFDBGZCHZAIZBJZFUDDHUFKBLZDCFZABDMZI
      ZUCUGDABCNOUFBDPUKUEBDMZUJIUFBDMUHUIULUJBDCQRUEABDSUFBDTUAUB $.
      $( [16-Aug-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrabdv.1 $e |- ( ph -> B C_ A ) $.
    ssrabdv.2 $e |- ( ( ph /\ x e. B ) -> ps ) $.
    $( Subclass of a restricted class abstraction (deduction rule). $)
    ssrabdv $p |- ( ph -> B C_ { x e. A | ps } ) $=
      ( crab wss wral ssrab r19.21aiva sylanbrc ) EBCDHIEDIBCEJABCDEKFABCEGLM 
      $.
      $( [31-Aug-2006] $)
  $}

  ${
    $d x ph $.
    ss2rabdv.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction of restricted abstraction subclass from implication. $)
    ss2rabdv $p |- ( ph -> { x e. A | ps } C_ { x e. A | ch } ) $=
      ( wi wral crab wss r19.21aiva ss2rab sylibr ) ABCGZDEHBDEICDEIJANDEFKBCDE
      LM $.
      $( [30-May-2006] $)
  $}

  ${
    ss2rabi.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference of restricted abstraction subclass from implication. $)
    ss2rabi $p |- { x e. A | ph } C_ { x e. A | ps } $=
      ( crab wss wi ss2rab mprgbir ) ACDFBCDFGABHCDABCDIEJ $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass law for restricted abstraction.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    rabss2 $p |- ( A C_ B -> { x e. A | ph } C_ { x e. B | ph } ) $=
      ( wss cv wcel wa cab crab wi wal pm3.45 alimi dfss2 ss2ab 3imtr4i df-rab 
      3sstr4g ) CDEZBFZCGZAHZBIZUADGZAHZBIZABCJABDJUBUEKZBLUCUFKZBLTUDUGEUHUIBU
      BUEAMNBCDOUCUFBPQABCRABDRS $.
      $( [26-Jun-2011] $) $( [18-Dec-2004] $)

    $( Subclass relation for the restriction of a class abstraction. $)
    ssab2 $p |- { x | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa simpl abssi ) BDCEZAFBCIAGH $.
      $( [31-Mar-1995] $)

    $( Subclass relation for a restricted class. $)
    ssrab2 $p |- { x e. A | ph } C_ A $=
      ( crab cv wcel wa cab df-rab ssab2 eqsstri ) ABCDBECFAGBHCABCIABCJK $.
      $( [19-Mar-1997] $)
  $}

  ${
    $d w y z A $.  $d w y z B $.  $d w x z C $.  $d w D $.  $d x y $.
    $( A subset relationship useful for converting union to indexed union using
       ~ dfiun2 or ~ dfiun2g and intersection to indexed intersection using
       ~ dfiin2 . $)
    uniiunlem $p |- ( A. x e. A B e. D ->
                     ( A. x e. A B e. C <-> { y | E. x e. A y = B } C_ C ) ) $=
      ( vz vw wcel wral cv wceq wrex wi wal cab wss hbra1 ax-17 ra4 eleq1a 
      syl6 r19.23ad 19.21aiv hbre1 hbim hbal wa csb wex csbeq1a eqcoms eqcomd 
      eqeq1d eqid a4eiv visset hbcsb1 hbeleq eqeq1 rexbid eleq1 imbi12d cla4gv 
      ra4e syl7 exp4a com4r imbi2d 3imtr3d 19.23aiv ax-mp imp3a com12 ralimdaa 
      impbid2 abss rexbidv cbvabv sseq1i bitr3i syl6bb ) DFIZACJZDEIZACJZGKZDLZ
      ACMZWGEIZNZGOZBKZDLZACMZBPZEQZWDWFWLWFWKGWFWHWJACWEACRWJASZWFAKZCIZWEWHWJ
      NWEACTDEWGUAUBUCUDWLWDWFWLWCWEACWKAGWIWJAWHACUEWRUFUGWCWLWTUHWEWCWLWTWEAH
      KZDUIZDLZHUJWCWLWTWENZNZNZXCDDLHAXAWSLZXBDDXGDXBDXBLWSXAAXADUKULUMUNDUOUP
      XCXFHXCXBFIZWLWTXBEIZNZNWCXEXHWLWTXCXIXHWLWTXCXIXHWLXCACMZXIWTXCUHWKXKXIN
      GXBFWGXBLZWIXKWJXIXLWHXCACAGXBAGXADHUQWGXAIASURUSWGXBDUTVAWGXBEVBVCVDXCAC
      VEVFVGVHXBDFVBXCXJXDWLXCXIWEWTXBDEVBVIVIVJVKVLVMVNVOVNVPWLWIGPZEQWQWIGEVQ
      XMWPEWIWOGBWGWMLWHWNACWGWMDUTVRVSVTWAWB $.
      $( [5-Oct-2006] $)
  $}

  $( Alternate definition of proper subclass. $)
  dfpss2 $p |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) $=
    ( wpss wss wne wa wceq wn df-pss df-ne anbi2i bitri ) ABCABDZABEZFMABGHZFAB
    INOMABJKL $.
    $( [7-Feb-1996] $)

  $( Alternate definition of proper subclass.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  dfpss3 $p |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) $=
    ( wpss wss wceq wn wa dfpss2 eqss baib notbid pm5.32i bitri ) ABCABDZABEZFZ
    GNBADZFZGABHNPRNOQONQABIJKLM $.
    $( [26-Jun-2011] $) $( [7-Feb-1996] $)

  $( Equality theorem for proper subclass. $)
  psseq1 $p |- ( A = B -> ( A C. C <-> B C. C ) ) $=
    ( wceq wss wne wa wpss sseq1 neeq1 anbi12d df-pss 3bitr4g ) ABDZACEZACFZGBC
    EZBCFZGACHBCHNOQPRABCIABCJKACLBCLM $.
    $( [7-Feb-1996] $)

  $( Equality theorem for proper subclass. $)
  psseq2 $p |- ( A = B -> ( C C. A <-> C C. B ) ) $=
    ( wceq wss wne wa wpss sseq2 neeq2 anbi12d df-pss 3bitr4g ) ABDZCAEZCAFZGCB
    EZCBFZGCAHCBHNOQPRABCIABCJKCALCBLM $.
    $( [7-Feb-1996] $)

  ${
    psseq1i.1 $e |- A = B $.
    $( An equality inference for the proper subclass relationship. $)
    psseq1i $p |- ( A C. C <-> B C. C ) $=
      ( wceq wpss wb psseq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [9-Jun-2004] $)

    $( An equality inference for the proper subclass relationship. $)
    psseq2i $p |- ( C C. A <-> C C. B ) $=
      ( wceq wpss wb psseq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [9-Jun-2004] $)

    ${
      psseq12i.2 $e |- C = D $.
      $( An equality inference for the proper subclass relationship. $)
      psseq12i $p |- ( A C. C <-> B C. D ) $=
        ( wpss psseq1i psseq2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [9-Jun-2004] $)
    $}
  $}

  ${
    psseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the proper subclass relationship. $)
    psseq1d $p |- ( ph -> ( A C. C <-> B C. C ) ) $=
      ( wceq wpss wb psseq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [9-Jun-2004] $)

    $( An equality deduction for the proper subclass relationship. $)
    psseq2d $p |- ( ph -> ( C C. A <-> C C. B ) ) $=
      ( wceq wpss wb psseq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [9-Jun-2004] $)

    ${
      psseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the proper subclass relationship. $)
      psseq12d $p |- ( ph -> ( A C. C <-> B C. D ) ) $=
        ( wpss psseq1d psseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [9-Jun-2004] $)
    $}
  $}

  $( A proper subclass is a subclass.  Theorem 10 of [Suppes] p. 23. $)
  pssss $p |- ( A C. B -> A C_ B ) $=
    ( wpss wss wne df-pss simplbi ) ABCABDABEABFG $.
    $( [7-Feb-1996] $)

  ${
    pssssd.1 $e |- ( ph -> A C. B ) $.
    $( Deduce subclass from proper subclass. $)
    pssssd $p |- ( ph -> A C_ B ) $=
      ( wpss wss pssss syl ) ABCEBCFDBCGH $.
      $( [29-Feb-1996] $)
  $}

  $( Subclass in terms of proper subclass. $)
  sspss $p |- ( A C_ B <-> ( A C. B \/ A = B ) ) $=
    ( wss wpss wceq wo wn dfpss2 simplbi2 con1d orrd pssss eqimss jaoi impbii 
    ) ABCZABDZABEZFPQRPRQQPRGABHIJKQPRABLABMNO $.
    $( [25-Feb-1996] $)

  $( Proper subclass is irreflexive.  Theorem 7 of [Suppes] p. 23. $)
  pssirr $p |- -. A C. A $=
    ( wpss wss wn wa pm3.24 dfpss3 mtbir ) AABAACZIDEIFAAGH $.
    $( [7-Feb-1996] $)

  $( Proper subclass has no 2-cycle loops.  Compare Theorem 8 of [Suppes]
     p. 23.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  pssn2lp $p |- -. ( A C. B /\ B C. A ) $=
    ( wpss wn wi wa wss dfpss3 simprbi pssss nsyl imnan mpbi ) ABCZBACZDENOFDNB
    AGZONABGPDABHIBAJKNOLM $.
    $( [26-Jun-2011] $) $( [7-Feb-1996] $)

  $( Two ways of stating trichotomy with respect to inclusion. $)
  sspsstri $p |- ( ( A C_ B \/ B C_ A ) <-> ( A C. B \/ A = B \/ B C. A ) ) $=
    ( wss wo wpss wceq w3o sspss eqcom orbi2i bitri orbi12i orordir or23 
    df-3or bitr4i 3bitr2i ) ABCZBACZDABEZABFZDZBAEZUADZDTUCDUADZTUAUCGZRUBSUDAB
    HSUCBAFZDUDBAHUGUAUCBAIJKLTUCUAMUEUBUCDUFTUCUANTUAUCOPQ $.
    $( [12-Aug-2004] $)

  $( Partial trichotomy law for subclasses.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  ssnpss $p |- ( A C_ B -> -. B C. A ) $=
    ( wpss wss wn dfpss3 simprbi con2i ) BACZABDZIBADJEBAFGH $.
    $( [26-Jun-2011] $) $( [16-May-1996] $)

  $( Transitive law for proper subclass.  Theorem 9 of [Suppes] p. 23. $)
  psstr $p |- ( ( A C. B /\ B C. C ) -> A C. C ) $=
    ( wpss wss wceq wn wa dfpss2 pssss sylan9ss pssn2lp psseq1 anbi1d mtbiri 
    con2i sylanbrc ) ACDACEACFZGABDZBCDZHZACISTABCABJBCJKRUARUACBDZTHCBLRSUBTAC
    BMNOPQ $.
    $( [7-Feb-1996] $)

  $( Transitive law for subclass and proper subclass. $)
  sspsstr $p |- ( ( A C_ B /\ B C. C ) -> A C. C ) $=
    ( wpss wceq wo wss wi psstr ex psseq1 biimprd jaoi imp sspss sylanb ) ABDZA
    BEZFZBCDZACDZABGSTUAQTUAHRQTUAABCIJRUATABCKLMNABOP $.
    $( [3-Apr-1996] $)


  $( Transitive law for subclass and proper subclass. $)
  psssstr $p |- ( ( A C. B /\ B C_ C ) -> A C. C ) $=
    ( wpss wceq wo wss psstr ex psseq2 biimpcd jaod imp sspss sylan2b ) ABDZBCD
    ZBCEZFZACDZBCGPSTPQTRPQTABCHIRPTBCAJKLMBCNO $.
    $( [3-Apr-1996] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The difference, union, and intersection of two classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for class difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeq1 $p |- ( A = B -> ( A \ C ) = ( B \ C ) ) $=
      ( vx wceq cv wcel wn crab cdif rabeq dfdif2 3eqtr4g ) ABEDFCGHZDAINDBIACJ
      BCJNDABKDACLDBCLM $.
      $( [26-Jun-2011] $) $( [10-Feb-1997] $)

    $( Equality theorem for class difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeq2 $p |- ( A = B -> ( C \ A ) = ( C \ B ) ) $=
      ( vx wceq cv wcel wn crab cdif eleq2 notbid rabbidv dfdif2 3eqtr4g ) ABEZ
      DFZAGZHZDCIQBGZHZDCICAJCBJPSUADCPRTABQKLMDCANDCBNO $.
      $( [26-Jun-2011] $) $( [10-Feb-1997] $)
  $}

  $( Equality theorem for class difference.  (Contributed by FL,
     31-Aug-2009.) $)
  difeq12 $p |- ( ( A = B /\ C = D ) -> ( A \ C ) = ( B \ D ) ) $=
    ( wceq cdif difeq1 difeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [31-Aug-2009] $)

  ${
    difeq1i.1 $e |- A = B $.
    $( Inference adding difference to the right in a class equality. $)
    difeq1i $p |- ( A \ C ) = ( B \ C ) $=
      ( wceq cdif difeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [15-Nov-2002] $)

    $( Inference adding difference to the left in a class equality. $)
    difeq2i $p |- ( C \ A ) = ( C \ B ) $=
      ( wceq cdif difeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [15-Nov-2002] $)

    ${
      difeq12i.2 $e |- C = D $.
      $( Equality inference for class difference. $)
      difeq12i $p |- ( A \ C ) = ( B \ D ) $=
        ( cdif difeq1i difeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [29-Aug-2004] $)
    $}
  $}

  ${
    difeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding difference to the right in a class equality. $)
    difeq1d $p |- ( ph -> ( A \ C ) = ( B \ C ) ) $=
      ( wceq cdif difeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [15-Nov-2002] $)

    $( Deduction adding difference to the left in a class equality. $)
    difeq2d $p |- ( ph -> ( C \ A ) = ( C \ B ) ) $=
      ( wceq cdif difeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [15-Nov-2002] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    difeqri.1 $e |- ( ( x e. A /\ -. x e. B ) <-> x e. C ) $.
    $( Inference from membership to difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeqri $p |- ( A \ B ) = C $=
      ( cdif cv wcel wn wa eldif bitri eqriv ) ABCFZDAGZNHOBHOCHIJODHOBCKELM $.
      $( [26-Jun-2011] $) $( [17-May-1998] $)
  $}

  ${
    hbdif.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbdif.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for class difference.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       2-Apr-2010.) $)
    hbdif $p |- ( y e. ( A \ B ) -> A. x y e. ( A \ B ) ) $=
      ( cv wcel wn wa wal cdif hbn hban eldif albii 3imtr4i ) BGZCHZRDHZIZJZUBA
      KRCDLHZUCAKSUAAETAFMNRCDOZUCUBAUDPQ $.
      $( [15-Apr-2010] $) $( [3-Dec-2003] $)
  $}

  $( Implication of membership in a class difference. $)
  eldifi $p |- ( A e. ( B \ C ) -> A e. B ) $=
    ( cdif wcel wn eldif simplbi ) ABCDEABEACEFABCGH $.
    $( [29-Apr-1994] $)

  $( Implication of membership in a class difference. $)
  eldifn $p |- ( A e. ( B \ C ) -> -. A e. C ) $=
    ( cdif wcel wn eldif simprbi ) ABCDEABEACEFABCGH $.
    $( [3-May-1994] $)

  $( A set does not belong to a class excluding it. $)
  elndif $p |- ( A e. B -> -. A e. ( C \ B ) ) $=
    ( cdif wcel eldifn con2i ) ACBDEABEACBFG $.
    $( [27-Jun-1994] $)

  $( Implication of membership in a class difference. $)
  neldif $p |- ( ( A e. B /\ -. A e. ( B \ C ) ) -> A e. C ) $=
    ( wcel cdif wn eldif simplbi2 con1d imp ) ABDZABCEDZFACDZKMLLKMFABCGHIJ $.
    $( [28-Jun-1994] $)

  ${
    $d x A $.  $d x B $.
    $( Double class difference.  Exercise 11 of [TakeutiZaring] p. 22. $)
    difdif $p |- ( A \ ( B \ A ) ) = A $=
      ( vx cdif cv wcel wn wa wi eldif notbii iman bitr4i anbi2i pm4.45im 
      difeqri ) CABADZACEZAFZRQFZGZHSRBFZSIZHSUAUCSUAUBSGHZGUCTUDRBAJKUBSLMNSUB
      OMP $.
      $( [17-May-1998] $)

    $( Subclass relationship for class difference.  Exercise 14 of
       [TakeutiZaring] p. 22. $)
    difss $p |- ( A \ B ) C_ A $=
      ( vx cdif cv eldifi ssriv ) CABDACEABFG $.
      $( [29-Apr-1994] $)
  $}

  $( Preservation of a subclass relationship by class difference. $)
  ssdifss $p |- ( A C_ B -> ( A \ C ) C_ B ) $=
    ( cdif wss difss sstr mpan ) ACDZAEABEIBEACFIABGH $.
    $( [15-Feb-2007] $)

  ${
    $d x A $.
    $( Double complement under universal class.  Exercise 4.10(s) of
       [Mendelson] p. 231. $)
    ddif $p |- ( _V \ ( _V \ A ) ) = A $=
      ( vx cvv cdif cv wcel wn wa eldif visset mpbiran con2bii biantrur bitr2i 
      difeqri ) BCCADZABEZAFZQPFZGZQCFZTHSRSUARGQCAIBJZKLUATUBMNO $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Contraposition law for subsets. $)
    ssconb $p |- ( ( A C_ C /\ B C_ C ) ->
                  ( A C_ ( C \ B ) <-> B C_ ( C \ A ) ) ) $=
      ( vx wss wa cv wcel cdif wi wal wn wb pm5.1 ssel syl2an con2b a1i 
      anbi12d jcab 3bitr4g eldif imbi2i albidv dfss2 ) ACEZBCEZFZDGZAHZUICBIZHZ
      JZDKUIBHZUICAIZHZJZDKAUKEBUOEUHUMUQDUHUJUICHZUNLZFZJZUNURUJLZFZJZUMUQUHUJ
      URJZUJUSJZFUNURJZUNVBJZFVAVDUHVEVGVFVHVEVGVEVGMUFUGVEVGNACUIOBCUIOPVFVHMU
      HUJUNQRSUJURUSTUNURVBTUAULUTUJUICBUBUCUPVCUNUICAUBUCUAUDDAUKUEDBUOUEUA $.
      $( [22-Mar-1998] $)

    $( Contraposition law for subsets.  Exercise 15 of [TakeutiZaring]
       p. 22. $)
    sscon $p |- ( A C_ B -> ( C \ B ) C_ ( C \ A ) ) $=
      ( vx wss cdif cv wcel wn wa ssel con3d anim2d eldif 3imtr4g ssrdv ) ABEZD
      CBFZCAFZQDGZCHZTBHZIZJUATAHZIZJTRHTSHQUCUEUAQUDUBABTKLMTCBNTCANOP $.
      $( [22-Mar-1998] $)

    $( Difference law for subsets. $)
    ssdif $p |- ( A C_ B -> ( A \ C ) C_ ( B \ C ) ) $=
      ( vx wss cdif cv wcel wn wa ssel anim1d eldif 3imtr4g ssrdv ) ABEZDACFZBC
      FZPDGZAHZSCHIZJSBHZUAJSQHSRHPTUBUAABSKLSACMSBCMNO $.
      $( [28-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Expansion of membership in class union.  Theorem 12 of [Suppes]
       p. 25. $)
    elun $p |- ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) $=
      ( vx cun wcel cvv wo elisset jaoi cv wceq eleq1 orbi12d df-un elab2g 
      pm5.21nii ) ABCEZFAGFZABFZACFZHZARITSUAABIACIJDKZBFZUCCFZHUBDARGUCALUDTUE
      UAUCABMUCACMNDBCOPQ $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    uneqri.1 $e |- ( ( x e. A \/ x e. B ) <-> x e. C ) $.
    $( Inference from membership to union. $)
    uneqri $p |- ( A u. B ) = C $=
      ( cun cv wcel wo elun bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( Idempotent law for union of classes.  Theorem 23 of [Suppes] p. 27. $)
    unidm $p |- ( A u. A ) = A $=
      ( vx cv wcel oridm uneqri ) BAAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Commutative law for union of classes.  Exercise 6 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    uncom $p |- ( A u. B ) = ( B u. A ) $=
      ( vx cun cv wcel wo orcom elun bitr4i uneqri ) CABBADZCEZAFZMBFZGONGMLFNO
      HMBAIJK $.
      $( [26-Jun-2011] $) $( [25-Jun-1998] $)
  $}

  ${
    $( If a class equals the union of two other classes, then it equals the
       union of those two classes commuted. ~ equncom was automatically derived
       from ~ equncomVD using the tools program
       translate_without_overwriting.cmd and minimizing.  (Contributed by Alan
       Sare, 18-Feb-2012.) $)
    equncom $p |- ( A = ( B u. C ) <-> A = ( C u. B ) ) $=
      ( cun uncom eqeq2i ) BCDCBDABCEF $.
      $( [18-Feb-2012] $)
  $}

  ${
    equncomi.1 $e |- A = ( B u. C ) $.
    $( Inference form of ~ equncom . ~ equncomi was automatically derived from
       ~ equncomiVD using the tools program translate_without_overwriting.cmd
       and minimizing.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    equncomi $p |- A = ( C u. B ) $=
      ( cun wceq equncom mpbi ) ABCEFACBEFDABCGH $.
      $( [18-Feb-2012] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for union of two classes. $)
    uneq1 $p |- ( A = B -> ( A u. C ) = ( B u. C ) ) $=
      ( vx wceq cun cv wcel wo eleq2 orbi1d elun 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [5-Aug-1993] $)
  $}

  $( Equality theorem for the union of two classes. $)
  uneq2 $p |- ( A = B -> ( C u. A ) = ( C u. B ) ) $=
    ( wceq cun uneq1 uncom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for union of two classes. $)
  uneq12 $p |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) $=
    ( wceq cun uneq1 uneq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [29-Mar-1998] $)

  ${
    uneq1i.1 $e |- A = B $.
    $( Inference adding union to the right in a class equality. $)
    uneq1i $p |- ( A u. C ) = ( B u. C ) $=
      ( wceq cun uneq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [30-Aug-1993] $)

    $( Inference adding union to the left in a class equality. $)
    uneq2i $p |- ( C u. A ) = ( C u. B ) $=
      ( wceq cun uneq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [30-Aug-1993] $)

    ${
      uneq12i.2 $e |- C = D $.
      $( Equality inference for union of two classes.  (The proof was shortened
         by Eric Schmidt, 26-Jan-2007.) $)
      uneq12i $p |- ( A u. C ) = ( B u. D ) $=
        ( wceq cun uneq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
        $( [27-Jan-2007] $) $( [12-Aug-2004] $)
    $}
  $}

  ${
    uneq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding union to the right in a class equality. $)
    uneq1d $p |- ( ph -> ( A u. C ) = ( B u. C ) ) $=
      ( wceq cun uneq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [29-Mar-1998] $)

    $( Deduction adding union to the left in a class equality. $)
    uneq2d $p |- ( ph -> ( C u. A ) = ( C u. B ) ) $=
      ( wceq cun uneq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [29-Mar-1998] $)

    ${
      uneq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for union of two classes.  (The proof was shortened
         by Andrew Salmon, 26-Jun-2011.) $)
      uneq12d $p |- ( ph -> ( A u. C ) = ( B u. D ) ) $=
        ( wceq cun uneq12 syl11anc ) ABCHDEHBDICEIHFGBCDEJK $.
        $( [26-Jun-2011] $) $( [29-Sep-2004] $)
    $}
  $}

  ${
    hbun.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbun.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for the union of classes. $)
    hbun $p |- ( y e. ( A u. B ) -> A. x y e. ( A u. B ) ) $=
      ( cv wcel wo wal cun hbor elun albii 3imtr4i ) BGZCHZPDHZIZSAJPCDKHZTAJQR
      AEFLPCDMZTSAUANO $.
      $( [15-Sep-2003] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for union of classes.  Exercise 8 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    unass $p |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) $=
      ( vx cun cv wcel wo elun orbi2i orbi1i orass bitr2i 3bitrri uneqri ) DABE
      ZCABCEZEZDFZRGSAGZSQGZHTSBGZSCGZHZHZSPGZUCHZSAQIUAUDTSBCIJUGTUBHZUCHUEUFU
      HUCSABIKTUBUCLMNO $.
      $( [26-Jun-2011] $) $( [3-May-1994] $)
  $}

  $( A rearrangement of union. $)
  un12 $p |- ( A u. ( B u. C ) ) = ( B u. ( A u. C ) ) $=
    ( cun uncom uneq1i unass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH 
    $.
    $( [12-Aug-2004] $)

  $( A rearrangement of union.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  un23 $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. B ) $=
    ( cun unass un12 uncom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [12-Aug-2004] $)

  $( A rearrangement of the union of 4 classes. $)
  un4 $p |- ( ( A u. B ) u. ( C u. D ) ) =
            ( ( A u. C ) u. ( B u. D ) ) $=
    ( cun un12 uneq2i unass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.
    $( [12-Aug-2004] $)

  $( Union distributes over itself. $)
  unundi $p |- ( A u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) $=
    ( cun unidm uneq1i un4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.
    $( [17-Aug-2004] $)

  $( Union distributes over itself. $)
  unundir $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. ( B u. C ) ) $=
    ( cun unidm uneq2i un4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.
    $( [17-Aug-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for union of classes.  Theorem 25 of [Suppes]
       p. 27. $)
    ssun1 $p |- A C_ ( A u. B ) $=
      ( vx cun cv wcel wo orc elun sylibr ssriv ) CAABDZCEZAFZNMBFZGMLFNOHMABIJ
      K $.
      $( [5-Aug-1993] $)
  $}

  $( Subclass relationship for union of classes. $)
  ssun2 $p |- A C_ ( B u. A ) $=
    ( cun ssun1 uncom sseqtri ) AABCBACABDABEF $.
    $( [30-Aug-1993] $)

  $( Subclass law for union of classes. $)
  ssun3 $p |- ( A C_ B -> A C_ ( B u. C ) ) $=
    ( wss cun ssun1 sstr2 mpi ) ABDBBCEZDAIDBCFABIGH $.
    $( [5-Aug-1993] $)

  $( Subclass law for union of classes. $)
  ssun4 $p |- ( A C_ B -> A C_ ( C u. B ) ) $=
    ( wss cun ssun2 sstr2 mpi ) ABDBCBEZDAIDBCFABIGH $.
    $( [14-Aug-1994] $)

  $( Membership law for union of classes. $)
  elun1 $p |- ( A e. B -> A e. ( B u. C ) ) $=
    ( cun ssun1 sseli ) BBCDABCEF $.
    $( [5-Aug-1993] $)

  $( Membership law for union of classes. $)
  elun2 $p |- ( A e. B -> A e. ( C u. B ) ) $=
    ( cun ssun2 sseli ) BCBDABCEF $.
    $( [30-Aug-1993] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass law for union of classes.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unss1 $p |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) $=
      ( vx wss cun cv wcel wo ssel orim1d elun 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [26-Jun-2011] $) $( [14-Oct-1999] $)

    $( A relationship between subclass and union.  Theorem 26 of [Suppes]
       p. 27.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssequn1 $p |- ( A C_ B <-> ( A u. B ) = B ) $=
      ( vx cv wcel wi wal cun wb wss wceq wo bicom pm4.72 elun bibi1i 3bitr4i 
      albii dfss2 dfcleq ) CDZAEZUABEZFZCGUAABHZEZUCIZCGABJUEBKUDUGCUCUBUCLZIUH
      UCIUDUGUCUHMUBUCNUFUHUCUAABOPQRCABSCUEBTQ $.
      $( [26-Jun-2011] $) $( [30-Aug-1993] $)
  $}

  $( Subclass law for union of classes.  Exercise 7 of [TakeutiZaring]
     p. 18. $)
  unss2 $p |- ( A C_ B -> ( C u. A ) C_ ( C u. B ) ) $=
    ( wss cun unss1 uncom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [14-Oct-1999] $)

  $( Subclass law for union of classes. $)
  unss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A u. C ) C_ ( B u. D ) ) $=
    ( wss cun unss1 unss2 sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [2-Jun-2004] $)

  $( A relationship between subclass and union. $)
  ssequn2 $p |- ( A C_ B <-> ( B u. A ) = B ) $=
    ( wss cun wceq ssequn1 uncom eqeq1i bitri ) ABCABDZBEBADZBEABFJKBABGHI $.
    $( [23-Sep-2004] $) $( [13-Jun-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( The union of two subclasses is a subclass.  Theorem 27 of [Suppes] p. 27
       and its converse. $)
    unss $p |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) $=
      ( vx cv cun wcel wi wal wa wss wo elun imbi1i jaob bitri albii dfss2 
      anbi12i 19.26 bitr4i 3bitr4ri ) DEZABFZGZUCCGZHZDIUCAGZUFHZUCBGZUFHZJZDIZ
      UDCKACKZBCKZJZUGULDUGUHUJLZUFHULUEUQUFUCABMNUHUFUJOPQDUDCRUPUIDIZUKDIZJUM
      UNURUOUSDACRDBCRSUIUKDTUAUB $.
      $( [11-Jun-2004] $)
  $}

  ${
    unssi.1 $e |- A C_ C $.
    unssi.2 $e |- B C_ C $.
    $( An inference that the union of two subclasses is a subclass.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    unssi $p |- ( A u. B ) C_ C $=
      ( wss wa cun pm3.2i unss mpbi ) ACFZBCFZGABHCFLMDEIABCJK $.
      $( [10-Dec-2002] $)
  $}

  $( A condition that implies inclusion in the union of two classes. $)
  ssun $p |- ( ( A C_ B \/ A C_ C ) -> A C_ ( B u. C ) ) $=
    ( wss cun ssun3 ssun4 jaoi ) ABDABCEDACDABCFACBGH $.
    $( [23-Nov-2003] $)

  $( Restricted existential quantification over union.  (Contributed by Jeff
     Madsen, 5-Jan-2011.) $)
  rexun $p |- ( E. x e. ( A u. B ) ph <->
                          ( E. x e. A ph \/ E. x e. B ph ) ) $=
    ( cun wrex cv wcel wa wex wo df-rex elun anbi1i andir bitri exbii 19.43 
    orbi12i bitr4i 3bitri ) ABCDEZFBGZUBHZAIZBJUCCHZAIZUCDHZAIZKZBJZABCFZABDFZK
    ZABUBLUEUJBUEUFUHKZAIUJUDUOAUCCDMNUFUHAOPQUKUGBJZUIBJZKUNUGUIBRULUPUMUQABCL
    ABDLSTUA $.
    $( [29-Jan-2011] $) $( [5-Jan-2011] $)

  $( Restricted quantification over a union.  (Contributed by Scott Fenton,
     12-Apr-2011.)  (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  ralunb $p |- ( A. x e. ( A u. B ) ph <->
                 ( A. x e. A ph /\ A. x e. B ph ) ) $=
    ( cv cun wcel wi wal wa wral wo elun imbi1i jaob bitri albii 19.26 df-ral 
    anbi12i 3bitr4i ) BEZCDFZGZAHZBIZUBCGZAHZBIZUBDGZAHZBIZJZABUCKABCKZABDKZJUF
    UHUKJZBIUMUEUPBUEUGUJLZAHUPUDUQAUBCDMNUGAUJOPQUHUKBRPABUCSUNUIUOULABCSABDST
    UA $.
    $( [29-Jun-2011] $) $( [12-Apr-2011] $)

  $( Restricted quantification over union.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  ralun $p |- ( ( A. x e. A ph /\ A. x e. B ph ) -> A. x e. ( A u. B ) ph ) $=
    ( cun wral wa ralunb biimpri ) ABCDEFABCFABDFGABCDHI $.
    $( [2-Sep-2009] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Expansion of membership in an intersection of two classes.  Theorem 12
       of [Suppes] p. 25. $)
    elin $p |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) $=
      ( vx cin wcel cvv wa elisset adantl cv wceq eleq1 anbi12d df-in elab2g 
      pm5.21nii ) ABCEZFAGFZABFZACFZHZARIUASTACIJDKZBFZUCCFZHUBDARGUCALUDTUEUAU
      CABMUCACMNDBCOPQ $.
      $( [29-Apr-1994] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Commutative law for intersection of classes.  Exercise 7 of
       [TakeutiZaring] p. 17. $)
    incom $p |- ( A i^i B ) = ( B i^i A ) $=
      ( vx cin cv wcel wa ancom elin 3bitr4i eqriv ) CABDZBADZCEZAFZNBFZGPOGNLF
      NMFOPHNABINBAIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    ineqri.1 $e |- ( ( x e. A /\ x e. B ) <-> x e. C ) $.
    $( Inference from membership to intersection. $)
    ineqri $p |- ( A i^i B ) = C $=
      ( cin cv wcel wa elin bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for intersection of two classes. $)
    ineq1 $p |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) $=
      ( vx wceq cin cv wcel wa eleq2 anbi1d elin 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [14-Dec-1993] $)
  $}

  $( Equality theorem for intersection of two classes. $)
  ineq2 $p |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) $=
    ( wceq cin ineq1 incom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [26-Dec-1993] $)

  $( Equality theorem for intersection of two classes. $)
  ineq12 $p |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) $=
    ( wceq cin ineq1 ineq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [8-May-1994] $)

  ${
    ineq1i.1 $e |- A = B $.
    $( Equality inference for intersection of two classes. $)
    ineq1i $p |- ( A i^i C ) = ( B i^i C ) $=
      ( wceq cin ineq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [26-Dec-1993] $)

    $( Equality inference for intersection of two classes. $)
    ineq2i $p |- ( C i^i A ) = ( C i^i B ) $=
      ( wceq cin ineq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [26-Dec-1993] $)

    ${
      ineq12i.2 $e |- C = D $.
      $( Equality inference for intersection of two classes.  (The proof was
         shortened by Eric Schmidt, 26-Jan-2007.) $)
      ineq12i $p |- ( A i^i C ) = ( B i^i D ) $=
        ( wceq cin ineq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
        $( [27-Jan-2007] $) $( [24-Jun-2004] $)
    $}
  $}

  ${
    ineq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for intersection of two classes. $)
    ineq1d $p |- ( ph -> ( A i^i C ) = ( B i^i C ) ) $=
      ( wceq cin ineq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [10-Apr-1994] $)

    $( Equality deduction for intersection of two classes. $)
    ineq2d $p |- ( ph -> ( C i^i A ) = ( C i^i B ) ) $=
      ( wceq cin ineq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [10-Apr-1994] $)

    ${
      ineq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for intersection of two classes.  (The proof was
         shortened by Andrew Salmon, 26-Jun-2011.) $)
      ineq12d $p |- ( ph -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl11anc ) ABCHDEHBDICEIHFGBCDEJK $.
        $( [26-Jun-2011] $) $( [24-Jun-2004] $)
    $}

    ${
      ineqan12d.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for intersection of two classes. $)
      ineqan12d $p |- ( ( ph /\ ps ) -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2an ) CDIEFICEJDFJIABCDEFKGHL $.
        $( [7-Feb-2007] $)
    $}
  $}

  ${
    hbin.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbin.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for the intersection of classes.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 6-Apr-2010.) $)
    hbin $p |- ( y e. ( A i^i B ) -> A. x y e. ( A i^i B ) ) $=
      ( cv wcel wa wal cin hban elin albii 3imtr4i ) BGZCHZPDHZIZSAJPCDKHZTAJQR
      AEFLPCDMZTSAUANO $.
      $( [15-Apr-2010] $) $( [15-Sep-2003] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d D y $.  $d x y $.
    $( Distribute proper substitution through an intersection relation.  This
       theorem was automatically derived from ~ csbingVD .  (Contributed by
       Alan Sare, 22-Jul-2012.) $)
    csbing $p |- ( A e. B -> [_ A / x ]_ ( C i^i D ) =
                  ( [_ A / x ]_ C i^i [_ A / x ]_ D ) ) $=
      ( vy wcel cin csb cv wa cab wsbc df-in csbeq2i csbabg sbcang sbcel2g 
      anbi12d bitrd abbidv 3eqtrd syl6eqr ) BCGZABDEHZIZFJZABDIZGZUGABEIZGZKZFL
      ZUHUJHUDUFABUGDGZUGEGZKZFLZIUPABMZFLUMABUEUQCFDENOUPAFBCPUDURULFUDURUNABM
      ZUOABMZKULUNUOABCQUDUSUIUTUKABUGDCRABUGECRSTUAUBFUHUJNUC $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    rabbirdv.1 $e |- ( ph -> ( x e. B -> ( x e. A <-> ch ) ) ) $.
    $( Deduction from wff to restricted class abstraction.  (The proof was
       shortened by Andrew Salmon, 26-Jun-2011.) $)
    rabbirdv $p |- ( ph -> ( B i^i A ) = { x e. B | ch } ) $=
      ( cv wcel crab cin wb imp rabbidva dfin5 syl5eq ) ACGZDHZCEIBCEIEDJAQBCEA
      PEHQBKFLMCEDNO $.
      $( [26-Jun-2011] $) $( [27-Aug-2004] $)
  $}

  ${
    $d x A $.
    $( Idempotent law for intersection of classes.  Theorem 15 of [Suppes]
       p. 26. $)
    inidm $p |- ( A i^i A ) = A $=
      ( vx cv wcel anidm ineqri ) BAAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for intersection of classes.  Exercise 9 of
       [TakeutiZaring] p. 17. $)
    inass $p |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) $=
      ( vx cin cv wcel wa anass elin anbi2i bitr4i anbi1i 3bitr4i ineqri ) DABE
      ZCABCEZEZDFZAGZSBGZHZSCGZHZTSQGZHZSPGZUCHSRGUDTUAUCHZHUFTUAUCIUEUHTSBCJKL
      UGUBUCSABJMSAQJNO $.
      $( [3-May-1994] $)
  $}

  $( A rearrangement of intersection. $)
  in12 $p |- ( A i^i ( B i^i C ) ) = ( B i^i ( A i^i C ) ) $=
    ( cin incom ineq1i inass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH 
    $.
    $( [21-Apr-2001] $)

  $( A rearrangement of intersection.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  in32 $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i B ) $=
    ( cin inass in12 incom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [21-Apr-2001] $)

  $( A rearrangement of intersection. $)
  in13 $p |- ( A i^i ( B i^i C ) ) = ( C i^i ( B i^i A ) ) $=
    ( cin in32 incom 3eqtr4i ) BCDZADBADZCDAHDCIDBCAEAHFCIFG $.
    $( [27-Aug-2012] $)

  $( A rearrangement of intersection. $)
  in31 $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i B ) i^i A ) $=
    ( cin in12 incom 3eqtr4i ) CABDZDACBDZDHCDIADCABEHCFIAFG $.
    $( [27-Aug-2012] $)

  $( Rotate the intersection of 3 classes.. $)
  inrot $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i A ) i^i B ) $=
    ( cin in31 in32 eqtri ) ABDCDCBDADCADBDABCECBAFG $.
    $( [27-Aug-2012] $)

  $( Rearrangement of intersection of 4 classes. $)
  in4 $p |- ( ( A i^i B ) i^i ( C i^i D ) ) =
            ( ( A i^i C ) i^i ( B i^i D ) ) $=
    ( cin in12 ineq2i inass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.
    $( [21-Apr-2001] $)

  $( Intersection distributes over itself. $)
  inindi $p |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) $=
    ( cin inidm ineq1i in4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.
    $( [6-May-1994] $)

  $( Intersection distributes over itself. $)
  inindir $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i ( B i^i C ) ) $=
    ( cin inidm ineq2i in4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.
    $( [17-Aug-2004] $)

  $( A relationship between subclass and intersection.  Similar to Exercise 9
     of [TakeutiZaring] p. 18. $)
  sseqin2 $p |- ( A C_ B <-> ( B i^i A ) = A ) $=
    ( wss cin wceq df-ss incom eqeq1i bitri ) ABCABDZAEBADZAEABFJKAABGHI $.
    $( [23-Sep-2004] $) $( [17-May-1994] $)

  ${
    $d x A $.  $d x B $.
    $( The intersection of two classes is a subset of one of them.  Part of
       Exercise 12 of [TakeutiZaring] p. 18. $)
    inss1 $p |- ( A i^i B ) C_ A $=
      ( vx cin cv wcel elin simplbi ssriv ) CABDZACEZJFKAFKBFKABGHI $.
      $( [27-Apr-1994] $)
  $}

  $( The intersection of two classes is a subset of one of them.  Part of
     Exercise 12 of [TakeutiZaring] p. 18. $)
  inss2 $p |- ( A i^i B ) C_ B $=
    ( cin incom inss1 eqsstr3i ) ABCBACBBADBAEF $.
    $( [27-Apr-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass of intersection.  Theorem 2.8(vii) of [Monk1] p. 26.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssin $p |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) $=
      ( vx cv wcel wi wal wa cin wss elin imbi2i albii jcab 19.26 3bitrri 
      dfss2 anbi12i 3bitr4i ) DEZAFZUABFZGZDHZUBUACFZGZDHZIZUBUABCJZFZGZDHZABKZ
      ACKZIAUJKUMUBUCUFIZGZDHUDUGIZDHUIULUQDUKUPUBUABCLMNUQURDUBUCUFONUDUGDPQUN
      UEUOUHDABRDACRSDAUJRT $.
      $( [26-Jun-2011] $) $( [15-Jun-2004] $)
  $}

  ${
    ssini.1 $e |- A C_ B $.
    ssini.2 $e |- A C_ C $.
    $( An inference showing that the a subclass of two classes is a subclass of
       their intersection. $)
    ssini $p |- A C_ ( B i^i C ) $=
      ( wss wa cin pm3.2i ssin mpbi ) ABFZACFZGABCHFLMDEIABCJK $.
      $( [24-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Add right intersection to subclass relation.  (The proof was shortened
       by Andrew Salmon, 26-Jun-2011.) $)
    ssrin $p |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) $=
      ( vx wss cin cv wcel wa ssel anim1d elin 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [26-Jun-2011] $) $( [16-Aug-1994] $)

    $( Add left intersection to subclass relation. $)
    sslin $p |- ( A C_ B -> ( C i^i A ) C_ ( C i^i B ) ) $=
      ( wss cin ssrin incom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
      $( [19-Oct-1999] $)
  $}

  $( Intersection of subclasses. $)
  ss2in $p |- ( ( A C_ B /\ C C_ D ) -> ( A i^i C ) C_ ( B i^i D ) ) $=
    ( wss cin ssrin sslin sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [5-May-2000] $)

  $( Intersection preserves subclass relationship. $)
  ssinss1 $p |- ( A C_ C -> ( A i^i B ) C_ C ) $=
    ( cin wss wi inss1 sstr2 ax-mp ) ABDZAEACEJCEFABGJACHI $.
    $( [14-Sep-1999] $)

  $( Absorption law for union. $)
  unabs $p |- ( A u. ( A i^i B ) ) = A $=
    ( cin wss cun wceq inss1 ssequn2 mpbi ) ABCZADAJEAFABGJAHI $.
    $( [16-Apr-2006] $)

  $( Absorption law for intersection. $)
  inabs $p |- ( A i^i ( A u. B ) ) = A $=
    ( cun wss cin wceq ssun1 df-ss mpbi ) AABCZDAJEAFABGAJHI $.
    $( [16-Apr-2006] $)

  $( Negation of subclass expressed in terms of intersection and proper
     subclass.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  nssinpss $p |- ( -. A C_ B <-> ( A i^i B ) C. A ) $=
    ( cin wne wss wa wn wpss inss1 biantrur df-ss necon3bbii df-pss 3bitr4i ) 
    ABCZADZOAEZPFABEZGOAHQPABIJROAABKLOAMN $.
    $( [26-Jun-2011] $) $( [30-Jun-2004] $)

  $( Negation of subclass expressed in terms of proper subclass and union. $)
  nsspssun $p |- ( -. A C_ B <-> B C. ( A u. B ) ) $=
    ( cun wss wn wa wpss ssun2 biantrur ssid biantru unss bitri notbii dfpss3 
    3bitr4i ) ABCZBDZEZBQDZSFABDZEBQGTSBAHIUARUAUABBDZFRUBUABJKABBLMNBQOP $.
    $( [15-Sep-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Subclass defined in terms of class difference.  See comments under
       ~ dfun2 .  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    dfss4 $p |- ( A C_ B <-> ( B \ ( B \ A ) ) = A ) $=
      ( vx wss cin wceq cdif sseqin2 cv wcel wn wa eldif notbii anbi2i wi elin 
      abai iman 3bitri bitr4i difeqri eqeq1i ) ABDBAEZAFBBAGZGZAFABHUFUDACBUEUD
      CIZBJZUGUEJZKZLUHUHUGAJZKLZKZLZUGUDJZUJUMUHUIULUGBAMNOUOUHUKLUHUHUKPZLUNU
      GBAQUHUKRUPUMUHUHUKSOTUAUBUCUA $.
      $( [26-Jun-2011] $) $( [22-Mar-1998] $)

    $( An alternate definition of the union of two classes in terms of class
       difference, requiring no dummy variables.  Along with ~ dfin2 and
       ~ dfss4 it shows we can express union, intersection, and subset directly
       in terms of the single "primitive" operation ` \ ` (class
       difference). $)
    dfun2 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) $=
      ( vx cun cvv cdif cv wcel wo wn wa eldif visset mpbiran anbi1i ioran 
      3bitr4i con2bii elun eqriv ) CABDZEEAFZBFZFZCGZAHZUEBHZIZUEUCHZJZUEUAHUEU
      DHZUIUHUEUBHZUGJZKUFJZUMKUIUHJULUNUMULUEEHZUNUEEALCMZNOUEUBBLUFUGPQRUEABS
      UKUOUJUEEUCLUPNQT $.
      $( [10-Jun-2004] $)

    $( An alternate definition of the intersection of two classes in terms of
       class difference, requiring no dummy variables.  See comments under
       ~ dfun2 .  Another version is given by ~ dfin4 . $)
    dfin2 $p |- ( A i^i B ) = ( A \ ( _V \ B ) ) $=
      ( vx cin cvv cdif cv wcel wa wn eldif visset mpbiran con2bii anbi2i elin 
      3bitr4i eqriv ) CABDZAEBFZFZCGZAHZUBBHZIUCUBTHZJZIUBSHUBUAHUDUFUCUEUDUEUB
      EHUDJUBEBKCLMNOUBABPUBATKQR $.
      $( [10-Jun-2004] $)

    $( Difference with intersection.  Theorem 33 of [Suppes] p. 29.  (The proof
       was shortened by Andrew Salmon, 26-Jun-2011.) $)
    difin $p |- ( A \ ( A i^i B ) ) = ( A \ B ) $=
      ( vx cin cdif cv wcel wi wn wa pm4.61 anclb elin imbi2i iman 3bitr2i 
      con2bii eldif 3bitr4i difeqri ) CAABDZABEZCFZAGZUCBGZHZIUDUEIJUDUCUAGZIJZ
      UCUBGUDUEKUFUHUFUDUDUEJZHUDUGHUHIUDUELUGUIUDUCABMNUDUGOPQUCABRST $.
      $( [26-Jun-2011] $) $( [31-Mar-1998] $)
  $}

  $( Union defined in terms of intersection (DeMorgan's law).  Definition of
     union in [Mendelson] p. 231. $)
  dfun3 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) $=
    ( cun cvv cdif cin dfun2 dfin2 ddif difeq2i eqtr2i eqtri ) ABCDDAEZBEZEDMDB
    EZFZEABGNPDPMDOEZENMOHQBMBIJKJL $.
    $( [8-Jan-2002] $)

  $( Intersection defined in terms of union (DeMorgan's law.  Similar to
     Exercise 4.10(n) of [Mendelson] p. 231. $)
  dfin3 $p |- ( A i^i B ) = ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) $=
    ( cvv cdif cun cin ddif dfun2 difeq1i difeq2i eqtri dfin2 3eqtr4ri ) CCACBD
    ZDZDZDOCCADZNEZDABFOGRPCRCCQDZNDZDPQNHTOCSANAGIJKJABLM $.
    $( [8-Jan-2002] $)

  $( Alternate definition of the intersection of two classes.  Exercise 4.10(q)
     of [Mendelson] p. 231. $)
  dfin4 $p |- ( A i^i B ) = ( A \ ( A \ B ) ) $=
    ( cin cdif wss wceq inss1 dfss4 mpbi difin difeq2i eqtr3i ) AAABCZDZDZMAABD
    ZDMAEOMFABGMAHINPAABJKL $.
    $( [25-Nov-2003] $)

  $( Intersection with universal complement.  Remark in [Stoll] p. 20. $)
  invdif $p |- ( A i^i ( _V \ B ) ) = ( A \ B ) $=
    ( cvv cdif cin dfin2 ddif difeq2i eqtri ) ACBDZEACJDZDABDAJFKBABGHI $.
    $( [17-Aug-2004] $)

  $( Intersection with class difference.  Theorem 34 of [Suppes] p. 29. $)
  indif $p |- ( A i^i ( A \ B ) ) = ( A \ B ) $=
    ( cdif cin dfin4 difeq2i difin 3eqtr2i ) AABCZDAAICZCAABDZCIAIEKJAABEFABGH 
    $.
    $( [17-Aug-2004] $)

  $( Bring an intersection in and out of a class difference.  (Contributed by
     Jeff Hankins, 15-Jul-2009.) $)
  indif2 $p |- ( A i^i ( B \ C ) ) = ( ( A i^i B ) \ C ) $=
    ( cin cvv cdif inass invdif ineq2i 3eqtr3ri ) ABDZECFZDABLDZDKCFABCFZDABLGK
    CHMNABCHIJ $.
    $( [12-Jul-2009] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distributive law for intersection over union.  Exercise 10 of
       [TakeutiZaring] p. 17.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    indi $p |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) $=
      ( vx cun cin cv wcel wo wa andi elin orbi12i bitr4i elun anbi2i 3bitr4i 
      ineqri ) DABCEZABFZACFZEZDGZAHZUCBHZUCCHZIZJZUCTHZUCUAHZIZUDUCSHZJUCUBHUH
      UDUEJZUDUFJZIUKUDUEUFKUIUMUJUNUCABLUCACLMNULUGUDUCBCOPUCTUAOQR $.
      $( [26-Jun-2011] $) $( [30-Sep-2002] $)

    $( Distributive law for union over intersection.  Exercise 11 of
       [TakeutiZaring] p. 17.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    undi $p |- ( A u. ( B i^i C ) ) = ( ( A u. B ) i^i ( A u. C ) ) $=
      ( vx cin cun cv wcel wa wo elin elun anbi12i orbi2i ordi bitr2i 3bitrri 
      uneqri ) DABCEZABFZACFZEZDGZUBHUCTHZUCUAHZIUCAHZUCBHZJZUFUCCHZJZIZUFUCSHZ
      JZUCTUAKUDUHUEUJUCABLUCACLMUMUFUGUIIZJUKULUNUFUCBCKNUFUGUIOPQR $.
      $( [30-Sep-2002] $)
  $}

  $( Distributive law for intersection over union.  Theorem 28 of [Suppes]
     p. 27. $)
  indir $p |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) $=
    ( cun cin indi incom uneq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.
    $( [30-Sep-2002] $)

  $( Distributive law for union over intersection.  Theorem 29 of [Suppes]
     p. 27. $)
  undir $p |- ( ( A i^i B ) u. C ) = ( ( A u. C ) i^i ( B u. C ) ) $=
    ( cin cun undi uncom ineq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.
    $( [30-Sep-2002] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Infer equality from equalities of union and intersection.  Exercise 20
       of [Enderton] p. 32 and its converse. $)
    unineq $p |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) )
                 <-> A = B ) $=
      ( vx cun wceq cin wa cv wcel wb wi iba bibi12d eleq2 elin 3bitr3g 
      syl5bir adantld wn wo biorf uncom eqeq12i sylbi elun adantrd pm2.61i 
      eqrdv uneq1 ineq1 jca impbii ) ACEZBCEZFZACGZBCGZFZHZABFZUTDABDIZCJZUTVBA
      JZVBBJZKZLVCUSVFUPVCVFVDVCHZVEVCHZKUSVCVDVGVEVHVCVDMVCVEMNUSVBUQJVBURJVGV
      HUQURVBOVBACPVBBCPQRSVCTZUPVFUSVIVFVCVDUAZVCVEUAZKUPVIVDVJVEVKVCVDUBVCVEU
      BNUPVBCAEZJZVBCBEZJZVJVKUPVLVNFVMVOKUNVLUOVNACUCBCUCUDVLVNVBOUEVBCAUFVBCB
      UFQRUGUHUIVAUPUSABCUJABCUKULUM $.
      $( [10-Aug-2004] $)
  $}

  $( Equality of union and intersection implies equality of their arguments.
     (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  uneqin $p |- ( ( A u. B ) = ( A i^i B ) <-> A = B ) $=
    ( cun cin wceq wss wa eqimss unss ssin sstr sylbir simpl anim12i syl eqss 
    sylibr uneq2 ineq2 unidm inidm eqtr4i syl5eq eqtr3d impbii ) ABCZABDZEZABEZ
    UHABFZBAFZGZUIUHUFUGFZULUFUGHUMAUGFZBUGFZGULABUGIUNUJUOUKUNAAFUJGUJAABJAABK
    LUOUKBBFZGUKBABJUKUPMLNLOABPQUIAACZUFUGABARUIAADZUGUQABASUQAURATAUAUBUCUDUE
    $.
    $( [16-Apr-2006] $)

  $( Distributive law for class difference.  Theorem 39 of [Suppes] p. 29. $)
  difundi $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) i^i ( A \ C ) ) $=
    ( cun cdif cvv cin dfun3 difeq2i inindi dfin2 invdif ineq12i 3eqtr3i eqtri 
    ) ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASGAQGZARGZGUAUDAQRJASKUEUBUFUCABL
    ACLMNO $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference. $)
  difundir $p |- ( ( A u. B ) \ C ) = ( ( A \ C ) u. ( B \ C ) ) $=
    ( cun cvv cdif cin indir invdif uneq12i 3eqtr3i ) ABDZECFZGAMGZBMGZDLCFACFZ
    BCFZDABMHLCINPOQACIBCIJK $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference.  Theorem 40 of [Suppes] p. 29. $)
  difindi $p |- ( A \ ( B i^i C ) ) = ( ( A \ B ) u. ( A \ C ) ) $=
    ( cin cdif cvv cun dfin3 difeq2i indi dfin2 invdif uneq12i 3eqtr3i eqtri ) 
    ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASDAQDZARDZGUAUDAQRJASKUEUBUFUCABLAC
    LMNO $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference. $)
  difindir $p |- ( ( A i^i B ) \ C ) = ( ( A \ C ) i^i ( B \ C ) ) $=
    ( cin cvv cdif inindir invdif ineq12i 3eqtr3i ) ABDZECFZDALDZBLDZDKCFACFZBC
    FZDABLGKCHMONPACHBCHIJ $.
    $( [17-Aug-2004] $)

  $( DeMorgan's law for union.  Theorem 5.2(13) of [Stoll] p. 19. $)
  undm $p |- ( _V \ ( A u. B ) ) = ( ( _V \ A ) i^i ( _V \ B ) ) $=
    ( cvv difundi ) CABD $.
    $( [18-Aug-2004] $)

  $( DeMorgan's law for intersection.  Theorem 5.2(13') of [Stoll] p. 19. $)
  indm $p |- ( _V \ ( A i^i B ) ) = ( ( _V \ A ) u. ( _V \ B ) ) $=
    ( cvv difindi ) CABD $.
    $( [18-Aug-2004] $)

  $( A relationship involving double difference and union. $)
  difun1 $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) $=
    ( cvv cdif cin cun inass invdif undm ineq2i eqtr3i 3eqtr3i difeq1i ) ADBEZF
    ZCEZABCGZEZABEZCEPDCEZFAOUAFZFZQSAOUAHPCIADREZFUCSUDUBABCJKARILMPTCABINL $.
    $( [29-Aug-2004] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( An equality involving class union and class difference.  The first
       equality of Exercise 13 of [TakeutiZaring] p. 22. ~ undif3 is ~ undif3VD
       without virtual deductions and was automatically derived from ~ undif3VD
       using the tools program translate..without..overwriting.cmd and
       Metamath's minimize command.  (Contributed by Alan Sare,
       17-Apr-2012.) $)
    undif3 $p |- ( A u. ( B \ C ) ) = ( ( A u. B ) \ ( C \ A ) ) $=
      ( vx cdif cun cv wcel wn wa wo elun eldif notbii pm4.53 bitri anbi12i 
      orbi2i orc olc jca anim12i jaoi simpl orcd adantr adantl ccase impbii 
      3bitri 3bitr4ri eqriv ) DABCEZFZABFZCAEZEZDGZUOHZURUPHZIZJURAHZURBHZKZURC
      HZIZVBKZJZURUQHURUNHZUSVDVAVGURABLVAVEVBIJZIVGUTVJURCAMNVEVBOPQURUOUPMVIV
      BURUMHZKVBVCVFJZKZVHURAUMLVKVLVBURBCMRVMVHVBVHVLVBVDVGVBVCSVBVFTUAVCVDVFV
      GVCVBTVFVBSUBUCVBVFVCVBVMVBVFJVBVLVBVFUDUEVLVBTVBVMVBVBVLSZUFVBVMVCVNUGUH
      UIUJUKUL $.
      $( [17-Apr-2012] $)
  $}

  $( Swap second and third argument of double difference. $)
  dif23 $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) $=
    ( cun cdif uncom difeq2i difun1 3eqtr3i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [18-Aug-2004] $)

  $( Two ways to express symmetric difference.  This theorem shows the
     equivalence of the definition of symmetric difference in [Stoll] p. 13 and
     the restated definition in Example 4.1 of [Stoll] p. 262. $)
  symdif1 $p |- ( ( A \ B ) u. ( B \ A ) ) = ( ( A u. B ) \ ( A i^i B ) ) $=
    ( cun cin cdif difundir difin incom difeq2i eqtri uneq12i eqtr2i ) ABCABDZE
    AMEZBMEZCABEZBAEZCABMFNPOQABGOBBADZEQMRBABHIBAGJKL $.
    $( [17-Aug-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Two ways to express symmetric difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    symdif2 $p |- ( ( A \ B ) u. ( B \ A ) ) =
                  { x | -. ( x e. A <-> x e. B ) } $=
      ( cv wcel wb wn cdif cun wo wa eldif orbi12i elun xor 3bitr4i abbi2i ) AD
      ZBEZRCEZFGZABCHZCBHZIZRUBEZRUCEZJSTGKZTSGKZJRUDEUAUEUGUFUHRBCLRCBLMRUBUCN
      STOPQ $.
      $( [26-Jun-2011] $) $( [17-Aug-2004] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.
    $( Union of two class abstractions.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unab $p |- ( { x | ph } u. { x | ps } ) = { x | ( ph \/ ps ) } $=
      ( vy cab wo cv wsbc wcel sbor df-clab orbi12i 3bitr4ri uneqri ) DACEZBCEZ
      ABFZCEZQCDGZHACSHZBCSHZFSRISOIZSPIZFABCDJQDCKUBTUCUAADCKBDCKLMN $.
      $( [26-Jun-2011] $) $( [29-Sep-2002] $)

    $( Intersection of two class abstractions.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    inab $p |- ( { x | ph } i^i { x | ps } ) = { x | ( ph /\ ps ) } $=
      ( vy cab wa cv wsbc wcel sban df-clab anbi12i 3bitr4ri ineqri ) DACEZBCEZ
      ABFZCEZQCDGZHACSHZBCSHZFSRISOIZSPIZFABCDJQDCKUBTUCUAADCKBDCKLMN $.
      $( [26-Jun-2011] $) $( [29-Sep-2002] $)

    $( Difference of two class abstractions.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difab $p |- ( { x | ph } \ { x | ps } ) = { x | ( ph /\ -. ps ) } $=
      ( vy cab wn wa cv wsbc wcel sban df-clab notbii sbn bitr4i anbi12i 
      3bitr4ri difeqri ) DACEZBCEZABFZGZCEZUBCDHZIACUDIZUACUDIZGUDUCJUDSJZUDTJZ
      FZGAUACDKUBDCLUGUEUIUFADCLUIBCUDIZFUFUHUJBDCLMBCDNOPQR $.
      $( [26-Jun-2011] $) $( [23-Oct-2004] $)
  $}

  $( Union of two restricted class abstractions. $)
  unrab $p |- ( { x e. A | ph } u. { x e. A | ps } ) =
              { x e. A | ( ph \/ ps ) } $=
    ( cv wcel wa cab cun wo crab unab andi abbii eqtr4i df-rab uneq12i 3eqtr4i 
    ) CEDFZAGZCHZSBGZCHZIZSABJZGZCHZACDKZBCDKZIUECDKUDTUBJZCHUGTUBCLUFUJCSABMNO
    UHUAUIUCACDPBCDPQUECDPR $.
    $( [25-Mar-2004] $)

  $( Intersection of two restricted class abstractions. $)
  inrab $p |- ( { x e. A | ph } i^i { x e. A | ps } ) =
              { x e. A | ( ph /\ ps ) } $=
    ( cv wcel wa cab cin crab inab anandi abbii eqtr4i df-rab ineq12i 3eqtr4i 
    ) CEDFZAGZCHZRBGZCHZIZRABGZGZCHZACDJZBCDJZIUDCDJUCSUAGZCHUFSUACKUEUICRABLMN
    UGTUHUBACDOBCDOPUDCDOQ $.
    $( [1-Sep-2006] $)

  ${
    $d x B $.
    $( Intersection with a restricted class abstraction. $)
    inrab2 $p |- ( { x e. A | ph } i^i B ) = { x e. ( A i^i B ) | ph } $=
      ( cv wcel wa cab cin crab inab elin anbi1i an32 bitri abbii eqtr4i 
      df-rab abid2 eqcomi ineq12i 3eqtr4i ) BEZCFZAGZBHZUCDFZBHZIZUCCDIZFZAGZBH
      ZABCJZDIABUJJUIUEUGGZBHUMUEUGBKULUOBULUDUGGZAGUOUKUPAUCCDLMUDUGANOPQUNUFD
      UHABCRUHDBDSTUAABUJRUB $.
      $( [19-Nov-2007] $)
  $}

  $( Difference of two restricted class abstractions. $)
  difrab $p |- ( { x e. A | ph } \ { x e. A | ps } ) =
              { x e. A | ( ph /\ -. ps ) } $=
    ( cv wcel wa cab cdif wn crab difab anass simpr con3i anim2i wi pm3.2 
    adantr con3d imdistani impbii bitr3i abbii eqtr4i df-rab difeq12i 3eqtr4i 
    ) CEDFZAGZCHZUIBGZCHZIZUIABJZGZGZCHZACDKZBCDKZIUPCDKUNUJULJZGZCHURUJULCLUQV
    BCUQUJUOGZVBUIAUOMVCVBUOVAUJULBUIBNOPUJVAUOUJBULUIBULQAUIBRSTUAUBUCUDUEUSUK
    UTUMACDUFBCDUFUGUPCDUFUH $.
    $( [23-Oct-2004] $)

  ${
    $d x A $.
    $( Alternate definition of restricted class abstraction. $)
    dfrab2 $p |- { x e. A | ph } = ( { x | ph } i^i A ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i eqtr3i incom 3eqtri ) 
      ABCDBECFZAGBHZCABHZIZSCIABCJQBHZSIRTQABKUACSBCLMNCSOP $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Transfer uniqueness to a smaller subclass. $)
    reuss2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\
                 ( E. x e. A ph /\ E! x e. B ps ) ) -> E! x e. A ph ) $=
      ( wss wi wral wa cv wcel wex weu wreu wrex wmo wal prth ssel sylan exp4b 
      com23 a2d imp4a alimdv imp df-ral sylan2b euimmo syl eu5 simplbi2 syl9 
      imp32 df-reu sylibr df-rex anbi12i ) DEFZABGZCDHZIZCJZDKZAIZCLZVCEKZBIZCM
      ZIZACDNZACDOZBCENZIVBVJIVECMZVKVBVFVIVNVBVIVECPZVFVNVBVEVHGZCQZVIVOGUSVDU
      TGZCQZVQVAUSVSVQUSVRVPCUSVRVDAVHUSVDUTAVHGZUSUTVDVTUSUTVDAVHVDVGGUTVPUSVD
      VGABRDEVCSTUAUBUCUDUEUFUTCDUGUHVEVHCUIUJVNVFVOVECUKULUMUNACDUOUPVLVFVMVIA
      CDUQBCEUOURUH $.
      $( [20-Oct-2005] $)

    $( Transfer uniqueness to a smaller subclass. $)
    reuss $p |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) ->
                E! x e. A ph ) $=
      ( wss wrex wreu wi wral wa cv wcel idd rgen reuss2 mpanl2 3impb ) CDEZABC
      FZABDGZABCGZRAAHZBCISTJUAUBBCBKCLAMNAABCDOPQ $.
      $( [2-Nov-2005] $) $( [21-Aug-1999] $)
$(
      ( wss wrex wreu cv wcel wa wex weu wmo wi wal ssel anim1d 19.21aiv
      euimmo syl eu5 biimpri ex syl9 imp32 df-reu sylibr df-rex anbi12i
      sylan2b 3impb ) CDEZABCFZABDGZABCGZULBHZCIZAJZBKZUPDIZAJZBLZJZUOUMUNJULVC
      JURBLZUOULUSVBVDULVBURBMZUSVDULURVANZBOVBVENULVFBULUQUTACDUPPQRURVABSTUSV
      EVDVDUSVEJURBUAUBUCUDUEABCUFUGUMUSUNVBABCUHABDUFUIUJUK $.
$)

    $( Transfer uniqueness to a smaller class. $)
    reuun1 $p |- ( ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) )
                 -> E! x e. A ph ) $=
      ( cun wss wo wi wral wrex wreu wa ssun1 cv wcel orc a1i rgen reuss2 
      mpanl12 ) DDEFZGAABHZIZCDJACDKUCCUBLMACDLDENUDCDUDCODPABQRSAUCCDUBTUA $.
      $( [21-Oct-2005] $)

    $( Transfer uniqueness to a smaller or larger class. $)
    reuun2 $p |- ( -. E. x e. B ph ->
             ( E! x e. ( A u. B ) ph <-> E! x e. A ph ) ) $=
      ( wrex wn cv wcel wa wo weu cun wreu wex wb df-rex notbii euor2 sylbi 
      df-reu elun anbi1i andir orcom 3bitri eubii bitri 3bitr4g ) ABDEZFZBGZDHZ
      AIZUKCHZAIZJZBKZUOBKZABCDLZMZABCMUJUMBNZFUQUROUIVAABDPQUMUOBRSUTUKUSHZAIZ
      BKUQABUSTVCUPBVCUNULJZAIUOUMJUPVBVDAUKCDUAUBUNULAUCUOUMUDUEUFUGABCTUH $.
      $( [21-Oct-2005] $)

    $( Restricted uniqueness "picks" a member of a subclass. $)
    reupick $p |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) ->
                  ( x e. A <-> x e. B ) ) $=
      ( wss wrex wreu wa cv wcel wi ssel ad2antrr wex weu ancrd anim1d an32 
      syl6ib eximdv eupick ex syl9 com23 imp32 df-rex df-reu anbi12i sylan2b 
      exp3a imp impbid ) CDEZABCFZABDGZHZHZAHBIZCJZURDJZUMUSUTKUPACDURLZMUQAUTU
      SKUQUTAUSUQUTAUSUMUSAHZBNZUTAHZBOZHVDUSKZUPUMVCVEVFUMVEVCVFUMVCVDUSHZBNZV
      EVFUMVBVGBUMVBUTUSHZAHVGUMUSVIAUMUSUTVAPQUTUSARSTVEVHVFVDUSBUAUBUCUDUEUNV
      CUOVEABCUFABDUGUHUIUJUDUKUL $.
      $( [21-Aug-1999] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           The empty set
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the empty or null set. $)
  $c (/) $. $( null set $)

  $( Extend class notation to include the empty set. $)
  c0 $a class (/) $.

  $( Define the empty set.  Special case of Exercise 4.10(o) of [Mendelson]
     p. 231.  For a more traditional definition, but requiring a dummy
     variable, see ~ dfnul2 . $)
  df-nul $a |- (/) = ( _V \ _V ) $.

  $( Alternate definition of the empty set.  Definition 5.14 of [TakeutiZaring]
     p. 20. $)
  dfnul2 $p |- (/) = { x | -. x = x } $=
    ( cv wceq wn c0 wcel cvv cdif wa df-nul eleq2i eldif eqid pm3.24 2th 
    con2bii 3bitri abbi2i ) ABZSCZDZAESEFSGGHZFSGFZUCDIZUAEUBSJKSGGLTUDTUDDSMUC
    NOPQR $.
    $( [26-Dec-1996] $)

  $( Alternate definition of the empty set.. $)
  dfnul3 $p |- (/) = { x e. A | -. x e. A } $=
    ( cv wceq wn cab wcel wa c0 crab pm3.24 eqid 2th con1bii abbii dfnul2 
    df-rab 3eqtr4i ) ACZSDZEZAFSBGZUBEZHZAFIUCABJUAUDAUDTUDETUBKSLMNOAPUCABQR 
    $.
    $( [25-Mar-2004] $)

  ${
    $d A x $.
    $( The empty set has no elements.  Theorem 6.14 of [Quine] p. 44. $)
    noel $p |- -. A e. (/) $=
      ( vx cvv wcel c0 wn cv wceq eqid dfnul2 abeq2i con2bii mpbi eleq1 mtbii 
      vtocleg elisset con3i pm2.61i ) ACDZAEDZFZUBBACBGZAHUCEDZUAUCUCHZUDFUCIUD
      UEUEFBEBJKLMUCAENOPUATAEQRS $.
      $( [5-Aug-1993] $)
  $}

  $( If a set has elements, it is not empty. $)
  n0i $p |- ( B e. A -> -. A = (/) ) $=
    ( c0 wceq wcel noel eleq2 mtbiri con2i ) ACDZBAEZJKBCEBFACBGHI $.
    $( [31-Dec-1993] $)

  $( If a set has elements, it is not empty. $)
  ne0i $p |- ( B e. A -> A =/= (/) ) $=
    ( wcel c0 wceq wn wne n0i df-ne sylibr ) BACADEFADGABHADIJ $.
    $( [31-Dec-1993] $)

  $( The universal class is not equal to the empty set. $)
  vn0 $p |- _V =/= (/) $=
    ( vx cv cvv wcel c0 wne visset ne0i ax-mp ) ABZCDCEFAGCJHI $.
    $( [11-Sep-2008] $)

  ${
    $d x y $.  $d y A $.
    ne0f.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20.  This version of ~ n0 requires only that ` x `
       not be free in, rather than not occur in, ` A ` . $)
    ne0f $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( c0 wceq wn cv wcel wal wne wex wb ax-17 cleqf noel nbn albii bitr4i 
      notbii df-ne df-ex 3bitr4i ) CEFZGAHZCIZGZAJZGCEKUFALUDUHUDUFUEEIZMZAJUHA
      BCEDBHEIANOUGUJAUIUFUEPQRSTCEUAUFAUBUC $.
      $( [2-Apr-2007] $) $( [17-Oct-2003] $)
  $}

  ${
    $d x y A $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20. $)
    n0 $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( vy cv wcel ax-17 ne0f ) ACBCDBEAFG $.
      $( [29-Sep-2006] $)

    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20. $)
    neq0 $p |- ( -. A = (/) <-> E. x x e. A ) $=
      ( c0 wceq wn wne cv wcel wex df-ne n0 bitr3i ) BCDEBCFAGBHAIBCJABKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ph $.
    reximdva0.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Restricted existence deduced from non-empty class. $)
    reximdva0 $p |- ( ( ph /\ A =/= (/) ) -> E. x e. A ps ) $=
      ( c0 wne wa cv wcel wex wrex ex ancld eximdv imp n0 sylan2b df-rex 
      sylibr ) ADFGZHCIDJZBHZCKZBCDLAUBCKZUDUAAUEUDAUBUCCAUBBAUBBEMNOPCDQRBCDST
      $.
      $( [1-Feb-2012] $)
  $}

  ${
    $d A x $.
    $( A case of equivalence of "at most one" and "only one".  (Contributed by
       FL, 6-Dec-2010.) $)
    n0moeu $p |- ( A =/= (/) -> ( E* x x e. A <-> E! x x e. A ) ) $=
      ( c0 wne cv wcel wmo wex wa weu n0 biimpi biantrurd eu5 syl6bbr ) BCDZAEB
      FZAGZQAHZRIQAJPSRPSABKLMQANO $.
      $( [2-Mar-2011] $) $( [14-Nov-2010] $)
  $}

  $( Vacuous existential quantification is false. $)
  rex0 $p |- -. E. x e. (/) ph $=
    ( c0 cv wcel wn noel pm2.21i nrex ) ABCBDZCEAFJGHI $.
    $( [15-Oct-2003] $)

  ${
    $d x A $.
    $( The empty set has no elements.  Theorem 2 of [Suppes] p. 22. $)
    eq0 $p |- ( A = (/) <-> A. x -. x e. A ) $=
      ( c0 wceq cv wcel wn wal wex neq0 df-ex bitri con4bii ) BCDZAEBFZGAHZNGOA
      IPGABJOAKLM $.
      $( [29-Aug-1993] $)

    $( The universe contains every set. $)
    eqv $p |- ( A = _V <-> A. x x e. A ) $=
      ( cvv wceq cv wcel wb wal dfcleq visset tbt albii bitr4i ) BCDAEZBFZNCFZG
      ZAHOAHABCIOQAPOAJKLM $.
      $( [11-Sep-2006] $)
  $}

  ${
    $d x A $.  $d x y $.
    $( Membership of the empty set in another class. $)
    0el $p |- ( (/) e. A <-> E. x e. A A. y -. y e. x ) $=
      ( c0 wcel cv wceq wrex wn wal risset eq0 rexbii bitri ) DCEAFZDGZACHBFOEI
      BJZACHADCKPQACBOLMN $.
      $( [29-Jun-2004] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Nonempty class abstraction. $)
    abn0 $p |- ( { x | ph } =/= (/) <-> E. x ph ) $=
      ( vy cab c0 wne cv wcel wex n0 hbab1 ax-17 eleq1 cbvex abid exbii 3bitri 
      ) ABDZEFCGZRHZCIBGZRHZBIABICRJTUBCBABCKUBCLSUARMNUBABABOPQ $.
      $( [21-Feb-2007] $) $( [26-Dec-1996] $)
  $}

  $( Non-empty restricted class abstraction. $)
  rabn0 $p |- ( { x e. A | ph } =/= (/) <-> E. x e. A ph ) $=
    ( cv wcel wa cab c0 wne wex crab wrex abn0 df-rab neeq1i df-rex 3bitr4i ) 
    BDCEAFZBGZHIRBJABCKZHIABCLRBMTSHABCNOABCPQ $.
    $( [24-Feb-2007] $) $( [29-Aug-1999] $)

  $( Any restricted class abstraction restricted to the empty set is empty.
     (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  rab0 $p |- { x e. (/) | ph } = (/) $=
    ( cv c0 wcel wa cab wceq wn crab equid noel intnanr 2th con2bii abbii 
    df-rab dfnul2 3eqtr4i ) BCZDEZAFZBGTTHZIZBGABDJDUBUDBUCUBUCUBIBKUAATLMNOPAB
    DQBRS $.
    $( [26-Jun-2011] $) $( [15-Oct-2003] $)

  ${
    $d x A $.
    $( The union of a class with the empty set is itself.  Theorem 24 of
       [Suppes] p. 27. $)
    un0 $p |- ( A u. (/) ) = A $=
      ( vx c0 cv wcel wo noel biorfi bicomi uneqri ) BACABDZAEZLKCEZFMLKGHIJ $.
      $( [5-Aug-1993] $)

    $( The intersection of a class with the empty set is the empty set.
       Theorem 16 of [Suppes] p. 26. $)
    in0 $p |- ( A i^i (/) ) = (/) $=
      ( vx c0 cv wcel wa noel bianfi bicomi ineqri ) BACCBDZCEZKAEZLFLMKGHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( The intersection of a class with the universal class is itself.  Exercise
     4.10(k) of [Mendelson] p. 231. $)
  inv1 $p |- ( A i^i _V ) = A $=
    ( cvv cin inss1 ssid ssv ssini eqssi ) ABCAABDAABAEAFGH $.
    $( [17-May-1998] $)

  $( The union of a class with the universal class is the universal class.
     Exercise 4.10(l) of [Mendelson] p. 231. $)
  unv $p |- ( A u. _V ) = _V $=
    ( cvv cun ssv ssun2 eqssi ) ABCZBGDBAEF $.
    $( [17-May-1998] $)

  ${
    $d A x $.
    $( The null set is a subset of any class.  Part of Exercise 1 of
       [TakeutiZaring] p. 22. $)
    0ss $p |- (/) C_ A $=
      ( vx c0 cv wcel noel pm2.21i ssriv ) BCABDZCEIAEIFGH $.
      $( [5-Aug-1993] $)
  $}

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23 and its
     converse. $)
  ss0b $p |- ( A C_ (/) <-> A = (/) ) $=
    ( c0 wceq wss eqss 0ss mpbiran2 bicomi ) ABCZABDZIJBADABEAFGH $.
    $( [17-Sep-2003] $)

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23. $)
  ss0 $p |- ( A C_ (/) -> A = (/) ) $=
    ( c0 wss wceq ss0b biimpi ) ABCABDAEF $.
    $( [13-Aug-1994] $)

  $( A subclass of an empty class is empty.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  sseq0 $p |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) $=
    ( c0 wceq wss sseq2 ss0 syl6bi impcom ) BCDZABEZACDZJKACELBCAFAGHI $.
    $( [26-Jun-2011] $) $( [7-Mar-2007] $)

  $( A class with a nonempty subclass is nonempty. $)
  ssn0 $p |- ( ( A C_ B /\ A =/= (/) ) -> B =/= (/) ) $=
    ( wss c0 wne wceq sseq0 ex necon3d imp ) ABCZADEBDEKBDADKBDFADFABGHIJ $.
    $( [17-Feb-2007] $)

  ${
    abf.1 $e |- -. ph $.
    $( A class builder with a false argument is empty. $)
    abf $p |- { x | ph } = (/) $=
      ( cab c0 wss wceq cv wcel pm2.21i abssi ss0 ax-mp ) ABDZEFNEGABEABHEICJKN
      LM $.
      $( [20-Jan-2012] $)
  $}

  $( Two classes are empty iff their union is empty. $)
  un00 $p |- ( ( A = (/) /\ B = (/) ) <-> ( A u. B ) = (/) ) $=
    ( c0 wceq wa cun uneq12 un0 syl6eq wss ssun1 sseq2 mpbii ss0b sylib ssun2 
    jca impbii ) ACDZBCDZEZABFZCDZUAUBCCFCACBCGCHIUCSTUCACJZSUCAUBJUDABKUBCALMA
    NOUCBCJZTUCBUBJUEBAPUBCBLMBNOQR $.
    $( [11-Aug-2004] $)

  $( Only the universal class has the universal class as a subclass.  (The
     proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  vss $p |- ( _V C_ A <-> A = _V ) $=
    ( cvv wss wa wceq ssv biantrur eqss bitr4i ) BACZABCZJDABEKJAFGABHI $.
    $( [26-Jun-2011] $) $( [17-Sep-2003] $)

  $( The null set is a proper subset of any non-empty set. $)
  0pss $p |- ( (/) C. A <-> A =/= (/) ) $=
    ( c0 wpss wne wss df-pss 0ss mpbiran necom bitri ) BACZBADZABDKBAELBAFAGHBA
    IJ $.
    $( [2-Apr-2007] $) $( [27-Feb-1996] $)

  $( No set is a proper subset of the empty set.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  npss0 $p |- -. A C. (/) $=
    ( c0 wpss wss wn wa wi 0ss a1i iman mpbi dfpss3 mtbir ) ABCABDZBADZEFZNOGPE
    ONAHINOJKABLM $.
    $( [26-Jun-2011] $) $( [17-Jun-1998] $)

  $( Any non-universal class is a proper subclass of the universal class. $)
  pssv $p |- ( A C. _V <-> -. A = _V ) $=
    ( cvv wpss wss wceq wn dfpss2 ssv mpbiran ) ABCABDABEFABGAHI $.
    $( [17-May-1998] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Two ways of saying that two classes are disjoint (have no members in
       common). $)
    disj $p |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) $=
      ( cin c0 wceq cv wcel wn wi wal wral wa cab wb df-in eqeq1i abeq1 imnan 
      noel nbn bitr2i albii 3bitri df-ral bitr4i ) BCDZEFZAGZBHZUICHZIZJZAKZULA
      BLUHUJUKMZANZEFUOUIEHZOZAKUNUGUPEABCPQUOAERURUMAUMUOIURUJUKSUQUOUITUAUBUC
      UDULABUEUF $.
      $( [17-Feb-2004] $)

    $( Two ways of saying that two classes are disjoint (have no members in
       common). $)
    disj1 $p |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) $=
      ( cin c0 wceq cv wcel wn wral wi wal disj df-ral bitri ) BCDEFAGZCHIZABJP
      BHQKALABCMQABNO $.
      $( [19-Aug-1993] $)

    $( Two ways of saying that two classes are disjoint, using the complement
       of ` B ` relative to a universe ` C ` .  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    reldisj $p |- ( A C_ C -> ( ( A i^i B ) = (/) <-> A C_ ( C \ B ) ) ) $=
      ( vx wss cv wcel wn wi wal cdif cin c0 wceq wb dfss2 wa pm5.44 eldif 
      imbi2i syl6bbr a4s sylbi albidv disj1 3bitr4g ) ACEZDFZAGZUHBGHZIZDJUIUHC
      BKZGZIZDJABLMNAULEUGUKUNDUGUIUHCGZIZDJUKUNOZDACPUPUQDUPUKUIUOUJQZIUNUIUOU
      JRUMURUIUHCBSTUAUBUCUDDABUEDAULPUF $.
      $( [26-Jun-2011] $) $( [15-Feb-2007] $)

    $( Two ways of saying that two classes are disjoint. $)
    disj3 $p |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) $=
      ( vx cv wcel wn wi wal cdif wb cin c0 wceq wa pm4.71 eldif bibi2i bitr4i 
      albii disj1 dfcleq 3bitr4i ) CDZAEZUCBEFZGZCHUDUCABIZEZJZCHABKLMAUGMUFUIC
      UFUDUDUENZJUIUDUEOUHUJUDUCABPQRSCABTCAUGUAUB $.
      $( [19-May-1998] $)

    $( Members of disjoint sets are not equal.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    disjne $p |- ( ( ( A i^i B ) = (/) /\ C e. A /\ D e. B ) -> C =/= D ) $=
      ( vx cin c0 wceq wcel wne cv wn wral wi wa eleq1 biimprd com12 necon3bd 
      notbid rcla4cva syl5com disj sylanb 3impia ) ABFGHZCAIZDBIZCDJZEKZBIZLZEA
      MZUGUHUINUFUHCBIZLZUIUMUGOUHUNCDCDHZUHUNUPUNUHCDBPQRSULUOECAUJCHUKUNUJCBP
      TUAUBEABUCUDUE $.
      $( [26-Jun-2011] $) $( [28-Mar-2007] $)
  $}

  $( Two ways of saying that two classes are disjoint. $)
  disj2 $p |- ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) $=
    ( cvv wss cin c0 wceq cdif wb ssv reldisj ax-mp ) ACDABEFGACBHDIAJABCKL $.
    $( [17-May-1998] $)

  $( Two ways of saying that two classes are disjoint. $)
  disj4 $p |- ( ( A i^i B ) = (/) <-> -. ( A \ B ) C. A ) $=
    ( cin c0 wceq cdif wpss wn disj3 eqcom wss dfpss2 difss mpbiran con2bii 
    3bitri ) ABCDEAABFZEQAEZQAGZHABIAQJSRSQAKRHQALABMNOP $.
    $( [21-Mar-2004] $)

  $( Intersection with a subclass of a disjoint class.  (Contributed by FL,
     24-Jan-2007.) $)
  ssdisj $p |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) = (/) ) $=
    ( wss cin c0 wceq wa wi ssrin sstr2 syl ss0b syl5ibr imp ss0 ) ABDZBCEZFGZH
    ACEZFDZTFGQSUAQRFDZUASQTRDUBUAIABCJTRFKLRMNOTPL $.
    $( [23-Jan-2007] $)

  $( A class is a proper subset of its union with a disjoint nonempty class. $)
  disjpss $p |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> A C. ( A u. B ) ) $=
    ( cin c0 wceq wne wa wss wn cun wpss sseq2 ssid biantru ssin bitri syl5bb 
    ss0 syl6bi necon3ad imp nsspssun uncom psseq2i sylib ) ABCZDEZBDFZGBAHZIZAA
    BJZKZUGUHUJUGUIBDUGUIBDHZBDEUGBUFHZUMUIUFDBLUIUIBBHZGUNUOUIBMNBABOPQBRSTUAU
    JABAJZKULBAUBUPUKABAUCUDPUE $.
    $( [30-Apr-2007] $) $( [15-Sep-2004] $)

  $( The union of disjoint classes is disjoint. $)
  undisj1 $p |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <->
               ( ( A u. B ) i^i C ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indir eqeq1i bitr4i ) ACDZEFBCDZEFGMNHZEFABHCDZEF
    MNIPOEABCJKL $.
    $( [26-Sep-2004] $)

  $( The union of disjoint classes is disjoint. $)
  undisj2 $p |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <->
               ( A i^i ( B u. C ) ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indi eqeq1i bitr4i ) ABDZEFACDZEFGMNHZEFABCHDZEFM
    NIPOEABCJKL $.
    $( [13-Sep-2004] $)

  $( Subclass expressed in terms of intersection with difference from the
     universal class. $)
  ssindif0 $p |- ( A C_ B <-> ( A i^i ( _V \ B ) ) = (/) ) $=
    ( cvv cdif cin c0 wceq wss disj2 ddif sseq2i bitr2i ) ACBDZEFGACMDZHABHAMIN
    BABJKL $.
    $( [17-Sep-2003] $)

  $( The intersection of classes with a common member is nonempty. $)
  inelcm $p |- ( ( A e. B /\ A e. C ) -> ( B i^i C ) =/= (/) ) $=
    ( wcel wa cin c0 wne elin ne0i sylbir ) ABDACDEABCFZDLGHABCILAJK $.
    $( [2-Apr-2007] $) $( [7-Apr-1994] $)

  $( A minimum element of a class has no elements in common with the class. $)
  minel $p |- ( ( A e. B /\ ( C i^i B ) = (/) ) -> -. A e. C ) $=
    ( cin c0 wceq wcel wn wa wi inelcm necon2bi imnan sylibr con2d impcom ) CBD
    ZEFZABGZACGZHRTSRTSIZHTSHJUAQEACBKLTSMNOP $.
    $( [22-Jun-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distribute union over difference.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    undif4 $p |- ( ( A i^i C ) = (/) ->
                 ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) ) $=
      ( vx cv wcel wn wi wal cdif cun wb cin c0 wceq wo wa pm2.621 olc impbid1 
      anbi2d eldif orbi2i ordi bitri elun anbi1i 3bitr4g alimi disj1 dfcleq 
      3imtr4i ) DEZAFZUMCFGZHZDIUMABCJZKZFZUMABKZCJZFZLZDIACMNOURVAOUPVCDUPUNUM
      UQFZPZUMUTFZUOQZUSVBUPUNUMBFZPZUNUOPZQZVIUOQVEVGUPVJUOVIUPVJUOUNUORUOUNST
      UAVEUNVHUOQZPVKVDVLUNUMBCUBUCUNVHUOUDUEVFVIUOUMABUFUGUHUMAUQUFUMUTCUBUHUI
      DACUJDURVAUKUL $.
      $( [26-Jun-2011] $) $( [17-May-1998] $)

    $( Subset relation for disjoint classes.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    disjssun $p |- ( ( A i^i B ) = (/) -> ( A C_ ( B u. C ) <-> A C_ C ) ) $=
      ( cin c0 wceq cun wss uneq2 un0 syl6eq indi uncom eqtri syl5eq eqeq1d 
      df-ss 3bitr4g ) ABDZEFZABCGZDZAFACDZAFAUAHACHTUBUCATUCSGZUCUBTUDUCEGUCSEU
      CIUCJKUBSUCGUDABCLSUCMNOPAUAQACQR $.
      $( [26-Jun-2011] $) $( [25-Oct-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass expressed in terms of difference.  Exercise 7 of
       [TakeutiZaring] p. 22. $)
    ssdif0 $p |- ( A C_ B <-> ( A \ B ) = (/) ) $=
      ( vx cv wcel wi wal cdif wn wss c0 wceq wa iman eldif notbii bitr4i 
      albii dfss2 eq0 3bitr4i ) CDZAEZUBBEZFZCGUBABHZEZIZCGABJUFKLUEUHCUEUCUDIM
      ZIUHUCUDNUGUIUBABOPQRCABSCUFTUA $.
      $( [29-Apr-1994] $)
  $}

  $( Universal class equality in terms of empty difference. $)
  vdif0 $p |- ( A = _V <-> ( _V \ A ) = (/) ) $=
    ( cvv wceq wss cdif c0 vss ssdif0 bitr3i ) ABCBADBAEFCAGBAHI $.
    $( [17-Sep-2003] $)

  $( A proper subclass has a nonempty difference. $)
  pssdifn0 $p |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) $=
    ( wss wne cdif c0 wceq eqss simplbi2 ssdif0 syl5ibr necon3d imp ) ABCZABDBA
    EZFDNOFABNBACZABGZOFGQNPABHIBAJKLM $.
    $( [3-Apr-2007] $) $( [3-May-1994] $)

  $( A subclass missing a member is a proper subclass. $)
  ssnelpss $p |- ( A C_ B -> ( ( C e. B /\ -. C e. A ) -> A C. B ) ) $=
    ( wss wceq wn wpss wcel wa dfpss2 baibr nelneq2 eqcom notbii sylib syl5bi 
    ) ABDZABEZFZABGZCBHCAHFIZTQSABJKUABAEZFSCBALUBRBAMNOP $.
    $( [12-Jan-2002] $)

  ${
    $d x A $.  $d x B $.
    $( A proper subclass has a member in one argument that's not in both. $)
    pssnel $p |- ( A C. B -> E. x ( x e. B /\ -. x e. A ) ) $=
      ( wpss cv cdif wcel wex wn wa c0 wne wss df-pss pssdifn0 sylbi n0 sylib 
      eldif exbii ) BCDZAEZCBFZGZAHZUBCGUBBGIJZAHUAUCKLZUEUABCMBCLJUGBCNBCOPAUC
      QRUDUFAUBCBSTR $.
      $( [29-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Difference, intersection, and subclass relationship. $)
    difin0ss $p |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) $=
      ( vx cdif cin c0 wceq cv wcel wi wal wss wn eq0 wa annim anbi2i ancom 
      bitr3i notbii iman elin eldif anbi1i bitri 3bitr4i ax-2 sylbir al2imi 
      sylbi dfss2 3imtr4g ) ABEZCFZGHZDIZCJZUQAJZKZDLZURUQBJZKZDLZCAMCBMUPUQUOJ
      ZNZDLVAVDKDUOOVFUTVCDVFURUSVBKZKZUTVCKURVGNZPZNUSVBNPZURPZNVHVFVJVLVJURVK
      PVLVKVIURUSVBQRURVKSTUAURVGUBVEVLVEUQUNJZURPVLUQUNCUCVMVKURUQABUDUEUFUAUG
      URUSVBUHUIUJUKDCAULDCBULUM $.
      $( [30-Apr-1994] $)

    $( Intersection, subclass, and difference relationship.  (The proof was
       shortened by Andrew Salmon, 26-Jun-2011.) $)
    inssdif0 $p |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) $=
      ( vx cv cin wcel wi wal cdif wn wss c0 wceq wa iman anass notbii bitri 
      elin imbi1i eldif anbi2i 3bitr4i albii dfss2 eq0 ) DEZABFZGZUHCGZHZDIUHAB
      CJZFZGZKZDIUICLUNMNULUPDUHAGZUHBGZOZUKHZUQURUKKZOZOZKZULUPUTUSVAOZKVDUSUK
      PVEVCUQURVAQRSUJUSUKUHABTUAUOVCUOUQUHUMGZOVCUHAUMTVFVBUQUHBCUBUCSRUDUEDUI
      CUFDUNUGUD $.
      $( [26-Jun-2011] $) $( [27-Oct-1996] $)
  $}

  $( The difference between a class and itself is the empty set.  Proposition
     5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28. $)
  difid $p |- ( A \ A ) = (/) $=
    ( wss cdif c0 wceq ssid ssdif0 mpbi ) AABAACDEAFAAGH $.
    $( [22-Apr-2004] $)

  ${
    $d x A $.
    $( The difference between a class and itself is the empty set.  Proposition
       5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28.
       (Alternate proof of ~ difid suggested by David Abernethy,
       17-Jun-2012.) $)
    difidALT $p |- ( A \ A ) = (/) $=
      ( vx cdif cv wcel wn crab c0 dfdif2 dfnul3 eqtr4i ) AACBDAEFBAGHBAAIBAJK 
      $.
      $( [17-Jun-2012] $)
  $}

  $( The difference between a class and the empty set.  Part of Exercise 4.4 of
     [Stoll] p. 16. $)
  dif0 $p |- ( A \ (/) ) = A $=
    ( cdif c0 difid difeq2i difdif eqtr3i ) AAABZBACBAHCAADEAAFG $.
    $( [17-Aug-2004] $)

  $( The difference between the empty set and a class.  Part of Exercise 4.4 of
     [Stoll] p. 16. $)
  0dif $p |- ( (/) \ A ) = (/) $=
    ( c0 cdif wss wceq difss ss0 ax-mp ) BACZBDIBEBAFIGH $.
    $( [17-Aug-2004] $)

  $( A class and its relative complement are disjoint.  Theorem 38 of [Suppes]
     p. 29. $)
  difdisj $p |- ( A i^i ( B \ A ) ) = (/) $=
    ( cin wss cdif c0 wceq inss1 inssdif0 mpbi ) ABCADABAECFGABHABAIJ $.
    $( [24-Mar-1998] $)

  $( The difference of a class from its intersection is empty.  Theorem 37 of
     [Suppes] p. 29.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  difin0 $p |- ( ( A i^i B ) \ B ) = (/) $=
    ( cin wss cdif c0 wceq inss2 ssdif0 mpbi ) ABCZBDKBEFGABHKBIJ $.
    $( [26-Jun-2011] $) $( [17-Aug-2004] $)

  $( The union of a class and its complement is the universe.  Theorem 5.1(5)
     of [Stoll] p. 17. $)
  undifv $p |- ( A u. ( _V \ A ) ) = _V $=
    ( cvv cdif cun cin c0 dfun3 difdisj difeq2i dif0 3eqtri ) ABACZDBLBLCEZCBFC
    BALGMFBLBHIBJK $.
    $( [17-Aug-2004] $)

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ difdisj ).  Theorem 35 of [Suppes] p. 29. $)
  undif1 $p |- ( ( A \ B ) u. B ) = ( A u. B ) $=
    ( cvv cdif cin cun invdif uneq1i undir uncom undifv eqtri ineq2i inv1 
    3eqtri eqtr3i ) ACBDZEZBFZABDZBFABFZRTBABGHSUAQBFZEUACEUAAQBIUBCUAUBBQFCQBJ
    BKLMUANOP $.
    $( [18-Aug-2004] $) $( [19-May-1998] $)

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ difdisj ).  Part of proof of Corollary 6K of
     [Enderton] p. 144. $)
  undif2 $p |- ( A u. ( B \ A ) ) = ( A u. B ) $=
    ( cdif cun uncom undif1 3eqtri ) ABACZDHADBADABDAHEBAFBAEG $.
    $( [4-Sep-2004] $) $( [19-May-1998] $)
  ${
    $d x A $.  $d x B $.
    $( The intersection and class difference of a class with another class
       unite to give the original class.  (Contributed by Paul Chapman,
       5-Jun-2009.)  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    inundif $p |- ( ( A i^i B ) u. ( A \ B ) ) = A $=
      ( vx cin cdif cv wcel wo wa wn elin eldif orbi12i pm4.42 bitr4i uneqri ) 
      CABDZABEZACFZQGZSRGZHSAGZSBGZIZUBUCJIZHUBTUDUAUESABKSABLMUBUCNOP $.
      $( [26-Jun-2011] $) $( [5-Jun-2009] $)
  $}

  $( Absorption of union by difference.  Theorem 36 of [Suppes] p. 29. $)
  difun2 $p |- ( ( A u. B ) \ B ) = ( A \ B ) $=
    ( cun cdif c0 difundir difid uneq2i un0 3eqtri ) ABCBDABDZBBDZCKECKABBFLEKB
    GHKIJ $.
    $( [18-Aug-2004] $) $( [19-May-1998] $)

  $( Union of complementary parts into whole. $)
  undif $p |- ( A C_ B <-> ( A u. ( B \ A ) ) = B ) $=
    ( wss cun wceq cdif ssequn1 undif2 eqeq1i bitr4i ) ABCABDZBEABAFDZBEABGLKBA
    BHIJ $.
    $( [22-Sep-2004] $) $( [22-Mar-1998] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A condition equivalent to inclusion in the union of two classes. $)
    ssundif $p |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) $=
      ( vx cv wcel cun wi wal cdif wss wn wa wo pm5.6 eldif imbi1i elun imbi2i 
      3bitr4ri albii dfss2 3bitr4i ) DEZAFZUDBCGZFZHZDIUDABJZFZUDCFZHZDIAUFKUIC
      KUHULDUEUDBFZLMZUKHUEUMUKNZHULUHUEUMUKOUJUNUKUDABPQUGUOUEUDBCRSTUADAUFUBD
      UICUBUC $.
      $( [26-Mar-2007] $)
  $}

  $( Swap the arguments of a class difference. $)
  difcom $p |- ( ( A \ B ) C_ C <-> ( A \ C ) C_ B ) $=
    ( cun wss cdif uncom sseq2i ssundif 3bitr3i ) ABCDZEACBDZEABFCEACFBEKLABCGH
    ABCIACBIJ $.
    $( [29-Mar-2007] $)

  $( Distributive law for class difference.  Exercise 4.8 of [Stoll] p. 16. $)
  difdifdir $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ ( B \ C ) ) $=
    ( cdif cvv cun cin c0 difdisj incom eqtr3i uneq2i invdif un0 dif23 
    3eqtr4ri indi 3eqtr4i indm difeq2i ddif 3eqtr3ri ineq2i 3eqtri ) ABDCDZACDZ
    EBDZCFZGZUFEBCDZDZGUFUJDUFUGGZHFZULUFCGZFUEUIHUNULCUFGHUNCAICUFJKLULUFBDUMU
    EUFBMULNABCOPUFUGCQRUHUKUFEBECDZGZDUGEUODZFUKUHBUOSUPUJEBCMTUQCUGCUALUBUCUF
    UJMUD $.
    $( [18-Aug-2004] $)

  $( Two ways to say that ` A ` and ` B ` partition ` C ` (when ` A ` and ` B `
     don't overlap and ` A ` is a part of ` C ` ).  (Contributed by FL,
     17-Nov-2008.) $)
  uneqdifeq $p |- ( ( A C_ C /\ ( A i^i B ) = (/) )
     -> ( ( A u. B ) = C <-> ( C \ A ) = B ) ) $=
    ( wss cin c0 wceq wa cun cdif wi uncom eqtr eqcom biimpi difeq1 difun2 
    incom eqeq1i disj3 bitri expcom eqcoms sylbi syl5com mpan2 syl 3syl mpan 
    com12 adantl difss sseq1 unss syl6bi mpi adantr imp eqimss ssundif sylibr 
    adantlr eqssd ex impbid ) ACDZABEZFGZHZABIZCGZCAJZBGZVHVKVMKVFVKVHVMBAIZVJG
    ZVKVHVMKZBALVOVKHVNCGZCVNGZVPVNVJCMVQVRVNCNOVRVLVNAJZGZVPCVNAPVTVSBAJZGZVPB
    AQVHVLWAGZVMVTWBHVHBWAGZWCVMKZVHBAEZFGWDVGWFFABRSBATUAWEWABWCWABGVMVLWABMUB
    UCUDVLVSWAMUEUFUGUHUIUJUKVIVMVKVIVMHVJCVIVMVJCDZVFVMWGKVHVMVFWGVMVLCDZVFWGK
    ZCAULVMWHBCDZWIVLBCUMVFWJWGVFWJHWGABCUNOUBUOUPUJUQURVFVMCVJDZVHVFVMHVLBDZWK
    VMWLVFVLBUSUKCABUTVAVBVCVDVE $.
    $( [16-Nov-2008] $)

  ${
    $d x A $.
    $( Theorem 19.2 of [Margaris] p. 89 with restricted quantifiers (compare
       ~ 19.2 ).  The restricted version is valid only when the domain of
       quantification is not empty. $)
    r19.2z $p |- ( ( A =/= (/) /\ A. x e. A ph ) -> E. x e. A ph ) $=
      ( wral c0 wne wrex cv wcel wex wa wi wal df-ral exintr sylbi n0 df-rex 
      3imtr4g impcom ) ABCDZCEFZABCGZUABHCIZBJZUDAKBJZUBUCUAUDALBMUEUFLABCNUDAB
      OPBCQABCRST $.
      $( [9-Dec-2006] $) $( [15-Nov-2003] $)

    $( A response to the notion that the condition ` A =/= (/) ` can be removed
       in ~ r19.2z .  Interestingly enough, ` ph ` does not figure in the
       left-hand side.  (Contributed by Jeff Hankins, 24-Aug-2009.) $)
    r19.2zb $p |- ( A =/= (/) <-> ( A. x e. A ph -> E. x e. A ph ) ) $=
      ( c0 wne wral wrex wi r19.2z ex wceq cv wcel noel pm2.21i rgen raleq 
      mpbiri necon3bi wa wex exsimpl df-rex n0 3imtr4i ja impbii ) CDEZABCFZABC
      GZHUHUIUJABCIJUIUJUHUICDCDKUIABDFABDBLZDMAUKNOPABCDQRSUKCMZATBUAULBUAUJUH
      ULABUBABCUCBCUDUEUFUG $.
      $( [18-Jun-2011] $) $( [24-Aug-2009] $)
  $}

  ${
    $d x A $.
    r19.3rz.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantification of wff not containing quantified variable. $)
    r19.3rz $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wral wb n0 biimt sylbi wal df-ral 19.23 bitri 
      syl6bbr ) CEFZABGCHZBIZAJZABCKZUAUCAUDLBCMUCANOUEUBAJBPUDABCQUBABDRST $.
      $( [26-Jun-2011] $) $( [26-Oct-2010] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.28z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi1d r19.26 syl6rbbr ) DFGZABCDHZIACDHZOIABICD
      HNAPOACDEJKABCDLM $.
      $( [26-Jun-2011] $) $( [26-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x ph $.
    $( Restricted quantification of wff not containing quantified variable. $)
    r19.3rzv $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wral wb n0 biimt sylbi wal df-ral 19.23v bitri 
      syl6bbr ) CDEZABFCGZBHZAIZABCJZTUBAUCKBCLUBAMNUDUAAIBOUCABCPUAABQRS $.
      $( [5-Oct-2006] $) $( [10-Mar-1997] $)

    $( Restricted quantification of wff not containing quantified variable. $)
    r19.9rzv $p |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) $=
      ( c0 wne wn wral wrex r19.3rzv bicomd con2bid dfrex2 syl6bbr ) CDEZAAFZBC
      GZFABCHNPANOPOBCIJKABCLM $.
      $( [10-Oct-2006] $) $( [27-May-1998] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.28zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi1d r19.26 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
      $( [5-Oct-2006] $) $( [19-Aug-2004] $)

    $( Restricted quantifier version of Theorem 19.37 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by Paul Chapman, 8-Oct-2007.) $)
    r19.37zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( ph -> E. x e. A ps ) ) ) $=
      ( c0 wne wrex wi wral r19.3rzv imbi1d r19.35 syl6rbbr ) DEFZABCDGZHACDIZO
      HABHCDGNAPOACDJKABCDLM $.
      $( [8-Oct-2007] $)

    $( Restricted version of Theorem 19.45 of [Margaris] p. 90. $)
    r19.45zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph \/ ps ) <-> ( ph \/ E. x e. A ps ) ) ) $=
      ( c0 wne wrex wo r19.9rzv orbi1d r19.43 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
      $( [10-Oct-2006] $) $( [27-May-1998] $)
  $}

  ${
    $d x A $.
    r19.27z.1 $e |- ( ps -> A. x ps ) $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.27z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi2d r19.26 syl6rbbr ) DFGZACDHZBIOBCDHZIABICD
      HNBPOBCDEJKABCDLM $.
      $( [26-Jun-2011] $) $( [26-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x ps $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.27zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi2d r19.26 syl6rbbr ) DEFZACDGZBHNBCDGZHABHC
      DGMBONBCDIJABCDKL $.
      $( [12-Oct-2006] $) $( [19-Aug-2004] $)

    $( Restricted quantifier version of Theorem 19.36 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.36zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> ps ) ) ) $=
      ( c0 wne wral wi wrex r19.9rzv imbi2d r19.35 syl6rbbr ) DEFZACDGZBHOBCDIZ
      HABHCDINBPOBCDJKABCDLM $.
      $( [13-Oct-2006] $) $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.
    $( Vacuous quantification is always true.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    rzal $p |- ( A = (/) -> A. x e. A ph ) $=
      ( c0 wceq cv wcel ne0i necon2bi pm2.21d r19.21aiv ) CDEZABCLBFZCGZANCDCMH
      IJK $.
      $( [26-Jun-2011] $) $( [11-Mar-1997] $)

    $( Restricted existential quantification implies its restriction is
       nonempty.  (Contributed by Szymon Jaroszewicz, 3-Apr-2007.) $)
    rexn0 $p |- ( E. x e. A ph -> A =/= (/) ) $=
      ( c0 wne cv wcel ne0i a1d r19.23aiv ) ACDEZBCBFZCGKACLHIJ $.
      $( [1-Mar-2007] $)

    $( Idempotent law for restricted quantifier. $)
    ralidm $p |- ( A. x e. A A. x e. A ph <-> A. x e. A ph ) $=
      ( c0 wceq wral wb rzal 2thd wn cv wcel wex neq0 wi biimt wal df-ral 
      hbra1 19.23 bitri syl6rbbr sylbi pm2.61i ) CDEZABCFZBCFZUFGZUEUGUFUFBCHAB
      CHIUEJBKCLZBMZUHBCNUJUFUJUFOZUGUJUFPUGUIUFOBQUKUFBCRUIUFBABCSTUAUBUCUD $.
      $( [28-Mar-1997] $)
  $}

  $( Vacuous universal quantification is always true. $)
  ral0 $p |- A. x e. (/) ph $=
    ( c0 cv wcel noel pm2.21i rgen ) ABCBDZCEAIFGH $.
    $( [20-Oct-2005] $)

  ${
    $d x A $.
    rgenz.1 $e |- ( ( A =/= (/) /\ x e. A ) -> ph ) $.
    $( Generalization rule that eliminates a non-zero class requirement. $)
    rgenz $p |- A. x e. A ph $=
      ( wral c0 rzal wne r19.21aiva pm2.61ine ) ABCECFABCGCFHABCDIJ $.
      $( [8-Dec-2012] $)
  $}

  ${
    $d x A $.
    ralf0.1 $e |- -. ph $.
    $( The quantification of a falsehood is vacuous when true. $)
    ralf0 $p |- ( A. x e. A ph <-> A = (/) ) $=
      ( wral c0 wceq cv wcel wi wal wn con3 mpi alimi df-ral eq0 3imtr4i rzal 
      impbii ) ABCEZCFGZBHCIZAJZBKUCLZBKUAUBUDUEBUDALUEDUCAMNOABCPBCQRABCST $.
      $( [26-Nov-2005] $)
  $}

  $( MAY BE REVISED - shorten r19.3zv, r19.27zv, r19.28zv, raaanv w/ non-v $)
  ${
    $d x y A $.
    raaan.1 $e |- ( ph -> A. y ph ) $.
    raaan.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange restricted quantifiers. $)
    raaan $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb c0 wceq rzal pm5.1 syl12anc wne r19.28z ralbidv cv wcel 
      ax-17 hbral r19.27z bitrd pm2.61ine ) ABHDEIZCEIZACEIZBDEIZHZJZEKEKLUGUHU
      IUKUFCEMACEMBDEMUGUJNOEKPZUGAUIHZCEIUJULUFUMCEABDEFQRAUICEBCDEDSETCUAGUBU
      CUDUE $.
      $( [26-Jun-2011] $) $( [26-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y A $.
    $( Rearrange restricted quantifiers. $)
    raaanv $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb c0 wceq rzal pm5.1 syl12anc wne r19.28zv ralbidv r19.27zv 
      bitrd pm2.61ine ) ABFDEGZCEGZACEGZBDEGZFZHZEIEIJUAUBUCUETCEKACEKBDEKUAUDL
      MEINZUAAUCFZCEGUDUFTUGCEABDEOPAUCCEQRS $.
      $( [11-Mar-1997] $)
  $}

  ${
    $d x A w $.  $d v x $.  $d v A $.  $d w v $.  $d w y $.
    $( Lemma for ~ sbss .  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbsslem $p |- ( [ y / x ] x C_ A
                  <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) $=
      ( cv wss wsbc wcel wi wal wa wb dfss2 sbbii sbal sbim elsb4 ax-17 sbf 
      imbi12i simpl ancl impbid2 bi2 simpr syl6 impbii 3bitri albii ) AEZDFZABE
      ZGCEZUJHZUMDHZIZCJZAULGUPAULGZCJUMULHZUOKZUSLZCJUKUQABCUJDMNUPCABOURVACUR
      UNAULGZUOAULGZIUSUOIZVAUNUOABPVBUSVCUOBACQUOABUOARSTVDVAVDUTUSUSUOUAUSUOU
      BUCVAUSUTUOUTUSUDUSUOUEUFUGUHUIUH $.
      $( [29-Jun-2011] $) $( [7-Jul-2010] $)
  $}

  ${
    $d z y $.  $d z A x $.
    $( Set substitution into the first argument of a subset relation.
       (Contributed by Rodolfo Medina, 7-Jul-2010.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 26-Jun-2011.) $)
    sbss $p |- ( [ y / x ] x C_ A <-> y C_ A ) $=
      ( vz cv wss wsbc ax-17 sseq1 sbie sbbii sbco2 3bitr3i ) AEZCFZADEZGZDBEZG
      PCFZDRGOARGRCFZQSDBOSADSAHNPCIJKOABDODHLSTDBTDHPRCIJM $.
      $( [26-Jun-2011] $) $( [7-Jul-2010] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           "Weak deduction theorem" for set theory
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( These lemmas are used to convert hypotheses into antecedents,
     when there is at least one class making the hypothesis true. $)

$(
The Weak Deduction Theorem in set theory
----------------------------------------

In a Hilbert system of logic (which consists of a set of axioms, modus
ponens, and the generalization rule), converting a deduction to a proof using
the Deduction Theorem (taught in introductory logic books) involves an
exponential increase of the number of steps as hypotheses are successively
eliminated.  Here is a trick that is not as general as the Deduction Theorem
but requires only a linear increase in the number of steps.

The general problem:  We want to convert a deduction
  P |- Q
into a proof of the theorem
  |- P -> Q
i.e. we want to eliminate the hypothesis P.  Normally this is done using the
Deduction (meta)Theorem, which looks at the microscopic steps of the
deduction and usually doubles or triples the number of these microscopic
steps for each hypothesis that is eliminated.  We will look at a special case
of this problem, without appealing to the Deduction Theorem.

We assume ZF with class notation.  A and B are arbitrary (possibly
proper) classes.  P, Q, R, S and T are wffs.

We define the conditional operator, if(P,A,B), as follows:
  if(P,A,B) =def= { x | (x \in A & P) v (x \in B & ~P) }
(where x does not occur in A, B, or P).

Lemma 1.
  A = if(P,A,B) -> (P <-> R), B = if(P,A,B) -> (S <-> R), S |- R
Proof:  Logic and Axiom of Extensionality.

Lemma 2.
  A = if(P,A,B) -> (Q <-> T), T |- P -> Q
Proof:  Logic and Axiom of Extensionality.

Here's a simple example that illustrates how it works.  Suppose we have
a deduction
  Ord A |- Tr A
which means, "Assume A is an ordinal class.  Then A is a transitive class."
Note that A is a class variable that may be substituted with any class
expression, so this is really a deduction scheme.

We want to convert this to a proof of the theorem (scheme)
  |- Ord A -> Tr A.

The catch is that we must be able to prove "Ord A" for at least one
object A (and this is what makes it weaker than the ordinary Deduction
Theorem).  However it is easy to prove |- Ord 0 (the empty set is
ordinal).  (For a typical textbook "theorem," i.e. deduction, there is
usually at least one object satisfying each hypothesis, otherwise the
theorem would not be very useful.  We can always go back to the standard
Deduction Theorem for those hypotheses where this is not the case.)
Continuing with the example:

Equality axioms (and Extensionality) yield
  |- A = if(Ord A, A, 0) -> (Ord A <-> Ord if(Ord A, A, 0))  (1)
  |- 0 = if(Ord A, A, 0) -> (Ord 0 <-> Ord if(Ord A, A, 0))  (2)
From (1), (2) and |- Ord 0, Lemma 1 yields
  |- Ord if(Ord A, A, 0)                                       (3)
From (3) and substituting if(Ord A, A, 0) for
A in the original deduction,
  |- Tr if(Ord A, A, 0)                                        (4)
Equality axioms (and Extensionality) yield
  |- A = if(Ord A, A, 0) -> (Tr A <-> Tr if(Ord A, A, 0))    (5)
From (4) and (5), Lemma 2 yields
  |- Ord A -> Tr A                                               (Q.E.D.)
$)


  $( Declare new constant symbols. $)
  $c if $.  $( Conditional operator (was "ded" for "deduction class"). $)
  $c , $.  $( Comma (also used for unordered pair notation later) $)

  $( Extend class notation to include the conditional operator.  See ~ df-if
     for a description.  (In older databases this was denoted "ded".) $)
  cif $a class if ( ph , A , B ) $.

  ${
    $d x ph $.  $d x A $.  $d x B $.
    $( Define the conditional operator.  Read ` if ( ph , A , B ) ` as "if
       ` ph ` then ` A ` else ` B ` ."  See ~ iftrue and ~ iffalse for its
       values.  In mathematical literature, this operator is rarely defined
       formally but is implicit in informal definitions such as "let f(x)=0 if
       x=0 and 1/x otherwise."  (In older versions of this database, this
       operator was denoted "ded" and called the "deduction class.")

       An important use for us is in conjunction with the weak deduction
       theorem, which converts a hypothesis into an antecedent.  In that role,
       ` A ` is a class variable in the hypothesis and ` B ` is a class
       (usually a constant) that makes the hypothesis true when it is
       substituted for ` A ` .  See ~ dedth for the main part of the weak
       deduction theorem, ~ elimhyp to eliminate a hypothesis, and ~ keephyp to
       keep a hypothesis.  See the Deduction Theorem link on the Metamath Proof
       Explorer Home Page for a description of the weak deduction theorem. $)
    df-if $a |- if ( ph , A , B ) =
                 { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.  $d x C $.
    $( An alternate definition of the conditional operator ~ df-if with one
       fewer connectives (but probably less intuitive to understand). $)
    dfif2 $p |- if ( ph , A , B ) =
                 { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } $=
      ( cif cv wcel wa wn wo cab wi df-if df-or orcom iman imbi1i 3bitr4i 
      abbii eqtri ) ACDEBFZCGAHZUADGZAIHZJZBKUCALZUBLZBKABCDMUEUGBUDUBJUDIZUBLU
      EUGUDUBNUBUDOUFUHUBUCAPQRST $.
      $( [30-Jan-2006] $)

    $( Equality theorem for conditional operator.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    ifeq1 $p |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) $=
      ( vx wceq cv wcel wi wa cab cif eleq2 anbi1d imbi2d abbidv dfif2 3eqtr4g 
      ) BCFZEGZDHAIZTBHZAJZIZEKUATCHZAJZIZEKABDLACDLSUDUGESUCUFUASUBUEABCTMNOPA
      EBDQAECDQR $.
      $( [26-Jun-2011] $) $( [1-Sep-2004] $)

    $( Equality theorem for conditional operator.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    ifeq2 $p |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) $=
      ( vx wceq cv wcel wi wa cab cif eleq2 imbi1d abbidv dfif2 3eqtr4g ) BCFZE
      GZBHZAIZSDHAJZIZEKSCHZAIZUBIZEKADBLADCLRUCUFERUAUEUBRTUDABCSMNNOAEDBPAEDC
      PQ $.
      $( [26-Jun-2011] $) $( [1-Sep-2004] $)

    $( Value of the conditional operator when its first argument is true.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    iftrue $p |- ( ph -> if ( ph , A , B ) = A ) $=
      ( vx cv wcel wi wa cab cif dedlem0a abbi2dv dfif2 syl6reqr ) ABDEZCFZAGOB
      FZAHGZDIABCJARDBAQPKLADBCMN $.
      $( [26-Jun-2011] $) $( [15-May-1999] $)

    $( Value of the conditional operator when its first argument is false. $)
    iffalse $p |- ( -. ph -> if ( ph , A , B ) = B ) $=
      ( vx wn cv wcel wa wo cab cif dedlemb abbi2dv df-if syl6reqr ) AEZCDFZBGZ
      AHQCGZPHIZDJABCKPTDCARSLMADBCNO $.
      $( [2-Sep-2004] $) $( [14-Aug-1999] $)
  $}

  $( Equality theorem for conditional operators. $)
  ifeq12 $p |- ( ( A = B /\ C = D ) ->
                if ( ph , A , C ) = if ( ph , B , D ) ) $=
    ( wceq cif ifeq1 ifeq2 sylan9eq ) BCFDEFABDGACDGACEGABCDHADECIJ $.
    $( [1-Sep-2004] $)

  ${
    ifeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for conditional operator. $)
    ifeq1d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( wceq cif ifeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [16-Feb-2005] $)

    $( Equality deduction for conditional operator. $)
    ifeq2d $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( wceq cif ifeq2 syl ) ACDGBECHBEDHGFBCDEIJ $.
      $( [16-Feb-2005] $)
  $}

  $( Equivalence theorem for conditional operators.  (Contributed by Raph
     Levien, 15-Jan-2004.) $)
  ifbi $p |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) $=
    ( wb wa wn wo cif wceq dfbi3 iftrue eqcomd sylan9eq iffalse jaoi sylbi ) AB
    EABFZAGZBGZFZHACDIZBCDIZJZABKRUDUAABUBCUCACDLBUCCBCDLMNSTUBDUCACDOTUCDBCDOM
    NPQ $.
    $( [15-Jan-2004] $)

  ${
    ifbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalence deduction for conditional operators. $)
    ifbid $p |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) $=
      ( wb cif wceq ifbi syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [18-Apr-2005] $)
  $}

  ${
    ifbieq2i.1 $e |- ( ph <-> ps ) $.
    ifbieq2i.2 $e |- A = B $.
    $( Equivalence/equality inference for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2i $p |- if ( ph , C , A ) = if ( ps , C , B ) $=
      ( cif wb wceq ifbi ax-mp ifeq2 eqtri ) AECHZBECHZBEDHZABIOPJFABECKLCDJPQJ
      GBCDEMLN $.
      $( [20-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    ifbieq2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq2d.2 $e |- ( ph -> A = B ) $.
    $( Equivalence/equality deduction for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2d $p |- ( ph -> if ( ps , C , A ) = if ( ch , C , B ) ) $=
      ( cif ifbid ifeq2d eqtrd ) ABFDICFDICFEIABCFDGJACDEFHKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    ifbieq12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq12d.2 $e |- ( ph -> A = C ) $.
    ifbieq12d.3 $e |- ( ph -> B = D ) $.
    $( Equivalence deduction for conditional operators.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    ifbieq12d $p |- ( ph -> if ( ps , A , B ) = if ( ch , C , D ) ) $=
      ( cif ifbid ifeq1d ifeq2d 3eqtrd ) ABDEKCDEKCFEKCFGKABCDEHLACDFEIMACEGFJN
      O $.
      $( [22-Jun-2011] $) $( [2-Sep-2009] $)
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d z ph $.
    hbif.1 $e |- ( ph -> A. x ph ) $.
    hbif.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbif.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a conditional operator.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    hbif $p |- ( y e. if ( ph , A , B ) -> A. x y e. if ( ph , A , B ) ) $=
      ( vz cif cv wcel wi wa cab dfif2 ax-17 hbel hbim hban hbab hbxfr ) BCADEJ
      IKZELZAMZUCDLZANZMZIOAIDEPUHBICUEUGBUDABBCCUCECKUCLBQZHRFSUFABBCCUCDUIGRF
      TSUAUB $.
      $( [26-Jun-2011] $) $( [16-Feb-2005] $)
  $}

  ${
    sbif.1 $e |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) $.
    sbif.2 $e |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) $.
    $( Elimination of a conditional operator contained in a wff ` ps ` . $)
    elimif $p |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) $=
      ( wn wo wa exmid biantrur andir cif wceq wb iftrue syl pm5.32i iffalse 
      orbi12i 3bitri ) BAAIZJZBKABKZUDBKZJACKZUDDKZJUEBALMAUDBNUFUHUGUIABCAAEFO
      ZEPBCQAEFRGSTUDBDUDUJFPBDQAEFUAHSTUBUC $.
      $( [15-Feb-2005] $)
  $}

  ${
    ifboth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    ifboth.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    $( A wff ` th ` containing a conditional operator is true when both of its
       cases are true. $)
    ifboth $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa cif wceq wb iftrue eqcomd syl biimpa adantrr wn iffalse bicomd 
      biimpar adantrl pm2.61ian ) ABCIDABDCABDAEAEFJZKBDLAUDEAEFMNGOPQARZCDBUED
      CUEFUDKZDCLUEUDFAEFSNUFCDHTOUAUBUC $.
      $( [3-Sep-2006] $)
  $}

  $( Identical true and false arguments in the conditional operator. $)
  ifid $p |- if ( ph , A , A ) = A $=
    ( cif wceq iftrue iffalse pm2.61i ) AABBCBDABBEABBFG $.
    $( [18-Apr-2005] $)

  $( Expansion of an equality with a conditional operator. $)
  eqif $p |- ( A = if ( ph , B , C ) <->
             ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) $=
    ( cif wceq eqeq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [14-Feb-2005] $)

  $( Membership in a conditional operator. $)
  elif $p |- ( A e. if ( ph , B , C ) <->
             ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) $=
    ( cif wcel eleq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [14-Feb-2005] $)

  $( Membership of a conditional operator. $)
  ifel $p |- ( if ( ph , A , B ) e. C <->
             ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) $=
    ( cif wcel eleq1 elimif ) AABCEZDFBDFCDFBCIBDGICDGH $.
    $( [10-Sep-2005] $)

  $( Membership (closure) of a conditional operator. $)
  ifcl $p |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) $=
    ( wcel cif eleq1 ifboth ) ABDECDEABCFZDEBCBIDGCIDGH $.
    $( [4-Apr-2005] $)

  $( The possible values of a conditional operator.  (The proof was shortened
     by Andrew Salmon, 26-Jun-2011.) $)
  ifor $p |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) $=
    ( cif wceq wn iftrue con3i iffalse syl orri ) ABCDZBEZLCEZMFAFNAMABCGHABCIJ
    K $.
    $( [26-Jun-2011] $) $( [17-Jun-2007] $)

  $( Negating the first argument swaps the last two arguments of a conditional
     operator. $)
  ifswap $p |- if ( -. ph , A , B ) = if ( ph , B , A ) $=
    ( wn cif wceq notnot1 iffalse syl iftrue eqtr4d pm2.61i ) AADZBCEZACBEZFANC
    OAMDNCFAGMBCHIACBJKMNBOMBCJACBHKL $.
    $( [21-Jun-2007] $)

  ${
    $d x A $.  $d x B $.  $d x ph $.
    dedth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    dedth.2 $e |- ch $.
    $( Weak deduction theorem that eliminates a hypothesis ` ph ` , making it
       become an antecedent.  We assume that a proof exists for ` ph ` when the
       class variable ` A ` is replaced with a specific class ` B ` .  The
       hypothesis ` ch ` should be assigned to the inference, and the
       inference's hypothesis eliminated with ~ elimhyp .  If the inference has
       other hypotheses with class variable ` A ` , these can be kept by
       assigning ~ keephyp to them.  For more information, see the Deduction
       Theorem ~ http://us.metamath.org/mpegif/mmdeduction.html . $)
    dedth $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl mpbiri ) ABCGADADEHZIBCJAODADEKLFMN $.
      $( [15-May-1999] $)
  $}

  ${
    dedth2h.1 $e |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) $.
    dedth2h.2 $e |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) $.
    dedth2h.3 $e |- ta $.
    $( Weak deduction theorem eliminating two hypotheses.  This theorem is
       simpler to use than ~ dedth2v but requires that each hypothesis has
       exactly one class variable.  See also comments in ~ dedth . $)
    dedth2h $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wi cif wceq imbi2d dedth imp ) ABCABCMBDMFHFAFHNOCDBJPBDEGIKLQQR $.
      $( [15-May-1999] $)
  $}

  ${
    dedth3h.1 $e |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) $.
    dedth3h.2 $e |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) $.
    dedth3h.3 $e |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) $.
    dedth3h.4 $e |- ze $.
    $( Weak deduction theorem eliminating three hypotheses.  See comments in
       ~ dedth2h . $)
    dedth3h $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa wi cif wceq imbi2d dedth2h dedth 3impib ) ABCDABCRZDSUFESHKHAHKTUADE
      UFNUBBCEFGIJLMOPQUCUDUE $.
      $( [15-May-1999] $)
  $}

  ${
    dedth4h.1 $e |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) $.
    dedth4h.2 $e |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) $.
    dedth4h.3 $e |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) $.
    dedth4h.4 $e |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) $.
    dedth4h.5 $e |- rh $.
    $( Weak deduction theorem eliminating four hypotheses.  See comments in
       ~ dedth2h . $)
    dedth4h $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa wi cif wceq imbi2d dedth2h imp ) ABUCCDUCZEABUJEUDUJFUDUJGUDJKNOJAJN
      UEUFEFUJRUGKBKOUEUFFGUJSUGCDGHILMPQTUAUBUHUHUI $.
      $( [16-May-1999] $)
  $}

  ${
    dedth2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    dedth2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    dedth2v.3 $e |- th $.
    $( Weak deduction theorem for eliminating a hypothesis with 2 class
       variables.  Note: if the hypothesis can be separated into two
       hypotheses, each with one class variable, then ~ dedth2h is simpler to
       use.  See also comments in ~ dedth .  (The proof was shortened by Eric
       Schmidt, 28-Jul-2009.) $)
    dedth2v $p |- ( ph -> ps ) $=
      ( dedth2h anidms ) ABAABCDEFGHIJKLM $.
      $( [29-Jul-2009] $) $( [13-Aug-1999] $)
  $}

  ${
    dedth3v.1 $e |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) $.
    dedth3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    dedth3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    dedth3v.4 $e |- ta $.
    $( Weak deduction theorem for eliminating a hypothesis with 3 class
       variables.  See comments in ~ dedth2v .  (The proof was shortened by
       Eric Schmidt, 28-Jul-2009.) $)
    dedth3v $p |- ( ph -> ps ) $=
      ( dedth3h 3anidm12 anidms ) ABAABAAABCDEFGHIJKLMNOPQR $.
      $( [29-Jul-2009] $) $( [13-Aug-1999] $)
  $}

  ${
    dedth4v.1 $e |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) $.
    dedth4v.2 $e |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) $.
    dedth4v.3 $e |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) $.
    dedth4v.4 $e |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) $.
    dedth4v.5 $e |- et $.
    $( Weak deduction theorem for eliminating a hypothesis with 4 class
       variables.  See comments in ~ dedth2v .  (The proof was shortened by
       Eric Schmidt, 28-Jul-2009.) $)
    dedth4v $p |- ( ph -> ps ) $=
      ( wa dedth4h anidms ) ABAATBAAAABCDEFGHIJKLMNOPQRSUAUBUB $.
      $( [29-Jul-2009] $) $( [21-Apr-2007] $)
  $}

  ${
    elimhyp.1 $e |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) $.
    elimhyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) $.
    elimhyp.3 $e |- ch $.
    $( Eliminate a hypothesis containing class variable ` A ` when it is known
       for a specific class ` B ` .  For more information, see comments in
       ~ dedth . $)
    elimhyp $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl ibi wn iffalse mpbii pm2.61i ) ABABADADEI
      ZJABKATDADELMFNOAPZCBHUAETJCBKUATEADEQMGNRS $.
      $( [15-May-1999] $)
  $}

  ${
    elimhyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) $.
    elimhyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    elimhyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    elimhyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    elimhyp2v.5 $e |- ta $.
    $( Eliminate a hypothesis containing 2 class variables. $)
    elimhyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd ibi wn iffalse mpbii pm2.61i ) ACAC
      AABCAFAFHOZPABQAUGFAFHRSJTAGAGIOZPBCQAUHGAGIRSKTUAUBAUCZDCNUIDECUIHUGPDEQ
      UIUGHAFHUDSLTUIIUHPECQUIUHIAGIUDSMTUAUEUF $.
      $( [14-Aug-1999] $)
  $}

  ${
    elimhyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    elimhyp3v.7 $e |- et $.
    $( Eliminate a hypothesis containing 3 class variables. $)
    elimhyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd ibi wn iffalse mpbii pm2.61i ) ADA
      DAABCDAHAHKUAZUBABUCAUMHAHKUDUENUFAIAILUAZUBBCUCAUNIAILUDUEOUFAJAJMUAZUBC
      DUCAUOJAJMUDUEPUFUGUHAUIZEDTUPEFGDUPKUMUBEFUCUPUMKAHKUJUEQUFUPLUNUBFGUCUP
      UNLAILUJUERUFUPMUOUBGDUCUPUOMAJMUJUESUFUGUKUL $.
      $( [14-Aug-1999] $)
  $}

  ${
    elimhyp4v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp4v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp4v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp4v.4 $e |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) $.
    elimhyp4v.5 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp4v.6 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp4v.7 $e |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) $.
    elimhyp4v.8 $e |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) $.
    elimhyp4v.9 $e |- et $.
    $( Eliminate a hypothesis containing 4 class variables (for use with the
       weak deduction theorem ~ dedth ). $)
    elimhyp4v $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl bitrd 3bitrd ibi wn iffalse mpbii 
      pm2.61i ) ABABAADEBAACDAJAJMUGZUHACUIAUTJAJMUJUKRULAKAKNUGZUHCDUIAVAKAKNU
      JUKSULUMALALOUGZUHDEUIAVBLALOUJUKTULAPAPQUGZUHEBUIAVCPAPQUJUKUAULUNUOAUPZ
      FBUFVDFHIBVDFGHVDMUTUHFGUIVDUTMAJMUQUKUBULVDNVAUHGHUIVDVANAKNUQUKUCULUMVD
      OVBUHHIUIVDVBOALOUQUKUDULVDQVCUHIBUIVDVCQAPQUQUKUEULUNURUS $.
      $( [16-Apr-2005] $)
  $}

  ${
    elimel.1 $e |- B e. C $.
    $( Eliminate a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable. $)
    elimel $p |- if ( A e. C , A , B ) e. C $=
      ( wcel cif eleq1 elimhyp ) ACEZIABFZCEBCEABAJCGBJCGDH $.
      $( [15-May-1999] $)
  $}

  ${
    elimdhyp.1 $e |- ( ph -> ps ) $.
    elimdhyp.2 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    elimdhyp.3 $e |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) $.
    elimdhyp.4 $e |- th $.
    $( Version of ~ elimhyp where the hypothesis is deduced from the final
       antecedent.  See ~ ghomgrplem for an example of its use.  (Contributed
       by Paul Chapman, 25-Mar-2008.) $)
    elimdhyp $p |- ch $=
      ( cif wceq wb iftrue eqcomd syl mpbid wn iffalse mpbii pm2.61i ) ACABCGAE
      AEFKZLBCMAUBEAEFNOHPQARZDCJUCFUBLDCMUCUBFAEFSOIPTUA $.
      $( [25-Mar-2008] $)
  $}

  ${
    keephyp.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    keephyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    keephyp.3 $e |- ps $.
    keephyp.4 $e |- ch $.
    $( Transform a hypothesis ` ps ` that we want to keep (but contains the
       same class variable ` A ` used in the eliminated hypothesis) for use
       with the weak deduction theorem. $)
    keephyp $p |- th $=
      ( ifboth mp2an ) BCDIJABCDEFGHKL $.
      $( [15-May-1999] $)
  $}

  ${
    keephyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    keephyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    keephyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    keephyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    keephyp2v.5 $e |- ps $.
    keephyp2v.6 $e |- ta $.
    $( Keep a hypothesis containing 2 class variables (for use with the weak
       deduction theorem ~ dedth ). $)
    keephyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd mpbii wn iffalse pm2.61i ) ADABDOAB
      CDAGAGIQZRBCSAUHGAGITUAKUBAHAHJQZRCDSAUIHAHJTUALUBUCUDAUEZEDPUJEFDUJIUHRE
      FSUJUHIAGIUFUAMUBUJJUIRFDSUJUIJAHJUFUANUBUCUDUG $.
      $( [16-Apr-2005] $)
  $}

  ${
    keephyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) $.
    keephyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    keephyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    keephyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    keephyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    keephyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    keephyp3v.7 $e |- rh $.
    keephyp3v.8 $e |- et $.
    $( Keep a hypothesis containing 3 class variables. $)
    keephyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd mpbii wn iffalse pm2.61i ) ADAHDUA
      AHBCDAIAILUCZUDHBUEAUNIAILUFUGOUHAJAJMUCZUDBCUEAUOJAJMUFUGPUHAKAKNUCZUDCD
      UEAUPKAKNUFUGQUHUIUJAUKZEDUBUQEFGDUQLUNUDEFUEUQUNLAILULUGRUHUQMUOUDFGUEUQ
      UOMAJMULUGSUHUQNUPUDGDUEUQUPNAKNULUGTUHUIUJUM $.
      $( [27-Sep-1999] $)
  $}

  ${
    keepel.1 $e |- A e. C $.
    keepel.2 $e |- B e. C $.
    $( Keep a membership hypothesis for weak deduction theorem, when special
       case ` B e. C ` is provable. $)
    keepel $p |- if ( ph , A , B ) e. C $=
      ( wcel cif eleq1 keephyp ) ABDGCDGABCHZDGBCBKDICKDIEFJ $.
      $( [14-Aug-1999] $)
  $}

  ${
    dedex.1 $e |- A e. _V $.
    dedex.2 $e |- B e. _V $.
    $( Conditional operator existence. $)
    ifex $p |- if ( ph , A , B ) e. _V $=
      ( cvv keepel ) ABCFDEG $.
      $( [2-Sep-2004] $)
  $}

  ${
    $d A x y $.  $d B y $.  $d ph x y $.
    $( Conditional operator existence. $)
    ifexg $p |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. _V ) $=
      ( vx vy cv cif cvv wcel wceq ifeq1 eleq1d ifeq2 visset ifex vtocl2g ) AFH
      ZGHZIZJKABTIZJKABCIZJKFGBCDESBLUAUBJASBTMNTCLUBUCJATCBONASTFPGPQR $.
      $( [23-Nov-2012] $) $( [21-Mar-2011] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Power classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for power class. $)
  $c ~P $.  $( Calligraphic P $)

  $( Extend class notation to include power class.  (The tilde in the Metamath
     token is meant to suggest the calligraphic font of the P.) $)
  cpw $a class ~P A $.

  ${
    $d x A $.  $d y A $.  $d w x $.  $d w y $.  $d w A $.  $d w z $.  $d z x $.
    $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-pw .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    pwjust $p |- { x | x C_ A } = { y | y C_ A } $=
      ( vz cv wss cab sseq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINPD
      BMOCHIJ $.
      $( [29-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.
    $( Define power class.  Definition 5.10 of [TakeutiZaring] p. 17, but we
       also let it apply to proper classes, i.e. those that are not members of
       ` _V ` . $)
    df-pw $a |- ~P A = { x | x C_ A } $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for the power class. $)
    pweq $p |- ( A = B -> ~P A = ~P B ) $=
      ( vx wceq cv wss cab cpw sseq2 abbidv df-pw 3eqtr4g ) ABDZCEZAFZCGNBFZCGA
      HBHMOPCABNIJCAKCBKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.  $d B x $.
    ${
      elpw.1 $e |- A e. _V $.
      $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
      elpw $p |- ( A e. ~P B <-> A C_ B ) $=
        ( vx cv cpw wcel wss eleq1 sseq1 df-pw abeq2i vtoclb ) DEZBFZGNBHZAOGAB
        HDACNAOINABJPDODBKLM $.
        $( [31-Dec-1993] $)
    $}

    $( Membership in a power class.  Theorem 86 of [Suppes] p. 47.  See also
       ~ elpw2g . $)
    elpwg $p |- ( A e. C -> ( A e. ~P B <-> A C_ B ) ) $=
      ( vx cv cpw wcel wss wb wceq eleq1 sseq1 bibi12d visset elpw vtoclg ) DEZ
      BFZGZQBHZIARGZABHZIDACQAJSUATUBQARKQABLMQBDNOP $.
      $( [6-Aug-2000] $)
  $}

  $( Subset relation implied by membership in a power class. $)
  elpwi $p |- ( A e. ~P B -> A C_ B ) $=
    ( cpw wcel wss elpwg ibi ) ABCZDABEABHFG $.
    $( [17-Feb-2007] $)

  $( If ` A ` belongs to a part of ` C ` then ` A ` belongs to ` C ` .
     (Contributed by FL, 3-Aug-2009.) $)
  elelpwi $p |- ( ( A e. B /\ B e. ~P C ) -> A e. C ) $=
    ( cpw wcel elpwi sseld impcom ) BCDEZABEACEIBCABCFGH $.
    $( [4-Mar-2011] $) $( [2-Aug-2009] $)

  ${
    $d y z A $.  $d x y z $.
    hbpw.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for power class. $)
    hbpw $p |- ( y e. ~P A -> A. x y e. ~P A ) $=
      ( vz cv wss wal cpw wcel ax-17 hbel hbss visset elpw albii 3imtr4i ) BFZC
      GZSAHRCIJZTAHAERCEFZRJAKABBUACRUAJAKDLMRCBNOZTSAUBPQ $.
      $( [28-Oct-2003] $)
  $}

  ${
    pwid.1 $e |- A e. _V $.
    $( A set is a member of its power class.  Theorem 87 of [Suppes] p. 47. $)
    pwid $p |- A e. ~P A $=
      ( cpw wcel wss ssid elpw mpbir ) AACDAAEAFAABGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class. $)
    pwss $p |- ( ~P A C_ B <-> A. x ( x C_ A -> x e. B ) ) $=
      ( cpw wss cv wcel wi wal dfss2 df-pw abeq2i imbi1i albii bitri ) BDZCEAFZ
      PGZQCGZHZAIQBEZSHZAIAPCJTUBARUASUAAPABKLMNO $.
      $( [21-Jun-2009] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Unordered and ordered pairs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed. $)
  $c <. $.  $( Bracket (the period distinguishes it from 'less than') $)
  $c >. $.  $( Bracket (the period distinguishes it from 'greater than') $)

  $( Extend class notation to include singleton. $)
  csn $a class { A } $.
  $( Extend class notation to include unordered pair. $)
  cpr $a class { A , B } $.
  $( Extend class notation to include ordered pair. $)
  cop $a class <. A , B >. $.

  ${
    $d x A $.  $d y A $.  $d z x $.  $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-sn .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    snjust $p |- { x | x = A } = { y | y = A } $=
      ( vz cv wceq cab eqeq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINP
      DBMOCHIJ $.
      $( [29-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.
    $( Define the singleton of a class.  Definition 7.1 of [Quine] p. 48.  For
       convenience, it is well-defined for proper classes, i.e., those that are
       not elements of ` _V ` , although it is not very meaningful in this
       case.  For an alternate definition see ~ dfsn2 . $)
    df-sn $a |- { A } = { x | x = A } $.
  $}

  $( Define unordered pair of classes.  Definition 7.1 of [Quine] p. 48.  For a
     more traditional definition, but requiring a dummy variable, see
     ~ dfpr2 . $)
  df-pr $a |- { A , B } = ( { A } u. { B } ) $.

  $( Extend class notation to include unordered triplet. $)
  ctp $a class { A , B , C } $.

  $( Define unordered triple of classes.  Definition of [Enderton] p. 19. $)
  df-tp $a |- { A , B , C } = ( { A , B } u. { C } ) $.

  $( Kuratowski's ordered pair definition.  Definition 9.1 of [Quine] p. 58.
     For proper classes it is not meaningful but is well-defined and we allow
     it for convenience (see ~ opprc1 , ~ opprc1b , ~ opprc2 , and ~ opprc3 ).
     For the justifying theorem (for sets) see ~ opth .  There are other ways
     to define ordered pairs; the basic requirement is that two ordered pairs
     are equal iff their respective members are equal.  In 1914 Norbert Wiener
     gave the first successful definition ` <. A , B >. ` _2
     ` = { { { A } , (/) } , { { B } } } ` , justified by ~ opthwiener , which
     was simplified by Kazimierz Kuratowski in 1921 to our present definition.
     An even simpler definition ` <. A , B >. ` _3 ` = { A , { A , B } } ` is
     justified by ~ opthreg , but it requires the Axiom of Regularity for its
     justification and is not commonly used.  A definition that also works for
     proper classes is ` <. A , B >. ` _4
     ` = ( ( A X. { (/) } ) u. ( B X. { { (/) } } ) ) ` , justified by
     ~ opthprc .  If we restrict our sets to nonnegative integers, an ordered
     pair definition that involves only elementary arithmetic is provided by
     ~ nn0opthi .  Finally, an ordered pair of real numbers can be represented
     by a complex number as shown by ~ crui . $)
  df-op $a |- <. A , B >. = { { A } , { A , B } } $.

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for singletons.  Part of Exercise 4 of [TakeutiZaring]
       p. 15. $)
    sneq $p |- ( A = B -> { A } = { B } ) $=
      ( vx wceq cv cab csn eqeq2 abbidv df-sn 3eqtr4g ) ABDZCEZADZCFMBDZCFAGBGL
      NOCABMHICAJCBJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    sneqi.1 $e |- A = B $.
    $( Equality inference for singletons. $)
    sneqi $p |- { A } = { B } $=
      ( wceq csn sneq ax-mp ) ABDAEBEDCABFG $.
      $( [22-Jan-2004] $)
  $}

  ${
    sneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for singletons. $)
    sneqd $p |- ( ph -> { A } = { B } ) $=
      ( wceq csn sneq syl ) ABCEBFCFEDBCGH $.
      $( [22-Jan-2004] $)
  $}

  $( Alternate definition of singleton.  Definition 5.1 of [TakeutiZaring]
     p. 15. $)
  dfsn2 $p |- { A } = { A , A } $=
    ( cpr csn cun df-pr unidm eqtr2i ) AABACZHDHAAEHFG $.
    $( [24-Apr-1994] $)

  ${
    $d x A $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15. $)
    elsn $p |- ( x e. { A } <-> x = A ) $=
      ( cv wceq csn df-sn abeq2i ) ACBDABEABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of unordered pair.  Definition 5.1 of
       [TakeutiZaring] p. 15. $)
    dfpr2 $p |- { A , B } = { x | ( x = A \/ x = B ) } $=
      ( cpr csn cun cv wceq wo cab df-pr wcel elun elsn orbi12i bitri abbi2i 
      eqtri ) BCDBEZCEZFZAGZBHZUBCHZIZAJBCKUEAUAUBUALUBSLZUBTLZIUEUBSTMUFUCUGUD
      ABNACNOPQR $.
      $( [24-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15, generalized. $)
    elprg $p |- ( A e. D -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) $=
      ( vx cv wceq wo cpr eqeq1 orbi12d dfpr2 elab2g ) EFZBGZNCGZHABGZACGZHEABC
      IDNAGOQPRNABJNACJKEBCLM $.
      $( [13-Sep-1995] $)
  $}

  ${
    elpr.1 $e |- A e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cvv wcel cpr wceq wo wb elprg ax-mp ) AEFABCGFABHACHIJDABCEKL $.
      $( [13-Sep-1995] $)
  $}

  ${
    elpr2.1 $e |- B e. _V $.
    elpr2.2 $e |- C e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr2 $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cpr wcel wceq wo elprg ibi cvv wb eleq1 mpbiri jaoi syl ibir impbii ) 
      ABCFZGZABHZACHZIZUAUDABCTJKUDUAUDALGZUAUDMUBUEUCUBUEBLGDABLNOUCUECLGEACLN
      OPABCLJQRS $.
      $( [14-Oct-2005] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15 (generalized).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    elsncg $p |- ( A e. C -> ( A e. { B } <-> A = B ) ) $=
      ( vx cv wceq csn eqeq1 df-sn elab2g ) DEZBFABFDABGCKABHDBIJ $.
      $( [29-Jun-2011] $) $( [13-Sep-1995] $)
  $}

  ${
    elsnc.1 $e |- A e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15. $)
    elsnc $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsncg ax-mp ) ADEABFEABGHCABDIJ $.
      $( [13-Sep-1995] $)
  $}

  $( There is only one element in a singleton. $)
  elsni $p |- ( A e. { B } -> A = B ) $=
    ( csn wcel wceq elsncg ibi ) ABCZDABEABHFG $.
    $( [5-Jun-1994] $)

  $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
     p. 49. $)
  snidg $p |- ( A e. B -> A e. { A } ) $=
    ( wcel csn wceq eqid elsncg mpbiri ) ABCAADCAAEAFAABGH $.
    $( [28-Oct-2003] $)

  $( A class is a set iff it is a member of its singleton. $)
  snidb $p |- ( A e. _V <-> A e. { A } ) $=
    ( cvv wcel csn snidg elisset impbii ) ABCAADZCABEAHFG $.
    $( [5-Apr-2004] $)

  ${
    snid.1 $e |- A e. _V $.
    $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
       p. 49. $)
    snid $p |- A e. { A } $=
      ( cvv wcel csn snidb mpbi ) ACDAAEDBAFG $.
      $( [31-Dec-1993] $)
  $}

  $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
     p. 15.  This variation requires only that ` B ` , rather than ` A ` , be a
     set. $)
  elsnc2g $p |- ( B e. C -> ( A e. { B } <-> A = B ) ) $=
    ( wcel csn wceq elsni eleq1 snidg syl5cbir impbid2 ) BCDZABEZDZABFZABGONBMD
    LABMHBCIJK $.
    $( [28-Oct-2003] $)

  ${
    elsnc2.1 $e |- B e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15.  This variation requires only that ` B ` , rather than ` A ` , be
       a set. $)
    elsnc2 $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsnc2g ax-mp ) BDEABFEABGHCABDIJ $.
      $( [12-Jun-1994] $)
  $}

  ${
    $d A x $.  $d ps x $.
    rexsng.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted existential quantification over a singleton. $)
    rexsng $p |- ( A e. B -> ( E. x e. { A } ph <-> ps ) ) $=
      ( wcel cv wceq wa wex csn wrex ceqsexgv df-rex elsn anbi1i exbii bitri 
      syl5bb ) DEGCHZDIZAJZCKZBACDLZMZABCDEFNUFUAUEGZAJZCKUDACUEOUHUCCUGUBACDPQ
      RST $.
      $( [29-Jan-2012] $)
  $}

  ${
    $d A x $.  $d ps x $.
    rexsn.1 $e |- A e. _V $.
    rexsn.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted existential quantification over a singleton.  (Contributed by
       Jeff Madsen, 5-Jan-2011.) $)
    rexsn $p |- ( E. x e. { A } ph <-> ps ) $=
      ( cvv wcel csn wrex wb rexsng ax-mp ) DGHACDIJBKEABCDGFLM $.
      $( [5-Jan-2011] $)
  $}

  ${
    eltp.1 $e |- A e. _V $.
    $( A member of an unordered triple of classes is one of them.  Special case
       of Exercise 1 of [TakeutiZaring] p. 17. $)
    eltp $p |- ( A e. { B , C , D } <-> ( A = B \/ A = C \/ A = D ) ) $=
      ( ctp wcel wceq wo w3o cpr csn cun df-tp eleq2i elun elpr elsnc orbi12i 
      3bitri df-3or bitr4i ) ABCDFZGZABHZACHZIZADHZIZUEUFUHJUDABCKZDLZMZGAUJGZA
      UKGZIUIUCULABCDNOAUJUKPUMUGUNUHABCEQADERSTUEUFUHUAUB $.
      $( [8-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Alternate definition of unordered triple of classes.  Special case of
       Definition 5.3 of [TakeutiZaring] p. 16. $)
    dftp2 $p |- { A , B , C } = { x | ( x = A \/ x = B \/ x = C ) } $=
      ( cv wceq w3o ctp visset eltp abbi2i ) AEZBFLCFLDFGABCDHLBCDAIJK $.
      $( [8-Apr-1994] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    hbpr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hppr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for unordered pairs. $)
    hbpr $p |- ( y e. { A , B } -> A. x y e. { A , B } ) $=
      ( cv wceq wo wal cpr wcel hbeleq hbor visset elpr albii 3imtr4i ) BGZCHZS
      DHZIZUBAJSCDKLZUCAJTUAAABCEMABDFMNSCDBOPZUCUBAUDQR $.
      $( [14-Nov-1995] $)
  $}

  $( Membership of a conditional operator in an unordered pair. $)
  ifpr $p |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. { A , B } ) $=
    ( cvv wcel cif cpr wa ifcl wceq wo ifor elprg mpbiri syl elisset syl2an ) 
    BFGZCFGZABCHZBCIGZBDGCEGTUAJUBFGZUCABCFKUDUCUBBLUBCLMABCNUBBCFOPQBDRCERS $.
    $( [17-Jun-2007] $)

  ${
    $d x A $.  $d x B $.
    $( Convert a quantification over a pair to a conjunction. $)
    ralprg $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. { A , B } ph <->
                ( [ A / x ] ph /\ [ B / x ] ph ) ) ) $=
      ( wcel wa wsbc cv wceq wi wal cpr wral sbc6g bi2anan9 df-ral wo visset 
      elpr imbi1i jaob bitri albii 19.26 3bitri syl6rbbr ) CEGZDFGZHABCIZABDIZH
      BJZCKZALZBMZUMDKZALZBMZHZABCDNZOZUIUKUPUJULUSABCEPABDFPQVBUMVAGZALZBMUOUR
      HZBMUTABVARVDVEBVDUNUQSZALVEVCVFAUMCDBTUAUBUNAUQUCUDUEUOURBUFUGUH $.
      $( [17-Sep-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    ralpr.1 $e |- A e. _V $.
    ralpr.2 $e |- B e. _V $.
    $( Convert a quantification over a pair to a conjunction. $)
    ralpr $p |- ( A. x e. { A , B } ph <->
                ( [ A / x ] ph /\ [ B / x ] ph ) ) $=
      ( cvv wcel cpr wral wsbc wa wb ralprg mp2an ) CGHDGHABCDIJABCKABDKLMEFABC
      DGGNO $.
      $( [18-Sep-2011] $) $( [3-Jun-2007] $)

    $( Convert an existential quantification over a pair to a disjunction. $)
    rexpr $p |- ( E. x e. { A , B } ph <->
                ( [ A / x ] ph \/ [ B / x ] ph ) ) $=
      ( wn cpr wral wsbc wa wrex wo ralpr cvv wcel wb sbcng ax-mp anbi12i 
      bitri notbii dfrex2 oran 3bitr4i ) AGZBCDHZIZGABCJZGZABDJZGZKZGABUGLUIUKM
      UHUMUHUFBCJZUFBDJZKUMUFBCDEFNUNUJUOULCOPUNUJQEABCORSDOPUOULQFABDORSTUAUBA
      BUGUCUIUKUDUE $.
      $( [3-Jun-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    raltp.1 $e |- A e. _V $.
    raltp.2 $e |- B e. _V $.
    raltp.3 $e |- C e. _V $.
    $( Convert a quantification over a triple to a conjunction. $)
    raltp $p |- ( A. x e. { A , B , C } ph <->
                ( [ A / x ] ph /\ [ B / x ] ph /\ [ C / x ] ph ) ) $=
      ( cv ctp wcel wi wal wceq w3a wral wsbc w3o visset eltp imbi1i 3jaob 
      bitri albii 19.26-3an df-ral sbc6 3anbi123i 3bitr4i ) BIZCDEJZKZALZBMZUJC
      NZALZBMZUJDNZALZBMZUJENZALZBMZOZABUKPABCQZABDQZABEQZOUNUPUSVBOZBMVDUMVHBU
      MUOURVARZALVHULVIAUJCDEBSTUAUOAURVAUBUCUDUPUSVBBUEUCABUKUFVEUQVFUTVGVCABC
      FUGABDGUGABEHUGUHUI $.
      $( [13-Sep-2011] $)
  $}

  ${
    $d x A $.
    ralsn.1 $e |- A e. _V $.
    $( MAY BE REVISED - derive from ralsng? $)
    $( Convert a quantification over a singleton to a substitution. $)
    ralsn $p |- ( A. x e. { A } ph <-> [ A / x ] ph ) $=
      ( csn wral cpr wsbc wa dfsn2 raleqi ralpr anidm 3bitri ) ABCEZFABCCGZFABC
      HZQIQABOPCJKABCCDDLQMN $.
      $( [27-Apr-2009] $)
  $}

  ${
    $d x A $.
    $( Substitution expressed in terms of quantification over a singleton. $)
    ralsng $p |- ( A e. B -> ( A. x e. { A } ph <-> [ A / x ] ph ) ) $=
      ( wcel wsbc cv wceq wi wal csn wral sbc6g df-ral elsn imbi1i albii bitri 
      syl6rbbr ) CDEABCFBGZCHZAIZBJZABCKZLZABCDMUETUDEZAIZBJUCABUDNUGUBBUFUAABC
      OPQRS $.
      $( [14-May-2009] $) $( [14-Dec-2005] $)

    $( MAY BE REVISED - make obsolete; use ralsng instead - also,
       shorten posn w/ ralsn or ralsng $)
    $( Substitution expressed in terms of quantification over a singleton.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcsng $p |- ( A e. B -> ( [ A / x ] ph <-> A. x e. { A } ph ) ) $=
      ( wcel csn wral wsbc ralsng bicomd ) CDEABCFGABCHABCDIJ $.
      $( [29-Jun-2011] $) $( [14-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbsn.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for singletons. $)
    hbsn $p |- ( y e. { A } -> A. x y e. { A } ) $=
      ( csn cpr dfsn2 hbpr hbxfr ) ABCECCFCGABCCDDHI $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d x y $.
    $( Distribute proper substitution through the singleton of a class.
       ~ csbsng is derived from the virtual deduction proof ~ csbsngVD .
       (Contributed by Alan Sare, 10-Nov-2012. ) $)
    csbsng $p |- ( A e. C -> [_ A / x ]_ { B } = { [_ A / x ]_ B } ) $=
      ( vy wcel csn csb cv wceq cab wsbc df-sn csbeq2i csbabg sbceq2dig abbidv 
      3eqtrd syl6eqr ) BDFZABCGZHZEIZABCHZJZEKZUDGTUBABUCCJZEKZHUGABLZEKUFABUAU
      HDECMNUGAEBDOTUIUEEABUCCDPQREUDMS $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Intersection with the singleton of a non-member is disjoint.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    disjsn $p |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) $=
      ( vx cv wcel csn wn wi wal wceq wa wex cin c0 con2b elsn imbi1i imnan 
      3bitri albii alnex bitri disj1 df-clel notbii 3bitr4i ) CDZAEZUGBFZEZGHZC
      IZUGBJZUHKZCLZGZAUIMNJBAEZGULUNGZCIUPUKURCUKUJUHGZHUMUSHURUHUJOUJUMUSCBPQ
      UMUHRSTUNCUAUBCAUIUCUQUOCBAUDUEUF $.
      $( [29-Jun-2011] $) $( [22-May-1998] $)
  $}

  $( Intersection of distinct singletons is disjoint. $)
  disjsn2 $p |- ( A =/= B -> ( { A } i^i { B } ) = (/) ) $=
    ( wne csn wcel wn cin c0 wceq elsni eqcomd necon3ai disjsn sylibr ) ABCBADZ
    EZFOBDGHIPABPBABAJKLOBMN $.
    $( [2-Jun-2007] $) $( [25-May-1998] $)

  ${
    $d x A $.
    $( The singleton of a proper class (one that doesn't exist) is the empty
       set.  Theorem 7.2 of [Quine] p. 48. $)
    snprc $p |- ( -. A e. _V <-> { A } = (/) ) $=
      ( vx csn c0 wceq cvv wcel cv wex wn elsn exbii neq0 isset 3bitr4i 
      con1bii ) ACZDEZAFGZBHZQGZBITAEZBIRJSUAUBBBAKLBQMBANOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x B $.
    r19.12sn.1 $e |- A e. _V $.
    $( Special case of ~ r19.12 where its converse holds. $)
    r19.12sn $p |- ( E. x e. { A } A. y e. B ph
                <-> A. y e. B E. x e. { A } ph ) $=
      ( wral cpr wrex wsbc csn wo rexpr oridm cvv wcel wb sbcralg ax-mp 3bitri 
      wceq dfsn2 rexeq ralbii 3bitr4i ) ACEGZBDDHZIZABDJZCEGZUFBDKZIZABUKIZCEGU
      HUFBDJZUNLUNUJUFBDDFFMUNNDOPUNUJQFABCDEORSTUKUGUAZULUHQDUBZUFBUKUGUCSUMUI
      CEUMABUGIZUIUILUIUOUMUQQUPABUKUGUCSABDDFFMUINTUDUE $.
      $( [19-May-2008] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Condition where a restricted class abstraction is a singleton. $)
    rabsn $p |- ( B e. A -> { x e. A | x = B } = { B } ) $=
      ( wcel cv wceq wa cab crab csn eleq1 pm5.32ri baib abbidv df-rab df-sn 
      3eqtr4g ) CBDZAEZBDZSCFZGZAHUAAHUAABICJRUBUAAUBRUAUATRSCBKLMNUAABOACPQ $.
      $( [28-May-2006] $)
  $}

  ${
    $d x y z $.  $d y ph $.
    $( Another way to express existential uniqueness of a wff: its class
       abstraction is a singleton. $)
    euabsn $p |- ( E! x ph <-> E. x { x | ph } = { x } ) $=
      ( vy vz cab cv csn wceq wex wb wal weu wcel abeq1 elsn bibi2i albii 
      bitri exbii ax-17 hbab1 hbeq sneq eqeq2d cbvex df-eu 3bitr4ri ) ABEZCFZGZ
      HZCIABFZUIHZJZBKZCIUHULGZHZBIABLUKUOCUKAULUJMZJZBKUOABUJNUSUNBURUMABUIOPQ
      RSUQUKBCUQCTBCDUHUJABCUADFUJMBTUBUMUPUJUHULUIUCUDUEABCUFUG $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( Two ways to express " ` A ` is a singleton." $)
    eusn $p |- ( E! x x e. A <-> E. x A = { x } ) $=
      ( cv wcel weu cab csn wceq wex euabsn abid2 eqeq1i exbii bitri ) ACZBDZAE
      PAFZOGZHZAIBRHZAIPAJSTAQBRABKLMN $.
      $( [30-Oct-2010] $)
  $}

  $( Commutative law for unordered pairs. $)
  prcom $p |- { A , B } = { B , A } $=
    ( csn cun cpr uncom df-pr 3eqtr4i ) ACZBCZDJIDABEBAEIJFABGBAGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for unordered pairs. $)
  preq1 $p |- ( A = B -> { A , C } = { B , C } ) $=
    ( wceq csn cun cpr sneq uneq1d df-pr 3eqtr4g ) ABDZAEZCEZFBEZNFACGBCGLMONAB
    HIACJBCJK $.
    $( [29-Mar-1998] $)

  $( Equality theorem for unordered pairs. $)
  preq2 $p |- ( A = B -> { C , A } = { C , B } ) $=
    ( wceq cpr preq1 prcom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for unordered pairs. $)
  preq12 $p |- ( ( A = C /\ B = D ) -> { A , B } = { C , D } ) $=
    ( wceq cpr preq1 preq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [19-Oct-2012] $)

  ${
    preq1i.1 $e |- A = B $.
    $( Equality inference for unordered pairs. $)
    preq1i $p |- { A , C } = { B , C } $=
      ( wceq cpr preq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [19-Oct-2012] $)

    $( Equality inference for unordered pairs. $)
    preq2i $p |- { C , A } = { C , B } $=
      ( wceq cpr preq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [19-Oct-2012] $)

    ${
      preq12i.2 $e |- C = D $.
      $( Equality inference for unordered pairs. $)
      preq12i $p |- { A , C } = { B , D } $=
        ( wceq cpr preq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [19-Oct-2012] $)
    $}
  $}

  ${
    preq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for unordered pairs. $)
    preq1d $p |- ( ph -> { A , C } = { B , C } ) $=
      ( wceq cpr preq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [19-Oct-2012] $)

    $( Equality deduction for unordered pairs. $)
    preq2d $p |- ( ph -> { C , A } = { C , B } ) $=
      ( wceq cpr preq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [19-Oct-2012] $)

    ${
      preq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for unordered pairs. $)
      preq12d $p |- ( ph -> { A , C } = { B , D } ) $=
        ( wceq cpr preq12 syl11anc ) ABCHDEHBDICEIHFGBDCEJK $.
        $( [19-Oct-2012] $)
    $}
  $}

  $( Equality theorem for unordered triples. $)
  tpeq1 $p |- ( A = B -> { A , C , D } = { B , C , D } ) $=
    ( wceq cpr csn cun ctp preq1 uneq1d df-tp 3eqtr4g ) ABEZACFZDGZHBCFZPHACDIB
    CDINOQPABCJKACDLBCDLM $.
    $( [13-Sep-2011] $)

  $( Equality theorem for unordered triples. $)
  tpeq2 $p |- ( A = B -> { C , A , D } = { C , B , D } ) $=
    ( wceq cpr csn cun ctp preq2 uneq1d df-tp 3eqtr4g ) ABEZCAFZDGZHCBFZPHCADIC
    BDINOQPABCJKCADLCBDLM $.
    $( [13-Sep-2011] $)

  $( Equality theorem for unordered triples. $)
  tpeq3 $p |- ( A = B -> { C , D , A } = { C , D , B } ) $=
    ( wceq cpr csn cun ctp sneq uneq2d df-tp 3eqtr4g ) ABEZCDFZAGZHOBGZHCDAICDB
    INPQOABJKCDALCDBLM $.
    $( [13-Sep-2011] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Rotation of the elements of an unordered triple.  (Contributed by Alan
       Sare, 24-Oct-2011.) $)
    tprot $p |- { A , B , C } = { B , C , A } $=
      ( vx ctp cv wceq w3o cab dftp2 3orrot abbii eqtri eqtr4i ) ABCEZDFZBGZPCG
      ZPAGZHZDIZBCAEOSQRHZDIUADABCJUBTDSQRKLMDBCAJN $.
      $( [24-Oct-2011] $)
  $}

  $( An unordered pair contains its first member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid1g $p |- ( A e. C -> A e. { A , B } ) $=
    ( wcel cpr wceq wo eqid orci elprg mpbiri ) ACDAABEDAAFZABFZGLMAHIAABCJK $.
    $( [7-Nov-2008] $)

  $( An unordered pair contains its second member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid2g $p |- ( B e. C -> B e. { A , B } ) $=
    ( wcel cpr prid1g prcom syl6eleq ) BCDBBAEABEBACFBAGH $.
    $( [7-Nov-2008] $)

  ${
    prid1.1 $e |- A e. _V $.
    $( An unordered pair contains its first member.  Part of Theorem 7.6 of
       [Quine] p. 49. $)
    prid1 $p |- A e. { A , B } $=
      ( cvv wcel cpr prid1g ax-mp ) ADEAABFECABDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    prid2.1 $e |- B e. _V $.
    $( An unordered pair contains its second member.  Part of Theorem 7.6 of
       [Quine] p. 49. $)
    prid2 $p |- B e. { A , B } $=
      ( cpr prid1 prcom eleqtri ) BBADABDBACEBAFG $.
      $( [5-Aug-1993] $)
  $}

  $( A proper class vanishes in an unordered pair. $)
  prprc1 $p |- ( -. A e. _V -> { A , B } = { B } ) $=
    ( cvv wcel wn csn c0 wceq cpr snprc cun uneq1 df-pr uncom un0 eqtr2i 
    3eqtr4g sylbi ) ACDEAFZGHZABIZBFZHAJTSUBKGUBKZUAUBSGUBLABMUCUBGKUBGUBNUBOPQ
    R $.
    $( [5-Aug-1993] $)

  $( A proper class vanishes in an unordered pair. $)
  prprc2 $p |- ( -. B e. _V -> { A , B } = { A } ) $=
    ( cvv wcel wn cpr csn prprc1 prcom syl5eq ) BCDEBAFAGABFBAHABIJ $.
    $( [22-Mar-2006] $)

  $( An unordered pair containing two proper classes is the empty set. $)
  prprc $p |- ( ( -. A e. _V /\ -. B e. _V ) -> { A , B } = (/) ) $=
    ( cvv wcel wn cpr csn c0 prprc1 wceq snprc biimpi sylan9eq ) ACDEBCDEZABFBG
    ZHABINOHJBKLM $.
    $( [22-Mar-2006] $)

  ${
    tpid1.1 $e |- A e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid1 $p |- A e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix1 ax-mp eltp mpbir ) AABCEFAAGZABGZACGZHZNQA
      INOPJKAABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  ${
    tpid2.1 $e |- B e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid2 $p |- B e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix2 ax-mp eltp mpbir ) BABCEFBAGZBBGZBCGZHZOQB
      IONPJKBABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.  $d x ps $.
    $( Closed theorem form of ~ tpid3 .  This proof was automatically generated
       from the virtual deduction proof ~ tpid3gVD using a translation
       program.  (Contributed by Alan Sare, 24-Oct-2011.) $)
    tpid3g $p |- ( A e. B -> A e. { C , D , A } ) $=
      ( vx wcel cv wceq wex ctp elex wi wal w3o cab 3mix3 a1i abid syl6ibr 
      dftp2 eleq2i eleq1 mpbidi 19.21aiv 19.23v sylib mpd ) ABFZEGZAHZEIZACDAJZ
      FZEABKUHUJUMLZEMUKUMLUHUNEUJUIULFZUMUHUHUJUIUICHZUIDHZUJNZEOZFZUOUHUJURUT
      UJURLUHUJUPUQPQURERSULUSUIECDATUASUIAULUBUCUDUJUMEUEUFUG $.
      $( [24-Oct-2011] $)
  $}

  ${
    tpid3.1 $e |- C e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid3 $p |- C e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix3 ax-mp eltp mpbir ) CABCEFCAGZCBGZCCGZHZPQC
      IPNOJKCABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  $( The singleton of a set is not empty. $)
  snnzg $p |- ( A e. B -> { A } =/= (/) ) $=
    ( wcel csn c0 wne snidg ne0i syl ) ABCAADZCJEFABGJAHI $.
    $( [14-Dec-2008] $)

  ${
    snnz.1 $e |- A e. _V $.
    $( The singleton of a set is not empty. $)
    snnz $p |- { A } =/= (/) $=
      ( cvv wcel csn c0 wne snnzg ax-mp ) ACDAEFGBACHI $.
      $( [2-Apr-2007] $) $( [10-Apr-1994] $)
  $}

  ${
    prnz.1 $e |- A e. _V $.
    $( A pair containing a set is not empty. $)
    prnz $p |- { A , B } =/= (/) $=
      ( cpr wcel c0 wne prid1 ne0i ax-mp ) AABDZEKFGABCHKAIJ $.
      $( [17-Jan-2007] $) $( [9-Apr-1994] $)
  $}

  ${
    tpnz.1 $e |- A e. _V $.
    $( A triplet containing a set is not empty. $)
    tpnz $p |- { A , B , C } =/= (/) $=
      ( ctp wcel c0 wne tpid1 ne0i ax-mp ) AABCEZFLGHABCDILAJK $.
      $( [13-Apr-2007] $) $( [10-Apr-1994] $)
  $}

  ${
    $d A x $.  $d B x $.
    snss.1 $e |- A e. _V $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49. $)
    snss $p |- ( A e. B <-> { A } C_ B ) $=
      ( vx cv csn wcel wi wal wceq wss elsn imbi1i albii dfss2 clel2 3bitr4ri 
      ) DEZAFZGZRBGZHZDIRAJZUAHZDISBKABGUBUDDTUCUADALMNDSBODABCPQ $.
      $( [5-Aug-1993] $)
  $}

  $( Membership in a set with an element removed. $)
  eldifsn $p |- ( A e. ( B \ { C } ) <-> ( A e. B /\ A =/= C ) ) $=
    ( csn cdif wcel wn wa wne eldif elsncg necon3bbid pm5.32i bitri ) ABCDZEFAB
    FZAOFZGZHPACIZHABOJPRSPQACACBKLMN $.
    $( [10-Oct-2007] $)

  ${
    $d A x $.  $d B x $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49. $)
    snssg $p |- ( A e. C -> ( A e. B <-> { A } C_ B ) ) $=
      ( vx cv wcel csn wss eleq1 wceq sneq sseq1d visset snss vtoclbg ) DEZBFPG
      ZBHABFAGZBHDACPABIPAJQRBPAKLPBDMNO $.
      $( [22-Jul-2001] $)

    $( An element not in a set can be removed without affecting the set.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    difsn $p |- ( -. A e. B -> ( B \ { A } ) = B ) $=
      ( vx wcel wn csn cdif cv wne wa simpl wceq eleq1 biimpcd necon3bd com12 
      ancld impbid2 eldifsn syl5bb eqrdv ) ABDZEZCBAFGZBUCCHZBDZUEAIZJZUFUEUDDU
      CUHUFUFUGKUCUFUGUFUCUGUFUBUEAUEALUFUBUEABMNOPQRUEBASTUA $.
      $( [29-Jun-2011] $) $( [16-Mar-2006] $)

    $( Removal of a singleton from an unordered pair.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    difprsn $p |- ( { A , B } \ { A } ) C_ { B } $=
      ( vx cpr csn cdif cv wcel wn wa wceq wo visset elpr elsn notbii anbi12i 
      biorf biimparc sylbi eldif 3imtr4i ssriv ) CABDZAEZFZBEZCGZUDHZUHUEHZIZJZ
      UHBKZUHUFHUHUGHULUHAKZUMLZUNIZJUMUIUOUKUPUHABCMNUJUNCAOPQUPUMUOUNUMRSTUHU
      DUEUACBOUBUC $.
      $( [29-Jun-2011] $) $( [16-Mar-2006] $)
  $}

  $( The singleton of an element of a class is a subset of the class. $)
  snssi $p |- ( A e. B -> { A } C_ B ) $=
    ( wcel csn wss snssg ibi ) ABCADBEABBFG $.
    $( [6-Jun-1994] $)

  ${
    snssd.1 $e |- ( ph -> A e. B ) $.
    $( First-order logic and set theory.  (Contributed by Jonathan Ben-Naim
       12-Jun-2011). $)
    snssd $p |- ( ph -> { A } C_ B ) $=
      ( wcel csn wss wb snssg syl mpbid ) ABCEZBFCGZDALLMHDBCCIJK $.
      $( [12-Jun-2011] $) $( [3-Jun-2011] $)
  $}

  $( If we remove a single element from a class then put it back in, we end up
     with the original class. $)
  difsnid $p |- ( B e. A -> ( ( A \ { B } ) u. { B } ) = A ) $=
    ( wcel csn cdif cun wss wceq snssi undif sylib uncom syl5eq ) BACZBDZAOEZFZ
    APOFNOAGQAHBAIOAJKPOLM $.
    $( [2-Oct-2006] $)

  $( Note that ` x ` is a dummy variable in the proof below. $)
  $( Compute the power set of the empty set.  Theorem 89 of [Suppes] p. 47.
     (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  pw0 $p |- ~P (/) = { (/) } $=
    ( vx cv c0 wss cab wceq cpw csn ss0b abbii df-pw df-sn 3eqtr4i ) ABZCDZAENC
    FZAECGCHOPANIJACKACLM $.
    $( [29-Jun-2011] $) $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Compute the power set of the power set of the empty set.  (See ~ pw0 for
       the power set of the empty set.)  Theorem 90 of [Suppes] p. 48.
       Although this theorem is a special case of ~ pwsn , we have chosen to
       show a direct elementary proof. $)
    pwpw0 $p |- ~P { (/) } = { (/) , { (/) } } $=
      ( vx vy cv c0 csn wss cab wceq wo cpw cpr wn wa wcel wi wal dfss2 elsn 
      imbi2i albii bitri wex exintr neq0 syl5ib exancom df-clel bitr4i snssi 
      sylbi syl6 anc2li eqss syl6ibr orrd 0ss sseq1 mpbiri eqimss jaoi impbii 
      abbii df-pw dfpr2 3eqtr4i ) ACZDEZFZAGVFDHZVFVGHZIZAGVGJDVGKVHVKAVHVKVHVI
      VJVHVILZVHVGVFFZMVJVHVLVMVHBCZVFNZVNDHZOZBPZVLVMOVHVOVNVGNZOZBPVRBVFVGQVT
      VQBVSVPVOBDRSTUAVRVLVOVPMBUBZVMVRVOBUBWAVLVOVPBUCBVFUDUEWADVFNZVMWAVPVOMB
      UBWBVOVPBUFBDVFUGUHDVFUIUJUKUJULVFVGUMUNUOVIVHVJVIVHDVGFVGUPVFDVGUQURVFVG
      USUTVAVBAVGVCADVGVDVE $.
      $( [28-Sep-2006] $) $( [7-Aug-1994] $)
  $}

  $( A singleton is a subset of an unordered pair containing its member.  (The
     proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  snsspr1 $p |- { A } C_ { A , B } $=
    ( csn cpr wss cun ssun1 df-pr sseq2i mpbir ) ACZABDZEKKBCZFZEKMGLNKABHIJ $.
    $( [29-Jun-2011] $) $( [27-Aug-2004] $)

  $( A singleton is a subset of an unordered pair containing its member. $)
  snsspr2 $p |- { B } C_ { A , B } $=
    ( csn cpr snsspr1 prcom sseqtri ) BCBADABDBAEBAFG $.
    $( [2-May-2009] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    prss.1 $e |- A e. _V $.
    prss.2 $e |- B e. _V $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    prss $p |- ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) $=
      ( csn wss wa cun wcel cpr unss snss anbi12i df-pr sseq1i 3bitr4i ) AFZCGZ
      BFZCGZHRTIZCGACJZBCJZHABKZCGRTCLUCSUDUAACDMBCEMNUEUBCABOPQ $.
      $( [29-Jun-2011] $) $( [30-May-1994] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    prssg $p |- ( ( A e. R /\ B e. S ) ->
                ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) $=
      ( wcel wa csn wss cpr snssg bi2anan9 cun unss df-pr sseq1i bitr4i syl6bb 
      ) ADFZBEFZGACFZBCFZGAHZCIZBHZCIZGZABJZCIZSUAUDTUBUFACDKBCEKLUGUCUEMZCIUIU
      CUECNUHUJCABOPQR $.
      $( [29-Jun-2011] $) $( [22-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subsets of a singleton. $)
    sssn $p |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) $=
      ( vx csn wss c0 wceq wo wn wa wcel cv wex wb ssel elsni syl6 eleq1 ibd 
      19.23adv neq0 syl5ib snssi anc2li eqss syl6ibr orrd 0ss sseq1 mpbiri 
      eqimss jaoi impbii ) ABDZEZAFGZAUNGZHUOUPUQUOUPIZUOUNAEZJUQUOURUSUOURBAKZ
      USUOCLZAKZCMUTURUOVBUTCUOVBUTUOVBVABGZVBUTNUOVBVAUNKVCAUNVAOVABPQVABARQST
      CAUAUBBAUCQUDAUNUEUFUGUPUOUQUPUOFUNEUNUHAFUNUIUJAUNUKULUM $.
      $( [24-Apr-2004] $)

    $( Two ways to express that a nonempty set equals a singleton. $)
    eqsn $p |- ( A =/= (/) -> ( A = { B } <-> A. x e. A x = B ) ) $=
      ( c0 wne csn wceq wss cv wral eqimss wn wo sssn biimpi ord df-ne syl5ib 
      com12 impbid2 wcel dfss3 elsn ralbii bitri syl6bb ) BDEZBCFZGZBUHHZAIZCGZ
      ABJZUGUIUJBUHKUJUGUIUJBDGZLUIUGUJUNUIUJUNUIMBCNOPBDQRSTUJUKUHUAZABJUMABUH
      UBUOULABACUCUDUEUF $.
      $( [15-Dec-2007] $)
  $}

  ${
    $( The subsets of a pair. $)
    sspr $p |- ( A C_ { B , C } <->
     ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) $=
      ( cpr wss c0 wceq csn wo wn wa simpll wcel cdif difsn adantl ssdif 
      difprsn a1i sstrd adantr eqsstr3d ex sssn syl6ib con1d imp pm2.45 anim1i 
      ioran sylibr sylan2 anassrs prcom sseq2i sylbi prssg ibi syl11anc eqssd 
      orrd 0ss sseq1 mpbiri snsspr1 jaoi snsspr2 eqimss impbii ) ABCDZEZAFGZABH
      ZGZIZACHZGZAVJGZIZIVKVOVSVKVOJZVSVKVTKZVQVRWAVQJZVRWAWBKZAVJVKVTWBLWCBAMZ
      CAMZVJAEZVKVTWBWDVKVLVQIZJZWDVTWBKZVKWHWDVKWDWGVKWDJZAVPEZWGVKWJWKVKWJKAA
      VMNZVPWJWLAGVKBAOPVKWLVPEWJVKWLVJVMNZVPAVJVMQWMVPEVKBCRSTUAUBUCACUDUEUFUG
      WIVLJZWBKWHVTWNWBVLVNUHUIVLVQUJUKULUMWAWEWBVKVTWEVKWEVOVKWEJZAVMEZVOVKWOW
      PVKWOKZAAVPNZVMWOWRAGVKCAOPWQWRCBDZVPNZVMVKWRWTEZWOVKAWSEXAVJWSABCUNUOAWS
      VPQUPUAWTVMEWQCBRSTUBUCABUDUEUFUGUAWDWEKWFBCAAAUQURUSUTUCVAUCVAVOVKVSVLVK
      VNVLVKFVJEVJVBAFVJVCVDVNVKVMVJEBCVEAVMVJVCVDVFVQVKVRVQVKVPVJEBCVGAVPVJVCV
      DAVJVHVFVFVI $.
      $( [16-Mar-2006] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.  $d D x $.
    tpss.1 $e |- A e. _V $.
    tpss.2 $e |- B e. _V $.
    tpss.3 $e |- C e. _V $.
    $( A triplet of elements of a class is a subset of the class.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpss $p |- ( ( A e. D /\ B e. D /\ C e. D ) <-> { A , B , C } C_ D ) $=
      ( cpr wss csn wa cun wcel w3a ctp unss df-3an prss snss anbi12i bitri 
      df-tp sseq1i 3bitr4i ) ABHZDIZCJZDIZKZUEUGLZDIADMZBDMZCDMZNZABCOZDIUEUGDP
      UNUKULKZUMKUIUKULUMQUPUFUMUHABDEFRCDGSTUAUOUJDABCUBUCUD $.
      $( [29-Jun-2011] $) $( [9-Apr-1994] $)
  $}

  ${
    sneqr.1 $e |- A e. _V $.
    $( If the singletons of two sets are equal, the two sets are equal.  Part
       of Exercise 4 of [TakeutiZaring] p. 15. $)
    sneqr $p |- ( { A } = { B } -> A = B ) $=
      ( csn wceq wcel snid eleq2 mpbii elsnc sylib ) ADZBDZEZAMFZABENALFOACGLMA
      HIABCJK $.
      $( [27-Aug-1993] $)

    $( If a singleton is a subset of another, their members are equal. $)
    snsssn $p |- ( { A } C_ { B } -> A = B ) $=
      ( csn wss c0 wceq wo sssn wne wn snnz df-ne mpbi pm2.21i sneqr jaoi 
      sylbi ) ADZBDZESFGZSTGZHABGZSBIUAUCUBUAUCSFJUAKACLSFMNOABCPQR $.
      $( [28-May-2006] $)
  $}

  ${
    $d x A $.
    $( The singleton of a class is a subset of its power class. $)
    snsspw $p |- { A } C_ ~P A $=
      ( vx csn cpw cv wceq wss wcel eqimss elsn df-pw abeq2i 3imtr4i ssriv ) BA
      CZADZBEZAFQAGZQOHQPHQAIBAJRBPBAKLMN $.
      $( [5-Aug-1993] $)
  $}


  ${
    $d x A $.  $d x B $.  $d x C $.
    prsspw.1 $e |- A e. _V $.
    prsspw.2 $e |- B e. _V $.
    $( An unordered pair belongs to the power class of a class iff each member
       belongs to the class.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    prsspw $p |- ( { A , B } C_ ~P C <-> ( A C_ C /\ B C_ C ) ) $=
      ( cpr cpw wss wcel wa prss elpw anbi12i bitr3i ) ABFCGZHAOIZBOIZJACHZBCHZ
      JABODEKPRQSACDLBCELMN $.
      $( [29-Jun-2011] $) $( [10-Dec-2003] $)
  $}

  ${
    preqr1.1 $e |- A e. _V $.
    preqr1.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same second element, the first elements are equal. $)
    preqr1 $p |- ( { A , C } = { B , C } -> A = B ) $=
      ( cpr wceq wcel wo prid1 eleq2 mpbii elpr sylib mpbiri eqcom eqeq2 
      oplem1 ) ACFZBCFZGZABGZACGZBAGZBCGZUAATHZUBUCIUAASHUFACDJSTAKLABCDMNUABSH
      ZUDUEIUAUGBTHBCEJSTBKOBACEMNABPACBQR $.
      $( [18-Oct-1995] $)
  $}

  ${
    preqr2.1 $e |- A e. _V $.
    preqr2.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same first element, the second elements are equal. $)
    preqr2 $p |- ( { C , A } = { C , B } -> A = B ) $=
      ( cpr wceq prcom eqeq12i preqr1 sylbi ) CAFZCBFZGACFZBCFZGABGLNMOCAHCBHIA
      BCDEJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    preq12b.1 $e |- A e. _V $.
    preq12b.2 $e |- B e. _V $.
    preq12b.3 $e |- C e. _V $.
    preq12b.4 $e |- D e. _V $.
    $( Equality relationship for two unordered pairs. $)
    preq12b $p |- ( { A , B } = { C , D } <->
                   ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) $=
      ( cpr wceq wa wo wcel prid1 eleq2 mpbii elpr sylib preq1 eqeq1d preqr2 
      syl6bi com12 ancld wi prcom eqeq2i sylbi orim12d mpd preq12 syl6eq 
      sylan9eq jaoi impbii ) ABIZCDIZJZACJZBDJZKZADJZBCJZKZLZURUSVBLZVEURAUQMZV
      FURAUPMVGABENUPUQAOPACDEQRURUSVAVBVDURUSUTUSURUTUSURCBIZUQJUTUSUPVHUQACBS
      TBDCFHUAUBUCUDURVBVCURUPDCIZJZVBVCUEUQVIUPCDUFUGVBVJVCVBVJDBIZVIJVCVBUPVK
      VIADBSZTBCDFGUAUBUCUHUDUIUJVAURVDABCDUKVBVCUPBDIZUQVBUPVKVMVLDBUFULBCDSUM
      UNUO $.
      $( [17-Oct-1996] $)

    $( Equality of two unordered pairs. $)
    prel12 $p |- ( -. A = B -> ( { A , B } = { C , D } <->
                   ( A e. { C , D } /\ B e. { C , D } ) ) ) $=
      ( wceq wn cpr wcel wa prid1 eleq2 mpbii prid2 jca wo wi eqeq2 notbid 
      orel2 syl6bi com3l imp ancrd orel1 orim12d elpr orcom bitri preq12b 
      3imtr4g ex syl5ib imp3a impbid2 ) ABIZJZABKZCDKZIZAVBLZBVBLZMVCVDVEVCAVAL
      VDABENVAVBAOPVCBVALVEABFQVAVBBOPRUTVDVEVCUTACIZADIZSZVEVCTZVDUTVHVIUTVHMZ
      BDIZBCIZSZVFVKMZVGVLMZSVEVCVJVKVNVLVOVJVKVFUTVHVKVFTVKUTVHVFVKUTVGJVHVFTV
      KUSVGBDAUAUBVGVFUCUDUEUFUGVJVLVGUTVHVLVGTVLUTVHVGVLUTVFJVHVGTVLUSVFBCAUAU
      BVFVGUHUDUEUFUGUIVEVLVKSVMBCDFUJVLVKUKULABCDEFGHUMUNUOACDEUJUPUQUR $.
      $( [17-Oct-1996] $)

    $( A way to represent ordered pairs using unordered pairs with distinct
       members. $)
    opthpr $p |- ( A =/= D ->
                 ( { A , B } = { C , D } <-> ( A = C /\ B = D ) ) ) $=
      ( wne wceq wa wo cpr idd wn wi df-ne pm2.21 sylbi imp3a jaod orc impbid1 
      preq12b syl5bb ) ADIZACJBDJKZADJZBCJZKZLZUGABMCDMJUFUKUGUFUGUGUJUFUGNUFUH
      UIUGUFUHOUHUIUGPZPADQUHULRSTUAUGUJUBUCABCDEFGHUDUE $.
      $( [27-Mar-2007] $)
  $}

  ${
    preqsn.1 $e |- A e. _V $.
    preqsn.2 $e |- B e. _V $.
    preqsn.3 $e |- C e. _V $.
    $( Equivalence for a pair equal to a singleton. $)
    preqsn $p |- ( { A , B } = { C } <-> ( A = B /\ B = C ) ) $=
      ( cpr csn wceq wa wo dfsn2 eqeq2i preq12b oridm eqtr3 simpr jca eqtr 
      impbii bitri 3bitri ) ABGZCHZIUCCCGZIACIZBCIZJZUHKZABIZUGJZUDUEUCCLMABCCD
      EFFNUIUHUKUHOUHUKUHUJUGABCPUFUGQRUKUFUGABCSUJUGQRTUAUB $.
      $( [3-Jun-2008] $)
  $}

  $( Equality theorem for ordered pairs. $)
  opeq1 $p |- ( A = B -> <. A , C >. = <. B , C >. ) $=
    ( wceq csn cpr cop sneq preq1 preq12d df-op 3eqtr4g ) ABDZAEZACFZFBEZBCFZFA
    CGBCGMNPOQABHABCIJACKBCKL $.
    $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs. $)
  opeq2 $p |- ( A = B -> <. C , A >. = <. C , B >. ) $=
    ( wceq csn cpr cop preq2 preq2d df-op 3eqtr4g ) ABDZCEZCAFZFMCBFZFCAGCBGLNO
    MABCHICAJCBJK $.
    $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs. $)
  opeq12 $p |- ( ( A = C /\ B = D ) -> <. A , B >. = <. C , D >. ) $=
    ( wceq cop opeq1 opeq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [28-May-1995] $)

  ${
    opeq1i.1 $e |- A = B $.
    $( Equality inference for ordered pairs. $)
    opeq1i $p |- <. A , C >. = <. B , C >. $=
      ( wceq cop opeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Dec-2006] $)

    $( Equality inference for ordered pairs. $)
    opeq2i $p |- <. C , A >. = <. C , B >. $=
      ( wceq cop opeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Dec-2006] $)

    ${
      opeq12i.2 $e |- C = D $.
      $( Equality inference for ordered pairs.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.) $)
      opeq12i $p |- <. A , C >. = <. B , D >. $=
        ( wceq cop opeq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [16-Dec-2006] $)
    $}
  $}

  ${
    opeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for ordered pairs. $)
    opeq1d $p |- ( ph -> <. A , C >. = <. B , C >. ) $=
      ( wceq cop opeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Dec-2006] $)

    $( Equality deduction for ordered pairs. $)
    opeq2d $p |- ( ph -> <. C , A >. = <. C , B >. ) $=
      ( wceq cop opeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Dec-2006] $)

    ${
      opeq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for ordered pairs.  (The proof was shortened by
         Andrew Salmon, 29-Jun-2011.) $)
      opeq12d $p |- ( ph -> <. A , C >. = <. B , D >. ) $=
        ( wceq cop opeq12 syl11anc ) ABCHDEHBDICEIHFGBDCEJK $.
        $( [29-Jun-2011] $) $( [16-Dec-2006] $)
    $}
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    hbop.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbop.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for ordered pairs. $)
    hbop $p |- ( y e. <. A , B >. -> A. x y e. <. A , B >. ) $=
      ( cop csn cpr df-op hbsn hbpr hbxfr ) ABCDGCHZCDIZICDJABNOABCEKABCDEFLLM 
      $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d y z B $.  $d y z A $.  $d y ph $.  $d x y z $.
    hbopd.1 $e |- ( ph -> A. x ph ) $.
    hbopd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbopd.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbop . $)
    hbopd $p |- ( ph -> ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ) $=
      ( vz cv wcel wal cab cop wi hba1 hbab hbop a1i wceq 19.21aiv abidhb syl 
      opeq1d opeq2d eqtrd eleq2d albid 3imtr3d ) ACJZIJZDKZBLZIMZUKEKZBLZIMZNZK
      ZUSBLZUJDENZKZVBBLUSUTOABCUNUQUMBICULBPQUPBICUOBPQRSAURVAUJAURDUQNVAAUNDU
      QAUJDKZVCBLOZCLUNDTAVDCGUABCIDUBUCUDAUQEDAUJEKZVEBLOZCLUQETAVFCHUABCIEUBU
      CUEUFUGZAUSVBBFVGUHUI $.
      $( [4-Feb-2008] $)
  $}

  ${
    $d B x $.  $d ps x $.
    ralunsn.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Restricted quantification over the union of a set and a singleton, using
       implicit substitution.  (Contributed by Paul Chapman, 17-Nov-2012.) $)
    ralunsn $p |- ( B e. C -> ( A. x e. ( A u. { B } ) ph <->
                                ( A. x e. A ph /\ ps ) ) ) $=
      ( wcel csn cun wral wa wb ralunb a1i wsbc ralsng sbcieg bitrd anbi2d ) EF
      HZACDEIZJKZACDKZACUBKZLZUDBLUCUFMUAACDUBNOUAUEBUDUAUEACEPBACEFQABCEFGRSTS
      $.
      $( [17-Nov-2012] $)
  $}

  ${
    $d A x $.  $d B x y $.  $d C x $.  $d ch x $.  $d ps y $.  $d th x $.
    2ralunsn.1 $e |- ( x = B -> ( ph <-> ch ) ) $.
    2ralunsn.2 $e |- ( y = B -> ( ph <-> ps ) ) $.
    2ralunsn.3 $e |- ( x = B -> ( ps <-> th ) ) $.
    $( Double restricted quantification over the union of a set and a
       singleton, using implicit substitution.  (Contributed by Paul Chapman,
       17-Nov-2012.) $)
    2ralunsn $p |- ( B e. C ->
                     ( A. x e. ( A u. { B } ) A. y e. ( A u. { B } ) ph <->
                       ( ( A. x e. A A. y e. A ph /\ A. x e. A ps ) /\
                         ( A. y e. A ch /\ th ) ) ) ) $=
      ( wcel csn cun wral wa ralunsn ralbidv cv wceq anbi12d r19.26 anbi1i 
      syl6bb bitrd ) HIMZAFGHNOZPZEUHPAFGPZBQZEUHPZUJEGPBEGPQZCFGPZDQZQZUGUIUKE
      UHABFGHIKRSUGULUKEGPZUOQUPUKUOEGHIETHUAZUJUNBDURACFGJSLUBRUQUMUOUJBEGUCUD
      UEUF $.
      $( [17-Nov-2012] $)
  $}

  $( Expansion of an ordered pair when the first member is a proper class.  See
     also ~ opprc1b , ~ opprc2 , ~ opprc3 . $)
  opprc1 $p |- ( -. A e. _V -> <. A , B >. = { (/) , { B } } ) $=
    ( cvv wcel wn csn cpr c0 cop wceq snprc preq1 sylbi prprc1 preq2d eqtrd 
    df-op syl5eq ) ACDEZAFZABGZGZHBFZGZABISUBHUAGZUDSTHJUBUEJAKTHUALMSUAUCHABNO
    PABQR $.
    $( [10-Apr-2004] $)

  $( A property of an ordered pair of proper classes (due to our particular
     definition of ordered pair). $)
  opprc2 $p |- ( -. B e. _V -> <. A , B >. = <. A , A >. ) $=
    ( cvv wcel wn csn cpr cop prprc1 prcom dfsn2 3eqtr3g preq2d df-op 3eqtr4g 
    ) BCDEZAFZABGZGQAAGZGABHAAHPRSQPBAGQRSBAIBAJAKLMABNAANO $.
    $( [15-Nov-1994] $)

  ${
    $d x A $.  $d x B $.
    $( The power set of a singleton. $)
    pwsn $p |- ~P { A } = { (/) , { A } } $=
      ( vx cv csn wss cab c0 wceq wo cpw cpr sssn abbii df-pw dfpr2 3eqtr4i ) 
      BCZADZEZBFQGHQRHIZBFRJGRKSTBQALMBRNBGROP $.
      $( [5-Jun-2006] $)

    $d x y $.  $d y A $.
    $( MAY BE REVISED - should we keep this? $)
    $( The power set of a singleton (direct proof). $)
    pwsnALT $p |- ~P { A } = { (/) , { A } } $=
      ( vx vy cv csn wss cab c0 wceq wo cpw cpr wn wa wcel wi wal dfss2 elsn 
      imbi2i albii bitri wex exintr neq0 syl5ib df-clel exancom bitr2i snssi 
      sylbi syl6 anc2li eqss syl6ibr orrd 0ss sseq1 mpbiri eqimss jaoi impbii 
      abbii df-pw dfpr2 3eqtr4i ) BDZAEZFZBGVGHIZVGVHIZJZBGVHKHVHLVIVLBVIVLVIVJ
      VKVIVJMZVIVHVGFZNVKVIVMVNVICDZVGOZVOAIZPZCQZVMVNPVIVPVOVHOZPZCQVSCVGVHRWA
      VRCVTVQVPCASTUAUBVSVMVPVQNCUCZVNVSVPCUCWBVMVPVQCUDCVGUEUFWBAVGOZVNWCVQVPN
      CUCWBCAVGUGVQVPCUHUIAVGUJUKULUKUMVGVHUNUOUPVJVIVKVJVIHVHFVHUQVGHVHURUSVGV
      HUTVAVBVCBVHVDBHVHVEVF $.
      $( [8-Aug-2008] $) $( [5-Jun-2006] $)

    $( The power set of an unordered pair. $)
    pwpr $p |- ~P { A , B } = ( { (/) , { A } } u. { { B } , { A , B } } ) $=
      ( vx cpr cpw cv wss cab c0 csn cun wcel df-pw wo wceq visset elpr 
      orbi12i elun sspr 3bitr4ri abbii abid2 3eqtri ) ABDZECFZUEGZCHUFIAJZDZBJZ
      UEDZKZLZCHULCUEMUGUMCUFUILZUFUKLZNUFIOUFUHONZUFUJOUFUEONZNUMUGUNUPUOUQUFI
      UHCPZQUFUJUEURQRUFUIUKSUFABTUAUBCULUCUD $.
      $( [1-May-2009] $)
  $}

  ${
    $d x y $.
    $( Compute the power set of the power set of the power set of the empty
       set.  (See also ~ pw0 and ~ pwpw0 .) $)
    pwpwpw0 $p |- ~P { (/) , { (/) } } =
                ( { (/) , { (/) } } u. { { { (/) } } , { (/) , { (/) } } } ) $=
      ( c0 csn pwpr ) AABC $.
      $( [29-Jul-2011] $) $( [2-May-2009] $)
  $}

  ${

    $( The power class of the universe is the universe.  Exercise 4.12(d) of
       [Mendelson] p. 235. $)
    pwv $p |- ~P _V = _V $=
      ( vx cvv cpw cv wcel wss ssv visset elpw mpbir 2th eqriv ) ABCZBADZMEZNBE
      ONBFNGNBAHZIJPKL $.
      $( [14-Sep-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                       The union of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class union symbol. $)
  $c U. $. $( Big cup $)

  $( Extend class notation to include the union of a class (read:  'union
     ` A ` ') $)
  cuni $a class U. A $.

  ${
    $d x y A $.
    $( Define the union of a class i.e. the collection of all members of the
       members of the class.  Definition 5.5 of [TakeutiZaring] p. 16. $)
    df-uni $a |- U. A = { x | E. y ( x e. y /\ y e. A ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class union. $)
    dfuni2 $p |- U. A = { x | E. y e. A x e. y } $=
      ( cuni cv wcel wa wex cab wrex df-uni exancom df-rex bitr4i abbii eqtri 
      ) CDAEBEZFZQCFZGBHZAIRBCJZAIABCKTUAATSRGBHUARSBLRBCMNOP $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x A y $.  $d x B y $.
    $( Membership in class union. $)
    eluni $p |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) $=
      ( vy cuni wcel cvv cv wa wex elisset adantr 19.23aiv wceq eleq1 anbi1d 
      exbidv df-uni elab2g pm5.21nii ) BCEZFBGFZBAHZFZUCCFZIZAJZBUAKUFUBAUDUBUE
      BUCKLMDHZUCFZUEIZAJUGDBUAGUHBNZUJUFAUKUIUDUEUHBUCOPQDACRST $.
      $( [22-May-1994] $)

    $( Membership in class union.  Restricted quantifier version. $)
    eluni2 $p |- ( A e. U. B <-> E. x e. B A e. x ) $=
      ( cv wcel wa wex cuni wrex exancom eluni df-rex 3bitr4i ) BADZEZNCEZFAGPO
      FAGBCHEOACIOPAJABCKOACLM $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in class union. $)
    elunii $p |- ( ( A e. B /\ B e. C ) -> A e. U. C ) $=
      ( vx wcel wa cv wex cuni wceq eleq2 eleq1 anbi12d cla4egv anabsi7 eluni 
      sylibr ) ABEZBCEZFZADGZEZUACEZFZDHZACIERSUEUDTDBCUABJUBRUCSUABAKUABCLMNOD
      ACPQ $.
      $( [24-Mar-1995] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    hbuni.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for union.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbuni $p |- ( y e. U. A -> A. x y e. U. A ) $=
      ( vz cv wcel wa wex wal cuni ax-17 hblem hban hbex eluni albii 3imtr4i ) 
      BFZEFZGZTCGZHZEIZUDAJSCKGZUEAJUCAEUAUBAUAALABECDMNOESCPZUEUDAUFQR $.
      $( [27-Aug-2011] $) $( [30-Dec-1996] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.  $d x y z $.
    $( Distribute proper substitution through the union of a class. ~ csbunig
       is derived from the virtual deduction proof ~ csbunigVD .  (Contributed
       by Alan Sare, 10-Nov-2012. ) $)
    csbunig $p |- ( A e. C -> [_ A / x ]_ U. B = U. [_ A / x ]_ B ) $=
      ( vz vy wcel cuni csb wel cv wa wex cab wsbc df-uni csbeq2i csbabg 
      sbcexg sbcang sbcg sbcel2g anbi12d bitrd exbidv abbidv 3eqtrd syl6eqr ) 
      BDGZABCHZIZEFJZFKZABCIZGZLZFMZENZUNHUIUKABULUMCGZLZFMZENZIVAABOZENURABUJV
      BDEFCPQVAAEBDRUIVCUQEUIVCUTABOZFMUQUTFABDSUIVDUPFUIVDULABOZUSABOZLUPULUSA
      BDTUIVEULVFUOULABDUAABUMCDUBUCUDUEUDUFUGEFUNPUH $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for class union.  Exercise 15 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    unieq $p |- ( A = B -> U. A = U. B ) $=
      ( vy vx wceq cv wcel wrex cab cuni rexeq abbidv dfuni2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
      $( [29-Jun-2011] $) $( [10-Aug-1993] $)
  $}

  ${
    unieqi.1 $e |- A = B $.
    $( Inference of equality of two class unions. $)
    unieqi $p |- U. A = U. B $=
      ( wceq cuni unieq ax-mp ) ABDAEBEDCABFG $.
      $( [30-Aug-1993] $)
  $}

  ${
    unieqd.1 $e |- ( ph -> A = B ) $.
    $( Deduction of equality of two class unions. $)
    unieqd $p |- ( ph -> U. A = U. B ) $=
      ( wceq cuni unieq syl ) ABCEBFCFEDBCGH $.
      $( [21-Apr-1995] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership in union of a class abstraction. $)
    eluniab $p |- ( A e. U. { x | ph } <-> E. x ( A e. x /\ ph ) ) $=
      ( vy cab cuni wcel cv wa wex eluni ax-17 hbab1 hban wceq eleq2 eleq1 
      anbi12d abid anbi2i syl6bb cbvex bitri ) CABEZFGCDHZGZUEUDGZIZDJCBHZGZAIZ
      BJDCUDKUHUKDBUFUGBUFBLABDMNUKDLUEUIOZUHUJUIUDGZIUKULUFUJUGUMUEUICPUEUIUDQ
      RUMAUJABSTUAUBUC $.
      $( [11-Aug-1994] $)

    $( Membership in union of a class abstraction. $)
    elunirab $p |- ( A e. U. { x e. B | ph } <->
                   E. x e. B ( A e. x /\ ph ) ) $=
      ( cv wcel wa cab cuni wex crab wrex eluniab df-rab unieqi eleq2i df-rex 
      an12 exbii bitri 3bitr4i ) CBEZDFZAGZBHZIZFCUBFZUDGZBJZCABDKZIZFUGAGZBDLZ
      UDBCMUKUFCUJUEABDNOPUMUCULGZBJUIULBDQUNUHBUCUGARSTUA $.
      $( [4-Oct-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    unipr.1 $e |- A e. _V $.
    unipr.2 $e |- B e. _V $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16. $)
    unipr $p |- U. { A , B } = ( A u. B ) $=
      ( vx vy cv wcel wo cab cpr wa wex cun cuni wceq 19.43 visset elpr anbi2i 
      andi bitri exbii clel3 exancom orbi12i 3bitr4ri abbii df-un df-uni 
      3eqtr4ri ) EGZAHZULBHZIZEJULFGZHZUPABKZHZLZFMZEJABNUROUOVAEUQUPAPZLZUQUPB
      PZLZIZFMVCFMZVEFMZIVAUOVCVEFQUTVFFUTUQVBVDIZLVFUSVIUQUPABFRSTUQVBVDUAUBUC
      UMVGUNVHUMVBUQLFMVGFULACUDVBUQFUEUBUNVDUQLFMVHFULBDUDVDUQFUEUBUFUGUHEABUI
      EFURUJUK $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16. $)
    uniprg $p |- ( ( A e. C /\ B e. D ) -> U. { A , B } = ( A u. B ) ) $=
      ( vx vy cv cpr cuni cun wceq preq1 unieqd uneq1 eqeq12d preq2 uneq2 
      visset unipr vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAA
      KZUDUGUEUHULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBERFRST 
      $.
      $( [25-Aug-2006] $)
  $}

  ${
    unisn.1 $e |- A e. _V $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine]
       p. 53. $)
    unisn $p |- U. { A } = A $=
      ( csn cuni cpr cun dfsn2 unieqi unipr unidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine]
       p. 53. $)
    unisng $p |- ( A e. B -> U. { A } = A ) $=
      ( vx cv csn cuni wceq sneq unieqd id eqeq12d visset unisn vtoclg ) CDZEZF
      ZOGAEZFZAGCABOAGZQSOATPROAHITJKOCLMN $.
      $( [13-Aug-2002] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbeqel.1 $e |- A e. _V $.
    hbeqel.2 $e |- ( y = A -> A. x y = A ) $.
    $( If ` x ` is effectively bound in ` y = A ` , then it is effectively
       bound in ` y e. A ` .  This is the other direction of ~ hbeleq , showing
       the two conditions are equivalent when ` A ` is a set. $)
    hbeqel $p |- ( y e. A -> A. x y e. A ) $=
      ( csn cuni unisn eqcomi cv wceq wal wcel elsn albii 3imtr4i hbuni hbxfr 
      ) ABCCFZGZTCCDHIABSBJZCKZUBALUASMZUCALEBCNZUCUBAUDOPQR $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The class union of the union of two classes.  Theorem 8.3 of [Quine]
       p. 53. $)
    uniun $p |- U. ( A u. B ) = ( U. A u. U. B ) $=
      ( vx vy cun cuni cv wcel wa wex wo 19.43 elun anbi2i andi bitri exbii 
      eluni orbi12i 3bitr4i eqriv ) CABEZFZAFZBFZEZCGZDGZHZUHUBHZIZDJZUGUDHZUGU
      EHZKZUGUCHUGUFHUIUHAHZIZUIUHBHZIZKZDJUQDJZUSDJZKULUOUQUSDLUKUTDUKUIUPURKZ
      IUTUJVCUIUHABMNUIUPUROPQUMVAUNVBDUGARDUGBRSTDUGUBRUGUDUEMTUA $.
      $( [20-Aug-1993] $)

    $( The class union of the intersection of two classes.  Exercise 4.12(n) of
       [Mendelson] p. 235.  See ~ uninqs for a condition where equality holds.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    uniin $p |- U. ( A i^i B ) C_ ( U. A i^i U. B ) $=
      ( vx vy cin cuni cv wcel wa wex 19.40 elin anbi2i anandi bitri exbii 
      eluni anbi12i 3imtr4i ssriv ) CABEZFZAFZBFZEZCGZDGZHZUGUAHZIZDJZUFUCHZUFU
      DHZIZUFUBHUFUEHUHUGAHZIZUHUGBHZIZIZDJUPDJZURDJZIUKUNUPURDKUJUSDUJUHUOUQIZ
      IUSUIVBUHUGABLMUHUOUQNOPULUTUMVADUFAQDUFBQRSDUFUAQUFUCUDLST $.
      $( [29-Jun-2011] $) $( [4-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subclass relationship for class union.  Theorem 61 of [Suppes] p. 39.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    uniss $p |- ( A C_ B -> U. A C_ U. B ) $=
      ( vx vy wss cuni cv wcel wa wex ssel anim2d eximdv eluni 3imtr4g ssrdv ) 
      ABEZCAFZBFZQCGZDGZHZUAAHZIZDJUBUABHZIZDJTRHTSHQUDUFDQUCUEUBABUAKLMDTANDTB
      NOP $.
      $( [29-Jun-2011] $) $( [22-Mar-1998] $)

    $( Subclass relationship for class union.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    ssuni $p |- ( ( A C_ B /\ B e. C ) -> A C_ U. C ) $=
      ( vy vx wcel wss cuni cv wi wal wceq eleq2 imbi1d wa wex 19.8a eluni 
      sylibr expcom vtoclga imim2d alimdv dfss2 3imtr4g impcom ) BCFZABGZACHZGZ
      UGDIZAFZUKBFZJZDKULUKUIFZJZDKUHUJUGUNUPDUGUMUOULUKEIZFZUOJUMUOJEBCUQBLURU
      MUOUQBUKMNURUQCFZUOURUSOZUTEPUOUTEQEUKCRSTUAUBUCDABUDDAUIUDUEUF $.
      $( [29-Jun-2011] $) $( [24-May-1994] $)
  $}

  ${
    $d x y A $.
    $( The union of a set is empty iff the set is included in the singleton of
       the empty set. $)
    uni0b $p |- ( U. A = (/) <-> A C_ { (/) } ) $=
      ( vx vy cv c0 csn wcel wral wceq wss cuni elsn ralbii dfss3 wn wex wrex 
      neq0 rexcom4 rexbii eluni2 exbii 3bitr4ri rexnal 3bitri con4bii ) BDZEFZG
      ZBAHUGEIZBAHZAUHJAKZEIZUIUJBABELMBAUHNUMUKUMOCDZULGZCPZUJOZBAQZUKOCULRUNU
      GGZCPZBAQUSBAQZCPURUPUSBCASUQUTBACUGRTUOVACBUNAUAUBUCUJBAUDUEUFUC $.
      $( [12-Sep-2004] $)

    $( The union of a set is empty iff all of its members are empty. $)
    uni0c $p |- ( U. A = (/) <-> A. x e. A x = (/) ) $=
      ( cuni c0 wceq csn wss cv wcel wral uni0b dfss3 elsn ralbii 3bitri ) BCDE
      BDFZGAHZPIZABJQDEZABJBKABPLRSABADMNO $.
      $( [16-Aug-2006] $)
  $}

  $( The union of the empty set is the empty set.  Theorem 8.7 of [Quine]
     p. 54.  (Reproved without relying on ~ ax-nul by Eric Schmidt,
     4-Apr-2007.) $)
  uni0 $p |- U. (/) = (/) $=
    ( c0 cuni wceq csn wss 0ss uni0b mpbir ) ABACAADZEIFAGH $.
    $( [4-Apr-2007] $) $( [16-Sep-1993] $)

  $( An element of a class is a subclass of its union.  Theorem 8.6 of [Quine]
     p. 54.  Also the basis for Proposition 7.20 of [TakeutiZaring] p. 40. $)
  elssuni $p |- ( A e. B -> A C_ U. B ) $=
    ( wss wcel cuni ssid ssuni mpan ) AACABDABECAFAABGH $.
    $( [6-Jun-1994] $)

  $( Condition turning a subclass relationship for union into an equality. $)
  unissel $p |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) $=
    ( cuni wss wcel wa simpl elssuni adantl eqssd ) ACZBDZBAEZFKBLMGMBKDLBAHIJ 
    $.
    $( [18-Jul-2006] $)

  ${
    $d x y A $.  $d x y B $.
    $( Relationship involving membership, subset, and union.  Exercise 5 of
       [Enderton] p. 26 and its converse. $)
    unissb $p |- ( U. A C_ B <-> A. x e. A x C_ B ) $=
      ( vy cuni wss cv wcel wi wal wral wa dfss2 wex eluni imbi1i 19.23v 
      bitr4i albii alcom 19.21v impexp bi2.04 bitri imbi2i 3bitr4i 3bitri 
      df-ral ) BEZCFZAGZBHZUKCFZIZAJZUMABKUJDGZUIHZUPCHZIZDJUPUKHZULLZURIZAJZDJ
      ZUODUICMUSVCDUSVAANZURIVCUQVEURAUPBOPVAURAQRSVDVBDJZAJUOVBDATVFUNAULUTURI
      ZIZDJULVGDJZIVFUNULVGDUAVBVHDVBUTULURIIVHUTULURUBUTULURUCUDSUMVIULDUKCMUE
      UFSUDUGUMABUHR $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x y B $.
    $( A subclass condition on the members of two classes that implies a
       subclass relation on their unions.  Proposition 8.6 of [TakeutiZaring]
       p. 59.  See ~ iunss2 for a generalization to indexed unions. $)
    uniss2 $p |- ( A. x e. A E. y e. B x C_ y -> U. A C_ U. B ) $=
      ( cv wss wrex wral cuni wcel ssuni expcom r19.23aiv ralimi unissb sylibr 
      ) AEZBEZFZBDGZACHQDIZFZACHCIUAFTUBACSUBBDSRDJUBQRDKLMNACUAOP $.
      $( [22-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( If the difference ` A \ B ` contains the largest members of ` A ` , then
       the union of the difference is the union of ` A ` . $)
    unidif $p |- ( A. x e. A E. y e. ( A \ B ) x C_ y ->
               U. ( A \ B ) = U. A ) $=
      ( cv wss cdif wrex wral cuni wa wceq uniss2 difss uniss ax-mp jctil eqss 
      sylibr ) AEBEFBCDGZHACIZTJZCJZFZUCUBFZKUBUCLUAUEUDABCTMTCFUDCDNTCOPQUBUCR
      S $.
      $( [22-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Relationship implying union. $)
    ssunieq $p |- ( ( A e. B /\ A. x e. B x C_ A ) -> A = U. B ) $=
      ( wcel cv wss wral wa cuni wceq elssuni unissb biimpri anim12i eqss 
      sylibr ) BCDZAEBFACGZHBCIZFZSBFZHBSJQTRUABCKUARACBLMNBSOP $.
      $( [10-Nov-1999] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Any member of a class is the largest of those members that it
       includes. $)
    unimax $p |- ( A e. B -> U. { x e. B | x C_ A } = A ) $=
      ( vy cv wss crab wcel wral cuni wceq wa ssunieq eqcomd ssid sseq1 elrab3 
      mpbiri elrab simprbi rgen sylancl ) BAEZBFZACGZHZDEZBFZDUEIZUEJZBKBCHZUFU
      ILBUJDBUEMNUKUFBBFZBOUDULABCUCBBPQRUHDUEUGUEHUGCHUHUDUHAUGCUCUGBPSTUAUB 
      $.
      $( [9-Oct-2006] $) $( [13-Aug-2002] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Closure law for "the unique element in ` A ` such that ` ph ` ." $)
    reucl $p |- ( E! x e. A ph -> U. { x e. A | ph } e. A ) $=
      ( vy cv wcel wa weu cab cuni wreu crab csn wceq wex euabsn hbab1 hbuni 
      ax-17 hbel unieq visset unisn syl6req snid eleq2 mpbiri abid sylib 
      simpld eqeltrrd 19.23ai sylbi df-reu df-rab unieqi eleq1i 3imtr4i ) BEZCF
      ZAGZBHZVABIZJZCFZABCKABCLZJZCFVBVCUSMZNZBOVEVABPVIVEBBDDVDCBDVCVABDQRDECF
      BSTVIUSVDCVIVDVHJUSVCVHUAUSBUBZUCUDVIUTAVIUSVCFZVAVIVKUSVHFUSVJUEVCVHUSUF
      UGVABUHUIUJUKULUMABCUNVGVDCVFVCABCUOUPUQUR $.
      $( [22-Nov-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The intersection of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class intersection symbol. $)
  $c |^| $. $( Big cap $)

  $( Extend class notation to include the intersection of a class (read:
     'intersect ` A ` '). $)
  cint $a class |^| A $.

  ${
    $d x y A $.
    $( Define the intersection of a class.  Definition 7.35 of [TakeutiZaring]
       p. 44. $)
    df-int $a |- |^| A = { x | A. y ( y e. A -> x e. y ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class intersection. $)
    dfint2 $p |- |^| A = { x | A. y e. A x e. y } $=
      ( cint cv wcel wi wal cab wral df-int df-ral abbii eqtr4i ) CDBEZCFAEOFZG
      BHZAIPBCJZAIABCKRQAPBCLMN $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality law for intersection. $)
    inteq $p |- ( A = B -> |^| A = |^| B ) $=
      ( vx vy wceq cv wcel wral cab cint raleq abbidv dfint2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
      $( [13-Sep-1999] $)
  $}

  ${
    inteqi.1 $e |- A = B $.
    $( Equality inference for class intersection. $)
    inteqi $p |- |^| A = |^| B $=
      ( wceq cint inteq ax-mp ) ABDAEBEDCABFG $.
      $( [2-Sep-2003] $)
  $}

  ${
    inteqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for class intersection. $)
    inteqd $p |- ( ph -> |^| A = |^| B ) $=
      ( wceq cint inteq syl ) ABCEBFCFEDBCGH $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x A y $.  $d x B y $.
    elint.1 $e |- A e. _V $.
    $( Membership in class intersection. $)
    elint $p |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) $=
      ( vy cv wcel wi wal cint wceq eleq1 imbi2d albidv df-int elab2 ) AFZCGZEF
      ZQGZHZAIRBQGZHZAIEBCJDSBKZUAUCAUDTUBRSBQLMNEACOP $.
      $( [21-May-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    elint2.1 $e |- A e. _V $.
    $( Membership in class intersection. $)
    elint2 $p |- ( A e. |^| B <-> A. x e. B A e. x ) $=
      ( cint wcel cv wi wal wral elint df-ral bitr4i ) BCEFAGZCFBNFZHAIOACJABCD
      KOACLM $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Membership in class intersection, with the sethood requirement expressed
       as an antecedent. $)
    elintg $p |- ( A e. C -> ( A e. |^| B <-> A. x e. B A e. x ) ) $=
      ( vy cv cint wcel wral wb wceq eleq1 ralbidv bibi12d visset elint2 
      vtoclg ) EFZCGZHZRAFZHZACIZJBSHZBUAHZACIZJEBDRBKZTUDUCUFRBSLUGUBUEACRBUAL
      MNARCEOPQ $.
      $( [20-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in class intersection.  (The proof was shortened by Andrew
       Salmon, 9-Jul-2011.) $)
    elinti $p |- ( A e. |^| B -> ( C e. B -> A e. C ) ) $=
      ( vx cint wcel wi cv wral elintg wal df-ral wceq eleq1 eleq2 imbi12d 
      cla4gv pm2.43b sylbi syl6bi pm2.43i ) ABEZFZCBFZACFZGZUCUCADHZFZDBIZUFDAB
      UBJUIUGBFZUHGZDKZUFUHDBLULUDUEUKUFDCBUGCMUJUDUHUEUGCBNUGCAOPQRSTUA $.
      $( [9-Jul-2011] $) $( [14-Oct-1999] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    hbint.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for intersection.  (The proof was
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    hbint $p |- ( y e. |^| A -> A. x y e. |^| A ) $=
      ( vz cv wcel wral wal cint hblem ax-17 hbral visset elint2 albii 3imtr4i 
      ) BFZEFGZECHZTAIRCJGZUAAISAECABECDKSALMERCBNOZUATAUBPQ $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)
  $}

  ${
    $d A x y $.  $d ph y $.
    inteqab.1 $e |- A e. _V $.
    $( Membership in the intersection of a class abstraction. $)
    elintab $p |- ( A e. |^| { x | ph } <-> A. x ( ph -> A e. x ) ) $=
      ( vy cab cint wcel cv wi wal elint hbab1 ax-17 hbim wceq eleq1 abid 
      syl6bb eleq2 imbi12d cbval bitri ) CABFZGHEIZUDHZCUEHZJZEKACBIZHZJZBKECUD
      DLUHUKEBUFUGBABEMUGBNOUKENUEUIPZUFAUGUJULUFUIUDHAUEUIUDQABRSUEUICTUAUBUC 
      $.
      $( [30-Aug-1993] $)

    $( Membership in the intersection of a class abstraction. $)
    elintrab $p |- ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) $=
      ( cv wcel wa cab cint wi wal crab wral elintab impexp albii bitri df-rab 
      inteqi eleq2i df-ral 3bitr4i ) CBFZDGZAHZBIZJZGZUEACUDGZKZKZBLZCABDMZJZGU
      KBDNUIUFUJKZBLUMUFBCEOUPULBUEAUJPQRUOUHCUNUGABDSTUAUKBDUBUC $.
      $( [17-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d y ph $.
    $( Membership in the intersection of a class abstraction. $)
    elintrabg $p |- ( A e. C -> ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) ) $=
      ( vy cv crab cint wcel wi wral eleq1 wceq imbi2d ralbidv visset elintrab 
      vtoclbg ) FGZABDHIZJATBGZJZKZBDLCUAJACUBJZKZBDLFCETCUAMTCNZUDUFBDUGUCUEAT
      CUBMOPABTDFQRS $.
      $( [17-Feb-2007] $)

    $( The intersection of the empty set is the universal class.  Exercise 2 of
       [TakeutiZaring] p. 44. $)
    int0 $p |- |^| (/) = _V $=
      ( vy vx cv c0 wcel wi wal cab wceq cint cvv noel pm2.21i ax-gen eqid 2th 
      abbii df-int df-v 3eqtr4i ) ACZDEZBCZUAEZFZAGZBHUCUCIZBHDJKUFUGBUFUGUEAUB
      UDUALMNUCOPQBADRBST $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.
    $( An element of a class includes the intersection of the class.  Exercise
       4 of [TakeutiZaring] p. 44 (with correction), generalized to classes. $)
    intss1 $p |- ( A e. B -> |^| B C_ A ) $=
      ( vx vy wcel cint cv wi wal wceq eleq1 eleq2 imbi12d cla4gv pm2.43a 
      visset elint syl5ib ssrdv ) ABEZCBFZATDGZBEZCGZUBEZHZDIZUDAEZUDUAEUGTUHUF
      TUHHDABUBAJUCTUEUHUBABKUBAUDLMNODUDBCPQRS $.
      $( [18-Nov-1995] $)

    $( Subclass of a class intersection.  Theorem 5.11(viii) of [Monk1] p. 52
       and its converse. $)
    ssint $p |- ( A C_ |^| B <-> A. x e. B A C_ x ) $=
      ( vy cint wss cv wcel wral dfss3 visset elint2 ralbii ralcom bitr4i 
      3bitri ) BCEZFDGZQHZDBIRAGZHZACIZDBIZBTFZACIZDBQJSUBDBARCDKLMUCUADBIZACIU
      EUADABCNUDUFACDBTJMOP $.
      $( [14-Oct-1999] $)

    $( Subclass of the intersection of a class abstraction.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    ssintab $p |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) $=
      ( vy cab cint wss cv wral wcel wi wal ssint df-ral hbab1 ax-17 hbim wceq 
      eleq1 abid syl6bb sseq2 imbi12d cbval 3bitri ) CABEZFGCDHZGZDUFIUGUFJZUHK
      ZDLACBHZGZKZBLDCUFMUHDUFNUJUMDBUIUHBABDOUHBPQUMDPUGUKRZUIAUHULUNUIUKUFJAU
      GUKUFSABTUAUGUKCUBUCUDUE $.
      $( [9-Jul-2011] $) $( [31-Jul-2006] $)

    $( Subclass of a least upper bound. $)
    ssintub $p |- A C_ |^| { x e. B | A C_ x } $=
      ( vy cv wss crab cint ssint wcel sseq2 elrab simprbi mprgbir ) BBAEZFZACG
      ZHFBDEZFZDQDBQIRQJRCJSPSARCORBKLMN $.
      $( [8-Aug-2000] $)

    $( Subclass of the minimum value of class of supersets. $)
    ssmin $p |- A C_ |^| { x | ( A C_ x /\ ph ) } $=
      ( cv wss wa cab cint wi ssintab simpl mpgbir ) CCBDEZAFZBGHENMIBNBCJMAKL 
      $.
      $( [10-Aug-2006] $)

    $( Any member of a class is the smallest of those members that include it.
       (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    intmin $p |- ( A e. B -> |^| { x e. B | A C_ x } = A ) $=
      ( vy wcel cv wss crab cint wi wral ssid wceq sseq2 eleq2 imbi12d rcla4v 
      mpii visset elintrab syl5ib ssrdv ssintub a1i eqssd ) BCEZBAFZGZACHIZBUFD
      UIBUFUHDFZUGEZJZACKZUJBEZUJUIEUFUMBBGZUNBLULUOUNJABCUGBMUHUOUKUNUGBBNUGBU
      JOPQRUHAUJCDSTUAUBBUIGUFABCUCUDUE $.
      $( [9-Jul-2011] $) $( [13-Aug-2002] $)

    $( Intersection of subclasses. $)
    intss $p |- ( A C_ B -> |^| B C_ |^| A ) $=
      ( vy vx cv wcel wi wal cint wss imim1 al2imi visset elint 3imtr4g 
      19.21aiv dfss2 3imtr4i ) CEZAFZSBFZGZCHZDEZBIZFZUDAIZFZGZDHABJUEUGJUCUIDU
      CUAUDSFZGZCHTUJGZCHUFUHUBUKULCTUAUJKLCUDBDMZNCUDAUMNOPCABQDUEUGQR $.
      $( [14-Oct-1999] $)

    $( The intersection of a nonempty set is a subclass of its union. $)
    intssuni $p |- ( A =/= (/) -> |^| A C_ U. A ) $=
      ( vx vy c0 wne cint cuni cv wcel wral wrex r19.2z ex visset elint2 
      eluni2 3imtr4g ssrdv ) ADEZBAFZAGZSBHZCHIZCAJZUCCAKZUBTIUBUAISUDUEUCCALMC
      UBABNOCUBAPQR $.
      $( [29-Jul-2006] $)
  $}

  $( If the union of a class is included in its intersection, the class is
     either the empty set or a singleton ( ~ uniintsn ).  (The proof was
     shortened by Andrew Salmon, 25-Jul-2011.) $)
  unissint $p |- ( U. A C_ |^| A <-> ( A = (/) \/ U. A = |^| A ) ) $=
    ( cuni cint wss c0 wceq wo wn wa simpl wne df-ne intssuni sylbir adantl 
    eqssd ex orrd cvv ssv int0 sseqtr4i inteq sseq2d mpbiri eqimss jaoi impbii 
    ) ABZACZDZAEFZUIUJFZGUKULUMUKULHZUMUKUNIUIUJUKUNJUNUJUIDZUKUNAEKUOAELAMNOPQ
    RULUKUMULUKUIECZDUISUPUITUAUBULUJUPUIAEUCUDUEUIUJUFUGUH $.
    $( [25-Jul-2011] $) $( [30-Oct-2010] $)

  $( Subclass relationship for intersection and union. $)
  intssuni2 $p |- ( ( A C_ B /\ A =/= (/) ) -> |^| A C_ U. B ) $=
    ( c0 wne wss cint cuni intssuni uniss sylan9ssr ) ACDABEAFAGBGAHABIJ $.
    $( [29-Jul-2006] $)

  ${
    $d x A $.
    intmin2.1 $e |- A e. _V $.
    $( Any set is the smallest of all sets that include it. $)
    intmin2 $p |- |^| { x | A C_ x } = A $=
      ( cv wss cvv crab cint cab rabab inteqi wcel wceq intmin ax-mp eqtr3i ) 
      BADEZAFGZHZQAIZHBRTQAJKBFLSBMCABFNOP $.
      $( [30-Nov-2006] $) $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x ps $.
    intmin3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    intmin3.3 $e |- ps $.
    $( Under subset ordering, the intersection of a class abstraction is less
       than or equal to any of its members. $)
    intmin3 $p |- ( A e. B -> |^| { x | ph } C_ A ) $=
      ( wcel cab cint wss elabg mpbiri intss1 syl ) DEHZDACIZHZQJDKPRBGABCDEFLM
      DQNO $.
      $( [3-Jul-2005] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Elimination of a conjunct in a class intersection. $)
    intmin4 $p |- ( A C_ |^| { x | ph } ->
                  |^| { x | ( A C_ x /\ ph ) } = |^| { x | ph } ) $=
      ( vy cab cint wss cv wa wcel wi wal wb ssintab simpr ancr impbid2 imbi1d 
      alimi albi syl sylbi visset elintab 3bitr4g eqrdv ) CABEFZGZDCBHZGZAIZBEF
      ZUGUHUKDHZUIJZKZBLZAUNKZBLZUMULJUMUGJUHAUJKZBLZUPURMZABCNUTUOUQMZBLVAUSVB
      BUSUKAUNUSUKAUJAOAUJPQRSUOUQBTUAUBUKBUMDUCZUDABUMVCUDUEUF $.
      $( [31-Jul-2006] $)
  $}

  ${
    $d x z A $.  $d x z ph $.  $d x y z $.
    intab.1 $e |- A e. _V $.
    intab.2 $e |- { x | E. y ( ph /\ x = A ) } e. _V $.
    $( The intersection of a special case of a class abstraction. ` y ` may be
       free in ` ph ` and ` A ` , which can be thought of a ` ph ( y ) ` and
       ` A ( y ) ` .  Typically, ~ abrexex2 or ~ abexssex can be used to
       satisfy the second hypothesis. $)
    intab $p |- |^| { x | A. y ( ph -> A e. x ) } =
                { x | E. y ( ph /\ x = A ) } $=
      ( vz cv wcel wi wal cab cint wceq wa wex wss wsbc cvv eqeq1 anbi2d 
      exbidv cbvabv eqeltri hbe1 hbab hbeleq eleq2 imbi2d albid sbcie wb ax-17 
      sbcgf ax-mp biimpri csb csbvarg sbceq1dig mpbir jctir sbcang sylibr 
      19.8a ax-gen a4sbc mp2 sbcimg mpbi syl elabs mpgbir intss1 hba1 hbint 
      ax-4 com12 adantr eleq1 adantl sylibrd 19.21aiv visset elintab 19.23ai 
      abssi eqssi eqtri ) ADBHZIZJZCKZBLZMZAGHZDNZOZCPZGLZAWIDNZOZCPZBLZWNWSWSW
      MIZWNWSQXDWLBWSRZXEADWSIZJZCWLXGCKBWSWSXCSWRXBGBWOWINZWQXACXHWPWTAWOWIDTU
      AUBUCZFUDZWIWSNZWKXGCCBWSWRCGBWQCUEUFUGXKWJXFAWIWSDUHUIUJUKAWRGDRZXFAWQGD
      RZXLAAGDRZWPGDRZOZXMAXNXOXNADSIZXNAULEAGDSAGUMUNUOUPXOGDWOUQDNZXQXREGDSUR
      UOXQXOXRULEGDWODSUSUOUTVAXQXMXPULEAWPGDSVBUOVCWQWRJZGDRZXMXLJZXQXSGKXTEXS
      GWQCVDVEXSGDSVFVGXQXTYAULEWQWRGDSVHUOVIVJWRGDEVKVCVLWLBWSXJVKUTWSWMVMUOWR
      GWNWQWOWNIZCCGWMWLCBGWKCVNUFVOWQWLWOWIIZJZBKYBWQYDBWQWLWJYCAWLWJJWPWLAWJW
      KCVPVQVRWPYCWJULAWODWIVSVTWAWBWLBWOGWCWDVCWEWFWGXIWH $.
      $( [28-Jul-2006] $)
  $}

  $( The intersection of a class containing the empty set is empty. $)
  int0el $p |- ( (/) e. A -> |^| A = (/) ) $=
    ( c0 wcel cint intss1 wss 0ss a1i eqssd ) BACZADZBBAEBKFJKGHI $.
    $( [24-Apr-2004] $)

  ${
    $d x y A $.  $d x y B $.
    $( The class intersection of the union of two classes.  Theorem 78 of
       [Suppes] p. 42. $)
    intun $p |- |^| ( A u. B ) = ( |^| A i^i |^| B ) $=
      ( vx vy cun cint cin cv wcel wi wal wa 19.26 wo elun imbi1i jaob bitri 
      albii visset elint anbi12i 3bitr4i elin eqriv ) CABEZFZAFZBFZGZDHZUFIZCHZ
      UKIZJZDKZUMUHIZUMUIIZLZUMUGIUMUJIUKAIZUNJZUKBIZUNJZLZDKVADKZVCDKZLUPUSVAV
      CDMUOVDDUOUTVBNZUNJVDULVGUNUKABOPUTUNVBQRSUQVEURVFDUMACTZUADUMBVHUAUBUCDU
      MUFVHUAUMUHUIUDUCUE $.
      $( [22-Sep-2002] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    intpr.1 $e |- A e. _V $.
    intpr.2 $e |- B e. _V $.
    $( The intersection of a pair is the intersection of its members.  Theorem
       71 of [Suppes] p. 42. $)
    intpr $p |- |^| { A , B } = ( A i^i B ) $=
      ( vx vy cpr cint cin cv wcel wi wal wa wceq 19.26 wo visset elpr imbi1i 
      jaob bitri albii clel4 anbi12i 3bitr4i elint elin eqriv ) EABGZHZABIZFJZU
      JKZEJZUMKZLZFMZUOAKZUOBKZNZUOUKKUOULKUMAOZUPLZUMBOZUPLZNZFMVCFMZVEFMZNURV
      AVCVEFPUQVFFUQVBVDQZUPLVFUNVIUPUMABFRSTVBUPVDUAUBUCUSVGUTVHFUOACUDFUOBDUD
      UEUFFUOUJERUGUOABUHUFUI $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The intersection of a pair is the intersection of its members.  Closed
       form of ~ intpr .  Theorem 71 of [Suppes] p. 42.  (Contributed by FL,
       27-Apr-2008.) $)
    intprg $p |- ( ( A e. C /\ B e. D ) -> |^| { A , B } = ( A i^i B ) ) $=
      ( vx vy cv cpr cint cin wceq preq1 inteqd ineq1 eqeq12d preq2 ineq2 
      visset intpr vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAA
      KZUDUGUEUHULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBERFRST 
      $.
      $( [6-Mar-2011] $) $( [27-Apr-2008] $)
  $}

  ${
    intsn.1 $e |- A e. _V $.
    $( The intersection of a singleton is its member.  Theorem 70 of [Suppes]
       p. 41. $)
    intsn $p |- |^| { A } = A $=
      ( csn cint cpr cin dfsn2 inteqi intpr inidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
      $( [29-Sep-2002] $)
  $}

  ${
    $d x y A $.
    $( Two ways to express " ` A ` is a singleton."  See also ~ en1 , ~ card1 ,
       and ~ eusn . $)
    uniintsn $p |- ( U. A = |^| A <-> E. x A = { x } ) $=
      ( vy cuni cint wceq cv csn wex wcel wa wi wal c0 wne cvv vn0 inteq int0 
      syl6eq adantl eqeq1 unieq uni0 syl5bi imp eqtr3d ex necon3d mpi n0 sylib 
      cpr wss cun cin uniss simpl sseqtrd intss sstrd visset unipr intpr 
      3sstr3g inss1 ssun1 sstri jctir eqss uneqin bitr3i prss syl5ib 19.21aivv 
      jca weu cab euabsn eleq1 eu4 abid2 eqeq1i exbii 3bitr3i unisn intsn 
      3eqtr4a 19.23aiv impbii ) BDZBEZFZBAGZHZFZAIZWMWNBJZAIZWRCGZBJZKZWNWTFZLZ
      CMAMZKZWQWMWSXEWMBNOZWSWMPNOXGQWMBNPNWMBNFZPNFWMXHKWLPNXHWLPFWMXHWLNEPBNR
      STUAWMXHWLNFZWMWKNFXIXHWKWLNUBXHWKNDNBNUCUDTUEUFUGUHUIUJABUKULWMXDACWMWNW
      TUMZBUNZXCXBWMXKXCWMXKKZWNWTUOZWNWTUPZUNZXNXMUNZKZXCXLXOXPXLXJDZXJEZXMXNX
      LXRWLXSXLXRWKWLXKXRWKUNWMXJBUQUAWMXKURUSXKWLXSUNWMXJBUTUAVAWNWTAVBZCVBZVC
      WNWTXTYAVDVEXNWNXMWNWTVFWNWTVGVHVIXQXMXNFXCXMXNVJWNWTVKVLULUHWNWTBXTYAVMV
      NVOVPWRAVQWRAVRZWOFZAIXFWQWRAVSWRXAACWNWTBVTWAYCWPAYBBWOABWBWCWDWEULWPWMA
      WPWODWNWKWLWNXTWFBWOUCWPWLWOEWNBWORWNXTWGTWHWIWJ $.
      $( [2-Aug-2010] $)
  $}

  ${
    intunsn.1 $e |- B e. _V $.
    $( Theorem joining a singleton to an intersection. $)
    intunsn $p |- |^| ( A u. { B } ) = ( |^| A i^i B ) $=
      ( csn cun cint cin intun intsn ineq2i eqtri ) ABDZEFAFZLFZGMBGALHNBMBCIJK
      $.
      $( [29-Sep-2002] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Indexed union and intersection
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c U_ $. $( Underlined big cup. $)
  $c |^|_ $. $( Underlined big cap. $)

  $( Extend class notation to include indexed union.  Note:  Historically
     (prior to 21-Oct-2005), set.mm used the notation ` U. x e. A B ` , with
     the same union symbol as ~ cuni .  While that syntax was unambiguous, it
     did not allow for LALR parsing of the syntax constructions in set.mm.  The
     new syntax uses as distinguished symbol ` U_ ` instead of ` U. ` and does
     allow LALR parsing.  Thanks to Peter Backes for suggesting this change. $)
  ciun $a class U_ x e. A B $.

  $( Extend class notation to include indexed intersection.  Note:
     Historically (prior to 21-Oct-2005), set.mm used the notation
     ` |^| x e. A B ` , with the same intersection symbol as ~ cint .  Although
     that syntax was unambiguous, it did not allow for LALR parsing of the
     syntax constructions in set.mm.  The new syntax uses a distinguished
     symbol ` |^|_ ` instead of ` |^| ` and does allow LALR parsing.  Thanks to
     Peter Backes for suggesting this change. $)
  ciin $a class |^|_ x e. A B $.

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Define indexed union.  Definition of [Stoll] p. 45.  In normal use,
       ` A ` is independent of ` x ` , and ` B ` depends on ` x ` i.e. can be
       read informally as ` B ( x ) ` .  We call ` x ` the index, ` A ` the
       index set, and ` B ` the indexed set.  In most books, ` x e. A ` is
       written as a subscript or underneath a union symbol ` U. ` .  We use a
       special union symbol ` U_ ` to make it easier to distinguish from plain
       class union.  In many theorems, you will see that ` x ` and ` A ` are in
       the same distinct variable group (meaning ` A ` cannot depend on ` x ` )
       and that ` B ` and ` x ` do not share a distinct variable group (meaning
       that can be thought of as ` B ( x ) ` i.e. can be substituted with a
       class expression containing ` x ` ).  An alternate definition tying
       indexed union to ordinary union is ~ dfiun2 .  Theorem ~ uniiun provides
       a definition of ordinary union in terms of indexed union.  Theorems
       ~ fniunfv and ~ funiunfv are useful when ` B ` is a function. $)
    df-iun $a |- U_ x e. A B = { y | E. x e. A y e. B } $.

    $( Define indexed intersection.  Definition of [Stoll] p. 45.  See the
       remarks for its sibling operation of indexed union ~ df-iun .  An
       alternate definition tying indexed intersection to ordinary intersection
       is ~ dfiin2 .  Theorem ~ intiin provides a definition of ordinary
       intersection in terms of indexed intersection. $)
    df-iin $a |- |^|_ x e. A B = { y | A. x e. A y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.
    $( Membership in indexed union. $)
    eliun $p |- ( A e. U_ x e. B C <-> E. x e. B A e. C ) $=
      ( vy ciun wcel cvv wrex elisset wi cv a1i r19.23aiv wceq eleq1 rexbidv 
      df-iun elab2g pm5.21nii ) BACDFZGBHGZBDGZACIZBUAJUCUBACUCUBKALCGBDJMNELZD
      GZACIUDEBUAHUEBOUFUCACUEBDPQAECDRST $.
      $( [3-Sep-2003] $)

    $( Membership in indexed intersection. $)
    eliin $p |- ( A e. D -> ( A e. |^|_ x e. B C <-> A. x e. B A e. C ) ) $=
      ( vy cv wcel wral ciin wceq eleq1 ralbidv df-iin elab2g ) FGZDHZACIBDHZAC
      IFBACDJEPBKQRACPBDLMAFCDNO $.
      $( [3-Sep-2003] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutation of indexed unions. $)
    iuncom $p |- U_ x e. A U_ y e. B C = U_ y e. B U_ x e. A C $=
      ( vz ciun cv wcel wrex rexcom eliun rexbii 3bitr4i eqriv ) FACBDEGZGZBDAC
      EGZGZFHZPIZACJZTRIZBDJZTQITSITEIZBDJZACJUEACJZBDJUBUDUEABCDKUAUFACBTDELMU
      CUGBDATCELMNATCPLBTDRLNO $.
      $( [18-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Indexed union of a constant class, i.e. where ` B ` does not depend on
       ` x ` .  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    iunconst $p |- ( A =/= (/) -> U_ x e. A B = B ) $=
      ( vy c0 wne ciun cv wcel wrex r19.9rzv eliun syl6rbbr eqrdv ) BEFZDABCGZC
      ODHZCIZRABJQPIRABKAQBCLMN $.
      $( [25-Jul-2011] $) $( [5-Sep-2004] $)
  $}

  ${
    $d x y $.  $d y z A $.  $d x z B $.  $d z C $.
    $( Law combining indexed union with indexed intersection.  Eq.  (14),
       p. 109, in _Set Theory, with an Introduction to Descriptive Set Theory_
       by K. Kuratowski and A. Mostowski (2nd ed., 1976).  (This theorem also
       appears as the last example at
       ~ http://en.wikipedia.org/wiki/Union%5F%28set%5Ftheory%29 .)  (The proof
       was shortened by Andrew Salmon, 25-Jul-2011.) $)
    iuniin $p |- U_ x e. A |^|_ y e. B C C_ |^|_ y e. B U_ x e. A C $=
      ( vz ciin ciun cv wcel wrex wral r19.12 cvv wb visset eliin ax-mp rexbii 
      eliun ralbii 3imtr4i ssriv ) FACBDEGZHZBDACEHZGZFIZUDJZACKZUHUFJZBDLZUHUE
      JUHUGJZUHEJZBDLZACKUNACKZBDLUJULUNABCDMUIUOACUHNJZUIUOOFPZBUHDENQRSUKUPBD
      AUHCETUAUBAUHCUDTUQUMULOURBUHDUFNQRUBUC $.
      $( [25-Jul-2011] $) $( [17-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunss1 $p |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) $=
      ( vy wss ciun cv wcel wrex ssrexv eliun 3imtr4g ssrdv ) BCFZEABDGZACDGZOE
      HZDIZABJSACJRPIRQISABCKARBDLARCDLMN $.
      $( [25-Jul-2011] $) $( [10-Dec-2004] $)

    $( Subclass theorem for indexed union. $)
    iinss1 $p |- ( A C_ B -> |^|_ x e. B C C_ |^|_ x e. A C ) $=
      ( vy wss ciin cv wcel wral ssralv cvv wb visset eliin ax-mp 3imtr4g 
      ssrdv ) BCFZEACDGZABDGZSEHZDIZACJZUCABJZUBTIZUBUAIZUCABCKUBLIZUFUDMENZAUB
      CDLOPUHUGUEMUIAUBBDLOPQR $.
      $( [24-Jan-2012] $)

    $( Equality theorem for indexed union. $)
    iuneq1 $p |- ( A = B -> U_ x e. A C = U_ x e. B C ) $=
      ( wss wa ciun wceq iunss1 anim12i eqss 3imtr4i ) BCEZCBEZFABDGZACDGZEZPOE
      ZFBCHOPHMQNRABCDIACBDIJBCKOPKL $.
      $( [27-Jun-1998] $)

    $( Equality theorem for restricted existential quantifier. $)
    iineq1 $p |- ( A = B -> |^|_ x e. A C = |^|_ x e. B C ) $=
      ( vy wceq cv wcel wral cab ciin raleq abbidv df-iin 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
      $( [27-Jun-1998] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    ss2iun $p |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) $=
      ( vy wss wral ciun cv wcel wrex wi ssel ralimi rexim syl eliun 3imtr4g 
      ssrdv ) CDFZABGZEABCHZABDHZUAEIZCJZABKZUDDJZABKZUDUBJUDUCJUAUEUGLZABGUFUH
      LTUIABCDUDMNUEUGABOPAUDBCQAUDBDQRS $.
      $( [25-Jul-2011] $) $( [26-Nov-2003] $)

    $( Equality theorem for indexed union. $)
    iuneq2 $p |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) $=
      ( wss wral wa ciun wceq ss2iun anim12i eqss ralbii r19.26 bitri 3imtr4i 
      ) CDEZABFZDCEZABFZGZABCHZABDHZEZUCUBEZGCDIZABFZUBUCIRUDTUEABCDJABDCJKUGQS
      GZABFUAUFUHABCDLMQSABNOUBUCLP $.
      $( [22-Oct-2003] $)

    $( Equality theorem for indexed intersection.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    iineq2 $p |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( vy wceq wral cv wcel cab ciin wb eleq2 ralimi ralbi syl abbidv df-iin 
      3eqtr4g ) CDFZABGZEHZCIZABGZEJUBDIZABGZEJABCKABDKUAUDUFEUAUCUELZABGUDUFLT
      UGABCDUBMNUCUEABOPQAEBCRAEBDRS $.
      $( [25-Jul-2011] $) $( [22-Oct-2003] $)
  $}

  ${
    iuneq2i.1 $e |- ( x e. A -> B = C ) $.
    $( Equality inference for indexed union. $)
    iuneq2i $p |- U_ x e. A B = U_ x e. A C $=
      ( wceq ciun iuneq2 mprg ) CDFABCGABDGFABABCDHEI $.
      $( [22-Oct-2003] $)

    $( Equality inference for indexed intersection. $)
    iineq2i $p |- |^|_ x e. A B = |^|_ x e. A C $=
      ( wceq ciin iineq2 mprg ) CDFABCGABDGFABABCDHEI $.
      $( [22-Oct-2003] $)
  $}

  ${
    iineq2d.1 $e |- ( ph -> A. x ph ) $.
    iineq2d.2 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed intersection. $)
    iineq2d $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( wceq wral ciin cv wcel ex r19.21ai iineq2 syl ) ADEHZBCIBCDJBCEJHAQBCFA
      BKCLQGMNBCDEOP $.
      $( [7-Dec-2011] $)
  $}

  ${
    $d x ph $.
    iuneq2dv.1 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed union. $)
    iuneq2dv $p |- ( ph -> U_ x e. A B = U_ x e. A C ) $=
      ( wceq wral ciun r19.21aiva iuneq2 syl ) ADEGZBCHBCDIBCEIGAMBCFJBCDEKL $.
      $( [5-Oct-2006] $) $( [3-Aug-2004] $)

    $( Equality deduction for indexed intersection. $)
    iineq2dv $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( ax-17 iineq2d ) ABCDEABGFH $.
      $( [3-Jan-2007] $) $( [3-Aug-2004] $)
  $}

  ${
    $d z A $.  $d z B $.  $d x y z $.
    $( Bound-variable hypothesis builder for indexed union. $)
    hbiu1 $p |- ( y e. U_ x e. A B -> A. x y e. U_ x e. A B ) $=
      ( vz ciun cv wcel wrex cab df-iun hbre1 hbab hbxfr ) ABACDFEGDHZACIZEJAEC
      DKPAEBOACLMN $.
      $( [12-Oct-2003] $)
  $}

  ${
    $d z A $.  $d z B $.  $d x y z $.
    $( Bound-variable hypothesis builder for indexed intersection. $)
    hbii1 $p |- ( y e. |^|_ x e. A B -> A. x y e. |^|_ x e. A B ) $=
      ( vz ciin cv wcel wral cab df-iin hbra1 hbab hbxfr ) ABACDFEGDHZACIZEJAEC
      DKPAEBOACLMN $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C z $.  $d w x y z $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    dfiun2g $p |- ( A. x e. A B e. C ->
                  U_ x e. A B = U. { y | E. x e. A y = B } ) $=
      ( vz wcel wral ciun cv wceq wrex cab cuni wa wex hbra1 wb ra4 clel3g 
      syl6 imp rexbida rexcom4 syl6bb r19.41v exbii exancom bitri eliun 
      eluniab 3bitr4g eqrdv ) DEGZACHZFACDIZBJZDKZACLZBMNZUOFJZDGZACLZVAUQGZUSO
      BPZVAUPGVAUTGUOVCURVDOZACLZBPZVEUOVCVFBPZACLVHUOVBVIACUNACQUOAJCGZVBVIRZU
      OVJUNVKUNACSBVADETUAUBUCVFABCUDUEVHUSVDOZBPVEVGVLBURVDACUFUGUSVDBUHUIUEAV
      ACDUJUSBVAUKULUM $.
      $( [25-Jul-2011] $) $( [23-Mar-2006] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    dfiun2.1 $e |- B e. _V $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (Unnecessary distinct variable restrictions
       were removed by David Abernethy, 19-Jun-2012.) $)
    dfiun2 $p |- U_ x e. A B = U. { y | E. x e. A y = B } $=
      ( cvv wcel ciun cv wceq wrex cab cuni dfiun2g a1i mprg ) DFGZACDHBIDJACKB
      LMJACABCDFNQAICGEOP $.
      $( [19-Jun-2012] $) $( [27-Jun-1998] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C $.  $d w x y z $.
    $( Alternate definition of indexed intersection when ` B ` is a set.
       (Contributed by Jeff Hankins, 27-Aug-2009.) $)
    dfiin2g $p |- ( A. x e. A B e. C
               -> |^|_ x e. A B = |^| { y | E. x e. A y = B } ) $=
      ( vw vz wcel wral cv cab wceq wrex wi wal ciin cint wb df-ral eleq2 
      biimprcd 19.21aiv eqid eqeq1 imbi12d cla4gv mpii impbid2 imim2i pm5.74d 
      alimi albi syl sylbi albii alcom 19.21v 3bitr2ri r19.23v visset rexbidv 
      elab imbi1i bitr4i bitri syl6bb syl5bb abbidv df-iin df-int 3eqtr4g ) DEH
      ZACIZFJZDHZACIZFKGJZBJZDLZACMZBKZHZVNVQHZNZGOZFKACDPWAQVMVPWEFVMAJCHZVONZ
      AOZWEVPVMWHWFVQDLZWCNZGOZNZAOZWEVMWFVLNZAOZWHWMRZVLACSWOWGWLRZAOWPWNWQAWN
      WFVOWKVLVOWKRWFVLVOWKVOWJGWIWCVOVQDVNTZUAUBVLWKDDLZVODUCWJWSVONGDEWIWIWSW
      CVOVQDDUDWRUEUFUGUHUIUJUKWGWLAULUMUNWMWJACIZGOZWEXAWFWJNZAOZGOXBGOZAOWMWT
      XCGWJACSUOXBAGUPXDWLAWFWJGUQUOURWTWDGWTWIACMZWCNWDWIWCACUSWBXEWCVTXEBVQGU
      TVRVQLVSWIACVRVQDUDVAVBVCVDUOVEVFVOACSVGVHAFCDVIFGWAVJVK $.
      $( [20-Sep-2011] $) $( [27-Aug-2009] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w x y z $.
    dfiin2.1 $e |- B e. _V $.
    $( Alternate definition of indexed intersection when ` B ` is a set.
       Definition 15(b) of [Suppes] p. 44.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    dfiin2 $p |- |^|_ x e. A B = |^| { y | E. x e. A y = B } $=
      ( vz ciin cv wceq wrex cab cint wcel wral wi wal clel4 ralbii ralcom4 
      r19.23v albii 3bitri cvv wb visset eliin ax-mp elintab 3bitr4i eqriv ) FA
      CDGZBHZDIZACJZBKLZFHZDMZACNZUNUPULMZOZBPZUPUKMZUPUOMURUMUSOZBPZACNVCACNZB
      PVAUQVDACBUPDEQRVCABCSVEUTBUMUSACTUAUBUPUCMVBURUDFUEZAUPCDUCUFUGUNBUPVFUH
      UIUJ $.
      $( [25-Jul-2011] $) $( [28-Jun-1998] $)
  $}

  ${
    $d w y A $.  $d w x A $.  $d w z B $.  $d w z C $.
    cbviun.1 $e |- ( z e. B -> A. y z e. B ) $.
    cbviun.2 $e |- ( z e. C -> A. x z e. C ) $.
    cbviun.3 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       25-Jul-2011.) $)
    cbviun $p |- U_ x e. A B = U_ y e. A C $=
      ( vw ciun cv wcel wrex hblem wceq eleq2d cbvrex eliun 3bitr4i eqriv ) JAD
      EKZBDFKZJLZEMZADNUDFMZBDNUDUBMUDUCMUEUFABDBCJEGOACJFHOALBLPEFUDIQRAUDDESB
      UDDFSTUA $.
      $( [25-Jul-2011] $) $( [26-Mar-2006] $)

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviin $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vw ciin cv wcel wral hblem wceq eleq2d cbvral cvv wb visset eliin 
      ax-mp 3bitr4i eqriv ) JADEKZBDFKZJLZEMZADNZUHFMZBDNZUHUFMZUHUGMZUIUKABDBC
      JEGOACJFHOALBLPEFUHIQRUHSMZUMUJTJUAZAUHDESUBUCUOUNULTUPBUHDFSUBUCUDUE $.
      $( [26-Aug-2009] $)
  $}

  ${
    $d x A $.  $d y A $.  $d y z B $.  $d x z C $.
    cbviunv.1 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis. $)
    cbviunv $p |- U_ x e. A B = U_ y e. A C $=
      ( vz cv wcel ax-17 cbviun ) ABGCDEGHZDIBJLEIAJFK $.
      $( [25-Jul-2011] $) $( [15-Sep-2003] $)

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviinv $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vz cv wcel ax-17 cbviin ) ABGCDEGHZDIBJLEIAJFK $.
      $( [26-Aug-2009] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunss $p |- ( U_ x e. A B C_ C <-> A. x e. A B C_ C ) $=
      ( vy ciun wss cv wcel wrex cab wi wal wral df-iun sseq1i abss dfss2 
      ralbii ralcom4 r19.23v albii 3bitrri 3bitri ) ABCFZDGEHZCIZABJZEKZDGUHUFD
      IZLZEMZCDGZABNZUEUIDAEBCOPUHEDQUNUGUJLZEMZABNUOABNZEMULUMUPABECDRSUOAEBTU
      QUKEUGUJABUAUBUCUD $.
      $( [25-Jul-2011] $) $( [13-Sep-2003] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed union.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    ssiun $p |- ( E. x e. A C C_ B -> C C_ U_ x e. A B ) $=
      ( vy wss wrex ciun cv wcel wi ssel reximi r19.37av syl eliun syl6ibr 
      ssrdv ) DCFZABGZEDABCHZTEIZDJZUBCJZABGZUBUAJTUCUDKZABGUCUEKSUFABDCUBLMUCU
      DABNOAUBBCPQR $.
      $( [25-Jul-2011] $) $( [3-Sep-2003] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Identity law for subset of an indexed union.  (The proof was shortened
       by Andrew Salmon, 25-Jul-2011.) $)
    ssiun2 $p |- ( x e. A -> B C_ U_ x e. A B ) $=
      ( vy cv wcel ciun wrex ra4e ex eliun syl6ibr ssrdv ) AEBFZDCABCGZNDEZCFZQ
      ABHZPOFNQRQABIJAPBCKLM $.
      $( [25-Jul-2011] $) $( [12-Oct-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    ssiun2s.1 $e |- ( x = C -> B = D ) $.
    $( Subset relationship for an indexed union. $)
    ssiun2s $p |- ( C e. A -> D C_ U_ x e. A B ) $=
      ( vy wcel ciun wss cv wi ax-17 hbiu1 hbss hbim wceq eleq1 sseq1d imbi12d 
      ssiun2 vtoclgf pm2.43i ) DBHZEABCIZJZAKZBHZCUEJZLUDUFLAGDBGKZDHAMUDUFAUDA
      MAGEUEUJEHAMAGBCNOPUGDQZUHUDUIUFUGDBRUKCEUEFSTABCUAUBUC $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y C $.  $d x D $.
    $( A subclass condition on the members of two indexed classes ` C ( x ) `
       and ` D ( y ) ` that implies a subclass relation on their indexed
       unions.  Generalization of Proposition 8.6 of [TakeutiZaring] p. 59.
       Compare ~ uniss2 . $)
    iunss2 $p |- ( A. x e. A E. y e. B C C_ D ->
                 U_ x e. A C C_ U_ y e. B D ) $=
      ( wss wrex wral ciun ssiun ralimi iunss sylibr ) EFGBDHZACIEBDFJZGZACIACE
      JPGOQACBDFEKLACEPMN $.
      $( [9-Dec-2004] $)
  $}

  ${
    $d y z A $.  $d x y z B $.  $d z ph $.
    $( The indexed union of a restricted class abstraction. $)
    iunrab $p |- U_ x e. A { y e. B | ph } = { y e. B | E. x e. A ph } $=
      ( vz cv wsbc wrex crab wcel wa cab ciun df-rab ax-17 hbs1 hbrex wceq 
      sbequ12 rexbidv cbvrab eliun elrabsf rexbii r19.42v 3bitri abbi2i 
      3eqtr4ri ) ACFGZHZBDIZFEJUJEKZULLZFMABDIZCEJBDACEJZNZULFEOUOULCFBEBGZEKZC
      PZUSFPUOFPUKCBDURDKCPACFQRCGUJSAUKBDACFTUAUBUNFUQUJUQKUJUPKZBDIUMUKLZBDIU
      NBUJDUPUCVAVBBDACBUJEUTUDUEUMUKBDUFUGUHUI $.
      $( [3-Jan-2004] $)
  $}

  ${
    $d y A $.  $d x y $.
    $( The indexed union of a class abstraction. $)
    iunab $p |- U_ x e. A { y | ph } = { y | E. x e. A ph } $=
      ( cvv crab ciun wrex cab iunrab wceq cv wcel rabab a1i iuneq2i 3eqtr3i ) 
      BDACEFZGABDHZCEFBDACIZGSCIABCDEJBDRTRTKBLDMACNOPSCNQ $.
      $( [27-Dec-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    iunxdif2.1 $e |- ( x = y -> C = D ) $.
    $( Indexed union with a class difference as its index. $)
    iunxdif2 $p |- ( A. x e. A E. y e. ( A \ B ) C C_ D ->
                 U_ y e. ( A \ B ) D = U_ x e. A C ) $=
      ( wss cdif wrex wral ciun wa wceq iunss2 difss iunss1 ax-mp cbviunv 
      sseqtr4i jctil eqss sylibr ) EFHBCDIZJACKZBUDFLZACELZHZUGUFHZMUFUGNUEUIUH
      ABCUDEFOUFBCFLZUGUDCHUFUJHCDPBUDCFQRABCEFGSTUAUFUGUBUC $.
      $( [10-Dec-2004] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed intersection.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    ssiin $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( vy ciin wss cv wcel wi wal wral dfss2 cvv wb visset eliin ax-mp imbi2i 
      albii ralbii ralcom4 r19.21v 3bitrri bitri ) DABCFZGEHZDIZUGUFIZJZEKZDCGZ
      ABLZEDUFMUKUHUGCIZABLZJZEKZUMUJUPEUIUOUHUGNIUIUOOEPAUGBCNQRSTUMUHUNJZEKZA
      BLURABLZEKUQULUSABEDCMUAURAEBUBUTUPEUHUNABUCTUDUEUE $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed intersection.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    iinss $p |- ( E. x e. A B C_ C -> |^|_ x e. A B C_ C ) $=
      ( vy wss wrex ciin cv wcel wral wi ssel reximi r19.36av syl cvv wb 
      visset eliin ax-mp syl5ib ssrdv ) CDFZABGZEABCHZDUEEIZCJZABKZUGDJZUGUFJZU
      EUHUJLZABGUIUJLUDULABCDUGMNUHUJABOPUGQJUKUIRESAUGBCQTUAUBUC $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d x y A $.
    $( Class union in terms of indexed union.  Definition of [Stoll] p. 43. $)
    uniiun $p |- U. A = U_ x e. A x $=
      ( vy cuni cv wcel wrex cab ciun dfuni2 df-iun eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.
      $( [28-Jun-1998] $)

    $( Class intersection in terms of indexed intersection.  Definition of
       [Stoll] p. 44. $)
    intiin $p |- |^| A = |^|_ x e. A x $=
      ( vy cint cv wcel wral cab ciin dfint2 df-iin eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.
      $( [28-Jun-1998] $)

    $( An indexed union of singletons recovers the index set. $)
    iunid $p |- U_ x e. A { x } = A $=
      ( vy cv csn ciun wceq cab wrex wcel df-sn equcom abbii eqtri a1i iuneq2i 
      iunab risset abid2 eqtr3i 3eqtri ) ABADZEZFABUBCDZGZCHZFUEABIZCHZBABUCUFU
      CUFGUBBJUCUDUBGZCHUFCUBKUIUECCALMNOPUEACBQUDBJZCHUHBUJUGCAUDBRMCBSTUA $.
      $( [18-Dec-2008] $) $( [6-Sep-2005] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( An indexed union of the empty set is empty.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    iun0 $p |- U_ x e. A (/) = (/) $=
      ( vy c0 ciun cv wcel wrex wn noel a1i nrex eliun mtbir 2false eqriv ) CAB
      DEZDCFZQGZRDGZSTABHTABTIAFBGRJZKLARBDMNUAOP $.
      $( [25-Jul-2011] $) $( [26-Mar-2003] $)

    $( An empty indexed union is empty.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    0iun $p |- U_ x e. (/) A = (/) $=
      ( vy c0 ciun cv wcel wrex rex0 eliun mtbir noel 2false eqriv ) CADBEZDCFZ
      OGZPDGQPBGZADHRAIAPDBJKPLMN $.
      $( [25-Jul-2011] $) $( [4-Dec-2004] $)

    $( An empty indexed intersection is the universal class. $)
    0iin $p |- |^|_ x e. (/) A = _V $=
      ( vy c0 ciin cv wcel wral cab cvv df-iin visset ral0 2th abbi2i eqtr4i ) 
      ADBECFZBGZADHZCIJACDBKSCJQJGSCLRAMNOP $.
      $( [20-Oct-2005] $)

    $( Indexed intersection with a universal index class.  When ` A ` doesn't
       depend on ` x ` , this evaluates to ` A ` by ~ 19.3 and ~ abid2 .  When
       ` A = x ` , this evaluates to ` (/) ` by ~ intiin and ~ intv . $)
    viin $p |- |^|_ x e. _V A = { y | A. x y e. A } $=
      ( cvv ciin cv wcel wral cab wal df-iin ralv abbii eqtri ) ADCEBFCGZADHZBI
      OAJZBIABDCKPQBOALMN $.
      $( [11-Sep-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( There is a non-empty class in an indexed collection ` B ( x ) ` iff the
       indexed union of them is non-empty.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunn0 $p |- ( E. x e. A B =/= (/) <-> U_ x e. A B =/= (/) ) $=
      ( vy cv wcel wex wrex ciun c0 wne rexcom4 eliun exbii bitr4i n0 rexbii 
      3bitr4i ) DEZCFZDGZABHZSABCIZFZDGZCJKZABHUCJKUBTABHZDGUETADBLUDUGDASBCMNO
      UFUAABDCPQDUCPR $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.
    $( Indexed intersection of a class builder. $)
    iinab $p |- |^|_ x e. A { y | ph } = { y | A. x e. A ph } $=
      ( vz cv cab wcel wral wsbc ciin df-clab ralbii abbii df-iin ax-17 hbs1 
      hbral wceq sbequ12 ralbidv cbvab 3eqtr4i ) EFZACGZHZBDIZEGACUDJZBDIZEGBDU
      EKABDIZCGUGUIEUFUHBDAECLMNBEDUEOUJUICEUJEPUHCBDBFDHCPACEQRCFUDSAUHBDACETU
      AUBUC $.
      $( [6-Dec-2011] $)

    $d x A $.  $d x B $.
    $( Indexed intersection of a restricted class builder. $)
    iinrab $p |- ( A =/= (/)
          -> |^|_ x e. A { y e. B | ph } = { y e. B | A. x e. A ph } ) $=
      ( c0 wne cv wcel wa wral cab crab ciin r19.28zv abbidv wceq df-rab a1i 
      iineq2i iinab eqtri 3eqtr4g ) DFGZCHEIZAJZBDKZCLZUEABDKZJZCLBDACEMZNZUICE
      MUDUGUJCUEABDOPULBDUFCLZNUHBDUKUMUKUMQBHDIACERSTUFBCDUAUBUICERUC $.
      $( [6-Dec-2011] $)

    $d y B $.
    $( Indexed intersection of a restricted class builder. $)
    iinrab2 $p |- ( |^|_ x e. A { y e. B | ph } i^i B )
                      = { y e. B | A. x e. A ph } $=
      ( crab ciin cin wral wceq c0 cvv iineq1 0iin syl6eq ineq1d incom inv1 
      eqtri rzal rabid2 ralcom bitr2i sylib eqtrd wne iinrab wss ssrab2 dfss 
      mpbi syl6eqr pm2.61ine ) BDACEFZGZEHZABDIZCEFZJDKDKJZUPEURUSUPLEHZEUSUOLE
      USUOBKUNGLBDKUNMBUNNOPUTELHELEQERSOUSACEIZBDIZEURJZVABDTVCUQCEIVBUQCEUAAC
      BEDUBUCUDUEDKUFZUPUREHZURVDUOUREABCDEUGPUREUHURVEJUQCEUIUREUJUKULUM $.
      $( [6-Dec-2011] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y C $.
    $( Indexed union of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ uniiun to recover
       Enderton's theorem. $)
    iunin2 $p |- U_ x e. A ( B i^i C ) = ( B i^i U_ x e. A C ) $=
      ( vy cin ciun cv wcel wrex wa r19.42v elin rexbii eliun anbi2i 3bitr4i 
      eqriv ) EABCDFZGZCABDGZFZEHZSIZABJZUCCIZUCUAIZKZUCTIUCUBIUFUCDIZKZABJUFUI
      ABJZKUEUHUFUIABLUDUJABUCCDMNUGUKUFAUCBDOPQAUCBSOUCCUAMQR $.
      $( [26-Mar-2004] $)

    $( Indexed intersection of union.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem. $)
    iinun2 $p |- |^|_ x e. A ( B u. C ) = ( B u. |^|_ x e. A C ) $=
      ( vy cun ciin cv wcel wral wo r19.32v elun ralbii cvv wb visset eliin 
      ax-mp orbi2i 3bitr4i eqriv ) EABCDFZGZCABDGZFZEHZUCIZABJZUGCIZUGUEIZKZUGU
      DIZUGUFIUJUGDIZKZABJUJUNABJZKUIULUJUNABLUHUOABUGCDMNUKUPUJUGOIZUKUPPEQZAU
      GBDORSTUAUQUMUIPURAUGBUCORSUGCUEMUAUB $.
      $( [19-Aug-2004] $)

    $( Indexed union of class difference.  Generalization of half of theorem
       "De Morgan's laws" in [Enderton] p. 31.  Use ~ intiin to recover
       Enderton's theorem. $)
    iundif2 $p |- U_ x e. A ( B \ C ) = ( B \ |^|_ x e. A C ) $=
      ( vy cdif ciun ciin cv wcel wrex wn wa r19.42v eldif rexbii wral cvv wb 
      visset eliin ax-mp notbii rexnal bitr4i anbi2i 3bitr4i eliun eqriv ) EABC
      DFZGZCABDHZFZEIZUJJZABKZUNCJZUNULJZLZMZUNUKJUNUMJUQUNDJZLZMZABKUQVBABKZMU
      PUTUQVBABNUOVCABUNCDOPUSVDUQUSVAABQZLVDURVEUNRJURVESETAUNBDRUAUBUCVAABUDU
      EUFUGAUNBUJUHUNCULOUGUI $.
      $( [19-Aug-2004] $)
  $}

  ${
    $d x B $.  $d y C $.  $d x D $.  $d x y $.
    $( Rearrange indexed unions over intersection. $)
    2iunin $p |- U_ x e. A U_ y e. B ( C i^i D )
        = ( U_ x e. A C i^i U_ y e. B D ) $=
      ( cin ciun wceq cv wcel iunin2 a1i iuneq2i incom eqtri 3eqtri ) ACBDEFGHZ
      HACEBDFHZGZHZSACEHZGZUBSGACRTRTIAJCKZBDEFLMNUAACSEGZHUCACTUETUEIUDESOMNAC
      SELPSUBOQ $.
      $( [18-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Indexed intersection of class difference.  Generalization of half of
       theorem "De Morgan's laws" in [Enderton] p. 31.  Use ~ uniiun to recover
       Enderton's theorem. $)
    iindif2 $p |- ( A =/= (/) ->
                 |^|_ x e. A ( B \ C ) = ( B \ U_ x e. A C ) ) $=
      ( vy c0 wne cdif ciin ciun cv wcel wral wn wa r19.28zv eldif ralbii wrex 
      eliun notbii ralnex bitr4i anbi2i 3bitr4g cvv wb visset eliin ax-mp 
      eqrdv ) BFGZEABCDHZIZCABDJZHZULEKZUMLZABMZUQCLZUQUOLZNZOZUQUNLZUQUPLULUTU
      QDLZNZOZABMUTVFABMZOUSVCUTVFABPURVGABUQCDQRVBVHUTVBVEABSZNVHVAVIAUQBDTUAV
      EABUBUCUDUEUQUFLVDUSUGEUHAUQBUMUFUIUJUQCUOQUEUK $.
      $( [5-Oct-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    iinxsng.1 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed intersection's
       argument. $)
    iinxsng $p |- ( A e. D -> |^|_ x e. { A } B = C ) $=
      ( vy wcel csn ciin cv wceq wi wal ax-17 eleq2d ceqsalg wral cvv wb 
      visset eliin ax-mp df-ral elsn imbi1i albii 3bitri syl5bb eqrdv ) BEHZGAB
      IZCJZDUKAKZBLZGKZCHZMZANZUPDHZUPUMHZUQUTABEUTAOUOCDUPFPQVAUQAULRZUNULHZUQ
      MZANUSUPSHVAVBTGUAAUPULCSUBUCUQAULUDVDURAVCUOUQABUEUFUGUHUIUJ $.
      $( [15-Jan-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x y D $.  $d x y E $.  $d y F $.
    $d y G $.
    iinxprg.1 $e |- ( x = A -> C = D ) $.
    iinxprg.2 $e |- ( x = B -> C = E ) $.
    $( Indexed intersection with an unordered pair index. $)
    iinxprg $p |- ( ( A e. F /\ B e. G )
        -> |^|_ x e. { A , B } C = ( D i^i E ) ) $=
      ( vy wcel wa cpr ciin cin cv wceq wi wal ax-17 eleq2d ceqsalg bi2anan9 
      wral cvv wb visset eliin ax-mp df-ral wo elpr imbi1i jaob bitri albii 
      19.26 3bitri elin 3bitr4g eqrdv ) BGLZCHLZMZKABCNZDOZEFPZVEAQZBRZKQZDLZSZ
      ATZVICRZVLSZATZMZVKELZVKFLZMVKVGLZVKVHLVCVNVSVDVQVTVLVSABGVSAUAVJDEVKIUBU
      CVLVTACHVTAUAVODFVKJUBUCUDWAVLAVFUEZVIVFLZVLSZATZVRVKUFLWAWBUGKUHAVKVFDUF
      UIUJVLAVFUKWEVMVPMZATVRWDWFAWDVJVOULZVLSWFWCWGVLVIBCAUHUMUNVJVLVOUOUPUQVM
      VPAURUPUSVKEFUTVAVB $.
      $( [25-Jan-2012] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    iunxsn.1 $e |- A e. _V $.
    iunxsn.2 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed union's
       argument. $)
    iunxsn $p |- U_ x e. { A } B = C $=
      ( vy csn ciun cv wcel wrex wa wex eliun df-rex wceq elsn anbi1i exbii 
      eleq2d ceqsexv bitri 3bitri eqriv ) GABHZCIZDGJZUGKUHCKZAUFLAJZUFKZUIMZAN
      ZUHDKZAUHUFCOUIAUFPUMUJBQZUIMZANUNULUPAUKUOUIABRSTUIUNABEUOCDUHFUAUBUCUDU
      E $.
      $( [26-Mar-2004] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Separate a union in an indexed union. $)
    iunun $p |- U_ x e. A ( B u. C ) = ( U_ x e. A B u. U_ x e. A C ) $=
      ( vy cv cun wcel wrex cab ciun wo elun rexbii r19.43 bitri abbii unab 
      eqtr4i df-iun uneq12i 3eqtr4i ) EFZCDGZHZABIZEJZUCCHZABIZEJZUCDHZABIZEJZG
      ZABUDKABCKZABDKZGUGUIULLZEJUNUFUQEUFUHUKLZABIUQUEURABUCCDMNUHUKABOPQUIULE
      RSAEBUDTUOUJUPUMAEBCTAEBDTUAUB $.
      $( [27-Dec-2004] $)

    $( Separate a union in the index of an indexed union. $)
    iunxun $p |- U_ x e. ( A u. B ) C = ( U_ x e. A C u. U_ x e. B C ) $=
      ( vy cun ciun cv wcel wrex wo wa wex df-rex elun anbi1i andir bitri 
      exbii 19.43 eliun orbi12i bitr4i 3bitri 3bitr4i eqriv ) EABCFZDGZABDGZACD
      GZFZEHZDIZAUGJZULUIIZULUJIZKZULUHIULUKIUNAHZUGIZUMLZAMURBIZUMLZURCIZUMLZK
      ZAMZUQUMAUGNUTVEAUTVAVCKZUMLVEUSVGUMURBCOPVAVCUMQRSVFVBAMZVDAMZKUQVBVDATU
      OVHUPVIUOUMABJVHAULBDUAUMABNRUPUMACJVIAULCDUAUMACNRUBUCUDAULUGDUAULUIUJOU
      EUF $.
      $( [26-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A relationship involving union and indexed intersection.  Exercise 23 of
       [Enderton] p. 33. $)
    iinuni $p |- ( A u. |^| B ) = |^|_ x e. B ( A u. x ) $=
      ( vy cint cun cv ciin wcel wo wral r19.32v elun ralbii visset elint2 
      orbi2i 3bitr4ri cvv wb eliin ax-mp 3bitr4i eqriv ) DBCEZFZACBAGZFZHZDGZBI
      ZUJUEIZJZUJUHIZACKZUJUFIUJUIIZUKUJUGIZJZACKUKUQACKZJUOUMUKUQACLUNURACUJBU
      GMNULUSUKAUJCDOZPQRUJBUEMUJSIUPUOTUTAUJCUHSUAUBUCUD $.
      $( [25-Nov-2003] $)

    $( A relationship involving union and indexed union.  Exercise 25 of
       [Enderton] p. 33.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    iununi $p |- ( ( B = (/) -> A = (/) ) <->
                ( A u. U. B ) = U_ x e. B ( A u. x ) ) $=
      ( vy c0 wceq wi cuni cun cv ciun wcel wrex wo wb wn wne df-ne r19.45zv 
      sylbir n0i con2i biorf rexbidv bitr3d syl ja bicomd elun rexbii syl6bbr 
      eluni2 orbi2i bitri eliun 3bitr4g eqrdv wex wa eleq2 eluni ax-17 19.45 
      3bitr4i df-rex 3bitr3g biimpd 19.39 orc simpl imim12i eximi 3syl 19.37v 
      sylib 19.23adv neq0 3imtr4g con4d impbii ) CEFZBEFZGZBCHZIZACBAJZIZKZFZWC
      DWEWHWCDJZBLZWJWFLZACMZNZWJWGLZACMZWJWELZWJWHLZWCWNWKWLNZACMZWPWCWTWNWAWB
      WTWNOZWAPZCEQXACERWKWLACSTWBWKPZXAWKWBBWJUAUBXCWMWTWNXCWLWSACWKWLUCUDWKWM
      UCUEUFUGUHWOWSACWJBWFUIUJUKWQWKWJWDLZNZWNWJBWDUIZXDWMWKAWJCULUMUNAWJCWGUO
      ZUPUQWIWBWAWIWKDURWFCLZAURZWBPXBWIWKXIDWIWKXHGZAURZWKXIGWIWKWLXHUSZNZAURZ
      XHWOUSZAURZGXMXOGZAURXKWIXNXPWIWQWRXNXPWEWHWJUTXEWKXLAURZNWQXNXDXRWKAWJCV
      AUMXFWKXLAWKAVBVCVDWRWPXPXGWOACVEUNVFVGXMXOAVHXQXJAWKXMXOXHWKXLVIXHWOVJVK
      VLVMWKXHAVNVOVPDBVQACVQVRVSVT $.
      $( [25-Jul-2011] $) $( [25-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class and union. $)
    sspwuni $p |- ( A C_ ~P B <-> U. A C_ B ) $=
      ( vx cv cpw wcel wral wss cuni visset elpw ralbii dfss3 unissb 3bitr4i ) 
      CDZBEZFZCAGPBHZCAGAQHAIBHRSCAPBCJKLCAQMCABNO $.
      $( [5-May-2009] $) $( [18-Jul-2006] $)

    $( Two ways to express a collection of subclasses. $)
    pwssb $p |- ( A C_ ~P B <-> A. x e. A x C_ B ) $=
      ( cpw wss cuni cv wral sspwuni unissb bitri ) BCDEBFCEAGCEABHBCIABCJK $.
      $( [19-Jul-2006] $)
  $}

  $( Relationship for power class and union. $)
  elpwuni $p |- ( B e. A -> ( A C_ ~P B <-> U. A = B ) ) $=
    ( wcel cuni wss wceq cpw unissel expcom eqimss impbid1 sspwuni syl5bb ) BAC
    ZADZBEZOBFZABGENPQPNQABHIOBJKABLM $.
    $( [13-May-2007] $) $( [18-Jul-2006] $)

  ${
    $d x y A $.
    $( The power class of an intersection in terms of indexed intersection.
       Exercise 24(a) of [Enderton] p. 33. $)
    iinpw $p |- ~P |^| A = |^|_ x e. A ~P x $=
      ( vy cint cpw cv ciin wss wcel wral ssint visset elpw ralbii bitr4i cvv 
      wb eliin ax-mp 3bitr4i eqriv ) CBDZEZABAFZEZGZCFZUBHZUGUEIZABJZUGUCIUGUFI
      ZUHUGUDHZABJUJAUGBKUIULABUGUDCLZMNOUGUBUMMUGPIUKUJQUMAUGBUEPRSTUA $.
      $( [29-Nov-2003] $)

    $( Inclusion of an indexed union of a power class in the power class of the
       union of its index.  Part of Exercise 24(b) of [Enderton] p. 33. $)
    iunpwss $p |- U_ x e. A ~P x C_ ~P U. A $=
      ( vy cv cpw ciun cuni wss wrex wcel ssiun eliun visset elpw rexbii bitri 
      uniiun sseq2i 3imtr4i ssriv ) CABADZEZFZBGZEZCDZUAHZABIZUFABUAFZHZUFUCJZU
      FUEJZABUAUFKUKUFUBJZABIUHAUFBUBLUMUGABUFUACMZNOPULUFUDHUJUFUDUNNUDUIUFABQ
      RPST $.
      $( [25-Nov-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Binary relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include the general binary relation predicate.
     Note that the syntax is simply three class symbols in a row.  Since binary
     relations are the only possible wff expressions consisting of three class
     expressions in a row, the syntax is unambiguous.  (For an example of how
     syntax could become ambiguous if we are not careful, see the comment in
     ~ cneg .) $)
  wbr $a wff A R B $.

  $( Define a general binary relation.  Note that the syntax is simply three
     class symbols in a row.  Definition 6.18 of [TakeutiZaring] p. 29
     generalized to arbitrary classes.  Class ` R ` normally denotes a relation
     such as " ` < ` " that compares two classes ` A ` and ` B ` , which might
     be numbers such as ` 1 ` and ` 2 ` .  This definition is well-defined,
     although not very meaningful, when classes ` A ` and/or ` B ` are proper
     classes (i.e. are not sets).  On the other hand, we often find uses for
     this definition when ` R ` is a proper class. $)
  df-br $a |- ( A R B <-> <. A , B >. e. R ) $.

  $( Equality theorem for binary relations. $)
  breq $p |- ( R = S -> ( A R B <-> A S B ) ) $=
    ( wceq cop wcel wbr eleq2 df-br 3bitr4g ) CDEABFZCGLDGABCHABDHCDLIABCJABDJK
    $.
    $( [4-Jun-1995] $)

  $( Equality theorem for a binary relation. $)
  breq1 $p |- ( A = B -> ( A R C <-> B R C ) ) $=
    ( wceq cop wcel wbr opeq1 eleq1d df-br 3bitr4g ) ABEZACFZDGBCFZDGACDHBCDHMN
    ODABCIJACDKBCDKL $.
    $( [31-Dec-1993] $)

  $( Equality theorem for a binary relation. $)
  breq2 $p |- ( A = B -> ( C R A <-> C R B ) ) $=
    ( wceq cop wcel wbr opeq2 eleq1d df-br 3bitr4g ) ABEZCAFZDGCBFZDGCADHCBDHMN
    ODABCIJCADKCBDKL $.
    $( [31-Dec-1993] $)

  $( Equality theorem for a binary relation. $)
  breq12 $p |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) $=
    ( wceq wbr breq1 breq2 sylan9bb ) ABFACEGBCEGCDFBDEGABCEHCDBEIJ $.
    $( [8-Feb-1996] $)

  ${
    breqi.1 $e |- R = S $.
    $( Equality inference for binary relations. $)
    breqi $p |- ( A R B <-> A S B ) $=
      ( wceq wbr wb breq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [19-Feb-2005] $)
  $}

  ${
    breq1i.1 $e |- A = B $.
    $( Equality inference for a binary relation. $)
    breq1i $p |- ( A R C <-> B R C ) $=
      ( wceq wbr wb breq1 ax-mp ) ABFACDGBCDGHEABCDIJ $.
      $( [8-Feb-1996] $)

    $( Equality inference for a binary relation. $)
    breq2i $p |- ( C R A <-> C R B ) $=
      ( wceq wbr wb breq2 ax-mp ) ABFCADGCBDGHEABCDIJ $.
      $( [8-Feb-1996] $)

    ${
      breq12i.2 $e |- C = D $.
      $( Equality inference for a binary relation.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.) $)
      breq12i $p |- ( A R C <-> B R D ) $=
        ( wceq wbr wb breq12 mp2an ) ABHCDHACEIBDEIJFGABCDEKL $.
        $( [4-Apr-2007] $) $( [8-Feb-1996] $)
    $}
  $}

  ${
    breq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for a binary relation. $)
    breq1d $p |- ( ph -> ( A R C <-> B R C ) ) $=
      ( wceq wbr wb breq1 syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [8-Feb-1996] $)

    $( Equality deduction for a binary relation. $)
    breqd $p |- ( ph -> ( C A D <-> C B D ) ) $=
      ( wceq wbr wb breq syl ) ABCGDEBHDECHIFDEBCJK $.
      $( [29-Oct-2011] $)

    $( Equality deduction for a binary relation. $)
    breq2d $p |- ( ph -> ( C R A <-> C R B ) ) $=
      ( wceq wbr wb breq2 syl ) ABCGDBEHDCEHIFBCDEJK $.
      $( [8-Feb-1996] $)

    ${
      breq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for a binary relation.  (The proof was shortened by
         Andrew Salmon, 9-Jul-2011.) $)
      breq12d $p |- ( ph -> ( A R C <-> B R D ) ) $=
        ( wceq wbr wb breq12 syl11anc ) ABCIDEIBDFJCEFJKGHBCDEFLM $.
        $( [9-Jul-2011] $) $( [8-Feb-1996] $)
    $}

    ${
      breq123d.2 $e |- ( ph -> R = S ) $.
      breq123d.3 $e |- ( ph -> C = D ) $.
      $( Equality deduction for a binary relation. $)
      breq123d $p |- ( ph -> ( A R C <-> B S D ) ) $=
        ( wbr breq12d breqd bitrd ) ABDFKCEFKCEGKABCDEFHJLAFGCEIMN $.
        $( [29-Oct-2011] $)
    $}

    ${
      breqan12i.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for a binary relation. $)
      breqan12d $p |- ( ( ph /\ ps ) -> ( A R C <-> B R D ) ) $=
        ( wceq wbr wb breq12 syl2an ) CDJEFJCEGKDFGKLABCDEFGMHIN $.
        $( [8-Feb-1996] $)

      $( Equality deduction for a binary relation. $)
      breqan12rd $p |- ( ( ps /\ ph ) -> ( A R C <-> B R D ) ) $=
        ( wbr wb breqan12d ancoms ) ABCEGJDFGJKABCDEFGHILM $.
        $( [8-Feb-1996] $)
    $}
  $}

  $( Two classes are different if they don't have the same relationship to a
     third class. $)
  nbrne1 $p |- ( ( A R B /\ -. A R C ) -> B =/= C ) $=
    ( wbr wn wne wceq breq2 biimpcd necon3bd imp ) ABDEZACDEZFBCGMNBCBCHMNBCADI
    JKL $.
    $( [3-Jun-2012] $)

  $( Two classes are different if they don't have the same relationship to a
     third class. $)
  nbrne2 $p |- ( ( A R C /\ -. B R C ) -> A =/= B ) $=
    ( wbr wn wne wceq breq1 biimpcd necon3bd imp ) ACDEZBCDEZFABGMNABABHMNABCDI
    JKL $.
    $( [3-Jun-2012] $)

  ${
    eqbrtr.1 $e |- A = B $.
    eqbrtr.2 $e |- B R C $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtri $p |- A R C $=
      ( wbr breq1i mpbir ) ACDGBCDGFABCDEHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqbrtrd.1 $e |- ( ph -> A = B ) $.
    eqbrtrd.2 $e |- ( ph -> B R C ) $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtrd $p |- ( ph -> A R C ) $=
      ( wbr breq1d mpbird ) ABDEHCDEHGABCDEFIJ $.
      $( [8-Oct-1999] $)
  $}

  ${
    eqbrtrr.1 $e |- A = B $.
    eqbrtrr.2 $e |- A R C $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtrri $p |- B R C $=
      ( eqcomi eqbrtri ) BACDABEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqbrtrrd.1 $e |- ( ph -> A = B ) $.
    eqbrtrrd.2 $e |- ( ph -> A R C ) $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtrrd $p |- ( ph -> B R C ) $=
      ( eqcomd eqbrtrd ) ACBDEABCFHGI $.
      $( [24-Oct-1999] $)
  $}

  ${
    breqtr.1 $e |- A R B $.
    breqtr.2 $e |- B = C $.
    $( Substitution of equal classes into a binary relation. $)
    breqtri $p |- A R C $=
      ( wbr breq2i mpbi ) ABDGACDGEBCADFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    breqtrd.1 $e |- ( ph -> A R B ) $.
    breqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into a binary relation. $)
    breqtrd $p |- ( ph -> A R C ) $=
      ( wbr breq2d mpbid ) ABCEHBDEHFACDBEGIJ $.
      $( [24-Oct-1999] $)
  $}

  ${
    breqtrr.1 $e |- A R B $.
    breqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into a binary relation. $)
    breqtrri $p |- A R C $=
      ( eqcomi breqtri ) ABCDECBFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    breqtrrd.1 $e |- ( ph -> A R B ) $.
    breqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into a binary relation. $)
    breqtrrd $p |- ( ph -> A R C ) $=
      ( eqcomd breqtrd ) ABCDEFADCGHI $.
      $( [24-Oct-1999] $)
  $}

  ${
    3brtr3.1 $e |- A R B $.
    3brtr3.2 $e |- A = C $.
    3brtr3.3 $e |- B = D $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr3i $p |- C R D $=
      ( eqbrtrri breqtri ) CBDEACBEGFIHJ $.
      $( [11-Aug-1999] $)
  $}

  ${
    3brtr4.1 $e |- A R B $.
    3brtr4.2 $e |- C = A $.
    3brtr4.3 $e |- D = B $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr4i $p |- C R D $=
      ( eqbrtri breqtrri ) CBDECABEGFIHJ $.
      $( [11-Aug-1999] $)
  $}

  ${
    3brtr3d.1 $e |- ( ph -> A R B ) $.
    3brtr3d.2 $e |- ( ph -> A = C ) $.
    3brtr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr3d $p |- ( ph -> C R D ) $=
      ( wbr breq12d mpbid ) ABCFJDEFJGABDCEFHIKL $.
      $( [18-Oct-1999] $)
  $}

  ${
    3brtr4d.1 $e |- ( ph -> A R B ) $.
    3brtr4d.2 $e |- ( ph -> C = A ) $.
    3brtr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr4d $p |- ( ph -> C R D ) $=
      ( wbr breq12d mpbird ) ADEFJBCFJGADBECFHIKL $.
      $( [21-Feb-2005] $)
  $}

  ${
    3brtr3g.1 $e |- ( ph -> A R B ) $.
    3brtr3g.2 $e |- A = C $.
    3brtr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr3g $p |- ( ph -> C R D ) $=
      ( wbr breq12i sylib ) ABCFJDEFJGBDCEFHIKL $.
      $( [16-Jan-1997] $)
  $}

  ${
    3brtr4g.1 $e |- ( ph -> A R B ) $.
    3brtr4g.2 $e |- C = A $.
    3brtr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr4g $p |- ( ph -> C R D ) $=
      ( wbr breq12i sylibr ) ABCFJDEFJGDBECFHIKL $.
      $( [16-Jan-1997] $)
  $}

  ${
    syl5eqbr.1 $e |- ( ph -> A R B ) $.
    syl5eqbr.2 $e |- C = A $.
    $( A chained equality inference for a binary relation. $)
    syl5eqbr $p |- ( ph -> C R B ) $=
      ( eqid 3brtr4g ) ABCDCEFGCHI $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl5eqbrr.1 $e |- ( ph -> A R B ) $.
    syl5eqbrr.2 $e |- A = C $.
    $( A chained equality inference for a binary relation. $)
    syl5eqbrr $p |- ( ph -> C R B ) $=
      ( eqid 3brtr3g ) ABCDCEFGCHI $.
      $( [17-Sep-2004] $)
  $}

  ${
    syl5breq.1 $e |- ( ph -> A = B ) $.
    syl5breq.2 $e |- C R A $.
    $( A chained equality inference for a binary relation. $)
    syl5breq $p |- ( ph -> C R B ) $=
      ( wbr a1i breqtrd ) ADBCEDBEHAGIFJ $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl5breqr.1 $e |- ( ph -> B = A ) $.
    syl5breqr.2 $e |- C R A $.
    $( A chained equality inference for a binary relation. $)
    syl5breqr $p |- ( ph -> C R B ) $=
      ( eqcomd syl5breq ) ABCDEACBFHGI $.
      $( [24-Apr-2005] $)
  $}

  ${
    syl6eqbr.1 $e |- ( ph -> A = B ) $.
    syl6eqbr.2 $e |- B R C $.
    $( A chained equality inference for a binary relation. $)
    syl6eqbr $p |- ( ph -> A R C ) $=
      ( wbr breq1d mpbiri ) ABDEHCDEHGABCDEFIJ $.
      $( [12-Oct-1999] $)
  $}

  ${
    syl6eqbrr.1 $e |- ( ph -> B = A ) $.
    syl6eqbrr.2 $e |- B R C $.
    $( A chained equality inference for a binary relation. $)
    syl6eqbrr $p |- ( ph -> A R C ) $=
      ( eqcomd syl6eqbr ) ABCDEACBFHGI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6breq.1 $e |- ( ph -> A R B ) $.
    syl6breq.2 $e |- B = C $.
    $( A chained equality inference for a binary relation. $)
    syl6breq $p |- ( ph -> A R C ) $=
      ( eqid 3brtr3g ) ABCBDEFBHGI $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl6breqr.1 $e |- ( ph -> A R B ) $.
    syl6breqr.2 $e |- C = B $.
    $( A chained equality inference for a binary relation. $)
    syl6breqr $p |- ( ph -> A R C ) $=
      ( eqcomi syl6breq ) ABCDEFDCGHI $.
      $( [24-Apr-2005] $)
  $}


  ${
    ssbrd.1 $e |- ( ph -> A C_ B ) $.
    $( Deduction from a subclass relationship of binary relations. $)
    ssbrd $p |- ( ph -> ( C A D -> C B D ) ) $=
      ( cop wcel wbr sseld df-br 3imtr4g ) ADEGZBHMCHDEBIDECIABCMFJDEBKDECKL $.
      $( [30-Apr-2004] $)
  $}

  ${
    ssbri.1 $e |- A C_ B $.
    $( Inference from a subclass relationship of binary relations.  (The proof
       was shortened by Andrew Salmon, 9-Jul-2011.) $)
    ssbri $p |- ( C A D -> C B D ) $=
      ( wss wbr wi ssid a1i ssbrd ax-mp ) AAFZCDAGCDBGHAIMABCDABFMEJKL $.
      $( [9-Jul-2011] $) $( [28-Mar-2007] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y R $.  $d x y $.
    hbbr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbbr.2 $e |- ( y e. R -> A. x y e. R ) $.
    hbbr.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for binary relation. $)
    hbbr $p |- ( A R B -> A. x A R B ) $=
      ( cop wcel wal wbr hbop hbel df-br albii 3imtr4i ) CDIZEJZSAKCDELZTAKABBR
      EABCDFHMGNCDEOZTSAUAPQ $.
      $( [1-Sep-1999] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z R $.  $d x y z $.  $d y ph $.
    hbbrd.1 $e |- ( ph -> A. x ph ) $.
    hbbrd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbbrd.3 $e |- ( ph -> ( y e. R -> A. x y e. R ) ) $.
    hbbrd.4 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbbr .  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    hbbrd $p |- ( ph -> ( A R B -> A. x A R B ) ) $=
      ( cop wcel wal wbr hbopd hbeld df-br albii 3imtr4g ) ADEKZFLZUABMDEFNZUBB
      MABCTFGABCDEGHJOIPDEFQZUBUABUCRS $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d y z $.  $d w x $.  $d w R z $.  $d w A z $.
    $( Relationship between a binary relation and a class abstraction.
       (Contributed by Andrew Salmon, 8-Jul-2011.) $)
    brab1 $p |- ( x R A <-> x e. { z | z R A } ) $=
      ( vw cv wbr wsbc cab wcel ax-17 sbco2 breq1 sbie sbbii bitr2i df-clab 
      3bitr4i ) BFZCDGZBEFZHZEAFZHZTBUCHUCCDGZUCTBIJTBAETEKLUDUACDGZEUCHUEUBUFE
      ATUFBEUFBKSUACDMNOUFUEEAUEEKUAUCCDMNPTABQR $.
      $( [9-Jul-2011] $) $( [7-Apr-1994] $)
  $}

  $( A property of proper class as the second argument of a binary relation. $)
  brprc $p |- ( -. B e. _V -> ( A R B <-> A R A ) ) $=
    ( cvv wcel wn cop wbr opprc2 eleq1d df-br 3bitr4g ) BDEFZABGZCEAAGZCEABCHAA
    CHMNOCABIJABCKAACKL $.
    $( [14-Jun-1998] $)

  $( The union of two binary relations. $)
  brun $p |- ( A ( R u. S ) B <-> ( A R B \/ A S B ) ) $=
    ( cop cun wcel wo wbr elun df-br orbi12i 3bitr4i ) ABEZCDFZGNCGZNDGZHABOIAB
    CIZABDIZHNCDJABOKRPSQABCKABDKLM $.
    $( [21-Dec-2008] $)

  $( The intersection of two relations.  (Contributed by FL, 7-Oct-2008.) $)
  brin $p |- ( A ( R i^i S ) B <-> ( A R B /\ A S B ) ) $=
    ( cop cin wcel wa wbr elin df-br anbi12i 3bitr4i ) ABEZCDFZGNCGZNDGZHABOIAB
    CIZABDIZHNCDJABOKRPSQABCKABDKLM $.
    $( [1-Dec-2010] $) $( [6-Oct-2008] $)

  $( The difference of two binary relations.  (Contributed by Scott Fenton,
     11-Apr-2011.) $)
  brdif $p |- ( A ( R \ S ) B <-> ( A R B /\ -. A S B ) ) $=
    ( cop cdif wcel wn wa wbr eldif df-br notbii anbi12i 3bitr4i ) ABEZCDFZGPCG
    ZPDGZHZIABQJABCJZABDJZHZIPCDKABQLUARUCTABCLUBSABDLMNO $.
    $( [12-Apr-2012] $) $( [11-Apr-2011] $)

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z D $.  $d y z R $.
    $d x y z $.
    $( Move substitution in and out of a binary relation.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    sbcbrg $p |- ( A e. D -> ( [ A / x ] B R C <->
           [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) $=
      ( vy vz wbr cv wsbc csb dfsbcq wceq csbeq1 breq123d visset wcel ax-17 
      hbcsb1 hbbr csbeq1a sbie vtoclbg ) CDFIZAGJZKAUFCLZAUFDLZAUFFLZIZUEABKABC
      LZABDLZABFLZIGBEUEAUFBMUFBNUGUKUHULUIUMAUFBCOAUFBFOAUFBDOPUEUJAGAHUGUHUIA
      HUFCGQZHJUFRASZTAHUFFUNUOTAHUFDUNUOTUAAJUFNCUGDUHFUIAUFCUBAUFFUBAUFDUBPUC
      UD $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d y A $.  $d y C $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation. $)
    sbcbr12g $p |- ( A e. D ->
                 ( [ A / x ] B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) $=
      ( vy wcel wbr wsbc csb sbcbrg cv ax-17 csbconstgf breqd bitrd ) BEHZCDFIA
      BJABCKZABDKZABFKZISTFIABCDEFLRUAFSTAGBFEGMFHANOPQ $.
      $( [13-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y C $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation. $)
    sbcbr1g $p |- ( A e. D ->
                  ( [ A / x ] B R C <-> [_ A / x ]_ B R C ) ) $=
      ( vy wcel wbr wsbc csb sbcbr12g cv ax-17 csbconstgf breq2d bitrd ) BEHZCD
      FIABJABCKZABDKZFISDFIABCDEFLRTDSFAGBDEGMDHANOPQ $.
      $( [13-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation. $)
    sbcbr2g $p |- ( A e. D ->
                  ( [ A / x ] B R C <-> B R [_ A / x ]_ C ) ) $=
      ( vy wcel wbr wsbc csb sbcbr12g cv ax-17 csbconstgf breq1d bitrd ) BEHZCD
      FIABJABCKZABDKZFICTFIABCDEFLRSCTFAGBCEGMCHANOPQ $.
      $( [13-Dec-2005] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include ordered-pair class abstraction (class
     builder). $)
  copab $a class { <. x , y >. | ph } $.

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Define the class abstraction of a collection of ordered pairs.
       Definition 3.3 of [Monk1] p. 34.  Usually ` x ` and ` y ` are distinct,
       although the definition doesn't strictly require it (see ~ dfid2 for a
       case where they are not distinct).  The brace notation is called "class
       abstraction" by Quine; it is also (more commonly) called a "class
       builder" in the literature.  An alternate definition using no
       existential quantifiers is shown by ~ dfopab2 . $)
    df-opab $a |- { <. x , y >. | ph } =
                  { z | E. x E. y ( z = <. x , y >. /\ ph ) } $.
  $}

  ${
    $d x z R $.  $d y z R $.
    $( The collection of ordered pairs in a class is a subclass of it.  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    opabss $p |- { <. x , y >. | x R y } C_ R $=
      ( vz cv wbr copab cop wceq wa wex cab df-opab wcel eleq1 biimpar df-br 
      sylan2b 19.23aivv abssi eqsstri ) AEZBEZCFZABGDEZUBUCHZIZUDJZBKAKZDLCUDAB
      DMUIDCUHUECNZABUGUFCNZUJUDUGUJUKUEUFCOPUBUCCQRSTUA $.
      $( [9-Jul-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.  $d z ch $.
    opabbid.1 $e |- ( ph -> A. x ph ) $.
    opabbid.2 $e |- ( ph -> A. y ph ) $.
    opabbid.3 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule).  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    opabbid $p |- ( ph -> { <. x , y >. | ps } = { <. x , y >. | ch } ) $=
      ( vz cv cop wceq wa wex cab copab anbi2d exbid abbidv df-opab 3eqtr4g ) 
      AIJDJEJKLZBMZENZDNZIOUBCMZENZDNZIOBDEPCDEPAUEUHIAUDUGDFAUCUFEGABCUBHQRRSB
      DEITCDEITUA $.
      $( [9-Jul-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x ph $.  $d y z ph $.  $d z ps $.  $d z ch $.
    opabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule). $)
    opabbidv $p |- ( ph -> { <. x , y >. | ps } = { <. x , y >. | ch } ) $=
      ( ax-17 opabbid ) ABCDEADGAEGFH $.
      $( [15-May-1995] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.
    opabbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions. $)
    opabbii $p |- { <. x , y >. | ph } = { <. x , y >. | ps } $=
      ( vz cv wceq copab eqid wb a1i opabbidv ax-mp ) FGZOHZACDIBCDIHOJPABCDABK
      PELMN $.
      $( [25-Jul-2011] $) $( [15-May-1995] $)
  $}

  ${
    $d x y z w v $.  $d v ph $.  $d v ps $.
    cbvopab.1 $e |- ( ph -> A. z ph ) $.
    cbvopab.2 $e |- ( ph -> A. w ph ) $.
    cbvopab.3 $e |- ( ps -> A. x ps ) $.
    cbvopab.4 $e |- ( ps -> A. y ps ) $.
    cbvopab.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution. $)
    cbvopab $p |- { <. x , y >. | ph } = { <. z , w >. | ps } $=
      ( vv cv cop wceq wa wex cab copab ax-17 hban opeq12 eqeq2d anbi12d 
      cbvex2 abbii df-opab 3eqtr4i ) LMZCMZDMZNZOZAPZDQCQZLRUIEMZFMZNZOZBPZFQEQ
      ZLRACDSBEFSUOVALUNUTCDEFUMAEUMETGUAUMAFUMFTHUAUSBCUSCTIUAUSBDUSDTJUAUJUPO
      UKUQOPZUMUSABVBULURUIUJUKUPUQUBUCKUDUEUFACDLUGBEFLUGUH $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x y z w $.  $d z w v ph $.  $d x y v ps $.
    cbvopabv.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution. $)
    cbvopabv $p |- { <. x , y >. | ph } = { <. z , w >. | ps } $=
      ( ax-17 cbvopab ) ABCDEFAEHAFHBCHBDHGI $.
      $( [15-Oct-1996] $)
  $}

  ${
    $d v w x y $.  $d v w y z $.  $d v w ph $.  $d v w ps $.
    cbvopab1.1 $e |- ( ph -> A. z ph ) $.
    cbvopab1.2 $e |- ( ps -> A. x ps ) $.
    cbvopab1.3 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab1 $p |- { <. x , y >. | ph } = { <. z , y >. | ps } $=
      ( vw vv cv cop wceq wa wex cab copab wsbc ax-17 hbs1 hban hbex opeq1 
      eqeq2d sbequ12 anbi12d exbidv cbvex hbsb sbequ sbie syl6bb bitri abbii 
      df-opab 3eqtr4i ) IKZCKZDKZLZMZANZDOZCOZIPUQEKZUSLZMZBNZDOZEOZIPACDQBEDQV
      DVJIVDUQJKZUSLZMZACVKRZNZDOZJOVJVCVPCJVCJSVOCDVMVNCVMCSACJTUAUBURVKMZVBVO
      DVQVAVMAVNVQUTVLUQURVKUSUCUDACJUEUFUGUHVPVIJEVOEDVMVNEVMESACJEFUIUAUBVIJS
      VKVEMZVOVHDVRVMVGVNBVRVLVFUQVKVEUSUCUDVRVNACVERBAJECUJABCEGHUKULUFUGUHUMU
      NACDIUOBEDIUOUP $.
      $( [6-Oct-2004] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab1s $p |- { <. x , y >. | ph } = { <. z , y >. | [ z / x ] ph } $=
      ( vw cv cop wceq wa wex cab wsbc copab ax-17 hbs1 hban hbex opeq1 eqeq2d 
      sbequ12 anbi12d exbidv cbvex abbii df-opab 3eqtr4i ) EFZBFZCFZGZHZAIZCJZB
      JZEKUGDFZUIGZHZABUOLZIZCJZDJZEKABCMURDCMUNVAEUMUTBDUMDNUSBCUQURBUQBNABDOP
      QUHUOHZULUSCVBUKUQAURVBUJUPUGUHUOUIRSABDTUAUBUCUDABCEUEURDCEUEUF $.
      $( [5-Nov-2004] $) $( [31-Jul-2003] $)
  $}

  ${
    $d x y $.  $d y z $.  $d z ph $.  $d x ps $.
    cbvopab1v.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the first bound variable in an ordered pair
       abstraction, using implicit substitution.  (The proof was shortened by
       Eric Schmidt, 4-Apr-2007.) $)
    cbvopab1v $p |- { <. x , y >. | ph } = { <. z , y >. | ps } $=
      ( ax-17 cbvopab1 ) ABCDEAEGBCGFH $.
      $( [4-Apr-2007] $) $( [31-Jul-2003] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.  $d y w ps $.
    cbvopab2v.1 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the second bound variable in an ordered pair
       abstraction, using implicit substitution. $)
    cbvopab2v $p |- { <. x , y >. | ph } = { <. x , z >. | ps } $=
      ( vw cv cop wceq wa wex cab copab opeq2 eqeq2d anbi12d cbvexv exbii 
      abbii df-opab 3eqtr4i ) GHZCHZDHZIZJZAKZDLZCLZGMUCUDEHZIZJZBKZELZCLZGMACD
      NBCENUJUPGUIUOCUHUNDEUEUKJZUGUMABUQUFULUCUEUKUDOPFQRSTACDGUABCEGUAUB $.
      $( [2-Sep-1999] $)
  $}

  ${
    $d w y z A $.  $d w ph $.  $d w x y z $.
    $( Move substitution into a class abstraction. $)
    csbopabg $p |- ( A e. B -> [_ A / x ]_ { <. y , z >. | ph } =
               { <. y , z >. | [ A / x ] ph } ) $=
      ( vw wcel cvv copab csb wsbc wceq elisset cv cop wa wex cab df-opab 
      csbeq2i csbabg sbcexg sbcang ax-17 sbcgf anbi1d bitrd exbidv abbidv 
      eqtrd eqcomi a1i 3eqtrd syl ) EFHEIHZBEACDJZKZABELZCDJZMEFNUPURBEGOCODOPM
      ZAQZDRZCRZGSZKZVAUSQZDRZCRZGSZUTBEUQVEIACDGTUAUPVFVDBELZGSVJVDBGEIUBUPVKV
      IGUPVKVCBELZCRVIVCCBEIUCUPVLVHCUPVLVBBELZDRVHVBDBEIUCUPVMVGDUPVMVABELZUSQ
      VGVAABEIUDUPVNVAUSVABEIVABUEUFUGUHUIUHUIUHUJUKVJUTMUPUTVJUSCDGTULUMUNUO 
      $.
      $( [6-Aug-2007] $)
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    $( Union of two ordered pair class abstractions. $)
    unopab $p |- ( { <. x , y >. | ph } u. { <. x , y >. | ps } ) =
               { <. x , y >. | ( ph \/ ps ) } $=
      ( vz cv cop wceq wa wex cab cun wo copab unab 19.43 andi exbii bitr2i 
      bitr3i abbii eqtri df-opab uneq12i 3eqtr4i ) EFCFDFGHZAIZDJZCJZEKZUFBIZDJ
      ZCJZEKZLZUFABMZIZDJZCJZEKZACDNZBCDNZLUPCDNUOUIUMMZEKUTUIUMEOVCUSEVCUHULMZ
      CJUSUHULCPVDURCURUGUKMZDJVDUQVEDUFABQRUGUKDPSRTUAUBVAUJVBUNACDEUCBCDEUCUD
      UPCDEUCUE $.
      $( [30-Sep-2002] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Transitive classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare a new symbol. $)
  $c Tr $. $( Transitive predicate (read:  "the following class is
              transitive") $)

  $( Extend wff notation to include transitive classes.  Notation from
     [TakeutiZaring] p. 35. $)
  wtr $a wff Tr A $.

  $( Define the transitive class predicate.  Not to be confused with a
     transitive relation (see ~ cotr ).  Definition of [Enderton] p. 71
     extended to arbitrary classes.  For alternate definitions, see ~ dftr2
     (which is suggestive of the word "transitive"), ~ dftr3 , ~ dftr4 ,
     ~ dftr5 , and (when ` A ` is a set) ~ unisuc .  The term "complete" is
     used instead of "transitive" in Definition 3 of [Suppes] p. 130. $)
  df-tr $a |- ( Tr A <-> U. A C_ A ) $.

  ${
    $d x y A $.
    $( An alternate way of defining a transitive class.  Exercise 7 of
       [TakeutiZaring] p. 40. $)
    dftr2 $p |- ( Tr A <-> A. x A. y ( ( x e. y /\ y e. A ) -> x e. A ) ) $=
      ( cuni wss cv wcel wi wal wtr wa dfss2 df-tr wex 19.23v eluni imbi1i 
      bitr4i albii 3bitr4i ) CDZCEAFZUAGZUBCGZHZAICJUBBFZGUFCGKZUDHBIZAIAUACLCM
      UHUEAUHUGBNZUDHUEUGUDBOUCUIUDBUBCPQRST $.
      $( [24-Apr-1994] $)

    $( An alternate way of defining a transitive class. $)
    dftr5 $p |- ( Tr A <-> A. x e. A A. y e. x y e. A ) $=
      ( wtr cv wcel wa wi wal wral dftr2 alcom impexp albii df-ral r19.21v 
      3bitr2i bitr4i 3bitri ) CDBEZAEZFZUACFZGTCFZHZAIBIUEBIZAIZUDBUAJZACJZBACK
      UEBALUGUCUHHZAIUIUFUJAUFUBUCUDHZHZBIUKBUAJUJUEULBUBUCUDMNUKBUAOUCUDBUAPQN
      UHACORS $.
      $( [20-Mar-2004] $)

    $( An alternate way of defining a transitive class.  Definition 7.1 of
       [TakeutiZaring] p. 35. $)
    dftr3 $p |- ( Tr A <-> A. x e. A x C_ A ) $=
      ( vy wtr cv wcel wral wss dftr5 dfss3 ralbii bitr4i ) BDCEBFCAEZGZABGMBHZ
      ABGACBIONABCMBJKL $.
      $( [29-Aug-1993] $)
  $}

  $( An alternate way of defining a transitive class.  Definition of [Enderton]
     p. 71. $)
  dftr4 $p |- ( Tr A <-> A C_ ~P A ) $=
    ( wtr cuni wss cpw df-tr sspwuni bitr4i ) ABACADAAEDAFAAGH $.
    $( [8-May-2009] $) $( [29-Aug-1993] $)

  $( Equality theorem for the transitive class predicate. $)
  treq $p |- ( A = B -> ( Tr A <-> Tr B ) ) $=
    ( wceq cuni wss wtr unieq sseq1d sseq2 bitrd df-tr 3bitr4g ) ABCZADZAEZBDZB
    EZAFBFMOPAEQMNPAABGHABPIJAKBKL $.
    $( [17-Sep-1993] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( In a transitive class, the membership relation is transitive.  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    trel $p |- ( Tr A -> ( ( B e. C /\ C e. A ) -> B e. A ) ) $=
      ( vy vx wtr cv wcel wa wi wal dftr2 wceq eleq12 wb eleq1 adantl anbi12d 
      adantr imbi12d cla42gv pm2.43b sylbi ) AFDGZEGZHZUEAHZIZUDAHZJZEKDKZBCHZC
      AHZIZBAHZJZDEALUKUNUOUJUPDEBCCAUDBMZUECMZIZUHUNUIUOUSUFULUGUMUDBUECNURUGU
      MOUQUECAPQRUQUIUOOURUDBAPSTUAUBUC $.
      $( [9-Jul-2011] $) $( [19-Apr-1994] $)
  $}

  $( In a transitive class, the membership relation is transitive. $)
  trel3 $p |- ( Tr A -> ( ( B e. C /\ C e. D /\ D e. A ) -> B e. A ) ) $=
    ( wtr wcel w3a wa trel anim2d 3anass syl5ib syld ) AEZBCFZCDFZDAFZGZOCAFZHZ
    BAFNOPQHZHTRNUASOACDIJOPQKLABCIM $.
    $( [19-Apr-1994] $)

  ${
    $d x A $.  $d x B $.
    $( An element of a transitive class is a subset of the class. $)
    trss $p |- ( Tr A -> ( B e. A -> B C_ A ) ) $=
      ( vx wtr wcel wss cv wi wceq eleq1 sseq1 imbi12d imbi2d wral dftr3 ra4 
      sylbi vtoclg pm2.43b ) ADZBAEZBAFZTCGZAEZUCAFZHZHTUAUBHZHCBAUCBIZUFUGTUHU
      DUAUEUBUCBAJUCBAKLMTUECANUFCAOUECAPQRS $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The intersection of transitive classes is transitive. $)
    trin $p |- ( ( Tr A /\ Tr B ) -> Tr ( A i^i B ) ) $=
      ( vx wtr wa cv cin wss wral wcel trss im2anan9 elin syl5ib ssin syl6ib 
      r19.21aiv dftr3 sylibr ) ADZBDZEZCFZABGZHZCUDIUDDUBUECUDUBUCUDJZUCAHZUCBH
      ZEZUEUBUCAJZUCBJZEUIUFTUJUGUAUKUHAUCKBUCKLUCABMNUCABOPQCUDRS $.
      $( [9-May-1994] $)
  $}

  $( The empty set is transitive. $)
  tr0 $p |- Tr (/) $=
    ( c0 wtr cpw wss 0ss dftr4 mpbir ) ABAACZDHEAFG $.
    $( [16-Sep-1993] $)

  $( The universe is transitive. $)
  trv $p |- Tr _V $=
    ( cvv wtr cuni wss ssv df-tr mpbir ) ABACZADHEAFG $.
    $( [14-Sep-2003] $)

  ${
    $d x y A $.
    $( The union of a class of transitive sets is transitive.  Exercise 5(a) of
       [Enderton] p. 73.  (Contributed by Scott Fenton, 21-Feb-2011.) $)
    truni $p |- ( A. x e. A Tr x -> Tr U. A ) $=
      ( vy cv wtr wral wel cuni wss wi wal wcel wa dftr3 biimpi a1i ax-17 
      alral syl jctird r19.26 syl6ibr ssuni ralimi syl6 ralimia df-ral ralbii 
      ralcom4 bitr2i sylibr wrex eluni2 imbi1i r19.23v bitr4i albii 3bitri ) AD
      ZEZABFZCAGZCDZBHZIZJZABFZCKZVDEZVAVECUSFZABFZVHUTVJABUSBLZUTVCUSIZVLMZCUS
      FZVJVLUTVMCUSFZVLCUSFZMVOVLUTVPVQUTVPJVLUTVPCUSNOPVLVLCKVQVLCQVLCUSRSTVMV
      LCUSUAUBVNVECUSVCUSBUCUDUEUFVKVFCKZABFVHVJVRABVECUSUGUHVFACBUIUJUKVIVECVD
      FVCVDLZVEJZCKVHCVDNVECVDUGVTVGCVTVBABULZVEJVGVSWAVEAVCBUMUNVBVEABUOUPUQUR
      UK $.
      $( [21-Feb-2011] $)

    $( The intersection of a class of transitive sets is transitive.  Exercise
       5(b) of [Enderton] p. 73.  (Contributed by Scott Fenton,
       25-Feb-2011.) $)
    trint $p |- ( A. x e. A Tr x -> Tr |^| A ) $=
      ( vy cv wtr wral wel wss wi wal cint dftr3 ralbii biimpi df-ral ralcom4 
      bitri sylib ralim alimi syl wcel visset elint2 ssint imbi12i albii 
      3bitri sylibr ) ADZEZABFZCAGZABFZCDZUJHZABFZIZCJZBKZEZULUMUPIZABFZCJZUSUL
      UPCUJFZABFZVDULVFUKVEABCUJLMNVFVBCJZABFVDVEVGABUPCUJOMVBACBPQRVCURCUMUPAB
      STUAVAUOUTHZCUTFUOUTUBZVHIZCJUSCUTLVHCUTOVJURCVIUNVHUQAUOBCUCUDAUOBUEUFUG
      UHUI $.
      $( [25-Feb-2011] $)

    $( If ` A ` is transitive and non-null, then ` |^| A ` is a subset of
       ` A ` .  (Contributed by Scott Fenton, 3-Mar-2011.) $)
    trintss $p |- ( ( A =/= (/) /\ Tr A ) -> |^| A C_ A ) $=
      ( vy vx c0 wne wtr wa cint wel wral cv wcel wrex r19.2z ex trel ancomsd 
      exp3a r19.23adv sylan9 visset elint2 syl5ib ssrdv ) ADEZAFZGZBAHZAUGBCIZC
      AJZBKZALZUKUHLUEUJUICAMZUFULUEUJUMUICANOUFUIULCAUFCKZALZUIULUFUIUOULAUKUN
      PQRSTCUKABUAUBUCUD $.
      $( [3-Mar-2011] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Replacement
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Introduce the Axiom of Replacement
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.
    $( Axiom of Replacement.  An axiom scheme of Zermelo-Fraenkel set theory.
       Axiom 5 of [TakeutiZaring] p. 19.  It tells us that that the image of
       any set under a function is also a set (see the variant ~ funimaex ).
       Although ` ph ` may be any wff whatsoever, this axiom is useful (i.e.
       its antecedent is satisfied) when we are given some function and ` ph `
       encodes the predicate "the value of the function at ` w ` is ` z ` ."
       Thus ` ph ` will ordinarily have free variables ` w ` and ` z ` - think
       of it informally as ` ph ( w , z ) ` .  We prefix ` ph ` with the
       quantifier ` A. y ` in order to "protect" the axiom from any ` ph `
       containing ` y ` , thus allowing us to eliminate any restrictions on
       ` ph ` .  This makes the axiom usable in a formalization that omits the
       logically redundant axiom ~ ax-17 .  Another common variant is derived
       as ~ axrep5 , where you can find some further remarks.  A slightly more
       compact version is shown as ~ axrep2 .  A quite different variant is
       ~ zfrep6 , which if used in place of ~ ax-rep would also require that
       the Separation Scheme ~ axsep be stated as a separate axiom.

       There is very a strong generalization of Replacement that doesn't demand
       function-like behavior of ` ph ` .  Two versions of this generalization
       are called the Collection Principle ~ cp and the Boundedness Axiom
       ~ bnd .

       Many developments of set theory distinguish the uses of Replacement from
       uses the weaker axioms of Separation ~ axsep , Null Set ~ axnul , and
       Pairing ~ axpr , all of which we derive from Replacement.  In order to
       make it easier to identify the uses of those redundant axioms, we
       restate them as axioms ~ ax-sep , ~ ax-nul , and ~ ax-pr below the
       theorems that prove them. $)
    ax-rep $a |- ( A. w E. y A. z ( A. y ph -> z = y ) ->
                     E. y A. z ( z e. y <-> E. w ( w e. x /\ A. y ph ) ) ) $.
  $}

  ${
    $d w y ph $.  $d w x y z $.
    $( The version of the Axiom of Replacement used in the Metamath Solitaire
       applet ~ http://us.metamath.org/mmsolitaire/mms.html .  Equivalence is
       shown via the path ~ ax-rep ` -> ` ~ axrep1 ` -> ` ~ axrep2 ` -> `
       ~ axrepnd ` -> ` ~ zfcndrep = ~ ax-rep . $)
    axrep1 $p |- E. x ( E. y A. z ( ph -> z = y ) ->
                 A. z ( z e. x <-> E. x ( x e. y /\ ph ) ) ) $=
      ( vw cv wceq wi wal wex wcel wa wb elequ2 anbi1d exbidv bibi2d albidv 
      imbi2d ax-4 imim1i alimi eximi ax-rep syl ax-17 hbe1 hbbi hbal hba1 hban 
      hbex bibi1d cbvex sylib chvarv 19.35ri 19.3 anbi2i exbii bibi2i albii 
      imbi2i mpbi ) ADFZCFZGZHZDIZCJZVEBFZKZVKVFKZACIZLZBJZMZDIZHZBJVJVLVMALZBJ
      ZMZDIZHZBJVJVRBVJBIZVLVKEFZKZVNLZBJZMZDIZBJZHWEVRBJZHECWFVFGZWLWMWEWNWKVR
      BWNWJVQDWNWIVPVLWNWHVOBWNWGVMVNECBNOPQRPSWEVEVFKZWIMZDIZCJZWLWEVNVGHZDIZC
      JZBIWRVJXABVIWTCVHWSDVNAVGACTUAUBUCUBAECDBUDUEWQWKCBWPBDWOWIBWOBUFWHBUGUH
      UIWJCDVLWICVLCUFWHCBWGVNCWGCUFACUJUKULUHUIVFVKGZWPWJDXBWOVLWICBDNUMRUNUOU
      PUQVSWDBVRWCVJVQWBDVPWAVLVOVTBVNAVMACACUFURUSUTVAVBVCUTVD $.
      $( [19-Nov-2005] $)
  $}

  ${
    $d w ph $.  $d w x y z $.
    $( Axiom of Replacement expressed with the fewest number of different
       variables and without any restrictions on ` ph ` . $)
    axrep2 $p |- E. x ( E. y A. z ( ph -> z = y ) ->
                        A. z ( z e. x <-> E. x ( x e. y /\ A. y ph ) ) ) $=
      ( vw wal cv wceq wi wex wcel wa wb hbe1 ax-17 hbim hbex elequ2 anbi1d 
      exbidv bibi2d albidv imbi2d axrep1 chvar ax-4 imim1i alimi eximi hba1 
      hbal equequ2 cbvex sylib ax-mp ) ACFZDGZEGZHZIZDFZEJZUQBGZKZVCCGZKZUPLZBJ
      ZMZDFZIZBJZAUQVEHZIZDFZCJZVJIZBJVBVDVCURKZUPLZBJZMZDFZIZBJVLECVKEBVBVJEVA
      ENVJEOPQURVEHZWCVKBWDWBVJVBWDWAVIDWDVTVHVDWDVSVGBWDVRVFUPECBRSTUAUBUCTUPB
      EDUDUEVKVQBVPVBVJVPUPVMIZDFZCJVBVOWFCVNWEDUPAVMACUFUGUHUIWFVACEWFEOUTCDUP
      USCACUJUSCOPUKVEURHZWEUTDWGVMUSUPCEDULUCUBUMUNUGUIUO $.
      $( [15-Aug-2003] $)
  $}

  ${
    $d w x y z $.
    $( Axiom of Replacement slightly strengthened from ~ axrep2 ; ` w ` may
       occur free in ` ph ` . $)
    axrep3 $p |- E. x ( E. y A. z ( ph -> z = y ) ->
                 A. z ( z e. x <-> E. x ( x e. w /\ A. y ph ) ) ) $=
      ( cv wceq wi wal wex wcel wa wb hbe1 ax-17 hba1 hban hbex hbbi hbal hbim 
      elequ2 anbi1d exbidv bibi2d albidv imbi2d axrep2 chvar ) ADFZCFZGHDIZCJZU
      JBFZKZUNUKKZACIZLZBJZMZDIZHZBJUMUOUNEFZKZUQLZBJZMZDIZHZBJCEVICBUMVHCULCNV
      GCDUOVFCUOCOVECBVDUQCVDCOACPQRSTUARUKVCGZVBVIBVJVAVHUMVJUTVGDVJUSVFUOVJUR
      VEBVJUPVDUQCEBUBUCUDUEUFUGUDABCDUHUI $.
      $( [2-Jan-1997] $)
  $}

  ${
    $d x y z w $.
    axrep4.1 $e |- ( ph -> A. z ph ) $.
    $( A more traditional version of the Axiom of Replacement. $)
    axrep4 $p |- ( A. x E. z A. y ( ph -> y = z ) ->
                E. z A. y ( y e. z <-> E. x ( x e. w /\ ph ) ) ) $=
      ( cv wceq wi wal wex wcel wa wb axrep3 19.35i ax-17 hba1 hban hbex hbbi 
      hbal hbe1 elequ2 19.3 anbi2i exbii a1i bibi12d albid cbvex sylib ) ACGZDG
      ZHICJDKZBJUMBGZLZUPEGLZADJZMZBKZNZCJZBKUMUNLZURAMZBKZNZCJZDKUOVCBABDCEOPV
      CVHBDVBDCUQVADUQDQUTDBURUSDURDQADRSTUAUBVGBCVDVFBVDBQVEBUCUAUBUPUNHZVBVGC
      VICQVIUQVDVAVFBDCUDVAVFNVIUTVEBUSAURADFUEUFUGUHUIUJUKUL $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d x y z w $.
    axrep5.1 $e |- ( ph -> A. z ph ) $.
    $( Axiom of Replacement (similar to Axiom Rep of [BellMachover] p. 463).
       The antecedent tells us ` ph ` is analogous to a "function" from ` x `
       to ` y ` (although it is not really a function since it is a wff and not
       a class).  In the consequent we postulate the existence of a set ` z `
       that corresponds to the "image" of ` ph ` restricted to some other set
       ` w ` .  The hypothesis says ` z ` must not be free in ` ph ` . $)
    axrep5 $p |- ( A. x ( x e. w -> E. z A. y ( ph -> y = z ) ) ->
                E. z A. y ( y e. z <-> E. x ( x e. w /\ ph ) ) ) $=
      ( cv wcel wceq wi wal wex wa wb 19.37v impexp albii 19.21v bitr2i exbii 
      bitr3i ax-17 hban axrep4 sylbi anabs5 bibi2i sylib ) BGEGHZACGZDGZIZJZCKZ
      DLJZBKZUJUKHZUIUIAMZMZBLZNZCKZDLZUQURBLZNZCKZDLUPURULJZCKZDLZBKVCUOVIBUOU
      IUNJZDLVIUIUNDOVJVHDVHUIUMJZCKVJVGVKCUIAULPQUIUMCRSTUAQURBCDEUIADUIDUBFUC
      UDUEVBVFDVAVECUTVDUQUSURBUIAUFTUGQTUH $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d y z A v $.  $d z ph v $.  $d A w v $.  $d x y z v $.  $d x w v $.
    zfrepclf.1 $e |- ( w e. A -> A. x w e. A ) $.
    zfrepclf.2 $e |- A e. _V $.
    zfrepclf.3 $e |- ( x e. A -> E. z A. y ( ph -> y = z ) ) $.
    $( An inference rule based on the Axiom of Replacement.  Typically, ` ph `
       defines a function from ` x ` to ` y ` . $)
    zfrepclf $p |- E. z A. y ( y e. z <-> E. x ( x e. A /\ ph ) ) $=
      ( vv cv wcel wa wex wb wal wceq wi ax-17 hbeq eleq2 syl6bi 19.21ai 
      axrep5 syl anbi1d exbid bibi2d albidv exbidv mpbid vtocle ) CKZDKZLZBKZFL
      ZAMZBNZOZCPZDNZJFHJKZFQZUOUPVCLZAMZBNZOZCPZDNZVBVDVEAUMUNQRCPDNZRZBPVJVDV
      LBBEEVCFEKVCLBSGTZVDVEUQVKVCFUPUAZIUBUCABCDJADSUDUEVDVIVADVDVHUTCVDVGUSUO
      VDVFURBVMVDVEUQAVNUFUGUHUIUJUKUL $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d x y z A $.  $d z ph $.
    zfrep3cl.1 $e |- A e. _V $.
    zfrep3cl.2 $e |- ( x e. A -> E. z A. y ( ph -> y = z ) ) $.
    $( An inference rule based on the Axiom of Replacement.  Typically, ` ph `
       defines a function from ` x ` to ` y ` . $)
    zfrep3cl $p |- E. z A. y ( y e. z <-> E. x ( x e. A /\ ph ) ) $=
      ( cv wcel ax-17 zfrepclf ) ABCDCECHEIBJFGK $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d ph y z $.  $d ps z $.  $d x y z $.
    zfrep4.1 $e |- { x | ph } e. _V $.
    zfrep4.2 $e |- ( ph -> E. z A. y ( ps -> y = z ) ) $.
    $( A version of Replacement using class abstractions. $)
    zfrep4 $p |- { y | E. x ( ph /\ ps ) } e. _V $=
      ( cv cab wcel wa wex cvv abid anbi1i exbii abbii wceq wb wal hbab1 wi 
      sylbi zfrepclf abeq2 mpbir issetri eqeltrri ) CHACIZJZBKZCLZDIZABKZCLZDIM
      ULUODUKUNCUJABACNZOPQEUMEHZUMRZELDHZUQJULSDTZELBCDEDUIACDUAFUJABUSUQRUBDT
      ELUPGUCUDURUTEULDUQUEPUFUGUH $.
      $( [26-Nov-1995] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Derive the Axiom of Separation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.  $d y z ph w $.
    $( Separation Scheme, which is an axiom scheme of Zermelo's original
       theory.  Scheme Sep of [BellMachover] p. 463.  As we show here, it is
       redundant if we assume Replacement in the form of ~ ax-rep .  Some
       textbooks present Separation as a separate axiom scheme in order to show
       that much of set theory can be derived without the stronger
       Replacement.  The Separation Scheme is a weak form of Frege's Axiom of
       Comprehension, conditioning it (with ` x e. z ` ) so that it asserts the
       existence of a collection only if it is smaller than some other
       collection ` z ` that already exists.  This prevents Russell's paradox
       ~ ru .  In some texts, this scheme is called "Aussonderung" or the
       Subset Axiom.

       The variable ` x ` can appear free in the wff ` ph ` , which in
       textbooks is often written ` ph ( x ) ` .  To specify this in the
       Metamath language, we _omit_ the distinct variable requirement ($d) that
       ` x ` not appear in ` ph ` .

       For a version using a class variable, see ~ zfauscl , which requires the
       Axiom of Extensionality as well as Replacement for its derivation.

       If we omit the requirement that ` y ` not occur in ` ph ` , we can
       derive a contradiction, as ~ notzfaus shows (contradicting ~ zfauscl ).
       However, as ~ axsep2 shows, we can eliminate the restriction that ` z `
       not occur in ` ph ` .

       Note: the distinct variable restriction that ` z ` not occur in ` ph `
       is actually redundant in this particular proof, but we keep it since its
       purpose is to demonstrate the derivation of the exact ~ ax-sep from
       ~ ax-rep .

       This theorem should not be referenced by any proof.  Instead, use
       ~ ax-sep below so that the uses of the Axiom of Separation can be more
       easily identified. $)
    axsep $p |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $=
      ( vw cv wcel wceq wa wex wb wal wi ax-17 axrep5 a9e equtr equcomi syl6 
      adantrd 19.21aiv eximi ax-mp a1i mpg an12 exbii elequ1 anbi1d equsex 
      bitr3i bibi2i albii mpbi ) BFZCFZGZEFZDFZGZURUOHZAIZIZEJZKZBLZCJZUQUOUSGZ
      AIZKZBLZCJUTVBUOUPHZMZBLZCJZMVGEVBEBCDVBCNOVOUTUPURHZCJVOCEPVPVNCVPVMBVPV
      AVLAVPVAUPUOHVLCEBQCBRSTUAUBUCUDUEVFVKCVEVJBVDVIUQVDVAUTAIZIZEJVIVRVCEVAU
      TAUFUGVQVIEBVIENVAUTVHAEBDUHUIUJUKULUMUGUN $.
      $( [11-Sep-2006] $)

    $( The Axiom of Separation of ZF set theory.  It was derived as ~ axsep
       above and is therefore redundant, but we state it as a separate axiom
       here so that its uses can be identified more easily. $)
    ax-sep $a |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $.
  $}

  ${
    $d x y z w $.  $d y ph w $.  $d z w $.
    $( A less restrictive version of the Separation Scheme ~ axsep , where
       variables ` x ` and ` z ` can both appear free in the wff ` ph ` , which
       can therefore be thought of as ` ph ( x , z ) ` .  This version was
       derived from the more restrictive ~ ax-sep with no additional set theory
       axioms. $)
    axsep2 $p |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $=
      ( vw cv wceq wex wcel wa wb wal a9e ax-sep elequ2 biimprd pm4.71rd 
      anbi1d anass syl6bb bibi2d albidv exbidv mpbiri 19.23aiv ax-mp ) EFZDFZGZ
      EHBFZCFIZUJUHIZAJZKZBLZCHZEDMUIUPEUIUPUKUJUGIZUMJZKZBLZCHUMBCENUIUOUTCUIU
      NUSBUIUMURUKUIUMUQULJZAJURUIULVAAUIULUQUIUQULEDBOPQRUQULASTUAUBUCUDUEUF 
      $.
      $( [10-Dec-2006] $)
  $}

  ${
    $d x y A z $.  $d y ph z $.
    zfauscl.1 $e |- A e. _V $.
    $( Separation Scheme using a class variable.  To derive this from
       ~ ax-sep , we invoke the Axiom of Extensionality (indirectly via
       ~ vtocl ), which is needed for the justification of class variable
       notation.

       If we omit the requirement that ` y ` not occur in ` ph ` , we can
       derive a contradiction, as ~ notzfaus shows. $)
    zfauscl $p |- E. y A. x ( x e. y <-> ( x e. A /\ ph ) ) $=
      ( vz cv wcel wa wb wal wex wceq eleq2 anbi1d bibi2d albidv exbidv ax-sep 
      vtocl ) BGZCGHZUAFGZHZAIZJZBKZCLUBUADHZAIZJZBKZCLFDEUCDMZUGUKCULUFUJBULUE
      UIUBULUDUHAUCDUANOPQRABCFST $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph z $.  $d x y z $.
    bm1.3ii.1 $e |- E. x A. y ( ph -> y e. x ) $.
    $( Convert implication to equivalence using Aussonderung.  Similar to
       Theorem 1.3ii of [BellMachover] p. 463. $)
    bm1.3ii $p |- E. x A. y ( y e. x <-> ph ) $=
      ( vz cv wcel wi wal wa wb wex wceq elequ2 imbi2d albidv cbvexv mpbi 
      ax-sep pm3.2i exan 19.42v 19.26 bimsc1 alimi sylbir eximi 19.23aiv ax-mp 
      ) ACFZEFZGZHZCIZUJBFZGZULAJKZCIZBLZJZELUPAKZCIZBLZUNUSEUNELZUSAUPHZCIZBLV
      DDVFUNBEUOUKMZVEUMCVGUPULABECNOPQRACBESTUAUTVCEUTUNURJZBLVCUNURBUBVHVBBVH
      UMUQJZCIVBUMUQCUCVIVACAULUPUDUEUFUGUFUHUI $.
      $( [5-Aug-1993] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Derive the Null Set Axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    zfnuleu.1 $e |- E. x A. y -. y e. x $.
    $( Show the uniqueness of the empty set (using the Axiom of Extensionality
       via ~ bm1.1 to strengthen ~ axnul ). $)
    zfnuleu $p |- E! x A. y -. y e. x $=
      ( cv wcel wn wal weu wceq wb wex equid nbn3 albii exbii mpbi ax-17 bm1.1 
      ax-mp eubii mpbir ) BDZADEZFZBGZAHUCUBUBIZFZJZBGZAHZUIAKZUJUEAKUKCUEUIAUD
      UHBUFUCBLMNZOPUGABUGAQRSUEUIAULTUA $.
      $( [22-Dec-2007] $)
  $}

  ${
    $d x y z w $.
    $( Prove ~ axnul directly from ~ ax-rep without using any equality axioms
       ( ~ ax-9 thru ~ ax-16 ).  The wff ` x = x ` substituted for ` ph ` in
       the ~ ax-rep instance is arbitrary.  Here, we don't need to know if
       ` x = x ` is true or false, only that it's not both.  (Contributed by
       Jeff Hoffman, 4-Feb-2008.) $)
    axnulALT $p |- E. x A. y -. y e. x $=
      ( vw vz cv wceq wn wb wal wi wex wcel wa ax-rep pm5.19 ax-4 mto intnan 
      nex nbn albii exbii sylibr 19.8a pm2.21i mpg ) AEZUGFZUHGHZAIZBEZUGFZJZBI
      ZAKZUKUGLZGZBIZAKZCUOCIUPCEDELZUJMZCKZHZBIZAKUSUIDABCNURVDAUQVCBVBUPVACUJ
      UTUJUIUHOUIAPQZRSTUAUBUCUMUOBUNAUDUJULVEUEUFUF $.
      $( [4-Feb-2008] $)

    $( The Null Set Axiom of ZF set theory: there exists a set with no
       elements.  Axiom of Empty Set of [Enderton] p. 18.  In some textbooks,
       this is presented as a separate axiom; here we show it can be derived
       from Separation ~ ax-sep .  This version of the Null Set Axiom tells us
       that at least one empty set exists, but does not tells us that it is
       unique - we need the Axiom of Extensionality to do that (see
       ~ zfnuleu ).

       This proof, suggested by Jeff Hoffman (3-Feb-2008), does not require the
       set existence axiom ~ ax-9 , unlike some empty set existence proofs
       (such as the remark in [Kunen] p. 11).  However, it uses ~ ax-4 , which
       also presupposes the existence of at least one set, i.e it does not hold
       in a "free logic" valid in empty domains.  Theorem ~ ax4 , which shows
       the redundancy of ~ ax-4 , depends on ~ ax-9 for its proof.  See
       ~ axnulALT for a similar proof directly from ~ ax-rep .

       This theorem should not be referenced by any proof (except ~ snex
       below).  Instead, use ~ ax-nul below so that the uses of the Null Set
       Axiom can be more easily identified. $)
    axnul $p |- E. x A. y -. y e. x $=
      ( vz cv wcel wn wa wb wal wex ax-sep pm3.24 intnan id mtbiri alimi eximi 
      ax-mp ) BDZADEZSCDEZSSEZUBFGZGZHZBIZAJTFZBIZAJUCBACKUFUHAUEUGBUETUDUCUAUB
      LMUENOPQR $.
      $( [4-Feb-2008] $) $( [7-Aug-2003] $)

    $( The Null Set Axiom of ZF set theory.  It was derived as ~ axnul above
       and is therefore redundant, but we state it as a separate axiom here so
       that its uses can be identified more easily. $)
    ax-nul $a |- E. x A. y -. y e. x $.

    $( The Null Set Axiom of ZF set theory: the empty set exists.  Corollary
       5.16 of [TakeutiZaring] p. 20.  For the unabbreviated version, see
       ~ ax-nul .  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    0ex $p |- (/) e. _V $=
      ( vx vy c0 cvv wcel cv wceq wex wn wal ax-nul eq0 exbii mpbir isset ) CDE
      AFZCGZAHZRBFPEIBJZAHABKQSABPLMNACON $.
      $( [9-Jul-2011] $) $( [5-Aug-1993] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Theorems requiring subset and intersection existence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z $.
    $( No set contains all sets.  Theorem 41 of [Suppes] p. 30. $)
    nalset $p |- -. E. x A. y y e. x $=
      ( vz cv wcel wn wex wal alexn wa wb visset zfauscl wceq elequ1 elequ2 
      bitrd notbid anbi12d bibi12d a4v pclem6 syl eximi ax-mp mpgbi ) BDZADZEZF
      ZBGZUIBHAGFAUIABICDZUGEZULUHEZULULEZFZJZKZCHZBGUKUPCBUHALMUSUJBUSUGUGEZUI
      UTFZJZKZUJURVCCBULUGNZUMUTUQVBCBBOVDUNUIUPVACBAOVDUOUTVDUOUGULEUTCBCOCBBP
      QRSTUAUTUIUBUCUDUEUF $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( The universal class is not a member of itself (and thus is not a set).
       Proposition 5.21 of [TakeutiZaring] p. 21; our proof, however, does not
       depend on the Axiom of Regularity. $)
    vprc $p |- -. _V e. _V $=
      ( vx vy cvv wcel cv wceq wex wal nalset wb visset tbt albii dfcleq 
      bitr4i exbii mtbi isset mtbir ) CCDAEZCFZAGZBEZTDZBHZAGUBABIUEUAAUEUDUCCD
      ZJZBHUAUDUGBUFUDBKLMBTCNOPQACRS $.
      $( [23-Aug-1993] $)
  $}

  $( The universal class doesn't belong to any class.  (Contributed by FL,
     31-Dec-2006.) $)
  nvel $p |- -. _V e. A $=
    ( cvv wcel vprc elisset mto ) BACBBCDBAEF $.
    $( [29-Dec-2006] $)

  $( The universal class does not exist. $)
  vnex $p |- -. E. x x = _V $=
    ( cvv wcel cv wceq wex vprc isset mtbi ) BBCADBEAFGABHI $.
    $( [4-Jul-2005] $)

  ${
    $d A x y $.  $d B x y $.
    inex1.1 $e |- A e. _V $.
    $( Separation Scheme (Aussonderung) using class notation.  Compare Exercise
       4 of [TakeutiZaring] p. 22. $)
    inex1 $p |- ( A i^i B ) e. _V $=
      ( vx vy cin cv wceq wex wcel wa wb wal zfauscl dfcleq elin bibi2i albii 
      bitri exbii mpbir issetri ) DABFZDGZUCHZDIEGZUDJZUFAJUFBJZKZLZEMZDIUHEDAC
      NUEUKDUEUGUFUCJZLZEMUKEUDUCOUMUJEULUIUGUFABPQRSTUAUB $.
      $( [5-Aug-1993] $)
  $}

  ${
    inex2.1 $e |- A e. _V $.
    $( Separation Scheme (Aussonderung) using class notation. $)
    inex2 $p |- ( B i^i A ) e. _V $=
      ( cin cvv incom inex1 eqeltri ) BADABDEBAFABCGH $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Closed-form, generalized Separation Scheme. $)
    inex1g $p |- ( A e. C -> ( A i^i B ) e. _V ) $=
      ( vx cv cin cvv wcel wceq ineq1 eleq1d visset inex1 vtoclg ) DEZBFZGHABFZ
      GHDACOAIPQGOABJKOBDLMN $.
      $( [7-Apr-1995] $)
  $}

  ${
    ssex.1 $e |- B e. _V $.
    $( The subset of a set is also a set.  Exercise 3 of [TakeutiZaring]
       p. 22.  This is one way to express the Axiom of Separation ~ ax-sep
       (a.k.a.  Subset Axiom). $)
    ssex $p |- ( A C_ B -> A e. _V ) $=
      ( wss cin wceq cvv wcel df-ss inex2 eleq1 mpbii sylbi ) ABDABEZAFZAGHZABI
      ONGHPBACJNAGKLM $.
      $( [27-Apr-1994] $)
  $}

  ${
    ssexi.1 $e |- B e. _V $.
    ssexi.2 $e |- A C_ B $.
    $( The subset of a set is also a set. $)
    ssexi $p |- A e. _V $=
      ( wss cvv wcel ssex ax-mp ) ABEAFGDABCHI $.
      $( [9-Sep-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subset of a set is also a set.  Exercise 3 of [TakeutiZaring] p. 22
       (generalized). $)
    ssexg $p |- ( ( A C_ B /\ B e. C ) -> A e. _V ) $=
      ( vx wcel wss cvv cv wi wceq sseq2 imbi1d visset ssex vtoclg impcom ) BCE
      ABFZAGEZADHZFZRIQRIDBCSBJTQRSBAKLASDMNOP $.
      $( [11-Sep-2006] $) $( [14-Aug-1994] $)
  $}

  $( Existence of a difference. $)
  difexg $p |- ( A e. C -> ( A \ B ) e. _V ) $=
    ( cdif wss wcel cvv difss ssexg mpan ) ABDZAEACFKGFABHKACIJ $.
    $( [26-May-1998] $)

  ${
    $d x y A $.  $d y ph $.
    zfausab.1 $e |- A e. _V $.
    $( Separation Scheme in terms of a class abstraction. $)
    zfausab $p |- { x | ( x e. A /\ ph ) } e. _V $=
      ( cv wcel wa cab ssab2 ssexi ) BECFAGBHCDABCIJ $.
      $( [8-Jun-1994] $)
  $}

  ${
    $d x A $.
    $( Separation Scheme in terms of a restricted class abstraction. $)
    rabexg $p |- ( A e. B -> { x e. A | ph } e. _V ) $=
      ( crab wss wcel cvv ssrab2 ssexg mpan ) ABCEZCFCDGLHGABCILCDJK $.
      $( [23-Oct-1999] $)
  $}

  ${
    $d x A $.
    rabex.1 $e |- A e. _V $.
    $( Separation Scheme in terms of a restricted class abstraction. $)
    rabex $p |- { x e. A | ph } e. _V $=
      ( cvv wcel crab rabexg ax-mp ) CEFABCGEFDABCEHI $.
      $( [19-Jul-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    elssabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction involving a subset.  Unlike ~ elabg ,
       ` A ` does not have to be a set. $)
    elssabg $p |- ( B e. C ->
                  ( A e. { x | ( x C_ B /\ ph ) } <-> ( A C_ B /\ ps ) ) ) $=
      ( wcel wss wa cvv wi cv cab wb ssexg expcom adantrd wceq sseq1 anbi12d 
      elab3g syl ) EFHZDEIZBJZDKHZLDCMZEIZAJZCNHUFOUDUEUGBUEUDUGDEFPQRUJUFCDKUH
      DSUIUEABUHDETGUAUBUC $.
      $( [29-Aug-2007] $) $( [29-Aug-2006] $)
  $}

  $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
  elpw2g $p |- ( B e. C -> ( A e. ~P B <-> A C_ B ) ) $=
    ( wcel cpw wss elpwi cvv ssexg elpwg biimparc syldan expcom impbid2 ) BCDZA
    BEDZABFZABGQOPQOAHDZPABCIRPQABHJKLMN $.
    $( [7-Aug-2000] $)

  ${
    elpw2.1 $e |- B e. _V $.
    $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
    elpw2 $p |- ( A e. ~P B <-> A C_ B ) $=
      ( cvv wcel cpw wss wb elpw2g ax-mp ) BDEABFEABGHCABDIJ $.
      $( [11-Oct-2007] $)
  $}

  ${
    $d x A $.
    $( The intersection of a non-empty class exists.  Exercise 5 of
       [TakeutiZaring] p. 44 and its converse. $)
    intex $p |- ( A =/= (/) <-> |^| A e. _V ) $=
      ( vx c0 wne cint cvv wcel cv wex n0 wss intss1 visset ssex syl 19.23aiv 
      sylbi wceq vprc inteq int0 syl6eq eleq1d mtbiri necon2ai impbii ) ACDZAEZ
      FGZUGBHZAGZBIUIBAJUKUIBUKUHUJKUIUJALUHUJBMNOPQUIACACRZUIFFGSULUHFFULUHCEF
      ACTUAUBUCUDUEUF $.
      $( [15-Mar-2007] $) $( [13-Aug-2002] $)
  $}

  $( If a class intersection is not a set, it must be the universe. $)
  intnex $p |- ( -. |^| A e. _V <-> |^| A = _V ) $=
    ( cint cvv wcel wn wceq c0 intex necon1bbii inteq int0 syl6eq sylbi vprc 
    eleq1 mtbiri impbii ) ABZCDZEZRCFZTAGFZUASAGAHIUBRGBCAGJKLMUASCCDNRCCOPQ $.
    $( [3-Jul-2005] $)

  ${
    $d x y $.  $d ph y $.
    $( The intersection of a non-empty class abstraction exists. $)
    intexab $p |- ( E. x ph <-> |^| { x | ph } e. _V ) $=
      ( wex cab c0 wne cint cvv wcel abn0 intex bitr3i ) ABCABDZEFMGHIABJMKL $.
      $( [21-Oct-2003] $)
  $}

  $( The intersection of a non-empty restricted class abstraction exists. $)
  intexrab $p |- ( E. x e. A ph <-> |^| { x e. A | ph } e. _V ) $=
    ( cv wcel wa wex cab cint cvv wrex crab intexab df-rex df-rab inteqi 
    eleq1i 3bitr4i ) BDCEAFZBGSBHZIZJEABCKABCLZIZJESBMABCNUCUAJUBTABCOPQR $.
    $( [21-Oct-2003] $)

  ${
    $d x y $.  $d x A $.  $d y ph $.  $d x ps $.  $d x ch $.
    intabs.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    intabs.2 $e |- ( x = |^| { y | ps } -> ( ph <-> ch ) ) $.
    intabs.3 $e |- ( |^| { y | ps } C_ A /\ ch ) $.
    $( Absorption of a redundant conjunct in the intersection of a class
       abstraction. $)
    intabs $p |- |^| { x | ( x C_ A /\ ph ) } = |^| { x | ph } $=
      ( cv wss wa cab cint cvv wcel wceq sseq1 anbi12d intmin3 wn intnex ssv 
      sseq2 mpbiri sylbi pm2.61i cbvabv inteqi sseqtr4i simpr ss2abi intss 
      ax-mp eqssi ) DJZFKZALZDMZNZADMZNZUTBEMZNZVBVDOPZUTVDKZURVDFKZCLDVDOUPVDQ
      UQVGACUPVDFRHSITVEUAVDOQZVFVCUBVHVFUTOKUTUCVDOUTUDUEUFUGVAVCABDEGUHUIUJUS
      VAKVBUTKURADUQAUKULUSVAUMUNUO $.
      $( [3-Jul-2005] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( The intersection of a union ` U. A ` with a class ` B ` is equal to the
       union of the intersections of each element of ` A ` with ` B ` .
       (Contributed by FL, 24-Mar-2007.) $)
    inuni $p |- ( U. A i^i B ) = U. { x | E. y e. A x = ( y i^i B ) } $=
      ( vz cuni cin cv wceq wrex cab wcel wa wex eluni2 anbi1i elin ancom 
      r19.41v bitr4i exbii rexcom4 visset inex1 eleq2 ceqsexv bitri rexbii 
      3bitri 3bitr4i eluniab eqriv ) ECFZDGZAHZBHZDGZIZBCJZAKFZEHZUNLZVAUOLZUSM
      ZANZVAUTLVAUMLZVADLZMVAUPLZBCJZVGMZVBVEVFVIVGBVACOPVAUMDQVEURVCMZANZBCJZV
      HVGMZBCJVJVEVKBCJZANVMVDVOAVDUSVCMVOVCUSRURVCBCSTUAVKBACUBTVLVNBCVLVAUQLZ
      VNVCVPAUQUPDBUCUDUOUQVAUEUFVAUPDQUGUHVHVGBCSUIUJUSAVAUKTUL $.
      $( [25-Mar-2011] $) $( [24-Mar-2007] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Theorems requiring empty set existence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.
    $( Construct, from any class ` A ` , a set equal to it when the class
       exists and equal to the empty set when the class is proper.  This
       theorem shows that the constructed set always exists. $)
    class2set $p |- { x e. A | A e. _V } e. _V $=
      ( cvv wcel crab rabexg wn c0 wrex wceq cv simpl nrexdv rabn0 necon1bbii 
      sylib 0ex syl6eqel pm2.61i ) BCDZTABEZCDTABCFTGZUAHCUBTABIZGUAHJUBTABUBAK
      BDLMUCUAHTABNOPQRS $.
      $( [16-Oct-2003] $)

    $( Equality theorem based on ~ class2set .  (The proof was shortened by
       Raph Levien, 30-Jun-2006.) $)
    class2seteq $p |- ( A e. B -> { x e. A | A e. _V } = A ) $=
      ( wcel cvv crab wceq elisset wral cv ax-1 r19.21aiv rabid2 sylibr eqcomd 
      syl ) BCDBEDZQABFZBGBCHQBRQQABIBRGQQABQAJBDKLQABMNOP $.
      $( [13-Dec-2005] $)
  $}

  $( Every power class contains the empty set. $)
  0elpw $p |- (/) e. ~P A $=
    ( c0 cpw wcel wss 0ss 0ex elpw mpbir ) BACDBAEAFBAGHI $.
    $( [25-Oct-2007] $)

  $( The empty set and its power set are not equal. $)
  0nep0 $p |- (/) =/= { (/) } $=
    ( c0 csn 0ex snnz necomi ) ABAACDE $.
    $( [13-Apr-2007] $) $( [23-Dec-1993] $)

  $( Something cannot be equal to both the null set and the power set of the
     null set. $)
  0inp0 $p |- ( A = (/) -> -. A = { (/) } ) $=
    ( c0 wceq csn wne wn 0nep0 neeq1 mpbiri df-ne sylib ) ABCZABDZEZAMCFLNBMEGA
    BMHIAMJK $.
    $( [30-Sep-2003] $)

  $( The removal of the empty set from a class does not affect its union. $)
  unidif0 $p |- U. ( A \ { (/) } ) = U. A $=
    ( c0 csn cdif cuni cun uniun undif1 uncom eqtr2i unieqi 0ex unisn uneq2i 
    un0 3eqtr4ri uneq1i 3eqtri ) ABCZDZEZBAEZFZUBBFUBUASAFZEZSEZUBFUCTSFZEUAUFF
    ZUEUATSGUDUGUGASFUDASHASIJKUHUABFUAUFBUABLMZNUAOJPSAGUFBUBUIQRBUBIUBOR $.
    $( [22-Mar-2004] $)

  ${
    $d x y A $.  $d y B $.
    $( An indexed intersection of the empty set, with a non-empty index set, is
       empty. $)
    iin0 $p |- ( A =/= (/) <-> |^|_ x e. A (/) = (/) ) $=
      ( vy c0 wne ciin wceq cv wcel wral cab r19.3rzv abbi2dv df-iin syl6reqr 
      cvv wn 0ex n0i ax-mp 0iin eqeq1i mtbir iineq1 eqeq1d mtbiri necon2ai 
      impbii ) BDEZABDFZDGZUIDCHDIZABJZCKUJUIUMCDULABLMACBDNOUKBDBDGZUKADDFZDGZ
      UPPDGZDPIUQQRPDSTUOPDADUAUBUCUNUJUODABDDUDUEUFUGUH $.
      $( [20-Oct-2005] $)
  $}

  ${
    $d x A $.
    notzfaus.1 $e |- A = { (/) } $.
    notzfaus.2 $e |- ( ph <-> -. x e. y ) $.
    $( In the Separation Scheme ~ zfauscl , we require that ` y ` not occur in
       ` ph ` (which can be generalized to "not be free in").  Here we show
       that a contradiction can result if we omit this requirement. $)
    notzfaus $p |- -. E. y A. x ( x e. y <-> ( x e. A /\ ph ) ) $=
      ( cv wcel wa wb wal wn wex c0 wne csn 0ex snnz eqnetri n0 mpbi wi biimt 
      iman anbi2i notbii bitr4i syl6bb xor3 sylibr eximi ax-mp exnal nex ) BGZC
      GHZUODHZAIZJZBKZCUSLZBMZUTLUQBMZVBDNOVCDNPNENQRSBDTUAUQVABUQUPURLZJVAUQUP
      UQUPUBZVDUQUPUCVEUQUPLZIZLVDUQUPUDURVGAVFUQFUEUFUGUHUPURUIUJUKULUSBUMUAUN
      $.
      $( [8-Oct-2006] $) $( [8-Feb-2006] $)
  $}

  $( The intersection of the universal class is empty. $)
  intv $p |- |^| _V = (/) $=
    ( c0 cvv wcel cint wceq 0ex int0el ax-mp ) ABCBDAEFBGH $.
    $( [11-Sep-2008] $)

  ${
    $d x y z A $.
    axpweq.1 $e |- A e. _V $.
    $( Two equivalent ways to express the Power Set Axiom.  Note that ~ ax-pow
       is not used by the proof. $)
    axpweq $p |- ( ~P A e. _V
                <-> E. x A. y ( A. z ( z e. y -> z e. A ) -> y e. x ) ) $=
      ( cpw cvv wcel cv wex wi wal wss ssid elpwg mpbiri wceq pweq eleq2d 
      cla4egv mpd elisset 19.23aiv impbii visset elpw2 pwss dfss2 imbi1i albii 
      3bitri exbii bitri ) DFZGHZUNAIZFZHZAJZCIZBIZHUTDHKCLZVAUPHZKZBLZAJUOUSUO
      UNUNFZHZUSUOVGUNUNMUNNUNUNGOPURVGAUNGUPUNQUQVFUNUPUNRSTUAURUOAUNUQUBUCUDU
      RVEAURUNUPMVADMZVCKZBLVEUNUPAUEUFBDUPUGVIVDBVHVBVCCVADUHUIUJUKULUM $.
      $( [22-Jun-2009] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Power Sets
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
            Introduce the Axiom of Power Sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.
    $( Axiom of Power Sets.  An axiom of Zermelo-Fraenkel set theory.  It
       states that a set ` y ` exists that includes the power set of a given
       set ` x ` i.e. contains every subset of ` x ` .  The variant ~ axpow2
       uses explicit subset notation.  A version using class notation is
       ~ pwex . $)
    ax-pow $a |- E. y A. z ( A. w ( w e. z -> w e. x ) -> z e. y ) $.

    $( Axiom of Power Sets expressed with fewest number of different
       variables. $)
    zfpow $p |- E. x A. y ( A. x ( x e. y -> x e. z ) -> y e. x ) $=
      ( vw cv wcel wi wal wex ax-pow wceq elequ1 imbi12d cbvalv imbi1i albii 
      exbii mpbi ) DEZBEZFZSCEZFZGZDHZTAEZFZGZBHZAIUFTFZUFUBFZGZAHZUGGZBHZAICAB
      DJUIUOAUHUNBUEUMUGUDULDASUFKUAUJUCUKDABLDACLMNOPQR $.
      $( [14-Aug-2003] $)

    $( A variant of the Axiom of Power Sets ~ ax-pow using subset notation.
       Problem in {BellMachover] p. 466. $)
    axpow2 $p |- E. y A. z ( z C_ x -> z e. y ) $=
      ( vw cv wss wcel wi wal wex ax-pow dfss2 imbi1i albii exbii mpbir ) CEZAE
      ZFZQBEGZHZCIZBJDEZQGUCRGHDIZTHZCIZBJABCDKUBUFBUAUECSUDTDQRLMNOP $.
      $( [4-Jun-2006] $)

    $( A variant of the Axiom of Power Sets ~ ax-pow .  For any set ` x ` ,
       there exists a set ` y ` whose members are exactly the subsets of ` x `
       i.e. the power set of ` x ` .  Axiom Pow of [BellMachover] p. 466. $)
    axpow3 $p |- E. y A. z ( z C_ x <-> z e. y ) $=
      ( cv wss wcel wb wal wex axpow2 bm1.3ii bicom albii exbii mpbir ) CDZADEZ
      PBDFZGZCHZBIRQGZCHZBIQBCABCJKTUBBSUACQRLMNO $.
      $( [26-Jun-2009] $) $( [4-Jun-2006] $)
  $}

  ${
    $d w x y z $.
    $( Every set is an element of some other set.  See ~ elALT for a shorter
       proof using more axioms.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    el $p |- E. y x e. y $=
      ( vz cv wcel wi wal wex zfpow wceq ax-14 19.21aiv ax-13 imim2d pm2.27 
      sylsyld a4imv eximi ax-mp ) BDZCDZETADZEFZBGZUATEZFZCGZBHUBTEZBHBCAIUGUHB
      UFUHCAUAUBJZUDUFUDUHFUHUIUCBCABKLUIUEUHUDCABMNUDUHOPQRS $.
      $( [25-Jul-2011] $) $( [4-Jan-2002] $)
  $}

  ${
    $d A x y z $.
    zfpowcl.1 $e |- A e. _V $.
    $( Power set axiom expressed in class notation.  Axiom 4 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    pwex $p |- ~P A e. _V $=
      ( vz vy vx cv cpw cvv wcel wceq pweq eleq1d wss cab wex wb wal axpow2 
      bm1.3ii abeq2 exbii mpbir isset df-pw eleq1i vtocl ) CFZGZHIZAGZHICABUGAJ
      UHUJHUGAKLUIDFZUGMZDNZHIZUNEFZUMJZEOZUQUKUOIULPDQZEOULEDCEDRSUPUREULDUOTU
      AUBEUMUCUBUHUMHDUGUDUEUBUF $.
      $( [25-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( Power set axiom expressed in class notation, with the sethood
       requirement as an antecedent.  Axiom 4 of [TakeutiZaring] p. 17. $)
    pwexg $p |- ( A e. B -> ~P A e. _V ) $=
      ( vx cv cpw cvv wcel wceq pweq eleq1d visset pwex vtoclg ) CDZEZFGAEZFGCA
      BNAHOPFNAIJNCKLM $.
      $( [30-Oct-2003] $)

    $( Existence of a class of subsets.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    abssexg $p |- ( A e. B -> { x | ( x C_ A /\ ph ) } e. _V ) $=
      ( wcel cpw cvv cv wss wa cab pwexg df-pw eleq1i simpl ss2abi ssexg mpan 
      sylbi syl ) CDECFZGEZBHCIZAJZBKZGEZCDLUBUCBKZGEZUFUAUGGBCMNUEUGIUHUFUDUCB
      UCAOPUEUGGQRST $.
      $( [25-Jul-2011] $) $( [15-Jul-2006] $)
  $}

  ${
    $d x y A $.
    $( A singleton is a set.  Theorem 7.13 of [Quine] p. 51, but proved using
       only Extensionality, Power Set, and Separation.  Unlike the proof of
       ~ zfpair , Replacement is not needed.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    snex $p |- { A } e. _V $=
      ( cpw cvv wcel csn wss snsspw ssexg mpan wn pwexg con3i c0 wceq snprc 
      biimpi 0ex syl6eqel syl pm2.61i ) ABZCDZAEZCDZUCUAFUBUDAGUCUACHIUBJACDZJZ
      UDUEUBACKLUFUCMCUFUCMNAOPQRST $.
      $( [25-Jul-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    $d x y $.
    $( Every set is an element of some other set.  This has a shorter proof
       than ~ el but uses more axioms. $)
    elALT $p |- E. y x e. y $=
      ( cv csn wcel wex visset snid snex eleq2 cla4ev ax-mp ) ACZMDZEZMBCZEZBFM
      AGHQOBNMIPNMJKL $.
      $( [4-Jan-2002] $)
  $}

  $( The power set of the empty set (the ordinal 1) is a set. $)
  p0ex $p |- { (/) } e. _V $=
    ( c0 snex ) AB $.
    $( [23-Dec-1993] $)

  $( The power set of the power set of the empty set (the ordinal 2) is a
     set. $)
  pp0ex $p |- { (/) , { (/) } } e. _V $=
    ( c0 csn cpw cpr cvv pwpw0 p0ex pwex eqeltrri ) ABZCAJDEFJGHI $.
    $( [5-Aug-1993] $)

  $( The ordinal number 3 is a set, proved without the Axiom of Union
     ~ ax-un . $)
  ord3ex $p |- { (/) , { (/) } , { (/) , { (/) } } } e. _V $=
    ( c0 csn cpr ctp cun cvv df-tp cpw pwpr pp0ex pwex eqeltrri wss snsspr2 
    unss2 ax-mp ssexi eqeltri ) AABZASCZDTTBZEZFASTGUBTSBZTCZEZTHUEFASITJKLUAUD
    MUBUEMUCTNUAUDTOPQR $.
    $( [2-May-2009] $)

  ${
    $d w x y z $.
    $( At least two sets exist (or in terms of first-order logic, the universe
       of discourse has two or more objects).  Note that we may not substitute
       the same variable for both ` x ` and ` y ` (as indicated by the distinct
       variable requirement), for otherwise we would contradict ~ stdpc6 .
       Assuming that ZF set theory is consistent, we cannot prove this theorem
       unless we specify that ` x ` and ` y ` be distinct.  Specifically,
       theorem ~ cla4ev requires that ` x ` must not occur in the subexpression
       ` -. y = { (/) } ` in step 4 nor in the subexpression ` -. y = (/) ` in
       step 9.  The proof verifier will require that ` x ` and ` y ` be in a
       distinct variable group to ensure this.  You can check this by deleting
       the $d statement in set.mm and rerunning the verifier, which will print
       a detailed explanation of the distinct variable violation.

       This theorem is proved directly from set theory axioms (no set theory
       definitions) and does not use ~ ax-16 , ~ ax-ext , or ~ ax-sep .  See
       ~ dtruALT for a shorter proof using these axioms. $)
    dtru $p |- -. A. x x = y $=
      ( vw vz cv wceq wn wex wal wcel wa eeanv wi ax-pow id ax-gen elequ2 
      imbi1d albidv elequ1 imbi12d a4v mpi eximi ax-mp ax-nul ax-4 mpbir2an 
      ax-14 com12 con3d imp 2eximi equequ2 notbid ax-8 a4imev syl6bi a1d 
      pm2.61i 19.23aivv exnal mpbi ) AEZBEZFZGZAHZVFAIGCEZDEZFZGZDHCHZVHVDVIJZV
      DVJJZGZKZDHCHZVMVRVNCHZVPDHZVNVPCDLVEVJJZVEVDJZMZBIZVJVIJZMZDIZCHVSACDBNW
      GVNCWGWBWBMZBIZVNWHBWBOPWFWIVNMDAVJVDFZWDWIWEVNWJWCWHBWJWAWBWBDABQRSDACTU
      AUBUCUDUEVPAIZDHVTDAUFWKVPDVPAUGUDUEUHVQVLCDVNVPVLVNVKVOVKVNVOCDAUIUJUKUL
      UMUEVLVHCDVJVEFZVLVHMWLVLVIVEFZGZVHWLVKWMDBCUNUOWNVGACVDVIFVFWMACBUPUKUQU
      RWLGZVHVLWOVGADVDVJFVFWLADBUPUKUQUSUTVAUEVFAVBVC $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x y $.
    $( This theorem shows that axiom ~ ax-16 is redundant in the presence of
       theorem ~ dtru , which states simply that at least two things exist.
       This justifies the remark at
       ~ http://us.metamath.org/mpegif/mmzfcnd.html#twoness (which links to
       this theorem). $)
    ax16b $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( cv wceq wal wi dtru pm2.21i ) BDCDEBFAABFGBCHI $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Existential uniqueness implies there is a value for which the wff
       argument is false. $)
    eunex $p |- ( E! x ph -> E. x -. ph ) $=
      ( vy wex cv wceq wi wal wa wn weu dtru alim mtoi 19.23aiv adantl ax-17 
      eu3 exnal 3imtr4i ) ABDZABECEFZGBHZCDZIABHZJZABKAJBDUDUFUAUCUFCUCUEUBBHBC
      LAUBBMNOPABCACQRABST $.
      $( [24-Oct-2010] $)
  $}

  ${
    snelpw.1 $e |- A e. _V $.
    $( A singleton of a set belongs to the power class of a class containing
       the set. $)
    snelpw $p |- ( A e. B <-> { A } e. ~P B ) $=
      ( wcel csn wss cpw snss snex elpw bitr4i ) ABDAEZBFLBGDABCHLBAIJK $.
      $( [1-Apr-1998] $)
  $}

  ${
    $d x y z $.
    $( A theorem similar to extensionality, requiring the existence of a
       singleton.  Exercise 8 of [TakeutiZaring] p. 16. $)
    rext $p |- ( A. z ( x e. z -> y e. z ) -> x = y ) $=
      ( cv wcel wi wal csn wceq visset snid snex eleq2 imbi12d cla4v mpi elsn 
      equcomi sylbi syl ) ADZCDZEZBDZUBEZFZCGZUDUAHZEZUAUDIZUGUAUHEZUIUAAJKUFUK
      UIFCUHUALUBUHIUCUKUEUIUBUHUAMUBUHUDMNOPUIUDUAIUJBUAQBARST $.
      $( [10-Aug-1993] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Classes are subclasses if and only if their power classes are
       subclasses.  Exercise 18 of [TakeutiZaring] p. 18. $)
    sspwb $p |- ( A C_ B <-> ~P A C_ ~P B ) $=
      ( vx wss cpw cv wcel sstr2 com12 visset elpw 3imtr4g ssrdv csn ssel snex 
      snss bitr4i 3imtr3g impbii ) ABDZAEZBEZDZUACUBUCUACFZADZUEBDZUEUBGUEUCGUF
      UAUGUEABHIUEACJZKUEBUHKLMUDCABUDUENZUBGZUIUCGZUEAGZUEBGZUBUCUIOUJUIADULUI
      AUEPZKUEAUHQRUKUIBDUMUIBUNKUEBUHQRSMT $.
      $( [13-Oct-1996] $)
  $}

  ${
    $d A x y $.
    $( A class equals the union of its power class.  Exercise 6(a) of
       [Enderton] p. 38.  (The proof was shortened by Alan Sare,
       28-Dec-2008.) $)
    unipw $p |- U. ~P A = A $=
      ( vx vy cpw cuni cv wcel wa wex eluni wss wi visset elpw ssel sylbi 
      impcom 19.23aiv csn elunii snid snelpw biimpi sylancr impbii eqriv ) BADZ
      EZABFZUHGZUIAGZUJUICFZGZULUGGZHZCIUKCUIUGJUOUKCUNUMUKUNULAKUMUKLULACMNULA
      UIOPQRPUIUISZGUPUGGZUJUKUIUPUGTUIBMZUAUKUQUIAURUBUCUDUEUF $.
      $( [29-Dec-2008] $) $( [14-Oct-1996] $)
  $}

  ${
    $d A x $.
    $( A class is a subclass of the power class of its union.  Exercise 6(b) of
       [Enderton] p. 38. $)
    pwuni $p |- A C_ ~P U. A $=
      ( vx cuni cpw cv wcel wss elssuni visset elpw sylibr ssriv ) BAACZDZBEZAF
      OMGONFOAHOMBIJKL $.
      $( [14-Oct-1996] $)
  $}

  $( Membership of a power class.  Exercise 10 of [Enderton] p. 26. $)
  pwel $p |- ( A e. B -> ~P A e. ~P ~P U. B ) $=
    ( wcel cpw cuni wss elssuni sspwb sylib cvv wb pwexg elpwg syl mpbird ) ABC
    ZADZBEZDZDCZQSFZPARFUAABGARHIPQJCTUAKABLQSJMNO $.
    $( [13-Jan-2007] $)

  ${
    $d A x $.  $d B x $.
    $( An extensionality-like principle defining subclass in terms of
       subsets. $)
    ssextss $p |- ( A C_ B <-> A. x ( x C_ A -> x C_ B ) ) $=
      ( wss cpw cv wcel wi wal sspwb dfss2 visset elpw imbi12i albii 3bitri ) 
      BCDBEZCEZDAFZQGZSRGZHZAISBDZSCDZHZAIBCJAQRKUBUEATUCUAUDSBALZMSCUFMNOP $.
      $( [30-Jun-2004] $)

    $( An extensionality-like principle that uses the subset instead of the
       membership relation: two classes are equal iff they have the same
       subsets. $)
    ssext $p |- ( A = B <-> A. x ( x C_ A <-> x C_ B ) ) $=
      ( wss wa cv wi wal wceq wb ssextss anbi12i eqss albiim 3bitr4i ) BCDZCBDZ
      EAFZBDZRCDZGAHZTSGAHZEBCISTJAHPUAQUBABCKACBKLBCMSTANO $.
      $( [30-Jun-2004] $)

    $( Negation of subclass relationship.  Compare ~ nss .  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    nssss $p |- ( -. A C_ B <-> E. x ( x C_ A /\ -. x C_ B ) ) $=
      ( wss wn cv wi wal wa wex ssextss notbii exanali bitr4i ) BCDZEAFZBDZPCDZ
      GAHZEQREIAJOSABCKLQRAMN $.
      $( [25-Jul-2011] $) $( [30-Jun-2004] $)
  $}

  $( Classes are equal if and only if their power classes are equal.  Exercise
     19 of [TakeutiZaring] p. 18. $)
  pweqb $p |- ( A = B <-> ~P A = ~P B ) $=
    ( wss wa cpw wceq sspwb anbi12i eqss 3bitr4i ) ABCZBACZDAEZBEZCZNMCZDABFMNF
    KOLPABGBAGHABIMNIJ $.
    $( [13-Oct-1996] $)

  ${
    $d x A $.
    intid.1 $e |- A e. _V $.
    $( The intersection of all sets to which a set belongs is the singleton of
       that set. $)
    intid $p |- |^| { x | A e. x } = { A } $=
      ( cv wcel cab cint csn cvv wss snex eleq2 snid intmin3 ax-mp wi elintab 
      id mpgbir snssi eqssi ) BADZEZAFGZBHZUEIEUDUEJBKUCBUEEAUEIUBUEBLBCMNOBUDE
      ZUEUDJUFUCUCPAUCABCQUCRSBUDTOUA $.
      $( [5-Jun-2009] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( "At most one" existence implies a class abstraction exists. $)
    moabex $p |- ( E* x ph -> { x | ph } e. _V ) $=
      ( vy wmo cv wceq wi wal wex cab cvv wcel ax-17 mo2 wa hba1 wb pm4.71 
      biimpi a4s ancom syl6bb abbid csn df-sn snex eqeltrri simpl ss2abi ssexi 
      syl6eqel 19.23aiv sylbi ) ABDABECEZFZGZBHZCIABJZKLZABCACMNUQUSCUQURUOAOZB
      JZKUQAUTBUPBPUQAAUOOZUTUPAVBQZBUPVCAUORSTAUOUAUBUCVAUOBJZUNUDVDKBUNUEUNUF
      UGUTUOBUOAUHUIUJUKULUM $.
      $( [30-Dec-1996] $)
  $}

  $( The abstraction of a wff with existential uniqueness exists. $)
  euabex $p |- ( E! x ph -> { x | ph } e. _V ) $=
    ( weu wmo cab cvv wcel eumo moabex syl ) ABCABDABEFGABHABIJ $.
    $( [25-Nov-1994] $)

  ${
    $d x y A $.
    $( A non-empty class (even if proper) has a non-empty subset. $)
    nnullss $p |- ( A =/= (/) -> E. x ( x C_ A /\ x =/= (/) ) ) $=
      ( vy c0 wne cv wcel wex wss wa n0 csn visset snss snnz snex wceq sseq1 
      neeq1 anbi12d cla4ev mpan2 sylbi 19.23aiv ) BDECFZBGZCHAFZBIZUGDEZJZAHZCB
      KUFUKCUFUELZBIZUKUEBCMZNUMULDEZUKUEUNOUJUMUOJAULUEPUGULQUHUMUIUOUGULBRUGU
      LDSTUAUBUCUDUC $.
      $( [27-May-2007] $) $( [23-Aug-2003] $)
  $}

  ${
    $d x y z A $.  $d y z ph $.
    $( Restricted existence in a class (even if proper) implies restricted
       existence in a subset. $)
    exss $p |- ( E. x e. A ph -> E. y ( y C_ A /\ E. x e. y ph ) ) $=
      ( vz wrex cv wcel wa cab wex wss crab c0 wne df-rab neeq1i rabn0 n0 
      3bitr3i csn visset snss ssab2 sstr2 mpi sylbi wsbc simpr wceq equsb1 
      elsn sbbii mpbir jctil df-clab sban bitri eleq2i 3bitri 3imtr4i ne0i syl 
      sylib snex sseq1 rexeq anbi12d cla4ev syl11anc 19.23aiv ) ABDFZEGZBGZDHZA
      IZBJZHZEKZCGZDLZABVTFZIZCKZABDMZNOVQNOVLVSWEVQNABDPQABDREVQSTVRWDEVRVMUAZ
      DLZABWFFZWDVRWFVQLZWGVMVQEUBUCWIVQDLWGABDUDWFVQDUEUFUGVRABWFMZNOZWHVRVMWJ
      HZWKVOBVMUHZABVMUHZIZVNWFHZBVMUHZWNIZVRWLWOWNWQWMWNUIWQVNVMUJZBVMUHBEUKWP
      WSBEBVMULUMUNUOVRVPBVMUHWOVPEBUPVOABEUQURWLVMWPAIZBJZHWTBVMUHWRWJXAVMABWF
      PUSWTEBUPWPABEUQUTVAWJVMVBVCABWFRVDWCWGWHICWFVMVEVTWFUJWAWGWBWHVTWFDVFABV
      TWFVGVHVIVJVKUG $.
      $( [23-Aug-2003] $)
  $}

  ${
    $d x y $.
    $( A version of ~ dtru ("two things exist") with a shorter proof using more
       axioms. $)
    dtruALT $p |- -. A. x x = y $=
      ( cv wceq wn wex wal c0 csn 0inp0 p0ex eqeq2 notbid cla4ev syl 0ex 
      pm2.61i exnal eqcom albii notbii bitri mpbi ) BCZACZDZEZAFZUEUDDZAGZEZUDH
      DZUHULUDHIZDZEZUHUDJUGUOAUMKUEUMDUFUNUEUMUDLMNOUGULEAHPUEHDUFULUEHUDLMNQU
      HUFAGZEUKUFARUPUJUFUIAUDUESTUAUBUC $.
      $( [15-Jul-1994] $)
  $}

  ${
    $d x y $.
    dtrucor.1 $e |- x = y $.
    $( Corollary of ~ dtru .  This example illustrates the danger of blindly
       trusting the standard Deduction Theorem without accounting for free
       variables: the theorem form of this deduction is not valid, as shown by
       ~ dtrucor2 . $)
    dtrucor $p |- x =/= y $=
      ( cv wceq wne wal dtru pm2.21i mpg ) ADZBDZEZKLFZAMAGNABHICJ $.
      $( [27-Jun-2002] $)
  $}

  ${
    dtrucor2.1 $e |- ( x = y -> x =/= y ) $.
    $( The theorem form of the deduction ~ dtrucor leads to a contradiction, as
       mentioned in the "Wrong!" example at
       ~ http://us.metamath.org/mpegif/mmdeduction.html#bad . $)
    dtrucor2 $p |- ( ph /\ -. ph ) $=
      ( cv wceq wex wn wa a9e wi necon2bi pm2.01 ax-mp nex pm2.24ii ) BEZCEZFZB
      GAAHIBCJSBSSHZKTSQRDLSMNOP $.
      $( [20-Oct-2007] $)
  $}


  ${
    $d x y $.
    $( Demonstration of a theorem that requires ` x ` and ` y ` to be distinct,
       but no others.  Compare ~ dvdemo2 . $)
    dvdemo1 $p |- E. x ( x = y -> z e. x ) $=
      ( cv wceq wn wex wcel wi wal dtru exnal mpbir pm2.21 eximi ax-mp ) ADZBDE
      ZFZAGZRCDQHZIZAGTRAJFABKRALMSUBARUANOP $.
      $( [1-Dec-2006] $)
  $}

  ${
    $d x z $.
    $( Demonstration of a theorem that requires ` x ` and ` z ` to be distinct,
       but no others.  Compare ~ dvdemo1 . $)
    dvdemo2 $p |- E. x ( x = y -> z e. x ) $=
      ( cv wcel wex wceq wi el ax-1 eximi ax-mp ) CDADZEZAFMBDGZNHZAFCAINPANOJK
      L $.
      $( [1-Dec-2006] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Derive the Axiom of Pairing
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z w v $.  $d y z w v $.
    $( The Axiom of Pairing of Zermelo-Fraenkel set theory.  Axiom 2 of
       [TakeutiZaring] p. 15.  In some textbooks this is stated as a separate
       axiom; here we show it is redundant since it can be derived from the
       other axioms.

       This theorem should not be referenced by any proof other than ~ axpr .
       Instead, use ~ zfpair2 below so that the uses of the Axiom of Pairing
       can be more easily identified. $)
    zfpair $p |- { x , y } e. _V $=
      ( vw vz vv cv cpr wceq wo cab cvv dfpr2 c0 csn wa wex 19.43 prlem2 exbii 
      19.41v 0ex isseti mpbiran p0ex orbi12i 3bitr3ri abbii pp0ex eqeltrri wi 
      wal equequ2 0inp0 prlem1 19.21adv a4imev con2i orcom syl7ib jaoi zfrep4 
      eqeltri ) AFZBFZGCFZVCHZVEVDHZIZCJZKCVCVDLVIDFZMHZVJMNZHZIZVKVFOZVMVGOZIZ
      OZDPZCJKVHVSCVQDPVODPZVPDPZIVSVHVOVPDQVQVRDVKVFVMVGRSVTVFWAVGVTVKDPVFVKVF
      DTDMUAUBUCWAVMDPVGVMVGDTDVLUDUBUCUEUFUGVNVQDCEMVLGVNDJKDMVLLUHUIVKVQVEEFZ
      HZUJZCUKZEPVMVKWEEAWBVCHZVKWDCWFVKVFVMVGWCEACULVJUMZUNUOUPVMWEEBWBVDHZVMW
      DCWHVMVPVOIWCVQWHVMVGVKVFWCEBCULVKVMWGUQUNVOVPURUSUOUPUTVAVBVB $.
      $( [18-Oct-1995] $)

    $( Unabbreviated version of the Axiom of Pairing of ZF set theory, derived
       as a theorem from the other axioms.

       This theorem should not be referenced by any proof.  Instead, use
       ~ ax-pr below so that the uses of the Axiom of Pairing can be more
       easily identified. $)
    axpr $p |- E. z A. w ( ( w = x \/ w = y ) -> w e. z ) $=
      ( cv cpr wceq wex wo wcel wi wal zfpair isseti wb dfcleq visset elpr 
      bibi2i bi2 sylbi alimi eximi ax-mp ) CEZAEZBEZFZGZCHDEZUFGUJUGGIZUJUEJZKZ
      DLZCHCUHABMNUIUNCUIULUJUHJZOZDLUNDUEUHPUPUMDUPULUKOUMUOUKULUJUFUGDQRSULUK
      TUAUBUAUCUD $.
      $( [14-Nov-2006] $)

    $( The Axiom of Pairing of ZF set theory.  It was derived as theorem ~ axpr
       above and is therefore redundant, but we state it as a separate axiom
       here so that its uses can be identified more easily. $)
    ax-pr $a |- E. z A. w ( ( w = x \/ w = y ) -> w e. z ) $.

    $( Derive the abbreviated version of the Axiom of Pairing from ~ ax-pr .
       See ~ zfpair for its derivation from the other axioms. $)
    zfpair2 $p |- { x , y } e. _V $=
      ( vz vw cv cpr wceq wex wcel wo wb wal ax-pr bm1.3ii dfcleq visset elpr 
      bibi2i albii bitri exbii mpbir issetri ) CAEZBEZFZCEZUFGZCHDEZUGIZUIUDGUI
      UEGJZKZDLZCHUKCDABCDMNUHUMCUHUJUIUFIZKZDLUMDUGUFOUOULDUNUKUJUIUDUEDPQRSTU
      AUBUC $.
      $( [14-Nov-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The Axiom of Pairing using class variables.  Theorem 7.13 of [Quine]
       p. 51.  By virtue of its definition, an unordered pair remains a set
       (even though no longer a pair) even when its components are proper
       classes (see ~ prprc ), so we can dispense with hypotheses requiring
       them to be sets. $)
    prex $p |- { A , B } e. _V $=
      ( vx vy cvv wcel cpr wi cv wceq preq1 eleq1d preq2 zfpair2 vtoclg syl5bi 
      vtocleg wn csn prprc1 snex syl6eqel prprc2 pm2.61nii ) AEFZBEFZABGZEFZUFU
      HHCAECIZAJZUIBGZEFZUHUFUJUKUGEUIABKLUIDIZGZEFULDBEUMBJUNUKEUMBUIMLCDNOPQU
      ERUGBSEABTBUAUBUFRUGASEABUCAUAUBUD $.
      $( [5-Aug-1993] $)
  $}

  $( An ordered pair of classes is a set.  Exercise 7 of [TakeutiZaring]
     p. 16. $)
  opex $p |- <. A , B >. e. _V $=
    ( cop csn cpr cvv df-op prex eqeltri ) ABCADZABEZEFABGJKHI $.
    $( [18-Aug-1993] $)

  ${
    elop.1 $e |- A e. _V $.
    $( An ordered pair has two elements.  Exercise 3 of [TakeutiZaring]
       p. 15. $)
    elop $p |- ( A e. <. B , C >. <-> ( A = { B } \/ A = { B , C } ) ) $=
      ( cop wcel csn cpr wceq wo df-op eleq2i elpr bitri ) ABCEZFABGZBCHZHZFAPI
      AQIJORABCKLAPQDMN $.
      $( [5-Aug-1993] $)
  $}

  $( One of the two elements in an ordered pair. $)
  opi1 $p |- { A } e. <. A , B >. $=
    ( csn cpr cop snex prid1 df-op eleqtrri ) ACZJABDZDABEJKAFGABHI $.
    $( [5-Aug-1993] $)

  $( One of the two elements of an ordered pair. $)
  opi2 $p |- { A , B } e. <. A , B >. $=
    ( cpr csn cop prex prid2 df-op eleqtrri ) ABCZADZJCABEKJABFGABHI $.
    $( [5-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Ordered pair theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    opth1.1 $e |- A e. _V $.
    $( Equality of the first members of equal ordered pairs, which holds
       whether or not the second members are sets. $)
    opth1 $p |- ( <. A , B >. = <. C , D >. -> A = C ) $=
      ( cop wceq csn wcel cpr wo opi1 eleq2 mpbiri snex elop sylib snid prid1 
      jaoi syl elsnc ) ABFZCDFZGZACHZIZACGUEUFAHZGZUFABJZGZKZUGUEUFUCIZULUEUMUF
      UDICDLUCUDUFMNUFABCOPQUIUGUKUIUGAUHIAERUFUHAMNUKUGAUJIABESUFUJAMNTUAACEUB
      Q $.
      $( [28-May-2008] $)
  $}

  ${
    opth.1 $e |- A e. _V $.
    opth.2 $e |- B e. _V $.
    opth.3 $e |- D e. _V $.
    $( The ordered pair theorem.  If two ordered pairs are equal, their first
       elements are equal and their second elements are equal.  Exercise 6 of
       [TakeutiZaring] p. 16.  Note that ` C ` is not required to be a set due
       to a peculiarity of our specific ordered pair definition. $)
    opth $p |- ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) $=
      ( cop wceq wa opth1 eqeq1 opeq1 syl5bi cpr csn df-op eqeq12i prex preqr2 
      sylbi eqcomd syl syl6 jcai opeq12 impbii ) ABHZCDHZIZACIZBDIZJUJUKULABCDE
      KUJUKUICBHZIZULUJUHUMIUNUKUHUIUMLACBMNUNCDOZCBOZIZULUNCPZUOOZURUPOZIUQUIU
      SUMUTCDQCBQRUOUPURCDSCBSTUAUQDBDBCGFTUBUCUDUEABCDUFUG $.
      $( [28-May-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    opthg.1 $e |- A e. _V $.
    opthg.2 $e |- B e. _V $.
    $( Ordered pair theorem. $)
    opthg $p |- ( D e. R -> ( <. A , B >. = <. C , D >. <->
               ( A = C /\ B = D ) ) ) $=
      ( vx cop cv wceq wa opeq2 eqeq2d eqeq2 anbi2d visset opth vtoclbg ) ABIZC
      HJZIZKACKZBUAKZLTCDIZKUCBDKZLHDEUADKZUBUETUADCMNUGUDUFUCUADBOPABCUAFGHQRS
      $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.  $d x y T $.
    $( Ordered pair theorem. ` C ` is not required to be a set under our
       specific ordered pair definition. $)
    opthgg $p |- ( ( A e. R /\ B e. S /\ D e. T ) ->
                 ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) ) $=
      ( vx vy wcel cop wceq wa wb cv wi opeq1 eqeq1d eqeq1 anbi1d bibi12d 
      imbi2d opeq2 anbi2d visset opthg vtocl2g 3impia ) AEJBFJDGJZABKZCDKZLZACL
      ZBDLZMZNZUIHOZIOZKZUKLZUQCLZURDLZMZNZPUIAURKZUKLZUMVBMZNZPUIUPPHIABEFUQAL
      ZVDVHUIVIUTVFVCVGVIUSVEUKUQAURQRVIVAUMVBUQACSTUAUBURBLZVHUPUIVJVFULVGUOVJ
      VEUJUKURBAUCRVJVBUNUMURBDSUDUAUBUQURCDGHUEIUEUFUGUH $.
      $( [14-Oct-2005] $)
  $}

  ${
    otthg.1 $e |- A e. _V $.
    otthg.2 $e |- B e. _V $.
    otthg.3 $e |- R e. _V $.
    $( Ordered triple theorem. $)
    otthg $p |- ( ( D e. F /\ S e. G ) ->
                ( <. <. A , B >. , R >. = <. <. C , D >. , S >. <->
                ( A = C /\ B = D /\ R = S ) ) ) $=
      ( wcel wa cop wceq w3a opex opthg anbi1d sylan9bbr df-3an syl6bbr ) DGLZF
      HLZMABNZENCDNZFNOZACOZBDOZMZEFOZMZUHUIUKPUDUGUEUFOZUKMUCULUEEUFFHABQKRUCU
      MUJUKABCDGIJRSTUHUIUKUAUB $.
      $( [1-May-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    eqvinop.1 $e |- B e. _V $.
    eqvinop.2 $e |- C e. _V $.
    $( A variable introduction law for ordered pairs.  Analogue of Lemma 15 of
       [Monk2] p. 109. $)
    eqvinop $p |- ( A = <. B , C >. <-> E. x E. y ( A = <. x , y >. /\
                  <. x , y >. = <. B , C >. ) ) $=
      ( cv cop wceq wa wex visset opth anbi2i ancom anass 3bitri exbii 19.42v 
      opeq2 eqeq2d ceqsexv opeq1 bitr2i ) CAHZBHZIZJZUHDEIZJZKZBLZALUFDJZCUFEIZ
      JZKZALCUJJZUMUQAUMUNUGEJZUIKZKZBLUNUTBLZKUQULVABULUIUNUSKZKVCUIKVAUKVCUIU
      FUGDEAMBMGNOUIVCPUNUSUIQRSUNUTBTVBUPUNUIUPBEGUSUHUOCUGEUFUAUBUCORSUPURADF
      UNUOUJCUFDEUDUBUCUE $.
      $( [28-May-1995] $)
  $}

  ${
    $d x z w A $.  $d y z w A $.  $d z w ph $.
    $( Substitution of class ` A ` for ordered pair ` <. x , y >. ` .
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    copsexg $p |- ( A = <. x , y >. ->
                  ( ph <-> E. x E. y ( A = <. x , y >. /\ ph ) ) ) $=
      ( vz vw cv cop wceq wa wex wb wi visset eqvinop 19.8a syl ex opth pm2.27 
      weu euequ1 equcom eubii mpbi eupick mpan syl5 eqcom sylan9 hbe1 wal hba1 
      a1i anim2d anass syl5ib eximd biidd drex1 sylibd wn hbn1 dveeq2 hbnd 
      con1d df-ex anim1d 19.40 exbii syl6 pm2.61i 19.23ai anbi1i 2exbii sylbi 
      impbid eqeq1 anbi1d 2exbidv bibi2d imbi12d mpbiri adantr 19.23aivv 
      pm2.43i ) DBGZCGZHZIZAWJAJZCKBKZLZWJDEGZFGZHZIZWPWIIZJZFKEKWJWMMZEFDWGWHB
      NCNZOWSWTEFWQWTWRWQWTWRAWRAJZCKZBKZLZMWRAXDWRAXDXBXCXDXBCPXCBPQRWRWNWGIZW
      OWHIZJZXDAMWNWOWGWHENFNXASZXHXHAJZCKZBKZAXDXHXFXGAJZCKZJZBKZAXLXFXPXNXGAX
      FXFXNMZXNXPXFXNTXFBUAZXPXQWGWNIZBUAXRBEUBXSXFBBEUCUDUEXFXNBUFUGUHXGXGAMZA
      XNXGATXGCUAZXNXTWHWOIZCUAYACFUBYBXGCWHWOUIUDUEXGACUFUGUHUJXKXPBXOBUKWHWGI
      ZCULZXKXPMYDXKXOCKXPYDXJXOCYCCUMYDXFXMJZXOXJYDXMXNXFXMXNMYDXMCPUNUOXFXGAU
      PZUQURXOXOCBYDXOUSUTVAYDVBZXKXOXPYGYECKZXOXKYGXFCKZXNJXOYHYGYIXFXNYGXFVBC
      ULZVBXFYIYGXFYJYGXFCYCCVCCBEVDVEVFXFCVGUQVHXFXMCVIUHXJYECYFVJUQXOBPVKVLVM
      UHXBXJBCWRXHAXIVNVOUQVPVQWQWJWRWMXEDWPWIVRZWQWLXDAWQWKXBBCWQWJWRAYKVSVTWA
      WBWCWDWEVPWF $.
      $( [25-Jul-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    copsex2g.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for ordered pairs. $)
    copsex2g $p |- ( ( A e. C /\ B e. D ) ->
                  ( E. x E. y ( <. A , B >. = <. x , y >. /\ ph ) <-> ps ) ) $=
      ( cv wceq wex cop wa wb wcel eeanv hbe1 ax-17 hbbi hbex opeq12 copsexg 
      eqcoms syl bitr3d 19.23ai sylbir elex syl2an ) CJZEKZCLZDJZFKZDLZEFMZUKUN
      MZKANZDLZCLZBOZEGPFHPUMUPNULUONZDLZCLVBULUOCDQVDVBCVABCUTCRBCSTVCVBDVABDU
      TDCUSDRUABDSTVCAVABVCURUQKAVAOZUKUNEFUBVEUQURACDUQUCUDUEIUFUGUGUHCEGUIDFH
      UIUJ $.
      $( [28-May-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.  $d x y z w R $.  $d x y z w S $.
    copsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) ->
                     ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 2 ordered pairs. $)
    copsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                      ( E. x E. y E. z E. w ( ( <. A , B >. = <. x , y >. /\
                      <. C , D >. = <. z , w >. ) /\ ph ) <-> ps ) ) $=
      ( wcel wa cop cv wceq wex wb visset opthg eqcom syl5bb adantl bi2anan9 
      anbi1d 4exbidv id cgsex4g bitrd ) GKNZHLNZOZIKNZJLNZOZOZGHPZCQZDQZPZRZIJP
      ZEQZFQZPZRZOZAOZFSESDSCSUTGRVAHROZVEIRVFJROZOZAOZFSESDSCSBURVJVNCDEFURVIV
      MAUNVCVKUQVHVLUMVCVKTULUMVBUSRVKVCUTVAGHLCUADUAUBUSVBUCUDUEUPVHVLTUOUPVGV
      DRVLVHVEVFIJLEUAFUAUBVDVGUCUDUEUFUGUHABVMCDEFGHIJKLVMUIMUJUK $.
      $( [5-Aug-1995] $)
  $}

  $( An ordered pair is not empty. $)
  opnz $p |- -. <. A , B >. = (/) $=
    ( csn cop wcel c0 wceq wn opi1 n0i ax-mp ) ACZABDZEMFGHABIMLJK $.
    $( [24-Jan-2004] $)

  ${
    $d x A $.  $d x B $.
    $( A property of an ordered pair of proper classes (due to our particular
       definition of ordered pair). $)
    opprc1b $p |- ( -. A e. _V <-> (/) e. <. A , B >. ) $=
      ( vx cvv wcel wn c0 cop csn cpr opprc1 0ex prid1 syl5eleqr cv wceq opeq1 
      eleq2d notbid wo wne visset snnz df-ne mpbi eqcom mtbi prnz pm3.2ni elop 
      mtbir vtoclg con2i impbii ) ADEZFZGABHZEZUPGBIZJUQGABKGUSLMNUOURGCOZBHZEZ
      FURFCADUTAPZVBURVCVAUQGUTABQRSVBGUTIZPZGUTBJZPZTVEVGVDGPZVEVDGUAVHFUTCUBZ
      UCVDGUDUEVDGUFUGVFGPZVGVFGUAVJFUTBVIUHVFGUDUEVFGUFUGUIGUTBLUJUKULUMUN $.
      $( [15-Nov-1994] $)
  $}

  $( A property of an ordered pair of proper classes (due to our particular
     definition of ordered pair). $)
  opprc3 $p |- ( ( -. A e. _V /\ -. B e. _V ) <-> <. A , B >. = { (/) } ) $=
    ( cvv wcel wn wa cop c0 csn wceq cpr opprc2 opprc1 snprc preq2 sylbi eqtrd 
    sylan9eqr dfsn2 syl6eqr 0ex snid eleq2 mpbiri opprc1b sylibr eqeq1d snex 
    preqr2 eqeq2i 3imtr4i syl6bi anc2li mpcom impbii ) ACDEZBCDEZFZABGZHIZJZURU
    SHHKZUTUQUPUSAAGZVBABLUPVCHAIZKZVBAAMUPVDHJVEVBJANVDHHOPQRHSZTUPVAURVAHUSDZ
    UPVAVGHUTDHUAUBUSUTHUCUDABUEUFUPVAUQUPVAHBIZKZUTJZUQUPUSVIUTABMUGVIVBJVHHJV
    JUQVHHHBUHUAUIUTVBVIVFUJBNUKULUMUNUO $.
    $( [17-May-1998] $)

  $( Equivalence of existence implied by equality of ordered pairs. $)
  opeqex $p |- ( <. A , B >. = <. C , D >. -> ( A e. _V <-> C e. _V ) ) $=
    ( cop wceq cvv wcel c0 wn eleq2 opprc1b 3bitr4g con4bid ) ABEZCDEZFZAGHZCGH
    ZQIOHIPHRJSJOPIKABLCDLMN $.
    $( [28-May-2008] $)

  $( Equivalence of existence implied by equality of ordered triples. $)
  oteqex $p |- ( <. <. A , B >. , C >. = <. <. R , S >. , T >. ->
           ( A e. _V <-> R e. _V ) ) $=
    ( cop wceq cvv wcel wb opex opth1 opeqex syl ) ABGZCGDEGZFGHPQHAIJDIJKPCQFA
    BLMABDENO $.
    $( [28-May-2008] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    opth2.1 $e |- B e. _V $.
    opth2.2 $e |- D e. _V $.
    $( Equality of the second members of equal ordered pairs.  Because of our
       particular ordered pair definition, equality holds whether or not the
       first members are sets. $)
    opth2 $p |- ( <. A , B >. = <. C , D >. -> B = D ) $=
      ( vx cvv wcel cop wceq wi cv opeq1 eqeq1d imbi1d visset opth simprbi 
      vtoclg wn wa c0 nelneq2 opprc1b con1bii bicomi syl2anb pm2.21d csn cpr 
      opprc1 eqeqan12d snex preqr2 sneqr syl syl6bi pm2.61dan pm2.61i ) AHIZABJ
      ZCDJZKZBDKZLZGMZBJZVCKZVELVFGAHVGAKZVIVDVEVJVHVBVCVGABNOPVIVGCKVEVGBCDGQE
      FRSTVAUAZCHIZVFVKVLUBVDVEUCVBIUCVCIZUAZVDUAVKVLUCVBVCUDABUEVNVLVLVMCDUEUF
      UGUHUIVKVLUAZUBVDUCBUJZUKZUCDUJZUKZKZVEVKVOVBVQVCVSABULCDULUMVTVPVRKVEVPV
      RUCBUNDUNUOBDEUPUQURUSUT $.
      $( [10-Apr-2004] $)
  $}

  ${
    opcom.1 $e |- A e. _V $.
    $( An ordered pair commutes iff its members are equal. $)
    opcom $p |- ( <. A , B >. = <. B , A >. <-> A = B ) $=
      ( cop wceq cvv wcel opeqex mpbii eleq1 wa wb opthgg mp3an13 eqcom anbi2i 
      anidm bitri syl6bb pm5.21nii ) ABDBADEZBFGZABEZUAAFGZUBCABBAHIUCUDUBCABFJ
      IUBUAUCBAEZKZUCUDUBUDUAUFLCCABBAFFFMNUFUCUCKUCUEUCUCBAOPUCQRST $.
      $( [28-May-2009] $)
  $}

  ${
    $d x y z A $.  $d y z B $.
    $( "At most one" property of an ordered pair.  The proof is a little tricky
       because we do not place any restrictions on class ` B ` . $)
    moop2 $p |- E* x A = <. B , x >. $=
      ( vy vz cv cop wceq wmo csb wa wi wal eqtr2 visset opth2 syl gen2 wcel 
      ax-17 hbcsb1 hbop hbeq csbeq1a opeq1d opeq2 eqtrd eqeq2d mo4f mpbir ) BCA
      FZGZHZAIUMBADFZCJZUNGZHZKZUKUNHZLZDMAMUTADURULUPHUSBULUPNCUKUOUNAODOZPQRU
      MUQADAEEBUPEFZBSATAEUOUNAEUNCVAVBUNSATZUAVCUBUCUSULUPBUSULUOUKGUPUSCUOUKA
      UNCUDUEUKUNUOUFUGUHUIUJ $.
      $( [19-Dec-2008] $) $( [11-Apr-2004] $)
  $}

  ${
    opeqsn.1 $e |- A e. _V $.
    opeqsn.2 $e |- B e. _V $.
    opeqsn.3 $e |- C e. _V $.
    $( Equivalence for an ordered pair equal to a singleton. $)
    opeqsn $p |- ( <. A , B >. = { C } <-> ( A = B /\ C = { A } ) ) $=
      ( cop csn wceq cpr wa df-op eqeq1i snex prex preqsn eqcom anbi2i anidm 
      bitri 3bitri anbi1i preq2 dfsn2 syl5req eqeq1d syl6bb pm5.32i ) ABGZCHZIA
      HZABJZJZUJIUKULIZULCIZKZABIZCUKIZKZUIUMUJABLMUKULCANABOFPUPUQUOKUSUNUQUOU
      NULUKIUQBAIZKZUQUKULQABADEDPVAUQUQKUQUTUQUQBAQRUQSTUAUBUQUOURUQUOUKCIURUQ
      ULUKCUQAAJULUKABAUCAUDUEUFUKCQUGUHTUA $.
      $( [3-Jun-2008] $)
  $}

  ${
    opeqpr.3 $e |- C e. _V $.
    opeqpr.4 $e |- D e. _V $.
    $( Equivalence for an ordered pair equal to an unordered pair. $)
    opeqpr $p |- ( <. A , B >. = { C , D }
  <-> ( ( C = { A } /\ D = { A , B } ) \/ ( C = { A , B } /\ D = { A } ) ) ) $=
      ( cop cpr wceq csn wa wo eqcom df-op eqeq2i snex prex preq12b 3bitri ) AB
      GZCDHZIUATIUAAJZABHZHZICUBIDUCIKCUCIDUBIKLTUAMTUDUAABNOCDUBUCEFAPABQRS $.
      $( [3-Jun-2008] $)
  $}

  ${
    $d x y z A $.
    $( "At most one" remains true inside ordered pair quantification. $)
    mosubopt $p |- ( A. y A. z E* x ph ->
                 E* x E. y E. z ( A = <. y , z >. /\ ph ) ) $=
      ( wmo wal cv cop wceq wex wa hba1 hbe1 hbmo wi hbex ax-17 copsexg mobid 
      biimpcd a4s 19.23ad wn simpl 2eximi 19.23aiv con3i exmo ori syl pm2.61d1 
      ) ABFZDGZCGZECHDHIJZDKZCKZUPALZDKZCKZBFZUOUQVBCUNCMVACBUTCNOUNUQVBPCUNUPV
      BDUMDMVADBUTDCUSDNQOUMUPVBPDUPUMVBUPAVABUPBRACDESTUAUBUCUBUCURUDVABKZUDVB
      VCURVAURBUSUPCDUPAUEUFUGUHVCVBVABUIUJUKUL $.
      $( [28-Aug-2007] $)
  $}

  ${
    $d x y z A $.
    mosubop.1 $e |- E* x ph $.
    $( "At most one" remains true inside ordered pair quantification. $)
    mosubop $p |- E* x E. y E. z ( A = <. y , z >. /\ ph ) $=
      ( wmo wal cv cop wceq wa wex gen2 mosubopt ax-mp ) ABGZDHCHECIDIJKALDMCMB
      GQCDFNABCDEOP $.
      $( [28-May-1995] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x y $.
    $( Transfer existential uniqueness to second member of an ordered pair. $)
    euop2 $p |- ( E! x E. y ( x = <. A , y >. /\ ph ) <-> E! y ph ) $=
      ( cv cop opex moop2 euxfr2 ) ABCDCEZFDJGCBEDHI $.
      $( [10-Apr-2004] $)
  $}

  ${
    opthw.1 $e |- A e. _V $.
    opthw.2 $e |- B e. _V $.
    $( Justification theorem for the ordered pair definition in Norbert Wiener,
       "A simplification of the logic of relations," _Proc. of the Cambridge
       Philos.  Soc_., 1914, vol. 17, pp.387-390.  It is also shown as a
       definition in [Enderton] p. 36 and as Exercise 4.8(b) of [Mendelson]
       p. 230.  It is meaningful only for classes that exist as sets (i.e. are
       not proper classes).  See ~ df-op for other ordered pair definitions. $)
    opthwiener $p |- ( { { { A } , (/) } , { { B } } } =
                    { { { C } , (/) } , { { D } } } <-> ( A = C /\ B = D ) ) $=
      ( csn c0 cpr wceq wa id wo wcel snex prid2 eleq2 mpbii elpr sylib wn wb 
      0ex snnz elsnc eqcom bitri nemtbir nelneq2 mp2an mtbi biorf ax-mp sylibr 
      preq2d eqtr4d prex preqr1 syl sneqr 3syl jca sneq preq1 preq2 sylan9eq 
      impbii ) AGZHIZBGZGZIZCGZHIZDGZGZIZJZACJZBDJZKVRVSVTVRVHVMJZVSVRVIVNJZWAV
      RVLVNVKIZJZWBVRVLVQWCVRLVRVKVPVNVRVKVNJZVKVPJZMZWFVRVKVQNZWGVRVKVLNWHVIVK
      VJOZPVLVQVKQRVKVNVPWISTWEUAWFWGUBVNVKJZWEHVNNHVKNZUAWJUAVMHUCPWKVJHBFUDWK
      HVJJVJHJHVJUCUEHVJUFUGUHHVNVKUIUJVNVKUFUKWEWFULUMUNZUOUPVIVNVKVHHUQVMHUQU
      RUSVHVMHAOCOURUSACEUTUSVRWFVJVOJZVTWLVJVOBOUTBDFUTVAVBVSVTVLWCVQVSWAWBWDA
      CVCVHVMHVDVIVNVKVDVAVTWMWFWCVQJBDVCVJVOVCVKVPVNVEVAVFVG $.
      $( [28-Sep-2003] $)
  $}

  $( The union of an ordered pair.  Theorem 65 of [Suppes] p. 39. $)
  uniop $p |- U. <. A , B >. = { A , B } $=
    ( cop cuni csn cpr cun df-op unieqi snex prex unipr wss wceq snsspr1 
    ssequn1 mpbi 3eqtri ) ABCZDAEZABFZFZDTUAGZUASUBABHITUAAJABKLTUAMUCUANABOTUA
    PQR $.
    $( [17-Aug-2004] $)

  $( Ordered pair membership is inherited by class union. $)
  uniopel $p |- ( <. A , B >. e. C -> U. <. A , B >. e. U. C ) $=
    ( cop wcel cuni cpr uniop opi2 eqeltri elssuni sseld mpi ) ABDZCEZNFZNEPCFZ
    EPABGNABHABIJONQPNCKLM $.
    $( [13-May-2008] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z w v $.  $d y z w v $.  $d ph z w v $.
    $( The law of concretion.  Special case of Theorem 9.5 of [Quine] p. 61.
       (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    opabid $p |- ( <. x , y >. e. { <. x , y >. | ph } <-> ph ) $=
      ( vz cv cop wceq wa wex copab opex copsexg bicomd df-opab elab2 ) DEZBEZC
      EZFZGZAHCIBIZADSABCJQRKTAUAABCPLMABCDNO $.
      $( [25-Jul-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d x z A $.  $d y z A $.  $d z ph $.
    $( Membership in a class abstraction of pairs. $)
    elopab $p |- ( A e. { <. x , y >. | ph } <->
                 E. x E. y ( A = <. x , y >. /\ ph ) ) $=
      ( vz copab wcel cvv cv cop wceq wa wex elisset opex eleq1 mpbiri adantr 
      19.23aivv eqeq1 anbi1d 2exbidv df-opab abeq2i vtoclbg pm5.21nii ) DABCFZG
      ZDHGZDBIZCIZJZKZALZCMBMZDUGNUNUIBCUMUIAUMUIULHGUJUKODULHPQRSEIZUGGUPULKZA
      LZCMBMZUHUOEDHUPDUGPUPDKZURUNBCUTUQUMAUPDULTUAUBUSEUGABCEUCUDUEUF $.
      $( [24-Mar-1998] $)
  $}

  ${
    $d x z v $.  $d y z v $.  $d w z $.  $d ph v $.
    hbopab.1 $e |- ( ph -> A. z ph ) $.
    $( Bound-variable hypothesis builder for class abstraction.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       11-Jul-2011.) $)
    hbopab $p |- ( w e. { <. x , y >. | ph } ->
                 A. z w e. { <. x , y >. | ph } ) $=
      ( vv copab cv cop wceq wa wex cab df-opab ax-17 hban hbex hbab hbxfr ) DE
      ABCHGIBICIJKZALZCMZBMZGNABCGOUDDGEUCDBUBDCUAADUADPFQRRST $.
      $( [25-Jul-2011] $) $( [1-Sep-1999] $)
  $}

  ${
    $d x w $.  $d y w $.  $d x z $.  $d w ph $.
    $( The first abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free. $)
    hbopab1 $p |- ( z e. { <. x , y >. | ph } ->
                 A. x z e. { <. x , y >. | ph } ) $=
      ( vw copab cv cop wceq wa wex cab df-opab hbe1 hbab hbxfr ) BDABCFEGBGCGH
      IAJCKZBKZELABCEMRBEDQBNOP $.
      $( [16-May-1995] $)
  $}

  ${
    $d x w $.  $d y w $.  $d y z $.  $d w ph $.
    $( The second abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free. $)
    hbopab2 $p |- ( z e. { <. x , y >. | ph } ->
                 A. y z e. { <. x , y >. | ph } ) $=
      ( vw copab cv cop wceq wa wex cab df-opab hbe1 hbex hbab hbxfr ) CDABCFEG
      BGCGHIAJZCKZBKZELABCEMTCEDSCBRCNOPQ $.
      $( [16-May-1995] $)
  $}


  ${
    $d x y z v $.  $d x y w v $.  $d v ph $.
    $( The law of concretion in terms of substitutions.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    opelopabsb $p |- ( <. z , w >. e. { <. x , y >. | ph }
                 <-> [ w / y ] [ z / x ] ph ) $=
      ( cv cop wceq wa wex copab wcel wsbc excom visset opth ancom equcom 
      anbi12i 3bitri anbi1i 2exbii bitri elopab 2sb5 3bitr4i ) DFZEFZGZBFZCFZGH
      ZAIZCJBJZUKUHHZUJUGHZIZAIZBJCJZUIABCKLABUGMCUHMUNUMBJCJUSUMBCNUMURCBULUQA
      ULUGUJHZUHUKHZIVAUTIUQUGUHUJUKDOEOCOPUTVAQVAUOUTUPECRDBRSTUAUBUCABCUIUDAC
      BEDUEUF $.
      $( [25-Jul-2011] $) $( [30-Sep-2002] $)

    ${
      brabsb.1 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion in terms of substitutions. $)
      brabsb $p |- ( z R w <-> [ w / y ] [ z / x ] ph ) $=
        ( cv wbr copab cop wcel wsbc breqi df-br opelopabsb 3bitri ) DHZEHZFIRS
        ABCJZIRSKTLABRMCSMRSFTGNRSTOABCDEPQ $.
        $( [17-Mar-2008] $)
    $}
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y ch $.  $d z ph $.
    opelopabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61. $)
    opelopabg $p |- ( ( A e. C /\ B e. D ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) ) $=
      ( wcel wa cop cv wceq wex copab sylan9bb copsex2g elopab syl5bb ) FHLGILM
      FGNZDOZEOZNPAMEQDQCUCADERLACDEFGHIUDFPABUEGPCJKSTADEUCUAUB $.
      $( [15-Mar-2007] $) $( [28-May-1995] $)

    ${
      brabg.5 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation. $)
      brabg $p |- ( ( A e. C /\ B e. D ) -> ( A R B <-> ch ) ) $=
        ( wcel wa cop copab wbr opelopabg df-br eleq2i bitri syl5bb ) FHNGINOFG
        PZADEQZNZCFGJRZABCDEFGHIKLSUGUDJNUFFGJTJUEUDMUAUBUC $.
        $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y ch $.
    opelopab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab2.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Ordered pair membership in an ordered pair class abstraction. $)
    opelopab2 $p |- ( ( A e. C /\ B e. D ) -> ( <. A , B >. e.
                 { <. x , y >. | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ch ) ) $=
      ( wcel wa cop cv copab wceq eleq1 anbi1d anbi12d anbi2d opelopabg simpr 
      pm3.2 impbid2 bitrd ) FHLZGILZMZFGNDOZHLZEOZILZMZAMZDEPLUICMZCUOUGUMMZBMU
      PDEFGHIUJFQZUNUQABURUKUGUMUJFHRSJTULGQZUQUIBCUSUMUHUGULGIRUAKTUBUIUPCUICU
      CUICUDUEUF $.
      $( [14-Oct-2007] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopab.1 $e |- A e. _V $.
    opelopab.2 $e |- B e. _V $.
    opelopab.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61. $)
    opelopab $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) $=
      ( cvv wcel cop copab wb opelopabg mp2an ) FLMGLMFGNADEOMCPHIABCDEFGLLJKQR
      $.
      $( [16-May-1995] $)

    ${
      brab.5 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation. $)
      brab $p |- ( A R B <-> ch ) $=
        ( cvv wcel wbr wb brabg mp2an ) FNOGNOFGHPCQIJABCDEFGNNHKLMRS $.
        $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d w z ch $.  $d w z ph $.
    opelopabf.x $e |- ( ps -> A. x ps ) $.
    opelopabf.y $e |- ( ch -> A. y ch ) $.
    opelopabf.1 $e |- A e. _V $.
    opelopabf.2 $e |- B e. _V $.
    opelopabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions." $)
    opelopabf $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) $=
      ( vz vw cop copab wcel cv wsbc ax-17 hbs1 hbsb wceq sbequ12 sylan9bb 
      cbvopab eleq2i sbhypf sbbid opelopab bitri ) FGPZADEQZRUMADNSZTZEOSZTZNOQ
      ZRCUNUSUMAURDENOANUAAOUAUPEODADNUBUCUPEOUBDSUOUDAUPESUQUDURADNUEUPEOUEUFU
      GUHURBEUQTCNOFGJKUOFUDZUPBEOUTEUAABDNFHLUIUJBCEOGIMUIUKUL $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication. $)
    ssopab2 $p |- ( { <. x , y >. | ph } C_ { <. x , y >. | ps } <->
               A. x A. y ( ph -> ps ) ) $=
      ( vz copab wss wi wal hbopab1 hbss hbopab2 cv cop wceq wex opex isseti 
      wa cab copsexg imbi12d ss2ab ax-4 sylbi syl5bir df-opab sseq12i syl5ib 
      19.23aiv ax-mp 19.21ai hba1 anim2d eximd a4s ss2abdv 3sstr4g impbii ) ACD
      FZBCDFZGZABHZDIZCIZVBVDCCEUTVAACDEJBCDEJKVBVCDDEUTVAACDELBCDELKEMZCMZDMZN
      ZOZEPVBVCHZEVIVGVHQRVJVKEVJVJASZDPZCPZETZVJBSZDPZCPZETZGZVCVBVJVCVNVRHZVT
      VJAVNBVRACDVFUABCDVFUAUBVTWAEIWAVNVREUCWAEUDUEUFUTVOVAVSACDEUGZBCDEUGZUHU
      IUJUKULULVEVOVSUTVAVEVNVREVEVMVQCVDCUMVDVMVQHCVDVLVPDVCDUMVDABVJVCDUDUNUO
      UPUOUQWBWCURUS $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x y z $.
    ssopab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of ordered pair abstraction subclass from implication. $)
    ssopab2i $p |- { <. x , y >. | ph } C_ { <. x , y >. | ps } $=
      ( copab wss wi wal ssopab2 ax-gen mpgbir ) ACDFBCDFGABHZDICABCDJMDEKL $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d z ph $.  $d z x $.  $d z y $.
    $( Non-empty ordered pair class abstraction. $)
    opabn0 $p |- ( { <. x , y >. | ph } =/= (/) <-> E. x E. y ph ) $=
      ( vz copab c0 wne cv wcel wex cop wceq wa n0 elopab exbii exrot3 19.41v 
      opex isseti mpbiran 2exbii bitri 3bitri ) ABCEZFGDHZUEIZDJUFBHZCHZKZLZAMZ
      CJBJZDJZACJBJZDUENUGUMDABCUFOPUNULDJZCJBJUOULDBCQUPABCUPUKDJAUKADRDUJUHUI
      STUAUBUCUD $.
      $( [10-Oct-2007] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Power class of union and intersection
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d A x y $.  $d B x y $.
    $( The power class of the intersection of two classes is the intersection
       of their power classes.  Exercise 4.12(j) of [Mendelson] p. 235. $)
    pwin $p |- ~P ( A i^i B ) = ( ~P A i^i ~P B ) $=
      ( vx cpw cin cv wss wa wcel ssin visset elpw anbi12i 3bitr4i ineqri 
      eqcomi ) ADZBDZEABEZDZCQRTCFZAGZUABGZHUASGUAQIZUARIZHUATIUAABJUDUBUEUCUAA
      CKZLUABUFLMUASUFLNOP $.
      $( [23-Nov-2003] $)

    $( The power class of the union of two classes includes the union of their
       power classes.  Exercise 4.12(k) of [Mendelson] p. 235. $)
    pwunss $p |- ( ~P A u. ~P B ) C_ ~P ( A u. B ) $=
      ( vx cpw cun cv wss wo wcel ssun elun visset elpw orbi12i bitri 3imtr4i 
      ssriv ) CADZBDZEZABEZDZCFZAGZUCBGZHZUCUAGUCTIZUCUBIUCABJUGUCRIZUCSIZHUFUC
      RSKUHUDUIUEUCACLZMUCBUJMNOUCUAUJMPQ $.
      $( [23-Nov-2003] $)

    $( The power class of the union of two classes is a subset of the union of
       their power classes, iff one class is a subclass of the other.  Exercise
       4.12(l) of [Mendelson] p. 235. $)
    pwssun $p |- ( ( A C_ B \/ B C_ A ) <->
               ~P ( A u. B ) C_ ( ~P A u. ~P B ) ) $=
      ( vy vx wss wo cun cpw wceq ssequn2 pweq eqimss syl sylbi ssequn1 
      orim12i orcoms ssun wn wa cv wcel wi cpr ssel csn unss12 visset snss 
      syl2anb zfpair2 elpw df-pr sseq1i bitr2i sylib syl5 exp3a com23 imp31 
      elun prss bitr4i simprbi simplbi ord ex imp ssrdv exp31 con1b syl6ib 
      orrd impbii ) ABEZBAEZFZABGZHZAHZBHZGZEZVQVSVTEZVSWAEZFZWCVPVOWFVPWDVOWEV
      PVRAIZWDBAJWGVSVTIWDVRAKVSVTLMNVOVRBIZWEABOWHVSWAIWEVRBKVSWALMNPQVSVTWARM
      WCVOVPWCVOSZVPWCWITCBAWCWICUAZBUBZWJAUBZUCWCWKWIWLWCWKWLSZVOUCWIWLUCWCWKW
      MVOWCWKTZWMTDABWNWMDUAZAUBZWOBUBZUCWNWPWMWQWNWPWMWQUCWNWPTZWLWQWRWOWJUDZV
      TUBZWSWAUBZFZWLWQFWRWSWBUBZXBWCWKWPXCWCWPWKXCWCWPWKXCWCWSVSUBZXCWPWKTZVSW
      BWSUEXEWOUFZWJUFZGZVREZXDXFAEXGBEXIWPWKXFAXGBUGWOADUHZUIWJBCUHZUIUJXDWSVR
      EXIWSVRDCUKZULWSXHVRWOWJUMUNUOUPUQURUSUTWSVTWAVAUPWTWLXAWQWTWPWLWTWSAEWPW
      LTWSAXLULWOWJAXJXKVBVCVDXAWQWKXAWSBEWQWKTWSBXLULWOWJBXJXKVBVCVEPMVFVGUSVH
      VIVJWLVOVKVLUSVHVIVGVMVN $.
      $( [23-Nov-2003] $)

    $( Break up the power class of a union into a union of smaller classes. $)
    pwundif $p |- ~P ( A u. B ) =
                  ( ( ~P ( A u. B ) \ ~P A ) u. ~P A ) $=
      ( vx cun cpw cdif cv wcel wss visset elpw wo wn wa elun eldif notbii 
      anbi12i bitri orbi12i ordir pm2.1 biantru id ssun3 jaoi orc impbii 
      3bitr2i 3bitrri eqriv ) CABDZEZUMAEZFZUNDZCGZUMHZUQULIZUQUPHZUQULCJZKZUTU
      QUOHZUQUNHZLUSUQAIZMZNZVELZUSUQUOUNOVCVGVDVEVCURVDMZNVGUQUMUNPURUSVIVFVBV
      DVEUQAVAKZQRSVJTVHUSVELZVFVELZNVKUSUSVFVEUAVLVKVEUBUCVKUSUSUSVEUSUDUQABUE
      UFUSVEUGUHUIUJSUK $.
      $( [25-Mar-2007] $)
  $}

  $( The power class of the union of two classes equals the union of their
     power classes, iff one class is a subclass of the other.  Part of Exercise
     7(b) of [Enderton] p. 28. $)
  pwun $p |- ( ( A C_ B \/ B C_ A ) <->
             ~P ( A u. B ) = ( ~P A u. ~P B ) ) $=
    ( cun cpw wss wa wo wceq pwunss biantru pwssun eqss 3bitr4i ) ABCDZADBDCZEZ
    PONEZFABEBAEGNOHQPABIJABKNOLM $.
    $( [23-Nov-2003] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Epsilon and identity relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constant symbols. $)
  $c _E $. $( Letter E (for epsilon relation) $)
  $c _I $.  $( Letter I (for identity relation) $)

  $( Extend class notation to include the epsilon relation. $)
  cep $a class _E $.

  $( Extend the definition of a class to include identity relation. $)
  cid $a class _I $.

  ${
    $d x y $.
    $( Define the epsilon relation.  Similar to Definition 6.22 of
       [TakeutiZaring] p. 30. $)
    df-eprel $a |- _E = { <. x , y >. | x e. y } $.
  $}

  ${
    $d x y A $.  $d x y B $.
    epelc.1 $e |- A e. _V $.
    epelc.2 $e |- B e. _V $.
    $( The epsilon relation and the membership relation are the same. $)
    epelc $p |- ( A _E B <-> A e. B ) $=
      ( vx vy cv wcel cep eleq1 eleq2 df-eprel brab ) EGZFGZHAOHABHEFABICDNAOJO
      BAKEFLM $.
      $( [13-Aug-1995] $)
  $}

  ${
    $( The epsilon relation and the membership relation are the same. $)
    epel $p |- ( x _E y <-> x e. y ) $=
      ( cv visset epelc ) ACBCADBDE $.
      $( [13-Aug-1995] $)
  $}

  ${
    $d x y $.
    $( Define the identity relation.  Definition 9.15 of [Quine] p. 64. $)
    df-id $a |- _I = { <. x , y >. | x = y } $.
  $}

  ${
    $d v w z x $.  $d v w z y $.
    $( A stronger version of ~ df-id that doesn't require ` x ` and ` y ` to be
       distinct.  Ordinarily, we wouldn't use this as a definition, since
       non-distinct dummy variables would make soundness verification more
       difficult (as the proof here shows).  The proof can be instructive in
       showing how distinct variable requirements may be eliminated, a task
       that is not necessarily obvious. $)
    dfid3 $p |- _I = { <. x , y >. | x = y } $=
      ( vw vz vv cid cv cop wceq wa wex cab copab df-id df-opab wal wb opeq2 
      eqeq2d equequ2 anbi12d a4s drex1 drex2 ancom equcom anbi1i bitri exbii 
      visset ceqsexv equid biantru 3bitri hbe1 19.9 bitr4i syl5bb wn hbnae 
      wcel wi ax-17 a1i dveel2 nalequcoms hbopd hbeqd dveeq1 hband cbvexd 
      exbid pm2.61i abbii 3eqtri eqtr4i ) FCGZAGZBGZHZIZVRVSIZJZBKZAKZCLZWBABMF
      VRDGZIZADMVQVRWGHZIZWHJZDKZAKZCLWFADNWHADCOWMWECWBAPZWMWEQWNVQVRVRHZIZVRV
      RIZJZAKZAKZWEWMWSWDABAWRWCABWBWRWCQAWBWPWAWQWBWBWOVTVQVRVSVRRSABATUAUBUCU
      DWMWSWTWLWRAWLWGVRIZWJJZDKWPWRWKXBDWKWHWJJXBWJWHUEWHXAWJADUFUGUHUIWJWPDVR
      AUJXAWIWOVQWGVRVRRSUKWQWPAULUMUNUIWSAWRAUOUPUQURWNUSZWLWDAABAUTXCWKWCDBAB
      BUTZXCWJWHBXCBEVQWIXDEGZVQVAZXFBPVBXCXFBVCVDXCBEVRWGXDXEVRVAZXGBPVBBABAEV
      EVFXEWGVAZXHBPVBXCXHBVCVDVGVHWHWHBPVBBABADVIVFVJWGVSIZWKWCQVBXCXIWJWAWHWB
      XIWIVTVQWGVSVRRSDBATUAVDVKVLVMVNVOWBABCOVP $.
      $( [5-Feb-2008] $)
  $}

  $( Alternate definition of the identity relation. $)
  dfid2 $p |- _I = { <. x , x >. | x = x } $=
    ( dfid3 ) AAB $.
    $( [15-Mar-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Partial and complete ordering
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$(
We have not yet defined relations ( ~ df-rel ), but here but introduce a
few related notions we will use to develop ordinals.  The class variable
` R ` is no different from other class variables, but it reminds us that
normally it represents what we will later call a "relation."
$)

  $( Declare new constant symbols. $)
  $c Po $.  $( Partial ordering predicate symbol (read: 'partial ordering'). $)
  $c Or $.  $( Strict complete ordering predicate symbol (read: 'orders'). $)

  $( Extend wff notation to include the strict partial ordering predicate.
     Read:  ' ` R ` is a partial order on ` A ` .' $)
  wpo $a wff R Po A $.

  $( Extend wff notation to include the strict complete ordering predicate.
     Read:  ' ` R ` orders ` A ` .' $)
  wor $a wff R Or A $.

  ${
    $d x y z R $.  $d x y z A $.
    $( Define the strict partial order predicate.  Definition of [Enderton]
       p. 168. $)
    df-po $a |- ( R Po A <-> A. x e. A A. y e. A A. z e. A
                ( -. x R x /\ ( ( x R y /\ y R z ) -> x R z ) ) ) $.
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    $( Subset theorem for the partial ordering predicate.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    poss $p |- ( A C_ B -> ( R Po B -> R Po A ) ) $=
      ( vx vy vz wss cv wbr wn wa wi wral wpo wcel w3a wal ssel 3anim123d 
      imim1d alimdv 2alimdv r3al 3imtr4g df-po ) ABGZDHZUGCIJUGEHZCIUHFHZCIKUGU
      ICILKZFBMEBMDBMZUJFAMEAMDAMZBCNACNUFUGBOZUHBOZUIBOZPZUJLZFQZEQDQUGAOZUHAO
      ZUIAOZPZUJLZFQZEQDQUKULUFURVDDEUFUQVCFUFVBUPUJUFUSUMUTUNVAUOABUGRABUHRABU
      IRSTUAUBUJDEFBBBUCUJDEFAAAUCUDDEFBCUEDEFACUEUD $.
      $( [25-Jul-2011] $) $( [27-Mar-1997] $)
  $}

  ${
    $d x y z R $.  $d x y z S $.  $d x y z A $.
    $( Equality theorem for partial ordering predicate. $)
    poeq1 $p |- ( R = S -> ( R Po A <-> S Po A ) ) $=
      ( vx vy vz wceq cv wbr wn wa wi wral wpo breq notbid anbi12d imbi12d 
      ralbidv 2ralbidv df-po 3bitr4g ) BCGZDHZUDBIZJZUDEHZBIZUGFHZBIZKZUDUIBIZL
      ZKZFAMZEAMDAMUDUDCIZJZUDUGCIZUGUICIZKZUDUICIZLZKZFAMZEAMDAMABNACNUCUOVDDE
      AAUCUNVCFAUCUFUQUMVBUCUEUPUDUDBCOPUCUKUTULVAUCUHURUJUSUDUGBCOUGUIBCOQUDUI
      BCORQSTDEFABUADEFACUAUB $.
      $( [27-Mar-1997] $)
  $}

  $( Equality theorem for partial ordering predicate. $)
  poeq2 $p |- ( A = B -> ( R Po A <-> R Po B ) ) $=
    ( wceq wpo wss wa wi wb poss anim12i eqss dfbi2 3imtr4i bicomd ) ABDZBCEZAC
    EZABFZBAFZGQRHZRQHZGPQRISUATUBABCJBACJKABLQRMNO $.
    $( [27-Mar-1997] $)

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Properties of partial order relation in class notation. $)
    pocl $p |- ( R Po A -> ( ( B e. A /\ C e. A /\ D e. A ) ->
               ( -. B R B /\ ( ( B R C /\ C R D ) -> B R D ) ) ) ) $=
      ( vx vy vz wcel w3a wpo wbr wn wa wi cv wceq id breq12d notbid breq1 
      anbi1d imbi12d anbi12d imbi2d breq2 imbi1d anbi2d wal wral df-po r3al 
      bitri biimpi 19.21bbi 19.21bi com12 vtocl3ga ) BAICAIDAIJAEKZBBELZMZBCELZ
      CDELZNZBDELZOZNZUSFPZVHELZMZVHGPZELZVKHPZELZNZVHVMELZOZNZOUSVABVKELZVNNZB
      VMELZOZNZOUSVAVBCVMELZNZWAOZNZOUSVGOFGHBCDAAAVHBQZVRWCUSWHVJVAVQWBWHVIUTW
      HVHBVHBEWHRZWISTWHVOVTVPWAWHVLVSVNVHBVKEUAUBVHBVMEUAUCUDUEVKCQZWCWGUSWJWB
      WFVAWJVTWEWAWJVSVBVNWDVKCBEUFVKCVMEUAUDUGUHUEVMDQZWGVGUSWKWFVFVAWKWEVDWAV
      EWKWDVCVBVMDCEUFUHVMDBEUFUCUHUEUSVHAIVKAIVMAIJZVRUSWLVROZHUSWMHUIZFGUSWNG
      UIFUIZUSVRHAUJGAUJFAUJWOFGHAEUKVRFGHAAAULUMUNUOUPUQURUQ $.
      $( [27-Mar-1997] $)
  $}

  $( A partial order relation is irreflexive. $)
  poirr $p |- ( ( R Po A /\ B e. A ) -> -. B R B ) $=
    ( wpo wcel w3a wbr wn wa wi pocl imp simpld df-3an anabs1 anidm 3bitrri 
    sylan2b ) ACDZBAEZTTFZBBCGZHZTSUAIUCUBUBIUBJZSUAUCUDIABBBCKLMUATTIZTIUETTTT
    NTTOTPQR $.
    $( [27-Mar-1997] $)

  $( A partial order relation is a transitive relation. $)
  potr $p |- ( ( R Po A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             ( ( B R C /\ C R D ) -> B R D ) ) $=
    ( wpo wcel w3a wa wbr wn wi pocl imp simprd ) AEFZBAGCAGDAGHZIBBEJKZBCEJCDE
    JIBDEJLZPQRSIABCDEMNO $.
    $( [27-Mar-1997] $)

  $( A partial order relation has no 2-cycle loops. $)
  po2nr $p |- ( ( R Po A /\ ( B e. A /\ C e. A ) ) ->
              -. ( B R C /\ C R B ) ) $=
    ( wpo wcel wa wbr wn poirr adantrr wi potr 3exp2 com34 pm2.43d imp32 mtod 
    ) ADEZBAFZCAFZGGBCDHCBDHGZBBDHZSTUCIUAABDJKSTUAUBUCLZSTUAUDLSTUATUDSTUATUDA
    BCBDMNOPQR $.
    $( [27-Mar-1997] $)

  $( A partial order relation has no 3-cycle loops. $)
  po3nr $p |- ( ( R Po A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             -. ( B R C /\ C R D /\ D R B ) ) $=
    ( wpo wcel w3a wa wbr wn po2nr 3adantr2 potr anim1d df-3an syl5ib mtod ) AE
    FZBAGZCAGZDAGZHIZBCEJZCDEJZDBEJZHZBDEJZUFIZSTUBUIKUAABDELMUCUDUEIZUFIUIUGUC
    UJUHUFABCDENOUDUEUFPQR $.
    $( [27-Mar-1997] $)

  ${
    $d x y z R $.
    $( Any relation is a partial ordering of the empty set.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    po0 $p |- R Po (/) $=
      ( vx vy vz c0 wpo cv wbr wn wa wi wral ral0 df-po mpbir ) EAFBGZPAHIPCGZA
      HQDGZAHJPRAHKJDELCELZBELSBMBCDEANO $.
      $( [25-Jul-2011] $) $( [28-Mar-1997] $)
  $}

  ${
    $d w y z R $.  $d w x y z $.
    $( MAY BE REVISED - use A instead of x $)
    $( Partial ordering of a singleton. $)
    posn $p |- ( R Po { x } <-> -. <. x , x >. e. R ) $=
      ( vy vz vw cv csn wpo wbr wn wa wi wral cop wcel df-po wsbc cvv wb 
      visset sbcsng bicomd ax-mp ax-17 wceq breq2 anbi2d imbi12d sbie bitri 
      sbbii breq1 anbi12d imbi1d 3bitri simpl biantru bitrd notbid anbi1d 
      bitr4i 3bitr4ri df-br notbii 3bitr2i ) AFZGZBHCFZVHBIZJZVHDFZBIZVKEFZBIZK
      ZVHVMBIZLZKZEVGMZDVGMZCVGMZVFVFBIZJZVFVFNBOZJCDEVGBPVTCVFQZVJVHVFBIZWBKZW
      FLZKZCVFQZWAWCVTWICAVTVSDVFQZVJVLVKVFBIZKZWFLZKZDVFQWIVFROZVTWKSATZWPWKVT
      VSDVFRUAUBUCVSWODAVSVREVFQZWOWPVSWRSWQWPWRVSVREVFRUAUBUCVRWOEAWOEUDVMVFUE
      ZVQWNVJWSVOWMVPWFWSVNWLVLVMVFVKBUFUGVMVFVHBUFUHUGUIUJUKWOWIDAWIDUDVKVFUEZ
      WNWHVJWTWMWGWFWTVLWFWLWBVKVFVHBUFVKVFVFBULUMUNUGUIUOUKWPWAWESWQWPWEWAVTCV
      FRUAUBUCWCWCWBWBKZWBLZKZWJXBWCWBWBUPUQWIXCCAXCCUDVHVFUEZVJWCWHXBXDVIWBXDV
      IVFVHBIWBVHVFVHBULVHVFVFBUFURUSXDWGXAWFWBXDWFWBWBVHVFVFBULZUTXEUHUMUIVAVB
      WBWDVFVFBVCVDVE $.
      $( [27-Apr-2009] $)
  $}

  ${
    $d x y R $.  $d x y A $.
    $( Define the strict complete (linear) order predicate. $)
    df-so $a |- ( R Or A <-> ( R Po A /\ A. x e. A A. y e. A
                ( x R y \/ x = y \/ y R x ) ) ) $.
  $}

  ${
    $d x y R $.  $d x y A $.
    $( A strict linear order is a strict partial order. $)
    sopo $p |- ( R Or A -> R Po A ) $=
      ( vx vy wor wpo cv wbr wceq w3o wral df-so simplbi ) ABEABFCGZDGZBHNOIONB
      HJDAKCAKCDABLM $.
      $( [28-Mar-1997] $)
  $}

  ${
    $d x y R $.  $d x y A $.  $d x y B $.
    $( Subset theorem for the strict ordering predicate.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    soss $p |- ( A C_ B -> ( R Or B -> R Or A ) ) $=
      ( vx vy wss wpo cv wbr wceq w3o wral wa wor poss wcel wi wal ssel 
      anim12d imim1d 2alimdv r2al 3imtr4g df-so ) ABFZBCGZDHZEHZCIUHUIJUIUHCIKZ
      EBLDBLZMACGZUJEALDALZMBCNACNUFUGULUKUMABCOUFUHBPZUIBPZMZUJQZERDRUHAPZUIAP
      ZMZUJQZERDRUKUMUFUQVADEUFUTUPUJUFURUNUSUOABUHSABUISTUAUBUJDEBBUCUJDEAAUCU
      DTDEBCUEDEACUEUD $.
      $( [25-Jul-2011] $) $( [16-Mar-1997] $)
  $}

  ${
    $d x y R $.  $d x y S $.  $d x y A $.
    $( Equality theorem for the strict ordering predicate. $)
    soeq1 $p |- ( R = S -> ( R Or A <-> S Or A ) ) $=
      ( vx vy wceq wpo cv wbr w3o wral wa wor poeq1 breq biidd 3orbi123d 
      2ralbidv anbi12d df-so 3bitr4g ) BCFZABGZDHZEHZBIZUDUEFZUEUDBIZJZEAKDAKZL
      ACGZUDUECIZUGUEUDCIZJZEAKDAKZLABMACMUBUCUKUJUOABCNUBUIUNDEAAUBUFULUGUGUHU
      MUDUEBCOUBUGPUEUDBCOQRSDEABTDEACTUA $.
      $( [16-Mar-1997] $)
  $}

  $( Equality theorem for the strict ordering predicate. $)
  soeq2 $p |- ( A = B -> ( R Or A <-> R Or B ) ) $=
    ( wceq wor wss wa wi wb soss anim12i eqss dfbi2 3imtr4i bicomd ) ABDZBCEZAC
    EZABFZBAFZGQRHZRQHZGPQRISUATUBABCJBACJKABLQRMNO $.
    $( [16-Mar-1997] $)

  $( A strict order relation is irreflexive. $)
  sonr $p |- ( ( R Or A /\ B e. A ) -> -. B R B ) $=
    ( wpo wcel wbr wn wor poirr sopo sylan ) ACDBAEBBCFGACHABCIACJK $.
    $( [24-Nov-1995] $)

  $( A strict order relation is a transitive relation. $)
  sotr $p |- ( ( R Or A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             ( ( B R C /\ C R D ) -> B R D ) ) $=
    ( wpo wcel w3a wbr wa wi wor potr sopo sylan ) AEFBAGCAGDAGHBCEICDEIJBDEIKA
    ELABCDEMAENO $.
    $( [21-Jan-1996] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y R $.
    $( A strict order relation is linear (satisfies trichotomy). $)
    solin $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B R C \/ B = C \/ C R B ) ) $=
      ( vx vy wcel wa wor wbr wceq w3o cv wi breq1 eqeq1 breq2 3orbi123d 
      imbi2d eqeq2 wpo wral df-so ra42 adantl sylbi com12 vtocl2ga impcom ) BAG
      CAGHADIZBCDJZBCKZCBDJZLZUJEMZFMZDJZUOUPKZUPUODJZLZNUJBUPDJZBUPKZUPBDJZLZN
      UJUNNEFBCAAUOBKZUTVDUJVEUQVAURVBUSVCUOBUPDOUOBUPPUOBUPDQRSUPCKZVDUNUJVFVA
      UKVBULVCUMUPCBDQUPCBTUPCBDORSUJUOAGUPAGHZUTUJADUAZUTFAUBEAUBZHVGUTNZEFADU
      CVIVJVHUTEFAAUDUEUFUGUHUI $.
      $( [21-Jan-1996] $)
  $}

  $( A strict order relation has no 2-cycle loops. $)
  so2nr $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              -. ( B R C /\ C R B ) ) $=
    ( wpo wcel wa wbr wn wor po2nr sopo sylan ) ADEBAFCAFGBCDHCBDHGIADJABCDKADL
    M $.
    $( [21-Jan-1996] $)

  $( A strict order relation has no 3-cycle loops. $)
  so3nr $p |- ( ( R Or A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             -. ( B R C /\ C R D /\ D R B ) ) $=
    ( wpo wcel w3a wbr wn wor po3nr sopo sylan ) AEFBAGCAGDAGHBCEICDEIDBEIHJAEK
    ABCDELAEMN $.
    $( [21-Jan-1996] $)

  $( A strict order relation satisfies strict trichotomy. $)
  sotric $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B R C <-> -. ( B = C \/ C R B ) ) ) $=
    ( wor wcel wa wceq wbr wo wn wi breq2 notbid sonr syl5cbi adantrr so2nr 
    imnan sylibr con2d jaod w3o solin 3orass df-or bitri sylib impbid con2bid 
    ) ADEZBAFZCAFZGGZBCHZCBDIZJZBCDIZUNUQURKZUNUOUSUPUKULUOUSLUMUOBBDIZKUSUKULG
    UOUTURBCBDMNABDOPQUNURUPUNURUPGKURUPKLABCDRURUPSTUAUBUNURUOUPUCZUSUQLZABCDU
    DVAURUQJVBURUOUPUEURUQUFUGUHUIUJ $.
    $( [19-Feb-1996] $)

  $( Trichotomy law for strict order relation.  (The proof was shortened by
     Andrew Salmon, 25-Jul-2011.) $)
  sotrieq $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B = C <-> -. ( B R C \/ C R B ) ) ) $=
    ( wor wcel wa wbr wo wceq wn breq2 breq1 orbi12d notbid sonr adantrr pm1.2 
    nsyl syl5cbi con2d w3o wi solin 3orass or12 df-or 3bitri sylib impbid 
    con2bid ) ADEZBAFZCAFZGGZBCDHZCBDHZIZBCJZUOURUSKZUOUSURUSBBDHZVAIZKURKUOUSV
    BURUSVAUPVAUQBCBDLBCBDMNOUOVAVBULUMVAKUNABDPQVARSTUAUOUPUSUQUBZUTURUCZABCDU
    DVCUPUSUQIIUSURIVDUPUSUQUEUPUSUQUFUSURUGUHUIUJUK $.
    $( [25-Jul-2011] $) $( [9-Apr-1996] $)

  $( Trichotomy law for strict order relation. $)
  sotrieq2 $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B = C <-> ( -. B R C /\ -. C R B ) ) ) $=
    ( wor wcel wa wceq wbr wo wn sotrieq ioran syl6bb ) ADEBAFCAFGGBCHBCDIZCBDI
    ZJKOKPKGABCDLOPMN $.
    $( [5-May-1999] $)

  ${
    $d x y z R $.  $d x y z A $.
    itlso.1 $e |- ( x e. A -> -. x R x ) $.
    itlso.2 $e |- ( ( x e. A /\ y e. A /\ z e. A ) ->
                  ( ( x R y /\ y R z ) -> x R z ) ) $.
    itlso.3 $e |- ( ( x e. A /\ y e. A ) -> ( x R y \/ x = y \/ y R x ) ) $.
    $( A irreflexive, transitive, linear relation is a strict ordering. $)
    itlso $p |- R Or A $=
      ( wor wpo cv wbr wceq w3o wral df-so wn wa wi wcel w3a 3ad2ant1 jca 
      rgen3 df-po mpbir rgen2a mpbir2an ) DEIDEJZAKZBKZELZUJUKMUKUJELNZBDOADOAB
      DEPUIUJUJELQZULUKCKZELRUJUOELSZRZCDOBDOADOUQABCDDDUJDTZUKDTZUODTZUAUNUPUR
      USUNUTFUBGUCUDABCDEUEUFUMABDHUGUH $.
      $( [21-Jan-1996] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.
    so.1 $e |- ( ( x e. A /\ y e. A /\ z e. A ) ->
                  ( ( x R y <-> -. ( x = y \/ y R x ) ) /\
                 ( ( x R y /\ y R z ) -> x R z ) ) ) $.
    $( Deduce strict ordering from its properties. $)
    so $p |- R Or A $=
      ( cv wcel wbr wn wa wceq wo eqid orci wb wi eleq1 anbi2d eqeq2 breq1 
      orbi12d breq2 notbid bibi12d imbi12d w3a 3anbi3d imbi1d simpld chvarv 
      3anidm23 con2bid mpbii anidms simprd w3o biimprd 3orass df-or bitri 
      sylibr itlso ) ABCDEAGZDHZVDVDEIZJZVEVEKZVDVDLZVFMZVGVIVFVDNOVEBGZDHZKZVD
      VKLZVKVDEIZMZVDVKEIZJZPZQVHVJVGPZQBAVKVDLZVMVHVSVTWAVLVEVEVKVDDRSWAVPVJVR
      VGWAVNVIVOVFVKVDVDTVKVDVDEUAUBWAVQVFVKVDVDEUCUDUEUFVMVQVPVEVLVQVPJPZVEVLC
      GZDHZUGZWBQVEVLVLUGZWBQCBWCVKLZWEWFWBWGWDVLVEVLWCVKDRUHUIWEWBVQVKWCEIKVDW
      CEIQZFUJUKULUMZUKUNUOWEWBWHFUPVMVRVPQZVQVNVOUQZVMVPVRWIURWKVQVPMWJVQVNVOU
      SVQVPUTVAVBVC $.
      $( [29-Jan-1996] $)
  $}

  ${
    $d x y R $.
    $( Any relation is a strict ordering of the empty set.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    so0 $p |- R Or (/) $=
      ( vx vy c0 wor wpo cv wbr wceq w3o wral df-so po0 ral0 mpbir2an ) DAEDAFB
      GZCGZAHPQIQPAHJCDKZBDKBCDALAMRBNO $.
      $( [25-Jul-2011] $) $( [16-Mar-1997] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Founded and well-ordering relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constant symbols. $)
  $c Fr $. $( Founded predicate symbol (read: 'founded'). $)
  $c We $. $( Well-ordering predicate symbol (read: 'well orders') $)

  $( Extend wff notation to include the founded predicate.  Read:  ' ` R ` is a
     founded relation on ` A ` .' $)
  wfr $a wff R Fr A $.

  $( Extend wff notation to include the well-ordering predicate.
     Read:  ' ` R ` well-orders ` A ` .' $)
  wwe $a wff R We A $.

  ${
    $d x y z R $.  $d x y z A $.
    $( Define the founded relation predicate.  For alternate definitions, see
       ~ dffr2 and ~ dffr3 . $)
    df-fr $a |- ( R Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                E. y e. x A. z e. x -. z R y ) ) $.
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    $( Property of founded relation (one direction of definition). $)
    fri $p |- ( ( ( B e. C /\ R Fr A ) /\ ( B C_ A /\ B =/= (/) ) ) ->
                E. x e. B A. y e. B -. y R x ) $=
      ( vz wcel wfr wss c0 wne wa cv wbr wn wral wrex wi wal wceq sseq1 neeq1 
      anbi12d raleq rexeqbi1dv imbi12d cla4gv df-fr syl5ib imp31 ) DEHZCFIZDCJZ
      DKLZMZBNANFOPZBDQZADRZULGNZCJZUTKLZMZUQBUTQZAUTRZSZGTUPUSSZUMVFVGGDEUTDUA
      ZVCUPVEUSVHVAUNVBUOUTDCUBUTDKUCUDVDURAUTDUQBUTDUEUFUGUHGABCFUIUJUK $.
      $( [3-Apr-2007] $) $( [18-Mar-1997] $)
  $}

  ${
    $d x y w v R $.  $d y z w v R $.  $d x w v A $.
    $( Alternate definition of founded relation.  Similar to Definition 6.21 of
       [TakeutiZaring] p. 30.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dffr2 $p |- ( R Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                E. y e. x ( x i^i { z | z R y } ) = (/) ) ) $=
      ( vv vw wfr cv wss c0 wne wa wbr wn wral wrex wi wal cab cin wceq df-fr 
      wcel breq2 brab1 syl5bbr notbid ralbidv disj syl5bb cbvrexv imbi2i albii 
      bitr4i ) DEHAIZDJUPKLMZFIZGIZENZOZFUPPZGUPQZRZASUQUPCIBIZENCTZUAKUBZBUPQZ
      RZASAGFDEUCVIVDAVHVCUQVGVBBGUPVEUSUBZURVFUDZOZFUPPVBVGVJVLVAFUPVJVKUTVJUR
      VEENUTVKVEUSUREUEFCVEEUFUGUHUIFUPVFUJUKULUMUNUO $.
      $( [27-Aug-2011] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y z R $.  $d z A $.  $d x z B $.
    frc.1 $e |- B e. _V $.
    $( Property of founded relation (one direction of definition using class
       variables). $)
    frc $p |- ( ( R Fr A /\ B C_ A /\ B =/= (/) ) ->
                E. x e. B ( B i^i { y | y R x } ) = (/) ) $=
      ( vz wfr wss c0 wne cv wbr cab cin wceq wrex wa wi wal dffr2 sseq1 neeq1 
      anbi12d ineq1 eqeq1d rexeqbi1dv imbi12d cla4v sylbi 3impib ) CEHZDCIZDJKZ
      DBLALEMBNZOZJPZADQZULGLZCIZUSJKZRZUSUOOZJPZAUSQZSZGTUMUNRZURSZGABCEUAVFVH
      GDFUSDPZVBVGVEURVIUTUMVAUNUSDCUBUSDJUCUDVDUQAUSDVIVCUPJUSDUOUEUFUGUHUIUJU
      K $.
      $( [1-Feb-2007] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    $( Subset theorem for the founded predicate.  Exercise 1 of [TakeutiZaring]
       p. 31.  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    frss $p |- ( A C_ B -> ( R Fr B -> R Fr A ) ) $=
      ( vx vz vy wss cv c0 wne wa wbr wn wral wrex wi wal wfr sstr2 com12 
      anim1d imim1d alimdv df-fr 3imtr4g ) ABGZDHZBGZUGIJZKZEHFHCLMEUGNFUGOZPZD
      QUGAGZUIKZUKPZDQBCRACRUFULUODUFUNUJUKUFUMUHUIUMUFUHUGABSTUAUBUCDFEBCUDDFE
      ACUDUE $.
      $( [25-Jul-2011] $) $( [3-Apr-1994] $)
  $}

  ${
    $d x y z R $.  $d x y z S $.  $d x y z A $.
    $( Equality theorem for the founded predicate. $)
    freq1 $p |- ( R = S -> ( R Fr A <-> S Fr A ) ) $=
      ( vx vz vy wceq cv wss c0 wne wa wbr wn wral wrex wi wal wfr breq notbid 
      rexralbidv imbi2d albidv df-fr 3bitr4g ) BCGZDHZAIUHJKLZEHZFHZBMZNZEUHOFU
      HPZQZDRUIUJUKCMZNZEUHOFUHPZQZDRABSACSUGUOUSDUGUNURUIUGUMUQFEUHUHUGULUPUJU
      KBCTUAUBUCUDDFEABUEDFEACUEUF $.
      $( [9-Mar-1997] $)
  $}

  $( Equality theorem for the founded predicate. $)
  freq2 $p |- ( A = B -> ( R Fr A <-> R Fr B ) ) $=
    ( wceq wfr wss wa wi wb frss anim12i eqss dfbi2 3imtr4i bicomd ) ABDZBCEZAC
    EZABFZBAFZGQRHZRQHZGPQRISUATUBABCJBACJKABLQRMNO $.
    $( [3-Apr-1994] $)

  ${
    $d y z R $.  $d x y z $.  $d y z A $.
    $( A founded relation is irreflexive.  Special case of Proposition 6.23 of
       [TakeutiZaring] p. 30. $)
    frirr $p |- ( ( R Fr A /\ x e. A ) -> -. x R x ) $=
      ( vz vy wfr cv wcel wbr wn csn cab cin c0 wceq wrex wne visset snnz wss 
      wi snex frc 3exp snss syl5ib mpii elsn breq2 abbidv ineq2d eqeq1d wa 
      breq1 elab biimpri snid jctil elin sylibr n0i syl con2i syl6bi sylbi 
      r19.23aiv syl6 imp ) BCFZAGZBHZVJVJCIZJZVIVKVJKZDGZEGZCIZDLZMZNOZEVNPZVMV
      IVKVNNQZWAVJARZSVIVNBTZWBWAUAVKVIWDWBWAEDBVNCVJUBUCUDVJBWCUEUFUGVTVMEVNVP
      VNHVPVJOZVTVMUAEVJUHWEVTVNVOVJCIZDLZMZNOZVMWEVSWHNWEVRWGVNWEVQWFDVPVJVOCU
      IUJUKULVLWIVLVJWHHZWIJVLVJVNHZVJWGHZUMWJVLWLWKWLVLWFVLDVJWCVOVJVJCUNUOUPV
      JWCUQURVJVNWGUSUTWHVJVAVBVCVDVEVFVGVH $.
      $( [2-Jan-1994] $)
  $}

  ${
    $d z w R $.  $d z w x $.  $d z w y $.  $d z w A $.
    $( A founded relation has no 2-cycle loops.  Special case of Proposition
       6.23 of [TakeutiZaring] p. 30. $)
    fr2nr $p |- ( ( R Fr A /\ ( x e. A /\ y e. A ) ) ->
                -. ( x R y /\ y R x ) ) $=
      ( vz vw wfr cv wcel wbr wa wn cpr wss cab cin c0 wceq wrex wne visset 
      prnz zfpair2 frc mp3an3 wo breq2 abbidv ineq2d neeq1d brab1 prid2 inelcm 
      mpan sylbi syl5cbir prid1 jaao elpr syl5ib com12 necon2bd r19.23aiv syl 
      prss sylan2b ancom2s ) CDGZBHZCIZAHZCIZVKVIDJZVIVKDJZKZLZVHVIVKMZCNZVPVJV
      LKVHVRKVQEHZFHZDJZEOZPZQRZFVQSZVPVHVRVQQTWEVIVKBUAZUBFECVQDBAUCUDUEWDVPFV
      QVTVQIZVOWCQVOWGWCQTZVOVTVIRZVTVKRZUFWHWGVMWIWHVNWJWIWHVQVSVIDJZEOZPZQTZV
      MWIWCWMQWIWBWLVQWIWAWKEVTVIVSDUGUHUIUJVMVKWLIZWNAEVIDUKVKVQIWOWNVIVKAUAZU
      LVKVQWLUMUNUOUPWJWHVQVSVKDJZEOZPZQTZVNWJWCWSQWJWBWRVQWJWAWQEVTVKVSDUGUHUI
      UJVNVIWRIZWTBEVKDUKVIVQIXAWTVIVKWFUQVIVQWRUMUNUOUPURVTVIVKFUAUSUTVAVBVCVD
      VIVKCWFWPVEVFVG $.
      $( [30-May-1994] $)
  $}

  ${
    $d x y z R $.
    $( Any relation is founded on the empty set. $)
    fr0 $p |- R Fr (/) $=
      ( vx vz vy c0 wfr cv wss wne wa wbr cab cin wceq wrex wi dffr2 wn ss0 
      nne sylibr imnan mpbi pm2.21i mpgbir ) EAFBGZEHZUFEIZJZUFCGDGAKCLMENDUFOZ
      PBBDCEAQUIUJUGUHRZPUIRUGUFENUKUFSUFETUAUGUHUBUCUDUE $.
      $( [17-Sep-1993] $)
  $}

  ${
    $d x A $.
    $( Irreflexivitiy of the epsilon relation: a class founded by epsilon is
       not a member of itself. $)
    efrirr $p |- ( _E Fr A -> -. A e. A ) $=
      ( vx cep wfr wcel wn cv wi wceq freq2 eleq1 eleq2 bitrd notbid imbi12d 
      wbr frirr ex epel notbii syl6ib pm2.01d vtoclg com12 ) ACDZAAEZUFUEUFFZBG
      ZCDZUHUHEZFZHUEUGHBAAUHAIZUIUEUKUGUHACJULUJUFULUJAUHEUFUHAUHKUHAALMNOUIUJ
      UIUJUHUHCPZFZUKUIUJUNBUHCQRUMUJBBSTUAUBUCUDUB $.
      $( [18-Apr-1994] $)
  $}

  $( A set founded by epsilon contains no 2-cycle loops. $)
  efrn2lp $p |- ( ( _E Fr A /\ ( x e. A /\ y e. A ) ) ->
                -. ( x e. y /\ y e. x ) ) $=
    ( cep wfr cv wcel wa wbr wn fr2nr epel anbi12i notbii sylib ) CDEAFZCGBFZCG
    HHPQDIZQPDIZHZJPQGZQPGZHZJABCDKTUCRUASUBABLBALMNO $.
    $( [19-Apr-1994] $)

  $( Similar to Theorem 7.2 of [TakeutiZaring] p. 35, of except that the Axiom
     of Regularity is not required due to antecedent ` _E Fr A ` . $)
  tz7.2 $p |- ( ( Tr A /\ _E Fr A /\ B e. A ) -> ( B C_ A /\ B =/= A ) ) $=
    ( wtr cep wfr wcel wss wne wa trss wceq wn eleq1 notbid efrirr syl5cbir 
    necon2ad anim12ii 3impia ) ACZADEZBAFZBAGZBAHZITUBUCUAUDABJUAUBBABAKZUBLAAF
    ZLUAUEUBUFBAAMNAOPQRS $.
    $( [28-Apr-2007] $) $( [4-May-1994] $)

  ${
    $d x y z $.  $d x z A $.
    $( An alternate way of saying that the epsilon relation is founded.  (The
       proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    dfepfr $p |- ( _E Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                  E. y e. x ( x i^i y ) = (/) ) ) $=
      ( vz cep wfr cv wss c0 wne wa wbr cab cin wceq wrex wi wal dffr2 wcel wb 
      abeq1 epel mpgbir ineq2i eqeq1i rexbii imbi2i albii bitri ) CEFAGZCHUKIJK
      ZUKDGZBGZELZDMZNZIOZBUKPZQZARULUKUNNZIOZBUKPZQZARABDCESUTVDAUSVCULURVBBUK
      UQVAIUPUNUKUPUNOUOUMUNTUADUODUNUBDBUCUDUEUFUGUHUIUJ $.
      $( [25-Jul-2011] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y B $.
    epfrc.1 $e |- B e. _V $.
    $( A subset of an epsilon-founded class has a minimal element.  (A distinct
       variable restriction was removed by David Abernethy, 22-Feb-2011.) $)
    epfrc $p |- ( ( _E Fr A /\ B C_ A /\ B =/= (/) ) ->
                  E. x e. B ( B i^i x ) = (/) ) $=
      ( vy cep wfr wss c0 wne w3a cv wbr cab cin wceq wrex frc wcel epel abbii 
      abid2 eqtr2i ineq2i eqeq1i rexbii sylibr ) BFGCBHCIJKCELZALZFMZENZOZIPZAC
      QCUIOZIPZACQAEBCFDRUOUMACUNULIUIUKCUKUHUISZENUIUJUPEEATUAEUIUBUCUDUEUFUG 
      $.
      $( [22-Feb-2011] $) $( [17-Feb-2004] $)
  $}

  $( Define the well-ordering predicate.  For an alternate definition, see
     ~ dfwe2 . $)
  df-we $a |- ( R We A <-> ( R Fr A /\ R Or A ) ) $.

  $( Subset theorem for the well-ordering predicate.  Exercise 4 of
     [TakeutiZaring] p. 31. $)
  wess $p |- ( A C_ B -> ( R We B -> R We A ) ) $=
    ( wss wfr wor wa wwe frss soss anim12d df-we 3imtr4g ) ABDZBCEZBCFZGACEZACF
    ZGBCHACHNOQPRABCIABCJKBCLACLM $.
    $( [19-Apr-1994] $)

  $( Equality theorem for the well-ordering predicate. $)
  weeq1 $p |- ( R = S -> ( R We A <-> S We A ) ) $=
    ( wceq wfr wor wa wwe freq1 soeq1 anbi12d df-we 3bitr4g ) BCDZABEZABFZGACEZ
    ACFZGABHACHNOQPRABCIABCJKABLACLM $.
    $( [9-Mar-1997] $)

  $( Equality theorem for the well-ordering predicate. $)
  weeq2 $p |- ( A = B -> ( R We A <-> R We B ) ) $=
    ( wceq wfr wor wa wwe freq2 soeq2 anbi12d df-we 3bitr4g ) ABDZACEZACFZGBCEZ
    BCFZGACHBCHNOQPRABCIABCJKACLBCLM $.
    $( [3-Apr-1994] $)

  $( A well-ordering is founded. $)
  wefr $p |- ( R We A -> R Fr A ) $=
    ( wwe wfr wor df-we simplbi ) ABCABDABEABFG $.
    $( [22-Apr-1994] $)

  $( A well-ordering is a strict ordering. $)
  weso $p |- ( R We A -> R Or A ) $=
    ( wwe wfr wor df-we simprbi ) ABCABDABEABFG $.
    $( [16-Mar-1997] $)

  $( The elements of an epsilon well-ordering are comparable. $)
  wecmpep $p |- ( ( _E We A /\ ( x e. A /\ y e. A ) ) ->
                 ( x e. y \/ x = y \/ y e. x ) ) $=
    ( cep wor cv wcel wa wceq w3o wwe wbr solin epel biid 3orbi123i sylib weso 
    sylan ) CDEZAFZCGBFZCGHZUAUBGZUAUBIZUBUAGZJZCDKTUCHUAUBDLZUEUBUADLZJUGCUAUB
    DMUHUDUEUEUIUFABNUEOBANPQCDRS $.
    $( [17-May-1994] $)

  $( An epsilon well-ordering is a transitive relation. $)
  wetrep $p |- ( ( _E We A /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
             ( ( x e. y /\ y e. z ) -> x e. z ) ) $=
    ( cep wwe cv wcel w3a wa wbr wor wi sotr weso sylan epel anbi12i 3imtr3g ) 
    DEFZAGZDHBGZDHCGZDHIZJUAUBEKZUBUCEKZJZUAUCEKZUAUBHZUBUCHZJUAUCHDELUDUGUHMTD
    UAUBUCENDEOPUEUIUFUJABQBCQRACQS $.
    $( [22-Apr-1994] $)

  ${
    $d x y z R $.  $d y z A $.  $d x y z B $.
    $( A non-empty (possibly proper) subclass of a class well-ordered by ` _E `
       has a minimal element.  Special case of Proposition 6.26 of
       [TakeutiZaring] p. 31. $)
    wefrc $p |- ( ( _E We A /\ B C_ A /\ B =/= (/) ) ->
               E. x e. B ( B i^i x ) = (/) ) $=
      ( vy vz cep wwe wss c0 wne cv cin wceq wrex wi wess wcel wex wa ineq2 
      eqeq1d rcla4ev ex adantl inss1 wfr visset inex2 epfrc wefr syl3an1 3exp 
      mpi elin anbi1i anass bitri rexbii2 syl6ib adantr wral w3a wetrep exp3a 
      df-3an 3anrot bitr3i sylan2b exp44 imp com34 imp3a syl5ib imp4a com23 
      r19.21adv dfss3 syl6ibr dfss in32 eqeq2i biimpi biimprd syl6 reximdvai 
      syld pm2.61dne 19.23adv n0 syl6com 3imp ) BFGZCBHZCIJZCAKZLZIMZACNZWMWLCF
      GZWNWROCBFPWSDKZCQZDRWRWNWSXAWRDWSXAWRWSXASZWRCWTLZIXAXCIMZWROWSXAXDWRWQX
      DAWTCWOWTMWPXCIWOWTCTUAUBUCUDXBXCIJZWOWTQZXCWOLZIMZSZACNZWRWSXEXJOXAWSXEX
      HAXCNZXJWSXCCHZXEXKOCWTUEWSXLXEXKCFUFXLXEXKWSACXCWTCDUGUHUICFUJUKULUMXHXI
      AXCCWOXCQZXHSWOCQZXFSZXHSXNXISXMXOXHWOCWTUNUOXNXFXHUPUQURUSUTXBXIWQACXBXN
      XFXHWQXBXNXFXHWQOZXBXOWPWTHZXPXBXOEKZWTQZEWPVAXQXBXOXSEWPXBXRWPQZXOXSXBXT
      XNXFXSXBXRCQZXRWOQZSXNXFXSOZOZXTXBYAYBYDXBYAXNYBYCWSXAYAXNYBYCOZOOWSXAYAX
      NYEWSYAXNXAVBZYEXAYASXNSZWSYFSYBXFXSEADCVCVDYGXAYAXNVBYFXAYAXNVEXAYAXNVFV
      GVHVIVJVKVLXRCWOUNVMVNVOVPEWPWTVQVRXQWQXHXQWPXGIXQWPXGMZXQWPWPWTLZMYHWPWT
      VSYIXGWPCWOWTVTWAUQWBUAWCWDVDVNWEWFWGUCWHDCWIVMWJWK $.
      $( [18-Mar-2007] $) $( [17-Feb-2004] $)
  $}

  $( Any relation is a well-ordering of the empty set. $)
  we0 $p |- R We (/) $=
    ( c0 wwe wfr wor df-we fr0 so0 mpbir2an ) BACBADBAEBAFAGAHI $.
    $( [16-Mar-1997] $)

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    wereu.1 $e |- B e. _V $.
    $( A subset of a well-ordered set has a unique minimal element. $)
    wereu $p |- ( ( R We A /\ B C_ A /\ B =/= (/) ) ->
                E! x e. B A. y e. B -. y R x ) $=
      ( vz cv wbr wn wral wreu wrex wa wceq wi wwe wss c0 wne w3a breq2 notbid 
      ralbidv reu4 wfr cvv wcel fri mpanl1 3impb wefr syl3an1 wo w3o wor solin 
      weso sylan df-3or or23 df-or 3bitri sylib ioran syl5ibr wess impcom 
      breq1 rcla4v im2anan9 ancomsd imp syl5 exp4b pm2.43d 3adant3 r19.21aivv 
      sylanbrc ) BHZAHZEIZJZBDKZADLWDADMZWDVTGHZEIZJZBDKZNZWAWFOZPZGDKADKCEQZDC
      RZDSTZUAZWDWIAGDWKWCWHBDWKWBWGWAWFVTEUBUCUDUECEUFZWNWOWEWMWQWNWOWEDUGUHWQ
      WNWONWEFABCDUGEUIUJUKCEULUMWPWLAGDDWMWNWADUHZWFDUHZNZWLPWOWMWNNZWTWLXAWTW
      TWJWKXAWTNWAWFEIZJZWFWAEIZJZNZWKWTWJNDEQZWTXFWKPXAXGWTNZXBXDUNZJZWKXFXHXB
      WKXDUOZXJWKPZDEUPWTXKXGDWAWFEUQDEURUSXKXBWKUNXDUNXIWKUNXLXBWKXDUTXBWKXDVA
      XIWKVBVCVDXBXDVEVFWNWMXGDCEVGVHUSWTWJXFWTWIWDXFWRWIXCWSWDXEWHXCBWADVTWAOW
      GXBVTWAWFEVIUCVJWCXEBWFDVTWFOWBXDVTWFWAEVIUCVJVKVLVMVNVOVPVQVRVS $.
      $( [5-Apr-2007] $) $( [18-Mar-1997] $)

    $( The unique minimal element of a subset of a well-ordered set. $)
    wereucl $p |- ( ( R We A /\ B C_ A /\ B =/= (/) ) ->
                U. { x e. B | A. y e. B -. y R x } e. B ) $=
      ( wwe wss c0 wne w3a cv wbr wn wral wreu crab cuni wcel wereu reucl syl 
      ) CEGDCHDIJKBLALEMNBDOZADPUCADQRDSABCDEFTUCADUAUB $.
      $( [23-Sep-2007] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Ordinals
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c Ord $. $( Ordinal predicate $)
  $c On $. $( The class of ordinal numbers $)
  $c Lim $. $( Limit ordinal predicate $)
  $c suc $. $( Successor function (read:  'successor of') $)

  $( Extend the definition of a wff to include the ordinal predicate. $)
  word $a wff Ord A $.

  $( Extend the definition of a class to include the class of all ordinal
     numbers.  (The 0 in the name prevents creating a file called con.html,
     which causes problems in Windows.) $)
  con0 $a class On $.

  $( Extend the definition of a wff to include the limit ordinal predicate. $)
  wlim $a wff Lim A $.

  $( Extend class notation to include the successor function. $)
  csuc $a class suc A $.

  $( Define the ordinal predicate, which is true for a class that is transitive
     and is well-ordered by the epsilon relation.  Variant of definition of
     [BellMachover] p. 468. $)
  df-ord $a |- ( Ord A <-> ( Tr A /\ _E We A ) ) $.

  $( Define the class of all ordinal numbers.  Definition 7.11 of
     [TakeutiZaring] p. 38. $)
  df-on $a |- On = { x | Ord x } $.

  $( Define the limit ordinal predicate, which is true for a non-empty ordinal
     that is not a successor (i.e. that is the union of itself).  Our
     definition combines the definition of Lim of [BellMachover] p. 471 and
     Exercise 1 of [TakeutiZaring] p. 42.  See ~ dflim2 , ~ dflim3 , and dflim4
     for alternate definitions. $)
  df-lim $a |- ( Lim A <-> ( Ord A /\ A =/= (/) /\ A = U. A ) ) $.

  $( Define the successor of a class.  When applied to an ordinal number, the
     successor means the same thing as "plus 1" (see ~ oa1suc ).  Definition
     7.22 of [TakeutiZaring] p. 41, who use "+ 1" to denote this function.  Our
     definition is a generalization to classes.  Although it is not
     conventional to use it with proper classes, it has no affect on a proper
     class ( ~ sucprc ), so that the successor of any ordinal class is still an
     ordinal class ( ~ ordsuc ), simplifying certain proofs.  Some authors
     denote the successor operation with a prime (apostrophe-like) symbol, such
     as Definition 6 of [Suppes] p. 134 and the definition of successor in
     [Mendelson] p. 246 (who uses the symbol "Suc" as a predicate to mean "is a
     successor ordinal").  The definition of successor of [Enderton] p. 68
     denotes the operation with a plus-sign superscript. $)
  df-suc $a |- suc A = ( A u. { A } ) $.

  $( Equality theorem for the ordinal predicate. $)
  ordeq $p |- ( A = B -> ( Ord A <-> Ord B ) ) $=
    ( wceq wtr cep wwe wa word treq weeq2 anbi12d df-ord 3bitr4g ) ABCZADZAEFZG
    BDZBEFZGAHBHNOQPRABIABEJKALBLM $.
    $( [17-Sep-1993] $)

  ${
    $d x A $.
    $( An ordinal number is an ordinal set. $)
    elong $p |- ( A e. B -> ( A e. On <-> Ord A ) ) $=
      ( vx cv word con0 ordeq df-on elab2g ) CDZEAECAFBJAGCHI $.
      $( [5-Jun-1994] $)
  $}

  ${
    elon.1 $e |- A e. _V $.
    $( An ordinal number is an ordinal set. $)
    elon $p |- ( A e. On <-> Ord A ) $=
      ( cvv wcel con0 word wb elong ax-mp ) ACDAEDAFGBACHI $.
      $( [5-Jun-1994] $)
  $}

  $( An ordinal number has the ordinal property. $)
  eloni $p |- ( A e. On -> Ord A ) $=
    ( con0 wcel word elong ibi ) ABCADABEF $.
    $( [5-Jun-1994] $)

  $( An ordinal number is an ordinal set. $)
  elon2 $p |- ( A e. On <-> ( Ord A /\ A e. _V ) ) $=
    ( con0 wcel word cvv wa eloni elisset jca elong biimparc impbii ) ABCZADZAE
    CZFMNOAGABHIOMNAEJKL $.
    $( [8-Feb-2004] $)

  $( Equality theorem for the limit predicate.  (The proof was shortened by
     Andrew Salmon, 25-Jul-2011.) $)
  limeq $p |- ( A = B -> ( Lim A <-> Lim B ) ) $=
    ( wceq word c0 wne cuni w3a wlim ordeq neeq1 id unieq eqeq12d 3anbi123d 
    df-lim 3bitr4g ) ABCZADZAEFZAAGZCZHBDZBEFZBBGZCZHAIBIRSUCTUDUBUFABJABEKRABU
    AUERLABMNOAPBPQ $.
    $( [25-Jul-2011] $) $( [22-Apr-1994] $)

  $( Epsilon well orders every ordinal.  Proposition 7.4 of [TakeutiZaring]
     p. 36. $)
  ordwe $p |- ( Ord A -> _E We A ) $=
    ( word wtr cep wwe df-ord simprbi ) ABACADEAFG $.
    $( [3-Apr-1994] $)

  $( An ordinal class is transitive. $)
  ordtr $p |- ( Ord A -> Tr A ) $=
    ( word wtr cep wwe df-ord simplbi ) ABACADEAFG $.
    $( [3-Apr-1994] $)

  $( Epsilon is well-founded on an ordinal class. $)
  ordfr $p |- ( Ord A -> _E Fr A ) $=
    ( word cep wwe wfr ordwe wefr syl ) ABACDACEAFACGH $.
    $( [22-Apr-1994] $)

  $( An element of an ordinal class is a subset of it. $)
  ordelss $p |- ( ( Ord A /\ B e. A ) -> B C_ A ) $=
    ( wtr wcel wss word trss imp ordtr sylan ) ACZBADZBAEZAFKLMABGHAIJ $.
    $( [30-May-1994] $)

  $( A transitive subclass of an ordinal class is ordinal. $)
  trssord $p |- ( ( Tr A /\ A C_ B /\ Ord B ) -> Ord A ) $=
    ( wtr wss word wa cep wwe w3a wess imp ordwe sylan2 anim2i 3anass df-ord 
    3imtr4i ) ACZABDZBEZFZFRAGHZFRSTIAEUAUBRSBGHZUBTSUCUBABGJKBLMNRSTOAPQ $.
    $( [29-May-1994] $)

  $( Epsilon irreflexivity of ordinals: no ordinal class is a member of
     itself.  Theorem 2.2(i) of [BellMachover] p. 469, generalized to classes.
     We prove this without invoking the Axiom of Regularity. $)
  ordirr $p |- ( Ord A -> -. A e. A ) $=
    ( word cep wfr wcel wn ordfr efrirr syl ) ABACDAAEFAGAHI $.
    $( [2-Jan-1994] $)

  $( A member of an ordinal class is not equal to it. $)
  nordeq $p |- ( ( Ord A /\ B e. A ) -> A =/= B ) $=
    ( word wcel wne wceq wn eleq1 notbid ordirr syl5cbi necon2ad imp ) ACZBADZA
    BENOABABFZAADZGOGNPQOABAHIAJKLM $.
    $( [3-Jun-2007] $) $( [25-May-1998] $)

  $( An ordinal class cannot an element of one of its members.  Variant of
     first part of Theorem 2.2(vii) of [BellMachover] p. 469. $)
  ordn2lp $p |- ( Ord A -> -. ( A e. B /\ B e. A ) ) $=
    ( word wcel wa ordirr wtr wi ordtr trel syl mtod ) ACZABDBADEZAADZAFMAGNOHA
    IAABJKL $.
    $( [3-Apr-1994] $)

  ${
    $d x B $.
    $( A subclass (possibly proper) of an ordinal class has a minimal element.
       Proposition 7.5 of [TakeutiZaring] p. 36.  (Some distinct variable
       restrictions were removed by David Abernethy, 16-Mar-2011.) $)
    tz7.5 $p |- ( ( Ord A /\ B C_ A /\ B =/= (/) ) ->
               E. x e. B ( B i^i x ) = (/) ) $=
      ( cep wwe wss c0 wne cv cin wceq wrex word wefrc ordwe syl3an1 ) BDECBFCG
      HCAIJGKACLBMABCNBOP $.
      $( [22-Mar-2011] $) $( [18-Feb-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( An element of an ordinal class is ordinal.  Proposition 7.6 of
       [TakeutiZaring] p. 36. $)
    ordelord $p |- ( ( Ord A /\ B e. A ) -> Ord B ) $=
      ( vx vz vy word wcel cv wa wi wceq eleq1 anbi2d ordeq imbi12d wtr cep 
      wwe df-ord wal simpll w3a ordtr trel3 syl 3anrot 3anass bitr3i syl5ibr 
      exp3a imp31 trel com23 adantrl simplr wetrep ordwe sylan syl13anc ex 
      pm2.43d 19.21aivv dftr2 sylibr wss trss wess syl5com syld imp sylanbrc 
      vtoclg anabsi7 ) AFZBAGZBFZVNCHZAGZIZVQFZJVNVOIZVPJCBAVQBKZVSWAVTVPWBVRVO
      VNVQBALMVQBNOVTVQPZVQQRZVSVQSVSDHZEHZGZWFVQGZIZWEVQGZJZETDTWCVSWKDEVSWIWJ
      VSWIWKVSWIIVNWEAGZWFAGZVRWKVNVRWIUAVNVRWIWLVNVRWIWLVNWGWHVRUBZWLVRWIIZVNA
      PZWNWLJAUCZAWEWFVQUDUEWNVRWGWHUBWOVRWGWHUFVRWGWHUGUHUIUJUKVSWHWMWGVNVRWHW
      MVNWHVRWMVNWHVRWMVNWPWHVRIWMJWQAWFVQULUEUJUMUKUNVNVRWIUOAQRZWLWMVRUBWKVND
      ECAUPAUQZURUSUTVAVBDEVQVCVDVNVRWDVNVRVQAVEZWDVNWPVRWTJWQAVQVFUEWTWRWDVNVQ
      AQVGWSVHVIVJVKVLVM $.
      $( [23-Apr-1994] $)
  $}

  ${
    $d x y $.
    $( The class of all ordinal numbers is transitive. $)
    tron $p |- Tr On $=
      ( vx vy con0 wtr cv wss dftr3 wcel word ordelord visset elon sylanb ex 
      syl6ibr ssrdv mprgbir ) CDAEZCFACACGRCHZBRCSBEZRHZTIZTCHSUAUBRIUAUBSRTJRA
      KLMNTBKLOPQ $.
      $( [4-May-2009] $)
  $}

  $( An element of an ordinal class is an ordinal number. $)
  ordelon $p |- ( ( Ord A /\ B e. A ) -> B e. On ) $=
    ( word wcel wa con0 ordelord wb elong adantl mpbird ) ACZBADZEBFDZBCZABGMNO
    HLBAIJK $.
    $( [26-Oct-2003] $)

  $( An element of an ordinal number is an ordinal number.  Theorem 2.2(iii) of
     [BellMachover] p. 469. $)
  onelon $p |- ( ( A e. On /\ B e. A ) -> B e. On ) $=
    ( word wcel con0 ordelon eloni sylan ) ACBADBEDAEDABFAGH $.
    $( [26-Oct-2003] $)

  ${
    $d x y A $.  $d x y B $.
    $( Proposition 7.7 of [TakeutiZaring] p. 37. $)
    tz7.7 $p |- ( ( Ord A /\ Tr B ) ->
                ( B e. A <-> ( B C_ A /\ B =/= A ) ) ) $=
      ( vx vy word wtr wa wcel wss wne wi cep wfr ordtr ordfr tz7.2 3exp sylc 
      adantr cdif c0 cv cin wceq wrex trss eldifi syl5 difin0ss com12 syl6 syl 
      ad2antrr imp32 wn eleq1 biimpcd eldifn nsyli imp adantll adantl trel 
      exp3a com23 ex adantld w3o wwe wecmpep ordwe ssel2 anim12i syl2an 
      adantlr ecase23d exp44 com34 imp31 ssrdv adantrr eqssd ad2antrl eqeltrrd 
      exp32 r19.23adv difss tz7.5 mp3an2 exp4b adantrd pm2.43i pssdifn0 syl7 
      exp4a pm2.43d imp3a impbid ) AEZBFZGZBAHZBAIZBAJZGZWSXBXEKZWTWSAFZALMZXFA
      NZAOXGXHXBXEABPQRSXAXCXDXBXAXCXDXBKXAXCXCXDXBXAXCABTZUAJZXBXEXAXCXKXBKZKZ
      XAWSXMWTXAXCWSXLXAXCWSXKXBXAXCGZXJCUBZUCUAUDZCXJUEZXBWSXKGXNXPXBCXJXNXOXJ
      HZXPXBXNXRXPGGZXOBAXSXOBXNXRXPXOBIZWSXRXPXTKZKZWTXCWSXGYBXIXGXRXOAIZYAXGX
      OAHZYCXRAXOUFXOABUGZUHXPYCXTABXOUIUJUKULUMUNXNXRBXOIXPXNXRGDBXOXAXCXRDUBZ
      BHZYFXOHZKXAXCYGXRYHXAXCYGXRYHXAXCYGGZXRGZGYHYFXOUDZXOYFHZYJYKUOZXAYGXRYM
      XCYGXRYMYGYKXOBHZXRYKYGYNYFXOBUPUQXOABURZUSUTVAVBWTYJYLUOZWSWTYIXRYPWTYGX
      RYPKZXCWTYGYQWTYGGYLYNXRWTYGYLYNKWTYLYGYNWTYLYGYNBXOYFVCVDVEUTYOUSVFVGUNV
      AWSYJYHYKYLVHZWTALVIYFAHZYDGYRWSYJDCAVJAVKYIYSXRYDBAYFVLYEVMVNVOVPVQVRVSV
      TWAWBXRYDXNXPYEWCWDWEWFWSXJAIXKXQABWGCAXJWHWIUHWJVEWKWLBAWMWNWOWPWQWR $.
      $( [28-May-2007] $) $( [5-May-1994] $)
  $}

  $( Corollary 7.8 of [TakeutiZaring] p. 37. $)
  ordelssne $p |- ( ( Ord A /\ Ord B ) ->
              ( A e. B <-> ( A C_ B /\ A =/= B ) ) ) $=
    ( word wcel wss wne wa wb wtr tz7.7 ordtr sylan2 ancoms ) BCZACZABDABEABFGH
    ZNAIPOBAJAKLM $.
    $( [1-Jun-2007] $) $( [25-Nov-1995] $)

  $( Corollary 7.8 of [TakeutiZaring] p. 37. $)
  ordelpss $p |- ( ( Ord A /\ Ord B ) -> ( A e. B <-> A C. B ) ) $=
    ( word wa wcel wss wne wpss ordelssne df-pss syl6bbr ) ACBCDABEABFABGDABHAB
    IABJK $.
    $( [17-Jun-1998] $)

  $( For ordinal classes, subclass is equivalent to membership or equality.
     (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
  ordsseleq $p |- ( ( Ord A /\ Ord B ) ->
                  ( A C_ B <-> ( A e. B \/ A = B ) ) ) $=
    ( word wa wcel wceq wo wpss wss ordelpss orbi1d sspss syl6rbbr ) ACBCDZABEZ
    ABFZGABHZPGABINOQPABJKABLM $.
    $( [25-Jul-2011] $) $( [25-Nov-1995] $)

  $( The intersection of two ordinal classes is ordinal.  Proposition 7.9 of
     [TakeutiZaring] p. 37. $)
  ordin $p |- ( ( Ord A /\ Ord B ) -> Ord ( A i^i B ) ) $=
    ( word cin wtr trin ordtr syl2an wss inss2 trssord mp3an2 sylancom ) ACZBCZ
    ABDZEZPCZAEBEQNOABFAGBGHQPBIORABJPBKLM $.
    $( [9-May-1994] $)

  ${
    $d x y A $.  $d x y B $.
    $( The intersection of two ordinal numbers is an ordinal number. $)
    onin $p |- ( ( A e. On /\ B e. On ) -> ( A i^i B ) e. On ) $=
      ( con0 wcel wa cin word ordin eloni syl2an cvv wb simpl inex1g elong 
      3syl mpbird ) ACDZBCDZEZABFZCDZUAGZAGBGUCRSABHAIBIJTRUAKDUBUCLRSMABCNUAKO
      PQ $.
      $( [7-Apr-1995] $)
  $}

  $( A trichotomy law for ordinals.  Proposition 7.10 of [TakeutiZaring]
     p. 38.  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
  ordtri3or $p |- ( ( Ord A /\ Ord B ) -> ( A e. B \/ A = B \/ B e. A ) ) $=
    ( word wa wcel wceq w3o wpss wss wo cin wn ordin ordirr syl elin incom 
    eleq1i anbi2i bitri notbii ianor sylib inss1 ordsseleq mpbii sylan anabss1 
    ord df-ss syl6ibr anabss4 orim12d mpd sspsstri ordelpss biidd wb ancoms 
    3orbi123d mpbird ) ACZBCZDZABEZABFZBAEZGABHZVFBAHZGZVDABIZBAIZJZVJVDABKZAEZ
    LZBAKZBEZLZJZVMVDVNVNEZLZVTVDVNCZWBABMZVNNOWBVOVRDZLVTWAWEWAVOVNBEZDWEVNABP
    WFVRVOVNVQBABQRSTUAVOVRUBTUCVDVPVKVSVLVDVPVNAFZVKVDVOWGVBVCVOWGJZWCVBWHVDWC
    VBDVNAIWHABUDVNAUEUFWDUGUHUIABUJUKVDVSVQBFZVLVDVRWIVBVCVRWIJZVQCZVCWJVCVBDW
    KVCDVQBIWJBAUDVQBUEUFBAMUGULUIBAUJUKUMUNABUOUCVDVEVHVFVFVGVIABUPVDVFUQVCVBV
    GVIURBAUPUSUTVA $.
    $( [25-Jul-2011] $) $( [10-May-1994] $)

  $( A trichotomy law for ordinals.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  ordtri1 $p |- ( ( Ord A /\ Ord B ) -> ( A C_ B <-> -. B e. A ) ) $=
    ( word wa wss wcel wceq wo wn ordsseleq wi ordn2lp imnan sylibr eleq2 
    notbid ordirr syl5cbir jaao w3o ordtri3or df-3or sylib orcomd ord impbid 
    bitrd ) ACZBCZDZABEABFZABGZHZBAFZIZABJUJUMUOUHUKUOUIULUHUKUNDIUKUOKABLUKUNM
    NULUOBBFZIUIULUNUPABBOPBQRSUJUNUMUJUMUNUJUKULUNTUMUNHABUAUKULUNUBUCUDUEUFUG
    $.
    $( [25-Jul-2011] $) $( [25-Mar-1995] $)

  $( A trichotomy law for ordinal numbers. $)
  ontri1 $p |- ( ( A e. On /\ B e. On ) -> ( A C_ B <-> -. B e. A ) ) $=
    ( word wss wcel wn wb con0 ordtri1 eloni syl2an ) ACBCABDBAEFGAHEBHEABIAJBJ
    K $.
    $( [6-Nov-2003] $)

  $( A trichotomy law for ordinals. $)
  ordtri2 $p |- ( ( Ord A /\ Ord B ) ->
               ( A e. B <-> -. ( A = B \/ B e. A ) ) ) $=
    ( word wa wceq wcel wo wn wb wss ordsseleq eqcom orbi2i orcom bitri syl6bb 
    ordtri1 bitr3d ancoms con2bid ) ACZBCZDABEZBAFZGZABFZUBUAUEUFHZIUBUADZBAJZU
    EUGUHUIUDBAEZGZUEBAKUKUDUCGUEUJUCUDBALMUDUCNOPBAQRST $.
    $( [25-Nov-1995] $)

  $( A trichotomy law for ordinals.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  ordtri3 $p |- ( ( Ord A /\ Ord B ) ->
               ( A = B <-> -. ( A e. B \/ B e. A ) ) ) $=
    ( word wa wceq wcel wo wn eleq2 notbid ordirr syl5bi syl5bir anim12d com12 
    pm4.56 syl6ib w3o ordtri3or df-3or sylib or23 ord impbid ) ACZBCZDZABEZABFZ
    BAFZGZHZUGUHUIHZUJHZDZULUHUGUOUHUEUMUFUNUHAAFZHUMUEUHUPUIABAIJAKLUHUNBBFZHU
    FUHUJUQABBIJBKMNOUIUJPQUGUKUHUGUIUHGUJGZUKUHGUGUIUHUJRURABSUIUHUJTUAUIUHUJU
    BUAUCUD $.
    $( [25-Jul-2011] $) $( [18-Oct-1995] $)

  $( A trichotomy law for ordinals.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  ordtri4 $p |- ( ( Ord A /\ Ord B ) ->
               ( A = B <-> ( A C_ B /\ -. A e. B ) ) ) $=
    ( word wa wss wcel wn wceq wb ordtri1 ancoms anbi2d eqss syl5bb ) ACZBCZDZA
    BEZBAEZDRABFGZDABHQSTRPOSTIBAJKLABMN $.
    $( [25-Jul-2011] $) $( [1-Nov-2003] $)

  $( An ordinal class and its singleton are disjoint. $)
  orddisj $p |- ( Ord A -> ( A i^i { A } ) = (/) ) $=
    ( word wcel wn csn cin c0 wceq ordirr disjsn sylibr ) ABAACDAAEFGHAIAAJK $.
    $( [19-May-1998] $)

  ${
    $d x y z $.
    $( The ordinal class is founded.  This lemma is needed for ~ ordon in order
       to eliminate the need for the Axiom of Regularity. $)
    onfr $p |- _E Fr On $=
      ( vx vz vy con0 cep wfr cv wss c0 wne wa cin wceq wrex wi dfepfr wcel 
      wex ineq2 eqeq1d rcla4ev expcom a1d word ssel visset elon syl6ib wtr 
      ordfr ordtr inss2 inex1 epfrc mp3an2 ex ax-17 hbre1 inss1 sseli trss 
      syl5 sseqin2 inass syl5req sylbi biimprcd sylan9 imp anim12i exp32 
      pm2.43b com23 ra4e syl8 r19.23ad syl11anc syl6 com3r pm2.61ine 19.23adv 
      n0 syl5ib mpgbir ) DEFAGZDHZWEIJZKWEBGZLZIMZBWENZOAABDPWFWGWKWFCGZWEQZCRW
      KWGWFWMWKCWFWMWKOZOWEWLLZIWOIMZWNWFWMWPWKWJWPBWLWEWHWLMWIWOIWHWLWESTUAUBU
      CWFWMWOIJZWKWFWMWLUDZWQWKOZWFWMWLDQWRWEDWLUEWLCUFUGUHWRWLEFZWLUIZWSWLUJWL
      UKWTWQWOWHLZIMZBWONZXAWKWTWQXDWTWOWLHWQXDWEWLULZBWLWOWEWLAUFUMUNUOUPXAXCW
      KBWOXABUQWJBWEURXAWHWOQZXCWHWEQZWJKZWKXAXCXFXHXAXCXFXHOXAXCKZXFXHXFXIXFXH
      XFXGXIXFKWJWOWEWHWEWLUSUTXIXFWJXAXFWHWLHZXCWJXAWHWLQXJXFWLWHVAWOWLWHXEUTV
      BXJWJXCXJWIXBIXJWLWHLZWHMZWIXBMWHWLVCXLWEXKLWIXBXKWHWESWEWLWHVDVEVFTVGVHV
      IVJVKVLUPVMWJBWEVNVOVPVHVQVRVSVTWACWEWBWCVIWD $.
      $( [17-May-1994] $)
  $}

  $( Relationship between membership and proper subset of an ordinal number. $)
  onelpss $p |- ( ( A e. On /\ B e. On ) ->
               ( A e. B <-> ( A C_ B /\ A =/= B ) ) ) $=
    ( word wcel wss wne wa wb con0 ordelssne eloni syl2an ) ACBCABDABEABFGHAIDB
    IDABJAKBKL $.
    $( [2-Jun-2007] $) $( [15-Sep-1995] $)

  $( Relationship between subset and membership of an ordinal number. $)
  onsseleq $p |- ( ( A e. On /\ B e. On ) ->
                 ( A C_ B <-> ( A e. B \/ A = B ) ) ) $=
    ( word wss wcel wceq wo wb con0 ordsseleq eloni syl2an ) ACBCABDABEABFGHAIE
    BIEABJAKBKL $.
    $( [15-Sep-1995] $)

  $( An element of an ordinal number is a subset of the number.  (The proof was
     shortened by Andrew Salmon, 25-Jul-2011.) $)
  onelss $p |- ( A e. On -> ( B e. A -> B C_ A ) ) $=
    ( con0 wcel word wss wi eloni ordelss ex syl ) ACDAEZBADZBAFZGAHLMNABIJK $.
    $( [25-Jul-2011] $) $( [5-Jun-1994] $)

  $( Transitive law for ordinal classes. $)
  ordtr1 $p |- ( Ord C -> ( ( A e. B /\ B e. C ) -> A e. C ) ) $=
    ( word wtr wcel wa wi ordtr trel syl ) CDCEABFBCFGACFHCICABJK $.
    $( [12-Dec-2004] $)

  $( Transitive law for ordinal classes.  (The proof was shortened by Andrew
     Salmon, 25-Jul-2011.) $)
  ordtr2 $p |- ( ( Ord A /\ Ord C ) -> ( ( A C_ B /\ B e. C ) -> A e. C ) ) $=
    ( word wa wss wcel wpss wi ordelord ex ancld anc2li wb ordelpss ancoms 
    sspsstr expcom syl6bi com23 imp32 com12 syl9 imp3a adantl sylibrd ) ADZCDZE
    ABFZBCGZEZACHZACGUHUKULIUGUHUIUJULUHUJUHUJBDZEZEZUIULUHUJUNUHUJUMUHUJUMCBJK
    LMUOUIULUHUJUMUIULIZUHUMUJUPUHUMUJUPIUHUMEUJBCHZUPUMUHUJUQNBCOPUIUQULABCQRS
    KTUAUBUCUDUEACOUF $.
    $( [25-Jul-2011] $) $( [12-Dec-2004] $)

  $( Transitive law for ordinal numbers.  Theorem 7M(b) of [Enderton]
     p. 192. $)
  ontr1 $p |- ( C e. On -> ( ( A e. B /\ B e. C ) -> A e. C ) ) $=
    ( con0 wcel word wa wi eloni ordtr1 syl ) CDECFABEBCEGACEHCIABCJK $.
    $( [11-Aug-1994] $)

  $( Transitive law for ordinal numbers.  Exercise 3 of [TakeutiZaring]
     p. 40. $)
  ontr2 $p |- ( ( A e. On /\ C e. On ) ->
              ( ( A C_ B /\ B e. C ) -> A e. C ) ) $=
    ( word wss wcel wa wi con0 ordtr2 eloni syl2an ) ADCDABEBCFGACFHAIFCIFABCJA
    KCKL $.
    $( [6-Nov-2003] $)

  ${
    $d x y A $.  $d x y B $.
    $( The union of an ordinal stays the same if a subset equal to one of its
       elements is removed. $)
    ordunidif $p |- ( ( Ord A /\ B e. A ) -> U. ( A \ B ) = U. A ) $=
      ( vx vy word wcel wa cv wss cdif wrex wral cuni wceq wi con0 ordelon 
      onelss syl wn eldif simplbi2 eloni ordirr syl5 adantl mpd jctild adantr 
      sseq2 rcla4ev syl6 biimpri ssid jctir ex pm2.61d r19.21aiva unidif ) AEZB
      AFZGZCHZDHZIZDABJZKZCALVFMAMNVBVGCAVBVCAFZGZVCBFZVGVIVJBVFFZVCBIZGZVGVBVJ
      VMOVHVBVJVLVKVBBPFZVJVLOABQZBVCRSVBVNVKVOVAVNVKOUTVABBFTZVKVNVKVAVPBABUAU
      BVNBEVPBUCBUDSUEUFUGUHUIVEVLDBVFVDBVCUJUKULVHVJTZVGOVBVHVQVCVFFZVCVCIZGZV
      GVHVQVTVHVQGZVRVSVRWAVCABUAUMVCUNUOUPVEVSDVCVFVDVCVCUJUKULUFUQURCDABUSS 
      $.
      $( [10-Dec-2004] $)
  $}

  ${
    $d x ps $.  $d x A $.
    onintss.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( If a property is true for an ordinal number, then the minimum ordinal
       number for which it is true is smaller or equal.  Theorem Schema 61 of
       [Suppes] p. 228. $)
    onintss $p |- ( A e. On -> ( ps -> |^| { x e. On | ph } C_ A ) ) $=
      ( con0 wcel crab cint wss wa elrab intss1 sylbir ex ) DFGZBACFHZIDJZPBKDQ
      GRABCDFELDQMNO $.
      $( [3-Oct-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A way to show that an ordinal number equals the minimum of a collection
       of ordinal numbers: it must be in the collection, and it must not be
       larger than any member of the collection. $)
    oneqmini $p |- ( B C_ On -> ( ( A e. B /\ A. x e. A -. x e. B )
                    -> A = |^| B ) ) $=
      ( con0 wss wcel cv wn wral wa cint wceq wi wb ssel anim12d ontri1 syl6 
      expdimp pm5.74d con2b syl6bb ralbidv2 ssint syl5bb biimprd expimpd 
      intss1 a1i adantrd jcad eqss syl6ibr ) CDEZBCFZAGZCFZHZABIZJZBCKZEZVABEZJ
      BVALUNUTVBVCUNUOUSVBUNUOJZVBUSVDBUPEZACIUSVBVDVEURACBVDUQVEMUQUPBFZHZMVFU
      RMVDUQVEVGUNUOUQVEVGNZUNUOUQJBDFZUPDFZJVHUNUOVIUQVJCDBOCDUPOPBUPQRSTUQVFU
      AUBUCABCUDUEUFUGUNUOVCUSUOVCMUNBCUHUIUJUKBVAULUM $.
      $( [14-Nov-2003] $)
  $}

  $( The empty set is an ordinal class. $)
  ord0 $p |- Ord (/) $=
    ( c0 word wtr cep wwe df-ord tr0 we0 mpbir2an ) ABACADEAFGDHI $.
    $( [11-May-1994] $)

  $( The empty set is an ordinal number.  Corollary 7N(b) of [Enderton]
     p. 193. $)
  0elon $p |- (/) e. On $=
    ( c0 con0 wcel word ord0 0ex elon mpbir ) ABCADEAFGH $.
    $( [17-Sep-1993] $)

  $( A non-empty ordinal contains the empty set. $)
  ord0eln0 $p |- ( Ord A -> ( (/) e. A <-> A =/= (/) ) ) $=
    ( word c0 wcel wne ne0i wceq wn wo ord0 wa noel ordtri2 con2bid mpbiri 
    mpan2 ord df-ne syl5ib impbid2 ) ABZCADZACEZACFUAACGZHUBUCUAUDUBUACBZUDUBIZ
    JUAUEKZUFACDZHALUGUHUFACMNOPQACRST $.
    $( [5-Apr-2007] $) $( [25-Nov-1995] $)

  $( An ordinal number contains zero iff it is nonzero. $)
  on0eln0 $p |- ( A e. On -> ( (/) e. A <-> A =/= (/) ) ) $=
    ( con0 wcel word c0 wne wb eloni ord0eln0 syl ) ABCADEACAEFGAHAIJ $.
    $( [30-Apr-2007] $) $( [6-Dec-2004] $)

  $( An alternate definition of a limit ordinal. $)
  dflim2 $p |- ( Lim A <-> ( Ord A /\ (/) e. A /\ A = U. A ) ) $=
    ( wlim word c0 wne cuni wceq w3a wcel df-lim wa ord0eln0 anbi1d pm5.32i 
    3anass 3bitr4i bitr4i ) ABACZADEZAAFGZHZRDAIZTHZAJRUBTKZKRSTKZKUCUARUDUERUB
    STALMNRUBTORSTOPQ $.
    $( [4-Nov-2004] $)

  $( The intersection of the class of ordinal numbers is the empty set. $)
  inton $p |- |^| On = (/) $=
    ( c0 con0 wcel cint wceq 0elon int0el ax-mp ) ABCBDAEFBGH $.
    $( [20-Oct-2003] $)

  $( The empty set is not a limit ordinal.  (The proof was shortened by Andrew
     Salmon, 25-Jul-2011.) $)
  nlim0 $p |- -. Lim (/) $=
    ( c0 wlim word wcel cuni wceq w3a noel simp2 mto dflim2 mtbir ) ABACZAADZAA
    EFZGZPNAHMNOIJAKL $.
    $( [25-Jul-2011] $) $( [24-Mar-1995] $)

  $( A limit ordinal is ordinal. $)
  limord $p |- ( Lim A -> Ord A ) $=
    ( wlim word c0 wne cuni wceq df-lim simp1bi ) ABACADEAAFGAHI $.
    $( [4-May-1995] $)

  $( A limit ordinal is its own supremum (union). $)
  limuni $p |- ( Lim A -> A = U. A ) $=
    ( wlim word c0 wne cuni wceq df-lim simp3bi ) ABACADEAAFGAHI $.
    $( [4-May-1995] $)

  $( The union of a limit ordinal is a limit ordinal. $)
  limuni2 $p |- ( Lim A -> Lim U. A ) $=
    ( wlim cuni wceq wb limuni limeq syl ibi ) ABZACZBZJAKDJLEAFAKGHI $.
    $( [19-Sep-2006] $)

  $( A limit ordinal contains the empty set. $)
  0ellim $p |- ( Lim A -> (/) e. A ) $=
    ( wlim c0 wcel wne wceq nlim0 limeq mtbiri necon2ai word wb limord 
    ord0eln0 syl mpbird ) ABZCADZACEZQACACFQCBGACHIJQAKRSLAMANOP $.
    $( [15-May-1994] $)

  $( A limit ordinal class that is also a set is an ordinal number. $)
  limelon $p |- ( ( A e. B /\ Lim A ) -> A e. On ) $=
    ( wcel wlim con0 word elong limord syl5bir imp ) ABCZADZAECZKMAFLABGAHIJ $.
    $( [26-Apr-2004] $)

  $( The class of all ordinal numbers in not empty. $)
  onn0 $p |- On =/= (/) $=
    ( c0 con0 wcel wne 0elon ne0i ax-mp ) ABCBADEBAFG $.
    $( [5-Apr-2007] $) $( [17-Sep-1995] $)

  $( Equality of successors.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  suceq $p |- ( A = B -> suc A = suc B ) $=
    ( wceq csn cun csuc id sneq uneq12d df-suc 3eqtr4g ) ABCZAADZEBBDZEAFBFLABM
    NLGABHIAJBJK $.
    $( [25-Jul-2011] $) $( [30-Aug-1993] $)

  $( Membership in a successor.  This one-way implication does not require that
     either ` A ` or ` B ` be sets. $)
  elsuci $p |- ( A e. suc B -> ( A e. B \/ A = B ) ) $=
    ( csuc wcel csn wo wceq cun df-suc eleq2i elun bitri elsni orim2i sylbi ) 
    ABCZDZABDZABEZDZFZRABGZFQABSHZDUAPUCABIJABSKLTUBRABMNO $.
    $( [6-Jun-1994] $)

  $( Membership in a successor.  Exercise 5 of [TakeutiZaring] p. 17. $)
  elsucg $p |- ( A e. C -> ( A e. suc B <-> ( A e. B \/ A = B ) ) ) $=
    ( wcel csn wo wceq csuc elsncg orbi2d cun df-suc eleq2i elun bitri syl5bb 
    ) ACDZABDZABEZDZFZRABGZFABHZDZQTUBRABCIJUDABSKZDUAUCUEABLMABSNOP $.
    $( [15-Sep-1995] $)

  $( Variant of membership in a successor, requiring that ` B ` rather than
     ` A ` be a set. $)
  elsuc2g $p |- ( B e. C -> ( A e. suc B <-> ( A e. B \/ A = B ) ) ) $=
    ( wcel csn cun wceq wo csuc elsnc2g orbi2d elun syl5bb df-suc eleq2i ) BCDZ
    ABBEZFZDZABDZABGZHZABIZDPTAQDZHUBSPUDUATABCJKABQLMUCRABNOM $.
    $( [28-Oct-2003] $)

  ${
    elsuc.1 $e |- A e. _V $.
    $( Membership in a successor.  Exercise 5 of [TakeutiZaring] p. 17. $)
    elsuc $p |- ( A e. suc B <-> ( A e. B \/ A = B ) ) $=
      ( cvv wcel csuc wceq wo wb elsucg ax-mp ) ADEABFEABEABGHICABDJK $.
      $( [15-Sep-2003] $)

    $( Membership in a successor. $)
    elsuc2 $p |- ( B e. suc A <-> ( B e. A \/ B = A ) ) $=
      ( cvv wcel csuc wceq wo wb elsuc2g ax-mp ) ADEBAFEBAEBAGHICBADJK $.
      $( [15-Sep-2003] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbsuc.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for successor. $)
    hbsuc $p |- ( y e. suc A -> A. x y e. suc A ) $=
      ( cv wcel wceq wo wal csuc hbeleq hbor visset elsuc albii 3imtr4i ) BEZCF
      ZQCGZHZTAIQCJFZUAAIRSADABCDKLQCBMNZUATAUBOP $.
      $( [15-Sep-2003] $)
  $}

  $( Membership in a successor. $)
  elelsuc $p |- ( A e. B -> A e. suc B ) $=
    ( wcel csuc wceq wo orc elsucg mpbird ) ABCZABDCJABEZFJKGABBHI $.
    $( [20-Jun-1998] $)

  ${
    $d x y A $.  $d x B $.
    $( Membership of a successor in another class. $)
    sucel $p |- ( suc A e. B <->
                E. x e. B A. y ( y e. x <-> ( y e. A \/ y = A ) ) ) $=
      ( csuc wcel cv wceq wrex wo wb wal risset dfcleq visset elsuc bibi2i 
      albii bitri rexbii ) CEZDFAGZUAHZADIBGZUBFZUDCFUDCHJZKZBLZADIAUADMUCUHADU
      CUEUDUAFZKZBLUHBUBUANUJUGBUIUFUEUDCBOPQRSTS $.
      $( [29-Jun-2004] $)
  $}

  $( The successor of the empty set. $)
  suc0 $p |- suc (/) = { (/) } $=
    ( c0 csuc csn cun df-suc uncom un0 3eqtri ) ABAACZDIADIAEAIFIGH $.
    $( [1-Feb-2005] $)

  $( A proper class is its own successor. $)
  sucprc $p |- ( -. A e. _V -> suc A = A ) $=
    ( cvv wcel wn csuc c0 cun csn wceq snprc uneq2 sylbi df-suc syl5eq un0 
    syl6eq ) ABCDZAEZAFGZAQAAHZGZSRQTFIUASIAJTFAKLAMNAOP $.
    $( [3-Apr-1995] $)

  ${
    unisuc.1 $e |- A e. _V $.
    $( A transitive class is equal to the union of its successor.  Combines
       Theorem 4E of [Enderton] p. 72 and Exercise 6 of [Enderton] p. 73. $)
    unisuc $p |- ( Tr A <-> U. suc A = A ) $=
      ( cuni wss cun wceq wtr csuc ssequn1 df-tr csn df-suc unieqi uniun unisn 
      uneq2i 3eqtri eqeq1i 3bitr4i ) ACZADTAEZAFAGAHZCZAFTAIAJUCUAAUCAAKZEZCTUD
      CZEUAUBUEALMAUDNUFATABOPQRS $.
      $( [22-Sep-2004] $) $( [30-Aug-1993] $)
  $}

  $( A class is included in its own successor.  Part of Proposition 7.23 of
     [TakeutiZaring] p. 41 (generalized to arbitrary classes). $)
  sssucid $p |- A C_ suc A $=
    ( csn cun csuc ssun1 df-suc sseqtr4i ) AAABZCADAHEAFG $.
    $( [31-May-1994] $)

  $( Part of Proposition 7.23 of [TakeutiZaring] p. 41 (generalized).  (The
     proof was shortened by Scott Fenton, 20-Feb-2012.) $)
  sucidg $p |- ( A e. B -> A e. suc A ) $=
    ( wcel csuc wceq wo eqid olci elsucg mpbiri ) ABCAADCAACZAAEZFLKAGHAABIJ $.
    $( [20-Feb-2012] $) $( [25-Mar-1995] $)

  ${
    sucid.1 $e |- A e. _V $.
    $( A set belongs to its successor.  (The proof was shortened by Scott
       Fenton, 20-Feb-2012.) $)
    sucid $p |- A e. suc A $=
      ( cvv wcel csuc sucidg ax-mp ) ACDAAEDBACFG $.
      $( [20-Feb-2012] $) $( [22-Jun-1994] $)

    $( A set belongs to its successor.  (The proof was shortened by Alan Sare,
       18-Feb-2012.)  This proof was automatically generated from ~ sucidVD
       using translate_without_overwriting.cmd and minimizing. $)
    sucidOLD $p |- A e. suc A $=
      ( csn cun csuc wcel snid elun2 ax-mp df-suc eleqtrri ) AAACZDZAEALFAMFABG
      ALAHIAJK $.
      $( [18-Feb-2012] $) $( [22-Jun-1994] $)
  $}

  $( No successor is empty. $)
  nsuceq0 $p |- suc A =/= (/) $=
    ( csuc c0 wne wceq wn cvv wcel noel eleq2 sucidg syl5cbi mtoi sucprc 
    eqeq1d 0ex eleq1 mpbiri syl6bi con3d pm2.43i pm2.61i df-ne mpbir ) ABZCDUEC
    EZFZAGHZUGUHUFACHZAIUFAUEHUIUHUECAJAGKLMUHFZUGUJUFUHUJUFACEZUHUJUEACANOUKUH
    CGHPACGQRSTUAUBUECUCUD $.
    $( [16-Jan-2007] $) $( [3-Apr-1995] $)

  ${
    eqelsuc.1 $e |- A e. _V $.
    $( A set belongs to the successor of an equal set. $)
    eqelsuc $p |- ( A = B -> A e. suc B ) $=
      ( wceq csuc suceq sucid syl5eleq ) ABDAEBEAABFACGH $.
      $( [18-Aug-1994] $)
  $}

  ${
    $d z y A $.
    $( The successor of a transtive class is transitive.  (Contributed by Alan
       Sare, 11-Apr-2009.) $)
    suctr $p |- ( Tr A -> Tr suc A ) $=
      ( vz vy wtr cv wcel csuc wa wi wal wceq wo simpr visset elsuc sylib 
      eleq2 simpl syl5cbi elelsuc syl6 trel exp3a adantrd syl8 jao mpdi 
      19.21aivv dftr2 sylibr ) ADZBEZCEZFZUMAGZFZHZULUOFZIZCJBJUODUKUSBCUKUQUMA
      FZUMAKZLZURUQUPVBUNUPMUMACNOPUKUQVAURIZVBURIZUQVAULAFZURVAUNVEUQUMAULQUNU
      PRSULATZUAUKUQUTURIVCVDIUKUQUTVEURUKUNUTVEIUPUKUNUTVEAULUMUBUCUDVFUEUTURV
      AUFUAUGUGUHBCUOUIUJ $.
      $( [11-Apr-2009] $)
  $}

  $( A set whose successor belongs to a transitive class also belongs.  (The
     proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
  trsuc $p |- ( ( Tr A /\ suc B e. A ) -> B e. A ) $=
    ( wtr csuc wcel wa trel cvv wss sssucid ssexg mpan sucidg syl ancri syl5 
    imp ) ACZBDZAEZBAEZRBSEZTFUATABSGTUBTBHEZUBBSITUCBJBSAKLBHMNOPQ $.
    $( [12-Aug-2011] $) $( [5-Sep-2003] $)

  ${
    $d x y A $.
    $( The successor of a transitive set is transitive.  (Contributed by Scott
       Fenton, 21-Feb-2011.) $)
    trsuc2 $p |- ( Tr A -> Tr suc A ) $=
      ( vx vy wtr cv wcel csn wo wa wi wal csuc wceq trel orc syl6 a1i jaod 
      eleq2 biimpac orim2i syl5 elsn orbi2i syl6ibr anbi2i syl5ib andi 
      19.21aivv cun wb df-suc treq ax-mp dftr2 elun imbi12i albii bitri sylibr 
      ) ADZBEZCEZFZVCAFZVCAGZFZHZIZVBAFZVBVFFZHZJZCKZBKZALZDZVAVMBCVAVDVEIZVDVG
      IZHZVLVIVAVRVDVCAMZIZHZVLVTVAWCVJVBAMZHZVLVAVRVJHWEWCVAVRWEVJVAVRVJWEAVBV
      CNVJWDOZPVJWEJVAWFQRWBVJVRWAVDVJVCAVBSTUAUBVKWDVJBAUCUDUEVSWBVRVGWAVDCAUC
      UFUDUGVDVEVGUHUGUIVQAVFUJZDZVOVPWGMVQWHUKAULVPWGUMUNWHVDVCWGFZIZVBWGFZJZC
      KZBKVOBCWGUOWMVNBWLVMCWJVIWKVLWIVHVDVCAVFUPUFVBAVFUPUQURURUSUSUT $.
      $( [21-Feb-2011] $)
  $}

  $( A member of the successor of a transitive class is a subclass of it. $)
  trsucss $p |- ( Tr A -> ( B e. suc A -> B C_ A ) ) $=
    ( wtr wcel wceq wo wss csuc trss wi eqimss a1i jaod elsuci syl5 ) ACZBADZBA
    EZFBAGZBAHDPQSRABIRSJPBAKLMBANO $.
    $( [4-Oct-2003] $)

  $( A subset of an ordinal belongs to its successor. $)
  ordsssuc $p |- ( ( A e. On /\ Ord B ) -> ( A C_ B <-> A e. suc B ) ) $=
    ( con0 wcel word wa wss wceq wo csuc wb ordsseleq eloni sylan elsucg 
    adantr bitr4d ) ACDZBEZFABGZABDABHIZABJDZAESTUAKRABLAMNRUBUAKSABCOPQ $.
    $( [28-Nov-2003] $)

  $( A subset of an ordinal number belongs to its successor. $)
  onsssuc $p |- ( ( A e. On /\ B e. On ) -> ( A C_ B <-> A e. suc B ) ) $=
    ( con0 wcel word wss csuc wb ordsssuc eloni sylan2 ) ACDBEABFABGDHBCDABIBJK
    $.
    $( [15-Sep-1995] $)

  $( An ordinal subset of an ordinal number belongs to its successor.  (The
     proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
  ordsssuc2 $p |- ( ( Ord A /\ B e. On ) -> ( A C_ B <-> A e. suc B ) ) $=
    ( cvv wcel word con0 wa wss csuc wb wi elong biimprd anim1d onsssuc syl6 
    wn annim ssexg ex elisset a1d pm5.21ni sylbi expcom adantld pm2.61i ) ACDZA
    EZBFDZGZABHZABIZDZJZKUHUKAFDZUJGUOUHUIUPUJUHUPUIACLMNABOPUHQZUJUOUIUJUQUOUJ
    UQGUJUHKZQUOUJUHRULURUNULUJUHABFSTUNUHUJAUMUAUBUCUDUEUFUG $.
    $( [12-Aug-2011] $) $( [1-Feb-2005] $)

  ${
    $d x A $.  $d x B $.
    $( When its successor is subtracted from a class of ordinal numbers, an
       ordinal number is less than the minimum of the resulting subclass. $)
    onmindif $p |- ( ( A C_ On /\ B e. On ) -> B e. |^| ( A \ suc B ) ) $=
      ( vx con0 wss wcel wa csuc cdif cint cv wral wn wi wb ontri1 onsssuc 
      bitr3d con1bid ssel2 sylan biimpd exp31 com23 imp4b eldif syl5ib 
      r19.21aiv elintg adantl mpbird ) ADEZBDFZGZBABHZIZJFZBCKZFZCUPLZUNUSCUPUN
      URAFZURUOFZMZGUSURUPFULUMVAVCUSULVAUMVCUSNZULVAUMVDULVAGZUMGVCUSURDFZUMVC
      USOVEVFUMGZUSVBVGURBEUSMVBURBPURBQRSADURTUAUBUCUDUEURAUOUFUGUHUMUQUTOULCB
      UPDUIUJUK $.
      $( [1-Dec-2003] $)
  $}

  $( There is no set between an ordinal class and its successor.  Generalized
     Proposition 7.25 of [TakeutiZaring] p. 41. $)
  ordnbtwn $p |- ( Ord A -> -. ( A e. B /\ B e. suc A ) ) $=
    ( word wcel wa wo csuc wn ioran ordn2lp ordirr sylanbrc wceq elsuci anim2i 
    andi sylib eleq2 biimpac orim2i syl nsyl ) ACZABDZBADZEZAADZFZUDBAGDZEZUHHU
    FHUGHUCUFUGIABJAKLUJUFUDBAMZEZFZUHUJUDUEUKFZEUMUIUNUDBANOUDUEUKPQULUGUFUKUD
    UGBAARSTUAUB $.
    $( [21-Jun-1998] $)

  $( There is no set between an ordinal number and its successor.  Proposition
     7.25 of [TakeutiZaring] p. 41. $)
  onnbtwn $p |- ( A e. On -> -. ( A e. B /\ B e. suc A ) ) $=
    ( con0 wcel word csuc wa wn eloni ordnbtwn syl ) ACDAEABDBAFDGHAIABJK $.
    $( [9-Jun-1994] $)

  $( A set whose successor is a subset of another class is a member of that
     class. $)
  sucssel $p |- ( A e. C -> ( suc A C_ B -> A e. B ) ) $=
    ( csuc wss wcel ssel sucidg syl5com ) ADZBEAJFABFACFJBAGACHI $.
    $( [16-Sep-1995] $)

  $( Ordinal derived from its successor. $)
  orddif $p |- ( Ord A -> A = ( suc A \ { A } ) ) $=
    ( word csn cin c0 wceq csuc cdif orddisj disj3 cun df-suc difeq1i difun2 
    eqtri eqeq2i bitr4i sylib ) ABAACZDEFZAAGZSHZFZAITAASHZFUCASJUBUDAUBASKZSHU
    DUAUESALMASNOPQR $.
    $( [20-May-1998] $)

  $( An ordinal class includes its union. $)
  orduniss $p |- ( Ord A -> U. A C_ A ) $=
    ( word wtr cuni wss ordtr df-tr sylib ) ABACADAEAFAGH $.
    $( [13-Sep-2003] $)

  $( A trichotomy law for ordinal classes.  (The proof was shortened by Andrew
     Salmon, 12-Aug-2011.) $)
  ordtri2or $p |- ( ( Ord A /\ Ord B ) -> ( A e. B \/ B C_ A ) ) $=
    ( word wa wcel wss wn wb ordtri1 ancoms biimprd orrd ) ACZBCZDZABEZBAFZOQPG
    ZNMQRHBAIJKL $.
    $( [12-Aug-2011] $) $( [13-Sep-2003] $)

  $( A trichotomy law for ordinal classes. $)
  ordtri2or2 $p |- ( ( Ord A /\ Ord B ) -> ( A C_ B \/ B C_ A ) ) $=
    ( word wa wcel wss wo ordtri2or wi ordelss ex orim1d adantl mpd ) ACZBCZDAB
    EZBAFZGZABFZRGZABHPSUAIOPQTRPQTBAJKLMN $.
    $( [2-Nov-2003] $)

  $( Property of a subclass of the maximum (i.e. union) of two ordinals. $)
  ordssun $p |- ( ( Ord B /\ Ord C ) ->
               ( A C_ ( B u. C ) <-> ( A C_ B \/ A C_ C ) ) ) $=
    ( word wa cun wss wo wi ordtri2or2 wceq wb ssequn1 sseq2 sylbi olc syl6bi 
    ssequn2 orc jaoi syl ssun impbid1 ) BDCDEZABCFZGZABGZACGZHZUDBCGZCBGZHUFUII
    ZBCJUJULUKUJUFUHUIUJUECKUFUHLBCMUECANOUHUGPQUKUFUGUIUKUEBKUFUGLCBRUEBANOUGU
    HSQTUAABCUBUC $.
    $( [28-Nov-2003] $)

  $( The maximum (i.e. union) of two ordinals is either one or the other.
     Similar to Exercise 14 of [TakeutiZaring] p. 40. $)
  ordequn $p |- ( ( Ord B /\ Ord C ) ->
               ( A = ( B u. C ) -> ( A = B \/ A = C ) ) ) $=
    ( word wa wss wo cun wceq wi ordtri2or2 wb ssequn1 eqeq2 sylbi olc syl6bi 
    ssequn2 orc jaoi syl ) BDCDEBCFZCBFZGABCHZIZABIZACIZGZJZBCKUBUIUCUBUEUGUHUB
    UDCIUEUGLBCMUDCANOUGUFPQUCUEUFUHUCUDBIUEUFLCBRUDBANOUFUGSQTUA $.
    $( [28-Nov-2003] $)

  $( The maximum (i.e. union) of two ordinals is ordinal.  Exercise 12 of
     [TakeutiZaring] p. 40. $)
  ordun $p |- ( ( Ord A /\ Ord B ) -> Ord ( A u. B ) ) $=
    ( word wa cun wceq wo eqid ordequn mpi ordeq biimprcd jaao mpd ) ACZBCZDZAB
    EZAFZRBFZGZRCZQRRFUARHRABIJOSUBPTSUBORAKLTUBPRBKLMN $.
    $( [28-Nov-2003] $)

  ${
    $d x A $.  $d x B $.
    $( A subclass relationship for union and successor of ordinal classes. $)
    ordunisssuc $p |- ( ( A C_ On /\ Ord B ) ->
                      ( U. A C_ B <-> A C_ suc B ) ) $=
      ( vx con0 wss word wa cv wral csuc wcel cuni wb ordsssuc ssel2 sylan 
      an32s ralbidva unissb dfss3 3bitr4g ) ADEZBFZGZCHZBEZCAIUEBJZKZCAIALBEAUG
      EUDUFUHCAUBUEAKZUCUFUHMZUEDKUCUJUBUIGUEBNADUEOPQRCABSCAUGTUA $.
      $( [28-Nov-2003] $)
  $}

  $( The successor operation behaves like a one-to-one function.  Compare
     Exercise 16 of [Enderton] p. 194. $)
  suc11 $p |- ( ( A e. On /\ B e. On ) -> ( suc A = suc B <-> A = B ) ) $=
    ( con0 wcel wa csuc wceq wn wo wi word eloni ordn2lp ianor sylib syl 
    adantr wss sucssel eqimss syl5 elsuci ord com12 syl9 eqimss2 eqcom syl6ib 
    jaao mpd suceq impbid1 ) ACDZBCDZEZAFZBFZGZABGZUOABDZHZBADZHZIZURUSJZUMVDUN
    UMAKZVDALVFUTVBEHVDABMUTVBNOPQUMVAVEUNVCUMURAUQDZVAUSUMUPUQRVGURAUQCSUPUQTU
    AVGVAUSVGUTUSABUBUCUDUEUNURBUPDZVCUSUNUQUPRVHURBUPCSUQUPUFUAVCVHBAGZUSVHVCV
    IVHVBVIBAUBUCUDBAUGUHUEUIUJABUKUL $.
    $( [3-Sep-2003] $)

  ${
    on.1 $e |- A e. On $.
    $( An ordinal number is an ordinal class. $)
    onordi $p |- Ord A $=
      ( con0 wcel word eloni ax-mp ) ACDAEBAFG $.
      $( [11-Jun-1994] $)

    $( An ordinal number is a transitive class. $)
    ontrci $p |- Tr A $=
      ( word wtr onordi ordtr ax-mp ) ACADABEAFG $.
      $( [11-Jun-1994] $)

    $( An ordinal number is not a member of itself.  Theorem 7M(c) of
       [Enderton] p. 192. $)
    onirri $p |- -. A e. A $=
      ( word wcel wn onordi ordirr ax-mp ) ACAADEABFAGH $.
      $( [11-Jun-1994] $)

    $( A member of an ordinal number is an ordinal number.  Theorem 7M(a) of
       [Enderton] p. 192. $)
    oneli $p |- ( B e. A -> B e. On ) $=
      ( con0 wcel onelon mpan ) ADEBAEBDECABFG $.
      $( [11-Jun-1994] $)

    $( A member of an ordinal number is a subset of it. $)
    onelssi $p |- ( B e. A -> B C_ A ) $=
      ( con0 wcel wss wi onelss ax-mp ) ADEBAEBAFGCABHI $.
      $( [11-Aug-1994] $)

    $( An ordering law for ordinal numbers. $)
    onssneli $p |- ( A C_ B -> -. B e. A ) $=
      ( wcel wss con0 word wn oneli eloni ordirr 3syl ssel com12 mtod con2i ) 
      BADZABEZQRBBDZQBFDBGSHABCIBJBKLRQSABBMNOP $.
      $( [13-Jun-1994] $)

    $( An ordering law for ordinal numbers. $)
    onssnel2i $p |- ( B C_ A -> -. A e. B ) $=
      ( wss wcel onirri ssel mtoi ) BADABEAAEACFBAAGH $.
      $( [13-Jun-1994] $)

    $( An element of an ordinal number equals the intersection with it. $)
    onelini $p |- ( B e. A -> B = ( B i^i A ) ) $=
      ( wcel wss cin wceq onelssi dfss sylib ) BADBAEBBAFGABCHBAIJ $.
      $( [11-Jun-1994] $)

    $( An ordinal number equals its union with any element. $)
    oneluni $p |- ( B e. A -> ( A u. B ) = A ) $=
      ( wcel wss cun wceq onelssi ssequn2 sylib ) BADBAEABFAGABCHBAIJ $.
      $( [23-Sep-2004] $) $( [13-Jun-1994] $)

    $( An ordinal number is equal to the union of its successor. $)
    onunisuci $p |- U. suc A = A $=
      ( wtr csuc cuni wceq ontrci con0 elisseti unisuc mpbi ) ACADEAFABGAAHBIJK
      $.
      $( [22-Sep-2004] $) $( [12-Jun-1994] $)

    ${
      on.2 $e |- B e. On $.
      $( Subset is equivalent to membership or equality for ordinal numbers. $)
      onsseli $p |- ( A C_ B <-> ( A e. B \/ A = B ) ) $=
        ( con0 wcel wss wceq wo wb onsseleq mp2an ) AEFBEFABGABFABHIJCDABKL $.
        $( [15-Sep-1995] $)

      $( The union of two ordinal numbers is an ordinal number. $)
      onun2i $p |- ( A u. B ) e. On $=
        ( wcel wss wo cun con0 word onordi ordtri2or mp2an oneluni syl6eqel 
        wceq ssequn1 eleq1 mpbiri sylbi jaoi ax-mp ) BAEZABFZGZABHZIEZBJAJUEBDK
        ACKBALMUCUGUDUCUFAIABCNCOUDUFBPZUGABQUHUGBIEDUFBIRSTUAUB $.
        $( [13-Jun-1994] $)
    $}
  $}

  $( An ordinal equal to its own union is either zero or a limit ordinal. $)
  unizlim $p |- ( Ord A -> ( A = U. A <-> ( A = (/) \/ Lim A ) ) ) $=
    ( word cuni wceq c0 wlim wo wa wn wi wne w3a df-lim biimpri 3exp df-ne 
    syl5ibr com23 imp orrd ex uni0 eqcomi id unieq 3eqtr4a limuni jaoi impbid1 
    ) ABZAACZDZAEDZAFZGZUJULUOUJULHUMUNUJULUMIZUNJUJUPULUNUJAEKZULUNJUPUJUQULUN
    UNUJUQULLAMNOAEPQRSTUAUMULUNUMEECZAUKUREUBUCUMUDAEUEUFAUGUHUI $.
    $( [1-Oct-2003] $)

  $( An ordinal number either equals zero or contains zero. $)
  on0eqel $p |- ( A e. On -> ( A = (/) \/ (/) e. A ) ) $=
    ( con0 wcel c0 wceq wo wss 0ss wb 0elon onsseleq mpan mpbii eqcom orbi2i 
    orcom bitri sylib ) ABCZDACZDAEZFZADEZTFZSDAGZUBAHDBCSUEUBIJDAKLMUBTUCFUDUA
    UCTDANOTUCPQR $.
    $( [1-Jun-2004] $)

  $( The singleton of the singleton of the empty set is not an ordinal (nor a
     natural number by ~ omsson ).  It can be used to represent an "undefined"
     value for a partial operation on natural or ordinal numbers.  See also
     ~ onxpdisj .  (The proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
  snsn0non $p |- -. { { (/) } } e. On $=
    ( c0 csn con0 wcel wceq wo wn p0ex snid n0i ax-mp 0ex eqcom mtbir elsnc 
    pm3.2ni on0eqel mto ) ABZBZCDTAEZATDZFUAUBSTDUAGSHITSJKUBASEZUCSAEZASDUDGAL
    ISAJKASMNASLONPTQR $.
    $( [12-Aug-2011] $) $( [21-May-2004] $)


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Union
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Introduce the Axiom of Union
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d w x y z $.
    $( Axiom of Union.  An axiom of Zermelo-Fraenkel set theory.  It states
       that a set ` y ` exists that includes the union of a given set ` x `
       i.e. the collection of all members of the members of ` x ` .  The
       variant ~ axun2 states that the union itself exists.  A version with the
       standard abbreviation for union is ~ uniex2 .  A version using class
       notation is ~ uniex .

       The union of a class ~ df-uni should not be confused with the union of
       two classes ~ df-un .  Their relationship is shown in ~ unipr . $)
    ax-un $a |- E. y A. z ( E. w ( z e. w /\ w e. x ) -> z e. y ) $.

    $( Axiom of Union expressed with fewest number of different variables. $)
    zfun $p |- E. x A. y ( E. x ( y e. x /\ x e. z ) -> y e. x ) $=
      ( vw cv wcel wa wex wi wal ax-un wceq elequ2 elequ1 anbi12d cbvexv 
      imbi1i albii exbii mpbi ) BEZDEZFZUBCEZFZGZDHZUAAEZFZIZBJZAHUIUHUDFZGZAHZ
      UIIZBJZAHCABDKUKUPAUJUOBUGUNUIUFUMDAUBUHLUCUIUEULDABMDACNOPQRST $.
      $( [14-Aug-2003] $)

    $( A variant of the Axiom of Union ~ ax-un .  For any set ` x ` , there
       exists a set ` y ` whose members are exactly the members of the members
       of ` x ` i.e. the union of ` x ` .  Axiom Union of [BellMachover]
       p. 466. $)
    axun2 $p |- E. y A. z ( z e. y <-> E. w ( z e. w /\ w e. x ) ) $=
      ( cv wcel wa wex ax-un bm1.3ii ) CEDEZFKAEFGDHBCABCDIJ $.
      $( [4-Jun-2006] $)

    $( The Axiom of Union using the standard abbreviation for union.  Given any
       set ` x ` , its union ` y ` exists. $)
    uniex2 $p |- E. y y = U. x $=
      ( vz cv cuni wceq wex wcel wb wal wi wa zfun eluni imbi1i albii exbii 
      mpbir bm1.3ii dfcleq ) BDZADZEZFZBGCDZUAHZUEUCHZICJZBGUGBCUGUFKZCJZBGUFUA
      UBHLBGZUFKZCJZBGBCAMUJUMBUIULCUGUKUFBUEUBNOPQRSUDUHBCUAUCTQR $.
      $( [4-Jun-2006] $)
  $}

  ${
    $d x y A $.
    uniex.1 $e |- A e. _V $.
    $( The Axiom of Union in class notation.  This says that if ` A ` is a set
       i.e. ` A e. _V ` (see ~ isset ), then the union of ` A ` is also a set.
       Same as Axiom 3 of [TakeutiZaring] p. 16. $)
    uniex $p |- U. A e. _V $=
      ( vx vy cv cuni cvv wcel wceq unieq eleq1d uniex2 issetri vtocl ) CEZFZGH
      AFZGHCABOAIPQGOAJKDPCDLMN $.
      $( [11-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( The ZF Axiom of Union in class notation, in the form of a theorem
       instead of an inference.  We use the antecedent ` A e. B ` instead of
       ` A e. _V ` to make the theorem more general and thus shorten some
       proofs; obviously ` _V ` is one possibility for ` B ` . $)
    uniexg $p |- ( A e. B -> U. A e. _V ) $=
      ( vx cv cuni cvv wcel wceq unieq eleq1d visset uniex vtoclg ) CDZEZFGAEZF
      GCABNAHOPFNAIJNCKLM $.
      $( [25-Nov-1994] $)
  $}

  ${
    unex.1 $e |- A e. _V $.
    unex.2 $e |- B e. _V $.
    $( The union of two sets is a set.  Corollary 5.8 of [TakeutiZaring]
       p. 16. $)
    unex $p |- ( A u. B ) e. _V $=
      ( cpr cuni cun cvv unipr prex uniex eqeltrri ) ABEZFABGHABCDIMABJKL $.
      $( [1-Jul-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Existence of union is equivalent to existence of its components. $)
    unexb $p |- ( ( A e. _V /\ B e. _V ) <-> ( A u. B ) e. _V ) $=
      ( vx vy cvv wcel wa cun cv wceq uneq1 eleq1d uneq2 visset unex vtocl2g 
      wss ssun1 ssexg mpan ssun2 jca impbii ) AEFZBEFZGABHZEFZCIZDIZHZEFAUIHZEF
      UGCDABEEUHAJUJUKEUHAUIKLUIBJUKUFEUIBAMLUHUICNDNOPUGUDUEAUFQUGUDABRAUFESTB
      UFQUGUEBAUABUFESTUBUC $.
      $( [11-Jun-1998] $)
  $}

  $( A union of two sets is a set.  Corollary 5.8 of [TakeutiZaring] p. 16. $)
  unexg $p |- ( ( A e. C /\ B e. D ) -> ( A u. B ) e. _V ) $=
    ( cvv wcel cun wa unexb biimpi elisset syl2an ) AEFZBEFZABGEFZACFBDFMNHOABI
    JACKBDKL $.
    $( [18-Sep-2006] $)

  ${
    $( A version of ~ unisn without the ` A e. _V ` hypothesis.  (Contributed
       by Stefan Allan, 14-Mar-2006.) $)
    unisn2 $p |- U. { A } e. { (/) , A } $=
      ( cvv wcel csn cuni c0 cpr unisng wceq wo eqid olci elprg mpbiri eqeltrd 
      wn snprc biimpi unieqd uni0 0ex prid1 eqeltri syl6eqel pm2.61i ) ABCZADZE
      ZFAGZCUFUHAUIABHUFAUICAFIZAAIZJUKUJAKLAFABMNOUFPZUHFEZUIULUGFULUGFIAQRSUM
      FUITFAUAUBUCUDUE $.
      $( [14-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Union of a singleton in the form of a restricted class abstraction. $)
    unisn3 $p |- ( A e. B -> U. { x e. B | x = A } = A ) $=
      ( wcel cv wceq crab cuni csn rabsn unieqd unisng eqtrd ) BCDZAEBFACGZHBIZ
      HBNOPACBJKBCLM $.
      $( [3-Jul-2008] $)
  $}

  ${
    $d x y z $.
    $( The class of all singletons is a proper class.  (Proof shortened by Eric
       Schmidt, 7-Dec-2008.) $)
    snnex $p |- { x | E. y x = { y } } e/ _V $=
      ( vz cv csn wceq wex cab cvv wnel wcel wn cuni vprc wa visset snid 
      isseti sneq eqcoms eximi ax-mp snex eleq2 eqeq1 exbidv anbi12d cla4ev 
      mp2an eluniab mpbir 2th eqriv eleq1i mtbir uniexg mto df-nel ) ADZBDZEZFZ
      BGZAHZIJVDIKZLVEVDMZIKZVGIIKNVFIICVFICDZVFKZVHIKVIVHUSKZVCOZAGZVHVHEZKZVM
      VAFZBGZVLVHCPZQUTVHFZBGVPBVHVQRVRVOBVOVHUTVHUTSTUAUBVKVNVPOAVMVHUCUSVMFZV
      JVNVCVPUSVMVHUDVSVBVOBUSVMVAUEUFUGUHUIVCAVHUJUKVQULUMUNUOVDIUPUQVDIURUK 
      $.
      $( [10-Oct-2008] $)
  $}

  $( If the subtrahend of a class difference exists, then the minuend exists
     iff the difference exists.  (The proof was shortened by Andrew Salmon,
     12-Aug-2011.) $)
  difex2 $p |- ( B e. C -> ( A e. _V <-> ( A \ B ) e. _V ) ) $=
    ( wcel cvv cdif difexg cun wss wa ssexg ssun2 uncom undif2 eqtr2i sseqtri 
    unexg sylancr expcom impbid2 ) BCDZAEDZABFZEDZABEGUDUAUBAUCBHZIUEEDUBUDUAJA
    UEEKABAHZUEABLUEBUCHUFUCBMBANOPUCBECQRST $.
    $( [12-Aug-2011] $) $( [12-Nov-2003] $)

  $( A triple of classes exists. $)
  tpex $p |- { A , B , C } e. _V $=
    ( ctp cpr csn cun cvv df-tp prex snex unex eqeltri ) ABCDABEZCFZGHABCINOABJ
    CKLM $.
    $( [10-Apr-1994] $)

  $( Each member of an ordered pair belongs to the union of the union of a
     class to which the ordered pair belongs.  Lemma 3D of [Enderton] p. 41. $)
  opeluu $p |- ( <. x , y >. e. A ->
               ( x e. U. U. A /\ y e. U. U. A ) ) $=
    ( cv cop wcel cuni cpr elunii visset prid1 opi2 mpan sylancr prid2 jca ) AD
    ZBDZEZCFZQCGZGZFZRUBFZQQRHZFUEUAFZUCTQUEUAIQRAJKUESFTUFQRLUESCIMZNRUEFUFUDT
    RUEUAIQRBJOUGNP $.
    $( [31-Mar-1995] $)

  ${
    $d A x y v z $.  $d A x y u z $.
    $( Expression for double union that moves union into a class builder.
       (Contributed by FL, 28-May-2007.) $)
    uniuni $p |- U. U. A = U. { x | E. y ( x = U. y /\ y e. A ) } $=
      ( vz vu vv cv wcel cuni wa wex cab wceq eluni anbi2i exbii 19.42v bicomi 
      excom anass ancom bitr3i 2exbii bitri exdistr 3bitri visset uniex eleq2 
      ceqsexv exancom 3bitr2i eqeq1 anbi1d exbidv elab abbii df-uni 3eqtr4i ) 
      DGZEGZHZVACIZHZJZEKZDLUTFGZHZVGAGZBGZIZMZVJCHZJZBKZALZHZJZFKZDLVCIVPIVFVS
      DVFVBVAVJHZVMJZBKZJZEKZVMUTVKHZJZBKZVSVEWCEVDWBVBBVACNOPWDVMVBVTJZEKZJZBK
      ZWGWDVBWAJZBKZEKZVMWHJZEKBKZWKWCWMEWMWCVBWABQRPWNWLEKBKWPWLEBSWLWOBEWLWHV
      MJWOVBVTVMTWHVMUAUBUCUDVMWHBEUEUFWJWFBWIWEVMWEWIEUTVJNROPUDWGVHVGVKMZVMJZ
      JZBKFKZVHWRBKZJZFKVSWGWSFKZBKWTWFXCBWFVMVHWQJZFKZJVMXDJZFKXCWEXEVMWEWQVHJ
      FKXEVHWEFVKVJBUGUHVGVKUTUIUJWQVHFUKUBOVMXDFQXFWSFXFXDVMJWSVMXDUAVHWQVMTUD
      PULPWSBFSUDVHWRFBUEXBVRFXAVQVHVQXAVOXAAVGFUGVIVGMZVNWRBXGVLWQVMVIVGVKUMUN
      UOUPROPUFUFUQDEVCURDFVPURUS $.
      $( [5-Feb-2008] $) $( [28-May-2007] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    $( If ` ph ` is true for exactly one ` x ` , then ` U. { x | ph } ` is a
       way to express "the unique element such that ` ph ` is true."  Some
       books use a special symbol such as iota to denote "the unique element
       such that." $)
    euuni $p |- ( E! x ph -> ( ph <-> U. { x | ph } = x ) ) $=
      ( vy vz weu cab cuni cv wceq wa wex wb cvv wcel euabex uniexg syl eueq 
      eqcom eubii hbab1 hbuni ax-17 hbeq eqeq2 cbveu 3bitri sylib csn euabsn 
      visset snid eleq2 mpbiri abid unieq unisn syl6eq jca eximi sylbi eupickb 
      mpd3an23 ) ABEZABFZGZBHZIZBEZAVHJZBKZAVHLVDVFMNZVIVDVEMNVLABOVEMPQVLCHZVF
      IZCEVFVMIZCEVICVFRVNVOCVMVFSTVOVHCBBDDVFVMBDVEABDUAUBDHVMNBUCUDVHCUCVMVGV
      FUEUFUGUHVDVEVGUIZIZBKVKABUJVQVJBVQAVHVQVGVENZAVQVRVGVPNVGBUKZULVEVPVGUMU
      NABUOUHVQVFVPGVGVEVPUPVGVSUQURUSUTVAAVHBVBVC $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( A way to express "the unique element such that" (restricted quantifier
       version).  (The proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
    reuuni1 $p |- ( ( x e. A /\ E! x e. A ph ) ->
            ( ph <-> U. { x e. A | ph } = x ) ) $=
      ( wreu cv wcel crab cuni wceq wb wa cab ibar df-rab unieqi eqeq1i a1i 
      bibi12d weu df-reu euuni sylbi syl5cbir impcom ) ABCDZBEZCFZAABCGZHZUFIZJ
      ZUGUKUGAKZULBLZHZUFIZJZUEUGAULUJUOUGAMUJUOJUGUIUNUFUHUMABCNOPQRUEULBSUPAB
      CTULBUAUBUCUD $.
      $( [12-Aug-2011] $) $( [25-Nov-1994] $)
  $}

  ${
    $d y ph $.  $d x y A $.  $d y B $.
    reuuni2f.1 $e |- ( y e. B -> A. x y e. B ) $.
    reuuni2f.2 $e |- ( B e. A -> ( ps -> A. x ps ) ) $.
    reuuni2f.3 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( ` U. { x e. A | ph } ` is an explicit representation of "the unique
       element in ` A ` such that ` ph ` ."  This theorem shows a condition
       that allows us to represent this element with a class expression
       ` B ` .  The second hypothesis is a weakened bound variable condition
       that allows ~ hbsbc1g to be used. $)
    reuuni2f $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> U. { x e. A | ph } = B ) ) $=
      ( wcel wreu crab cuni wceq wb wi cv ax-17 hbel wal hbreu1 a1i hbrab1 
      hbuni hbeq hbbid hbimd hbim1 eleq1 eqeq2 bibi12d imbi2d imbi12d reuuni1 
      ex vtoclgf pm2.43i imp ) FEJZACEKZBACELZMZFNZOZUSUTVDPZCQZEJZUTAVBVFNZOZP
      ZPUSVEPCDFEGUSVECCDDFEGDQEJCRSZUSUTVDCVKUTUTCTPUSACEUAUBUSBVCCVKHVCVCCTPU
      SCDDVBFCDVAACDEUCUDGUEUBUFUGUHVFFNZVGUSVJVEVFFEUIVLVIVDUTVLABVHVCIVFFVBUJ
      UKULUMVGUTVIACEUNUOUPUQUR $.
      $( [19-Oct-2005] $)
  $}

  ${
    $d y ph $.  $d x y A $.  $d x y B $.  $d x ps $.
    reuuni2.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( ` U. { x e. A | ph } ` is an explicit representation of "the unique
       element in ` A ` such that ` ph ` ." $)
    reuuni2 $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> U. { x e. A | ph } = B ) ) $=
      ( vy cv wcel ax-17 wal wi a1i reuuni2f ) ABCGDEGHEICJBBCKLEDIBCJMFN $.
      $( [27-May-2006] $) $( [28-Mar-1997] $)
  $}

  ${
    $d A x $.  $d ps x $.
    euuni2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( The unique element such that ` ph ` .  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    euuni2 $p |- ( ( A e. B /\ E! x ph ) -> ( ps <-> U. { x | ph } = A ) ) $=
      ( cvv wcel wreu cab cuni wceq wb weu wa crab reuuni2 rabab unieqi eqeq1i 
      syl6bb elisset reuv biimpri syl2an ) DGHZACGIZBACJZKZDLZMDEHACNZUFUGOBACG
      PZKZDLUJABCGDFQUMUIDULUHACRSTUADEUBUGUKACUCUDUE $.
      $( [1-Jun-2011] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x ps $.  $d x ch $.
    reuuni3.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    reuuni3.2 $e |- ( x = U. { y e. A | ps } -> ( ph <-> ch ) ) $.
    $( Derive the property ` ch ` of "the unique element in ` A ` such that
       ` ph ` " when expressed explicitly as ` U. { y e. A | ps } ` . $)
    reuuni3 $p |- ( E! x e. A ph -> ch ) $=
      ( crab cuni wcel wreu reucl cbvrabv unieqi syl5eqelr wa wceq reuuni2 
      mpbiri mpancom ) BEFIZJZFKZADFLZCUEADFIZJZFUCADFMUFUBABDEFGNOZPUDUEQCUGUC
      RUHACDFUCHSTUA $.
      $( [11-Nov-2004] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Derive the property of "the unique element in ` A ` such that
       ` ph ` " when expressed explicitly as ` U. { x e. A | ph } ` . $)
    reuuni4 $p |- ( E! x e. A ph -> [ U. { x e. A | ph } / x ] ph ) $=
      ( vy wreu crab cuni wcel wsbc reucl cvv wrex wi reurex hbreu1 hbrab1 
      hbuni hbsbc1 cv wa wceq wb reuuni1 sbceq1a eqcoms syl6bi ibd expcom a1i 
      com4l r19.23ad mpd elisset syl5 ) ABCEZABCFZGZCHZABUQIZABCJUOUQKHZUSURUOA
      BCLUTUSMZABCNUOAVABCABCOABDUQKBDUPABDCPQRUTUOBSZCHZAUSUOVCAUSMZMMUTVCUOVD
      VCUOTZAUSVEAUQVBUAAUSUBZABCUCVFVBUQABUQUDUEUFUGUHUIUJUKULUQCUMUNUL $.
      $( [11-Nov-2004] $)

    $( Membership law for "the unique element in ` A ` such that ` ph ` ." $)
    reucl2 $p |- ( E! x e. A ph -> U. { x e. A | ph } e. { x e. A | ph } ) $=
      ( vy crab cuni wcel wsbc wreu cv ax-17 elrabsf reucl reuuni4 sylanbrc ) 
      ABCEZFZPGQCGABQHABCIABDQCDJCGBKLABCMABCNO $.
      $( [11-Jun-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.
    $( Restriction of a unique element to a smaller class. $)
    reuuniss $p |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) ->
                U. { x e. A | ph } = U. { x e. B | ph } ) $=
      ( vy wss wrex wreu w3a crab cuni wsbc wceq reuss reuuni4 syl wcel wb 
      reucl wi ssel 3ad2ant1 mpd simp3 hbrab1 hbuni hbsbc1g sbceq1a reuuni2f 
      syl11anc mpbid eqcomd ) CDFZABCGZABDHZIZABDJKZABCJZKZUPABUSLZUQUSMZUPABCH
      ZUTABCDNZABCOPUPUSDQZUOUTVARUPUSCQZVDUPVBVEVCABCSPUMUNVEVDTUOCDUSUAUBUCUM
      UNUOUDAUTBEDUSBEURABECUEUFZABEUSDVFUGABUSUHUIUJUKUL $.
      $( [19-Oct-2005] $)

    $( Restriction of a unique element to a smaller class. $)
    mouniss $p |- ( ( A C_ B /\ E. x e. A ph /\ E* x ( x e. B /\ ph ) ) ->
                U. { x e. A | ph } = U. { x e. B | ph } ) $=
      ( wss wrex cv wcel wa wmo crab cuni wceq wreu ssel anim1d reximdv2 imp 
      anim1i reu5 sylibr reuuniss 3expa syldan 3impa ) CDEZABCFZBGZDHZAIBJZABCK
      LABDKLMZUFUGIZUJABDNZUKULUJIABDFZUJIUMULUNUJUFUGUNUFAABCDUFUHCHUIACDUHOPQ
      RSABDTUAUFUGUMUKABCDUBUCUDUE $.
      $( [19-Feb-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.  $d y ps $.
    $( Restriction of a unique element to a smaller class. $)
    reuuniss2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x e. A ph
           /\ E! x e. B ps ) ) -> U. { x e. A | ph } = U. { x e. B | ps } ) $=
      ( vy wss wi wral wa wrex wreu crab cuni wsbc wceq reuss2 simplr reuuni4 
      wcel reucl ra4sbc sbcimg sylibd syl mpid sylc wb ssel ad2antrr mpd 
      simprr hbrab1 hbuni hbsbc1g sbceq1a reuuni2f syl11anc mpbid eqcomd ) DEGZ
      ABHZCDIZJZACDKZBCELZJZJZBCEMNZACDMZNZVHBCVKOZVIVKPZVHACDLZVCVLABCDEQZVAVC
      VGRVNVCACVKOZVLACDSVNVKDTZVCVPVLHZHACDUAZVQVCVBCVKOVRVBCVKDUBABCVKDUCUDUE
      UFUGVHVKETZVFVLVMUHVHVQVTVHVNVQVOVSUEVAVQVTHVCVGDEVKUIUJUKVDVEVFULBVLCFEV
      KCFVJACFDUMUNZBCFVKEWAUOBCVKUPUQURUSUT $.
      $( [20-Oct-2005] $)
  $}

  ${
    $d y z A $.  $d y z ph $.  $d x y z $.
    $( A way to express restricted existential uniqueness of a wff: its
       restricted class abstraction is a singleton.  (The proof was shortened
       by Andrew Salmon, 12-Aug-2011.) $)
    reusn $p |- ( E! x e. A ph <-> E. y { x e. A | ph } = { y } ) $=
      ( vz wreu cv wcel wa weu cab csn wceq wex crab df-reu euabsn ax-17 
      hbrab1 hbeq df-rab eqcomi a1i sneq eqeq12d cbvex 3bitri ) ABDFBGZDHAIZBJU
      IBKZUHLZMZBNABDOZCGZLZMZCNABDPUIBQULUPBCULCRBEEUMUOABEDSEGUOHBRTUHUNMZUJU
      MUKUOUJUMMUQUMUJABDUAUBUCUHUNUDUEUFUG $.
      $( [12-Aug-2011] $) $( [30-May-2006] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y ph $.  $d x y $.
    reusni.1 $e |- B e. _V $.
    $( Restricted existential uniqueness determined by a singleton. $)
    reusni $p |- ( { x e. A | ph } = { B } -> E! x e. A ph ) $=
      ( vy crab csn wceq cv wex wreu sneq eqeq2d cla4ev reusn sylibr ) ABCGZDHZ
      IZRFJZHZIZFKABCLUCTFDEUADIUBSRUADMNOABFCPQ $.
      $( [29-May-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rabsnt.1 $e |- B e. _V $.
    rabsnt.2 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Truth implied by equality of a restricted class abstraction and a
       singleton. $)
    rabsnt $p |- ( { x e. A | ph } = { B } -> ps ) $=
      ( crab csn wceq wcel wreu wa cuni wss ssrab2 sseq1 mpbii snss sylibr 
      reusni jca unieq unisn syl6eq reuuni2 biimprd sylc ) ACDHZEIZJZEDKZACDLZM
      ZUINZEJZBUKULUMUKUJDOZULUKUIDOUQACDPUIUJDQREDFSTACDEFUAUBUKUOUJNEUIUJUCEF
      UDUEUNBUPABCDEGUFUGUH $.
      $( [29-May-2006] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( A restricted class abstraction with a unique member can be expressed as
       a singleton. $)
    reuunisn $p |- ( E! x e. A ph ->
                   { x e. A | ph } = { U. { x e. A | ph } } ) $=
      ( vy wreu crab cv csn wceq wex cuni reusn unieq visset unisn syl6eq 
      sneqd eqtr3 mpdan 19.23aiv sylbi ) ABCEABCFZDGZHZIZDJUBUBKZHZIZABDCLUEUHD
      UEUGUDIUHUEUFUCUEUFUDKUCUBUDMUCDNOPQUBUGUDRSTUA $.
      $( [30-May-2006] $)
  $}

  ${
    $d x y z $.  $d A y z $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    eualeq $p |- ( E! y A. x y = A <-> E. y A. x y = A ) $=
      ( vz cv wceq wal weu wex wa wi eqeq1 albidv eu4 eqtr3 ax-4 syl2an gen2 
      mpbiran2 ) BEZCFZAGZBHUBBIUBDEZCFZAGZJTUCFZKZDGBGUBUEBDUFUAUDATUCCLMNUGBD
      UAUDUFUBUETUCCOUAAPUDAPQRS $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y z w $.  $d A y z w $.
    $( Even if ` x ` is free in ` A ` , it is effectively bound when
       ` A ( x ) ` is single-valued. $)
    eualeqhb $p |- ( E! y A. x y = A -> ( y = A -> A. x y = A ) ) $=
      ( vz vw cv wceq wal weu cvv wreu wi wcel wa visset biantrur eubii df-reu 
      bitr4i crab cuni eqeq1 albidv ax-17 hba1 hbrab hbuni hbeq albid reuuni3 
      19.21bi syl5cbir eqtr3 syl5 mpan2d sylbi ) BFZCGZAHZBIZUSBJKZURUSLUTUQJMZ
      USNZBIVAUSVCBVBUSBOPQUSBJRSVAURDFZCGZAHZDJTZUAZCGZUSVAVIAUSVFVIAHZBDJUQVD
      GURVEAUQVDCUBUCUQVHGZURVIAAEEUQVHEFZUQMAUDAEVGVFADEJVEAUEVLJMAUDUFUGUHUQV
      HCUBUIZUJZUKVAVKUSURVINVKUSVJVAVMVNULUQVHCUMUNUOUP $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y $.  $d A y $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    eualexeq $p |- ( E! y A. x y = A -> E! y E. x y = A ) $=
      ( cv wceq wal weu wex hbeu1 hba1 hbeu eualeqhb 19.23ad 19.2 impbid1 
      eubid ibir ) BDCEZAFZBGZRAHZBGTUASBSBITUASTRSASABRAJZKUBABCLMRAANOPQ $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y z v w $.  $d A y z w v $.
    euexeqOLD.1 $e |- A e. _V $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    euexeqOLD $p |- ( E! y E. x y = A <-> E! y A. x y = A ) $=
      ( vz vw vv cv wceq wex weu wal cvv crab cuni wcel wreu wa visset 
      biantrur eubii ax-17 eqeq1 exbidv cbveu df-reu 3bitr4i reucl sylbi hbe1 
      hbeu eqid wi eu4 hbrab hbuni hbeq exbid anbi1d imbi12d albidv cla4gv 
      com12 adantl mpd bitr4i reuuni3 biantrurd imbi1d mpbird 19.23 albii 
      alcom bitr3i sylib ax-4 eqeq2 cla4v 3syl mpi 19.21ai albid cla4egv sylc 
      eqtr3 syl2an gen2 mpbiran2 bicomi hbeu1 hba1 19.21bi syl5cbir syl5 
      mpan2d 19.23ad 19.2 impbid1 eubid ibir impbii ) BHZCIZAJZBKZXCALZBKZXEXFB
      JZXGXEEHZCIZAJZEMNZOZMPZXMCIZALZXHXEXKEMQZXNXKEKXIMPZXKRZEKXEXQXKXSEXRXKE
      STUAXDXKBEXDEUBXKBUBXBXIIZXCXJAXBXICUCZUDZUEXKEMUFUGXKEMUHUIZXEXOAXDABXCA
      UJUKXECCIZXOCULXEFHZCIZXMYEIZUMZFLZALZYIYDXOUMZXEYFAJZYGUMZFLZYJXEYNXOAJZ
      YLRZYGUMZFLZXEXNYRYCXEXDBJZXDYLRZXBYEIZUMZFLZBLZRXNYRUMZXDYLBFUUAXCYFAXBY
      ECUCUDUNUUDUUEYSXNUUDYRUUCYRBXMMXBXMIZUUBYQFUUFYTYPUUAYGUUFXDYOYLUUFXCXOA
      AGGXBXMGHZXBPAUBZAGXLXKAEGMXJAUJUUGMPAUBZUOUPZUQZXBXMCUCZURZUSXBXMYEUCUTV
      AVBVCVDUIVEXEYMYQFXEYLYPYGXEYOYLXEXDBMQZYOXEXBMPZXDRZBKUUNXDUUPBUUOXDBSZT
      UAXDBMUFVFXDXKYOBEMYBUUMVGUIVHVIVAVJYNYHALZFLYJUURYMFYFYGAAGGXMYEUUJUUGYE
      PAUBUQVKVLYHFAVMVNVOYIAVPYHYKFCDYFYFYDYGXOYECCUCYECXMVQUTVRVSVTWAXFXPBXMM
      UUFXCXOAUUKUULWBWCWDXGXHXGXHXFXJALZRXTUMZELBLXFUUSBEXTXCXJAYAVAZUNUUTBEXC
      XJXTXFUUSXBXICWEXCAVPXJAVPWFWGWHWIVOXGXEXGXDXFBXFBWJXGXDXFXGXCXFAXFABXCAW
      KZUKUVBXGXFBMQZXCXFUMXGUUOXFRZBKUVCXFUVDBUUOXFUUQTUAXFBMUFVFUVCXCUUSEMNZO
      ZCIZXFUVCUVGAXFUUSUVGALZBEMUVAXBUVFIZXCUVGAAGGXBUVFUUHAGUVEUUSAEGMXJAWKUU
      IUOUPUQXBUVFCUCWBZVGZWLUVCUVIXFXCUVGRUVIXFUVHUVCUVJUVKWMXBUVFCWEWNWOUIWPX
      CAAWQWRWSWTXA $.
      $( [15-Oct-2010] $)
  $}

  ${
    $d x y z v w $.  $d A y z w v $.
    euexaleq.1 $e |- A e. _V $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    euexaleq $p |- ( E! y E. x y = A <-> E! y A. x y = A ) $=
      ( vz vw vv cv wceq wex weu wal cvv crab cuni wcel wreu wa visset 
      biantrur eubii ax-17 eqeq1 exbidv cbveu df-reu 3bitr4i reucl sylbi hbe1 
      hbeu eqid wi eu4 hbrab hbuni hbeq exbid anbi1d imbi12d albidv cla4gv 
      com12 adantl mpd bitr4i reuuni3 biantrurd imbi1d mpbird 19.23 albii 
      alcom bitr3i sylib ax-4 eqeq2 cla4v 3syl mpi 19.21ai albid cla4egv sylc 
      eualeq sylibr eualexeq impbii ) BHZCIZAJZBKZWJALZBKZWLWMBJZWNWLEHZCIZAJZE
      MNZOZMPZWTCIZALZWOWLWREMQZXAWREKWPMPZWRRZEKWLXDWRXFEXEWRESTUAWKWRBEWKEUBW
      RBUBWIWPIWJWQAWIWPCUCUDZUEWREMUFUGWREMUHUIZWLXBAWKABWJAUJUKWLCCIZXBCULWLF
      HZCIZWTXJIZUMZFLZALZXNXIXBUMZWLXKAJZXLUMZFLZXOWLXSXBAJZXQRZXLUMZFLZWLXAYC
      XHWLWKBJZWKXQRZWIXJIZUMZFLZBLZRXAYCUMZWKXQBFYFWJXKAWIXJCUCUDUNYIYJYDXAYIY
      CYHYCBWTMWIWTIZYGYBFYKYEYAYFXLYKWKXTXQYKWJXBAAGGWIWTGHZWIPAUBAGWSWRAEGMWQ
      AUJYLMPAUBUOUPZUQZWIWTCUCZURZUSWIWTXJUCUTVAVBVCVDUIVEWLXRYBFWLXQYAXLWLXTX
      QWLWKBMQZXTWLWIMPZWKRZBKYQWKYSBYRWKBSTUAWKBMUFVFWKWRXTBEMXGYPVGUIVHVIVAVJ
      XSXMALZFLXOYTXRFXKXLAAGGWTXJYMYLXJPAUBUQVKVLXMFAVMVNVOXNAVPXMXPFCDXKXKXIX
      LXBXJCCUCXJCWTVQUTVRVSVTWAWMXCBWTMYKWJXBAYNYOWBWCWDABCWEWFABCWGWH $.
      $( [15-Oct-2010] $)
  $}

  ${
    $d x y z B $.  $d x z C $.  $d x y D $.  $d x z ph $.  $d x y ps $.
    eufromeq0.1 $e |- ( y = z -> ( ph <-> ps ) ) $.
    eufromeq0.2 $e |- ( y = z -> C = D ) $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq0i $p |- ( E. x e. A A. y e. B ( ph -> x = C )
            -> A. y e. B A. z e. B ( ( ph /\ ps ) -> C = D ) ) $=
      ( cv wceq wi wral wa wcel eqeq2d imbi12d cbvralv biimpi raaanv prth 
      eqtr2 syl6 ralimi sylbir mpdan a1i r19.23aiv ) ACLZHMZNZDGOZABPZHIMZNZEGO
      ZDGOZCFUNUSNUKFQUNBUKIMZNZEGOZUSUNVBUMVADEGDLELMZABULUTJVCHIUKKRSTUAUNVBP
      UMVAPZEGOZDGOUSUMVADEGUBVEURDGVDUQEGVDUOULUTPUPAULBUTUCUKHIUDUEUFUFUGUHUI
      UJ $.
      $( [23-Dec-1012] $)

    $d x y z A $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       See ~ eufromeq6 for the connection to uniqueness. $)
    eufromeq0a $p |- ( E. y e. B ( ph /\ C e. A )
          -> ( A. y e. B A. z e. B ( ( ph /\ ps ) -> C = D )
                   <-> E. x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( wcel wa wrex wceq wi wral cv eleq1d anbi12d cbvrexv ax-17 hbra1 hbral 
      hbim eqeq1 eqcom syl6bb imbi2d ralbidv ralcom impexp bi2.04 bitri ralbii 
      r19.21v ra4 sylbi com3l imp31 syl5cbir reximdv ex com23 risset syl5ib 
      expimpd r19.23ai eufromeq0i impbid1 ) AHFLZMZDGNZABMHIOZPZEGQZDGQZACRZHOZ
      PZDGQZCFNZVMBIFLZMZEGNVQWBPZVLWDDEGDRZERZOZABVKWCJWHHIFKSTUAWDWEEGVQWBEVP
      EDGWFGLEUBVOEGUCUDWBEUBUEWGGLZBWCWEWIBMZVRIOZCFNZWEWCWJVQWLWBWJVQWLWBPWJV
      QMZWKWACFWKWAAVNPZDGQZWMWKVTWNDGWKVSVNAWKVSIHOVNVRIHUFIHUGUHUIUJWIBVQWOVQ
      WIBWOVQBWOPZEGQZWIWPPVQVODGQZEGQWQVODEGGUKWRWPEGWRBWNPZDGQWPVOWSDGVOABVNP
      PWSABVNULABVNUMUNUOBWNDGUPUNUOUNWPEGUQURUSUTVAVBVCVDCIFVEVFVGVHURABCDEFGH
      IJKVIVJ $.
      $( [27-Dec-1012] $)

    eufromeq0.3 $e |- ( ( y e. B /\ ph ) -> C e. A ) $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       See ~ eufromeq6 for the connection to uniqueness. $)
    eufromeq0 $p |- ( E. y e. B ph
          -> ( A. y e. B A. z e. B ( ( ph /\ ps ) -> C = D )
                   <-> E. x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( wrex wa wceq wi wral cv wcel cbvrexv eleq1d imbi12d ex vtoclga ancld 
      reximia sylbi ax-17 hbra1 hbral hbim eqeq1 eqcom syl6bb imbi2d ralbidv 
      ralcom impexp bi2.04 bitri ralbii r19.21v ra4 com3l imp31 syl5cbir 
      reximdv com23 risset syl5ib expimpd r19.23ai syl eufromeq0i impbid1 ) ADG
      MZABNHIOZPZEGQZDGQZACRZHOZPZDGQZCFMZVPBIFSZNZEGMZVTWEPZVPBEGMWHABDEGJTBWG
      EGERZGSZBWFAHFSZPBWFPDWJGDRZWJOZABWLWFJWNHIFKUAUBWMGSZAWLLUCUDUEUFUGWGWIE
      GVTWEEVSEDGWOEUHVREGUIUJWEEUHUKWKBWFWIWKBNZWAIOZCFMZWIWFWPVTWRWEWPVTWRWEP
      WPVTNZWQWDCFWQWDAVQPZDGQZWSWQWCWTDGWQWBVQAWQWBIHOVQWAIHULIHUMUNUOUPWKBVTX
      AVTWKBXAVTBXAPZEGQZWKXBPVTVRDGQZEGQXCVRDEGGUQXDXBEGXDBWTPZDGQXBVRXEDGVRAB
      VQPPXEABVQURABVQUSUTVABWTDGVBUTVAUTXBEGVCUGVDVEVFVGUCVHCIFVIVJVKVLVMABCDE
      FGHIJKVNVO $.
      $( [23-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq1 $p |- ( A =/= (/) -> ( E! x A. y e. A x = B
                     <-> E. x A. y e. A x = B ) ) $=
      ( vz c0 wne cv wcel wex wceq wral weu wb n0 hbra1 hbeu hbex hbbi wa wi 
      wal ra4 eqtr3 syl6com r19.26 syl5ibr 19.21aivv biantrud eqeq1 ralbidv 
      eu4 syl6rbbr 19.23ai sylbi ) CFGBHCIZBJAHZDKZBCLZAMZUSAJZNZBCOUPVBBUTVABU
      SBAURBCPZQUSBAVCRSUPVAVAUSEHZDKZBCLZTZUQVDKZUAZEUBAUBZTUTUPVJVAUPVIAEUPUR
      VETZBCLZVHVGVLUPVKVHVKBCUCUQVDDUDUEURVEBCUFUGUHUIUSVFAEVHURVEBCUQVDDUJUKU
      LUMUNUO $.
      $( [22-Oct-2010] $)
  $}

  ${
    $d v w x y z A $.  $d v w x z B $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq2 $p |- ( E! x A. y e. A x = B -> E! x E. y e. A x = B ) $=
      ( vz vw vv cv wceq wral weu wrex wi c0 wn wal wex eunex exnal sylib rzal 
      19.21aiv nsyl3 pm2.21 syl wne wa eqeq1 rexbidv eu4 euex adantl r19.2z ex 
      eximdv adantr mpd hbeu1 csb cvv crab cuni wreu ralbidv wcel ax-17 hbra1 
      hbrab hbuni hbeq ralbid reuuni3 visset biantrur eubii df-reu bitr4i 
      anidm 3imtr4i hbcsb1 raaan csbeq1a eqeq2d cbvral anbi2i eqeq12 eqtr2 
      syl5cbir ralimi sylbir r19.23v ralbii bitri hbeleq reean cbvrex syl5ibr 
      19.21ai sylanbrc pm2.61ine ) AHZDIZBCJZAKZXBBCLZAKZMZCNCNIZXDOXGXDXCAPZXH
      XDXCOAQXIOXCARXCASTXHXCAXBBCUAUBUCXDXFUDUECNUFZXDXFXFXEAQZXEEHZDIZBCLZUGZ
      XAXLIZMZEPZAPZXJXDUGZXEXNAEXPXBXMBCXAXLDUHZUIUJXTXCAQZXKXDYBXJXCAUKULXJYB
      XKMXDXJXCXEAXJXCXEXBBCUMUNUOUPUQXDXSXJXDXRAXCAURXDXQEXDXBXLBFHZDUSZIZUGZF
      CLZBCLZXPXOXDYFXPMZFCJZBCJZYHXPMZXDXMBCJZEUTVAZVBZDIZBCJZYQUGZYKXCAUTVCZY
      QXDYRXCYMYQAEUTXPXBXMBCYAVDXAYOIXBYPBCBGGXAYOGHZXAVEBVFBGYNYMBEGUTXMBCVGY
      TUTVEBVFVHVIZVJXAYODUHVKVLXDXAUTVEZXCUGZAKYSXCUUCAUUBXCAVMVNVOXCAUTVPVQYQ
      VRVSYRYPYOYDIZUGZFCJZBCJZYKUUGYQUUDFCJZUGYRYPUUDBFCYPFVFZBGGYOYDUUABGYCDF
      VMZYTYCVEBVFVTVJZWAYQUUHYQYPUUDBFCUUIUUKBHYCIZDYDYOBYCDWBZWCWDWEVQUUFYJBC
      UUEYIFCYFXPDYDIUUEXADXLYDWFYODYDWGWHWIWIWJUEYKYGXPMZBCJYLYJUUNBCYFXPFCWKW
      LYGXPBCWKWMTYHXEYEFCLZUGXOXBYEBFCCXBFVFBEYDBEYCDUUJXLYCVEBVFVTWNZWOXNUUOX
      EXMYEBFCXMFVFUUPUULDYDXLUUMWCWPWEVQWQUBWRULWSUNWT $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq3g $p |- ( A. y e. A B e. _V ->
          ( E! x E. y e. A x = B <-> E! x A. y e. A x = B ) ) $=
      ( vz cvv wcel wral cv wceq wrex weu wi c0 wex rex0 rexeq mtbiri nexdv 
      euex nsyl pm2.21d a1i wne wa weq wal eqeq1 imbi12d eqid a1bi eqcom 
      bitr3i syl6bb cla4gv ral2imi ralcom4 r19.23v albii bitri syl5ibr eximdv 
      ralbidv cbvexv syl6ibr adantld ax-17 eu3 syl5ib adantr wb eufromeq1 
      adantl sylibrd ex pm2.61dne eufromeq2 impbid1 ) DFGZBCHZAIZDJZBCKZALZWBBC
      HZALZVTWDWFMZCNCNJZWGMVTWHWDWFWHWCAOZWDWHWCAWHWCWBBNKWBBPWBBCNQRSWCATUAUB
      UCVTCNUDZWGVTWJUEWDWEAOZWFVTWDWKMWJVTWIWCAEUFZMZAUGZEOZUEWKWDVTWOWKWIVTWO
      EIZDJZBCHZEOWKVTWNWREVTWBWLMZAUGZBCHZWRWNVSWTWQBCWSWQADFWBWSDDJZDWPJZMZWQ
      WBWBXBWLXCWADDUHWADWPUHUIXDXCWQXBXCDUJUKDWPULUMUNUOUPXAWSBCHZAUGWNWSBACUQ
      XEWMAWBWLBCURUSUTVAVBWEWRAEWLWBWQBCWAWPDUHVCVDVEVFWCAEWCEVGVHVIVJWJWFWKVK
      VTABCDVLVMVNVOVPABCDVQVR $.
      $( [14-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    eufromeq3.1 $e |- B e. _V $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq3 $p |- ( E! x E. y e. A x = B <-> E! x A. y e. A x = B ) $=
      ( cvv wcel cv wceq wrex weu wral wb eufromeq3g a1i mprg ) DFGZAHDIZBCJAKR
      BCLAKMBCABCDNQBHCGEOP $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d x y z A $.  $d x z B $.  $d x z C $.  $d x z ph $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       This shows ~ eufromeq3 in a more general form. $)
    eufromeq4 $p |- ( E! x e. A E. y e. B ( ph /\ x = C )
            <-> E! x A. y e. B ( ( C e. A /\ ph ) -> x = C ) ) $=
      ( vz cv wceq wa wrex wreu wcel weu csb cab wi wral df-reu r19.42v wex 
      df-rex abid anbi1i eleq1 anbi2d anbi1d pm5.32ri anass bitr3i 3bitrri 
      exbii ax-17 hbab1 visset hbcsb1 hbeleq hban csbeq1a eqeq2d anbi12d cbvex 
      bitr4i 3bitri eubii cvv wb eufromeq3g simplr ss2abi sseli hbel eleq1d 
      elabf elisset sylbi syl mprg wal df-ral hbim imbi12d cbval bitri imbi1i 
      impexp albii 3bitr2i ) ABHZFIZJZCEKZBDLWIDMZWLJZBNWICGHZFOZIZGCHZEMZFDMZJ
      ZAJZCPZKZBNZWTAJZWJQZCERZBNZWLBDSWNXDBWNWMWKJZCEKZXDWMWKCETXKWSXJJZCUAWRX
      CMZWJJZCUAZXDXJCEUBXLXNCXNXBWJJZWSWMJZWKJZXLXMXBWJXBCUCZUDXPXQAJZWJJXRWJX
      TXBWJXQXAAWJWMWTWSWIFDUEUFUGUHXQAWJUIUJWSWMWKUIUKULXOWOXCMZWQJZGUAXDXNYBC
      GXNGUMYAWQCXBCGUNZCBWPCBWOFGUOZWIWOMCUMUPZUQZURWRWOIZXMYAWJWQWRWOXCUEZYGF
      WPWICWOFUSZUTZVAVBWQGXCUBVCVDUJVEXEWQGXCRZBNZXIWPVFMZXEYLVGGXCBGXCWPVHYAW
      OWTCPZMZYMXCYNWOXBWTCWSWTAVIVJVKYOWPDMZYMWTYPCWOCBGWPDYEWODMCUMVLYDYGFWPD
      YIVMVNWPDVOVPVQVRYKXHBYKYAWQQZGVSXMWJQZCVSZXHWQGXCVTYRYQCGYRGUMYAWQCYCYFW
      AYGXMYAWJWQYHYJWBWCYSWSXGQZCVSXHYRYTCYRWSXFJZWJQYTXMUUAWJXMXBUUAXSWSWTAUI
      WDWEWSXFWJWFWDWGXGCEVTVCWHVEWDVD $.
      $( [13-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x z C $.
    $( Lemma for ~ eufromeq6 and ~ eufromeq5 . $)
    eufromeq5lem $p |- ( B =/= (/) -> ( E! x e. A A. y e. B x = C
                     <-> E. x e. A A. y e. B x = C ) ) $=
      ( vz c0 wne cv wcel wex wceq wral wreu wrex wb n0 ax-17 hbra1 hbreu 
      hbrex hbbi wa wi ra4 eqtr3 syl6com r19.26 syl5ibr a1d r19.21aivv 
      biantrud eqeq1 ralbidv reu4 syl6rbbr 19.23ai sylbi ) DGHBIDJZBKAIZELZBDMZ
      ACNZVBACOZPZBDQUSVEBVCVDBVBBACUTCJZBRZVABDSZTVBBACVGVHUAUBUSVDVDVBFIZELZB
      DMZUCZUTVILZUDZFCMACMZUCVCUSVOVDUSVNAFCCUSVNVFVICJUCUSVAVJUCZBDMZVMVLVQUS
      VPVMVPBDUEUTVIEUFUGVAVJBDUHUIUJUKULVBVKAFCVMVAVJBDUTVIEUMUNUOUPUQUR $.
      $( [22-Oct-2010] $)
  $}

  ${
    $d x z A $.  $d w x z B $.  $d x z C $.  $d w x z ph $.  $d w x y z $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq6 $p |- ( E. y e. B ph
       -> ( E! x e. A A. y e. B ( ph -> x = C )
                   <-> E. x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( vz vw wrex cv wcel wa cab c0 wne wceq wi wral wreu wb crab rabn0 
      df-rab neeq1i bitr3i csb eufromeq5lem hbab1 ax-17 visset hbcsb1 hbeleq 
      csbeq1a eqeq2d cbvralf reubii rexbii 3bitr4g abid imbi1i impexp bitr2i 
      ralbii2 sylbi ) ACEIZCJZEKZALZCMZNOZABJZFPZQZCERZBDSZVNBDIZTVEACEUAZNOVJA
      CEUBVQVINACEUCUDUEVJVLCVIRZBDSZVRBDIZVOVPVJVKCGJZFUFZPZGVIRZBDSWDBDIVSVTB
      GDVIWBUGVRWDBDVLWCCGHVIVHCHUHHJVIKGUIVLGUICBWBCBWAFGUJVKWAKCUIUKULVFWAPFW
      BVKCWAFUMUNUOZUPVRWDBDWEUQURVNVRBDVMVLCEVIVFVIKZVLQVHVLQVGVMQWFVHVLVHCUSU
      TVGAVLVAVBVCZUPVNVRBDWGUQURVD $.
      $( [16-Dec-2012] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x C $.  $d x y $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    eufromeq5 $p |- ( B =/= (/) -> ( E! x e. A A. y e. B x = C
                     <-> E. x e. A A. y e. B x = C ) ) $=
      ( c0 wne cv wceq wrex wral wreu wb wcel wex wa equid biantru exbii n0 
      df-rex 3bitr4i wi eufromeq6 a1bi ralbii reubii rexbii 3bitr4g sylbi ) DFG
      ZBHZULIZBDJZAHEIZBDKZACLZUPACJZMULDNZBOUSUMPZBOUKUNUSUTBUMUSBQZRSBDTUMBDU
      AUBUNUMUOUCZBDKZACLVCACJUQURUMABCDEUDUPVCACUOVBBDUMUOVAUEUFZUGUPVCACVDUHU
      IUJ $.
      $( [16-Dec-2012] $)
  $}

  ${
    $d v w x y z A $.  $d v w x y z B $.  $d v w x z C $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       The converse does not hold.  Note that ` U. A = |^| A ` means ` A ` is a
       singleton ( ~ uniintsn ). $)
    eufromeq7 $p |- ( ( U. A =/= |^| A \/ B =/= (/) )
          -> ( E! x e. A A. y e. B x = C -> E! x e. A E. y e. B x = C ) ) $=
      ( vz vw vv cuni cint wne cv wceq wral wreu wrex wi c0 wn raleq reubidv 
      wcel wa weu df-reu csn wex uniintsn eusn ral0 biantru eubii 3bitr2i 
      bitr4i syl6bb necon3bbid pm2.21 syl6bir eqeq1 rexbidv reu4 reurex adantl 
      r19.2z ex reximdv adantr mpd hbreu1 csb crab ralbidv ax-17 hbra1 hbrab 
      hbuni hbeq ralbid reuuni3 anidm sylibr visset hbcsb1 raaan csbeq1a 
      eqeq2d cbvral anbi2i eqeq12 eqtr2 syl5cbir ralimi sylbir syl r19.23v 
      ralbii bitri sylib hbeleq reean cbvrex syl5ibr a1d r19.21aiv r19.21ai 
      sylanbrc pm2.61ine jaoi ) CIZCJZKZALZEMZBDNZACOZXMBDPZACOZQZDRKZXKXRQDRDR
      MZXKXOSXRXTXOXIXJXTXOXMBRNZACOZXIXJMZXTXNYAACXMBDRTUAYBXLCUBZYAUCZAUDZYCY
      AACUEYCCXLUFMAUGYDAUDYFACUHACUIYDYEAYAYDXMBUJUKULUMUNUOUPXOXQUQURXSXRXKXS
      XOXQXQXPACPZXPFLZEMZBDPZUCZXLYHMZQZFCNZACNZXSXOUCZXPYJAFCYLXMYIBDXLYHEUSZ
      UTVAYPXNACPZYGXOYRXSXNACVBVCXSYRYGQXOXSXNXPACXSXNXPXMBDVDVEVFVGVHXOYOXSXO
      YNACXNACVIXOYNYDXOYMFCXOYMYHCUBXOXMYHBGLZEVJZMZUCZGDPZBDPZYLYKXOUUBYLQZGD
      NZBDNZUUDYLQZXOYIBDNZFCVKZIZEMZBDNZUUMUCZUUGXOUUMUUNXNUUIUUMAFCYLXMYIBDYQ
      VLXLUUKMXMUULBDBHHXLUUKHLZXLUBBVMBHUUJUUIBFHCYIBDVNUUOCUBBVMVOVPZVQXLUUKE
      USVRVSUUMVTWAUUNUULUUKYTMZUCZGDNZBDNZUUGUUTUUMUUQGDNZUCUUNUULUUQBGDUULGVM
      ZBHHUUKYTUUPBHYSEGWBZUUOYSUBBVMWCVQZWDUUMUVAUUMUULUUQBGDUVBUVDBLYSMZEYTUU
      KBYSEWEZWFWGWHUNUUSUUFBDUURUUEGDUUBYLEYTMUURXLEYHYTWIUUKEYTWJWKWLWLWMWNUU
      GUUCYLQZBDNUUHUUFUVGBDUUBYLGDWOWPUUCYLBDWOWQWRUUDXPUUAGDPZUCYKXMUUABGDDXM
      GVMBFYTBFYSEUVCYHYSUBBVMWCWSZWTYJUVHXPYIUUABGDYIGVMUVIUVEEYTYHUVFWFXAWHUN
      XBXCXDXCXEVCXFVEZXCXGUVJXH $.
      $( [30-Oct-2010] $)

    $( Two ways of expressing existential uniqueness via an indirect equality.
       The converse does not hold.  Note that ` U. A = |^| A ` means ` A ` is a
       singleton ( ~ uniintsn ). $)
$(
    eufromeq7a $p |- ( ( U. A =/= |^| A \/ E. y e. A ph )
          -> ( E! x e. A A. y e. B ( ph -> x = C )
                 -> E! x e. A E. y e. B ( ph /\ x = C ) ) ) $=
? $.
$)
      $( [1-Jan-1013] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x z C $.  $d x z ph $.
    eufromeq8.1 $e |- ( y e. B -> C e. A ) $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       Note that ` U. A = |^| A ` means ` A ` is a singleton ( ~ uniintsn ). $)
    eufromeq8 $p |- ( ( U. A =/= |^| A \/ B =/= (/) )
          -> ( E! x e. A E. y e. B x = C <-> E! x e. A A. y e. B x = C ) ) $=
      ( vz cuni cint wne cv wceq wrex wreu wral wb c0 wi wn wa raleq reubidv 
      wcel weu df-reu csn wex uniintsn eusn ral0 biantru eubii 3bitr2i bitr4i 
      syl6bb necon3bbid biimprd reurex rexn0 a1i r19.23aiv syl necon2bi jctild 
      pm5.21 syl6 r19.28zv eubidv eufromeq4 equid biantrur rexbii reubii 
      biantrurd eleq1 pm5.32ri syl6rbbr biimt bitrd imbi1i ralbiia 3bitr4i 
      3bitr4g a1d pm2.61ine jaoi ) CHZCIZJZAKZELZBDMZACNZWKBDOZACNZPZDQJZWIWPRD
      QDQLZWIWMSZWOSZTWPWRWIWTWSWRWTWIWRWOWGWHWRWOWKBQOZACNZWGWHLZWRWNXAACWKBDQ
      UAUBXBWJCUCZXATZAUDZXCXAACUEXCCWJUFLAUGXDAUDXFACUHACUIXDXEAXAXDWKBUJUKULU
      MUNUOUPUQWMDQWMWLACMWQWLACURWLWQACWLWQRXDWKBDUSUTVAVBVCVDWMWOVEVFWQWPWIWQ
      XDWKTZBDOZAUDZXDWNTZAUDWMWOWQXHXJAXDWKBDVGVHGKZXKLZWKTZBDMZACNECUCZXLTZWK
      RZBDOZAUDWMXIXLABCDEVIWLXNACWKXMBDXLWKGVJZVKVLVMXHXRAXGXQBDBKDUCZXGXOWKRZ
      XQXTXGWKYAXTWKXOWKTXGXTXOWKFVNWKXDXOWJECVOVPVQXTXOWKYAPFXOWKVRVBVSXOXPWKX
      LXOXSUKVTUOWAULWBWNACUEWCZWDWEYBWF $.
      $( [14-Dec-2012] $)
  $}

  ${
    $d w x y z A $.  $d w x z B $.  $d x z C $.  $d w x z ph $.
    eufromeq9.1 $e |- ( ( y e. B /\ ph ) -> C e. A ) $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       Note that ` U. A = |^| A ` means ` A ` is a singleton ( ~ uniintsn ). $)
    eufromeq9 $p |- ( ( U. A =/= |^| A \/ E. y e. B ph )
          -> ( E! x e. A E. y e. B ( ph /\ x = C )
                   <-> E! x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( vz vw cuni cint wne wrex wo cv wcel wa cab c0 wceq wreu wi wral wb 
      crab rabn0 df-rab neeq1i bitr3i orbi2i csb wsbc df-clab sbimi sylbi cvv 
      visset sbcel1g ax-mp sylib eufromeq8 hbab1 ax-17 hbcsb1 hbeleq csbeq1a 
      eqeq2d cbvrexf reubii cbvralf 3bitr4g abid anbi1i anass bitr2i rexbii2 
      imbi1i impexp ralbii2 ) DJDKLZACEMZNVTCOZEPZAQZCRZSLZNZABOZFTZQZCEMZBDUAZ
      AWIUBZCEUCZBDUAZUDWAWFVTWAACEUEZSLWFACEUFWPWESACEUGUHUIUJWGWICWEMZBDUAZWI
      CWEUCZBDUAZWLWOWGWHCHOZFUKZTZHWEMZBDUAXCHWEUCZBDUAWRWTBHDWEXBXAWEPZFDPZCX
      AULZXBDPZXFWDCXAULXHWDHCUMWDXGCHGUNUOXAUPPXHXIUDHUQZCXAFDUPURUSUTVAWQXDBD
      WIXCCHIWEWDCIVBZIOWEPHVCZWIHVCZCBXBCBXAFXJWHXAPCVCVDVEZWBXATFXBWHCXAFVFVG
      ZVHVIWSXEBDWIXCCHIWEXKXLXMXNXOVJVIVKWKWQBDWJWICEWEWBWEPZWIQWDWIQWCWJQXPWD
      WIWDCVLZVMWCAWIVNVOVPVIWNWSBDWMWICEWEXPWIUBWDWIUBWCWMUBXPWDWIXQVQWCAWIVRV
      OVSVIVKUO $.
      $( [16-Dec-2012] $)
  $}

  ${
    $d w x y z A $.  $d w x z B $.  $d x z C $.  $d w x z ph $.
    $( Two ways of expressing existential uniqueness via an indirect equality.
       Note that ` U. A = |^| A ` means ` A ` is a singleton ( ~ uniintsn ). $)
$(
    eufromeq9a $p |- ( ( U. A =/= |^| A
                \/ ( E. y e. B ph /\ A. y e. B C e. A ) )
          -> ( E! x e. A E. y e. B ( ph /\ x = C )
                   <-> E! x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( rabn0 df-rab neeq1i bitr3i orbi2i 3bitr4g sylbi ) ????????????G??????HI
      JK????????LM $.
$)
      $( [1-Jan-1013] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    euobj1.1 $e |- B e. _V $.
    $( The two existential uniqueness expressions of ~ eufromeq3 specify the
       same object. $)
    euobj1 $p |- ( E! x E. y e. A x = B
       -> U. { x | E. y e. A x = B } = U. { x | A. y e. A x = B } ) $=
      ( vz cv wceq wrex weu wcel wex cab cuni wral wa cvv crab eufromeq3 wreu 
      reuv eqeq1 ralbidv hbra1 ax-17 hbrab hbuni hbeleq ralbid reuuni3 sylbir 
      sylbi rexbidv hbre1 rexbid r19.29 syl11anc eqtr3 cbvabv rabab eqtr4i 
      unieqi 3eqtr4g ancoms reximi syl df-rex hbab hbeq 19.41 bitri sylib 
      simprd ) AGZDHZBCIZAJZBGCKZBLZVPAMZNZVOBCOZAMZNZHZVQWEBCIZVSWEPZVQFGZDHZB
      COZFQRZNZDHZWIBCIZFQRZNZDHZPZBCIZWFVQWMBCOZWQBCIZWSVQWBAJZWTABCDESXBWBAQT
      WTWBAUAWBWJWTAFQVNWHHZVOWIBCVNWHDUBZUCZVNWLHVOWMBCBAWLBAWKWJBFAQWIBCUDVNQ
      KBUEZUFUGUHVNWLDUBUIUJUKULVQVPAQTXAVPAUAVPWNXAAFQXCVOWIBCXDUMZVNWPHVOWQBC
      BAWPBAWOWNBFAQWIBCUNXFUFUGUHVNWPDUBUOUJUKWMWQBCUPUQWRWEBCWQWMWEWQWMPWPWLW
      AWDWPWLDURVTWOVTWNFMWOVPWNAFXGUSWNFUTVAVBWCWKWCWJFMWKWBWJAFXEUSWJFUTVAVBV
      CVDVEVFWFVRWEPBLWGWEBCVGVRWEBBFFWAWDBFVTVPBAFVOBCUNVHUGBFWCWBBAFVOBCUDVHU
      GVIVJVKVLVM $.
      $( [1-Nov-2010] $)

    $( The two existential uniqueness expressions of ~ eufromeq3 specify the
       same property. $)
    euobj2 $p |- ( E! x E. y e. A x = B
       -> ( E. y e. A x = B <-> A. y e. A x = B ) ) $=
      ( cv wceq wrex weu cab wcel wral cvv crab cuni csn euobj1 rabab unieqi 
      3eqtr4g sneqd wreu reuv reuunisn sylbir eufromeq3 bitr4i sylbi 3eqtr4d 
      3eqtr3g eleq2d abid 3bitr3g ) AFZDGZBCHZAIZUNUPAJZKUNUOBCLZAJZKUPUSUQURUT
      UNUQUPAMNZUSAMNZURUTUQVAOZPZVBOZPZVAVBUQVCVEUQUROUTOVCVEABCDEQVAURUPARZSV
      BUTUSARZSTUAUQUPAMUBVAVDGUPAUCUPAMUDUEUQUSAMUBZVBVFGUQUSAIVIABCDEUFUSAUCU
      GUSAMUDUHUIVGVHUJUKUPAULUSAULUM $.
      $( [29-Jul-2011] $) $( [1-Nov-2010] $)
  $}

  ${
    $d x A $.  $d y ph $.  $d x ps $.  $d x y $.
    alxfr.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    alxfr $p |- ( ( A. y A e. B /\ A. x E. y x = A ) ->
                ( A. x ph <-> A. y ps ) ) $=
      ( wcel wal cv wceq wex wa wi hba1 ax-17 cla4gv a4s 19.21ad adantr hbim 
      ax-4 syl5bir 19.23ai adantl impbid ) EFHZDIZCJEKZDLZCIZMACIZBDIZUHULUMNUK
      UHULBDUGDOULDPUGULBNDABCEFGQRSTUKUMULNUHUKUMACUJCOUMCPUJUMANZCUIUNDUMADBD
      OADPUAUIABUMGBDUBUCUDRSUEUF $.
      $( [18-Feb-2007] $)
  $}

  ${
    $d x y ph $.  $d x ch $.  $d y ps $.  $d x A $.  $d x y B $.
    ralxfrd.1 $e |- ( ( ph /\ y e. B ) -> A e. B ) $.
    ralxfrd.2 $e |- ( ( ph /\ x e. B ) -> E. y e. B x = A ) $.
    ralxfrd.3 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    ralxfrd $p |- ( ph -> ( A. x e. B ps <-> A. y e. B ch ) ) $=
      ( wral cv wcel wi ex rcla4dv syld com23 r19.21adv wceq wrex wa ax-17 
      hbra1 hban ra4 exbiri sylan9r r19.23ad syl5d impbid ) ABDGKZCEGKZAULCEGAE
      LGMZULCAUNFGMZULCNZAUNUOHOAUOUPABCDFGJPOQRSAUMBDGAUMDLZFTZEGUAZBUQGMZAUMU
      SBNAUMUBURBEGAUMEAEUCCEGUDUEBEUCUMUNCAURBNCEGUFAURCBAURBCJUGRUHUIOAUTUSIO
      UJSUK $.
      $( [17-Feb-2007] $)

    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  (Contributed by FL,
       10-Apr-2007.) $)
    rexxfrd $p |- ( ph -> ( E. x e. B ps <-> E. y e. B ch ) ) $=
      ( wn wral wrex cv wceq wa notbid ralxfrd dfrex2 3bitr4g ) ABKZDGLZKCKZEGL
      ZKBDGMCEGMAUBUDAUAUCDEFGHIADNFOPBCJQRQBDGSCEGST $.
      $( [10-Apr-2007] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.  $d x y B $.
    ralxfr.1 $e |- ( y e. B -> A e. B ) $.
    ralxfr.2 $e |- ( x e. B -> E. y e. B x = A ) $.
    ralxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    ralxfr $p |- ( A. x e. B ph <-> A. y e. B ps ) $=
      ( wral cv wcel wi rcla4v syl com12 r19.21aiv wceq wrex hbra1 ax-17 ra4 
      biimprcd syl6 r19.23ad syl5 impbii ) ACFJZBDFJZUHBDFDKFLZUHBUJEFLUHBMGABC
      EFINOPQUIACFUICKZERZDFSAUKFLUIULADFBDFTADUAUIUJBULAMBDFUBULABIUCUDUEHUFQU
      G $.
      $( [10-Jun-2005] $)

    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    ralxfrALT $p |- ( A. x e. B ph <-> A. y e. B ps ) $=
      ( cvv wceq wral wb eqid cv wcel adantl wrex ralxfrd ax-mp ) JJKZACFLBDFLM
      JNUAABCDEFDOFPEFPUAGQCOZFPUBEKZDFRUAHQUCABMUAIQST $.
      $( [10-Jun-2005] $)

    $( Transfer existence from a variable ` x ` to another variable ` y `
       contained in expression ` A ` . $)
    rexxfr $p |- ( E. x e. B ph <-> E. y e. B ps ) $=
      ( wn wral wrex cv wceq notbid ralxfr notbii dfrex2 3bitr4i ) AJZCFKZJBJZD
      FKZJACFLBDFLUAUCTUBCDEFGHCMENABIOPQACFRBDFRS $.
      $( [10-Jun-2005] $)
  $}

  ${
    $d x A $.  $d z B $.  $d z C $.  $d x y z D $.  $d y ph $.  $d y z ps $.
    $d x z ch $.
    rabxfrd.1 $e |- ( z e. B -> A. y z e. B ) $.
    rabxfrd.2 $e |- ( z e. C -> A. y z e. C ) $.
    rabxfrd.3 $e |- ( ( ph /\ y e. D ) -> A e. D ) $.
    rabxfrd.4 $e |- ( x = A -> ( ps <-> ch ) ) $.
    rabxfrd.5 $e |- ( y = B -> A = C ) $.
    $( Class builder membership after substituting an expression ` A `
       (containing ` y ` ) for ` x ` in the class expression ` ch ` . $)
    rabxfrd $p |- ( ( ph /\ B e. D ) ->
                 ( C e. { x e. D | ps } <-> B e. { y e. D | ch } ) ) $=
      ( wcel crab wb wa wi cv ex ibibr sylib imp anbi1d elrab rabid 3bitr4g 
      rabbidva eleq2d ax-17 hbel wceq eleq1d elrabf hbrab1 eleq1 3bitr3g 
      pm5.32 sylibr ) AHJPZIBDJQZPZHCEJQZPZRZAVBVDSZVBVFSZRVBVGTAHGVCPZEJQZPHEU
      AZVEPZEJQZPVHVIAVKVNHAVJVMEJAVLJPZSZGJPZCSVOCSVJVMVPVQVOCAVOVQVORZAVOVQTV
      OVRTAVOVQMUBVOVQUCUDUEUFBCDGJNUGCEJUHUIUJUKVJVDEFHJKFUAZJPEULZEFFIVCLVSVC
      PEULUMVLHUNGIVCOUOUPVMVFEFHJKVTEFFHVEKCEFJUQUMVLHVEURUPUSVBVDVFUTVAUE $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d x A $.  $d z B $.  $d z C $.  $d x y z D $.  $d y z ph $.  $d x z ps $.
    rabxfr.1 $e |- ( z e. B -> A. y z e. B ) $.
    rabxfr.2 $e |- ( z e. C -> A. y z e. C ) $.
    rabxfr.3 $e |- ( y e. D -> A e. D ) $.
    rabxfr.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    rabxfr.5 $e |- ( y = B -> A = C ) $.
    $( Class builder membership after substituting an expression ` A `
       (containing ` y ` ) for ` x ` in the class expression ` ph ` . $)
    rabxfr $p |- ( B e. D ->
                 ( C e. { x e. D | ph } <-> B e. { y e. D | ps } ) ) $=
      ( cv wceq wcel crab wb equid adantl rabxfrd mpan ) COZUDPZGIQHACIRQGBDIRQ
      SCTUEABCDEFGHIJKDOIQFIQUELUAMNUBUC $.
      $( [10-Jun-2005] $)
  $}

  ${
    $d x y ph $.  $d x ps $.  $d x A $.  $d x y B $.
    reuxfr2d.1 $e |- ( ( ph /\ y e. B ) -> A e. B ) $.
    reuxfr2d.2 $e |- ( ( ph /\ x e. B ) -> E* y ( y e. B /\ x = A ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    reuxfr2d $p |- ( ph
        -> ( E! x e. B E. y e. B ( x = A /\ ps ) <-> E! y e. B ps ) ) $=
      ( cv wceq wa wrex wreu wcel wmo wral wi moan syl ancom anass bitri mobii 
      sylib r19.21aiva 2reuswap moeq moani an12 mpbi a1i mprg impbid1 wb biidd 
      ceqsrexv reubidva bitrd ) ACIZEJZBKZDFLCFMZVACFLZDFMZBDFMAVBVDADIFNZVAKZD
      OZCFPVBVDQAVGCFAUSFNZKZBVEUTKZKZDOZVGVIVJDOVLHVJBDRSVKVFDVKVJBKVFBVJTVEUT
      BUAUBUCUDUEVACDFUFSVHVAKZCOZVDVBQDFVADCFUFVNVEVHBKZUTKZCOVNUTVOCCEUGUHVPV
      MCVPUTVOKVMVOUTTUTVHBUIUBUCUJUKULUMAVCBDFAVEKEFNVCBUNGBBCEFUTBUOUPSUQUR 
      $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x y B $.
    reuxfr2.1 $e |- ( y e. B -> A e. B ) $.
    reuxfr2.2 $e |- ( x e. B -> E* y ( y e. B /\ x = A ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    reuxfr2 $p |- ( E! x e. B E. y e. B ( x = A /\ ph ) <-> E! y e. B ph ) $=
      ( cv wceq wa wrex wreu wcel wmo wi 2reuswap moan syl ancom anass bitri 
      mobii sylib mprg moeq moani an12 mpbi a1i impbii wb biidd ceqsrexv 
      reubiia ) BHZDIZAJZCEKBELZUQBEKZCELZACELURUTCHEMZUQJZCNZURUTOBEUQBCEPUOEM
      ZAVAUPJZJZCNZVCVDVECNVGGVEACQRVFVBCVFVEAJVBAVESVAUPATUAUBUCUDVDUQJZBNZUTU
      ROCEUQCBEPVIVAVDAJZUPJZBNVIUPVJBBDUEUFVKVHBVKUPVJJVHVJUPSUPVDAUGUAUBUHUIU
      DUJUSACEVADEMUSAUKFAABDEUPAULUMRUNUA $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d x y ph $.  $d y ps $.  $d x ch $.  $d x A $.  $d x y B $.
    reuxfrd.1 $e |- ( ( ph /\ y e. B ) -> A e. B ) $.
    reuxfrd.2 $e |- ( ( ph /\ x e. B ) -> E! y e. B x = A ) $.
    reuxfrd.3 $e |- ( x = A -> ( ps <-> ch ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  Use ~ reuhypd to
       eliminate the second hypothesis. $)
    reuxfrd $p |- ( ph -> ( E! x e. B ps <-> E! y e. B ch ) ) $=
      ( wreu cv wceq wa wrex wcel reurex syl biantrurd r19.41v pm5.32i rexbii 
      bitr3i syl6bb reubidva wmo weu df-reu eumo sylbi reuxfr2d bitrd ) ABDGKDL
      ZFMZCNZEGOZDGKCEGKABUPDGAUMGPNZBUNEGOZBNZUPUQURBUQUNEGKZURIUNEGQRSUSUNBNZ
      EGOUPUNBEGTVAUOEGUNBCJUAUBUCUDUEACDEFGHUQUTELGPUNNZEUFZIUTVBEUGVCUNEGUHVB
      EUIUJRUKUL $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.  $d x y B $.
    reuxfr.1 $e |- ( y e. B -> A e. B ) $.
    reuxfr.2 $e |- ( x e. B -> E! y e. B x = A ) $.
    reuxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  Use ~ reuhyp to
       eliminate the second hypothesis. $)
    reuxfr $p |- ( E! x e. B ph <-> E! y e. B ps ) $=
      ( wceq wreu wb eqid cv wcel adantl reuxfrd ax-mp ) FFJZACFKBDFKLFMSABCDEF
      DNFOEFOSGPCNZFOTEJDFKSHPIQR $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d y ph $.  $d y B $.  $d y C $.  $d x y $.
    reuhypd.1 $e |- ( ( ph /\ x e. C ) -> B e. C ) $.
    reuhypd.2 $e |- ( ( ph /\ x e. C /\ y e. C ) -> ( x = A <-> y = B ) ) $.
    $( A theorem useful for eliminating the restricted existential uniqueness
       hypotheses in ~ riotaxfrd . $)
    reuhypd $p |- ( ( ph /\ x e. C ) -> E! y e. C x = A ) $=
      ( cv wcel wa wceq weu wreu cvv elisset syl eueq sylib eleq1 syl5cbir 
      pm4.71rd wb 3expa pm5.32da bitr4d eubidv mpbid df-reu sylibr ) ABIZFJZKZC
      IZFJZUKDLZKZCMZUPCFNUMUNELZCMZURUMEOJZUTUMEFJZVAGEFPQCERSUMUSUQCUMUSUOUSK
      UQUMUSUOUSUOVBUMUNEFTGUAUBUMUOUPUSAULUOUPUSUCHUDUEUFUGUHUPCFUIUJ $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d y B $.  $d y C $.  $d x y $.
    reuhyp.1 $e |- ( x e. C -> B e. C ) $.
    reuhyp.2 $e |- ( ( x e. C /\ y e. C ) -> ( x = A <-> y = B ) ) $.
    $( A theorem useful for eliminating the restricted existential uniqueness
       hypotheses in ~ reuxfr . $)
    reuhyp $p |- ( x e. C -> E! y e. C x = A ) $=
      ( cv wceq wcel wreu equid adantl wb 3adant1 reuhypd mpan ) AHZRIZREJZRCIZ
      BEKALSABCDETDEJSFMTBHZEJUAUBDINSGOPQ $.
      $( [15-Nov-2004] $)
  $}

  ${
    $d x B $.  $d x z C $.  $d x y z A $.  $d ph y z $.  $d ps x z $.
    reuunixfr.1 $e |- ( z e. C -> A. y z e. C ) $.
    reuunixfr.2 $e |- ( y e. A -> B e. A ) $.
    reuunixfr.3 $e |- ( U. { y e. A | ps } e. A -> C e. A ) $.
    reuunixfr.4 $e |- ( x = B -> ( ph <-> ps ) ) $.
    reuunixfr.5 $e |- ( y = U. { y e. A | ps } -> B = C ) $.
    reuunixfr.6 $e |- ( x e. A -> E! y e. A x = B ) $.
    $( Change the variable ` x ` in the expression for "the unique ` A ` such
       that ` ph ` " to another variable ` y ` contained in expression ` B ` .
       Use ~ reuhyp to eliminate the last hypothesis. $)
    reuunixfr $p |- ( E! x e. A ph -> U. { x e. A | ph } = C ) $=
      ( wreu cv crab wcel cuni wceq reuxfr reucl2 wb reucl hbrab1 hbuni rabxfr 
      syl mpbird sylbi rabid baibr reubiia biimpi ax-17 wal wi hbel a1i eleq1 
      reuuni2f syl11anc mpbid baib rabbiia unieqi syl5eqr ) ACFOZCPZACFQZRZCFQZ
      SZHVJSVHHVJRZVMHTZVHBDFOZVNABCDGFJNLUAZVPVNBDFQZSZVRRZBDFUBVPVSFRZVNVTUCB
      DFUDZABCDEGVSHFDEVRBDEFUEUFIJLMUGUHUIUJVHHFRZVKCFOZVNVOUCVHVPWCVQVPWAWCWB
      KUHUJVHWDAVKCFVKVIFRZAACFUKZULUMUNVKVNCEFHEPHRCUOZVNVNCUPUQWCCEEHVJWGACEF
      UEURUSVIHVJUTVAVBVCVLVJVKACFVKWEAWFVDVEVFVG $.
      $( [13-Jun-2005] $)
  $}

  $( The Axiom of Union and its converse.  A class is a set iff its union is a
     set. $)
  uniexb $p |- ( A e. _V <-> U. A e. _V ) $=
    ( cvv wcel cuni uniexg cpw wss ssexg pwuni pwexg sylancr impbii ) ABCZADZBC
    ZABEANFZGPBCMOAPBHAINBJKL $.
    $( [11-Nov-2003] $)

  $( The Axiom of Power Sets and its converse.  A class is a set iff its power
     class is a set. $)
  pwexb $p |- ( A e. _V <-> ~P A e. _V ) $=
    ( cpw cvv wcel cuni uniexb unipw eleq1i bitr2i ) ABZCDJEZCDACDJFKACAGHI $.
    $( [11-Nov-2003] $)

  $( The union of the universe is the universe.  Exercise 4.12(c) of
     [Mendelson] p. 235. $)
  univ $p |- U. _V = _V $=
    ( cvv cpw cuni pwv unieqi unipw eqtr3i ) ABZCACAHADEAFG $.
    $( [14-Sep-2003] $)

  ${
    eldifpw.1 $e |- C e. _V $.
    $( Membership in a power class difference. $)
    eldifpw $p |- ( ( A e. ~P B /\ -. C C_ B ) ->
                   ( A u. C ) e. ( ~P ( B u. C ) \ ~P B ) ) $=
      ( cpw wcel wss wn wa cun cdif elpwi cvv wb unexg mpan2 elpwg syl unss1 
      syl5bir mpd unss simpr sylbir con3i anim12i eldif sylibr ) ABEZFZCBGZHZIA
      CJZBCJZEZFZUMUIFZHZIUMUOUIKFUJUPULURUJABGZUPABLUJUPUMUNGZUSUJUMMFZUPUTNUJ
      CMFVADACUIMOPUMUNMQRABCSTUAUQUKUQUMBGZUKUMBLVBUSUKIUKACBUBUSUKUCUDRUEUFUM
      UOUIUGUH $.
      $( [25-Mar-2007] $)

    $( Membership in the power class of a union. $)
    elpwun $p |- ( A e. ~P ( B u. C ) <-> ( A \ C ) e. ~P B ) $=
      ( cun cpw wcel cvv cdif elisset wb difex2 ax-mp sylibr wss elpwg difexg 
      syl uncom sseq2i ssundif bitri syl6rbbr bitrd pm5.21nii ) ABCEZFZGZAHGZAC
      IZBFZGZAUGJULUJHGZUIUJUKJCHGUIUMKDACHLMNUIUHAUFOZULAUFHPUIULUJBOZUNUIUMUL
      UOKACHQUJBHPRUNACBEZOUOUFUPABCSTACBUAUBUCUDUE $.
      $( [26-Mar-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in an extension of a power class. $)
    elpwunsn $p |- ( A e. ( ~P ( B u. { C } ) \ ~P B ) -> C e. A ) $=
      ( vx csn cun cpw cdif wcel wn wa eldif cv wrex wral wss elpwg dfss3 
      syl6bb notbid biimpa rexnal sylibr wi wceq elpwi ssel wo elun elsni 
      orim2i ord sylbi imim2i imp3a syl eleq1 biimpd 3syl exp3a com4r pm2.43b 
      r19.23adv imp syldan ) ABCEZFZGZBGZHIAVHIZAVIIZJZKZCAIZAVHVILVJVLDMZBIZJZ
      DANZVNVMVPDAOZJZVRVJVLVTVJVKVSVJVKABPVSABVHQDABRSTUAVPDAUBUCVJVRVNVJVQVND
      AVJVOAIZVQVNUDVJWAVQWAVNVJWAVQWAVNUDZVJAVGPZWAVQKZVOCUEZUDZWDWBUDAVGUFWCW
      AVOVGIZUDZWFAVGVOUGWHWAVQWEWGVQWEUDZWAWGVPVOVFIZUHZWIVOBVFUIWKVPWEWJWEVPV
      OCUJUKULUMUNUOUPWEWBWDWEWAVNVOCAUQURUNUSUTVAVBVCVDVEUM $.
      $( [26-Mar-2007] $)
  $}

  ${
    op1stb.1 $e |- A e. _V $.
    $( Extract the first member of an ordered pair.  Theorem 73 of [Suppes]
       p. 42.  (See ~ op2ndb to extract the second member, ~ op1sta for an
       alternate version, and ~ op1st for the preferred version.) $)
    op1stb $p |- |^| |^| <. A , B >. = A $=
      ( cop cint csn cpr cin df-op inteqi snex prex intpr wss wceq snsspr1 
      df-ss mpbi 3eqtri intsn eqtri ) ABDZEZEAFZEAUCUDUCUDABGZGZEUDUEHZUDUBUFAB
      IJUDUEAKABLMUDUENUGUDOABPUDUEQRSJACTUA $.
      $( [25-Nov-2003] $)
  $}

  ${
    $d x y A $.
    iunpw.1 $e |- A e. _V $.
    $( An indexed union of a power class in terms of the power class of the
       union of its index.  Part of Exercise 24(b) of [Enderton] p. 33. $)
    iunpw $p |- ( E. x e. A x = U. A <-> ~P U. A = U_ x e. A ~P x ) $=
      ( vy cv cuni wceq wrex cpw ciun wss wcel sseq2 biimprcd reximdv com12 
      ssiun uniiun syl6ssr impbid1 visset elpw eliun df-pw abeq2i rexbii bitri 
      3bitr4g eqrdv ssid eleq2 uniex syl5bbr mpbii sylib wa elssuni elpwi 
      anim12i eqss sylibr ex reximia syl impbii ) AEZBFZGZABHZVGIZABVFIZJZGZVID
      VJVLVIDEZVGKZVNVFKZABHZVNVJLVNVLLZVIVOVQVOVIVQVOVHVPABVHVPVOVFVGVNMNOPVQV
      NABVFJVGABVFVNQABRSTVNVGDUAUBVRVNVKLZABHVQAVNBVKUCVSVPABVPDVKDVFUDUEUFUGU
      HUIVMVGVKLZABHZVIVMVGVLLZWAVMVGVGKZWBVGUJVMVGVJLWBWCVJVLVGUKVGVGBCULUBUMU
      NAVGBVKUCUOVTVHABVFBLZVTVHWDVTUPVFVGKZVGVFKZUPVHWDWEVTWFVFBUQVGVFURUSVFVG
      UTVAVBVCVDVE $.
      $( [29-Nov-2003] $)
  $}

  ${
    $d w v x $.  $d w v y $.  $d w v z $.  $d w v R $.  $d w v A $.
    $( A founded relation has no 3-cycle loops.  Special case of Proposition
       6.23 of [TakeutiZaring] p. 30. $)
    fr3nr $p |- ( ( R Fr A /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
                -. ( x R y /\ y R z /\ z R x ) ) $=
      ( vw vv wfr cv ctp wss wbr w3a wn wcel wa cab cin c0 wceq wrex wne 
      visset tpnz tpex frc mp3an3 w3o breq2 abbidv ineq2d neeq1d brab1 tpid3 
      inelcm mpan sylbi syl5cbir tpid1 tpid2 3jaao eltp syl5ib com12 necon2bd 
      r19.23aiv syl 3anrot tpss bitri sylan2b ) DEHZBIZCIZAIZJZDKZVOVMELZVMVNEL
      ZVNVOELZMZNZVODOZVMDOZVNDOZMZVLVQPVPFIZGIZELZFQZRZSTZGVPUAZWBVLVQVPSUBWMV
      MVNVOBUCZUDGFDVPEVMVNVOUEUFUGWLWBGVPWHVPOZWAWKSWAWOWKSUBZWAWHVMTZWHVNTZWH
      VOTZUHWPWOVRWQWPVSWRVTWSWQWPVPWGVMELZFQZRZSUBZVRWQWKXBSWQWJXAVPWQWIWTFWHV
      MWGEUIUJUKULVRVOXAOZXCAFVMEUMVOVPOXDXCVMVNVOAUCZUNVOVPXAUOUPUQURWRWPVPWGV
      NELZFQZRZSUBZVSWRWKXHSWRWJXGVPWRWIXFFWHVNWGEUIUJUKULVSVMXGOZXIBFVNEUMVMVP
      OXJXIVMVNVOWNUSVMVPXGUOUPUQURWSWPVPWGVOELZFQZRZSUBZVTWSWKXMSWSWJXLVPWSWIX
      KFWHVOWGEUIUJUKULVTVNXLOZXNCFVOEUMVNVPOXOXNVMVNVOCUCZUTVNVPXLUOUPUQURVAWH
      VMVNVOGUCVBVCVDVEVFVGWFWDWEWCMVQWCWDWEVHVMVNVODWNXPXEVIVJVK $.
      $( [10-Apr-1994] $)
  $}

  $( A set founded by epsilon contains no 3-cycle loops. $)
  epne3 $p |- ( ( _E Fr A /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
                -. ( x e. y /\ y e. z /\ z e. x ) ) $=
    ( cep wfr cv wcel w3a wa wbr wn fr3nr epel 3anbi123i notbii sylib ) DEFAGZD
    HBGZDHCGZDHIJRSEKZSTEKZTREKZIZLRSHZSTHZTRHZIZLABCDEMUDUHUAUEUBUFUCUGABNBCNC
    ANOPQ $.
    $( [19-Apr-1994] $)

  ${
    $d x y z R $.  $d x y z A $.
    $( Alternate definition of well-ordering.  Definition 6.24(2) of
       [TakeutiZaring] p. 30.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    dfwe2 $p |- ( R We A <-> ( R Fr A /\ A. x e. A A. y e. A
                ( x R y \/ x = y \/ y R x ) ) ) $=
      ( vz wwe wfr wor wa cv wbr wceq w3o wral df-we wpo simpr wn wi wcel w3a 
      wal ax-1 a1i breq2 anbi2d notbid fr2nr 3adantr3 syl5cbi pm2.21 syl6 
      fr3nr df-3an biimpri ancoms nsyl pm2.21d exp3a 3jaod frirr 3ad2antr1 
      jctild ex a2d alimdv 2alimdv r3al 3imtr4g ralidm equequ2 breq1 3orbi123d 
      cbvralv ralbii bitr3i df-po ancrd impbid2 df-so syl5bb pm5.32i bitri ) CD
      FCDGZCDHZIWDAJZBJZDKZWFWGLZWGWFDKZMZBCNZACNZICDOWDWEWMWDCDPZWMIZWMWEWDWOW
      MWNWMQWDWMWNWDWFEJZDKZWFWPLZWPWFDKZMZECNZBCNZACNZWFWFDKRZWHWGWPDKZIZWQSZI
      ZECNBCNACNZWMWNWDWFCTZWGCTZWPCTZUAZWTSZEUBZBUBAUBXMXHSZEUBZBUBAUBXCXIWDXO
      XQABWDXNXPEWDXMWTXHWDXMWTXHSWDXMIZWTXGXDXRWQXGWRWSWQXGSXRWQXFUCUDXRWRXFRZ
      XGWRWHWJIZRZXSXRWRXTXFWRWJXEWHWFWPWGDUEUFUGWDXJXKYAXLABCDUHUIUJXFWQUKULXR
      WSXFWQXRWSXFIZWQXRWHXEWSUAZYBABECDUMXFWSYCYCXFWSIWHXEWSUNUOUPUQURUSUTWDXK
      XJXDXLACDVAVBVCVDVEVFVGWTABECCCVHXHABECCCVHVIWLXBACWLWLBCNXBWKBCVJWLXABCW
      KWTBECWGWPLWHWQWIWRWJWSWGWPWFDUEBEAVKWGWPWFDVLVMVNVOVPVOABECDVQVIVRVSABCD
      VTWAWBWC $.
      $( [12-Aug-2011] $) $( [16-Mar-1997] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Ordinals (continued)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( The class of all ordinal numbers is ordinal.  Proposition 7.12 of
       [TakeutiZaring] p. 38, but without using the Axiom of Regularity. $)
    ordon $p |- Ord On $=
      ( vx vy con0 word wtr cep wwe df-ord tron wfr cv wbr wceq w3o wral dfwe2 
      onfr wcel wa ordtri3or epel biid 3orbi123i sylibr eloni syl2an rgen2a 
      mpbir2an ) CDCECFGZCHIUICFJAKZBKZFLZUJUKMZUKUJFLZNZBCOACOABCFPQUOABCUJDZU
      KDZUOUJCRUKCRUPUQSUJUKRZUMUKUJRZNUOUJUKTULURUMUMUNUSABUAUMUBBAUAUCUDUJUEU
      KUEUFUGUHUH $.
      $( [17-May-1994] $)
  $}

  $( The epsilon relation well-orders the class of ordinal numbers.
     Proposition 4.8(g) of [Mendelson] p. 244. $)
  epweon $p |- _E We On $=
    ( con0 word cep wwe ordon ordwe ax-mp ) ABACDEAFG $.
    $( [1-Nov-2003] $)

  $( No set contains all ordinal numbers.  Proposition 7.13 of [TakeutiZaring]
     p. 38, but without using the Axiom of Regularity.  This is also known as
     the Burali-Forti paradox (remark in [Enderton] p. 194).  In 1897, Cesare
     Burali-Forti noticed that since the "set" of all ordinal numbers is an
     ordinal class ( ~ ordon ), it must be both an element of the set of all
     ordinal numbers yet greater than every such element.  ZF set theory
     resolves this paradox by not allowing the class of all ordinal numbers to
     be a set (so instead it is a proper class).  Here we prove the denial of
     its existence. $)
  onprc $p |- -. On e. _V $=
    ( con0 cvv wcel word wn ordon ordirr ax-mp elong mpbiri mto ) ABCZAACZADZME
    FAGHLMNFABIJK $.
    $( [18-May-1994] $)

  $( A way to express the ordinal property of a class in terms of the class of
     ordinal numbers.  Corollary 7.14 of [TakeutiZaring] p. 38 and its
     converse. $)
  ordeleqon $p |- ( Ord A <-> ( A e. On \/ A = On ) ) $=
    ( word con0 wcel wceq wo cvv onprc elisset mto w3o ordon ordtri3or mpan2 
    df-3or sylib ord mt3i eloni ordeq mpbiri jaoi impbii ) ABZACDZACEZFZUDUGCAD
    ZUHCGDHCAIJUDUGUHUDUEUFUHKZUGUHFUDCBZUILACMNUEUFUHOPQRUEUDUFASUFUDUJLACTUAU
    BUC $.
    $( [1-Jun-2003] $)

  $( Any ordinal class is a subclass of the class of ordinal numbers.
     Corollary 7.15 of [TakeutiZaring] p. 38.  (The proof was shortened by
     Andrew Salmon, 12-Aug-2011.) $)
  ordsson $p |- ( Ord A -> A C_ On ) $=
    ( word con0 wss ordon wa wcel wceq wo ordeleqon biimpi adantr ordsseleq 
    mpbird mpan2 ) ABZCBZACDZEPQFRACGACHIZPSQPSAJKLACMNO $.
    $( [12-Aug-2011] $) $( [18-May-1994] $)

  $( An ordinal number is a subset of the class of ordinal numbers. $)
  onss $p |- ( A e. On -> A C_ On ) $=
    ( con0 wcel word wss eloni ordsson syl ) ABCADABEAFAGH $.
    $( [5-Jun-1994] $)

  ${
    $d x y A $.
    $( The union of a class of ordinal numbers is ordinal.  Proposition 7.19 of
       [TakeutiZaring] p. 40.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    ssorduni $p |- ( A C_ On -> Ord U. A ) $=
      ( vx vy con0 wss cuni wtr word cv wral wcel wrex wa wi ssel onelss syl6 
      anc2r syl ssuni syl8 r19.23adv eluni2 syl5ib r19.21aiv dftr3 sylibr 
      onelon ex ssrdv ordon trssord 3exp mpii sylc ) ADEZAFZGZUQDEZUQHZUPBIZUQE
      ZBUQJURUPVBBUQUPVACIZKZCALZVBVAUQKZUPVDVBCAUPVCAKZVDVAVCEZVGMZVBUPVGVDVHN
      ZNVGVDVINNUPVGVCDKZVJADVCOZVCVAPQVGVDVHRSVAVCATUAUBCVAAUCZUDUEBUQUFUGUPBU
      QDUPVEVADKZVFUPVDVNCAUPVGVKVDVNNVLVKVDVNVCVAUHUIQUBVMUDUJURUSDHZUTUKURUSV
      OUTUQDULUMUNUO $.
      $( [12-Aug-2011] $) $( [30-May-1994] $)
  $}

  $( The union of a set of ordinal numbers is an ordinal number.  Theorem 9 of
     [Suppes] p. 132. $)
  ssonuni $p |- ( A e. B -> ( A C_ On -> U. A e. On ) ) $=
    ( wcel cuni con0 word wss cvv wb uniexg elong syl ssorduni syl5bir ) ABCZAD
    ZECZPFZAEGOPHCQRIABJPHKLAMN $.
    $( [1-Nov-2003] $)

  ${
    ssonuni.1 $e |- A e. _V $.
    $( The union of a set of ordinal numbers is an ordinal number.  Corollary
       7N(d) of [Enderton] p. 193. $)
    ssonunii $p |- ( A C_ On -> U. A e. On ) $=
      ( cvv wcel con0 wss cuni wi ssonuni ax-mp ) ACDAEFAGEDHBACIJ $.
      $( [20-Sep-2003] $)
  $}

  $( The union of an ordinal number is an ordinal number. $)
  onuni $p |- ( A e. On -> U. A e. On ) $=
    ( con0 wcel wss cuni onss ssonuni mpd ) ABCABDAEBCAFABGH $.
    $( [29-Sep-2006] $)

  $( The union of an ordinal class is ordinal. $)
  orduni $p |- ( Ord A -> Ord U. A ) $=
    ( word con0 wss cuni ordsson ssorduni syl ) ABACDAEBAFAGH $.
    $( [12-Sep-2003] $)

  ${
    $d x y z A $.
    $( The intersection (infimum) of a non-empty class of ordinal numbers
       belongs to the class.  Compare Exercise 4 of [TakeutiZaring] p. 45. $)
    onint $p |- ( ( A C_ On /\ A =/= (/) ) -> |^| A e. A ) $=
      ( vx vy vz con0 wss c0 wne cint wcel cv cin wceq wrex wa wi wn wral ssel 
      ontri1 syl6bir ex sylan9 com4r imp31 ralimdva disj visset elint2 3imtr4g 
      imdistani sylan2 exp32 com4l imp32 ssrdv intss1 ad2antrl eqssd eleq1d 
      biimpd com34 pm2.43d r19.23adv word ordon tz7.5 mp3an1 syl5 anabsi5 ) AEF
      ZAGHZAIZAJZVKABKZLGMZBANZVNVKVLOVKVPVNBAVKVOAJZVPVNPVKVRVPVRVNVKVRVPVRVNP
      VKVRVPOOZVRVNVSVOVMAVSVOVMVSCVOVMVKVRVPCKZVOJZVTVMJZPWAVKVRVPWBWAVKVRVPWB
      PZWAVKVOEJZOZWCVKVROWAWEOZDKZVOJQZDARVTWGJZDARVPWBWFWHWIDAWAWEWGAJZWHWIPW
      EWJWHWAWIVKWJWGEJZWDWHWAWIPZPZAEWGSWDWKWMWDWKOWHVOWGFWLVOWGTVOWGVTSUAUBUC
      UDUEUFDAVOUGDVTACUHUIUJVKVRWDAEVOSUKULUMUNUOUPVRVMVOFVKVPVOAUQURUSUTVAUMV
      BVCVDEVEVKVLVQVFBEAVGVHVIVJ $.
      $( [18-Mar-2007] $) $( [31-Jan-1997] $)
  $}

  $( The intersection of a class of ordinal numbers is zero iff the class
     contains zero. $)
  onint0 $p |- ( A C_ On -> ( |^| A = (/) <-> (/) e. A ) ) $=
    ( con0 wss cint c0 wceq wcel wa wne onint cvv 0ex eleq1 mpbiri intex 
    sylibr sylan2 wb adantl mpbid ex int0el impbid1 ) ABCZADZEFZEAGZUDUFUGUDUFH
    UEAGZUGUDAEIZUHUFAJUFUEKGZUIUFUJEKGLUEEKMNAOPQUFUHUGRUDUEEAMSTUAAUBUC $.
    $( [24-Apr-2004] $)

  ${
    $d x y A $.
    $( A non-empty class of ordinal numbers has a smallest member.  Exercise 9
       of [TakeutiZaring] p. 40. $)
    onssmin $p |- ( ( A C_ On /\ A =/= (/) ) -> E. x e. A A. y e. A x C_ y ) $=
      ( cint wcel cv wss wral wrex con0 c0 wne wa wceq sseq1 ralbidv rcla4ev 
      onint intss1 rgen sylancl ) CDZCEUBBFZGZBCHZAFZUCGZBCHZACICJGCKLMUHUEAUBC
      UFUBNUGUDBCUFUBUCOPQCRUDBCUCCSTUA $.
      $( [30-May-2007] $) $( [3-Oct-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.
    onminsb.1 $e |- ( ps -> A. x ps ) $.
    onminsb.2 $e |- ( x = |^| { x e. On | ph } -> ( ph <-> ps ) ) $.
    $( If a property is true for some ordinal number, it is true for a minimal
       ordinal number.  This version uses implicit substitution.  Theorem
       Schema 62 of [Suppes] p. 228. $)
    onminsb $p |- ( E. x e. On ph -> ps ) $=
      ( vy con0 wrex crab cint wcel c0 wne rabn0 wss ssrab2 onint mpan sylbir 
      hbrab1 hbint cv ax-17 elrabf simprbi syl ) ACGHZACGIZJZUHKZBUGUHLMZUJACGN
      UHGOUKUJACGPUHQRSUJUIGKBABCFUIGCFUHACFGTUAFUBGKCUCDEUDUEUF $.
      $( [3-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( If a property is true for some ordinal number, it is true for a minimal
       ordinal number.  This version uses explicit substitution.  Theorem
       Schema 62 of [Suppes] p. 228. $)
    onminesb $p |- ( E. x e. On ph -> [ |^| { x e. On | ph } / x ] ph ) $=
      ( vy con0 wrex crab cint wcel wsbc c0 wne rabn0 wss ssrab2 onint mpan 
      sylbir cv ax-17 elrabsf simprbi syl ) ABDEZABDFZGZUDHZABUEIZUCUDJKZUFABDL
      UDDMUHUFABDNUDOPQUFUEDHUGABCUEDCRDHBSTUAUB $.
      $( [29-Sep-2003] $)
  $}

  $( The intersection of a non-empty collection of ordinal numbers is an
     ordinal number.  Compare Exercise 6 of [TakeutiZaring] p. 44. $)
  oninton $p |- ( ( A C_ On /\ A =/= (/) ) -> |^| A e. On ) $=
    ( con0 wss c0 wne cint wcel onint ex ssel syld imp ) ABCZADEZAFZBGZMNOAGZPM
    NQAHIABOJKL $.
    $( [20-Mar-2007] $) $( [29-Jan-1997] $)

  $( The intersection of a class of ordinal numbers exists iff it is an ordinal
     number. $)
  onintrab $p |- ( |^| { x e. On | ph } e. _V <->
                 |^| { x e. On | ph } e. On ) $=
    ( con0 crab cint cvv wcel c0 wne intex wss ssrab2 oninton mpan sylbir 
    elisset impbii ) ABCDZEZFGZSCGZTRHIZUARJRCKUBUAABCLRMNOSCPQ $.
    $( [6-Nov-2003] $)

  $( An existence condition equivalent to an intersection's being an ordinal
     number. $)
  onintrab2 $p |- ( E. x e. On ph <-> |^| { x e. On | ph } e. On ) $=
    ( con0 wrex crab cint cvv wcel intexrab onintrab bitri ) ABCDABCEFZGHLCHABC
    IABJK $.
    $( [6-Nov-2003] $)

  $( No member of a set of ordinal numbers belongs to its minimum. $)
  onnmin $p |- ( ( A C_ On /\ B e. A ) -> -. B e. |^| A ) $=
    ( con0 wss wcel wa cint wn intss1 adantl wb c0 wne oninton ne0i sylan2 
    ssel2 ontri1 syl11anc mpbid ) ACDZBAEZFZAGZBDZBUDEHZUBUEUABAIJUCUDCEZBCEUEU
    FKUAALMUGUBANABOPACBQUDBRST $.
    $( [2-Feb-1997] $)

  ${
    $d x A $.  $d x ps $.
    onnminsb.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( An ordinal number smaller than the minimum of a set of ordinal numbers
       does not have the property determining that set. ` ps ` is the wff
       resulting from the substitution of ` A ` for ` x ` in wff ` ph ` . $)
    onnminsb $p |- ( A e. On -> ( A e. |^| { x e. On | ph } -> -. ps ) ) $=
      ( con0 wcel crab cint wn wa elrab wss ssrab2 onnmin mpan sylbir ex con2d 
      ) DFGZBDACFHZIGZTBUBJZTBKDUAGZUCABCDFELUAFMUDUCACFNUADOPQRS $.
      $( [9-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A way to show that an ordinal number equals the minimum of a non-empty
       collection of ordinal numbers: it must be in the collection, and it must
       not be larger than any member of the collection. $)
    oneqmin $p |- ( ( B C_ On /\ B =/= (/) ) -> ( A = |^| B <->
                  ( A e. B /\ A. x e. A -. x e. B ) ) ) $=
      ( con0 wss c0 wne wa cint wceq wcel cv wn wral eleq1 onint syl5cbir wi 
      eleq2 biimpd onnmin ex con2d syl9r r19.21adv adantr jcad oneqmini impbid 
      ) CDEZCFGZHZBCIZJZBCKZALZCKZMZABNZHZULUNUOUSUNUOUMCKULBUMCOCPQUJUNUSRUKUJ
      UNURABUNUPBKZUPUMKZUJURUNVAVBBUMUPSTUJUQVBUJUQVBMCUPUAUBUCUDUEUFUGUJUTUNR
      UKABCUHUFUI $.
      $( [10-May-2007] $) $( [14-Nov-2003] $)
  $}

  ${
    $d x y A $.
    bm2.5ii.1 $e |- A e. _V $.
    $( Problem 2.5(ii) of [BellMachover] p. 471. $)
    bm2.5ii $p |- ( A C_ On -> U. A = |^| { x e. On | A. y e. A y C_ x } ) $=
      ( con0 wss cuni wcel cv wral crab cint wceq ssonunii intmin wb unissb 
      a1i rabbiia inteqi syl5reqr syl ) CEFCGZEHZUCBIAIZFBCJZAEKZLZMCDNUDUCUEFZ
      AEKZLUCUHAUCEOUJUGUIUFAEUIUFPUEEHBCUEQRSTUAUB $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    onminex.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( If a wff is true for an ordinal number, there is a smallest ordinal
       number for which it is true. $)
    onminex $p |- ( E. x e. On ph -> E. x e. On ( ph /\ A. y e. x -. ps ) ) $=
      ( cv con0 wcel wa wex wn wral wrex cab c0 wne wi wal cint wss ssab2 
      onint mpan oninton onelon ex syl visset wceq eleq1 anbi12d elab onnmin 
      sylbir con2d syli 19.21aiv hbab1 hbint hbel ax-17 hbim hbal hban eleq2 
      imbi1d albidv cla4egf anabsi5 syl11anc abn0 abid bicomi df-ral anbi12i 
      anass bitr3i exbii 3imtr3i df-rex 3imtr4i ) CFZGHZAIZCJZWCABKZDWBLZIZIZCJ
      ZACGMWHCGMWDCNZOPZWBWKHZDFZWBHZWFQZDRZIZCJZWEWJWLWKSZWKHZWNWTHZWFQZDRZWSW
      KGTZWLXAACGUAZWKUBUCWLXCDXBWLWNGHZWFWLWTGHZXBXGQXEWLXHXFWKUDUCXHXBXGWTWNU
      EUFUGXGBXBXGBXBKZXGBIZWNWKHZXIWDXJCWNDUHWBWNUIWCXGABWBWNGUJEUKULXEXKXIXFW
      KWNUMUCUNUFUOUPUQXAXDWSWRXAXDICDWTWKCDWKWDCDURZUSZXAXDCCDDWTWKXMXLUTXCCDX
      BWFCXMWFCVAVBVCVDWBWTUIZWMXAWQXDWBWTWKUJXNWPXCDXNWOXBWFWBWTWNVEVFVGUKVHVI
      VJWDCVKWRWICWRWDWGIWIWDWMWGWQWMWDWDCVLVMWFDWBVNVOWCAWGVPVQVRVSACGVTWHCGVT
      WA $.
      $( [2-Feb-1997] $)
  $}

  $( The class of all ordinal numbers is its own successor. $)
  sucon $p |- suc On = On $=
    ( con0 cvv wcel wn csuc wceq onprc sucprc ax-mp ) ABCDAEAFGAHI $.
    $( [12-Sep-2003] $)

  $( A successor exists iff its class argument exists. $)
  sucexb $p |- ( A e. _V <-> suc A e. _V ) $=
    ( cvv wcel csn wa cun csuc unexb snex biantru df-suc eleq1i 3bitr4i ) ABCZA
    DZBCZEAOFZBCNAGZBCAOHPNAIJRQBAKLM $.
    $( [22-Jun-1998] $)

  $( The successor of a set is a set (generalization). $)
  sucexg $p |- ( A e. B -> suc A e. _V ) $=
    ( wcel cvv csuc elisset sucexb sylib ) ABCADCAEDCABFAGH $.
    $( [5-Jun-1994] $)

  ${
    sucex.1 $e |- A e. _V $.
    $( The successor of a set is a set. $)
    sucex $p |- suc A e. _V $=
      ( cvv wcel csuc sucexg ax-mp ) ACDAECDBACFG $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( The minimum of a class of ordinal numbers is less than the minimum of
       that class with its minimum removed. $)
    onmindif2 $p |- ( ( A C_ On /\ A =/= (/) ) ->
                   |^| A e. |^| ( A \ { |^| A } ) ) $=
      ( vx con0 wss c0 wne wa cint csn cdif wcel cv wral wn wceq wo onnmin 
      adantlr wb oninton adantr ssel2 ontri1 onsseleq bitr3d syl11anc mpbid 
      ord eqcom syl6ib necon1ad expimpd eldifsn syl5ib r19.21aiv cvv intex 
      elintg sylbi adantl mpbird ) ACDZAEFZGZAHZAVEIJZHKZVEBLZKZBVFMZVDVIBVFVDV
      HAKZVHVEFZGVIVHVFKVDVKVLVIVDVKGZVIVHVEVMVINVEVHOZVHVEOVMVIVNVMVHVEKNZVIVN
      PZVBVKVOVCAVHQRVMVECKZVHCKZVOVPSVDVQVKATUAVBVKVRVCACVHUBRVQVRGVEVHDVOVPVE
      VHUCVEVHUDUEUFUGUHVEVHUIUJUKULVHAVEUMUNUOVCVGVJSZVBVCVEUPKVSAUQBVEVFUPURU
      SUTVA $.
      $( [28-May-2007] $) $( [20-Nov-2003] $)
  $}

  ${
    $d x A $.
    $( The successor of an ordinal number is an ordinal number.  Proposition
       7.24 of [TakeutiZaring] p. 41. $)
    suceloni $p |- ( A e. On -> suc A e. On ) $=
      ( vx con0 wcel csuc word wtr wss cv wral csn wo onelss wi wceq elsn 
      eqimss sylbi a1i orim12d cun df-suc eleq2i elun bitr2i oridm 3imtr3g 
      sssucid sstr2 syl6mpi r19.21aiv dftr3 sylibr wa onss snssi jca unss 
      sylib syl5ss ordon trssord 3exp mpii sylc cvv wb sucexg elong syl mpbird 
      ) ACDZAEZCDZVMFZVLVMGZVMCHZVOVLBIZVMHZBVMJVPVLVSBVMVLVRVMDZVRAHZAVMHVSVLV
      RADZVRAKZDZLZWAWALVTWAVLWBWAWDWAAVRMWDWANVLWDVRAOWABAPVRAQRSTVTVRAWCUAZDW
      EVMWFVRAUBZUCVRAWCUDUEWAUFUGAUHVRAVMUIUJUKBVMULUMVLWFCVMVLACHZWCCHZUNWFCH
      VLWHWIAUOACUPUQAWCCURUSWGUTVPVQCFZVOVAVPVQWJVOVMCVBVCVDVEVLVMVFDVNVOVGACV
      HVMVFVIVJVK $.
      $( [6-Jun-1994] $)
  $}

  $( The successor of an ordinal class is ordinal. $)
  ordsuc $p |- ( Ord A <-> Ord suc A ) $=
    ( cvv wcel word csuc wb con0 elong suceloni eloni syl syl6bir ordelord ex 
    sucidg syl5com impbid wn wceq sucprc eqcomd ordeq pm2.61i ) ABCZADZAEZDZFZU
    DUEUGUDUEAGCZUGABHUIUFGCUGAIUFJKLUGAUFCZUEUDUGUJUEUFAMNABOPQUDRZAUFSUHUKUFA
    ATUAAUFUBKUC $.
    $( [3-Apr-1995] $)

  ${
    $d x A $.
    $( The collection of ordinals in the power class of an ordinal is its
       successor. $)
    ordpwsuc $p |- ( Ord A -> ( ~P A i^i On ) = suc A ) $=
      ( vx word cpw con0 cin csuc cv wcel wss wa wb ordsssuc expcom pm5.32d 
      simpr wi ordsuc ordelon ex sylbi ancrd impbid2 bitrd elin visset elpw 
      anbi1i ancom 3bitri syl5bb eqrdv ) ACZBADZEFZAGZUMBHZEIZUQAJZKZUQUPIZUQUO
      IZUMUTURVAKZVAUMURUSVAURUMUSVALUQAMNOUMVCVAURVAPUMVAURUMUPCZVAURQARVDVAUR
      UPUQSTUAUBUCUDVBUQUNIZURKUSURKUTUQUNEUEVEUSURUQABUFUGUHUSURUIUJUKUL $.
      $( [30-Jan-2005] $)

    $( The collection of ordinal numbers in the power set of an ordinal number
       is its successor. $)
    onpwsuc $p |- ( A e. On -> ( ~P A i^i On ) = suc A ) $=
      ( con0 wcel word cpw cin csuc wceq eloni ordpwsuc syl ) ABCADAEBFAGHAIAJK
      $.
      $( [19-Oct-2004] $)
  $}

  $( The successor of an ordinal number is an ordinal number. $)
  sucelon $p |- ( A e. On <-> suc A e. On ) $=
    ( word cvv wcel wa csuc con0 ordsuc sucexb anbi12i elon2 3bitr4i ) ABZACDZE
    AFZBZOCDZEAGDOGDMPNQAHAIJAKOKL $.
    $( [9-Sep-2003] $)

  $( The successor of an element of an ordinal class is a subset of it. $)
  ordsucss $p |- ( Ord B -> ( A e. B -> suc A C_ B ) ) $=
    ( word wcel csuc wss wi wa wn ordnbtwn imnan sylibr adantr wb ordtri1 
    ordsuc sylanb sylibrd ordelord sylan exp31 pm2.43b ) BCZABDZAEZBFZUDUCUDUFG
    ZUCUDUCUGACZUCUGUCUDHUHUCHUDBUEDZIZUFUHUDUJGZUCUHUDUIHIUKABJUDUIKLMUECUCUFU
    JNUHUEBOAPQRBASTUAUBUB $.
    $( [21-Jun-1998] $)

  $( A set belongs to an ordinal iff its successor is a subset of the ordinal.
     Exercise 8 of [TakeutiZaring] p. 42 and its converse. $)
  ordelsuc $p |- ( ( A e. C /\ Ord B ) -> ( A e. B <-> suc A C_ B ) ) $=
    ( wcel word wa csuc wss wi ordsucss adantl sucssel adantr impbid ) ACDZBEZF
    ABDZAGBHZPQRIOABJKORQIPABCLMN $.
    $( [29-Nov-2003] $)

  ${
    $d x A $.
    $( The successor of an ordinal number is the smallest larger ordinal
       number. $)
    onsucmin $p |- ( A e. On -> suc A = |^| { x e. On | A e. x } ) $=
      ( con0 wcel cv crab cint csuc wss word wb ordelsuc eloni sylan2 rabbidva 
      inteqd wceq sucelon intmin sylbi eqtr2d ) BCDZBAEZDZACFZGBHZUCIZACFZGZUFU
      BUEUHUBUDUGACUBUCJUDUGKUCCDBUCCLUCMNOPUBUFCDUIUFQBRAUFCSTUA $.
      $( [28-Nov-2003] $)
  $}

  $( Membership is inherited by successors.  Generalization of Exercise 9 of
     [TakeutiZaring] p. 42.  (The proof was shortened by Andrew Salmon,
     12-Aug-2011.) $)
  ordsucelsuc $p |- ( Ord B -> ( A e. B <-> suc A e. suc B ) ) $=
    ( word wcel csuc wa simpl ordelord jca ordsuc sylibr sylanb cvv wb wi wss 
    wceq wo ordsseleq ancoms adantl ordsucss ad2antrl sucssel adantr impbid 
    sucexb elsucg sylbi 3bitr4d ex wn elisset pm5.21ni a1d pm2.61i pm5.21nd ) 
    BCZABDZAEZBEZDZURACZFZURUSFURVCURUSGBAHIURVBFURVCURVBGVACZVBVCURVEVBFUTCZVC
    VAUTHAJZKBJLIAMDZVDUSVBNZOVHVDVIVHVDFZUTBPZUTBDUTBQRZUSVBVDVKVLNZVHVCURVMVF
    URVMVCUTBSVGLTUAVJUSVKURUSVKOVHVCABUBUCVHVKUSOVDABMUDUEUFVHVBVLNZVDVHUTMDZV
    NAUGZUTBMUHUIUEUJUKVHULVIVDUSVHVBABUMVBVOVHUTVAUMVPKUNUOUPUQ $.
    $( [12-Aug-2011] $) $( [22-Jun-1998] $)

  $( The subclass relationship between two ordinal classes is inherited by
     their successors. $)
  ordsucsssuc $p |- ( ( Ord A /\ Ord B ) -> ( A C_ B <-> suc A C_ suc B ) ) $=
    ( word wa wcel wn csuc wss wb ordsucelsuc notbid adantr ordtri1 ordsuc 
    syl2anb 3bitr4d ) ACZBCZDBAEZFZBGZAGZEZFZABHUBUAHZQTUDIRQSUCBAJKLABMUBCUACU
    EUDIQRUBUAMANBNOP $.
    $( [4-Oct-2003] $)

  ${
    $d x A $.  $d x B $.
    $( The successor of the maximum (i.e. union) of two ordinals is the maximum
       of their successors. $)
    ordsucun $p |- ( ( Ord A /\ Ord B ) ->
               suc ( A u. B ) = ( suc A u. suc B ) ) $=
      ( vx word wa cun csuc cv con0 wcel wb wo wss ordssun adantl ordsssuc 
      ordun sylan2 adantrr adantrl orbi12d 3bitr3d elun syl6bbr expcom pm5.32d 
      wi ordsuc ordelon ex sylbi syl pm4.71rd syl2anb 3bitr4d eqrdv ) ADZBDZEZC
      ABFZGZAGZBGZFZUSCHZIJZVEVAJZEVFVEVDJZEVGVHUSVFVGVHVFUSVGVHKVFUSEZVGVEVBJZ
      VEVCJZLZVHVIVEUTMZVEAMZVEBMZLZVGVLUSVMVPKVFVEABNOVFUTDZVMVGKUSVEUTPABQZRV
      IVNVJVOVKVFUQVNVJKURVEAPSVFURVOVKKUQVEBPTUAUBVEVBVCUCUDUEUFUSVGVFUSVQVGVF
      UGZVRVQVADZVSUTUHVTVGVFVAVEUIUJUKULUMUSVHVFVBDZVCDZVHVFUGZUQURWAWBEVDDZWC
      VBVCQWDVHVFVDVEUIUJULAUHBUHUNUMUOUP $.
      $( [28-Nov-2003] $)
  $}

  $( The maximum of two ordinals belongs to a third if each of them do. $)
  ordunel $p |- ( ( Ord A /\ B e. A /\ C e. A ) -> ( B u. C ) e. A ) $=
    ( word wcel w3a csuc wss wa cun ordsucss anim12d 3impib wceq ordelord 
    3adant3 3adant2 ordsucun syl11anc sseq1d biimprd cvv wb unexg 3adant1 
    simp1 ordelsuc sylibrd unss syl5ib mpd ) ADZBAEZCAEZFZBGZAHZCGZAHZIZBCJZAEZ
    ULUMUNUTULUMUQUNUSBAKCAKLMUOUPURJZAHZVBUTUOVDVAGZAHZVBUOVFVDUOVEVCAUOBDZCDZ
    VEVCNULUMVGUNABOPULUNVHUMACOQBCRSTUAUOVAUBEZULVBVFUCUMUNVIULBCAAUDUEULUMUNU
    FVAAUBUGSUHUPURAUIUJUK $.
    $( [18-Sep-2006] $)

  $( A class of ordinal numbers is a subclass of the successor of its union.
     Similar to Proposition 7.26 of [TakeutiZaring] p. 41. $)
  onsucuni $p |- ( A C_ On -> A C_ suc U. A ) $=
    ( con0 wss cuni word csuc ssorduni wa ssid ordunisssuc mpbii mpdan ) ABCZAD
    ZEZANFCZAGMOHNNCPNIANJKL $.
    $( [19-Sep-2003] $)

  $( An ordinal class is a subclass of the successor of its union. $)
  ordsucuni $p |- ( Ord A -> A C_ suc U. A ) $=
    ( word con0 wss cuni csuc ordsson onsucuni syl ) ABACDAAEFDAGAHI $.
    $( [12-Sep-2003] $)

  $( An ordinal class is either its union or the successor of its union. $)
  orduniorsuc $p |- ( Ord A -> ( A = U. A \/ A = suc U. A ) ) $=
    ( word cuni wceq csuc wne wss wa wn wcel orduniss wb orduni ordelssne 
    mpancom biimprd mpand ordsucss syld ordsucuni jctild df-ne necom bitr3i 
    eqss 3imtr4g orrd ) ABZAACZDZAUIEZDZUHUIAFZAUKGZUKAGZHUJIZULUHUMUOUNUHUMUIA
    JZUOUHUIAGZUMUQAKUHUQURUMHZUIBUHUQUSLAMUIANOPQUIARSATUAUPAUIFUMAUIUBAUIUCUD
    AUKUEUFUG $.
    $( [13-Sep-2003] $)

  ${
    $d x y A $.
    $( The class of all ordinal numbers is its own union.  Exercise 11 of
       [TakeutiZaring] p. 40. $)
    unon $p |- U. On = On $=
      ( vx vy con0 cuni cv wcel wrex eluni2 onelon r19.23aiva sylbi csuc 
      elunii visset sucid suceloni sylancr impbii eqriv ) ACDZCAEZTFZUACFZUBUAB
      EZFZBCGUCBUACHUEUCBCUDUAIJKUAUALZFUFCFUBUCUAUFCMUAANOUAPQRS $.
      $( [12-Nov-2003] $)

    $( An ordinal class is equal to the union of its successor.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    ordunisuc $p |- ( Ord A -> U. suc A = A ) $=
      ( vx word con0 wcel wceq wo csuc cuni ordeleqon cv suceq unieqd id 
      eqeq12d wtr eloni ordtr syl visset unisuc sylib vtoclga sucon unieqi 
      unon eqtri 3eqtr4a jaoi sylbi ) ACADEZADFZGAHZIZAFZAJUKUOULBKZHZIZUPFZUOB
      ADUPAFZURUNUPAUTUQUMUPALMUTNOUPDEZUPPZUSVAUPCVBUPQUPRSUPBTUAUBUCULDHZIZDU
      NAVDDIDVCDUDUEUFUGULUMVCADLMULNUHUIUJ $.
      $( [27-Aug-2011] $) $( [10-Dec-2004] $)

    $( The union of the ordinal subsets of an ordinal number is that number. $)
    orduniss2 $p |- ( Ord A -> U. { x e. On | x C_ A } = A ) $=
      ( word cv wss con0 crab cuni csuc cpw cin ordpwsuc wcel wa cab df-rab 
      inab incom eqtr3i df-pw eqcomi abid2 ineq12i 3eqtri syl5eq unieqd 
      ordunisuc eqtrd ) BCZADZBEZAFGZHBIZHBUIULUMUIBJZFKZUMULBLULUJFMZUKNAOZUKA
      OZUPAOZKZUOUKAFPUSURKUQUTUPUKAQUSURRSURUNUSFUNURABTUAAFUBUCUDUEUFBUGUH $.
      $( [30-Jan-2005] $)
  $}

  $( A successor ordinal is the successor of its union.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  onsucuni2 $p |- ( ( A e. On /\ A = suc B ) -> suc U. A = A ) $=
    ( con0 wcel csuc wceq wa cuni unieq suceq syl unieqd eqeq12d word eleq1 
    biimpac eloni ordsuc ordunisuc sylbir eqtr4d 3syl syl5bir anabsi7 adantr 
    eqtrd ) ACDZABEZFZGZAHZEZAEZHZAUGUIULUNFZUIUOUHHZEZUHEZHZFZUJUIULUQUNUSUIUK
    UPFULUQFAUHIUKUPJKUIUMURAUHJLMUJUHCDZUHNZUTUIUGVAAUHCOPUHQVBUQUHUSVBUPBFZUQ
    UHFVBBNVCBRBSTUPBJKUHSUAUBUCUDUGUNAFZUIUGANVDAQASKUEUF $.
    $( [27-Aug-2011] $) $( [10-Dec-2004] $)

  $( The successor of an ordinal class contains the empty set. $)
  0elsuc $p |- ( Ord A -> (/) e. suc A ) $=
    ( word csuc c0 wcel ordsuc wne nsuceq0 ord0eln0 mpbiri sylbi ) ABACZBZDLEZA
    FMNLDGAHLIJK $.
    $( [4-Apr-1995] $)

  $( The class of ordinal numbers is a limit ordinal. $)
  limon $p |- Lim On $=
    ( con0 wlim word c0 wne cuni wceq df-lim ordon onn0 unon eqcomi mpbir3an ) 
    ABACADEAAFZGAHIJNAKLM $.
    $( [24-Mar-1995] $)

  ${
    onssi.1 $e |- A e. On $.
    $( An ordinal number is a subset of ` On ` . $)
    onssi $p |- A C_ On $=
      ( con0 wcel wss onss ax-mp ) ACDACEBAFG $.
      $( [11-Aug-1994] $)

    $( The successor of an ordinal number is an ordinal number.  Corollary
       7N(c) of [Enderton] p. 193. $)
    onsuci $p |- suc A e. On $=
      ( con0 wcel csuc suceloni ax-mp ) ACDAECDBAFG $.
      $( [12-Jun-1994] $)

    $( An ordinal number is either its own union (if zero or a limit ordinal)
       or the successor of its union. $)
    onuniorsuci $p |- ( A = U. A \/ A = suc U. A ) $=
      ( word cuni wceq csuc wo onordi orduniorsuc ax-mp ) ACAADZEAKFEGABHAIJ $.
      $( [13-Jun-1994] $)

    ${
      $d x A $.
      $( A limit ordinal is not a successor ordinal. $)
      onuninsuci $p |- ( A = U. A <-> -. E. x e. On A = suc x ) $=
        ( cv csuc wceq con0 wrex cuni wn wi wcel wa onirri id cun csn df-suc 
        eqeq2i unieq sylbi uniun visset unisn uneq2i eqtri syl6eq wss eleq1 
        mpbii wtr tron trsuc mpan word eloni ordtr syl df-tr sylib 3syl 
        ssequn1 eqtrd sylan9eqr sucid eleq2 mpbiri adantr eqeltrd mto imnan 
        mpbir a1i r19.23aiv suceq eqeq2d rcla4ev onuni ax-mp onuniorsuci ori 
        sylancr impbii con2bii ) BADZEZFZAGHZBBIZFZWHWJJZWGWKAGWGWKKZWEGLZWLWGW
        JMZJWNBBLBCNWNBWEBWJWGBWIWEWJOWGWIWEIZWEPZWEWGWIWEWEQZPZIZWPWGBWRFWIWSF
        WFWRBWERSBWRTUAWSWOWQIZPWPWEWQUBWTWEWOWEAUCZUDUEUFUGWGWOWEUHZWPWEFWGWFG
        LZWMXBWGBGLZXCCBWFGUIUJGUKXCWMULGWEUMUNWMWEUKZXBWMWEUOXEWEUPWEUQURWEUSU
        TVAWOWEVBUTVCVDWGWEBLZWJWGXFWEWFLWEXAVEBWFWEVFVGVHVIVJWGWJVKVLVMVNWIGLZ
        BWIEZFZWHWKWGXIAWIGWEWIFWFXHBWEWIVOVPVQXDXGCBVRVSWJXIBCVTWAWBWCWD $.
        $( [18-Feb-2004] $)
    $}

    ${
      onsucssi.2 $e |- B e. On $.
      $( A set belongs to an ordinal number iff its successor is a subset of
         the ordinal number.  Exercise 8 of [TakeutiZaring] p. 42 and its
         converse. $)
      onsucssi $p |- ( A e. B <-> suc A C_ B ) $=
        ( con0 wcel word csuc wss wb onordi ordelsuc mp2an ) AEFBGABFAHBIJCBDKA
        BELM $.
        $( [16-Sep-1995] $)
    $}
  $}

  $( A successor is not a limit ordinal.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  nlimsucg $p |- ( A e. B -> -. Lim suc A ) $=
    ( csuc wlim wcel word cuni wceq wn c0 wne w3a simp1 df-lim ordsuc 3imtr4i 
    limuni ordunisuc eqeq2d eleq2 notbid ordirr syl5cbir sucidg con3i syl6 
    sylbid sylc con2i ) ACZDZABEZUKAFZUJUJGZHZULIZUJFZUJJKZUOLUQUKUMUQURUOMUJNA
    OPUJQUMUOUJAHZUPUMUNAUJARSUMUSAUJEZIZUPUSVAAAEZIUMUSUTVBUJAATUAAUBUCULUTABU
    DUEUFUGUHUI $.
    $( [20-Sep-2006] $) $( [25-Mar-1995] $)

  ${
    $d x A $.
    $( An ordinal equal to its union is not a successor. $)
    orduninsuc $p |- ( Ord A -> ( A = U. A <-> -. E. x e. On A = suc x ) ) $=
      ( word con0 wcel wceq wo cuni cv csuc wrex wn wb ordeleqon c0 cif id 
      unieq eqeq12d eqeq1 rexbidv notbid bibi12d 0elon elimel onuninsuci dedth 
      unon eqcomi cvv onprc visset sucex eleq1 mpbiri mto a1i nrex 2th jaoi 
      sylbi ) BCBDEZBDFZGBBHZFZBAIZJZFZADKZLZMZBNVBVKVCVBVKVBBOPZVLHZFZVLVGFZAD
      KZLZMBOBVLFZVEVNVJVQVRBVLVDVMVRQBVLRSVRVIVPVRVHVOADBVLVGTUAUBUCAVLBODUDUE
      UFUGVCVKDDHZFZDVGFZADKZLZMVTWCVSDUHUIWAADWALVFDEWADUJEZUKWAWDVGUJEVFAULUM
      DVGUJUNUOUPUQURUSVCVEVTVJWCVCBDVDVSVCQBDRSVCVIWBVCVHWAADBDVGTUAUBUCUOUTVA
      $.
      $( [18-Feb-2004] $)

    $( An ordinal equal to its union contains the successor of each of its
       members. $)
    ordunisuc2 $p |- ( Ord A -> ( A = U. A <-> A. x e. A suc x e. A ) ) $=
      ( word cuni wceq cv csuc con0 wrex wn wcel wral orduninsuc wi wa wo wb 
      ordtri3 suceloni eloni syl sylan2 con2bid onnbtwn imnan sylibr con2d 
      pm2.21 syl6 adantl ax-1 a1i jaod wss ordtri2or sylan ancoms orcomd 
      adantr ordsssuc2 biimpd simpr orim12d mpd ex impbid bitr3d pm5.74da 
      ordelon ancrd impbid2 imbi1d impexp syl5bbr bitrd ralbidv2 ralnex ) BCZBB
      DEBAFZGZEZAHIJZVTBKZABLZABMVRWAJZAHLWDWBVRWEWCAHBVRVSHKZWENWFVSBKZWCNZNZW
      HVRWFWEWHVRWFOZBVTKZWCPZWEWHWJWAWLVRVTCZWAWLJQWFBVTRWFVTHKWMVSSVTTUAUBUCW
      JWLWHWJWKWHWCWFWKWHNVRWFWKWGJWHWFWGWKWFWGWKOJWGWKJNVSBUDWGWKUEUFUGWGWCUHU
      IUJWCWHNWJWCWGUKULUMWJWHWLWJWHOZBVSUNZWGPZWLWJWPWHWJWGWOWFVRWGWOPZVSCVRWQ
      WFVSBUOVSTUPUQURUSWNWOWKWGWCWJWOWKNWHWJWOWKBVSUTVAUSWJWHVBVCVDVEVFVGVHVRW
      FWGOZWCNWHWIVRWRWGWCVRWRWGWFWGVBVRWGWFVRWGWFBVSVIVEVJVKVLWFWGWCVMVNVOVPWA
      AHVQVNVO $.
      $( [1-Feb-2005] $)

    $( An ordinal is zero, a successor ordinal, or a limit ordinal. $)
    ordzsl $p |- ( Ord A <->
                  ( A = (/) \/ E. x e. On A = suc x \/ Lim A ) ) $=
      ( word c0 wceq cv csuc con0 wrex wlim w3o wo wn cuni orduninsuc biimprd 
      unizlim sylibd orrd 3orass or12 bitri sylibr ord0 ordeq mpbiri wcel 
      eleq1 suceloni syl5bir eloni syl6com r19.23aiv limord 3jaoi impbii ) BCZB
      DEZBAFZGZEZAHIZBJZKZUQVBURVCLZLZVDUQVBVEUQVBMZBBNEZVEUQVHVGABOPBQRSVDURVB
      VCLLVFURVBVCTURVBVCUAUBUCURUQVBVCURUQDCUDBDUEUFVAUQAHVAUSHUGZBHUGZUQVAVJU
      THUGVIBUTHUHUSUIUJBUKULUMBUNUOUP $.
      $( [1-Oct-2003] $)

    $( An ordinal number is zero, a successor ordinal, or a limit ordinal
       number.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    onzsl $p |- ( A e. On <->
               ( A = (/) \/ E. x e. On A = suc x \/ ( A e. _V /\ Lim A ) ) ) $=
      ( con0 wcel c0 wceq cv csuc wrex cvv wlim wa w3o word elisset eloni 
      3mix1 adantl 3mix2 3mix3 3jaodan ordzsl sylan2b syl11anc 0elon eleq1 
      mpbiri suceloni syl5cbir r19.23aiv limelon 3jaoi impbii ) BCDZBEFZBAGZHZF
      ZACIZBJDZBKZLZMZUNUTBNZVCBCOBPUTUOUSVAMVCVDUTUOVCUSVAUOVCUTUOUSVBQRUSVCUT
      USUOVBSRVBUOUSTUAABUBUCUDUOUNUSVBUOUNECDUEBECUFUGURUNACURUNUQCDUPCDBUQCUF
      UPUHUIUJBJUKULUM $.
      $( [27-Aug-2011] $) $( [1-Oct-2003] $)

    $( An alternate definition of a limit ordinal, which is any ordinal that is
       neither zero nor a successor.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    dflim3 $p |- ( Lim A <->
                 ( Ord A /\ -. ( A = (/) \/ E. x e. On A = suc x ) ) ) $=
      ( wlim word c0 wne cuni wceq w3a wa cv csuc con0 wrex wo wn df-lim 
      3anass wb df-ne a1i orduninsuc anbi12d ioran syl6bbr pm5.32i 3bitri ) BCB
      DZBEFZBBGHZIUHUIUJJZJUHBEHZBAKLHAMNZOPZJBQUHUIUJRUHUKUNUHUKULPZUMPZJUNUHU
      IUOUJUPUIUOSUHBETUAABUBUCULUMUDUEUFUG $.
      $( [27-Aug-2011] $) $( [1-Nov-2004] $)

    $( An alternate definition of a limit ordinal. $)
    dflim4 $p |- ( Lim A <->
                 ( Ord A /\ (/) e. A /\ A. x e. A suc x e. A ) ) $=
      ( wlim word c0 wcel cuni wceq w3a cv csuc wral dflim2 wa ordunisuc2 
      anbi2d pm5.32i 3anass 3bitr4i bitri ) BCBDZEBFZBBGHZIZUAUBAJKBFABLZIZBMUA
      UBUCNZNUAUBUENZNUDUFUAUGUHUAUCUEUBABOPQUAUBUCRUAUBUERST $.
      $( [1-Feb-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The successor of a member of a limit ordinal is also a member. $)
    limsuc $p |- ( Lim A -> ( B e. A <-> suc B e. A ) ) $=
      ( vx wlim wcel csuc word c0 cv wral w3a wi dflim4 wceq suceq eleq1d 
      rcla4cv 3ad2ant3 sylbi wtr limord ordtr trsuc ex 3syl impbid ) ADZBAEZBFZ
      AEZUGAGZHAEZCIZFZAEZCAJZKUHUJLZCAMUPUKUQULUOUJCBAUMBNUNUIAUMBOPQRSUGUKATZ
      UJUHLAUAAUBURUJUHABUCUDUEUF $.
      $( [3-Sep-2003] $)

    $( A class includes a limit ordinal iff the successor of the class includes
       it. $)
    limsssuc $p |- ( Lim A -> ( A C_ B <-> A C_ suc B ) ) $=
      ( vx wlim wss csuc sssucid sstr2 mpi wa cv wcel wceq wn wi eleq1 biimpcd 
      limsuc biimpa word wb limord adantr ordelord sylan ordsuc sylib ordtri1 
      syl11anc con2bid mpbid ex sylan9r con2d com23 imp31 wo ssel2 visset 
      elsuc ord con1d adantll mpd ssrdv impbid2 ) ADZABEZABFZEZVHBVIEVJBGABVIHI
      VGVJVHVGVJJZCABVKCKZALZVLBLZVKVMJVLBMZNZVNVGVJVMVPVGVMVJVPVGVMVJVPOVGVMJV
      OVJVMVOBALZVGVJNZVOVMVQVLBAPQVGVQVRVGVQJZVIALZVRVGVQVTABRSVSVJVTVSATZVITZ
      VJVTNUAVGWAVQAUBZUCVSBTZWBWAVQWDVGABUDWCUEBUFUGAVIUHUIUJUKULUMUNULUOUPVJV
      MVPVNOVGVJVMJZVNVOWEVNVOWEVLVILVNVOUQAVIVLURVLBCUSUTUGVAVBVCVDULVEULVF $.
      $( [30-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( Two ways to express the class of non-limit ordinal numbers.  Part of
       Definition 7.27 of [TakeutiZaring] p. 42, who use the symbol K_I for
       this class. $)
    nlimon $p |- { x e. On | ( x = (/) \/ E. y e. On x = suc y ) } =
                   { x e. On | -. Lim x } $=
      ( cv c0 wceq csuc con0 wrex wo wlim wn wcel word wb eloni dflim3 baib 
      con2bid syl rabbiia ) ACZDEUABCFEBGHIZUAJZKZAGUAGLUAMZUBUDNUAOUEUCUBUCUEU
      BKBUAPQRST $.
      $( [1-Nov-2004] $)
  $}

  ${
    $d x y z A $.
    $( The union of a nonempty class of limit ordinals is a limit ordinal. $)
    limuni3 $p |- ( ( A =/= (/) /\ A. x e. A Lim x ) -> Lim U. A ) $=
      ( vy vz c0 wne cv wlim wral wa cuni word wcel csuc w3a con0 wss limeq 
      rcla4v cvv visset limelon mpan syl6com ssrdv ssorduni syl adantl wex wi 
      n0 elunii expcom 0ellim syl5 syld 19.23aiv sylbi imp wrex rcla4cv limsuc 
      anbi1d syl6bi exp3a com3r sylcom r19.23adv eluni2 syl5ib r19.21aiv 3jca 
      dflim4 sylibr ) BEFZAGZHZABIZJZBKZLZEVTMZCGZNZVTMZCVTIZOVTHVSWAWBWFVRWAVO
      VRBPQWAVRDBPDGZBMZVRWGHZWGPMZVQWIAWGBVPWGRZSZWGTMWIWJDUAWGTUBUCUDUEBUFUGU
      HVOVRWBVOWHDUIVRWBUJZDBUKWHWMDWHVRWIWBWLWHEWGMZWBWIWNWHWBEWGBULUMWGUNUOUP
      UQURUSVRWFVOVRWECVTVRWCWGMZDBUTWEWCVTMVRWOWEDBVRWHWIWOWEUJVQWIAWGBWKVAWIW
      OWHWEWIWOWHWEWIWOWHJWDWGMZWHJWEWIWOWPWHWGWCVBVCWDWGBULVDVEVFVGVHDWCBVIVJV
      KUHVLCVTVMVN $.
      $( [29-May-2007] $) $( [1-Feb-2005] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Transfinite induction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.
    $( The Principle of Transfinite Induction.  Theorem 7.17 of [TakeutiZaring]
       p. 39.  This principle states that if ` A ` is a class of ordinal
       numbers with the property that every ordinal number included in ` A `
       also belongs to ` A ` , then every ordinal number is in ` A ` .

       See theorem ~ tfindes or ~ tfinds for the version involving basis and
       induction hypotheses. $)
    tfi $p |- ( ( A C_ On /\ A. x e. On ( x C_ A -> x e. A ) ) -> A = On ) $=
      ( con0 wss cv wcel wi wral wa wceq cdif cin c0 wrex wn eldifn adantl 
      difin0ss onss syl5com imim1d a2i eldifi syl5 imp mtod ex ralimi2 ralnex 
      sylib wne ssdif0 necon3bbii word ordon difss tz7.5 mp3an12 sylbi nsyl2 
      anim2i eqss sylibr ) BCDZAEZBDZVEBFZGZACHZIVDCBDZIBCJVIVJVDVICBKZVELMJZAV
      KNZVJVIVLOZAVKHVMOVHVNACVKVECFZVHGZVEVKFZVNVPVQIVLVGVQVGOVPVECBPQVPVQVLVG
      GZVPVOVRVQVOVHVRVOVLVFVGVLVECDVFVOCBVERVESTUAUBVECBUCUDUEUFUGUHVLAVKUIUJV
      JOVKMUKZVMVJVKMCBULUMCUNVKCDVSVMUOCBUPACVKUQURUSUTVABCVBVC $.
      $( [18-Feb-2004] $)
  $}

  ${
    $d y ph z $.  $d x y z $.
    tfis.1 $e |- ( x e. On -> ( A. y e. x [ y / x ] ph -> ph ) ) $.
    $( Transfinite Induction Schema.  If all ordinal numbers less than a given
       number ` x ` have a property (induction hypothesis), then all ordinal
       numbers have the property (conclusion).  Exercise 25 of [Enderton]
       p. 200. $)
    tfis $p |- ( x e. On -> ph ) $=
      ( vz cv con0 wcel crab wss wi wral wceq ssrab2 wsbc wa ax-17 hbs1 hbral 
      hbim eleq1 raleq sbequ12 imbi12d chvar dfss3 elrabsf simprbi ralimi 
      sylbi syl5 anc2li syl6ibr rgen tfi mp2an eqcomi rabeq2i ) BFZGHZUTAABGGAB
      GIZGVAGJEFZVAJZVBVAHZKZEGLVAGMABGNVEEGVBGHZVCVFABVBOZPVDVFVCVGVFABCFZOZCV
      BLZVGVCUTVICUSLZAKZKVFVJVGKZKBEVFVMBVFBQZVJVGBVIBCVBVHVBHBQABCRSABERTTUSV
      BMZUTVFVLVMUSVBGUAVOVKVJAVGVICUSVBUBABEUCUDUDDUEVCVHVAHZCVBLVJCVBVAUFVPVI
      CVBVPVHGHVIABEVHGVNUGUHUIUJUKULABEVBGVNUGUMUNEVAUOUPUQURUH $.
      $( [1-Mar-2004] $) $( [1-Aug-1994] $)
  $}

  ${
    $d y ph $.  $d x y $.
    tfis2f.1 $e |- ( ps -> A. x ps ) $.
    tfis2f.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    tfis2f.3 $e |- ( x e. On -> ( A. y e. x ps -> ph ) ) $.
    $( Transfinite Induction Schema, using implicit substitition. $)
    tfis2f $p |- ( x e. On -> ph ) $=
      ( cv con0 wcel wral wsbc sbie ralbii syl5ib tfis ) ACDCHZIJBDQKAACDHLZDQK
      GRBDQABCDEFMNOP $.
      $( [1-Mar-2004] $) $( [18-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x y $.
    tfis2.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    tfis2.2 $e |- ( x e. On -> ( A. y e. x ps -> ph ) ) $.
    $( Transfinite Induction Schema, using implicit substitition. $)
    tfis2 $p |- ( x e. On -> ph ) $=
      ( ax-17 tfis2f ) ABCDBCGEFH $.
      $( [1-Mar-2004] $) $( [18-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x ch $.  $d x A $.  $d x y $.
    tfis3.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    tfis3.2 $e |- ( x = A -> ( ph <-> ch ) ) $.
    tfis3.3 $e |- ( x e. On -> ( A. y e. x ps -> ph ) ) $.
    $( Transfinite Induction Schema, using implicit substitition. $)
    tfis3 $p |- ( A e. On -> ch ) $=
      ( con0 tfis2 vtoclga ) ACDFJHABDEGIKL $.
      $( [4-Nov-2003] $)
  $}

  ${
    $d x y z $.  $d x A $.  $d x z ch $.  $d x ta $.  $d y z ph $.
    $( Substitutions. $)
    tfinds.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    tfinds.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfinds.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfinds.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfinds.5 $e |- ps $.
    $( Induction hypothesis for successors. $)
    tfinds.6 $e |- ( y e. On -> ( ch -> th ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfinds.7 $e |- ( Lim x -> ( A. y e. x ch -> ph ) ) $.
    $( Principle of Transfinite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last three are the basis, the induction hypothesis for
       successors, and the induction hypothesis for limit ordinals.  Theorem
       Schema 4 of [Suppes] p. 197.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    tfinds $p |- ( A e. On -> ta ) $=
      ( vz cv con0 wcel wlim wral wi word c0 wceq csuc wrex wo wn wa eloni 
      pm2.27 syl mpbiri a1d hbra1 ax-17 hbim wsbc raleq sbequ sbie syl5bbr 
      cbvral hbs1 sbequ12 3bitr4g imbi1d visset sucid rcla4v ax-mp syl5 
      syl5cbir biimprd a1i syldd r19.23ai jaoi syl6 iman syl5ibr dflim3 notbii 
      syl5ib pm2.61d2 tfis3 ) ACEFGHJLFQZRSZWHTZCGWHUAZAUBZWIWHUCZWHUDUEZWHGQZU
      FZUEZGRUGZUHZUIUJZUIZWLWJUIWIWMWSUBZWLXAWIXBWSWLWIWMXBWSUBWHUKWMWSULUMWNW
      LWRWNAWKWNABMIUNUOWQWLGRWKAGCGWHUPAGUQURWORSZWQWKDAWQWKDUBAFWPUAZDUBXCWQW
      KXDDWQAFPQZUSZPWHUAXFPWPUAWKXDXFPWHWPUTCXFGPWHCPUQXFGUQWOXEUEAFWOUSXFCAGP
      FVAACFGCFUQJVBVCVDAXFFPWPAPUQAFPVEAFPVFVDVGVHXCCDXDNWOWPSXDCUBWOGVIVJACFW
      OWPJVKVLVMVNWQDAUBUBXCWQADKVOVPVQVRVSVTWMWSWAWBWJWTGWHWCWDWEOWFWG $.
      $( [27-Aug-2011] $) $( [16-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x ch $.  $d x th $.  $d x ta $.  $d y ph $.
    $( Substitutions. $)
    tfindsg.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    tfindsg.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfindsg.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfindsg.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfindsg.5 $e |- ( B e. On -> ps ) $.
    $( Induction hypothesis for successor ordinals. $)
    tfindsg.6 $e |- ( ( ( y e. On /\ B e. On ) /\ B C_ y ) -> ( ch -> th ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfindsg.7 $e |- ( ( ( Lim x /\ B e. On ) /\ B C_ x ) ->
                   ( A. y e. x ( B C_ y -> ch ) -> ph ) ) $.
    $( Transfinite Induction (inference schema), using implicit substititions.
       The first four hypotheses establish the substitutions we need.  The last
       three are the basis, the induction hypothesis for successors, and the
       induction hypothesis for limit ordinals.  The basis of this version is
       an arbitrary ordinal ` B ` instead of zero.  Remark in [TakeutiZaring]
       p. 57. $)
    tfindsg $p |- ( ( ( A e. On /\ B e. On ) /\ B C_ A ) -> ta ) $=
      ( con0 wcel wss cv wi c0 csuc wceq wb wa sseq2 adantl eqeq2 syl6bir imp 
      imbi12d wn imbi1d ss0 con3i pm2.21d pm5.74d sylan9bbr pm2.61ian imbi2d 
      a1d wex visset sucex eqvinc syl5bir biimpd sylan9r 19.23aiv sylbi eqcoms 
      imim2i com4r wne onsssuc onelpss suceloni sylan2 bitrd ancoms ex ax-1 
      syl8 a2d com23 sylbird df-ne anbi2i annim bitri syl5ibr pm2.61d wlim 
      wral pm2.27 ralimdv ad2antlr syld exp31 com3l com4t tfinds imp31 ) HQRIQR
      ZIHSZEXEIFTZSZAUAZUAXEIUBSZBUAZUAXEIGTZSZCUAZUAZXEIXLUCZSZDUAZUAXEXFEUAZU
      AFGHXGUBUDZXIXKXEIUBUDZXTXIXKUEYAXTUFXHXJABXTXHXJUEYAXGUBIUGZUHYAXTABUEZY
      AXTXGIUDZYCIUBXGUIJUJUKULXTXIXJAUAYAUMZXKXTXHXJAYBUNYEXJABYEXJYCXJYAIUOUP
      UQURUSUTVAXGXLUDZXIXNXEYFXHXMACXGXLIUGKULVAXGXPUDZXIXRXEYGXHXQADXGXPIUGLU
      LVAXGHUDZXIXSXEYHXHXFAEXGHIUGMULVAXEBXJNVBXLQRZXEXNXRYIXEXNXRUAZYIXEUFZXQ
      IXPUDZUAZYJXEYMYJUAYIYMXNXQXEDYMXQXEDUAZUAXNYLYNXQYNXPIXPIUDYGYDUFZFVCYNF
      XPIXLGVDVEVFYOYNFYDXEAYGDYDABXEJNVGYGADLVHVIVJVKVLVMVBVNUHYKXQIXPVOZUFZYJ
      YMUMZYKYQXMYJXEYIXMYQUEXEYIUFXMIXPRZYQIXLVPXEXPQRYSYQUEYIIXPVQXLVRVSVTWAY
      KXNXMXRYKXMCXRYKXMCDXRYKXMCDUAOWBDXQWCWDWEWFWGYQXQYLUMZUFYRYPYTXQIXPWHWIX
      QYLWJWKWLWMWBWEXEXHXGWNZXOGXGWOZAUUAXEXHUUBAUAZUUAXEXHUUCUUAXEUFXHUFUUBXN
      GXGWOZAXEUUBUUDUAUUAXHXEXOXNGXGXEXNWPWQWRPWSWTXAXBXCXD $.
      $( [5-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x ch $.  $d x th $.  $d x ta $.  $d y ph $.
    $( Substitutions. $)
    tfindsg2.1 $e |- ( x = suc B -> ( ph <-> ps ) ) $.
    tfindsg2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfindsg2.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfindsg2.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfindsg2.5 $e |- ( B e. On -> ps ) $.
    $( Induction hypothesis for successor ordinals. $)
    tfindsg2.6 $e |- ( ( y e. On /\ B e. y ) -> ( ch -> th ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfindsg2.7 $e |- ( ( Lim x /\ B e. x ) ->
                   ( A. y e. x ( B e. y -> ch ) -> ph ) ) $.
    $( Transfinite Induction (inference schema), using implicit substititions.
       The first four hypotheses establish the substitutions we need.  The last
       three are the basis, the induction hypothesis for successors, and the
       induction hypothesis for limit ordinals.  The basis of this version is
       an arbitrary ordinal ` suc B ` instead of zero.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    tfindsg2 $p |- ( ( A e. On /\ B e. A ) -> ta ) $=
      ( con0 wcel wa csuc wss onelon sucelon sylib word wi eloni ordsucss syl 
      imp sylbir cv wb ordelsuc sylan2 ancoms ex adantr sylbird sylan2br wlim 
      wral anassrs imbi1d ralbidva imbi12d cvv visset limelon mpan mpbid 
      tfindsg expl mp2and ) HQRZIHRZSZITZQRZVRHUAZEVQIQRZVSHIUBIUCZUDVOVPVTVOHU
      EVPVTUFHUGIHUHUIUJVOVSVTSEUFVPVOVSVTEABCDEFGHVRJKLMVSWABWBNUKGULZQRZVSSVR
      WCUAZCDUFZWDWAWEWFUFVSWDWASWEIWCRZWFWAWDWGWEUMZWAWCUEZWHWDIWCQUNZWCUGZUOU
      PWDWGWFUFWAWDWGWFOUQURUSWBUTUJFULZVAZVSSVRWLUAZWECUFZGWLVBZAUFZWMWAWNWQUF
      ZVSWMWASIWLRZWGCUFZGWLVBZAUFZUFZWRWMXCWAWMWSXBPUQURWAWMXCWRUMZWAWLQRZXDWM
      WAXESZWSWNXBWQWAWLUEWSWNUMXEIWLQUNWLUGUOXFXAWPAXFWTWOGWLXFWCWLRZSWGWECWAX
      EXGWHWAWIWHXEXGSZWJXHWDWIWLWCUBWKUIUOVCVDVEVDVFWLVGRWMXEFVHWLVGVIVJUOUPVK
      WBUTUJVLVMURVN $.
      $( [19-Jun-2012] $) $( [5-Jan-2005] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    tfindes.1 $e |- [ (/) / x ] ph $.
    tfindes.2 $e |- ( x e. On -> ( ph -> [ suc x / x ] ph ) ) $.
    tfindes.3 $e |- ( Lim y -> ( A. x e. y ph -> [ y / x ] ph ) ) $.
    $( Transfinite Induction with explicit substitution.  The first hypothesis
       is the basis, the second is the induction hypothesis for successors, and
       the third is the induction hypothesis for limit ordinals.  Theorem
       Schema 4 of [Suppes] p. 197. $)
    tfindes $p |- ( x e. On -> ph ) $=
      ( vz cv wsbc c0 csuc dfsbcq sbequ sbequ12r con0 wcel wi ax-17 hbs1 
      visset sucex hbsbc1v hbim wceq eleq1 sbequ12 wb suceq syl imbi12d chvar 
      wlim wral cbvral syl5ibr tfinds ) ABCHZIZABJIABGHZIZABUSKZIZACGBHZABUQJLA
      CGBMABUQVALACBNDVCOPZAABVCKZIZQZQUSOPZUTVBQZQBGVHVIBVHBRUTVBBABGSZABVAUSG
      TUAUBUCUCVCUSUDZVDVHVGVIVCUSOUEVKAUTVFVBABGUFZVKVEVAUDVFVBUGVCUSUHABVEVAL
      UIUJUJEUKUQULABUQUMURUTGUQUMFAUTBGUQAGRVJVLUNUOUP $.
      $( [5-Mar-2004] $)
  $}

  ${
    $d x y ta $.  $d x ps $.  $d x ch $.  $d x th $.  $d y ph $.
    $( Substitutions. $)
    tfinds2.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    tfinds2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfinds2.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    $( Basis. $)
    tfinds2.4 $e |- ( ta -> ps ) $.
    $( Induction hypothesis for successors. $)
    tfinds2.5 $e |- ( y e. On -> ( ta -> ( ch -> th ) ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfinds2.6 $e |- ( Lim x -> ( ta -> ( A. y e. x ch -> ph ) ) ) $.
    $( Transfinite Induction (inference schema), using implicit substititions.
       The first three hypotheses establish the substitutions we need.  The
       last three are the basis and the induction hypotheses (for successor and
       limit ordinals respectively).  Theorem Schema 4 of [Suppes] p. 197.  The
       wff ` ta ` is an auxiliary antecedent to help shorten proofs using this
       theorem. $)
    tfinds2 $p |- ( x e. On -> ( ta -> ph ) ) $=
      ( wi c0 wsbc 0ex cv wceq imbi2d sbcie mpbir con0 wcel csuc a2d sbimi cvv 
      wb visset sbcel1gv ax-mp sbim 3imtr3i bicomd equcoms sucex sbbii suceq 
      sbcco2 bitr3i 3imtr3g wlim wral r19.21v syl5ib ax-17 limeq sbie sbralie 
      syl5ibr tfindes ) EANZFGVMFOPEBNZKVMVNFOQFRZOSABEHTUAUBVOUCUDZECNZGVOPZED
      NZGVOPZVMVMFVOUEZPZGRZUCUDZGVOPZVQVSNZGVOPVPVRVTNWDWFGFWDECDLUFUGVOUHUDWE
      VPUIFUJZGVOUCUHUKULVQVSGFUMUNVQVMGVOWGWCVOSCAECAUIFGVOWCSACIUOUPTZUAVTVMF
      WCUEZPZGVOPWBWJVSGFVMVSFWIWCGUJUQVOWISADEJTUAURVMFGWAWIVOWCUSUTVAVBWCVCZV
      QGVOVDZFWCPZVMFWCPZVMFWCVDVOVCZFWCPWLVMNZFWCPWKWMWNNWOWPFGWOECGVOVDZNVMWL
      WOEWQAMUFECGVOVEVFUGWOWKFGWKFVGVOWCVHVIWLVMFGUMUNVQVMGFWHVJVKVL $.
      $( [4-Sep-2004] $)
  $}

  ${
    $d x A $.  $d y ph $.  $d x ch $.  $d x ta $.  $d x y et $.
    $( Substitutions. $)
    tfinds3.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    tfinds3.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfinds3.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfinds3.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfinds3.5 $e |- ( et -> ps ) $.
    $( Induction hypothesis for successors. $)
    tfinds3.6 $e |- ( y e. On -> ( et -> ( ch -> th ) ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfinds3.7 $e |- ( Lim x -> ( et -> ( A. y e. x ch -> ph ) ) ) $.
    $( Principle of Transfinite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last three are the basis, the induction hypothesis for
       successors, and the induction hypothesis for limit ordinals.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 21-Jun-2011.) $)
    tfinds3 $p |- ( A e. On -> ( et -> ta ) ) $=
      ( wi cv c0 wceq imbi2d csuc con0 wcel a2d wlim wral r19.21v syl5ib 
      tfinds ) FAQZFBQFCQZFDQFEQGHIGRZSTABFJUAUMHRZTACFKUAUMUNUBTADFLUAUMITAEFM
      UANUNUCUDFCDOUEUMUFZFCHUMUGZQUKULHUMUGUOFUPAPUEFCHUMUHUIUJ $.
      $( [21-Jun-2011] $) $( [6-Jan-2005] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The natural numbers (i.e. finite ordinals)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbol. $)
  $c om $. $( Greek letter omega $)

  $( Extend class notation to include the class of natural numbers. $)
  com $a class om $.

  ${
    $d x y $.
    $( Define the class of natural numbers, which are all ordinal numbers that
       are less than every limit ordinal, i.e. all finite ordinals.  Our
       definition is a variant of the Definition of N of [BellMachover]
       p. 471.  See ~ dfom2 for an alternate definition.  Later, when we assume
       the Axiom of Infinity, we show ` om ` is a set in ~ omex , and ` om `
       can then be defined per ~ dfom3 (the smallest inductive set) and
       ~ dfom4 .

       _Note_: the natural numbers ` om ` are a subset of the ordinal numbers
       ~ df-on .  They are completely different from the natural numbers ` NN `
       ( ~ df-n ) that are a subset of the complex numbers defined much later
       in our development, although the two sets have analogous properties and
       operations defined on them. $)
    df-om $a |- om = { x | ( Ord x /\ A. y ( Lim y -> x e. y ) ) } $.
  $}

  ${
    $d x z $.  $d y z $.
    $( An alternate definition of the set of natural numbers ` om ` .
       Definition 7.28 of [TakeutiZaring] p. 42, who use the symbol K_I for the
       inner class builder of non-limit ordinal numbers (see ~ nlimon ). $)
    dfom2 $p |- om = { x e. On | suc x C_ { y e. On | -. Lim y } } $=
      ( vz cv word wlim wcel wi wal wa cab con0 csuc wn crab wss com visset 
      elon anbi1i wb onsssuc ontri1 bitr3d ancoms wceq limeq notbid elrab a1i 
      imbi12d pm5.74da cvv limelon mpan pm4.71ri imbi1i impexp ibar imbi2d 
      con34b syl5bb pm5.74i 3bitri syl6rbbr simpr suceloni onelon ex syl ancrd 
      impbid2 imbi1d syl5bbr bitrd albidv dfss2 syl6bbr pm5.32i bitr3i abbii 
      df-om df-rab 3eqtr4i ) ADZEZCDZFZWEWGGZHZCIZJZAKWELGZWEMZBDZFZNZBLOZPZJZA
      KQWSALOWLWTAWLWMWKJWTWMWFWKWEARSTWMWKWSWMWKWGWNGZWGWRGZHZCIWSWMWJXCCWMWJW
      GLGZXCHZXCWMXEXDWINZXDWHNZJZHZHZWJWMXDXCXIWMXDJZXAXFXBXHXDWMXAXFUAXDWMJWG
      WEPXAXFWGWEUBWGWEUCUDUEXBXHUAXKWQXGBWGLWOWGUFWPWHWOWGUGUHUIUJUKULWJXDWHJZ
      WIHXDWJHXJWHXLWIWHXDWGUMGWHXDCRWGUMUNUOUPUQXDWHWIURXDWJXIXDXFXGHXIWJXDXGX
      HXFXDXGUSUTWHWIVAVBVCVDVEWMXDXAJZXBHXCXEWMXMXAXBWMXMXAXDXAVFWMXAXDWMWNLGZ
      XAXDHWEVGXNXAXDWNWGVHVIVJVKVLVMXDXAXBURVNVOVPCWNWRVQVRVSVTWAACWBWSALWCWD 
      $.
      $( [1-Nov-2004] $)
  $}

  ${
    $d A x y $.
    elom.1 $e |- A e. _V $.
    $( Membership in omega.  The hypothesis can be eliminated if we assume the
       Axiom of Infinity; see ~ elom3 . $)
    elom $p |- ( A e. om <-> ( Ord A /\ A. x ( Lim x -> A e. x ) ) ) $=
      ( vy cv word wlim wcel wi wal wa com wceq ordeq eleq1 imbi2d albidv 
      anbi12d df-om elab2 ) DEZFZAEZGZUAUCHZIZAJZKBFZUDBUCHZIZAJZKDBLCUABMZUBUH
      UGUKUABNULUFUJAULUEUIUDUABUCOPQRDAST $.
      $( [15-May-1994] $)
  $}

  ${
    $d A x y $.
    $( Membership in omega.  The antecedent can be eliminated if we assume the
       Axiom of Infinity; see ~ elom3 . $)
    elomg $p |- ( A e. B ->
                ( A e. om <-> ( Ord A /\ A. x ( Lim x -> A e. x ) ) ) ) $=
      ( vy cv com wcel word wlim wi wal wa eleq1 wceq ordeq imbi2d albidv 
      anbi12d visset elom vtoclbg ) DEZFGUBHZAEZIZUBUDGZJZAKZLBFGBHZUEBUDGZJZAK
      ZLDBCUBBFMUBBNZUCUIUHULUBBOUMUGUKAUMUFUJUEUBBUDMPQRAUBDSTUA $.
      $( [25-Mar-1995] $)
  $}

  ${
    $d x y $.
    $( Omega is a subset of ` On ` .  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    omsson $p |- om C_ On $=
      ( vx vy com cv csuc wlim wn con0 crab wss dfom2 ssrab2 eqsstri ) CADEBDFG
      BHIJZAHIHABKNAHLM $.
      $( [27-Aug-2011] $) $( [13-Jun-1994] $)
  $}

  ${
    $d x y A $.
    $( The class of natural numbers is a subclass of any (infinite) limit
       ordinal.  Exercise 1 of [TakeutiZaring] p. 44.  Remarkably, our proof
       does not require the Axiom of Infinity. $)
    limomss $p |- ( Lim A -> om C_ A ) $=
      ( vx vy word wlim com wss limord con0 wcel wceq wo wi ordeleqon wa cv 
      wal limeq eleq2 imbi12d cla4gv visset elom simprbi syl5 com23 imp ssrdv 
      ex omsson sseq2 mpbiri a1d jaoi sylbi mpcom ) ADZAEZFAGZAHUQAIJZAIKZLURUS
      MZANUTVBVAUTURUSUTUROBFAUTURBPZFJZVCAJZMUTVDURVEUTCPZEZVCVFJZMZCQZURVEMZV
      DVIVKCAIVFAKVGURVHVEVFARVFAVCSTUAVDVCDVJCVCBUBUCUDUEUFUGUHUIVAUSURVAUSFIG
      UJAIFUKULUMUNUOUP $.
      $( [30-Oct-2003] $)
  $}

  $( A natural number is an ordinal number. $)
  nnon $p |- ( A e. om -> A e. On ) $=
    ( com con0 omsson sseli ) BCADE $.
    $( [27-Jun-1994] $)

  ${
    nnoni.1 $e |- A e. om $.
    $( A natural number is an ordinal number. $)
    nnoni $p |- A e. On $=
      ( com wcel con0 nnon ax-mp ) ACDAEDBAFG $.
      $( [27-Jun-1994] $)
  $}

  $( A natural number is ordinal. $)
  nnord $p |- ( A e. om -> Ord A ) $=
    ( com wcel con0 word nnon eloni syl ) ABCADCAEAFAGH $.
    $( [17-Oct-1995] $)

  ${
    $d x y z $.
    $( Omega is ordinal.  Theorem 7.32 of [TakeutiZaring] p. 43.  (The proof
       was shortened by Andrew Salmon, 27-Aug-2011.) $)
    ordom $p |- Ord om $=
      ( vy vx vz com wtr con0 wss word cv wcel wa wi wal dftr2 wlim ordelord 
      expcom limord ordtr trel 3syl exp3a com12 a2d alimdv anim12d visset elom 
      3imtr4g imp ax-gen mpgbir omsson ordon trssord mp3an ) DEZDFGFHDHUQAIZBIZ
      JZUSDJZKURDJZLZBMAABDNVCBUTVAVBUTUSHZCIZOZUSVEJZLZCMZKURHZVFURVEJZLZCMZKV
      AVBUTVDVJVIVMVDUTVJUSURPQUTVHVLCUTVFVGVKVFUTVGVKLVFUTVGVKVFVEHVEEUTVGKVKL
      VERVESVEURUSTUAUBUCUDUEUFCUSBUGUHCURAUGUHUIUJUKULUMUNDFUOUP $.
      $( [18-Oct-1995] $)
  $}

  $( A member of a natural number is a natural number. $)
  elnn $p |- ( ( A e. B /\ B e. om ) -> A e. om ) $=
    ( com wtr wcel wa wi word ordom ordtr ax-mp trel ) CDZABEBCEFACEGCHMICJKCAB
    LK $.
    $( [21-Jun-1998] $)

  $( The class of natural numbers ` om ` is either an ordinal number (if we
     accept the Axiom of Infinity) or the proper class of all ordinal numbers
     (if we deny the Axiom of Infinity).  Remark in [TakeutiZaring] p. 43. $)
  omon $p |- ( om e. On \/ om = On ) $=
    ( com word con0 wcel wceq wo ordom ordeleqon mpbi ) ABACDACEFGAHI $.
    $( [10-May-1998] $)

  ${
    $d x y A $.
    $( A natural number is not a limit ordinal. $)
    nnlim $p |- ( A e. om -> -. Lim A ) $=
      ( vx com wcel wlim word wn nnord ordirr syl cv wi wal wa elomg ibi 
      simprd wceq limeq eleq2 imbi12d cla4gv mpd mtod ) ACDZAEZAADZUEAFZUGGAHAI
      JUEBKZEZAUIDZLZBMZUFUGLZUEUHUMUEUHUMNBACOPQULUNBACUIARUJUFUKUGUIASUIAATUA
      UBUCUD $.
      $( [18-Oct-1995] $)

    $( The class of natural numbers is a subclass of the class of non-limit
       ordinal numbers.  Exercise 4 of [TakeutiZaring] p. 42.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    omssnlim $p |- om C_ { x e. On | -. Lim x } $=
      ( com cv wlim wn con0 crab wss wral ssrab omsson nnlim rgen mpbir2an ) BA
      CZDEZAFGHBFHPABIPAFBJKPABOLMN $.
      $( [27-Aug-2011] $) $( [2-Nov-2004] $)
  $}

  $( Omega is a limit ordinal.  Theorem 2.8 of [BellMachover] p. 473.  Our
     proof, however, does not require the Axiom of Infinity. $)
  limom $p |- Lim om $=
    ( vx com word wlim ordom con0 wcel wceq wo ordeleqon wn ordirr ax-mp cv wi 
    wal wa elomg wss wb ordtri1 adantr ordsseleq biimpd nnlim a1i limeq con3d 
    com12 jaod sylan9 sylbird con4d mpanl2 limord sylan ex pm2.43b 19.21aiv 
    jctil syl5bir mt3i limon mpbiri jaoi sylbi ) BCZBDZEVGBFGZBFHZIVHBJVIVHVJVI
    VHBBGZVGVKKEBLMVIVKVGANZDZBVLGZOZAPZQVHKZABFRVQVPVGVQVOAVQVMVNVMVQVOVLCZVQV
    OVMVRVGVQVOEVRVGQZVQQZVNVMVTVNKZVLBSZVMKZVSWBWATVQVLBUAUBVSWBVLBGZVLBHZIZVQ
    WCVSWBWFVLBUCUDVQWDWCWEWDWCOVQVLUEUFWEVQWCWEVMVHWEVMVHVLBUGUDUHUIUJUKULUMUN
    VLUOUPUQURUSEUTVAVBVJVHFDVCBFUGVDVEVFM $.
    $( [26-Mar-1995] $)

  $( A class belongs to omega iff its successor does. $)
  peano2b $p |- ( A e. om <-> suc A e. om ) $=
    ( com wlim wcel csuc wb limom limsuc ax-mp ) BCABDAEBDFGBAHI $.
    $( [3-Dec-1995] $)

  ${
    $d x y A $.
    $( A nonzero natural number is a successor. $)
    nnsuc $p |- ( ( A e. om /\ A =/= (/) ) -> E. x e. om A = suc x ) $=
      ( com wcel c0 wne wa cv csuc wceq con0 wrex wlim wn nnlim adantr word wi 
      cuni wb orduninsuc w3a df-lim biimpri 3expia sylbird nnord sylan mt3d 
      eleq1 biimpcd peano2b syl6ibr ancrd adantld reximdv2 mpd ) BCDZBEFZGZBAHZ
      IZJZAKLZVCACLZUTVDBMZURVFNUSBOPBQZUSVDNZVFRURVGUSGVHBBSJZVFVGVIVHTUSABUAP
      VGUSVIVFVFVGUSVIUBBUCUDUEUFBUGUHUIURVDVERUSURVCVCAKCURVCVACDZVCGVAKDURVCV
      JURVCVBCDZVJVCURVKBVBCUJUKVAULUMUNUOUPPUQ $.
      $( [6-Apr-2007] $) $( [18-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( An ordinal subclass of non-limit ordinals is a class of natural
       numbers.  Exercise 7 of [TakeutiZaring] p. 42. $)
    ssnlim $p |- ( ( Ord A /\ A C_ { x e. On | -. Lim x } ) -> A C_ om ) $=
      ( word cv wlim wn con0 crab wss wa com wcel limom ssel wceq limeq notbid 
      elrab simprbi syl6 mt2i adantl wb ordom ordtri1 mpan2 adantr mpbird ) BCZ
      BADZEZFZAGHZIZJBKIZKBLZFZUNUQUIUNUPKEZMUNUPKUMLZURFZBUMKNUSKGLUTULUTAKGUJ
      KOUKURUJKPQRSTUAUBUIUOUQUCZUNUIKCVAUDBKUEUFUGUH $.
      $( [2-Nov-2004] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Peano's postulates
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Zero is a natural number.  One of Peano's 5 postulates for arithmetic.
     Proposition 7.30(1) of [TakeutiZaring] p. 42.  Note:  Unlike most
     textbooks, our proofs of ~ peano1 through ~ peano5 do not use the Axiom of
     Infinity.  Unlike Takeuti and Zaring, they also do not use the Axiom of
     Regularity. $)
  peano1 $p |- (/) e. om $=
    ( com wlim c0 wcel limom 0ellim ax-mp ) ABCADEAFG $.
    $( [15-May-1994] $)

  $( The successor of any natural number is a natural number.  One of Peano's 5
     postulates for arithmetic.  Proposition 7.30(2) of [TakeutiZaring]
     p. 42. $)
  peano2 $p |- ( A e. om -> suc A e. om ) $=
    ( com wcel csuc peano2b biimpi ) ABCADBCAEF $.
    $( [3-Sep-2003] $)

  $( The successor of any natural number is not zero.  One of Peano's 5
     postulates for arithmetic.  Proposition 7.30(3) of [TakeutiZaring]
     p. 42. $)
  peano3 $p |- ( A e. om -> suc A =/= (/) ) $=
    ( csuc c0 wne com wcel nsuceq0 a1i ) ABCDAEFAGH $.
    $( [2-Jun-2007] $) $( [3-Sep-2003] $)

  $( Two natural numbers are equal iff their successors are equal, i.e. the
     successor function is one-to-one.  One of Peano's 5 postulates for
     arithmetic.  Proposition 7.30(4) of [TakeutiZaring] p. 43. $)
  peano4 $p |- ( ( A e. om /\ B e. om ) -> ( suc A = suc B <-> A = B ) ) $=
    ( con0 wcel csuc wceq wb com suc11 nnon syl2an ) ACDBCDAEBEFABFGAHDBHDABIAJ
    BJK $.
    $( [3-Sep-2003] $)

  ${
    $d x y A $.
    $( The induction postulate: any class containing zero and closed under the
       successor operation contains all natural numbers.  One of Peano's 5
       postulates for arithmetic.  Proposition 7.30(5) of [TakeutiZaring]
       p. 43, except our proof does not require the Axiom of Infinity.  The
       more traditional statement of mathematical induction as a theorem
       schema, with a basis and an induction hypothesis, is derived from this
       theorem as theorem ~ findes . $)
    peano5 $p |- ( ( (/) e. A /\
                 A. x e. om ( x e. A -> suc x e. A ) ) -> om C_ A ) $=
      ( vy c0 wcel cv csuc wi com wral wa cdif wceq wss cin wrex wn eldifn 
      adantl wne eldifi eleq1 biimpcd necon3bd elndif syl5com imp nnsuc 
      syl11anc adantlr adantr hbra1 ax-17 hban ra4 visset sucid eleq2 mpbiri 
      peano2b syl6bbr neldif minel sylan2 exp32 syl6bi mpid syl5 imp3a eleq1a 
      com12 imim12d com13 sylan9 r19.23ad a1i imp41 mpd mtand nrexdv word 
      ordom difss tz7.5 mp3an12 necon1bi syl ssdif0 sylibr ) DBEZAFZBEZWKGZBEZH
      ZAIJZKZIBLZDMZIBNWQWRCFZODMZCWRPZQWSWQXACWRWQWTWREZKZXAWTBEZXCXEQWQWTIBRS
      XDXAKWTWMMZAIPZXEXDXGXAWJXCXGWPWJXCKWTIEZWTDTZXGXCXHWJWTIBUAZSWJXCXIXCDWR
      EZQXIWJXCXKWTDWTDMXCXKWTDWRUBUCUDDBIUEUFUGAWTUHUIUJUKWJWPXCXAXGXEHZWPXCXA
      XLHHHWJWPXCXAXLWPXCXAKZKXFXEAIWPXMAWOAIULXMAUMUNXEAUMWPWKIEZWOXMXFXEHWOAI
      UOXFWOXMXEXFXMWLWNXEXFXCXAWLXFXHXAWLHZXCXFXHWKWTEZXOXFXPWKWMEWKAUPUQWTWMW
      KURUSXFXHXNXPXOHXFXHWMIEXNWTWMIUBWKUTVAXNXPXAWLXNWKWREQWLXPXAKWKIBVBWKWTW
      RVCVDVEVFVGXJVHVIWNXFXEWMBWTVJVKVLVMVNVOVEVPVQVRVSVTXBWRDIWAWRINWRDTXBWBI
      BWCCIWRWDWEWFWGIBWHWI $.
      $( [18-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( A natural number is either 0 or a successor. $)
    nn0suc $p |- ( A e. om -> ( A = (/) \/ E. x e. om A = suc x ) ) $=
      ( com wcel c0 wceq cv csuc wrex wn wne nnsuc df-ne sylan2br ex orrd ) BCD
      ZBEFZBAGHFACIZQRJZSQBEKSTABLBEMNOP $.
      $( [27-May-1998] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Finite induction (for finite ordinals)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.
    find.1 $e |- ( A C_ om /\ (/) e. A /\ A. x e. A suc x e. A ) $.
    $( The Principle of Finite Induction (mathematical induction).  Corollary
       7.31 of [TakeutiZaring] p. 43.  The simpler hypothesis shown here was
       suggested in an email from "Colin" on 1-Oct-2001.  The hypothesis states
       that ` A ` is a set of natural numbers, zero belongs to ` A ` , and
       given any member of ` A ` the member's successor also belongs to
       ` A ` .  The conclusion is that every natural number is in ` A ` .  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    find $p |- A = om $=
      ( com wss c0 wcel cv csuc wral simp1i wi wa w3a 3simpc ax-mp wal df-ral 
      alral sylbi anim2i peano5 eqssi ) BDBDEZFBGZAHZIBGZABJZCKUEUFBGUGLZADJZMZ
      DBEUEUHMZUKUDUEUHNULCUDUEUHOPUHUJUEUHUIAQUJUGABRUIADSTUAPABUBPUC $.
      $( [27-Aug-2011] $) $( [22-Feb-2004] $)
  $}

  ${
    $d x y $.  $d x A $.  $d x ps $.  $d x ch $.  $d x th $.  $d x ta $.
    $d y ph $.
    $( Substitutions. $)
    finds.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    finds.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    finds.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    finds.5 $e |- ps $.
    $( Induction hypothesis. $)
    finds.6 $e |- ( y e. om -> ( ch -> th ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last two are the basis and the induction hypothesis.  Theorem
       Schema 22 of [Suppes] p. 136. $)
    finds $p |- ( A e. om -> ta ) $=
      ( com wcel cab c0 cv csuc wi wral wss 0ex elab mpbir visset sucex 
      3imtr4g rgen peano5 mp2an sseli elabg mpbid ) HOPHAFQZPEOUPHRUPPZGSZUPPZU
      RTZUPPZUAZGOUBOUPUCUQBMABFRUDIUEUFVBGOUROPCDUSVANACFURGUGZJUEADFUTURVCUHK
      UEUIUJGUPUKULUMAEFHOLUNUO $.
      $( [14-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x ps $.  $d x ch $.  $d x th $.  $d x ta $.
    $d y ph $.
    $( Substitutions. $)
    findsg.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    findsg.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    findsg.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    findsg.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    findsg.5 $e |- ( B e. om -> ps ) $.
    $( Induction hypothesis. $)
    findsg.6 $e |- ( ( ( y e. om /\ B e. om ) /\ B C_ y ) -> ( ch -> th ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last two are the basis and the induction hypothesis.  The
       basis of this version is an arbitrary natural number ` B ` instead of
       zero. $)
    findsg $p |- ( ( ( A e. om /\ B e. om ) /\ B C_ A ) -> ta ) $=
      ( com wcel wss cv wi c0 csuc wceq wb wa sseq2 adantl eqeq2 syl6bir imp 
      imbi12d wn imbi1d ss0 con3i pm2.21d pm5.74d sylan9bbr pm2.61ian imbi2d 
      a1d wex visset sucex eqvinc syl5bir biimpd sylan9r 19.23aiv sylbi eqcoms 
      imim2i com4r wne con0 onsssuc onelpss suceloni sylan2 bitrd nnon syl2an 
      ancoms ex ax-1 syl8 a2d com23 sylbird df-ne anbi2i annim bitri syl5ibr 
      pm2.61d finds imp31 ) HPQIPQZIHRZEWRIFSZRZATZTWRIUARZBTZTWRIGSZRZCTZTWRIX
      EUBZRZDTZTWRWSETZTFGHWTUAUCZXBXDWRIUAUCZXLXBXDUDXMXLUEXAXCABXLXAXCUDXMWTU
      AIUFZUGXMXLABUDZXMXLWTIUCZXOIUAWTUHJUIUJUKXLXBXCATXMULZXDXLXAXCAXNUMXQXCA
      BXQXCXOXCXMIUNUOUPUQURUSUTWTXEUCZXBXGWRXRXAXFACWTXEIUFKUKUTWTXHUCZXBXJWRX
      SXAXIADWTXHIUFLUKUTWTHUCZXBXKWRXTXAWSAEWTHIUFMUKUTWRBXCNVAXEPQZWRXGXJYAWR
      XGXJTZYAWRUEZXIIXHUCZTZYBWRYEYBTYAYEXGXIWRDYEXIWRDTZTXGYDYFXIYFXHIXHIUCXS
      XPUEZFVBYFFXHIXEGVCVDVEYGYFFXPWRAXSDXPABWRJNVFXSADLVGVHVIVJVKVLVAVMUGYCXI
      IXHVNZUEZYBYEULZYCYIXFYBWRYAXFYIUDZIVOQZXEVOQZYKWRYAYLYMUEXFIXHQZYIIXEVPY
      LXHVOQYNYIUDYMIXHVQXEVRVSVTIWAXEWAWBWCYCXGXFXJYCXFCXJYCXFCDXJYCXFCDTOWDDX
      IWEWFWGWHWIYIXIYDULZUEYJYHYOXIIXHWJWKXIYDWLWMWNWOWDWGWPWQ $.
      $( [16-Sep-1995] $)
  $}

  ${
    $d x y ta $.  $d x ps $.  $d x ch $.  $d x th $.  $d y ph $.
    $( Substitutions. $)
    finds2.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    finds2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds2.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    $( Basis. $)
    finds2.4 $e |- ( ta -> ps ) $.
    $( Induction hypothesis. $)
    finds2.5 $e |- ( y e. om -> ( ta -> ( ch -> th ) ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first three hypotheses establish the substitutions
       we need.  The last two are the basis and the induction hypothesis.
       Theorem Schema 22 of [Suppes] p. 136. $)
    finds2 $p |- ( x e. om -> ( ta -> ph ) ) $=
      ( cv com wcel wi cab c0 csuc wral wss 0ex wceq imbi2d elab mpbir a2d 
      visset sucex 3imtr4g rgen peano5 mp2an sseli abid sylib ) FMZNOUQEAPZFQZO
      URNUSUQRUSOZGMZUSOZVASZUSOZPZGNTNUSUAUTEBPZKURVFFRUBUQRUCABEHUDUEUFVEGNVA
      NOZECPZEDPZVBVDVGECDLUGURVHFVAGUHZUQVAUCACEIUDUEURVIFVCVAVJUIUQVCUCADEJUD
      UEUJUKGUSULUMUNURFUOUP $.
      $( [29-Nov-2002] $)
  $}

  ${
    $d x y $.  $d x ps $.  $d x ch $.  $d x th $.  $d y ph $.
    $( Substitutions. $)
    finds1.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    finds1.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds1.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    $( Basis. $)
    finds1.4 $e |- ps $.
    $( Induction hypothesis. $)
    finds1.5 $e |- ( y e. om -> ( ch -> th ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first three hypotheses establish the substitutions
       we need.  The last two are the basis and the induction hypothesis.
       Theorem Schema 22 of [Suppes] p. 136. $)
    finds1 $p |- ( x e. om -> ph ) $=
      ( cv com wcel c0 wceq eqid a1i wi a1d finds2 mpi ) ELMNOOPZAOQABCDUCEFGHI
      BUCJRFLMNCDSUCKTUAUB $.
      $( [22-Mar-2006] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    findes.1 $e |- [ (/) / x ] ph $.
    findes.2 $e |- ( x e. om -> ( ph -> [ suc x / x ] ph ) ) $.
    $( Finite induction with explicit substitution.  The first hypothesis is
       the basis and the second is the induction hypothesis.  Theorem Schema 22
       of [Suppes] p. 136.  See ~ tfindes for the transfinite version.
       (Contributed by Raph Levien, 9-Jul-2003.) $)
    findes $p |- ( x e. om -> ph ) $=
      ( vz vy cv wsbc c0 csuc dfsbcq sbequ sbequ12r com wcel wi ax-17 hbs1 
      visset sucex hbsbc1v hbim wceq eleq1 sbequ12 wb suceq syl imbi12d chvar 
      finds ) ABEGZHABIHABFGZHZABUMJZHZAEFBGZABULIKAEFBLABULUOKAEBMCUQNOZAABUQJ
      ZHZPZPUMNOZUNUPPZPBFVBVCBVBBQUNUPBABFRABUOUMFSTUAUBUBUQUMUCZURVBVAVCUQUMN
      UDVDAUNUTUPABFUEVDUSUOUCUTUPUFUQUMUGABUSUOKUHUIUIDUJUK $.
      $( [9-Jul-2003] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Functions and relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c X. $. $( Times symbol (cross product symbol) (read: 'cross') $)
  $c `' $. $( Small elevated smiley (converse operation) $)
  $c dom $. $( Domain $)
  $c ran $. $( Range $)
  $c |` $. $( Right hook (restriction symbol) $)
  $c " $. $( Left quote (image symbol) $)
  $c o. $. $( Small circle (composition symbol) $)
  $c Rel $. $( Relation predicate $)
  $c Fun $. $( Function predicate $)
  $c Fn $. $( Function connective $)
  $c : $. $( Colon $)
  $c --> $. $( Domain-codomain connective $)
  $c -1-1-> $. $( 'One-to-one' domain-codomain connective $)
  $c -onto-> $. $( 'Onto' domain-codomain connective $)
  $c -1-1-onto-> $. $( 'One-to-one' and 'onto' domain-codomain connective $)
  $c ` $. $( Left apostrophe (function value symbol) $)
  $c Isom $. $( Isomorphism $)

  $( Extend the definition of a class to include the cross product. $)
  cxp $a class ( A X. B ) $.

  $( Extend the definition of a class to include the converse of a class. $)
  ccnv $a class `' A $.

  $( Extend the definition of a class to include the domain of a class. $)
  cdm $a class dom A $.

  $( Extend the definition of a class to include the range of a class. $)
  crn $a class ran A $.

  $( Extend the definition of a class to include the restriction of a class.
     (Read:  The restriction of ` A ` to ` B ` .) $)
  cres $a class ( A |` B ) $.

  $( Extend the definition of a class to include the image of a class.  (Read:
     The image of ` B ` under ` A ` .) $)
  cima $a class ( A " B ) $.

  $( Extend the definition of a class to include the composition of two
     classes.  (Read:  The composition of ` A ` and ` B ` .) $)
  ccom $a class ( A o. B ) $.

  $( Extend the definition of a wff to include the relation predicate.  (Read:
     ` A ` is a relation.) $)
  wrel $a wff Rel A $.

  $( Extend the definition of a wff to include the function predicate.  (Read:
     ` A ` is a function.) $)
  wfun $a wff Fun A $.

  $( Extend the definition of a wff to include the function predicate with a
     domain.  (Read: ` A ` is a function on ` B ` .) $)
  wfn $a wff A Fn B $.

  $( Extend the definition of a wff to include the function predicate with
     domain and codomain.  (Read: ` F ` maps ` A ` into ` B ` .) $)
  wf $a wff F : A --> B $.

  $( Extend the definition of a wff to include one-to-one functions.  (Read:
     ` F ` maps ` A ` one-to-one into ` B ` .)  The notation ("1-1" above the
     arrow) is from Definition 6.15(5) of [TakeutiZaring] p. 27. $)
  wf1 $a wff F : A -1-1-> B $.

  $( Extend the definition of a wff to include onto functions.  (Read: ` F `
     maps ` A ` onto ` B ` .)  The notation ("onto" below the arrow) is from
     Definition 6.15(4) of [TakeutiZaring] p. 27. $)
  wfo $a wff F : A -onto-> B $.

  $( Extend the definition of a wff to include one-to-one onto functions.
     (Read: ` F ` maps ` A ` one-to-one onto ` B ` .)  The notation ("1-1"
     above the arrow and "onto" below the arrow) is from Definition 6.15(6) of
     [TakeutiZaring] p. 27. $)
  wf1o $a wff F : A -1-1-onto-> B $.

  $( Extend the definition of a class to include the value of a function.
     (Read:  The value of ` F ` at ` A ` , or " ` F ` of ` A ` .") $)
  cfv $a class ( F ` A ) $.

  $( Extend the definition of a wff to include the isomorphism property.
     (Read: ` H ` is an ` R ` , ` S ` isomorphism of ` A ` onto ` B ` .) $)
  wiso $a wff H Isom R , S ( A , B ) $.

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Define the cross product of two classes.  Definition 9.11 of [Quine]
       p. 64. $)
    df-xp $a |- ( A X. B ) = { <. x , y >. | ( x e. A /\ y e. B ) } $.

    $( Define the relation predicate.  Definition 6.4(1) of [TakeutiZaring]
       p. 23.  For alternate definitions, see ~ dfrel2 and ~ dfrel3 . $)
    df-rel $a |- ( Rel A <-> A C_ ( _V X. _V ) ) $.

    $( Define the converse of a class.  Definition 9.12 of [Quine] p. 64.  We
       use Quine's breve accent (smile) notation.  Like Quine, we use it as a
       prefix, which eliminates the need for parentheses.  Many authors use the
       postfix superscript "to the minus one."  "Converse" is Quine's
       terminology; some authors call it "inverse," especially when the
       argument is a function. $)
    df-cnv $a |- `' A = { <. x , y >. | y A x } $.

    $( Define the composition of two classes.  Definition 6.6(3) of
       [TakeutiZaring] p. 24.  Note that Definition 7 of [Suppes] p. 63
       reverses ` A ` and ` B ` , uses ` /. ` instead of ` o. ` , and calls the
       operation "relative product." $)
    df-co $a |- ( A o. B ) = { <. x , y >. | E. z ( x B z /\ z A y ) } $.

    $( Define the domain of a class.  Definition 3 of [Suppes] p. 59.  For
       alternate definitions see ~ dfdm2 , ~ dfdm3 , and ~ dfdm4 .  The
       notation " ` dom ` " is used by Enderton; other authors sometimes use
       script D. $)
    df-dm $a |- dom A = { x | E. y x A y } $.

    $( Define the range of a class.  For an alternate definitions, see
       ~ dfrn2 , ~ dfrn3 , and ~ dfrn4 .  The notation " ` ran ` " is used by
       Enderton; other authors sometimes use script R or script W. $)
    df-rn $a |- ran A = dom `' A $.

    $( Define the restriction of a class.  Definition 6.6(1) of [TakeutiZaring]
       p. 24. $)
    df-res $a |- ( A |` B ) = ( A i^i ( B X. _V ) ) $.

    $( Define the image of a class.  Definition 6.6(2) of [TakeutiZaring]
       p. 24.  For an alternate definition, see ~ dfima2 . $)
    df-ima $a |- ( A " B ) = ran ( A |` B ) $.

    $( Define a function.  Definition 10.1 of [Quine] p. 65.  For alternate
       definitions, see ~ dffun2 , ~ dffun3 , ~ dffun4 , ~ dffun5 , ~ dffun6 ,
       ~ dffun7 , ~ dffun8 , and ~ dffun9 . $)
    df-fun $a |- ( Fun A <-> ( Rel A /\ ( A o. `' A ) C_ _I ) ) $.

    $( Define a function with domain.  Definition 6.15(1) of [TakeutiZaring]
       p. 27.  For alternate definitions, see ~ dffn2 , ~ dffn3 , ~ dffn4 , and
       ~ dffn5 . $)
    df-fn $a |- ( A Fn B <-> ( Fun A /\ dom A = B ) ) $.

    $( Define a function (mapping) with domain and codomain.  Definition
       6.15(3) of [TakeutiZaring] p. 27.  For alternate definitions, see
       ~ dff2 , ~ dff3 , and ~ dff4 . $)
    df-f $a |- ( F : A --> B <-> ( F Fn A /\ ran F C_ B ) ) $.

    $( Define a one-to-one function.  For equivalent definitions see ~ dff12
       and ~ dff13 .  Compare Definition 6.15(5) of [TakeutiZaring] p. 27.  We
       use their notation ("1-1" above the arrow). $)
    df-f1 $a |- ( F : A -1-1-> B <-> ( F : A --> B /\ Fun `' F ) ) $.

    $( Define an onto function.  Definition 6.15(4) of [TakeutiZaring] p. 27.
       We use their notation ("onto" under the arrow).  For alternate
       definitions, see ~ dffo2 , ~ dffo3 , ~ dffo4 , and ~ dffo5 . $)
    df-fo $a |- ( F : A -onto-> B <-> ( F Fn A /\ ran F = B ) ) $.

    $( Define a one-to-one onto function.  For equivalent definitions see
       ~ dff1o2 , ~ dff1o3 , ~ dff1o4 , and ~ dff1o5 .  Compare Definition
       6.15(6) of [TakeutiZaring] p. 27.  We use their notation ("1-1" above
       the arrow and "onto" below the arrow). $)
    df-f1o $a |- ( F : A -1-1-onto-> B <->
                ( F : A -1-1-> B /\ F : A -onto-> B ) ) $.

    $( Define the value of a function.  Although based on the idea embodied by
       Definition 10.2 of [Quine] p. 65 (see ~ args ), our definition
       apparently does not appear in the literature; but it is quite
       convenient: it can be applied to any class and evaluates to the empty
       set when it is not meaningful (as shown by ~ ndmfv and ~ fvprc ).  The
       left apostrophe notation originated with Peano and was adopted in
       Definition *30.01 of [WhiteheadRussell] p. 235, Definition 10.11 of
       [Quine] p. 68, and Definition 6.11 of [TakeutiZaring] p. 26.  It means
       the same thing as the more familiar ` F ( A ) ` notation for a
       function's value at ` A ` , i.e.  " ` F ` of ` A ` ," but without
       context-dependent ambiguity.  An alternate definition that requires no
       dummy variables is ~ dffv2 .  For conventional alternate definitions
       (that fail to evaluate to the empty set for proper classes), see ~ fv2
       and ~ fv3 .  Restricted equivalents that require ` F ` to be a function
       are shown in ~ funfv and ~ funfv2 .  For the familiar definition of
       function value in terms of ordered pair membership, see ~ funopfvb . $)
    df-fv $a |- ( F ` A ) = U. { x | ( F " { A } ) = { x } } $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $( Define the isomorphism predicate.  We read this as " ` H ` is an ` R ` ,
       ` S ` isomorphism of ` A ` onto ` B ` ."  Normally, ` R ` and ` S ` are
       ordering relations on ` A ` and ` B ` respectively.  Definition 6.28 of
       [TakeutiZaring] p. 32, whose notation is the same as ours except that
       ` R ` and ` S ` are subscripts. $)
    df-iso $a |- ( H Isom R , S ( A , B ) <-> ( H : A -1-1-onto-> B /\
                 A. x e. A A. y e. A ( x R y <-> ( H ` x ) S ( H ` y ) ) ) ) $.

  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for cross product. $)
    xpeq1 $p |- ( A = B -> ( A X. C ) = ( B X. C ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi1d opabbidv df-xp 3eqtr4g ) 
      ABFZDGZAHZEGCHZIZDEJRBHZTIZDEJACKBCKQUAUCDEQSUBTABRLMNDEACODEBCOP $.
      $( [4-Jul-1994] $)

    $( Equality theorem for cross product. $)
    xpeq2 $p |- ( A = B -> ( C X. A ) = ( C X. B ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi2d opabbidv df-xp 3eqtr4g ) 
      ABFZDGCHZEGZAHZIZDEJRSBHZIZDEJCAKCBKQUAUCDEQTUBRABSLMNDECAODECBOP $.
      $( [5-Jul-1994] $)

    $( Membership in a cross product. $)
    elxp $p |- ( A e. ( B X. C ) <-> E. x E. y ( A = <. x , y >. /\
               ( x e. B /\ y e. C ) ) ) $=
      ( cxp wcel cv wa copab cop wceq wex df-xp eleq2i elopab bitri ) CDEFZGCAH
      ZDGBHZEGIZABJZGCSTKLUAIBMAMRUBCABDENOUAABCPQ $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product. $)
    elxp2 $p |- ( A e. ( B X. C ) <-> E. x e. B E. y e. C A = <. x , y >. ) $=
      ( cv wcel cop wceq wrex wa wex cxp df-rex r19.42v anass ancom an12 
      3bitr4ri exbii 3bitr3i elxp ) AFZDGZCUCBFZHIZBEJZKZALUFUDUEEGZKZKZBLZALUG
      ADJCDEMGUHULAUDUFKZBEJUIUMKZBLUHULUMBENUDUFBEOUNUKBUJUFKUDUIUFKKUKUNUDUIU
      FPUFUJQUIUDUFRSTUATUGADNABCDEUBS $.
      $( [23-Feb-2004] $)
  $}

  $( Equality theorem for cross product.  (Contributed by FL, 31-Aug-2009.) $)
  xpeq12 $p |- ( ( A = B /\ C = D ) -> ( A X. C ) = ( B X. D ) ) $=
    ( wceq cxp xpeq1 xpeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [22-Jun-2011] $) $( [31-Aug-2009] $)

  ${
    xpeq1i.1 $e |- A = B $.
    $( Equality theorem for cross product. $)
    xpeq1i $p |- ( A X. C ) = ( B X. C ) $=
      ( wceq cxp xpeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality theorem for cross product. $)
    xpeq2i $p |- ( C X. A ) = ( C X. B ) $=
      ( wceq cxp xpeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    xpeq12i.1 $e |- A = B $.
    xpeq12i.2 $e |- C = D $.
    $( Equality theorem for cross product.  (Contributed by FL,
       31-Aug-2009.) $)
    xpeq12i $p |- ( A X. C ) = ( B X. D ) $=
      ( wceq cxp xpeq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [22-Jun-2011] $) $( [31-Aug-2009] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d x y z w $.
    hbxp.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbxp.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for cross product.  (The proof was
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    hbxp $p |- ( y e. ( A X. B ) -> A. x y e. ( A X. B ) ) $=
      ( vz vw cxp cv wcel wa copab df-xp hblem hban hbopab hbxfr ) ABCDIGJCKZHJ
      DKZLZGHMGHCDNUAGHABSTAABGCEOABHDFOPQR $.
      $( [12-Aug-2011] $) $( [15-Sep-2003] $)
  $}

  ${
    $d A w y z $.  $d B w y z $.  $d C w y z $.  $d D w y z $.  $d w x y z $.
    $( Distribute proper substitution through the cross product of two classes.
       ~ csbxpg is derived from the virtual deduction proof ~ csbxpgVD .
       (Contributed by Alan Sare, 10-Nov-2012. ) $)
    csbxpg $p |- ( A e. D -> [_ A / x ]_ ( B X. C ) =
                ( [_ A / x ]_ B X. [_ A / x ]_ C ) ) $=
      ( vz vw vy wcel cxp csb cv cop wceq wa wex cab wsbc copab df-xp df-opab 
      eqtri csbeq2i csbabg sbcexg sbcang sbcg sbcel2g anbi12d bitrd exbidv 
      abbidv 3eqtrd syl6eqr ) BEIZABCDJZKZFLGLZHLZMNZURABCKZIZUSABDKZIZOZOZHPZG
      PZFQZVAVCJZUOUQABUTURCIZUSDIZOZOZHPZGPZFQZKVPABRZFQVIABUPVQEUPVMGHSVQGHCD
      TVMGHFUAUBUCVPAFBEUDUOVRVHFUOVRVOABRZGPVHVOGABEUEUOVSVGGUOVSVNABRZHPVGVNH
      ABEUEUOVTVFHUOVTUTABRZVMABRZOVFUTVMABEUFUOWAUTWBVEUTABEUGUOWBVKABRZVLABRZ
      OVEVKVLABEUFUOWCVBWDVDABURCEUHABUSDEUHUIUJUIUJUKUJUKUJULUMVJVEGHSVIGHVAVC
      TVEGHFUAUBUN $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    $( The first member of an ordered pair of classes in a cross product
       belongs to first cross product argument. $)
    opelxp1 $p |- ( <. A , B >. e. ( C X. D ) -> A e. C ) $=
      ( vx vy cop cxp wcel cv wceq wa wex elxp visset opth1 eqcoms eleq1d 
      biimpa adantrr 19.23aivv sylbi ) ABGZCDHIUCEJZFJZGZKZUDCIZUEDIZLLZFMEMACI
      ZEFUCCDNUJUKEFUGUHUKUIUGUHUKUGUDACUDAKUFUCUDUEABEOPQRSTUAUB $.
      $( [28-May-2008] $)
  $}

  $( The first member of an ordered triple of classes in a cross product
     belongs to first cross product argument. $)
  otelxp1 $p |- ( <. <. A , B >. , C >. e. ( ( R X. S ) X. T )
          -> A e. R ) $=
    ( cop cxp wcel opelxp1 syl ) ABGZCGDEHZFHILMIADILCMFJABDEJK $.
    $( [28-May-2008] $)

  $( A true binary relation on a relation implies the first argument is a set.
     (This is a property of our ordered pair definition.) $)
  brrelex $p |- ( ( Rel R /\ A R B ) -> A e. _V ) $=
    ( wrel wbr cvv wcel cxp wss wi df-rel cop ssel df-br syl5ib opelxp1 syl6 
    sylbi imp ) CDZABCEZAFGZTCFFHZIZUAUBJCKUDUAABLZUCGZUBUDUECGUFUACUCUEMABCNOA
    BFFPQRS $.
    $( [18-May-2004] $)

  ${
    brrelexi.1 $e |- Rel R $.
    $( The first argument of a binary relation exists.  (An artifact of our
       ordered pair definition.) $)
    brrelexi $p |- ( A R B -> A e. _V ) $=
      ( wrel wbr cvv wcel brrelex mpan ) CEABCFAGHDABCIJ $.
      $( [4-Jun-1998] $)
  $}

  ${
    nprrel.1 $e |- Rel R $.
    nprrel.2 $e |- -. A e. _V $.
    $( No proper class is related to anything via any relation.  (Contributed
       by Roy F. Longton, 30-Jul-2005.) $)
    nprrel $p |- -. A R B $=
      ( wbr cvv wcel brrelexi mto ) ABCFAGHEABCDIJ $.
      $( [30-Jul-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Representation of a constant function using ordered pairs. $)
    fconstopab $p |- ( A X. { B } ) = { <. x , y >. | ( x e. A /\ y = B ) } $=
      ( csn cxp cv wcel wa copab wceq df-xp elsn anbi2i opabbii eqtri ) CDEZFAG
      CHZBGZQHZIZABJRSDKZIZABJABCQLUAUCABTUBRBDMNOP $.
      $( [12-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y z C $.  $d x y z R $.
    vtoclr.1 $e |- Rel R $.
    vtoclr.2 $e |- ( ( x R y /\ y R z ) -> x R z ) $.
    $( Variable to class conversion of transitive relation. $)
    vtoclr $p |- ( C e. D -> ( ( A R B /\ B R C ) -> A R C ) ) $=
      ( wcel cvv wbr wa wi elisset cv wceq breq1 anbi1d imbi12d imbi2d breq2 
      anbi12d imbi1d anbi2d vtoclg vtocl2g brrelexi syl2an pm2.43b syl ) FGKFLK
      ZDEHMZEFHMZNZDFHMZOZFGPUMUPUQDLKELKUMUROZUNUOUMAQZBQZHMZVAFHMZNZUTFHMZOZO
      UMDVAHMZVCNZUQOZOUSABDELLUTDRZVFVIUMVJVDVHVEUQVJVBVGVCUTDVAHSTUTDFHSUAUBV
      AERZVIURUMVKVHUPUQVKVGUNVCUOVAEDHUCVAEFHSUDUEUBVBVACQZHMZNZUTVLHMZOVFCFLV
      LFRZVNVDVOVEVPVMVCVBVLFVAHUCUFVLFUTHUCUAJUGUHDEHIUIEFHIUIUJUKUL $.
      $( [9-Jun-1998] $)

    ${
      vtoclrbr.3 $e |- x R x $.
      $( Variable to class conversion of transitive, reflexive relation.  (The
         proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
      vtoclrbr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        ( cvv wcel wbr wa wi vtoclr wn brprc cv wceq id breq12d vtoclg syl5bir 
        brrelexi syl5 adantrd pm2.61i ) FKLZDEGMZEFGMZNDFGMZOABCDEFKGHIPUIQZUJU
        LUKUMDKLZULUJUMULDDGMZUNDFGRASZUPGMUOADKUPDTZUPDUPDGUQUAZURUBJUCUDDEGHU
        EUFUGUH $.
        $( [27-Aug-2011] $) $( [9-Jun-1998] $)
    $}

    ${
      $d x B $.
      vtoclibr.3 $e |- -. x R x $.
      $( Variable to class conversion of transitive, irreflexive relation. $)
      vtoclibr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        ( wbr cvv wcel wa wi wn cv wceq breq1 breq2 bitrd notbid vtoclg 
        brrelexi con3i pm2.61i brprc mtbiri con4i vtoclr syl anabsi7 ) DEGKZEFG
        KZDFGKZUNFLMZUMUNNUOOUPUNUPPUNEEGKZELMZUQPZAQZUTGKZPUSAELUTERZVAUQVBVAE
        UTGKUQUTEUTGSUTEEGTUAUBJUCUQUREEGHUDUEUFEFGUGUHUIABCDEFLGHIUJUKUL $.
        $( [9-Jun-1998] $)
    $}
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    opelxp.1 $e |- B e. _V $.
    $( Ordered pair membership in a cross product.  (The proof was shortened by
       Andrew Salmon, 12-Aug-2011.) $)
    opelxp $p |- ( <. A , B >. e. ( C X. D ) <-> ( A e. C /\ B e. D ) ) $=
      ( vx vy cop cxp wcel wa opelxp1 simpl cv wceq wex cvv wb eleq1 bi2anan9 
      copsex2g mpan2 elxp syl5bb pm5.21nii ) ABHZCDIJZACJZUHBDJZKZABCDLUHUIMUHU
      FFNZGNZHOUKCJZULDJZKZKGPFPZUJUGUHBQJUPUJREUOUJFGABCQUKAOUMUHULBOUNUIUKACS
      ULBDSTUAUBFGUFCDUCUDUE $.
      $( [12-Aug-2011] $) $( [15-Nov-1994] $)

    $( Binary relation on a cross product. $)
    brxp $p |- ( A ( C X. D ) B <-> ( A e. C /\ B e. D ) ) $=
      ( cxp wbr cop wcel wa df-br opelxp bitri ) ABCDFZGABHNIACIBDIJABNKABCDELM
      $.
      $( [22-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    $( Ordered pair membership in a cross product. $)
    opelxpg $p |- ( B e. R ->
                    ( <. A , B >. e. ( C X. D ) <-> ( A e. C /\ B e. D ) ) ) $=
      ( vx cv cop cxp wcel wa wceq opeq2 eleq1d eleq1 anbi2d visset opelxp 
      vtoclbg ) AFGZHZCDIZJACJZTDJZKABHZUBJUCBDJZKFBETBLZUAUEUBTBAMNUGUDUFUCTBD
      OPATCDFQRS $.
      $( [28-May-1995] $)
  $}

  $( Ordered pair membership in a cross product (implication). $)
  opelxpi $p |- ( ( A e. C /\ B e. D ) -> <. A , B >. e. ( C X. D ) ) $=
    ( wcel cop cxp wa opelxpg biimprd anabsi7 ) ACEZBDEZABFCDGEZMNLMHABCDDIJK 
    $.
    $( [28-May-1995] $)

  ${
    $d x y z A $.  $d x y z B $.  $d y z ph $.  $d x ps $.
    ralxp.1 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Universal quantification restricted to a cross product is equivalent to
       a double restricted quantification.  The hypothesis specifies an
       implicit substitution. $)
    ralxp $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( cxp wral cv cop wcel wa rcla4cv visset opelxp syl5ibr r19.21aivv wceq 
      wex wi elxp simpl 2eximi sylbi hbra1 ax-17 hbim hbral eleq1 syl6bb 
      imbi12d ra42 syl5bir 19.23ai syl pm2.43b r19.21aiv impbii ) ACFGIZJZBEGJZ
      DFJZVBBDEFGVBDKZEKZLZVAMZBVEFMZVFGMNZABCVGVAHOVEVFFGEPQZRSVDACVAVDCKZVAMZ
      AVMVLVGTZEUAZDUAZVDVMAUBZUBZVMVNVJNZEUADUAVPDEVLFGUCVSVNDEVNVJUDUEUFVOVRD
      VDVQDVCDFUGVQDUHUIVNVREVDVQEVCEDFVIEUHBEGUGUJVQEUHUIVNVQVJBUBVDVNVMVJABVN
      VMVHVJVLVGVAUKVKULHUMBDEFGUNUOUPUPUQURUSUT $.
      $( [7-Feb-2004] $)

    $( Existential quantification restricted to a cross product is equivalent
       to a double restricted quantification. $)
    rexxp $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( wn cxp wral wrex cv cop wceq notbid ralxp ralnex ralbii bitri notbii 
      dfrex2 3bitr4i ) AIZCFGJZKZIBEGLZIZDFKZIACUELUGDFLUFUIUFBIZEGKZDFKUIUDUJC
      DEFGCMDMEMNOABHPQUKUHDFBEGRSTUAACUEUBUGDFUBUC $.
      $( [14-Sep-2006] $) $( [11-Nov-1995] $)
  $}

  ${
    $d u v w x y A $.  $d u v w x y z B $.  $d u v w ph $.  $d u v w ps $.
    ralxpf.1 $e |- ( ph -> A. y ph ) $.
    ralxpf.2 $e |- ( ph -> A. z ph ) $.
    ralxpf.3 $e |- ( ps -> A. x ps ) $.
    ralxpf.4 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Version of ~ ralxp with bound-variable hypotheses. $)
    ralxpf $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( vw vu vv cxp wral cv wsbc cbvralsv ralbii ax-17 wcel hbs1 hbral wceq 
      sbequ12 ralbidv cbvral cop wa wex wb visset eqvinop cvv wal wi hbsbcg 
      ax-mp hbbi sbhypf opth sylan9bb sylbi 19.23ai ralxp 3bitr4ri bitri ) ACFG
      OZPACLQZRZLVIPZBEGPZDFPZACLVISBDMQZRZEGPZMFPVPENQZRZNGPZMFPVNVLVQVTMFVPEN
      GSTVMVQDMFVMMUAVPDEGEQZGUBDUABDMUCZUDDQZVOUEZBVPEGBDMUFZUGUHVKVSLMNFGVJVO
      VRUIZUEVJWCWAUIZUEZWGWFUEZUJZEUKZDUKVKVSULZDEVJVOVRMUMNUMZUNWKWLDVKVSDVJU
      OUBZVKVKDUPUQLUMZADCCVJUOCQZVJUBZDUAHURUSVRUOUBVSVSDUPUQWMVPDECVRUOWPVRUB
      DUAWBURUSUTWJWLEVKVSEWNVKVKEUPUQWOAECCVJUOWQEUAIURUSVPENUCUTWHVKBWIVSABCL
      WGJKVAWIWDWAVRUEZUJBVSULWCWAVOVRDUMEUMWMVBWDBVPWRVSWEVPENUFVCVDVCVEVEVDVF
      VGVH $.
      $( [20-Dec-2008] $) $( [18-Aug-2006] $)

    $( Version of ~ rexxp with bound-variable hypotheses. $)
    rexxpf $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( wn cxp wral wrex hbn cv cop wceq notbid ralxpf ralnex ralbii bitri 
      notbii dfrex2 3bitr4i ) ALZCFGMZNZLBEGOZLZDFNZLACUIOUKDFOUJUMUJBLZEGNZDFN
      UMUHUNCDEFGADHPAEIPBCJPCQDQEQRSABKTUAUOULDFBEGUBUCUDUEACUIUFUKDFUFUG $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d w x y A $.  $d w x y z B $.  $d w C $.  $d w D $.
    iunxpf.1 $e |- ( w e. C -> A. y w e. C ) $.
    iunxpf.2 $e |- ( w e. C -> A. z w e. C ) $.
    iunxpf.3 $e |- ( w e. D -> A. x w e. D ) $.
    iunxpf.4 $e |- ( x = <. y , z >. -> C = D ) $.
    $( Indexed union on a cross product is equals a double indexed union.  The
       hypothesis specifies an implicit substitution. $)
    iunxpf $p |- U_ x e. ( A X. B ) C = U_ y e. A U_ z e. B D $=
      ( cxp ciun cv wcel wrex cop wceq eleq2d rexxpf eliun rexbii bitri 
      3bitr4i eqriv ) DAEFMZGNZBECFHNZNZDOZGPZAUGQUKHPZCFQZBEQZUKUHPUKUJPZULUMA
      BCEFIJKAOBOCORSGHUKLTUAAUKUGGUBUPUKUIPZBEQUOBUKEUIUBUQUNBECUKFHUBUCUDUEUF
      $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    $( Justification theorem for an ordered pair definition that works for any
       classes, including proper classes.  This is a possible definition
       implied by the footnote in [Jech] p. 78, which says, "The sophisticated
       reader will not object to our use of a pair of classes." $)
    opthprc $p |- ( ( ( A X. { (/) } ) u. ( B X. { { (/) } } ) ) =
                    ( ( C X. { (/) } ) u. ( D X. { { (/) } } ) )
                  <-> ( A = C /\ B = D ) ) $=
      ( vx c0 csn cxp cun wceq wa cv cop wcel eleq2 wo 0ex opelxp snid 
      mpbiran2 0nep0 elsnc nemtbir bianfi bitr4i orbi12i elun biorfi 3bitr4ri 
      3bitr4g eqrdv p0ex eqcom bitri wn wb biorf ax-mp jca uneq12 xpeq1 syl2an 
      impbii ) AFGZHZBVDGZHZIZCVDHZDVFHZIZJZACJZBDJZKVLVMVNVLEACVLELZFMZVHNZVPV
      KNZVOANZVOCNZVHVKVPOVPVENZVPVGNZPVSFVFNZPVQVSWAVSWBWCWAVSFVDNZVOFAVDQRFQS
      ZTWBVOBNZWCKWCVOFBVFQRWCWFWCFVDUAFVDQUBUCZUDUEUFVPVEVGUGWCVSWGUHUIVPVINZV
      PVJNZPVTWCPVRVTWHVTWIWCWHVTWDVOFCVDQRWETWIVODNZWCKWCVOFDVFQRWCWJWGUDUEUFV
      PVIVJUGWCVTWGUHUIUJUKVLEBDVLVOVDMZVHNZWKVKNZWFWJVHVKWKOWKVENZWKVGNZPVDVDN
      ZWFPZWLWFWNWPWOWFWNVSWPKWPVOVDAVDULRWPVSWPFVDUAWPVDFJFVDJVDFULUBVDFUMUNUC
      ZUDUEWOWFVDVFNZVOVDBVFULRVDULSZTUFWKVEVGUGWPUOZWFWQUPWRWPWFUQURUIWKVINZWK
      VJNZPWPWJPZWMWJXBWPXCWJXBVTWPKWPVOVDCVDULRWPVTWRUDUEXCWJWSVOVDDVFULRWTTUF
      WKVIVJUGXAWJXDUPWRWPWJUQURUIUJUKUSVEVIJVGVJJVLVMVNVEVIVGVJUTACVDVABDVFVAV
      BVC $.
      $( [28-Sep-2003] $)
  $}

  ${
    brelg.1 $e |- R C_ ( C X. D ) $.
    $( Two things in a binary relation belong to the relation's domain. $)
    brelg $p |- ( B e. S -> ( A R B -> ( A e. C /\ B e. D ) ) ) $=
      ( wcel cop wa wbr cxp opelxpg sseli syl5bi df-br syl5ib ) BFHZABIZEHZACHB
      DHJZABEKRSCDLZHUATABCDFMEUBSGNOABEPQ $.
      $( [17-May-1996] $)
  $}

  ${
    brel.1 $e |- B e. _V $.
    brel.2 $e |- R C_ ( C X. D ) $.
    $( Membership in superset of binary relation. $)
    brel $p |- ( A R B -> ( A e. C /\ B e. D ) ) $=
      ( cvv wcel wbr wa wi brelg ax-mp ) BHIABEJACIBDIKLFABCDEHGMN $.
      $( [16-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a cross product. $)
    elxp3 $p |- ( A e. ( B X. C ) <->
            E. x E. y ( <. x , y >. = A /\ <. x , y >. e. ( B X. C ) ) ) $=
      ( cxp wcel cv cop wceq wa wex elxp eqcom visset opelxp anbi12i 2exbii 
      bitr4i ) CDEFZGCAHZBHZIZJZUADGUBEGKZKZBLALUCCJZUCTGZKZBLALABCDEMUIUFABUGU
      DUHUEUCCNUAUBDEBOPQRS $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Distributive law for cross product over union.  Theorem 103 of [Suppes]
       p. 52. $)
    xpundi $p |- ( A X. ( B u. C ) ) = ( ( A X. B ) u. ( A X. C ) ) $=
      ( vx vy cv wcel cun wa copab cxp wo elun anbi2i andi bitri opabbii 
      unopab eqtr4i df-xp uneq12i 3eqtr4i ) DFAGZEFZBCHZGZIZDEJZUCUDBGZIZDEJZUC
      UDCGZIZDEJZHZAUEKABKZACKZHUHUJUMLZDEJUOUGURDEUGUCUIULLZIURUFUSUCUDBCMNUCU
      IULOPQUJUMDERSDEAUETUPUKUQUNDEABTDEACTUAUB $.
      $( [12-Aug-2004] $)

    $( Distributive law for cross product over union.  Similar to Theorem 103
       of [Suppes] p. 52. $)
    xpundir $p |- ( ( A u. B ) X. C ) = ( ( A X. C ) u. ( B X. C ) ) $=
      ( vx vy cv cun wcel wa copab cxp wo elun anbi1i andir bitri opabbii 
      unopab eqtr4i df-xp uneq12i 3eqtr4i ) DFZABGZHZEFCHZIZDEJZUCAHZUFIZDEJZUC
      BHZUFIZDEJZGZUDCKACKZBCKZGUHUJUMLZDEJUOUGURDEUGUIULLZUFIURUEUSUFUCABMNUIU
      LUFOPQUJUMDERSDEUDCTUPUKUQUNDEACTDEBCTUAUB $.
      $( [30-Sep-2002] $)
  $}

  $( The cross product of two unions. $)
  xpun $p |- ( ( A u. B ) X. ( C u. D ) ) =
            ( ( ( A X. C ) u. ( A X. D ) ) u. ( ( B X. C ) u. ( B X. D ) ) ) $=
    ( cun cxp xpundi xpundir uneq12i un4 3eqtri ) ABEZCDEFLCFZLDFZEACFZBCFZEZAD
    FZBDFZEZEOREPSEELCDGMQNTABCHABDHIOPRSJK $.
    $( [12-Aug-2004] $)

  ${
    $d w x y z A $.
    $( Membership in universal class of ordered pairs. $)
    elvv $p |- ( A e. ( _V X. _V ) <-> E. x E. y A = <. x , y >. ) $=
      ( cvv cxp wcel cv cop wceq wa wex elxp visset pm3.2i biantru 2exbii 
      bitr4i ) CDDEFCAGZBGZHIZRDFZSDFZJZJZBKAKTBKAKABCDDLTUDABUCTUAUBAMBMNOPQ 
      $.
      $( [4-Jul-1994] $)

    $( Membership in universal class of ordered triples. $)
    elvvv $p |- ( A e. ( ( _V X. _V ) X. _V )
                 <-> E. x E. y E. z A = <. <. x , y >. , z >. ) $=
      ( vw cvv cxp wcel cv cop wceq wa wex elxp anass elvv anbi2i visset 
      biantru ancom 2exbii 19.42vv bitr2i 3bitr3i bitr3i exrot4 excom opex 
      opeq1 eqeq2d ceqsexv exbii bitri 3bitri ) DFFGZFGHDEIZCIZJZKZUPUOHZUQFHZL
      LZCMEMUPAIZBIZJZKZUSLZBMAMZCMEMZDVEUQJZKZCMZBMAMZECDUOFNVBVHECVBUSUTLZVAL
      ZVHUSUTVAOVNUSVFBMAMZLZVOVHUTVPUSABUPPQVAVNCRSVHUSVFLZBMAMVQVGVRABVFUSTUA
      USVFABUBUCUDUEUAVIVGCMEMZBMAMVMVGABECUFVSVLABVSVGEMZCMVLVGECUGVTVKCUSVKEV
      EVCVDUHVFURVJDUPVEUQUIUJUKULUMUAUEUN $.
      $( [17-Dec-2008] $)

    $( An ordered pair contains its union. $)
    elvvuni $p |- ( A e. ( _V X. _V ) -> U. A e. A ) $=
      ( vx vy cvv cxp wcel cv cop wceq wex cuni elvv cpr uniop opi2 eqeltri 
      unieq id eleq12d mpbiri 19.23aivv sylbi ) ADDEFABGZCGZHZIZCJBJAKZAFZBCALU
      FUHBCUFUHUEKZUEFUIUCUDMUEUCUDNUCUDOPUFUGUIAUEAUEQUFRSTUAUB $.
      $( [16-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is included in the ordered pair universe.  Exercise 3 of
       [TakeutiZaring] p. 25. $)
    xpss $p |- ( A X. B ) C_ ( _V X. _V ) $=
      ( vz vx vy cxp cvv cv cop wceq wcel wa wex simpl 2eximi elxp elvv 
      3imtr4i ssriv ) CABFZGGFZCHZDHZEHZIJZUCAKUDBKLZLZEMDMUEEMDMUBTKUBUAKUGUED
      EUEUFNODEUBABPDEUBQRS $.
      $( [2-Aug-1994] $)
  $}

  $( Intersection of binary relation with cross product. $)
  brinxp2 $p |- ( B e. S -> ( A ( R i^i ( C X. D ) ) B <->
                ( A e. C /\ B e. D /\ A R B ) ) ) $=
    ( wcel wbr cop cxp wa cin w3a opelxpg anbi2d elin df-br anbi1i 3bitr4i 
    3anrot 3anass bitr3i 3bitr4g ) BFGZABEHZABIZCDJZGZKZUEACGZBDGZKZKZABEUGLZHZ
    UJUKUEMZUDUHULUEABCDFNOUFUNGUFEGZUHKUOUIUFEUGPABUNQUEUQUHABEQRSUPUEUJUKMUMU
    EUJUKTUEUJUKUAUBUC $.
    $( [3-Mar-2007] $)

  $( Intersection of binary relation with cross product. $)
  brinxp $p |- ( ( A e. C /\ B e. D ) ->
               ( A R B <-> A ( R i^i ( C X. D ) ) B ) ) $=
    ( wcel wa wbr w3a cxp cin df-3an baibr wb brinxp2 adantl bitr4d ) ACFZBDFZG
    ZABEHZRSUAIZABECDJKHZUBTUARSUALMSUCUBNRABCDEDOPQ $.
    $( [9-Mar-1997] $)

  ${
    $d x y z A $.  $d x y z R $.
    $( Intersection of well-ordering with cross product of its field. $)
    weinxp $p |- ( R We A <-> ( R i^i ( A X. A ) ) We A ) $=
      ( vx vy vz wfr cv wbr wceq w3o wral wa cxp cin wwe wss c0 wne wn wrex wi 
      wal wb wcel ssel anim12d brinxp ancoms syl6 exp3a imp31 notbid ralbidva 
      rexbidva adantr pm5.74i albii df-fr 3bitr4i biidd 3orbi123d 2albii r2al 
      anbi12i dfwe2 ) ABFZCGZDGZBHZVGVHIZVHVGBHZJZDAKCAKZLABAAMNZFZVGVHVNHZVJVH
      VGVNHZJZDAKCAKZLABOAVNOVFVOVMVSEGZAPZVTQRZLZVKSZDVTKZCVTTZUAZEUBWCVQSZDVT
      KZCVTTZUAZEUBVFVOWGWKEWCWFWJWAWFWJUCWBWAWEWICVTWAVGVTUDZLZWDWHDVTWMVHVTUD
      ZLVKVQWAWLWNVKVQUCZWAWLWNWOWAWLWNLVGAUDZVHAUDZLZWOWAWLWPWNWQVTAVGUEVTAVHU
      EUFWQWPWOVHVGAABUGUHZUIUJUKULUMUNUOUPUQECDABURECDAVNURUSWRVLUAZDUBCUBWRVR
      UAZDUBCUBVMVSWTXACDWRVLVRWRVIVPVJVJVKVQVGVHAABUGWRVJUTWSVAUPVBVLCDAAVCVRC
      DAAVCUSVDCDABVECDAVNVEUS $.
      $( [9-Mar-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( An abstraction relation is a subset of a related cross product. $)
    opabssxp $p |- { <. x , y >. | ( ( x e. A /\ y e. B ) /\ ph ) }
                   C_ ( A X. B ) $=
      ( cv wcel wa copab cxp simpl ssopab2i df-xp sseqtr4i ) BFDGCFEGHZAHZBCIOB
      CIDEJPOBCOAKLBCDEMN $.
      $( [16-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ps $.
    optocl.1 $e |- D = ( B X. C ) $.
    optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    optocl.3 $e |- ( ( x e. B /\ y e. C ) -> ph ) $.
    $( Implicit substitution of class for ordered pair. $)
    optocl $p |- ( A e. D -> ps ) $=
      ( wcel cxp eleq2i cv cop wceq wa wex elxp3 visset opelxp sylbi syl5bi 
      imp 19.23aivv ) EHLEFGMZLZBHUGEINUHCOZDOZPZEQZUKUGLZRZDSCSBCDEFGTUNBCDULU
      MBULABUMJUMUIFLUJGLRAUIUJFGDUAUBKUCUDUEUFUCUC $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y ps $.  $d z w ch $.  $d z w R $.
    2optocl.1 $e |- R = ( C X. D ) $.
    2optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    2optocl.3 $e |- ( <. z , w >. = B -> ( ps <-> ch ) ) $.
    2optocl.4 $e |- ( ( ( x e. C /\ y e. D ) /\ ( z e. C /\ w e. D ) ) ->
                   ph ) $.
    $( Implicit substitution of classes for ordered pairs. $)
    2optocl $p |- ( ( A e. R /\ B e. R ) -> ch ) $=
      ( wcel wi cv cop wceq imbi2d wa ex optocl com12 impcom ) ILQHLQZCUHBRUHCR
      FGIJKLMFSZGSZTIUABCUHOUBUHUIJQUJKQUCZBUKARUKBRDEHJKLMDSZESZTHUAABUKNUBULJ
      QUMKQUCUKAPUDUEUFUEUG $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d z w v u B $.  $d v u C $.  $d x y z w v u D $.
    $d x y z w v u F $.  $d z w v u R $.  $d x y ps $.  $d z w ch $.
    $d v u th $.
    3optocl.1 $e |- R = ( D X. F ) $.
    3optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    3optocl.3 $e |- ( <. z , w >. = B -> ( ps <-> ch ) ) $.
    3optocl.4 $e |- ( <. v , u >. = C -> ( ch <-> th ) ) $.
    3optocl.5 $e |- ( ( ( x e. D /\ y e. F ) /\ ( z e. D /\ w e. F )
                    /\ ( v e. D /\ u e. F ) ) -> ph ) $.
    $( Implicit substitution of classes for ordered pairs. $)
    3optocl $p |- ( ( A e. R /\ B e. R /\ C e. R ) -> th ) $=
      ( wcel wa wi cv cop wceq imbi2d 3expia 2optocl com12 optocl impcom 3impa 
      ) KOUBZLOUBZMOUBZDUQUOUPUCZDURCUDURDUDIJMNPOQIUEZJUEZUFMUGCDURTUHURUSNUBU
      TPUBUCZCVAAUDVABUDVACUDEFGHKLNPOQEUEZFUEZUFKUGABVARUHGUEZHUEZUFLUGBCVASUH
      VBNUBVCPUBUCVDNUBVEPUBUCVAAUAUIUJUKULUMUN $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u S $.  $d x y ph $.  $d z w v u ps $.
    opbrop.1 $e |- ( ( ( z = A /\ w = B ) /\ ( v = C /\ u = D ) ) ->
                     ( ph <-> ps ) ) $.
    opbrop.2 $e |- R = { <. x , y >. | ( ( x e. ( S X. S ) /\
                      y e. ( S X. S ) ) /\
                      E. z E. w E. v E. u ( ( x = <. z , w >. /\
                      y = <. v , u >. ) /\ ph ) ) } $.
    $( Ordered pair membership in a relation.  Special case. $)
    opbrop $p |- ( ( ( A e. S /\ B e. S ) /\ ( C e. S /\ D e. S ) ) ->
                   ( <. A , B >. R <. C , D >. <-> ps ) ) $=
      ( wcel wa cop wbr cxp cv wceq wex copsex4g anbi2d opex eleq1 anbi1d 
      eqeq1 4exbidv anbi12d brab syl5bb opelxpi anim12i biantrurd bitr4d ) INQJ
      NQRZKNQLNQRZRZIJSZKLSZMTZVBNNUAZQZVCVEQZRZBRZBVAVHVBEUBFUBSZUCZVCGUBHUBSZ
      UCZRZARZHUDGUDFUDEUDZRZVIVDVAVPBVHABEFGHIJKLNNOUEUFCUBZVEQZDUBZVEQZRZVRVJ
      UCZVTVLUCZRZARZHUDGUDFUDEUDZRVFWARZVKWDRZARZHUDGUDFUDEUDZRVQCDVBVCMIJUGKL
      UGVRVBUCZWBWHWGWKWLVSVFWAVRVBVEUHUIWLWFWJEFGHWLWEWIAWLWCVKWDVRVBVJUJUIUIU
      KULVTVCUCZWHVHWKVPWMWAVGVFVTVCVEUHUFWMWJVOEFGHWMWIVNAWMWDVMVKVTVCVLUJUFUI
      UKULPUMUNVAVHBUSVFUTVGIJNNUOKLNNUOUPUQUR $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x y z A $.
    $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
       of [Monk1] p. 37. $)
    xp0r $p |- ( (/) X. A ) = (/) $=
      ( vz vx vy c0 cxp cv wcel cop wceq wa wex elxp noel simprl mto nex 
      2false bitri eqriv ) BEAFZEBGZUAHUBCGZDGZIJZUCEHZUDAHZKKZDLZCLZUBEHZCDUBE
      AMUJUKUICUHDUHUFUCNUEUFUGOPQQUBNRST $.
      $( [4-Jul-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( The empty set is not a member of a cross product. $)
    0nelxp $p |- -. (/) e. ( A X. B ) $=
      ( vx vy c0 cxp wcel cv cop wceq wa wex csn noel opi1 eleq2 mpbiri mto 
      intnanr nex elxp mtbir ) EABFGECHZDHZIZJZUCAGUDBGKZKZDLZCLUICUHDUFUGUFUCM
      ZEGZUJNUFUKUJUEGUCUDOEUEUJPQRSTTCDEABUAUB $.
      $( [2-May-1996] $)

    $( A member of a cross product (ordered pair) doesn't contain the empty
       set. $)
    0nelelxp $p |- ( C e. ( A X. B ) -> -. (/) e. C ) $=
      ( vx vy cxp wcel cv cop wceq wa wex c0 wn elxp cvv visset notnoti 
      opprc1b mtbi eleq2 mtbiri adantr 19.23aivv sylbi ) CABFGCDHZEHZIZJZUFAGUG
      BGKZKZELDLMCGZNZDECABOUKUMDEUIUMUJUIULMUHGZUFPGZNUNUODQRUFUGSTCUHMUAUBUCU
      DUE $.
      $( [15-Dec-2008] $)
  $}

  ${
    $d x y z $.
    $( Ordinal numbers and ordered pairs are disjoint collections.  This
       theorem can be used if we want to extend a set of ordinal numbers or
       ordered pairs with disjoint elements.  See also ~ snsn0non .  (The proof
       was shortened by Andrew Salmon, 27-Aug-2011.) $)
    onxpdisj $p |- ( On i^i ( _V X. _V ) ) = (/) $=
      ( vx con0 cvv cxp cin c0 wceq cv wcel wn disj wo on0eqel 0nelxp eleq1 
      mtbiri 0nelelxp con2i jaoi syl mprgbir ) BCCDZEFGAHZUBIZJZABABUBKUCBIUCFG
      ZFUCIZLUEUCMUFUEUGUFUDFUBICCNUCFUBOPUDUGCCUCQRSTUA $.
      $( [27-Aug-2011] $) $( [1-Jun-2004] $)
  $}

  $( The class of ordinal numbers is not equal to the universe. $)
  onnev $p |- On =/= _V $=
    ( cvv cxp c0 wne con0 cop wcel 0ex opelxpi mp2an ne0i ax-mp wceq cin ineq1 
    onxpdisj incom inv1 eqtri 3eqtr3g eqcomd necon3i ) AABZCDZEADCCFZUCGZUDCAGZ
    UGUFHHCCAAIJUCUEKLEAUCCEAMZCUCUHEUCNAUCNZCUCEAUCOPUIUCANUCAUCQUCRSTUAUBL $.
    $( [16-Jun-2007] $)

  $( Equality theorem for the relation predicate. $)
  releq $p |- ( A = B -> ( Rel A <-> Rel B ) ) $=
    ( wceq cvv cxp wss wrel sseq1 df-rel 3bitr4g ) ABCADDEZFBKFAGBGABKHAIBIJ $.
    $( [1-Aug-1994] $)

  ${
    releqi.1 $e |- A = B $.
    $( Equality inference for the relation predicate. $)
    releqi $p |- ( Rel A <-> Rel B ) $=
      ( wceq wrel wb releq ax-mp ) ABDAEBEFCABGH $.
      $( [8-Dec-2006] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbrel.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for a relation. $)
    hbrel $p |- ( Rel A -> A. x Rel A ) $=
      ( cvv cxp wss wal wrel cv wcel ax-17 hbss df-rel albii 3imtr4i ) CEEFZGZR
      AHCIZSAHABCQDBJQKALMCNZSRATOP $.
      $( [31-Jan-2004] $)
  $}

  $( Subclass theorem for relation predicate.  Theorem 2 of [Suppes] p. 58. $)
  relss $p |- ( A C_ B -> ( Rel B -> Rel A ) ) $=
    ( wss cvv cxp wrel sstr2 df-rel 3imtr4g ) ABCBDDEZCAJCBFAFABJGBHAHI $.
    $( [15-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A subclass relationship depends only on a relation's ordered pairs.
       Theorem 3.2(i) of [Monk1] p. 33.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    ssrel $p |- ( Rel A -> ( A C_ B <->
                A. x A. y ( <. x , y >. e. A -> <. x , y >. e. B ) ) ) $=
      ( vz wrel wss cv cop wcel wi wal ssel 19.21aivv wceq wex eleq1 imbi12d 
      biimprcd 2alimi 19.23vv sylib com23 a2d alimdv cvv cxp df-rel dfss2 elvv 
      imbi2i albii 3bitri 3imtr4g com12 impbid2 ) CFZCDGZAHBHIZCJZUSDJZKZBLALZU
      RVBABCDUSMNVCUQURVCEHZCJZVDUSOZBPAPZKZELZVEVDDJZKZELUQURVCVHVKEVCVEVGVJVC
      VGVEVJVCVFVKKZBLALVGVKKVBVLABVFVKVBVFVEUTVJVAVDUSCQVDUSDQRSTVFVKABUAUBUCU
      DUEUQCUFUFUGZGVEVDVMJZKZELVICUHECVMUIVOVHEVNVGVEABVDUJUKULUMECDUIUNUOUP 
      $.
      $( [27-Aug-2011] $) $( [2-Aug-1994] $)

    $( Extensionality principle for relations.  Theorem 3.2(ii) of [Monk1]
       p. 33. $)
    eqrel $p |- ( ( Rel A /\ Rel B ) -> ( A = B <->
                A. x A. y ( <. x , y >. e. A <-> <. x , y >. e. B ) ) ) $=
      ( wrel wa wss cv cop wcel wi wal wceq wb ssrel bi2anan9 eqss 2albiim 
      3bitr4g ) CEZDEZFCDGZDCGZFAHBHIZCJZUDDJZKBLALZUFUEKBLALZFCDMUEUFNBLALTUBU
      GUAUCUHABCDOABDCOPCDQUEUFABRS $.
      $( [2-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    relssi.1 $e |- Rel A $.
    relssi.2 $e |- ( <. x , y >. e. A -> <. x , y >. e. B ) $.
    $( Inference from subclass principle for relations. $)
    relssi $p |- A C_ B $=
      ( wss cv cop wcel wi wal wrel wb ssrel ax-mp ax-gen mpgbir ) CDGZAHBHIZCJ
      TDJKZBLZACMSUBALNEABCDOPUABFQR $.
      $( [31-Mar-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ph $.
    relssdv.1 $e |- ( ph -> Rel A ) $.
    relssdv.2 $e |- ( ph -> ( <. x , y >. e. A -> <. x , y >. e. B ) ) $.
    $( Deduction from subclass principle for relations. $)
    relssdv $p |- ( ph -> A C_ B ) $=
      ( wss cv cop wcel wi wal 19.21aivv wrel wb ssrel syl mpbird ) ADEHZBICIJZ
      DKUAEKLZCMBMZAUBBCGNADOTUCPFBCDEQRS $.
      $( [11-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqreli.1 $e |- Rel A $.
    eqreli.2 $e |- Rel B $.
    eqreli.3 $e |- ( <. x , y >. e. A <-> <. x , y >. e. B ) $.
    $( Inference from extensionality principle for relations.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    eqrelriv $p |- A = B $=
      ( wceq cv cop wcel wb wal gen2 wrel eqrel mp2an mpbir ) CDHZAIBIJZCKTDKLZ
      BMAMZUAABGNCODOSUBLEFABCDPQR $.
      $( [27-Aug-2011] $) $( [17-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqbrriv.1 $e |- Rel A $.
    eqbrriv.2 $e |- Rel B $.
    eqbrriv.3 $e |- ( x A y <-> x B y ) $.
    $( Inference from extensionality principle for relations. $)
    eqbrriv $p |- A = B $=
      ( cv wbr cop wcel df-br 3bitr3i eqrelriv ) ABCDEFAHZBHZCIOPDIOPJZCKQDKGOP
      CLOPDLMN $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.
    $( A subclass relationship determined by ordered triples.  Use ~ relrelss
       to express the antecedent in terms of the relation predicate.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    ssrelrel $p |- ( A C_ ( ( _V X. _V ) X. _V ) -> ( A C_ B <->
                   A. x A. y A. z ( <. <. x , y >. , z >. e. A
                       -> <. <. x , y >. , z >. e. B ) ) ) $=
      ( vw cvv cxp wss cv cop wcel wi wal ssel 19.21aiv 19.21aivv wceq wex 
      eleq1 imbi12d biimprcd alimi 19.23v sylib 2alimi 19.23vv elvvv syl5ib 
      com23 a2d alimdv dfss2 3imtr4g com12 impbid2 ) DGGHGHZIZDEIZAJBJKCJKZDLZU
      TELZMZCNZBNANZUSVDABUSVCCDEUTOPQVEURUSVEFJZDLZVFUQLZMZFNVGVFELZMZFNURUSVE
      VIVKFVEVGVHVJVEVHVGVJVEVFUTRZCSZBSASZVKVHVEVMVKMZBNANVNVKMVDVOABVDVLVKMZC
      NVOVCVPCVLVKVCVLVGVAVJVBVFUTDTVFUTETUAUBUCVLVKCUDUEUFVMVKABUGUEABCVFUHUIU
      JUKULFDUQUMFDEUMUNUOUP $.
      $( [27-Aug-2011] $) $( [17-Dec-2008] $)

    $( Extensionality principle for ordered triples (used by 2-place operations
       ~ df-oprab ), analogous to ~ eqrel .  Use ~ relrelss to express the
       antecedent in terms of the relation predicate. $)
    eqrelrel $p |- ( ( A u. B ) C_ ( ( _V X. _V ) X. _V ) -> ( A = B <->
                   A. x A. y A. z ( <. <. x , y >. , z >. e. A
                       <-> <. <. x , y >. , z >. e. B ) ) ) $=
      ( cun cvv cxp wss wa wceq cv cop wcel wb wal unss wi ssrelrel bi2anan9 
      eqss 2albiim albii 19.26 bitri 3bitr4g sylbir ) DEFGGHGHZIDUHIZEUHIZJZDEK
      ZALBLMCLMZDNZUMENZOCPBPZAPZODEUHQUKDEIZEDIZJUNUORCPBPZAPZUOUNRCPBPZAPZJZU
      LUQUIURVAUJUSVCABCDESABCEDSTDEUAUQUTVBJZAPVDUPVEAUNUOBCUBUCUTVBAUDUEUFUG 
      $.
      $( [17-Dec-2008] $)
  $}

  ${
    $d x y A $.
    $( A member of a relation is an ordered pair. $)
    elrel $p |- ( ( Rel R /\ A e. R ) -> E. x E. y A = <. x , y >. ) $=
      ( wrel wcel wa cvv cxp cv cop wceq wex wss df-rel biimpi sseld imp elvv 
      sylib ) DEZCDFZGCHHIZFZCAJBJKLBMAMUAUBUDUADUCCUADUCNDOPQRABCST $.
      $( [17-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    relsn.1 $e |- A e. _V $.
    $( A singleton of an ordered pair is a relation. $)
    relsn $p |- Rel { <. A , B >. } $=
      ( cop csn wrel cvv cxp wss wcel opelxpi mpan wn opprc2 opelxp mpbir2an 
      syl6eqel pm2.61i snssi ax-mp df-rel mpbir ) ABDZEZFUDGGHZIZUCUEJZUFBGJZUG
      AGJZUHUGCABGGKLUHMUCAADZUEABNUJUEJUIUIAAGGCOCCPQRUCUESTUDUAUB $.
      $( [17-May-1998] $)
  $}

  $( A cross product is a relation.  Theorem 3.13(i) of [Monk1] p. 37. $)
  relxp $p |- Rel ( A X. B ) $=
    ( cxp wrel cvv wss xpss df-rel mpbir ) ABCZDJEECFABGJHI $.
    $( [2-Aug-1994] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    $( Subset theorem for cross product.  Generalization of Theorem 101 of
       [Suppes] p. 52.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    xpss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A X. C ) C_ ( B X. D ) ) $=
      ( vx vy wss wa cxp wrel relxp a1i cv wcel cop ssel im2anan9 visset 
      opelxp 3imtr4g relssdv ) ABGZCDGZHZEFACIZBDIZUEJUDACKLUDEMZANZFMZCNZHUGBN
      ZUIDNZHUGUIOZUENUMUFNUBUHUKUCUJULABUGPCDUIPQUGUIACFRZSUGUIBDUNSTUA $.
      $( [27-Aug-2011] $) $( [26-Aug-1995] $)
  $}

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss1 $p |- ( A C_ B -> ( A X. C ) C_ ( B X. C ) ) $=
    ( wss cxp ssid xpss12 mpan2 ) ABDCCDACEBCEDCFABCCGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss2 $p |- ( A C_ B -> ( C X. A ) C_ ( C X. B ) ) $=
    ( wss cxp ssid xpss12 mpan ) CCDABDCAECBEDCFCCABGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  ${
    $d x y A $.  $d x y B $.
    $( A cross product is included in the power of the power of the union of
       its arguments. $)
    xpsspw $p |- ( A X. B ) C_ ~P ~P ( A u. B ) $=
      ( vx vy cxp cun cpw relxp cv cop wcel wa visset opelxp csn cpr wss snssi 
      ssun3 syl snex elpw sylibr adantr ssun4 anim12i unss sylib df-pr syl5ss 
      zfpair2 jca prex df-op eleq1i prss 3bitr4ri sylbi relssi ) CDABEZABFZGZGZ
      ABHCIZDIZJZUTKVDAKZVEBKZLZVFVCKZVDVEABDMNVIVDOZVBKZVDVEPZVBKZLZVJVIVLVNVG
      VLVHVGVKVAQZVLVGVKAQVPVDARVKABSTZVKVAVDUAZUBUCUDVIVMVAQVNVIVKVEOZFZVAVMVI
      VPVSVAQZLVTVAQVGVPVHWAVQVHVSBQWAVEBRVSBAUETUFVKVSVAUGUHVDVEUIUJVMVACDUKZU
      BUCULVKVMPZVCKWCVBQVJVOWCVBVKVMUMUBVFWCVCVDVEUNUOVKVMVBVRWBUPUQUHURUS $.
      $( [13-Sep-2006] $)
  $}

  $( The double class union of a cross product is included in the union of its
     arguments. $)
  unixpss $p |- U. U. ( A X. B ) C_ ( A u. B ) $=
    ( cxp cuni cun cpw wss xpsspw uniss ax-mp unipw sseqtri ) ABCZDZDZABEZFZDZP
    NQGORGNQFZDZQMSGNTGABHMSIJQKLNQIJPKL $.
    $( [16-Sep-2006] $)

  $( The cross product of two sets is a set.  Proposition 6.2 of
     [TakeutiZaring] p. 23. $)
  xpexg $p |- ( ( A e. C /\ B e. D ) -> ( A X. B ) e. _V ) $=
    ( wcel wa cun cpw cvv cxp unexg pwexg syl wss xpsspw ssexg mpan 3syl ) ACEB
    DEFZABGZHZIEZUAHZIEZABJZIEZSTIEUBABCDKTILMUAILUEUCNUDUFABOUEUCIPQR $.
    $( [14-Aug-1994] $)

  ${
    xpex.1 $e |- A e. _V $.
    xpex.2 $e |- B e. _V $.
    $( The cross product of two sets is a set.  Proposition 6.2 of
       [TakeutiZaring] p. 23. $)
    xpex $p |- ( A X. B ) e. _V $=
      ( cvv wcel cxp xpexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Aug-1994] $)
  $}

  $( The union of two relations is a relation.  Compare Exercise 5 of
     [TakeutiZaring] p. 25. $)
  relun $p |- ( Rel ( A u. B ) <-> ( Rel A /\ Rel B ) ) $=
    ( cvv cxp wss wa cun wrel unss df-rel anbi12i 3bitr4ri ) ACCDZEZBMEZFABGZME
    AHZBHZFPHABMIQNROAJBJKPJL $.
    $( [12-Aug-1994] $)

  $( The intersection with a relation is a relation. $)
  relin1 $p |- ( Rel A -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss1 relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [16-Aug-1994] $)

  $( The intersection with a relation is a relation. $)
  relin2 $p |- ( Rel B -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss2 relss ax-mp ) ABCZBDBEJEFABGJBHI $.
    $( [17-Jan-2006] $)

  $( A difference cutting down a relation is a relation. $)
  reldif $p |- ( Rel A -> Rel ( A \ B ) ) $=
    ( cdif wss wrel wi difss relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [31-Mar-1998] $)

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( An indexed union is a relation iff each member of its indexed family is
       a relation. $)
    reliun $p |- ( Rel U_ x e. A B <-> A. x e. A Rel B ) $=
      ( vy ciun wrel cv wcel wrex cab cvv cxp wss wral df-iun releqi df-rel wi 
      wal abss dfss2 bitri ralbii ralcom4 r19.23v albii 3bitri bitr4i ) ABCEZFD
      GZCHZABIZDJZFUMKKLZMZCFZABNZUIUMADBCOPUMQUOULUJUNHZRZDSZUQULDUNTUQUKURRZD
      SZABNVAABNZDSUTUPVBABUPCUNMVBCQDCUNUAUBUCVAADBUDVCUSDUKURABUEUFUGUHUG $.
      $( [19-Dec-2008] $)
  $}

  $( The empty set is a relation. $)
  rel0 $p |- Rel (/) $=
    ( c0 wrel cvv cxp wss 0ss df-rel mpbir ) ABACCDZEIFAGH $.
    $( [26-Apr-1998] $)

  ${
    $d w x y z A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d ph z w $.
    $d ps z w $.
    $( Union law for relations.  Exercise 6 of [TakeutiZaring] p. 25 and its
       converse. $)
    reluni $p |- ( Rel U. A <-> A. x e. A Rel x ) $=
      ( cuni wrel cv ciun wral uniiun releqi reliun bitri ) BCZDABAEZFZDMDABGLN
      ABHIABMJK $.
      $( [21-Dec-2008] $) $( [13-Aug-2004] $)

    $( A class of ordered pairs is a relation. $)
    relopab $p |- Rel { <. x , y >. | ph } $=
      ( copab wrel cvv cxp wss cv wcel wa visset pm3.2i a1i ssopab2i df-xp 
      sseqtr4i df-rel mpbir ) ABCDZETFFGZHTBIFJZCIFJZKZBCDUAAUDBCUDAUBUCBLCLMNO
      BCFFPQTRS $.
      $( [8-Mar-1995] $)

    $( The identity relation is a relation.  Part of Exercise 4.12(p) of
       [Mendelson] p. 235. $)
    reli $p |- Rel _I $=
      ( vx vy cid wrel cv wceq copab relopab df-id releqi mpbir ) CDAEBEFZABGZD
      LABHCMABIJK $.
      $( [26-Apr-1998] $)

    $( The membership relation is a relation. $)
    rele $p |- Rel _E $=
      ( vx vy cep wrel cv wcel copab relopab df-eprel releqi mpbir ) CDAEBEFZAB
      GZDLABHCMABIJK $.
      $( [26-Apr-1998] $)

    $( A relation expressed as an ordered pair abstraction. $)
    opabid2 $p |- ( Rel A -> { <. x , y >. | <. x , y >. e. A } = A ) $=
      ( vz vw wrel cv cop wcel copab wceq wb wal visset opeq1 eleq1d opeq2 
      opelopab gen2 relopab eqrel mpan mpbiri ) CFZAGZBGZHZCIZABJZCKZDGZEGZHZUI
      IUMCIZLZEMDMZUODEUHUKUFHZCIUNABUKULDNENUEUKKUGUQCUEUKUFOPUFULKUQUMCUFULUK
      QPRSUIFUDUJUPLUHABTDEUICUAUBUC $.
      $( [11-Dec-2006] $)

    $( Intersection of two ordered pair class abstractions. $)
    inopab $p |- ( { <. x , y >. | ph } i^i { <. x , y >. | ps } ) =
               { <. x , y >. | ( ph /\ ps ) } $=
      ( vz vw copab cin wa wrel relopab relin1 ax-mp cv cop wcel wsbc sban 
      sbbii opelopabsb anbi12i 3bitr4ri elin 3bitr4i eqrelriv ) EFACDGZBCDGZHZA
      BIZCDGZUFJUHJACDKUFUGLMUICDKENZFNZOZUFPZUMUGPZIZUICUKQZDULQZUMUHPUMUJPACU
      KQZBCUKQZIZDULQUSDULQZUTDULQZIURUPUSUTDFRUQVADFABCERSUNVBUOVCACDEFTBCDEFT
      UAUBUMUFUGUCUICDEFTUDUE $.
      $( [30-Sep-2002] $)

    $( The intersection of two cross products.  Exercise 9 of [TakeutiZaring]
       p. 25.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    inxp $p |- ( ( A X. B ) i^i ( C X. D ) ) =
                   ( ( A i^i C ) X. ( B i^i D ) ) $=
      ( vx vy cv wcel wa copab cin cxp inopab an4 elin anbi12i bitr4i opabbii 
      eqtri df-xp ineq12i 3eqtr4i ) EGZAHZFGZBHZIZEFJZUCCHZUEDHZIZEFJZKZUCACKZH
      ZUEBDKZHZIZEFJZABLZCDLZKUNUPLUMUGUKIZEFJUSUGUKEFMVBUREFVBUDUIIZUFUJIZIURU
      DUFUIUJNUOVCUQVDUCACOUEBDOPQRSUTUHVAULEFABTEFCDTUAEFUNUPTUB $.
      $( [27-Aug-2011] $) $( [3-Aug-1994] $)

    $( Distributive law for cross product over intersection.  Theorem 102 of
       [Suppes] p. 52. $)
    xpindi $p |- ( A X. ( B i^i C ) ) = ( ( A X. B ) i^i ( A X. C ) ) $=
      ( cxp cin inxp inidm xpeq1i eqtr2i ) ABDACDEAAEZBCEZDAKDABACFJAKAGHI $.
      $( [26-Sep-2004] $)

    $( Distributive law for cross product over intersection.  Similar to
       Theorem 102 of [Suppes] p. 52. $)
    xpindir $p |- ( ( A i^i B ) X. C ) = ( ( A X. C ) i^i ( B X. C ) ) $=
      ( cxp cin inxp inidm xpeq2i eqtr2i ) ACDBCDEABEZCCEZDJCDACBCFKCJCGHI $.
      $( [26-Sep-2004] $)
  $}

  ${
    $d v w x y z A $.  $d v w x y z B $.
    relop.1 $e |- A e. _V $.
    relop.2 $e |- B e. _V $.
    $( A necessary and sufficient condition for a Kuratowski ordered pair to be
       a relation. $)
    relop $p |- ( Rel <. A , B >.
             <-> E. x E. y ( A = { x } /\ B = { x , y } ) ) $=
      ( vz vw vv cop wrel cvv cxp wss cv csn wceq cpr wa wex df-rel wi wal 
      wcel dfss2 wo visset elop elvv imbi12i jaob bitri albii 19.26 3bitri idd 
      eqtr2 preqsn simplbi syl preq2 dfsn2 syl5req eqeq2d syl5eq anbi12d 
      biimpd exp3a com12 adantr mpd expcom imp3a jaod eqcom opeqpr syl5ib 
      2eximdv 19.23aiv imp snex eqeq1 opeqsn syl6bb 2exbidv imbi12d cla4v sneq 
      cbvexv 19.41v a9e equcom exbii mpbi mpbiran eqid a1bi 3bitr2ri sylib 
      prex mpi syl2an sylbi simpr equid jctl sylibr eqtr4d opeq12 cla42ev 
      adantlr preq12 biimpa df-op syl6eqr jaodan ex 3imtr4g ssrdv 19.23aivv 
      impbii ) CDJZKYBLLMZNZCAOZPZQZDYEBOZRZQZSZBTATZYBUAYDYLYDGOZCPZQZYMYEYHJZ
      QZBTATZUBZGUCZYMCDRZQZYRUBZGUCZSZYLYDYMYBUDZYMYCUDZUBZGUCYSUUCSZGUCUUEGYB
      YCUEUUHUUIGUUHYOUUBUFZYRUBUUIUUFUUJUUGYRYMCDGUGUHZABYMUIUJYOYRUUBUKULUMYS
      UUCGUNUOCHOZPZQZHTZUUAYPQZBTATZYLYTUUDUUOUUQYLUUNUUQYLUBHUUNUUPYKABUUNYKC
      YIQZDYFQZSZUFZYKUUPUUNYKYKUUTUUNYKUPUUNUURUUSYKUURUUNUUSYKUBZUURUUNSZYEYH
      QZUVBUVCYIUUMQZUVDCYIUUMUQUVEUVDYHUULQYEYHUULAUGZBUGZHUGURUSUTUURUVDUVBUB
      UUNUVDUURUVBUVDUURUUSYKUVDUUTYKUVDUURYGUUSYJUVDYIYFCUVDYEYERZYIYFYEYHYEVA
      ZYEVBZVCVDUVDYFYIDUVDUVHYIYFUVIUVJVEVDVFVGVHVIVJVKVLVMVNUUPYPUUAQUVAUUAYP
      VOYEYHCDEFVPULVQVRVSVTYTYNYNQZUVDYGSZBTZATZUBZUUOYSUVOGYNCWAYOYOUVKYRUVNY
      MYNYNWBYOYQUVLABYOYQYNYPQZUVLYMYNYPWBUVPYPYNQUVLYNYPVOYEYHCUVFUVGEWCULWDW
      EWFWGUUOYGATUVNUVOUUNYGHAUULYEQZUUMYFCUULYEWHVDWIUVMYGAUVMUVDBTZYGUVDYGBW
      JYHYEQZBTUVRBAWKUVSUVDBBAWLWMWNWOWMUVKUVNYNWPWQWRWSUUDUUAUUAQZUUQUUAWPUUC
      UVTUUQUBGUUACDWTUUBUUBUVTYRUUQYMUUAUUAWBUUBYQUUPABYMUUAYPWBWEWFWGXAXBXCYK
      YDABYKGYBYCYKUUJYMUULIOZJZQZITHTZUUFUUGYKUUJUWDYKYOUWDUUBYGYOUWDYJYGYOSZY
      MYEYEJZQZUWDUWEYMYNUWFYGYOXDYGUWFYNQZYOYGYEYEQZYGSUWHYGUWIAXEXFYEYECUVFUV
      FEWCXGVJXHUWCUWGHIYEYEUVFUVFUVQUWAYEQSUWBUWFYMUULUWAYEYEXIVDXJUTXKYKUUBSZ
      YQUWDUWJYMYFYIRZYPYKUUBYMUWKQYKUUAUWKYMCDYFYIXLVDXMYEYHXNXOUWCYQHIYEYHUVF
      UVGUVQUWAYHQSUWBYPYMUULUWAYEYHXIVDXJUTXPXQUUKHIYMUIXRXSXTYAUL $.
      $( [3-Jun-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( For sets, the identity relation is the same as equality.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    ideqg $p |- ( B e. C -> ( A _I B <-> A = B ) ) $=
      ( vx vy wcel cid wbr wceq cvv wa reli brrelexi adantl simpl jca eleq1 
      biimparc elisset syl cv eqeq1 eqeq2 df-id brabg pm5.21nd ) BCFZABGHZABIZA
      JFZUGKUGUHKUJUGUHUJUGABGLMNUGUHOPUGUIKZUJUGUKACFZUJUIULUGABCQRACSTUGUIOPD
      UAZEUAZIAUNIUIDEABJCGUMAUNUBUNBAUCDEUDUEUF $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    ideq.1 $e |- B e. _V $.
    $( For sets, the identity relation is the same as equality. $)
    ideq $p |- ( A _I B <-> A = B ) $=
      ( cvv wcel cid wbr wceq wb ideqg ax-mp ) BDEABFGABHICABDJK $.
      $( [1-Jun-2008] $) $( [13-Aug-1995] $)
  $}

  ${
    $d x A $.
    $( A set is identical to itself.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    ididg $p |- ( A e. B -> A _I A ) $=
      ( wcel cid wbr wceq eqid ideqg mpbiri ) ABCAADEAAFAGAABHI $.
      $( [27-Aug-2011] $) $( [28-May-2008] $)
  $}

  $( The second member of an ordered pair of classes in a cross product exists
     when the order pair doesn't belong to ` _I ` .  (The proof was shortened
     by Andrew Salmon, 27-Aug-2011.) $)
  opelxpex2 $p |- ( <. A , B >. e. ( ( C X. D ) \ _I ) -> B e. _V ) $=
    ( cop cxp cid cdif wcel wn wa cvv eldif wi opelxp1 wbr brprc df-br syl5bbr 
    ididg syl5cbir con1d syl imp sylbi ) ABEZCDFZGHIUFUGIZUFGIZJZKBLIZUFUGGMUHU
    JUKUHACIZUJUKNABCDOULUKUIUKJZUIAAGPZULUMABGPUNUIABGQABGRSACTUAUBUCUDUE $.
    $( [27-Aug-2011] $) $( [28-May-2008] $)

  $( Two ways of expressing set existence.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  issetid $p |- ( A e. _V <-> A _I _V ) $=
    ( cvv wcel cid wbr ididg wn wb vprc brprc ax-mp sylibr reli brrelexi 
    impbii ) ABCZABDEZPAADEZQABFBBCGQRHIABDJKLABDMNO $.
    $( [27-Aug-2011] $) $( [16-Feb-2008] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for composition of two classes. $)
    coeq1 $p |- ( A = B -> ( A o. C ) = ( B o. C ) ) $=
      ( vx vz vy wceq cv wbr wa wex copab ccom breq anbi2d exbidv opabbidv 
      df-co 3eqtr4g ) ABGZDHEHZCIZUAFHZAIZJZEKZDFLUBUAUCBIZJZEKZDFLACMBCMTUFUID
      FTUEUHETUDUGUBUAUCABNOPQDFEACRDFEBCRS $.
      $( [3-Jan-1997] $)

    $( Equality theorem for composition of two classes. $)
    coeq2 $p |- ( A = B -> ( C o. A ) = ( C o. B ) ) $=
      ( vx vz vy wceq cv wbr wa wex copab ccom breq anbi1d exbidv opabbidv 
      df-co 3eqtr4g ) ABGZDHZEHZAIZUBFHCIZJZEKZDFLUAUBBIZUDJZEKZDFLCAMCBMTUFUID
      FTUEUHETUCUGUDUAUBABNOPQDFECARDFECBRS $.
      $( [3-Jan-1997] $)
  $}

  ${
    coeq1i.1 $e |- A = B $.
    $( Equality inference for composition of two classes. $)
    coeq1i $p |- ( A o. C ) = ( B o. C ) $=
      ( wceq ccom coeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Nov-2000] $)

    $( Equality inference for composition of two classes. $)
    coeq2i $p |- ( C o. A ) = ( C o. B ) $=
      ( wceq ccom coeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Nov-2000] $)
  $}

  ${
    coeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for composition of two classes. $)
    coeq1d $p |- ( ph -> ( A o. C ) = ( B o. C ) ) $=
      ( wceq ccom coeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Nov-2000] $)

    $( Equality deduction for composition of two classes. $)
    coeq2d $p |- ( ph -> ( C o. A ) = ( C o. B ) ) $=
      ( wceq ccom coeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Nov-2000] $)
  $}

  ${
    $d y z w v A $.  $d y z w v B $.  $d x y z w v $.
    hbco.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbco.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for function value. $)
    hbco $p |- ( y e. ( A o. B ) -> A. x y e. ( A o. B ) ) $=
      ( vz vv vw ccom cv wbr wa wex copab df-co wcel ax-17 hbbr hban hbex 
      hbopab hbxfr ) ABCDJGKZHKZDLZUEIKZCLZMZHNZGIOGIHCDPUJGIABUIAHUFUHAABUDUED
      BKZUDQARFUKUEQARZSABUEUGCULEUKUGQARSTUAUBUC $.
      $( [1-Sep-1999] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    opelco.1 $e |- A e. _V $.
    opelco.2 $e |- B e. _V $.
    $( Ordered pair membership in a composition.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    opelco $p |- ( <. A , B >. e. ( C o. D ) <-> E. x ( A D x /\ x C B ) ) $=
      ( vy vz cop ccom wcel wbr cv wa wex df-br wceq breq1 anbi1d exbidv breq2 
      anbi2d df-co brab bitr3i ) BCJDEKZLBCUGMBANZEMZUHCDMZOZAPZBCUGQHNZUHEMZUH
      INZDMZOZAPUIUPOZAPULHIBCUGFGUMBRZUQURAUSUNUIUPUMBUHESTUAUOCRZURUKAUTUPUJU
      IUOCUHDUBUCUAHIADEUDUEUF $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)

    $( Binary relation on a composition. $)
    brco $p |- ( A ( C o. D ) B <-> E. x ( A D x /\ x C B ) ) $=
      ( ccom wbr cop wcel cv wa wex df-br opelco bitri ) BCDEHZIBCJRKBALZEISCDI
      MANBCROABCDEFGPQ $.
      $( [21-Sep-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Ordered pair membership in a composition. $)
    opelco2g $p |- ( ( A e. R /\ B e. S ) -> ( <. A , B >. e. ( C o. D ) <->
                   E. x ( <. A , x >. e. D /\ <. x , B >. e. C ) ) ) $=
      ( vy vz wcel wa cop ccom cv wbr wex wb wceq opeq1 eleq1d breq1 anbi1d 
      exbidv bibi12d opeq2 breq2 anbi2d visset opelco vtocl2g df-br anbi12i 
      exbii syl6bb ) BFJCGJKBCLZDEMZJZBANZEOZURCDOZKZAPZBURLEJZURCLDJZKZAPHNZIN
      ZLZUPJZVFUREOZURVGDOZKZAPZQBVGLZUPJZUSVKKZAPZQUQVBQHIBCFGVFBRZVIVOVMVQVRV
      HVNUPVFBVGSTVRVLVPAVRVJUSVKVFBUREUAUBUCUDVGCRZVOUQVQVBVSVNUOUPVGCBUETVSVP
      VAAVSVKUTUSVGCURDUFUGUCUDAVFVGDEHUHIUHUIUJVAVEAUSVCUTVDBUREUKURCDUKULUMUN
      $.
      $( [27-Jan-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for converse. $)
    cnvss $p |- ( A C_ B -> `' A C_ `' B ) $=
      ( vy vx wss cv wbr copab ccnv wi wal cop wcel ssel df-br 3imtr4g 
      19.21aivv ssopab2 sylibr df-cnv 3sstr4g ) ABEZCFZDFZAGZDCHZUCUDBGZDCHZAIB
      IUBUEUGJZCKDKUFUHEUBUIDCUBUCUDLZAMUJBMUEUGABUJNUCUDAOUCUDBOPQUEUGDCRSDCAT
      DCBTUA $.
      $( [22-Mar-1998] $)
  $}

  $( Equality theorem for converse. $)
  cnveq $p |- ( A = B -> `' A = `' B ) $=
    ( wss wa ccnv wceq cnvss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMN
    FKOLPABGBAGHABIMNIJ $.
    $( [13-Aug-1995] $)

  ${
    cnveqi.1 $e |- A = B $.
    $( Equality theorem for converse. $)
    cnveqi $p |- `' A = `' B $=
      ( wceq ccnv cnveq ax-mp ) ABDAEBEDCABFG $.
      $( [23-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Membership in a converse.  Equation 5 of [Suppes] p. 62. $)
    elcnv $p |- ( A e. `' R <-> E. x E. y ( A = <. x , y >. /\ y R x ) ) $=
      ( ccnv wcel cv wbr copab cop wceq wa wex df-cnv eleq2i elopab bitri ) CDE
      ZFCBGZAGZDHZABIZFCTSJKUALBMAMRUBCABDNOUAABCPQ $.
      $( [24-Mar-1998] $)

    $( Membership in a converse.  Equation 5 of [Suppes] p. 62. $)
    elcnv2 $p |- ( A e. `' R <->
                 E. x E. y ( A = <. x , y >. /\ <. y , x >. e. R ) ) $=
      ( ccnv wcel cv cop wceq wbr wa wex elcnv df-br anbi2i 2exbii bitri ) CDEF
      CAGZBGZHIZSRDJZKZBLALTSRHDFZKZBLALABCDMUBUDABUAUCTSRDNOPQ $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d y z w A $.  $d x y z w $.
    hbcnv.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for converse. $)
    hbcnv $p |- ( y e. `' A -> A. x y e. `' A ) $=
      ( vz vw cv cop wceq wbr wa wex wal ccnv wcel ax-17 hbbr hban hbex elcnv 
      albii 3imtr4i ) BGZEGZFGZHIZUEUDCJZKZFLZELZUJAMUCCNOZUKAMUIAEUHAFUFUGAUFA
      PABUEUDCUCUEOAPDUCUDOAPQRSSEFUCCTZUKUJAULUAUB $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( Ordered-pair membership in converse.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    opelcnvg $p |- ( ( A e. C /\ B e. D ) ->
                     ( <. A , B >. e. `' R <-> <. B , A >. e. R ) ) $=
      ( vy vx wcel wa ccnv wbr cop cv breq2 breq1 df-cnv brabg df-br 3bitr3g ) 
      ACHBDHIABEJZKBAEKZABLTHBALEHFMZGMZEKUBAEKUAGFABCDTUCAUBENUBBAEOGFEPQABTRB
      AERS $.
      $( [27-Aug-2011] $) $( [13-May-1999] $)
  $}

  $( The converse of a binary relation swaps arguments.  Theorem 11 of [Suppes]
     p. 61. $)
  brcnvg $p |- ( ( A e. C /\ B e. D ) -> ( A `' R B <-> B R A ) ) $=
    ( wcel wa cop ccnv wbr opelcnvg df-br 3bitr4g ) ACFBDFGABHEIZFBAHEFABNJBAEJ
    ABCDEKABNLBAELM $.
    $( [10-Oct-2005] $)

  ${
    opelcnv.1 $e |- A e. _V $.
    opelcnv.2 $e |- B e. _V $.
    $( Ordered-pair membership in converse. $)
    opelcnv $p |- ( <. A , B >. e. `' R <-> <. B , A >. e. R ) $=
      ( cvv wcel cop ccnv wb opelcnvg mp2an ) AFGBFGABHCIGBAHCGJDEABFFCKL $.
      $( [13-Aug-1995] $)

    $( The converse of a binary relation swaps arguments.  Theorem 11 of
       [Suppes] p. 61. $)
    brcnv $p |- ( A `' R B <-> B R A ) $=
      ( cvv wcel ccnv wbr wb brcnvg mp2an ) AFGBFGABCHIBACIJDEABFFCKL $.
      $( [13-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( Distributive law of converse over class composition.  Theorem 26 of
       [Suppes] p. 64.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cnvco $p |- `' ( A o. B ) = ( `' B o. `' A ) $=
      ( vx vy vz cv ccom wbr copab ccnv wa wex exancom visset brco brcnv 
      anbi12i exbii 3bitr4i opabbii df-cnv df-co 3eqtr4i ) CFZDFZABGZHZDCIUEEFZ
      AJZHZUHUDBJZHZKZELZDCIUFJUKUIGUGUNDCUDUHBHZUHUEAHZKELUPUOKZELUGUNUOUPEMEU
      DUEABCNZDNZOUMUQEUJUPULUOUEUHAUSENZPUHUDBUTURPQRSTDCUFUADCEUKUIUBUC $.
      $( [27-Aug-2011] $) $( [19-Mar-1998] $)
  $}

  ${
    $d x y z w A $.
    $( The converse of a class union is the (indexed) union of the converses of
       its members. $)
    cnvuni $p |- `' U. A = U_ x e. A `' x $=
      ( vy vz vw cuni ccnv cv ciun wcel wrex cop wceq wa wex elcnv2 eluni2 
      anbi2i r19.42v bitr4i 2exbii rexbii rexcom4 exbii 3bitrri 3bitri eliun 
      eqriv ) CBFZGZABAHZGZIZCHZUJJZUNULJZABKZUNUMJUOUNDHZEHZLMZUSURLZUIJZNZEOD
      OUTVAUKJZNZABKZEOZDOZUQDEUNUIPVCVFDEVCUTVDABKZNVFVBVIUTAVABQRUTVDABSTUAUQ
      VEEOZDOZABKVJABKZDOVHUPVKABDEUNUKPUBVJADBUCVLVGDVEAEBUCUDUEUFAUNBULUGTUH 
      $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain.  Definition 6.5(1) of [TakeutiZaring]
       p. 24. $)
    dfdm3 $p |- dom A = { x | E. y <. x , y >. e. A } $=
      ( cdm cv wbr wex cab cop wcel df-dm df-br exbii abbii eqtri ) CDAEZBEZCFZ
      BGZAHPQICJZBGZAHABCKSUAARTBPQCLMNO $.
      $( [28-Dec-1996] $)

    $( Alternate definition of range.  Definition 4 of [Suppes] p. 60. $)
    dfrn2 $p |- ran A = { y | E. x x A y } $=
      ( crn ccnv cdm cv wbr wex cab df-rn df-dm visset brcnv exbii abbii 
      3eqtri ) CDCEZFBGZAGZRHZAIZBJTSCHZAIZBJCKBARLUBUDBUAUCASTCBMAMNOPQ $.
      $( [27-Dec-1996] $)

    $( Alternate definition of range.  Definition 6.5(2) of [TakeutiZaring]
       p. 24. $)
    dfrn3 $p |- ran A = { y | E. x <. x , y >. e. A } $=
      ( crn cv wbr wex cab cop wcel dfrn2 df-br exbii abbii eqtri ) CDAEZBEZCFZ
      AGZBHPQICJZAGZBHABCKSUABRTAPQCLMNO $.
      $( [28-Dec-1996] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain. $)
    dfdm4 $p |- dom A = ran `' A $=
      ( vy vx cv ccnv wbr wex cab crn cdm visset brcnv exbii abbii dfrn2 df-dm 
      3eqtr4ri ) BDZCDZAEZFZBGZCHSRAFZBGZCHTIAJUBUDCUAUCBRSABKCKLMNBCTOCBAPQ $.
      $( [28-Dec-1996] $)
  $}

  ${
    $d x y z w v $.  $d z w v A $.
    dfdmf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfdmf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of domain, using bound-variable hypotheses instead of
       distinct variable conditions. $)
    dfdmf $p |- dom A = { x | E. y <. x , y >. e. A } $=
      ( vw vv cdm cv cop wcel wex cab dfdm3 ax-17 hbel wceq opeq2 eleq1d cbvex 
      abbii hbex opeq1 exbidv cbvab 3eqtri ) DIGJZHJZKZDLZHMZGNUHBJZKZDLZBMZGNA
      JZUMKZDLZBMZANGHDOULUPGUKUOHBBCCUJDCJZUJLBPFQUOHPUIUMRUJUNDUIUMUHSTUAUBUP
      UTGAUOABACCUNDVAUNLAPEQUCUTGPUHUQRZUOUSBVBUNURDUHUQUMUDTUEUFUG $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eldm.1 $e |- A e. _V $.
    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59. $)
    eldm $p |- ( A e. dom B <-> E. y A B y ) $=
      ( vx cv wbr wex cdm wceq breq1 exbidv df-dm elab2 ) EFZAFZCGZAHBPCGZAHEBC
      IDOBJQRAOBPCKLEACMN $.
      $( [2-Apr-2004] $)

    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59. $)
    eldm2 $p |- ( A e. dom B <-> E. y <. A , y >. e. B ) $=
      ( cdm wcel cv wbr wex cop eldm df-br exbii bitri ) BCEFBAGZCHZAIBOJCFZAIA
      BCDKPQABOCLMN $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Domain membership.  Theorem 4 of [Suppes] p. 59. $)
    eldm2g $p |- ( A e. C -> ( A e. dom B <-> E. y <. A , y >. e. B ) ) $=
      ( vx cv cdm wcel cop wex eleq1 wceq opeq1 eleq1d exbidv visset eldm2 
      vtoclbg ) EFZCGZHSAFZIZCHZAJBTHBUAIZCHZAJEBDSBTKSBLZUCUEAUFUBUDCSBUAMNOAS
      CEPQR $.
      $( [27-Jan-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for domain. $)
    dmss $p |- ( A C_ B -> dom A C_ dom B ) $=
      ( vx vy wss cdm cv cop wcel wex ssel eximdv visset eldm2 3imtr4g ssrdv ) 
      ABEZCAFZBFZQCGZDGHZAIZDJUABIZDJTRITSIQUBUCDABUAKLDTACMZNDTBUDNOP $.
      $( [11-Aug-1994] $)
  $}

  $( Equality theorem for domain. $)
  dmeq $p |- ( A = B -> dom A = dom B ) $=
    ( wss wa cdm wceq dmss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMNFK
    OLPABGBAGHABIMNIJ $.
    $( [11-Aug-1994] $)

  ${
    dmeqi.1 $e |- A = B $.
    $( Equality inference for domain. $)
    dmeqi $p |- dom A = dom B $=
      ( wceq cdm dmeq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    dmeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for domain. $)
    dmeqd $p |- ( ph -> dom A = dom B ) $=
      ( wceq cdm dmeq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.
    opeldm.1 $e |- A e. _V $.
    $( Membership of first of an ordered pair in a domain. $)
    opeldm $p |- ( <. A , B >. e. C -> A e. dom C ) $=
      ( vy cvv wcel cop cdm wi cv wex wceq opeq2 eleq1d cla4egv eldm2 syl6ibr 
      wn opprc2 cla4ev sylibr syl6bi pm2.61i ) BFGZABHZCGZACIGZJUEUGAEKZHZCGZEL
      ZUHUKUGEBFUIBMUJUFCUIBANOPEACDQZRUESZUGAAHZCGZUHUNUFUOCABTOUPULUHUKUPEADU
      IAMUJUOCUIAANOUAUMUBUCUD $.
      $( [30-Jul-1995] $)
  $}

  ${
    breldm.1 $e |- A e. _V $.
    $( Membership of first of a binary relation in a domain. $)
    breldm $p |- ( A R B -> A e. dom R ) $=
      ( wbr cop wcel cdm df-br opeldm sylbi ) ABCEABFCGACHGABCIABCDJK $.
      $( [30-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x R $.
    $( Membership of first of a binary relation in a domain. $)
    breldmg $p |- ( ( A e. C /\ A R B ) -> A e. dom R ) $=
      ( vx wcel wbr cdm cv wi wceq breq1 eleq1 imbi12d visset breldm vtoclg 
      imp ) ACFABDGZADHZFZEIZBDGZUBTFZJSUAJEACUBAKUCSUDUAUBABDLUBATMNUBBDEOPQR 
      $.
      $( [21-Mar-2007] $)

    $( The domain of a union is the union of domains.  Exercise 56(a) of
       [Enderton] p. 65.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmun $p |- dom ( A u. B ) = ( dom A u. dom B ) $=
      ( vy vx cv wbr wex cab cun cdm wo unab brun exbii 19.43 bitr2i abbii 
      eqtri df-dm uneq12i 3eqtr4ri ) CEZDEZAFZDGZCHZUBUCBFZDGZCHZIZUBUCABIZFZDG
      ZCHZAJZBJZIUKJUJUEUHKZCHUNUEUHCLUQUMCUMUDUGKZDGUQULURDUBUCABMNUDUGDOPQRUO
      UFUPUICDASCDBSTCDUKSUA $.
      $( [27-Aug-2011] $) $( [12-Aug-1994] $)

    $( The domain of an intersection belong to the intersection of domains.
       Theorem 6 of [Suppes] p. 60. $)
    dmin $p |- dom ( A i^i B ) C_ ( dom A i^i dom B ) $=
      ( vx vy cin cdm cv cop wcel wa wex 19.40 visset eldm2 elin exbii bitri 
      anbi12i 3imtr4i ssriv ) CABEZFZAFZBFZEZCGZDGHZAIZUGBIZJZDKZUHDKZUIDKZJZUF
      UBIZUFUEIZUHUIDLUOUGUAIZDKUKDUFUACMZNUQUJDUGABOPQUPUFUCIZUFUDIZJUNUFUCUDO
      USULUTUMDUFAURNDUFBURNRQST $.
      $( [15-Sep-2004] $)

  $}

  ${
    $d x y z A $.
    $( The domain of a union.  Part of Exercise 8 of [Enderton] p. 41. $)
    dmuni $p |- dom U. A = U_ x e. A dom x $=
      ( vy vz cuni cdm cv ciun cop wcel wex wrex wa eluni exbii excom ancom 
      19.41v visset eldm2 anbi2i 3bitr4i 3bitri df-rex bitr4i eliun eqriv ) CBE
      ZFZABAGZFZHZCGZDGIZUHJZDKZUMUKJZABLZUMUIJUMULJUPUJBJZUQMZAKZURUPUNUJJZUSM
      ZAKZDKVCDKZAKVAUOVDDAUNBNOVCDAPVEUTAVBDKZUSMUSVFMVEUTVFUSQVBUSDRUQVFUSDUM
      UJCSZTUAUBOUCUQABUDUEDUMUHVGTAUMBUKUFUBUG $.
      $( [3-Feb-2004] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The domain of a class of ordered pairs. $)
    dmopab $p |- dom { <. x , y >. | ph } = { x | E. y ph } $=
      ( vz copab cdm cv cop wcel wex cab hbopab1 hbopab2 dfdmf opabid exbii 
      abbii eqtri ) ABCEZFBGCGHSIZCJZBKACJZBKBCDSABCDLABCDMNUAUBBTACABCOPQR $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y A $.
    $( Upper bound for the domain of a restricted class of ordered pairs. $)
    dmopabss $p |- dom { <. x , y >. | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa copab cdm wex cab dmopab 19.42v abbii ssab2 eqsstri ) BEDFZA
      GZBCHIRCJZBKZDRBCLTQACJZGZBKDSUBBQACMNUABDOPP $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.
    $( The domain of a restricted class of ordered pairs. $)
    dmopab3 $p |- ( A. x e. A E. y ph <->
               dom { <. x , y >. | ( x e. A /\ ph ) } = A ) $=
      ( wex wral cv wcel wi wal wa wb copab cdm wceq df-ral pm4.71 albii cab 
      dmopab 19.42v abbii eqtri eqeq1i eqcom abeq2 3bitr2ri 3bitri ) ACEZBDFBGD
      HZUIIZBJUJUJUIKZLZBJZUJAKZBCMNZDOZUIBDPUKUMBUJUIQRUQULBSZDODUROUNUPURDUPU
      OCEZBSURUOBCTUSULBUJACUAUBUCUDDURUEULBDUFUGUH $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y $.
    $( The domain of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dm0 $p |- dom (/) = (/) $=
      ( vx vy c0 cdm wceq cv wcel wn eq0 cop wex noel nex visset eldm2 mtbir 
      mpgbir ) CDZCEAFZRGZHAARITSBFJZCGZBKUBBUALMBSCANOPQ $.
      $( [27-Aug-2011] $) $( [4-Jul-1994] $)

    $( The domain of the identity relation is the universe.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmi $p |- dom _I = _V $=
      ( vx vy cid cdm cvv wceq cv wcel eqv wbr wex a9e visset ideq equcom 
      bitri exbii mpbir eldm mpgbir ) CDZEFAGZUAHZAAUAIUCUBBGZCJZBKZUFUDUBFZBKB
      ALUEUGBUEUBUDFUGUBUDBMNABOPQRBUBCAMSRT $.
      $( [27-Aug-2011] $) $( [30-Apr-1998] $)

    $( The domain of the universe is the universe. $)
    dmv $p |- dom _V = _V $=
      ( cvv cdm ssv cid dmi wss dmss ax-mp eqsstr3i eqssi ) ABZAKCADBZKEDAFLKFD
      CDAGHIJ $.
      $( [8-Aug-2003] $)
  $}

  ${
    $d x y A $.
    $( An empty domain implies an empty range. $)
    dm0rn0 $p |- ( dom A = (/) <-> ran A = (/) ) $=
      ( vx vy cv wbr wex cab c0 wceq cdm crn wcel wb wal wn excom notbii alnex 
      3bitr4i noel nbn albii 3bitr3i abeq1 df-dm eqeq1i dfrn2 ) BDZCDZAEZCFZBGZ
      HIZUJBFZCGZHIZAJZHIAKZHIUKUHHLZMZBNZUNUIHLZMZCNZUMUPUKOZBNZUNOZCNZVAVDUKB
      FZOUNCFZOVFVHVIVJUJBCPQUKBRUNCRSVEUTBUSUKUHTUAUBVGVCCVBUNUITUAUBUCUKBHUDU
      NCHUDSUQULHBCAUEUFURUOHBCAUGUFS $.
      $( [21-May-1998] $)

    $( A relation is empty iff its domain is empty. $)
    reldm0 $p |- ( Rel A -> ( A = (/) <-> dom A = (/) ) ) $=
      ( vx vy wrel c0 wceq cv cop wcel wb wal cdm rel0 eqrel mpan2 wn eq0 wex 
      visset eldm2 notbii alnex noel nbn albii 3bitr2i bitr2i syl6bb ) ADZAEFZB
      GZCGHZAIZULEIZJZCKZBKZALZEFZUIEDUJUQJMBCAENOUSUKURIZPZBKUQBURQVAUPBVAUMCR
      ZPUMPZCKUPUTVBCUKABSTUAUMCUBVCUOCUNUMULUCUDUEUFUEUGUH $.
      $( [15-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a cross product.  Part of Theorem 3.13(x) of [Monk1]
       p. 37.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmxp $p |- ( B =/= (/) -> dom ( A X. B ) = A ) $=
      ( vy vx c0 wne cv wcel wa copab cdm cxp wex wral wceq n0 biimpi a1d 
      r19.21aiv dmopab3 sylib df-xp dmeqi syl5eq ) BEFZCGAHZDGBHZICDJZKZAABLZKU
      EUGDMZCANUIAOUEUKCAUEUKUFUEUKDBPQRSUGCDATUAUJUHCDABUBUCUD $.
      $( [27-Aug-2011] $) $( [28-Jul-1995] $)
  $}

  $( The domain of a square cross product. $)
  dmxpid $p |- dom ( A X. A ) = A $=
    ( cxp cdm wceq c0 dm0 xpeq1 xp0r syl6eq dmeqd id 3eqtr4a dmxp pm2.61ine ) 
    AABZCZADAEAEDZECEPAFQOEQOEABEAEAGAHIJQKLAAMN $.
    $( [28-Jul-1995] $)

  $( The domain of the intersection of two square cross products.  Unlike
     ~ dmin , equality holds. $)
  dmxpin $p |- dom ( ( A X. A ) i^i ( B X. B ) ) = ( A i^i B ) $=
    ( cxp cin cdm inxp dmeqi dmxpid eqtri ) AACBBCDZEABDZKCZEKJLAABBFGKHI $.
    $( [29-Jan-2008] $)

  $( The cross product of a class with itself is one-to-one.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  xpid11 $p |- ( ( A X. A ) = ( B X. B ) <-> A = B ) $=
    ( cxp wceq cdm dmeq dmxpid 3eqtr3g xpeq12 anidms impbii ) AACZBBCZDZABDZNLE
    MEABLMFAGBGHONABABIJK $.
    $( [27-Aug-2011] $) $( [5-Nov-2006] $)

  $( The domain of the double converse of a class (which doesn't have to be a
     relation as in ~ dfrel2 ). $)
  dmcnvcnv $p |- dom `' `' A = dom A $=
    ( cdm ccnv crn dfdm4 df-rn eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  $( The range of the double converse of a class. $)
  rncnvcnv $p |- ran `' `' A = ran A $=
    ( crn ccnv cdm df-rn dfdm4 eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  ${
    $d x y A $.  $d x y B $.
    $( The first member of an ordered pair in a relation belongs to the domain
       of the relation. $)
    elreldm $p |- ( ( Rel A /\ B e. A ) -> |^| |^| B e. dom A ) $=
      ( vx vy wrel wcel cint cdm cv cop wceq wex cvv cxp wss wi df-rel ssel 
      sylbi elvv syl6ib eleq1 visset opeldm syl6bi inteq inteqd op1stb syl6eq 
      eleq1d sylibrd 19.23aivv syli imp ) AEZBAFZBGZGZAHZFZUPUOBCIZDIZJZKZDLCLZ
      UTUOUPBMMNZFZVEUOAVFOUPVGPAQAVFBRSCDBTUAVDUPUTPCDVDUPVAUSFZUTVDUPVCAFVHBV
      CAUBVAVBACUCZUDUEVDURVAUSVDURVCGZGVAVDUQVJBVCUFUGVAVBVIUHUIUJUKULUMUN $.
      $( [28-Jul-2004] $)
  $}

  $( Equality theorem for range. $)
  rneq $p |- ( A = B -> ran A = ran B ) $=
    ( wceq ccnv cdm crn cnveq dmeqd df-rn 3eqtr4g ) ABCZADZEBDZEAFBFKLMABGHAIBI
    J $.
    $( [29-Dec-1996] $)

  ${
    rneqi.1 $e |- A = B $.
    $( Equality inference for range. $)
    rneqi $p |- ran A = ran B $=
      ( wceq crn rneq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    rneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for range. $)
    rneqd $p |- ( ph -> ran A = ran B ) $=
      ( wceq crn rneq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  $( Subset theorem for range. $)
  rnss $p |- ( A C_ B -> ran A C_ ran B ) $=
    ( wss ccnv cdm crn cnvss dmss syl df-rn 3sstr4g ) ABCZADZEZBDZEZAFBFLMOCNPC
    ABGMOHIAJBJK $.
    $( [22-Mar-1998] $)

  $( The second argument of a binary relation belongs to its range. $)
  brelrng $p |- ( ( A e. F /\ B e. G /\ A C B ) -> B e. ran C ) $=
    ( wcel wbr w3a ccnv cdm crn breldmg 3adant1 wb brcnvg ancoms biimp3ar 
    syld3an3 df-rn syl6eleqr ) ADFZBEFZABCGZHBCIZJZCKUAUBBAUDGZBUEFZUCUBUFUGUAB
    AEUDLMUAUBUFUCUBUAUFUCNBAEDCOPQRCST $.
    $( [29-Jun-2008] $)

  ${
    brelrn.1 $e |- A e. _V $.
    brelrn.2 $e |- B e. _V $.
    $( The second argument of a binary relation belongs to its range. $)
    brelrn $p |- ( A C B -> B e. ran C ) $=
      ( cvv wcel wbr crn brelrng mp3an1 mpan ) BFGZABCHZBCIGZEAFGMNODABCFFJKL 
      $.
      $( [29-Jun-2008] $) $( [13-Aug-2004] $)

    $( Membership of second member of an ordered pair in a range. $)
    opelrn $p |- ( <. A , B >. e. C -> B e. ran C ) $=
      ( cop wcel wbr crn df-br brelrn sylbir ) ABFCGABCHBCIGABCJABCDEKL $.
      $( [23-Feb-1997] $)
  $}

  $( The first argument of a binary relation belongs to its domain. $)
  releldm $p |- ( ( Rel R /\ A R B ) -> A e. dom R ) $=
    ( wrel wbr cvv wcel cdm brrelex breldmg sylancom ) CDABCEAFGACHGABCIABFCJK 
    $.
    $( [2-Jul-2008] $)

  $( The second argument of a binary relation belongs to its range. $)
  relelrng $p |- ( ( B e. C /\ Rel R /\ A R B ) -> B e. ran R ) $=
    ( wcel cvv wbr crn wrel brelrng 3com12 brrelex 3adant1 syld3an2 ) BCEZAFEZA
    BDGZBDHEZDIZPOQRABDFCJKSQPOABDLMN $.
    $( [2-Jul-2008] $)

  ${
    $d x y z w v $.  $d z w v A $.
    dfrnf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfrnf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of range, using bound-variable hypotheses instead of distinct
       variable conditions. $)
    dfrnf $p |- ran A = { y | E. x <. x , y >. e. A } $=
      ( vv vw crn cv cop wcel wex cab dfrn3 ax-17 hbel wceq opeq1 eleq1d cbvex 
      abbii hbex opeq2 exbidv cbvab 3eqtri ) DIGJZHJZKZDLZGMZHNAJZUIKZDLZAMZHNU
      MBJZKZDLZAMZBNGHDOULUPHUKUOGAACCUJDCJZUJLAPEQUOGPUHUMRUJUNDUHUMUISTUAUBUP
      UTHBUOBABCCUNDVAUNLBPFQUCUTHPUIUQRZUOUSAVBUNURDUIUQUMUDTUEUFUG $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    elrn.1 $e |- A e. _V $.
    $( Membership in a range. $)
    elrn2 $p |- ( A e. ran B <-> E. x <. x , A >. e. B ) $=
      ( vy cv cop wcel wex crn wceq opeq2 eleq1d exbidv dfrn3 elab2 ) AFZEFZGZC
      HZAIQBGZCHZAIEBCJDRBKZTUBAUCSUACRBQLMNAECOP $.
      $( [10-Jul-1994] $)

    $( Membership in a range. $)
    elrn $p |- ( A e. ran B <-> E. x x B A ) $=
      ( crn wcel cv cop wex wbr elrn2 df-br exbii bitr4i ) BCEFAGZBHCFZAIOBCJZA
      IABCDKQPAOBCLMN $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x y z w $.  $d y z w A $.
    hbrn.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for range.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbrn $p |- ( y e. ran A -> A. x y e. ran A ) $=
      ( vz vw cv cop wcel wex wal crn ax-17 hbel hbex visset elrn2 albii 
      3imtr4i ) EGBGZHZCIZEJZUCAKTCLIZUDAKUBAEAFBUACFGUAIAMDNOETCBPQZUDUCAUERS 
      $.
      $( [27-Aug-2011] $) $( [1-Sep-1999] $)
  $}

  ${
    $d x y z w $.  $d y z w A $.
    hbdm.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for domain. $)
    hbdm $p |- ( y e. dom A -> A. x y e. dom A ) $=
      ( cdm ccnv crn dfdm4 hbcnv hbrn hbxfr ) ABCECFZGCHABLABCDIJK $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d A w y $.  $d B w y $.  $d C w y $.  $d x w y $.
    $( Distribute proper substitution through the range of a class. ~ csbrng is
       derived from the virtual deduction proof ~ csbrngVD .  (Contributed by
       Alan Sare, 10-Nov-2012. ) $)
    csbrng $p |- ( A e. C -> [_ A / x ]_ ran B = ran [_ A / x ]_ B ) $=
      ( vw vy wcel crn csb cv cop wex cab wsbc dfrn3 csbeq2i csbabg sbcexg 
      sbcel2g exbidv bitrd abbidv 3eqtrd syl6eqr ) BDGZABCHZIZEJFJKZABCIZGZELZF
      MZUIHUEUGABUHCGZELZFMZIUNABNZFMULABUFUODEFCOPUNAFBDQUEUPUKFUEUPUMABNZELUK
      UMEABDRUEUQUJEABUHCDSTUAUBUCEFUIOUD $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The range of a class of ordered pairs. $)
    rnopab $p |- ran { <. x , y >. | ph } = { y | E. x ph } $=
      ( vz copab crn cv cop wcel wex cab hbopab1 hbopab2 dfrnf opabid exbii 
      abbii eqtri ) ABCEZFBGCGHSIZBJZCKABJZCKBCDSABCDLABCDMNUAUBCTABABCOPQR $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y $.
    $( The range of a function expressed as a class abstraction. $)
    rnopab2 $p |- ran { <. x , y >. | ( x e. A /\ y = B ) } =
                 { y | E. x e. A y = B } $=
      ( cv wcel wceq wa copab crn wex cab wrex rnopab df-rex abbii eqtr4i ) AEC
      FBEDGZHZABIJSAKZBLRACMZBLSABNUATBRACOPQ $.
      $( [23-Mar-2006] $)
  $}

  $( The range of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
     p. 36. $)
  rn0 $p |- ran (/) = (/) $=
    ( c0 cdm wceq crn dm0 dm0rn0 mpbi ) ABACADACEAFG $.
    $( [4-Jul-1994] $)

  ${
    $d x y A $.
    $( A relation is empty iff its range is empty. $)
    relrn0 $p |- ( Rel A -> ( A = (/) <-> ran A = (/) ) ) $=
      ( wrel c0 wceq cdm crn reldm0 dm0rn0 syl6bb ) ABACDAECDAFCDAGAHI $.
      $( [15-Sep-2004] $)

    $( The domain and range of a class are included in its double union. $)
    dmrnssfld $p |- ( dom A u. ran A ) C_ U. U. A $=
      ( vx vy cdm crn cuni cv wcel cop wex visset eldm2 cpr prid1 wss uniopel 
      uniop syl5eqelr elssuni syl sseld mpi 19.23aiv sylbi ssriv elrn2 prid2 
      unssi ) ADZAEZAFZFZBUIULBGZUIHUMCGZIZAHZCJUMULHZCUMABKZLUPUQCUPUMUMUNMZHU
      QUMUNURNUPUSULUMUPUSUKHUSULOUPUOFUKUSUMUNAPUMUNQRUSUKSTZUAUBUCUDUECUJULUN
      UJHUPBJUNULHZBUNACKZUFUPVABUPUNUSHVAUMUNVBUGUPUSULUNUTUAUBUCUDUEUH $.
      $( [13-May-2008] $)
  $}

  $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
     p. 26. $)
  dmexg $p |- ( A e. B -> dom A e. _V ) $=
    ( wcel cuni cvv cdm uniexg wss crn cun ssun1 dmrnssfld sstri ssexg mpan 
    3syl ) ABCADZECQDZECZAFZECZABGQEGTRHSUATTAIZJRTUBKALMTRENOP $.
    $( [7-Apr-1995] $)

  $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring] p. 26.
     Similar to Lemma 3D of [Enderton] p. 41. $)
  rnexg $p |- ( A e. B -> ran A e. _V ) $=
    ( wcel cuni cvv crn uniexg wss cdm cun ssun2 dmrnssfld sstri ssexg mpan 
    3syl ) ABCADZECQDZECZAFZECZABGQEGTRHSUATAIZTJRTUBKALMTRENOP $.
    $( [31-Mar-1995] $)

  ${
    dmex.1 $e |- A e. _V $.
    $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
       p. 26. $)
    dmex $p |- dom A e. _V $=
      ( cvv wcel cdm dmexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)

    $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring]
       p. 26.  Similar to Lemma 3D of [Enderton] p. 41. $)
    rnex $p |- ran A e. _V $=
      ( cvv wcel crn rnexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)
  $}

  $( The identity function is a proper class.  This means, for example, that we
     cannot use it as a member of the class of continuous functions unless it
     is restricted to a set, as in ~ idcn . $)
  iprc $p |- -. _I e. _V $=
    ( cid cvv wcel cdm vprc dmi eleq1i mtbir dmexg mto ) ABCADZBCZLBBCEKBBFGHAB
    IJ $.
    $( [1-Jan-2007] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Domain of a composition.  Theorem 21 of [Suppes] p. 63.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmcoss $p |- dom ( A o. B ) C_ dom B $=
      ( vx vy vz ccom cdm cv cop wcel wex wbr hbe1 wa exsimpl visset opelco 
      breq2 cbvexv 3imtr4i 19.23ai eldm2 eldm ssriv ) CABFZGZBGZCHZDHZIUEJZDKUH
      UIBLZDKZUHUFJUHUGJUJULDUKDMUHEHZBLZUMUIALZNEKUNEKUJULUNUOEOEUHUIABCPZDPQU
      KUNDEUIUMUHBRSTUADUHUEUPUBDUHBUPUCTUD $.
      $( [27-Aug-2011] $) $( [19-Mar-1998] $)
  $}

  $( Range of a composition. $)
  rncoss $p |- ran ( A o. B ) C_ ran A $=
    ( ccnv ccom cdm crn dmcoss df-rn cnvco dmeqi eqtri 3sstr4i ) BCZACZDZEZNEAB
    DZFZAFMNGRQCZEPQHSOABIJKAHL $.
    $( [19-Mar-1998] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Domain of a composition.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmcosseq $p |- ( ran B C_ dom A -> dom ( A o. B ) = dom B ) $=
      ( vx vy vz crn cdm wss ccom dmcoss a1i cv wbr wex cop wcel wa wi ssel 
      visset elrn eldm imbi12i 19.8a imim1i pm3.2 eximdv sylcom sylbi syl 
      excom syl6ibr opelco exbii eldm2 3imtr4g ssrdv eqssd ) BFZAGZHZABIZGZBGZV
      CVDHVAABJKVACVDVCVACLZDLZBMZDNZVEELZOVBPZENZVEVDPVEVCPVAVHVGVFVIAMZQZDNZE
      NZVKVAVHVMENZDNVOVAVGVPDVAVFUSPZVFUTPZRZVGVPRZUSUTVFSVSVGCNZVLENZRZVTVQWA
      VRWBCVFBDTZUAEVFAWDUBUCWCVGWBVPVGWAWBVGCUDUEVGVLVMEVGVLUFUGUHUIUJUGVMEDUK
      ULVJVNEDVEVIABCTZETUMUNULDVEBWEUBEVEVBWEUOUPUQUR $.
      $( [27-Aug-2011] $) $( [28-May-1998] $)

    $( Domain of a composition. $)
    dmcoeq $p |- ( dom A = ran B -> dom ( A o. B ) = dom B ) $=
      ( cdm crn wceq wss ccom eqimss2 dmcosseq syl ) ACZBDZELKFABGCBCELKHABIJ 
      $.
      $( [19-Mar-1998] $)
  $}

  $( Range of a composition. $)
  rncoeq $p |- ( dom A = ran B -> ran ( A o. B ) = ran A ) $=
    ( ccnv cdm crn wceq ccom dmcoeq eqcom df-rn dfdm4 eqeq12i bitri cnvco 
    dmeqi eqtri 3imtr4i ) BCZDZACZEZFZRTGZDZTDZFADZBEZFZABGZEZAEZFRTHUHUGUFFUBU
    FUGIUGSUFUABJAKLMUJUDUKUEUJUICZDUDUIJULUCABNOPAJLQ $.
    $( [19-Mar-1998] $)

  $( Equality theorem for restrictions. $)
  reseq1 $p |- ( A = B -> ( A |` C ) = ( B |` C ) ) $=
    ( wceq cvv cxp cin cres ineq1 df-res 3eqtr4g ) ABDACEFZGBLGACHBCHABLIACJBCJ
    K $.
    $( [7-Aug-1994] $)

  $( Equality theorem for restrictions. $)
  reseq2 $p |- ( A = B -> ( C |` A ) = ( C |` B ) ) $=
    ( wceq cvv cxp cin cres xpeq1 ineq2d df-res 3eqtr4g ) ABDZCAEFZGCBEFZGCAHCB
    HMNOCABEIJCAKCBKL $.
    $( [8-Aug-1994] $)

  ${
    reseq2i.1 $e |- A = B $.
    $( Equality inference for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2i $p |- ( F |` A ) = ( F |` B ) $=
      ( wceq cres reseq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [22-Jun-2011] $)
  $}

  ${
    reseq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2d $p |- ( ph -> ( F |` A ) = ( F |` B ) ) $=
      ( wceq cres reseq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [22-Jun-2011] $)
  $}

  ${
    $d y B $.  $d x y $.
    hbres.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbres.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for restriction.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    hbres $p |- ( y e. ( A |` B ) -> A. x y e. ( A |` B ) ) $=
      ( cres cvv cxp cin df-res cv wcel ax-17 hbxp hbin hbxfr ) ABCDGCDHIZJCDKA
      BCREABDHFBLHMANOPQ $.
      $( [24-Jul-2012] $) $( [15-Sep-2003] $)
  $}

  $( Distribute proper substitution through the restriction of a class.
     ~ csbresg is derived from the virtual deduction proof ~ csbresgVD .
     (Contributed by Alan Sare, 10-Nov-2012. ) $)
  csbresg $p |- ( A e. D -> [_ A / x ]_ ( B |` C ) =
                 ( [_ A / x ]_ B |` [_ A / x ]_ C ) ) $=
    ( wcel cres csb cvv cxp cin df-res csbeq2i csbing csbxpg wceq csbconstgfv 
    xpeq2 syl eqtrd ineq2d 3eqtrd syl6eqr ) BEFZABCDGZHZABCHZABDHZIJZKZUGUHGUDU
    FABCDIJZKZHUGABUKHZKUJABUEULECDLMABECUKNUDUMUIUGUDUMUHABIHZJZUIABDIEOUDUNIP
    UOUIPABIEQUNIUHRSTUAUBUGUHLUC $.
    $( [10-Nov-2012] $)

  $( A restriction to the empty set is empty. $)
  res0 $p |- ( A |` (/) ) = (/) $=
    ( c0 cres cvv cxp cin df-res xp0r ineq2i in0 3eqtri ) ABCABDEZFABFBABGLBADH
    IAJK $.
    $( [12-Nov-1994] $)

  ${
    opelres.1 $e |- B e. _V $.
    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25. $)
    opelres $p |- ( <. A , B >. e. ( C |` D ) <->
                    ( <. A , B >. e. C /\ A e. D ) ) $=
      ( cop cres wcel cvv cxp cin wa df-res eleq2i elin opelxp mpbiran2 anbi2i 
      3bitri ) ABFZCDGZHTCDIJZKZHTCHZTUBHZLUDADHZLUAUCTCDMNTCUBOUEUFUDUEUFBIHAB
      DIEPEQRS $.
      $( [13-Nov-1995] $)

    $( Binary relation on a restriction. $)
    brres $p |- ( A ( C |` D ) B <-> ( A C B /\ A e. D ) ) $=
      ( cop cres wcel wa wbr opelres df-br anbi1i 3bitr4i ) ABFZCDGZHOCHZADHZIA
      BPJABCJZRIABCDEKABPLSQRABCLMN $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.  $d y D $.
    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25. $)
    opelresg $p |- ( B e. R -> ( <. A , B >. e. ( C |` D ) <->
                    ( <. A , B >. e. C /\ A e. D ) ) ) $=
      ( vy cv cop cres wcel wa wceq opeq2 eleq1d anbi1d visset opelres vtoclbg 
      ) AFGZHZCDIZJTCJZADJZKABHZUAJUDCJZUCKFBESBLZTUDUASBAMZNUFUBUEUCUFTUDCUGNO
      ASCDFPQR $.
      $( [14-Oct-2005] $)
  $}

  ${
    opres.1 $e |- B e. _V $.
    $( Ordered pair membership in a restriction when the first member belongs
       to the restricting class.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    opres $p |- ( A e. D ->
                    ( <. A , B >. e. ( C |` D ) <-> <. A , B >. e. C ) ) $=
      ( cop cres wcel wa opelres ancom bitri baib ) ABFZCDGHZADHZNCHZOQPIPQIABC
      DEJQPKLM $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A restricted identity relation is equivalent to equality in its
       domain. $)
    resieq $p |- ( ( B e. A /\ C e. A ) -> ( B ( _I |` A ) C <-> B = C ) ) $=
      ( vx wcel cid cres wbr wceq wb cv wi breq2 eqeq2 bibi12d imbi2d cop 
      visset opres df-br ideq bitr3i 3bitr4g vtoclg impcom ) CAEBAEZBCFAGZHZBCI
      ZJZUFBDKZUGHZBUKIZJZLUFUJLDCAUKCIZUNUJUFUOULUHUMUIUKCBUGMUKCBNOPUFBUKQZUG
      EUPFEZULUMBUKFADRZSBUKUGTUMBUKFHUQBUKURUABUKFTUBUCUDUE $.
      $( [30-Apr-2004] $)
  $}

  $( The restriction of a restriction. $)
  resres $p |- ( ( A |` B ) |` C ) = ( A |` ( B i^i C ) ) $=
    ( cres cvv cxp cin df-res ineq1i xpindir ineq2i inass 3eqtr4ri 3eqtri ) ABD
    ZCDOCEFZGABEFZGZPGZABCGZDZOCHORPABHIATEFZGAQPGZGUASUBUCABCEJKATHAQPLMN $.
    $( [27-Mar-2008] $)

  $( Distributive law for restriction over union.  Theorem 31 of [Suppes]
     p. 65. $)
  resundi $p |- ( A |` ( B u. C ) ) = ( ( A |` B ) u. ( A |` C ) ) $=
    ( cun cvv cxp cin cres xpundir ineq2i indi eqtri df-res uneq12i 3eqtr4i ) 
    ABCDZEFZGZABEFZGZACEFZGZDZAPHABHZACHZDRASUADZGUCQUFABCEIJASUAKLAPMUDTUEUBAB
    MACMNO $.
    $( [30-Sep-2002] $)

  $( Distributive law for restriction over union. $)
  resundir $p |- ( ( A u. B ) |` C ) = ( ( A |` C ) u. ( B |` C ) ) $=
    ( cun cvv cxp cin cres indir df-res uneq12i 3eqtr4i ) ABDZCEFZGANGZBNGZDMCH
    ACHZBCHZDABNIMCJQORPACJBCJKL $.
    $( [23-Sep-2004] $)

  $( Class restriction distributes over intersection.  (Contributed by FL,
     6-Oct-2008.) $)
  resindi $p |- ( A |` ( B i^i C ) ) = ( ( A |` B ) i^i ( A |` C ) ) $=
    ( cin cvv cxp cres xpindir ineq2i inindi eqtri df-res ineq12i 3eqtr4i ) ABC
    DZEFZDZABEFZDZACEFZDZDZAOGABGZACGZDQARTDZDUBPUEABCEHIARTJKAOLUCSUDUAABLACLM
    N $.
    $( [6-Oct-2008] $)

  $( Class restriction distributes over intersection. $)
  resindir $p |- ( ( A i^i B ) |` C ) = ( ( A |` C ) i^i ( B |` C ) ) $=
    ( cin cvv cxp cres inindir df-res ineq12i 3eqtr4i ) ABDZCEFZDAMDZBMDZDLCGAC
    GZBCGZDABMHLCIPNQOACIBCIJK $.
    $( [18-Dec-2008] $)

  $( Move intersection into class restriction. $)
  inres $p |- ( A i^i ( B |` C ) ) = ( ( A i^i B ) |` C ) $=
    ( cin cvv cxp cres inass df-res ineq2i 3eqtr4ri ) ABDZCEFZDABMDZDLCGABCGZDA
    BMHLCIONABCIJK $.
    $( [18-Dec-2008] $)

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a restriction.  Exercise 14 of [TakeutiZaring] p. 25. $)
    dmres $p |- dom ( A |` B ) = ( B i^i dom A ) $=
      ( vx vy cdm cin cres cv cop wcel wex wa visset opelres exbii eldm2 
      anbi1i 19.41v bitr4i 3bitr4ri ineqri incom eqtr3i ) AEZBFABGZEZBUDFCUDBUF
      CHZDHZIZUEJZDKUIAJZUGBJZLZDKZUGUFJUGUDJZULLZUJUMDUGUHABDMNODUGUECMZPUPUKD
      KZULLUNUOURULDUGAUQPQUKULDRSTUAUDBUBUC $.
      $( [1-Aug-1994] $)
  $}

  $( A domain restricted to a subclass equals the subclass. $)
  ssdmres $p |- ( A C_ dom B <-> dom ( B |` A ) = A ) $=
    ( cdm wss cin wceq cres df-ss dmres eqeq1i bitr4i ) ABCZDALEZAFBAGCZAFALHNM
    ABAIJK $.
    $( [28-Aug-2004] $) $( [2-Mar-1997] $)

  $( The domain of a restriction to a set exists. $)
  dmresexg $p |- ( B e. C -> dom ( A |` B ) e. _V ) $=
    ( wcel cdm cin cvv cres inex1g dmres syl5eqel ) BCDBAEZFGABHEBLCIABJK $.
    $( [7-Apr-1995] $)

  $( A class includes its restriction.  Exercise 15 of [TakeutiZaring]
     p. 25. $)
  resss $p |- ( A |` B ) C_ A $=
    ( cres cvv cxp cin df-res inss1 eqsstri ) ABCABDEZFAABGAJHI $.
    $( [2-Aug-1994] $)

  $( Commutative law for restriction. $)
  rescom $p |- ( ( A |` B ) |` C ) = ( ( A |` C ) |` B ) $=
    ( cin cres incom reseq2i resres 3eqtr4i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [27-Mar-1998] $)

  $( Subclass theorem for restriction. $)
  ssres $p |- ( A C_ B -> ( A |` C ) C_ ( B |` C ) ) $=
    ( wss cvv cxp cin cres ssrin df-res 3sstr4g ) ABDACEFZGBLGACHBCHABLIACJBCJK
    $.
    $( [16-Aug-1994] $)

  $( Subclass theorem for restriction.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  ssres2 $p |- ( A C_ B -> ( C |` A ) C_ ( C |` B ) ) $=
    ( wss cvv cxp cin cres xpss1 sslin syl df-res 3sstr4g ) ABDZCAEFZGZCBEFZGZC
    AHCBHNOQDPRDABEIOQCJKCALCBLM $.
    $( [27-Aug-2011] $) $( [22-Mar-1998] $)

  $( A restriction is a relation.  Exercise 12 of [TakeutiZaring] p. 25.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
  relres $p |- Rel ( A |` B ) $=
    ( cres cvv cxp wss wrel cin df-res inss2 eqsstri relxp relss mp2 ) ABCZBDEZ
    FPGOGOAPHPABIAPJKBDLOPMN $.
    $( [27-Aug-2011] $) $( [2-Aug-1994] $)

  $( Absorption law for restriction.  Exercise 17 of [TakeutiZaring] p. 25. $)
  resabs1 $p |- ( B C_ C -> ( ( A |` C ) |` B ) = ( A |` B ) ) $=
    ( wss cin cres wceq sseqin2 reseq2 sylbi resres syl5eq ) BCDZACBEZFZABFZACF
    BFMNBGOPGBCHNBAIJACBKL $.
    $( [9-Aug-1994] $)

  $( Absorption law for restriction. $)
  resabs2 $p |- ( B C_ C -> ( ( A |` B ) |` C ) = ( A |` B ) ) $=
    ( wss cres resabs1 rescom syl5eq ) BCDACEBEABEZICEABCFABCGH $.
    $( [27-Mar-1998] $)

  $( Idempotent law for restriction. $)
  residm $p |- ( ( A |` B ) |` B ) = ( A |` B ) $=
    ( wss cres wceq ssid resabs2 ax-mp ) BBCABDZBDIEBFABBGH $.
    $( [27-Mar-1998] $)

  $( A restriction to an image. $)
  resima $p |- ( ( A |` B ) " B ) = ( A " B ) $=
    ( cres crn cima residm rneqi df-ima 3eqtr4i ) ABCZBCZDJDJBEABEKJABFGJBHABHI
    $.
    $( [29-Sep-2004] $)

  ${
    $d x y A $.  $d x y B $.
    $( Simplification law for restriction. $)
    relssres $p |- ( ( Rel A /\ dom A C_ B ) -> ( A |` B ) = A ) $=
      ( vx vy wrel cdm wss wa cres wceq simpl cv cop wcel wi ssel visset 
      opeldm syl5 ancld opelres syl6ibr adantl relssdv resss jctil eqss sylibr 
      ) AEZAFZBGZHZABIZAGZAUMGZHUMAJULUOUNULCDAUMUIUKKUKCLZDLZMZANZURUMNZOUIUKU
      SUSUPBNZHUTUKUSVAUKUPUJNVAUSUJBUPPUPUQACQRSTUPUQABDQUAUBUCUDABUEUFUMAUGUH
      $.
      $( [15-Mar-2004] $) $( [16-Aug-1994] $)
  $}

  $( A relation restricted to its domain equals itself. $)
  resdm $p |- ( Rel A -> ( A |` dom A ) = A ) $=
    ( wrel cdm wss cres wceq ssid relssres mpan2 ) ABACZJDAJEAFJGAJHI $.
    $( [12-Dec-2006] $)

  $( The restriction of a set is a set.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  resexg $p |- ( A e. C -> ( A |` B ) e. _V ) $=
    ( cres wss wcel cvv resss ssexg mpan ) ABDZAEACFKGFABHKACIJ $.
    $( [27-Aug-2011] $) $( [28-Mar-1998] $)

  ${
    $d x y A $.
    $( Restriction of a class abstraction of ordered pairs. $)
    resopab $p |- ( { <. x , y >. | ph } |` A ) =
                  { <. x , y >. | ( x e. A /\ ph ) } $=
      ( copab cres cvv cxp cin cv wcel wa df-res df-xp visset biantru opabbii 
      eqtr4i ineq2i incom eqtri inopab 3eqtri ) ABCEZDFUDDGHZIZBJDKZBCEZUDIZUGA
      LBCEUDDMUFUDUHIUIUEUHUDUEUGCJGKZLZBCEUHBCDGNUGUKBCUJUGCOPQRSUDUHTUAUGABCU
      BUC $.
      $( [5-Nov-2002] $)

    $( The existence of a restricted identity function, proved without using
       the Axiom of Replacement (unlike ~ resfunexg ). $)
    resiexg $p |- ( A e. B -> ( _I |` A ) e. _V ) $=
      ( vx vy cid cres cxp wss cvv wcel ssexg relres cv wceq wa cop simpr 
      eleq1 biimpa jca visset opelres wbr df-br ideq bitr3i anbi1i bitri 
      opelxp 3imtr4i relssi xpexg anidms sylancr ) EAFZAAGZHUPIJZUOIJABJZUOUPIK
      CDUOUPEALCMZDMZNZUSAJZOZVBUTAJZOUSUTPZUOJZVEUPJVCVBVDVAVBQVAVBVDUSUTARSTV
      FVEEJZVBOVCUSUTEADUAZUBVGVAVBVGUSUTEUCVAUSUTEUDUSUTVHUEUFUGUHUSUTAAVHUIUJ
      UKURUQAABBULUMUN $.
      $( [13-Jan-2007] $)

    $( A subclass of the identity function is the identity function restricted
       to its domain.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    iss $p |- ( A C_ _I <-> A = ( _I |` dom A ) ) $=
      ( vx vy cid wss cdm cres wceq cv cop wcel wb wal wa ssel wi visset 
      opeldm a1i jcad opeq2 eleq1d imbi2d wex biimprcd wbr df-br ideq bitr3i 
      syl5ib sylcom 19.23adv eldm2 syl5cbi imp3a impbid opelres syl6bbr 
      19.21aivv wrel eqrel reli relss mpi relres sylancl mpbird resss sseq1 
      mpbiri impbii ) ADEZADAFZGZHZVLVOBIZCIZJZAKZVRVNKZLZCMBMZVLWABCVLVSVRDKZV
      PVMKZNZVTVLVSWEVLVSWCWDADVROZVSWDPVLVPVQABQZRSTVLWCWDVSVLVPVQHZWDVSPZWCWH
      WDVPVPJZAKZPWIVLWHWKVSWDWHWJVRAVPVQVPUAUBZUCVLVSCUDWKWDVLVSWKCVLVSWCWKWFV
      SWHWKWCWHWKVSWLUEWCVPVQDUFWHVPVQDUGVPVQCQZUHUIZUJUKULCVPAWGUMUJUNWNUJUOUP
      VPVQDVMWMUQURUSAUTZVNUTVOWBLVLBCAVNVAVLDUTWOVBADVCVDDVMVEVFVGVOVLVNDEDVMV
      HAVNDVIVJVK $.
      $( [27-Aug-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Restriction of a class abstraction of ordered pairs. $)
    resopab2 $p |- ( A C_ B -> ( { <. x , y >. | ( x e. B /\ ph ) } |` A ) =
                  { <. x , y >. | ( x e. A /\ ph ) } ) $=
      ( wss cv wcel wa copab cres wi wb ssel pm4.71 sylib anbi1d anass syl6rbb 
      opabbidv resopab syl5eq ) DEFZBGZDHZUDEHZAIZIZBCJUEAIZBCJUGBCJDKUCUHUIBCU
      CUIUEUFIZAIUHUCUEUJAUCUEUFLUEUJMDEUDNUEUFOPQUEUFARSTUGBCDUAUB $.
      $( [24-Aug-2007] $)
  $}

  $( The domain of a restricted identity function. $)
  dmresi $p |- dom ( _I |` A ) = A $=
    ( cid cdm wss cres wceq cvv ssv dmi sseqtr4i ssdmres mpbi ) ABCZDBAECAFAGMA
    HIJABKL $.
    $( [27-Aug-2004] $)

  $( MAY BE REVISED - delete this and replace w/ dfres3 (in FL's mathbox) $)
  $( Any relation restricted to the universe is itself. $)
  resid $p |- ( Rel A -> ( A |` _V ) = A ) $=
    ( wrel cdm cvv wss cres wceq ssv relssres mpan2 ) ABACZDEADFAGKHADIJ $.
    $( [16-Mar-2004] $)

  $( Equality theorem for image. $)
  imaeq1 $p |- ( A = B -> ( A " C ) = ( B " C ) ) $=
    ( wceq cres crn cima reseq1 rneqd df-ima 3eqtr4g ) ABDZACEZFBCEZFACGBCGLMNA
    BCHIACJBCJK $.
    $( [14-Aug-1994] $)

  $( Equality theorem for image. $)
  imaeq2 $p |- ( A = B -> ( C " A ) = ( C " B ) ) $=
    ( wceq cres crn cima reseq2 rneqd df-ima 3eqtr4g ) ABDZCAEZFCBEZFCAGCBGLMNA
    BCHICAJCBJK $.
    $( [14-Aug-1994] $)

  ${
    imaeq1i.1 $e |- A = B $.
    $( Equality theorem for image. $)
    imaeq1i $p |- ( A " C ) = ( B " C ) $=
      ( wceq cima imaeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality theorem for image. $)
    imaeq2i $p |- ( C " A ) = ( C " B ) $=
      ( wceq cima imaeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    imaeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq1d $p |- ( ph -> ( A " C ) = ( B " C ) ) $=
      ( wceq cima imaeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Dec-2006] $)

    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq2d $p |- ( ph -> ( C " A ) = ( C " B ) ) $=
      ( wceq cima imaeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dfima2 $p |- ( A " B ) = { y | E. x e. B x A y } $=
      ( cima cres crn cv wbr wex cab wrex df-ima dfrn2 wcel wa visset brres 
      ancom bitri exbii df-rex bitr4i abbii 3eqtri ) CDECDFZGAHZBHZUFIZAJZBKUGU
      HCIZADLZBKCDMABUFNUJULBUJUGDOZUKPZAJULUIUNAUIUKUMPUNUGUHCDBQRUKUMSTUAUKAD
      UBUCUDUE $.
      $( [27-Aug-2011] $) $( [19-Apr-2004] $)

    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dfima3 $p |- ( A " B ) = { y | E. x ( x e. B /\ <. x , y >. e. A ) } $=
      ( cima cv wbr wrex cab wcel cop wa wex dfima2 df-br rexbii df-rex bitri 
      abbii eqtri ) CDEAFZBFZCGZADHZBIUADJUAUBKCJZLAMZBIABCDNUDUFBUDUEADHUFUCUE
      ADUAUBCOPUEADQRST $.
      $( [27-Aug-2011] $) $( [14-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elimag $p |- ( A e. D -> ( A e. ( B " C ) <-> E. x e. C x B A ) ) $=
      ( vy cv wbr wrex cima wceq breq2 rexbidv dfima2 elab2g ) AGZFGZCHZADIPBCH
      ZADIFBCDJEQBKRSADQBPCLMAFCDNO $.
      $( [20-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    elima.1 $e |- A e. _V $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima $p |- ( A e. ( B " C ) <-> E. x e. C x B A ) $=
      ( cvv wcel cima cv wbr wrex wb elimag ax-mp ) BFGBCDHGAIBCJADKLEABCDFMN 
      $.
      $( [19-Apr-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima2 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ x B A ) ) $=
      ( cima wcel cv wbr wrex wa wex elima df-rex bitri ) BCDFGAHZBCIZADJPDGQKA
      LABCDEMQADNO $.
      $( [11-Aug-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima3 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ <. x , A >. e. B ) ) $=
      ( cima wcel cv wbr wa wex cop elima2 df-br anbi2i exbii bitri ) BCDFGAHZD
      GZRBCIZJZAKSRBLCGZJZAKABCDEMUAUCATUBSRBCNOPQ $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z w $.
    hbima.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbima.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for image.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbima $p |- ( y e. ( A " B ) -> A. x y e. ( A " B ) ) $=
      ( cima cres crn df-ima hbres hbrn hbxfr ) ABCDGCDHZICDJABNABCDEFKLM $.
      $( [27-Aug-2011] $) $( [30-Dec-1996] $)
  $}

  ${
    $d x y z $.  $d B y z $.  $d A y z $.  $d ph y $.
    hbimad.1 $e |- ( ph -> A. x ph ) $.
    hbimad.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbimad.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbima .
       (Contributed by FL, 15-Dec-2006.) $)
    hbimad $p |- ( ph -> ( y e. ( A " B ) -> A. x y e. ( A " B ) ) ) $=
      ( vz cv wcel wal cab cima wi hba1 hbab hbima a1i wceq 19.21aiv abidhb 
      syl imaeq1d imaeq2d eqtrd eleq2d albid 3imtr3d ) ACJZIJZDKZBLZIMZUKEKZBLZ
      IMZNZKZUSBLZUJDENZKZVBBLUSUTOABCUNUQUMBICULBPQUPBICUOBPQRSAURVAUJAURDUQNV
      AAUNDUQAUJDKZVCBLOZCLUNDTAVDCGUABCIDUBUCUDAUQEDAUJEKZVEBLOZCLUQETAVFCHUAB
      CIEUBUCUEUFUGZAUSVBBFVGUHUI $.
      $( [14-Dec-2006] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.  $d x y z $.  $d F y z $.
    $( Move class substitution in and out of the image of a function.
       (Contributed by FL, 15-Dec-2006.) $)
    csbima12g $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cima csb ax-17 hbcsb1g hbimad wceq wex a9e visset hbcsb1 
      hbima hbeq csbeq1a imaeq1d imaeq2d 3eqtr3d 19.23ai ax-mp a1i 3eqtrd 
      csbiegf csbcog eqtrd ) BDHZFBAFIZECJZKZKFBAUNEKZKZFBAUNCKZKZJZABUOKABEKZA
      BCKZJZFGBUPVADUMFGURUTUMFLFGBUQDGIZBHFLZMFGBUSDVFMNUNBOZUPUQUSJZURUSJVAUP
      VHOZVGAIUNOZAPVIAFQVJVIAAGGUPVHAGUNUOFRZVEUNHALZSAGUQUSAGUNEVKVLSAGUNCVKV
      LSTUAVJUOUQCJUPVHVJEUQCAUNEUBUCAUNUOUBVJCUSUQAUNCUBUDUEUFUGUHVGUQURUSFBUQ
      UBUCVGUSUTURFBUSUBUDUIUJAFBUODUKUMVAVBUTJVDUMURVBUTAFBEDUKUCUMUTVCVBAFBCD
      UKUDULUE $.
      $( [13-Dec-2006] $)
  $}

  $( Move class substitution in and out of the image of a function.(This is
     ~ csbima12g with a shortened proof, shortened by Alan Sare, 10-Nov-2012.)
     The proof is derived from the virtual deduction proof ~ csbima12gALTVD .
     Although the proof is shorter, the total number of steps of all theorems
     used in the proof is probably longer. $)
  csbima12gALT $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
    ( wcel cima csb cres crn df-ima csbeq2i csbrng csbresg rneqd 3eqtrd 
    syl6eqr ) BDFZABECGZHZABEHZABCHZIZJZUAUBGRTABECIZJZHABUEHZJUDABSUFDECKLABUE
    DMRUGUCABECDNOPUAUBKQ $.
    $( [10-Nov-2012] $)

  ${
    $d x y A $.  $d x y B $.
    $( The image of the domain of a class is the range of the class. $)
    imadmrn $p |- ( A " dom A ) = ran A $=
      ( vx vy cv cdm wcel cop wa wex cab cima crn visset opeldm pm4.71i ancom 
      bitr2i exbii abbii dfima3 dfrn3 3eqtr4i ) BDZAEZFZUCCDZGAFZHZBIZCJUGBIZCJ
      AUDKALUIUJCUHUGBUGUGUEHUHUGUEUCUFABMNOUGUEPQRSBCAUDTBCAUAUB $.
      $( [14-Aug-1994] $)

    $( The image of a class is a subset of its range.  Theorem 3.16(xi) of
       [Monk1] p. 39. $)
    imassrn $p |- ( A " B ) C_ ran A $=
      ( vx vy cv wcel cop wa wex cab cima crn simpr eximi ss2abi dfima3 dfrn3 
      3sstr4i ) CEZBFZSDEGAFZHZCIZDJUACIZDJABKALUCUDDUBUACTUAMNOCDABPCDAQR $.
      $( [31-Mar-1995] $)
  $}

  $( The image of a set is a set.  Theorem 3.17 of [Monk1] p. 39. $)
  imaexg $p |- ( A e. C -> ( A " B ) e. _V ) $=
    ( cima crn wss cvv wcel ssexg imassrn rnexg sylancr ) ABDZAEZFNGHMGHACHMNGI
    ABJACKL $.
    $( [24-Jul-1995] $)

  ${
    $d x y A $.
    $( Image under the identity relation.  Theorem 3.16(viii) of [Monk1]
       p. 38. $)
    imai $p |- ( _I " A ) = A $=
      ( vx vy cid cima cv wcel cop wa wex cab dfima3 wceq wbr df-br visset 
      ideq bitr3i anbi2i ancom bitri exbii eleq1 ceqsexv abbii abid2 3eqtri ) 
      DAEBFZAGZUHCFZHDGZIZBJZCKUJAGZCKABCDALUMUNCUMUHUJMZUIIZBJUNULUPBULUIUOIUP
      UKUOUIUKUHUJDNUOUHUJDOUHUJCPZQRSUIUOTUAUBUIUNBUJUQUHUJAUCUDUAUECAUFUG $.
      $( [30-Apr-1998] $)
  $}

  $( The range of the restricted identity function. $)
  rnresi $p |- ran ( _I |` A ) = A $=
    ( cid cima cres crn df-ima imai eqtr3i ) BACBADEABAFAGH $.
    $( [27-Aug-2004] $)

  $( The image of a restriction of the identity function.  (Contributed by FL,
     31-Dec-2006.) $)
  resiima $p |- ( B C_ A -> ( ( _I |` A ) " B ) = B ) $=
    ( wss cid cres cima crn wceq df-ima a1i resabs1 rneqd rnresi 3eqtrd ) BACZD
    AEZBFZPBEZGZDBEZGZBQSHOPBIJORTDBAKLUABHOBMJN $.
    $( [28-Dec-2006] $)

  $( Image of the empty set.  Theorem 3.16(ii) of [Monk1] p. 38. $)
  ima0 $p |- ( A " (/) ) = (/) $=
    ( c0 cima cres crn df-ima res0 rneqi rn0 3eqtri ) ABCABDZEBEBABFKBAGHIJ $.
    $( [20-May-1998] $)

  $( Image under the empty relation.  (Contributed by FL, 11-Jan-2007.) $)
  0ima $p |- ( (/) " A ) = (/) $=
    ( c0 cima crn imassrn rn0 sseqtri 0ss eqssi ) BACZBJBDBBAEFGJHI $.
    $( [4-Jan-2007] $)

  $( A class whose image under another is empty is disjoint with the other's
     domain.  (Contributed by FL, 24-Jan-2007.) $)
  imadisj $p |- ( ( A " B ) = (/) <-> ( dom A i^i B ) = (/) ) $=
    ( cima c0 wceq cres crn cdm cin df-ima eqeq1i dm0rn0 dmres incom eqtri 
    3bitr2i ) ABCZDEABFZGZDERHZDEAHZBIZDEQSDABJKRLTUBDTBUAIUBABMBUANOKP $.
    $( [15-Jan-2007] $)

  $( A pre-image under any class is included in the domain of the class.
     (Contributed by FL, 29-Jan-2007.) $)
  cnvimass $p |- ( `' A " B ) C_ dom A $=
    ( ccnv cima crn cdm imassrn dfdm4 sseqtr4i ) ACZBDJEAFJBGAHI $.
    $( [29-Jan-2007] $)

  $( The pre-image of the range of a class is the domain of the class.
     (Contributed by Jeff Hankins, 15-Jul-2009.) $)
  cvimarndm $p |- ( `' A " ran A ) = dom A $=
    ( ccnv cdm cima crn imadmrn df-rn imaeq2i dfdm4 3eqtr4i ) ABZKCZDKEKAEZDACK
    FMLKAGHAIJ $.
    $( [12-Jul-2009] $)

  ${
    $d y x A $.  $d y x R $.
    $( The image of a singleton. $)
    imasng $p |- ( A e. B -> ( R " { A } ) = { y | A R y } ) $=
      ( vx wcel cvv csn cima cv wbr cab wceq elisset wrex breq1 rexsng abbidv 
      dfima2 syl5eq syl ) BCFBGFZDBHZIZBAJZDKZALZMBCNUBEJZUEDKZEUCOZALUGUDUBUJU
      FAUIUFEBGUHBUEDPQREADUCSTUA $.
      $( [8-May-2005] $)

    $( The image of a singleton. $)
    relimasn $p |- ( Rel R -> ( R " { A } ) = { y | A R y } ) $=
      ( wrel cvv wcel csn cima cv wbr cab wceq wn wa c0 snprc imaeq2 sylbi 
      ima0 syl6eq adantl wex brrelex ex con3d imp nexdv abn0 necon1bbii sylib 
      eqtr4d imasng pm2.61d2 ) CDZBEFZCBGZHZBAIZCJZAKZLZUNUOMZVAUNVBNZUQOUTVBUQ
      OLUNVBUQCOHZOVBUPOLUQVDLBPUPOCQRCSTUAVCUSAUBZMUTOLVCUSAUNVBUSMUNUSUOUNUSU
      OBURCUCUDUEUFUGVEUTOUSAUHUIUJUKUDABECULUM $.
      $( [10-May-2005] $) $( [20-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    elimasn.1 $e |- B e. _V $.
    elimasn.2 $e |- C e. _V $.
    $( Membership in an image of a singleton.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    elimasn $p |- ( C e. ( A " { B } ) <-> <. B , C >. e. A ) $=
      ( vx csn cima wcel wbr cop cv breq2 cvv cab wceq imasng ax-mp elab2 
      df-br bitri ) CABGHZIBCAJZBCKAIBFLZAJZUCFCUBEUDCBAMBNIUBUEFOPDFBNAQRSBCAT
      UA $.
      $( [27-Aug-2011] $) $( [15-Mar-2004] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.
    $( Membership in an image of a singleton.  (Contributed by Raph Levien,
       21-Oct-2006.) $)
    elimasng $p |- ( ( B e. R /\ C e. S ) ->
                   ( C e. ( A " { B } ) <-> <. B , C >. e. A ) ) $=
      ( vz vy cv csn cima wcel cop wb wceq sneq imaeq2d eleq2d opeq1 eleq1d 
      bibi12d eleq1 opeq2 visset elimasn vtocl2g ) FHZAGHZIZJZKZUGUFLZAKZMUFABI
      ZJZKZBUFLZAKZMCUNKZBCLZAKZMGFBCDEUGBNZUJUOULUQVAUIUNUFVAUHUMAUGBOPQVAUKUP
      AUGBUFRSTUFCNZUOURUQUTUFCUNUAVBUPUSAUFCBUBSTAUGUFGUCFUCUDUE $.
      $( [21-Oct-2006] $)
  $}

  $( Membership in an image of a singleton. $)
  elimasni $p |- ( C e. ( A " { B } ) -> B A C ) $=
    ( cvv wcel wa csn cima wbr wn c0 noel wceq snprc biimpi imaeq2d ima0 
    syl6eq eleq2d mtbiri con4i elisset jca cop elimasng df-br syl6bbr biimpd 
    mpcom ) BDEZCDEZFZCABGZHZEZBCAIZUOUJUKUJUOUJJZUOCKECLUQUNKCUQUNAKHKUQUMKAUQ
    UMKMBNOPAQRSTUACUNUBUCULUOUPULUOBCUDAEUPABCDDUEBCAUFUGUHUI $.
    $( [5-Aug-2010] $)

  ${
    $d y F $.  $d x y $.
    $( Two ways to express the class of unique-valued arguments of ` F ` ,
       which is the same as the domain of ` F ` whenever ` F ` is a function.
       The left-hand side of the equality is from Definition 10.2 of [Quine]
       p. 65.  Quine uses the notation "arg ` F ` " for this class (for which
       we have no separate notation).  Observe the resemblance to our ~ df-fv ,
       which was based on the idea in Quine's definition. $)
    args $p |- { x | E. y ( F " { x } ) = { y } } = { x | E! y x F y } $=
      ( cv csn cima wceq wex wbr weu cab cvv wcel visset imasng ax-mp eqeq1i 
      exbii euabsn bitr4i abbii ) CADZEFZBDZEZGZBHZUBUDCIZBJZAUGUHBKZUEGZBHUIUF
      UKBUCUJUEUBLMUCUJGANBUBLCOPQRUHBSTUA $.
      $( [8-May-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    eliniseg.1 $e |- C e. _V $.
    $( Membership in an initial segment.  The idiom ` ( ``' A " { B } ) ` ,
       meaning ` { x | x A B } ` , is used to specify an initial segment in
       (for example) Definition 6.21 of [TakeutiZaring] p. 30.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    eliniseg $p |- ( B e. D -> ( C e. ( `' A " { B } ) <-> C A B ) ) $=
      ( wcel cvv ccnv csn cima wbr wb wa cop elimasng df-br syl6bbr brcnvg 
      bitrd mpan2 ) BDFZCGFZCAHZBIJFZCBAKZLEUAUBMZUDBCUCKZUEUFUDBCNUCFUGUCBCDGO
      BCUCPQBCDGARST $.
      $( [27-Aug-2011] $) $( [28-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An idiom that signifies an initial segment of an ordering, used, for
       example, in Definition 6.21 of [TakeutiZaring] p. 30. $)
    iniseg $p |- ( B e. C -> ( `' A " { B } ) = { x | x A B } ) $=
      ( wcel cvv ccnv csn cima cv wbr cab wceq elisset visset eliniseg abbi2dv 
      syl ) CDECFEZBGCHIZAJZCBKZALMCDNSUBATBCUAFAOPQR $.
      $( [28-Apr-2004] $)
  $}

  ${
    $d x y z R $.  $d x A $.
    $( Alternate definition of founded relation.  Definition 6.21 of
       [TakeutiZaring] p. 30. $)
    dffr3 $p |- ( R Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                E. y e. x ( x i^i ( `' R " { y } ) ) = (/) ) ) $=
      ( vz wfr cv wss c0 wne wa wbr cab cin wceq wrex wi wal ccnv csn cima 
      dffr2 cvv wcel visset iniseg ax-mp ineq2i eqeq1i rexbii imbi2i albii 
      bitr4i ) CDFAGZCHUNIJKZUNEGBGZDLEMZNZIOZBUNPZQZARUOUNDSUPTUAZNZIOZBUNPZQZ
      ARABECDUBVFVAAVEUTUOVDUSBUNVCURIVBUQUNUPUCUDVBUQOBUEEDUPUCUFUGUHUIUJUKULU
      M $.
      $( [3-Feb-2007] $) $( [23-Apr-2004] $)
  $}

  $( Subset theorem for image. $)
  imass1 $p |- ( A C_ B -> ( A " C ) C_ ( B " C ) ) $=
    ( wss cres crn cima ssres rnss syl df-ima 3sstr4g ) ABDZACEZFZBCEZFZACGBCGM
    NPDOQDABCHNPIJACKBCKL $.
    $( [16-Mar-2004] $)

  $( Subset theorem for image.  Exercise 22(a) of [Enderton] p. 53. $)
  imass2 $p |- ( A C_ B -> ( C " A ) C_ ( C " B ) ) $=
    ( wss cres crn cima ssres2 rnss syl df-ima 3sstr4g ) ABDZCAEZFZCBEZFZCAGCBG
    MNPDOQDABCHNPIJCAKCBKL $.
    $( [22-Mar-1998] $)

  $( The image of a singleton outside the domain is empty. $)
  ndmima $p |- ( -. A e. dom B -> ( B " { A } ) = (/) ) $=
    ( cdm wcel wn csn cres crn c0 cima wceq cin disjsn biimpri dmres incom 
    eqtri syl5eq dm0rn0 sylib df-ima ) ABCZDEZBAFZGZHZIBUDJUCUECZIKUFIKUCUBUDLZ
    IUGUHIKUCUBAMNUGUDUBLUHBUDOUDUBPQRUESTBUDUAR $.
    $( [22-May-1998] $)

  ${
    $d x y A $.
    $( A converse is a relation.  Theorem 12 of [Suppes] p. 62. $)
    relcnv $p |- Rel `' A $=
      ( vy vx ccnv wrel cv wbr copab relopab df-cnv releqi mpbir ) ADZEBFCFAGZC
      BHZENCBIMOCBAJKL $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y z R $.
    $( Two ways of saying a relation is transitive.  Definition of transitivity
       in [Schechter] p. 51.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cotr $p |- ( ( R o. R ) C_ R <->
             A. x A. y A. z ( ( x R y /\ y R z ) -> x R z ) ) $=
      ( ccom wss cv cop wcel wi wal wbr wa wrel wb wex copab relopab df-co 
      releqi mpbir ssrel ax-mp visset opelco df-br bicomi imbi12i 19.23v 
      bitr4i albii alcom bitri ) DDEZDFZAGZCGZHZUNIZURDIZJZCKZAKZUPBGZDLVDUQDLM
      ZUPUQDLZJZCKBKZAKUNNZUOVCOVIVEBPZACQZNVJACRUNVKACBDDSTUAACUNDUBUCVBVHAVBV
      GBKZCKVHVAVLCVAVJVFJVLUSVJUTVFBUPUQDDAUDCUDUEVFUTUPUQDUFUGUHVEVFBUIUJUKVG
      CBULUMUKUM $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y R $.
    $( Two ways of saying a relation is symmetric.  Similar to definition of
       symmetry in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    cnvsym $p |- ( `' R C_ R <-> A. x A. y ( x R y -> y R x ) ) $=
      ( cv cop ccnv wcel wi wal wss wbr alcom wrel wb relcnv ssrel ax-mp 
      visset brcnv df-br bitr3i imbi12i 2albii 3bitr4i ) BDZADZEZCFZGZUGCGZHZAI
      BIZUKBIAIUHCJZUFUECKZUEUFCKZHZBIAIUKBALUHMUMULNCOBAUHCPQUPUKABUNUIUOUJUNU
      EUFUHKUIUEUFCBRARSUEUFUHTUAUEUFCTUBUCUD $.
      $( [27-Aug-2011] $) $( [28-Dec-1996] $)

    $( Two ways of saying a relation is antisymmetric.  Definition of
       antisymmetry in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    intasym $p |- ( ( R i^i `' R ) C_ _I <->
                  A. x A. y ( ( x R y /\ y R x ) -> x = y ) ) $=
      ( ccnv cin cid wss cv cop wcel wi wal wbr wa wceq wrel wb relcnv relin2 
      ax-mp ssrel elin df-br visset brcnv bitr3i anbi12i bitr4i ideq imbi12i 
      2albii bitri ) CCDZEZFGZAHZBHZIZUNJZURFJZKZBLALZUPUQCMZUQUPCMZNZUPUQOZKZB
      LALUNPZUOVBQUMPVHCRCUMSTABUNFUATVAVGABUSVEUTVFUSURCJZURUMJZNVEURCUMUBVCVI
      VDVJUPUQCUCVDUPUQUMMVJUPUQCAUDBUDZUEUPUQUMUCUFUGUHUTUPUQFMVFUPUQFUCUPUQVK
      UIUFUJUKUL $.
      $( [27-Aug-2011] $) $( [9-Sep-2004] $)

    $( Two ways of saying a relation is antisymmetric and reflexive.
       ` U. U. R ` is the field of a relation by ~ relfld .  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    asymref $p |- ( ( R i^i `' R ) = ( _I |` U. U. R ) <->
       A. x e. U. U. R A. y ( ( x R y /\ y R x ) <-> x = y ) ) $=
      ( cv cop ccnv cin wcel cid cuni cres wb wal wbr wa wceq wi wral df-br 
      opeluu sylbi simpld adantr pm4.71ri bibi1i elin visset brcnv bitr3i 
      anbi12i bitr4i opelres ancom ideq anbi2i 3bitri bibi12i pm5.32 3bitr4i 
      albii 19.21v bitri wrel relcnv relin2 ax-mp relres eqrel mp2an df-ral ) 
      ADZBDZEZCCFZGZHZVMICJJZKZHZLZBMZAMZVKVQHZVKVLCNZVLVKCNZOZVKVLPZLZBMZQZAMV
      OVRPZWIAVQRWAWJAWAWCWHQZBMWJVTWLBWFWCWGOZLWCWFOZWMLVTWLWFWNWMWFWCWDWCWEWD
      WCVLVQHZWDVMCHZWCWOOVKVLCSZABCTUAUBUCUDUEVPWFVSWMVPWPVMVNHZOWFVMCVNUFWDWP
      WEWRWQWEVKVLVNNWRVKVLCAUGBUGZUHVKVLVNSUIUJUKVSVMIHZWCOWCWTOWMVKVLIVQWSULW
      TWCUMWTWGWCWTVKVLINWGVKVLISVKVLWSUNUIUOUPUQWCWFWGURUSUTWCWHBVAVBUTVOVCZVR
      VCWKWBLVNVCXACVDCVNVEVFIVQVGABVOVRVHVIWIAVQVJUS $.
      $( [27-Aug-2011] $) $( [6-May-2008] $)

    $( Two ways of saying a relation is antisymmetric and reflexive.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    asymref2 $p |- ( ( R i^i `' R ) = ( _I |` U. U. R ) <->
   ( A. x e. U. U. R x R x /\ A. x A. y ( ( x R y /\ y R x ) -> x = y ) ) ) $=
      ( ccnv cin cid cuni cres wceq cv wbr wa wb wal wral wi asymref albiim 
      ralbii r19.26 ancom equcom imbi1i albii ax-17 breq2 breq1 anbi12d anidm 
      syl6bb equsal bitri hbra1 ralcom4 cop wcel ra4 opeluu simpld syl5 df-br 
      syl5ib adantrd pm2.43d alimi sylbi 19.21ai alral impbii anbi12i 3bitri ) 
      CCDEFCGGZHIAJZBJZCKZVNVMCKZLZVMVNIZMBNZAVLOVQVRPZBNZVRVQPZBNZLZAVLOZVMVMC
      KZAVLOZWAANZLZABCQVSWDAVLVQVRBRSWEWAAVLOZWCAVLOZLWKWJLWIWAWCAVLTWJWKUAWKW
      GWJWHWCWFAVLWCVNVMIZVQPZBNWFWBWMBVRWLVQABUBUCUDVQWFBAWFBUEWLVQWFWFLWFWLVO
      WFVPWFVNVMVMCUFVNVMVMCUGUHWFUIUJUKULSWJWHWJWAAWAAVLUMWJVTAVLOZBNWAVTABVLU
      NWNVTBWNVQVRWNVOVTVPWNVMVNUOCUPZVTVOWNVMVLUPZVTWOVTAVLUQWOWPVNVLUPABCURUS
      UTVMVNCVAVBVCVDVEVFVGWAAVLVHVIVJVKVK $.
      $( [27-Aug-2011] $) $( [6-May-2008] $)

    $( Two ways of saying a relation is irreflexive.  Definition of
       irreflexivity in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    intirr $p |- ( ( R i^i _I ) = (/) <-> A. x -. x R x ) $=
      ( vy cid cin c0 wceq cv cop wcel cvv cdif wi wal wbr wn wss incom eqeq1i 
      disj2 wrel wb reli ssrel ax-mp 3bitri equcom visset ideq df-br 3bitr2i 
      wa opex biantrur notbii eldif 3bitr4i imbi12i 2albii ax-17 breq2 notbid 
      equsal albii ) BDEZFGZAHZCHZIZDJZVIKBLZJZMZCNANZVHVGGZVGVHBOZPZMZCNZANVGV
      GBOZPZANVFDBEZFGDVKQZVNVEWBFBDRSDBTDUAWCVNUBUCACDVKUDUEUFVRVMACVOVJVQVLVO
      VGVHGVGVHDOVJCAUGVGVHCUHUIVGVHDUJUKVIBJZPZVIKJZWEULVQVLWFWEVGVHUMUNVPWDVG
      VHBUJUOVIKBUPUQURUSVSWAAVQWACAWACUTVOVPVTVHVGVGBVAVBVCVDUK $.
      $( [27-Aug-2011] $) $( [9-Sep-2004] $)
  $}

  ${
    soi.1 $e |- A e. _V $.
    soi.2 $e |- R Or S $.
    soi.3 $e |- R C_ ( S X. S ) $.
    $( A strict order relation is irreflexive. $)
    soirri $p |- -. A R A $=
      ( wcel wa wbr wn wor sonr mpan adantl brel con3i pm2.61i ) ACGZRHZAABIZJZ
      RUARCBKRUAECABLMNTSAACCBDFOPQ $.
      $( [10-Feb-1996] $)

    ${
      sotri.4 $e |- B e. _V $.
      sotri.5 $e |- C e. _V $.
      $( A strict order relation is a transitive relation. $)
      sotri $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        ( wcel w3a wbr wa wi id 3exp a1dd imp43 brel syl2an wor sotr mpan 
        mpcom ) AEKZBEKZCEKZLZABDMZBCDMZNZACDMZUFUGNUGUHNUIUJUKUFUGUGUHUIUFUGUH
        UIOUGUFUGUHUIUIPQRSABEEDIHTBCEEDJHTUAEDUBUIULUMOGEABCDUCUDUE $.
        $( [10-Feb-1996] $)
    $}

    ${
      son2lpi.4 $e |- B e. _V $.
      $( A strict order relation has no 2-cycle loops. $)
      son2lpi $p |- -. ( A R B /\ B R A ) $=
        ( wbr wa soirri sotri mto ) ABCIBACIJAACIACDEFGKABACDEFGHELM $.
        $( [10-Feb-1996] $)
    $}
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( The converse of a class abstraction of ordered pairs.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvopab $p |- `' { <. x , y >. | ph } = { <. y , x >. | ph } $=
      ( vz vw copab ccnv relcnv relopab cv cop wcel wsbc opelopabsb sbcom2 
      bitri visset opelcnv 3bitr4i eqrelriv ) DEABCFZGZACBFZUAHACBIEJZDJZKUALZA
      CUEMBUDMZUEUDKZUBLUHUCLUFABUDMCUEMUGABCEDNABECDOPUEUDUADQEQRACBDENST $.
      $( [27-Aug-2011] $) $( [11-Dec-2003] $)
  $}

  ${
    $d x y $.
    $( The converse of the empty set. $)
    cnv0 $p |- `' (/) = (/) $=
      ( vx vy c0 ccnv relcnv rel0 cv cop wcel visset opelcnv noel 2false 
      bitr4i eqrelriv ) ABCDZCCEFAGZBGZHZPIRQHZCIZSCIZQRCAJBJKUBUASLTLMNO $.
      $( [6-Apr-1998] $)

    $( The converse of the identity relation.  Theorem 3.7(ii) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvi $p |- `' _I = _I $=
      ( vy vx cv cid wbr copab wceq ccnv visset ideq equcom bitri opabbii 
      df-cnv df-id 3eqtr4i ) ACZBCZDEZBAFRQGZBAFDHDSTBASQRGTQRBIJABKLMBADNBAOP 
      $.
      $( [27-Aug-2011] $) $( [26-Apr-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a union is the union of converses.  Theorem 16 of
       [Suppes] p. 62.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cnvun $p |- `' ( A u. B ) = ( `' A u. `' B ) $=
      ( vy vx cv wbr copab cun ccnv wo unopab brun opabbii eqtr4i df-cnv 
      uneq12i 3eqtr4ri ) CEZDEZAFZDCGZRSBFZDCGZHZRSABHZFZDCGZAIZBIZHUEIUDTUBJZD
      CGUGTUBDCKUFUJDCRSABLMNUHUAUIUCDCAODCBOPDCUEOQ $.
      $( [27-Aug-2011] $) $( [25-Mar-1998] $)

    $( Distributive law for converse over intersection.  Theorem 15 of [Suppes]
       p. 62. $)
    cnvin $p |- `' ( A i^i B ) = ( `' A i^i `' B ) $=
      ( vx vy cin ccnv relcnv wrel relin1 ax-mp cv cop wcel wa elin visset 
      opelcnv anbi12i bitr4i 3bitr4i eqrelriv ) CDABEZFZAFZBFZEZUBGUDHUFHAGUDUE
      IJDKZCKZLZUBMZUHUGLZUDMZUKUEMZNZUKUCMUKUFMUJUIAMZUIBMZNUNUIABOULUOUMUPUHU
      GACPZDPZQUHUGBUQURQRSUHUGUBUQURQUKUDUEOTUA $.
      $( [25-Mar-1998] $)
  $}

  $( Distributive law for range over union.  Theorem 8 of [Suppes] p. 60. $)
  rnun $p |- ran ( A u. B ) = ( ran A u. ran B ) $=
    ( cun ccnv cdm crn cnvun dmeqi dmun eqtri df-rn uneq12i 3eqtr4i ) ABCZDZEZA
    DZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [24-Mar-1998] $)

  $( The range of an intersection belongs the intersection of ranges.  Theorem
     9 of [Suppes] p. 60. $)
  rnin $p |- ran ( A i^i B ) C_ ( ran A i^i ran B ) $=
    ( cin ccnv cdm crn cnvin dmeqi dmin eqsstri df-rn ineq12i 3sstr4i ) ABCZDZE
    ZADZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [15-Sep-2004] $)

  ${
    $d x y z A $.
    $( The range of a union.  Part of Exercise 8 of [Enderton] p. 41. $)
    rnuni $p |- ran U. A = U_ x e. A ran x $=
      ( vz vy cuni crn cv ciun cop wcel wex wrex wa eluni exbii excom ancom 
      19.41v visset elrn2 anbi2i 3bitr4i 3bitri df-rex bitr4i eliun eqriv ) CBE
      ZFZABAGZFZHZDGCGZIZUHJZDKZUMUKJZABLZUMUIJUMULJUPUJBJZUQMZAKZURUPUNUJJZUSM
      ZAKZDKVCDKZAKVAUOVDDAUNBNOVCDAPVEUTAVBDKZUSMUSVFMVEUTVFUSQVBUSDRUQVFUSDUM
      UJCSZTUAUBOUCUQABUDUEDUMUHVGTAUMBUKUFUBUG $.
      $( [17-Mar-2004] $)
  $}

  $( Distributive law for image over union.  Theorem 35 of [Suppes] p. 65. $)
  imaundi $p |- ( A " ( B u. C ) ) = ( ( A " B ) u. ( A " C ) ) $=
    ( cun cres crn cima resundi rneqi rnun eqtri df-ima uneq12i 3eqtr4i ) ABCDZ
    EZFZABEZFZACEZFZDZAOGABGZACGZDQRTDZFUBPUEABCHIRTJKAOLUCSUDUAABLACLMN $.
    $( [30-Sep-2002] $)

  $( The image of a union.  (Contributed by Jeff Hoffman, 17-Feb-2008.) $)
  imaundir $p |- ( ( A u. B ) " C ) = ( ( A " C ) u. ( B " C ) ) $=
    ( cun cima cres crn df-ima resundir rneqi rnun 3eqtri uneq12i eqtr4i ) ABDZ
    CEZACFZGZBCFZGZDZACEZBCEZDPOCFZGQSDZGUAOCHUDUEABCIJQSKLUBRUCTACHBCHMN $.
    $( [17-Feb-2008] $)

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( An upper bound for intersection with a domain.  Theorem 40 of [Suppes]
       p. 66, who calls it "somewhat surprising." $)
    dminss $p |- ( dom R i^i A ) C_ ( `' R " ( R " A ) ) $=
      ( vx vy cdm cin ccnv cima cv wbr wcel wa wex 19.8a ancoms visset elima2 
      sylibr simpl brcnv jca eximi eldm anbi1i elin 19.41v 3bitr4i 3imtr4i 
      ssriv ) CBEZAFZBGZBAHZHZCIZDIZBJZUOAKZLZDMZUPUMKZUPUOULJZLZDMUOUKKZUOUNKU
      SVCDUSVAVBUSURUQLZCMZVAURUQVFVECNOCUPBADPZQRUSUQVBUQURSUPUOBVGCPZTRUAUBUO
      UJKZURLUQDMZURLVDUTVIVJURDUOBVHUCUDUOUJAUEUQURDUFUGDUOULUMVHQUHUI $.
      $( [11-Aug-2004] $)

    $( An upper bound for intersection with an image.  Theorem 41 of [Suppes]
       p. 66. $)
    imainss $p |- ( ( R " A ) i^i B ) C_ ( R " ( A i^i ( `' R " B ) ) ) $=
      ( vy vx cima cin ccnv cv wcel wbr wa wex 19.8a visset brcnv sylan2br 
      ancoms anim2i simprl jca anassrs elin elima2 anbi2i bitri anbi1i sylibr 
      eximi 19.41v 3bitr4i 3imtr4i ssriv ) DCAFZBGZCACHZBFZGZFZEIZAJZUTDIZCKZLZ
      VBBJZLZEMZUTURJZVCLZEMVBUOJZVBUSJVFVIEVFVAVEVBUTUPKZLZDMZLZVCLZVIVAVCVEVO
      VAVCVELZLVNVCVPVMVAVEVCVMVEVKVMVCVLDNVBUTCDOZEOZPQRSVAVCVETUAUBVHVNVCVHVA
      UTUQJZLVNUTAUQUCVSVMVADUTUPBVRUDUEUFUGUHUIVBUNJZVELVDEMZVELVJVGVTWAVEEVBC
      AVQUDUGVBUNBUCVDVEEUJUKEVBCURVQUDULUM $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a cross product.  Exercise 11 of [Suppes] p. 67.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvxp $p |- `' ( A X. B ) = ( B X. A ) $=
      ( vy vx cv wcel wa copab ccnv cxp cnvopab ancom opabbii eqtri df-xp 
      cnveqi 3eqtr4i ) CEAFZDEBFZGZCDHZIZSRGZDCHZABJZIBAJUBTDCHUDTCDKTUCDCRSLMN
      UEUACDABOPDCBAOQ $.
      $( [27-Aug-2011] $) $( [14-Aug-1999] $)
  $}

  $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
     of [Monk1] p. 37. $)
  xp0 $p |- ( A X. (/) ) = (/) $=
    ( c0 cxp ccnv xp0r cnveqi cnvxp cnv0 3eqtr3i ) BACZDBDABCBJBAEFBAGHI $.
    $( [12-Apr-2004] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( The cross product of nonempty classes is nonempty.  (Variation of a
       theorem contributed by Raph Levien, 30-Jun-2006.) $)
    xpnz $p |- ( ( A =/= (/) /\ B =/= (/) ) <-> ( A X. B ) =/= (/) ) $=
      ( vx vy vz c0 wne wa cxp cv wcel wex n0 anbi12i eeanv bitr4i cop opex 
      wceq eleq1 visset opelxp syl6bb cla4ev sylibr 19.23aivv sylbi xpeq1 xp0r 
      syl6eq necon3i xpeq2 xp0 jca impbii ) AFGZBFGZHZABIZFGZURCJZAKZDJZBKZHZDL
      CLZUTURVBCLZVDDLZHVFUPVGUQVHCAMDBMNVBVDCDOPVEUTCDVEEJZUSKZELUTVJVEEVAVCQZ
      VAVCRVIVKSVJVKUSKVEVIVKUSTVAVCABDUAUBUCUDEUSMUEUFUGUTUPUQAFUSFAFSUSFBIFAF
      BUHBUIUJUKBFUSFBFSUSAFIFBFAULAUMUJUKUNUO $.
      $( [19-Apr-2007] $) $( [30-Jun-2006] $)
  $}

  $( At least one member of an empty cross product is empty. $)
  xpeq0 $p |- ( ( A X. B ) = (/) <-> ( A = (/) \/ B = (/) ) ) $=
    ( cxp c0 wceq wne wa wn wo xpnz necon2bbii ianor nne orbi12i 3bitri ) ABCZD
    EADFZBDFZGZHQHZRHZIADEZBDEZISPDABJKQRLTUBUAUCADMBDMNO $.
    $( [27-Aug-2006] $)

  $( Cross products with disjoint sets are disjoint. $)
  xpdisj1 $p |- ( ( A i^i B ) = (/) -> ( ( A X. C ) i^i ( B X. D ) ) = (/) ) $=
    ( cin c0 wceq cxp xpeq1 xp0r syl6eq inxp syl5eq ) ABEZFGZNCDEZHZFACHBDHEOQF
    PHFNFPIPJKACBDLM $.
    $( [13-Sep-2004] $)

  $( Cross products with disjoint sets are disjoint. $)
  xpdisj2 $p |- ( ( A i^i B ) = (/) -> ( ( C X. A ) i^i ( D X. B ) ) = (/) ) $=
    ( cin c0 wceq cxp xpeq2 xp0 syl6eq inxp syl5eq ) ABEZFGZCDEZNHZFCAHDBHEOQPF
    HFNFPIPJKCADBLM $.
    $( [13-Sep-2004] $)

  $( Cross products with two different singletons are disjoint. $)
  xpsndisj $p |- ( B =/= D -> ( ( A X. { B } ) i^i ( C X. { D } ) ) = (/) ) $=
    ( wne csn cin c0 wceq cxp disjsn2 xpdisj2 syl ) BDEBFZDFZGHIANJCOJGHIBDKNOA
    CLM $.
    $( [3-Jun-2007] $) $( [28-Jul-2004] $)

  $( A double restriction to disjoint classes is the empty set.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  resdisj $p |- ( ( A i^i B ) = (/) -> ( ( C |` A ) |` B ) = (/) ) $=
    ( cin c0 wceq cres reseq2 res0 syl6eq resres syl5eq ) ABDZEFZCMGZECAGBGNOCE
    GEMECHCIJCABKL $.
    $( [27-Aug-2011] $) $( [7-Oct-2004] $)

  $( The range of a cross product.  Part of Theorem 3.13(x) of [Monk1]
     p. 37. $)
  rnxp $p |- ( A =/= (/) -> ran ( A X. B ) = B ) $=
    ( c0 wne cxp cdm crn dmxp ccnv df-rn cnvxp dmeqi eqtri syl5eq ) ACDBAEZFZBA
    BEZGZBAHRQIZFPQJSOABKLMN $.
    $( [9-Apr-2007] $) $( [12-Apr-2004] $)

  $( The domain of a cross product is a subclass of the first factor. $)
  dmxpss $p |- dom ( A X. B ) C_ A $=
    ( cxp cdm wss c0 wceq 0ss xpeq2 xp0 syl6eq dmeqd dm0 sseq1d mpbiri wne 
    dmxp eqimss syl pm2.61ine ) ABCZDZAEZBFBFGZUCFAEAHUDUBFAUDUBFDFUDUAFUDUAAFC
    FBFAIAJKLMKNOBFPUBAGUCABQUBARST $.
    $( [19-Mar-2007] $)

  $( The range of a cross product is a subclass of the second factor.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
  rnxpss $p |- ran ( A X. B ) C_ B $=
    ( cxp crn ccnv cdm df-rn cnvxp dmeqi dmxpss eqsstri ) ABCZDLEZFZBLGNBACZFBM
    OABHIBAJKK $.
    $( [27-Aug-2011] $) $( [16-Jan-2006] $)

  $( A cross-product subclass relationship is equivalent to the relationship
     for it components. $)
  ssxpb $p |- ( ( A X. B ) =/= (/) -> ( ( A X. B ) C_ ( C X. D ) <->
              ( A C_ C /\ B C_ D ) ) ) $=
    ( cxp c0 wne wss wa cdm wceq xpnz dmxp adantl sylbir adantr dmss eqsstr3d 
    dmxpss a1i sstrd crn rnxp rnss rnxpss jca ex xpss12 impbid1 ) ABEZFGZUJCDEZ
    HZACHZBDHZIZUKUMUPUKUMIZUNUOUQAULJZCUQAUJJZURUKUSAKZUMUKAFGZBFGZIZUTABLZVBU
    TVAABMNOPUMUSURHUKUJULQNRURCHUQCDSTUAUQBULUBZDUQBUJUBZVEUKVFBKZUMUKVCVGVDVA
    VGVBABUCPOPUMVFVEHUKUJULUDNRVEDHUQCDUETUAUFUGACBDUHUI $.
    $( [17-Dec-2008] $)

  $( The cross product of non-empty classes is one-to-one. $)
  xp11 $p |- ( ( A =/= (/) /\ B =/= (/) )
      -> ( ( A X. B ) = ( C X. D ) <-> ( A = C /\ B = D ) ) ) $=
    ( c0 wne wa cxp wceq wi xpnz neeq1 anbi2d anidm syl5bbr wss ssxpb eqimss 
    syl5cbi eqimss2 anim12d an4 eqss anbi12i bitr4i syl6ib sylbid com12 sylbi 
    xpeq1 xpeq2 sylan9eq impbid1 ) AEFBEFGZABHZCDHZIZACIZBDIZGZUNUOEFZUQUTJABKU
    QVAUTUQVAVAUPEFZGZUTUQVAVAGVCVAUQVAVBVAUOUPELMVANOUQVCACPZBDPZGZCAPZDBPZGZG
    ZUTUQVAVFVBVIVAUOUPPVFUQABCDQUOUPRSVBUPUOPVIUQCDABQUPUOTSUAVJVDVGGZVEVHGZGU
    TVDVEVGVHUBURVKUSVLACUCBDUCUDUEUFUGUHUIURUSUOCBHUPACBUJBDCUKULUM $.
    $( [31-May-2008] $)

  $( Cancellation law for cross-product. $)
  xpcan $p |- ( C =/= (/) -> ( ( C X. A ) = ( C X. B ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantrur syl6bbr wn wi xpeq2 xp0 syl6eq 
    eqeq1d eqcom syl6bb adantl df-ne wo orel1 xpeq0 syl5ib sylbi adantr sylbid 
    simpr jctild eqtr3 syl6 nne sylan2b impbid1 pm2.61dan ) CDEZADEZCAFZCBFZGZA
    BGZHUSUTIVCCCGZVDIVDCACBJVEVDCKLMUSUTNZIVCVDUSADGZVCVDOVFUSVGIZVCVGBDGZIVDV
    HVCVIVGVHVCVBDGZVIVGVCVJHUSVGVCDVBGVJVGVADVBVGVACDFDADCPCQRSDVBTUAUBUSVJVIO
    ZVGUSCDGZNZVKCDUCVMVLVIUDVIVJVLVIUECBUFUGUHUIUJUSVGUKULABDUMUNADUOUPABCPUQU
    R $.
    $( [30-Aug-2011] $)

  $( The second argument of a cross product is one-to-one. $)
  xp11bOLD $p |- ( A =/= (/) -> ( ( A X. A ) = ( A X. B ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantrur syl6bbr anidms ) ACDZAAEABEFZABF
    ZGNNHOAAFZPHPAAABIQPAJKLM $.
    $( [31-May-2008] $)

  $( Cancellation law for cross-product. $)
  xpcan2 $p |- ( C =/= (/) -> ( ( A X. C ) = ( B X. C ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantru syl6bbr wn xpeq1 xp0r syl6eq 
    eqeq1d eqcom syl6bb adantr wi df-ne wo orel2 xpeq0 syl5ib sylbi adantl 
    sylbid simpl jctild eqtr3 syl6 impbid1 nne sylanb pm2.61ian ) ADEZCDEZACFZB
    CFZGZABGZHZUSUTIVCVDCCGZIVDACBCJVFVDCKLMADGZUTVEUSNVGUTIZVCVDVHVCVGBDGZIVDV
    HVCVIVGVHVCVBDGZVIVGVCVJHUTVGVCDVBGVJVGVADVBVGVADCFDADCOCPQRDVBSTUAUTVJVIUB
    ZVGUTCDGZNZVKCDUCVMVIVLUDVIVJVLVIUEBCUFUGUHUIUJVGUTUKULABDUMUNABCOUOADUPUQU
    R $.
    $( [30-Aug-2011] $)

  $( The first argument of a cross product is one-to-one. $)
  xp11aOLD $p |- ( A =/= (/) -> ( ( A X. A ) = ( B X. A ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantru syl6bbr anidms ) ACDZAAEBAEFZABFZ
    GNNHOPAAFZHPAABAIQPAJKLM $.
    $( [31-May-2008] $)

  $( If a cross product is a set, one of its components must be a set. $)
  xpexr $p |- ( ( A X. B ) e. C -> ( A e. _V \/ B e. _V ) ) $=
    ( cxp wcel cvv wn wi c0 wceq 0ex eleq1 mpbiri pm2.24d a1d wne crn rnxp 
    eleq1d rnexg syl5bi a1dd pm2.61ine orrd ) ABDZCEZAFEZBFEZUFUGGZUHHZHAIAIJZU
    JUFUKUGUHUKUGIFEKAIFLMNOAIPZUFUHUIULUEQZFEUHUFULUMBFABRSUECTUAUBUCUD $.
    $( [27-Aug-2006] $)

  $( If a nonempty cross product is a set, so are both of its components. $)
  xpexr2 $p |- ( ( ( A X. B ) e. C /\ ( A X. B ) =/= (/) ) ->
               ( A e. _V /\ B e. _V ) ) $=
    ( cxp wcel c0 wne wa cvv cdm wceq dmxp adantl dmexg adantr eqeltrrd crn 
    rnxp rnexg anim12i anandis ancom2s xpnz sylan2br ) ABDZCEZAFGZBFGZHAIEZBIEZ
    HZUEFGUFUHUGUKUFUHUGUKUFUHHZUIUFUGHZUJULUEJZAIUHUNAKUFABLMUFUNIEUHUECNOPUMU
    EQZBIUGUOBKUFABRMUFUOIEUGUECSOPTUAUBABUCUD $.
    $( [5-May-2007] $) $( [27-Aug-2006] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subset of the range of a restriction. $)
    ssrnres $p |- ( B C_ ran ( C |` A ) <-> ran ( C i^i ( A X. B ) ) = B ) $=
      ( vy vx cxp cin crn wceq wss wa cres eqss inss2 rnss ax-mp rnxpss sstri 
      biantrur cvv ssid ssv xpss12 mp2an sslin df-res sseqtr4i sstr mpan2 cv 
      wcel cop wex ssel visset elrn2 syl6ib ancrd elin opelxp anbi2i opelres 
      anbi1i anass bitr2i 3bitri exbii 19.41v syl6ibr ssrdv impbii 3bitr2ri ) 
      CABFZGZHZBIVOBJZBVOJZKVQBCALZHZJZVOBMVPVQVOVMHZBVNVMJVOWAJCVMNVNVMOPABQRS
      VQVTVQVOVSJZVTVNVRJWBVNCATFZGZVRVMWCJZVNWDJAAJBTJWEAUABUBAABTUCUDVMWCCUEP
      CAUFUGVNVROPBVOVSUHUIVTDBVOVTDUJZBUKZEUJZWFULZVRUKZEUMZWGKZWFVOUKZVTWGWKV
      TWGWFVSUKWKBVSWFUNEWFVRDUOZUPUQURWMWIVNUKZEUMWJWGKZEUMWLEWFVNWNUPWOWPEWOW
      ICUKZWIVMUKZKWQWHAUKZWGKZKZWPWICVMUSWRWTWQWHWFABWNUTVAWPWQWSKZWGKXAWJXBWG
      WHWFCAWNVBVCWQWSWGVDVEVFVGWJWGEVHVFVIVJVKVL $.
      $( [16-Jan-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( Range of the intersection with a cross product.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    rninxp $p |- ( ran ( C i^i ( A X. B ) ) = B <->
                 A. y e. B E. x e. A x C y ) $=
      ( cres crn wss cv wcel wral cxp cin wceq wbr wrex dfss3 ssrnres cima 
      df-ima eleq2i visset elima bitr3i ralbii 3bitr3i ) DECFGZHBIZUGJZBDKECDLM
      GDNAIUHEOACPZBDKBDUGQCDERUIUJBDUIUHECSZJUJUKUGUHECTUAAUHECBUBUCUDUEUF $.
      $( [27-Aug-2011] $) $( [17-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y C $.
    $( Domain of the intersection with a cross product. $)
    dminxp $p |- ( dom ( C i^i ( A X. B ) ) = A <->
                 A. x e. A E. y e. B x C y ) $=
      ( cxp cin cdm wceq ccnv crn cv wbr wrex wral dfdm4 cnvin cnvxp ineq2i 
      eqtri rneqi eqeq1i rninxp visset brcnv rexbii ralbii 3bitri ) ECDFZGZHZCI
      EJZDCFZGZKZCIBLZALZULMZBDNZACOUQUPEMZBDNZACOUKUOCUKUJJZKUOUJPVBUNVBULUIJZ
      GUNEUIQVCUMULCDRSTUATUBBADCULUCUSVAACURUTBDUPUQEBUDAUDUEUFUGUH $.
      $( [17-Jan-2006] $)
  $}

  ${
    $d x y R $.
    $( Alternate definition of relation.  Exercise 2 of [TakeutiZaring]
       p. 25. $)
    dfrel2 $p |- ( Rel R <-> `' `' R = R ) $=
      ( vx vy wrel ccnv wceq relcnv wa cv cop wcel wb wal visset opelcnv bitri 
      gen2 eqrel mpbiri mpan releq mpbii impbii ) ADZAEZEZAFZUFDZUDUGUEGZUHUDHU
      GBIZCIZJZUFKZULAKZLZCMBMUOBCUMUKUJJUEKUNUJUKUEBNZCNZOUKUJAUQUPOPQBCUFARST
      UGUHUDUIUFAUAUBUC $.
      $( [15-Aug-2004] $) $( [29-Dec-1996] $)
  $}

  $( The double converse of a class strips out all elements that are not
     ordered pairs. $)
  cnvcnv $p |- `' `' A = ( A i^i ( _V X. _V ) ) $=
    ( cvv cxp cin ccnv cnvin cnveqi wrel wceq wss inss2 df-rel mpbir dfrel2 
    mpbi relcnv relxp sseqtr4i dfss eqtr4i 3eqtr3ri ) ABBCZDZEZEZAEZUBEZDZEZUCU
    FEZUDUHAUBFGUCHZUEUCIUKUCUBJAUBKUCLMUCNOUIUJUGEZDZUJUFUGFUJULJUJUMIUJUBULUJ
    HUJUBJUFPUJLOUBHULUBIBBQUBNORUJULSOTUA $.
    $( [8-Dec-2003] $)

  $( The double converse of a class equals its restriction to the universe. $)
  cnvcnv2 $p |- `' `' A = ( A |` _V ) $=
    ( ccnv cvv cxp cin cres cnvcnv df-res eqtr4i ) ABBACCDEACFAGACHI $.
    $( [8-Oct-2007] $)

  $( The double converse of a class is a subclass.  Exercise 2 of
     [TakeutiZaring] p. 25. $)
  cnvcnvss $p |- `' `' A C_ A $=
    ( ccnv cvv cxp cin cnvcnv inss1 eqsstri ) ABBACCDZEAAFAIGH $.
    $( [23-Jul-2004] $)
  ${
    $d x y A $.
    $( The domain of a singleton is nonzero iff the singleton argument is an
       ordered pair.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmsnn0 $p |- ( A e. ( _V X. _V ) <-> dom { A } =/= (/) ) $=
      ( vx vy cv cop wceq wex csn cdm wcel cvv cxp c0 wne wbr visset eldm 
      df-br opex elsnc eqcom 3bitri exbii bitr2i elvv n0 3bitr4i ) ABDZCDZEZFZC
      GZBGUHAHZIZJZBGAKKLJUNMNULUOBUOUHUIUMOZCGULCUHUMBPQUPUKCUPUJUMJUJAFUKUHUI
      UMRUJAUHUISTUJAUAUBUCUDUCBCAUEBUNUFUG $.
      $( [27-Aug-2011] $) $( [14-Dec-2008] $)
  $}

  $( The range of a singleton is nonzero iff the singleton argument is an
     ordered pair. $)
  rnsnn0 $p |- ( A e. ( _V X. _V ) <-> ran { A } =/= (/) ) $=
    ( cvv cxp wcel csn cdm c0 wne crn dmsnn0 dm0rn0 necon3bii bitri ) ABBCDAEZF
    ZGHNIZGHAJOGPGNKLM $.
    $( [14-Dec-2008] $)

  $( The domain of the singleton of the empty set is empty. $)
  dmsn0 $p |- dom { (/) } = (/) $=
    ( c0 csn cdm wceq cvv cxp wcel wn 0nelxp dmsnn0 necon2bbii mpbir ) ABCZADAE
    EFGZHEEINMAAJKL $.
    $( [17-Dec-2008] $) $( [30-Jan-2004] $)

  $( The domain of a singleton is empty if the singleton's argument contains
     the empty set. $)
  dmsn0el $p |- ( (/) e. A -> dom { A } = (/) ) $=
    ( c0 wcel csn cdm wne cvv cxp wn dmsnn0 0nelelxp sylbir necon4ai ) BACZADEZ
    BOBFAGGHCNIAJGGAKLM $.
    $( [15-Dec-2008] $)

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a singleton of an ordered pair is the singleton of the
       first member.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmsnop $p |- dom { <. A , B >. } = { A } $=
      ( vx vy cop csn cdm cv wcel wex wceq opex elsnc exbii visset opth1 
      19.23aiv cvv isset opeq2 eximi sylbi wn a9e ax-mp opprc2 eqeq2d exbidv 
      mpbiri pm2.61i opeq1 mpbii impbii bitri eldm2 elsn 3bitr4i eqriv ) CABEZF
      ZGZAFZCHZDHZEZUTIZDJZVCAKZVCVAIVCVBIVGVEUSKZDJZVHVFVIDVEUSVCVDLMNVJVHVIVH
      DVCVDABCOZPQVHVEVCBEZKZDJZVJBRIZVNVOVDBKZDJVNDBSVPVMDVDBVCTUAUBVOUCZVNVEV
      CVCEZKZDJZVDVCKZDJVTDCUDWAVSDVDVCVCTUAUEVQVMVSDVQVLVRVEVCBUFUGUHUIUJVHVMV
      IDVHVLUSVEVCABUKUGUHULUMUNDVCUTVKUOCAUPUQUR $.
      $( [27-Aug-2011] $) $( [30-Jan-2004] $)
  $}

  $( The domain of an unordered pair of ordered pairs. $)
  dmprop $p |- dom { <. A , C >. , <. B , D >. } = { A , B } $=
    ( cop cpr cdm csn cun df-pr dmeqi dmsnop uneq12i dmun 3eqtr4i eqtri ) ACEZB
    DEZFZGQHZRHZIZGZABFZSUBQRJKTGZUAGZIAHZBHZIUCUDUEUGUFUHACLBDLMTUANABJOP $.
    $( [13-Sep-2011] $)

  $( The domain of an unordered triple of ordered pairs. $)
  dmtpop $p |- dom { <. A , D >. , <. B , E >. , <. C , F >. }
                      = { A , B , C } $=
    ( cop ctp cdm cpr csn cun df-tp dmeqi dmun dmprop dmsnop uneq12i 3eqtri 
    eqtr4i ) ADGZBEGZCFGZHZIZABJZCKZLZABCHUEUAUBJZUCKZLZIUIIZUJIZLUHUDUKUAUBUCM
    NUIUJOULUFUMUGABDEPCFQRSABCMT $.
    $( [14-Sep-2011] $)

  $( The domain of the singleton of the singleton of a singleton. $)
  dmsnsnsn $p |- dom { { { A } } } = { A } $=
    ( cop csn cdm cpr dfsn2 preq2i df-op 3eqtr4ri sneqi dmeqi dmsnop eqtr3i ) 
    AABZCZDACZCZCZDPORNQPPEPAAEZEQNPSPAFGPFAAHIJKAALM $.
    $( [15-Sep-2004] $)

  ${
    op1sta.1 $e |- A e. _V $.
    $( Extract the first member of an ordered pair.  (See ~ op2nda to extract
       the second member, ~ op1stb for an alternate version, and ~ op1st for
       the preferred version..)  (Contributed by Raph Levien, 4-Dec-2003.) $)
    op1sta $p |- U. dom { <. A , B >. } = A $=
      ( cop csn cdm cuni dmsnop unieqi unisn eqtri ) ABDEFZGAEZGALMABHIACJK $.
      $( [4-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    cnvsn.1 $e |- A e. _V $.
    cnvsn.2 $e |- B e. _V $.
    $( Converse of a singleton of an ordered pair. $)
    cnvsn $p |- `' { <. A , B >. } = { <. B , A >. } $=
      ( vy vx cop csn ccnv relcnv relsn cv wceq wa wcel ancom opex elsnc 
      visset opth bitri opelcnv 3bitri 3bitr4ri eqrelriv ) EFABGZHZIZBAGZHZUGJB
      ADKELZBMZFLZAMZNZUNULNZUKUMGZUJOZUQUHOZULUNPURUQUIMUOUQUIUKUMQRUKUMBAESZF
      SZCTUAUSUMUKGZUGOVBUFMUPUKUMUGUTVAUBVBUFUMUKQRUMUKABVAUTDTUCUDUE $.
      $( [11-May-1998] $)

    $( Swap the members of an ordered pair. $)
    opswap $p |- U. `' { <. A , B >. } = <. B , A >. $=
      ( cop csn ccnv cuni cnvsn unieqi opex unisn eqtri ) ABEFGZHBAEZFZHONPABCD
      IJOBAKLM $.
      $( [14-Dec-2008] $)

    $( The range of a singleton of an ordered pair is the singleton of the
       second member. $)
    rnsnop $p |- ran { <. A , B >. } = { B } $=
      ( cop csn crn ccnv cdm df-rn cnvsn dmeqi dmsnop 3eqtri ) ABEFZGOHZIBAEFZI
      BFOJPQABCDKLBAMN $.
      $( [24-Jul-2004] $)

    $( Extract the second member of an ordered pair.  Theorem 5.12(ii) of
       [Monk1] p. 52.  (See ~ op1stb to extract the first member, ~ op2nda for
       an alternate version, and ~ op2nd for the preferred version.) $)
    op2ndb $p |- |^| |^| |^| `' { <. A , B >. } = B $=
      ( cop csn ccnv cint cnvsn inteqi opex intsn eqtri op1stb ) ABEFGZHZHZHBAE
      ZHZHBQSPRPRFZHROTABCDIJRBAKLMJJBADNM $.
      $( [25-Nov-2003] $)

    $( Extract the second member of an ordered pair.  (See ~ op1sta to extract
       the first member, ~ op2ndb for an alternate version, and ~ op2nd for the
       preferred version.)  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    op2nda $p |- U. ran { <. A , B >. } = B $=
      ( cop csn crn cuni rnsnop unieqi unisn eqtri ) ABEFGZHBFZHBMNABCDIJBDKL 
      $.
      $( [27-Aug-2011] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a cross product.  This version requires no quantifiers or
       dummy variables.  See also ~ elxp5 , ~ elxp6 , and ~ elxp7 . $)
    elxp4 $p |- ( A e. ( B X. C ) <-> ( A = <. U. dom { A } , U. ran { A } >.
                 /\ ( U. dom { A } e. B /\ U. ran { A } e. C ) ) ) $=
      ( vx vy cxp wcel cv cop wceq wa wex csn cdm cuni crn elxp sneq rneqd 
      unieqd visset op2nda syl6req pm4.71ri anbi1i anass bitri exbii snex rnex 
      uniex opeq2 eqeq2d eleq1 anbi2d anbi12d ceqsexv dmeqd op1sta 3bitri dmex 
      opeq1 anbi1d ) ABCFGADHZEHZIZJZVDBGZVECGZKZKZELZDLVDAMZNZOZJZAVDVMPZOZIZJ
      ZVHVRCGZKZKZKZDLAVOVRIZJZVOBGZWAKZKZDEABCQVLWDDVLWCVPVTKZWBKWDVLVEVRJZVKK
      ZELWCVKWLEVKWKVGKZVJKWLVGWMVJVGWKVGVRVFMZPZOVEVGVQWOVGVMWNAVFRSTVDVEDUAZE
      UAUBUCUDUEWKVGVJUFUGUHVKWCEVRVQVMAUIZUJUKWKVGVTVJWBWKVFVSAVEVRVDULUMWKVIW
      AVHVEVRCUNUOUPUQUGVTWJWBVTVPVTVOVSMZNZOVDVTVNWSVTVMWRAVSRURTVDVRWPUSUCUDU
      EVPVTWBUFUTUHWCWIDVOVNVMWQVAUKVPVTWFWBWHVPVSWEAVDVOVRVBUMVPVHWGWAVDVOBUNV
      CUPUQUT $.
      $( [17-Feb-2004] $)

    $( Membership in a cross product requiring no quantifiers or dummy
       variables.  Provides a slightly shorter version of ~ elxp4 when the
       double intersection does not create class existence problems (caused by
       ~ int0 ). $)
    elxp5 $p |- ( A e. ( B X. C ) <-> ( A = <. |^| |^| A , U. ran { A } >.
                 /\ ( |^| |^| A e. B /\ U. ran { A } e. C ) ) ) $=
      ( vx vy cxp wcel cv cop wceq wa wex cint csn crn cuni elxp sneq rneqd 
      unieqd visset op2nda syl6req pm4.71ri anbi1i anass bitri exbii snex rnex 
      uniex opeq2 eqeq2d eleq1 anbi2d anbi12d ceqsexv inteq inteqd op1stb 
      3bitri cvv mpbii adantr 19.23aiv elisset ad2antrl opeq1 anbi1d ceqsexgv 
      pm5.21nii ) ABCFGADHZEHZIZJZVLBGZVMCGZKZKZELZDLVLAMZMZJZAVLANZOZPZIZJZVPW
      FCGZKZKZKZDLZAWBWFIZJZWBBGZWIKZKZDEABCQVTWLDVTWKWCWHKZWJKWLVTVMWFJZVSKZEL
      WKVSXAEVSWTVOKZVRKXAVOXBVRVOWTVOWFVNNZOZPVMVOWEXDVOWDXCAVNRSTVLVMDUAZEUAU
      BUCUDUEWTVOVRUFUGUHVSWKEWFWEWDAUIUJUKWTVOWHVRWJWTVNWGAVMWFVLULUMWTVQWIVPV
      MWFCUNUOUPUQUGWHWSWJWHWCWHWBWGMZMVLWHWAXFAWGURUSVLWFXEUTUCUDUEWCWHWJUFVAU
      HWMWBVBGZWRWLXGDWCXGWKWCVLVBGXGXEVLWBVBUNVCVDVEWPXGWOWIWBBVFVGWKWRDWBVBWC
      WHWOWJWQWCWGWNAVLWBWFVHUMWCVPWPWIVLWBBUNVIUPVJVKVA $.
      $( [1-Aug-2004] $)
  $}

  $( Alternate definition of relation. $)
  dfrel3 $p |- ( Rel R <-> ( R |` _V ) = R ) $=
    ( wrel ccnv wceq cvv cres dfrel2 cnvcnv2 eqeq1i bitri ) ABACCZADAEFZADAGKLA
    AHIJ $.
    $( [14-May-2008] $)

  $( The domain of a universal restriction. $)
  dmresv $p |- dom ( A |` _V ) = dom A $=
    ( cvv cres cdm cin dmres incom inv1 3eqtri ) ABCDBADZEJBEJABFBJGJHI $.
    $( [14-May-2008] $)

  $( The range of a universal restriction. $)
  rnresv $p |- ran ( A |` _V ) = ran A $=
    ( ccnv crn cvv cres cnvcnv2 rneqi rncnvcnv eqtr3i ) ABBZCADEZCACJKAFGAHI $.
    $( [14-May-2008] $)

  $( Range defined in terms of image. $)
  dfrn4 $p |- ran A = ( A " _V ) $=
    ( cvv cima cres crn df-ima rnresv eqtr2i ) ABCABDEAEABFAGH $.
    $( [14-May-2008] $)

  $( The restriction of the double converse of a class.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  rescnvcnv $p |- ( `' `' A |` B ) = ( A |` B ) $=
    ( ccnv cres cvv cin wceq cnvcnv2 reseq1 ax-mp resres wss ssv sseqin2 mpbi 
    reseq2i 3eqtri ) ACCZBDZAEDZBDZAEBFZDABDRTGSUAGAHRTBIJAEBKUBBABELUBBGBMBENO
    PQ $.
    $( [27-Aug-2011] $) $( [8-Apr-2007] $)

  $( The double converse of the restriction of a class. $)
  cnvcnvres $p |- `' `' ( A |` B ) = ( `' `' A |` B ) $=
    ( cres ccnv wrel wceq relres dfrel2 mpbi rescnvcnv eqtr4i ) ABCZDDZLADDBCLE
    MLFABGLHIABJK $.
    $( [3-Jun-2007] $)

  $( The image of the double converse of a class. $)
  imacnvcnv $p |- ( `' `' A " B ) = ( A " B ) $=
    ( ccnv cres crn cima rescnvcnv rneqi df-ima 3eqtr4i ) ACCZBDZEABDZEKBFABFLM
    ABGHKBIABIJ $.
    $( [8-Apr-2007] $)

  $( A class restricted to its domain equals its double converse. $)
  resdm2 $p |- ( A |` dom A ) = `' `' A $=
    ( ccnv cdm cres rescnvcnv wrel wceq relcnv resdm ax-mp dmcnvcnv reseq2i 
    3eqtr3ri ) ABZBZOCZDZAPDOAACZDAPEOFQOGNHOIJPRAAKLM $.
    $( [8-Apr-2007] $)

  $( Restriction to the domain of a restriction. $)
  resdmres $p |- ( A |` dom ( A |` B ) ) = ( A |` B ) $=
    ( cres cdm ccnv cvv cxp cin in12 df-res resdm2 eqtr3i ineq2i incom 3eqtri 
    dmres xpeq1i xpindir eqtri 3eqtr4i rescnvcnv ) AABCZDZCZAEEZBCZUBABFGZADZFG
    ZHZHZUEUGHZUDUFUKUGAUIHZHUGUEHULAUGUIIUMUEUGAUHCUMUEAUHJAKLMUGUENOUDAUCFGZH
    UKAUCJUNUJAUNBUHHZFGUJUCUOFABPQBUHFRSMSUEBJTABUAS $.
    $( [8-Apr-2007] $)

  $( The image of the domain of a restriction. $)
  imadmres $p |- ( A " dom ( A |` B ) ) = ( A " B ) $=
    ( cres cdm crn cima resdmres rneqi df-ima 3eqtr4i ) AABCZDZCZEKEALFABFMKABG
    HALIABIJ $.
    $( [8-Apr-2007] $)

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z C $.
    $( A composition is a relation.  Exercise 24 of [TakeutiZaring] p. 25. $)
    relco $p |- Rel ( A o. B ) $=
      ( vx vz vy ccom wrel cv wbr wa wex copab relopab df-co releqi mpbir ) ABF
      ZGCHDHZBIREHAIJDKZCELZGSCEMQTCEDABNOP $.
      $( [26-Jan-1997] $)

    $( Alternate definition of a class composition, using only one bound
       variable. $)
    dfco2 $p |- ( A o. B )
                = U_ x e. _V ( ( `' B " { x } ) X. ( A " { x } ) ) $=
      ( vy vz ccom cvv ccnv cv csn cima cxp ciun relco wrel reliun wcel relxp 
      a1i mprgbir cop wa wex wb visset opelco2g mp2an wrex eliun rexv opelxp 
      elimasn opelcnv bitri anbi12i exbii 3bitrri eqrelriv ) DEBCFZAGCHZAIZJZKZ
      BVBKZLZMZBCNVFOVEOZAGAGVEPVGVAGQVCVDRSTDIZEIZUAZUSQZVHVAUACQZVAVIUABQZUBZ
      AUCZVJVFQZVHGQVIGQVKVOUDDUEZEUEZAVHVIBCGGUFUGVPVJVEQZAGUHVSAUCVOAVJGVEUIV
      SAUJVSVNAVSVHVCQZVIVDQZUBVNVHVIVCVDVRUKVTVLWAVMVTVAVHUAUTQVLUTVAVHAUEZVQU
      LVAVHCWBVQUMUNBVAVIWBVRULUOUNUPUQUNUR $.
      $( [19-Dec-2008] $)

    $( Generalization of ~ dfco2 , where ` C ` can have any value between
       ` dom A i^i ran B ` and ` _V ` .  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    dfco2a $p |- ( ( dom A i^i ran B ) C_ C -> ( A o. B )
         = U_ x e. C ( ( `' B " { x } ) X. ( A " { x } ) ) ) $=
      ( vy vz vw cdm crn cin wss cvv ccnv cv csn cima cxp ciun ccom wcel wrex 
      wex wa ssel cop wceq visset elimasn opeldm sylbi wbr wb eliniseg ax-mp 
      brelrn anim12i ancoms adantl 19.23aivv elxp elin 3imtr4i syl5 pm4.71rd 
      exbidv rexv df-rex 3bitr4g eliun eqrdv dfco2 syl5eq ) BHZCIZJZDKZALCMANZO
      ZPZBVRPZQZRZADWARZBCSVPEWBWCVPENZWATZALUAZWEADUAZWDWBTWDWCTVPWEAUBVQDTZWE
      UCZAUBWFWGVPWEWIAVPWEWHVPVQVOTZWHWEVODVQUDWDFNZGNZUEUFZWKVSTZWLVTTZUCZUCZ
      GUBFUBVQVMTZVQVNTZUCZWEWJWQWTFGWPWTWMWOWNWTWOWRWNWSWOVQWLUEBTWRBVQWLAUGZG
      UGUHVQWLBXAUIUJWNWKVQCUKZWSVQLTWNXBULXACVQWKLFUGZUMUNWKVQCXCXAUOUJUPUQURU
      SFGWDVSVTUTVQVMVNVAVBVCVDVEWEAVFWEADVGVHAWDLWAVIAWDDWAVIVHVJABCVKVL $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Class composition distributes over union.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    coundi $p |- ( A o. ( B u. C ) ) = ( ( A o. B ) u. ( A o. C ) ) $=
      ( vx vz vy cv wbr wa wex copab cun ccom wo unopab brun anbi1i andir 
      bitri exbii 19.43 bitr2i opabbii eqtri df-co uneq12i 3eqtr4ri ) DGZEGZBHZ
      UIFGAHZIZEJZDFKZUHUICHZUKIZEJZDFKZLZUHUIBCLZHZUKIZEJZDFKZABMZACMZLAUTMUSU
      MUQNZDFKVDUMUQDFOVGVCDFVCULUPNZEJVGVBVHEVBUJUONZUKIVHVAVIUKUHUIBCPQUJUOUK
      RSTULUPEUAUBUCUDVEUNVFURDFEABUEDFEACUEUFDFEAUTUEUG $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Class composition distributes over union.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    coundir $p |- ( ( A u. B ) o. C ) = ( ( A o. C ) u. ( B o. C ) ) $=
      ( vx vy vz cv wbr wa wex copab cun ccom wo unopab brun anbi2i andi bitri 
      exbii 19.43 bitr2i opabbii eqtri df-co uneq12i 3eqtr4ri ) DGEGZCHZUHFGZAH
      ZIZEJZDFKZUIUHUJBHZIZEJZDFKZLZUIUHUJABLZHZIZEJZDFKZACMZBCMZLUTCMUSUMUQNZD
      FKVDUMUQDFOVGVCDFVCULUPNZEJVGVBVHEVBUIUKUONZIVHVAVIUIUHUJABPQUIUKUORSTULU
      PEUAUBUCUDVEUNVFURDFEACUEDFEBCUEUFDFEUTCUEUG $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Restricted first member of a class composition.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    cores $p |- ( ran B C_ C -> ( ( A |` C ) o. B ) = ( A o. B ) ) $=
      ( vz vy vx crn wss cv wbr cres wa wex copab ccom wcel wb ssel iba visset 
      brres syl6rbbr syl6 brelrn syl5 pm5.32d exbidv opabbidv df-co 3eqtr4g ) 
      BGZCHZDIZEIZBJZUNFIZACKZJZLZEMZDFNUOUNUPAJZLZEMZDFNUQBOABOULUTVCDFULUSVBE
      ULUOURVAULUNUKPZURVAQZUOULVDUNCPZVEUKCUNRVFVAVAVFLURVFVASUNUPACFTUAUBUCUM
      UNBDTETUDUEUFUGUHDFEUQBUIDFEABUIUJ $.
      $( [27-Aug-2011] $) $( [12-Oct-2004] $)

    $( Associative law for the restriction of a composition. $)
    resco $p |- ( ( A o. B ) |` C ) = ( A o. ( B |` C ) ) $=
      ( vx vy vz ccom cres relres relco cv wbr wcel wa wex visset brco anbi1i 
      19.41v an32 brres bitr4i exbii 3bitr2i 3bitr4i eqbrriv ) DEABGZCHZABCHZGZ
      UGCIAUIJDKZEKZUGLZUKCMZNZUKFKZUILZUPULALZNZFOZUKULUHLUKULUJLUOUKUPBLZURNZ
      FOZUNNVBUNNZFOUTUMVCUNFUKULABDPZEPZQRVBUNFSVDUSFVDVAUNNZURNUSVAURUNTUQVGU
      RUKUPBCFPUARUBUCUDUKULUGCVFUAFUKULAUIVEVFQUEUF $.
      $( [12-Dec-2006] $)

    $( Image of the composition of two classes.  (Contributed by Jason
       Orendorff, 12-Dec-2006.) $)
    imaco $p |- ( ( A o. B ) " C ) = ( A " ( B " C ) ) $=
      ( vx vy vz ccom cima cv wbr wrex wcel wa wex df-rex visset elima brco 
      rexbii bitri rexcom4 r19.41v exbii 3bitri anbi1i bitr4i 3bitr4ri eqriv ) 
      DABGZCHZABCHZHZEIZDIZAJZEUKKUMUKLZUOMZENZUNULLUNUJLZUOEUKOEUNAUKDPZQUSFIZ
      UMBJZFCKZUOMZENZURUSVBUOMZENZFCKZVFFCKZENVEUSVAUNUIJZFCKVHFUNUICUTQVJVGFC
      EVAUNABFPUTRSTVFFECUAVIVDEVBUOFCUBUCUDUQVDEUPVCUOFUMBCEPQUEUCUFUGUH $.
      $( [11-Dec-2006] $)

    $( The range of the composition of two classes. $)
    rnco $p |- ran ( A o. B ) = ran ( A |` ran B ) $=
      ( vy vx vz ccom crn cres cv wbr wex wcel wa visset brco exbii excom 
      ancom 19.41v elrn anbi2i 3bitr4i brres bitr4i 3bitri eqriv ) CABFZGZABGZH
      ZGZDIZCIZUGJZDKZEIZUMUJJZEKZUMUHLUMUKLUOULUPBJZUPUMAJZMZEKZDKVADKZEKURUNV
      BDEULUMABDNCNZOPVADEQVCUQEVCUTUPUILZMZUQUSDKZUTMUTVGMVCVFVGUTRUSUTDSVEVGU
      TDUPBENTUAUBUPUMAUIVDUCUDPUEDUMUGVDTEUMUJVDTUBUF $.
      $( [12-Dec-2006] $)
  $}

  $( The range of the composition of two classes. $)
  rnco2 $p |- ran ( A o. B ) = ( A " ran B ) $=
    ( ccom crn cres cima rnco df-ima eqtr4i ) ABCDABDZEDAJFABGAJHI $.
    $( [27-Mar-2008] $)

  $( The domain of a composition.  Exercise 27 of [Enderton] p. 53. $)
  dmco $p |- dom ( A o. B ) = ( `' B " dom A ) $=
    ( ccom cdm ccnv crn cima dfdm4 cnvco rneqi rnco2 imaeq2i eqtr4i 3eqtri ) AB
    CZDOEZFBEZAEZCZFZQADZGZOHPSABIJTQRFZGUBQRKUAUCQAHLMN $.
    $( [4-Feb-2004] $)

  ${
    $d w x y z A $.  $d w y z B $.  $d w y z C $.
    $( Composition with an indexed union. $)
    coiun $p |- ( A o. U_ x e. C B ) = U_ x e. C ( A o. B ) $=
      ( vy vz vw ciun ccom relco wrel reliun cv wcel a1i mprgbir wbr wa wex 
      wrex cop eliun df-br rexbii 3bitr4i anbi1i r19.41v bitr4i exbii rexcom4 
      visset opelco bitri eqrelriv ) EFBADCHZIZADBCIZHZBUOJURKUQKZADADUQLUSAMDN
      BCJOPEMZGMZUOQZVAFMZBQZRZGSZUTVACQZVDRZGSZADTZUTVCUAZUPNVKURNZVFVHADTZGSV
      JVEVMGVEVGADTZVDRVMVBVNVDUTVAUAZUONVOCNZADTVBVNAVODCUBUTVAUOUCVGVPADUTVAC
      UCUDUEUFVGVDADUGUHUIVHAGDUJUHGUTVCBUOEUKZFUKZULVLVKUQNZADTVJAVKDUQUBVSVIA
      DGUTVCBCVQVRULUDUMUEUN $.
      $( [21-Dec-2008] $)
  $}

  $( A composition is not affected by a double converse of its first
     argument. $)
  cocnvcnv1 $p |- ( `' `' A o. B ) = ( A o. B ) $=
    ( ccnv ccom cvv cres cnvcnv2 coeq1i crn wss wceq ssv cores ax-mp eqtri ) AC
    CZBDAEFZBDZABDZPQBAGHBIZEJRSKTLABEMNO $.
    $( [8-Oct-2007] $)

  $( A composition is not affected by a double converse of its second
     argument. $)
  cocnvcnv2 $p |- ( A o. `' `' B ) = ( A o. B ) $=
    ( ccnv ccom cvv cres cnvcnv2 coeq2i resco wrel wceq relco dfrel3 mpbi 
    3eqtr2i ) ABCCZDABEFZDABDZEFZRPQABGHABEIRJSRKABLRMNO $.
    $( [8-Oct-2007] $)

  $( Absorption of a reverse (preimage) restriction of the second member of a
     class composition. $)
  cores2 $p |- ( dom A C_ C -> ( A o. `' ( `' B |` C ) ) = ( A o. B ) ) $=
    ( cdm wss ccnv cres ccom wceq crn dfdm4 sseq1i cores sylbi cnvco wrel 
    relres dfrel2 mpbi coeq1i eqtri 3eqtr4g cnveq syl relco 3eqtr3g ) ADZCEZABF
    ZCGZFZHZFZFZABHZFZFZULUOUHUMUPIUNUQIUHUJAFZHZUIURHZUMUPUHURJZCEUSUTIUGVACAK
    LUIURCMNUMUKFZURHUSAUKOVBUJURUJPVBUJIUICQUJRSTUAABOUBUMUPUCUDULPUNULIAUKUEU
    LRSUOPUQUOIABUEUORSUF $.
    $( [11-Dec-2006] $)

  ${
    $d x y z A $.
    $( Composition with the empty set.  Theorem 20 of [Suppes] p. 63. $)
    co02 $p |- ( A o. (/) ) = (/) $=
      ( vx vy vz c0 ccom relco rel0 cv cop wcel wbr wa wex noel df-br mtbir 
      intnanr nex visset opelco 2false eqrelriv ) BCAEFZEAEGHBIZCIZJZUDKZUGEKUH
      UEDIZELZUIUFALZMZDNULDUJUKUJUEUIJZEKUMOUEUIEPQRSDUEUFAEBTCTUAQUGOUBUC $.
      $( [24-Apr-2004] $)

    $( Composition with the empty set. $)
    co01 $p |- ( (/) o. A ) = (/) $=
      ( c0 ccnv ccom cnv0 coeq2i co02 eqtr2i cnvco 3eqtr4i cnveqi wrel wceq 
      rel0 dfrel2 mpbi relco 3eqtr3ri ) BCZCZBADZCZCZBUASUBBACZSDZSUBUEUDBDBSBU
      DEFUDGHEBAIJKBLTBMNBOPUALUCUAMBAQUAOPR $.
      $( [24-Apr-2004] $)

    $( Composition with the identity relation.  Part of Theorem 3.7(i) of
       [Monk1] p. 36. $)
    coi1 $p |- ( Rel A -> ( A o. _I ) = A ) $=
      ( vx vy vz cid ccom wrel wceq relco wa cv cop wcel wb wal wbr wex visset 
      opelco ideq eqcom bitri anbi1i exbii breq1 ceqsexv 3bitri df-br gen2 
      eqrel mpbiri mpan ) AEFZGZAGZUMAHZAEIUNUOJUPBKZCKZLZUMMZUSAMZNZCOBOVBBCUT
      UQURAPZVAUTUQDKZEPZVDURAPZJZDQVDUQHZVFJZDQVCDUQURAEBRZCRSVGVIDVEVHVFVEUQV
      DHVHUQVDDRTUQVDUAUBUCUDVFVCDUQVJVDUQURAUEUFUGUQURAUHUBUIBCUMAUJUKUL $.
      $( [22-Apr-2004] $)

    $( Composition with the identity relation.  Part of Theorem 3.7(i) of
       [Monk1] p. 36. $)
    coi2 $p |- ( Rel A -> ( _I o. A ) = A ) $=
      ( wrel cid ccom ccnv wceq dfrel2 cnvi coeq2 coeq1 sylan9eq mpan2 sylbi 
      cnvco relcnv coi1 ax-mp cnveqi eqtr3i syl5reqr biimpi eqtrd ) ABZCADZAEZE
      ZAUCCEZUFDZUDUFUCUFAFZUHUDFZAGZUIUGCFZUJHUIULUHUGADUDUFAUGIUGCAJKLMUECDZE
      UHUFUECNUMUEUEBUMUEFAOUEPQRSTUCUIUKUAUB $.
      $( [22-Apr-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.
    $( Associative law for class composition.  Theorem 27 of [Suppes] p. 64.
       Also Exercise 21 of [Enderton] p. 53.  Interestingly, this law holds for
       any classes whatsoever, not just functions or even relations. $)
    coass $p |- ( ( A o. B ) o. C ) = ( A o. ( B o. C ) ) $=
      ( vx vy vz vw ccom relco cv wbr wa wex cop wcel excom anass 2exbii 
      bitr4i df-br visset opelco bitri anbi2i exbii 19.42v 3bitr4i anbi1i 
      19.41v eqrelriv ) DEABHZCHZABCHZHZUKCIAUMIDJZFJZCKZUPGJZBKZUREJZAKZLZLZGM
      ZFMZUQUSLZVALZFMZGMZUOUTNZULOZVJUNOZVEVCFMGMVIVCFGPVGVCGFUQUSVAQRSUQUPUTU
      KKZLZFMUQVBGMZLZFMVKVEVNVPFVMVOUQVMUPUTNUKOVOUPUTUKTGUPUTABFUAEUAZUBUCUDU
      EFUOUTUKCDUAZVQUBVDVPFUQVBGUFUEUGUOURUMKZVALZGMVFFMZVALZGMVLVIVTWBGVSWAVA
      VSUOURNUMOWAUOURUMTFUOURBCVRGUAUBUCUHUEGUOUTAUMVRVQUBVHWBGVFVAFUIUEUGUGUJ
      $.
      $( [27-Jan-1997] $)
  $}

  ${
    $d x y A $.
    $( A relation is included in the cross product of its domain and range.
       Exercise 4.12(t) of [Mendelson] p. 235. $)
    relssdmrn $p |- ( Rel A -> A C_ ( dom A X. ran A ) ) $=
      ( vx vy wrel cdm crn cxp id cv cop wcel wi wex wa visset opelxp eldm2 
      elrn2 anbi12i bitri 19.8a sylanbrc a1i relssdv ) ADZBCAAEZAFZGZUEHBIZCIZJ
      ZAKZUKUHKZLUEUMULCMZULBMZULUMUIUFKZUJUGKZNUNUONUIUJUFUGCOZPUPUNUQUOCUIABO
      QBUJAURRSTULCUAULBUAUBUCUD $.
      $( [3-Aug-1994] $)
  $}

  $( Two ways to describe the structure of a two-place operation. $)
  relrelss $p |- ( ( Rel A /\ Rel dom A ) <-> A C_ ( ( _V X. _V ) X. _V ) ) $=
    ( wrel cdm wa cvv cxp wss df-rel anbi2i crn relssdmrn ssv xpss12 mpan2 
    sylan9ss xpss sstr sylibr dmss c0 wne wceq vn0 dmxp ax-mp syl6ss jca 
    impbii bitri ) ABZACZBZDUJUKEEFZGZDZAUMEFZGZULUNUJUKHIUOUQUJUNAUKAJZFZUPAKU
    NUREGUSUPGURLUKUMUREMNOUQUJUNUQAUMGZUJUQUPUMGUTUMEPAUPUMQNAHRUQUKUPCZUMAUPS
    ETUAVAUMUBUCUMEUDUEUFUGUHUI $.
    $( [17-Dec-2008] $)

  ${
    $d x y A $.  $d x y R $.
    $( The membership relation for a relation is inherited by class union. $)
    unielrel $p |- ( ( Rel R /\ A e. R ) -> U. A e. U. R ) $=
      ( vx vy wrel wcel wa cv cop wceq wex cuni elrel simpr wi uniopel a1i 
      eleq1 unieq eleq1d 3imtr4d 19.23aivv sylc ) BEZABFZGACHZDHZIZJZDKCKUEALZB
      LZFZCDABMUDUENUIUEULOCDUIUHBFZUHLZUKFZUEULUMUOOUIUFUGBPQAUHBRUIUJUNUKAUHS
      TUAUBUC $.
      $( [17-Sep-2006] $)
  $}

  $( The double union of a relation is its field. $)
  relfld $p |- ( Rel R -> U. U. R = ( dom R u. ran R ) ) $=
    ( wrel cuni cdm crn cun cxp wss relssdmrn uniss 3syl unixpss a1i sstrd 
    dmrnssfld eqssd ) ABZACZCZADZAEZFZQSTUAGZCZCZUBQAUCHRUDHSUEHAIAUCJRUDJKUEUB
    HQTUALMNUBSHQAOMP $.
    $( [17-Sep-2006] $)

  $( The double union of the converse of a class is its field. $)
  unidmrn $p |- U. U. `' A = ( dom A u. ran A ) $=
    ( ccnv crn cdm cun cuni uncom dfdm4 df-rn uneq12i wrel wceq relcnv relfld 
    ax-mp 3eqtr4ri ) ABZCZQDZESREZADZACZEQFFZRSGUARUBSAHAIJQKUCTLAMQNOP $.
    $( [4-Jun-2008] $)

  $( Alternate definition of domain ~ df-dm that doesn't require dummy
     variables. $)
  dfdm2 $p |- dom A = U. U. ( `' A o. A ) $=
    ( ccnv ccom cuni cdm crn cun cnvco cocnvcnv2 eqtri unieqi unidmrn eqtr3i 
    wceq df-rn eqcomi dmcoeq ax-mp rncoeq dfdm4 eqtr4i uneq12i unidm 3eqtrri ) 
    ABZACZDZDZUFEZUFFZGZAEZULGULUFBZDZDUHUKUNUGUMUFUMUEUEBCUFUEAHUEAIJKKUFLMUIU
    LUJULUEEZAFZNZUIULNUPUOAOPZUEAQRUJUEFZULUQUJUSNURUEASRATUAUBULUCUD $.
    $( [2-Aug-2010] $)

  $( The double class union of a non-empty cross product is the union of it
     members. $)
  unixp $p |- ( ( A X. B ) =/= (/) -> U. U. ( A X. B ) = ( A u. B ) ) $=
    ( cxp c0 wne cdm crn cun cuni wceq xpeq2 xp0 syl6eq necon3i xpeq1 xp0r 
    uneq12 dmxp rnxp syl2an syl11anc wrel relxp relfld ax-mp syl5eq ) ABCZDEZUG
    FZUGGZHZABHZUGIIZUHBDEZADEZUKULJZBDUGDBDJUGADCDBDAKALMNADUGDADJUGDBCDADBOBP
    MNUIAJUJBJUPUNUOUIAUJBQABRABSTUAUGUBUMUKJABUCUGUDUEUF $.
    $( [17-Sep-2006] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is empty iff its union is empty. $)
    unixp0 $p |- ( ( A X. B ) = (/) <-> U. ( A X. B ) = (/) ) $=
      ( vz vx vy cxp c0 wceq cuni unieq uni0 syl6eq wn cv wcel wex neq0 cop wa 
      elxp3 csn wss snssi uniss opex unisn syl5ssr opnz sseq2 biimpd ss0 
      syl6com mtoi 3syl adantl 19.23aivv sylbi 19.23aiv con4i impbii ) ABFZGHZV
      AIZGHZVBVCGIGVAGJKLVBVDVBMCNZVAOZCPVDMZCVAQVFVGCVFDNZENZRZVEHZVJVAOZSZEPD
      PVGDEVEABTVMVGDEVLVGVKVLVJUAZVAUBZVJVCUBZVGVJVAUCVOVNIVCVJVNVAUDVJVHVIUEU
      FUGVPVDVJGHZVHVIUHVDVPVJGUBZVQVDVPVRVCGVJUIUJVJUKULUMUNUOUPUQURUQUSUT $.
      $( [20-Sep-2006] $)
  $}

  $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
     p. 26. $)
  cnvexg $p |- ( A e. B -> `' A e. _V ) $=
    ( ccnv cdm crn cxp wss cvv wcel ssexg wrel relcnv relssdmrn ax-mp rnexg 
    df-rn syl5eqelr dmexg dfdm4 xpexg syl11anc sylancr ) ACZUCDZUCEZFZGZUFHIZUC
    HIABIZUCUFHJUCKUGALUCMNUIUDHIUEHIUHUIAEHUDABOAPQUIADHUEABRASQUDUEHHTUAUB $.
    $( [17-Mar-1998] $)

  ${
    cnvex.1 $e |- A e. _V $.
    $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
       p. 26. $)
    cnvex $p |- `' A e. _V $=
      ( cvv wcel ccnv cnvexg ax-mp ) ACDAECDBACFG $.
      $( [19-Dec-2003] $)
  $}

  $( A relation is a set iff its converse is a set.  (Contributed by FL,
     3-Mar-2007.) $)
  relcnvexb $p |- ( Rel R -> ( R e. _V <-> `' R e. _V ) ) $=
    ( wrel cvv wcel ccnv cnvexg wceq wi dfrel2 eleq1 syl5bi sylbi impbid2 ) ABZ
    ACDZAEZCDZACFNPEZAGZQOHAISRCDOQRACJPCFKLM $.
    $( [5-Mar-2007] $)

  ${
    $d x y z A $.  $d x y z R $.
    $( The converse of a partial order relation is a partial order relation. $)
    cnvpo $p |- ( R Po A <-> `' R Po A ) $=
      ( vx vy vz cv wbr wn wa wi wral ccnv wpo r19.26 ralbii ralidm wb c0 wceq 
      rzal 2thd wne r19.3rzv ralbidv pm2.61ine bitr2i anbi1i 3bitri bitr4i id 
      breq12d visset brcnv syl5bb notbid cbvralv anbi12i ancom bitri imbi12i 
      ralcom 3bitr4i df-po ) CFZVDBGZHZVDDFZBGZVGEFZBGZIZVDVIBGZJZIEAKZDAKCAKZV
      IVIBLZGZHZVIVGVPGZVGVDVPGZIZVIVDVPGZJZIZCAKZDAKEAKZABMAVPMVNCAKZDAKWEEAKZ
      DAKVOWFWGWHDAWGVFCAKZVMEAKZIZCAKZWDEAKZCAKWHWGWICAKZWJCAKZIZWLWGVFEAKZWJI
      ZCAKWQCAKZWOIWPVNWRCAVFVMEANOWQWJCANWSWNWOWNWIWSVFCAPWIWSQARARSWIWSVFCATW
      QCATUAARUBVFWQCAVFEAUCUDUEUFUGUHWIWJCANUIWKWMCAWMVREAKZWCEAKZIWKVRWCEANWT
      WIXAWJVRVFECAVIVDSZVQVEXBVIVIBGVEVQXBVIVDVIVDBXBUJZXCUKVIVIBEULZXDUMUNUOU
      PWCVMEAWAVKWBVLWAVJVHIVKVSVJVTVHVIVGBXDDULZUMVGVDBXECULZUMUQVJVHURUSVIVDB
      XDXFUMUTOUQUFOWDCEAAVAUHOVNCDAAVAWEEDAAVAVBCDEABVCEDCAVPVCVB $.
      $( [15-Jun-2005] $)

    $( The converse of a strict order relation is a strict order relation. $)
    cnvso $p |- ( R Or A <-> `' R Or A ) $=
      ( vx vy wpo cv wbr wceq w3o wral wa ccnv wor cnvpo ralcom visset brcnv 
      eqcom 3orbi123i 2ralbii bitr4i anbi12i df-so 3bitr4i ) ABEZCFZDFZBGZUFUGH
      ZUGUFBGZIZDAJCAJZKABLZEZUGUFUMGZUGUFHZUFUGUMGZIZCAJDAJZKABMAUMMUEUNULUSAB
      NULUKCAJDAJUSUKCDAAOURUKDCAAUOUHUPUIUQUJUGUFBDPZCPZQUGUFRUFUGBVAUTQSTUAUB
      CDABUCDCAUMUCUD $.
      $( [15-Jun-2005] $)
  $}

  $( The composition of two sets is a set. $)
  coexg $p |- ( ( A e. C /\ B e. D ) -> ( A o. B ) e. _V ) $=
    ( ccom cdm crn cxp wss cvv wcel wa ssexg wrel relco relssdmrn dmcoss 
    rncoss xpss12 mp2an sstr2 mpi syl ax-mp xpexg dmexg rnexg syl2an ancoms 
    sylancr ) ABEZBFZAGZHZIZUNJKZUKJKACKZBDKZLUKUNJMUKNZUOABOUSUKUKFZUKGZHZIZUO
    UKPVCVBUNIZUOUTULIVAUMIVDABQABRUTULVAUMSTUKVBUNUAUBUCUDURUQUPULJKUMJKUPURUQ
    ULUMJJUEBDUFACUGUHUIUJ $.
    $( [19-Mar-1998] $)

  ${
    coex.1 $e |- A e. _V $.
    coex.2 $e |- B e. _V $.
    $( The composition of two sets is a set. $)
    coex $p |- ( A o. B ) e. _V $=
      ( cvv wcel ccom coexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [15-Dec-2003] $)
  $}

  ${
    $d x y z A $.
    $( Alternate definition of a function. $)
    dffun2 $p |- ( Fun A <-> ( Rel A /\
                 A. x A. y A. z ( ( x A y /\ x A z ) -> y = z ) ) ) $=
      ( wfun wrel ccnv ccom cid wss wa cv wbr wceq wi wal df-fun wex copab 
      df-id sseq2i df-co sseq1i ssopab2 3bitri visset brcnv anbi1i exbii 
      imbi1i 19.23v bitr4i albii alcom bitri anbi2i ) DEDFZDDGZHZIJZKUQALZBLZDM
      ZVACLZDMZKZVBVDNZOZCPZBPAPZKDQUTVJUQUTVBVAURMZVEKZARZVGOZCPZBPZVIAPZBPVJU
      TUSVGBCSZJVMBCSZVRJVPIVRUSBCTUAUSVSVRBCADURUBUCVMVGBCUDUEVOVQBVOVHAPZCPVQ
      VNVTCVNVFARZVGOVTVMWAVGVLVFAVKVCVEVBVADBUFAUFUGUHUIUJVFVGAUKULUMVHCAUNUOU
      MVIBAUNUEUPUO $.
      $( [23-Apr-2004] $) $( [29-Dec-1996] $)

    $( Alternate definition of function. $)
    dffun3 $p |- ( Fun A <-> ( Rel A /\
                 A. x E. z A. y ( x A y -> y = z ) ) ) $=
      ( wfun wrel cv wbr wa wceq wi wal wex dffun2 wmo breq2 mo4 ax-17 mo2 
      bitr3i albii anbi2i bitri ) DEDFZAGZBGZDHZUECGZDHZIUFUHJZKCLBLZALZIUDUGUJ
      KBLCMZALZIABCDNULUNUDUKUMAUKUGBOUMUGUIBCUFUHUEDPQUGBCUGCRSTUAUBUC $.
      $( [23-Apr-2004] $) $( [29-Dec-1996] $)

    $( Alternate definition of a function.  Definition 6.4(4) of
       [TakeutiZaring] p. 24. $)
    dffun4 $p |- ( Fun A <-> ( Rel A /\
                 A. x A. y A. z ( ( <. x , y >. e. A /\ <. x , z >. e. A )
                 -> y = z ) ) ) $=
      ( wfun wrel cv wbr wa wceq wi wal cop wcel dffun2 df-br anbi12i imbi1i 
      albii 2albii anbi2i bitri ) DEDFZAGZBGZDHZUDCGZDHZIZUEUGJZKZCLZBLALZIUCUD
      UEMDNZUDUGMDNZIZUJKZCLZBLALZIABCDOUMUSUCULURABUKUQCUIUPUJUFUNUHUOUDUEDPUD
      UGDPQRSTUAUB $.
      $( [29-Dec-1996] $)

    $( Alternate definition of function. $)
    dffun5 $p |- ( Fun A <-> ( Rel A /\
                 A. x E. z A. y ( <. x , y >. e. A -> y = z ) ) ) $=
      ( wfun wrel cv wbr wceq wi wal wex wa cop wcel dffun3 df-br imbi1i albii 
      exbii anbi2i bitri ) DEDFZAGZBGZDHZUECGIZJZBKZCLZAKZMUCUDUENDOZUGJZBKZCLZ
      AKZMABCDPUKUPUCUJUOAUIUNCUHUMBUFULUGUDUEDQRSTSUAUB $.
      $( [29-Dec-1996] $)
  $}

  ${
    $d x y z w v u $.  $d z A w v u $.
    dffunmof.1 $e |- ( z e. A -> A. x z e. A ) $.
    dffunmof.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of function, using bound-variable hypotheses instead of
       distinct variable conditions. $)
    dffun6f $p |- ( Fun A <-> ( Rel A /\ A. x E* y x A y ) ) $=
      ( vw vv vu wfun wrel cv wbr wceq wi wal wex wa wmo dffun3 wcel ax-17 
      hbbr breq2 cbvmo albii mo2 hbmo breq1 mobid cbval 3bitr3ri anbi2i bitr4i 
      ) DJDKZGLZHLZDMZUQILNOHPIQZGPZRUOALZBLZDMZBSZAPZRGHIDTVEUTUOURHSZGPUPVBDM
      ZBSZGPUTVEVFVHGURVGHBBCUPUQDCLZUPUAZBUBFVIUQUABUBUCVGHUBUQVBUPDUDUEUFVFUS
      GURHIURIUBUGUFVHVDGAVGABACUPVBDVJAUBEVIVBUAAUBUCUHVDGUBUPVANZVGVCBVKBUBUP
      VAVBDUIUJUKULUMUN $.
      $( [15-Aug-2004] $) $( [9-Mar-1995] $)
  $}

  ${
    $d x y z A $.
    $( Alternate definition of a function using "at most one" notation. $)
    dffun6 $p |- ( Fun A <-> ( Rel A /\ A. x E* y x A y ) ) $=
      ( vz cv wcel ax-17 dffun6f ) ABDCDECFZAGIBGH $.
      $( [15-Aug-2004] $) $( [9-Mar-1995] $)

    $( A function has at most one value for each argument. $)
    funmo $p |- ( Fun A -> E* y x A y ) $=
      ( wfun cv wbr wmo wrel wal dffun6 simprbi 19.21bi ) CDZAEBECFBGZAMCHNAIAB
      CJKL $.
      $( [15-Aug-2004] $) $( [24-May-1998] $)
  $}

  $( A function is a relation. $)
  funrel $p |- ( Fun A -> Rel A ) $=
    ( wfun wrel ccnv ccom cid wss df-fun simplbi ) ABACAADEFGAHI $.
    $( [1-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Subclass theorem for function predicate.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    funss $p |- ( A C_ B -> ( Fun B -> Fun A ) ) $=
      ( vx vy wss wrel cv wbr wmo wal wa wfun relss wi id ssbrd 19.21aiv immo 
      syl alimdv anim12d dffun6 3imtr4g ) ABEZBFZCGZDGZBHZDIZCJZKAFZUFUGAHZDIZC
      JZKBLALUDUEUKUJUNABMUDUIUMCUDULUHNZDJUIUMNUDUODUDABUFUGUDOPQULUHDRSTUACDB
      UBCDAUBUC $.
      $( [18-Sep-2011] $) $( [16-Aug-1994] $)
  $}

  $( Equality theorem for function predicate. $)
  funeq $p |- ( A = B -> ( Fun A <-> Fun B ) ) $=
    ( wss wa wfun wi wceq wb funss anim12i ancoms eqss dfbi2 3imtr4i ) ABCZBACZ
    DAEZBEZFZRQFZDZABGQRHPOUAPSOTBAIABIJKABLQRMN $.
    $( [16-Aug-1994] $)

  ${
    funeqi.1 $e |- A = B $.
    $( Equality theorem for the function predicate.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    funeqi $p |- ( Fun A <-> Fun B ) $=
      ( wceq wfun wb funeq ax-mp ) ABDAEBEFCABGH $.
      $( [12-Jun-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    $d y F $.  $d x y $.
    hbfun.1 $e |- ( y e. F -> A. x y e. F ) $.
    $( Bound-variable hypothesis builder for a function. $)
    hbfun $p |- ( Fun F -> A. x Fun F ) $=
      ( wrel ccnv ccom cid wss wa wal wfun hbrel hbcnv hbco cv wcel ax-17 hbss 
      hban df-fun albii 3imtr4i ) CEZCCFZGZHIZJZUHAKCLZUIAKUDUGAABCDMABUFHABCUE
      DABCDNOBPHQARSTCUAZUIUHAUJUBUC $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d x y z F $.
    $( There is exactly one value of a function.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    funeu $p |- ( ( Fun F /\ x F y ) -> E! y x F y ) $=
      ( wfun cv wbr weu wex wmo wi funmo df-mo sylib 19.8a syl5 imp ) CDZAEBECF
      ZRBGZQRBHZSRQRBITSJABCKRBLMRBNOP $.
      $( [17-Aug-2011] $) $( [22-Apr-2004] $)

    $( There is exactly one value of a function. $)
    funeu2 $p |- ( ( Fun F /\ <. x , y >. e. F ) -> E! y <. x , y >. e. F ) $=
      ( wfun cv wbr wa weu cop wcel funeu df-br anbi2i eubii 3imtr3i ) CDZAEZBE
      ZCFZGSBHPQRICJZGTBHABCKSTPQRCLZMSTBUANO $.
      $( [3-Aug-1994] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of a function.  One possibility for the definition
       of a function in [Enderton] p. 42.  (Enderton's definition is ambiguous
       because "there is only one" could mean either "there is at most one" or
       "there is exactly one."  However, ~ dffun8 shows that it doesn't matter
       which meaning we pick.) $)
    dffun7 $p |- ( Fun A <-> ( Rel A /\ A. x e. dom A E* y x A y ) ) $=
      ( wfun wrel cv wbr wmo wal wa cdm wral dffun6 wcel wi wex moabs visset 
      eldm imbi1i bitr4i albii df-ral anbi2i bitri ) CDCEZAFZBFCGZBHZAIZJUFUIAC
      KZLZJABCMUJULUFUJUGUKNZUIOZAIULUIUNAUIUHBPZUIOUNUHBQUMUOUIBUGCARSTUAUBUIA
      UKUCUAUDUE $.
      $( [4-Nov-2002] $)

    $( Alternate definition of a function.  One possibility for the definition
       of a function in [Enderton] p. 42.  Compare ~ dffun7 .  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    dffun8 $p |- ( Fun A <-> ( Rel A /\ A. x e. dom A E! y x A y ) ) $=
      ( wfun wrel cv wbr wmo cdm wral wa weu dffun7 wcel wex wi wb visset eldm 
      pm5.5 sylbi df-mo syl5bb ralbiia anbi2i bitri ) CDCEZAFZBFCGZBHZACIZJZKUG
      UIBLZAUKJZKABCMULUNUGUJUMAUKUHUKNZUIBOZUMPZUMUJUOUPUQUMQBUHCARSUPUMTUAUIB
      UBUCUDUEUF $.
      $( [18-Sep-2011] $) $( [4-Nov-2002] $)

    $( Alternate definition of a function. $)
    dffun9 $p |- ( Fun A <->
                 ( Rel A /\ A. x e. dom A E* y ( y e. ran A /\ x A y ) ) ) $=
      ( wfun wrel cv wbr wmo cdm wral wa crn wcel dffun7 visset brelrn 
      pm4.71ri mobii ralbii anbi2i bitri ) CDCEZAFZBFZCGZBHZACIZJZKUBUDCLMZUEKZ
      BHZAUGJZKABCNUHULUBUFUKAUGUEUJBUEUIUCUDCAOBOPQRSTUA $.
      $( [28-Mar-2007] $)
  $}

  $( An equivalence for the function predicate. $)
  funfn $p |- ( Fun A <-> A Fn dom A ) $=
    ( wfun cdm wceq wa wfn eqid biantru df-fn bitr4i ) ABZKACZLDZEALFMKLGHALIJ 
    $.
    $( [13-Aug-2004] $)

  $( The identity relation is a function.  Part of Theorem 10.4 of [Quine]
     p. 65. $)
  funi $p |- Fun _I $=
    ( cid wfun wrel ccnv ccom wss df-fun reli wceq relcnv coi2 ax-mp cnvi 
    eqtri eqimssi mpbir2an ) ABACAADZEZAFAGHRARQAQCRQIAJQKLMNOP $.
    $( [30-Apr-1998] $)

  $( The universe is not a function.  (Contributed by Raph Levien,
     27-Jan-2004.) $)
  nfunv $p |- -. Fun _V $=
    ( cvv wfun wrel c0 cxp wcel 0nelxp 0ex wss df-rel biimpi sseld mpi mto 
    funrel ) ABACZPDAAEZFZAAGPDAFRHPAQDPAQIAJKLMNAON $.
    $( [27-Jan-2004] $)

  ${
    $d t u v w x y z A $.  $d t u v w x y z B $.
    $( A Kuratowski ordered pair is a function only if its components are
       equal. $)
    funopg $p |- ( ( B e. C /\ Fun <. A , B >. ) -> A = B ) $=
      ( vu vt vx vy vz vw vv wcel cop wfun wceq cvv wi cv wb opeq1 funeq syl 
      eqeq1 imbi12d opeq2 eqeq2 csn cpr wa wex wrel funrel visset relop sylib 
      wal dffun4 simprbi w3a opeq12 3adant3 eleq1d 3adant2 anbi12d eqeq12 
      3adant1 cla43gv mp3an opex prid1 eleq2 mpbiri prid2 jca syl5 zfpair2 
      opth dfsn2 preq2i df-op 3eqtr4ri preq1i eqeq2i bitr3i syl5ib preq2 
      syl5req eqeq2d eqtr3 expcom syl6bi com13 imp sylcom 19.23advv mpd 
      vtocl2g wn c0 opprc1b cxp wss df-rel 0nelxp ssel mtoi sylbi con2i 
      pm2.21d adantr pm2.61ian ) BCKZABLZMZABNZAOKZXKXMXNPZDQZEQZLZMZXQXRNZPAXR
      LZMZAXRNZPXPDEABOCXQANZXTYCYAYDYEXSYBNXTYCRXQAXRSXSYBTUAXQAXRUBUCXRBNZYCX
      MYDXNYFYBXLNYCXMRXRBAUDYBXLTUAXRBAUEUCXTXQFQZUFZNZXRYGGQZUGZNZUHZGUIFUIZY
      AXTXSUJZYNXSUKFGXQXRDULZEULZUMUNXTYMYAFGXTYMYGYJNZYAXTXSYGYGLZYGYJLZUGZNZ
      YRYMXTHQZIQZLZXSKZUUCJQZLZXSKZUHZUUDUUGNZPZJUOIUOHUOZUUBYRPXTYOUUMHIJXSUP
      UQUUMYSXSKZYTXSKZUHZYRUUBYGOKZUUQYJOKUUMUUPYRPZPFULZUUSGULUULUURHIJYGYGYJ
      OOOUUCYGNZUUDYGNZUUGYJNZURZUUJUUPUUKYRUVCUUFUUNUUIUUOUVCUUEYSXSUUTUVAUUEY
      SNUVBUUCUUDYGYGUSUTVAUVCUUHYTXSUUTUVBUUHYTNUVAUUCUUGYGYJUSVBVAVCUVAUVBUUK
      YRRUUTUUDYGUUGYJVDVEUCVFVGUUBUUNUUOUUBUUNYSUUAKYSYTYGYGVHVIXSUUAYSVJVKUUB
      UUOYTUUAKYSYTYGYJVHVLXSUUAYTVJVKVMVNUAYMXSYHYKLZNUUBXQXRYHYKYPYQFGVOVPUVD
      UUAXSYSYHYKUGZUGYHUFZUVEUGUUAUVDYSUVFUVEYHYHUGYHYGYGUGZUGUVFYSYHUVGYHYGVQ
      ZVRYHVQYGYGVSVTWAYTUVEYSYGYJVSVRYHYKVSVTWBWCWDYIYLYRYAPYRYLYIYAYRYLXRYHNZ
      YIYAPYRYKYHXRYRUVGYKYHYGYJYGWEUVHWFWGYIUVIYAXQXRYHWHWIWJWKWLWMWNWOWPXOWQZ
      XPXKUVJXMXNUVJWRXLKZXMWQABWSXMUVKXMXLUJZUVKWQZXLUKUVLXLOOWTZXAZUVMXLXBUVO
      UVKWRUVNKOOXCXLUVNWRXDXEXFUAXGXFXHXIXJWL $.
      $( [5-Jun-2008] $)
  $}


  ${
    $d x y z $.  $d z ph $.
    $( A class of ordered pairs is a function when there is at most one second
       member for each pair. $)
    funopab $p |- ( Fun { <. x , y >. | ph } <-> A. x E* y ph ) $=
      ( vz copab wfun cv wbr wmo wal wrel hbopab1 hbopab2 dffun6f relopab 
      mpbiran cop wcel df-br opabid bitri mobii albii ) ABCEZFZBGZCGZUDHZCIZBJZ
      ACIZBJUEUDKUJBCDUDABCDLABCDMNABCOPUIUKBUHACUHUFUGQUDRAUFUGUDSABCTUAUBUCUA
      $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( A class of ordered pairs of values is a function. $)
    funopabeq $p |- Fun { <. x , y >. | y = A } $=
      ( cv wceq copab wfun wmo funopab moeq mpgbir ) BDCEZABFGLBHALABIBCJK $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d x y z F $.  $d x y z G $.
    $( The composition of two functions is a function.  Exercise 29 of
       [TakeutiZaring] p. 25.  (The proof was shortened by Andrew Salmon,
       17-Sep-2011.) $)
    funco $p |- ( ( Fun F /\ Fun G ) -> Fun ( F o. G ) ) $=
      ( vx vz vy wfun wa cv wbr wex copab ccom wmo wal moexexv ancoms funmo 
      19.21aiv syl2an funopab sylibr df-co funeqi ) AFZBFZGZCHDHZBIZUGEHAIZGDJZ
      CEKZFZABLZFUFUJEMZCNULUFUNCUIEMZDNZUHDMZUNUDUEUQUPUNUHUIDEOPUDUODDEAQRCDB
      QSRUJCETUAUMUKCEDABUBUCUA $.
      $( [18-Sep-2011] $) $( [26-Jan-1997] $)
  $}

  ${
    $d x y z F $.  $d x y z A $.
    $( A restriction of a function is a function.  Compare Exercise 18 of
       [TakeutiZaring] p. 25. $)
    funres $p |- ( Fun F -> Fun ( F |` A ) ) $=
      ( cres wss wfun wi resss funss ax-mp ) BACZBDBEJEFBAGJBHI $.
      $( [16-Aug-1994] $)
  $}

  ${
    $d x y F $.  $d x y G $.  $d x y A $.
    $( The restriction of a function to the domain of a subclass equals the
       subclass. $)
    funssres $p |- ( ( Fun F /\ G C_ F ) -> ( F |` dom G ) = G ) $=
      ( vx vy wfun wss wa cdm cres wceq cv cop wcel wb wal wi ssel visset 
      opeldm a1i jcad adantl weu wex eupick funeu2 ancrd eximdv eldm2 syl5ib 
      imp syl2an exp43 com23 com34 pm2.43d imp3a impbid opelres syl6rbbr 
      19.21aivv wrel eqrel relres relss funrel syl5com sylancr mpbird ) AEZBAFZ
      GZABHZIZBJZCKZDKZLZVNMZVRBMZNZDOCOZVLWACDVLVTVRAMZVPVMMZGZVSVLVTWEVKVTWEP
      VJVKVTWCWDBAVRQZVTWDPVKVPVQBCRZSTUAUBVLWCWDVTVLWCWDVTPVLWCWDWCVTVJVKWCWDW
      CVTPZPZPVJWCVKWIVJWCVKWDWHWCDUCWCVTGZDUDZWHVJWCGVKWDGWCVTDUECDAUFVKWDWKVK
      VTDUDWKWDVKVTWJDVKVTWCWFUGUHDVPBWGUIUJUKULUMUNUKUOUPUQURVPVQAVMDRUSUTVAVN
      VBBVBZVOWBNVLCDVNBVCAVMVDVJVKWLVKAVBWLVJBAVEAVFVGUKVHVI $.
      $( [19-Mar-2004] $) $( [15-Aug-1994] $)
  $}

  $( Equality of restrictions of a function and a subclass. $)
  fun2ssres $p |- ( ( Fun F /\ G C_ F /\ A C_ dom G ) ->
                  ( F |` A ) = ( G |` A ) ) $=
    ( wfun wss cdm cres wceq wa resabs1 eqcomd funssres reseq1 syl sylan9eqr 
    3impa ) BDZCBEZACFZEZBAGZCAGZHTQRIZUABSGZAGZUBTUEUABASJKUCUDCHUEUBHBCLUDCAM
    NOP $.
    $( [2-Jun-2007] $) $( [16-Aug-1994] $)

  ${
    $d x y z F $.  $d x y z G $.
    $( The union of functions with disjoint domains is a function.  Theorem 4.6
       of [Monk1] p. 43. $)
    funun $p |- ( ( ( Fun F /\ Fun G ) /\ ( dom F i^i dom G ) = (/) ) ->
                Fun ( F u. G ) ) $=
      ( vx vy vz cun wfun wrel cv cop wcel wa wceq wi wal cdm cin c0 dffun4 
      funrel anim12i relun sylibr adantr wo wn disj1 biimpi 19.21bi imnan 
      sylib visset opeldm nsyl orel2 syl con2d orel1 orim12d adantl elun 
      anbi12i anddi bitri syl5ib simprbi 19.21bbi jaao syld 19.21aiv 19.21aivv 
      sylanbrc ) ABFZGVMHZCIZDIZJZVMKZVOEIZJZVMKZLZVPVSMZNZEOZDOCOAGZBGZLZAPZBP
      ZQRMZLZCDEVMSWHVNWKWHAHZBHZLVNWFWMWGWNATBTUAABUBUCUDWLWECDWLWDEWLWBVQAKZV
      TAKZLZVQBKZVTBKZLZUEZWCWLWQWOWSLZUEZWRWPLZWTUEZUEZXAWBWKXFXANWHWKXCWQXEWT
      WKXBUFXCWQNWKVOWIKZVOWJKZLZXBWKXGXHUFNZXIUFWKXJCWKXJCOCWIWJUGUHUIZXGXHUJU
      KWOXGWSXHVOVPACULZUMVOVSBXLUMUAUNXBWQUOUPWKXDUFXEWTNWKXHXGLZXDWKXHXGUFNXM
      UFWKXGXHXKUQXHXGUJUKWRXHWPXGVOVPBXLUMVOVSAXLUMUAUNXDWTURUPUSUTWBWOWRUEZWP
      WSUEZLXFVRXNWAXOVQABVAVTABVAVBWOWRWPWSVCVDVEWHXAWCNWKWFWQWCWGWTWFWQWCNZDE
      WFXPEODOZCWFWMXQCOCDEASVFUIVGWGWTWCNZDEWGXREODOZCWGWNXSCOCDEBSVFUIVGVHUDV
      IVJVKVL $.
      $( [12-Aug-1994] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    funsn.1 $e |- A e. _V $.
    funsn.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is a function.  Theorem 10.5 of [Quine]
       p. 65.  (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    funsn $p |- Fun { <. A , B >. } $=
      ( vx vy cop csn wfun wrel cv wbr wmo wal dffun6 relsn wcel wceq wa moeq 
      moani visset opth mobii mpbir opex elsnc df-br ax-gen mpbir2an ) ABGZHZIU
      LJEKZFKZULLZFMZENEFULOABCPUPEUPUMUNGZULQZFMZUSUQUKRZFMZVAUMARZUNBRZSZFMVC
      VBFFBTUAUTVDFUMUNABEUBFUBDUCUDUEURUTFUQUKUMUNUFUGUDUEUOURFUMUNULUHUDUEUIU
      J $.
      $( [18-Sep-2011] $) $( [12-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( A singleton of an ordered pair is a function.  Theorem 10.5 of [Quine]
       p. 65.  (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    funsng $p |- ( ( A e. C /\ B e. D ) -> Fun { <. A , B >. } ) $=
      ( vx vy cv cop csn wfun wceq wb opeq1 sneqd funeq syl opeq2 visset funsn 
      vtocl2g ) EGZFGZHZIZJZAUBHZIZJZABHZIZJZEFABCDUAAKZUDUGKUEUHLULUCUFUAAUBMN
      UDUGOPUBBKZUGUJKUHUKLUMUFUIUBBAQNUGUJOPUAUBERFRST $.
      $( [28-Jun-2011] $)
  $}

  $( A set of two pairs is a function if their first members are different.
     (Contributed by FL, 26-Jun-2011.) $)
  funprg $p |- ( ( A =/= B /\ ( A e. E /\ C e. F ) /\ ( B e. G /\ D e. H ) )
     -> Fun { <. A , C >. , <. B , D >. } ) $=
    ( wne wcel wa w3a cop cpr wfun csn cun cdm cin c0 wceq cvv elisset anim12i 
    funsng syl 3adant1 dmsnop a1i ineq12 syl11anc disjsn2 eqtrd 3ad2ant1 funun 
    wb df-pr funeqi mpbird ) ABIZAEJZCFJZKZBGJZDHJZKZLZACMZBDMZNZOZVHPZVIPZQZOZ
    VGVLOZVMOZKZVLRZVMRZSZTUAZVOVCVFVRUTVCVPVFVQVCAUBJZCUBJZKVPVAWCVBWDAEUCCFUC
    UDACUBUBUEUFVFBUBJZDUBJZKVQVDWEVEWFBGUCDHUCUDBDUBUBUEUFUDUGUTVCWBVFUTWAAPZB
    PZSZTUTVSWGUAZVTWHUAZWAWIUAWJUTACUHUIWKUTBDUHUIVSWGVTWHUJUKABULUMUNVLVMUOUK
    VKVOUPVGVJVNVHVIUQURUIUS $.
    $( [13-Sep-2011] $) $( [26-Jun-2011] $)

  ${
    funpr.1 $e |- A e. _V $.
    funpr.2 $e |- B e. _V $.
    funpr.3 $e |- C e. _V $.
    funpr.4 $e |- D e. _V $.
    $( A function with a domain of two elements.  (Contributed by Jeff Madsen,
       20-Jun-2010.) $)
    funpr $p |- ( A =/= B -> Fun { <. A , C >. , <. B , D >. } ) $=
      ( wne cvv wcel wa cop cpr wfun pm3.2i funprg mp3an3 mpan2 ) ABIZAJKZCJKZL
      ZACMBDMNOZUAUBEGPTUCBJKZDJKZLUDUEUFFHPABCDJJJJQRS $.
      $( [3-Sep-2011] $) $( [20-Jun-2010] $)
  $}

  ${
    funtp.1 $e |- A e. _V $.
    funtp.2 $e |- B e. _V $.
    funtp.3 $e |- C e. _V $.
    funtp.4 $e |- D e. _V $.
    funtp.5 $e |- E e. _V $.
    funtp.6 $e |- F e. _V $.
    $( A function with a domain of three elements. $)
    funtp $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
                    -> Fun { <. A , D >. , <. B , E >. , <. C , F >. } ) $=
      ( wne w3a cop cpr csn cun wfun ctp wa cdm cin c0 wceq funun funpr funsn 
      jctir disjsn2 anim12i undisj1 sylib dmprop df-pr eqtri dmsnop ineq12i 
      syl5eq syl2an 3impb df-tp funeqi sylibr ) ABMZACMZBCMZNADOZBEOZPZCFOZQZRZ
      SZVHVIVKTZSVEVFVGVNVJSZVLSZUAVJUBZVLUBZUCZUDUEVNVEVFVGUAZVJVLUFVEVPVQABDE
      GHJKUGCFILUHUIWAAQZBQZRZCQZUCZUDVTWAWBWEUCUDUEZWCWEUCUDUEZUAWFUDUEVFWGVGW
      HACUJBCUJUKWBWCWEULUMVRWDVSWEVRABPWDABDEUNABUOUPCFUQURUSUTVAVOVMVHVIVKVBV
      CVD $.
      $( [14-Sep-2011] $)
  $}

  ${
    fnsn.1 $e |- A e. _V $.
    fnsn.2 $e |- B e. _V $.
    $( Functionality and domain of the singleton of an ordered pair.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    fnsn $p |- { <. A , B >. } Fn { A } $=
      ( cop csn wfn wfun cdm wceq df-fn funsn dmsnop mpbir2an ) ABEFZAFZGOHOIPJ
      OPKABCDLABMN $.
      $( [28-Jun-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    $( Domain of a function with a domain of two different values.
       (Contributed by FL, 26-Jun-2011.) $)
    fnprg $p |- ( ( A =/= B /\ ( A e. E /\ C e. F ) /\
      ( B e. G /\ D e. H ) )
         -> { <. A , C >. , <. B , D >. } Fn { A , B } ) $=
      ( wne wcel wa w3a cop cpr wfun cdm wceq wfn funprg dmprop jctir df-fn 
      sylibr ) ABIAEJCFJKBGJDHJKLZACMBDMNZOZUEPABNZQZKUEUGRUDUFUHABCDEFGHSABCDT
      UAUEUGUBUC $.
      $( [13-Sep-2011] $) $( [26-Jun-2011] $)
  $}

  ${
    fntp.1 $e |- A e. _V $.
    fntp.2 $e |- B e. _V $.
    fntp.3 $e |- C e. _V $.
    fntp.4 $e |- D e. _V $.
    fntp.5 $e |- E e. _V $.
    fntp.6 $e |- F e. _V $.
    $( A function with a domain of three elements. $)
    fntp $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
          -> { <. A , D >. , <. B , E >. , <. C , F >. } Fn { A , B , C } ) $=
      ( wne w3a cop ctp wfun cdm wceq wa wfn funtp dmtpop jctir df-fn sylibr ) 
      ABMACMBCMNZADOBEOCFOPZQZUHRABCPZSZTUHUJUAUGUIUKABCDEFGHIJKLUBABCDEFUCUDUH
      UJUEUF $.
      $( [14-Sep-2011] $)
  $}

  $( The empty set is a function.  Theorem 10.3 of [Quine] p. 65. $)
  fun0 $p |- Fun (/) $=
    ( c0 cop csn wss wfun 0ss 0ex funsn funss mp2 ) AAABCZDKEAEKFAAGGHAKIJ $.
    $( [7-Apr-1998] $)

  $( The double converse of a function is a function. $)
  funcnvcnv $p |- ( Fun A -> Fun `' `' A ) $=
    ( ccnv wss wfun wi cnvcnvss funss ax-mp ) ABBZACADIDEAFIAGH $.
    $( [21-Sep-2004] $)

  ${
    $d f g x y z w v A $.  $d x y B $.  $d x y R $.
    $( A simpler equivalence for single-rooted (see ~ funcnv ). $)
    funcnv2 $p |- ( Fun `' A <-> A. y E* x x A y ) $=
      ( ccnv wfun wrel cv wbr wmo wal wa dffun6 relcnv biantrur visset brcnv 
      mobii albii 3bitr2i ) CDZETFZBGZAGZTHZAIZBJZKUFUCUBCHZAIZBJBATLUAUFCMNUEU
      HBUDUGAUBUCCBOAOPQRS $.
      $( [9-Aug-2004] $)

    $( The converse of a class is a function iff the class is single-rooted,
       which means that for any ` y ` in the range of ` A ` there is at most
       one ` x ` such that ` x A y ` .  Definition of single-rooted in
       [Enderton] p. 43.  See ~ funcnv2 for a simpler version. $)
    funcnv $p |- ( Fun `' A <-> A. y e. ran A E* x x A y ) $=
      ( cv wbr wmo wal crn wcel wi ccnv wfun wral wa visset brelrn pm4.71ri 
      mobii moanimv bitri albii funcnv2 df-ral 3bitr4i ) ADZBDZCEZAFZBGUFCHZIZU
      HJZBGCKLUHBUIMUHUKBUHUJUGNZAFUKUGULAUGUJUEUFCAOBOPQRUJUGASTUAABCUBUHBUIUC
      UD $.
      $( [13-Aug-2004] $)

    $( A condition showing a class is single-rooted.  (See ~ funcnv ). $)
    funcnv3 $p |- ( Fun `' A <-> A. y e. ran A E! x e. dom A x A y ) $=
      ( cv wbr wmo crn wral wex wa ccnv wfun cdm wreu wcel dfrn2 abeq2i biimpi 
      biantrurd ralbiia funcnv weu df-reu visset breldm pm4.71ri eubii eu5 
      3bitr2i ralbii 3bitr4i ) ADZBDZCEZAFZBCGZHUNAIZUOJZBUPHCKLUNACMZNZBUPHUOU
      RBUPUMUPOZUQUOVAUQUQBUPABCPQRSTABCUAUTURBUPUTULUSOZUNJZAUBUNAUBURUNAUSUCU
      NVCAUNVBULUMCAUDUEUFUGUNAUHUIUJUK $.
      $( [26-May-2006] $)

    $( The double converse of a class is a function iff the class is
       single-valued.  Each side is equivalent to Definition 6.4(2) of
       [TakeutiZaring] p. 23, who use the notation "Un(A)" for single-valued.
       Note that ` A ` is not necessarily a function. $)
    fun2cnv $p |- ( Fun `' `' A <-> A. x E* y x A y ) $=
      ( ccnv wfun cv wbr wmo wal funcnv2 visset brcnv mobii albii bitri ) CDZDE
      BFZAFZPGZBHZAIRQCGZBHZAIBAPJTUBASUABQRCBKAKLMNO $.
      $( [13-Aug-2004] $)

    $( A single-valued relation is a function.  (See ~ fun2cnv for
       "single-valued.") Definition 6.4(4) of [TakeutiZaring] p. 24. $)
    svrelfun $p |- ( Fun A <-> ( Rel A /\ Fun `' `' A ) ) $=
      ( vx vy wfun wrel cv wbr wmo wal wa ccnv dffun6 fun2cnv anbi2i bitr4i ) 
      ADAEZBFCFAGCHBIZJPAKKDZJBCALRQPBCAMNO $.
      $( [17-Jan-2006] $)

    $( Single-rootedness (see ~ funcnv ) of a class cut down by a cross
       product. $)
    fncnv $p |- ( `' ( R i^i ( A X. B ) ) Fn B <->
                  A. y e. B E! x e. A x R y ) $=
      ( cxp cin ccnv wfn wfun cdm wceq wa crn cv wbr wreu wral df-fn df-rn 
      eqeq1i anbi2i wrex wcel wmo rninxp anbi1i raleq wi biimt w3a cvv wb 
      visset brinxp2 ax-mp 3ancoma 3anass 3bitri mobii moanimv bitri syl6rbbr 
      ralbiia syl6bb funcnv syl5bb pm5.32i r19.26 3bitr4i ancom reu5 ralbii 
      3bitr2i ) ECDFGZHZDIVPJZVPKZDLZMVQVONZDLZMZAOZBOZEPZACQZBDRZVPDSWAVSVQVTV
      RDVOTUAUBWAVQMZWEACUCZWCCUDZWEMZAUEZMZBDRZWBWGWAWLBDRZMWIBDRZWOMWHWNWAWPW
      OABCDEUFUGWAVQWOWAWCWDVOPZAUEZBVTRZWOVQWAWSWRBDRWOWRBVTDUHWRWLBDWDDUDZWLW
      TWLUIZWRWTWLUJWRWTWKMZAUEXAWQXBAWQWJWTWEUKZWTWJWEUKXBWDULUDWQXCUMBUNWCWDC
      DEULUOUPWJWTWEUQWTWJWEURUSUTWTWKAVAVBVCVDVEABVOVFVGVHWIWLBDVIVJVQWAVKWFWM
      BDWEACVLVMVJVN $.
      $( [5-Mar-2007] $)

    $( Two ways of stating that ` A ` is one-to-one (but not necessarily a
       function).  Each side is equivalent to Definition 6.4(3) of
       [TakeutiZaring] p. 24, who use the notation "Un_2 (A)" for one-to-one
       (but not necessarily a function). $)
    fun11 $p |- ( ( Fun `' `' A /\ Fun `' A ) <->
         A. x A. y A. z A. w ( ( x A y /\ z A w ) -> ( x = z <-> y = w ) ) ) $=
      ( cv wbr wa wceq wi wal wb ccnv wfun dfbi2 imbi2i pm4.76 bi2.04 anbi12i 
      3bitr2i 2albii 19.26-2 alcom ax-17 breq1 anbi1d imbi1d equsal albii 
      bitri breq2 3bitri bitr2i wmo fun2cnv mo4 funcnv2 alrot4 3bitr4i ) CFZBFZ
      EGZUTDFZEGZHZVAVCIZJZBKZDKZCKZAFZVCEGZVDHZVKUTIZJZAKZDKCKZHZVKVAEGZVDHZVN
      VFLZJZBKAKZDKCKZEMZMNZWENZHWBDKCKBKAKWDVHVPHZDKCKVRWCWHCDWCVNVTVFJZJZVFVT
      VNJZJZHZBKAKWJBKAKZWLBKZAKZHWHWBWMABWBVTVNVFJZVFVNJZHZJVTWQJZVTWRJZHWMWAW
      SVTVNVFOPVTWQWRQWTWJXAWLVTVNVFRVTVFVNRSTUAWJWLABUBWNVHWPVPWNWJAKZBKVHWJAB
      UCXBVGBWIVGACVGAUDVNVTVEVFVNVSVBVDVKUTVAEUEUFUGUHUIUJWOVOAWKVOBDVOBUDVFVT
      VMVNVFVSVLVDVAVCVKEUKUFUGUHUISULUAVHVPCDUBUMWFVJWGVQWFVBBUNZCKVGDKBKZCKVJ
      CBEUOXCXDCVBVDBDVAVCUTEUKUPUIXDVICVGBDUCUIULWGVLAUNZDKVOCKAKZDKZVQADEUQXE
      XFDVLVDACVKUTVCEUEUPUIXGVPCKZDKVQXFXHDVOACUCUIVPDCUCUJULSWBABCDURUS $.
      $( [17-Jan-2006] $)

    $( The union of a chain (with respect to inclusion) of functions is a
       function. $)
    fununi $p |- ( A. f e. A ( Fun f /\ A. g e. A ( f C_ g \/ g C_ f ) ) ->
                 Fun U. A ) $=
      ( vx vy vz vw vv cuni wfun wrel cv cop wcel wa wceq wi wal wss wo wral 
      dffun4 funrel adantr ralimi reluni sylibr r19.28av ssel anim1d simprbi 
      ax-4 a4s 3syl syl9r adantl anim2d jaod imp funeq sseq1 sseq2 orbi12d 
      anbi12d anbi2d cbvral2v ralcom orcom syl5bb bitri anbi12i anidm anandir 
      2ralbii r19.26-2 bitr2i 3bitr3i wex eluni eeanv an4 ancom 2exbii 3bitr2i 
      imbi1i 19.23v albii impexp 2albii r2al bitr4i 3bitr3ri 3imtr4i 19.21aiv 
      19.21aivv syl sylanbrc ) AIZJWRKZDLZELZMZWRNZWTFLZMZWRNZOZXAXDPZQZFRZERDR
      ZBLZJZXLCLZSZXNXLSZTZCAUAZOZBAUAZDEFWRUBXTXLKZBAUAWSXSYABAXMYAXRXLUCUDUEB
      AUFUGXTXMXQOZCAUAZBAUAZXKXSYCBAXMXQCAUHUEYDXJDEYDXIFGLZJZHLZJZOZYEYGSZYGY
      ESZTZOZHAUAZGAUAZXBYENZXEYGNZOZXHQZHAUAZGAUAZYDXIYNYTGAYMYSHAYIYLYSYIYJYS
      YKYHYJYSQYFYJYRXBYGNZYQOZYHXHYJYPUUBYQYEYGXBUIUJYHUUCXHQZFRZERZDRZUUEUUDY
      HYGKUUGDEFYGUBUKUUFUUEDUUEEULUMUUDFULUNUOUPYFYKYSQYHYKYRYPXEYENZOZYFXHYKY
      QUUHYPYGYEXEUIUQYFUUIXHQZFRZERZDRZUUKUUJYFYEKUUMDEFYEUBUKUULUUKDUUKEULUMU
      UJFULUNUOUDURUSUEUEYDYDOYFYLOZHAUAGAUAZYHYLOZHAUAGAUAZOZYDYOYDUUOYDUUQYBU
      UNYFYEXNSZXNYESZTZOBCGHAAXLYEPZXMYFXQUVAXLYEUTUVBXOUUSXPUUTXLYEXNVAXLYEXN
      VBVCVDXNYGPZUVAYLYFUVCUUSYJUUTYKXNYGYEVBXNYGYEVAVCVEVFYDYBBAUACAUAUUQYBBC
      AAVGYBUUPXMYEXLSZXLYESZTZOCBGHAAXNYEPZXQUVFXMUVGXPXOTUVFXQUVGXPUVDXOUVEXN
      YEXLVAXNYEXLVBVCXOXPVHVIVEXLYGPZXMYHUVFYLXLYGUTUVHUVDYJUVEYKXLYGYEVBXLYGY
      EVAVCVDVFVJVKYDVLYOUUNUUPOZHAUAGAUAUURYMUVIGHAAYFYHYLVMVNUUNUUPGHAAVOVPVQ
      XIYEANZYGANZOZYROZHVRZGVRZXHQZUUAXGUVOXHXGYPUVJOZGVRZYQUVKOZHVRZOUVQUVSOZ
      HVRGVRUVOXCUVRXFUVTGXBAVSHXEAVSVKUVQUVSGHVTUWAUVMGHUWAYRUVLOUVMYPUVJYQUVK
      WAYRUVLWBVJWCWDWEUVMXHQZHRZGRZUVNXHQZGRUUAUVPUWCUWEGUVMXHHWFWGUWDUVLYSQZH
      RGRUUAUWBUWFGHUVLYRXHWHWIYSGHAAWJWKUVNXHGWFWLVJWMWNWOWPWQ $.
      $( [10-Aug-2004] $)

    $( The union of a chain (with respect to inclusion) of single-rooted sets
       is single-rooted.  (See ~ funcnv for "single-rooted" definition.) $)
    funcnvuni $p |- ( A. f e. A ( Fun `' f /\ A. g e. A ( f C_ g \/ g C_ f ) )
                    -> Fun `' U. A ) $=
      ( vy vx vz vw vv cv ccnv wfun wss wo wral wa wceq wrex cab cuni wi wal 
      wcel wb cnveq funeq syl sseq1 sseq2 orbi12d ralbidv anbi12d rcla4v 
      biimprcd sseq12 ancoms cnvss orim12i syl5cbir exp3a syl6com r19.23adv 
      com23 19.21adv anim12ii eqeq2d cbvrexv syl5ib 19.21aiv df-ral visset 
      eqeq1 rexbidv elab ralab anbi2i imbi12i albii bitr2i sylib fununi ciun 
      cnvuni cnvex dfiun2 eqtri ax-mp sylibr ) BIZJZKZWHCIZLZWKWHLZMZCANZOZBANZ
      DIZEIZJZPZEAQZDRZSZKZASJZKZWQFIZKZXHGIZLZXJXHLZMZGXCNZOZFXCNZXEWQXHWTPZEA
      QZXIXJWTPZEAQZXMTZGUAZOZTZFUAZXPWQYDFWQXHHIZJZPZHAQYCXRWQYHYCHAYFAUBWQYGK
      ZYFWKLZWKYFLZMZCANZOZYHYCTWPYNBYFAWHYFPZWJYIWOYMYOWIYGPWJYIUCWHYFUDWIYGUE
      UFYOWNYLCAYOWLYJWMYKWHYFWKUGWHYFWKUHUIUJUKULYIYHXIYMYBYHXIYIXHYGUEUMYMYHY
      AGYMXTYHXMYMXSYHXMTZEAWSAUBYMYFWSLZWSYFLZMZXSYPTYLYSCWSAWKWSPYJYQYKYRWKWS
      YFUHWKWSYFUGUIULYSXSYHXMXSYHOZXMYGWTLZWTYGLZMYSYTXKUUAXLUUBYHXSXKUUAUCXHY
      GXJWTUNUOXJWTXHYGUNUIYQUUAYRUUBYFWSUPWSYFUPUQURUSUTVAVBVCVDUTVAXQYHEHAWSY
      FPWTYGXHWSYFUDVEVFVGVHXPXHXCUBZXOTZFUAYEXOFXCVIUUDYDFUUCXRXOYCXBXRDXHFVJW
      RXHPXAXQEAWRXHWTVKVLVMXNYBXIXBXTXMGDWRXJPXAXSEAWRXJWTVKVLVNVOVPVQVRVSXCFG
      VTUFXFXDPXGXEUCXFEAWTWAXDEAWBEDAWTWSEVJWCWDWEXFXDUEWFWG $.
      $( [11-Aug-2004] $)

    $( The union of a chain (with respect to inclusion) of one-to-one functions
       is a one-to-one function. $)
    fun11uni $p |- ( A. f e. A ( ( Fun f /\ Fun `' f ) /\
                   A. g e. A ( f C_ g \/ g C_ f ) ) ->
                   ( Fun U. A /\ Fun `' U. A ) ) $=
      ( cv wfun ccnv wa wss wo wral cuni simpl anim1i ralimi fununi syl simpr 
      funcnvuni jca ) BDZEZTFEZGZTCDZHUDTHICAJZGZBAJZAKZEZUHFEZUGUAUEGZBAJUIUFU
      KBAUCUAUEUAUBLMNABCOPUGUBUEGZBAJUJUFULBAUCUBUEUAUBQMNABCRPS $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y F $.  $d x y G $.
    $( The intersection with a function is a function.  Exercise 14(a) of
       [Enderton] p. 53.  (The proof was shortened by Andrew Salmon,
       17-Sep-2011.) $)
    funin $p |- ( Fun F -> Fun ( F i^i G ) ) $=
      ( cin wss wfun wi inss1 funss ax-mp ) ABCZADAEJEFABGJAHI $.
      $( [18-Sep-2011] $) $( [19-Mar-2004] $)
  $}

  $( The restriction of a one-to-one function is one-to-one. $)
  funres11 $p |- ( Fun `' F -> Fun `' ( F |` A ) ) $=
    ( cres ccnv wss wfun wi resss cnvss ax-mp funss ) BACZDZBDZEZNFMFGLBEOBAHLB
    IJMNKJ $.
    $( [25-Mar-1998] $)

  $( The converse of a restricted function. $)
  funcnvres $p |- ( Fun `' F -> `' ( F |` A ) = ( `' F |` ( F " A ) ) ) $=
    ( ccnv wfun cres cdm cima wss wceq resss cnvss ax-mp funssres mpan2 crn 
    df-ima df-rn eqtri reseq2i syl5req ) BCZDZUABAEZCZFZEZUDUABAGZEUBUDUAHZUFUD
    IUCBHUHBAJUCBKLUAUDMNUGUEUAUGUCOUEBAPUCQRST $.
    $( [27-Mar-1998] $)

  $( Converse of a restricted identity function.  (Contributed by FL,
     4-Mar-2007.) $)
  cnvresid $p |- `' ( _I |` A ) = ( _I |` A ) $=
    ( cid ccnv wfun cres wceq cnvi eqcomi funi funeq mpbii ax-mp cima 
    funcnvres reseq1 imai reseq2i syl6eq ) BCZDZBAEZCZUAFBSFZTSBGHUCBDTIBSJKLTU
    BSBAMZEZUAABNSBFZUEUAFGUFUEBUDEUASBUDOUDABAPQRLRL $.
    $( [20-Feb-2007] $)

  $( The converse of a restriction of the converse of a function equals the
     function restricted to the image of its converse. $)
  funcnvres2 $p |- ( Fun F -> `' ( `' F |` A ) = ( F |` ( `' F " A ) ) ) $=
    ( wfun ccnv cres cima wceq funcnvcnv funcnvres syl wrel funrel dfrel2 
    sylib reseq1 eqtrd ) BCZBDZAEDZRDZRAFZEZBUAEZQTCSUBGBHARIJQTBGZUBUCGQBKUDBL
    BMNTBUAOJP $.
    $( [4-May-2005] $)

  $( The image of the pre-image of a function. $)
  funimacnv $p |- ( Fun F -> ( F " ( `' F " A ) ) = ( A i^i ran F ) ) $=
    ( wfun ccnv cima cres crn cin funcnvres2 rneqd df-ima syl6reqr cdm df-rn 
    ineq2i dmres dfdm4 3eqtr2ri syl6eq ) BCZBBDZAEZEZUAAFZDZGZABGZHZTUFBUBFZGUC
    TUEUIABIJBUBKLUHAUAMZHUDMUFUGUJABNOUAAPUDQRS $.
    $( [25-May-2004] $)

  $( A kind of contraposition law that infers a subclass of an image from a
     pre-image subclass. $)
  funimass1 $p |- ( ( Fun F /\ A C_ ran F ) ->
                 ( ( `' F " A ) C_ B -> A C_ ( F " B ) ) ) $=
    ( wfun crn wss wa ccnv cima cin funimacnv wceq dfss biimpi eqcomd sylan9eq 
    sseq1d imass2 syl5bi ) CDZACEZFZGZCCHAIZIZCBIZFAUFFUDBFUCUEAUFTUBUEAUAJZAAC
    KUBAUGUBAUGLAUAMNOPQUDBCRS $.
    $( [25-May-2004] $)

  $( A kind of contraposition law that infers an image subclass from a subclass
     of a pre-image. $)
  funimass2 $p |- ( ( Fun F /\ A C_ ( `' F " B ) ) -> ( F " A ) C_ B ) $=
    ( wfun cima ccnv wss crn cin funimacnv sseq2d inss1 sstr2 mpi syl6bi imp 
    imass2 sylan2 ) CDZCAEZCCFBEZEZGZTBGZAUAGSUCUDSUCTBCHZIZGZUDSUBUFTBCJKUGUFB
    GUDBUELTUFBMNOPAUACQR $.
    $( [4-May-2007] $) $( [25-May-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( The image of a difference is the difference of images. $)
    imadif $p |- ( Fun `' F ->
                 ( F " ( A \ B ) ) = ( ( F " A ) \ ( F " B ) ) ) $=
      ( vy vx ccnv wfun cdif cima cv wcel wbr wa wex wn wal ax-17 hbe1 hban wi 
      wmo mopick funmo visset brcnv mobii sylib sylan con2d imnan 19.21ai ex 
      exancom alnex 3imtr3g anim2d anandir exbii 19.40 sylbi syl5 19.29r 
      sylan2br wo andi ianor anbi2i an32 pm3.24 intnan anass mtbir biorfi 
      bitri 3bitr4i impbid1 eldif anbi1i elima2 notbii anbi12i 3bitr4g eqrdv ) 
      CFZGZDCABHZIZCAIZCBIZHZWEEJZWFKZWKDJZCLZMZENZWMWHKZWMWIKZOZMZWMWGKWMWJKWE
      WKAKZWKBKZOZMZWNMZENZXAWNMZENZXBWNMZENZOZMZWPWTWEXFXLWEXHXCWNMZENZMZXLXFW
      EXNXKXHWEWNXCMZENZXIOZEPZXNXKWEXQXSWEXQMZXREWEXQEWEEQXPERSXTXBWNOZTXRXTWN
      XBWNEUAZXQWNXCTWEWNXCEUBWEWMWKWDLZEUAYBDEWDUCYCWNEWMWKCDUDZEUDUEUFUGUHUIX
      BWNUJUGUKULWNXCEUMXIEUNZUOUPXFXGXMMZENXOXEYFEXAXCWNUQURXGXMEUSUTVAXLXGXRM
      ZENZXFXHXSYHXKXGXREVBYEVCYGXEEXGXCYAVDZMXGXCMZXGYAMZVDZYGXEXGXCYAVEXRYIXG
      XBWNVFVGXEYJYLXAXCWNVHYKYJYKXAWNYAMZMYMXAWNVIVJXAWNYAVKVLVMVNVOURUGVPWOXE
      EWLXDWNWKABVQVRURWQXHWSXKEWMCAYDVSWRXJEWMCBYDVSVTWAWBEWMCWFYDVSWMWHWIVQWB
      WC $.
      $( [24-May-1998] $)
  $}

  $( The image of an intersection is the intersection of images.  (Contributed
     by Paul Chapman, 11-Apr-2009.) $)
  imain $p |- ( Fun `' F ->
                ( F " ( A i^i B ) ) = ( ( F " A ) i^i ( F " B ) ) ) $=
    ( ccnv wfun cdif cima cin imadif difeq2d eqtrd dfin4 imaeq2i 3eqtr4g ) CDEZ
    CAABFZFZGZCAGZSCBGZFZFZCABHZGSTHORSCPGZFUBAPCIOUDUASABCIJKUCQCABLMSTLN $.
    $( [11-Apr-2009] $)

  ${
    $d w B $.  $d x y z w A $.
    $( Axiom of Replacement using abbreviations.  Axiom 39(vi) of [Quine]
       p. 284.  Compare Exercise 9 of [TakeutiZaring] p. 29. $)
    funimaexg $p |- ( ( Fun A /\ B e. C ) -> ( A " B ) e. _V ) $=
      ( vw vx vy vz wcel wfun cima cvv cv wi wceq imaeq2 eleq1d imbi2d cop wal 
      wex wrel dffun5 simprbi wa wb ax-17 axrep4 isset cab dfima3 eqeq2i abeq2 
      bitri exbii sylibr syl vtoclg impcom ) BCHAIZABJZKHZUSADLZJZKHZMUSVAMDBCV
      BBNZVDVAUSVEVCUTKVBBAOPQUSELZFLZRAHZVGGLZNMFSGTESZVDUSAUAVJEFGAUBUCVJVGVI
      HVFVBHVHUDETZUEFSZGTZVDVHEFGDVHGUFUGVDVIVCNZGTVMGVCUHVNVLGVNVIVKFUIZNVLVC
      VOVIEFAVBUJUKVKFVIULUMUNUMUOUPUQUR $.
      $( [10-Sep-2006] $)
  $}

  ${
    zfrep5.1 $e |- B e. _V $.
    $( The image of a set under any function is also a set.  Equivalent of
       Axiom of Replacement ~ ax-rep .  Axiom 39(vi) of [Quine] p. 284.
       Compare Exercise 9 of [TakeutiZaring] p. 29. $)
    funimaex $p |- ( Fun A -> ( A " B ) e. _V ) $=
      ( wfun cvv wcel cima funimaexg mpan2 ) ADBEFABGEFCABEHI $.
      $( [17-Nov-2002] $)
  $}

  ${
    $d x z A $.  $d b x y z $.  $d z ph $.
    $( Part of a study of the Axiom of Replacement used by the Isabelle
       prover.  The object PrimReplace is apparently the image of the function
       encoded by ` ph ( x , y ) ` i.e. the class
       ` ( { <. x , y >. | ph } " A ) ` .  If so, we can prove Isabelle's
       "Axiom of Replacement" conclusion without using the Axiom of
       Replacement, for which I (N. Megill) currently have no explanation.
       (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    isarep1 $p |- ( b e. ( { <. x , y >. | ph } " A ) <->
                 E. x e. A [ b / y ] ph ) $=
      ( vz cv copab cima wcel wbr wrex wsbc visset elima cop df-br opelopabsb 
      bitri rexbii hbs1 hbsb ax-17 wceq sbequ12r sbbid cbvrex 3bitri ) EGZABCHZ
      DIJFGZUIUJKZFDLABUKMZCUIMZFDLACUIMZBDLFUIUJDENOULUNFDULUKUIPUJJUNUKUIUJQA
      BCFERSTUNUOFBDUMCEBABFUAUBUOFUCUKBGUDZUMACEUPCUCAFBUEUFUGUH $.
      $( [18-Sep-2011] $) $( [26-Oct-2006] $)
  $}

  ${
    $d w x y A $.  $d b x y $.  $d y z $.  $d w ph $.  $d z ph $.
    isarep2.1 $e |- A e. _V $.
    isarep2.2 $e |- A. x e. A A. y A. z ( ( ph /\ [ z / y ] ph ) -> y = z ) $.
    $( Part of a study of the Axiom of Replacement used by the Isabelle
       prover.  In Isabelle, the sethood of PrimReplace is apparently
       postulated implicitly by its type signature " ` [ ` i, ` [ ` i, i ` ] `
       => o ` ] ` => i", which automatically asserts that it is a set without
       using any axioms.  To prove that it is a set in Metamath, we need the
       hypotheses of Isabelle's "Axiom of Replacement" as well as the Axiom of
       Replacement in the form ~ funimaex . $)
    isarep2 $p |- E. w w = ( { <. x , y >. | ph } " A ) $=
      ( copab cima cvv wcel cv wceq wex wa cres resima resopab imaeq1i eqtr3i 
      wfun wmo funopab wi wsbc wal rspec ax-17 mo3 sylibr moanimv mpbir mpgbir 
      funimaex ax-mp eqeltri isset mpbi ) ABCIZFJZKLEMVANEOVABMFLZAPZBCIZFJZKUT
      FQZFJVAVEUTFRVFVDFABCFSTUAVDUBZVEKLVGVCCUCZBVCBCUDVHVBACUCZUEVBAACDMZUFPC
      MVJNUEDUGCUGZVIVKBFHUHACDADUIUJUKVBACULUMUNVDFGUOUPUQEVAURUS $.
      $( [26-Oct-2006] $)
  $}

  $( The restriction of a function to a set exists.  Compare Proposition 6.17
     of [TakeutiZaring] p. 28. $)
  resfunexg $p |- ( ( Fun A /\ B e. C ) -> ( A |` B ) e. _V ) $=
    ( wfun wcel wa cres cdm cvv crn cxp dmresexg adantl cima funimaexg df-ima 
    syl5eqelr jca xpexg wss wrel relres relssdmrn ax-mp ssexg mpan 3syl ) ADZBC
    EZFZABGZHZIEZUKJZIEZFULUNKZIEZUKIEZUJUMUOUIUMUHABCLMUJABNIUNABCOABPQRULUNII
    SUKUPTZUQURUKUAUSABUBUKUCUDUKUPIUEUFUG $.
    $( [12-Sep-2006] $) $( [7-Apr-1995] $)

  $( Existence of a composition when the first member is a function. $)
  cofunexg $p |- ( ( Fun A /\ B e. C ) -> ( A o. B ) e. _V ) $=
    ( ccom cdm crn cxp wss cvv wcel wfun wa ssexg wrel relco relssdmrn ax-mp 
    dmcoss dmexg sylancr adantl cres resfunexg rnexg sylan2 syl rnco syl5eqel 
    xpexg syl11anc ) ABDZUKEZUKFZGZHZUNIJZUKIJAKZBCJZLZUKUNIMUKNUOABOUKPQUSULIJ
    ZUMIJUPURUTUQULBEZHVAIJUTURULVAIMABRBCSTUAUSABFZUBZFZIUMUSVCIJZVDIJUQVBIJVE
    URAVBIUCBCUDUEVCIUDUFABUGUHULUMIIUIUJT $.
    $( [8-Oct-2007] $)

  $( Existence of a composition when the second member is one-to-one. $)
  cofunex2g $p |- ( ( A e. C /\ Fun `' B ) -> ( A o. B ) e. _V ) $=
    ( ccnv wfun wcel ccom cvv wa cofunexg cnvexg sylan2 cnvco cocnvcnv2 
    cocnvcnv1 3eqtrri syl5eqel syl ancoms ) BDZEZACFZABGZHFZUAUBITADZGZHFZUDUAU
    EHFUGUBTUEHJACKLUGUFDZHUCUFHKUHUEDZTDGUIBGUCTUEMUIBNABOPQRS $.
    $( [8-Oct-2007] $)

  $( Equality theorem for function predicate with domain. $)
  fneq1 $p |- ( F = G -> ( F Fn A <-> G Fn A ) ) $=
    ( wceq wfun cdm wa wfn funeq dmeq eqeq1d anbi12d df-fn 3bitr4g ) BCDZBEZBFZ
    ADZGCEZCFZADZGBAHCAHOPSRUABCIOQTABCJKLBAMCAMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for function predicate with domain. $)
  fneq2 $p |- ( A = B -> ( F Fn A <-> F Fn B ) ) $=
    ( wceq wfun cdm wa wfn eqeq2 anbi2d df-fn 3bitr4g ) ABDZCEZCFZADZGNOBDZGCAH
    CBHMPQNABOIJCAKCBKL $.
    $( [1-Aug-1994] $)

  ${
    fneq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq1d $p |- ( ph -> ( F Fn A <-> G Fn A ) ) $=
      ( wceq wfn wb fneq1 syl ) ACDFCBGDBGHEBCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq2d $p |- ( ph -> ( F Fn A <-> F Fn B ) ) $=
      ( wceq wfn wb fneq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq12d.1 $e |- ( ph -> F = G ) $.
    fneq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function predicate with domain. $)
    fneq12d $p |- ( ph -> ( F Fn A <-> G Fn B ) ) $=
      ( wfn fneq1d fneq2d bitrd ) ADBHEBHECHABDEFIABCEGJK $.
      $( [26-Jun-2011] $)
  $}

  ${
    fneq1i.1 $e |- F = G $.
    $( Equality inference for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq1i $p |- ( F Fn A <-> G Fn A ) $=
      ( wceq wfn wb fneq1 ax-mp ) BCEBAFCAFGDABCHI $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq2i.1 $e |- A = B $.
    $( Equality inference for function predicate with domain. $)
    fneq2i $p |- ( F Fn A <-> F Fn B ) $=
      ( wceq wfn wb fneq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [4-Sep-2011] $)
  $}

  ${
    $d y F $.  $d y A $.  $d x y $.
    hbfn.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbfn.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for a function with domain. $)
    hbfn $p |- ( F Fn A -> A. x F Fn A ) $=
      ( wfun cdm wceq wa wal wfn hbfun hbdm hbeq hban df-fn albii 3imtr4i ) DGZ
      DHZCIZJZUCAKDCLZUDAKTUBAABDEMABBUACABDENFOPDCQZUDUCAUERS $.
      $( [30-Jan-2004] $)
  $}

  $( A function with domain is a function. $)
  fnfun $p |- ( F Fn A -> Fun F ) $=
    ( wfn wfun cdm wceq df-fn simplbi ) BACBDBEAFBAGH $.
    $( [1-Aug-1994] $)

  $( A function with domain is a relation. $)
  fnrel $p |- ( F Fn A -> Rel F ) $=
    ( wfn wfun wrel fnfun funrel syl ) BACBDBEABFBGH $.
    $( [1-Aug-1994] $)

  $( The domain of a function. $)
  fndm $p |- ( F Fn A -> dom F = A ) $=
    ( wfn wfun cdm wceq df-fn simprbi ) BACBDBEAFBAGH $.
    $( [2-Aug-1994] $)

  ${
    funfni.1 $e |- ( ( Fun F /\ B e. dom F ) -> ph ) $.
    $( Inference to convert a function and domain antecedent. $)
    funfni $p |- ( ( F Fn A /\ B e. A ) -> ph ) $=
      ( wfn wcel wa wfun cdm fnfun adantr fndm eleq2d biimpar syl11anc ) DBFZCB
      GZHDIZCDJZGZAQSRBDKLQUARQTBCBDMNOEP $.
      $( [22-Apr-2004] $)
  $}

  $( A function has a unique domain. $)
  fndmu $p |- ( ( F Fn A /\ F Fn B ) -> A = B ) $=
    ( wfn cdm fndm sylan9req ) CADCBDACEBACFBCFG $.
    $( [11-Aug-1994] $)

  $( The first argument of binary relation on a function belongs to the
     function's domain. $)
  fnbr $p |- ( ( F Fn A /\ B F C ) -> B e. A ) $=
    ( wfn wbr cdm wcel cvv wrel brrelex fnrel sylan breldmg sylancom fndm 
    eleq2d biimpa syldan ) DAEZBCDFZBDGZHZBAHZTUABIHZUCDJUAUETBCDKADLMBCIDNOTUC
    UDTUBABADPQRS $.
    $( [24-Mar-2007] $) $( [7-May-2004] $)

  $( The first argument of an ordered pair in a function belongs to the
     function's domain. $)
  fnop $p |- ( ( F Fn A /\ <. B , C >. e. F ) -> B e. A ) $=
    ( wfn wbr wcel cop fnbr df-br sylan2br ) DAEBCDFBAGBCHDGABCDIBCDJK $.
    $( [25-Mar-2007] $) $( [8-Aug-1994] $)

  ${
    $d x y F $.  $d x y B $.  $d x A $.
    $( There is exactly one value of a function.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    fneu $p |- ( ( F Fn A /\ B e. A ) -> E! y B F y ) $=
      ( vx cv wbr weu cdm wcel wfun wi wceq breq1 eubidv imbi2d wex visset 
      eldm wmo exmoeu2 funmo syl5bi sylbi vtoclga impcom funfni ) CAFZDGZAHZBCD
      CDIZJDKZUJULEFZUHDGZAHZLZULUJLECUKUMCMZUOUJULUQUNUIAUMCUHDNOPUMUKJUNAQZUP
      AUMDERSURUNATUOULUNAUAEADUBUCUDUEUFUG $.
      $( [18-Sep-2011] $) $( [22-Apr-2004] $)

    $( There is exactly one value of a function. $)
    fneu2 $p |- ( ( F Fn A /\ B e. A ) -> E! y <. B , y >. e. F ) $=
      ( wfn wcel wa cv wbr weu cop fneu df-br eubii sylib ) DBECBFGCAHZDIZAJCPK
      DFZAJABCDLQRACPDMNO $.
      $( [7-Nov-1995] $)
  $}

  $( The union of two functions with disjoint domains. $)
  fnun $p |- ( ( ( F Fn A /\ G Fn B ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) Fn ( A u. B ) ) $=
    ( wfn wa cin c0 wceq cun wfun cdm wi ineq12 eqeq1d anbi2d funun syl6bir 
    uneq12 dmun syl5eq jctird df-fn syl6ibr exp3a impcom an4s syl2anb imp ) CAE
    ZDBEZFABGZHIZCDJZABJZEZCKZCLZAIZFDKZDLZBIZFUMUPMZUJUKUQUTUSVBVCUSVBFZUQUTFZ
    VCVDVEUMUPVDVEUMFZUNKZUNLZUOIZFUPVDVFVGVIVDVFVEURVAGZHIZFVGVDVKUMVEVDVJULHU
    RAVABNOPCDQRVDURVAJUOVHURAVABSCDTUAUBUNUOUCUDUEUFUGCAUCDBUCUHUI $.
    $( [22-Sep-2004] $)

  $( Composition of two functions. $)
  fnco $p |- ( ( F Fn A /\ G Fn B /\ ran G C_ A ) -> ( F o. G ) Fn B ) $=
    ( ccom wfn wfun cdm wceq crn wss w3a df-fn funco fnfun syl2an 3adant3 wa 
    fndm sseq2d biimpar dmcosseq syl 3adant2 3ad2ant2 eqtrd sylanbrc ) CDEZBFUH
    GZUHHZBICAFZDBFZDJZAKZLZUHBMUKULUIUNCGDGUIUKULCDNACOBDOPQUOUJDHZBUKUNUJUPIZ
    ULUKUNRUMCHZKZUQUKUSUNUKURAUMACSTUACDUBUCUDULUKUPBIUNBDSUEUFUG $.
    $( [22-May-2006] $)

  $( A function does not change when restricted to its domain. $)
  fnresdm $p |- ( F Fn A -> ( F |` A ) = F ) $=
    ( wfn wrel cdm wss cres wceq fnrel fndm eqimss syl relssres syl11anc ) BACZ
    BDBEZAFZBAGBHABIOPAHQABJPAKLBAMN $.
    $( [5-Sep-2004] $)

  $( A function restricted to a class disjoint with its domain is empty. $)
  fnresdisj $p |- ( F Fn A -> ( ( A i^i B ) = (/) <-> ( F |` B ) = (/) ) ) $=
    ( wfn cres cdm c0 wceq cin fndm ineq1d dmres incom eqtri syl5eq eqeq1d 
    wrel wb relres reldm0 ax-mp syl5rbb ) CADZCBEZFZGHZABIZGHUDGHZUCUEUGGUCCFZB
    IZUGUEUCUIABACJKUEBUIIUJCBLBUIMNOPUDQUHUFRCBSUDTUAUB $.
    $( [23-Sep-2004] $)

  $( Membership in two functions restricted by each other's domain. $)
  2elresin $p |- ( ( F Fn A /\ G Fn B ) ->
                 ( ( <. x , y >. e. F /\ <. x , z >. e. G ) <->
                   ( <. x , y >. e. ( F |` ( A i^i B ) ) /\
                     <. x , z >. e. ( G |` ( A i^i B ) ) ) ) ) $=
    ( wfn wa cv cop wcel cin cres wi fnop anim12i an4 elin 3imtr4i visset 
    opres anbi12d biimprd syl ex pm2.43d resss sseli impbid1 ) FDHZGEHZIZAJZBJZ
    KZFLZUNCJZKZGLZIZUPFDEMZNZLZUSGVBNZLZIZUMVAVGUMVAVAVGOZUMVAIZUNVBLZVHUKUQIZ
    ULUTIZIUNDLZUNELZIVIVJVKVMVLVNDUNUOFPEUNURGPQUKULUQUTRUNDESTVJVGVAVJVDUQVFU
    TUNUOFVBBUAUBUNURGVBCUAUBUCUDUEUFUGVDUQVFUTVCFUPFVBUHUIVEGUSGVBUHUIQUJ $.
    $( [8-Aug-1994] $)

  $( Restriction of a function with a subclass of its domain. $)
  fnssresb $p |- ( F Fn A -> ( ( F |` B ) Fn B <-> B C_ A ) ) $=
    ( wfn cres wfun cdm wceq wa wss fnfun funres syl biantrurd fndm sseq2d 
    ssdmres syl5bbr bitr3d df-fn syl5bb ) CADZCBEZFZUCGBHZIZBAJZUCBDUBUEUFUGUBU
    DUEUBCFUDACKBCLMNUBBCGZJUGUEUBUHABACOPBCQRSUCBTUA $.
    $( [10-Oct-2007] $)

  $( Restriction of a function with a subclass of its domain. $)
  fnssres $p |- ( ( F Fn A /\ B C_ A ) -> ( F |` B ) Fn B ) $=
    ( wfn cres wss fnssresb biimpar ) CADCBEBDBAFABCGH $.
    $( [25-Sep-2004] $) $( [2-Aug-1994] $)

  $( Restriction of a function's domain with an intersection. $)
  fnresin1 $p |- ( F Fn A -> ( F |` ( A i^i B ) ) Fn ( A i^i B ) ) $=
    ( wfn cin wss cres inss1 fnssres mpan2 ) CADABEZAFCKGKDABHAKCIJ $.
    $( [9-Aug-1994] $)

  $( Restriction of a function's domain with an intersection. $)
  fnresin2 $p |- ( F Fn A -> ( F |` ( B i^i A ) ) Fn ( B i^i A ) ) $=
    ( wfn cin wss cres inss2 fnssres mpan2 ) CADBAEZAFCKGKDBAHAKCIJ $.
    $( [9-Aug-1994] $)

  $( Functionality and domain of restricted identity. $)
  fnresi $p |- ( _I |` A ) Fn A $=
    ( cid cres wfn wfun cdm wceq df-fn funi funres ax-mp dmresi mpbir2an ) BACZ
    ADNEZNFAGNAHBEOIABJKALM $.
    $( [27-Aug-2004] $)

  $( The image of a function's domain is its range.  (The proof was shortened
     by Andrew Salmon, 17-Sep-2011.) $)
  fnima $p |- ( F Fn A -> ( F " A ) = ran F ) $=
    ( wfn cres crn cima fnresdm rneqd df-ima syl5eq ) BACZBADZEBEBAFKLBABGHBAIJ
    $.
    $( [18-Sep-2011] $) $( [4-Nov-2004] $)

  ${
    $d x y F $.
    $( A function with empty domain is empty.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    fn0 $p |- ( F Fn (/) <-> F = (/) ) $=
      ( c0 wfn wceq wrel cdm fnrel fndm reldm0 biimpar syl11anc wfun df-fn 
      fun0 dm0 mpbir2an fneq1 mpbiri impbii ) ABCZABDZTAEZAFBDZUABAGBAHUBUAUCAI
      JKUATBBCZUDBLBFBDBBMNOPBABQRS $.
      $( [18-Sep-2011] $) $( [15-Apr-1998] $)
  $}

  $( A class that is disjoint with the domain of a function has an empty image
     under the function.  (Contributed by FL, 24-Jan-2007.) $)
  fnimadisj $p |- ( ( F Fn A /\ ( A i^i C ) = (/) ) -> ( F " C ) = (/) ) $=
    ( wfn cin c0 wceq wa cdm cima fndm ineq1d eqeq1d biimpar imadisj sylibr ) 
    CADZABEZFGZHCIZBEZFGZCBJFGQUBSQUARFQTABACKLMNCBOP $.
    $( [23-Jan-2007] $)

  $( If the domain of a function is a set, the function is a set.  Theorem
     6.16(1) of [TakeutiZaring] p. 28.  This theorem is derived using the Axiom
     of Replacement in the form of ~ resfunexg .  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.) $)
  fnex $p |- ( ( F Fn A /\ A e. B ) -> F e. _V ) $=
    ( wfn wcel wa wrel cdm cres cvv fnrel adantr wfun wceq resfunexg eleq1a 
    impcom sylan2 anassrs df-fn sylanb resdm eleq1d biimpa syl11anc ) CADZABEZF
    CGZCCHZIZJEZCJEZUFUHUGACKLCMZUIANZFUGUKUFUMUNUGUKUMUIBEZUKUNUGFCUIBOUGUNUOA
    BUIPQRSCATUAUHUKULUHUJCJCUBUCUDUE $.
    $( [18-Sep-2011] $) $( [14-Aug-1994] $)

  $( If the domain of a function is a set, the function is a set.  Theorem
     6.16(1) of [TakeutiZaring] p. 28.  This theorem is derived using the Axiom
     of Replacement in the form of ~ funimaexg . $)
  fnexALT $p |- ( ( F Fn A /\ A e. B ) -> F e. _V ) $=
    ( wfn wcel wa cdm crn cxp wss cvv wrel fnrel relssdmrn syl adantr fndm 
    eleq1d biimpar cima wfun funimaexg fnfun sylan imaeq2d imadmrn syl5eqr 
    syldan xpexg syl11anc ssexg ) CADZABEZFZCCGZCHZIZJZUQKEZCKEULURUMULCLURACMC
    NOPUNUOBEZUPKEZUSULUTUMULUOABACQZRSULUMCATZKEZVACUAUMVDULCABUBACUCUDULVAVDU
    LUPVCKULCUOTVCUPULUOACVBUECUFUGRSUHUOUPBKUIUJCUQKUKUJ $.
    $( [11-Sep-2006] $) $( [14-Aug-1994] $)

  $( If the domain of a function exists, so the function.  Part of Theorem
     4.15(v) of [Monk1] p. 46.  This theorem is derived using the Axiom of
     Replacement in the form of ~ fnex .  (Note:  Any resemblance between
     F.U.N.E.X. and "Have You Any Eggs" is purely a coincidence originated by
     Swedish chefs.) $)
  funex $p |- ( ( Fun F /\ dom F e. B ) -> F e. _V ) $=
    ( cdm wfn wcel cvv wfun fnex funfn sylanb ) BBCZDKAEBFEBGKABHBIJ $.
    $( [9-Sep-2006] $) $( [11-Nov-1995] $)

  ${
    $d x y A $.
    opabex.1 $e |- A e. _V $.
    opabex.2 $e |- ( x e. A -> E* y ph ) $.
    $( Existence of a function expressed as class of ordered pairs. $)
    opabex $p |- { <. x , y >. | ( x e. A /\ ph ) } e. _V $=
      ( cv wcel wa copab wfun cdm cvv wmo funopab wi moanimv mpbir mpgbir 
      dmopabss ssexi funex mp2an ) BGDHZAIZBCJZKZUFLZMHUFMHUGUECNZBUEBCOUIUDACN
      PFUDACQRSUHDEABCDTUAMUFUBUC $.
      $( [21-Jul-1996] $)
  $}

  ${
    $d x y A $.  $d y B $.
    opabex2.1 $e |- A e. _V $.
    $( Existence of a function expressed as class of ordered pairs. $)
    opabex2 $p |- { <. x , y >. | ( x e. A /\ y = B ) } e. _V $=
      ( cv wceq wmo wcel moeq a1i opabex ) BFDGZABCEMBHAFCIBDJKL $.
      $( [22-Apr-2005] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( Existence of a function expressed as class of ordered pairs. $)
    opabex2g $p |- ( A e. C ->
                      { <. x , y >. | ( x e. A /\ y = B ) } e. _V ) $=
      ( cv wcel wceq wa copab wfun cdm cvv funex wmo funopab moeq moani mpgbir 
      wss dmopabss ssexg mpan sylancr ) AFCGZBFDHZIZABJZKZUHLZMGZUHMGCEGZMUHNUI
      UGBOAUGABPUFUEBBDQRSUJCTULUKUFABCUAUJCEUBUCUD $.
      $( [9-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fopabex2.1 $e |- A e. _V $.
    fopabex2.3 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Existence of a function expressed as class of ordered pairs. $)
    fopabex2 $p |- F e. _V $=
      ( cv wcel wceq wa copab cvv opabex2 eqeltri ) EAHCIBHDJKABLMGABCDFNO $.
      $( [30-Jul-2007] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    iunfopab.1 $e |- B e. _V $.
    $( Two ways to express a function as a class of ordered pairs.  (The proof
       was shortened by Andrew Salmon, 17-Sep-2011.)  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Sep-2011.) $)
    iunfopab $p |- U_ x e. A { <. x , B >. }
                    = { <. x , y >. | ( x e. A /\ y = B ) } $=
      ( vz cv cop csn wcel wrex cab wceq wa wex ciun copab df-rex elsn anbi2i 
      opeq2 eqeq2d anbi2d ceqsexv w3a 3anrev 3anass 3bitr3i exbii 3bitr2i 
      bitri abbii df-iun df-opab 3eqtr4i ) FGZAGZDHZIZJZACKZFLUPUQBGZHZMZUQCJZV
      BDMZNZNZBOZAOZFLACUSPVGABQVAVJFVAVEUTNZAOVJUTACRVKVIAVKVEUPURMZNZVFVEVDNZ
      NZBOVIUTVLVEFURSTVNVMBDEVFVDVLVEVFVCURUPVBDUQUAUBUCUDVOVHBVFVEVDUEVDVEVFU
      EVOVHVFVEVDUFVFVEVDUGVDVEVFUGUHUIUJUIUKULAFCUSUMVGABFUNUO $.
      $( [19-Sep-2011] $) $( [19-Dec-2008] $)
  $}

  $( If the domain of a function exists, so does its range.  Part of Theorem
     4.15(v) of [Monk1] p. 46.  This theorem is derived using the Axiom of
     Replacement in the form of ~ funex . $)
  funrnex $p |- ( dom F e. B -> ( Fun F -> ran F e. _V ) ) $=
    ( wfun cdm wcel cvv crn funex ex rnexg syl6com ) BCZBDAEZBFEZBGFELMNABHIBFJ
    K $.
    $( [11-Nov-1995] $)

  ${
    $d ph w v $.  $d x y z w v $.
    $( A version of the Axiom of Replacement.  Normally ` ph ` would have free
       variables ` x ` and ` y ` .  Axiom 6 of [Kunen] p. 12.  The Separation
       Scheme ~ ax-sep cannot be derived from this version and must be stated
       as a separate axiom in an axiom system (such as Kunen's) that uses this
       version in place of our ~ ax-rep . $)
    zfrep6 $p |- ( A. x e. z E! y ph -> E. w A. x e. z E. y e. w ph ) $=
      ( vv weu cv wral wcel wa copab crn cvv wrex wex cdm wfun crab wceq euex 
      ralimi rabid2 sylibr cab 19.42v abbii dmopab df-rab 3eqtr4i syl6reqr 
      visset syl6eqel wi wal wmo eumo imim2i moanimv alimi df-ral funopab 
      3imtr4i funrnex sylc hbra1 eleq2d cop opabid opelrn sylbir ex impac 
      eximi abeq2i df-rex syl6bir r19.21ai ax-17 hbopab1 hbrn hbeleq hbopab2 
      rexeqf ralbid cla4egf ) ACGZBDHZIZBHZWHJZAKZBCLZMZNJZACWNOZBWHIZACEHZOZBW
      HIZEPWIWMQZNJWMRZWOWIXAWHNWIWHACPZBWHSZXAWIXCBWHIWHXDTWGXCBWHACUAUBXCBWHU
      CUDWLCPZBUEWKXCKZBUEXAXDXEXFBWKACUFUGWLBCUHZXCBWHUIUJUKZDULUMWKWGUNZBUOWL
      CUPZBUOWIXBXIXJBXIWKACUPZUNXJWGXKWKACUQURWKACUSUDUTWGBWHVAWLBCVBVCNWMVDVE
      WIWPBWHWGBWHVFWIWKWJXAJZWPWIXAWHWJXHVGXECHZWNJZAKZCPXLWPWLXOCWKAXNWKAXNWL
      WJXMVHWMJXNWLBCVIWJXMWMBULCULVJVKVLVMVNXEBXAXGVOACWNVPVCVQVRWTWQEFWNNFHZW
      NJEVSWQEVSWRWNTWSWPBWHBEWNBEWMWLBCEVTWAWBACFWRWNXPWRJCVSCFWMWLBCFWCWAWDWE
      WFVE $.
      $( [10-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d z F $.  $d x y z w $.
    fnopabg.1 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopabg $p |- ( A. x e. A E! y ph <-> F Fn A ) $=
      ( vz vw weu wral wfn cv wcel wa copab wfun cdm wceq df-fn wmo wal hbra1 
      wi ra4 eumo imim2i moanimv sylibr syl 19.21ai funopab wex euex ralimi 
      dmopab3 sylib sylanbrc fneq1i hbopab1 hbxfr ax-17 hbfn cop fneu2 hbopab2 
      hbel opeq2 eleq1d cbveu eleq2i opabid bitri eubii euanv simprbi ex 
      r19.21ai impbii ) ACIZBDJZEDKZVTBLZDMZANZBCOZDKZWAWFWEPZWEQDRZVTWEDSVTWDC
      TZBUAWGVTWIBVSBDUBVTWCVSUCZWIVSBDUDWJWCACTZUCWIVSWKWCACUEUFWCACUGUHUIUJWD
      BCUKUHVTACULZBDJWHVSWLBDACUMUNABCDUOUPUQDEWEFURUHWAVSBDBGDEBGEWEFWDBCGUSU
      TGLZDMBVAVBWAWCVSWAWCNZWBCLZVCZEMZCIZVSWNWBWMVCZEMZGIWRGDWBEVDWTWQGCCHGWS
      EHLWSMCVACGEWEFWDBCGVEUTVFWQGVAWMWORWSWPEWMWOWBVGVHVIUPWRWCVSWRWDCIWCVSNW
      QWDCWQWPWEMWDEWEWPFVJWDBCVKVLVMWCACVNVLVOUIVPVQVR $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fnopab2g.1 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopab2g $p |- ( A. x e. A B e. _V <-> F Fn A ) $=
      ( cvv wcel wral cv wceq weu wfn eueq ralbii fnopabg bitri ) DGHZACIBJDKZB
      LZACIECMRTACBDNOSABCEFPQ $.
      $( [23-Mar-2006] $)
  $}

  ${
    $d x y A $.
    fnopab.1 $e |- ( x e. A -> E! y ph ) $.
    fnopab.2 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopab $p |- F Fn A $=
      ( weu wral wfn rgen fnopabg mpbi ) ACHZBDIEDJNBDFKABCDEGLM $.
      $( [5-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fnopab2.1 $e |- B e. _V $.
    fnopab2.2 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopab2 $p |- F Fn A $=
      ( cv wceq weu wcel eueq1 a1i fnopab ) BHDIZABCEOBJAHCKBDFLMGN $.
      $( [29-Jan-2004] $)

    $( Domain of an ordered-pair class abstraction that specifies a
       function. $)
    dmopab2 $p |- dom F = A $=
      ( wfn cdm wceq fnopab2 fndm ax-mp ) ECHEICJABCDEFGKCELM $.
      $( [6-Sep-2005] $)
  $}

  $( Equality theorem for functions. $)
  feq1 $p |- ( F = G -> ( F : A --> B <-> G : A --> B ) ) $=
    ( wceq wfn crn wss wa wf fneq1 rneq sseq1d anbi12d df-f 3bitr4g ) CDEZCAFZC
    GZBHZIDAFZDGZBHZIABCJABDJQRUATUCACDKQSUBBCDLMNABCOABDOP $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions. $)
  feq2 $p |- ( A = B -> ( F : A --> C <-> F : B --> C ) ) $=
    ( wceq wfn crn wss wa wf fneq2 anbi1d df-f 3bitr4g ) ABEZDAFZDGCHZIDBFZQIAC
    DJBCDJOPRQABDKLACDMBCDMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions. $)
  feq3 $p |- ( A = B -> ( F : C --> A <-> F : C --> B ) ) $=
    ( wceq wfn crn wss wa wf sseq2 anbi2d df-f 3bitr4g ) ABEZDCFZDGZAHZIPQBHZIC
    ADJCBDJORSPABQKLCADMCBDMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions.  (Contributed by FL, 14-Jul-2007.)  (The
     proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
  feq23 $p |- ( ( A = C /\ B = D ) -> ( F : A --> B <-> F : C --> D ) ) $=
    ( wceq wf feq2 feq3 sylan9bb ) ACFABEGCBEGBDFCDEGACBEHBDCEIJ $.
    $( [18-Sep-2011] $) $( [14-Jul-2007] $)

  ${
    feq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for functions. $)
    feq1d $p |- ( ph -> ( F : A --> B <-> G : A --> B ) ) $=
      ( wceq wf wb feq1 syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [19-Feb-2008] $)
  $}

  ${
    feq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq2d $p |- ( ph -> ( F : A --> C <-> F : B --> C ) ) $=
      ( wceq wf wb feq2 syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    feq12d.1 $e |- ( ph -> F = G ) $.
    feq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq12d $p |- ( ph -> ( F : A --> C <-> G : B --> C ) ) $=
      ( wf feq1d feq2d bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    feq1i.1 $e |- F = G $.
    $( Equality inference for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq1i $p |- ( F : A --> B <-> G : A --> B ) $=
      ( wceq wf wb feq1 ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    feq2i.1 $e |- A = B $.
    $( Equality inference for functions. $)
    feq2i $p |- ( F : A --> C <-> F : B --> C ) $=
      ( wceq wf wb feq2 ax-mp ) ABFACDGBCDGHEABCDIJ $.
      $( [5-Sep-2011] $)
  $}

  ${
    feq23i.1 $e |- A = C $.
    feq23i.2 $e |- B = D $.
    $( Equality inference for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq23i $p |- ( F : A --> B <-> F : C --> D ) $=
      ( wceq wf wb feq23 mp2an ) ACHBDHABEICDEIJFGABCDEKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbf.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbf.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbf.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a mapping. $)
    hbf $p |- ( F : A --> B -> A. x F : A --> B ) $=
      ( wfn crn wss wa wal wf hbfn hbrn hbss hban df-f albii 3imtr4i ) ECIZEJZD
      KZLZUEAMCDENZUFAMUBUDAABCEFGOABUCDABEFPHQRCDESZUFUEAUGTUA $.
      $( [29-Jan-2004] $)
  $}

  ${
    elimf.1 $e |- G : A --> B $.
    $( Eliminate a mapping hypothesis for the weak deduction theorem ~ dedth ,
       when a special case ` G : A --> B ` is provable, in order to convert
       ` F : A --> B ` from a hypothesis to an antecedent. $)
    elimf $p |- if ( F : A --> B , F , G ) : A --> B $=
      ( wf cif feq1 elimhyp ) ABCFZABJCDGZFABDFCDABCKHABDKHEI $.
      $( [24-Aug-2006] $)
  $}

  $( A mapping is a function. $)
  ffn $p |- ( F : A --> B -> F Fn A ) $=
    ( wf wfn crn wss df-f simplbi ) ABCDCAECFBGABCHI $.
    $( [2-Aug-1994] $)

  $( Any function is a mapping into ` _V ` .  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.) $)
  dffn2 $p |- ( F Fn A <-> F : A --> _V ) $=
    ( wfn crn cvv wss wa wf ssv biantru df-f bitr4i ) BACZMBDZEFZGAEBHOMNIJAEBK
    L $.
    $( [18-Sep-2011] $) $( [31-Oct-1995] $)

  $( A mapping is a function. $)
  ffun $p |- ( F : A --> B -> Fun F ) $=
    ( wf wfn wfun ffn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [3-Aug-1994] $)

  $( A mapping is a relation. $)
  frel $p |- ( F : A --> B -> Rel F ) $=
    ( wf wfn wrel ffn fnrel syl ) ABCDCAECFABCGACHI $.
    $( [3-Aug-1994] $)

  $( The domain of a mapping. $)
  fdm $p |- ( F : A --> B -> dom F = A ) $=
    ( wf wfn cdm wceq ffn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [2-Aug-1994] $)

  ${
    fdmi.1 $e |- F : A --> B $.
    $( The domain of a mapping. $)
    fdmi $p |- dom F = A $=
      ( wf cdm wceq fdm ax-mp ) ABCECFAGDABCHI $.
      $( [28-Jul-2008] $)
  $}

  $( The range of a mapping. $)
  frn $p |- ( F : A --> B -> ran F C_ B ) $=
    ( wf wfn crn wss df-f simprbi ) ABCDCAECFBGABCHI $.
    $( [3-Aug-1994] $)

  $( A function maps to its range. $)
  dffn3 $p |- ( F Fn A <-> F : A --> ran F ) $=
    ( wfn crn wss wa wf ssid biantru df-f bitr4i ) BACZLBDZMEZFAMBGNLMHIAMBJK 
    $.
    $( [1-Sep-1999] $)

  $( Expanding the codomain of a mapping.  (The proof was shortened by Andrew
     Salmon, 17-Sep-2011.) $)
  fss $p |- ( ( F : A --> B /\ B C_ C ) -> F : A --> C ) $=
    ( wss wf wfn crn wa sstr2 com12 anim2d df-f 3imtr4g impcom ) BCEZABDFZACDFZ
    PDAGZDHZBEZISTCEZIQRPUAUBSUAPUBTBCJKLABDMACDMNO $.
    $( [18-Sep-2011] $) $( [10-May-1998] $)

  $( Composition of two mappings.  (The proof was shortened by Andrew Salmon,
     17-Sep-2011.) $)
  fco $p |- ( ( F : B --> C /\ G : A --> B ) -> ( F o. G ) : A --> C ) $=
    ( wfn crn wss wa ccom wf wi fnco 3expib adantr rncoss sstr mpan adantl 
    jctird imp df-f anbi12i 3imtr4i ) DBFZDGZCHZIZEAFZEGBHZIZIDEJZAFZULGZCHZIZB
    CDKZABEKZIACULKUHUKUPUHUKUMUOUEUKUMLUGUEUIUJUMBADEMNOUGUOUEUNUFHUGUODEPUNUF
    CQRSTUAUQUHURUKBCDUBABEUBUCACULUBUD $.
    $( [18-Sep-2011] $) $( [29-Aug-1999] $)

  $( A mapping is a class of ordered pairs.  (The proof was shortened by Andrew
     Salmon, 17-Sep-2011.) $)
  fssxp $p |- ( F : A --> B -> F C_ ( A X. B ) ) $=
    ( wf cdm crn cxp wss wceq fdm eqimss syl frn xpss12 syl11anc wrel wi frel 
    relssdmrn sstr2 3syl mpd ) ABCDZCEZCFZGZABGZHZCUGHZUCUDAHZUEBHUHUCUDAIUJABC
    JUDAKLABCMUDAUEBNOUCCPCUFHUHUIQABCRCSCUFUGTUAUB $.
    $( [18-Sep-2011] $) $( [3-Aug-1994] $)

  $( Two ways of specifying a partial function from ` A ` to ` B ` . $)
  funssxp $p |- ( ( Fun F /\ F C_ ( A X. B ) ) <->
             ( F : dom F --> B /\ dom F C_ A ) ) $=
    ( wfun cxp wss wa cdm wf wfn crn funfn biimpi sstr rnss rnxpss sylancl 
    anim12i df-f sylibr dmss dmxpss adantl jca ffun adantr fssxp ssid xpss12 
    mpan2 sylan9ss impbii ) CDZCABEZFZGZCHZBCIZUQAFZGZUPURUSUPCUQJZCKZBFZGURUMV
    AUOVCUMVACLMVBUNKZFVDBFVCUOVBVDBNCUNOABPQRUQBCSTUOUSUMUQUNHZFVEAFUSUOUQVEAN
    CUNUAABUBQUCUDUTUMUOURUMUSUQBCUEUFURUSCUQBEZUNUQBCUGUSBBFVFUNFBUHUQABBUIUJU
    KUDUL $.
    $( [13-Nov-2007] $)

  $( A mapping is a partial function. $)
  ffdm $p |- ( F : A --> B -> ( F : dom F --> B /\ dom F C_ A ) ) $=
    ( wf cdm wss fdm feq2d ibir wceq eqimss syl jca ) ABCDZCEZBCDZOAFZNPNOABCAB
    CGZHINOAJQROAKLM $.
    $( [25-Nov-2007] $)

  ${
    opelf.1 $e |- D e. _V $.
    $( The members of an ordered pair element of a mapping belong to the
       mapping's domain and codomain. $)
    opelf $p |- ( ( F : A --> B /\ <. C , D >. e. F ) ->
                ( C e. A /\ D e. B ) ) $=
      ( wf cop wcel wa cxp fssxp sseld opelxp syl6ib imp ) ABEGZCDHZEIZCAIDBIJZ
      QSRABKZITQEUARABELMCDABFNOP $.
      $( [10-Dec-2003] $)
  $}

  $( The union of two functions with disjoint domains. $)
  fun $p |- ( ( ( F : A --> C /\ G : B --> D ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) : ( A u. B ) --> ( C u. D ) ) $=
    ( cin c0 wceq wf wa cun wfn crn wss fnun expcom wi unss12 rnun syl5ss a1i 
    anim12d df-f anbi12i an4 bitri 3imtr4g impcom ) ABGHIZACEJZBDFJZKZABLZCDLZE
    FLZJZUJEAMZFBMZKZENZCOZFNZDOZKZKZUPUNMZUPNZUOOZKUMUQUJUTVGVEVIUTUJVGABEFPQV
    EVIRUJVEVAVCLUOVHVACVCDSEFTUAUBUCUMURVBKZUSVDKZKVFUKVJULVKACEUDBDFUDUEURVBU
    SVDUFUGUNUOUPUDUHUI $.
    $( [22-Sep-2004] $)

  $( Composition of two functions. $)
  fnfco $p |- ( ( F Fn A /\ G : B --> A ) -> ( F o. G ) Fn B ) $=
    ( wfn crn wss wa ccom wf fnco 3expb df-f sylan2b ) CAEZDBEZDFAGZHCDIBEZBADJ
    OPQRABCDKLBADMN $.
    $( [22-May-2006] $)

  $( Restriction of a function with a subclass of its domain. $)
  fssres $p |- ( ( F : A --> B /\ C C_ A ) -> ( F |` C ) : C --> B ) $=
    ( wf wss wa cres wfn crn fnssres resss rnss ax-mp sstr mpan anim12i an32s 
    df-f sylanb sylibr ) ABDEZCAFZGDCHZCIZUDJZBFZGZCBUDEDAIZDJZBFZGUCUHUBUIUCUK
    UHUIUCGUEUKUGACDKUFUJFZUKUGUDDFULDCLUDDMNUFUJBOPQRABDSTCBUDSUA $.
    $( [23-Sep-2004] $)

  $( Restriction of a restricted function with a subclass of its domain. $)
  fssres2 $p |- ( ( ( F |` A ) : A --> B /\ C C_ A ) ->
                ( F |` C ) : C --> B ) $=
    ( cres wf wss wa fssres wb resabs1 feq1d adantl mpbid ) ABDAEZFZCAGZHCBOCEZ
    FZCBDCEZFZABCOIQSUAJPQCBRTDCAKLMN $.
    $( [21-Jul-2005] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Composition of a mapping and restricted identity.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    fcoi1 $p |- ( F : A --> B -> ( F o. ( _I |` A ) ) = F ) $=
      ( wf wfn cid cres ccom wceq ffn wfun cdm wa df-fn wss eqimss ccnv cores2 
      cnvi reseq1 ax-mp cnveqi cnvresid eqtr2i coeq2i syl5eq syl wrel funrel 
      coi1 sylan9eqr sylbi ) ABCDCAEZCFAGZHZCIZABCJUMCKZCLZAIZMUPCANUSUQUOCFHZC
      USURAOZUOUTIURAPVACFQZAGZQZHUTUOCFARUNVDCVDUNQUNVCUNVBFIVCUNISVBFATUAUBAU
      CUDUEUFUGUQCUHUTCICUICUJUGUKULUG $.
      $( [18-Sep-2011] $) $( [13-Dec-2003] $)

    $( Composition of restricted identity and a mapping.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    fcoi2 $p |- ( F : A --> B -> ( ( _I |` B ) o. F ) = F ) $=
      ( wf wfn crn wss wa cid cres ccom wceq df-f cores wrel fnrel coi2 syl 
      sylan9eqr sylbi ) ABCDCAEZCFBGZHIBJCKZCLABCMUBUAUCICKZCICBNUACOUDCLACPCQR
      ST $.
      $( [18-Sep-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d y C $.
    $( There is exactly one value of a function in its codomain. $)
    feu $p |- ( ( F : A --> B /\ C e. A ) -> E! y e. B <. C , y >. e. F ) $=
      ( wf wcel wa cv cop weu wreu wfn fneu2 ffn sylan wb visset opelf simprd 
      ex pm4.71rd eubidv adantr mpbid df-reu sylibr ) BCEFZDBGZHZAIZCGZDUKJEGZH
      ZAKZUMACLUJUMAKZUOEBMUIUPUHABDENBCEOPUHUPUOQUIUHUMUNAUHUMULUHUMULUHUMHUIU
      LBCDUKEARSTUAUBUCUDUEUMACUFUG $.
      $( [10-Dec-2003] $)
  $}

  ${
    $d x y F $.  $d x y A $.  $d x y B $.
    $( The converse of a restriction of a function. $)
    fcnvres $p |- ( F : A --> B -> `' ( F |` A ) = ( `' F |` B ) ) $=
      ( vy vx wf cv cop cres ccnv wcel wb wal wceq wa wi visset opelf simpld 
      ex pm4.71 sylib opelcnv opelres bitri syl6bbr simprd anbi1i bitr3d 
      19.21aivv wrel relcnv relres eqrel mp2an sylibr ) ABCFZDGZEGZHZCAIZJZKZUT
      CJZBIZKZLZEMDMZVBVENZUQVGDEUQUSURHZCKZVCVFUQVKVKUSAKZOZVCUQVKVLPVKVMLUQVK
      VLUQVKOZVLURBKZABUSURCDQZRZSTVKVLUAUBVCVJVAKVMURUSVAVPEQZUCUSURCAVPUDUEUF
      UQVKVKVOOZVFUQVKVOPVKVSLUQVKVOVNVLVOVQUGTVKVOUAUBVFUTVDKZVOOVSURUSVDBVRUD
      VTVKVOURUSCVPVRUCUHUEUFUIUJVBUKVEUKVIVHLVAULVDBUMDEVBVEUNUOUP $.
      $( [26-Mar-1998] $)
  $}

  $( The pre-image of a class disjoint with a mapping's codomain is empty.
     (Contributed by FL, 24-Jan-2007.) $)
  fimacnvdisj $p |- ( ( F : A --> B /\ ( B i^i C ) = (/) ) ->
    ( `' F " C ) = (/) ) $=
    ( wf cin c0 wceq wa ccnv cdm cima wss crn frn adantr df-rn syl5ssr ssdisj 
    sylancom imadisj sylibr ) ABDEZBCFGHZIZDJZKZCFGHZUFCLGHUCUDUGBMUHUEDNZBUGUC
    UIBMUDABDOPDQRUGBCSTUFCUAUB $.
    $( [23-Jan-2007] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    fint.1 $e |- B =/= (/) $.
    $( Function into an intersection.  (The proof was shortened by Andrew
       Salmon, 17-Sep-2011.) $)
    fint $p |- ( F : A --> |^| B <-> A. x e. B F : A --> x ) $=
      ( wfn crn cint wss wa cv wral wf ssint anbi2i c0 wne wb r19.28zv ax-mp 
      bitr4i df-f ralbii 3bitr4i ) DBFZDGZCHZIZJZUEUFAKZIZJZACLZBUGDMBUJDMZACLU
      IUEUKACLZJZUMUHUOUEAUFCNOCPQUMUPREUEUKACSTUABUGDUBUNULACBUJDUBUCUD $.
      $( [18-Sep-2011] $) $( [14-Oct-1999] $)
  $}

  $( Mapping into an intersection.  (The proof was shortened by Andrew Salmon,
     17-Sep-2011.) $)
  fin $p |- ( F : A --> ( B i^i C ) <-> ( F : A --> B /\ F : A --> C ) ) $=
    ( wfn crn cin wss wa wf ssin anbi2i anandi bitr3i df-f anbi12i 3bitr4i ) DA
    EZDFZBCGZHZIZRSBHZIZRSCHZIZIZATDJABDJZACDJZIUBRUCUEIZIUGUJUARSBCKLRUCUEMNAT
    DOUHUDUIUFABDOACDOPQ $.
    $( [18-Sep-2011] $) $( [14-Sep-1999] $)

  $( If the domain of a mapping is a set, the function is a set. $)
  fex $p |- ( ( F : A --> B /\ A e. C ) -> F e. _V ) $=
    ( wfn wcel cvv wf fnex ffn sylan ) DAEACFDGFABDHACDIABDJK $.
    $( [11-Sep-2006] $) $( [3-Oct-1999] $)

  ${
    $d A x $.  $d B x $.
    fabexg.1 $e |- F = { x | ( x : A --> B /\ ph ) } $.
    $( Existence of a set of functions.  (Contributed by Paul Chapman,
       25-Feb-2008.) $)
    fabexg $p |- ( ( A e. C /\ B e. D ) -> F e. _V ) $=
      ( wcel wa cxp cvv cpw xpexg pwexg wss cv cab wf fssxp visset elpw sylibr 
      anim1i ss2abi eqsstri ssab2 sstri ssexg mpan 3syl ) CEIDFIJCDKZLIULMZLIZG
      LIZCDEFNULLOGUMPUNUOGBQZUMIZAJZBRZUMGCDUPSZAJZBRUSHVAURBUTUQAUTUPULPUQCDU
      PTUPULBUAUBUCUDUEUFABUMUGUHGUMLUIUJUK $.
      $( [25-Feb-2008] $)
  $}

  ${
    $d x A $.  $d x B $.
    fabex.1 $e |- A e. _V $.
    fabex.2 $e |- B e. _V $.
    fabex.3 $e |- F = { x | ( x : A --> B /\ ph ) } $.
    $( Existence of a set of functions. $)
    fabex $p |- F e. _V $=
      ( cvv wcel fabexg mp2an ) CIJDIJEIJFGABCDIIEHKL $.
      $( [3-Dec-2007] $)
  $}

  $( If a mapping is a set, its domain is a set.  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.) $)
  dmfex $p |- ( ( F e. C /\ F : A --> B ) -> A e. _V ) $=
    ( wf wcel cvv cdm wceq wi fdm eleq1 dmexg syl5bi syl impcom ) ABDEZDCFZAGFZ
    QDHZAIZRSJABDKUATGFSRTAGLDCMNOP $.
    $( [18-Sep-2011] $) $( [27-Aug-2006] $)

  $( The empty function. $)
  f0 $p |- (/) : (/) --> A $=
    ( c0 wf wfn crn wss df-f wceq eqid fn0 mpbir rn0 0ss eqsstri mpbir2an ) BAB
    CBBDZBEZAFBABGPBBHBIBJKQBALAMNO $.
    $( [14-Aug-1999] $)

  $( A class is a function with empty codomain iff it and its domain are
     empty. $)
  f00 $p |- ( F : A --> (/) <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wf wceq wa wfn wfun cdm df-fn ffun crn wss frn ss0 syl dm0rn0 sylibr 
    sylanbrc fn0 sylib fdm eqtr3d jca f0 feq1 feq2 sylan9bb mpbiri impbii ) ACB
    DZBCEZACEZFZUKULUMUKBCGZULUOBHBIZCEZUKBCJACBKUKBLZCEZUQUKURCMUSACBNUROPBQRZ
    SBTUAUKUPACACBUBUTUCUDUNUKCCCDZCUEULUKACCDUMVAACBCUFACCCUGUHUIUJ $.
    $( [10-Dec-2003] $)

  ${
    $d x y A $.  $d x y B $.
    fconst.1 $e |- B e. _V $.
    $( A cross product with a singleton is a constant function.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    fconst $p |- ( A X. { B } ) : A --> { B } $=
      ( vx vy csn cxp wf wfn crn wss df-f fconstopab fnopab2 rnxpss mpbir2an ) 
      ABFZAQGZHRAIRJQKAQRLDEABRCDEABMNAQOP $.
      $( [18-Sep-2011] $) $( [14-Aug-1999] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A cross product with a singleton is a constant function. $)
    fconstg $p |- ( B e. C -> ( A X. { B } ) : A --> { B } ) $=
      ( vx cv csn cxp wf wceq wb sneq xpeq2 syl feq1 feq3 sylan9bb syl11anc 
      visset fconst vtoclg ) ADEZFZAUBGZHZABFZAUEGZHZDBCUABIZUCUFIZUBUEIZUDUGJU
      HUJUIUABKZUBUEALMUKUIUDAUBUFHUJUGAUBUCUFNUBUEAUFOPQAUADRST $.
      $( [19-Oct-2004] $)
  $}

  $( Equality theorem for one-to-one functions. $)
  f1eq1 $p |- ( F = G -> ( F : A -1-1-> B <-> G : A -1-1-> B ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq1 wb cnveq funeq syl anbi12d df-f1 3bitr4g ) 
    CDEZABCFZCGZHZIABDFZDGZHZIABCJABDJSTUCUBUEABCDKSUAUDEUBUELCDMUAUDNOPABCQABD
    QR $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one functions. $)
  f1eq2 $p |- ( A = B -> ( F : A -1-1-> C <-> F : B -1-1-> C ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq2 anbi1d df-f1 3bitr4g ) ABEZACDFZDGHZIBCDFZQ
    IACDJBCDJOPRQABCDKLACDMBCDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one functions. $)
  f1eq3 $p |- ( A = B -> ( F : C -1-1-> A <-> F : C -1-1-> B ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq3 anbi1d df-f1 3bitr4g ) ABEZCADFZDGHZICBDFZQ
    ICADJCBDJOPRQABCDKLCADMCBDMN $.
    $( [10-Feb-1997] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbf1.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbf1.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbf1.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a one-to-one function. $)
    hbf1 $p |- ( F : A -1-1-> B -> A. x F : A -1-1-> B ) $=
      ( wf ccnv wfun wa wal wf1 hbf hbcnv hbfun hban df-f1 albii 3imtr4i ) CDEI
      ZEJZKZLZUEAMCDENZUFAMUBUDAABCDEFGHOABUCABEFPQRCDESZUFUEAUGTUA $.
      $( [16-May-2004] $)
  $}

  ${
    $d x y F $.
    $( Alternate definition of a one-to-one function. $)
    dff12 $p |- ( F : A -1-1-> B <-> ( F : A --> B /\ A. y E* x x F y ) ) $=
      ( wf1 wf ccnv wfun wa cv wbr wmo wal df-f1 wrel dffun6 relcnv mpbiran 
      visset brcnv mobii albii bitri anbi2i ) CDEFCDEGZEHZIZJUFAKZBKZELZAMZBNZJ
      CDEOUHUMUFUHUJUIUGLZAMZBNZUMUHUGPUPBAUGQERSUOULBUNUKAUJUIEBTATUAUBUCUDUEU
      D $.
      $( [22-Sep-2004] $) $( [31-Dec-1996] $)
  $}

  $( A one-to-one mapping is a mapping. $)
  f1f $p |- ( F : A -1-1-> B -> F : A --> B ) $=
    ( wf1 wf ccnv wfun df-f1 simplbi ) ABCDABCECFGABCHI $.
    $( [31-Dec-1996] $)

  $( Two ways to express that a set ` A ` (not necessarily a function) is
     one-to-one.  Each side is equivalent to Definition 6.4(3) of
     [TakeutiZaring] p. 24, who use the notation "Un_2 (A)" for one-to-one.  We
     do not introduce a separate notation since we rarely use it. $)
  f1cnv $p |- ( `' `' A : dom A -1-1-> _V <-> ( Fun `' A /\ Fun `' `' A ) ) $=
    ( cdm cvv ccnv wf1 wf wfun wa df-f1 wfn dffn2 wceq df-fn dmcnvcnv mpbiran2 
    bitr3i wb wrel relcnv dfrel2 mpbi funeq ax-mp anbi12i ancom 3bitri ) ABZCAD
    ZDZEUGCUIFZUIDZGZHUIGZUHGZHUNUMHUGCUIIUJUMULUNUJUIUGJZUMUGUIKUOUMUIBUGLUIUG
    MANOPUKUHLZULUNQUHRUPASUHTUAUKUHUBUCUDUMUNUEUF $.
    $( [13-Aug-2004] $)

  $( Composition of one-to-one functions.  Exercise 30 of [TakeutiZaring]
     p. 25. $)
  f1co $p |- ( ( F : B -1-1-> C /\ G : A -1-1-> B ) ->
              ( F o. G ) : A -1-1-> C ) $=
    ( wf ccnv wfun wa ccom wf1 fco funco wceq wb cnvco funeq ax-mp sylibr 
    ancoms anim12i an4s df-f1 anbi12i 3imtr4i ) BCDFZDGZHZIZABEFZEGZHZIZIACDEJZ
    FZUNGZHZIZBCDKZABEKZIACUNKUFUJUHULURUFUJIUOUHULIUQABCDELULUHUQULUHIUKUGJZHZ
    UQUKUGMUPVANUQVBODEPUPVAQRSTUAUBUSUIUTUMBCDUCABEUCUDACUNUCUE $.
    $( [28-May-1998] $)

  $( Equality theorem for onto functions. $)
  foeq1 $p |- ( F = G -> ( F : A -onto-> B <-> G : A -onto-> B ) ) $=
    ( wceq wfn crn wa wfo fneq1 rneq eqeq1d anbi12d df-fo 3bitr4g ) CDEZCAFZCGZ
    BEZHDAFZDGZBEZHABCIABDIPQTSUBACDJPRUABCDKLMABCNABDNO $.
    $( [1-Aug-1994] $)

  $( Equality theorem for onto functions. $)
  foeq2 $p |- ( A = B -> ( F : A -onto-> C <-> F : B -onto-> C ) ) $=
    ( wceq wfn crn wa wfo fneq2 anbi1d df-fo 3bitr4g ) ABEZDAFZDGCEZHDBFZPHACDI
    BCDINOQPABDJKACDLBCDLM $.
    $( [1-Aug-1994] $)

  $( Equality theorem for onto functions. $)
  foeq3 $p |- ( A = B -> ( F : C -onto-> A <-> F : C -onto-> B ) ) $=
    ( wceq wfn crn wa wfo eqeq2 anbi2d df-fo 3bitr4g ) ABEZDCFZDGZAEZHOPBEZHCAD
    ICBDINQROABPJKCADLCBDLM $.
    $( [1-Aug-1994] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbfo.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbfo.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbfo.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for an onto function. $)
    hbfo $p |- ( F : A -onto-> B -> A. x F : A -onto-> B ) $=
      ( wfn crn wceq wa wal wfo hbfn hbrn hbeq hban df-fo albii 3imtr4i ) ECIZE
      JZDKZLZUEAMCDENZUFAMUBUDAABCEFGOABBUCDABEFPHQRCDESZUFUEAUGTUA $.
      $( [16-May-2004] $)
  $}

  $( An onto mapping is a mapping. $)
  fof $p |- ( F : A -onto-> B -> F : A --> B ) $=
    ( wfn crn wceq wa wss wfo wf eqimss anim2i df-fo df-f 3imtr4i ) CADZCEZBFZG
    PQBHZGABCIABCJRSPQBKLABCMABCNO $.
    $( [3-Aug-1994] $)

  $( An onto mapping is a function. $)
  fofun $p |- ( F : A -onto-> B -> Fun F ) $=
    ( wfo wf wfun fof ffun syl ) ABCDABCECFABCGABCHI $.
    $( [29-Mar-2008] $)

  $( An onto mapping is a function on its domain. $)
  fofn $p |- ( F : A -onto-> B -> F Fn A ) $=
    ( wfo wf wfn fof ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [16-Dec-2008] $)

  $( The codomain of an onto function is its range. $)
  forn $p |- ( F : A -onto-> B -> ran F = B ) $=
    ( wfo wfn crn wceq df-fo simprbi ) ABCDCAECFBGABCHI $.
    $( [3-Aug-1994] $)

  $( Alternate definition of an onto function. $)
  dffo2 $p |- ( F : A -onto-> B <-> ( F : A --> B /\ ran F = B ) ) $=
    ( wfo wf crn wceq wa fof forn jca wfn df-fo biimpri ffn sylan impbii ) ABCD
    ZABCEZCFBGZHRSTABCIABCJKCALZTRSRUATHABCMNABCOPQ $.
    $( [22-Mar-2006] $)

  $( The image of the domain of an onto function. $)
  foima $p |- ( F : A -onto-> B -> ( F " A ) = B ) $=
    ( wfo cima crn cdm wf wceq fof fdm imaeq2 3syl imadmrn syl5reqr forn eqtrd 
    ) ABCDZCAEZCFZBRCCGZEZSTRABCHUAAIUBSIABCJABCKUAACLMCNOABCPQ $.
    $( [29-Nov-2002] $)

  $( A function maps onto its range. $)
  dffn4 $p |- ( F Fn A <-> F : A -onto-> ran F ) $=
    ( wfn crn wceq wa wfo eqid biantru df-fo bitr4i ) BACZLBDZMEZFAMBGNLMHIAMBJ
    K $.
    $( [10-May-1998] $)

  $( A function maps its domain onto its range. $)
  funforn $p |- ( Fun A <-> A : dom A -onto-> ran A ) $=
    ( wfun cdm wfn crn wfo funfn dffn4 bitri ) ABAACZDJAEAFAGJAHI $.
    $( [23-Jul-2004] $)

  $( If the domain of an onto function exists, so does its codomain. $)
  fornex $p |- ( A e. C -> ( F : A -onto-> B -> B e. _V ) ) $=
    ( wfo wcel cvv cdm crn wfun wi fofun funrnex com12 syl wf wceq fof fdm 
    eleq1d forn 3imtr3d ) ABDEZACFZBGFZUCDHZCFZDIZGFZUDUEUCDJZUGUIKABDLUGUJUICD
    MNOUCUFACUCABDPUFAQABDRABDSOTUCUHBGABDUATUBN $.
    $( [23-Jul-2004] $)

  $( An onto function has unique domain and range. $)
  fodmrnu $p |- ( ( F : A -onto-> B /\ F : C -onto-> D ) ->
                ( A = C /\ B = D ) ) $=
    ( wfo wa wceq wfn fndmu fofn syl2an crn forn sylan9req jca ) ABEFZCDEFZGACH
    ZBDHEAIECISQRACEJABEKCDEKLQRBEMDABENCDENOP $.
    $( [5-Nov-2006] $)

  $( Restriction of a function. $)
  fores $p |- ( ( Fun F /\ A C_ dom F ) ->
              ( F |` A ) : A -onto-> ( F " A ) ) $=
    ( wfun cdm wss wa cres cima wfo funres anim1i wfn wceq df-fn crn df-fo 
    df-ima eqcomi mpbiran2 ssdmres anbi2i 3bitr4i sylibr ) BCZABDEZFBAGZCZUEFZA
    BAHZUFIZUDUGUEABJKUFALZUGUFDAMZFUJUHUFANUJUKUFOZUIMAUIUFPUIUMBAQRSUEULUGABT
    UAUBUC $.
    $( [4-Mar-1997] $)

  $( Composition of onto functions. $)
  foco $p |- ( ( F : B -onto-> C /\ G : A -onto-> B ) ->
             ( F o. G ) : A -onto-> C ) $=
    ( wf crn wceq wa ccom wfo fco ad2ant2r cdm rncoeq eqeq1d biimpar eqtr3 fdm 
    sylan an32s adantrl jca dffo2 anbi12i 3imtr4i ) BCDFZDGZCHZIZABEFZEGZBHZIZI
    ZACDEJZFZUPGZCHZIBCDKZABEKZIACUPKUOUQUSUGUKUQUIUMABCDELMUJUMUSUKUGUMUIUSDNZ
    ULHZUIUSUGUMIVCUSUIVCURUHCDEOPQVBBHUMVCUGVBULBRBCDSTTUAUBUCUTUJVAUNBCDUDABE
    UDUEACUPUDUF $.
    $( [22-Mar-2006] $)

  $( A nonzero constant function is onto. $)
  foconst $p |- ( ( F : A --> { B } /\ F =/= (/) ) -> F : A -onto-> { B } ) $=
    ( csn wf c0 wne wa crn wceq wfo wn wrel wb frel relrn0 necon3abid syl wss 
    wo frn sssn sylib ord sylbid imdistani dffo2 sylibr ) ABDZCEZCFGZHUJCIZUIJZ
    HAUICKUJUKUMUJUKULFJZLZUMUJCMZUKUONAUICOUPUNCFCPQRUJUNUMUJULUISUNUMTAUICUAU
    LBUBUCUDUEUFAUICUGUH $.
    $( [12-Jan-2007] $)

  $( Equality theorem for one-to-one onto functions. $)
  f1oeq1 $p |- ( F = G -> ( F : A -1-1-onto-> B <-> G : A -1-1-onto-> B ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq1 foeq1 anbi12d df-f1o 3bitr4g ) CDEZABCFZABCGZH
    ABDFZABDGZHABCIABDIOPRQSABCDJABCDKLABCMABDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions. $)
  f1oeq2 $p |- ( A = B -> ( F : A -1-1-onto-> C <-> F : B -1-1-onto-> C ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq2 foeq2 anbi12d df-f1o 3bitr4g ) ABEZACDFZACDGZH
    BCDFZBCDGZHACDIBCDIOPRQSABCDJABCDKLACDMBCDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions. $)
  f1oeq3 $p |- ( A = B -> ( F : C -1-1-onto-> A <-> F : C -1-1-onto-> B ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq3 foeq3 anbi12d df-f1o 3bitr4g ) ABEZCADFZCADGZH
    CBDFZCBDGZHCADICBDIOPRQSABCDJABCDKLCADMCBDMN $.
    $( [10-Feb-1997] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbf1o.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbf1o.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbf1o.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a one-to-one onto function. $)
    hbf1o $p |- ( F : A -1-1-onto-> B -> A. x F : A -1-1-onto-> B ) $=
      ( wf1 wfo wa wal wf1o hbf1 hbfo hban df-f1o albii 3imtr4i ) CDEIZCDEJZKZU
      BALCDEMZUCALTUAAABCDEFGHNABCDEFGHOPCDEQZUCUBAUDRS $.
      $( [16-May-2004] $)
  $}

  $( A one-to-one onto mapping is a one-to-one mapping. $)
  f1of1 $p |- ( F : A -1-1-onto-> B -> F : A -1-1-> B ) $=
    ( wf1o wf1 wfo df-f1o simplbi ) ABCDABCEABCFABCGH $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a mapping. $)
  f1of $p |- ( F : A -1-1-onto-> B -> F : A --> B ) $=
    ( wf1o wf1 wf f1of1 f1f syl ) ABCDABCEABCFABCGABCHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is function on its domain. $)
  f1ofn $p |- ( F : A -1-1-onto-> B -> F Fn A ) $=
    ( wf1o wf wfn f1of ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a function. $)
  f1ofun $p |- ( F : A -1-1-onto-> B -> Fun F ) $=
    ( wf1o wfn wfun f1ofn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a relation. $)
  f1orel $p |- ( F : A -1-1-onto-> B -> Rel F ) $=
    ( wf1o wfun wrel f1ofun funrel syl ) ABCDCECFABCGCHI $.
    $( [13-Dec-2003] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o2 $p |- ( F : A -1-1-onto-> B
        <-> ( F Fn A /\ Fun `' F /\ ran F = B ) ) $=
    ( wf1o wf1 wfo wa wf ccnv wfun wfn crn wceq w3a df-f1o df-f1 df-fo anbi12i 
    ancom 3anass an12 bitri anbi1i bitr4i anass wss df-f biimpri eqimss sylan2 
    3adant2 pm4.71i 3bitr4i 3bitri ) ABCDABCEZABCFZGABCHZCIJZGZCAKZCLZBMZGZGZUT
    URVBNZABCOUOUSUPVCABCPABCQRUQURVCGZGZVEUQGZVDVEVGVFUQGVHUQVFSVEVFUQVEUTURVB
    GGVFUTURVBTUTURVBUAUBUCUDUQURVCUEVEUQUTVBUQURUTVABUFZUQVBUQUTVIGABCUGUHVABU
    IUJUKULUMUN $.
    $( [22-Oct-2011] $) $( [10-Feb-1997] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o3 $p |- ( F : A -1-1-onto-> B <-> ( F : A -onto-> B /\ Fun `' F ) ) $=
    ( wfn ccnv wfun crn wceq w3a wa wf1o wfo df-3an an32 bitri dff1o2 df-fo 
    anbi1i 3bitr4i ) CADZCEFZCGBHZIZTUBJZUAJZABCKABCLZUAJUCTUAJUBJUETUAUBMTUAUB
    NOABCPUFUDUAABCQRS $.
    $( [22-Oct-2011] $) $( [25-Mar-1998] $)

  $( A one-to-one onto function is an onto function. $)
  f1ofo $p |- ( F : A -1-1-onto-> B -> F : A -onto-> B ) $=
    ( wf1o wfo ccnv wfun dff1o3 simplbi ) ABCDABCECFGABCHI $.
    $( [28-Apr-2004] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o4 $p |- ( F : A -1-1-onto-> B <-> ( F Fn A /\ `' F Fn B ) ) $=
    ( wf1o wfn ccnv wfun crn wceq w3a wa dff1o2 3anass cdm df-rn eqeq1i anbi2i 
    df-fn bitr4i 3bitri ) ABCDCAEZCFZGZCHZBIZJUAUCUEKZKUAUBBEZKABCLUAUCUEMUFUGU
    AUFUCUBNZBIZKUGUEUIUCUDUHBCOPQUBBRSQT $.
    $( [22-Oct-2011] $) $( [25-Mar-1998] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o5 $p |- ( F : A -1-1-onto-> B <-> ( F : A -1-1-> B /\ ran F = B ) ) $=
    ( wf1o wf1 wfo wa crn wceq df-f1o wf wb f1f ibar syl dffo2 syl6rbbr 
    pm5.32i bitri ) ABCDABCEZABCFZGTCHBIZGABCJTUAUBTUBABCKZUBGZUATUCUBUDLABCMUC
    UBNOABCPQRS $.
    $( [22-Oct-2011] $) $( [10-Dec-2003] $)

  $( A one-to-one function maps onto its range. $)
  f1orn $p |- ( F : A -1-1-onto-> ran F <-> ( F Fn A /\ Fun `' F ) ) $=
    ( wfn ccnv wfun crn wceq w3a wa wf1o df-3an dff1o2 eqid biantru 3bitr4i ) 
    BACZBDEZBFZRGZHPQIZSIARBJTPQSKARBLSTRMNO $.
    $( [13-Aug-2004] $)

  $( A one-to-one function maps one-to-one onto its range. $)
  f1f1orn $p |- ( F : A -1-1-> B -> F : A -1-1-onto-> ran F ) $=
    ( crn wf1o wfn ccnv wfun wf1 f1orn wf f1f ffn syl df-f1 simprbi sylanbrc ) 
    ACDCECAFZCGHZABCIZACJTABCKZRABCLABCMNTUASABCOPQ $.
    $( [4-Sep-2004] $)

  ${
    $d A f $.  $d B f $.
    f1oabexg.1 $e |- F = { f | ( f : A -1-1-onto-> B /\ ph ) } $.
    $( The class of all 1-1-onto functions mapping one set to another is a
       set.  (Contributed by Paul Chapman, 25-Feb-2008.) $)
    f1oabexg $p |- ( ( A e. C /\ B e. D ) -> F e. _V ) $=
      ( wcel wa cv wf1o cab cvv wf wss ssexg f1of anim1i ss2abi eqid fabexg 
      sylancr syl5eqel ) BDICEIJZBCFKZLZAJZFMZNGUIBCUFOZAJZFMZPULNIUINIUEUIULNQ
      UHUKFUGUJABCUFRSTAFBCDEULULUAUBUCHUD $.
      $( [25-Feb-2008] $)
  $}

  $( The converse of a one-to-one onto function is also one-to-one onto.  (The
     proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
  f1ocnv $p |- ( F : A -1-1-onto-> B -> `' F : B -1-1-onto-> A ) $=
    ( wfn ccnv wa wf1o wrel fnrel wceq wi dfrel2 fneq1 biimprd sylbi mpcom 
    anim2i ancoms dff1o4 3imtr4i ) CADZCEZBDZFUCUBEZADZFZABCGBAUBGUCUAUFUAUEUCC
    HZUAUEACIUGUDCJZUAUEKCLUHUEUAAUDCMNOPQRABCSBAUBST $.
    $( [22-Oct-2011] $) $( [11-Feb-1997] $)

  $( A relation is a one-to-one onto function iff its converse is a one-to-one
     onto function with domain and range interchanged. $)
  f1ocnvb $p |- ( Rel F ->
                ( F : A -1-1-onto-> B <-> `' F : B -1-1-onto-> A ) ) $=
    ( wrel wf1o ccnv f1ocnv wceq wb dfrel2 f1oeq1 sylbi syl5bi impbid2 ) CDZABC
    EZBACFZEZABCGOABQFZEZPROSCHTPICJABSCKLBAQGMN $.
    $( [8-Dec-2003] $)

  $( The restriction of a one-to-one function maps one-to-one onto the
     image. $)
  f1ores $p |- ( ( F : A -1-1-> B /\ C C_ A ) -> ( F |` C ) : C -1-1-onto->
            ( F " C ) ) $=
    ( wf ccnv wfun wa wss cima cres wfo wf1 wf1o cdm ffun adantr fdm sseq2d 
    biimpar fores syl11anc funres11 anim12i an32s df-f1 anbi1i dff1o3 3imtr4i 
    ) ABDEZDFGZHZCAIZHCDCJZDCKZLZUOFGZHZABDMZUMHCUNUONUJUMUKURUJUMHZUPUKUQUTDGZ
    CDOZIZUPUJVAUMABDPQUJVCUMUJVBACABDRSTCDUAUBCDUCUDUEUSULUMABDUFUGCUNUOUHUI 
    $.
    $( [25-Mar-1998] $)

  $( The converse of a one-to-one-onto restricted function.  (Contributed by
     Paul Chapman, 21-Apr-2008.) $)
  f1orescnv $p |- ( ( Fun `' F /\ ( F |` R ) : R -1-1-onto-> P ) ->
                    ( `' F |` P ) : P -1-1-onto-> R ) $=
    ( ccnv wfun cres wf1o wa f1ocnv adantl wceq wb cima funcnvres crn wf1 
    dff1o5 simprbi df-ima syl5eq reseq2d sylan9eq f1oeq1 syl mpbid ) CDZEZBACBF
    ZGZHZABUHDZGZABUFAFZGZUIULUGBAUHIJUJUKUMKULUNLUGUIUKUFCBMZFUMBCNUIUOAUFUIUH
    OZAUOUIBAUHPUPAKBAUHQRCBSTUAUBABUKUMUCUDUE $.
    $( [21-Apr-2008] $)

  $( Pre-image of an image. $)
  f1imacnv $p |- ( ( F : A -1-1-> B /\ C C_ A )
                 -> ( `' F " ( F " C ) ) = C ) $=
    ( wf1 wss wa ccnv cima cres wfun wceq wf df-f1 simprbi adantr funcnvres 
    imaeq1 3syl wf1o f1ores f1ocnv crn cdm f1of fdm imaeq2 imadmrn syl5reqr 
    wfo f1ofo forn syl eqtrd eqtr3d resima syl5eqr ) ABDEZCAFZGZDHZDCIZJZVBIZCV
    AVBIUTDCJZHZVBIZVDCUTVAKZVFVCLVGVDLURVHUSURABDMVHABDNOPCDQVFVCVBRSUTCVBVETV
    BCVFTZVGCLABCDUACVBVEUBVIVGVFUCZCVIVFVFUDZIZVGVJVIVBCVFMVKVBLVLVGLVBCVFUEVB
    CVFUFVKVBVFUGSVFUHUIVIVBCVFUJVJCLVBCVFUKVBCVFULUMUNSUOVAVBUPUQ $.
    $( [30-Sep-2004] $)

  $( A reverse version of ~ f1imacnv .  (Contributed by Jeffrey Hankins,
     16-Jul-2009.) $)
  foimacnv $p |- ( ( F : A -onto-> B /\ C C_ B )
                 -> ( F " ( `' F " C ) ) = C ) $=
    ( wfo wss wa ccnv cima cres wfun wceq fofun adantr funcnvres2 imaeq1 3syl 
    wfn crn df-fo cdm wi resss cnvss ax-mp cnvcnvss sstri funss syl df-ima 
    df-rn eqtr2i jctir df-fn sylibr forn sseq2d biimpar syl6ss ssdmres sylib 
    dfdm4 syl5eqr sylanbrc foima eqtr3d resima ) ABDEZCBFZGZDDHZCIZJZVLIZCDVLIV
    JVKCJZHZVLIZVNCVJDKZVPVMLVQVNLVHVRVIABDMZNCDOVPVMVLPQVJVLCVPEZVQCLVTVPVLRZV
    PSZCLVJVLCVPTVJVPKZVPUAZVLLZGWAVJWCWEVHWCVIVHVRWCVSVPDFVRWCUBVPVKHZDVOVKFVP
    WFFVKCUCVOVKUDUEDUFUGVPDUHUEUINVLVOSWDVKCUJVOUKULUMVPVLUNUOVJVOUAZCWBVJCVKU
    AZFWGCLVJCDSZWHVHCWIFVIVHWIBCABDUPUQURDUKUSCVKUTVAVOVBVCVDVLCVPVEUIVFDVLVGV
    C $.
    $( [9-Jul-2009] $)

  $( The union of two one-to-one onto functions with disjoint domains and
     ranges. $)
  f1oun $p |- ( ( ( F : A -1-1-onto-> B /\ G : C -1-1-onto-> D )
            /\ ( ( A i^i C ) = (/) /\ ( B i^i D ) = (/) ) )
           -> ( F u. G ) : ( A u. C ) -1-1-onto-> ( B u. D ) ) $=
    ( wf1o wa cin c0 wceq cun wfn ccnv wi fnun ex cnvun fneq1i sylibr im2anan9 
    an4s dff1o4 syl2anb syl6ibr imp ) ABEGZCDFGZHZACIJKZBDIJKZHZACLZBDLZEFLZGZU
    IULUOUMMZUONZUNMZHZUPEAMZENZBMZHFCMZFNZDMZHULUTOZUGUHVAVDVCVFVGVAVDHZUJUQVC
    VFHZUKUSVHUJUQACEFPQVIUKUSVIUKHVBVELZUNMUSBDVBVEPUNURVJEFRSTQUAUBABEUCCDFUC
    UDUMUNUOUCUEUF $.
    $( [26-Mar-1998] $)

  $( The restriction of a one-to-one onto function to a difference maps onto
     the difference of the images.  (Contributed by Paul Chapman,
     11-Apr-2009.) $)
  resdif $p |- ( ( Fun `' F /\ ( F |` A ) : A -onto-> C /\
                               ( F |` B ) : B -onto-> D ) ->
                 ( F |` ( A \ B ) ) : ( A \ B ) -1-1-onto-> ( C \ D ) ) $=
    ( ccnv wfun cres wfo w3a cdif cima wf1o wa dff1o3 biimpri cdm wss fofun 
    difss wf wceq fof fdm syl sseq2d mpbiri fores syl11anc wb cin resres indif 
    reseq2i eqtri foeq1 ax-mp crn rneqi df-ima 3eqtr4i foeq3 bitri sylib 
    funres11 syl2an ancoms 3adant3 imadif difeq1 difeq2 sylan9eq forn syl5eq 
    anim12i sylan2 3impb f1oeq3 mpbid ) EFGZACEAHZIZBDEBHZIZJZABKZEWFLZEWFHZMZW
    FCDKZWHMZVTWBWIWDWBVTWIWFWGWHIZWHFGZWIWBVTWIWLWMNWFWGWHOPWBWFWAWFLZWAWFHZIZ
    WLWBWAGWFWAQZRZWPACWASWBWRWFARABTWBWQAWFWBACWAUAWQAUBACWAUCACWAUDUEUFUGWFWA
    UHUIWPWFWNWHIZWLWOWHUBWPWSUJWOEAWFUKZHWHEAWFULWTWFEABUMUNUOZWFWNWOWHUPUQWNW
    GUBWSWLUJWOURWHURWNWGWOWHXAUSWAWFUTEWFUTVAWNWGWFWHVBUQVCVDWFEVEVFVGVHWEWGWJ
    UBZWIWKUJVTWBWDXBVTEALZCUBZEBLZDUBZNZXBWBWDNVTXGWGXCXEKZWJABEVIXDXFXHCXEKWJ
    XCCXEVJXEDCVKVLVLWBXDWDXFWBWAURCXCACWAVMEAUTVNWDWCURDXEBDWCVMEBUTVNVOVPVQWG
    WJWFWHVRUEVS $.
    $( [11-Apr-2009] $)

  $( The restriction of a one-to-one onto function to an intersection maps onto
     the intersection of the images.  (Contributed by Paul Chapman,
     11-Apr-2009.) $)
  resin $p |- ( ( Fun `' F /\ ( F |` A ) : A -onto-> C /\
                               ( F |` B ) : B -onto-> D ) ->
      ( F |` ( A i^i B ) ) : ( A i^i B ) -1-1-onto-> ( C i^i D ) ) $=
    ( ccnv wfun cres wfo w3a cdif wf1o cin resdif f1ofo syl syld3an3 wceq wb 
    dfin4 f1oeq3 ax-mp f1oeq2 reseq2i f1oeq1 3bitrri sylib ) EFGZACEAHIZBDEBHIZ
    JZAABKZKZCCDKZKZEUMHZLZABMZCDMZEURHZLZUHUIULUNEULHZIZUQUJAULCUNENUKULUNVBLV
    CABCDENULUNVBOPQVAURUOUTLZUMUOUTLZUQUSUORVAVDSCDTUSUOURUTUAUBURUMRVDVESABTZ
    URUMUOUTUCUBUTUPRVEUQSURUMEVFUDUMUOUTUPUEUBUFUG $.
    $( [11-Apr-2009] $)

  $( Composition of one-to-one onto functions. $)
  f1oco $p |- ( ( F : B -1-1-onto-> C /\ G : A -1-1-onto-> B ) ->
              ( F o. G ) : A -1-1-onto-> C ) $=
    ( wf1 wfo wa ccom wf1o f1co foco anim12i an4s df-f1o anbi12i 3imtr4i ) BCDF
    ZBCDGZHZABEFZABEGZHZHACDEIZFZACUDGZHZBCDJZABEJZHACUDJRUASUBUGRUAHUESUBHUFAB
    CDEKABCDELMNUHTUIUCBCDOABEOPACUDOQ $.
    $( [19-Mar-1998] $)

  $( The composition of a one-to-one onto function and its converse equals the
     identity relation restricted to the function's range. $)
  f1ococnv2 $p |- ( F : A -1-1-onto-> B -> ( F o. `' F ) = ( _I |` B ) ) $=
    ( wf1o ccnv ccom cid cdm cres wss wceq wf wfun f1of ffun wrel df-fun 
    simprbi 3syl iss sylib crn fdm syl wfo f1ocnv f1ofo forn eqtr4d dmcoeq 
    eqtrd reseq2d ) ABCDZCCEZFZGUOHZIZGBIUMUOGJZUOUQKUMABCLZCMZURABCNZABCOUTCPU
    RCQRSUOTUAUMUPBGUMUPUNHZBUMCHZUNUBZKUPVBKUMVCAVDUMUSVCAKVAABCUCUDUMBAUNDZBA
    UNUEVDAKABCUFZBAUNUGBAUNUHSUICUNUJUDUMVEBAUNLVBBKVFBAUNNBAUNUCSUKULUK $.
    $( [13-Dec-2003] $)

  $( The composition of a one-to-one onto function's converse and itself equals
     the identity relation restricted to the function's domain. $)
  f1ococnv1 $p |- ( F : A -1-1-onto-> B -> ( `' F o. F ) = ( _I |` A ) ) $=
    ( wf1o ccnv ccom cid cres wrel wceq f1orel dfrel2 sylib coeq2d f1ocnv 
    f1ococnv2 syl eqtr3d ) ABCDZCEZTEZFZTCFGAHZSUACTSCIUACJABCKCLMNSBATDUBUCJAB
    COBATPQR $.
    $( [13-Dec-2003] $)

  $( If the codomain of a one-to-one function exists, so does its domain.  This
     theorem is equivalent to the Axiom of Replacement ~ ax-rep . $)
  f1dmex $p |- ( ( F : A -1-1-> B /\ B e. C ) -> A e. _V ) $=
    ( wf1 wcel cvv crn wss ssexg wf f1f frn syl sylan ex ccnv wfo fornex wf1o 
    f1f1orn f1ocnv f1ofo 3syl syl5com syld imp ) ABDEZBCFZAGFZUHUIDHZGFZUJUHUIU
    LUKBIZUIULUHUKBCJUHABDKUMABDLABDMNOPULUKADQZRZUJUHUKAGUNSUHAUKDTUKAUNTUOABD
    UAAUKDUBUKAUNUCUDUEUFUG $.
    $( [12-Sep-2006] $) $( [4-Sep-2004] $)

  ${
    $d x F $.  $d x A $.  $d x B $.
    f11o.1 $e |- F e. _V $.
    $( Relationship between a mapping and an onto mapping.  Figure 38 of
       [Enderton] p. 145. $)
    ffoss $p |- ( F : A --> B <-> E. x ( F : A -onto-> x /\ x C_ B ) ) $=
      ( wf cv wfo wss wa wex crn wfn df-f dffn4 anbi1i bitri rnex wceq foeq3 
      sseq1 anbi12d cla4ev sylbi fss fof sylan 19.23aiv impbii ) BCDFZBAGZDHZUK
      CIZJZAKZUJBDLZDHZUPCIZJZUOUJDBMZURJUSBCDNUTUQURBDOPQUNUSAUPDERUKUPSULUQUM
      URUKUPBDTUKUPCUAUBUCUDUNUJABUKDFUMUJULBUKCDUEBUKDUFUGUHUI $.
      $( [10-May-1998] $)

    $( Relationship between one-to-one and one-to-one onto function. $)
    f11o $p |- ( F : A -1-1-> B <-> E. x ( F : A -1-1-onto-> x /\ x C_ B ) ) $=
      ( wf ccnv wfun wa cv wfo wss wex wf1 wf1o ffoss anbi1i df-f1 dff1o3 an32 
      bitri exbii 19.41v 3bitr4i ) BCDFZDGHZIBAJZDKZUGCLZIZAMZUFIZBCDNBUGDOZUII
      ZAMZUEUKUFABCDEPQBCDRUOUJUFIZAMULUNUPAUNUHUFIZUIIUPUMUQUIBUGDSQUHUFUITUAU
      BUJUFAUCUAUD $.
      $( [4-Apr-1998] $)
  $}

  $( The empty set maps one-to-one into any class. $)
  f10 $p |- (/) : (/) -1-1-> A $=
    ( c0 wf1 wf ccnv wfun df-f1 f0 fun0 wceq wb cnv0 funeq ax-mp mpbir 
    mpbir2an ) BABCBABDBEZFZBABGAHRBFZIQBJRSKLQBMNOP $.
    $( [7-Apr-1998] $)

  $( One-to-one onto mapping of the empty set. $)
  f1o00 $p |- ( F : (/) -1-1-onto-> A <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wf1o wfn ccnv wa wceq dff1o4 fn0 biimpi adantr cdm cnveq cnv0 syl6eq 
    sylbi fneq1d biimpa fndm syl dm0 syl5reqr jca biimpri eqid mpbir fneq2 
    sylan9bb mpbiri impbii bitri ) CABDBCEZBFZAEZGZBCHZACHZGZCABIUPUSUPUQURUMUQ
    UOUMUQBJZKLUPCMZACUPCAEZVAAHUMUOVBUMAUNCUMUQUNCHUTUQUNCFCBCNOPZQRSACTUAUBUC
    UDUSUMUOUQUMURUMUQUTUELUSUOCCEZVDCCHCUFCJUGUQUOVBURVDUQAUNCVCRACCUHUIUJUDUK
    UL $.
    $( [15-Apr-1998] $)

  $( Onto mapping of the empty set. $)
  fo00 $p |- ( F : (/) -onto-> A <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wfo wf1o wceq wa wf1 wfn fofn fn0 f10 f1eq1 mpbiri sylbi syl ancri 
    df-f1o sylibr f1ofo impbii f1o00 bitri ) CABDZCABEZBCFZACFGUDUEUDCABHZUDGUE
    UDUGUDBCIZUGCABJUHUFUGBKUFUGCACHALCABCMNOPQCABRSCABTUAABUBUC $.
    $( [22-Mar-2006] $)

  $( One-to-one onto mapping of the empty set. $)
  f1o0 $p |- (/) : (/) -1-1-onto-> (/) $=
    ( c0 wf1o wceq f1o00 eqid mpbir2an ) AAABAACZGAADAEZHF $.
    $( [16-Feb-2004] $) $( [10-Sep-2004] $)

  $( A restriction of the identity relation is a one-to-one onto function.
     (The proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
  f1oi $p |- ( _I |` A ) : A -1-1-onto-> A $=
    ( cid cres wf1o wfn ccnv dff1o4 fnresi cnvresid fneq1i mpbir mpbir2an ) AAB
    ACZDMAEZMFZAEZAAMGAHZPNQAOMAIJKL $.
    $( [22-Oct-2011] $) $( [30-Apr-1998] $)

  $( The identity relation is a one-to-one onto function on the universe. $)
  f1ovi $p |- _I : _V -1-1-onto-> _V $=
    ( cvv cid cres wf1o f1oi wceq wb wrel reli dfrel3 mpbi f1oeq1 ax-mp ) AABAC
    ZDZAABDZAENBFZOPGBHQIBJKAANBLMK $.
    $( [16-May-2004] $)

  ${
    f1osn.1 $e |- A e. _V $.
    f1osn.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is one-to-one onto function.  (The proof
       was shortened by Andrew Salmon, 22-Oct-2011.) $)
    f1osn $p |- { <. A , B >. } : { A } -1-1-onto-> { B } $=
      ( csn cop wf1o wfn ccnv dff1o4 fnsn cnvsn fneq1i mpbir mpbir2an ) AEZBEZA
      BFEZGRPHRIZQHZPQRJABCDKTBAFEZQHBADCKQSUAABCDLMNO $.
      $( [22-Oct-2011] $) $( [18-May-1998] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    fv2.1 $e |- A e. _V $.
    $( Alternate definition of function value.  Definition 10.11 of [Quine]
       p. 68.  (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    fv2 $p |- ( F ` A ) = U. { x | A. y ( A F y <-> y = x ) } $=
      ( cfv csn cima cv wceq cab cuni wbr wb wal df-fv wcel dfcleq cop visset 
      elimasn df-br bitr4i elsn bibi12i albii bitri abbii unieqi eqtri ) CDFDCG
      HZAIZGZJZAKZLCBIZDMZUPULJZNZBOZAKZLACDPUOVAUNUTAUNUPUKQZUPUMQZNZBOUTBUKUM
      RVDUSBVBUQVCURVBCUPSDQUQDCUPEBTUACUPDUBUCBULUDUEUFUGUHUIUJ $.
      $( [18-Sep-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( A function's value at a proper class is the empty set. $)
    fvprc $p |- ( -. A e. _V -> ( F ` A ) = (/) ) $=
      ( vx cvv wcel wn cfv c0 cuni csn cima cv wceq cab wex wne visset snnz 
      df-ne mpbi snprc imaeq2 sylbi ima0 syl6eq eqeq1d eqcom syl6bb mtbiri 
      nexdv abn0 necon1bbii sylib unieqd df-fv syl5eq uni0 ) ADEFZABGZHIZHURBAJ
      ZKZCLZJZMZCNZIUTUSURVFHURVECOZFVFHMURVECURVEVDHMZVDHPVHFVCCQRVDHSTURVEHVD
      MVHURVBHVDURVBBHKZHURVAHMVBVIMAUAVAHBUBUCBUDUEUFHVDUGUHUIUJVGVFHVECUKULUM
      UNCABUOUPUQUE $.
      $( [20-May-1998] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y F $.
    elfv.1 $e |- B e. _V $.
    $( Membership in a function value. $)
    elfv $p |- ( A e. ( F ` B ) <->
               E. x ( A e. x /\ A. y ( B F y <-> y = x ) ) ) $=
      ( cfv wcel cv wbr wceq wb wal cab cuni wa wex fv2 eleq2i eluniab bitri ) 
      CDEGZHCDBIZEJUCAIZKLBMZANOZHCUDHUEPAQUBUFCABDEFRSUEACTUA $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.  $d x G $.
    $( Equality theorem for function value. $)
    fveq1 $p |- ( F = G -> ( F ` A ) = ( G ` A ) ) $=
      ( vx wceq csn cima cv cab cuni cfv imaeq1 eqeq1d abbidv unieqd df-fv 
      3eqtr4g ) BCEZBAFZGZDHFZEZDIZJCSGZUAEZDIZJABKACKRUCUFRUBUEDRTUDUABCSLMNOD
      ABPDACPQ $.
      $( [29-Dec-1996] $)

    $( Equality theorem for function value. $)
    fveq2 $p |- ( A = B -> ( F ` A ) = ( F ` B ) ) $=
      ( vx wceq csn cima cv cab cuni cfv sneq imaeq2d eqeq1d abbidv unieqd 
      df-fv 3eqtr4g ) ABEZCAFZGZDHFZEZDIZJCBFZGZUBEZDIZJACKBCKSUDUHSUCUGDSUAUFU
      BSTUECABLMNOPDACQDBCQR $.
      $( [29-Dec-1996] $)
  $}

  ${
    fveq1i.1 $e |- F = G $.
    $( Equality inference for function value. $)
    fveq1i $p |- ( F ` A ) = ( G ` A ) $=
      ( wceq cfv fveq1 ax-mp ) BCEABFACFEDABCGH $.
      $( [2-Sep-2003] $)
  $}

  ${
    fveq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for function value. $)
    fveq1d $p |- ( ph -> ( F ` A ) = ( G ` A ) ) $=
      ( wceq cfv fveq1 syl ) ACDFBCGBDGFEBCDHI $.
      $( [2-Sep-2003] $)
  $}

  ${
    fveq2i.1 $e |- A = B $.
    $( Equality inference for function value. $)
    fveq2i $p |- ( F ` A ) = ( F ` B ) $=
      ( wceq cfv fveq2 ax-mp ) ABEACFBCFEDABCGH $.
      $( [28-Jul-1999] $)
  $}

  ${
    fveq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function value. $)
    fveq2d $p |- ( ph -> ( F ` A ) = ( F ` B ) ) $=
      ( wceq cfv fveq2 syl ) ABCFBDGCDGFEBCDHI $.
      $( [29-May-1999] $)
  $}

  ${
    fveq12d.1 $e |- ( ph -> F = G ) $.
    fveq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function value.  (Contributed by FL,
       22-Dec-2008.) $)
    fveq12d $p |- ( ph -> ( F ` A ) = ( G ` B ) ) $=
      ( cfv fveq1d fveq2d eqtrd ) ABDHBEHCEHABDEFIABCEGJK $.
      $( [1-Dec-2010] $) $( [22-Dec-2008] $)
  $}

  ${
    $d y z F $.  $d y z A $.  $d x y z $.
    hbfv.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbfv.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for function value. $)
    hbfv $p |- ( y e. ( F ` A ) -> A. x y e. ( F ` A ) ) $=
      ( vz cfv csn cima cv wceq cab cuni df-fv hbsn hbima wcel ax-17 hbeq hbab 
      hbuni hbxfr ) ABCDHDCIZJZGKIZLZGMZNGCDOABUHUGAGBABBUEUFABDUDEABCFPQBKUFRA
      STUAUBUC $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d y z A $.  $d y z F $.  $d y ph $.  $d x y z $.
    hbfvd.1 $e |- ( ph -> A. x ph ) $.
    hbfvd.2 $e |- ( ph -> ( y e. F -> A. x y e. F ) ) $.
    hbfvd.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbfv .  If a
       closed theorem version is desired, see ~ hbfvd2 . $)
    hbfvd $p |- ( ph -> ( y e. ( F ` A ) -> A. x y e. ( F ` A ) ) ) $=
      ( vz cv wcel wal cab cfv wi hba1 hbab hbfv a1i wceq 19.21aiv abidhb syl 
      fveq1d fveq2d eqtrd eleq2d albid 3imtr3d ) ACJZIJZDKZBLZIMZUKEKZBLZIMZNZK
      ZUSBLZUJDENZKZVBBLUSUTOABCUNUQUPBICUOBPQUMBICULBPQRSAURVAUJAURUNENVAAUNUQ
      EAUJEKZVCBLOZCLUQETAVDCGUABCIEUBUCUDAUNDEAUJDKZVEBLOZCLUNDTAVFCHUABCIDUBU
      CUEUFUGZAUSVBBFVGUHUI $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d y z F $.  $d x y z $.
    hbfvd2.1 $e |- ( ph -> A. x A. y ph ) $.
    hbfvd2.2 $e |- ( ph -> ( y e. F -> A. x y e. F ) ) $.
    hbfvd2.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbfv .  This
       variant of ~ hbfvd allows us to create a closed theorem form by
       replacing the uncommitted antecedent ` ph ` with an appropriate
       substitution instance. $)
    hbfvd2 $p |- ( ph -> ( y e. ( F ` A ) -> A. x y e. ( F ` A ) ) ) $=
      ( vz cv wcel wal cab cfv wi hba1 hbab hbfv a1i wceq 19.21bi 19.21ai 
      abidhb syl fveq1d fveq2d eqtrd eleq2d ax-4 a7s albid 3imtr3d ) ACJZIJZDKZ
      BLZIMZUNEKZBLZIMZNZKZVBBLZUMDENZKZVEBLVBVCOABCUQUTUSBICURBPQUPBICUOBPQRSA
      VAVDUMAVAUQENVDAUQUTEAUMEKZVFBLOZCLUTETAVGCAACLZBFUAZGUBBCIEUCUDUEAUQDEAU
      MDKZVJBLOZCLUQDTAVKCVIHUBBCIDUCUDUFUGUHZAVBVEBAVHBLABLZFAVMCBVMCUIUJUDVLU
      KUL $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z F $.  $d x y z $.
    $( Move class substitution in and out of a function value. $)
    csbfv12g $p |- ( A e. C ->
                 [_ A / x ]_ ( F ` B ) = ( [_ A / x ]_ F ` [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cfv csb ax-17 hbcsb1g hbfvd wceq wex a9e visset hbcsb1 
      hbfv hbeq csbeq1a fveq1d fveq2d 3eqtr3d 19.23ai ax-mp a1i 3eqtrd csbiegf 
      csbcog eqtrd ) BDHZFBAFIZCEJZKZKFBAUNCKZKZFBAUNEKZKZJZABUOKABCKZABEKZJZFG
      BUPVADUMFGURUTUMFLFGBUSDGIZBHFLZMFGBUQDVFMNUNBOZUPUQUSJZUQUTJVAUPVHOZVGAI
      UNOZAPVIAFQVJVIAAGGUPVHAGUNUOFRZVEUNHALZSAGUQUSAGUNEVKVLSAGUNCVKVLSTUAVJU
      OCUSJUPVHVJCEUSAUNEUBUCAUNUOUBVJCUQUSAUNCUBUDUEUFUGUHVGUQUSUTFBUSUBUCVGUQ
      URUTFBUQUBUDUIUJAFBUODUKUMVAURVCJVDUMURUTVCAFBEDUKUCUMURVBVCAFBCDUKUDULUE
      $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d A y $.  $d F y $.  $d B y $.  $d C y $.  $d x y $.
    $( Move class substitution in and out of a function value.(This is
       ~ csbfv12g with a shortened proof, shortened by Alan Sare,
       10-Nov-2012.)  The proof is derived from the virtual deduction proof
       ~ csbfv12gALTVD .  Although the proof is shorter, the total number of
       steps of all theorems used in the proof is probably longer. $)
    csbfv12gALT $p |- ( A e. C -> [_ A / x ]_ ( F ` B ) =
                ( [_ A / x ]_ F ` [_ A / x ]_ B ) ) $=
      ( vy wcel cfv csb csn cima cv wceq cab cuni df-fv csbeq2i csbunig wsbc 
      csbabg sbceqdig csbima12g csbsng imaeq2d eqtrd csbconstgfv eqeq12d bitrd 
      abbidv unieqd 3eqtrd syl6eqr ) BDGZABCEHZIZABEIZABCIZJZKZFLJZMZFNZOZUQUPH
      UMUOABECJZKZUTMZFNZOZIABVGIZOVCABUNVHDFCEPQABVGDRUMVIVBUMVIVFABSZFNVBVFAF
      BDTUMVJVAFUMVJABVEIZABUTIZMVAABVEUTDUAUMVKUSVLUTUMVKUPABVDIZKUSABVDDEUBUM
      VMURUPABCDUCUDUEABUTDUFUGUHUIUEUJUKFUQUPPUL $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d y A $.  $d y C $.  $d x y F $.
    $( Move class substitution in and out of a function value. $)
    csbfv2g $p |- ( A e. C -> [_ A / x ]_ ( F ` B ) =
                  ( F ` [_ A / x ]_ B ) ) $=
      ( vy wcel cfv csb csbfv12g cv ax-17 csbconstgf fveq1d eqtrd ) BDGZABCEHIA
      BCIZABEIZHQEHABCDEJPQREAFBEDFKEGALMNO $.
      $( [10-Nov-2005] $)

    $( Substitution for a function value. $)
    csbfvg $p |- ( A e. C -> [_ A / x ]_ ( F ` x ) = ( F ` A ) ) $=
      ( wcel cv cfv csb csbfv2g csbvarg fveq2d eqtrd ) BCEZABAFZDGHABNHZDGBDGAB
      NCDIMOBDABCJKL $.
      $( [1-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( The value of a class exists.  Corollary 6.13 of [TakeutiZaring]
       p. 27. $)
    fvex $p |- ( F ` A ) e. _V $=
      ( vx cfv csn cima cv wceq cab cuni cvv df-fv wmo wcel moeq unieq visset 
      unisn syl6req immoi ax-mp moabex uniex eqeltri ) ABDBAEFZCGZEZHZCIZJKCABL
      UIUHCMZUIKNUFUEJZHZCMUJCUKOUHULCUHUKUGJUFUEUGPUFCQRSTUAUHCUBUAUCUD $.
      $( [30-Dec-1996] $)
  $}

  ${
    $d x y z F $.  $d x y z A $.
    fv3.1 $e |- A e. _V $.
    $( Alternate definition of the value of a function.  Definition 6.11 of
       [TakeutiZaring] p. 26. $)
    fv3 $p |- ( F ` A ) = { x | ( E. y ( x e. y /\ A F y ) /\
              E! y A F y ) } $=
      ( vz cv wcel wbr wa wex weu cfv wceq wb wal elfv wi bi2 alimi visset 
      breq2 ceqsalv sylib anim2i eximi eleq2 anbi12d cbvexv 19.40 simprd df-eu 
      sylibr jca hbeu1 ax-17 hba1 hban hbex hbim bi1 ax-14 syl6 com23 imp3a 
      a4s anc2ri com12 eximdv syl5ib 19.23ai imp impbii bitri abbi2i ) AGZBGZHZ
      CVQDIZJZBKZVSBLZJZACDMZVPWDHVPFGZHZVSVQWENZOZBPZJZFKZWCFBVPCDEQWKWCWKWAWB
      WKWFCWEDIZJZFKWAWJWMFWIWLWFWIWGVSRZBPWLWHWNBVSWGSTVSWLBWEFUAVQWECDUBUCUDU
      EUFWMVTFBWEVQNWFVRWLVSWEVQVPUGWEVQCDUBUHUIUDWKWIFKZWBWKWFFKWOWFWIFUJUKVSB
      FULZUMUNWAWBWKVTWBWKRBWBWKBVSBUOWJBFWFWIBWFBUPWHBUQURUSUTVTWOWKWBVTWIWJFW
      IVTWJWIVTWFWHVTWFRBWHVRVSWFWHVSVRWFWHVSWGVRWFRVSWGVABFAVBVCVDVEVFVGVHVIWP
      VJVKVLVMVNVO $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x F $.  $d x A $.  $d x B $.
    $( The value of a restricted function. $)
    fvres $p |- ( A e. B -> ( ( F |` B ) ` A ) = ( F ` A ) ) $=
      ( vx wcel cres csn cima cv wceq cab cuni cfv crn wss snssi resabs1 rneq 
      3syl df-ima 3eqtr4g eqeq1d abbidv unieqd df-fv ) ABEZCBFZAGZHZDIGZJZDKZLC
      UHHZUJJZDKZLAUGMACMUFULUOUFUKUNDUFUIUMUJUFUGUHFZNZCUHFZNZUIUMUFUHBOUPURJU
      QUSJABPCUHBQUPURRSUGUHTCUHTUAUBUCUDDAUGUEDACUEUA $.
      $( [16-Feb-2004] $) $( [2-Aug-1994] $)
  $}

  $( The value of a member of the domain of a subclass of a function. $)
  funssfv $p |- ( ( Fun F /\ G C_ F /\ A e. dom G ) ->
                ( F ` A ) = ( G ` A ) ) $=
    ( wfun wss cdm wcel cfv wceq wa cres fvres eqcomd funssres fveq1d 
    sylan9eqr 3impa ) BDZCBEZACFZGZABHZACHZIUARSJZUBABTKZHZUCUAUFUBATBLMUDAUECB
    CNOPQ $.
    $( [29-May-2007] $) $( [15-Aug-1994] $)

  ${
    $d y z F $.  $d y z A $.
    tz6.12.1 $e |- A e. _V $.
    $( Function value.  Theorem 6.12(1) of [TakeutiZaring] p. 27. $)
    tz6.12-1 $p |- ( ( A F y /\ E! y A F y ) -> ( F ` A ) = y ) $=
      ( vz cv wbr weu wa cfv wcel wi wex fv3 abeq2i exancom anbi1i ancom bitri 
      eupick sylbi com12 adantr 19.8a anim1i anasss sylibr expcom impbid eqrdv 
      ) BAFZCGZULAHZIZEBCJZUKUNEFZUOKZUPUKKZULUQURLUMUQULURUQURULIZAMZUMIZULURL
      ZVAEUOEABCDNOZVAUMULURIAMZIZVBVAVDUMIVEUTVDUMURULAPQVDUMRSULURATUAUAUBUCU
      RUNUQURUNIVAUQURULUMVAUSUTUMUSAUDUEUFVCUGUHUIUJ $.
      $( [30-Apr-2004] $)

    $( Function value.  Theorem 6.12(1) of [TakeutiZaring] p. 27. $)
    tz6.12 $p |- ( ( <. A , y >. e. F /\ E! y <. A , y >. e. F ) ->
                 ( F ` A ) = y ) $=
      ( cv wbr weu cfv wceq cop wcel tz6.12-1 df-br eubii syl2anbr ) BAEZCFZQAG
      BCHPIBPJCKZRAGABCDLBPCMZQRASNO $.
      $( [10-Jul-1994] $)
  $}

  ${
    $d x y z w $.  $d z w v F $.
    tz6.12f.1 $e |- ( w e. F -> A. y w e. F ) $.
    $( Function value, using bound-variable hypotheses instead of distinct
       variable conditions. $)
    tz6.12f $p |- ( ( <. x , y >. e. F /\ E! y <. x , y >. e. F ) ->
                 ( F ` x ) = y ) $=
      ( vz cv cop wcel weu wa cfv wceq wi ax-17 opeq2 eleq1d wb hbel cbveu a1i 
      anbi12d eqeq2 imbi12d visset tz6.12 chvar ) AGZFGZHZDIZUKFJZKZUHDLZUIMZNU
      HBGZHZDIZURBJZKZUNUPMZNZFBVBFOUIUPMZUMUTUOVAVCUKURULUSVCUJUQDUIUPUHPQZULU
      SRVCUKURFBBCCUJDCGUJIBOESURFOVDTUAUBUIUPUNUCUDFUHDAUEUFUG $.
      $( [30-Aug-1999] $)
  $}

  ${
    $d x y z A $.  $d x y z F $.
    $( Function value when ` F ` is not a function.  Theorem 6.12(2) of
       [TakeutiZaring] p. 27. $)
    tz6.12-2 $p |- ( -. E! y A F y -> ( F ` A ) = (/) ) $=
      ( vx vz cvv wcel cv wbr weu wn cfv c0 wceq wi wss cab wal ax-17 eq0 
      visset biidd elab notbii albii bitr2i sylib sseq2d fveq2 breq1 eubidv 
      abbidv sseq12d wa wex fv3 simpr ss2abi eqsstri vtoclg syl5bi ss0 syl6com 
      fvprc a1d pm2.61i ) BFGZBAHZCIZAJZKZBCLZMNZOVKVGVLMPZVMVKVLVJDQZPZVNVGVKV
      OMVLVKVKERZVOMNZVKESVREHZVOGZKZERVQEVOTWAVKEVTVJVJVJDVSEUAZDHZVSNVJUBUCUD
      UEUFUGUHVSCLZVSVHCIZAJZDQZPVPEBFVSBNZWDVLWGVOVSBCUIWHWFVJDWHWEVIAVSBVHCUJ
      UKULUMWDWCVHGWEUNAUOZWFUNZDQWGDAVSCWBUPWJWFDWIWFUQURUSUTVAVLVBVCVGKVMVKBC
      VDVEVF $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d y F $.  $d y A $.
    tz6.12c.1 $e |- A e. _V $.
    $( Corollary of Theorem 6.12(1) of [TakeutiZaring] p. 27. $)
    tz6.12c $p |- ( E! y A F y -> ( ( F ` A ) = y <-> A F y ) ) $=
      ( cv wbr weu cfv wceq breq2 wex euex wi hbeu1 ax-17 hbim tz6.12-1 expcom 
      biimprd syli com12 19.23ai mpcom syl5cbi impbid ) BAEZCFZAGZBCHZUFIZUGUJB
      UICFZUGUHUIUFBCJZUGAKUHUKUGALUGUHUKMAUHUKAUGANUKAOPUHUGUKUGUHUJUKUGUHUJAB
      CDQRZUJUKUGULSTUAUBUCUDUMUE $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.
    tz6.12i.1 $e |- A e. _V $. $( (Note: hypothesis could be eliminated) $)
    $( Corollary of Theorem 6.12(2) of [TakeutiZaring] p. 27. $)
    tz6.12i $p |- ( B =/= (/) -> ( ( F ` A ) = B -> A F B ) ) $=
      ( vy cfv wceq c0 wne wbr cvv wcel wi fvex eleq1 mpbii cv eqeq2 neeq1 
      breq2 imbi12d weu wb tz6.12-2 necon1ai tz6.12c syl biimpd syl6bir 
      pm2.43a vtoclg mpcom com12 ) ACFZBGZBHIZABCJZBKLZUOUPUQMZUOUNKLURACNUNBKO
      PUNEQZGZUTHIZAUTCJZMZMUOUSMEBKUTBGZVAUOVDUSUTBUNRVEVBUPVCUQUTBHSUTBACTUAU
      AVBVAVCVAVBUNHIZVAVCMUNUTHSVFVAVCVFVCEUBZVAVCUCVGUNHEACUDUEEACDUFUGUHUIUJ
      UKULUM $.
      $( [6-Apr-2007] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( The value of a class outside its domain is the empty set. $)
    ndmfv $p |- ( -. A e. dom F -> ( F ` A ) = (/) ) $=
      ( vy vx cvv wcel cdm wn cfv c0 wceq wi cv wbr weu wex eleq1 breq1 exbidv 
      visset eldm vtoclbg euex syl5bir con3d tz6.12-2 syl6 fvprc a1d pm2.61i ) 
      AEFZABGZFZHZABIJKZLUKUNACMZBNZCOZHUOUKURUMUKUMUQCPZURDMZULFUTUPBNZCPUMUSD
      AEUTAULQUTAKVAUQCUTAUPBRSCUTBDTUAUBUQCUCUDUECABUFUGUKHUOUNABUHUIUJ $.
      $( [24-Aug-1995] $)
  $}

  ${
    ndmfvrcl.1 $e |- dom F = S $.
    ndmfvrcl.2 $e |- -. (/) e. S $.
    $( Reverse closure law for function with the empty set not in its
       domain. $)
    ndmfvrcl $p |- ( ( F ` A ) e. S -> A e. S ) $=
      ( cfv wcel cdm wn c0 ndmfv eleq1d mtbiri con4i syl6eleq ) ACFZBGZACHZBARG
      ZQSIZQJBGETPJBACKLMNDO $.
      $( [26-Apr-1996] $)
  $}

  $( If a function value has a member, the argument belongs to the domain. $)
  elfvdm $p |- ( A e. ( F ` B ) -> B e. dom F ) $=
    ( cfv wcel c0 wne cdm ne0i ndmfv necon1ai syl ) ABCDZEMFGBCHEZMAINMFBCJKL 
    $.
    $( [12-Feb-2007] $)

  $( The value of a non-member of a restriction is the empty set. $)
  nfvres $p |- ( -. A e. B -> ( ( F |` B ) ` A ) = (/) ) $=
    ( wcel wn cres cdm cfv c0 wceq cin wa dmres eleq2i elin bitri simplbi 
    con3i ndmfv syl ) ABDZEACBFZGZDZEAUBHIJUDUAUDUAACGZDZUDABUEKZDUAUFLUCUGACBM
    NABUEOPQRAUBST $.
    $( [13-Nov-1995] $)

  ${
    $d x y A $.  $d x y F $.
    $( If the restriction of a class to a singleton is not a function, its
       value is the empty set.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    nfunsn $p |- ( -. Fun ( F |` { A } ) -> ( F ` A ) = (/) ) $=
      ( vx vy cfv c0 wceq csn cres wfun wn wrel cv wbr wmo wal wa weu eumo 
      wcel visset brres wb elsn breq1 sylbi biimpac immoi syl tz6.12-2 nsyl4 
      19.21aiv relres jctil dffun6 sylibr con1i ) ABEFGZBAHZIZJZURKZUTLZCMZDMZU
      TNZDOZCPZQVAVBVHVCVBVGCAVEBNZDRZVGURVJVIDOVGVIDSVFVIDVFVDVEBNZVDUSTZQVIVD
      VEBUSDUAUBVLVKVIVLVDAGVKVIUCCAUDVDAVEBUEUFUGUFUHUIDABUJUKULBUSUMUNCDUTUOU
      PUQ $.
      $( [22-Oct-2011] $) $( [8-Aug-2010] $)
  $}

  $( Equal values imply equal values in a restriction. $)
  fveqres $p |- ( ( F ` A ) = ( G ` A ) ->
                ( ( F |` B ) ` A ) = ( ( G |` B ) ` A ) ) $=
    ( wcel cfv wceq cres wi fvres eqeq12d biimprd wn c0 nfvres eqtr4d a1d 
    pm2.61i ) ABEZACFZADFZGZACBHFZADBHFZGZISUEUBSUCTUDUAABCJABDJKLSMZUEUBUFUCNU
    DABCOABDOPQR $.
    $( [13-Nov-1995] $)

  ${
    $d x y A $.  $d x y F $.  $d x y B $.
    funbrfv.1 $e |- B e. _V $.
    $( The second argument of a binary relation on a function is the function's
       value. $)
    funbrfv $p |- ( Fun F -> ( A F B -> ( F ` A ) = B ) ) $=
      ( vx vy wfun wbr cfv wceq cvv wcel wa wrel brrelex funrel sylan wi cv 
      breq1 anbi2d fveq2 eqeq1d imbi12d breq2 eqeq2 weu visset tz6.12-1 funeu 
      sylan2 anabss7 vtocl2g mpan2 mpcom ex ) CGZABCHZACIZBJZAKLZUQURMZUTCNURVA
      UQABCOCPQVABKLVBUTRZDUQESZFSZCHZMZVDCIZVEJZRUQAVECHZMZUSVEJZRVCEFABKKVDAJ
      ZVGVKVIVLVMVFVJUQVDAVECTUAVMVHUSVEVDACUBUCUDVEBJZVKVBVLUTVNVJURUQVEBACUEU
      AVEBUSUFUDUQVFVIVFVFFUGVIVGFVDCEUHUIEFCUJUKULUMUNUOUP $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.  $d x y B $.
    funopfv.1 $e |- B e. _V $.
    $( The second element in an ordered pair member of a function is the
       function's value. $)
    funopfv $p |- ( Fun F -> ( <. A , B >. e. F -> ( F ` A ) = B ) ) $=
      ( wfun wbr cfv wceq cop wcel funbrfv df-br syl5ibr ) CEABCFACGBHABICJABCD
      KABCLM $.
      $( [19-Jul-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( The second element in an ordered pair member of a function is the
       function's value. $)
    funopfvg $p |- ( ( B e. C /\ Fun F ) ->
                   ( <. A , B >. e. F -> ( F ` A ) = B ) ) $=
      ( vx wcel wfun cop cfv wceq wi cv opeq2 eleq1d eqeq2 imbi12d imbi2d 
      visset funopfv vtoclg imp ) BCFDGZABHZDFZADIZBJZKZUBAELZHZDFZUEUHJZKZKUBU
      GKEBCUHBJZULUGUBUMUJUDUKUFUMUIUCDUHBAMNUHBUEOPQAUHDERSTUA $.
      $( [14-Sep-1999] $)
  $}


  ${
    $d x y F $.  $d x A $.  $d x y B $.  $d x C $.
    fnfvbr.1 $e |- C e. _V $.
    $( Equivalence of function value and binary relation. $)
    fnbrfvb $p |- ( ( F Fn A /\ B e. A ) ->
                   ( ( F ` B ) = C <-> B F C ) ) $=
      ( vx vy wfn wcel wa cfv cv wceq wbr wb wi eqeq2 breq2 bibi12d imbi2d weu 
      fneu breq1 eubidv fveq2 eqeq1d imbi12d visset tz6.12c vtoclg adantl mpd 
      vtocl ) DAHZBAIZJZBDKZFLZMZBURDNZOZPUPUQCMZBCDNZOZPFCEURCMZVAVDUPVEUSVBUT
      VCURCUQQURCBDRSTUPUTFUAZVAFABDUBUOVFVAPZUNGLZURDNZFUAZVHDKZURMZVIOZPVGGBA
      VHBMZVJVFVMVAVNVIUTFVHBURDUCZUDVNVLUSVIUTVNVKUQURVHBDUEUFVOSUGFVHDGUHUIUJ
      UKULUM $.
      $( [19-Apr-2004] $)

    $( Equivalence of function value and ordered pair membership. $)
    fnopfvb $p |- ( ( F Fn A /\ B e. A ) ->
                   ( ( F ` B ) = C <-> <. B , C >. e. F ) ) $=
      ( wfn wcel wa cfv wceq wbr cop fnbrfvb df-br syl6bb ) DAFBAGHBDICJBCDKBCL
      DGABCDEMBCDNO $.
      $( [7-Nov-1995] $)
  $}

  ${
    funbrfvb.1 $e |- B e. _V $.
    $( Equivalence of function value and binary relation. $)
    funbrfvb $p |- ( ( Fun F /\ A e. dom F ) ->
                   ( ( F ` A ) = B <-> A F B ) ) $=
      ( cdm wfn wcel cfv wceq wbr wb wfun fnbrfvb df-fn eqid mpbiran2 sylanbr 
      ) CCEZFZARGACHBIABCJKCLZRABCDMSTRRICRNROPQ $.
      $( [26-Mar-2006] $)

    $( Equivalence of function value and ordered pair membership.  Theorem
       4.3(ii) of [Monk1] p. 42. $)
    funopfvb $p |- ( ( Fun F /\ A e. dom F ) ->
                   ( ( F ` A ) = B <-> <. A , B >. e. F ) ) $=
      ( wfun cdm wcel wa cfv wceq wbr cop funbrfvb df-br syl6bb ) CEACFGHACIBJA
      BCKABLCGABCDMABCNO $.
      $( [26-Jan-1997] $)
  $}

  ${
    $d x y z w A $.  $d x y B $.  $d x y z w F $.  $d x y C $.
    $( Function value in terms of a binary relation. $)
    funbrfvbg $p |- ( ( Fun F /\ A e. dom F /\ B e. C ) ->
                   ( ( F ` A ) = B <-> A F B ) ) $=
      ( vx wcel wfun cdm cfv wceq wbr wb wa cv wi eqeq2 breq2 bibi12d imbi2d 
      visset funbrfvb vtoclg 3impib 3coml ) BCFZDGZADHFZADIZBJZABDKZLZUEUFUGUKU
      FUGMZUHENZJZAUMDKZLZOULUKOEBCUMBJZUPUKULUQUNUIUOUJUMBUHPUMBADQRSAUMDETUAU
      BUCUD $.
      $( [20-Jan-2007] $)

    $( Representation of a function in terms of its values. $)
    dffn5 $p |- ( F Fn A <->
                   F = { <. x , y >. | ( x e. A /\ y = ( F ` x ) ) } ) $=
      ( vz vw wfn cv wcel cfv wceq wa copab cop wb wal fnop ex pm4.71rd visset 
      fnopfvb eqcom syl5bb pm5.32da bitr4d eleq1 fveq2 eqeq2d anbi12d eqeq1 
      anbi2d opelopab syl6bbr 19.21aivv wrel eqrel fnrel relopab sylancl 
      mpbird fvex eqid fnopab2 fneq1 mpbiri impbii ) DCGZDAHZCIZBHZVHDJZKZLZABM
      ZKZVGVOEHZFHZNZDIZVRVNIZOZFPEPZVGWAEFVGVSVPCIZVQVPDJZKZLZVTVGVSWCVSLWFVGV
      SWCVGVSWCCVPVQDQRSVGWCWEVSVGWCLWDVQKVSWECVPVQDFTZUAVQWDUBUCUDUEVMWCVJWDKZ
      LWFABVPVQETWGVHVPKZVIWCVLWHVHVPCUFWIVKWDVJVHVPDUGUHUIVJVQKWHWEWCVJVQWDUJU
      KULUMUNDUOVNUOVOWBOVGEFDVNUPCDUQVMABURUSUTVOVGVNCGABCVKVNVHDVAVNVBVCCDVNV
      DVEVF $.
      $( [29-Jan-2004] $)

    $( The range of a function expressed as a collection of the function's
       values. $)
    fnrnfv $p |- ( F Fn A -> ran F = { y | E. x e. A y = ( F ` x ) } ) $=
      ( wfn cv cop wcel wex cab cfv wceq wrex crn wa cdm fndm eleq2d visset 
      opeldm syl5bi pm4.71rd fnopfvb eqcom syl5rbbr pm5.32da bitrd exbidv 
      df-rex syl6bbr abbidv dfrn3 syl5eq ) DCEZAFZBFZGDHZAIZBJUPUODKZLZACMZBJDN
      UNURVABUNURUOCHZUTOZAIVAUNUQVCAUNUQVBUQOVCUNUQVBUNUODPZHVBUQUNVDCUOCDQRUO
      UPDASTUAUBUNVBUQUTUNVBOUSUPLUQUTCUOUPDBSUCUSUPUDUEUFUGUHUTACUIUJUKABDULUM
      $.
      $( [20-Oct-2005] $)

    $( A member of a function's range is a value of the function. $)
    fvelrnb $p |- ( F Fn A -> ( B e. ran F <-> E. x e. A ( F ` x ) = B ) ) $=
      ( vy wfn crn wcel cv cfv wceq wrex cab fnrnfv eleq2d cvv wi fvex eleq1 
      mpbii a1i r19.23aiv eqeq1 eqcom syl6bb rexbidv elab3 ) DBFZCDGZHCEIZAIZDJ
      ZKZABLZEMZHULCKZABLZUHUIUOCAEBDNOUNUQECUPCPHZABUPURQUKBHUPULPHURUKDRULCPS
      TUAUBUJCKZUMUPABUSUMCULKUPUJCULUCCULUDUEUFUGUE $.
      $( [31-Oct-1995] $)

    $( Alternate definition of the image of a function.  (Contributed by Raph
       Levien, 20-Nov-2006.) $)
    dfimafn $p |- ( ( Fun F /\ A C_ dom F ) ->
                  ( F " A ) = { y | E. x e. A ( F ` x ) = y } ) $=
      ( wfun cdm wss wa cv cfv wceq wrex cab wbr cima wcel wb ssel visset 
      funbrfvb ex syl9r imp31 rexbidva abbidv dfima2 syl6reqr ) DEZCDFZGZHZAIZD
      JBIZKZACLZBMULUMDNZACLZBMDCOUKUOUQBUKUNUPACUHUJULCPZUNUPQZUJURULUIPZUHUSC
      UIULRUHUTUSULUMDBSTUAUBUCUDUEABDCUFUG $.
      $( [20-Nov-2006] $)

    $( Alternate definition of the image of a function as an indexed union of
       singletons of function values.  (Contributed by Raph Levien,
       20-Nov-2006.) $)
    dfimafn2 $p |- ( ( Fun F /\ A C_ dom F ) ->
                   ( F " A ) = U_ x e. A { ( F ` x ) } ) $=
      ( vy wfun cdm wss wa cima cv cfv wceq cab ciun csn wrex dfimafn iunab 
      syl6eqr wcel df-sn eqcom abbii eqtri a1i iuneq2i ) CEBCFGHZCBIZABAJZCKZDJ
      ZLZDMZNZABUJOZNUGUHULABPDMUNADBCQULADBRSABUOUMUOUMLUIBTUOUKUJLZDMUMDUJUAU
      PULDUKUJUBUCUDUEUFS $.
      $( [20-Nov-2006] $)

    $( Membership relation for the values of a function whose image is a
       subclass.  (Contributed by Raph Levien, 20-Nov-2006.) $)
    funimass4 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( ( F " A ) C_ B <-> A. x e. A ( F ` x ) e. B ) ) $=
      ( vy cdm wss wfun cima cv cfv wcel wral wb wa wi wal wceq wrex wbr ssel 
      visset funbrfvb ex syl9 imp31 eqcom syl5bb rexbidva elima syl6rbbr 
      imbi1d r19.23v syl6bbr albidv ralcom4 fvex eleq1 ceqsalv ralbii bitr3i 
      syl6bb dfss2 ancoms ) BDFZGZDHZDBIZCGZAJZDKZCLZABMZNVFVGOZEJZVHLZVOCLZPZE
      QZVMVIVNVSVOVKRZVQPZABMZEQZVMVNVRWBEVNVRVTABSZVQPWBVNVPWDVQVNWDVJVODTZABS
      VPVNVTWEABVNVJBLZOVKVORZWEVTVFVGWFWGWENZVFWFVJVELZVGWHBVEVJUAVGWIWHVJVODE
      UBZUCUDUEUFVOVKUGUHUIAVODBWJUJUKULVTVQABUMUNUOWCWAEQZABMVMWAAEBUPWKVLABVQ
      VLEVKVJDUQVOVKCURUSUTVAVBEVHCVCUHVD $.
      $( [20-Nov-2006] $)

    $( Function value in an image.  Part of Theorem 4.4(iii) of [Monk1] p. 42.
       (The proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    fvelima $p |- ( ( Fun F /\ A e. ( F " B ) ) ->
                  E. x e. B ( F ` x ) = A ) $=
      ( wfun cima wcel wa cv cfv wceq wrex simpr wbr wi cop funopfvg df-br 
      syl5ib ancoms reximdv elimag ibi syl5 mpd ) DEZBDCFZGZHZUHAIZDJBKZACLZUFU
      HMUIUJBDNZACLZULUHUIUMUKACUHUFUMUKOUHUFHUJBPDGUKUMUJBUGDQUJBDRSTUAUHUNABD
      CUGUBUCUDUE $.
      $( [22-Oct-2011] $) $( [29-Apr-2004] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d x y C $.  $d x y F $.
    $( Function value in an image.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.)  (An unnecessary distinct variable restriction was removed
       by David Abernethy, 17-Dec-2011.) $)
    fvelimab $p |- ( ( F Fn A /\ B C_ A ) -> ( C e. ( F " B ) <->
                  E. x e. B ( F ` x ) = C ) ) $=
      ( vy wfn wss wa cima wcel cv cfv wceq wrex cvv elisset anim2i wi fvex 
      eleq1 mpbii a1i r19.23aiv wb eqeq2 rexbidv bibi12d imbi2d wfun cdm cab 
      fnfun adantr fndm sseq2d biimpar dfimafn syl11anc abeq2d vtoclg impcom 
      pm5.21nd ) EBGZCBHZIZDECJZKZALZEMZDNZACOZVFDPKZIVHVMVFDVGQRVLVMVFVKVMACVK
      VMSVICKVKVJPKVMVIETVJDPUAUBUCUDRVMVFVHVLUEZVFFLZVGKZVJVONZACOZUEZSVFVNSFD
      PVODNZVSVNVFVTVPVHVRVLVODVGUAVTVQVKACVODVJUFUGUHUIVFVRFVGVFEUJZCEUKZHZVGV
      RFULNVDWAVEBEUMUNVDWCVEVDWBBCBEUOUPUQAFCEURUSUTVAVBVC $.
      $( [25-Dec-2011] $) $( [20-Jan-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.
    $( The indexed intersection of a function's values is the intersection of
       its range. $)
    fniinfv $p |- ( F Fn A -> |^|_ x e. A ( F ` x ) = |^| ran F ) $=
      ( vy wfn crn cint cv cfv wceq wrex cab ciin fnrnfv inteqd fvex dfiin2 
      syl6reqr ) CBEZCFZGDHAHZCIZJABKDLZGABUBMSTUCADBCNOADBUBUACPQR $.
      $( [20-Oct-2005] $)

    $( Singleton of function value. $)
    fnsnfv $p |- ( ( F Fn A /\ B e. A ) -> { ( F ` B ) } = ( F " { B } ) ) $=
      ( vy wfn wcel wa cv cfv wceq cab wbr csn cima visset fnbrfvb eqcom 
      syl5bb abbidv df-sn a1i wrel fnrel relimasn syl adantr 3eqtr4d ) CAEZBAFZ
      GZDHZBCIZJZDKZBUKCLZDKZULMZCBMNZUJUMUODUJULUKJUOUMABUKCDOPUKULQRSUQUNJUJD
      ULTUAUHURUPJZUIUHCUBUSACUCDBCUDUEUFUG $.
      $( [22-May-1998] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z F $.
    ssimaex.1 $e |- A e. _V $.
    $( The existence of a subimage. $)
    ssimaex $p |- ( ( Fun F /\ B C_ ( F " A ) ) ->
                 E. x ( x C_ A /\ B = ( F " x ) ) ) $=
      ( vy vz vw wfun cdm cin cima wss cv wceq wa wex cfv wcel crab inex1 
      rabex sseq1 imaeq2 eqeq2d anbi12d cla4ev ssrab2 ssel2 adantll wi wrex 
      fvelima ex adantr eleq1a anim2d fveq2 eleq1d elrab syl6ibr simpr a1i 
      jcad reximdv2 adantl wb wfn funfn inss2 sstri fvelimab mpan2 sylbi 
      sylibrd syld adantlr mpd eleq1 biimpcd r19.23aiv syl6 impbid eqrdv 
      sylancr inss1 sstr anim1i eximi syl cres dmres imaeq2i imadmres eqtr3i 
      sseq2i sylan2br ) DIZCDBDJZKZLZMZANZBMZCDXCLZOZPZAQZCDBLZMWRXBPZXCWTMZXFP
      ZAQZXHFNZDRZCSZFWTTZWTMZCDXQLZOZXMXJXLXRXTPAXQXPFWTBWSEUAUBXCXQOZXKXRXFXT
      XCXQWTUCYAXEXSCXCXQDUDUEUFUGXPFWTUHZXJGCXSXJGNZCSZYCXSSZXJYDYEXJYDPYCXASZ
      YEXBYDYFWRCXAYCUIUJWRYDYFYEUKXBWRYDPZYFHNZDRZYCOZHWTULZYEWRYFYKUKYDWRYFYK
      HYCWTDUMUNUOYGYKYJHXQULZYEYDYKYLUKWRYDYJYJHWTXQYDYHWTSZYJPZYHXQSZYJYDYNYM
      YICSZPZYOYDYJYPYMYCCYIUPUQXPYPFYHWTXNYHOXOYICXNYHDURUSUTZVAYNYJUKYDYMYJVB
      VCVDVEVFWRYEYLVGZYDWRDWSVHZYSDVIYTXQWSMYSXQWTWSYBBWSVJVKHWSXQYCDVLVMVNUOV
      OVPVQVRUNWRYEYDUKXBWRYEYLYDWRYEYLHYCXQDUMUNYJYDHXQYOYQYJYDUKZYRYPUUAYMYJY
      PYDYIYCCVSVTVFVNWAWBUOWCWDWEXLXGAXKXDXFXKWTBMXDBWSWFXCWTBWGVMWHWIWJXAXICD
      DBWKJZLXAXIUUBWTDDBWLWMDBWNWOWPWQ $.
      $( [8-Apr-2007] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d F x y $.
    $( The existence of a subimage.  (Contributed by FL, 15-Apr-2007.) $)
    ssimaexg $p |- ( ( A e. C /\ Fun F /\ B C_ ( F " A ) ) ->
                 E. x ( x C_ A /\ B = ( F " x ) ) ) $=
      ( vy wcel wfun cima wss cv wceq wa wex wi imaeq2 sseq2d anbi2d sseq2 
      anbi1d exbidv imbi12d visset ssimaex vtoclg 3impib ) BDGEHZCEBIZJZAKZBJZC
      EUJILZMZANZUGCEFKZIZJZMZUJUOJZULMZANZOUGUIMZUNOFBDUOBLZURVBVAUNVCUQUIUGVC
      UPUHCUOBEPQRVCUTUMAVCUSUKULUOBUJSTUAUBAUOCEFUCUDUEUF $.
      $( [10-Apr-2007] $)
  $}

  $( A simplified expression for the value of a function when we know it's a
     function. $)
  funfv $p |- ( Fun F -> ( F ` A ) = U. ( F " { A } ) ) $=
    ( wfun cdm wcel cfv csn cima cuni wceq wa wfn fnsnfv df-fn eqid mpbiran2 
    sylanbr unieqd fvex unisn syl5eqr ex wn c0 ndmfv ndmima uni0 syl6eq eqtr4d 
    pm2.61d1 ) BCZABDZEZABFZBAGHZIZJZUKUMUQUKUMKZUNGZIUPUNURUSUOBULLZUMUSUOJUKU
    LABMUTUKULULJBULNULOPQRUNABSTUAUBUMUCZUNUDUPABUEVAUPUDIUDVAUOUDABUFRUGUHUIU
    J $.
    $( [22-May-1998] $)

  ${
    $d y A $.  $d y F $.
    $( The value of a function.  Definition of function value in [Enderton]
       p. 43. $)
    funfv2 $p |- ( Fun F -> ( F ` A ) = U. { y | A F y } ) $=
      ( wfun cfv csn cima cuni cv wbr cab funfv wrel wceq funrel relimasn syl 
      unieqd eqtrd ) CDZBCECBFGZHBAICJAKZHBCLTUAUBTCMUAUBNCOABCPQRS $.
      $( [11-May-2005] $) $( [22-May-1998] $)
  $}

  ${
    $d w z A $.  $d w z F $.  $d w y z $.
    funfv2f.1 $e |- ( z e. A -> A. y z e. A ) $.
    funfv2f.2 $e |- ( z e. F -> A. y z e. F ) $.
    $( The value of a function.  Version of ~ funfv2 using a bound-variable
       hypotheses instead of distinct variable conditions. $)
    funfv2f $p |- ( Fun F -> ( F ` A ) = U. { y | A F y } ) $=
      ( vw wfun cfv cv wbr cab cuni funfv2 wcel ax-17 hbbr breq2 cbvab unieqi 
      syl6eq ) DHCDICGJZDKZGLZMCAJZDKZALZMGCDNUDUGUCUFGAABCUBDEFBJUBOAPQUFGPUBU
      ECDRSTUA $.
      $( [19-Feb-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z F $.
    $( Alternate definition of function value ~ df-fv that doesn't require
       dummy variables. $)
    dffv2 $p |- ( F ` A ) = U. ( ( F " { A } )
            \ U. U. ( ( ( F |` { A } ) o. `' ( F |` { A } ) ) \ _I ) ) $=
      ( vy vz vx csn cres wfun cfv cima ccnv ccom cid cdif cuni wceq funfv c0 
      wss wrel df-fun simprbi ssdif0 sylib unieqd uni0 syl6eq difeq2d resima 
      dif0 eqtr4i syl6reqr eqtrd cvv wcel snidb fvres sylbi wn fvprc eqtr4d 
      pm2.61i syl5eqr nfunsn cdm wa cv wbr wex wi wal dffun3 relres mpbiran 
      iman albii alnex bitri exbii exnal 3bitrri con1bii ax-4 eximi eleq2 elsn 
      syl6bb biimpa snssi ssdmres biimpi residm dmeqi syl visset breldm syl2an 
      breq1d biimpd ex pm2.43d anim1d eximdv 19.23adv mpan9 cpr cop wrex wb 
      brcnvg brrelexi sylancr biimpar adantl breq2 breq1 anbi12d rcla4ev 
      mpancom ancoms syldan anim1i an32s eldif rexv brco df-br 3bitr2ri ideq 
      equcom 3bitr3i notbii anbi12i bitr2i uniss 3syl opex unisn syl5ssr uniop 
      prss sylibr simpld eleq2i elimasni sylbir syl5 19.23aiv ssrdv ndmima 
      difeq1d 0dif pm2.61d1 ) BAFZGZHZABIZBUUNJZUUOUUOKZLZMNZOZOZNZOZPUUPAUUOIZ
      UVEUUQUUPUVFUUOUUNJZOUVEAUUOQUUPUVGUVDUUPUVDUURRNZUVGUUPUVCRUURUUPUVCROZR
      UUPUVBRUUPUVBUVIRUUPUVARUUPUUTMSZUVARPUUPUUOTZUVJUUOUAUBUUTMUCUDUEUFUGUEU
      FUGUHUVGUURUVHBUUNUIZUURUJUKULUEUMAUNUOZUVFUUQPZUVMAUUNUOUVNAUPAUUNBUQURU
      VMUSUVFRUUQAUUOUTABUTVAVBVCUUPUSZUUQRUVEABVDUVOUVEUVIRUVOUVDRUVOAUUOVEZUO
      ZUVDRPZUVOUVQUVRUVOUVQVFZUURUVCSUVRUVSCUURUVCUVSADVGZUUOVHZUVTCVGZPZUSZVF
      ZDVIZUWBUURUOZUWBUVCUOZVJZUVOEVGZUVTUUOVHZUWDVFZDVIZEVIZUVQUWFUVOUWMCVKZE
      VIZUWNUWPUUPUUPUWKUWCVJZDVKZCVIZEVKZUWOUSZEVKUWPUSUUPUVKUWTEDCUUOVLBUUNVM
      ZVNUWSUXAEUWSUWMUSZCVIUXAUWRUXCCUWRUWLUSZDVKUXCUWQUXDDUWKUWCVOVPUWLDVQVRV
      SUWMCVTVRVPUWOEVQWAWBUWOUWMEUWMCWCWDURUVQUWMUWFEUVQUWLUWEDUVQUWKUWAUWDUVQ
      UWKUWAUVQUWKUWKUWAVJUVQUWKVFZUWKUWAUXEUWJAUVTUUOUVPUUNPZUWJUVPUOZUWJAPZUV
      QUWKUXFUXGUXHUXFUXGUWJUUNUOUXHUVPUUNUWJWEEAWFWGWHUVQUUNUVPSZUXFAUVPWIUXIU
      UOUUNGZVEZUUNUVPUXIUXKUUNPUUNUUOWJWKUXJUUOBUUNWLWMVCWNUWJUVTUUOEWOWPWQWRW
      SWTXAXBXCXDXEUWEUWIDUWEAUWBUUOVHZUWHUWGUWEUXLUWHUWEUXLVFZUWHUVTUVCUOZUXMU
      WBUVTXFZUVCSUWHUXNVFUXMUWBUVTXGZOZUVCUXOUXMUXPUVBSUXQUVCSUXMUXPFZOZUVBUXP
      UXMUXPUVAUOZUXRUVASUXSUVBSUXMUWBUWJUUSVHZUWKVFZEUNXHZUWDVFZUXTUWAUXLUWDUY
      DUWAUXLVFUYCUWDUWAUXLUWBAUUSVHZUYCUWAUYEUXLUWBUNUOUVMUYEUXLXIUWAUWBAUNUNU
      UOXJCWOZAUVTUUOUXBXKZXLXMUYEUWAUYCUVMUYEUWAVFZUYCUWAUVMUYEUYGXNUYBUYHEAUN
      UXHUYAUYEUWKUWAUWJAUWBUUSXOUWJAUVTUUOXPXQXRXSXTYAYBYCUXTUXPUUTUOZUXPMUOZU
      SZVFUYDUXPUUTMYDUYIUYCUYKUWDUYCUYBEVIUWBUVTUUTVHUYIUYBEYEEUWBUVTUUOUUSUYF
      DWOZYFUWBUVTUUTYGYHUYJUWCUWBUVTMVHUWBUVTPUYJUWCUWBUVTUYLYIUWBUVTMYGCDYJYK
      YLYMYNUDUXPUVAWIUXRUVAYOYPUXPUWBUVTYQYRYSUXPUVBYOWNUWBUVTYTYSUWBUVTUVCUYF
      UYLUUAUUBUUCWTUWGUWBUVGUOUXLUVGUURUWBUVLUUDUUOAUWBUUEUUFUUGUUHWNUUIUURUVC
      UCUDWTUVQUSZUVDRUVCNRUYMUURRUVCUYMUVGRUURAUUOUUJUVLVCUUKUVCUULUGUUMUEUFUG
      VAVB $.
      $( [4-Aug-2010] $)
  $}

  ${
    $d y z A $.  $d y z F $.  $d y z G $.
    $( Domains of a function composition. $)
    dmfco $p |- ( ( Fun G /\ A e. dom G ) ->
               ( A e. dom ( F o. G ) <-> ( G ` A ) e. dom F ) ) $=
      ( vz vy wfun cdm wcel wa ccom cv cop wex cfv wb eldm2g cvv visset 
      opelco2g mpan2 exbidv bitrd adantl wceq funopfvb eqcom syl5bb anbi1d 
      fvex opeq1 eleq1d ceqsexv syl5bbr eldm2 bitr4d ) CFZACGZHZIZABCJZGHZADKZL
      CHZVBEKZLZBHZIZDMZEMZACNZBGHZURVAVIOUPURVAAVDLUTHZEMVIEAUTUQPURVLVHEURVDQ
      HVLVHOERDAVDBCUQQSTUAUBUCUSVJVDLZBHZEMVIVKUSVNVHEUSVBVJUDZVFIZDMVHVNUSVPV
      GDUSVOVCVFUSVJVBUDVCVOAVBCDRUEVBVJUFUGUHUAVFVNDVJACUIZVOVEVMBVBVJVDUJUKUL
      UMUAEVJBVQUNUGUO $.
      $( [27-Jan-1997] $)

    $( Value of a function composition.  Similar to Exercise 5 of
       [TakeutiZaring] p. 28. $)
    fvco $p |- ( ( Fun F /\ Fun G /\ A e. dom G ) ->
               ( ( F o. G ) ` A ) = ( F ` ( G ` A ) ) ) $=
      ( vz wfun cdm wcel w3a ccom cfv wceq wa cop wi dmfco anbi2d cv wex wb 
      cvv fvex opelco2g mpan2 adantl visset funopfvb eqcom syl5bb anbi1d 
      exbidv opeq1 eleq1d ceqsexv syl5bbr bitr4d eqid mpbii syl5bir sylbid 
      exp4b com3r 3imp1 funco sylan 3adantl3 mpbird ex wn c0 ndmfv notbid 
      syl6bi imp eqtr4d 3adant1 pm2.61d ) BEZCEZACFZGZHZABCIZFGZAWBJZACJZBJZKZW
      AWCWGWAWCLWGAWFMWBGZVQVRVTWCWHVRVTVQWCWHNVRVTVQWCWHVRVTLZVQWCLVQWEBFGZLZW
      HWIWCWJVQABCOZPWIWHWEWFMZBGZWKWIWHADQZMCGZWOWFMZBGZLZDRZWNVTWHWTSZVRVTWFT
      GXAWEBUAZDAWFBCVSTUBUCUDWIWOWEKZWRLZDRWTWNWIXDWSDWIXCWPWRWIWEWOKWPXCAWOCD
      UEUFWOWEUGUHUIUJWRWNDWEACUAXCWQWMBWOWEWFUKULUMUNUOWKWFWFKWNWFUPWEWFBXBUFU
      QURUSUTVAVBVQVRWCWGWHSZVTWBEWCXEVQVRLAWFWBXBUFBCVCVDVEVFVGVRVTWCVHZWGNVQW
      IXFWGWIXFLWDVIWFXFWDVIKWIAWBVJUDWIXFWFVIKZWIXFWJVHXGWIWCWJWLVKWEBVJVLVMVN
      VGVOVP $.
      $( [22-Apr-2006] $)
  $}

  $( Value of a function composition.  Similar to second part of Theorem 3H of
     [Enderton] p. 47.  (The proof was shortened by Andrew Salmon,
     22-Oct-2011.) $)
  fvco2 $p |- ( ( Fun F /\ G Fn A /\ C e. A ) ->
             ( ( F o. G ) ` C ) = ( F ` ( G ` C ) ) ) $=
    ( wfun wfn wcel ccom cfv wceq wa wi cdm fvco 3expib com12 funfni 3impib ) 
    CEZDAFZBAGZBCDHIBDICIJZTUAKSUBSUBLABDSDEZBDMGZKUBSUCUDUBBCDNOPQPR $.
    $( [22-Oct-2011] $) $( [9-Oct-2004] $)

  $( Value of a function composition. $)
  fvco3 $p |- ( ( Fun F /\ G : A --> B /\ C e. A ) ->
             ( ( F o. G ) ` C ) = ( F ` ( G ` C ) ) ) $=
    ( wfun wfn wcel ccom cfv wceq wf fvco2 ffn syl3an2 ) DFEAGCAHCDEIJCEJDJKABE
    LACDEMABENO $.
    $( [21-Aug-2006] $) $( [3-Jan-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ch $.
    fvopab3.1 $e |- B e. _V $.
    fvopab3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab3.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    fvopab3.4 $e |- ( x e. C -> E! y ph ) $.
    fvopab3.5 $e |- F = { <. x , y >. | ( x e. C /\ ph ) } $.
    $( Value of a function given by ordered-pair class abstraction. $)
    fvopab3 $p |- ( A e. C -> ( ( F ` A ) = B <-> ch ) ) $=
      ( wcel cop cv wa copab cfv wceq cvv wb eleq1 anbi12d anbi2d opelopabg 
      mpan2 wfn fnopab fnopfvb mpan eleq2i syl6bb ibar 3bitr4d ) FHOZFGPZDQZHOZ
      ARZDESZOZUQCRZFITGUAZCUQGUBOVCVDUCJVAUQBRVDDEFGHUBUSFUAUTUQABUSFHUDKUEEQG
      UABCUQLUFUGUHUQVEURIOZVCIHUIUQVEVFUCADEHIMNUJHFGIJUKULIVBURNUMUNUQCUOUP 
      $.
      $( [6-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ch $.
    fvopab3ig.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab3ig.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    fvopab3ig.3 $e |- ( x e. C -> E* y ph ) $.
    fvopab3ig.4 $e |- F = { <. x , y >. | ( x e. C /\ ph ) } $.
    $( Value of a function given by ordered-pair class abstraction. $)
    fvopab3ig $p |- ( ( A e. C /\ B e. D ) -> ( ch -> ( F ` A ) = B ) ) $=
      ( wcel wa cv copab cfv wceq cop wi eleq1 anbi12d anbi2d opelopabg 
      biimpar exp43 pm2.43a imp wfun wmo funopab moanimv mpbir mpgbir funopfvg 
      mpan2 adantl syld fveq1i eqeq1i syl6ibr ) FHOZGIOZPZCFDQZHOZAPZDERZSZGTZF
      JSZGTVFCFGUAVJOZVLVDVECVNUBZVEVDVOVDVEVDCVNVFVNVDCPZVIVDBPVPDEFGHIVGFTVHV
      DABVGFHUCKUDEQGTBCVDLUEUFUGUHUIUJVEVNVLUBZVDVEVJUKZVQVRVIEULZDVIDEUMVSVHA
      EULUBMVHAEUNUOUPFGIVJUQURUSUTVMVKGFJVJNVAVBVC $.
      $( [23-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    fvopab4g.1 $e |- ( x = A -> B = C ) $.
    fvopab4g.2 $e |- F = { <. x , y >. | ( x e. D /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction. $)
    fvopab4g $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( wcel wa wceq cfv eqid cv eqeq2d eqeq1 wmo moeq a1i fvopab3ig mpi ) CFKE
      GKLEEMZCHNEMEOBPZDMZUEEMUDABCEFGHAPZCMDEUEIQUEEERUFBSUGFKBDTUAJUBUC $.
      $( [23-Oct-1999] $)

    ${
      fvopab4.3 $e |- C e. _V $.
      $( Value of a function given by ordered-pair class abstraction. $)
      fvopab4 $p |- ( A e. D -> ( F ` A ) = C ) $=
        ( wcel cvv cfv wceq fvopab4g mpan2 ) CFKELKCGMENJABCDEFLGHIOP $.
        $( [23-Oct-1999] $)
    $}
  $}

  ${
    $d v w z A $.  $d u v w y B $.  $d z w v C $.  $d v w x y D $.  $d u x z $.
    fvopab4gf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopab4gf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopab4gf.3 $e |- ( x = A -> B = C ) $.
    fvopab4gf.4 $e |- F = { <. x , y >. | ( x e. D /\ y = B ) } $.
    $( Value of a function given by an ordered-pair class abstraction.  This
       version of ~ fvopab4g uses bound-variable hypotheses instead of distinct
       variable conditions. $)
    fvopab4gf $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( vw vv wcel wa cv csb wceq copab cfv csbhypf eqid fvopab4g fveq1i ax-17 
      visset hbcsb1 hbeleq hban wb eleq1 adantr id csbeq1a eqeqan12rd anbi12d 
      cbvopab eqtri syl5eq ) DGPFHPQDNRZGPZORZAVBESZTZQZNOUAZUBZFDIUBZNODVEFGHV
      HANCDEFJKLUCVHUDUEVJDARZGPZBRZETZQZABUAZUBVIDIVPMUFDVPVHVOVGABNOVONUGVOOU
      GVCVFAVCAUGAOVEAOVBENUHVDVBPAUGUIUJUKVGBUGVKVBTZVMVDTZQVLVCVNVFVQVLVCULVR
      VKVBGUMUNVRVQVMVDEVEVRUOAVBEUPUQURUSUFUTVA $.
      $( [20-Dec-2008] $) $( [8-Nov-2005] $)
  $}

  ${
    $d z A $.  $d y B $.  $d z B $.  $d x y C $.  $d x z $.
    fvopab4sf.1 $e |- A e. _V $.
    fvopab4sf.2 $e |- B e. _V $.
    fvopab4sf.3 $e |- ( z e. A -> A. x z e. A ) $.
    fvopab4sf.4 $e |- F = { <. x , y >. | ( x e. C /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction, using
       explicit class substitution. $)
    fvopab4sf $p |- ( A e. C -> ( F ` A ) = [_ A / x ]_ B ) $=
      ( wcel csb cvv cfv wceq csbex hbcsb1 csbeq1a fvopab4gf mpan2 ) DFLADEMZNL
      DGOUBPADEHIQABCDEUBFNGJACDEHJRADESKTUA $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x z A $.  $d y z B $.  $d x y C $.
    fvopab4s.1 $e |- A e. _V $.
    fvopab4s.2 $e |- B e. _V $.
    fvopab4s.3 $e |- F = { <. x , y >. | ( x e. C /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction, using
       explicit class substitution. $)
    fvopab4s $p |- ( A e. C -> ( F ` A ) = [_ A / x ]_ B ) $=
      ( vz cv wcel ax-17 fvopab4sf ) ABJCDEFGHJKCLAMIN $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x y A $.
    fvopab4ndm.1 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Value of a function given by an ordered-pair class abstraction, outside
       of its domain. $)
    fvopab4ndm $p |- ( -. B e. A -> ( F ` B ) = (/) ) $=
      ( wcel wn cdm cfv c0 wceq cv wa copab dmeqi dmopabss eqsstri sseli con3i 
      ndmfv syl ) EDHZIEFJZHZIEFKLMUFUDUEDEUEBNDHAOBCPZJDFUGGQABCDRSTUAEFUBUC 
      $.
      $( [28-Mar-2008] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.  $d x y z w C $.
    fvopabg.1 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction. $)
    fvopabg $p |- ( ( A e. D /\ C e. R ) ->
                    ( { <. x , y >. | y = B } ` A ) = C ) $=
      ( cvv wcel cv wceq copab cfv wa visset biantrur opabbii fvopab4g elisset 
      sylan ) CIJEGJCBKDLZABMZNELCFJABCDEIGUCHUBAKIJZUBOABUDUBAPQRSCFTUA $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.
    fvopabn.1 $e |- ( x = A -> B = C ) $.
    $( This somewhat non-intuitive theorem tells us the value of its function
       is the empty set when the class ` C ` it would otherwise map to is a
       proper class.  This is a technical lemma that can help eliminate
       redundant sethood antecedents otherwise required by ~ fvopabg . $)
    fvopabn $p |- ( -. C e. _V -> ( { <. x , y >. | y = B } ` A ) = (/) ) $=
      ( vz vw cvv wcel wn cv wceq copab cfv c0 wi wa cuni csn cima cab wex wne 
      visset snnz df-ne mpbi cop opeq1 eleq1d ceqsexgv elsn anbi1i exbii 
      syl5bb wb eqeq2d eqeq1 opelopabg mpan2 bitrd abbidv eleq1 mpbii 19.23aiv 
      con3i abn0 necon1bbii sylib sylan9eq dfima3 syl5eq eqeq1d eqcom syl6bb 
      mtbiri nexdv unieqd df-fv uni0 syl6eq ex fvprc a1d pm2.61i ) CIJZEIJZKZCB
      LZDMZABNZOZPMZQWGWIWNWGWIRZWMPSZPWOWLCTZUAZGLZTZMZGUBZSWPWMWOXBPWOXAGUCZK
      XBPMWOXAGWOXAWTPMZWTPUDXDKWSGUEUFWTPUGUHWOXAPWTMXDWOWRPWTWOWSWQJZWSHLZUIZ
      WLJZRZGUCZHUBZPWRWGWIXKXFEMZHUBZPWGXJXLHWGXJCXFUIZWLJZXLWGWSCMZXHRZGUCXOX
      JXHXOGCIXPXGXNWLWSCXFUJUKULXIXQGXEXPXHGCUMUNUOUPWGXFIJZXOXLUQHUEZWKWJEMXL
      ABCXFIIALCMDEWJFURWJXFEUSUTVAVBVCWIXLHUCZKXMPMXTWHXLWHHXLXRWHXSXFEIVDVEVF
      VGXTXMPXLHVHVIVJVKGHWLWQVLVMVNPWTVOVPVQVRXCXBPXAGVHVIVJVSGCWLVTVMWAWBWCWG
      KWNWICWLWDWEWF $.
      $( [21-Oct-2003] $)
  $}

  ${
    $d z w v A $.  $d y w v B $.  $d z w v C $.  $d x y w v $.  $d x z $.
    fvopabgf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopabgf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopabgf.3 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction. $)
    fvopabgf $p |- ( ( A e. D /\ C e. R ) ->
                    ( { <. x , y >. | y = B } ` A ) = C ) $=
      ( vv vw wcel wa cv csb wceq copab cfv csbhypf fvopabg ax-17 visset 
      hbcsb1 hbeleq id csbeq1a eqeqan12rd cbvopab fveq1i syl5eq ) DGNFHNODLPZAM
      PZEQZRZMLSZTFDBPZERZABSZTMLDUOFGHAMCDEFIJKUAUBDUTUQUSUPABMLUSMUCUSLUCALUO
      ALUNEMUDUMUNNAUCUEUFUPBUCURUMRZAPUNRURUMEUOVAUGAUNEUHUIUJUKUL $.
      $( [21-Oct-2003] $)

    $( The value of a function given by an ordered-pair class abstraction is
       the empty set when the class it would otherwise map to is a proper
       class.  This version of ~ fvopabn uses bound-variable hypotheses instead
       of distinct variable conditions. $)
    fvopabnf $p |- ( -. C e. _V -> ( { <. x , y >. | y = B } ` A ) = (/) ) $=
      ( vv vw cvv wcel wn cv csb wceq copab cfv c0 csbhypf fvopabn ax-17 
      visset hbcsb1 hbeleq id csbeq1a eqeqan12rd cbvopab fveq1i syl5eq ) FLMNDJ
      OZAKOZEPZQZKJRZSTDBOZEQZABRZSKJDUOFAKCDEFGHIUAUBDUTUQUSUPABKJUSKUCUSJUCAJ
      UOAJUNEKUDUMUNMAUCUEUFUPBUCURUMQZAOUNQURUMEUOVAUGAUNEUHUIUJUKUL $.
      $( [21-Dec-2008] $) $( [21-Oct-2003] $)
  $}

  ${
    $d z A $.  $d y B $.  $d z C $.  $d x y $.  $d x u $.  $d x z $.
    fvopabf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopabf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopabf.3 $e |- A e. _V $.
    fvopabf.4 $e |- C e. _V $.
    fvopabf.5 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction. $)
    fvopabf $p |- ( { <. x , y >. | y = B } ` A ) = C $=
      ( cvv wcel cv wceq copab cfv fvopabgf mp2an ) DLMFLMDBNEOABPQFOIJABCDEFLL
      GHKRS $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x z A $.  $d y B $.  $d x z C $.  $d x y z $.
    fvopab.1 $e |- A e. _V $.
    fvopab.2 $e |- C e. _V $.
    fvopab.3 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by an ordered-pair class abstraction. $)
    fvopab $p |- ( { <. x , y >. | y = B } ` A ) = C $=
      ( vz cv wcel ax-17 fvopabf ) ABICDEIJZCKALNEKALFGHM $.
      $( [17-Apr-1995] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    $( Value of a function given by an ordered-pair class abstraction. $)
    fvopab2 $p |- ( ( x e. A /\ B e. C ) ->
                   ( { <. x , y >. | ( x e. A /\ y = B ) } ` x ) = B ) $=
      ( vz wcel cv wceq wa copab cfv wex wi elex ax-17 hbopab2 hbfv hbeq hbim 
      cvv visset eleq1 mpbii cop weu tz6.12f opabid sylanbr euanv eubii eueq 
      anbi2i 3bitr4ri sylan2b exp43 pm2.43a mpdi com12 eqeq2 sylibd 19.23ai 
      syl impcom ) DEGZAHZCGZVFVGBHZDIZJZABKZLZDIZVEVIBMVGVMNZBDEOVIVNBVGVMBVGB
      PBFFVLDBFVFVKVJABFQZFHZVFGBPRVPDGBPSTVIVGVLVHIZVMVGVIVQVGVIDUAGZVQVIVHUAG
      VRBUBVHDUAUCUDVIVGVRVQNVGVIVGVRVQVJVFVHUEVKGZBUFZVQVGVRJZVSVTVQVJABFVKVOU
      GVJABUHZUIVJBUFVGVIBUFZJVTWAVGVIBUJVSVJBWBUKVRWCVGBDULUMUNUOUPUQURUSVHDVL
      UTVAVBVCVD $.
      $( [2-Feb-2004] $) $( [30-Aug-1999] $)
  $}

  ${
    $d x z A $.  $d y z B $.  $d x y $.
    fvopabs.1 $e |- A e. _V $.
    fvopabs.2 $e |- B e. _V $.
    $( The value of a function given by an ordered-pair class abstraction,
       using class substitution. $)
    fvopabs $p |- ( { <. x , y >. | y = B } ` A ) = [_ A / x ]_ B $=
      ( vz csb cv wcel ax-17 hbcsb1 csbex csbeq1a fvopabf ) ABGCDACDHGICJAKZAGC
      DEPLEACDEFMACDNO $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x y z A $.  $d z F $.  $d z ph $.  $d x ps $.
    fvopab5.1 $e |- F = { <. x , y >. | ph } $.
    fvopab5.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( The value of a function that is expressed as an ordered pair
       abstraction. $)
    fvopab5 $p |- ( ( Fun F /\ A e. B ) -> ( F ` A ) = U. { y | ps } ) $=
      ( vz wfun wcel cfv cv wbr cab cuni ax-17 copab hbopab2 hbxfr funfv2f 
      wceq wex elex cop wb hbopab1 hbel hbbi opeq1 eleq1d opabid syl5bb bitr3d 
      19.23ai df-br eleq2i bitri abbidv syl unieqd sylan9eq ) GKEFLZEGMEDNZGOZD
      PZQBDPZQDJEGJNZELDRDJGACDSZHACDJTUAUBVDVGVHVDCNZEUCZCUDZVGVHUCCEFUEVMVFBD
      VMEVEUFZVJLZBVFVLVOBUGCVOBCCJJVNVJVIVNLCRACDJUHUIBCRUJVLVKVEUFZVJLZVOBVLV
      PVNVJVKEVEUKULVLABVQIACDUMUNUOUPVFVNGLVOEVEGUQGVJVNHURUSUNUTVAVBVC $.
      $( [19-Feb-2006] $)
  $}

  ${
    $d A x y $.  $d ps x y $.  $d B y $.  $d C x y $.
    fvopab6.1 $e |- F = { <. x , y >. | ( ph /\ y = B ) } $.
    fvopab6.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab6.3 $e |- ( x = A -> B = C ) $.
    $( Value of a function given by ordered-pair class abstraction.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    fvopab6 $p |- ( ( A e. D /\ C e. R /\ ps ) -> ( F ` A ) = C ) $=
      ( wcel w3a cfv cv wceq wa cab cuni wfun eqeq2d anbi12d fvopab5 wmo copab 
      wal wb funeq ax-mp funopab bitri moeq moani mpgbir simp1 sylancr simpr 
      pm3.2 impbid2 abbidv unieqd csn unisng df-sn eqcomi unieqi syl5eq 
      sylan9eqr 3adant1 eqtrd ) EHNZGINZBOZEJPZBDQZGRZSZDTZUAZGJUBZVMVPWARVOAVQ
      FRZSZVSCDEHJKCQERZABWCVRLWEFGVQMUCUDUEWBWDDUFZCWBWDCDUGZUBZWFCUHJWGRWBWHU
      IKJWGUJUKWDCDULUMWCADDFUNUOUPVMVNBUQURVNBWAGRVMBVNWAVRDTZUAZGBVTWIBVSVRDB
      VSVRBVRUSBVRUTVAVBVCVNGVDZUAGWJGIVEWIWKWKWIDGVFVGVHVIVJVKVL $.
      $( [2-Sep-2009] $)
  $}

  ${
    fvsn.1 $e |- A e. _V $.
    fvsn.2 $e |- B e. _V $.
    $( The value of a singleton of an ordered pair is the second member. $)
    fvsn $p |- ( { <. A , B >. } ` A ) = B $=
      ( cop csn wfun wcel cfv wceq funsn opex snid funopfv mp2 ) ABEZFZGPQHAQIB
      JABCDKPABLMABQDNO $.
      $( [12-Aug-1994] $)
  $}

  ${
    $d A a b $.  $d B b $.
    $( The value of a singleton of an ordered pair is the second member. $)
    fvsng $p |- ( ( A e. C /\ B e. D ) -> ( { <. A , B >. } ` A ) = B ) $=
      ( va vb cv cop csn cfv wceq opeq1 sneqd id fveq12d eqeq1d opeq2 fveq1d 
      eqeq12d visset fvsn vtocl2g ) EGZUCFGZHZIZJZUDKAAUDHZIZJZUDKAABHZIZJZBKEF
      ABCDUCAKZUGUJUDUNUCAUFUIUNUEUHUCAUDLMUNNOPUDBKZUJUMUDBUOAUIULUOUHUKUDBAQM
      RUONSUCUDETFTUAUB $.
      $( [26-Oct-2012] $)
  $}

  ${
    fvpr1.1 $e |- A e. _V $.
    fvpr1.2 $e |- B e. _V $.
    fvpr1.3 $e |- C e. _V $.
    fvpr1.4 $e |- D e. _V $.
    $( The value of a function with a domain of two elements.  (Contributed by
       Jeff Madsen, 20-Jun-2010.) $)
    fvpr1 $p |- ( A =/= B -> ( { <. A , C >. , <. B , D >. } ` A ) = C ) $=
      ( wne cop cpr wfun cfv wceq funpr wcel opex prid1 funopfv mpi syl ) ABIAC
      JZBDJZKZLZAUDMCNZABCDEFGHOUEUBUDPUFUBUCACQRACUDGSTUA $.
      $( [3-Sep-2011] $) $( [20-Jun-2010] $)

    $( The value of a function with a domain of two elements.  (Contributed by
       Jeff Madsen, 20-Jun-2010.) $)
    fvpr2 $p |- ( A =/= B -> ( { <. A , C >. , <. B , D >. } ` B ) = D ) $=
      ( wne cop cpr wfun cfv wceq funpr wcel opex prid2 funopfv mpi syl ) ABIAC
      JZBDJZKZLZBUDMDNZABCDEFGHOUEUCUDPUFUBUCBDQRBDUDHSTUA $.
      $( [3-Sep-2011] $) $( [20-Jun-2010] $)
  $}

  ${
    fvtp1.1 $e |- A e. _V $.
    fvtp1.2 $e |- B e. _V $.
    fvtp1.3 $e |- C e. _V $.
    fvtp1.4 $e |- D e. _V $.
    fvtp1.5 $e |- E e. _V $.
    fvtp1.6 $e |- F e. _V $.
    $( The first value of a function with a domain of three elements. $)
    fvtp1 $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
             -> ( { <. A , D >. , <. B , E >. , <. C , F >. } ` A ) = D ) $=
      ( wne w3a cop ctp wfun cfv wceq funtp wcel opex tpid1 funopfv mpi syl ) 
      ABMACMBCMNADOZBEOZCFOZPZQZAUJRDSZABCDEFGHIJKLTUKUGUJUAULUGUHUIADUBUCADUJJ
      UDUEUF $.
      $( [14-Sep-2011] $)

    $( The second value of a function with a domain of three elements. $)
    fvtp2 $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
             -> ( { <. A , D >. , <. B , E >. , <. C , F >. } ` B ) = E ) $=
      ( wne w3a cop ctp wfun cfv wceq funtp wcel opex tpid2 funopfv mpi syl ) 
      ABMACMBCMNADOZBEOZCFOZPZQZBUJRESZABCDEFGHIJKLTUKUHUJUAULUGUHUIBEUBUCBEUJK
      UDUEUF $.
      $( [14-Sep-2011] $)

    $( The third value of a function with a domain of three elements. $)
    fvtp3 $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
             -> ( { <. A , D >. , <. B , E >. , <. C , F >. } ` C ) = F ) $=
      ( wne w3a cop ctp wfun cfv wceq funtp wcel opex tpid3 funopfv mpi syl ) 
      ABMACMBCMNADOZBEOZCFOZPZQZCUJRFSZABCDEFGHIJKLTUKUIUJUAULUGUHUICFUBUCCFUJL
      UDUEUF $.
      $( [14-Sep-2011] $)
  $}

  ${
    fvsnun.1 $e |- A e. _V $.
    fvsnun.2 $e |- B e. _V $.
    fvsnun.3 $e |- G = ( { <. A , B >. } u. ( F |` ( C \ { A } ) ) ) $.
    $( The value of a function with one of its ordered pairs replaced, at the
       replaced ordered pair.  See also ~ fvsnun2 . $)
    fvsnun1 $p |- ( G ` A ) = B $=
      ( csn cres cfv wcel wceq snid fvres ax-mp cop cdif cun reseq1 resundir 
      c0 cin incom difdisj eqtri resdisj uneq2i un0 3eqtri fveq1i fvsn eqtr3i 
      ) AEAIZJZKZAEKZBAUNLZUPUQMAFNZAUNEOPUPAABQIZUNJZKZAUTKZBAUOVAUOUTDCUNRZJZ
      SZUNJZVAVEUNJZSZVAEVFMUOVGMHEVFUNTPUTVEUNUAVIVAUBSVAVHUBVAVDUNUCZUBMVHUBM
      VJUNVDUCUBVDUNUDUNCUEUFVDUNDUGPUHVAUIUFUJUKURVBVCMUSAUNUTOPABFGULUJUM $.
      $( [23-Sep-2007] $)

    $( The value of a function with one of its ordered pairs replaced, at
       arguments other than the replaced one.  See also ~ fvsnun1 . $)
    fvsnun2 $p |- ( D e. ( C \ { A } ) -> ( G ` D ) = ( F ` D ) ) $=
      ( csn cdif wcel cres cfv fvres cop cun wceq reseq1 ax-mp resundir c0 cin 
      difdisj wfn wb wf1o f1osn f1ofn fnresdisj mpbi residm uneq12i uncom un0 
      3eqtri fveq1i syl5eq eqtr3d ) DCAJZKZLZDFVAMZNZDFNDENZDVAFOVBDEVAMZNVEVDD
      VAEODVCVFVCABPJZVFQZVAMZVGVAMZVFVAMZQZVFFVHRVCVIRIFVHVASTVGVFVAUAVLUBVFQV
      FUBQVFVJUBVKVFUTVAUCUBRZVJUBRZUTCUDVGUTUEZVMVNUFUTBJZVGUGVOABGHUHUTVPVGUI
      TUTVAVGUJTUKEVAULUMUBVFUNVFUOUPUPUQURUS $.
      $( [23-Sep-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.  $d x y G $.
    $( Equality of functions is determined by their values.  Exercise 4 of
       [TakeutiZaring] p. 28. $)
    eqfnfv $p |- ( ( F Fn A /\ G Fn B ) -> ( F = G <->
                 ( A = B /\ A. x e. A ( F ` x ) = ( G ` x ) ) ) ) $=
      ( vy wfn wa wceq cv cfv wral cdm wi eqeq12 dmeq syl5bi fndm syl2an wcel 
      fveq1 a1d r19.21aiv a1i jcad cop wb wal visset fnopfvb adantlr adantll 
      bibi12d eqeq1 ex a2d com3r wn eleq2d opeldm con3d anim12ii pm5.21 
      syl6com pm2.61i 19.21adv alimdv df-ral syl5ib wrel eqrel fnrel sylibrd 
      fneq2 biimparc sylan2 exp32 imp4b impbid ) DBGZECGZHZDEIZBCIZAJZDKZWEEKZI
      ZABLZHWBWCWDWIDMZBIZEMZCIZWCWDNVTWAWKWMHWJWLIWDWCWJBWLCODEPQBDRZCERSWCWIN
      WBWCWHABWCWHWEBTZWEDEUAUBUCUDUEVTWAWDWIWCVTWAWDWIWCNZVTEBGZWPWAWDHVTWQHZW
      IWEFJZUFZDTZWTETZUGZFUHZAUHZWCWRWOWHNZAUHXEWIWRXFXDAWRXFXCFWOWRXFXCNZNWRX
      FWOXCWRWOWHXCWRWOWHXCNWRWOHZWFWSIZWGWSIZUGXCWHXHXIXAXJXBVTWOXIXAUGWQBWEWS
      DFUIZUJUKWQWOXJXBUGVTBWEWSEXKUJULUMWFWGWSUNQUOUPUQWRWOURZXAURZXBURZHZXGVT
      XLXMWQXNVTXAWOVTWEWJTWOXAVTWJBWEWNUSWEWSDAUIZUTQVAWQXBWOWQWEWLTWOXBWQWLBW
      EBERUSWEWSEXPUTQVAVBXOXCXFXAXBVCUBVDVEVFVGWHABVHVIDVJEVJWCXEUGVTWQAFDEVKB
      DVLBEVLSVMWDWQWABCEVNVOVPVQVRVS $.
      $( [5-Feb-2004] $) $( [3-Aug-1994] $)

    $( Equality of functions is determined by their values.  Special case of
       Exercise 4 of [TakeutiZaring] p. 28 (with domain equality omitted).
       (The proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    eqfnfv2 $p |- ( ( F Fn A /\ G Fn A ) -> ( F = G <->
                 A. x e. A ( F ` x ) = ( G ` x ) ) ) $=
      ( wfn wa wceq cv cfv wral eqfnfv eqid biantrur syl6bbr ) CBEDBEFCDGBBGZAH
      ZCIPDIGABJZFQABBCDKOQBLMN $.
      $( [22-Oct-2011] $) $( [3-Aug-1994] $)

    $d x B $.
    $( Derive equality of functions from equality of their values.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    eqfnfv3 $p |- ( ( F Fn A /\ G Fn B ) -> ( F = G <-> ( B C_ A /\ A. x e. A
                                  ( x e. B /\ ( F ` x ) = ( G ` x ) ) ) ) ) $=
      ( wfn wa wceq cv cfv wral wss wcel eqfnfv eqss ancom bitri anbi1i anass 
      dfss3 r19.26 bitr4i anbi2i 3bitri syl6bb ) DBFECFGDEHBCHZAIZDJUGEJHZABKZG
      ZCBLZUGCMZUHGABKZGZABCDENUJUKBCLZGZUIGUKUOUIGZGUNUFUPUIUFUOUKGUPBCOUOUKPQ
      RUKUOUISUQUMUKUQULABKZUIGUMUOURUIABCTRULUHABUAUBUCUDUE $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x z A $.  $d y z F $.  $d y z G $.  $d x y $.
    eqfnfvf2.1 $e |- ( y e. F -> A. x y e. F ) $.
    eqfnfvf2.2 $e |- ( y e. G -> A. x y e. G ) $.
    $( Equality of functions is determined by their values.  Special case of
       Exercise 4 of [TakeutiZaring] p. 28 (with domain equality omitted).
       This version of ~ eqfnfv2 uses bound-variable hypotheses instead of
       distinct variable conditions. $)
    eqfnfv2f $p |- ( ( F Fn A /\ G Fn A ) -> ( F = G <->
                 A. x e. A ( F ` x ) = ( G ` x ) ) ) $=
      ( vz wfn wa wceq cv cfv wral eqfnfv2 wcel ax-17 hbfv hbeq fveq2 eqeq12d 
      cbvral syl6bb ) DCIECIJDEKHLZDMZUDEMZKZHCNALZDMZUHEMZKZACNHCDEOUGUKHACABB
      UEUFABUDDFBLUDPAQZRABUDEGULRSUKHQUDUHKUEUIUFUJUDUHDTUDUHETUAUBUC $.
      $( [22-Mar-2009] $) $( [29-Jan-2004] $)
  $}

  ${
    $d f x y z A $.  $d f y z B $.
    eufnfv.1 $e |- A e. _V $.
    eufnfv.2 $e |- B e. _V $.
    $( A function is uniquely determined by its values. $)
    eufnfv $p |- E! f ( f Fn A /\ A. x e. A ( f ` x ) = B ) $=
      ( vz vy cv wfn cfv wceq wral wa weu weq wb wal wex wcel copab opabex2 
      eqeq2 bibi2d albidv cla4ev eqid fnopab2 fneq1 mpbiri pm4.71ri wel ax-17 
      hbopab1 eqfnfv2f mpan2 cvv fvopab2 eqeq2d ralbiia syl6bb pm5.32i bitr2i 
      mpg df-eu mpbir ) DIZBJZAIZVGKZCLZABMZNZDOVMDGPZQZDRZGSZVMVGVIBTZHICLNZAH
      UAZLZQZVQDVPWBDRGVTAHBCEUBGIZVTLZVOWBDWDVNWAVMWCVTVGUCUDUEUFWAVHWANVMWAVH
      WAVHVTBJZAHBCVTFVTUGUHZBVGVTUIUJUKVHWAVLVHWAVJVIVTKZLZABMZVLVHWEWAWIQWFAG
      BVGVTGDULAUMVSAHGUNUOUPWHVKABVRWGCVJVRCUQTWGCLFAHBCUQURUPUSUTVAVBVCVDVMDG
      VEVF $.
      $( [31-Aug-2011] $)
  $}

  ${
    $d x B $.  $d x F $.  $d x G $.
    $( Equality of restricted functions is determined by their values. $)
    fvreseq $p |- ( ( ( F Fn A /\ G Fn A ) /\ B C_ A ) ->
         ( ( F |` B ) = ( G |` B ) <-> A. x e. B ( F ` x ) = ( G ` x ) ) ) $=
      ( wfn wa wss cres wceq cv cfv wral wb fnssres anim12i anandirs eqfnfv2 
      wcel fvres eqeq12d ralbiia syl6bb syl ) DBFZEBFZGCBHZGDCIZCFZECIZCFZGZUHU
      JJZAKZDLZUNELZJZACMZNUEUFUGULUEUGGUIUFUGGUKBCDOBCEOPQULUMUNUHLZUNUJLZJZAC
      MURACUHUJRVAUQACUNCSUSUOUTUPUNCDTUNCETUAUBUCUD $.
      $( [6-Feb-2004] $) $( [3-Aug-1994] $)
  $}

  ${
    $d x y z A $.  $d y B $.  $d z F $.  $d w x z C $.  $d w F $.
    elrnopabg.1 $e |- F = { <. x , y >. | ( x e. A
             /\ y = B ) } $.
    $( Membership in the range of an ordered pair class abstraction. $)
    elrnopabg $p |- ( A. x e. A B e. D ->
                    ( C e. ran F <-> E. x e. A C = B ) ) $=
      ( vz vw wcel wral cvv crn wceq wrex wb elisset ralimi wfn cv weu eueq 
      biimpi fnopabg sylib cfv fvelrnb hbra1 wa ra4 ancld imp copab fvopab2 
      fveq1i syl5eq eqeq1d eqcom syl6bb syl rexbida hbopab1 hbxfr ax-17 hbfv 
      hbeq fveq2 cbvrex syl5bb sylan9bbr mpdan ) DFKZACLDMKZACLZEGNKZEDOZACPZQZ
      VMVNACDFRSVOGCTZVSVOBUADOZBUBZACLVTVNWBACVNWBBDUCUDSWAABCGHUEUFVTVPIUAZGU
      GZEOZICPZVOVRICEGUHVOAUAZGUGZEOZACPVRWFVOWIVQACVNACUIVOWGCKZUJWJVNUJZWIVQ
      QVOWJWKVOWJVNVNACUKULUMWKWIDEOVQWKWHDEWKWGWJWAUJZABUNZUGDWHABCDMUOWGGWMHU
      PUQURDEUSUTVAVBWEWIIACAJJWDEAJWCGAJGWMHWLABJVCVDJUAZWCKAVEVFWNEKAVEVGWIIV
      EWCWGOWDWHEWCWGGVHURVIVJVKVLVA $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d y B $.  $d z F $.  $d w x z C $.  $d w F $.
    elrnopab.1 $e |- B e. _V $.
    elrnopab.2 $e |- F = { <. x , y >. | ( x e. A
             /\ y = B ) } $.
    $( Membership in the range of an ordered pair class abstraction. $)
    elrnopab $p |- ( C e. ran F <-> E. x e. A C = B ) $=
      ( cvv wcel crn wceq wrex wb elrnopabg cv a1i mprg ) DIJZEFKJEDLACMNACABCD
      EIFHOSAPCJGQR $.
      $( [30-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( The range of a choice function (a function that chooses an element from
       each member of its domain) is included in the union of its domain. $)
    chfnrn $p |- ( ( F Fn A /\ A. x e. A ( F ` x ) e. x ) -> ran F C_ U. A ) $=
      ( vy wfn cv cfv wcel wral wa crn cuni wrex wceq fvelrnb biimpd hbra1 wi 
      ra4 eleq1 biimpcd syl6 reximdai sylan9 eluni2 syl6ibr ssrdv ) CBEZAFZCGZU
      IHZABIZJZDCKZBLZUMDFZUNHZUPUIHZABMZUPUOHUHUQUJUPNZABMZULUSUHUQVAABUPCOPUL
      UTURABUKABQULUIBHUKUTURRUKABSUTUKURUJUPUITUAUBUCUDAUPBUEUFUG $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x F $.  $d x A $.
    $( Ordered pair with function value.  Part of Theorem 4.3(i) of [Monk1]
       p. 41. $)
    funfvop $p |- ( ( Fun F /\ A e. dom F ) -> <. A , ( F ` A ) >. e. F ) $=
      ( vx wfun cdm wcel wa cv cfv wceq wex cop fvex isseti wi visset funopfvb 
      opeq2 eleq1d biimprcd syl6bi pm2.43d eqcom syl5ib 19.23adv mpi ) BDABEFGZ
      CHZABIZJZCKAUILZBFZCUIABMNUGUJULCUGUIUHJZULUJUGUMULUGUMAUHLZBFZUMULOAUHBC
      PQUMULUOUMUKUNBUIUHARSTUAUBUHUIUCUDUEUF $.
      $( [14-Oct-1996] $)
  $}

  $( A member of a preimage is a function value argument. $)
  fvimacnvi $p |- ( ( Fun F /\ A e. ( `' F " B ) ) -> ( F ` A ) e. B ) $=
    ( wfun ccnv cima wcel wa cfv csn wss funimass2 snssi sylan2 cdm wceq wfn 
    fnsnfv funfn sylanb cnvimass sseli sseq1d fvex snss syl5bb mpbird ) CDZACEB
    FZGZHZACIZBGZCAJZFZBKZUHUNUIKUPUJUNBCLAUIMNUKULJZBKUPUMUKUQUOBUHACOZGZUQUOP
    ZUJCURQUSUTUHURACRCSTUIURACBUAUBNUCULBACUDUEUFUG $.
    $( [4-May-2007] $)

  $( The argument of a function value belongs to the pre-image of any class
     containing the function value.  (Contributed by Raph Levien, 20-Nov-2006.
     He remarks:  "This proof is unsatisfying, because it seems to me that
     ~ funimass2 could probably be strengthened to a biconditional.") $)
  fvimacnv $p |- ( ( Fun F /\ A e. dom F ) ->
                 ( ( F ` A ) e. B <-> A e. ( `' F " B ) ) ) $=
    ( wfun cdm wcel wa cfv ccnv cima csn wss fvex snss imass2 sylbi sseld cop 
    funfvop wb cvv opelcnvg mpan adantl mpbird elimasng syl5com wi fvimacnvi 
    ex adantr impbid ) CDZACEZFZGZACHZBFZACIZBJZFZURAUSUQKZJZFZVAUPURVCUTAURVBB
    LVCUTLUQBACMZNVBBUSOPQUPVDUQARUSFZUPVFAUQRCFZACSUOVFVGTZUMUQUAFZUOVHVEUQAUA
    UNCUBUCUDUEUOVDVFTZUMVIUOVJVEUSUQAUAUNUFUCUDUEUGUMVAURUHUOUMVAURABCUIUJUKUL
    $.
    $( [20-Nov-2006] $)

  ${
    $d F x $.  $d A x $.  $d B x $.
    $( A kind of contraposition law that infers an image subclass from a
       subclass of a pre-image.  (Contributed by Raph Levien, 20-Nov-2006.  He
       remarks:  "Likely this could be proved directly, and ~ fvimacnv would be
       the special case of ` A ` being a singleton, but it works this way round
       too.") $)
    funimass3 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( ( F " A ) C_ B <-> A C_ ( `' F " B ) ) ) $=
      ( vx wfun cdm wss wa cima cv ccnv wcel wral cfv funimass4 wb ssel 
      fvimacnv ex syl9r imp31 ralbidva bitrd dfss3 syl6bbr ) CEZACFZGZHZCAIBGZD
      JZCKBIZLZDAMZAULGUIUJUKCNBLZDAMUNDABCOUIUOUMDAUFUHUKALZUOUMPZUHUPUKUGLZUF
      UQAUGUKQUFURUQUKBCRSTUAUBUCDAULUDUE $.
      $( [20-Nov-2006] $)

    $( A subclass of a preimage in terms of function values. $)
    funimass5 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( A C_ ( `' F " B ) <-> A. x e. A ( F ` x ) e. B ) ) $=
      ( wfun cdm wss wa cima ccnv cv cfv wcel wral funimass3 funimass4 bitr3d 
      ) DEBDFGHDBICGBDJCIGAKDLCMABNBCDOABCDPQ $.
      $( [15-May-2007] $)

    $( Two ways of specifying that a function is constant on a subdomain. $)
    funconstss $p |- ( ( Fun F /\ A C_ dom F ) ->
                     ( A. x e. A ( F ` x ) = B <-> A C_ ( `' F " { B } ) ) ) $=
      ( wfun cdm wss wa cv cfv wceq wral cima csn ccnv wcel funimass4 fvex 
      elsnc ralbii syl6rbb funimass3 bitrd ) DEBDFGHZAIZDJZCKZABLZDBMCNZGZBDOUI
      MGUDUJUFUIPZABLUHABUIDQUKUGABUFCUEDRSTUABUIDUBUC $.
      $( [8-Mar-2007] $)
  $}


  $( Another proof of ~ fvimacnv , based on ~ funimass3 .  If ~ funimass3 is
     ever proved directly, as opposed to using ~ funimacnv pointwise, then the
     proof of ~ funimacnv should be replaced with this one.  (Contributed by
     Raph Levien, 20-Nov-2006.) $)
  fvimacnvALT $p |- ( ( Fun F /\ A e. dom F ) ->
                    ( ( F ` A ) e. B <-> A e. ( `' F " B ) ) ) $=
    ( wfun cdm wcel wa csn cima wss ccnv cfv wb funimass3 snssi sylan2 wfn 
    wceq fnsnfv eqid df-fn biimpri mpan2 sylan sseq1d fvex snss syl5bb snssg 
    adantl 3bitr4d ) CDZACEZFZGZCAHZIZBJZUPCKBIZJZACLZBFZAUSFZULUPUMJURUTMUNUPB
    CNAUMOPUOVAHZBJURVBUOVDUQBCUMQZUNVDUQRULUMACSULUMUMRZVEUMTVEULVFGCUMUAUBUCU
    DUEVABACUFUGUHUNVCUTMULAUSUMUIUJUK $.
    $( [20-Nov-2006] $)

  $( Membership in the preimage of a set under a function.  (Contributed by
     Jeff Madsen, 2-Sep-2009.) $)
  elpreima $p |- ( F Fn A -> ( B e. ( `' F " C )
                              <-> ( B e. A /\ ( F ` B ) e. C ) ) ) $=
    ( wfn ccnv cima wcel cfv wa cdm fndm eleq2d cnvimass sseli syl5bi wfun 
    fvimacnvi fnfun sylan ex jcad wb fvimacnv funfni biimpd expimpd impbid ) DA
    EZBDFCGZHZBAHZBDICHZJUIUKULUMUIBDKZHULUKUIUNABADLMUJUNBDCNOPUIUKUMDQUKUMUIB
    CDRADSTUAUBUIULUMUKUIULJUMUKUMUKUCABDBCDUDUEUFUGUH $.
    $( [2-Sep-2009] $)

  $( The pre-image of the codomain of a mapping is the mapping's domain.
     (Contributed by FL, 25-Jan-2007.) $)
  fimacnv $p |- ( F : A --> B -> ( `' F " B ) = A ) $=
    ( wf ccnv cima crn wss imassrn a1i cdm fdm ssid eqsstrd dfdm4 syl5ssr 
    sstrd frn wfun wb ffun sseqtr4d funimass3 syl11anc mpbid eqssd ) ABCDZCEZBF
    ZAUGUIUHGZAUIUJHUGUHBIJUGCKZAUJUGUKAAABCLZAAHUGAMJZNCOPQUGCAFZBHZAUIHZUGUNC
    GZBUNUQHUGCAIJABCRQUGCSAUKHUOUPTABCUAUGAAUKUMULUBABCUCUDUEUF $.
    $( [25-Jan-2007] $)

  $( Ordered pair with function value.  Part of Theorem 4.3(i) of [Monk1]
     p. 41. $)
  fnopfv $p |- ( ( F Fn A /\ B e. A ) -> <. B , ( F ` B ) >. e. F ) $=
    ( cfv cop wcel funfvop funfni ) BBCDECFABCBCGH $.
    $( [30-Sep-2004] $)

  ${
    $d x y F $.  $d x A $.
    $( A function's value belongs to its range. $)
    fvelrn $p |- ( ( Fun F /\ A e. dom F ) -> ( F ` A ) e. ran F ) $=
      ( vx vy wfun cdm wcel cfv crn cv wa wi wceq eleq1 anbi2d fveq2 eleq1d 
      imbi12d cop wex funfvop visset opeq1 cla4ev syl fvex elrn2 sylibr vtoclg 
      anabsi7 ) BEZABFZGZABHZBIZGZUKCJZULGZKZUQBHZUOGZLUKUMKZUPLCAULUQAMZUSVBVA
      UPVCURUMUKUQAULNOVCUTUNUOUQABPQRUSDJZUTSZBGZDTZVAUSUQUTSZBGZVGUQBUAVFVIDU
      QCUBVDUQMVEVHBVDUQUTUCQUDUEDUTBUQBUFUGUHUIUJ $.
      $( [14-Oct-1996] $)
  $}

  $( A function's value belongs to its range. $)
  fnfvelrn $p |- ( ( F Fn A /\ B e. A ) -> ( F ` B ) e. ran F ) $=
    ( cfv crn wcel fvelrn funfni ) BCDCEFABCBCGH $.
    $( [15-Oct-1996] $)

  $( A function's value belongs to its codomain. $)
  ffvelrn $p |- ( ( F : A --> B /\ C e. A ) -> ( F ` C ) e. B ) $=
    ( wf wcel wa cfv crn wfn fnfvelrn ffn sylan wi frn sseld adantr mpd ) ABDEZ
    CAFZGCDHZDIZFZUABFZDAJTUCSACDKABDLMSUCUDNTSUBBUAABDOPQR $.
    $( [12-Aug-1999] $)

  ${
    ffvrni.1 $e |- F : A --> B $.
    $( A function's value belongs to its codomain. $)
    ffvelrni $p |- ( C e. A -> ( F ` C ) e. B ) $=
      ( wf wcel cfv ffvelrn mpan ) ABDFCAGCDHBGEABCDIJ $.
      $( [6-Apr-2005] $)
  $}

  $( Alternate definition of a mapping. $)
  dff2 $p |- ( F : A --> B <-> ( F Fn A /\ F C_ ( A X. B ) ) ) $=
    ( wf wfn cxp wss wa ffn fssxp jca crn sstr rnss rnxpss sylancl anim2i df-f 
    sylibr impbii ) ABCDZCAEZCABFZGZHZUAUBUDABCIABCJKUEUBCLZBGZHUAUDUGUBUFUCLZG
    UHBGUGUDUFUHBMCUCNABOPQABCRST $.
    $( [14-Nov-2007] $)

  ${
    $d f g x y z A $.  $d f g x y z B $.  $d x y z F $.
    $( Alternate definition of a mapping. $)
    dff3 $p |- ( F : A --> B <->
              ( F C_ ( A X. B ) /\ A. x e. A E! y x F y ) ) $=
      ( vz wf cxp wss cv wbr weu wral wa fssxp wex wmo wcel eu5 cfv cop wfun 
      cdm ffun adantr fdm eleq2d biimpar funfvop syl11anc df-br sylibr fvex 
      breq2 cla4ev syl funmo sylanbrc r19.21aiva jca wfn crn df-f wceq df-fn 
      wrel wal dffun6 cvv xpss sstr mpan2 df-rel wi eumo imim2i adantl wn ssel 
      syl5ib visset opelxp simplbi syl6 19.23adv con3d exmo ori pm2.61d ex 
      alimdv df-ral imp dmss dmxpss sylancl breq1 eubidv rcla4cv euex eldm 
      ssrdv anim12i eqss rnss rnxpss impbii ) CDEGZECDHZIZAJZBJZEKZBLZACMZNZXHX
      JXOCDEOXHXNACXNXMBPZXMBQZXHXKCRZNZXMBSXTXKXKETZEKZXQXTXKYAUAERZYBXTEUBZXK
      EUCZRZYCXHYDXSCDEUDZUEXHYFXSXHYECXKCDEUFUGUHXKEUIUJXKYAEUKULXMYBBYAXKEUMX
      LYAXKEUNUOUPXHXRXSXHYDXRYGABEUQUPUEURUSUTXHECVAZEVBZDIZXPCDEVCYHYDYECVDZX
      PECVEYDEVFZXRAVGZXPABEVHXJYLXOXJEVIVIHZIZYLXJXIYNIYOCDVJEXIYNVKVLEVMULUEX
      JXOYMXJXSXNVNZAVGYMXOXJYPXRAXJYPXRXJYPNXSXRYPXSXRVNXJXNXRXSXMBVOVPVQXJXSV
      RZXRVNYPXJYQXQVRXRXJXQXSXJXMXSBXJXMXKXLUAZXIRZXSXJYRERYSXMEXIYRVSXKXLEUKV
      TYSXSXLDRXKXLCDBWAWBWCWDWEWFXQXRXMBWGWHWDUEWIWJWKXNACWLVTWMURXPYECIZCYEIZ
      NYKXJYTXOUUAYEXIUCZIUUBCIYTXJYEUUBCVKEXIWNCDWOWPXOFCYEXOFJZCRUUCXLEKZBLZU
      UCYERZXNUUEAUUCCXKUUCVDXMUUDBXKUUCXLEWQWRWSUUEUUDBPUUFUUDBWTBUUCEFWAXAULW
      DXBXCYECXDULURXJYJXOYIXIVBZIUUGDIYJXJYIUUGDVKEXIXECDXFWPUEURXG $.
      $( [20-Mar-2007] $)

    $( Alternate definition of a mapping. $)
    dff4 $p |- ( F : A --> B <->
              ( F C_ ( A X. B ) /\ A. x e. A E! y e. B x F y ) ) $=
      ( wf cxp wss cv wbr weu wral wa wreu dff3 wcel cop ssel visset opelxp 
      simprbi syl6 df-br syl5ib pm4.71rd eubidv df-reu syl6bbr ralbidv pm5.32i 
      bitri ) CDEFECDGZHZAIZBIZEJZBKZACLZMUMUPBDNZACLZMABCDEOUMURUTUMUQUSACUMUQ
      UODPZUPMZBKUSUMUPVBBUMUPVAUMUNUOQZEPZVAUPUMVDVCULPZVAEULVCRVEUNCPVAUNUOCD
      BSTUAUBUNUOEUCUDUEUFUPBDUGUHUIUJUK $.
      $( [20-Mar-2007] $)

    $( An onto mapping expressed in terms of function values. $)
    dffo3 $p |- ( F : A -onto-> B <-> ( F : A --> B /\
                  A. y e. B E. x e. A y = ( F ` x ) ) ) $=
      ( wfo wf crn wceq wa cv cfv wrex wral dffo2 cab wfn wb ffn fnrnfv eqeq1d 
      syl wcel wal wi simpr ffvelrn adantr eqeltrd exp31 r19.23adv biantrurd 
      dfbi2 syl6rbbr albidv abeq1 df-ral 3bitr4g bitrd pm5.32i bitri ) CDEFCDEG
      ZEHZDIZJVBBKZAKZELZIZACMZBDNZJCDEOVBVDVJVBVDVIBPZDIZVJVBECQZVDVLRCDESVMVC
      VKDABCETUAUBVBVIVEDUCZRZBUDVNVIUEZBUDVLVJVBVOVPBVBVPVIVNUEZVPJVOVBVQVPVBV
      HVNACVBVFCUCZVHVNVBVRJZVHJVEVGDVSVHUFVSVGDUCVHCDVFEUGUHUIUJUKULVIVNUMUNUO
      VIBDUPVIBDUQURUSUTVA $.
      $( [29-Oct-2006] $)

    $( Alternate definition of an onto mapping. $)
    dffo4 $p |- ( F : A -onto-> B <->
                ( F : A --> B /\ A. y e. B E. x e. A x F y ) ) $=
      ( wfo wf cv wbr wrex wral wa crn wceq dffo2 simpl wcel wex eleq2 visset 
      elrn syl5bbr biimpar adantll wi wfn ffn fnbr ex syl ancrd eximdv df-rex 
      syl6ibr ad2antrr mpd r19.21aiva jca sylbi cfv fnbrfvb biimprd eqcom 
      syl6ib sylan reximdva ralimdv imdistani dffo3 sylibr impbii ) CDEFZCDEGZA
      HZBHZEIZACJZBDKZLZVLVMEMZDNZLZVSCDEOWBVMVRVMWAPWBVQBDWBVODQZLVPARZVQWAWCW
      DVMWAWDWCWAVOVTQWCWDVTDVOSAVOEBTZUAUBUCUDVMWDVQUEWAWCVMWDVNCQZVPLZARVQVMV
      PWGAVMVPWFVMECUFZVPWFUECDEUGZWHVPWFCVNVOEUHUIUJUKULVPACUMUNUOUPUQURUSVSVM
      VOVNEUTZNZACJZBDKZLVLVMVRWMVMVQWLBDVMVPWKACWHWFVPWKUEVMWHWFLZVPWJVONZWKWN
      WOVPCVNVOEWEVAVBWJVOVCVDWIVEVFVGVHABCDEVIVJVK $.
      $( [20-Mar-2007] $)

    $( Alternate definition of an onto mapping. $)
    dffo5 $p |- ( F : A -onto-> B <->
                ( F : A --> B /\ A. y e. B E. x x F y ) ) $=
      ( wfo wf cv wbr wrex wral wa wex dffo4 rexex ralimi anim2i wcel wfn wi 
      ffn fnbr ex syl ancrd eximdv df-rex syl6ibr ralimdv imdistani impbii 
      bitri ) CDEFCDEGZAHZBHZEIZACJZBDKZLZUMUPAMZBDKZLZABCDENUSVBURVAUMUQUTBDUP
      ACOPQUMVAURUMUTUQBDUMUTUNCRZUPLZAMUQUMUPVDAUMUPVCUMECSZUPVCTCDEUAVEUPVCCU
      NUOEUBUCUDUEUFUPACUGUHUIUJUKUL $.
      $( [20-Mar-2007] $)

    $( A relation equivalent to the existence of an onto mapping.  The
       right-hand ` f ` is not necessarily a function. $)
    exfo $p |- ( E. f f : A -onto-> B <->
           E. f ( A. x e. A E! y e. B x f y /\ A. x e. B E. y e. A y f x ) ) $=
      ( vg cv wfo wex wbr wreu wral wrex wa wf dffo4 cxp wss dff4 simprbi 
      anim1i sylbi eximi cin crn wceq wcel brinxp reubidva biimpd ralimia 
      inss2 jctil sylibr rninxp biimpri anim12i dffo2 visset inex1 foeq1 
      cla4ev syl 19.23aiv cbvexv sylib impbii ) CDEGZHZEIZAGZBGZVHJZBDKZACLZVLV
      KVHJBCMADLZNZEIZVIVQEVICDVHOZVPNVQBACDVHPVSVOVPVSVHCDQZRVOABCDVHSTUAUBUCV
      RCDFGZHZFIZVJVQWCEVQCDVHVTUDZHZWCVQCDWDOZWDUEDUFZNWEVOWFVPWGVOWDVTRZVKVLW
      DJZBDKZACLZNWFVOWKWHVNWJACVKCUGZVNWJWLVMWIBDVKVLCDVHUHUIUJUKVHVTULUMABCDW
      DSUNWGVPBACDVHUOUPUQCDWDURUNWBWEFWDVHVTEUSUTCDWAWDVAVBVCVDWBVIFECDWAVHVAV
      EVFVG $.
      $( [20-Mar-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d y z C $.  $d z F $.
    fopab2.1 $e |- F = { <. x , y >. | ( x e. A /\ y = C ) } $.
    $( Functionality of an ordered-pair class abstraction. $)
    fopab2 $p |- ( A. x e. A C e. B <-> F : A --> B ) $=
      ( vz wcel wral wf wfn crn wss df-f cv wceq weu cvv elisset eueq sylib 
      ralimi fnopabg wa copab wi wal wex hbra1 ax-17 ra4 eleq1a imim2i imp3a 
      syl 19.23ad rnopab abeq2i syl5ib 19.21aiv hbopab2 hbrn dfss2f sylibr 
      rneqi syl5ss sylanbrc cdm fdm dmopab3 isset ralbii dmeqi eqeq1i 3bitr4ri 
      hbopab1 hbf feq1i albii 3imtr4i cfv ffvelrn adantr wb fvopab2 fveq1i 
      syl5eq eleq1d adantll mpbid ex ralimdaa mpd impbii ) EDIZACJZCDFKZWRFCLZF
      MZDNWQCDFOWQBPZEQZBRZACJWSWPXCACWPESIZXCEDTBEUAUBUCXBABCFGUDUBWQAPZCIZXBU
      EZABUFZMZDWTWQXAXIIZXADIZUGZBUHXIDNWQXLBWQXGAUIZXKXJWQXGXKAWPACUJXKAUKWQX
      FWPUGZXGXKUGWPACULXNXFXBXKWPXBXKUGXFEDXAUMUNUOUPUQXMBXIXGABURUSUTVABHXIDB
      HXHXGABHVBVCHPZDIZBUKVDVEFXHGVFVGVHWRXDACJZWQWRFVIZCQZXQCDFVJXBBUIZACJXHV
      IZCQXQXSXBABCVKXDXTACBEVLVMXRYACFXHGVNVOVPUBWRXDWPACCDXHKZYBAUHWRWRAUHAHC
      DXHXGABHVQXOCIAUKXPAUKVRCDFXHGVSZWRYBAYCVTWAWRXFUEZXDWPYDXDUEXEFWBZDIZWPY
      DYFXDCDXEFWCWDXFXDYFWPWEWRXFXDUEZYEEDYGXEXHWBEYEABCESWFXEFXHGWGWHWIWJWKWL
      WMWNWO $.
      $( [29-Jan-2004] $)

    $( Inclusion of a function in a cross product. $)
    fopabssxp $p |- ( A. x e. A C e. B -> F C_ ( A X. B ) ) $=
      ( wcel wral wf cxp wss fopab2 fssxp sylbi ) EDHACICDFJFCDKLABCDEFGMCDFNO 
      $.
      $( [5-Jun-2007] $)

    ${
      rnssopab.2 $e |- C e. _V $.
      $( Range of a function that is expressed as an ordered-pair class
         abstraction. $)
      rnssopab $p |- ( A. x e. A C e. B <-> ran F C_ B ) $=
        ( vz wcel wral crn wss wf fopab2 frn sylbi cv wceq wa copab hbopab1 
        hbxfr hbrn ax-17 hbss ssel cfv cvv fvopab2 mpan2 fveq1i syl5eq wfn 
        fnopab2 fnfvelrn mpan eqeltrrd syl5 r19.21ai impbii ) EDJZACKZFLZDMZVCC
        DFNVEABCDEFGOCDFPQVEVBACAIVDDAIFAIFARZCJZBRESTZABUAZGVHABIUBUCUDIRDJAUE
        UFVEEVDJVBVGVDDEUGVGVFFUHZEVDVGVFVIUHZEVJVGEUIJVKESHABCEUIUJUKVFFVIGULU
        MFCUNVGVJVDJABCEFHGUOCVFFUPUQURUSUTVA $.
        $( [23-May-2006] $)

      $( Functionality of an ordered-pair class abstraction. $)
      fopab3 $p |- ( ran F C_ B <-> F : A --> B ) $=
        ( crn wss wcel wral wf rnssopab fopab2 bitr3i ) FIDJEDKACLCDFMABCDEFGHN
        ABCDEFGOP $.
        $( [23-May-2006] $)
    $}

    ${
      fopab.2 $e |- ( x e. A -> C e. B ) $.
      $( Functionality of an ordered-pair class abstraction. $)
      fopab $p |- F : A --> B $=
        ( wcel wral wf rgen fopab2 mpbi ) EDIZACJCDFKOACHLABCDEFGMN $.
        $( [19-Mar-2005] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( A function maps to a class to which all values belong. $)
    ffnfv $p |- ( F : A --> B <-> ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vy wf wfn cv cfv wcel wral wa ffn ffvelrn r19.21aiva jca crn wss df-f 
      simpl wceq wrex fvelrnb biimpd hbra1 ax-17 wi ra4 eleq1 biimpcd syl6 
      r19.23ad sylan9 r19.21aiv dfss3 sylibr sylanbrc impbii ) BCDFZDBGZAHZDIZC
      JZABKZLZUSUTVDBCDMUSVCABBCVADNOPUSUTDQZCRZVEBCDSUTVDTVEEHZCJZEVFKVGVEVIEV
      FUTVHVFJZVBVHUAZABUBZVDVIUTVJVLABVHDUCUDVDVKVIABVCABUEVIAUFVDVABJVCVKVIUG
      VCABUHVKVCVIVBVHCUIUJUKULUMUNEVFCUOUPUQUR $.
      $( [3-Dec-2003] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z F $.  $d x y z $.
    ffnfvf.1 $e |- ( y e. A -> A. x y e. A ) $.
    ffnfvf.2 $e |- ( y e. B -> A. x y e. B ) $.
    ffnfvf.3 $e |- ( y e. F -> A. x y e. F ) $.
    $( A function maps to a class to which all values belong.  This version of
       ~ ffnfv uses bound-variable hypotheses instead of distinct variable
       conditions. $)
    ffnfvf $p |- ( F : A --> B <-> ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vz wf wfn cv cfv wcel wral wa ffnfv ax-17 hbfv hbel wceq fveq2 eleq1d 
      cbvralf anbi2i bitri ) CDEJECKZILZEMZDNZICOZPUGALZEMZDNZACOZPICDEQUKUOUGU
      JUNIABCBLZCNIRFABBUIDABUHEHUPUHNARSGTUNIRUHULUAUIUMDUHULEUBUCUDUEUF $.
      $( [28-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d x B $.  $d x y F $.
    $( An upper bound for range determined by function values. $)
    fnfvrnss $p |- ( ( F Fn A /\ A. x e. A ( F ` x ) e. B ) -> ran F C_ B ) $=
      ( wfn cv cfv wcel wral wa wf crn wss ffnfv frn sylbir ) DBEAFDGCHABIJBCDK
      DLCMABCDNBCDOP $.
      $( [8-Oct-2004] $)

    $( Representation of a mapping in terms of its values. $)
    fopabfv $p |- ( F : A --> B <->
         ( F = { <. x , y >. | ( x e. A /\ y = ( F ` x ) ) }
         /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( wf wfn cv cfv wcel wral wa wceq copab ffnfv dffn5 anbi1i bitri ) CDEFEC
      GZAHZEIZDJACKZLETCJBHUAMLABNMZUBLACDEOSUCUBABCEPQR $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d u x B $.  $d w z B $.  $d u F $.  $d u x G $.  $d u H $.
    $d w S $.  $d y R $.  $d w R z $.  $d w T z $.  $d x v A $.  $d v T $.
    fopabco.1 $e |- R e. _V $.
    fopabco.2 $e |- S e. _V $.
    fopabco.3 $e |- T e. _V $.
    fopabco.4 $e |- ( z = R -> S = T ) $.
    fopabco.5 $e |- F = { <. x , y >. | ( x e. A /\ y = R ) } $.
    fopabco.6 $e |- G = { <. z , w >. | ( z e. B /\ w = S ) } $.
    fopabco.7 $e |- H = { <. x , v >. | ( x e. A /\ v = T ) } $.
    $( Composition of two functions expressed as ordered-pair class
       abstractions.  Note that ` v ` may be assigned to ` w ` , ` y ` , or
       ` z ` if desired.  (Unnecessary distinct variable restrictions were
       removed by David Abernethy, 21-Jan-2012.) $)
    fopabco $p |- ( ran F C_ B -> ( G o. F ) = H ) $=
      ( vu crn wss ccom wceq cv cfv wral wcel wa copab hbopab1 hbxfr hbrn 
      ax-17 hbss cvv fvopab2 mpan2 fveq1i syl5eq fveq2d adantl wf ffvelrn wfn 
      fnopab2 df-f biimpri mpan sylan wb eleq1d mpbid fvopab4 syl eqtrd cdm 
      dmopab2 eleq2i wfun fnfun ax-mp fvco mp3an12 sylbir 3eqtr4d ex r19.21ai 
      hbco eqfnfv2f fnco sylancl mpbird ) KUBZGUCZLKUDZMUEZAUFZWQUGZWSMUGZUEZAF
      UHZWPXBAFAUAWOGAUAKAUAKWSFUIZBUFHUEUJZABUKZRXEABUAULUMZUNUAUFZGUIAUOUPWPX
      DXBWPXDUJZWSKUGZLUGZJWTXAXIXKHLUGZJXDXKXLUEWPXDXJHLXDWSXFUGZHXJXDHUQUIXMH
      UENABFHUQURUSWSKXFRUTVAZVBVCXIHGUIZXLJUEXIXJGUIZXOFGKVDZXDXPWPFGWSKVEKFVF
      ZWPXQABFHKNRVGZXQXRWPUJFGKVHVIVJVKXDXPXOVLWPXDXJHGXNVMVCVNCDHIJGLQSPVOVPV
      QXDWTXKUEZWPXDWSKVRZUIZXTYAFWSABFHKNRVSVTLWAZKWAZYBXTLGVFZYCCDGILOSVGZGLW
      BWCXRYDXSFKWBWCWSLKWDWEWFVCXDXAJUEZWPXDJUQUIZYGPXDYHUJWSXDEUFJUEUJZAEUKZU
      GJXAAEFJUQURWSMYJTUTVAUSVCWGWHWIWQFVFZMFVFWRXCVLWPAUAFWQMAUALKXHLUIAUOXGW
      JAUAMYJTYIAEUAULUMWKYEXRWPYKYFXSGFLKWLWEAEFJMPTVGWMWN $.
      $( [21-Jan-2012] $) $( [21-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d w x y z B $.  $d w y z C $.  $d w y z D $.  $d w z F $.
    $d w z G $.
    fopabcos.1 $e |- C e. _V $.
    fopabcos.2 $e |- D e. _V $.
    fopabcos.3 $e |- F = { <. x , y >. | ( x e. A /\ y = C ) } $.
    fopabcos.4 $e |- G = { <. x , y >. | ( x e. B /\ y = D ) } $.
    $( MAY BE REVISED - prove from fopabco4? $)
    $( Composition of two functions expressed as ordered-pair class
       abstractions. $)
    fopabcos $p |- ( ran G C_ A -> ( F o. G ) =
                  { <. x , y >. | ( x e. B /\ y = [_ D / x ]_ C ) } ) $=
      ( vz vw crn wss ccom cv wcel csb wceq wa copab cfv wral visset fvopab4s 
      adantl wfn fnopab2 fnfvelrn mpan wi ssel adantr mpd eqeltrrd csbex ax-17 
      hbcsb1 fvopab4sf syl cdm dmopab2 eleq2i wfun fnfun ax-mp fvco mp3an12 
      sylbir fveq2d eqtrd eqid cvv wal ax-gen csbnest1g mp2an syl6eq 3eqtr4d 
      r19.21aiva wb eqfnfv2f fnco sylancl mpbird ) HOZCPZGHQZARDSBRAFETZUAUBABU
      CZUAZMRZWJUDZWNWLUDZUAZMDUEZWIWQMDWIWNDSZUBZAWNFTZGUDZAXAETZWOWPWTXACSXBX
      CUAWTWNHUDZXACWSXDXAUAWIABWNFDHMUFZJLUGZUHWTXDWHSZXDCSZWSXGWIHDUIZWSXGABD
      FHJLUJZDWNHUKULUHWIXGXHUMWSWHCXDUNUOUPUQABNXAECGAWNFXEJURIANWNFXENRZWNSAU
      SUTKVAVBWSWOXBUAWIWSWOXDGUDZXBWSWNHVCZSZWOXLUAZXMDWNABDFHJLVDVEGVFZHVFZXN
      XOGCUIZXPABCEGIKUJZCGVGVHXIXQXJDHVGVHWNGHVIVJVKWSXDXAGXFVLVMUHWSWPXCUAWIW
      SWPAWNWKTZXCABWNWKDWLXEAFEJIURZWLVNZUGWNVOSFVOSZAVPXTXCUAXEYCAJVQAWNFEVOV
      OVRVSVTUHWAWBWJDUIZWLDUIWMWRWCWIMNDWJWLXKWJSMUSXKWLSMUSWDXRXIWIYDXSXJCDGH
      WEVJABDWKWLYAYBUJWFWG $.
      $( [22-May-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    fsn.1 $e |- A e. _V $.
    fsn.2 $e |- B e. _V $.
    $( A function maps a singleton to a singleton iff it is the singleton of a
       ordered pair. $)
    fsn $p |- ( F : { A } --> { B } <-> F = { <. A , B >. } ) $=
      ( vx vy csn wf cop wceq cv wcel wb wal wa visset opelf elsn anbi12i 
      sylib ex opeq12 eleq1d wreu snid feu mpan2 weu eueq1 biantru euanv opeq2 
      pm5.32i anbi1i ancom 3bitr4ri eubii df-reu bitr4i 3bitr2i sylibr 
      syl5cbir impbid opex elsnc opth bitr2i syl6bb 19.21aivv wrel eqrel frel 
      relsn sylancl mpbird wf1o f1osn f1oeq1 mpbiri f1of syl impbii ) AHZBHZCIZ
      CABJZHZKZWFWIFLZGLZJZCMZWLWHMZNZGOFOZWFWOFGWFWMWJAKZWKBKZPZWNWFWMWSWFWMWS
      WFWMPWJWDMZWKWEMZPWSWDWEWJWKCGQZRWTWQXAWRFASGBSZTUAUBWSWMWGCMZWFWSWLWGCWJ
      WKABUCUDWFAWKJZCMZGWEUEZXDWFAWDMXGADUFGWDWEACUGUHXDXDWRGUIZPXDWRPZGUIZXGX
      HXDGBEUJUKXDWRGULXJXAXFPZGUIXGXIXKGWRXFPWRXDPXKXIWRXFXDWRXEWGCWKBAUMUDUNX
      AWRXFXCUOXDWRUPUQURXFGWEUSUTVAVBVCVDWNWLWGKWSWLWGWJWKVEVFWJWKABFQXBEVGVHV
      IVJCVKWHVKWIWPNWFFGCWHVLWDWECVMABDVNVOVPWIWDWECVQZWFWIXLWDWEWHVQABDEVRWDW
      ECWHVSVTWDWECWAWBWC $.
      $( [10-Dec-2003] $)

    $( The cross product of two singletons. $)
    xpsn $p |- ( { A } X. { B } ) = { <. A , B >. } $=
      ( csn cxp wf cop wceq fconst fsn mpbi ) AEZBEZMNFZGOABHEIMBDJABOCDKL $.
      $( [4-Nov-2006] $)
  $}

  ${
    $d A a b $.  $d B b $.  $d F a b $.
    $( A function maps a singleton to a singleton iff it is the singleton of an
       ordered pair. $)
    fsng $p |- ( ( A e. C /\ B e. D ) ->
                 ( F : { A } --> { B } <-> F = { <. A , B >. } ) ) $=
      ( va vb cv csn wf cop wceq wb sneq feq2d opeq1 sneqd eqeq2d bibi12d feq3 
      syl opeq2 visset fsn vtocl2g ) FHZIZGHZIZEJZEUFUHKZIZLZMAIZUIEJZEAUHKZIZL
      ZMUNBIZEJZEABKZIZLZMFGABCDUFALZUJUOUMURVDUGUNUIEUFANOVDULUQEVDUKUPUFAUHPQ
      RSUHBLZUOUTURVCVEUIUSLUOUTMUHBNUIUSUNETUAVEUQVBEVEUPVAUHBAUBQRSUFUHEFUCGU
      CUDUE $.
      $( [26-Oct-2012] $)
  $}

  ${
    fsn2.1 $e |- A e. _V $.
    $( A function that maps a singleton to a class is the singleton of an
       ordered pair. $)
    fsn2 $p |- ( F : { A } --> B <->
               ( ( F ` A ) e. B /\ F = { <. A , ( F ` A ) >. } ) ) $=
      ( csn wf cfv wcel wa cop wceq snid ffvelrn mpan2 wfn ffn crn dffn3 
      biimpi wb cima cdm fndm imaeq2d imadmrn syl5eqr fnsnfv eqtr4d feq3 syl 
      mpbid jca wss fss ancoms snssi sylan impbii fvex fsn anbi2i bitri ) AEZBC
      FZACGZBHZVCVEEZCFZIZVFCAVEJEKZIVDVIVDVFVHVDAVCHZVFADLZVCBACMNVDCVCOZVHVCB
      CPVMVCCQZCFZVHVMVOVCCRSVMVNVGKVOVHTVMVNCVCUAZVGVMCCUBZUAVPVNVMVQVCCVCCUCU
      DCUEUFVMVKVGVPKVLVCACUGNUHVNVGVCCUIUJUKUJULVGBUMZVHVDVFVHVRVDVCVGBCUNUOVE
      BUPUQURVHVJVFAVECDACUSUTVAVB $.
      $( [19-May-2004] $)
  $}

  ${
    fpr.1 $e |- A e. _V $.
    fpr.2 $e |- B e. _V $.
    fpr.3 $e |- C e. _V $.
    fpr.4 $e |- D e. _V $.
    $( A function with a domain of two elements.  (Contributed by Jeff Madsen,
       20-Jun-2010.)  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    fpr $p |- ( A =/= B
                -> { <. A , C >. , <. B , D >. } : { A , B } --> { C , D } ) $=
      ( wne cop cpr wfn crn wss wa wf wfun cdm wceq funpr dmprop jctir df-fn 
      sylibr csn cun df-pr rneqi rnun rnsnop uneq12i eqtr4i 3eqtri eqimssi 
      df-f ) ABIZACJZBDJZKZABKZLZUSMZCDKZNZOUTVCUSPUPVAVDUPUSQZUSRUTSZOVAUPVEVF
      ABCDEFGHTABCDUAUBUSUTUCUDVBVCVBUQUEZURUEZUFZMVGMZVHMZUFZVCUSVIUQURUGUHVGV
      HUIVLCUEZDUEZUFVCVJVMVKVNACEGUJBDFHUJUKCDUGULUMUNUBUTVCUSUOUD $.
      $( [22-Oct-2011] $) $( [20-Jun-2010] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( A function restricted to a singleton. $)
    fnressn $p |- ( ( F Fn A /\ B e. A ) ->
                  ( F |` { B } ) = { <. B , ( F ` B ) >. } ) $=
      ( vx wcel wfn csn cres cfv cop wceq cv wi sneq reseq2d fveq2 opeq12 
      mpdan sneqd eqeq12d imbi2d wa wss fnssres visset snss sylan2b cvv wf 
      dffn2 fsn2 fvex biantrur snid fvres ax-mp opeq2i sneqi eqeq2i bitr3i 
      3bitri sylib expcom vtoclga impcom ) BAECAFZCBGZHZBBCIZJZGZKZVFCDLZGZHZVM
      VMCIZJZGZKZMVFVLMDBAVMBKZVSVLVFVTVOVHVRVKVTVNVGCVMBNOVTVQVJVTVPVIKVQVJKVM
      BCPVMVPBVIQRSTUAVFVMAEZVSVFWAUBVOVNFZVSVFVNAUCWBWAAVNCUDVMADUEZUFUGWBVNUH
      VOUIVMVOIZUHEZVOVMWDJZGZKZUBZVSVNVOUJVMUHVOWCUKWIWHVSWEWHVMVOULUMWGVRVOWF
      VQWDVPVMVMVNEWDVPKVMWCUNVMVNCUOUPUQURUSUTVAVBVCVDVE $.
      $( [9-Oct-2004] $)

    $( The value of a function restricted to a singleton. $)
    fressnfv $p |- ( ( F Fn A /\ B e. A ) ->
                 ( ( F |` { B } ) : { B } --> C <-> ( F ` B ) e. C ) ) $=
      ( vx wcel wfn csn cres wf cfv wb cv wi wceq sneq reseq2 feq1d feq2 bitrd 
      syl fveq2 eleq1d bibi12d imbi2d wa cop fnressn visset snid fvres ax-mp 
      opeq2i sneqi eqeq2i iba eleq1i syl5rbbr fsn2 syl5bb sylbir expcom 
      vtoclga impcom ) BAFDAGZBHZCDVFIZJZBDKZCFZLZVEEMZHZCDVMIZJZVLDKZCFZLZNVEV
      KNEBAVLBOZVRVKVEVSVOVHVQVJVSVMVFOZVOVHLVLBPVTVOVMCVGJVHVTVMCVNVGVMVFDQRVM
      VFCVGSTUAVSVPVICVLBDUBUCUDUEVEVLAFZVRVEWAUFVNVLVPUGZHZOZVRAVLDUHWDVNVLVLV
      NKZUGZHZOZVRWGWCVNWFWBWEVPVLVLVMFWEVPOVLEUIZUJVLVMDUKULZUMUNUOWHWECFZWHUF
      ZVQVOWHWKWLVQWHWKUPWEVPCWJUQURVLCVNWIUSUTVAUAVBVCVD $.
      $( [9-Oct-2004] $)
  $}

  $( The value of a constant function. $)
  fvconst $p |- ( ( F : A --> { B } /\ C e. A ) -> ( F ` C ) = B ) $=
    ( csn wf wcel wa cfv wceq ffvelrn elsni syl ) ABEZDFCAGHCDIZNGOBJANCDKOBLM 
    $.
    $( [30-May-1999] $)

  ${
    $d x y z A $.  $d x y z B $.
    fopabsn.1 $e |- A e. _V $.
    fopabsn.2 $e |- B e. _V $.
    $( The singleton of an ordered pair expressed as an ordered pair class
       abstraction.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    fopabsn $p |- { <. A , B >. } =
                  { <. x , y >. | ( x e. { A } /\ y = B ) } $=
      ( csn cxp cop cv wcel wceq wa copab xpsn fconstopab eqtr3i ) CGZDGHCDIGAJ
      RKBJDLMABNCDEFOABRDPQ $.
      $( [22-Oct-2011] $) $( [6-Jun-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    fopabap.0a $e |- A e. _V $.
    fopabap.0b $e |- B e. _V $.
    fopabap.1 $e |- ( R u. { A } ) = S $.
    fopabap.2 $e |- ( x = A -> C = B ) $.
    $( Append an additional value to a function. $)
    fopabap $p |- ( { <. x , y >. | ( x e. R /\ y = C ) } u. { <. A , B >. } )
                  = { <. x , y >. | ( x e. S /\ y = C ) } $=
      ( cv wcel wceq wa copab cop csn cun wo fopabsn uneq2i unopab eleq2i elun 
      bitr3i anbi1i andir elsn sylbi eqeq2d pm5.32i orbi2i 3bitrri opabbii 
      3eqtri ) ALZFMZBLZENZOZABPZCDQRZSVBUQCRZMZUSDNZOZABPZSVAVGTZABPUQGMZUTOZA
      BPVCVHVBABCDHIUAUBVAVGABUCVIVKABVKURVETZUTOVAVEUTOZTVIVJVLUTVJUQFVDSZMVLV
      NGUQJUDUQFVDUEUFUGURVEUTUHVMVGVAVEUTVFVEEDUSVEUQCNEDNACUIKUJUKULUMUNUOUP 
      $.
      $( [15-Jun-2007] $) $( [6-Jun-2006] $)
  $}

  ${
    $d x A $.
    $( The value of the identity function. $)
    fvi $p |- ( A e. B -> ( _I ` A ) = A ) $=
      ( vx cv cid cfv wceq fveq2 id eqeq12d cvv wfn wcel wfun cdm df-fn funi 
      dmi mpbir2an visset wa cop wbr ididg ax-mp df-br mpbi fnopfvb mpbiri 
      mp2an vtoclg ) CDZEFZULGZAEFZAGCABULAGZUMUOULAULAEHUPIJEKLZULKMZUNUQENEOK
      GEKPQRSCTZUQURUAUNULULUBEMZULULEUCZUTURVAUSULKUDUEULULEUFUGKULULEUSUHUIUJ
      UK $.
      $( [1-May-2004] $)
  $}

  $( The value of a restricted identity function. $)
  fvresi $p |- ( B e. A -> ( ( _I |` A ) ` B ) = B ) $=
    ( wcel cid cres cfv fvres fvi eqtrd ) BACBDAEFBDFBBADGBAHI $.
    $( [19-May-2004] $)

  $( The value of a constant function. $)
  fvconst2g $p |- ( ( B e. D /\ C e. A ) -> ( ( A X. { B } ) ` C ) = B ) $=
    ( csn cxp wf wcel cfv wceq fvconst fconstg sylan ) ABEZANFZGCAHCOIBJBDHABCO
    KABDLM $.
    $( [20-Aug-2005] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( A constant function expressed as a cross product. $)
    fconst2g $p |- ( B e. C -> ( F : A --> { B } <-> F = ( A X. { B } ) ) ) $=
      ( vx wcel csn wf cxp wceq wa cv cfv wral fvconst adantlr fvconst2g 
      adantll eqtr4d r19.21aiva wfn wb eqfnfv2 ffn fconstg syl syl2an mpbird 
      expcom feq1 syl5cbir impbid ) BCFZABGZDHZDAUNIZJZUOUMUQUOUMKZUQELZDMZUSUP
      MZJZEANZURVBEAURUSAFZKUTBVAUOVDUTBJUMABUSDOPUMVDVABJUOABUSCQRSTDAUAUPAUAZ
      UQVCUBUOUMEADUPUCAUNDUDUMAUNUPHZVEABCUEZAUNUPUDUFUGUHUIUQUOVFUMAUNDUPUJVG
      UKUL $.
      $( [27-Nov-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    fvconst2.1 $e |- B e. _V $.
    $( The value of a constant function. $)
    fvconst2 $p |- ( C e. A -> ( ( A X. { B } ) ` C ) = B ) $=
      ( cvv wcel csn cxp cfv wceq fvconst2g mpan ) BEFCAFCABGHIBJDABCEKL $.
      $( [16-Apr-2005] $)

    $( A constant function expressed as a cross product. $)
    fconst2 $p |- ( F : A --> { B } <-> F = ( A X. { B } ) ) $=
      ( cvv wcel csn wf cxp wceq wb fconst2g ax-mp ) BEFABGZCHCANIJKDABECLM $.
      $( [20-Aug-1999] $)
  $}

  $( Two ways to express that a function is constant. $)
  fconst5 $p |- ( ( F Fn A /\ A =/= (/) ) -> ( F = ( A X. { B } ) <->
                 ran F = { B } ) ) $=
    ( wfn c0 wne wa csn cxp wceq crn wi rnxp eqeq2d rneq syl5bi adantl cvv 
    wcel wf fconst2g wfo df-fo fof sylbir exp3a adantrd wn wrel snprc relrn0 
    biimprd wb eqeq2 adantr xpeq2 xp0 syl6eq 3imtr4d ex sylbi fnrel syl5 
    pm2.61i impbid ) CADZAEFZGZCABHZIZJZCKZVIJZVGVKVMLVFVGVLVJKZJVMVKVGVNVIVLAV
    IMNCVJOPQBRSZVHVMVKLZLVOVFVPVGVOVFVMVKVOAVICTZVKVFVMGZABRCUAVRAVICUBVQAVICU
    CAVICUDUEPUFUGVOUHZVFVPVGVSCUIZVPVFVSVIEJZVTVPLBUJWAVTVPWAVTGVLEJZCEJZVMVKV
    TWBWCLWAVTWCWBCUKULQWAVMWBUMVTVIEVLUNUOWAVKWCUMVTWAVJECWAVJAEIEVIEAUPAUQURN
    UOUSUTVAACVBVCUGVDVE $.
    $( [27-Nov-2007] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( A constant function expressed in terms of its functionality, domain, and
       value.  See also ~ fconst2 . $)
    fconstfv $p |- ( F : A --> { B } <->
                   ( F Fn A /\ A. x e. A ( F ` x ) = B ) ) $=
      ( vy vz csn wf wfn cv cfv wceq wral wa ffn fvconst r19.21aiva jca wi c0 
      fneq2 fn0 syl6bb f0 feq1 mpbiri syl6bi feq2 sylibrd adantrd wne crn wcel 
      wrex fvelrnb fveq2 eqeq1d rcla4cva rexbidva r19.9rzv bicomd sylan9bbr 
      elsn eqcom bitr2i eqrdv an32s exp31 imdistand wfo df-fo fof sylbir syl6 
      pm2.61ine impbii ) BCGZDHZDBIZAJZDKZCLZABMZNZVRVSWCBVQDOVRWBABBCVTDPQRWDV
      RSBTBTLZVSVRWCWEVSTVQDHZVRWEVSDTLZWFWEVSDTIWGBTDUADUBUCWGWFTVQTHVQUDTVQDT
      UEUFUGBTVQDUHUIUJBTUKZWDVSDULZVQLZNZVRWHVSWCWJWHVSWCWJWHWCVSWJWHWCNZVSNZE
      WIVQWMEJZWIUMZCWNLZWNVQUMZVSWOFJZDKZWNLZFBUNZWLWPFBWNDUOWCXAWPFBUNZWHWPWC
      WTWPFBWCWRBUMNWSCWNWBWSCLAWRBVTWRLWAWSCVTWRDUPUQURUQUSWHWPXBWPFBUTVAVBVBW
      QWNCLWPECVCWNCVDVEUCVFVGVHVIWKBVQDVJVRBVQDVKBVQDVLVMVNVOVP $.
      $( [27-Aug-2004] $)

    $( Two ways to express a constant function. $)
    fconst3 $p |- ( F : A --> { B } <->
                  ( F Fn A /\ A C_ ( `' F " { B } ) ) ) $=
      ( vx csn wf wfn cv cfv wceq wral wa ccnv cima wss fconstfv wfun cdm wb 
      fnfun fndm eqimss2 syl funconstss syl11anc pm5.32i bitri ) ABEZCFCAGZDHCI
      BJDAKZLUIACMUHNOZLDABCPUIUJUKUICQACRZOZUJUKSACTUIULAJUMACUAAULUBUCDABCUDU
      EUFUG $.
      $( [15-Mar-2007] $)
  $}

  $( Two ways to express a constant function. $)
  fconst4 $p |- ( F : A --> { B } <->
                ( F Fn A /\ ( `' F " { B } ) = A ) ) $=
    ( csn wf wfn ccnv cima wss wa wceq fconst3 cdm cnvimass a1i fndm sseqtrd 
    biantrurd eqss syl6bbr pm5.32i bitri ) ABDZCECAFZACGUCHZIZJUDUEAKZJABCLUDUF
    UGUDUFUEAIZUFJUGUDUHUFUDUECMZAUEUIIUDCUCNOACPQRUEASTUAUB $.
    $( [8-Mar-2007] $)

  $( A function's value in a pre-image belongs to the image. $)
  funfvima $p |- ( ( Fun F /\ B e. dom F ) -> ( B e. A ->
                 ( F ` B ) e. ( F " A ) ) ) $=
    ( wfun cdm wcel wa cfv cima wi cres crn fvres eleq1d df-ima eleq2i 
    syl6rbbr fvelrn funres sylan syl5cbir ex cin dmres elin bitri syl5ibr 
    exp3a com12 imp3a pm2.43b ) CDZBCEZFZGBAFZBCHZCAIZFZUOULUNUOURJZULUOUNUSJUL
    UOUNUSULBCAKZEZFZUSUOUNGZULVBUSUOURBUTHZUTLZFZULVBGUOVFUPVEFURUOVDUPVEBACMN
    UQVEUPCAOPQUTDVBVFULBUTRACSTUAUBVBBAUMUCZFVCVAVGBCAUDPBAUMUEUFUGUHUIUJUK $.
    $( [23-Sep-2003] $)

  $( A function's value in an included pre-image belongs to the image. $)
  funfvima2 $p |- ( ( Fun F /\ A C_ dom F ) -> ( B e. A ->
                  ( F ` B ) e. ( F " A ) ) ) $=
    ( wfun cdm wss wcel cfv cima wi funfvima ex com23 a2d ssel syl5 imp ) CDZAC
    EZFZBAGZBCHCAIGZJZRUABSGZJUCTRUAUDUBRUDUAUBRUDUCABCKLMNASBOPQ $.
    $( [3-Feb-1997] $)

  ${
    $d x A $.  $d x F $.  $d x G $.
    $( A class including a function contains the function's value in the image
       of the singleton of the argument. $)
    funfvima3 $p |- ( ( Fun F /\ F C_ G ) -> ( A e. dom F ->
                    ( F ` A ) e. ( G " { A } ) ) ) $=
      ( vx wss wfun cdm wcel cfv csn cima wi wa cop ssel funfvop syl5 imp wb 
      cv wceq sneq imaeq2d eleq2d opeq1 eleq1d visset fvex elimasn vtoclbg 
      ad2antll mpbird exp32 impcom ) BCEZBFZABGZHZABIZCAJZKZHZLUOUPURVBUOUPURMZ
      MVBAUSNZCHZUOVCVEUOVDBHVEVCBCVDOABPQRURVBVESUOUPUSCDTZJZKZHVFUSNZCHVBVEDA
      UQVFAUAZVHVAUSVJVGUTCVFAUBUCUDVJVIVDCVFAUSUEUFCVFUSDUGABUHUIUJUKULUMUN $.
      $( [23-Mar-2004] $)
  $}

  ${
    $d x y F $.
    $( Upper bound for the class of values of a class. $)
    fvclss $p |- { y | E. x y = ( F ` x ) } C_ ( ran F u. { (/) } ) $=
      ( cv cfv wceq wex cab crn wcel c0 csn wo cun wn wne wbr visset tz6.12i 
      eqcom syl5ib eximdv elrn syl6ibr com12 necon1bd elsn orrd ss2abi df-un 
      sseqtr4i ) BDZADZCEZFZAGZBHULCIZJZULKLZJZMZBHUQUSNUPVABUPURUTUPUROULKFUTU
      PURULKULKPZUPURVBUPUMULCQZAGURVBUOVCAVBUNULFVCUOUMULCARSULUNTUAUBAULCBRUC
      UDUEUFBKUGUDUHUIBUQUSUJUK $.
      $( [9-Nov-1995] $)
  $}

  ${
    $d x y F $.
    fvclex.1 $e |- F e. _V $.
    $( Existence of the class of values of a set. $)
    fvclex $p |- { y | E. x y = ( F ` x ) } e. _V $=
      ( cv cfv wceq wex cab crn c0 csn cun rnex p0ex unex fvclss ssexi ) BEAECF
      GAHBICJZKLZMSTCDNOPABCQR $.
      $( [9-Nov-1995] $)
  $}

  ${
    $d x y z w F $.  $d x y A $.
    fvresex.1 $e |- A e. _V $.
    $( Existence of the class of values of a restricted class. $)
    fvresex $p |- { y | E. x y = ( ( F |` A ) ` x ) } e. _V $=
      ( vw vz cv cfv wceq copab cres wex cab cvv visset fvex fveq2 fvopab 
      fveqres ax-mp eqeq2i exbii abbii wfun wcel funopabeq resfunexg mp2an 
      fvclex eqeltrri ) BHZAHZFHGHZDIZJGFKZCLZIZJZAMZBNULUMDCLIZJZAMZBNOUTVCBUS
      VBAURVAULUMUPIUMDIZJURVAJGFUMUOVDAPUMDQUNUMDRSUMCUPDTUAUBUCUDABUQUPUECOUF
      UQOUFGFUOUGEUPCOUHUIUJUK $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.
    abrexex.1 $e |- A e. _V $.
    $( Lemma for ~ abrexex .  Shows the existence of a class of existentially
       restricted function values. $)
    abrexexlem1 $p |- { z | E. y e. A z = ( B ` y ) } e. _V $=
      ( cv cfv wceq wrex cab cres wex fvresex wcel wa df-rex fvres eqeq2d 
      biimpar eximi sylbi ss2abi ssexi ) BFZAFZDGZHZACIZBJUDUEDCKGZHZALZBJABCDE
      MUHUKBUHUECNZUGOZALUKUGACPUMUJAULUJUGULUIUFUDUECDQRSTUAUBUC $.
      $( [22-Apr-2004] $)

    ${
      abrexexlem2.2 $e |- B e. _V $.
      $( Lemma for ~ abrexex .  Almost there, but still requires that ` B ` be
         a set. $)
      abrexexlem2 $p |- { y | E. x e. A y = B } e. _V $=
        ( vw vz cv wceq wrex cab copab cfv cvv wcel wa visset biantrur opabbii 
        fveq1i fvopab2 mp2an eqtri eqeq2i rexbii ax-17 hbopab1 hbfv hbeq fveq2 
        eqeq2d cbvrex bitr3i abbii hbopab2 hbrex eqeq1 rexbidv cbvab 
        abrexexlem1 eqeltri ) BIZDJZACKZBLZGIZHIZVDABMZNZJZHCKZGLZOVFVCVJJZHCKZ
        BLVMVEVOBVEVCAIZVINZJZACKVOVRVDACVQDVCVQVPVPOPZVDQZABMZNZDVPVIWAVDVTABV
        SVDARZSTUAVSDOPWBDJWCFABODOUBUCUDUEUFVRVNAHCVRHUGAGGVCVJVGVCPAUGAGVHVIV
        DABGUHVGVHPZAUGUIUJVPVHJVQVJVCVPVHVIUKULUMUNUOVOVLBGVOGUGVKBHCVHCPBUGBA
        GVGVJVPVGPBUGBGVHVIVDABGUPWDBUGUIUJUQVCVGJVNVKHCVCVGVJURUSUTUDHGCVIEVAV
        B $.
        $( [16-Oct-2003] $)
    $}

    $( Existence of a class abstraction of existentially restricted sets. ` x `
       is normally a free-variable parameter in the class expression
       substituted for ` B ` , which can be thought of as ` B ( x ) ` .  This
       simple-looking theorem is actually quite powerful and appears to involve
       the Axiom of Replacement in an intrinsic way, as can be seen by tracing
       back through the path ~ abrexexlem2 , ~ abrexexlem1 , ~ fvresex ,
       ~ resfunexg , and ~ funimaexg .  See also ~ abrexex2 . $)
    abrexex $p |- { y | E. x e. A y = B } e. _V $=
      ( vz cv wceq wrex cab cvv wcel crab class2set abrexexlem2 wb visset 
      eleq1 mpbii wral ax-1 r19.21aiv rabid2 sylibr eqeq2d syl ibi reximi 
      ss2abi ssexi ) BGZDHZACIZBJUKDKLZFDMZHZACIZBJABCUOEFDNOUMUQBULUPACULUPULU
      NULUPPULUKKLUNBQUKDKRSUNDUOUKUNUNFDTDUOHUNUNFDUNFGDLUAUBUNFDUCUDUEUFUGUHU
      IUJ $.
      $( [16-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d y z B $.
    $( Existence of a class abstraction of existentially restricted sets. ` x `
       is normally a free-variable parameter in ` B ` .  The antecedent assures
       us that ` A ` is a set. $)
    abrexexg $p |- ( A e. C -> { y | E. x e. A y = B } e. _V ) $=
      ( vz cv wceq wrex cab cvv wcel rexeq abbidv eleq1d visset abrexex vtoclg 
      ) BGDHZAFGZIZBJZKLSACIZBJZKLFCETCHZUBUDKUEUAUCBSATCMNOABTDFPQR $.
      $( [3-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The existence of an indexed union. ` x ` is normally a free-variable
       parameter in ` B ` . $)
    iunexg $p |- ( ( A e. C /\ A. x e. A B e. D ) -> U_ x e. A B e. _V ) $=
      ( vy wcel wral wa ciun cv wceq wrex cab cuni cvv dfiun2g adantl abrexexg 
      uniexg syl adantr eqeltrd ) BDGZCEGABHZIABCJZFKCLABMFNZOZPUEUFUHLUDAFBCEQ
      RUDUHPGZUEUDUGPGUIAFBCDSUGPTUAUBUC $.
      $( [23-Mar-2006] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.  $d ph z $.
    $( Existence of an existentially restricted class abstraction.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    abrexex2g $p |- ( ( A e. B /\ A. x e. A { y | ph } e. C )
                                  -> { y | E. x e. A ph } e. _V ) $=
      ( vz wcel cab wral wa cv wrex cvv ciun iunexg df-iun syl5eqelr wsbc 
      ax-17 hbs1 hbrex wceq sbceq1a rexbidv cbvab df-clab rexbii abbii eqtr4i 
      syl5eqel ) DEHACIZFHBDJKZGLZULHZBDMZGIZNABDMZCIZUMBDULONUQBDULEFPBGDULQRU
      SACUNSZBDMZGIUQURVACGURGTUTCBDBLDHCTACGUAUBCLUNUCAUTBDACUNUDUEUFUPVAGUOUT
      BDAGCUGUHUIUJUK $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x A $.
    iunex.1 $e |- A e. _V $.
    iunex.2 $e |- B e. _V $.
    $( The existence of an indexed union. ` x ` is normally a free-variable
       parameter in the class expression substituted for ` B ` , which can be
       read informally as ` B ( x ) ` . $)
    iunex $p |- U_ x e. A B e. _V $=
      ( cvv wcel wral ciun cv a1i rgen iunexg mp2an ) BFGCFGZABHABCIFGDOABOAJBG
      EKLABCFFMN $.
      $( [13-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The image of a union is the indexed union of the images.  Theorem 3K(a)
       of [Enderton] p. 50. $)
    imaiun $p |- ( A " U. B ) = U_ x e. B ( A " x ) $=
      ( vy vz cuni cima cv ciun wcel cop wa wex wrex eluni anbi1i exbii 19.41v 
      anass an12 bitri bitr3i excom exdistr 3bitri visset elima3 rexbii df-rex 
      bitr2i eliun 3bitr4i eqriv ) DBCFZGZACBAHZGZIZEHZUNJZUSDHZKBJZLZEMZVAUQJZ
      ACNZVAUOJVAURJVDUSUPJZUPCJZLZAMZVBLZEMZVHVGVBLZEMZLAMZVFVCVKEUTVJVBAUSCOP
      QVLVHVMLZAMZEMVPEMAMVOVKVQEVKVIVBLZAMVQVIVBARVRVPAVRVGVHVBLLVPVGVHVBSVGVH
      VBTUAQUBQVPEAUCVHVMAEUDUEVFVNACNVOVEVNACEVABUPDUFZUGUHVNACUIUJUEEVABUNVSU
      GAVACUQUKULUM $.
      $( [9-Aug-2004] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.
    $( The indexed union of a function's values is the union of its range.
       Compare Definition 5.4 of [Monk1] p. 50. $)
    fniunfv $p |- ( F Fn A -> U_ x e. A ( F ` x ) = U. ran F ) $=
      ( vy wfn crn cuni cv cfv wceq wrex cab ciun fnrnfv unieqd fvex dfiun2 
      syl6reqr ) CBEZCFZGDHAHZCIZJABKDLZGABUBMSTUCADBCNOADBUBUACPQR $.
      $( [27-Sep-2004] $)

    $( The indexed union of a function's values is the union of its image under
       the index class.

       Note:  This theorem depends on the fact that our function value is the
       empty set outside of its domain.  If the antecedent is changed to
       ` F Fn A ` , the theorem can be proved without this dependency. $)
    funiunfv $p |- ( Fun F -> U_ x e. A ( F ` x ) = U. ( F " A ) ) $=
      ( vy vz vw wfun cv cfv ciun wcel wceq wa copab crn cuni cima wfn fvex 
      eqid fnopab2 fniunfv ax-mp a1i fveq2 fvopab4 iuneq2i syl5eqr wrex cab 
      wex wbr wi cdm visset funbrfvb biimpd c0 wn eqeq1 ndmfv syl5bi con1d 
      impcom n0i sylan sylan2 expr pm2.43d funbrfv adantr impbid eqcom syl5bb 
      rexbidv pm5.32da exbidv eluni elima anbi2i exbii bitr2i syl6bb eluniab 
      eqrdv rnopab2 unieqi syl5eq eqtrd ) CGZABAHZCIZJZDHZBKEHZWNCIZLZMDENZOZPZ
      CBQZPZWJABWKWRIZJZWTWMXDWTLZWJWRBRXEDEBWPWRWNCSWRTZUAABWRUBUCUDABXCWLDEWK
      WPWLBWRWNWKCUEXFWKCSUFUGUHWJWQDBUIZEUJZPZXBWTWJFXIXBWJFHZWOKZXGMZEUKZXJXB
      KZXJXIKWJXMXKWNWOCULZDBUIZMZEUKZXNWJXLXQEWJXKXGXPWJXKMZWQXODBXSWPWOLZXOWQ
      XSXTXOXSXTXOWJXKXTXTXOUMZWJWNCUNKZYAXKXTMWJYBMXTXOWNWOCEUOZUPUQWOURLZUSZX
      TYBXKXTYEYBXTYBYDXTWPURLYDYBUSWPWOURUTWNCVAVBVCVDWOXJVEVFVGVHVIWJXOXTUMXK
      WNWOCYCVJVKVLWOWPVMVNVOVPVQXNXKWOXAKZMZEUKXREXJXAVRYGXQEYFXPXKDWOCBYCVSVT
      WAWBWCXGEXJWDVNWEWSXHDEBWPWFWGWHWI $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( Membership in the union of an image of a function. $)
    eluniima $p |- ( Fun F ->
                   ( B e. U. ( F " A ) <-> E. x e. A B e. ( F ` x ) ) ) $=
      ( wfun cv cfv ciun wcel cima cuni wrex funiunfv eleq2d eliun syl5rbbr ) 
      DEZCABAFDGZHZICDBJKZICRIABLQSTCABDMNACBROP $.
      $( [28-Sep-2006] $)

    $( Membership in the union of the range of a function. $)
    elunirn $p |- ( Fun F ->
                     ( A e. U. ran F <-> E. x e. dom F A e. ( F ` x ) ) ) $=
      ( wfun cdm cima cuni wcel cv cfv wrex crn eluniima imadmrn unieqi eleq2i 
      syl5bbr ) CDBCCEZFZGZHBAICJHARKBCLZGZHARBCMTUBBSUACNOPQ $.
      $( [24-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( Membership in the union of the range of a function, proved directly.
       Unlike ~ elunirn , it doesn't appeal to ~ ndmfv (via ~ funiunfv ). $)
    elunirnALT $p |- ( Fun F -> ( A e. U. ran F <->
                E. x e. dom F A e. ( F ` x ) ) ) $=
      ( vy wfun cv wcel crn wa wex cfv cdm wrex cuni wceq wfn wb funfn fvelrnb 
      sylbi anbi2d r19.42v syl6bbr eleq2 biimparc reximi syl6bi 19.23adv 
      fvelrn a1d ancld fvex eleq1 anbi12d cla4ev syl6 r19.23adva impbid eluni 
      syl5bb ) CEZBDFZGZVBCHZGZIZDJZBAFZCKZGZACLZMZBVDNGVAVGVLVAVFVLDVAVFVCVIVB
      OZIZAVKMZVLVAVFVCVMAVKMZIVOVAVEVPVCVACVKPVEVPQCRAVKVBCSTUAVCVMAVKUBUCVNVJ
      AVKVMVJVCVIVBBUDUEUFUGUHVAVJVGAVKVAVHVKGIZVJVJVIVDGZIZVGVQVJVRVQVRVJVHCUI
      UJUKVFVSDVIVHCULVBVIOVCVJVEVRVBVIBUDVBVIVDUMUNUOUPUQURDBVDUSUT $.
      $( [24-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d y z F $.
    funiunfvf.1 $e |- ( y e. F -> A. x y e. F ) $.
    $( The indexed union of a function's values is the union of its image under
       the index class.  This version of ~ funiunfv uses a bound-variable
       hypothesis in place of a distinct variable condition. $)
    funiunfvf $p |- ( Fun F -> U_ x e. A ( F ` x ) = U. ( F " A ) ) $=
      ( vz wfun cv cfv ciun cima cuni funiunfv wcel ax-17 hbfv fveq2 cbviun 
      syl5eqr ) DGFCFHZDIZJDCKLACAHZDIZJFCDMFABCUAUCABTDEBHZTNAOPUDUCNFOTUBDQRS
      $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x y z A $.  $d z ph $.
    abrexex2.1 $e |- A e. _V $.
    abrexex2.2 $e |- { y | ph } e. _V $.
    $( Existence of an existentially restricted class abstraction. ` ph ` is
       normally has free-variable parameters ` x ` and ` y ` .  See also
       ~ abrexex . $)
    abrexex2 $p |- { y | E. x e. A ph } e. _V $=
      ( vz wrex cab cv wcel cvv wsbc ax-17 hbs1 hbrex wceq sbequ12 rexbidv 
      cbvab df-clab rexbii abbii eqtr4i ciun df-iun iunex eqeltrri eqeltri ) AB
      DHZCIZGJZACIZKZBDHZGIZLUKACULMZBDHZGIUPUJURCGUJGNUQCBDBJDKCNACGOPCJULQAUQ
      BDACGRSTUOURGUNUQBDAGCUAUBUCUDBDUMUEUPLBGDUMUFBDUMEFUGUHUI $.
      $( [12-Sep-2004] $)

    $( Existence of a class abstraction with an existentially quantified
       expression.  Both ` x ` and ` y ` can be free in ` ph ` . $)
    abexssex $p |- { y | E. x ( x C_ A /\ ph ) } e. _V $=
      ( cpw wrex cab cv wss wa wex cvv wcel df-rex visset elpw anbi1i exbii 
      bitri abbii pwex abrexex2 eqeltrri ) ABDGZHZCIBJZDKZALZBMZCINUGUKCUGUHUFO
      ZALZBMUKABUFPUMUJBULUIAUHDBQRSTUAUBABCUFDEUCFUDUE $.
      $( [29-Jul-2006] $)
  $}

  ${
    $d x y A $.
    abexex.1 $e |- A e. _V $.
    abexex.2 $e |- ( ph -> x e. A ) $.
    abexex.3 $e |- { y | ph } e. _V $.
    $( A condition where a class builder continues to exist after its wff is
       existentially quantified. $)
    abexex $p |- { y | E. x ph } e. _V $=
      ( wrex cab wex cvv cv wcel wa df-rex pm4.71ri exbii bitr4i abbii 
      abrexex2 eqeltrri ) ABDHZCIABJZCIKUBUCCUBBLDMZANZBJUCABDOAUEBAUDFPQRSABCD
      EGTUA $.
      $( [4-Mar-2007] $)
  $}

  ${
    $d x y z A $.  $d z B $.  $d x y z F $.
    $( A one-to-one function in terms of function values.  Compare Theorem
       4.8(iv) of [Monk1] p. 43. $)
    dff13 $p |- ( F : A -1-1-> B <-> ( F : A --> B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( vz wf1 wf cv wbr wmo wal wa cfv wceq wi wral dff12 wfn wb ffn wcel cdm 
      fndm eleq2d visset breldm syl5bi anim12d pm4.71rd fnbrfvb eqcom syl5bb 
      bi2anan9 anandis pm5.32da bitr4d imbi1d impexp syl6bb albidv 19.21v wex 
      19.23v fvex eqvinc imbi1i bitr4i imbi2i bitri 2albidv breq1 mo4 albii 
      alcom 3bitri r2al 3bitr4g syl pm5.32i ) CDEGCDEHZAIZFIZEJZAKZFLZMWAWBENZB
      IZENZOZWBWHOZPZBCQACQZMAFCDERWAWFWMWAECSZWFWMTCDEUAWNWDWHWCEJZMZWKPZFLZBL
      ZALZWBCUBZWHCUBZMZWLPZBLALWFWMWNWRXDABWNWRXCWCWGOZWCWIOZMZWKPZPZFLZXDWNWQ
      XIFWNWQXCXGMZWKPXIWNWPXKWKWNWPXCWPMXKWNWPXCWNWDXAWOXBWNWBEUCZUBXAWDWNXLCW
      BCEUDZUEWBWCEAUFUGUHWNWHXLUBXBWOWNXLCWHXMUEWHWCEBUFUGUHUIUJWNXCXGWPWNXAXB
      XGWPTWNXAMZXEWDWNXBMZXFWOXNWGWCOWDXECWBWCEFUFZUKWCWGULUMXOWIWCOWOXFCWHWCE
      XPUKWCWIULUMUNUOUPUQURXCXGWKUSUTVAXJXCXHFLZPXDXCXHFVBXQWLXCXQXGFVCZWKPWLX
      GWKFVDWJXRWKFWGWIWBEVEVFVGVHVIVJUTVKWFWQBLZALZFLXSFLZALWTWEXTFWDWOABWBWHW
      CEVLVMVNXSFAVOYAWSAWQFBVOVNVPWLABCCVQVRVSVTVJ $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y w v A $.  $d w v B $.  $d z w v F $.  $d x y z $.
    f1fvf.1 $e |- ( z e. F -> A. x z e. F ) $.
    f1fvf.2 $e |- ( z e. F -> A. y z e. F ) $.
    $( A one-to-one function in terms of function values.  Compare Theorem
       4.8(iv) of [Monk1] p. 43. $)
    dff13f $p |- ( F : A -1-1-> B <-> ( F : A --> B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( vw vv wf1 wf cv cfv wceq wi wral wa dff13 wcel ax-17 hbfv hbeq hbim 
      fveq2 eqeq2d eqeq2 imbi12d cbvral ralbii hbral eqeq1d eqeq1 ralbidv 
      bitri anbi2i ) DEFKDEFLZIMZFNZJMZFNZOZURUTOZPZJDQZIDQZRUQAMZFNZBMZFNZOZVG
      VIOZPZBDQZADQZRIJDEFSVFVOUQVFUSVJOZURVIOZPZBDQZIDQVOVEVSIDVDVRJBDVBVCBBCC
      USVABCURFHCMZURTZBUAUBBCUTFHVTUTTBUAUBUCVCBUAUDVPVQJVPJUAVQJUAUDUTVIOZVBV
      PVCVQWBVAVJUSUTVIFUEUFUTVIURUGUHUIUJVSVNIADVRABDVIDTAUAVPVQAACCUSVJACURFG
      WAAUAUBACVIFGVTVITAUAUBUCVQAUAUDUKVNIUAURVGOZVRVMBDWCVPVKVQVLWCUSVHVJURVG
      FUEULURVGVIUMUHUNUIUOUPUO $.
      $( [31-Jul-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y F $.
    $( Equality of function values for a one-to-one function. $)
    f1fveq $p |- ( ( F : A -1-1-> B /\ ( C e. A /\ D e. A ) ) ->
                 ( ( F ` C ) = ( F ` D ) <-> C = D ) ) $=
      ( vx vy wf1 wcel wa cfv wceq wi cv fveq2 eqeq1d eqeq1 imbi12d imbi2d 
      eqeq2d eqeq2 wral wf dff13 simprbi ra42 syl com12 vtocl2ga impcom 
      impbid1 ) ABEHZCAIDAIJZJCEKZDEKZLZCDLZUMULUPUQMZULFNZEKZGNZEKZLZUSVALZMZM
      ULUNVBLZCVALZMZMULURMFGCDAAUSCLZVEVHULVIVCVFVDVGVIUTUNVBUSCEOPUSCVAQRSVAD
      LZVHURULVJVFUPVGUQVJVBUOUNVADEOTVADCUARSULUSAIVAAIJZVEULVEGAUBFAUBZVKVEMU
      LABEUCVLFGABEUDUEVEFGAAUFUGUHUIUJCDEOUK $.
      $( [11-Feb-1997] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( A one-to-one onto function in terms of function values. $)
    dff1o6 $p |- ( F : A -1-1-onto-> B <-> ( F Fn A /\ ran F = B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( wf1o wf1 wfo wa wf cv cfv wceq wi wral wfn crn w3a df-f1o dff13 df-fo 
      anbi12i df-3an wss eqimss anim2i df-f sylibr pm4.71ri anbi1i an32 
      3bitrri 3bitri ) CDEFCDEGZCDEHZICDEJZAKZELBKZELMUQURMNBCOACOZIZECPZEQZDMZ
      IZIZVAVCUSRZCDESUNUTUOVDABCDETCDEUAUBVFVDUSIUPVDIZUSIVEVAVCUSUCVDVGUSVDUP
      VDVAVBDUDZIUPVCVHVAVBDUEUFCDEUGUHUIUJUPVDUSUKULUM $.
      $( [29-Mar-2008] $)
  $}

  $( The converse value of the value of a one-to-one onto function. $)
  f1ocnvfv1 $p |- ( ( F : A -1-1-onto-> B /\ C e. A ) ->
                 ( `' F ` ( F ` C ) ) = C ) $=
    ( wf1o wcel wa ccnv ccom cfv cid cres wceq f1ococnv1 fveq1d adantr wfun wf 
    fvco3 3expa f1ocnv f1ofun syl f1of jca sylan fvresi adantl 3eqtr3d ) ABDEZC
    AFZGCDHZDIZJZCKALZJZCDJULJZCUJUNUPMUKUJCUMUOABDNOPULQZABDRZGUKUNUQMZUJURUSU
    KUTABCULDSTUJURUSUJBAULEURABDUABAULUBUCABDUDUEUFUKUPCMUJACUGUHUI $.
    $( [20-May-2004] $)

  $( The value of the converse value of a one-to-one onto function. $)
  f1ocnvfv2 $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                 ( F ` ( `' F ` C ) ) = C ) $=
    ( wf1o wcel wa ccnv ccom cfv cid cres wceq f1ococnv2 fveq1d adantr wfun wf 
    fvco3 3expa f1ofun f1ocnv f1of syl jca sylan fvresi adantl 3eqtr3d ) ABDEZC
    BFZGCDDHZIZJZCKBLZJZCULJDJZCUJUNUPMUKUJCUMUOABDNOPDQZBAULRZGUKUNUQMZUJURUSU
    KUTBACDULSTUJURUSABDUAUJBAULEUSABDUBBAULUCUDUEUFUKUPCMUJBCUGUHUI $.
    $( [20-May-2004] $)

  $( Relationship between the value of a one-to-one onto function and the value
     of its converse.  (Contributed by Raph Levien, 10-Apr-2004.) $)
  f1ocnvfv $p |- ( ( F : A -1-1-onto-> B /\ C e. A ) ->
                  ( ( F ` C ) = D -> ( `' F ` D ) = C ) ) $=
    ( wf1o wcel wa ccnv cfv wceq f1ocnvfv1 eqeq2d fveq2 eqcoms syl5bi ) ABEFCAG
    HZDEIZJZCEJZRJZKZSCKTDKQUACSABCELMUBDTDTRNOP $.
    $( [10-Apr-2004] $)

  $( Relationship between the value of a one-to-one onto function and the value
     of its converse. $)
  f1ocnvfvb $p |- ( ( F : A -1-1-onto-> B /\ C e. A /\ D e. B ) ->
                  ( ( F ` C ) = D <-> ( `' F ` D ) = C ) ) $=
    ( wf1o wcel w3a cfv wceq ccnv wi f1ocnvfv 3adant3 wa f1ocnvfv2 eqeq2d 
    fveq2 eqcoms syl5bi 3adant2 impbid ) ABEFZCAGZDBGZHCEIZDJZDEKIZCJZUCUDUGUIL
    UEABCDEMNUCUEUIUGLUDUCUEOZUFUHEIZJZUGUIUJUKDUFABDEPQULCUHCUHERSTUAUB $.
    $( [9-Aug-2006] $) $( [20-May-2004] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( There is one domain element for each value of a one-to-one onto
       function. $)
    f1ofveu $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                  E! x e. A ( F ` x ) = C ) $=
      ( wf1o wcel wa cv cfv wceq wreu cop ccnv wf feu f1ocnv f1of syl sylan wb 
      w3a f1ocnvfvb 3com23 wfn visset fnopfvb 3adant3 dff1o4 simprbi syl3an1 
      bitrd 3expa reubidva mpbird ) BCEFZDCGZHZAIZEJDKZABLDUSMENZGZABLZCBVAOZUQ
      VCUPACBDVAPUPCBVAFVDBCEQCBVARSTURUTVBABUPUQUSBGZUTVBUAUPUQVEUBUTDVAJUSKZV
      BUPVEUQUTVFUABCUSDEUCUDVACUEZUQVEVFVBUAZUPVGUQVHVECDUSVAAUFUGUHUPEBUEVGBC
      EUIUJUKULUMUNUO $.
      $( [26-May-2006] $)

    $( Value of the converse of a one-to-one onto function. $)
    f1ocnvfv3 $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                  ( `' F ` C ) = U. { x e. A | ( F ` x ) = C } ) $=
      ( wf1o wcel wa ccnv cfv wceq cv crab cuni f1ocnvfv2 wreu wb wf ffvelrn 
      f1ocnv f1of syl sylan f1ofveu fveq2 eqeq1d reuuni2 eqcom syl6bb syl11anc 
      mpbid ) BCEFZDCGZHZDEIZJZEJZDKZUPALZEJZDKZABMNZKZBCDEOUNUPBGZVAABPZURVCQC
      BUORZUMVDULCBDUOSULCBUOFVFBCETCBUOUAUBUCABCDEUDVDVEHURVBUPKVCVAURABUPUSUP
      KUTUQDUSUPEUEUFUGVBUPUHUIUJUK $.
      $( [26-May-2006] $)
  $}

  $( The value of the converse of a one-to-one onto function belongs to its
     domain. $)
  f1ocnvdm $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                    ( `' F ` C ) e. A ) $=
    ( ccnv wf wcel cfv wf1o ffvelrn f1ocnv f1of syl sylan ) BADEZFZCBGCOHAGABDI
    ZBACOJQBAOIPABDKBAOLMN $.
    $( [26-May-2006] $)

  ${
    $d x A $.  $d y B $.  $d x y F $.  $d y ph $.  $d x ps $.
    cbvfo.1 $e |- ( ( F ` x ) = y -> ( ph <-> ps ) ) $.
    $( Change bound variable between domain and range of function. $)
    cbvfo $p |- ( F : A -onto-> B -> ( A. x e. A ph <-> A. y e. B ps ) ) $=
      ( wfo cdm wral crn wfun wb fofun cv wcel wi wal cfv wceq wa wex wbr 
      visset breldm a1i funbrfv jcad eximdv elrn syl5ib hba1 ax-17 biimpcd 
      imim2i imp3a a4s 19.23ad syl9 19.21adv brelrn eldm biimprcd impbid 
      df-ral 3bitr4g syl wf fof fdm raleq 3syl forn raleqdv 3bitr3d ) EFGIZACGJ
      ZKZBDGLZKZACEKZBDFKVQGMZVSWANEFGOWCCPZVRQZARZCSZDPZVTQZBRZDSZVSWAWCWGWKWC
      WGWJDWCWIWEWDGTWHUAZUBZCUCZWGBWCWDWHGUDZCUCWNWIWCWOWMCWCWOWEWLWOWERWCWDWH
      GCUEZUFUGWDWHGDUEZUHZUIUJCWHGWQUKULWGWMBCWFCUMBCUNWFWMBRCWFWEWLBAWLBRWEWL
      ABHUOUPUQURUSUTVAWCWKWFCWCWEWIWLUBZDUCZWKAWCWODUCWTWEWCWOWSDWCWOWIWLWOWIR
      WCWDWHGWPWQVBUGWRUIUJDWDGWPVCULWKWSADWJDUMADUNWJWSARDWJWIWLABWLARWIWLABHV
      DUPUQURUSUTVAVEACVRVFBDVTVFVGVHVQEFGVIVREUAVSWBNEFGVJEFGVKACVREVLVMVQBDVT
      FEFGVNVOVP $.
      $( [23-Feb-1997] $)

    $( Change bound variable between domain and range of function. $)
    cbvexfo $p |- ( F : A -onto-> B -> ( E. x e. A ph <-> E. y e. B ps ) ) $=
      ( wfo wn wral wrex cv cfv wceq notbid cbvfo dfrex2 3bitr4g ) EFGIZAJZCEKZ
      JBJZDFKZJACELBDFLTUBUDUAUCCDEFGCMGNDMOABHPQPACERBDFRS $.
      $( [23-Feb-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y H $.  $d x y G $.
    $d x y R $.  $d x y S $.  $d x y T $.
    $( Equality theorem for isomorphisms. $)
    isoeq1 $p |- ( H = G ->
          ( H Isom R , S ( A , B ) <-> G Isom R , S ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq1 fveq1 breq12d bibi2d 
      2ralbidv anbi12d df-iso 3bitr4g ) FEIZABFJZGKZHKZCLZUHFMZUIFMZDLZNZHAOGAO
      ZPABEJZUJUHEMZUIEMZDLZNZHAOGAOZPABCDFQABCDEQUFUGUPUOVAABFERUFUNUTGHAAUFUM
      USUJUFUKUQULURDUHFESUIFESTUAUBUCGHABCDFUDGHABCDEUDUE $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq2 $p |- ( R = T ->
          ( H Isom R , S ( A , B ) <-> H Isom T , S ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso breq bibi1d 2ralbidv anbi2d 
      df-iso 3bitr4g ) CEIZABFJZGKZHKZCLZUFFMUGFMDLZNZHAOGAOZPUEUFUGELZUINZHAOG
      AOZPABCDFQABEDFQUDUKUNUEUDUJUMGHAAUDUHULUIUFUGCERSTUAGHABCDFUBGHABEDFUBUC
      $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq3 $p |- ( S = T ->
          ( H Isom R , S ( A , B ) <-> H Isom R , T ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso breq bibi2d 2ralbidv anbi2d 
      df-iso 3bitr4g ) DEIZABFJZGKZHKZCLZUFFMZUGFMZDLZNZHAOGAOZPUEUHUIUJELZNZHA
      OGAOZPABCDFQABCEFQUDUMUPUEUDULUOGHAAUDUKUNUHUIUJDERSTUAGHABCDFUBGHABCEFUB
      UC $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq4 $p |- ( A = C ->
          ( H Isom R , S ( A , B ) <-> H Isom R , S ( C , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq2 raleq raleqbi1dv 
      anbi12d df-iso 3bitr4g ) ACIZABFJZGKZHKZDLUFFMUGFMELNZHAOZGAOZPCBFJZUHHCO
      ZGCOZPABDEFQCBDEFQUDUEUKUJUMACBFRUIULGACUHHACSTUAGHABDEFUBGHCBDEFUBUC $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq5 $p |- ( B = C ->
          ( H Isom R , S ( A , B ) <-> H Isom R , S ( A , C ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq3 anbi1d df-iso 
      3bitr4g ) BCIZABFJZGKZHKZDLUDFMUEFMELNHAOGAOZPACFJZUFPABDEFQACDEFQUBUCUGU
      FBCAFRSGHABDEFTGHACDEFTUA $.
      $( [17-May-2004] $)
  $}


  ${
    $d y z w H $.  $d y z w R $.  $d y z w S $.  $d y z w A $.  $d y z w B $.
    $d x y z w $.
    hbiso.1 $e |- ( y e. H -> A. x y e. H ) $.
    hbiso.2 $e |- ( y e. R -> A. x y e. R ) $.
    hbiso.3 $e |- ( y e. S -> A. x y e. S ) $.
    hbiso.4 $e |- ( y e. A -> A. x y e. A ) $.
    hbiso.5 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for an isomorphism.  (The proof was
       shortened by Andrew Salmon, 22-Oct-2011.) $)
    hbiso $p |- ( H Isom R , S ( A , B ) -> A. x H Isom R , S ( A , B ) ) $=
      ( vz vw wf1o cv wbr cfv wb wral wa wal wiso hbf1o hblem wcel ax-17 hbbr 
      hbfv hbbi hbral hban df-iso albii 3imtr4i ) CDGOZMPZNPZEQZUQGRZURGRZFQZSZ
      NCTZMCTZUAZVFAUBCDEFGUCZVGAUBUPVEAABCDGHKLUDVDAMCABMCKUEVCANCABNCKUEUSVBA
      ABUQUREBPZUQUFAUGZIVHURUFAUGZUHABUTVAFABUQGHVIUIJABURGHVJUIUHUJUKUKULMNCD
      EFGUMZVGVFAVKUNUO $.
      $( [22-Oct-2011] $) $( [17-May-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $( An isomorphism is a one-to-one onto function. $)
    isof1o $p |- ( H Isom R , S ( A , B ) -> H : A -1-1-onto-> B ) $=
      ( vx vy wiso wf1o cv wbr cfv wb wral df-iso simplbi ) ABCDEHABEIFJZGJZCKQ
      ELRELDKMGANFANFGABCDEOP $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y C $.  $d x y D $.
    $( An isomorphism connects binary relations via its function values. $)
    isorel $p |- ( ( H Isom R , S ( A , B ) /\ ( C e. A /\ D e. A ) ) ->
                 ( C R D <-> ( H ` C ) S ( H ` D ) ) ) $=
      ( vx vy wiso wcel wa wbr cfv wb cv wral wceq breq1 fveq2 breq1d bibi12d 
      breq2 breq2d rcla42v wf1o df-iso simprbi syl5com imp ) ABEFGJZCAKDAKLZCDE
      MZCGNZDGNZFMZOZULHPZIPZEMZURGNZUSGNZFMZOZIAQHAQZUQUKVDUQCUSEMZUNVBFMZOHIC
      DAAURCRZUTVFVCVGURCUSESVHVAUNVBFURCGTUAUBUSDRZVFUMVGUPUSDCEUCVIVBUOUNFUSD
      GTUDUBUEUKABGUFVEHIABEFGUGUHUIUJ $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Identity law for isomorphism.  Proposition 6.30(1) of [TakeutiZaring]
       p. 33. $)
    isoid $p |- ( _I |` A ) Isom R , R ( A , A ) $=
      ( vx vy cid cres wiso wf1o cv wbr cfv wb wral df-iso f1oi wcel wa fvresi 
      breqan12d bicomd rgen2a mpbir2an ) AABBEAFZGAAUCHCIZDIZBJZUDUCKZUEUCKZBJZ
      LZDAMCAMCDAABBUCNAOUJCDAUDAPZUEAPZQUIUFUKULUGUDUHUEBAUDRAUERSTUAUB $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w R $.  $d x y z w S $.
    $d x y z w H $.
    $( Converse law for isomorphism.  Proposition 6.30(2) of [TakeutiZaring]
       p. 33. $)
    isocnv $p |- ( H Isom R , S ( A , B ) -> `' H Isom S , R ( B , A ) ) $=
      ( vx vy vz vw wf1o cv wbr cfv wb wral wa ccnv wiso f1ocnv adantr wcel 
      wceq f1ocnvfv2 adantrr adantrl breq12d adantlr wf breq1 fveq2 breq1d 
      bibi12d bicom syl6bb breq2d breq2 rcla42v imp ffvelrn anim12i anandis 
      sylan an32s f1of syl sylanl1 bitr3d exp32 r19.21adv r19.21aiv jca df-iso 
      3imtr4i ) ABEJZFKZGKZCLZVOEMZVPEMZDLZNZGAOFAOZPZBAEQZJZHKZIKZDLZWFWDMZWGW
      DMZCLZNZIBOZHBOZPABCDERBADCWDRWCWEWNVNWEWBABESZTWCWMHBWCWFBUAZWLIBWCWPWGB
      UAZWLWCWPWQPZPWIEMZWJEMZDLZWHWKVNWRXAWHNWBVNWRPWSWFWTWGDVNWPWSWFUBWQABWFE
      UCUDVNWQWTWGUBWPABWGEUCUEUFUGBAWDUHZWBWRXAWKNZVNXBWRWBXCWIAUAZWJAUAZPZWBX
      CXBWRPXFWBXCWAXCWSVSDLZWIVPCLZNZFGWIWJAAVOWIUBZWAXHXGNXIXJVQXHVTXGVOWIVPC
      UIXJVRWSVSDVOWIEUJUKULXHXGUMUNVPWJUBZXGXAXHWKXKVSWTWSDVPWJEUJUOVPWJWICUPU
      LUQURXBWPWQXFXBWPPXDXBWQPXEBAWFWDUSBAWGWDUSUTVAVBVCVNWEXBWOBAWDVDVEVFVGVH
      VIVJVKFGABCDEVLHIBADCWDVLVM $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u R $.  $d x y z w v u S $.  $d x y z w v u T $.
    $d x y z w v u G $.  $d x y z w v u H $.
    $( Composition (transitive) law for isomorphism.  Proposition 6.30(3) of
       [TakeutiZaring] p. 33. $)
    isotr $p |- ( ( H Isom R , S ( A , B ) /\ G Isom S , T ( B , C ) ) ->
               ( G o. H ) Isom R , T ( A , C ) ) $=
      ( vz vw vv vu vx vy wf1o cv wbr cfv wb wral wa ccom wiso simpl anim12i 
      ancoms f1oco syl wcel wi wf f1of ffvelrn ex anim12d adantr wceq breq1 
      fveq2 breq1d bibi12d breq2 breq2d rcla42v com12 adantl sylan9 imp impcom 
      adantll adantlr wfun fvco3 3expa breqan12d anandis f1ofun sylan 3bitr4d 
      exp32 r19.21adv r19.21aiv jca df-iso anbi12i 3imtr4i ) ABHOZIPZJPZDQZWHHR
      ZWIHRZEQZSZJATIATZUAZBCGOZKPZLPZEQZWRGRZWSGRZFQZSZLBTKBTZUAZUAZACGHUBZOZM
      PZNPZDQZXJXHRZXKXHRZFQZSZNATZMATZUAABDEHUCZBCEFGUCZUAACDFXHUCXGXIXRXGWQWG
      UAZXIXFWPYAXFWQWPWGWQXEUDWGWOUDUEUFZABCGHUGUHXGXQMAXGXJAUIZXPNAXGYCXKAUIZ
      XPXGYCYDUAZUAXJHRZXKHRZEQZYFGRZYGGRZFQZXLXOXGYEYHYKSZWPYEYFBUIZYGBUIZUAZX
      FYLWGYEYOUJZWOWGABHUKZYPABHULZYQYCYMYDYNYQYCYMABXJHUMUNYQYDYNABXKHUMUNUOU
      HUPXEYOYLUJWQYOXEYLXDYLYFWSEQZYIXBFQZSKLYFYGBBWRYFUQZWTYSXCYTWRYFWSEURUUA
      XAYIXBFWRYFGUSUTVAWSYGUQZYSYHYTYKWSYGYFEVBUUBXBYJYIFWSYGGUSVCVAVDVEVFVGVH
      WPYEXLYHSZXFWOYEUUCWGYEWOUUCWNUUCXJWIDQZYFWLEQZSIJXJXKAAWHXJUQZWJUUDWMUUE
      WHXJWIDURUUFWKYFWLEWHXJHUSUTVAWIXKUQZUUDXLUUEYHWIXKXJDVBUUGWLYGYFEWIXKHUS
      VCVAVDVIVJVKYAYEXOYKSZXGGVLZYQUAZYEUUHYAUUJYCYDUUHUUJYCUAUUJYDUAXMYIXNYJF
      UUIYQYCXMYIUQABXJGHVMVNUUIYQYDXNYJUQABXKGHVMVNVOVPWQUUIWGYQBCGVQYRUEVRYBV
      RVSVTWAWBWCXSWPXTXFIJABDEHWDKLBCEFGWDWEMNACDFXHWDWF $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w R $.
    $d x y z w S $.  $d x y z w T $.  $d x y z w G $.  $d x y z w H $.
    $( Composition (transitive) law for isomorphism.  Proposition 6.30(3) of
       [TakeutiZaring] p. 33.  This proof is shorter than ~ isotr in set.mm and
       uses fewer dummy variables, but it takes 240K vs. 207K for the web
       page. $)
    isotrALT $p |- ( ( H Isom R , S ( A , B ) /\ G Isom S , T ( B , C ) ) ->
               ( G o. H ) Isom R , T ( A , C ) ) $=
      ( vx vy vz vw wf1o cv wbr cfv wb wral wa ccom wiso simpl anim12i ancoms 
      f1oco syl ax-17 hbra1 hban wcel hbral wi wf f1of ffvelrn ex anim12d 
      adantr wceq breq1 fveq2 breq1d bibi12d breq2 breq2d rcla42v com12 adantl 
      sylan9 imp ra42 adantll adantlr wfun fvco3 3expa breqan12d anandis 
      f1ofun sylan 3bitr4d exp32 r19.21ad r19.21ai jca df-iso anbi12i 3imtr4i 
      ) ABHMZINZJNZDOZWJHPZWKHPZEOZQZJARZIARZSZBCGMZKNZLNZEOZXAGPZXBGPZFOZQZLBR
      KBRZSZSZACGHTZMZWLWJXKPZWKXKPZFOZQZJARZIARZSABDEHUAZBCEFGUAZSACDFXKUAXJXL
      XRXJWTWISZXLXIWSYAXIWTWSWIWTXHUBWIWRUBUCUDZABCGHUEUFXJXQIAWSXIIWIWRIWIIUG
      WQIAUHUIXIIUGUIXJWJAUJZXPJAWSXIJWIWRJWIJUGWQJIAYCJUGZWPJAUHUKUIXIJUGUIYDX
      JYCWKAUJZXPXJYCYESZSWOWMGPZWNGPZFOZWLXOXJYFWOYIQZWSYFWMBUJZWNBUJZSZXIYJWI
      YFYMULZWRWIABHUMZYNABHUNZYOYCYKYEYLYOYCYKABWJHUOUPYOYEYLABWKHUOUPUQUFURXH
      YMYJULWTYMXHYJXGYJWMXBEOZYGXEFOZQKLWMWNBBXAWMUSZXCYQXFYRXAWMXBEUTYSXDYGXE
      FXAWMGVAVBVCXBWNUSZYQWOYRYIXBWNWMEVDYTXEYHYGFXBWNGVAVEVCVFVGVHVIVJWSYFWPX
      IWRYFWPWIWRYFWPWPIJAAVKVJVLVMYAYFXOYIQZXJGVNZYOSZYFUUAYAUUCYCYEUUAUUCYCSU
      UCYESXMYGXNYHFUUBYOYCXMYGUSABWJGHVOVPUUBYOYEXNYHUSABWKGHVOVPVQVRWTUUBWIYO
      BCGVSYPUCVTYBVTWAWBWCWDWEXSWSXTXIIJABDEHWFKLBCEFGWFWGIJACDFXKWFWH $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y C $.  $d x y D $.
    $( Isomorphisms preserve minimal elements.  Note that ` ( ``' R " { D } ) `
       is Takeuti and Zaring's idiom for the initial segment
       ` { x | x R D } ` .  Proposition 6.31(1) of [TakeutiZaring] p. 33. $)
    isomin $p |- ( ( H Isom R , S ( A , B ) /\ ( C C_ A /\ D e. A ) ) ->
               ( ( C i^i ( `' R " { D } ) ) = (/) <->
               ( ( H " C ) i^i ( `' S " { ( H ` D ) } ) ) = (/) ) ) $=
      ( vy vx wiso wss wcel wa ccnv csn cima cin c0 wceq cfv cv wex wn wrex 
      wbr wb ssel wf1o wfn wi isof1o f1ofn visset fnbrfvb ex 3syl syl9r imp31 
      rexbidva elima syl6rbbr cvv fvex eliniseg ax-mp a1i anbi12d elin r19.41v 
      3bitr4g adantrr ad2antll isorel bitrd breq1 biimpar syl5bir exp32 com34 
      imp32 reximdvai sylbid exbii neq0 df-rex 3bitr4i syl6ibr 19.23adv syl5ib 
      con4d com12 funfvima funfni com13 syld imp syl sylan adantrd biimpd 
      imp3a jcad 3imtr4g n0i syl6 impcon4bid ) ABEFGJZCAKZDALZMZMZCENDOPZQZRSZG
      CPZFNDGTZOPZQZRSZXKXSXNXKHUAZXRLZHUBXNUCZXSUCZXKYAYBHXKYAIUAZXLLZICUDZYBX
      KYAYDGTZXTSZXTXPFUEZMZICUDZYFXGXHYAYKUFXIXGXHMZXTXOLZXTXQLZMYHICUDZYIMYAY
      KYLYMYOYNYIYLYOYDXTGUEZICUDYMYLYHYPICXGXHYDCLZYHYPUFZXHYQYDALZXGYRCAYDUGZ
      XGABGUHZGAUIZYSYRUJABEFGUKZABGULZUUBYSYRAYDXTGHUMZUNUOUPUQURUSIXTGCUUEUTV
      AYNYIUFZYLXPVBLZUUFDGVCZFXPXTVBUUEVDVEVFVGXTXOXQVHYHYIICVIVJVKXKYJYEICXGX
      HXIYQYJYEUJZUJXGXHYQXIUUIXHYQYSXGXIUUIUJYTXGYSXIUUIXGYSXIMMZYEYGXPFUEZYJU
      UJYEYDDEUEZUUKXIYEUULUFXGYSEDYDAIUMVDVLZABYDDEFGVMZVNYHUUKYIYGXTXPFVOVPVQ
      VRUQVSVTWAWBYDXMLZIUBZYQYEMZIUBYBYFUUOUUQIYDCXLVHZWCIXMWDZYEICWEWFWGWHHXR
      WDWIWJXKUUPYCYBXKUUOYCIXKUUOYGXRLZYCXKUUQYGXOLZYGXQLZMUUOUUTXKUUQUVAUVBXK
      YQUVAYEUUBXJYQUVAUJZXGUUBXHUVCXIUUBXHUVCYQXHUUBUVAYQXHYSUUBUVAUJXHYQYSYTW
      KUUBYSYQUVAUUBYSUVCUVCAYDGCYDGWLWMUOWNWOWNWPVKXGUUAUUBUUCUUDWQWRWSXKYQYEU
      VBXGXHXIYQYEUVBUJZUJXGXHYQXIUVDXHYQYSXGXIUVDUJYTXGYSXIUVDUUJYEUULUVBUUMUU
      JUULUUKUVBUUJUULUUKUUNWTUUGUVBUUKUFUUHFXPYGVBYDGVCVDVEWGWBVRUQVSVTXAXBUUR
      YGXOXQVHXCXRYGXDXEWHUUSWIXF $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y D $.
    $( Isomorphisms preserve initial segments.  Proposition 6.31(2) of
       [TakeutiZaring] p. 33. $)
    isoini $p |- ( ( H Isom R , S ( A , B ) /\ D e. A ) ->
               ( H " ( A i^i ( `' R " { D } ) ) ) =
               ( B i^i ( `' S " { ( H ` D ) } ) ) ) $=
      ( vx vy wiso wcel wa ccnv cfv csn cima cin cv wbr wrex cab wceq wb crn 
      wf1o wfo isof1o f1ofo forn eleq2d 3syl wfn f1ofn fvelrnb bitr3d cvv fvex 
      visset eliniseg ax-mp a1i anbi12d adantr anbi2d elin syl5bb anbi1d anass 
      syl6bb adantl wi isorel fnbrfvb bicomd syl sylan adantrr ancom breq1 
      pm5.32i bitri exp32 com23 imp pm5.32d bitrd rexbidv2 r19.41v bitr4d 
      abbi2dv dfima2 syl6reqr ) ABDEFIZCAJZKZBELCFMZNOZPZGQZHQZFRZGADLCNOZPZSZH
      TFXBOWNXCHWQWNWSBJZWSWPJZKZXCWSWQJWNXFWRFMZWSUAZGASZWSWOERZKZXCWLXFXKUBWM
      WLXDXIXEXJWLWSFUCZJZXDXIWLABFUDZABFUEZXMXDUBABDEFUFZABFUGXOXLBWSABFUHUIUJ
      WLXNFAUKZXMXIUBXPABFULZGAWSFUMUJUNXEXJUBZWLWOUOJXSCFUPEWOWSUOHUQZURUSUTVA
      VBWNXCXHXJKZGASXKWNWTYAGXBAWNWRXBJZWTKZWRAJZWRCDRZWTKZKZYDYAKWMYCYGUBWLWM
      YCYDYEKZWTKYGWMYBYHWTWMYDWRXAJZKYHYBWMYIYEYDDCWRAGUQURVCWRAXAVDVEVFYDYEWT
      VGVHVIWNYDYFYAWLWMYDYFYAUBZVJWLYDWMYJWLYDWMYJWLYDWMKKZYFXGWOERZXHKZYAYKYE
      YLWTXHABWRCDEFVKWLYDWTXHUBZWMXQYDYNWLXQYDKXHWTAWRWSFXTVLVMWLXNXQXPXRVNVOV
      PVAYMXHYLKYAYLXHVQXHYLXJXGWSWOEVRVSVTVHWAWBWCWDWEWFXHXJGAWGVHWHWSBWPVDVEW
      IGHFXBWJWK $.
      $( [20-Apr-2004] $)
  $}

  ${
    $d x y w A $.  $d x y z w B $.  $d x y w R $.  $d x y z w S $.
    $d x y z w H $.
    $( Lemma for ~ isofr . $)
    isofrlem $p |- ( H Isom R , S ( A , B ) -> ( S Fr B -> R Fr A ) ) $=
      ( vx vy vw vz wiso wfr cv wss c0 wne wa ccnv csn cima cin wceq wrex wi 
      wal wf1o wfun isof1o f1ofun cvv wcel visset funimaex sseq1 neeq1 anbi12d 
      ineq1 eqeq1d rexeqbi1dv imbi12d cla4gv syl 3syl dffr3 syl5ib wfn f1ofn 
      wex ssel cfv funfvima funfni ne0i syl6 ex sylan9r pm2.43d 19.23adv n0 
      expimpd wfo f1ofo crn imassrn forn sseq2d mpbii jctild syl5d fvelima 
      adantr simpl syl2an wb isomin imdistani sylan2 sneq imaeq2d ineq2d 
      sylan9bb simpr syl5bir exp42 imp com3l com4t reximdvai mpd exp32 
      r19.23adv adantrd a2d syld 19.21adv syl6ibr ) ABCDEJZBDKZFLZAMZXRNOZPZXRC
      QGLZRSTNUAZGXRUBZUCZFUDACKXPXQYEFXPXQYAEXRSZDQZHLZRZSZTZNUAZHYFUBZUCYEXPX
      QYFBMZYFNOZPZYMYAXPILZBMZYQNOZPZYQYJTZNUAZHYQUBZUCZIUDZYPYMUCZXQXPABEUEZE
      UFZUUEUUFUCZABCDEUGZABEUHZUUHYFUIUJUUIEXRFUKULUUDUUFIYFUIYQYFUAZYTYPUUCYM
      UULYRYNYSYOYQYFBUMYQYFNUNUOUUBYLHYQYFUULUUAYKNYQYFYJUPUQURUSUTVAVBIHBDVCV
      DXPUUGYAYPUCUUJUUGYAYOYNUUGEAVEZYAYOUCABEVFUUMXSXTYOUUMXSPZYBXRUJZGVGYOXT
      UUNUUOYOGUUNUUOYOXSUUOYBAUJZUUMUUOYOUCZXRAYBVHZUUMUUPUUQUUMUUPPUUOYBEVIZY
      FUJZYOUUOUUTUCAYBEXRYBEVJVKYFUUSVLVMVNVOVPVQGXRVRVDVSVAUUGABEVTZYNABEWAUV
      AYFEWBZMYNEXRWCUVAUVBBYFABEWDWEWFVAWGVAWHXPYAYMYDXPXSYMYDUCZXTXPXSUVCXPXS
      PZYLYDHYFUVDYHYFUJZYLYDUVDUVEYLPZPZUUSYHUAZGXRUBZYDUUHUVEUVIUVDUVFGYHXREW
      IUVDUUGUUHXPUUGXSUUJWJUUKVAUVEYLWKWLUVGUVHYCGXRUVDUVFUUOUVHYCUCUCUUOUVHUV
      DUVFYCUVDUUOUVHUVFYCUCZXPXSUUOUVHUVJUCUCXPXSUUOUVHUVJXPXSUUOPZPZUVHPYCYLU
      VFUVLYCYFYGUUSRZSZTZNUAZUVHYLXPXSUUPPYCUVPWMUVKABXRYBCDEWNXSUUOUUPUURWOWP
      UVHUVOYKNUVHUVNYJYFUVHUVMYIYGUUSYHWQWRWSUQWTUVEYLXAXBXCXDXEXFXDXGXHXIXJVN
      XKXLXMXNFGACVCXO $.
      $( [29-Apr-2004] $)
  $}

  $( An isomorphism preserves foundedness.  Proposition 6.32(1) of
     [TakeutiZaring] p. 33. $)
  isofr $p |- ( H Isom R , S ( A , B ) -> ( R Fr A <-> S Fr B ) ) $=
    ( wiso wfr ccnv wi isocnv isofrlem syl impbid ) ABCDEFZACGZBDGZNBADCEHZFOPI
    ABCDEJBADCQKLABCDEKM $.
    $( [30-Apr-2004] $)

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y R $.  $d x y z w S $.
    $d x y z w H $.
    $( An isomorphism preserves well ordering.  Proposition 6.32(3) of
       [TakeutiZaring] p. 33. $)
    isowe $p |- ( H Isom R , S ( A , B ) -> ( R We A <-> S We B ) ) $=
      ( vx vy vz vw wiso wfr cv wbr wceq w3o wral wa wwe isofr cfv wcel isorel 
      wf1 wb f1fveq wf1o isof1o f1of1 syl sylan bicomd ancom2s 3orbi123d 
      2ralbidva wfo f1ofo breq2 eqeq2 breq1 cbvfo ralbidv eqeq1 bitrd 3syl 
      anbi12d dfwe2 3bitr4g ) ABCDEJZACKZFLZGLZCMZVJVKNZVKVJCMZOZGAPFAPZQBDKZHL
      ZILZDMZVRVSNZVSVRDMZOZIBPZHBPZQACRBDRVHVIVQVPWEABCDESVHVPVJETZVKETZDMZWFW
      GNZWGWFDMZOZGAPZFAPZWEVHVOWKFGAAVHVJAUAZVKAUAZQZQZVLWHVMWIVNWJABVJVKCDEUB
      WQWIVMABEUCZWPWIVMUDVHABVJVKEUEVHABEUFZWRABCDEUGZABEUHUIUJUKVHWOWNVNWJUDA
      BVKVJCDEUBULUMUNVHWSABEUOZWMWEUDWTABEUPXAWMWFVSDMZWFVSNZVSWFDMZOZIBPZFAPW
      EXAWLXFFAWKXEGIABEWGVSNWHXBWIXCWJXDWGVSWFDUQWGVSWFURWGVSWFDUSUMUTVAXFWDFH
      ABEWFVRNZXEWCIBXGXBVTXCWAXDWBWFVRVSDUSWFVRVSVBWFVRVSDUQUMVAUTVCVDVCVEFGAC
      VFHIBDVFVG $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x y z w v u A $.  $d x y v u B $.  $d x y z w v u H $.
    $d x y z w v u R $.  $d v u S $.
    $( Any one-to-one onto function determines an isomorphism with an induced
       relation ` S ` .  Proposition 6.33 of [TakeutiZaring] p. 34. $)
    f1oiso $p |- ( ( H : A -1-1-onto-> B /\ S = { <. z , w >. |
     E. x e. A E. y e. A ( ( z = ( H ` x ) /\ w = ( H ` y ) ) /\ x R y ) } ) ->
                  H Isom R , S ( A , B ) ) $=
      ( vv vu wiso wf1o cv wbr cfv wb wral wceq wa wrex copab df-iso simpl wf1 
      wcel cop eleq2 f1fveq eqcom syl6bb anassrs anbi1d anass syl5bb rexbidv 
      r19.42v rexbidva breq1 anbi2d ceqsrexv adantl bitrd breq2 sylan9bb 
      anandis fvex eqeq1 2rexbidv opelopab sylan9bbr an32s df-br syl5rbb exp32 
      r19.21adv r19.21aiv f1of1 sylan sylanbrc ) EFGHILEFIMZJNZKNZGOZWBIPZWCIPZ
      HOZQZKERZJERZWAHCNZANZIPZSZDNZBNZIPZSZTZWLWPGOZTZBEUAAEUAZCDUBZSZTJKEFGHI
      UCWAXDUDEFIUEZXDWJWAXEXDTZWIJEXFWBEUFZWHKEXFXGWCEUFZWHXFXGXHTZTWEWFUGZHUF
      ZWDWGXEXIXDXKWDQXDXKXJXCUFZXEXITZWDHXCXJUHXMWEWMSZWFWQSZTZWTTZBEUAZAEUAZW
      DXLXEXGXHXSWDQXEXGTZXSXOWBWPGOZTZBEUAZXEXHTZWDXTXSWLWBSZXOWTTZBEUAZTZAEUA
      ZYCXTXRYHAEXTWLEUFZTZXRYEYFTZBEUAYHYKXQYLBEYKXNYFTYLXQYKXNYEYFXEXGYJXNYEQ
      XEXGYJTTXNWBWLSYEEFWBWLIUIWBWLUJUKULUMXNXOWTUNUOUPYEYFBEUQUKURXGYIYCQXEYG
      YCAWBEYEYFYBBEYEWTYAXOWLWBWPGUSUTUPVAVBVCYDYCWPWCSZYATZBEUAZWDYDYBYNBEYDW
      PEUFZTXOYMYAXEXHYPXOYMQXEXHYPTTXOWCWPSYMEFWCWPIUIWCWPUJUKULUMURXHYOWDQXEY
      AWDBWCEWPWCWBGVDVAVBVCVEVFXBXNWRTZWTTZBEUAAEUAXSCDWEWFWBIVGWCIVGWKWESZXAY
      RABEEYSWSYQWTYSWNXNWRWKWEWMVHUMUMVIWOWFSZYRXQABEEYTYQXPWTYTWRXOXNWOWFWQVH
      UTUMVIVJUOVKVLWEWFHVMVNVOVPVQEFIVRVSVT $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d z w R $.  $d x y z w S $.  $d z w A $.  $d z w B $.  $d x y z w F $.
    f1owe.1 $e |- R = { <. x , y >. | ( F ` x ) S ( F ` y ) } $.
    $( Well-ordering of isomorphic relations. $)
    f1owe $p |- ( F : A -1-1-onto-> B -> ( S We B -> R We A ) ) $=
      ( vz vw wf1o wwe cv wbr cfv wb wral wceq fveq2 breq1d breq2d brabg 
      rgen2a wa wiso df-iso isowe sylbir mpan2 biimprd ) CDGKZCELZDFLZUKIMZJMZE
      NUNGOZUOGOZFNZPZJCQICQZULUMPZUSIJCAMZGOZBMZGOZFNUPVEFNURABUNUOCCEVBUNRVCU
      PVEFVBUNGSTVDUORVEUQUPFVDUOGSUAHUBUCUKUTUDCDEFGUEVAIJCDEFGUFCDEFGUGUHUIUJ
      $.
      $( [4-Mar-1997] $)
  $}

  ${
    $d z w v u f R $.  $d x y z w v u f S $.  $d z w v u f A $.
    $d z w v u f B $.  $d x y z w v u f F $.
    f1oweALT.1 $e |- R = { <. x , y >. | ( F ` x ) S ( F ` y ) } $.
    $( Well-ordering of isomorphic relations.  (This version is proved directly
       instead of wit the isomorphism predicate.) $)
    f1oweALT $p |- ( F : A -1-1-onto-> B -> ( S We B -> R We A ) ) $=
      ( vu vf vw vv vz wf1o wfr cv wbr wceq w3o wral wa wwe wfo wi f1ofo wfn 
      crn df-fo freq2 biimprd wfun cdm df-fn wss c0 wne wn wrex wal cima cvv 
      wcel visset funimaex sseq1 neeq1 anbi12d raleq rexeqbi1dv imbi12d cla4gv 
      wex cfv funfvima2 ne0i syl6 19.23adv n0 syl5ib imp imassrn jctil syl7 
      syl df-fr com23 exp3a anabsi5 imp3a cres wb fores breq1 notbid cbvfo 
      rexbidv breq2 ralbidv cbvexfo bitrd fvres breqan12rd fveq2 breq1d breq2d 
      brab syl6rbbr ralbidva rexbiia syl5bb sylibrd exp4b com34 imp4a 19.21adv 
      syl6ibr biimpd sylan9 sylbi sylan9r wf1 df-f1o a1i f1fveq bicomd 
      3orbi123d 2ralbidva eqeq1 eqeq2 sylan9bb anim12d dfwe2 3imtr4g ) CDGNZDFO
      ZIPZJPZFQZYPYQRZYQYPFQZSZJDTZIDTZUACEOZKPZLPZEQZUUEUUFRZUUFUUEEQZSZLCTKCT
      ZUADFUBCEUBYNYOUUDUUCUUKYNCDGUCZYOUUDUDZCDGUEUULGCUFZGUGZDRZUAUUMCDGUHUUP
      YOUUOFOZUUNUUDUUPUUQYOUUODFUIUJUUNGUKZGULZCRZUAUUQUUDUDGCUMUURUUQUUSEOZUU
      TUUDUURUUQMPZUUSUNZUVBUOUPZUAUUIUQZLUVBTZKUVBURZUDZMUSUVAUURUUQUVHMUURUUQ
      UVCUVDUVGUURUVCUUQUVDUVGUDUURUVCUVDUUQUVGUURUVCUVDUUQUVGUURUVCUAZUVDUUQUA
      YTUQZJGUVBUTZTZIUVKURZUVGUVIUVDUUQUVMUURUVCUVDUUQUVMUDZUDUURUVIUVDUVNUURU
      UQUVIUVDUAZUVMUURUUEUUOUNZUUEUOUPZUAZUVJJUUETZIUUEURZUDZKUSZUVOUVMUDZUUQU
      URUVKVAVBZUWBUWCUDGUVBMVCVDUWDUWBUVKUUOUNZUVKUOUPZUAZUVMUVOUWAUWGUVMUDKUV
      KVAUUEUVKRZUVRUWGUVTUVMUWHUVPUWEUVQUWFUUEUVKUUOVEUUEUVKUOVFVGUVSUVLIUUEUV
      KUVJJUUEUVKVHVIVJVKUVOUWFUWEUVIUVDUWFUVIUUEUVBVBZKVLUWFUVDUVIUWIUWFKUVIUW
      IUUEGVMZUVKVBUWFUVBUUEGVNUVKUWJVOVPVQKUVBVRVSVTGUVBWAWBWCWDKIJUUOFWEVSWFW
      GWHWIUVIUVBUVKGUVBWJZUCZUVGUVMWKUVBGWLUWLUUFUWKVMZUUEUWKVMZFQZUQZLUVBTZKU
      VBURZUVMUVGUWLUWRYQUWNFQZUQZJUVKTZKUVBURUVMUWLUWQUXAKUVBUWPUWTLJUVBUVKUWK
      UWMYQRUWOUWSUWMYQUWNFWMWNWOWPUXAUVLKIUVBUVKUWKUWNYPRZUWTUVJJUVKUXBUWSYTUW
      NYPYQFWQWNWRWSWTUVFUWQKUVBUWIUVEUWPLUVBUWIUUFUVBVBZUAZUUIUWOUXDUWOUUFGVMZ
      UWJFQZUUIUXCUWIUWMUXEUWNUWJFUUFUVBGXAUUEUVBGXAXBAPZGVMZBPZGVMZFQZUXEUXJFQ
      UXFABUUFUUEELVCZKVCZUXGUUFRUXHUXEUXJFUXGUUFGXCXDUXIUUERUXJUWJUXEFUXIUUEGX
      CXEHXFZXGWNXHXIXJWDXKXLXMWFXNXOMKLUUSEWEXPUUTUVAUUDUUSCEUIXQXRXSXTXSWDYNU
      UKUUCYNCDGYAZUULUAUUKUUCWKCDGYBUXOUUKUWJUXEFQZUWJUXERZUXFSZLCTZKCTZUULUUC
      UXOUUJUXRKLCCUXOUUECVBUUFCVBUAUAZUUGUXPUUHUXQUUIUXFUUGUXPWKUYAUXKUWJUXJFQ
      UXPABUUEUUFEUXMUXLUXGUUERUXHUWJUXJFUXGUUEGXCXDUXIUUFRUXJUXEUWJFUXIUUFGXCX
      EHXFYCUYAUXQUUHCDUUEUUFGYDYEUUIUXFWKUYAUXNYCYFYGUULUXTYPUXEFQZYPUXERZUXEY
      PFQZSZLCTZIDTUUCUXSUYFKICDGUWJYPRZUXRUYELCUYGUXPUYBUXQUYCUXFUYDUWJYPUXEFW
      MUWJYPUXEYHUWJYPUXEFWQYFWRWOUULUYFUUBIDUYEUUALJCDGUXEYQRUYBYRUYCYSUYDYTUX
      EYQYPFWQUXEYQYPYIUXEYQYPFWMYFWOWRWTYJXSUJYKIJDFYLKLCEYLYM $.
      $( [4-Mar-1997] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include the value of an operation ` F ` (such as
     ` + ` ) for two arguments ` A ` and ` B ` .  Note that the syntax is
     simply three class symbols in a row surrounded by parentheses.  Since
     operation values are the only possible class expressions consisting of
     three class expressions in a row surrounded by parentheses, the syntax is
     unambiguous.  (For an example of how syntax could become ambiguous if we
     are not careful, see the comment in ~ cneg .) $)
  co $a class ( A F B ) $.

  $( Extend class notation to include class abstraction (class builder) of
     nested ordered pairs. $)
  copab2 $a class { <. <. x , y >. , z >. | ph } $.

  $( Define the value of an operation.  Definition of operation value in
     [Enderton] p. 79.  Note that the syntax is simply three class expressions
     in a row bracketed by parentheses.  There are no restrictions of any kind
     on what those class expressions may be, although only certain kinds of
     class expressions - a binary operation ` F ` and its arguments ` A ` and
     ` B ` - will be useful for proving meaningful theorems.  For example, if
     class ` F ` is the operation ` + ` and arguments ` A ` and ` B ` are ` 3 `
     and ` 2 ` , the expression ` ( 3 + 2 ) ` can be proved to equal ` 5 ` (see
     ~ 3p2e5 ).  This definition is well-defined, although not very meaningful,
     when classes ` A ` and/or ` B ` are proper classes (i.e. are not sets);
     see ~ oprprc1 and ~ oprprc2 .  On the other hand, we often find uses for
     this definition when ` F ` is a proper class, such as ` +o ` in ~ oav .
     ` F ` is normally equal to a class of nested ordered pairs of the form
     defined by ~ df-oprab . $)
  df-opr $a |- ( A F B ) = ( F ` <. A , B >. ) $.

  ${
    $d x w $.  $d y w $.  $d z w $.  $d w ph $.
    $( Define the class abstraction (class builder) of a collection of nested
       ordered pairs (for use in defining operations).  This is a special case
       of Definition 4.16 of [TakeutiZaring] p. 14.  Normally ` x ` , ` y ` ,
       and ` z ` are distinct, although the definition doesn't strictly require
       it.  See ~ df-opr for the value of an operation.  The brace notation is
       called "class abstraction" by Quine; it is also called a "class builder"
       in the literature.  The value of the most common operation class builder
       is given by ~ oprabval2 . $)
    df-oprab $a |- { <. <. x , y >. , z >. | ph } =
                  { w | E. x E. y E. z ( w = <. <. x , y >. , z >. /\ ph ) } $.
  $}

  $( Equality theorem for operation value. $)
  opreq $p |- ( F = G -> ( A F B ) = ( A G B ) ) $=
    ( wceq cop cfv co fveq1 df-opr 3eqtr4g ) CDEABFZCGLDGABCHABDHLCDIABCJABDJK 
    $.
    $( [28-Feb-1995] $)

  $( Equality theorem for operation value. $)
  opreq1 $p |- ( A = B -> ( A F C ) = ( B F C ) ) $=
    ( wceq cop cfv co opeq1 fveq2d df-opr 3eqtr4g ) ABEZACFZDGBCFZDGACDHBCDHMNO
    DABCIJACDKBCDKL $.
    $( [28-Feb-1995] $)

  $( Equality theorem for operation value. $)
  opreq2 $p |- ( A = B -> ( C F A ) = ( C F B ) ) $=
    ( wceq cop cfv co opeq2 fveq2d df-opr 3eqtr4g ) ABEZCAFZDGCBFZDGCADHCBDHMNO
    DABCIJCADKCBDKL $.
    $( [28-Feb-1995] $)

  $( Equality theorem for operation value. $)
  opreq12 $p |- ( ( A = B /\ C = D ) -> ( A F C ) = ( B F D ) ) $=
    ( wceq co opreq1 opreq2 sylan9eq ) ABFCDFACEGBCEGBDEGABCEHCDBEIJ $.
    $( [16-Jul-1995] $)

  ${
    opreq1i.1 $e |- A = B $.
    $( Equality inference for operation value. $)
    opreq1i $p |- ( A F C ) = ( B F C ) $=
      ( wceq co opreq1 ax-mp ) ABFACDGBCDGFEABCDHI $.
      $( [28-Feb-1995] $)

    $( Equality inference for operation value. $)
    opreq2i $p |- ( C F A ) = ( C F B ) $=
      ( wceq co opreq2 ax-mp ) ABFCADGCBDGFEABCDHI $.
      $( [28-Feb-1995] $)

    ${
      opreq12i.2 $e |- C = D $.
      $( Equality inference for operation value.  (The proof was shortened by
         Andrew Salmon, 22-Oct-2011.) $)
      opreq12i $p |- ( A F C ) = ( B F D ) $=
        ( wceq co opreq12 mp2an ) ABHCDHACEIBDEIHFGABCDEJK $.
        $( [22-Oct-2011] $) $( [28-Feb-1995] $)
    $}

    $( Equality inference for operation value. $)
    opreqi $p |- ( C A D ) = ( C B D ) $=
      ( wceq co opreq ax-mp ) ABFCDAGCDBGFECDABHI $.
      $( [24-Nov-2007] $)
  $}

  ${
    opreq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for operation value. $)
    opreq1d $p |- ( ph -> ( A F C ) = ( B F C ) ) $=
      ( wceq co opreq1 syl ) ABCGBDEHCDEHGFBCDEIJ $.
      $( [13-Mar-1995] $)

    $( Equality deduction for operation value. $)
    opreq2d $p |- ( ph -> ( C F A ) = ( C F B ) ) $=
      ( wceq co opreq2 syl ) ABCGDBEHDCEHGFBCDEIJ $.
      $( [13-Mar-1995] $)

    $( Equality deduction for operation value. $)
    opreqd $p |- ( ph -> ( C A D ) = ( C B D ) ) $=
      ( wceq co opreq syl ) ABCGDEBHDECHGFDEBCIJ $.
      $( [9-Sep-2006] $)

    ${
      opreq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for operation value.  (The proof was shortened by
         Andrew Salmon, 22-Oct-2011.) $)
      opreq12d $p |- ( ph -> ( A F C ) = ( B F D ) ) $=
        ( wceq co opreq12 syl11anc ) ABCIDEIBDFJCEFJIGHBCDEFKL $.
        $( [22-Oct-2011] $) $( [13-Mar-1995] $)
    $}

    ${
      opreqan12i.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for operation value. $)
      opreqan12d $p |- ( ( ph /\ ps ) -> ( A F C ) = ( B F D ) ) $=
        ( wceq co opreq12 syl2an ) CDJEFJCEGKDFGKJABCDEFGLHIM $.
        $( [10-Aug-1995] $)

      $( Equality deduction for operation value. $)
      opreqan12rd $p |- ( ( ps /\ ph ) -> ( A F C ) = ( B F D ) ) $=
        ( co wceq opreqan12d ancoms ) ABCEGJDFGJKABCDEFGHILM $.
        $( [10-Aug-1995] $)
    $}
  $}

  ${
    opreq123d.1 $e |- ( ph -> F = G ) $.
    opreq123d.2 $e |- ( ph -> A = B ) $.
    opreq123d.3 $e |- ( ph -> C = D ) $.
    $( Equality deduction for operation value.  (Contributed by FL,
       22-Dec-2008.) $)
    opreq123d $p |- ( ph -> ( A F C ) = ( B G D ) ) $=
      ( co opreqd opreq1d opreq2d 3eqtrd ) ABDFKBDGKCDGKCEGKAFGBDHLABCDGIMADECG
      JNO $.
      $( [22-Dec-2008] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbopr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbopr.2 $e |- ( y e. F -> A. x y e. F ) $.
    hbopr.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for operation value. $)
    hbopr $p |- ( y e. ( A F B ) -> A. x y e. ( A F B ) ) $=
      ( co cop cfv df-opr hbop hbfv hbxfr ) ABCDEICDJZEKCDELABPEGABCDFHMNO $.
      $( [4-May-2004] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z F $.  $d x y z $.  $d y ph $.
    hboprd.1 $e |- ( ph -> A. x ph ) $.
    hboprd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hboprd.3 $e |- ( ph -> ( y e. F -> A. x y e. F ) ) $.
    hboprd.4 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbopr .  (The
       proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    hboprd $p |- ( ph -> ( y e. ( A F B ) -> A. x y e. ( A F B ) ) ) $=
      ( cv cop cfv wcel wal co hbopd hbfvd df-opr eleq2i albii 3imtr4g ) ACKZDE
      LZFMZNZUFBOUCDEFPZNZUHBOABCUDFGIABCDEGHJQRUGUEUCDEFSTZUHUFBUIUAUB $.
      $( [22-Oct-2011] $) $( [13-Dec-2005] $)
  $}

  $( The result of an operation is a set. $)
  oprex $p |- ( A F B ) e. _V $=
    ( co cop cfv cvv df-opr fvex eqeltri ) ABCDABEZCFGABCHKCIJ $.
    $( [13-Mar-1995] $)

  ${
    oprprc1.1 $e |- Rel dom F $.
    $( The value of an operation when the first argument is a proper class.
       Note: this theorem is dependent on our particular definitions of
       operation value, function value, and ordered pair. $)
    oprprc1 $p |- ( -. A e. _V -> ( A F B ) = (/) ) $=
      ( cvv wcel wn cop cfv c0 co cdm wceq wbr df-br brrelexi sylbir con3i 
      ndmfv syl df-opr syl5eq ) AEFZGZABHZCIZJABCKUDUECLZFZGUFJMUHUCUHABUGNUCAB
      UGOABUGDPQRUECSTABCUAUB $.
      $( [16-Jun-2004] $)
  $}

  $( The value of an operation when the second argument is a proper class.
     Note: this theorem is dependent on our particular definitions of operation
     value, function value, and ordered pair. $)
  oprprc2 $p |- ( -. B e. _V -> ( A F B ) = ( A F A ) ) $=
    ( cvv wcel wn cop cfv co opprc2 fveq2d df-opr 3eqtr4g ) BDEFZABGZCHAAGZCHAB
    CIAACINOPCABJKABCLAACLM $.
    $( [16-Jun-2004] $)

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z D $.  $d y z F $.
    $d x y z $.
    $( Move class substitution in and out of an operation.  (The proof was
       shortened by Andrew Salmon, 22-Oct-2011.) $)
    csboprg $p |- ( A e. D -> [_ A / x ]_ ( B F C ) =
           ( [_ A / x ]_ B [_ A / x ]_ F [_ A / x ]_ C ) ) $=
      ( vy vz wcel co csb cop cfv df-opr csbeq2i csbfv12g cv wceq csbeq1 
      opeq12d eqeq12d visset ax-17 hbcsb1 hbop csbeq1a csbief vtoclg fveq2d 
      syl6eqr 3eqtrd ) BEIZABCDFJZKABCDLZFMZKABUNKZABFKZMZABCKZABDKZUQJZABUMUOE
      CDFNOABUNEFPULURUSUTLZUQMVAULUPVBUQAGQZUNKZAVCCKZAVCDKZLZRUPVBRGBEVCBRZVD
      UPVGVBAVCBUNSVHVEUSVFUTAVCBCSAVCBDSTUAAHVCUNVGGUBZAHVEVFAHVCCVIHQVCIAUCZU
      DAHVCDVIVJUDUEAQVCRCVEDVFAVCCUFAVCDUFTUGUHUIUSUTUQNUJUK $.
      $( [22-Oct-2011] $) $( [12-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y C $.  $d y D $.  $d x y F $.
    $( Move class substitution in and out of an operation. $)
    csbopr12g $p |- ( A e. D ->
                 [_ A / x ]_ ( B F C ) = ( [_ A / x ]_ B F [_ A / x ]_ C ) ) $=
      ( vy wcel co csb csboprg cv ax-17 csbconstgf opreqd eqtrd ) BEHZABCDFIJAB
      CJZABDJZABFJZIRSFIABCDEFKQTFRSAGBFEGLFHAMNOP $.
      $( [12-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y C $.  $d y D $.  $d x y F $.
    $( Move class substitution in and out of an operation. $)
    csbopr1g $p |- ( A e. D ->
                  [_ A / x ]_ ( B F C ) = ( [_ A / x ]_ B F C ) ) $=
      ( vy wcel co csb csbopr12g cv ax-17 csbconstgf opreq2d eqtrd ) BEHZABCDFI
      JABCJZABDJZFIRDFIABCDEFKQSDRFAGBDEGLDHAMNOP $.
      $( [12-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y D $.  $d x y F $.
    $( Move class substitution in and out of an operation. $)
    csbopr2g $p |- ( A e. D ->
                  [_ A / x ]_ ( B F C ) = ( B F [_ A / x ]_ C ) ) $=
      ( vy wcel co csb csbopr12g cv ax-17 csbconstgf opreq1d eqtrd ) BEHZABCDFI
      JABCJZABDJZFICSFIABCDEFKQRCSFAGBCEGLCHAMNOP $.
      $( [12-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y C $.  $d y D $.  $d x y F $.  $d x y S $.
    $( A frequently used special case of ~ rcla42ev for operation values. $)
    rcla4eopr $p |- ( ( C e. A /\ D e. B /\ S = ( C F D ) ) ->
                 E. x e. A E. y e. B S = ( x F y ) ) $=
      ( cv co wceq opreq1 eqeq2d opreq2 rcla42ev ) GAIZBIZHJZKGEFHJZKGEQHJZKABE
      FCDPEKRTGPEQHLMQFKTSGQFEHNMO $.
      $( [21-Mar-2007] $)
  $}

  ${
    fnotoprb.1 $e |- R e. _V $.
    $( Equivalence of operation value and ordered triple membership, analogous
       to ~ fnopfvb . $)
    fnotoprb $p |- ( ( F Fn ( A X. B ) /\ C e. A /\ D e. B ) ->
                   ( ( C F D ) = R <-> <. <. C , D >. , R >. e. F ) ) $=
      ( cxp wfn wcel co wceq cop wb wa cfv fnopfvb df-opr eqeq1i syl5bb 
      opelxpi sylan2 3impb ) FABHZIZCAJZDBJZCDFKZELZCDMZEMFJZNZUEUJUDJZULUFUGOU
      EUMOUJFPZELUKUIUDUJEFGQUHUNECDFRSTCDABUAUBUC $.
      $( [17-Dec-2008] $)
  $}

  ${
    $d x z w v $.  $d y z w v $.  $d w ph v $.
    $( Class abstraction for operations in terms of class abstraction of
       ordered pairs. $)
    dfoprab2 $p |- { <. <. x , y >. , z >. | ph } =
                   { <. w , z >. | E. x E. y ( w = <. x , y >. /\ ph ) } $=
      ( vv cv cop wceq wa wex cab copab2 copab excom exrot4 19.42v opeq1 
      eqeq2d pm5.32ri anbi1i anass an32 3bitr3i exbii opex isseti biantru 
      3bitr4i 3exbii bitri 19.42vv 2exbii abbii df-oprab df-opab 3eqtr4i ) FGZB
      GZCGZHZDGZHZIZAJZDKCKBKZFLUREGZVBHZIZVGVAIZAJZCKBKZJZDKEKZFLABCDMVLEDNVFV
      NFVIVKJZCKBKZEKDKZVPDKEKVFVNVPDEOVQVOEKZDKCKBKVFVODEBCPVRVEBCDVEVJJZEKVEV
      JEKZJVRVEVEVJEQVOVSEVIVJJZAJVDVJJZAJVOVSWAWBAVJVIVDVJVHVCURVGVAVBRSTUAVIV
      JAUBVDVJAUCUDUEVTVEEVAUSUTUFUGUHUIUJUKVPVMEDVIVKBCULUMUDUNABCDFUOVLEDFUPU
      Q $.
      $( [12-Mar-1995] $)

    $( An operation class abstraction is a relation. $)
    reloprab $p |- Rel { <. <. x , y >. , z >. | ph } $=
      ( vw copab2 wrel cv cop wceq wa wex copab relopab dfoprab2 releqi mpbir 
      ) ABCDFZGEHBHCHIJAKCLBLZEDMZGSEDNRTABCDEOPQ $.
      $( [16-Jun-2004] $)
  $}

$(
  @{
    @d x y z w v @.  @d ph v @.
    dfoprab2f.1 @e |- ( ph -> A. w ph ) @.
    @( Class abstraction for operations in terms of class abstraction of
       ordered pairs.  This is a version of ~ dfoprab2 with bound-variable
       hypothesis instead of distinct variable requirement. @)
    dfoprab2f @p |- { <. <. x , y >. , z >. | ph } =
                   { <. w , z >. | E. x E. y ( w = <. x , y >. /\ ph ) } @=
      ( vv copab2 cv cop wceq wa wex copab dfoprab2 ax-17 hban hbex weq eqeq1
      anbi1d 2exbidv cbvopab1
      eqtri ) ABCDHGIZBICIJZKZALZCMZBMZGDNEIZUFKZALZCMBM
      ZEDNABCDGOUJUNGDEUIEBUHECUGAEUGEPFQRRUNGPGESZUHUMBCUOUGULAUEUKUFTUAUBUCUD
      @.
  @}
$)

  ${
    $d x w v $.  $d y v $.  $d z v $.  $d ph v $.
    $( The abstraction variables in an operation class abstraction are not
       free.  (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    hboprab1 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. x w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv copab2 cv cop wceq wa wex cab df-oprab hbe1 hbab hbxfr ) BEABCDGFHBH
      CHIDHIJAKDLCLZBLZFMABCDFNSBFERBOPQ $.
      $( [24-Jul-2012] $) $( [25-Apr-1995] $)
  $}

  ${
    $d x v $.  $d y w v $.  $d z v $.  $d ph v $.
    $( The abstraction variables in an operation class abstraction are not
       free.  (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 30-Jul-2012.) $)
    hboprab2 $p |- ( w e. { <. <. x , y >. , z >. | ph } ->
                   A. y w e. { <. <. x , y >. , z >. | ph } ) $=
      ( vv copab2 cv cop wceq wa wex cab df-oprab hbe1 hbex hbab hbxfr ) CEABCD
      GFHBHCHIDHIJAKDLZCLZBLZFMABCDFNUACFETCBSCOPQR $.
      $( [31-Jul-2012] $)  $( [25-Apr-1995] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.  $d w ps $.  $d w ch $.
    oprabbid.1 $e |- ( ph -> A. x ph ) $.
    oprabbid.2 $e |- ( ph -> A. y ph ) $.
    oprabbid.3 $e |- ( ph -> A. z ph ) $.
    oprabbid.4 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal operation class abstractions (deduction
       rule). $)
    oprabbid $p |- ( ph ->
           { <. <. x , y >. , z >. | ps } = { <. <. x , y >. , z >. | ch } ) $=
      ( vw cv cop wceq wa wex copab copab2 ax-17 anbi2d exbid opabbid dfoprab2 
      3eqtr4g ) AKLDLELMNZBOZEPZDPZKFQUECOZEPZDPZKFQBDEFRCDEFRAUHUKKFAKSIAUGUJD
      GAUFUIEHABCUEJTUAUAUBBDEFKUCCDEFKUCUD $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x z w ph $.  $d y z w ph $.  $d w ps $.  $d w ch $.
    oprabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal operation class abstractions (deduction
       rule). $)
    oprabbidv $p |- ( ph ->
           { <. <. x , y >. , z >. | ps } = { <. <. x , y >. , z >. | ch } ) $=
      ( ax-17 oprabbid ) ABCDEFADHAEHAFHGI $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.  $d w ps $.
    oprabbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal operation class abstractions.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    oprabbii $p |- { <. <. x , y >. , z >. | ph }
                 = { <. <. x , y >. , z >. | ps } $=
      ( vw cv wceq copab2 eqid wb a1i oprabbidv ax-mp ) GHZPIZACDEJBCDEJIPKQABC
      DEABLQFMNO $.
      $( [24-Jul-2012] $) $( [28-May-1995] $)
  $}

  ${
    $d x y z w v $.  $d v ph $.  $d v ps $.
    cbvoprab1.1 $e |- ( ph -> A. w ph ) $.
    cbvoprab1.2 $e |- ( ps -> A. x ps ) $.
    cbvoprab1.3 $e |- ( x = w -> ( ph <-> ps ) ) $.
    $( MAY BE REVISED - this probably doesn't have any uses; will be deleted $)
    $( Rule used to change first bound variable in an operation abstraction,
       using implicit substitution.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    cbvoprab1 $p |- { <. <. x , y >. , z >. | ph }
                  = { <. <. w , y >. , z >. | ps } $=
      ( vv cv cop wceq wa wex copab copab2 ax-17 hban hbex opeq1 eqeq2d 
      anbi12d exbidv cbvex opabbii dfoprab2 3eqtr4i ) JKZCKZDKZLZMZANZDOZCOZJEP
      UIFKZUKLZMZBNZDOZFOZJEPACDEQBFDEQUPVBJEUOVACFUNFDUMAFUMFRGSTUTCDUSBCUSCRH
      STUJUQMZUNUTDVCUMUSABVCULURUIUJUQUKUAUBIUCUDUEUFACDEJUGBFDEJUGUH $.
      $( [22-Oct-2011] $) $( [20-Dec-2008] $)
  $}

  ${
    $d x y z w v u $.  $d u ph $.  $d u ps $.
    cbvoprab12.1 $e |- ( ph -> A. w ph ) $.
    cbvoprab12.2 $e |- ( ph -> A. v ph ) $.
    cbvoprab12.3 $e |- ( ps -> A. x ps ) $.
    cbvoprab12.4 $e |- ( ps -> A. y ps ) $.
    cbvoprab12.5 $e |- ( ( x = w /\ y = v ) -> ( ph <-> ps ) ) $.
    $( Rule used to change first two bound variables in an operation
       abstraction, using implicit substitution.  (The proof was shortened by
       Andrew Salmon, 22-Oct-2011.) $)
    cbvoprab12 $p |- { <. <. x , y >. , z >. | ph }
                   = { <. <. w , v >. , z >. | ps } $=
      ( vu cv cop wceq wa wex copab copab2 ax-17 hban opeq12 eqeq2d anbi12d 
      cbvex2 opabbii dfoprab2 3eqtr4i ) MNZCNZDNZOZPZAQZDRCRZMESUJFNZGNZOZPZBQZ
      GRFRZMESACDETBFGETUPVBMEUOVACDFGUNAFUNFUAHUBUNAGUNGUAIUBUTBCUTCUAJUBUTBDU
      TDUAKUBUKUQPULURPQZUNUTABVCUMUSUJUKULUQURUCUDLUEUFUGACDEMUHBFGEMUHUI $.
      $( [22-Oct-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x y z w v u $.  $d u w v ph $.  $d u x y ps $.
    cbvoprab12v.1 $e |- ( ( x = w /\ y = v ) -> ( ph <-> ps ) ) $.
    $( Rule used to change first two bound variables in an operation
       abstraction, using implicit substitution. $)
    cbvoprab12v $p |- { <. <. x , y >. , z >. | ph }
                    = { <. <. w , v >. , z >. | ps } $=
      ( ax-17 cbvoprab12 ) ABCDEFGAFIAGIBCIBDIHJ $.
      $( [8-Oct-2004] $)
  $}

  ${
    $d x z w v $.  $d y z w v $.  $d w v ph $.  $d z v ps $.
    cbvoprab3v.1 $e |- ( z = w -> ( ph <-> ps ) ) $.
    $( Rule used to change the third bound variable in an operation
       abstraction, using implicit substitution.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    cbvoprab3v $p |- { <. <. x , y >. , z >. | ph } =
                     { <. <. x , y >. , w >. | ps } $=
      ( vv cv cop wceq wa wex copab copab2 anbi2d 2exbidv cbvopab2v dfoprab2 
      3eqtr4i ) HICIDIJKZALZDMCMZHENUABLZDMCMZHFNACDEOBCDFOUCUEHEFEIFIKZUBUDCDU
      FABUAGPQRACDEHSBCDFHST $.
      $( [24-Jul-2012] $) $( [8-Oct-2004] $)
  $}

  ${
    elimdeloprv.1 $e |- ( ph -> C e. ( A F B ) ) $.
    elimdeloprv.2 $e |- Z e. ( X F Y ) $.
    $( Eliminate a hypothesis which is a predicate expressing membership in the
       result of an operator (deduction version).  See ~ ghomgrplem for an
       example of its use.  (Contributed by Paul Chapman, 25-Mar-2008.) $)
    elimdeloprv $p |- if ( ph , C , Z ) e.
                     ( if ( ph , A , X ) F if ( ph , B , Y ) ) $=
      ( cif co wcel iftrue eqeltrd opreq12d eleqtrrd wn iffalse syl6eqel 
      pm2.61i ) AADHKZABFKZACGKZELZMAUBBCELZUEAUBDUFADHNIOAUCBUDCEABFNACGNPQARZ
      UBFGELZUEUGUBHUHADHSJTUGUCFUDGEABFSACGSPQUA $.
      $( [25-Mar-2008] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d w ph $.
    $( The domain of an operation class abstraction.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    dmoprab $p |- dom { <. <. x , y >. , z >. | ph } =
                  { <. x , y >. | E. z ph } $=
      ( vw copab2 cdm cv cop wceq wa wex copab cab dfoprab2 dmeqi dmopab 
      exrot3 19.42v 2exbii bitri abbii df-opab eqtr4i 3eqtri ) ABCDFZGEHBHCHIJZ
      AKZCLBLZEDMZGUIDLZENZADLZBCMZUFUJABCDEOPUIEDQULUGUMKZCLBLZENUNUKUPEUKUHDL
      ZCLBLUPUHDBCRUQUOBCUGADSTUAUBUMBCEUCUDUE $.
      $( [24-Jul-2012] $) $( [17-Mar-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The domain of an operation class abstraction. $)
    dmoprabss $p |- dom { <. <. x , y >. , z >. |
           ( ( x e. A /\ y e. B ) /\ ph ) } C_ ( A X. B ) $=
      ( cv wcel wa copab2 cdm wex copab cxp dmoprab 19.42v opabbii opabssxp 
      eqsstri ) BGEHCGFHIZAIZBCDJKUADLZBCMZEFNZUABCDOUCTADLZIZBCMUDUBUFBCTADPQU
      EBCEFRSS $.
      $( [24-Aug-1995] $)
  $}

  ${
    $d x y z w $.  $d w ph $.
    $( The range of an operation class abstraction. $)
    rnoprab $p |- ran { <. <. x , y >. , z >. | ph } =
                  { z | E. x E. y ph } $=
      ( vw copab2 crn cv cop wceq wa wex copab cab dfoprab2 rneqi rnopab 
      exrot3 19.41v opex isseti mpbiran 2exbii bitri abbii 3eqtri ) ABCDFZGEHBH
      ZCHZIZJZAKZCLBLZEDMZGUMELZDNACLBLZDNUGUNABCDEOPUMEDQUOUPDUOULELZCLBLUPULE
      BCRUQABCUQUKELAUKAESEUJUHUITUAUBUCUDUEUF $.
      $( [30-Aug-2004] $)
  $}

  ${
    $d x y z $.
    $( The domain of an operation class abstraction is a relation. $)
    reldmoprab $p |- Rel dom { <. <. x , y >. , z >. | ph } $=
      ( copab2 cdm wrel wex copab relopab dmoprab releqi mpbir ) ABCDEFZGADHZBC
      IZGOBCJNPABCDKLM $.
      $( [17-Mar-1995] $)

    $( Structure of an operation class abstraction. $)
    oprabss $p |- { <. <. x , y >. , z >. | ph } C_ ( ( _V X. _V ) X. _V ) $=
      ( copab2 cdm crn cxp cvv wrel wss reloprab relssdmrn ax-mp reldmoprab 
      df-rel mpbi ssv xpss12 mp2an sstri ) ABCDEZUBFZUBGZHZIIHZIHZUBJUBUEKABCDL
      UBMNUCUFKZUDIKUEUGKUCJUHABCDOUCPQUDRUCUFUDISTUA $.
      $( [28-Nov-2006] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d w ph $.
    $d x y z w th $.
    eloprabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    eloprabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    eloprabg.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( The law of concretion for operation class abstraction.  Compare
       ~ elopab .  (Unnecessary distinct variable restrictions were removed by
       David Abernethy, 19-Jun-2012.) $)
    eloprabg $p |- ( ( A e. D /\ B e. R /\ C e. S ) ->
       ( <. <. A , B >. , C >. e. { <. <. x , y >. , z >. | ph } <-> th ) ) $=
      ( vw cvv wcel cop copab2 wb w3a wi opex cv wceq wa wex eqeq1 eqcom 
      syl6bb visset otthg 3adant1 sylan9bbr anbi1d syl3an9b pm5.32i 3exbidv 
      eleq1 cab df-oprab eleq2i abid bitr2i syl5bb adantl elex 3anim123i 
      eeeanv sylibr biantrurd 19.41vvv syl6rbbr adantr 3bitr3d expcom vtocle 
      elisset syl3an ) HRSZIRSZJRSZHITZJTZAEFGUAZSZDUBZHKSILSJMSWBWCWDUCZWIUDQW
      FWEJUEWJQUFZWFUGZWIWJWLUHZWKEUFZFUFZTGUFZTZUGZAUHZGUIFUIEUIZWNHUGZWOIUGZW
      PJUGZUCZDUHZGUIFUIEUIZWHDWMWSXEEFGWMWSXDAUHXEWMWRXDAWLWRWQWFUGZWJXDWLWRWF
      WQUGXGWKWFWQUJWFWQUKULWCWDXGXDUBWBWNWOHIWPJRREUMFUMGUMUNUOUPUQXDADXAABXBC
      XCDNOPURUSULUTWLWTWHUBWJWLWKWGSZWHWTWKWFWGVAXHWKWTQVBZSWTWGXIWKAEFGQVCVDW
      TQVEVFVGVHWJXFDUBWLWJDXDGUIFUIEUIZDUHXFWJXJDWJXAEUIZXBFUIZXCGUIZUCXJWBXKW
      CXLWDXMEHRVIFIRVIGJRVIVJXAXBXCEFGVKVLVMXDDEFGVNVOVPVQVRVSHKVTILVTJMVTWA 
      $.
      $( [24-Jul-2012] $) $( [14-Sep-1999] $)
  $}

  ${
    $d ph w $.  $d ps w $.  $d x z w $.  $d y z w $.
    ssoprab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of operation class abstraction subclass from implication.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    ssoprab2i $p |- { <. <. x , y >. , z >. | ph } C_
                    { <. <. x , y >. , z >. | ps } $=
      ( vw cv cop wceq wa wex copab copab2 anim2i 2eximi ssopab2i dfoprab2 
      3sstr4i ) GHCHDHIJZAKZDLCLZGEMTBKZDLCLZGEMACDENBCDENUBUDGEUAUCCDABTFOPQAC
      DEGRBCDEGRS $.
      $( [24-Jul-2012] $) $( [11-Nov-1995] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w ph $.
    $( Restriction of an operation class abstraction. $)
    resoprab $p |- ( { <. <. x , y >. , z >. | ph } |` ( A X. B ) ) =
                  { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ ph ) } $=
      ( vw cv cop wceq wa wex copab cxp cres wcel copab2 resopab 19.42vv an12 
      eleq1 visset opelxp syl6bb anbi1d pm5.32i bitri 2exbii bitr3i opabbii 
      eqtri dfoprab2 reseq1 ax-mp 3eqtr4i ) GHZBHZCHZIZJZAKZCLBLZGDMZEFNZOZUTUQ
      EPURFPKZAKZKZCLBLZGDMZABCDQZVDOZVGBCDQVEUPVDPZVBKZGDMVJVBGDVDRVNVIGDVNVMV
      AKZCLBLVIVMVABCSVOVHBCVOUTVMAKZKVHVMUTATUTVPVGUTVMVFAUTVMUSVDPVFUPUSVDUAU
      QUREFCUBUCUDUEUFUGUHUIUJUKVKVCJVLVEJABCDGULVKVCVDUMUNVGBCDGULUO $.
      $( [10-Feb-2007] $)
  $}

  ${
    $d x y z w $.  $d w ph $.
    $( "At most one" is a sufficient condition for an operation class
       abstraction to be a function. $)
    funoprabg $p |- ( A. x A. y E* z ph ->
                    Fun { <. <. x , y >. , z >. | ph } ) $=
      ( vw wmo wal cv cop wceq wa wex copab2 wfun mosubopt 19.21aiv copab wb 
      dfoprab2 funeq ax-mp funopab bitr2i sylib ) ADFCGBGZEHZBHCHIJAKCLBLZDFZEG
      ZABCDMZNZUEUHEADBCUFOPUKUGEDQZNZUIUJULJUKUMRABCDESUJULTUAUGEDUBUCUD $.
      $( [28-Aug-2007] $)
  $}

  ${
    $d x y z w $.  $d w ph $.
    funoprab.1 $e |- E* z ph $.
    $( "At most one" is a sufficient condition for an operation class
       abstraction to be a function. $)
    funoprab $p |- Fun { <. <. x , y >. , z >. | ph } $=
      ( wmo wal copab2 wfun gen2 funoprabg ax-mp ) ADFZCGBGABCDHIMBCEJABCDKL $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( Functionality and domain of an operation class abstraction. $)
    fnoprabg $p |- ( A. x A. y ( ph -> E! z ps ) ->
  { <. <. x , y >. , z >. | ( ph /\ ps ) } Fn { <. x , y >. | ph } ) $=
      ( wa copab2 copab wfn wfun cdm wceq weu wi wal df-fn wmo eumo imim2i 
      moanimv sylibr 2alimi funoprabg syl wex hba1 hba2 wb simpl 19.23aiv euex 
      ancld 19.42v syl6ibr impbid2 a4s opabbid dmoprab syl5eq sylanbrc ) ABFZCD
      EGZACDHZIVBJZVBKZVCLABEMZNZDOZCOZVBVCPVIVAEQZDOCOVDVGVJCDVGABEQZNVJVFVKAB
      ERSABETUAUBVACDEUCUDVIVAEUEZCDHVCVEVIVLACDVHCUFVGDCUGVHVLAUHZCVGVMDVGVLAV
      AAEABUIUJVGAABEUEZFVLVGAVNVFVNABEUKSULABEUMUNUOUPUPUQVACDEURUSUT $.
      $( [28-Aug-2007] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    fnoprab.1 $e |- ( ph -> E! z ps ) $.
    $( Functionality and domain of an operation class abstraction. $)
    fnoprab $p |- { <. <. x , y >. , z >. | ( ph /\ ps ) } Fn
                    { <. x , y >. | ph } $=
      ( weu wi wal wa copab2 copab wfn gen2 fnoprabg ax-mp ) ABEGHZDICIABJCDEKA
      CDLMQCDFNABCDEOP $.
      $( [15-May-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w F $.
    $( An operation maps to a class to which all values belong. $)
    ffnoprv $p |- ( F : ( A X. B ) --> C <-> ( F Fn ( A X. B ) /\
         A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( vw cxp wf wfn cv cfv wcel wral wa co ffnfv cop wceq fveq2 df-opr 
      syl6eqr eleq1d ralxp anbi2i bitri ) CDHZEFIFUGJZGKZFLZEMZGUGNZOUHAKZBKZFP
      ZEMZBDNACNZOGUGEFQULUQUHUKUPGABCDUIUMUNRZSZUJUOEUSUJURFLUOUIURFTUMUNFUAUB
      UCUDUEUF $.
      $( [7-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y F $.  $d x y R $.  $d x y S $.
    foprcl.1 $e |- F : ( R X. S ) --> C $.
    $( Closure law for an operation. $)
    foprcl $p |- ( ( A e. R /\ B e. S ) -> ( A F B ) e. C ) $=
      ( vx vy wcel wa cv co wral cxp wf wfn ffnoprv simprbi ax-mp wceq opreq1 
      eleq1d opreq2 rcla42v mpi ) ADJBEJKHLZILZFMZCJZIENHDNZABFMZCJZDEOZCFPZUKG
      UOFUNQUKHIDECFRSTUJUMAUHFMZCJHIABDEUGAUAUIUPCUGAUHFUBUCUHBUAUPULCUHBAFUDU
      CUEUF $.
      $( [19-Apr-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.  $d z D $.  $d x y z F $.
    $d x y z G $.
    $( Equality of two operations is determined by their values. $)
    eqfnoprv $p |- ( ( F Fn ( A X. B ) /\ G Fn ( C X. D ) ) -> ( F = G <->
( ( A X. B ) = ( C X. D ) /\ A. x e. A A. y e. B ( x F y ) = ( x G y ) ) ) ) $=
      ( vz cxp wfn wa wceq cv cfv wral co eqfnfv cop fveq2 eqeq12d df-opr 
      eqeq12i syl6bbr ralxp anbi2i syl6bb ) GCDJZKHEFJZKLGHMUHUIMZINZGOZUKHOZMZ
      IUHPZLUJANZBNZGQZUPUQHQZMZBDPACPZLIUHUIGHRUOVAUJUNUTIABCDUKUPUQSZMZUNVBGO
      ZVBHOZMUTVCULVDUMVEUKVBGTUKVBHTUAURVDUSVEUPUQGUBUPUQHUBUCUDUEUFUG $.
      $( [1-Sep-2005] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w F $.
    $( Representation of an operation class abstraction in terms of its
       values. $)
    fnoprv $p |- ( F Fn ( A X. B ) <-> F = { <. <. x , y >. , z >. |
                    ( ( x e. A /\ y e. B ) /\ z = ( x F y ) ) } ) $=
      ( vw cxp wfn cv wcel cfv wceq wa copab co copab2 dffn5 cop wex elxp 
      anbi1i 19.41vv anass fveq2 df-opr syl6eqr eqeq2d anbi2d pm5.32i bitri 
      2exbii 3bitr2i opabbii dfoprab2 eqtr4i eqeq2i ) FDEHZIFGJZURKZCJZUSFLZMZN
      ZGCOZMFAJZDKBJZEKNZVAVFVGFPZMZNZABCQZMGCURFRVEVLFVEUSVFVGSZMZVKNZBTATZGCO
      VLVDVPGCVDVNVHNZBTATZVCNVQVCNZBTATVPUTVRVCABUSDEUAUBVQVCABUCVSVOABVSVNVHV
      CNZNVOVNVHVCUDVNVTVKVNVCVJVHVNVBVIVAVNVBVMFLVIUSVMFUEVFVGFUFUGUHUIUJUKULU
      MUNVKABCGUOUPUQUK $.
      $( [7-Feb-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z F $.
    $( Representation of an operation class abstraction in terms of its
       values. $)
    foprv $p |- ( F : ( A X. B ) --> C <-> ( F = { <. <. x , y >. , z >. |
                  ( ( x e. A /\ y e. B ) /\ z = ( x F y ) ) }
                /\ A. x e. A A. y e. B ( x F y ) e. C ) ) $=
      ( cxp wf wfn cv co wcel wral wa wceq copab2 ffnoprv fnoprv anbi1i bitri 
      ) DEHZFGIGUBJZAKZBKZGLZFMBENADNZOGUDDMUEEMOCKUFPOABCQPZUGOABDEFGRUCUHUGAB
      CDEGSTUA $.
      $( [7-Feb-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    oprabex.1 $e |- A e. _V $.
    oprabex.2 $e |- B e. _V $.
    oprabex.3 $e |- ( ( x e. A /\ y e. B ) -> E* z ph ) $.
    oprabex.4 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ ph ) } $.
    $( Existence of an operation class abstraction. $)
    oprabex $p |- F e. _V $=
      ( cv wcel wa copab2 cvv wfun cdm wmo wi moanimv mpbir funoprab cxp xpex 
      dmoprabss ssexi funex mp2an eqeltri ) GBLEMCLFMNZANZBCDOZPKUMQUMRZPMUMPMU
      LBCDULDSUKADSTJUKADUAUBUCUNEFUDEFHIUEABCDEFUFUGPUMUHUIUJ $.
      $( [19-Oct-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    oprabex2g.1 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Existence of an operation class abstraction (special case). $)
    oprabex2g $p |- ( ( A e. R /\ B e. S ) -> F e. _V ) $=
      ( wcel wa cv wceq copab2 cvv wfun cdm funex moeq moani funoprab cxp wss 
      ssexg dmoprabss xpexg sylancr syl5eqel ) DGKEHKLZAMDKBMEKLZCMFNZLZABCOZPI
      UNQUNRZPKZUNPKUJPUNSUMABCULUKCCFTUAUBUODEUCZUDUQPKUPUJUOUQPUEULABCDEUFDEG
      HUGUHUHJUI $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    oprabex2.1 $e |- A e. _V $.
    oprabex2.2 $e |- B e. _V $.
    oprabex2.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Existence of an operation class abstraction (special case). $)
    oprabex2 $p |- F e. _V $=
      ( cvv wcel oprabex2g mp2an ) DKLEKLGKLHIABCDEFKKGJMN $.
      $( [11-Nov-1995] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d x y z w v u f C $.
    $d x y z w v u f D $.  $d x y z w v u f H $.  $d x y z R $.
    $d x y z w v u f S $.
    oprabex3.1 $e |- H e. _V $.
    oprabex3.2 $e |- F = { <. <. x , y >. , z >. | ( ( x e. ( H X. H ) /\
                      y e. ( H X. H ) ) /\
                      E. w E. v E. u E. f ( ( x = <. w , v >. /\
                      y = <. u , f >. ) /\ z = R ) ) } $.
    $( Existence of an operation class abstraction (special case). $)
    oprabex3 $p |- F e. _V $=
      ( cv cop wceq wa wex cxp xpex wmo wcel moeq mosubop anass 2exbii 19.42vv 
      bitri mobii mpbir a1i oprabex ) AMZDMEMNOZBMZFMHMNOZPCMGOZPZHQFQZEQDQZABC
      JJRZUTIJJKKSZVAUSCTZULUTUAUNUTUAPVBUMUOUPPZHQFQZPZEQDQZCTVDCDEULUPCFHUNCG
      UBUCUCUSVFCURVEDEURUMVCPZHQFQVEUQVGFHUMUOUPUDUEUMVCFHUFUGUEUHUIUJLUK $.
      $( [19-Oct-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x y z th $.
    oprabval.1 $e |- C e. _V $.
    oprabval.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabval.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabval.4 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabval.5 $e |- ( ( x e. R /\ y e. S ) -> E! z ph ) $.
    oprabval.6 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation class abstraction.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    oprabval $p |- ( ( A e. R /\ B e. S ) -> ( ( A F B ) = C <-> th ) ) $=
      ( wcel wa co wceq cop cv copab2 cfv copab wfn wb fnopfvb fnoprab eleq1 
      anbi1d anbi2d opelopabg ibir sylancr cvv anbi12d eloprabg mp3an3 bitrd 
      df-opr fveq1i eqtri eqeq1i syl5bb bianabs ) HKTZILTZUAZHIMUBZJUCZDVLHIUDZ
      EUEZKTZFUEZLTZUAZAUAZEFGUFZUGZJUCZVLDUAZVNVLWDVOJUDWBTZWEWBVTEFUHZUIVOWGT
      ZWDWFUJVLWGVOJWBNUKVTAEFGRULVLWHVTVJVSUAZVLEFHIKLVPHUCZVQVJVSVPHKUMUNZVRI
      UCZVSVKVJVRILUMUOZUPUQURVJVKJUSTWFWEUJNWAWIBUAVLCUAWEEFGHIJKLUSWJVTWIABWK
      OUTWLWIVLBCWMPUTGUEJUCCDVLQUOVAVBVCVMWCJVMVOMUGWCHIMVDVOMWBSVEVFVGVHVI $.
      $( [24-Jul-2012] $) $( [16-May-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x y z th $.
    oprabvalig.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabvalig.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabvalig.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabvalig.4 $e |- ( ( x e. R /\ y e. S ) -> E* z ph ) $.
    oprabvalig.5 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation class abstraction (weak version).
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabvalig $p |- ( ( A e. R /\ B e. S /\ C e. D ) ->
                         ( th -> ( A F B ) = C ) ) $=
      ( wcel w3a cop cv wa copab2 cfv wceq co wi eleq1 anbi1d anbi12d anbi2d 
      eloprabg biimpar exp32 com12 3adant3 pm2.43i wfun wmo moanimv mpbir 
      funoprab funopfvg mpan2 3ad2ant3 syld df-opr fveq1i eqtri eqeq1i syl6ibr 
      ) HLTZIMTZJKTZUAZDHIUBZEUCZLTZFUCZMTZUDZAUDZEFGUEZUFZJUGZHINUHZJUGVQDVRJU
      BWETZWGVQDWIUIZVNVOVQWJUIVPVQVNVOUDZWJVQWKDWIVQWIWKDUDZWDVNWBUDZBUDWKCUDW
      LEFGHIJLMKVSHUGZWCWMABWNVTVNWBVSHLUJUKOULWAIUGZWMWKBCWOWBVOVNWAIMUJUMPULG
      UCJUGCDWKQUMUNUOUPUQURUSVPVNWIWGUIZVOVPWEUTWPWDEFGWDGVAWCAGVAUIRWCAGVBVCV
      DVRJKWEVEVFVGVHWHWFJWHVRNUFWFHINVIVRNWESVJVKVLVM $.
      $( [24-Jul-2012] $) $( [14-Sep-1999] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x ps $.  $d x y ch $.  $d x y z th $.
    oprabvaligg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabvaligg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabvaligg.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabvaligg.4 $e |- E* z ph $.
    oprabvaligg.5 $e |- F = { <. <. x , y >. , z >. | ph } $.
    $( The value of an operation class abstraction.  Compare ~ oprabvalig .
       The condition ` ( x e. R /\ y e. S ) ` is been removed.  (Contributed by
       FL, 24-Mar-2007.) $)
    oprabvaligg $p |- ( ( A e. R /\ B e. S /\ C e. D ) ->
                         ( th -> ( A F B ) = C ) ) $=
      ( wcel w3a cop copab2 cfv wceq co eloprabg wi wfun funoprab funopfvg 
      mpan2 3ad2ant3 sylbird df-opr fveq1i eqtri eqeq1i syl6ibr ) HLTZIMTZJKTZU
      AZDHIUBZAEFGUCZUDZJUEZHINUFZJUEVCDVDJUBVETZVGABCDEFGHIJLMKOPQUGVBUTVIVGUH
      ZVAVBVEUIVJAEFGRUJVDJKVEUKULUMUNVHVFJVHVDNUDVFHINUOVDNVESUPUQURUS $.
      $( [24-Mar-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z S $.
    $d x y z th $.
    oprabvali.1 $e |- C e. _V $.
    oprabvali.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    oprabvali.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    oprabvali.4 $e |- ( z = C -> ( ch <-> th ) ) $.
    oprabvali.5 $e |- ( ( x e. R /\ y e. S ) -> E* z ph ) $.
    oprabvali.6 $e |- F =
                  { <. <. x , y >. , z >. | ( ( x e. R /\ y e. S ) /\ ph ) } $.
    $( The value of an operation class abstraction (weak version).
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabvali $p |- ( ( A e. R /\ B e. S ) -> ( th -> ( A F B ) = C ) ) $=
      ( wcel cvv co wceq wi oprabvalig mp3an3 ) HKTILTJUATDHIMUBJUCUDNABCDEFGHI
      JUAKLMOPQRSUEUF $.
      $( [24-Jul-2012] $) $( [16-May-1995] $)
  $}

  ${
    $d u v x y z A $.  $d u v y z B $.  $d u v x y z C $.  $d u v w G $.
    $d u v x y z D $.  $d u v w z R $.  $d u v w z S $.  $d x y w $.
    oprabval2gf.1 $e |- ( w e. G -> A. x w e. G ) $.
    oprabval2gf.2 $e |- ( w e. S -> A. y w e. S ) $.
    oprabval2gf.3 $e |- ( x = A -> R = G ) $.
    oprabval2gf.4 $e |- ( y = B -> G = S ) $.
    oprabval2gf.5 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  A version of ~ oprabval2g
       using bound-variable hypotheses. $)
    oprabval2gf $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( vu vv wcel w3a cv wa csb wceq copab2 co eqid cvv visset ax-17 hblem 
      csbhypf csbeq2d mpan2 eqeq2d eqeq1 wmo moeq a1i oprabvalig mpi wal wi 
      hbcsb1 hbcsbg ax-mp hbeq hban eleq1 anbi1d csbeq1a anbi12d anbi2d 
      sylan9bb cbvoprab12 eqtri opreqi syl5eq ) EGUAFHUAJMUAUBZEFSUCZGUAZTUCZHU
      AZUDZCUCZBWDAWBIUEZUEZUFZUDZSTCUGZUHZJEFKUHWAJJUFZWMJUFJUIWJWGBWDLUEZUFWG
      JUFWNSTCEFJMGHWLWBEUFZWIWOWGWPWDUJUAZWIWOUFTUKZWPBWDWHLUJWPBULASTEILWDEUA
      AULADTLNUMPUNUOUPUQWDFUFWOJWGBTSFLJWBFUABULBDSJOUMQUNUQWGJJURWJCUSWFCWIUT
      VAWLUIVBVCKWLEFKAUCZGUAZBUCZHUAZUDZWGIUFZUDZABCUGWLRXEWKABCSTXESULXETULWF
      WJAWFAULADDWGWIDUCZWGUAZAULWQXFWIUAZXHAVDVEWRABDWDWHUJXFWDUAZAULADWBISUKX
      FWBUAAULVFVGVHVIVJWFWJBWFBULBDDWGWIXGBULBDWDWHWRXIBULVFVIVJWSWBUFZXEWCXBU
      DZWGWHUFZUDXAWDUFZWKXJXCXKXDXLXJWTWCXBWSWBGVKVLXJIWHWGAWBIVMUQVNXMXKWFXLW
      JXMXBWEWCXAWDHVKVOXMWHWIWGBWDWHVMUQVNVPVQVRVSVT $.
      $( [20-Dec-2008] $) $( [17-Aug-2006] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x y z D $.  $d x w G $.
    $d w z R $.  $d w y z S $.
    oprabval2g.1 $e |- ( x = A -> R = G ) $.
    oprabval2g.2 $e |- ( y = B -> G = S ) $.
    oprabval2g.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabval2g $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( vw cv wcel ax-17 oprabval2gf ) ABCPDEFGHIJKLPQZKRASUAIRBSMNOT $.
      $( [24-Jul-2012] $) $( [14-Sep-1999] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x y z D $.  $d x G $.
    $d z R $.  $d y z S $.
    oprabval2.1 $e |- S e. _V $.
    oprabval2.2 $e |- ( x = A -> R = G ) $.
    oprabval2.3 $e |- ( y = B -> G = S ) $.
    oprabval2.4 $e |- F = { <. <. x , y >. , z >. | ( ( x e. C /\ y e. D )
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabval2 $p |- ( ( A e. C /\ B e. D ) -> ( A F B ) = S ) $=
      ( wcel cvv co wceq oprabval2g mp3an3 ) DFPEGPIQPDEJRISLABCDEFGHIJKQMNOTUA
      $.
      $( [24-Jul-2012] $) $( [16-May-1995] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x G $.  $d z R $.  $d y z S $.
    oprabval5.1 $e |- S e. _V $.
    oprabval5.2 $e |- ( x = A -> R = G ) $.
    oprabval5.3 $e |- ( y = B -> G = S ) $.
    oprabval5.4 $e |- F = { <. <. x , y >. , z >. | z = R } $.
    $( The value of an operation class abstraction.  Special case.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    oprabval5 $p |- ( ( A e. C /\ B e. D ) -> ( A F B ) = S ) $=
      ( cvv wcel co wceq cv copab2 wa visset pm3.2i biantrur oprabbii eqtri 
      oprabval2 elisset syl2an ) DPQEPQDEJRISDFQEGQABCDEPPHIJKLMNJCTHSZABCUAATP
      QZBTPQZUBZUKUBZABCUAOUKUOABCUNUKULUMAUCBUCUDUEUFUGUHDFUIEGUIUJ $.
      $( [24-Jul-2012] $) $( [19-Jul-2005] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d x y z w v u f C $.
    $d x y z w v u f D $.  $d x y z w v u f H $.  $d x y z R $.
    $d x y z w v u f S $.
    oprabval3.1 $e |- S e. _V $.
    oprabval3.2 $e |- ( ( ( w = A /\ v = B ) /\ ( u = C /\ f = D ) ) ->
         R = S ) $.
    oprabval3.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. ( H X. H ) /\
                      y e. ( H X. H ) ) /\
                      E. w E. v E. u E. f ( ( x = <. w , v >. /\
                      y = <. u , f >. ) /\ z = R ) ) } $.
    $( The value of an operation class abstraction.  Special case. $)
    oprabval3 $p |- ( ( ( A e. H /\ B e. H ) /\ ( C e. H /\ D e. H ) ) ->
        ( <. A , B >. F <. C , D >. ) = S ) $=
      ( wcel wa cop cxp cv wceq wex co opelxpi anim12i eqid eqeq2d copsex4g 
      mpbiri eqeq1 anbi1d 4exbidv anbi2d wmo moeq mosubop anass 2exbii 19.42vv 
      bitri mobii mpbir a1i oprabvali sylc ) GOSHOSTZIOSJOSTZTZGHUAZOOUBZSZIJUA
      ZVMSZTVLDUCZEUCZUAZUDZVOFUCZMUCZUAZUDZTZLKUDZTZMUEFUEEUEDUEZVLVONUFLUDVIV
      NVJVPGHOOUGIJOOUGUHVKWHLLUDZLUIWFWIDEFMGHIJOOVQGUDVRHUDTWAIUDWBJUDTTKLLQU
      JUKULAUCZVSUDZBUCZWCUDZTZCUCZKUDZTZMUEFUEZEUEDUEZVTWMTZWPTZMUEFUEEUEDUEWE
      WPTZMUEFUEEUEDUEWHABCVLVOLVMVMNPWJVLUDZWQXADEFMXCWNWTWPXCWKVTWMWJVLVSUMUN
      UNUOWLVOUDZXAXBDEFMXDWTWEWPXDWMWDVTWLVOWCUMUPUNUOWOLUDZXBWGDEFMXEWPWFWEWO
      LKUMUPUOWSCUQZWJVMSWLVMSTXFWKWMWPTZMUEFUEZTZEUEDUEZCUQXHCDEWJWPCFMWLCKURU
      SUSWSXJCWRXIDEWRWKXGTZMUEFUEXIWQXKFMWKWMWPUTVAWKXGFMVBVCVAVDVEVFRVGVH $.
      $( [28-May-1995] $)
  $}

  ${
    $d x y z w v u f A $.  $d x y z w v u f B $.  $d z w v u f C $.
    $d w v D $.
    oprabval4g.1 $e |- F =
          { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C ) } $.
    $( Value of an operation given by an ordered-pair class abstraction.  (This
       is the operation analog of ~ fvopab2 .) $)
    oprabval4g $p |- ( ( x e. A /\ y e. B /\ C e. D ) -> ( x F y ) = C ) $=
      ( vw vv vf vu cv wcel cvv co wceq wsbc cab sbab eqcomd equcoms wa copab2 
      ax-17 hbs1 hbab hbeleq hban hbsb eleq1 bi2anan9 sylan9eq eqeq2d anbi12d 
      cbvoprab12 eqtr4i oprabval2g elisset syl3an3 ) ANZDOZBNZEOZFPOVBVDHQFRFGO
      JKCVBVDDELNMNFOZBKNZSZMTZOZAJNZSZLTZFHVIPVMVIRAJVBVKRVIVMAJLVIUAUBUCZVIFR
      BKVDVGRFVIBKMFUAUBUCZHVCVEUDZCNZFRZUDZABCUEVKDOZVGEOZUDZVQVMRZUDZJKCUEIWD
      VSJKCABWBWCAWBAUFACVMVLALCVJAJUGUHUIUJWBWCBWBBUFBCVMVLBLCVJAJBVHBMLVFBKUG
      UHUKUHUIUJVSJUFVSKUFVKVBRZVGVDRZUDZWBVPWCVRWEVTVCWFWAVEVKVBDULVGVDEULUMWG
      VMFVQWEWFVMVIFVNVOUNUOUPUQURUSFGUTVA $.
      $( [21-Feb-2004] $)

    $( MAY BE REVISED - this proof eliminates sbab with csb* stuff, but
       the proof ends up longer. $)
    $( Value of an operation given by an ordered-pair class abstraction.  (This
       is the operation analog of ~ fvopab2 .) $)
    oprabval4gALT $p |- ( ( x e. A /\ y e. B /\ C e. D ) -> ( x F y ) = C ) $=
      ( vw vv cv wcel cvv co wceq csb csbeq1a eqcomd equcoms wa copab2 ax-17 
      visset hbcsb1 hbeleq hban wal wi hbcsbg ax-mp eleq1 bi2anan9 sylan9eq 
      eqeq2d anbi12d cbvoprab12 eqtr4i oprabval2g elisset syl3an3 ) ALZDMZBLZEM
      ZFNMVBVDHOFPFGMJKCVBVDDEAJLZBKLZFQZQZFHVHNVIVHPAJVBVFPVHVIAVFVHRSTZVHFPBK
      VDVGPFVHBVGFRSTZHVCVEUAZCLZFPZUAZABCUBVFDMZVGEMZUAZVMVIPZUAZJKCUBIVTVOJKC
      ABVRVSAVRAUCACVIACVFVHJUDZVMVFMZAUCUEUFUGVRVSBVRBUCBCVIVFNMVMVIMZWCBUHUIW
      ABACVFVHNWBBUCBCVGFKUDVMVGMBUCUEUJUKUFUGVOJUCVOKUCVFVBPZVGVDPZUAZVRVLVSVN
      WDVPVCWEVQVEVFVBDULVGVDEULUMWFVIFVMWDWEVIVHFVJVKUNUOUPUQURUSFGUTVA $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z C $.  $d w z R $.
    $d w x y z S $.
    oprabval6g.1 $e |- ( <. x , y >. = <. A , B >. -> R = S ) $.
    oprabval6g.2 $e |- F = { <. <. x , y >. , z >. | ( <. x , y >. e. C
                      /\ z = R ) } $.
    $( The value of an operation class abstraction.  Special case. $)
    oprabval6g $p |- ( ( ( A e. G /\ B e. H /\ <. A , B >. e. C ) /\ S e. J )
                     -> ( A F B ) = S ) $=
      ( vw wcel cop w3a wa cfv co cv wceq wex eqid biidd copsex2g mpbiri 
      3adant3 adantr wi eqeq1 anbi1d wb eqeq2d eqcoms pm5.32i syl6bb 2exbidv 
      anbi2d wmo moeq mosubop a1i copab2 copab dfoprab2 eleq1 an12 bitr3i 
      2exbii 19.42vv bitri opabbii 3eqtri fvopab3ig 3ad2antl3 mpd df-opr 
      syl5eq ) DJPZEKPZDEQZFPZRZHLPZSZWCITZHDEIUAWGWCAUBZBUBZQZUCZHHUCZSZBUDAUD
      ZWHHUCZWEWOWFWAWBWOWDWAWBSWOWMHUEWMWMABDEJKWIDUCWJEUCSWMUFUGUHUIUJWDWAWFW
      OWPUKWBOUBZWKUCZCUBZGUCZSZBUDAUDZWLWSHUCZSZBUDAUDWOOCWCHFLIWQWCUCZXAXDABX
      EXAWLWTSXDXEWRWLWTWQWCWKULUMWLWTXCWTXCUNWKWCWKWCUCGHWSMUOUPUQURUSXCXDWNAB
      XCXCWMWLWSHHULUTUSXBCVAWQFPZWTCABWQCGVBVCVDIWKFPZWTSZABCVEWRXHSZBUDAUDZOC
      VFXFXBSZOCVFNXHABCOVGXJXKOCXJXFXASZBUDAUDXKXIXLABXIWRXFWTSZSXLWRXMXHWRXFX
      GWTWQWKFVHUMUQWRXFWTVIVJVKXFXAABVLVMVNVOVPVQVRDEIVSVT $.
      $( [13-Nov-2006] $)
  $}

  $( The value of a restricted operation.  (Contributed by FL, 10-Nov-2006.) $)
  oprvres $p |- ( ( A e. C /\ B e. D ) -> ( A ( F |` ( C X. D ) ) B )
    = ( A F B ) ) $=
    ( wcel wa cop cxp cres cfv co wceq opelxpi fvres syl df-opr 3eqtr4g ) ACFBD
    FGZABHZECDIZJZKZTEKZABUBLABELSTUAFUCUDMABCDNTUAEOPABUBQABEQR $.
    $( [3-Nov-2006] $)

  $( The value of a member of the domain of a subclass of an operation. $)
  oprssoprv $p |- ( ( ( Fun F /\ G Fn ( C X. D ) /\ G C_ F ) /\
        ( A e. C /\ B e. D ) ) -> ( A F B ) = ( A G B ) ) $=
    ( wfun cxp wfn wss w3a wcel wa cres co wceq oprvres adantl cdm fndm 
    reseq2d 3ad2ant2 funssres 3adant2 eqtr3d opreqd adantr ) EGZFCDHZIZFEJZKZAC
    LBDLMZMABEUINZOZABEOZABFOZUMUOUPPULABCDEQRULUOUQPUMULUNFABULEFSZNZUNFUJUHUS
    UNPUKUJURUIEUIFTUAUBUHUKUSFPUJEFUCUDUEUFUGUE $.
    $( [23-Aug-2007] $)

  $( A operations's value belongs to its codomain. $)
  foprrn $p |- ( ( F : ( R X. S ) --> C /\ A e. R /\ B e. S ) ->
               ( A F B ) e. C ) $=
    ( cxp wf wcel co cop wa cfv ffvelrn df-opr syl5eqel opelxpi sylan2 3impb ) 
    DEGZCFHZADIZBEIZABFJZCIZUAABKZTIZUEUBUCLUAUGLUFFMCUDTCUFFNABFOPABDEQRS $.
    $( [27-Aug-2006] $)

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z C $.  $d w x y z F $.
    $( The range of an operation expressed as a collection of the operation's
       values. $)
    fnrnoprv $p |- ( F Fn ( A X. B ) -> ran F = { z | E. x e. A E. y e. B
                     z = ( x F y ) } ) $=
      ( vw cxp wfn crn cv cfv wceq wrex cab co fnrnfv cop fveq2 df-opr syl6eqr 
      eqeq2d rexxp abbii syl6eq ) FDEHZIFJCKZGKZFLZMZGUFNZCOUGAKZBKZFPZMZBENADN
      ZCOGCUFFQUKUPCUJUOGABDEUHULUMRZMZUIUNUGURUIUQFLUNUHUQFSULUMFTUAUBUCUDUE 
      $.
      $( [29-Oct-2006] $)

    $( An onto mapping of an operation expressed in terms of operation
       values. $)
    fooprv $p |- ( F : ( A X. B ) -onto-> C <-> ( F : ( A X. B ) --> C /\
                  A. z e. C E. x e. A E. y e. B z = ( x F y ) ) ) $=
      ( vw cxp wfo wf cv cfv wceq wrex wral wa co dffo3 cop fveq2 df-opr 
      syl6eqr eqeq2d rexxp ralbii anbi2i bitri ) DEIZFGJUIFGKZCLZHLZGMZNZHUIOZC
      FPZQUJUKALZBLZGRZNZBEOADOZCFPZQHCUIFGSUPVBUJUOVACFUNUTHABDEULUQURTZNZUMUS
      UKVDUMVCGMUSULVCGUAUQURGUBUCUDUEUFUGUH $.
      $( [29-Oct-2006] $)
  $}

  $( An operation's value belongs to its range. $)
  fnoprvrn $p |- ( ( F Fn ( A X. B ) /\ C e. A /\ D e. B ) ->
                   ( C F D ) e. ran F ) $=
    ( cxp wfn wcel co crn cop wa cfv fnfvelrn df-opr syl5eqel opelxpi sylan2 
    3impb ) EABFZGZCAHZDBHZCDEIZEJZHZUACDKZTHZUFUBUCLUAUHLUGEMUEUDTUGENCDEOPCDA
    BQRS $.
    $( [10-Feb-2007] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z F $.
    $( A member of an operation's range is a value of the operation. $)
    oprvelrn $p |- ( F Fn ( A X. B ) -> ( C e. ran F <->
                  E. x e. A E. y e. B ( x F y ) = C ) ) $=
      ( vz cxp wfn crn wcel cv co wceq wrex cab fnrnoprv eleq2d cvv wi oprex 
      eleq1 mpbii a1i r19.23aiv eqeq1 eqcom syl6bb 2rexbidv elab3 ) FCDHIZEFJZK
      EGLZALZBLZFMZNZBDOACOZGPZKUPENZBDOZACOZUKULUSEABGCDFQRURVBGEVAESKZACVAVCT
      UNCKUTVCBDUTVCTUODKUTUPSKVCUNUOFUAUPESUBUCUDUEUDUEUMENZUQUTABCDVDUQEUPNUT
      UMEUPUFEUPUGUHUIUJUH $.
      $( [7-Feb-2007] $)
  $}

  ${
    oprvalconst2.1 $e |- C e. _V $.
    $( The value of a constant operation. $)
    oprvconst2 $p |- ( ( R e. A /\ S e. B ) ->
                       ( R ( ( A X. B ) X. { C } ) S ) = C ) $=
      ( wcel wa cop cxp csn cfv co wceq opelxpi fvconst2 syl df-opr syl5eq ) DA
      GEBGHZDEIZABJZCKJZLZCDEUCMTUAUBGUDCNDEABOUBCUAFPQDEUCRS $.
      $( [5-Nov-2006] $)
  $}

  ${
    $d x z A $.  $d y z B $.  $d z C $.
    ab2rexex.1 $e |- A e. _V $.
    ab2rexex.2 $e |- B e. _V $.
    $( Existence of a class abstraction of existentially restricted sets.
       Variables ` x ` and ` y ` are normally free-variable parameters in the
       class expression substituted for ` C ` , which can be thought of as
       ` C ( x , y ) ` .  See comments for ~ abrexex . $)
    ab2rexex $p |- { z | E. x e. A E. y e. B z = C } e. _V $=
      ( cv wceq wrex abrexex abrexex2 ) CIFJBEKACDGBCEFHLM $.
      $( [20-Sep-2011] $)
  $}

  ${
    $d x z A $.  $d y z B $.
    ab2rexex2.1 $e |- A e. _V $.
    ab2rexex2.2 $e |- B e. _V $.
    ab2rexex2.3 $e |- { z | ph } e. _V $.
    $( Existence of an existentially restricted class abstraction. ` ph ` is
       normally has free-variable parameters ` x ` , ` y ` , and ` z ` .
       Compare ~ abrexex2 . $)
    ab2rexex2 $p |- { z | E. x e. A E. y e. B ph } e. _V $=
      ( wrex abrexex2 ) ACFJBDEGACDFHIKK $.
      $( [20-Sep-2011] $)
  $}

  ${
    $d z F $.  $d x z A $.  $d y z B $.
    oprvalex.1 $e |- A e. _V $.
    oprvalex.2 $e |- B e. _V $.
    $( Existence of a class of operation values. $)
    oprvexOLD $p |- { z | E. x e. A E. y e. B z = ( x F y ) } e. _V $=
      ( cv co ab2rexex ) ABCDEAIBIFJGHK $.
      $( [15-Nov-1995] $)
  $}

  ${
    $d x y S $.  $d x y F $.
    oprssdm.1 $e |- -. (/) e. S $.
    oprssdm.2 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
    $( Domain of closure of an operation. $)
    oprssdm $p |- ( S X. S ) C_ dom F $=
      ( cxp cdm relxp cv cop wcel wa visset opelxp wn cfv c0 wceq ndmfv co 
      df-opr eqeq1i eleq1 mtbiri nsyl sylbir syl con4i sylbi relssi ) ABCCGZDHZ
      CCIAJZBJZKZULLUNCLUOCLMZUPUMLZUNUOCCBNOURUQURPUPDQZRSZUQPZUPDTUTUNUODUAZR
      SZVAVBUSRUNUODUBUCVCVBCLZUQVCVDRCLEVBRCUDUEFUFUGUHUIUJUK $.
      $( [24-Aug-1995] $)
  $}

  $( The value of an operation outside its domain. $)
  ndmoprg $p |- ( ( dom F = ( R X. S ) /\ B e. C /\ -. ( A e. R /\ B e. S ) )
              -> ( A F B ) = (/) ) $=
    ( cdm cxp wceq wcel wa wn co c0 cop eleq2 opelxpg sylan9bb notbid cfv 
    ndmfv df-opr syl5eq syl6bir 3impia ) FGZDEHZIZBCJZADJBEJKZLZABFMZNIZUHUIKZU
    KABOZUFJZLZUMUNUPUJUHUPUOUGJUIUJUFUGUOPABDECQRSUQUOFTNULUOFUAABFUBUCUDUE $.
    $( [28-Mar-2008] $)

  ${
    $d x A $.  $d x B $.  $d x F $.  $d x S $.
    ndmoprcl.1 $e |- dom F = ( S X. S ) $.
    ndmoprcl.2 $e |- ( ( A e. S /\ x e. S ) -> ( A F x ) e. S ) $.
    ndmoprcl.3 $e |- (/) e. S $.
    $( The closure of an operation outside its domain, when the domain includes
       the empty set.  This technical lemma can make the operation more
       convenient to work in some cases.  It is is dependent on our particular
       definitions of operation value, function value, and ordered pair. $)
    ndmoprcl $p |- ( A F B ) e. S $=
      ( cvv wcel co wn oprprc2 eleq1d wa c0 cdm cxp wceq ndmoprg mp3an1 
      syl6eqel ex cv wi opreq2 imbi2d expcom vtoclga imp pm2.61d2 syl5cbir 
      impcom wrel relxp releqi mpbir oprprc1 pm2.61i ) BIJZBCEKZDJZUTCIJZVBVCLZ
      VBBBEKZDJZUTVDVAVEDBCEMNUTBDJZVGOZVFUTVHLZVFUTVIOVEPDEQZDDRZSZUTVIVEPSFBB
      IDDETUAHUBUCVGVGVFVGBAUDZEKZDJZUEZVGVFUEABDVMBSZVOVFVGVQVNVEDVMBBEUFNUGVG
      VMDJVOGUHZUIUJUKULVCVGCDJZOZVBVCVTLZVBVCWAOVAPDVLVCWAVAPSFBCIDDETUAHUBUCV
      SVGVBVPVGVBUEACDVMCSZVOVBVGWBVNVADVMCBEUFNUGVRUIUMUKUKUTLVAPDBCEVJUNVKUND
      DUOVJVKFUPUQURHUBUS $.
      $( [24-Sep-2004] $)
  $}

  ${
    ndmopr.1 $e |- B e. _V $.
    ndmopr.2 $e |- dom F = ( S X. S ) $.
    $( The value of an operation outside its domain. $)
    ndmopr $p |- ( -. ( A e. S /\ B e. S ) -> ( A F B ) = (/) ) $=
      ( cdm cxp wceq cvv wcel wa wn co c0 ndmoprg mp3an12 ) DGCCHIBJKACKBCKLMAB
      DNOIFEABJCCDPQ $.
      $( [24-Aug-1995] $)

    ${
      ndmoprrcl.3 $e |- -. (/) e. S $.
      $( Reverse closure law, when an operation's domain doesn't contain the
         empty set. $)
      ndmoprrcl $p |- ( ( A F B ) e. S -> ( A e. S /\ B e. S ) ) $=
        ( wcel wa co wn c0 ndmopr eleq1d mtbiri con4i ) ACHBCHIZABDJZCHZQKZSLCH
        GTRLCABCDEFMNOP $.
        $( [3-Feb-1996] $)
    $}

    ${
      ndmopr.3 $e |- A e. _V $.
      $( Any operation is commutative outside its domain. $)
      ndmoprcom $p |- ( -. ( A e. S /\ B e. S ) -> ( A F B ) = ( B F A ) ) $=
        ( wcel wa wn co c0 ndmopr wceq ancom notbii sylbi eqtr4d ) ACHZBCHZIZJZ
        ABDKLBADKZABCDEFMUBTSIZJUCLNUAUDSTOPBACDGFMQR $.
        $( [24-Aug-1995] $)
    $}

    ${
      ndmopr.4 $e |- C e. _V $.
      ndmopr.5 $e |- -. (/) e. S $.
      $( Any operation is associative outside its domain, if the domain doesn't
         contain the empty set. $)
      ndmoprass $p |- ( -. ( A e. S /\ B e. S /\ C e. S ) ->
              ( ( A F B ) F C ) = ( A F ( B F C ) ) ) $=
        ( wcel w3a wn co c0 wa wceq ndmoprrcl anim1i df-3an sylibr con3i 
        ndmopr syl anim2i 3anass oprex eqtr4d ) ADJZBDJZCDJZKZLZABEMZCEMZNABCEM
        ZEMZULUMDJZUJOZLUNNPURUKURUHUIOZUJOUKUQUSUJABDEFGIQRUHUIUJSTUAUMCDEHGUB
        UCULUHUODJZOZLUPNPVAUKVAUHUIUJOZOUKUTVBUHBCDEHGIQUDUHUIUJUETUAAUODEBCEU
        FGUBUCUG $.
        $( [24-Aug-1995] $)

      ${
        ndmopr.6 $e |- dom G = ( S X. S ) $.
        $( Any operation is distributive outside its domain, if the domain
           doesn't contain the empty set. $)
        ndmoprdistr $p |- ( -. ( A e. S /\ B e. S /\ C e. S ) ->
            ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) ) $=
          ( wcel w3a wn co c0 wa wceq ndmoprrcl anim2i 3anass sylibr con3i 
          oprex ndmopr syl anim12i anandi bitri eqtr4d ) ADLZBDLZCDLZMZNZABCEOZ
          FOZPABFOZACFOZEOZUOUKUPDLZQZNUQPRVBUNVBUKULUMQZQZUNVAVCUKBCDEIHJSTUKU
          LUMUAZUBUCAUPDFBCEUDKUEUFUOURDLZUSDLZQZNUTPRVHUNVHUKULQZUKUMQZQZUNVFV
          IVGVJABDFGKJSACDFIKJSUGUNVDVKVEUKULUMUHUIUBUCURUSDEACFUDHUEUFUJ $.
          $( [24-Aug-1995] $)
      $}
    $}

    ${
      ndmord.3 $e |- A e. _V $.
      ndmord.4 $e |- R C_ ( S X. S ) $.
      ndmord.5 $e |- -. (/) e. S $.
      ndmord.6 $e |- ( ( A e. S /\ B e. S /\ C e. S ) ->
                     ( A R B <-> ( C F A ) R ( C F B ) ) ) $.
      $( Elimination of redundant antecedents in an ordering law. $)
      ndmord $p |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $=
        ( wcel wa wbr co wb wi 3expia wn brel oprex ndmoprrcl simprd anim12i 
        syl pm5.21ni a1d pm2.61i ) AEMZBEMZNZCEMZABDOZCAFPZCBFPZDOZQZRUJUKUMURL
        SULTURUMUNULUQABEEDGJUAUQUOEMZUPEMZNULUOUPEEDCBFUBJUAUSUJUTUKUSUMUJCAEF
        IHKUCUDUTUMUKCBEFGHKUCUDUEUFUGUHUI $.
        $( [7-Mar-1996] $)
    $}
  $}

  ${
    ndmordi.3 $e |- A e. _V $.
    ndmordi.2 $e |- dom F = ( S X. S ) $.
    ndmordi.4 $e |- R C_ ( S X. S ) $.
    ndmordi.5 $e |- -. (/) e. S $.
    ndmordi.6 $e |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $.
    $( Elimination of redundant antecedent in an ordering law. $)
    ndmordi $p |- ( ( C F A ) R ( C F B ) -> A R B ) $=
      ( wcel co wbr oprex brel simpld ndmoprrcl syl biimprd mpcom ) CELZCAFMZCB
      FMZDNZABDNZUEUCELZUBUEUGUDELUCUDEEDCBFOIPQUGUBAELCAEFGHJRQSUBUFUEKTUA $.
      $( [25-Jun-1998] $)
  $}

  ${
    $d w z A $.  $d w B $.  $d w x y z F $.  $d w x y z S $.
    caoprcl.1 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
    $( Convert an operation closure law to class notation. $)
    caoprcl $p |- ( ( A e. S /\ B e. S ) -> ( A F B ) e. S ) $=
      ( vz vw cv co wcel wceq opreq1 eleq1d opreq2 vtocl2ga ) HJZIJZFKZELZCSFKZ
      ELCDFKZELHICDEERCMTUBERCSFNOSDMUBUCESDCFPOAJZBJZFKZELRUEFKZELUAABRSEEUDRM
      UFUGEUDRUEFNOUESMUGTEUESRFPOGQQ $.
      $( [4-Aug-1995] $)
  $}

  ${
    $( General laws for commutative, associative, distributive operations. $)
    $d x y z F $.  $d x y z S $.  $d x y z A $.  $d x y z B $.  $d x y z C $.
    $d x y z D $.  $d x y z G $.  $d x y z R $.
    ${
      caoprcom.1 $e |- A e. _V $.
      caoprcom.2 $e |- B e. _V $.
      caoprcom.3 $e |- ( x F y ) = ( y F x ) $.
      $( Convert an operation commutative law to class notation. $)
      caoprcom $p |- ( A F B ) = ( B F A ) $=
        ( cv co wceq opreq1 opreq2 eqeq12d sylan9bb vtocl2 ) AIZBIZEJZRQEJZKZCD
        EJZDCEJZKZABCDFGQCKZUACREJZRCEJZKRDKZUDUESUFTUGQCRELQCREMNUHUFUBUGUCRDC
        EMRDCELNOHP $.
        $( [26-Aug-1995] $)
    $}

    ${
      caoprass.1 $e |- A e. _V $.
      caoprass.2 $e |- B e. _V $.
      caoprass.3 $e |- C e. _V $.
      caoprass.4 $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      $( Convert an operation associative law to class notation. $)
      caoprass $p |- ( ( A F B ) F C ) = ( A F ( B F C ) ) $=
        ( cv co wceq opreq1 opreq1d eqeq12d opreq2 opreq2d syl3an9b vtocl3 ) AL
        ZBLZGMZCLZGMZUBUCUEGMZGMZNZDEGMZFGMZDEFGMZGMZNZABCDEFHIJUBDNZUIDUCGMZUE
        GMZDUGGMZNUCENZUJUEGMZDEUEGMZGMZNUEFNZUNUOUFUQUHURUOUDUPUEGUBDUCGOPUBDU
        GGOQUSUQUTURVBUSUPUJUEGUCEDGRPUSUGVADGUCEUEGOSQVCUTUKVBUMUEFUJGRVCVAULD
        GUEFEGRSQTKUA $.
        $( [26-Aug-1995] $)
    $}

    ${
      caoprcan.1 $e |- C e. _V $.
      caoprcan.2 $e |- ( ( x e. S /\ y e. S ) ->
                   ( ( x F y ) = ( x F z ) -> y = z ) ) $.
      $( Convert an operation cancellation law to class notation. $)
      caoprcan $p |- ( ( A e. S /\ B e. S ) ->
                   ( ( A F B ) = ( A F C ) -> B = C ) ) $=
        ( cv co wceq wi opreq1 eqeq12d imbi1d opreq2 eqeq1d eqeq1 imbi12d wcel 
        wa eqeq2d eqeq2 imbi2d vtocl vtocl2ga ) AKZBKZHLZUIFHLZMZUJFMZNZDUJHLZD
        FHLZMZUNNDEHLZUQMZEFMZNABDEGGUIDMZUMURUNVBUKUPULUQUIDUJHOUIDFHOPQUJEMZU
        RUTUNVAVCUPUSUQUJEDHRSUJEFTUAUIGUBUJGUBUCZUKUICKZHLZMZUJVEMZNZNVDUONCFI
        VEFMZVIUOVDVJVGUMVHUNVJVFULUKVEFUIHRUDVEFUJUEUAUFJUGUH $.
        $( [20-Aug-1995] $)
    $}

    ${
      caoprord.1 $e |- A e. _V $.
      caoprord.2 $e |- B e. _V $.
      caoprord.3 $e |- ( z e. S -> ( x R y <-> ( z F x ) R ( z F y ) ) ) $.
      $( Convert an operation ordering law to class notation. $)
      caoprord $p |- ( C e. S -> ( A R B <-> ( C F A ) R ( C F B ) ) ) $=
        ( wbr cv co wb wceq opreq1 breq12d bibi2d wcel wi wa breq1 opreq2 
        breq1d bibi12d breq2 breq2d sylan9bb imbi2d vtocl2 vtoclga ) DEGMZCNZDI
        OZUOEIOZGMZPZUNFDIOZFEIOZGMZPCFHUOFQZURVBUNVCUPUTUQVAGUOFDIRUOFEIRSTUOH
        UAZANZBNZGMZUOVEIOZUOVFIOZGMZPZUBVDUSUBABDEJKVEDQZVFEQZUCVKUSVDVLVKDVFG
        MZUPVIGMZPVMUSVLVGVNVJVOVEDVFGUDVLVHUPVIGVEDUOIUEUFUGVMVNUNVOURVFEDGUHV
        MVIUQUPGVFEUOIUEUIUGUJUKLULUM $.
        $( [19-Feb-1996] $)

      ${
        $( (We don't bother to eliminate this redundant hypothesis.) $)
        caoprord2.3 $e |- C e. _V $.
        caoprord2.com $e |- ( x F y ) = ( y F x ) $.
        $( Operation ordering law with commuted arguments. $)
        caoprord2 $p |- ( C e. S -> ( A R B <-> ( A F C ) R ( B F C ) ) ) $=
          ( wcel wbr co caoprord caoprcom breq12i syl6bb ) FHODEGPFDIQZFEIQZGPD
          FIQZEFIQZGPABCDEFGHIJKLRUBUDUCUEGABFDIMJNSABFEIMKNSTUA $.
          $( [27-Feb-1996] $)

        ${
          $( (We don't bother to eliminate redundant hypotheses.) $)
          caoprord3.4 $e |- D e. _V $.
          $( Ordering law. $)
          caoprord3 $p |- ( ( ( B e. S /\ C e. S ) /\
                    ( A F B ) = ( C F D ) ) -> ( A R C <-> D R B ) ) $=
            ( wcel wa co wceq wbr wb caoprord2 adantr breq1 sylan9bb caoprord 
            ad2antlr bitr4d ) EIQZFIQZRZDEJSZFGJSZTZRDFHUAZUNFEJSZHUAZGEHUAZULU
            PUMUQHUAZUOURUJUPUTUBUKABCDFEHIJKNMLOUCUDUMUNUQHUEUFUKUSURUBUJUOABC
            GEFHIJPLMUGUHUI $.
            $( [29-Feb-1996] $)
        $}
      $}
    $}

    ${
      caoprdistr.1 $e |- A e. _V $.
      caoprdistr.2 $e |- B e. _V $.
      caoprdistr.3 $e |- C e. _V $.
      caoprdistr.4 $e |- ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) $.
      $( Convert an operation distributive law to class notation. $)
      caoprdistr $p |- ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) $=
        ( cv co wceq opreq1 opreq12d eqeq12d opreq2d opreq2 opreq1d syl3an9b 
        vtocl3 ) AMZBMZCMZGNZHNZUDUEHNZUDUFHNZGNZOZDEFGNZHNZDEHNZDFHNZGNZOZABCD
        EFIJKUDDOZULDUGHNZDUEHNZDUFHNZGNZOUEEOZDEUFGNZHNZUOVBGNZOUFFOZURUSUHUTU
        KVCUDDUGHPUSUIVAUJVBGUDDUEHPUDDUFHPQRVDUTVFVCVGVDUGVEDHUEEUFGPSVDVAUOVB
        GUEEDHTUARVHVFUNVGUQVHVEUMDHUFFEGTSVHVBUPUOGUFFDHTSRUBLUC $.
        $( [25-Aug-1995] $)
    $}

    ${
      caopr.1 $e |- A e. _V $.
      caopr.2 $e |- B e. _V $.
      caopr.3 $e |- C e. _V $.
      caopr.com $e |- ( x F y ) = ( y F x ) $.
      caopr.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      $( Rearrange arguments in a commutative, associative operation. $)
      caopr32 $p |- ( ( A F B ) F C ) = ( ( A F C ) F B ) $=
        ( co caoprcom opreq2i caoprass 3eqtr4i ) DEFGMZGMDFEGMZGMDEGMFGMDFGMEGM
        RSDGABEFGIJKNOABCDEFGHIJLPABCDFEGHJILPQ $.
        $( [26-Aug-1995] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr12 $p |- ( A F ( B F C ) ) = ( B F ( A F C ) ) $=
        ( co caoprcom opreq1i caoprass 3eqtr3i ) DEGMZFGMEDGMZFGMDEFGMGMEDFGMGM
        RSFGABDEGHIKNOABCDEFGHIJLPABCEDFGIHJLPQ $.
        $( [26-Aug-1995] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr31 $p |- ( ( A F B ) F C ) = ( ( C F B ) F A ) $=
        ( co caoprass caopr12 eqtri caopr32 eqtr3i 3eqtr4i ) DFGMEGMZFDEGMZGMZU
        AFGMFEGMZDGMZTDUCGMUBABCDFEGHJILNABCDFEGHJIKLOPABCDEFGHIJKLQFDGMEGMUDUB
        ABCFDEGJHIKLQABCFDEGJHILNRS $.
        $( [26-Aug-1995] $)

      $( Rearrange arguments in a commutative, associative operation. $)
      caopr13 $p |- ( A F ( B F C ) ) = ( C F ( B F A ) ) $=
        ( co caopr31 caoprass 3eqtr3i ) DEGMFGMFEGMDGMDEFGMGMFEDGMGMABCDEFGHIJK
        LNABCDEFGHIJLOABCFEDGJIHLOP $.
        $( [26-Aug-1995] $)

      ${
        caopr.4 $e |- D e. _V $.
        $( Rearrange arguments in a commutative, associative operation. $)
        caopr4 $p |- ( ( A F B ) F ( C F D ) ) = ( ( A F C ) F ( B F D ) ) $=
          ( co caopr12 opreq2i oprex caoprass 3eqtr4i ) DEFGHOZHOZHODFEGHOZHOZH
          ODEHOUAHODFHOUCHOUBUDDHABCEFGHJKNLMPQABCDEUAHIJFGHRMSABCDFUCHIKEGHRMS
          T $.
          $( [26-Aug-1995] $)

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr411 $p |- ( ( A F B ) F ( C F D ) ) = ( ( C F B ) F ( A F D ) ) $=
          ( co caopr31 opreq1i oprex caoprass 3eqtr3i ) DEHOZFHOZGHOFEHOZDHOZGH
          OUAFGHOHOUCDGHOHOUBUDGHABCDEFHIJKLMPQABCUAFGHDEHRKNMSABCUCDGHFEHRINMS
          T $.
          $( [26-Aug-1995] $)

        $( Rearrange arguments in a commutative, associative operation. $)
        caopr42 $p |- ( ( A F B ) F ( C F D ) ) =
                        ( ( A F C ) F ( D F B ) ) $=
          ( co caopr4 caoprcom opreq2i eqtri ) DEHOFGHOHODFHOZEGHOZHOTGEHOZHOAB
          CDEFGHIJKLMNPUAUBTHABEGHJNLQRS $.
          $( [26-Aug-1995] $)
      $}
    $}

    ${
      caoprd.1 $e |- A e. _V $.
      caoprd.2 $e |- B e. _V $.
      caoprd.3 $e |- C e. _V $.
      caoprd.com $e |- ( x G y ) = ( y G x ) $.
      caoprd.distr $e |- ( x G ( y F z ) ) = ( ( x G y ) F ( x G z ) ) $.
      $( Reverse distributive law. $)
      caoprdistrr $p |- ( ( A F B ) G C ) = ( ( A G C ) F ( B G C ) ) $=
        ( co caoprdistr oprex caoprcom opreq12i 3eqtr3i ) FDEGNZHNFDHNZFEHNZGNT
        FHNDFHNZEFHNZGNABCFDEGHKIJMOABFTHKDEGPLQUAUCUBUDGABFDHKILQABFEHKJLQRS 
        $.
        $( [26-Aug-1995] $)

      ${
        $d x y z H $.  $d x y z R $.
        caoprdl.4 $e |- D e. _V $.
        caoprdl.5 $e |- H e. _V $.
        caoprdl.ass $e |- ( ( x G y ) G z ) = ( x G ( y G z ) ) $.
        $( Lemma used by real number construction. $)
        caoprdilem $p |- ( ( ( A G C ) F ( B G D ) ) G H ) =
                         ( ( A G ( C G H ) ) F ( B G ( D G H ) ) ) $=
          ( co oprex caoprdistrr caoprass opreq12i eqtri ) DFISZEGISZHSJISUEJIS
          ZUFJISZHSDFJISISZEGJISISZHSABCUEUFJHIDFITEGITQNOUAUGUIUHUJHABCDFJIKMQ
          RUBABCEGJILPQRUBUCUD $.
          $( [26-Aug-1995] $)

        ${
          caoprdl2.6 $e |- R e. _V $.
          caoprdl2.com $e |- ( x F y ) = ( y F x ) $.
          caoprdl2.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
          $( Lemma used in real number construction. $)
          caoprlem2 $p |- ( ( ( ( A G C ) F ( B G D ) ) G H ) F
                            ( ( ( A G D ) F ( B G C ) ) G R ) ) =
   ( ( A G ( ( C G H ) F ( D G R ) ) ) F ( B G ( ( C G R ) F ( D G H ) ) ) ) $=
            ( co oprex caopr42 caoprdilem opreq12i caoprdistr 3eqtr4i ) DFKJUCZ
            JUCZEGKJUCZJUCZIUCZDGHJUCZJUCZEFHJUCZJUCZIUCZIUCUKUPIUCZURUMIUCZIUC
            DFJUCEGJUCIUCKJUCZDGJUCEFJUCIUCHJUCZIUCDUJUOIUCJUCZEUQULIUCJUCZIUCA
            BCUKUMUPURIDUJJUDEULJUDDUOJUDUAUBEUQJUDUEVBUNVCUSIABCDEFGIJKLMNOPQR
            SUFABCDEGFIJHLMQOPNTSUFUGVDUTVEVAIABCDUJUOIJLFKJUDGHJUDPUHABCEUQULI
            JMFHJUDGKJUDPUHUGUI $.
            $( [26-Aug-1995] $)
        $}
      $}
    $}

    ${
      $d x y z w v $.  $d w v S $.  $d w v A $.  $d w v B $.  $d w v F $.
      caoprmo.1 $e |- A e. _V $.
      $( Identity element. $)
      caoprmo.2 $e |- B e. S $.
      caoprmo.dom $e |- dom F = ( S X. S ) $.
      caoprmo.3 $e |- -. (/) e. S $.
      caoprmo.com $e |- ( x F y ) = ( y F x ) $.
      caoprmo.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
      caoprmo.id $e |- ( x e. S -> ( x F B ) = x ) $.
      $( Uniqueness of inverse element in commutative, associative operation
         with identity.  Remark in proof of Proposition 9-2.4 of [Gleason]
         p. 119. $)
      caoprmo $p |- E* w ( A F w ) = B $=
        ( vv cv wcel co wceq wa wmo wi wal eleq1 opreq2 eqeq1d anbi12d mo4 
        opreq1 id eqeq12d vtoclga sylan9eqr visset caoprass caopr12 eqtri 
        syl5eq ad2ant2rl elisseti caoprcom sylan9eq ad2ant2lr eqtr3d ax-gen 
        mpgbir mpbiri ndmoprrcl simprd syl ancri immoi ax-mp ) DQZGRZEVOHSZFTZU
        AZDUBZVRDUBVTVSPQZGRZEWAHSZFTZUAZUAZVOWATZUCZPUDDVSWEDPWGVPWBVRWDVOWAGU
        EWGVQWCFVOWAEHUFUGUHUIWHPWFVQWAHSZVOWAVPWDWIVOTVRWBVPWDUAVOWCHSZVOWIWDV
        PWJVOFHSZVOWCFVOHUFAQZFHSZWLTZWKVOTAVOGWLVOTZWMWKWLVOWLVOFHUJWOUKULOUMU
        NWIEVOWAHSHSWJABCEVOWAHIDUOZPUOZNUPABCEVOWAHIWPWQMNUQURUSUTVRWBWIWATVPW
        DVRWBWIFWAHSZWAVQFWAHUJWBWAFHSZWAWRWNWSWATAWAGWLWATZWMWSWLWAWLWAFHUJWTU
        KULOUMABFWAHFGJVAWQMVBUSVCVDVEVFVGVRVSDVRVPVRVQGRZVPVRXAFGRJVQFGUEVHXAE
        GRVPEVOGHWPKLVIVJVKVLVMVN $.
        $( [4-Mar-1996] $)
    $}
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        "Maps to" notation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c |-> $.  $( Maps-to symbol $)

  $( Extend the definition of a class to include maps-to notation for defining
     a function via a rule. $)
  cmpt $a class ( x e. A |-> B ) $.

  $( Extend the definition of a class to include maps-to notation for defining
     an operation via a rule. $)
  cmpt2 $a class ( x e. A , y e. B |-> C ) $.

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Define maps-to notation for defining a function via a rule.  Read as
       "the function defined by the map from ` x ` (in ` A ` ) to
       ` B ( x ) ` ."  The class expression ` B ` is the value of the function
       at ` x ` and normally contains the variable ` x ` .  An example is the
       square function for complex numbers, ` ( x e. CC |-> ( x ^ 2 ) ` .
       Similar to the definition of mapping in [ChoquetDD] p. 2. $)
    df-mpt $a |- ( x e. A |-> B ) =
                    { <. x , y >. | ( x e. A /\ y = B ) } $.
  $}

  ${
    $d x z $.  $d y z $.  $d z A $.  $d z B $.  $d z C $.
    $( Define maps-to notation for defining an operation via a rule.  Read as
       "the operation defined by the map from ` x , y ` (in ` A X. B ` ) to
       ` B ( x , y ) ` ."  An extension of ~ df-mpt for two arguments. $)
    df-mpt2 $a |- ( x e. A , y e. B |-> C ) =
             { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C ) } $.
  $}

  ${
    $d y A $.  $d y C $.  $d y B $.  $d y D $.  $d x y ph $.
    mpteq12dv.1 $e |- ( ph -> A = C ) $.
    mpteq12dv.2 $e |- ( ph -> B = D ) $.
    $( An equality inference for the maps to notation. $)
    mpteq12dv $p |- ( ph -> ( x e. A |-> B ) = ( x e. C |-> D ) ) $=
      ( vy cv wcel wceq wa copab cmpt eleq2d eqeq2d anbi12d opabbidv df-mpt 
      3eqtr4g ) ABJZCKZIJZDLZMZBINUBEKZUDFLZMZBINBCDOBEFOAUFUIBIAUCUGUEUHACEUBG
      PADFUDHQRSBICDTBIEFTUA $.
      $( [24-Aug-2011] $)
  $}

  ${
    $d z A $.  $d z B $.  $d z C $.  $d z D $.  $d z E $.  $d z F $.
    $d x y z ph $.
    mpt2eq123dv.1 $e |- ( ph -> A = D ) $.
    mpt2eq123dv.2 $e |- ( ph -> B = E ) $.
    mpt2eq123dv.3 $e |- ( ph -> C = F ) $.
    $( An equality inference for the maps to notation. $)
    mpt2eq123dv $p |- ( ph
            -> ( x e. A , y e. B |-> C ) = ( x e. D , y e. E |-> F ) ) $=
      ( vz cv wcel wa wceq copab2 cmpt2 eleq2d anbi12d eqeq2d oprabbidv 
      df-mpt2 3eqtr4g ) ABNZDOZCNZEOZPZMNZFQZPZBCMRUFGOZUHHOZPZUKIQZPZBCMRBCDEF
      SBCGHISAUMURBCMAUJUPULUQAUGUNUIUOADGUFJTAEHUHKTUAAFIUKLUBUAUCBCMDEFUDBCMG
      HIUDUE $.
      $( [12-Sep-2011] $)
  $}

  ${
    $d y A $.  $d y C $.  $d y B $.  $d y D $.  $d x y $.
    mpteqi.1 $e |- A = C $.
    mpteqi.2 $e |- B = D $.
    $( An equality inference for the maps to notation.  (Contributed by Scott
       Fenton, 27-Oct-2010.) $)
    mpteqi $p |- ( x e. A |-> B ) = ( x e. C |-> D ) $=
      ( vy cv wcel wceq wa copab cmpt eleq2i eqeq2i anbi12i opabbii df-mpt 
      3eqtr4i ) AIZBJZHIZCKZLZAHMUADJZUCEKZLZAHMABCNADENUEUHAHUBUFUDUGBDUAFOCEU
      CGPQRAHBCSAHDEST $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d ph x y $.
    mpteq2dv.1 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Slightly more general equality inference for the maps to notation.
       (Contributed by Scott Fenton, 25-Apr-2012.) $)
    mpteq2dv $p |- ( ph -> ( x e. A |-> B ) = ( x e. A |-> C ) ) $=
      ( vy cv wcel wceq wa copab cmpt eqeq2d pm5.32da opabbidv df-mpt 3eqtr4g 
      ) ABHCIZGHZDJZKZBGLSTEJZKZBGLBCDMBCEMAUBUDBGASUAUCASKDETFNOPBGCDQBGCEQR 
      $.
      $( [25-Apr-2012] $)
  $}

  ${
    $d A z $.  $d B z $.  $d x y $.  $d x z $.
    $( Bound-variable hypothesis builder for a function in maps-to notation.
       (Contributed by FL, 17-Feb-2008.) $)
    hbmpt1 $p |- ( y e. ( x e. A |-> B ) -> A. x y e. ( x e. A |-> B ) ) $=
      ( vz cmpt cv wcel wceq wa copab df-mpt hbopab1 hbxfr ) ABACDFAGCHEGDIJZAE
      KAECDLOAEBMN $.
      $( [9-Sep-2010] $) $( [17-Feb-2008] $)
  $}

  ${
    $d v w x A $.  $d v w y A $.  $d v w z B $.  $d v w z C $.
    cbvmpt.1 $e |- ( z e. B -> A. y z e. B ) $.
    cbvmpt.2 $e |- ( z e. C -> A. x z e. C ) $.
    cbvmpt.3 $e |- ( x = y -> B = C ) $.
    $( Rule to change the bound variable in a maps-to function, using implicit
       substitution.  This version has bound-variable hypotheses in place of
       distinct variable conditions. $)
    cbvmpt $p |- ( x e. A |-> B ) = ( y e. A |-> C ) $=
      ( vw vv cv wcel wceq wa copab cmpt wsbc ax-17 hbs1 hban eleq1 sbequ12 
      anbi12d cbvopab1 hblem hbeleq hbsb sbequ eqeq2d sbie syl6bb eqtri df-mpt 
      3eqtr4i ) ALZDMZJLZENZOZAJPZBLZDMZURFNZOZBJPZADEQBDFQVAKLZDMZUSAVGRZOZKJP
      VFUTVJAJKUTKSVHVIAVHASUSAKTUAUPVGNUQVHUSVIUPVGDUBUSAKUCUDUEVJVEKJBVHVIBVH
      BSUSAKBBJEBCJEGUFUGUHUAVEKSVGVBNZVHVCVIVDVGVBDUBVKVIUSAVBRVDUSKBAUIUSVDAB
      AJFACJFHUFUGUPVBNEFURIUJUKULUDUEUMAJDEUNBJDFUNUO $.
      $( [11-Sep-2011] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( If the domain of a function given by maps-to notation is a set, the
       function is a set.  (Contributed by FL, 6-Jun-2011.) $)
    mptexg $p |- ( A e. C -> ( x e. A |-> B ) e. _V ) $=
      ( vy wcel cv wceq wa copab cvv cmpt opabex2g df-mpt syl5eqel ) BDFAGBFEGC
      HIAEJKABCLAEBCDMAEBCNO $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    $( If the domain of a function given by maps-to notation is a set, the
       function is a set. $)
    mpt2exg $p |- ( ( A e. R /\ B e. S )
                       -> ( x e. A , y e. B |-> C ) e. _V ) $=
      ( vz wcel wa cv wceq copab2 cvv cmpt2 eqid oprabex2g df-mpt2 syl5eqel ) 
      CFIDGIJAKCIBKDIJHKELJABHMZNABCDEOABHCDEFGTTPQABHCDERS $.
      $( [12-Sep-2011] $)
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    rnmpt.1 $e |- F = ( x e. A |-> B ) $.
    $( The range of the mapping operation.  (Contributed by Scott Fenton,
       21-Mar-2011.) $)
    rnmpt $p |- ran F = { y | E. x e. A y = B } $=
      ( crn cv wcel wceq wa copab wrex cab cmpt df-mpt eqtri rneqi rnopab2 ) EG
      AHCIBHDJZKABLZGTACMBNEUAEACDOUAFABCDPQRABCDSQ $.
      $( [21-Mar-2011] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C y $.  $d x D y $.
    fvmptg.1 $e |- ( x = A -> B = C ) $.
    fvmptg.2 $e |- F = ( x e. D |-> B ) $.
    $( Value of a function given by a maps-to rule.  Equivalent to
       ~ fvopab4g . $)
    fvmptg $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( vy cmpt cv wcel wceq wa copab df-mpt eqtri fvopab4g ) AJBCDEFGHGAECKALE
      MJLCNOAJPIAJECQRS $.
      $( [4-Aug-2008] $) $( [2-Oct-2007] $)

    ${
      fvmpt.3 $e |- C e. _V $.
      $( Value of a function given by a maps-to rule. $)
      fvmpt $p |- ( A e. D -> ( F ` A ) = C ) $=
        ( wcel cvv cfv wceq fvmptg mpan2 ) BEJDKJBFLDMIABCDEKFGHNO $.
        $( [17-Aug-2011] $)
    $}
  $}

  ${
    $d x y z A $.  $d B y z $.  $d x C y z $.  $d x D y z $.  $d x G $.
    $d z R $.  $d y S z $.
    ovmpt2g.1 $e |- ( x = A -> R = G ) $.
    ovmpt2g.2 $e |- ( y = B -> G = S ) $.
    ovmpt2g.3 $e |- F = ( x e. C , y e. D |-> R ) $.
    $( Value of an operation given by a maps-to rule.  Equivalent to
       ~ oprabval2g .  (Unnecessary distinct variable restrictions were removed
       by David Abernethy, 19-Jun-2012.) $)
    ovmpt2g $p |- ( ( A e. C /\ B e. D /\ S e. H ) -> ( A F B ) = S ) $=
      ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri oprabval2g ) ABOCDEFGHIJK
      LMIABEFGPAQERBQFRSOQGTSABOUANABOEFGUBUCUD $.
      $( [24-Jul-2012] $) $( [2-Oct-2007] $)

    ${
      ovmpt2.4 $e |- S e. _V $.
      $( Value of an operation given by a maps-to rule.  Equivalent to
         ~ oprabval2 . $)
      ovmpt2 $p |- ( ( A e. C /\ B e. D ) -> ( A F B ) = S ) $=
        ( wcel cvv co wceq ovmpt2g mp3an3 ) CEODFOHPOCDIQHRNABCDEFGHIJPKLMST $.
        $( [12-Sep-2011] $)
    $}
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        First and second members of an ordered pair
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c 1st $. $( First member of an ordered pair $)
  $c 2nd $. $( Second member of an ordered pair $)

  $( Extend the definition of a class to include the first member an ordered
     pair function. $)
  c1st $a class 1st $.

  $( Extend the definition of a class to include the second member an ordered
     pair function. $)
  c2nd $a class 2nd $.

  ${
    $d x y z $.
    $( Define a function that extracts the first member, or abscissa, of an
       ordered pair.  Theorem ~ op1st proves that it does this.  Equivalent to
       Definition 5.13 (i) of [Monk1] p. 52 (compare ~ op1sta and ~ op1stb ).
       The notation is the same as Monk's. $)
    df-1st $a |- 1st = { <. x , y >. | y = U. dom { x } } $.

    $( Define a function that extracts the second member, or ordinate, of an
       ordered pair.  Theorem ~ op2nd proves that it does this.  Equivalent to
       Definition 5.13 (ii) of [Monk1] p. 52 (compare ~ op2nda and ~ op2ndb ).
       The notation is the same as Monk's. $)
    df-2nd $a |- 2nd = { <. x , y >. | y = U. ran { x } } $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The value of the function that extracts the first member of an ordered
       pair. $)
    1stval $p |- ( 1st ` A ) = U. dom { A } $=
      ( vy vx cvv wcel c1st cfv csn cdm cuni wceq snex dmex uniex wa cv copab 
      sneq dmeqd unieqd fvopabg df-1st fveq1i syl5eq mpan2 wn c0 fvprc snprc 
      biimpi dm0 syl6eq uni0 eqtr4d pm2.61i ) ADEZAFGZAHZIZJZKZUPUTDEZVAUSURALM
      NUPVBOABPCPZHZIZJZKCBQZGUTUQCBAVFUTDDVCAKZVEUSVHVDURVCARSTUAAFVGCBUBUCUDU
      EUPUFZUQUGUTAFUHVIUTUGJUGVIUSUGVIUSUGIUGVIURUGVIURUGKAUIUJSUKULTUMULUNUO 
      $.
      $( [9-Oct-2004] $)

    $( The value of the function that extracts the second member of an ordered
       pair. $)
    2ndval $p |- ( 2nd ` A ) = U. ran { A } $=
      ( vy vx cvv wcel c2nd cfv csn crn cuni wceq snex rnex uniex wa cv copab 
      sneq rneqd unieqd fvopabg df-2nd fveq1i syl5eq mpan2 wn c0 fvprc snprc 
      biimpi rn0 syl6eq uni0 eqtr4d pm2.61i ) ADEZAFGZAHZIZJZKZUPUTDEZVAUSURALM
      NUPVBOABPCPZHZIZJZKCBQZGUTUQCBAVFUTDDVCAKZVEUSVHVDURVCARSTUAAFVGCBUBUCUDU
      EUPUFZUQUGUTAFUHVIUTUGJUGVIUSUGVIUSUGIUGVIURUGVIURUGKAUIUJSUKULTUMULUNUO 
      $.
      $( [9-Oct-2004] $)
  $}

  $( The value of the first-member function at the empty set. $)
  1st0 $p |- ( 1st ` (/) ) = (/) $=
    ( c0 c1st cfv csn cdm cuni 1stval dmsn0 unieqi uni0 3eqtri ) ABCADEZFAFAAGL
    AHIJK $.
    $( [23-Apr-2007] $)

  $( The value of the second-member function at the empty set. $)
  2nd0 $p |- ( 2nd ` (/) ) = (/) $=
    ( c0 c2nd cfv csn crn cuni 2ndval cdm wceq dmsn0 dm0rn0 mpbi unieqi uni0 
    3eqtri ) ABCADZEZFAFAAGQAPHAIQAIJPKLMNO $.
    $( [23-Apr-2007] $)

  ${
    op1st.1 $e |- A e. _V $.
    $( Extract the first member of an ordered pair. $)
    op1st $p |- ( 1st ` <. A , B >. ) = A $=
      ( cop c1st cfv csn cdm cuni 1stval op1sta eqtri ) ABDZEFMGHIAMJABCKL $.
      $( [5-Oct-2004] $)

    ${
      op2n.2 $e |- B e. _V $.
      $( Extract the second member of an ordered pair. $)
      op2nd $p |- ( 2nd ` <. A , B >. ) = B $=
        ( cop c2nd cfv csn crn cuni 2ndval op2nda eqtri ) ABEZFGNHIJBNKABCDLM 
        $.
        $( [5-Oct-2004] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Extract the first member of an ordered pair. $)
    op1stg $p |- ( A e. C -> ( 1st ` <. A , B >. ) = A ) $=
      ( vx cv cop c1st cfv wceq opeq1 fveq2d id eqeq12d visset op1st vtoclg ) 
      DEZBFZGHZQIABFZGHZAIDACQAIZSUAQAUBRTGQABJKUBLMQBDNOP $.
      $( [19-Jul-2005] $)

    $( Extract the second member of an ordered pair. $)
    op2ndg $p |- ( ( A e. C /\ B e. D ) -> ( 2nd ` <. A , B >. ) = B ) $=
      ( vx vy cv cop c2nd cfv wceq opeq1 fveq2d eqeq1d opeq2 id eqeq12d visset 
      op2nd vtocl2g ) EGZFGZHZIJZUBKAUBHZIJZUBKABHZIJZBKEFABCDUAAKZUDUFUBUIUCUE
      IUAAUBLMNUBBKZUFUHUBBUJUEUGIUBBAOMUJPQUAUBERFRST $.
      $( [19-Jul-2005] $)

    $( Alternate value of the function that extracts the first member of an
       ordered pair.  Definition 5.13 (i) of [Monk1] p. 52. $)
    1stval2 $p |- ( A e. ( _V X. _V ) -> ( 1st ` A ) = |^| |^| A ) $=
      ( vx vy cvv cxp wcel cv cop wceq wex c1st cfv cint elvv visset op1st 
      op1stb eqtr4i fveq2 inteq inteqd 3eqtr4a 19.23aivv sylbi ) ADDEFABGZCGZHZ
      IZCJBJAKLZAMZMZIZBCANUHULBCUHUGKLZUGMZMZUIUKUMUEUOUEUFBOZPUEUFUPQRAUGKSUH
      UJUNAUGTUAUBUCUD $.
      $( [18-Aug-2006] $)

    $( Alternate value of the function that extracts the second member of an
       ordered pair.  Definition 5.13 (ii) of [Monk1] p. 52. $)
    2ndval2 $p |- ( A e. ( _V X. _V )
               -> ( 2nd ` A ) = |^| |^| |^| `' { A } ) $=
      ( vx vy cvv cxp wcel cv cop wceq wex c2nd cfv csn ccnv cint elvv visset 
      op2nd op2ndb eqtr4i fveq2 sneq cnveq syl inteqd 3eqtr4a 19.23aivv sylbi 
      ) ADDEFABGZCGZHZIZCJBJAKLZAMZNZOZOZOZIZBCAPULUSBCULUKKLZUKMZNZOZOZOZUMURU
      TUJVEUIUJBQZCQZRUIUJVFVGSTAUKKUAULUQVDULUPVCULUOVBULUNVAIUOVBIAUKUBUNVAUC
      UDUEUEUEUFUGUH $.
      $( [18-Aug-2006] $)
  $}

  ${
    $d x y z w v A $.  $d x y z B $.  $d x y z w v u $.
    $( The ` 1st ` function maps the universe onto the universe. $)
    fo1st $p |- 1st : _V -onto-> _V $=
      ( vy vx cvv c1st wfo cv csn cdm cuni wceq copab wfn crn df-fo snex dmex 
      uniex wcel wa visset biantrur opabbii fnopab2 wex cab cop op1sta eqcomi 
      opex sneq dmeqd unieqd eqeq2d cla4ev ax-mp equid 2th abbii rnopab df-v 
      3eqtr4i mpbir2an wb df-1st foeq1 mpbir ) CCDEZCCAFZBFZGZHZIZJZBAKZEZVOVNC
      LVNMZCJCCVNNBACVLVNVKVJVIOPQVMVICRZVMSBAVQVMBTUAUBUCVMBUDZAUEVHVHJZAUEVPC
      VRVSAVRVSVHVHVHUFZGZHZIZJZVRWCVHVHVHATUGUHVMWDBVTVHVHUIVIVTJZVLWCVHWEVKWB
      WEVJWAVIVTUJUKULUMUNUOAUPUQURVMBAUSAUTVAVBDVNJVGVOVCBAVDCCDVNVEUOVF $.
      $( [14-Oct-2004] $)

    $d x y z w v A $.  $d x y z B $.  $d x y z w v u $.
    $( The ` 2nd ` function maps the universe onto the universe. $)
    fo2nd $p |- 2nd : _V -onto-> _V $=
      ( vy vx cvv c2nd wfo cv csn crn cuni wceq copab wfn df-fo snex rnex 
      uniex wcel wa visset biantrur opabbii fnopab2 wex cab cop op2nda eqcomi 
      opex sneq rneqd unieqd eqeq2d cla4ev ax-mp equid 2th abbii rnopab df-v 
      3eqtr4i mpbir2an wb df-2nd foeq1 mpbir ) CCDEZCCAFZBFZGZHZIZJZBAKZEZVNVMC
      LVMHZCJCCVMMBACVKVMVJVIVHNOPVLVHCQZVLRBAVPVLBSTUAUBVLBUCZAUDVGVGJZAUDVOCV
      QVRAVQVRVGVGVGUEZGZHZIZJZVQWBVGVGVGASZWDUFUGVLWCBVSVGVGUHVHVSJZVKWBVGWEVJ
      WAWEVIVTVHVSUIUJUKULUMUNAUOUPUQVLBAURAUSUTVADVMJVFVNVBBAVCCCDVMVDUNVE $.
      $( [14-Oct-2004] $)

    $( Mapping of a restriction of the ` 1st ` (first member of an ordered
       pair) function. $)
    f1stres $p |- ( 1st |` ( A X. B ) ) : ( A X. B ) --> A $=
      ( vx vy vz cv csn cdm cuni wcel cxp wral c1st cres wf cop visset op1sta 
      eleq1i biimpri adantr rgen2 wceq sneq dmeqd unieqd eleq1d ralxp mpbir 
      copab wa df-1st reseq1 ax-mp resopab eqtri fopab2 mpbi ) CFZGZHZIZAJZCABK
      ZLZVDAMVDNZOVEDFZEFZPZGZHZIZAJZEBLDALVMDEABVGAJZVMVHBJVMVNVLVGAVGVHDQRSTU
      AUBVCVMCDEABUSVIUCZVBVLAVOVAVKVOUTVJUSVIUDUEUFUGUHUICDVDAVBVFVFVGVBUCZCDU
      JZVDNZUSVDJVPUKCDUJMVQUCVFVRUCCDULMVQVDUMUNVPCDVDUOUPUQUR $.
      $( [11-Oct-2004] $)

    $( Mapping of a restriction of the ` 2nd ` (second member of an ordered
       pair) function. $)
    f2ndres $p |- ( 2nd |` ( A X. B ) ) : ( A X. B ) --> B $=
      ( vx vy vz cv csn crn cuni wcel cxp wral c2nd cres wf cop visset op2nda 
      eleq1i biimpri adantl rgen2 wceq sneq rneqd unieqd eleq1d ralxp mpbir 
      copab wa df-2nd reseq1 ax-mp resopab eqtri fopab2 mpbi ) CFZGZHZIZBJZCABK
      ZLZVDBMVDNZOVEDFZEFZPZGZHZIZBJZEBLDALVMDEABVHBJZVMVGAJVMVNVLVHBVGVHDQEQRS
      TUAUBVCVMCDEABUSVIUCZVBVLBVOVAVKVOUTVJUSVIUDUEUFUGUHUICDVDBVBVFVFVGVBUCZC
      DUJZVDNZUSVDJVPUKCDUJMVQUCVFVRUCCDULMVQVDUMUNVPCDVDUOUPUQUR $.
      $( [7-Aug-2006] $)

    $( Onto mapping of a restriction of the ` 1st ` (first member of an ordered
       pair) function. $)
    fo1stres $p |- ( B =/= (/) ->
                 ( 1st |` ( A X. B ) ) : ( A X. B ) -onto-> A ) $=
      ( vx vy c0 wne cxp c1st cres wf crn wceq wa wfo wss cv wcel wex wi n0 
      cop visset opelxp cfv fvres op1st syl6req wfn f1stres ffn ax-mp fnfvelrn 
      mpan eqeltrd sylbir expcom 19.23aiv sylbi ssrdv frn jctil eqss sylibr 
      dffo2 ) BEFZABGZAHVFIZJZVGKZALZMVFAVGNVEVJVHVEVIAOZAVIOZMVJVEVLVKVECAVIVE
      DPZBQZDRCPZAQZVOVIQZSZDBTVNVRDVPVNVQVPVNMVOVMUAZVFQZVQVOVMABDUBUCVTVOVSVG
      UDZVIVTWAVSHUDVOVSVFHUEVOVMCUBUFUGVGVFUHZVTWAVIQVHWBABUIZVFAVGUJUKVFVSVGU
      LUMUNUOUPUQURUSVHVKWCVFAVGUTUKVAVIAVBVCWCVAVFAVGVDVC $.
      $( [14-Dec-2008] $)

    $( Onto mapping of a restriction of the ` 2nd ` (second member of an
       ordered pair) function. $)
    fo2ndres $p |- ( A =/= (/) ->
                 ( 2nd |` ( A X. B ) ) : ( A X. B ) -onto-> B ) $=
      ( vy vx c0 wne cxp c2nd cres wf crn wceq wa wfo wss cv wcel wex wi n0 
      cop visset opelxp cfv fvres op2nd syl6req wfn f2ndres ffn ax-mp fnfvelrn 
      mpan eqeltrd sylbir ex 19.23aiv sylbi ssrdv frn jctil eqss sylibr dffo2 
      ) AEFZABGZBHVFIZJZVGKZBLZMVFBVGNVEVJVHVEVIBOZBVIOZMVJVEVLVKVECBVIVEDPZAQZ
      DRCPZBQZVOVIQZSZDATVNVRDVNVPVQVNVPMVMVOUAZVFQZVQVMVOABCUBZUCVTVOVSVGUDZVI
      VTWBVSHUDVOVSVFHUEVMVODUBWAUFUGVGVFUHZVTWBVIQVHWCABUIZVFBVGUJUKVFVSVGULUM
      UNUOUPUQURUSVHVKWDVFBVGUTUKVAVIBVBVCWDVAVFBVGVDVC $.
      $( [14-Dec-2008] $)
  $}

  ${
    $d x y z w v $.  $d v w A $.
    $( Value of an alternate definition of the ` 1st ` function.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    1st2val $p |- ( { <. <. x , y >. , z >. | z = x } ` A ) = ( 1st ` A ) $=
      ( vw vv cvv cxp wcel cv wceq copab2 cfv c1st cop wex elvv co visset 
      op1st id eqidd eqid oprabval5 mp2an df-opr 3eqtr2ri fveq2 3eqtr4a 
      19.23aivv sylbi wn csn cdm cuni c0 wa copab pm3.2i a9e 2th opabbii df-xp 
      dmoprab 3eqtr4ri eleq2i notbii ndmfv sylbir wne dmsnn0 biimpri necon1bi 
      unieqd uni0 syl6eq eqtr4d 1stval syl6eqr pm2.61i ) DGGHZIZDCJAJZKZABCLZMZ
      DNMZKZWBDEJZFJZOZKZFPEPWHEFDQWLWHEFWLWKWEMZWKNMZWFWGWNWIWIWJWERZWMWIWJESZ
      TWIGIWJGIWOWIKWPFSABCWIWJGGWCWIWEWIWPWCWIKUABJZWJKWIUBWEUCUDUEWIWJWEUFUGD
      WKWEUHDWKNUHUIUJUKWBULZWFDUMUNZUOZWGWRWFUPWTWRDWEUNZIZULWFUPKXBWBXAWADWCG
      IZWQGIZUQZABURWDCPZABURWAXAXEXFABXEXFXCXDASBSUSCAUTVAVBABGGVCWDABCVDVEVFV
      GDWEVHVIWRWTUPUOUPWRWSUPWBWSUPWBWSUPVJDVKVLVMVNVOVPVQDVRVSVT $.
      $( [24-Jul-2012] $) $( [14-Oct-2004] $)

    $( Value of an alternate definition of the ` 2nd ` function. $)
    2nd2val $p |- ( { <. <. x , y >. , z >. | z = y } ` A ) = ( 2nd ` A ) $=
      ( vw vv cvv cxp wcel cv wceq copab2 cfv c2nd cop wex elvv co visset 
      op2nd eqidd id eqid oprabval5 mp2an df-opr 3eqtr2ri fveq2 3eqtr4a 
      19.23aivv sylbi wn csn crn cuni c0 cdm wa copab pm3.2i a9e 2th opabbii 
      df-xp dmoprab 3eqtr4ri eleq2i notbii ndmfv sylbir wne rnsnn0 biimpri 
      necon1bi unieqd uni0 syl6eq eqtr4d 2ndval syl6eqr pm2.61i ) DGGHZIZDCJBJZ
      KZABCLZMZDNMZKZWCDEJZFJZOZKZFPEPWIEFDQWMWIEFWMWLWFMZWLNMZWGWHWOWKWJWKWFRZ
      WNWJWKESZFSZTWJGIWKGIWPWKKWQWRABCWJWKGGWDWKWFWDWRAJZWJKWDUAWDWKKUBWFUCUDU
      EWJWKWFUFUGDWLWFUHDWLNUHUIUJUKWCULZWGDUMUNZUOZWHWTWGUPXBWTDWFUQZIZULWGUPK
      XDWCXCWBDWSGIZWDGIZURZABUSWECPZABUSWBXCXGXHABXGXHXEXFASBSUTCBVAVBVCABGGVD
      WEABCVEVFVGVHDWFVIVJWTXBUPUOUPWTXAUPWCXAUPWCXAUPVKDVLVMVNVOVPVQVRDVSVTWA 
      $.
      $( [18-Dec-2008] $) $( [10-Aug-2006] $)
  $}

  $( Composition of the first member function with another function. $)
  1stcof $p |- ( F : A --> ( B X. C ) -> ( 1st o. F ) : A --> B ) $=
    ( c1st ccom wf wfn crn wss cxp df-f cvv fnfco wfo fo1st fofn ax-mp ffn 
    dffn2 sylib sylancr cres frn ssres2 rnss 3syl f1stres a1i sstrd rnco 
    syl5ss sylanbrc ) ABEDFZGUNAHZUNIZBJABCKZDGZABUNLEMHZAMDGZUOURMAEDNMMEOUSPM
    MEQRURDAHUTAUQDSADTUAUBUREDIZUCZIZBUPURVCEUQUCZIZBURVAUQJVBVDJVCVEJAUQDUDVA
    UQEUEVBVDUFUGVEBJZURUQBVDGVFBCUHUQBVDUDRUIUJEDUKULUM $.
    $( [12-Oct-2007] $)

  ${
    $d A b c $.  $d B b c $.  $d C b c $.
    $( Location of the first element of a Cartesian product.  (Contributed by
       Jeff Madsen, 2-Sep-2009.) $)
    xp1st $p |- ( A e. ( B X. C ) -> ( 1st ` A ) e. B ) $=
      ( vb vc cxp wcel cv cop wceq wa wex c1st cfv elxp fveq2 visset op1st 
      syl6eq eleq1d biimpar adantrr 19.23aivv sylbi ) ABCFGADHZEHZIZJZUEBGZUFCG
      ZKKZELDLAMNZBGZDEABCOUKUMDEUHUIUMUJUHUMUIUHULUEBUHULUGMNUEAUGMPUEUFDQRSTU
      AUBUCUD $.
      $( [1-Dec-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    $d A b c $.  $d B b c $.  $d C b c $.
    $( Location of the second element of a Cartesian product.  (Contributed by
       Jeff Madsen, 2-Sep-2009.) $)
    xp2nd $p |- ( A e. ( B X. C ) -> ( 2nd ` A ) e. C ) $=
      ( vb vc cxp wcel cv cop wceq wa wex c2nd cfv elxp fveq2 visset op2nd 
      syl6eq eleq1d biimpar adantrl 19.23aivv sylbi ) ABCFGADHZEHZIZJZUEBGZUFCG
      ZKKZELDLAMNZCGZDEABCOUKUMDEUHUJUMUIUHUMUJUHULUFCUHULUGMNUFAUGMPUEUFDQEQRS
      TUAUBUCUD $.
      $( [1-Dec-2010] $) $( [2-Sep-2009] $)
  $}

  $( Membership in a cross product.  This version requires no quantifiers or
     dummy variables.  See also ~ elxp4 . $)
  elxp6 $p |- ( A e. ( B X. C ) <-> ( A = <. ( 1st ` A ) , ( 2nd ` A ) >.
               /\ ( ( 1st ` A ) e. B /\ ( 2nd ` A ) e. C ) ) ) $=
    ( cxp wcel csn cdm cuni crn cop wceq wa c1st cfv c2nd elxp4 1stval 2ndval 
    opeq12i eqeq2i eleq1i anbi12i bitr4i ) ABCDEAAFZGHZUDIHZJZKZUEBEZUFCEZLZLAA
    MNZAONZJZKZULBEZUMCEZLZLABCPUOUHURUKUNUGAULUEUMUFAQZARZSTUPUIUQUJULUEBUSUAU
    MUFCUTUAUBUBUC $.
    $( [9-Oct-2004] $)

  $( Membership in a cross product.  This version requires no quantifiers or
     dummy variables.  See also ~ elxp4 . $)
  elxp7 $p |- ( A e. ( B X. C ) <-> ( A e. ( _V X. _V )
               /\ ( ( 1st ` A ) e. B /\ ( 2nd ` A ) e. C ) ) ) $=
    ( cxp wcel c1st cfv c2nd cop wceq wa cvv elxp6 fvex pm3.2i mpbiran2 anbi1i 
    bitr4i ) ABCDEAAFGZAHGZIJZSBETCEKZKALLDEZUBKABCMUCUAUBUCUASLEZTLEZKALLMUDUE
    AFNAHNOPQR $.
    $( [19-Aug-2006] $)

  ${
    $d A x $.  $d B x $.  $d C x $.  $d D x $.
    $( Difference of Cartesian products, expressed in terms of a union of
       Cartesian products of differences.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    difxp $p |- ( ( C X. D ) \ ( A X. B ) ) =
                        ( ( ( ( C \ A ) X. D ) u. ( C X. ( D \ B ) ) )
                                          u. ( ( C \ A ) X. ( D \ B ) ) ) $=
      ( vx cxp cdif cun cv wcel wn wa wo c2nd cfv c1st cop wceq elxp6 biimpri 
      anassrs an32s ex con3d expimpd ancomsd anim2d eldif anim1i syl6 
      imdistani sylibr sylanb orcd simpl anim12i an42s anim2i adantllr anbi12i 
      olcd pm2.61dan elun orbi1i orass 3bitri 3imtr4i wss difss ssid xpss12 
      mp2an sseli xp1st eldifn con3i 3syl jca xp2nd jaoi sylbi impbii eqriv ) 
      ECDFZABFZGZCAGZDFZCDBGZFZHZWGWIFZHZEIZWFJZWNWMJZWNWDJZWNWEJZKZLZWNWHJZWNW
      JJZWNWLJZMZMZWOWPWTWNNOZBJZXEWTXGLXAXDWQWSXGXAWNWNPOZXFQRZXHCJZXFDJZLZLZW
      SXGLZXAWQXMXNLXIXHWGJZXKLZLZXAXIXLXNXQXIXLXNLZXPXIXRXLXHAJZKZLXPXIXNXTXLX
      IXGWSXTXIXGWSXTXIXGLZXSWRYAXSWRXIXSXGWRXIXSXGWRWRXIXSXGLLWNABSTUAUBUCUDUE
      UFUGXJXTXKXPXJXTLZXOXKXOYBXHCAUHZTUIUBUJUKUAWNWGDSULWNCDSZUMUAUNWTXGKZLZX
      DXAYFXSXDYFXSLXBXCWQYEXSXBWSWQYEXSXBXMYEXSLZXBWQXMYGLXIXJXFWIJZLZLZXBXIXL
      YGYJXLYGLYIXIXJXSXKYEYIXJXSLXJXKYELZYHXJXSUOYHYKXFDBUHZTUPUQURUAWNCWISULY
      DUMUAUSUNYFXTLXCXBWQYEXTXCWSWQYEXTXCXMYEXTLZXCWQXMYMLXIXOYHLZLZXCXIXLYMYO
      XLYMLYNXIXJXTXKYEYNYNYBYKLXOYBYHYKYCYLUTTUQURUAWNWGWISULYDUMUAUSVAVBVAVBW
      NWDWEUHZWPWNWKJZXCMZXAXBMZXCMXEWNWKWLVCZYQYSXCWNWHWJVCZVDXAXBXCVEVFVGYRWT
      WPWOYQWTXCYQYSWTUUAXAWTXBXAWQWSWHWDWNWGCVHZDDVHWHWDVHCAVIZDVJWGCDDVKVLVMX
      AXOXTWSWNWGDVNXHCAVOZWRXSWNABVNVPZVQVRXBWQWSWJWDWNCCVHWIDVHZWJWDVHCVJDBVI
      ZCCWIDVKVLVMXBYHYEWSWNCWIVSXFDBVOWRXGWNABVSVPVQVRVTWAXCWQWSWLWDWNUUBUUFWL
      WDVHUUCUUGWGCWIDVKVLVMXCXOXTWSWNWGWIVNUUDUUEVQVRVTYTYPVGWBWC $.
      $( [2-Sep-2009] $)
  $}

  $( Equality with an ordered pair. $)
  eqopi $p |- ( ( A e. ( _V X. _V ) /\ ( ( 1st ` A ) = B /\ ( 2nd ` A ) = C ) )
              -> A = <. B , C >. ) $=
    ( cvv cxp wcel c1st cfv wceq c2nd wa cop elxp6 simplbi opeq12 sylan9eq ) AD
    DEFZAGHZBIAJHZCIKARSLZBCLQATIRDFSDFKADDMNRSBCOP $.
    $( [15-Dec-2008] $)

  ${
    eqop.1 $e |- C e. _V $.
    $( Two ways to express equality with an ordered pair. $)
    eqop $p |- ( A e. ( _V X. _V ) -> ( A = <. B , C >. <->
               ( ( 1st ` A ) = B /\ ( 2nd ` A ) = C ) ) ) $=
      ( cvv cxp wcel cop wceq c1st cfv c2nd wa eleq1 biimpac opelxp1 syl fveq2 
      op1stg sylan9eqr op2ndg mpan2 jca sylancom eqopi impbida ) AEEFZGZABCHZIZ
      AJKZBIZALKZCIZMZUHUJBEGZUOUHUJMUIUGGZUPUJUHUQAUIUGNOBCEEPQUPUJMULUNUJUPUK
      UIJKBAUIJRBCESTUJUPUMUILKZCAUILRUPCEGURCIDBCEEUAUBTUCUDABCUEUF $.
      $( [3-Sep-2007] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Representation of cross product based on ordered pair component
       functions. $)
    xp2 $p |- ( A X. B ) = { x e. ( _V X. _V ) | ( ( 1st ` x ) e. A /\
              ( 2nd ` x ) e. B ) } $=
      ( cxp cv cvv wcel c1st cfv c2nd wa cab crab elxp7 abbi2i df-rab eqtr4i ) 
      BCDZAEZFFDZGSHIBGSJICGKZKZALUAATMUBARSBCNOUAATPQ $.
      $( [16-Sep-2006] $)
  $}

  $( An ordered pair theorem for members of cross products. $)
  xpopth $p |- ( ( A e. ( C X. D ) /\ B e. ( R X. S ) ) ->
       ( ( ( 1st ` A ) = ( 1st ` B ) /\
     ( 2nd ` A ) = ( 2nd ` B ) ) <-> A = B ) ) $=
    ( cxp wcel wa wceq c1st cfv c2nd cop elxp6 simplbi eqeqan12d fvex opth 
    syl6rbb ) ACDGHZBEFGHZIABJAKLZAMLZNZBKLZBMLZNZJUCUFJUDUGJIUAUBAUEBUHUAAUEJU
    CCHUDDHIACDOPUBBUHJUFEHUGFHIBEFOPQUCUDUFUGAKRAMRBMRST $.
    $( [20-Jun-2007] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( The membership relation for a cross product is inherited by union. $)
    unielxp $p |- ( A e. ( B X. C ) -> U. A e. U. ( B X. C ) ) $=
      ( vx cxp wcel cvv c1st cfv c2nd wa cuni elxp7 elvvuni adantr cv cab wex 
      simprl wceq eleq2 eleq1 fveq2 eleq1d anbi12d cla4egv mpcom eluniab 
      sylibr crab xp2 df-rab eqtri unieqi syl6eleqr mpancom sylbi ) ABCEZFAGGEZ
      FZAHIZBFZAJIZCFZKZKZALZURLZFZABCMVGAFZVFVIUTVJVEANOVJVFKZVGDPZUSFZVLHIZBF
      ZVLJIZCFZKZKZDQZLZVHVKVGVLFZVSKZDRZVGWAFUTVKWDVJUTVESWCVKDAUSVLATZWBVJVSV
      FVLAVGUAWEVMUTVRVEVLAUSUBWEVOVBVQVDWEVNVABVLAHUCUDWEVPVCCVLAJUCUDUEUEUEUF
      UGVSDVGUHUIURVTURVRDUSUJVTDBCUKVRDUSULUMUNUOUPUQ $.
      $( [16-Sep-2006] $)
  $}

  $( Reconstruction of a member of a relation in terms of its ordered pair
     components. $)
  1st2nd $p |- ( ( Rel B /\ A e. B ) ->
               A = <. ( 1st ` A ) , ( 2nd ` A ) >. ) $=
    ( wrel wcel wa cvv cxp c1st cfv c2nd cop wceq wss ssel2 df-rel sylanb 
    elxp6 simplbi syl ) BCZABDZEAFFGZDZAAHIZAJIZKLZBUBMUAUCTBUBANBOPUCUFUDFDUEF
    DEAFFQRS $.
    $( [29-Aug-2006] $)

  $( The first ordered pair component of a member of a relation belongs to the
     domain of the relation. $)
  1stdm $p |- ( ( Rel R /\ A e. R ) -> ( 1st ` A ) e. dom R ) $=
    ( wrel wcel wa c1st cfv cint cdm cvv cxp wceq wss df-rel biimpi sseld imp 
    1stval2 syl elreldm eqeltrd ) BCZABDZEZAFGZAHHZBIUDAJJKZDZUEUFLUBUCUHUBBUGA
    UBBUGMBNOPQARSBATUA $.
    $( [11-Jul-2007] $) $( [17-Sep-2006] $)

  $( The second ordered pair component of a member of a relation belongs to the
     range of the relation. $)
  2ndrn $p |- ( ( Rel R /\ A e. R ) -> ( 2nd ` A ) e. ran R ) $=
    ( wrel wcel wa c1st cfv c2nd cop crn 1st2nd simpr eqeltrrd fvex opelrn syl 
    ) BCZABDZEZAFGZAHGZIZBDUABJDSAUBBABKQRLMTUABAFNAHNOP $.
    $( [15-Aug-2007] $) $( [17-Sep-2006] $)

  $( Equality theorem for substitution of a class for an ordered pair (analog
     of ~ sbceq1a , that avoids the existential quantifiers of ~ copsexg ). $)
  sbcopeq1a $p |- ( <. x , y >. = A -> ( ph <->
                  [ ( 1st ` A ) / x ] [ ( 2nd ` A ) / y ] ph ) ) $=
    ( cv cop wceq c2nd cfv c1st wsbc wb fveq2 visset op2nd syl5eqr op1st 
    sbceq1a sylan9bb syl11anc ) BEZCEZFZDGZUBDHIZGZUADJIZGZAACUEKZBUGKZLUDUCHIU
    EUBUCDHMUAUBBNZCNOPUDUCJIUGUAUCDJMUAUBUKQPUFAUIUHUJACUERUIBUGRST $.
    $( [19-Jul-2007] $) $( [19-Aug-2006] $)

  $( Equality theorem for substitution of a class ` A ` for an ordered pair
     ` <. x , y >. ` in ` B ` (analog of ~ csbeq1a ). $)
  csbopeq1a $p |- ( <. x , y >. = A -> B =
                  [_ ( 1st ` A ) / x ]_ [_ ( 2nd ` A ) / y ]_ B ) $=
    ( cv cop wceq c2nd cfv c1st csb fveq2 visset op2nd syl5eqr op1st csbeq1a 
    sylan9eq syl11anc ) AEZBEZFZCGZUACHIZGZTCJIZGZDAUFBUDDKZKZGUCUBHIUDUAUBCHLT
    UAAMZBMNOUCUBJIUFTUBCJLTUAUJPOUEUGDUHUIBUDDQAUFUHQRS $.
    $( [19-Aug-2006] $)

  ${
    $d z ph $.  $d x y z $.
    $( A way to define an ordered-pair class abstraction without using
       existential quantifiers. $)
    dfopab2 $p |- { <. x , y >. | ph } = { z | ( z e. ( _V X. _V ) /\
                  [ ( 1st ` z ) / x ] [ ( 2nd ` z ) / y ] ph ) } $=
      ( copab cv cop wceq wa wex cab cvv cxp wcel c2nd cfv wsbc c1st df-opab 
      fvex hbsbc1v 19.41 wb fveq2 visset op2nd syl6req sbceq1a syl op1st bitrd 
      pm5.32i exbii wal wi ax-17 hbsbcg ax-mp bitri elvv anbi1i 3bitr4i abbii 
      eqtri ) ABCEDFZBFZCFZGZHZAIZCJZBJZDKVELLMNZACVEOPZQZBVERPZQZIZDKABCDSVLVR
      DVICJZVQIZBJVSBJZVQIVLVRVSVQBVOBVPVERTZUAUBVKVTBVKVIVQIZCJVTVJWCCVIAVQVIA
      VOVQVIVGVNHAVOUCVIVNVHOPVGVEVHOUDVFVGBUEZCUEUFUGACVNUHUIVIVFVPHVOVQUCVIVP
      VHRPVFVEVHRUDVFVGWDUJUGVOBVPUHUIUKULUMVIVQCVPLNVQVQCUNUOWBVOCBBVPLVFVPNCU
      PACVNVEOTUAUQURUBUSUMVMWAVQBCVEUTVAVBVCVD $.
      $( [18-Aug-2006] $)
  $}

  ${
    $d w ph $.  $d x y z w $.
    $( A way to define an operation class abstraction without using existential
       quantifiers. $)
    dfoprab3 $p |- { <. <. x , y >. , z >. | ph } = { <. w , z >. |
       ( w e. ( _V X. _V ) /\ [ ( 1st ` w ) / x ] [ ( 2nd ` w ) / y ] ph ) } $=
      ( copab2 cv cop wceq wa wex copab cvv cxp wcel c2nd cfv wsbc c1st 
      dfoprab2 fvex hbsbc1v 19.41 wb fveq2 visset op2nd syl6req sbceq1a syl 
      op1st bitrd pm5.32i exbii wal wi ax-17 hbsbcg ax-mp bitri elvv anbi1i 
      3bitr4i opabbii eqtri ) ABCDFEGZBGZCGZHZIZAJZCKZBKZEDLVFMMNOZACVFPQZRZBVF
      SQZRZJZEDLABCDETVMVSEDVJCKZVRJZBKVTBKZVRJVMVSVTVRBVPBVQVFSUAZUBUCVLWABVLV
      JVRJZCKWAVKWDCVJAVRVJAVPVRVJVHVOIAVPUDVJVOVIPQVHVFVIPUEVGVHBUFZCUFUGUHACV
      OUIUJVJVGVQIVPVRUDVJVQVISQVGVFVISUEVGVHWEUKUHVPBVQUIUJULUMUNVJVRCVQMOVRVR
      CUOUPWCVPCBBVQMVGVQOCUQACVOVFPUAUBURUSUCUTUNVNWBVRBCVFVAVBVCVDVE $.
      $( [18-Aug-2006] $)
  $}

  ${
    $d w ph $.  $d x y ps $.  $d x y z w $.
    dfoprab3s.1 $e |- ( <. x , y >. = w -> ( ph <-> ps ) ) $.
    $( Operation class abstraction expressed without existential
       quantifiers. $)
    dfoprab3s $p |- { <. <. x , y >. , z >. | ph }
                    = { <. w , z >. | ( w e. ( _V X. _V ) /\ ps ) } $=
      ( copab2 cv cvv cxp wcel c2nd cfv wsbc c1st wa copab dfoprab3 fvex wceq 
      wb cop eqopi eqcom anbi12i sylan2b eqcomd syl ex sbc2iedv pm5.32i 
      opabbii eqtri ) ACDEHFIZJJKLZADUOMNZOCUOPNZOZQZFERUPBQZFERACDEFSUTVAFEUPU
      SBUPABCDURUQUOPTUOMTUPCIZURUAZDIZUQUAZQZABUBZUPVFQZVBVDUCZUOUAVGVHUOVIUPU
      RVBUAZUQVDUAZQUOVIUAVFUOVBVDUDVCVJVEVKVBURUEVDUQUEUFUGUHGUIUJUKULUMUN $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d w x y A $.  $d w x y B $.  $d w C $.  $d x y D $.  $d w x y z $.
    dfoprab4s.1 $e |- ( <. x , y >. = w -> C = D ) $.
    $( Operation class abstraction expressed without existential
       quantifiers. $)
    dfoprab4s $p |- { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C )
           } = { <. w , z >. | ( w e. ( A X. B ) /\ z = D ) } $=
      ( cv wcel wa wceq copab2 cvv cxp copab cop eleq1 visset opelxp syl5bbr 
      eqeq2d anbi12d dfoprab3s xpss sseli adantr pm4.71ri opabbii eqtr4i ) AJZE
      KBJZFKLZCJZGMZLZABCNDJZOOPZKZUREFPZKZUOHMZLZLZDCQVDDCQUQVDABCDULUMRZURMZU
      NVBUPVCVGVFVAKVBUNVFURVASULUMEFBTUAUBVGGHUOIUCUDUEVDVEDCVDUTVBUTVCVAUSURE
      FUFUGUHUIUJUK $.
      $( [4-Jan-2009] $) $( [3-Sep-2007] $)
  $}

  ${
    $d w x y A $.  $d w x y B $.  $d w C $.  $d x y D $.  $d w x y z $.
    dfoprab5s.1 $e |- ( ( x = ( 1st ` w ) /\ y = ( 2nd ` w ) ) -> C = D ) $.
    $( Operation class abstraction expressed without existential
       quantifiers. $)
    dfoprab5s $p |- { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C )
           } = { <. w , z >. | ( w e. ( A X. B ) /\ z = D ) } $=
      ( cv cop wceq c1st cfv c2nd fveq2 visset op1st syl5eqr op2nd syl11anc 
      dfoprab4s ) ABCDEFGHAJZBJZKZDJZLZUCUFMNZLUDUFONZLGHLUGUEMNUHUCUEUFMPUCUDA
      QZRSUGUEONUIUDUEUFOPUCUDUJBQTSIUAUB $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d t u w x y A $.  $d t u w x y B $.  $d s t u w C $.  $d t u v D $.
    $d s t u v w x y z $.
    dfoprab5sf.x $e |- ( v e. D -> A. x v e. D ) $.
    dfoprab5sf.y $e |- ( v e. D -> A. y v e. D ) $.
    dfoprab5sf.1 $e |- ( ( x = ( 1st ` w ) /\ y = ( 2nd ` w ) ) -> C = D ) $.
    $( Operation class abstraction expressed without existential quantifiers.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    dfoprab5sf $p |- { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\
           z = C ) } = { <. w , z >. | ( w e. ( A X. B ) /\ z = D ) } $=
      ( vt vu vs cv wcel wa wceq copab2 csb cxp copab ax-17 visset hbcsb1 hbeq 
      hban cvv wal wi hbcsbg ax-mp eleq1 bi2anan9 csbeq1a sylan9eqr eqeq2d 
      anbi12d cbvoprab12 c1st cfv c2nd wex eqvinc anbi12i eeanv bicomi bitri 
      eqcomd sylan9eq an4s 19.23ai sylbi dfoprab5s eqtri ) APZFQZBPZGQZRZCPZHSZ
      RZABCTMPZFQZNPZGQZRZWBAWEBWGHUAZUAZSZRZMNCTDPZFGUBQWBISRDCUCWDWMABCMNWDMU
      DWDNUDWIWLAWIAUDAOOWBWKOPZWBQZAUDAOWEWJMUEZWOWEQZAUDUFZUGUHWIWLBWIBUDBOOW
      BWKWPBUDWEUIQWOWKQZWTBUJUKWQBAOWEWJUIWRBUDBOWGHNUEZWOWGQBUDUFULUMZUGUHVQW
      ESZVSWGSZRZWAWIWCWLXCVRWFXDVTWHVQWEFUNVSWGGUNUOXEHWKWBXDXCHWJWKBWGHUPAWEW
      JUPUQZURUSUTMNCDFGWKIWEWNVAVBZSZWGWNVCVBZSZRZXCVQXGSZRZXDVSXISZRZRZBVDZAV
      DZWKISZXKXMAVDZXOBVDZRZXRXHXTXJYAAWEXGWQVEBWGXIXAVEVFXRYBXMXOABVGVHVIXQXS
      AAOEWKIWSJUGXPXSBBOEWKIXBKUGXCXDXLXNXSXEXLXNRWKHIXEHWKXFVJLVKVLVMVMVNVOVP
      $.
      $( [24-Jul-2012] $) $( [20-Dec-2008] $)
  $}

  ${
    $d A u v w x y z $.  $d B u v w x y z $.  $d ph u v w $.  $d ps u v $.
    $d ch u v $.
    oprabopabf.1 $e |- ( ps -> A. x ps ) $.
    oprabopabf.2 $e |- ( ch -> A. y ch ) $.
    oprabopabf.3 $e |- ( x = ( 1st ` w ) -> ( ph <-> ps ) ) $.
    oprabopabf.4 $e |- ( y = ( 2nd ` w ) -> ( ps <-> ch ) ) $.
    $( Convert between operator and function class abstractions using ` 1st `
       and ` 2nd ` .  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    oprabopabf $p |- { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ ph ) }
                          = { <. w , z >. | ( w e. ( A X. B ) /\ ch ) } $=
      ( vu vv cv cop wceq wcel wa wex cab cxp copab2 copab ax-17 c2nd cfv wal 
      wi fvex isseti hbal hbim albidv imbi12d mpbii 19.23ai ax-mp hban hbex 
      opex opeq1 eqeq2d eleq1 c1st wb fveq2 visset op1st syl6req syl op2nd 
      bitr2d anbi12d cla4ev opelxpi sylanr1 wrel relxp 1st2nd mpan opeq1d 
      biimpac adantrr xp1st xp2nd jca ad2antrl simprr cvv opeq2 anbi2d cla4egf 
      anbi1d eximi excom sylib syl12anc 19.23aiv impbii exbii bitri 3bitr4i 
      abbii df-oprab df-opab 3eqtr4i ) NPZDPZEPZQZFPZQZRZXJHSZXKISZTZATZTZFUAEU
      AZDUAZNUBXIGPZXMQZRZYCHIUCZSZCTZTZFUAGUAZNUBXSDEFUDYHGFUEYBYJNXTEUAZDUAZF
      UAZYIGUAZFUAYBYJYLYNFYLYNYKYNDYIDGYEYHDYEDUFYGCDYGDUFXKYCUGUHZRZEUACCDUIZ
      UJZEYOYCUGUKZULYPYRECYQEKCEDKUMUNYPBBDUIZUJYRJYPBCYTYQMYPBCDMUOUPUQURUSUT
      UTVAXTYNEYIEGYEYHEYEEUFYGCEYGEUFKUTUTVAXOXLYFSZAYNXRYIXOUUAATZTGXLXJXKVBY
      CXLRZYEXOYHUUBUUCYDXNXIYCXLXMVCVDUUCYGUUACAYCXLYFVEUUCABCUUCXJYCVFUHZRZAB
      VGUUCUUDXLVFUHXJYCXLVFVHXJXKDVIZVJVKLVLUUCYPBCVGUUCYOXLUGUHXKYCXLUGVHXJXK
      UUFEVIVMVKMVLVNVOVOVPXJXKHIVQVRURURYIYLGYIXIUUDYOQZXMQZRZUUDHSZYOISZTZCYL
      YEYGUUICYGYEUUIYGYDUUHXIYGYCUUGXMYFVSYGYCUUGRHIVTYCYFWAWBWCVDWDWEYGUULYEC
      YGUUJUUKYCHIWFYCHIWGWHWIYEYGCWJUUIUULCTZTZXTDUAZEUAZYLUUNXIUUDXKQZXMQZRZU
      UJXQTZBTZTZEUAZUUPYOWKSUUNUVCUJYSUVBUUNEOYOWKOPZYOSEUFUUIUUMEUUIEUFUULCEU
      ULEUFKUTUTYPUUSUUIUVAUUMYPUURUUHXIYPUUQUUGXMXKYOUUDWLWCVDYPUUTUULBCYPXQUU
      KUUJXKYOIVEWMMVOVOWNUSUVBUUOEUUDWKSUVBUUOUJYCVFUKXTUVBDOUUDWKUVDUUDSDUFUU
      SUVADUUSDUFUUTBDUUTDUFJUTUTUUEXOUUSXSUVAUUEXNUURXIUUEXLUUQXMXJUUDXKVCWCVD
      UUEXRUUTABUUEXPUUJXQXJUUDHVEWOLVOVOWNUSWPVLXTEDWQWRWSWTXAXBYBYKFUAZDUAYMY
      AUVEDXTEFWQXBYKDFWQXCYIGFWQXDXEXSDEFNXFYHGFNXGXH $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d A w x y z $.  $d B w x y z $.  $d ph w $.  $d ps x $.  $d ch y $.
    oprabopab.1 $e |- ( x = ( 1st ` w ) -> ( ph <-> ps ) ) $.
    oprabopab.2 $e |- ( y = ( 2nd ` w ) -> ( ps <-> ch ) ) $.
    $( Convert between operator and function class abstractions using ` 1st `
       and ` 2nd ` .  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    oprabopab $p |- { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ ph ) }
                          = { <. w , z >. | ( w e. ( A X. B ) /\ ch ) } $=
      ( ax-17 oprabopabf ) ABCDEFGHIBDLCELJKM $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y A $.  $d x y ch $.
    elopabi.1 $e |- ( x = ( 1st ` A ) -> ( ph <-> ps ) ) $.
    elopabi.2 $e |- ( y = ( 2nd ` A ) -> ( ps <-> ch ) ) $.
    $( A consequence of membership in an ordered-pair class abstraction, using
       ordered pair extractors. $)
    elopabi $p |- ( A e. { <. x , y >. | ph } -> ch ) $=
      ( copab wcel c1st cfv c2nd cop wceq wrel relopab 1st2nd mpan eleq1 fvex 
      opelopab syl6bb biimpcd mpd ) FADEIZJZFFKLZFMLZNZOZCUFPUGUKADEQFUFRSUKUGC
      UKUGUJUFJCFUJUFTABCDEUHUIFKUAFMUAGHUBUCUDUE $.
      $( [29-Aug-2006] $)
  $}

  ${
    $d w x y z A $.  $d w ph $.  $d x y z th $.
    eloprabi.1 $e |- ( x = ( 1st ` ( 1st ` A ) ) -> ( ph <-> ps ) ) $.
    eloprabi.2 $e |- ( y = ( 2nd ` ( 1st ` A ) ) -> ( ps <-> ch ) ) $.
    eloprabi.3 $e |- ( z = ( 2nd ` A ) -> ( ch <-> th ) ) $.
    $( A consequence of membership in an operation class abstraction, using
       ordered pair extractors.  (Unnecessary distinct variable restrictions
       were removed by David Abernethy, 19-Jun-2012.) $)
    eloprabi $p |- ( A e. { <. <. x , y >. , z >. | ph } -> th ) $=
      ( vw copab2 wcel c1st cfv c2nd cop wceq wrel reloprab 1st2nd mpan cv cvv 
      cxp wsbc wa copab dfoprab3 eleq2i simpl ssopab2i sseli eleq1 biidd 
      elopabi relxp 3syl sylbi opeq1d eqtrd wb fvex eloprabg mp3an syl6bb 
      biimpcd mpd ) HAEFGMZNZHHOPZOPZVLQPZRZHQPZRZSZDVKHVLVPRZVQVJTVKHVSSAEFGUA
      HVJUBUCVKVLVOVPVKHLUDZUEUEUFZNZAFVTQPUGEVTOPUGZUHZLGUIZNZVLVOSZVJWEHAEFGL
      UJUKWFHWBLGUIZNVLWANZWGWEWHHWDWBLGWBWCULUMUNWBWIWILGHVTVLWAUOGUDVPSWIUPUQ
      WATWIWGUEUEURVLWAUBUCUSUTVAVBVRVKDVRVKVQVJNZDHVQVJUOVMUENVNUENVPUENWJDVCV
      LOVDVLQVDHQVDABCDEFGVMVNVPUEUEUEIJKVEVFVGVHVI $.
      $( [24-Jul-2012] $) $( [6-Nov-2006] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z C $.  $d w x y z D $.
    foprab2.1 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Mapping of an operation class abstraction. $)
    foprab2 $p |- ( A. x e. A A. y e. B C e. D <-> F : ( A X. B ) --> D ) $=
      ( vw wcel wral cv c1st cfv c2nd csb cxp wf fvex ax-17 hbcsb1 hbel cvv 
      wal wi hbcsbg ax-mp cop wceq csbopeq1a eqcoms eqcomd eleq1d ralxpf wa 
      copab2 wsbc copab dfoprab3 anass elxp7 anbi1i wb sbcang sbcgf sbcel1gv 
      anbi12i bitri sbceq2dig sbcbii 3bitri anbi2i 3bitr4i opabbii 3eqtr4i 
      fopab2 bitr3i ) FGKZBELADLAJMZNOZBVTPOZFQZQZGKZJDERZLWFGHSWEVSJABDEACCWDG
      ACWAWCVTNTZCMZWAKZAUAUBWHGKZAUAUCBCCWDGWAUDKZWHWDKZWLBUEUFWGBACWAWCUDWIBU
      ABCWBFVTPTZWHWBKBUAUBUGUHWJBUAUCVSJUAVTAMZBMZUIZUJZWDFGWQFWDFWDUJWPVTABVT
      FUKULUMUNUOJCWFGWDHWNDKZWOEKZUPZWHFUJZUPZABCUQVTUDUDRKZXBBWBURZAWAURZUPZJ
      CUSHVTWFKZWHWDUJZUPZJCUSXBABCJUTIXIXFJCXCWADKZWBEKZUPZUPZXHUPXCXLXHUPZUPX
      IXFXCXLXHVAXGXMXHVTDEVBVCXEXNXCXEWRXKUPZWHWCUJZUPZAWAURZXOAWAURZXPAWAURZU
      PZXNWKXEXRVDWGXDXQAWAUDXDWTBWBURZXABWBURZUPZXQWBUDKZXDYDVDWMWTXABWBUDVEUH
      YBXOYCXPYBWRBWBURZWSBWBURZUPZXOYEYBYHVDWMWRWSBWBUDVEUHYFWRYGXKYEYFWRVDWMW
      RBWBUDWRBUAVFUHYEYGXKVDWMBWBEUDVGUHVHVIYEYCXPVDWMBWBWHFUDVJUHVHVIVKUHWKXR
      YAVDWGXOXPAWAUDVEUHXSXLXTXHXSWRAWAURZXKAWAURZUPZXLWKXSYKVDWGWRXKAWAUDVEUH
      YIXJYJXKWKYIXJVDWGAWADUDVGUHWKYJXKVDWGXKAWAUDXKAUAVFUHVHVIWKXTXHVDWGAWAWH
      WCUDVJUHVHVLVMVNVOVPVQVR $.
      $( [18-Aug-2006] $)

    ${
      foprab.2 $e |- ( ( x e. A /\ y e. B ) -> C e. D ) $.
      $( Mapping of an operation class abstraction. $)
      foprab $p |- F : ( A X. B ) --> D $=
        ( wcel wral cxp wf rgen2 foprab2 mpbi ) FGKZBELADLDEMGHNRABDEJOABCDEFGH
        IPQ $.
        $( [1-Jan-2007] $)
    $}
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    fnoprab2g.1 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Functionality and domain of an operation class abstraction. $)
    fnoprab2g $p |- ( A. x e. A A. y e. B C e. _V <-> F Fn ( A X. B ) ) $=
      ( cvv wcel wral cxp wf wfn foprab2 dffn2 bitr4i ) FIJBEKADKDELZIGMGRNABCD
      EFIGHORGPQ $.
      $( [29-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    fnoprab2.1 $e |- C e. _V $.
    fnoprab2.2 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Functionality and domain of an operation class abstraction. $)
    fnoprab2 $p |- F Fn ( A X. B ) $=
      ( cvv wcel wral cxp wfn cv wa a1i rgen2 fnoprab2g mpbi ) FJKZBELADLGDEMNU
      AABDEUAAODKBOEKPHQRABCDEFGIST $.
      $( [26-Aug-1995] $)

    $( Domain of an operation class abstraction. $)
    dmoprab2 $p |- dom F = ( A X. B ) $=
      ( cxp wfn cdm wceq fnoprab2 fndm ax-mp ) GDEJZKGLQMABCDEFGHINQGOP $.
      $( [23-Sep-2004] $)
  $}

  ${
    fnoprab2ga.1 $e |- F = ( x e. A , y e. B |-> C ) $.
    ${
      $d A x y z $.  $d B x y z $.  $d C z $.
      $( Functionality and domain of a class given by the "maps to" notation.
         Analogous to ~ fnoprab2g .  (Contributed by FL, 17-May-2010.) $)
      fnoprab2ga $p |- ( A. x e. A A. y e. B C e. _V <-> F Fn ( A X. B ) ) $=
        ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri fnoprab2g ) ABHCDEFFABC
        DEIAJCKBJDKLHJEMLABHNGABHCDEOPQ $.
        $( [17-May-2010] $)
    $}

    ${
      fnoprab2g.2 $e |- C e. _V $.
      ${
        $d A x y z $.  $d B x y z $.  $d C z $.
        $( Functionality and domain of a class given by the "maps to"
           notation.  Analogous to ~ fnoprab2a .  (Contributed by FL,
           17-May-2010.) $)
        fnoprab2a $p |- F Fn ( A X. B ) $=
          ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri fnoprab2 ) ABICDEFHFA
          BCDEJAKCLBKDLMIKENMABIOGABICDEPQR $.
          $( [17-May-2010] $)

        $( Domain of a class given by the "maps to" notation.  Analogous to
           ~ dmoprab2a .  (Contributed by FL, 17-May-2010.) $)
        dmoprab2a $p |- dom F = ( A X. B ) $=
          ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri dmoprab2 ) ABICDEFHFA
          BCDEJAKCLBKDLMIKENMABIOGABICDEPQR $.
          $( [17-May-2010] $)
      $}

      ${
        $d A x y z $.  $d B x y z $.  $d C z $.  $d D x y z $.
        $( Functionality, domain and range of a class given by the "maps to"
           notation.  Analogous to ~ foprab2a .  (Contributed by FL,
           17-May-2010.) $)
        foprab2a $p |- ( A. x e. A A. y e. B C e. D
          <-> F : ( A X. B ) --> D ) $=
          ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri foprab2 ) ABJCDEFGGAB
          CDEKALCMBLDMNJLEONABJPHABJCDEQRS $.
          $( [17-May-2010] $)
      $}

    $}

    ${
      $d A x y z $.  $d B x y z $.  $d C z $.  $d D x $.  $d X x y z $.
      $d Y x y z $.  $d Z y z $.
      oprabval2ga.1 $e |- ( x = X -> C = D ) $.
      oprabval2ga.2 $e |- ( y = Y -> D = Z ) $.
      $( Todo: change the variables. $)
      $( The value of an operation class abstraction.  Special case.  Analogous
         to ~ oprabval2g .  (Contributed by FL, 17-May-2010.) $)
      oprabval2ga $p |- ( ( X e. A /\ Y e. B /\ Z e. N )
          -> ( X F Y ) = Z ) $=
        ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri oprabval2g ) ABOIJCDEKG
        FHMNGABCDEPAQCRBQDRSOQETSABOUALABOCDEUBUCUD $.
        $( [17-May-2010] $)

    $}

    ${
      $d A x y z $.  $d B x y z $.  $d C z $.
      $( Existence of an operation class abstraction (special case).
         (Contributed by FL, 17-May-2010.) $)
      oprabex2ga $p |- ( ( A e. R /\ B e. S ) -> F e. _V ) $=
        ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri oprabex2g ) ABJCDEFGHHA
        BCDEKALCMBLDMNJLEONABJPIABJCDEQRS $.
        $( [17-May-2010] $)
    $}
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d z C $.  $d x y w v u D $.
    $d w v u F $.
    elrnoprabg.1 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Membership in the range of an operation class abstraction. $)
    elrnoprabg $p |- ( A. x e. A A. y e. B C e. R ->
                     ( D e. ran F <-> E. x e. A E. y e. B D = C ) ) $=
      ( vw vv vu wcel wral cxp wfn crn wceq wrex wb cvv elisset ralimi 
      fnoprab2g sylib cv cfv fvelrnb co hbra1 wa ax-17 hbral hban ra42 w3a 
      oprabval4g eqeq1d eqcom syl6bb 3expia sylcom exp3a imp31 rexbida cop 
      fveq2 df-opr syl6eqr rexxp copab2 hboprab1 hbxfr hbopr hbeq hbrex opreq1 
      rexbidv cbvrex hboprab2 opreq2 rexbii 3bitri syl5bb sylan9bbr mpdan ) FHN
      ZBEOZADOZIDEPZQZGIRNZGFSZBETZADTZUAWJFUBNZBEOZADOWLWIWRADWHWQBEFHUCUDUDAB
      CDEFIJUEUFWLWMKUGZIUHZGSZKWKTZWJWPKWKGIUIWJAUGZBUGZIUJZGSZBETZADTZWPXBWJX
      GWOADWIADUKWJXCDNZULXFWNBEWJXIBWIBADXIBUMZWHBEUKUNXJUOWJXIXDENZXFWNUAZWJX
      IXKXLWJXIXKULZWHXLWHABDEUPXIXKWHXLXIXKWHUQZXFFGSWNXNXEFGABCDEFHIJURUSFGUT
      VAVBVCVDVEVFVFXBLUGZMUGZIUJZGSZMETZLDTXCXPIUJZGSZMETZADTXHXAXRKLMDEWSXOXP
      VGZSZWTXQGYDWTYCIUHXQWSYCIVHXOXPIVIVJUSVKXSYBLADXRAMEXPENAUMAKKXQGAKXOXPI
      WSXONAUMAKIXMCUGFSULZABCVLZJYEABCKVMVNWSXPNZAUMVOWSGNZAUMVPVQYBLUMXOXCSZX
      RYAMEYIXQXTGXOXCXPIVRUSVSVTYBXGADYAXFMBEBKKXTGBKXCXPIWSXCNBUMBKIYFJYEABCK
      WAVNYGBUMVOYHBUMVPXFMUMXPXDSXTXEGXPXDXCIWBUSVTWCWDWEWFWG $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d z C $.  $d x y w v u D $.
    $d w v u F $.
    elrnoprab.1 $e |- C e. _V $.
    elrnoprab.2 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
             /\ z = C ) } $.
    $( Membership in the range of an operation class abstraction. $)
    elrnoprab $p |- ( D e. ran F <-> E. x e. A E. y e. B D = C ) $=
      ( cvv wcel wral crn wceq wrex wb elrnoprabg cv a1i rgen mprg ) FKLZBEMZGH
      NLGFOBEPADPQADABCDEFGKHJRUDASDLUCBEUCBSELITUATUB $.
      $( [1-Aug-2004] $)
  $}

  ${
    $d A u v w x y z $.  $d B u v w x y z $.  $d C u v w z $.
    $d D u v w x y z $.  $d F u v $.  $d G u v z $.  $d H u v w x y z $.
    oprabco.1 $e |- ( ( x e. A /\ y e. B ) -> C e. D ) $.
    oprabco.2 $e |- F = { <. <. x , y >. , z >. |
                                ( ( x e. A /\ y e. B ) /\ z = C ) } $.
    oprabco.3 $e |- G = { <. <. x , y >. , w >. |
                                ( ( x e. A /\ y e. B ) /\ w = ( H ` C ) ) } $.
    $( Composition of a function with an operator abstraction.  (Contributed by
       Jeff Madsen, 2-Sep-2009.) $)
    oprabco $p |- ( H Fn D -> G = ( H o. F ) ) $=
      ( vu vv wfn ccom wceq cxp cv cfv wral wa wb eqfnfv fvex fnoprab2 crn wss 
      wf foprab ffn ax-mp frn fnco mp3an23 sylancr eqidd wcel c2nd c1st csb 
      xp1st xp2nd rgen2 ax-17 hbcsb1 hbel hbral csbeq1a eleq1d ralbidv rcla4 
      sylan9 mpi syl11anc fveq2 csbeq1d cvv csbeq2dv mpan2 eqtrd copab2 copab 
      hbeq eqeq2d oprabopabf eqtri fvopab4g mpdan adantl fveq2d csbfv2g 
      csbeq2i syl6eqr wfun cdm fnfun adantr a1i fdmi eleq2i biimpri fvco 
      syl111anc csbex 3eqtr4rd r19.21aiva mpbir2and ) KHQZJKIRZSZEFTZXNSZOUAZJU
      BZXPXLUBZSZOXNUCZJXNQXLXNQZXMXOXTUDUEXKOXNXNJXLUFABDEFGKUBZJGKUGZNUHXKIXN
      QZIUIHUJZYAXNHIUKZYDABCEFGHIMLULZXNHIUMUNZYFYEYGXNHIUOUNHXNKIUPUQURXKXNUS
      XKXSOXNXKXPXNUTZUDZXPIUBZKUBZBXPVAUBZAXPVBUBZYBVCZVCZXRXQYJYLBYMAYNGVCZVC
      ZKUBZYPYJYKYRKYIYKYRSZXKYIYRHUTZYTYIYNEUTZYMFUTZUUAXPEFVDXPEFVEUUBUUCUDGH
      UTZBFUCZAEUCZUUAUUDABEFLVFUUBUUFYQHUTZBFUCZUUCUUAUUEUUHAYNEUUGABFBUAZFUTZ
      AVGAPPYQHAPYNGXPVBUGZPUAZYNUTAVGVHUULHUTZAVGVIVJAUAZYNSZUUDUUGBFUUOGYQHAY
      NGVKVLVMVNUUGUUABYMFBPPYRHBPYMYQXPVAUGZUULYMUTBVGVHUUMBVGVIUUIYMSYQYRHBYM
      YQVKVLVNVOVPVQPCXPBUULVAUBZAUULVBUBZGVCZVCZYRXNHIUULXPSZUUTBYMUUSVCZYRUVA
      BUUQYMUUSUULXPVAVRZVSUVAYMVTUTZUVBYRSUUPUVABYMUUSYQVTUVAAUURYNGUULXPVBVRZ
      VSWAWBWCIUUNEUTUUJUDZCUAZGSZUDABCWDUULXNUTZUVGUUTSZUDPCWEMUVHUVGUUSSUVJAB
      CPEFAOOUVGUUSXPUVGUTZAVGAOUURGUULVBUGZXPUURUTAVGZVHWFBOOUVGUUTUVKBVGBOUUQ
      UUSUULVAUGZXPUUQUTBVGZVHWFUUNUURSZGUUSUVGAUURGVKWGUUIUUQSZUUSUUTUVGBUUQUU
      SVKWGWHWIWJWKWLWMYPBYMYQKUBZVCZYSUVDYPUVSSUUPBYMYOUVRVTYNVTUTYOUVRSUUKAYN
      GVTKWNUNWOUNUVDUVSYSSUUPBYMYQVTKWNUNWIWPYJKWQZIWQZXPIWRZUTZXRYLSXKUVTYIHK
      WSWTUWAYJYDUWAYHXNIWSUNXAYIUWCXKUWCYIUWBXNXPXNHIYGXBXCXDWLXPKIXEXFYIXQYPS
      ZXKYIYPVTUTUWDBYMYOUUPAYNYBUUKYCXGXGPDXPBUUQAUURYBVCZVCZYPXNVTJUVAUWFBYMU
      WEVCZYPUVABUUQYMUWEUVCVSUVAUVDUWGYPSUUPUVABYMUWEYOVTUVAAUURYNYBUVEVSWAWBW
      CJUVFDUAZYBSZUDABDWDUVIUWHUWFSZUDPDWENUWIUWHUWESUWJABDPEFAOOUWHUWEXPUWHUT
      ZAVGAOUURYBUVLUVMVHWFBOOUWHUWFUWKBVGBOUUQUWEUVNUVOVHWFUVPYBUWEUWHAUURYBVK
      WGUVQUWEUWFUWHBUUQUWEVKWGWHWIWJWBWLXHXIXJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C z w $.  $d D z w $.  $d R x y z w $.
    $d S x y z w $.  $d M x y z w $.  $d F w $.  $d G z $.
    oprab2co.1 $e |- ( ( x e. A /\ y e. B ) -> C e. R ) $.
    oprab2co.2 $e |- ( ( x e. A /\ y e. B ) -> D e. S ) $.
    oprab2co.3 $e |- F = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B )
                                                  /\ z = <. C , D >. ) } $.
    oprab2co.4 $e |- G = { <. <. x , y >. , w >. | ( ( x e. A /\ y e. B )
                                                  /\ w = ( C M D ) ) } $.
    $( Composition of operator abstractions.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    oprab2co $p |- ( M Fn ( R X. S ) -> G = ( M o. F ) ) $=
      ( cop cxp cv wcel wa opelxpi syl11anc co wceq copab2 cfv df-opr eqeq2i 
      anbi2i oprabbii eqtri oprabco ) ABCDEFGHRZIJSZKLMATEUABTFUAUBZGIUAHJUAUOU
      PUANOGHIJUCUDPLUQDTZGHMUEZUFZUBZABDUGUQURUOMUHZUFZUBZABDUGQVAVDABDUTVCUQU
      SVBURGHMUIUJUKULUMUN $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y A $.  $d y B $.
    mptfng.1 $e |- F = ( x e. A |-> B ) $.
    $( The mapping notation defines a function over ` A ` .  (Contributed by
       Scott Fenton, 21-Mar-2011.) $)
    mptfng $p |- ( A. x e. A B e. _V <-> F Fn A ) $=
      ( vy cmpt cv wcel wceq wa copab df-mpt eqtri fnopab2g ) AFBCDDABCGAHBIFHC
      JKAFLEAFBCMNO $.
      $( [21-Mar-2011] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    mpt2fng.1 $e |- F = ( x e. A , y e. B |-> C ) $.
    $( The mapping notation defines an operation over ` A X. B ` . $)
    mpt2fng $p |- ( A. x e. A A. y e. B C e. _V <-> F Fn ( A X. B ) ) $=
      ( vz cmpt2 cv wcel wa wceq copab2 df-mpt2 eqtri fnoprab2g ) ABHCDEFFABCDE
      IAJCKBJDKLHJEMLABHNGABHCDEOPQ $.
      $( [28-Oct-2012] $)
  $}

  ${
    $d w x y z $.
    $( An alternate possible definition of the ` 1st ` function. $)
    df1st2 $p |- { <. <. x , y >. , z >. | z = x } = ( 1st |` ( _V X. _V ) ) $=
      ( vw cv c1st cfv wceq copab cvv cxp cres wcel wa copab2 resopab wfn wfo 
      fo1st fofn ax-mp dffn5 mpbi visset biantrur opabbii eqtr4i reseq1 cop 
      fveq2 op1st syl5eqr eqeq2d dfoprab3s 3eqtr4ri ) CEZDEZFGZHZDCIZJJKZLZUQVA
      MUSNDCIFVALZUPAEZHZABCOUSDCVAPFUTHVCVBHFUQJMZUSNZDCIZUTFJQZFVHHJJFRVISJJF
      TUADCJFUBUCUSVGDCVFUSDUDUEUFUGFUTVAUHUAVEUSABCDVDBEZUIZUQHZVDURUPVLVKFGUR
      VDVKUQFUJVDVJAUDUKULUMUNUO $.
      $( [10-Jan-2009] $) $( [14-Oct-2004] $)

    $( An alternate possible definition of the ` 2nd ` function. $)
    df2nd2 $p |- { <. <. x , y >. , z >. | z = y } = ( 2nd |` ( _V X. _V ) ) $=
      ( vw cv c2nd cfv wceq copab cvv cxp cres wcel wa copab2 resopab wfn wfo 
      fo2nd fofn ax-mp dffn5 mpbi visset biantrur opabbii eqtr4i reseq1 cop 
      fveq2 op2nd syl5eqr eqeq2d dfoprab3s 3eqtr4ri ) CEZDEZFGZHZDCIZJJKZLZUQVA
      MUSNDCIFVALZUPBEZHZABCOUSDCVAPFUTHVCVBHFUQJMZUSNZDCIZUTFJQZFVHHJJFRVISJJF
      TUADCJFUBUCUSVGDCVFUSDUDUEUFUGFUTVAUHUAVEUSABCDAEZVDUIZUQHZVDURUPVLVKFGUR
      VDVKUQFUJVJVDAUDBUDUKULUMUNUO $.
      $( [16-Jan-2009] $) $( [10-Aug-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( The mapping of a restriction of the ` 1st ` function to a constant
       function. $)
    1stconst $p |- ( B e. C ->
             ( 1st |` ( A X. { B } ) ) : ( A X. { B } ) -1-1-onto-> A ) $=
      ( vx vy csn cxp c1st cres wf1o wfo ccnv wfun wcel dff1o3 c0 wne snnzg 
      fo1stres syl cv wbr wmo wal cop wceq wa moeq moani ax-17 cfv cvv c2nd 
      eleq1 biimpa adantrr adantrl eqopi an12s elsni sylanr2 adantrrl jca 
      elxp7 sylan2b adantl fveq2 visset op1st syl6eq ad2antll simprr simprl 
      snidg adantr opelxpi syl11anc eqeltrd impbida wfn wb fo1st fofn ax-mp 
      fnbrfvb mp2an anbi1i syl5bbr brres syl5bb mobid mpbiri 19.21aiv funcnv2 
      sylibr sylanbrc ) ABFZGZAHWRIZJWRAWSKZWSLMZBCNZWRAWSOXBWQPQWTBCRAWQSTXBDU
      AZEUAZWSUBZDUCZEUDXAXBXFEXBXFXDANZXCXDBUEZUFZUGZDUCXIXGDDXHUHUIXBXEXJDXBD
      UJXBXCXDHUBZXCWRNZUGZXJXEXBXCHUKZXDUFZXLUGZXJXMXBXPXJXPXJXBXOXCULULGNZXNA
      NZXCUMUKZWQNZUGZUGZXJXLXOYBUGXGXIXOYAXGXQXOXRXGXTXOXRXGXNXDAUNUOUPUQXOXQX
      TXIXRXOXQXSBUFZXIXTXQXOYCXIXCXDBURUSXSBUTVAVBVCXCAWQVDVEVFXBXJUGZXOXLXIXO
      XBXGXIXNXHHUKXDXCXHHVGXDBEVHZVIVJVKYDXCXHWRXBXGXIVLYDXGBWQNZXHWRNXBXGXIVM
      XBYFXJBCVNVOXDBAWQVPVQVRVCVSXOXKXLHULVTZXCULNXOXKWAULULHKYGWBULULHWCWDDVH
      ULXCXDHYEWEWFWGWHXCXDHWRYEWIWJWKWLWMDEWSWNWOWP $.
      $( [14-Dec-2008] $)

    $( The mapping of a restriction of the ` 2nd ` function to a converse
       constant function. $)
    2ndconst $p |- ( A e. C ->
             ( 2nd |` ( { A } X. B ) ) : ( { A } X. B ) -1-1-onto-> B ) $=
      ( vx vy csn cxp c2nd cres wf1o wfo ccnv wfun wcel dff1o3 c0 wne snnzg 
      fo2ndres syl cv wbr wmo wal cop wceq wa moeq moani ax-17 cfv cvv c1st 
      eleq1 biimpa adantrl eqopi ancom2s an12s elsni sylanr2 adantrrr jca 
      elxp7 sylan2b adantl fveq2 visset op2ndg mpan2 sylan9eqr simprr snidg 
      adantr simprl opelxpi syl11anc eqeltrd impbida wfn wb fo2nd fofn ax-mp 
      fnbrfvb mp2an anbi1i syl5bbr brres syl5bb mobid mpbiri 19.21aiv funcnv2 
      sylibr sylanbrc ) AFZBGZBHWRIZJWRBWSKZWSLMZACNZWRBWSOXBWQPQWTACRWQBSTXBDU
      AZEUAZWSUBZDUCZEUDXAXBXFEXBXFXDBNZXCAXDUEZUFZUGZDUCXIXGDDXHUHUIXBXEXJDXBD
      UJXBXCXDHUBZXCWRNZUGZXJXEXBXCHUKZXDUFZXLUGZXJXMXBXPXJXPXJXBXOXCULULGNZXCU
      MUKZWQNZXNBNZUGZUGZXJXLXOYBUGXGXIXOYAXGXQXOXTXGXSXOXTXGXNXDBUNUOUPUPXOXQX
      SXIXTXOXQXRAUFZXIXSXQXOYCXIXQYCXOXIXCAXDUQURUSXRAUTVAVBVCXCWQBVDVEVFXBXJU
      GZXOXLXBXIXOXGXIXBXNXHHUKZXDXCXHHVGXBXDULNYEXDUFEVHZAXDCULVIVJVKUPYDXCXHW
      RXBXGXIVLYDAWQNZXGXHWRNXBYGXJACVMVNXBXGXIVOAXDWQBVPVQVRVCVSXOXKXLHULVTZXC
      ULNXOXKWAULULHKYHWBULULHWCWDDVHULXCXDHYFWEWFWGWHXCXDHWRYFWIWJWKWLWMDEWSWN
      WOWP $.
      $( [14-Dec-2008] $) $( [27-Mar-2008] $)
  $}

  ${
    $d v w x y z A $.  $d v w x y z B $.  $d v w z C $.
    iunfoprab.1 $e |- C e. _V $.
    $( Two ways to express an operation as a class of ordered pairs. $)
    iunfoprab $p |- U_ x e. A U_ y e. B { <. <. x , y >. , C >. }
            = { <. <. x , y >. , z >. | ( ( x e. A /\ y e. B ) /\ z = C ) } $=
      ( vw vv cv wcel wa wceq copab2 cxp c1st cfv c2nd csb copab cop csn ciun 
      fvex ax-17 hbcsb1 cvv wal wi hbcsbg ax-mp csbeq1a sylan9eqr dfoprab5sf 
      csbex iunfopab hbop hbsn id csbopeq1a eqcoms eqcomd opeq12d sneqd iunxpf 
      3eqtr2ri ) AJZDKBJZEKLCJZFMLABCNHJZDEOZKVIAVJPQZBVJRQZFSZSZMLHCTHVKVJVOUA
      ZUBZUCADBEVGVHUAZFUAZUBZUCUCABCHIDEFVOAIVLVNVJPUDZIJZVLKZAUEUFZVLUGKWBVOK
      ZWEBUHUIWABAIVLVNUGWCBUEBIVMFVJRUDZWBVMKBUEUFUJUKZVHVMMVGVLMFVNVOBVMFULAV
      LVNULUMUNHCVKVOAVLVNWABVMFWFGUOUOUPHABIDEVQVTAIVPAIVJVOWBVJKZAUEWDUQURBIV
      PBIVJVOWHBUEWGUQURWBVTKHUEVJVRMZVPVSWIVJVRVOFWIUSWIFVOFVOMVRVJABVJFUTVAVB
      VCVDVEVF $.
      $( [19-Dec-2008] $)
  $}


  ${
    $d y A $.  $d y B $.  $d x y $.
    dfmpt.1 $e |- B e. _V $.
    $( Alternate definition for the "maps to" notation ~ df-mpt (although it
       requires that ` B ` be a set). $)
    dfmpt $p |- ( x e. A |-> B ) = U_ x e. A { <. x , B >. } $=
      ( vy cmpt cv wcel wceq wa copab cop csn ciun df-mpt iunfopab eqtr4i ) ABC
      FAGZBHEGCIJAEKABRCLMNAEBCOAEBCDPQ $.
      $( [24-Aug-2010] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.
    dfmp2t.1 $e |- C e. _V $.
    $( Alternate definition for the "maps to" notation ~ df-mpt2 (although it
       requires that ` C ` be a set). $)
    dfmpt2 $p |- ( x e. A , y e. B |-> C )
                = U_ x e. A U_ y e. B { <. <. x , y >. , C >. } $=
      ( vz cmpt2 cv wcel wa wceq copab2 cop csn ciun df-mpt2 iunfoprab eqtr4i 
      ) ABCDEHAIZCJBIZDJKGIELKABGMACBDTUANENOPPABGCDEQABGCDEFRS $.
      $( [24-Aug-2010] $)
  $}

  ${
    $d z A $.  $d x y z B $.  $d x y z C $.  $d x y z F $.  $d z G $.
    curry1.1 $e |- G = ( F o. `' ( 2nd |` ( { C } X. _V ) ) ) $.
    $( Composition with ` ``' ( 2nd |`` ( { C } X. _V ) ) ` turns any binary
       operation ` F ` with a constant first operand into a function ` G ` of
       the second operand only.  This transformation is called "currying."
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 19-Jun-2012.) $)
    curry1 $p |- ( ( F Fn ( A X. B ) /\ C e. A ) ->
                 G = { <. x , y >. | ( x e. B /\ y = ( C F x ) ) } ) $=
      ( vz cxp wfn wcel wa cv co wceq copab cfv wral c2nd csn cvv cres ccnv 
      cop wf1o 2ndconst adantr snidg visset jctir opelxp sylibr jca fvres syl 
      op2ndg mpan2 eqtrd f1ocnvfv sylc fveq2d adantll df-opr syl6eqr ccom wfun 
      fvco2 mp3an3 fnfun dff1o4 sylib simprd syl2an fveq1i syl5eq opreq2 eqid 
      oprex fvopab4 adantl 3eqtr4d r19.21aiva wb eqfnfv2 cdm fneq1i df-fn 
      bitri funco wfo dff1o3 simprbi cima fndm imaeq2d cin crn wss snssi df-ss 
      xpeq1 inxp incom inv1 eqtri xpeq2i reseq2d rneqd f1ofo forn imacnvcnv 
      df-ima resres rneqi 3eqtri dmco sylanbrc fnopab2 sylancl mpbird ) FCDJZKZ
      ECLZMZGANZDLBNEYFFOZPMABQZPZINZGRZYJYHRZPZIDSZYEYMIDYEYJDLZMZYJTEUAZUBJZU
      CZUDZRZFRZEYJFOZYKYLYPUUBEYJUEZFRZUUCYDYOUUBUUEPYCYDYOMZUUAUUDFUUFYRUBYSU
      FZUUDYRLZMUUDYSRZYJPZUUAUUDPUUFUUGUUHYDUUGYOEUBCUGZUHYDUUHYOYDEYQLZYJUBLZ
      MUUHYDUULUUMECUIIUJZUKEYJYQUBUUNULUMZUHUNYDUUJYOYDUUIUUDTRZYJYDUUHUUIUUPP
      UUOUUDYRTUOUPYDUUMUUPYJPUUNEYJCUBUQURUSUHYRUBUUDYJYSUTVAVBVCEYJFVDVEYPYJF
      YTVFZRZUUBYKYEUURUUBPZYOFVGZYTUBKZUUSYCYDUUTUVAUUMUUSUUNUBYJFYTVHVIYBFVJZ
      YDYSYRKZUVAYDUUGUVCUVAMUUKYRUBYSVKVLVMVNUHYJGUUQHVOVPYOYLUUCPYEABYJYGUUCD
      YHYFYJEFVQYHVRZEYJFVSVTWAWBWCGDKZYHDKYIYNWDYEIDGYHWEUVEUUQVGZUUQWFZDPZYEU
      VEUUQDKUVFUVHMDGUUQHWGUUQDWHWIUUTYTVGZUVFYCYDFYTWJUVBYDUUGUVIUUKUUGYRUBYS
      WKUVIYRUBYSWLWMUPVNYEYTUDZFWFZWNZDUVGYEUVLUVJYBWNZDYEUVKYBUVJYCUVKYBPYDYB
      FWOUHWPYDUVMDPYCYDTYRYBWQZUCZWRZDUVMYDUVPTYQDJZUCZWRZDYDUVOUVRYDUVNUVQTYD
      YQCWQZDJZUVQUVNYDUVTYQPZUWAUVQPYDYQCWSUWBECWTYQCXAVLUVTYQDXBUPUVNUVTUBDWQ
      ZJUWAYQUBCDXCUWCDUVTUWCDUBWQDUBDXDDXEXFXGXFVPXHXIYDUVQDUVRWKZUVSDPYDUVQDU
      VRUFUWDEDCUGUVQDUVRXJUPUVQDUVRXKUPUSUVMYSYBWNYSYBUCZWRUVPYSYBXLYSYBXMUWEU
      VOTYRYBXNXOXPVPWAUSFYTXQVPXRABDYGYHEYFFVSUVDXSXTYA $.
      $( [24-Jul-2012] $) $( [28-Mar-2008] $)

    $d x y D $.
    $( The value of a curried function with a constant first argument. $)
    curry1val $p |- ( ( F Fn ( A X. B ) /\ C e. A /\ D e. U ) ->
        ( G ` D ) = ( C F D ) ) $=
      ( vx vy cxp wfn wcel w3a cfv cv co wceq wa copab curry1 fveq1d 3adant3 
      wn c0 eqid fvopab4ndm 3ad2ant3 cdm ndmoprg fndm id simpr con3i syl3an 
      eqtr4d 3expia opreq2 oprex fvopab4 pm2.61d2 3adant2 eqtrd ) FABKZLZCAMZDE
      MZNDGOZDIPZBMJPCVIFQZRZSIJTZOZCDFQZVEVFVHVMRVGVEVFSDGVLIJABCFGHUAUBUCVEVG
      VMVNRZVFVEVGSDBMZVOVEVGVPUDZVOVEVGVQNVMUEVNVQVEVMUERVGVKIJBDVLVLUFZUGUHFU
      IVDRVGVFVPSZUDVNUERVEVGVQCDEABFUJVDFUKVGULVSVPVFVPUMUNUOUPUQIJDVJVNBVLVID
      CFURVRCDFUSUTVAVBVC $.
      $( [28-Mar-2008] $)

    $d x A $.
    $( Functionality of a curried function with a constant first argument. $)
    curry1f $p |- ( ( F : ( A X. B ) --> D /\ C e. A ) ->
                 G : B --> D ) $=
      ( vx vy cxp wf wcel wa cv co wceq copab wral foprrn 3expa r19.21aiva 
      eqid fopab2 sylib wfn curry1 ffn sylan feq1d mpbird ) ABJZDEKZCALZMZBDFKB
      DHNZBLZINCUOEOZPMHIQZKZUNUQDLZHBRUSUNUTHBULUMUPUTCUODABESTUAHIBDUQURURUBU
      CUDUNBDFUREUKUEUMFURPULHIABCEFGUFUKDEUGUHUIUJ $.
      $( [29-Mar-2008] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y D $.  $d x y z F $.
    $d z G $.
    curry2.1 $e |- G = ( F o. `' ( 1st |` ( _V X. { C } ) ) ) $.
    $( Composition with ` ``' ( 1st |`` ( _V X. { C } ) ) ` turns any binary
       operation ` F ` with a constant second operand into a function ` G ` of
       the first operand only.  This transformation is called "currying."  (If
       this becomes frequently used, we can introduce a new notation for the
       hypothesis.) $)
    curry2 $p |- ( ( F Fn ( A X. B ) /\ C e. B ) ->
                 G = { <. x , y >. | ( x e. A /\ y = ( x F C ) ) } ) $=
      ( vz cxp wfn wcel wa cv co wceq copab cfv wral c1st cvv csn cres ccnv 
      cop wf1o 1stconst adantr snidg visset jctil opelxpg mpbird jca fvres syl 
      op1st syl6eq f1ocnvfv sylc fveq2d adantll df-opr syl6eqr ccom wfun fvco2 
      mp3an3 fnfun dff1o4 sylib simprd syl2an fveq1i syl5eq opreq1 eqid oprex 
      fvopab4 adantl 3eqtr4d r19.21aiva wb eqfnfv2 cdm fneq1i df-fn bitri 
      funco wfo dff1o3 simprbi cima fndm imaeq2d cin crn wss snssi df-ss xpeq2 
      inxp incom inv1 eqtri xpeq1i reseq2d rneqd f1ofo forn eqtrd imacnvcnv 
      df-ima resres rneqi 3eqtri dmco sylanbrc fnopab2 sylancl ) FCDJZKZEDLZMZG
      ANZCLBNYEEFOZPMABQZPZINZGRZYIYGRZPZICSZYDYLICYDYICLZMZYITUAEUBZJZUCZUDZRZ
      FRZYIEFOZYJYKYOUUAYIEUEZFRZUUBYCYNUUAUUDPYBYCYNMZYTUUCFUUEYQUAYRUFZUUCYQL
      ZMUUCYRRZYIPZYTUUCPUUEUUFUUGYCUUFYNUAEDUGZUHYCUUGYNYCUUGYIUALZEYPLZMYCUUL
      UUKEDUIIUJZUKYIEUAYPDULUMZUHUNYCUUIYNYCUUHUUCTRZYIYCUUGUUHUUOPUUNUUCYQTUO
      UPYIEUUMUQURUHYQUAUUCYIYRUSUTVAVBYIEFVCVDYOYIFYSVEZRZUUAYJYDUUQUUAPZYNFVF
      ZYSUAKZUURYBYCUUSUUTUUKUURUUMUAYIFYSVGVHYAFVIZYCYRYQKZUUTYCUUFUVBUUTMUUJY
      QUAYRVJVKVLVMUHYIGUUPHVNVOYNYKUUBPYDABYIYFUUBCYGYEYIEFVPYGVQZYIEFVRVSVTWA
      WBGCKZYGCKYHYMWCYDICGYGWDUVDUUPVFZUUPWEZCPZYDUVDUUPCKUVEUVGMCGUUPHWFUUPCW
      GWHUUSYSVFZUVEYBYCFYSWIUVAYCUUFUVHUUJUUFYQUAYRWJUVHYQUAYRWKWLUPVMYDYSUDZF
      WEZWMZCUVFYDUVKUVIYAWMZCYDUVJYAUVIYBUVJYAPYCYAFWNUHWOYCUVLCPYBYCTYQYAWPZU
      CZWQZCUVLYCUVOTCYPJZUCZWQZCYCUVNUVQYCUVMUVPTYCCYPDWPZJZUVPUVMYCUVSYPPZUVT
      UVPPYCYPDWRUWAEDWSYPDWTVKUVSYPCXAUPUVMUACWPZUVSJUVTUAYPCDXBUWBCUVSUWBCUAW
      PCUACXCCXDXEXFXEVOXGXHYCUVPCUVQWJZUVRCPYCUVPCUVQUFUWCCEDUGUVPCUVQXIUPUVPC
      UVQXJUPXKUVLYRYAWMYRYAUCZWQUVOYRYAXLYRYAXMUWDUVNTYQYAXNXOXPVOVTXKFYSXQVOX
      RABCYFYGYEEFVRUVCXSXTUM $.
      $( [16-Dec-2008] $)

    $( Functionality of a curried function with a constant second argument. $)
    curry2f $p |- ( ( F : ( A X. B ) --> D /\ C e. B ) ->
                 G : A --> D ) $=
      ( vx vy cxp wf wcel wa cv co wceq copab wral foprrn 3com23 3expa 
      r19.21aiva eqid fopab2 sylib wfn curry2 ffn sylan feq1d mpbird ) ABJZDEKZ
      CBLZMZADFKADHNZALZINUPCEOZPMHIQZKZUOURDLZHARUTUOVAHAUMUNUQVAUMUQUNVAUPCDA
      BESTUAUBHIADURUSUSUCUDUEUOADFUSEULUFUNFUSPUMHIABCEFGUGULDEUHUIUJUK $.
      $( [16-Dec-2008] $)

    $( The value of a curried function with a constant second argument. $)
    curry2val $p |- ( ( F Fn ( A X. B ) /\ C e. B /\ D e. U ) ->
        ( G ` D ) = ( D F C ) ) $=
      ( vx vy cxp wfn wcel w3a cfv cv co wceq wa copab curry2 fveq1d 3adant3 
      wn c0 eqid fvopab4ndm 3ad2ant3 cdm ndmoprg fndm id simpl con3i syl3an 
      eqtr4d 3expia opreq1 oprex fvopab4 pm2.61d2 eqtrd ) FABKZLZCBMZDEMZNDGOZD
      IPZAMJPVHCFQZRZSIJTZOZDCFQZVDVEVGVLRVFVDVESZDGVKIJABCFGHUAUBUCVDVEVLVMRZV
      FVNDAMZVOVDVEVPUDZVOVDVEVQNVLUEVMVQVDVLUERVEVJIJADVKVKUFZUGUHFUIVCRVEVPVE
      SZUDVMUERVDVEVQDCBABFUJVCFUKVEULVSVPVPVEUMUNUOUPUQIJDVIVMAVKVHDCFURVRDCFU
      SUTVAUCVB $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x A $.  $d y B $.  $d v w x y z F $.  $d v w x y z G $.
    $d s t u v w x y z $.
    $( Lemma for ~ fpar . $)
    fparlem1 $p |- ( `' ( 1st |` ( _V X. _V ) ) " { x } ) = ( { x } X. _V ) $=
      ( vy vw vz c1st cvv cxp cres ccnv cv csn cima wbr cab wcel wceq c2nd cfv 
      wsbc wa visset iniseg ax-mp brres ancom cop wrel relxp 1st2nd mpan 
      breq1d wb fvex ax-17 sbcgf sbcbii eqeq1 sbcie bitr2i a1i df-br wfn wfo 
      fo1st fofn opex fnopfvb mp2an op1st eqeq1i 3bitr2i syl5bb bitrd pm5.32i 
      3bitri abbii copab cnvopab biantrur opabbii dfopab2 3eqtr2ri fconstopab 
      cnveqi cnvxp 3eqtr2i 3eqtri ) EFFGZHZIAJZKZLZBJZWJWIMZBNZWMWHOZCJZWJPZDWM
      QRZSZCWMERZSZTZBNZWKFGZWJFOWLWOPAUAZBWIWJFUBUCWNXCBWNWMWJEMZWPTWPXGTXCWMW
      JEWHXFUDXGWPUEWPXGXBWPXGXAWSUFZWJEMZXBWPWMXHWJEWHUGWPWMXHPFFUHWMWHUIUJUKW
      PXAWJPZXBXIXJXBULWPXBWRCXASZXJXAFOXBXKULWMEUMZWTWRCXAFWSFOWTWRULWMQUMWRDW
      SFWRDUNUOUCUPUCWRXJCXAXLWQXAWJUQURUSUTXIXHWJUFEOZXHERZWJPZXJXHWJEVAEFVBZX
      HFOXOXMULFFEVCXPVDFFEVEUCXAWSVFFXHWJEXFVGVHXNXAWJXAWSXLVIVJVKVLVMVNVOVPXD
      DJFOZWRTZDCVQZIZFWKGZIXEXTXRCDVQWRCDVQXDXRDCVRWRXRCDXQWRDUAVSVTWRCDBWAWBY
      AXSDCFWJWCWDFWKWEWFWG $.
      $( [22-Dec-2008] $)

    $( Lemma for ~ fpar . $)
    fparlem2 $p |- ( `' ( 2nd |` ( _V X. _V ) ) " { y } ) = ( _V X. { y } ) $=
      ( vx vz vw cv c2nd cvv cxp cres wbr cab wcel wceq wa copab ccnv csn cima 
      cfv wsbc c1st visset brres ancom cop wrel relxp 1st2nd mpan breq1d wb 
      fvex ax-17 sbcgf ax-mp eqeq1 sbcie bitr2i a1i df-br wfn wfo fo2nd fofn 
      opex fnopfvb mp2an op2nd eqeq1i 3bitr2i syl5bb bitrd pm5.32i 3bitri 
      abbii dfopab2 biantrur opabbii 3eqtr2i iniseg fconstopab 3eqtr4i ) BEZAEZ
      FGGHZIZJZBKZCEGLZDEZWDMZNZCDOZWFPWDQZRZGWNHWHWCWELZWKDWCFSZTZCWCUASZTZNZB
      KWKCDOWMWGXABWGWCWDFJZWPNWPXBNXAWCWDFWEAUBZUCXBWPUDWPXBWTWPXBWSWQUEZWDFJZ
      WTWPWCXDWDFWEUFWPWCXDMGGUGWCWEUHUIUJWPWQWDMZWTXEXFWTUKWPWTWRXFWSGLWTWRUKW
      CUAULZWRCWSGWRCUMUNUOWKXFDWQWCFULZWJWQWDUPUQURUSXEXDWDUEFLZXDFSZWDMZXFXDW
      DFUTFGVAZXDGLXKXIUKGGFVBXLVCGGFVDUOWSWQVEGXDWDFXCVFVGXJWQWDWSWQXGXHVHVIVJ
      VKVLVMVNVOWKCDBVPWKWLCDWIWKCUBVQVRVSWDGLWOWHMXCBWFWDGVTUOCDGWDWAWB $.
      $( [22-Dec-2008] $)

    $( Lemma for ~ fpar . $)
    fparlem3 $p |- ( F Fn A
          -> ( `' ( 1st |` ( _V X. _V ) ) o. ( F o. ( 1st |` ( _V X. _V ) ) ) )
            = U_ x e. A ( ( { x } X. _V ) X. ( { ( F ` x ) } X. _V ) ) ) $=
      ( vy vz vw vv vs vu vt wfn c1st cvv cxp cres ccnv ccom cv csn cfv ciun 
      cima cdm crn cin wss wceq inss1 a1i fndm sseqtrd dfco2a syl wcel wa 
      fnsnfv xpeq2 fparlem1 xpeq1i syl5eqr iuneq2dv eqtr4d coeq2d coiun cnvco 
      cnvxp coeq2i eqtr2i cop wb wal visset opelxp biantru elsn 3bitr2i anbi1i 
      wbr wex opex opelco copab2 df-br df1st2 eleq2i equequ2 biidd equequ1 
      eloprabg mp3an 3bitri anbi12i exbii eqeq1 anbi1d ceqsexv 3bitr4ri ax-gen 
      gen2 cun wrel relco dmcoss dmres eqsstri sstri relxp relss mp2 pm3.2i 
      relrelss mpbi dmxpss unssi eqrelrel ax-mp mpbir cnveqi 3eqtri 3eqtrd ) CB
      KZLMMNZOZPZCYCQZQYDABARZSZMNZYFCTZSZNZUAZQZABYDYKQZUAZABYHYJMNZNZUAYAYEYL
      YDYAYEABYDYGUBZCYGUBZNZUAZYLYACUCZYCUDZUEZBUFYEUUAUGYAUUDUUBBUUDUUBUFYAUU
      BUUCUHUIBCUJUKACYCBULUMYAABYKYTYAYFBUNUOZYRYJNZYTYKUUEYJYSUGUUFYTUGBYFCUP
      YJYSYRUQUMYRYHYJAURUSUTVAVBVCYMYOUGYAAYDYKBVDUIYAABYNYQYNYQUGUUEYNYJYHNZY
      CQZPZYPYHNZPYQUUIYDUUGPZQYNUUGYCVEUUKYKYDYJYHVFVGVHUUHUUJUUHUUJUGZDRZERZV
      IZFRZVIZUUHUNZUUQUUJUNZVJZFVKZEVKDVKZUVADEUUTFUUOYPUNZUUPYHUNZUOUUMYIUGZU
      VDUOZUUSUURUVCUVEUVDUVCUUMYJUNZUUNMUNZUOUVGUVEUUMUUNYJMEVLZVMUVHUVGUVIVND
      YIVOVPVQUUOUUPYPYHFVLZVMUURUUOGRZYCVRZUVKUUPUUGVRZUOZGVSUVKUUMUGZUVKYIUGZ
      UVDUOZUOZGVSUVFGUUOUUPUUGYCUUMUUNVTUVJWAUVNUVRGUVLUVOUVMUVQUVLUUOUVKVIZYC
      UNUVSHRZIRUGZIJHWBZUNZUVOUUOUVKYCWCUWBYCUVSIJHWDWEUUMMUNUVHUVKMUNUWCUVOVJ
      DVLZUVIGVLUWAUVTUUMUGZUWEUVOIJHUUMUUNUVKMMMIDHWFJRUUNUGUWEWGHGDWHWIWJVPUV
      MUVKUUPVIUUGUNUVKYJUNZUVDUOUVQUVKUUPUUGWCUVKUUPYJYHUVJVMUWFUVPUVDGYIVOVQW
      KWLWMUVQUVFGUUMUWDUVOUVPUVEUVDUVKUUMYIWNWOWPWKWQWRWSUUHUUJWTYBMNZUFUULUVB
      VJUUHUUJUWGUUHXAZUUHUCZXAZUOUUHUWGUFUWHUWJUUGYCXBUWIYBUFYBXAUWJUWIYCUCZYB
      UUGYCXCUWKYBLUCZUEYBLYBXDYBUWLUHXEXFMMXGUWIYBXHXIXJUUHXKXLUUJXAZUUJUCZXAZ
      UOUUJUWGUFUWMUWOYPYHXGUWNYPUFYPXAUWOYPYHXMYJMXGUWNYPXHXIXJUUJXKXLXNDEFUUH
      UUJXOXPXQXRYPYHVFXSUIVAXT $.
      $( [22-Dec-2008] $)

    $( Lemma for ~ fpar . $)
    fparlem4 $p |- ( G Fn B
          -> ( `' ( 2nd |` ( _V X. _V ) ) o. ( G o. ( 2nd |` ( _V X. _V ) ) ) )
            = U_ y e. B ( ( _V X. { y } ) X. ( _V X. { ( G ` y ) } ) ) ) $=
      ( vx vz vw vv vs vt vu wfn c2nd cvv cxp cres ccnv ccom cv csn cfv ciun 
      cima cdm crn cin wss wceq inss1 a1i fndm sseqtrd dfco2a syl wcel wa 
      fnsnfv xpeq2 fparlem2 xpeq1i syl5eqr iuneq2dv eqtr4d coeq2d coiun cnvco 
      cnvxp coeq2i eqtr2i cop wb wal visset opelxp biantrur elsn 3bitr2i 
      anbi1i wbr wex opex opelco copab2 df-br df2nd2 eleq2i biidd equequ2 
      equequ1 eloprabg mp3an 3bitri anbi12i exbii eqeq1 anbi1d ceqsexv 
      3bitr4ri ax-gen gen2 cun wrel relco dmcoss dmres eqsstri sstri relxp 
      relss mp2 pm3.2i relrelss mpbi dmxpss unssi eqrelrel ax-mp mpbir cnveqi 
      3eqtri 3eqtrd ) CBKZLMMNZOZPZCYCQZQYDABMARZSZNZYFCTZSZNZUAZQZABYDYKQZUAZA
      BYHMYJNZNZUAYAYEYLYDYAYEABYDYGUBZCYGUBZNZUAZYLYACUCZYCUDZUEZBUFYEUUAUGYAU
      UDUUBBUUDUUBUFYAUUBUUCUHUIBCUJUKACYCBULUMYAABYKYTYAYFBUNUOZYRYJNZYTYKUUEY
      JYSUGUUFYTUGBYFCUPYJYSYRUQUMYRYHYJAURUSUTVAVBVCYMYOUGYAAYDYKBVDUIYAABYNYQ
      YNYQUGUUEYNYJYHNZYCQZPZYPYHNZPYQUUIYDUUGPZQYNUUGYCVEUUKYKYDYJYHVFVGVHUUHU
      UJUUHUUJUGZDRZERZVIZFRZVIZUUHUNZUUQUUJUNZVJZFVKZEVKDVKZUVADEUUTFUUOYPUNZU
      UPYHUNZUOUUNYIUGZUVDUOZUUSUURUVCUVEUVDUVCUUMMUNZUUNYJUNZUOUVHUVEUUMUUNMYJ
      EVLZVMUVGUVHDVLZVNEYIVOVPVQUUOUUPYPYHFVLZVMUURUUOGRZYCVRZUVLUUPUUGVRZUOZG
      VSUVLUUNUGZUVLYIUGZUVDUOZUOZGVSUVFGUUOUUPUUGYCUUMUUNVTUVKWAUVOUVSGUVMUVPU
      VNUVRUVMUUOUVLVIZYCUNUVTHRZIRUGZJIHWBZUNZUVPUUOUVLYCWCUWCYCUVTJIHWDWEUVGU
      UNMUNUVLMUNUWDUVPVJUVJUVIGVLUWBUWBUWAUUNUGUVPJIHUUMUUNUVLMMMJRUUMUGUWBWFI
      EHWGHGEWHWIWJVPUVNUVLUUPVIUUGUNUVLYJUNZUVDUOUVRUVLUUPUUGWCUVLUUPYJYHUVKVM
      UWEUVQUVDGYIVOVQWKWLWMUVRUVFGUUNUVIUVPUVQUVEUVDUVLUUNYIWNWOWPWKWQWRWSUUHU
      UJWTYBMNZUFUULUVBVJUUHUUJUWFUUHXAZUUHUCZXAZUOUUHUWFUFUWGUWIUUGYCXBUWHYBUF
      YBXAUWIUWHYCUCZYBUUGYCXCUWJYBLUCZUEYBLYBXDYBUWKUHXEXFMMXGUWHYBXHXIXJUUHXK
      XLUUJXAZUUJUCZXAZUOUUJUWFUFUWLUWNYPYHXGUWMYPUFYPXAUWNYPYHXMMYJXGUWMYPXHXI
      XJUUJXKXLXNDEFUUHUUJXOXPXQXRYPYHVFXSUIVAXT $.
      $( [22-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.  $d x y z G $.
    fpar.1 $e |- H = ( ( `' ( 1st |` ( _V X. _V ) )
                        o. ( F o. ( 1st |` ( _V X. _V ) ) ) )
                i^i ( `' ( 2nd |` ( _V X. _V ) )
                       o. ( G o. ( 2nd |` ( _V X. _V ) ) ) ) ) $.
    $( Merge two functions in parallel.  Use as the second argument of a
       composition with a (2-place) operation to build compound operations such
       as ` z = ( ( sqr `` x ) + ( abs `` y ) ) ` . $)
    fpar $p |- ( ( F Fn A /\ G Fn B )
                 -> H = { <. <. x , y >. , z >. |
            ( ( x e. A /\ y e. B ) /\ z = <. ( F ` x ) , ( G ` y ) >. ) } ) $=
      ( wfn wa c1st cvv cxp cres ccnv ccom c2nd cin cv csn cfv ciun wcel cop 
      wceq copab2 a1i fparlem3 fparlem4 ineqan12d inxp inv1 xpeq1i incom eqtri 
      xpeq2i visset xpsn 3eqtri fvex opex iuneq2i 2iunin iunfoprab 3eqtr3i 
      3eqtrd ) FDJZGEJZKZHLMMNZOZPFVLQQZRVKOZPGVNQQZSZADATZUAZMNZVQFUBZUAZMNZNZ
      UCZBEMBTZUAZNZMWEGUBZUAZNZNZUCZSZVQDUDZWEEUDZKCTVTWHUEZUFKABCUGZHVPUFVJIU
      HVHVIVMWDVOWLADFUIBEGUJUKWMWQUFVJADBEWCWKSZUCZUCADBEVQWEUEZWPUEUAZUCZUCWM
      WQADWSXBWSXBUFWNBEWRXAWRXAUFWOWRVSWGSZWBWJSZNZWTUAZWPUAZNZXAVSWBWGWJULXEX
      FXDNXHXCXFXDXCVRMSZMWFSZNZVRWFNZXFVRMMWFULXKVRXJNXLXIVRXJVRUMUNXJWFVRXJWF
      MSWFMWFUOWFUMUPUQUPVQWEAURBURUSUTUNXDXGXFXDWAMSZMWISZNZWAWINZXGWAMMWIULXO
      WAXNNXPXMWAXNWAUMUNXNWIWAXNWIMSWIMWIUOWIUMUPUQUPVTWHVQFVAWEGVAUSUTUQUPWTW
      PVQWEVBVTWHVBZUSUTUHVCUHVCABDEWCWKVDABCDEWPXQVEVFUHVG $.
      $( [4-Feb-2009] $) $( [17-Sep-2007] $)
  $}

  ${
    $d w x y z $.
    $( A function that can be used to feed a common value to both operands of
       an operation.  Use as the second argument of a composition with the
       function of ~ fpar in order to build compound functions such as
       ` y = ( ( sqr `` x ) + ( abs `` x ) ) ` . $)
    fsplit $p |- `' ( 1st |` _I ) = { <. x , y >. | y = <. x , x >. } $=
      ( vw vz c1st cid cres ccnv cv cop wceq copab relcnv relopab wcel wa 
      visset opelres cfv wex fveq2 op1st syl6eq eqeq1d pm5.32ri exbii opeq1 
      opeq2 eqtrd eqeq2d ceqsexv bitr2i 19.42v cvv wfn wb wfo fo1st fofn ax-mp 
      fnopfvb mp2an elopab df-id eleq2i equcom anbi1i ancom bitri bitr3i 
      3bitr4ri anbi12i 3bitrri opelcnv eqeq1 opelopab 3bitr4i eqrelriv ) CDEFGZ
      HZBIZAIZWBJZKZABLZVSMWDABNDIZCIZJZVSOZWFWGWGJZKZWGWFJZVTOWLWEOWIWHEOZWFFO
      ZPZWKWFWGEFCQZRWKWFESZWGKZWFWCKZPZATZWRWSATZPWOXAWBWGKZWSPZATWKWTXDAWSWRX
      CWSWQWBWGWSWQWCESWBWFWCEUAWBWBAQZUBUCUDUEUFWSWKAWGWPXCWCWJWFXCWCWGWBJWJWB
      WGWBUGWBWGWGUHUIZUJUKULWRWSAUMWRWMXBWNEUNUOZWFUNOWRWMUPUNUNEUQXGURUNUNEUS
      UTDQZUNWFWGEWPVAVBWFWBWAKZABLZOWFWBWAJZKZXIPZBTZATWNXBXIABWFVCFXJWFABVDVE
      WSXNAWSWAWBKZXLPZBTXNXLWSBWBXEXOXKWCWFWAWBWBUHUJUKXPXMBXPXIXLPXMXOXIXLBAV
      FVGXIXLVHVIUFVJUFVKVLVMVIWGWFVSWPXHVNWDWAWJKWKABWGWFWPXHXCWCWJWAXFUJWAWFW
      JVOVPVQVR $.
      $( [3-Mar-2009] $) $( [17-Sep-2007] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The iota operation ("the unique set such that...")
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c iota $.
  $( Extend class notation with Russell's definition description binder. $)
  cio $a class ( iota x ph ) $.

  ${
    $d w x z $.  $d ph w z $.  $d ph w y $.  $d x y $.
    $( Soundness justification theorem for ~ df-iota .  (Contributed by Andrew
       Salmon, 29-Jun-2011.) $)
    iotajust $p |- U. { y | { x | ph } = { y } } =
       U. { z | { x | ph } = { z } } $=
      ( vw cab cv csn wceq sneq eqeq2d cbvabv eqtri unieqi ) ABFZCGZHZIZCFZODGZ
      HZIZDFZSOEGZHZIZEFUCRUFCEPUDIQUEOPUDJKLUFUBEDUDTIUEUAOUDTJKLMN $.
      $( [12-Jul-2011] $) $( [29-Jun-2011] $)
  $}

  ${
    $d y x $.  $d y ph $.
    $( Define Russell's definition description binder, which can be read as
       "the unique ` x ` such that ` ph ` ," where ` ph ` ordinarily contains
       ` x ` as a free variable.  Our definition is meaningful only when there
       is exactly one ` x ` such that ` ph ` is true (see ~ iotaval );
       otherwise, it evaluates to the empty set (see ~ iotanul ). $)
    df-iota $a |- ( iota x ph ) = U. { y | { x | ph } = { y } } $.
  $}

  ${
    $d y x $.  $d y ph $.
    $( Alternate definition for descriptions.  Definition 8.18 in [Quine]
       p. 56.  (Contributed by Andrew Salmon, 30-Jun-2011.) $)
    dfiota2 $p |- ( iota x ph ) = U. { y | A. x ( ph <-> x = y ) } $=
      ( cio cab cv csn wceq cuni wb wal df-iota df-sn eqeq2i eq2ab bitri abbii 
      unieqi eqtri ) ABDABEZCFZGZHZCEZIABFUAHZJBKZCEZIABCLUDUGUCUFCUCTUEBEZHUFU
      BUHTBUAMNAUEBOPQRS $.
      $( [12-Jul-2011] $) $( [30-Jun-2011] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( Bound-variable hypothesis builder for the ` iota ` class.  (Contributed
       by Andrew Salmon, 11-Jul-2011.) $)
    hbiota1 $p |- ( y e. ( iota x ph ) -> A. x y e. ( iota x ph ) ) $=
      ( vz cio cab cv csn wceq cuni df-iota wcel wa wex wal ax-17 hbab1 hbeq 
      hban hbex eluniab albii 3imtr4i hbxfr ) BCABEABFZDGZHZIZDFJZABDKCGZUFLZUH
      MZDNZUMBOUJUILZUNBOULBDUKUHBUKBPBDCUEUGABDQUJUGLBPRSTUHDUJUAZUNUMBUOUBUCU
      D $.
      $( [6-Sep-2011] $) $( [11-Jul-2011] $)
  $}

  ${
    $d w z ph $.  $d w x z $.  $d w y z $.
    hbiota.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for the ` iota ` class. $)
    hbiota $p |- ( z e. ( iota y ph ) -> A. x z e. ( iota y ph ) ) $=
      ( vw cio cab cv csn wceq cuni df-iota hbab wcel ax-17 hbeq hbuni hbxfr ) 
      BDACGACHZFIJZKZFHZLACFMBDUCUBBFDBDDTUAABCDENDIUAOBPQNRS $.
      $( [23-Aug-2011] $)
  $}

  ${
    $d y z $.  $d x z $.  $d ph z $.
    $( Equality theorem for descriptions.  (Contributed by Andrew Salmon,
       30-Jun-2011.) $)
    iotaeq $p |- ( A. x x = y -> ( iota x ph ) = ( iota y ph ) ) $=
      ( vz cv wceq wal cab csn cuni cio wsbc wcel drsb1 df-clab 3bitr4g eqrdv 
      eqeq1d abbidv unieqd df-iota 3eqtr4g ) BECEFBGZABHZDEZIZFZDHZJACHZUFFZDHZ
      JABKACKUCUHUKUCUGUJDUCUDUIUFUCDUDUIUCABUELACUELUEUDMUEUIMABCDNADBOADCOPQR
      STABDUAACDUAUB $.
      $( [12-Jul-2011] $) $( [30-Jun-2011] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x y z $.
    $( Equivalence theorem for descriptions.  (Contributed by Andrew Salmon,
       30-Jun-2011.) $)
    iotabi $p |- ( A. x ( ph <-> ps ) -> ( iota x ph ) = ( iota x ps ) ) $=
      ( vz wb wal cab cv csn wceq cuni cio eq2ab biimpri eqeq1d abbidv unieqd 
      df-iota 3eqtr4g ) ABECFZACGZDHIZJZDGZKBCGZUBJZDGZKACLBCLTUDUGTUCUFDTUAUEU
      BUAUEJTABCMNOPQACDRBCDRS $.
      $( [12-Jul-2011] $) $( [30-Jun-2011] $)

    $( Part of Theorem 8.17 in [Quine] p. 56.  This theorem serves as a lemma
       for the fundamental property of iota.  (Contributed by Andrew Salmon,
       11-Jul-2011.) $)
    uniabio $p |- ( A. x ( ph <-> x = y ) -> U. { x | ph } = y ) $=
      ( cv wceq wb wal cab cuni csn eq2ab biimpri df-sn syl6eqr unieqd visset 
      unisn syl6eq ) ABDCDZEZFBGZABHZISJZISUAUBUCUAUBTBHZUCUBUDEUAATBKLBSMNOSCP
      QR $.
      $( [12-Jul-2011] $) $( [11-Jul-2011] $)

    $( Theorem 8.19 in [Quine] p. 57.  This theorem is the fundamental property
       of iota.  (Contributed by Andrew Salmon, 11-Jul-2011.) $)
    iotaval $p |- ( A. x ( ph <-> x = y ) -> ( iota x ph ) = y ) $=
      ( vz cv wceq wb wal cab cuni cio cvv wcel wa wi visset sbeqalb equcomi 
      syl6 ax-mp ex equequ2 eqcoms bibi2d biimpd alimdv com12 impbid 19.21aiv 
      uniabio syl dfiota2 syl5eq ) ABEZCEZFZGZBHZAUNDEZFZGZBHZDIJZUOABKURVBUSUO
      FZGZDHVCUOFURVEDURVBVDURVBVDUOLMZURVBNZVDOCPVFVGUOUSFVDABUOUSLQCDRSTUAVDU
      RVBVDUQVABVDUQVAVDUPUTAUPUTGUOUSCDBUBUCUDUEUFUGUHUIVBDCUJUKABDULUM $.
      $( [20-Aug-2011] $) $( [11-Jul-2011] $)

    $( Equivalence between two different forms of ` iota ` .  (Contributed by
       Andrew Salmon, 12-Jul-2011.) $)
    iotaequ $p |- ( E! x ph -> ( iota x ph ) = U. { x | ph } ) $=
      ( vz weu cv wceq wb wal wex cio cab cuni df-eu iotaval uniabio eqtr4d 
      19.23aiv sylbi ) ABDABECEZFGBHZCIABJZABKLZFZABCMTUCCTUASUBABCNABCOPQR $.
      $( [20-Aug-2011] $) $( [12-Jul-2011] $)

    $( Theorem 8.22 in [Quine] p. 57.  This theorem is the result if there
       isn't exactly one ` x ` that satisfies ` ph ` .  (Contributed by Andrew
       Salmon, 11-Jul-2011.) $)
    iotanul $p |- ( -. E! x ph -> ( iota x ph ) = (/) ) $=
      ( vz weu wn cv wceq wb wal wex cio c0 df-eu notbii cab cuni alnex ax-1 
      eqidd impbid1 con2bid alimi eq2ab sylibr dfnul2 syl6eqr sylbir unieqd 
      uni0 syl6eq dfiota2 syl5eq sylbi ) ABDZEABFCFZGHBIZCJZEZABKZLGUNUQABCMNUR
      UPCOZPZLUSURVALPLURUTLURUPEZCIZUTLGUPCQVCUTUOUOGZEZCOZLVCUPVEHZCIUTVFGVBV
      GCVBVDUPVBVDVBVBVDRVBUOSTUAUBUPVECUCUDCUEUFUGUHUIUJABCUKULUM $.
      $( [20-Aug-2011] $) $( [11-Jul-2011] $)

    $( Theorem 8.23 in [Quine] p. 58.  This theorem proves the existence of the
       ` iota ` class under our definition.  (Contributed by Andrew Salmon,
       11-Jul-2011.) $)
    iotaex $p |- ( iota x ph ) e. _V $=
      ( vz weu cio cvv wcel cv wceq wb wal wex iotaval eqcomd eximi df-eu 
      isset 3imtr4i wn c0 iotanul 0ex syl6eqel pm2.61i ) ABDZABEZFGZABHCHZIJBKZ
      CLUHUFIZCLUEUGUIUJCUIUFUHABCMNOABCPCUFQRUESUFTFABUAUBUCUD $.
      $( [11-Jul-2011] $)

    $( Theorem *14.22 in [WhiteheadRussell] p. 190.  (Contributed by Andrew
       Salmon, 12-Jul-2011.) $)
    iota4 $p |- ( E! x ph -> [ ( iota x ph ) / x ] ph ) $=
      ( vz weu cv wceq wb wal wex cio wsbc df-eu wi bi2 alimi sb2 syl iotaval 
      eqcomd dfsbcq mpbid 19.23aiv sylbi ) ABDABECEZFZGZBHZCIABABJZKZABCLUGUICU
      GABUDKZUIUGUEAMZBHUJUFUKBAUENOABCPQUGUDUHFUJUIGUGUHUDABCRSABUDUHTQUAUBUC 
      $.
      $( [12-Jul-2011] $)
  $}

  $( Theorem *14.23 in [WhiteheadRussell] p. 191.  (Contributed by Andrew
     Salmon, 12-Jul-2011.) $)
  iota4an $p |- ( E! x ( ph /\ ps )
            -> [ ( iota x ( ph /\ ps ) ) / x ] ph ) $=
    ( wa weu cio wsbc iota4 wi cvv wcel iotaex simpl sbcth ax-mp wb sbcimg 
    mpbi syl ) ABDZCETCTCFZGZACUAGZTCHTAIZCUAGZUBUCIZUAJKZUETCLZUDCUAJABMNOUGUE
    UFPUHTACUAJQORS $.
    $( [7-Sep-2011] $) $( [12-Jul-2011] $)

  ${
    $d x ph $.
    iotabidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for iota. $)
    iotabidv $p |- ( ph -> ( iota x ps ) = ( iota x ch ) ) $=
      ( wb wal cio wceq 19.21aiv iotabi syl ) ABCFZDGBDHCDHIAMDEJBCDKL $.
      $( [20-Aug-2011] $)
  $}

  $( Membership law for descriptions.  (Contributed by Andrew Salmon,
     1-Aug-2011.) $)
  iotacl $p |- ( E! x ph -> ( iota x ph ) e. { x | ph } ) $=
    ( weu cio wsbc cab wcel iota4 iotaex elabs sylibr ) ABCABABDZELABFGABHABLAB
    IJK $.
    $( [1-Aug-2011] $)

  $( Property of iota.  Compare ~ euuni . $)
  iota1 $p |- ( E! x ph -> ( ph <-> ( iota x ph ) = x ) ) $=
    ( weu cab cuni cv wceq cio euuni iotaequ eqeq1d bitr4d ) ABCZAABDEZBFZGABHZ
    OGABIMPNOABJKL $.
    $( [23-Aug-2011] $)

  $( Membership law for descriptions.  Compare ~ reucl2 . $)
  reiotacl2 $p |- ( E! x e. A ph
                  -> ( iota x ( x e. A /\ ph ) ) e. { x e. A | ph } ) $=
    ( wreu cv wcel wa cio cab crab weu df-reu iotacl sylbi df-rab syl6eleqr ) 
    ABCDZBECFAGZBHZRBIZABCJQRBKSTFABCLRBMNABCOP $.
    $( [21-Aug-2011] $)

  ${
    $d x A $.
    $( Membership law for descriptions.  Compare ~ reucl . $)
    reiotacl $p |- ( E! x e. A ph
                    -> ( iota x ( x e. A /\ ph ) ) e. A ) $=
      ( wreu crab cv wcel wa cio wss ssrab2 a1i reiotacl2 sseldd ) ABCDZABCEZCB
      FCGAHBIPCJOABCKLABCMN $.
      $( [21-Aug-2011] $)
  $}

  $( Substitution law for descriptions.  Compare ~ reuuni4 . $)
  reiota4 $p |- ( E! x e. A ph -> [ ( iota x ( x e. A /\ ph ) ) / x ] ph ) $=
    ( cv wcel wa weu cio wsbc wreu iota4an df-reu ancom eubii bitri wceq wb 
    iotabi mpg dfsbcq ax-mp 3imtr4i ) ABDCEZFZBGZABUDBHZIZABCJZABUCAFZBHZIZAUCB
    KUHUIBGUEABCLUIUDBUCAMZNOUJUFPZUKUGQUIUDQUMBUIUDBRULSABUJUFTUAUB $.
    $( [23-Aug-2011] $)

  $( Property of iota.  Compare ~ reuuni1 . $)
  reiota1 $p |- ( ( x e. A /\ E! x e. A ph ) ->
          ( ph <-> ( iota x ( x e. A /\ ph ) ) = x ) ) $=
    ( cv wcel wa wreu cio wceq ibar weu wb df-reu iota1 sylbi sylan9bb ) BDZCEZ
    ARAFZABCGZSBHQIZRAJTSBKSUALABCMSBNOP $.
    $( [23-Aug-2011] $)


  ${
    $d y ph $.  $d x y A $.  $d y B $.
    reiota2f.1 $e |- ( y e. B -> A. x y e. B ) $.
    reiota2f.2 $e |- ( B e. A -> ( ps -> A. x ps ) ) $.
    reiota2f.3 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( A condition that allows us to represent "the unique element in ` A `
       such that ` ph ` " with a class expression ` B ` .  The second
       hypothesis is a weakened bound variable condition that allows ~ hbsbc1g
       to be used.  Compare ~ reuuni2f . $)
    reiota2f $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> ( iota x ( x e. A /\ ph ) ) = B ) ) $=
      ( wcel wreu cv wa cio wceq wb wi ax-17 hbel wal hbreu1 a1i hbiota1 hbeq 
      hbbid hbimd hbim1 eleq1 eqeq2 bibi12d imbi2d imbi12d reiota1 ex vtoclgf 
      pm2.43i imp ) FEJZACEKZBCLZEJZAMZCNZFOZPZURUSVEQZVAUSAVCUTOZPZQZQURVFQCDF
      EGURVFCCDDFEGDLEJCRSZURUSVECVJUSUSCTQURACEUAUBURBVDCVJHVDVDCTQURCDDVCFVBC
      DUCGUDUBUEUFUGUTFOZVAURVIVFUTFEUHVKVHVEUSVKABVGVDIUTFVCUIUJUKULVAUSVHACEU
      MUNUOUPUQ $.
      $( [23-Aug-2011] $)
  $}

  ${
    $d y ph $.  $d x y A $.  $d x y B $.  $d x ps $.
    reiota2.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( A condition that allows us to represent "the unique element in ` A `
       such that ` ph ` " with a class expression ` B ` .  Compare
       ~ reuuni2 . $)
    reiota2 $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> ( iota x ( x e. A /\ ph ) ) = B ) ) $=
      ( vy cv wcel ax-17 wal wi a1i reiota2f ) ABCGDEGHEICJBBCKLEDIBCJMFN $.
      $( [23-Aug-2011] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.  $d y ps $.
    $( Restriction of a unique element to a smaller class.  Compare
       ~ reuuniss2 . $)
    reiotass2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x e. A ph
           /\ E! x e. B ps ) )
         -> ( iota x ( x e. A /\ ph ) ) = ( iota x ( x e. B /\ ps ) ) ) $=
      ( vy wss wi wral wa wrex wreu cv wcel cio wsbc wceq reuss2 simplr 
      reiota4 reiotacl ra4sbc sbcimg sylibd syl mpid sylc wb ssel ad2antrr mpd 
      simprr hbiota1 hbsbc1g sbceq1a reiota2f syl11anc mpbid eqcomd ) DEGZABHZC
      DIZJZACDKZBCELZJZJZCMZENBJCOZVHDNAJZCOZVGBCVKPZVIVKQZVGACDLZVBVLABCDERZUT
      VBVFSVNVBACVKPZVLACDTVNVKDNZVBVPVLHZHACDUAZVQVBVACVKPVRVACVKDUBABCVKDUCUD
      UEUFUGVGVKENZVEVLVMUHVGVQVTVGVNVQVOVSUEUTVQVTHVBVFDEVKUIUJUKVCVDVEULBVLCF
      EVKVJCFUMZBCFVKEWAUNBCVKUOUPUQURUS $.
      $( [21-Aug-2011] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Cantor's Theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y A $.  $d x y F $.
    canth.1 $e |- A e. _V $.
    $( No set ` A ` is equinumerous to its power set (Cantor's theorem), i.e.
       no function can map ` A ` it onto its power set.  Compare Theorem 6B(b)
       of [Enderton] p. 132.  For the equinumerosity version, see ~ canth2 .
       Note that ` A ` must be a set: this theorem does not hold when ` A ` is
       too large to be a set; see ~ ncanth for a counterexample.  (Use ~ nex if
       you want the form ` -. E. f f : A -onto-> ~P A ` .) $)
    canth $p |- -. F : A -onto-> ~P A $=
      ( vx vy cpw wfo crn wceq forn wf cv cfv wcel wn crab fof wral wb id 
      fveq2 eleq12d notbid elrab baibr nbbn eleq2 con3i sylbi syl rgen wrex 
      wfn wi ffn fvelrnb biimpd con3d ralnex syl5ib mpi wss ssrab2 rabex elpw 
      mpbir mpbiri 3syl pm2.65i ) AAFZBGZBHZVJIZAVJBJVKAVJBKZDLZVOBMZNZOZDAPZVL
      NZOZVMOAVJBQVNELZBMZVSIZOZEARZWAWEEAWBANZWBWCNZOZWBVSNZSZWEWJWGWIVRWIDWBA
      VOWBIZVQWHWLVOWBVPWCWLTVOWBBUAUBUCUDUEWKWHWJSZOWEWHWJUFWDWMWCVSWBUGUHUIUJ
      UKVNWDEAULZOWAWFVNVTWNVNBAUMZVTWNUNAVJBUOWOVTWNEAVSBUPUQUJURWDEAUSUTVAVMV
      TVMVTVSVJNZWPVSAVBVRDAVCVSAVRDACVDVEVFVLVJVSUGVGUHVHVI $.
      $( [7-Aug-1994] $)
  $}

  $( Cantor's theorem fails for the universal class (which is not a set but a
     proper class by ~ vprc ).  Specifically, the identity function maps the
     universe onto its power class.  Compare ~ canth that works for sets.  See
     also the remark in ~ ru about NF, in which Cantor's theorem fails for sets
     that are "too large."  This theorem gives some intuition behind that
     failure: in NF the universal class is a set, and it equals its own power
     set. $)
  ncanth $p |- _I : _V -onto-> ~P _V $=
    ( cvv cpw cid wf1o wfo f1ovi wceq wb pwv f1oeq3 ax-mp mpbir f1ofo ) AABZCDZ
    ANCEOAACDZFNAGOPHINAACJKLANCMK $.
    $( [29-Jun-2004] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  Miscellaneous ordinal theorems (that depend on functions and relations)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z A $.  $d y z B $.
    iunon.1 $e |- A e. _V $.
    iunon.2 $e |- B e. _V $.
    $( The indexed union of a set of ordinal numbers ` B ( x ) ` is an ordinal
       number. $)
    iunon $p |- ( A. x e. A B e. On -> U_ x e. A B e. On ) $=
      ( vy vz con0 wcel wral cv wceq wrex cab cuni ciun wss wi wal hbra1 ax-17 
      ra4 eleq1a syl6 r19.23ad abid syl5ib 19.21aiv hbab1 dfss2f sylibr 
      abrexex ssonunii syl dfiun2 syl5eqel ) CHIZABJZFKZCLZABMZFNZOZHABCPURVBHQ
      ZVCHIURUSVBIZUSHIZRZFSVDURVGFURVAVFVEURUTVFABUQABTVFAUAURAKBIUQUTVFRUQABU
      BCHUSUCUDUEVAFUFUGUHFGVBHVAFGUIGKHIFUAUJUKVBAFBCDULUMUNAFBCEUOUP $.
      $( [13-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d y z B $.
    iinon.1 $e |- B e. _V $.
    $( The nonempty indexed intersection of a class of ordinal numbers
       ` B ( x ) ` is an ordinal number. $)
    iinon $p |- ( ( A. x e. A B e. On /\ A =/= (/) ) ->
                |^|_ x e. A B e. On ) $=
      ( vy vz con0 wcel wral c0 wne wa cv wceq wrex cab cint ciin wss oninton 
      wex df-rex exbii excom 19.42v isseti mpbiran2 3bitr2ri n0 abn0 3bitr4i 
      sylan2b wi wal hbra1 ax-17 ra4 eleq1a syl6 r19.23ad abid syl5ib 19.21aiv 
      hbab1 dfss2f sylibr sylan dfiin2 syl5eqel ) CGHZABIZBJKZLEMZCNZABOZEPZQZG
      ABCRVPGSZVLVQGHZVKVRVPJKZVSVLVPTAMBHZAUAZVOEUAZVLVTWCWAVNLZAUAZEUAWDEUAZA
      UAWBVOWEEVNABUBUCWDAEUDWFWAAWFWAVNEUAWAVNEUEECDUFUGUCUHABUIVOEUJUKULVKVMV
      PHZVMGHZUMZEUNVRVKWIEVKVOWHWGVKVNWHABVJABUOWHAUPVKWAVJVNWHUMVJABUQCGVMURU
      SUTVOEVAVBVCEFVPGVOEFVDFMGHEUPVEVFVGAEBCDVHVI $.
      $( [17-May-2007] $) $( [13-Oct-2003] $)
  $}

  ${
    $d x y S $.  $d x y F $.  $d x T $.
    onfununi.1 $e |- ( Lim y -> ( F ` y ) = U_ x e. y ( F ` x ) ) $.
    onfununi.2 $e |- ( ( x e. On /\ y e. On /\ x C_ y )
                  -> ( F ` x ) C_ ( F ` y ) ) $.
    $( A property of functions on ordinal numbers.  Generalization of Theorem
       Schema 8E of [Enderton] p. 218.  (Contributed by Eric Schmidt,
       26-May-2009.) $)
    onfununi $p |- ( ( S e. T /\ S C_ On /\ S =/= (/) )
                -> ( F ` U. S ) = U_ x e. S ( F ` x ) ) $=
      ( wcel con0 wss c0 wne w3a cuni cfv cv ciun wn wa wlim wceq word 
      ssorduni ad2antrr ssn0 wi wo elssuni adantl wb ordsseleq ssel eloni syl6 
      imp syl2an anabss1 mpbid ord con1d nelneq syl5 exp4b pm2.43d com23 ssrdv 
      sylan uniss syl orduniss adantr eqssd 3jca df-lim sylibr an32s 3adantl1 
      ssonuni limeq fveq2 iuneq1 eqeq12d imbi12d vtoclg 3adant3 mpd wral wrex 
      anim1d onelon adantrd ordelss a1i syland 3jcad exp3a reximdvai eluni2 
      syl5ib ssiun r19.21aiv iunss cbviunv syl6ss 3ad2ant2 eqsstrd ex ssiun2s 
      pm2.61d2 jcad sseq2 anbi2d sseq2d 3com12 3expib vtoclga sylsyld ) CDHZCIJ
      ZCKLZMZCNZEOZACAPZEOZQZYAYBCHZYCYFJZYAYGRZYHYAYISZYCAYBYEQZYFYJYBTZYCYKUA
      ZXSXTYIYLXRXSYIXTYLXSYISZXTSZYBUBZYBKLZYBYBNZUAZMYLYOYPYQYSXSYPYIXTCUCZUD
      CYBJZXTYQYNCYBUEYNACYBXSYIYDCHZYDYBHZUFXSUUBYIUUCXSUUBYIUUCUFXSUUBUUBYIUU
      CXSUUBSZYDYBUAZRUUCUUBYISUUDUUCUUEUUDUUCUUEUUDYDYBJZUUCUUEUGZUUBUUFXSYDCU
      HZUIXSUUBUUFUUGUJZYDUBZYPUUIUUDXSYDYBUKXSUUBUUJXSUUBYDIHZUUJCIYDULZYDUMUN
      UOYTUPUQURUSUTYDYBCVAVBVCVDVEUOVFZVGYNYSXTYNYBYRYNUUAYBYRJUUMCYBVHVIXSYRY
      BJZYIXSYPUUNYTYBVJVIVKVLVKVMYBVNVOVPVQYAYLYMUFZYIXRXSUUOXTXRXSUUOXRXSYBIH
      ZUUOCDVRZBPZTZUUREOZAUURYEQZUAZUFUUOBYBIUURYBUAZUUSYLUVBYMUURYBVSUVCUUTYC
      UVAYKUURYBEVTZAUURYBYEWAWBWCFWDUNUOWEVKWFYAYKYFJZYIXSXRUVEXTXSYKBCUUTQZYF
      XSYEUVFJZAYBWGYKUVFJXSUVGAYBXSUUCYEUUTJZBCWHZUVGXSYDUURHZBCWHUVIUUCXSUVJU
      VHBCXSUURCHZUVJUVHXSUVKUVJSZUUKUURIHZYDUURJZMUVHXSUVLUUKUVMUVNXSUVLUVMUVJ
      SUUKXSUVKUVMUVJCIUURULZWIUURYDWJUNXSUVKUVMUVJUVOWKXSUURUBZUVJUVNUVKUVPUVJ
      SUVNUFXSUURYDWLWMXSUVKUVMUVPUVOUURUMUNWNWOGUNWPWQBYDCWRWSBCUUTYEWTUNXAAYB
      YEUVFXBVOBACUUTYEUURYDEVTXCXDXEVKXFXGACYEYBYCYDYBEVTXHXIYAYEYCJZACWGYFYCJ
      YAUVQACYAUUPUUBUUKUUFSZUVQXRXSUUPXTXRXSUUPUUQUOWEYAUUBUUKUUFXSXRUUBUUKUFX
      TUULXEUUBUUFUFYAUUHWMXJUUKUVNSZUVHUFUVRUVQUFBYBIUVCUVSUVRUVHUVQUVCUVNUUFU
      UKUURYBYDXKXLUVCUUTYCYEUVDXMWCUVMUUKUVNUVHUUKUVMUVNUVHGXNXOXPXQXAACYEYCXB
      VOVL $.
      $( [26-May-2009] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.  $d w x y z K $.  $d w x y L $.
    $d w x y z S $.
    onopruni.1 $e |- ( Lim y -> ( A F y ) = U_ x e. y ( A F x ) ) $.
    onopruni.2 $e |- ( ( x e. On /\ y e. On /\ x C_ y )
                  -> ( A F x ) C_ ( A F y ) ) $.
    ${
      $d x T $.
      $( A variant of ~ onfununi for operations.  (Contributed by Eric Schmidt,
         26-May-2009.) $)
      onopruni $p |- ( ( S e. T /\ S C_ On /\ S =/= (/) )
                     -> ( A F U. S ) = U_ x e. S ( A F x ) ) $=
        ( vw vz wcel con0 wss c0 wne w3a cuni cv co wceq copab cfv ciun wlim 
        visset oprex opreq2 fvopab a1i iuneq2i 3eqtr4g 3sstr4g onfununi cvv 
        fvopabg uniexg sylancl 3ad2ant1 3eqtr3d ) DEKZDLMZDNOZPZDQZIRCJRZFSZTJI
        UAZUBZADARZVGUBZUCZCVDFSZADCVIFSZUCZABDEVGBRZUDCVOFSZAVOVMUCVOVGUBZAVOV
        JUCGJIVOVFVPBUECVOFUFVEVOCFUGUHZAVOVJVMVJVMTZVIVOKJIVIVFVMAUECVIFUFVEVI
        CFUGUHZUIUJUKVILKVOLKVIVOMPVMVPVJVQHVTVRULUMUTVAVHVLTZVBVDUNKVLUNKWAUTJ
        IVDVFVLUNUNVEVDCFUGUODEUPCVDFUFUQURVKVNTVCADVJVMVSVIDKVTUIUJUIUS $.
        $( [26-May-2009] $)
    $}

    $( A variant of ~ onopruni with indexed unions.  (Contributed by Eric
       Schmidt, 26-May-2009.)  (Unnecessary distinct variable restrictions were
       removed by David Abernethy, 19-Jun-2012.) $)
    onopriun $p |- ( ( K e. T /\ A. z e. K L e. On /\ K =/= (/) )
                -> ( A F U_ z e. K L ) = U_ z e. K ( A F L ) ) $=
      ( vw wcel con0 wral c0 wne w3a ciun co cv wceq wrex cab cuni dfiun2g 
      opreq2d 3ad2ant2 cvv wss abrexexg 3ad2ant1 hbra1 ax-17 ra4 eleq1 biimprd 
      syl9 com23 r19.23ad abssdv wa wex r19.2z elex reximi syl rexcom4 sylib 
      abn0 sylibr ancoms 3adant1 onopruni syl111anc wb imp opreq2 eqeq2d 
      ceqsexgv rexbida visset eqeq1 rexbidv elab anbi1i r19.41v bitr4i exbii 
      df-rex 3bitr4i syl5bb abbidv unieqd oprex dfiun2 3eqtr4g 3eqtrd ) GELZHML
      ZCGNZGOPZQZDCGHRZFSZDKTZHUAZCGUBZKUCZUDZFSZAXHDATZFSZRZCGDHFSZRZWTWRXDXJU
      AXAWTXCXIDFCKGHMUEUFUGXBXHUHLZXHMUIZXHOPZXJXMUAWRWTXPXACKGHEUJUKWTWRXQXAW
      TXGKMWTXFXEMLZCGWSCGULZXSCUMWTXFCTGLZXSWTYAWSXFXSWSCGUNZXFXSWSXEHMUOUPUQU
      RUSUTUGWTXAXRWRXAWTXRXAWTVAZXGKVBZXRYCXFKVBZCGUBZYDYCWSCGUBYFWSCGVCWSYECG
      KHMVDVEVFXFCKGVGVHXGKVIVJVKVLABDXHUHFIJVMVNWTWRXMXOUAXAWTBTZXLUAZAXHUBZBU
      CZUDYGXNUAZCGUBZBUCZUDXMXOWTYJYMWTYIYLBWTXKHUAZYHVAZAVBZCGUBZYLYIWTYPYKCG
      XTWTYAVAWSYPYKVOWTYAWSYBVPYHYKAHMYNXLXNYGXKHDFVQVRVSVFVTXKXHLZYHVAZAVBYOC
      GUBZAVBYIYQYSYTAYSYNCGUBZYHVAYTYRUUAYHXGUUAKXKAWAXEXKUAXFYNCGXEXKHWBWCWDW
      EYNYHCGWFWGWHYHAXHWIYOCAGVGWJWKWLWMABXHXLDXKFWNWOCBGXNDHFWNWOWPUGWQ $.
      $( [24-Jul-2012] $) $( [26-May-2009] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Transfinite recursion
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z A $.  $d y z B $.  $d x y z w F $.  $d x y z w G $.
    $( A technical lemma for transfinite recursion.  Compare Lemma 1 of
       [TakeutiZaring] p. 47.  (Unnecessary distinct variable restrictions were
       removed by David Abernethy, 19-Jun-2012.) $)
    tfrlem1 $p |- ( A e. On -> ( ( F Fn A /\ G Fn A ) ->
                  ( A. x e. A ( ( F ` x ) = ( B ` ( F |` x ) ) /\
                                        ( G ` x ) = ( B ` ( G |` x ) ) ) ->
                  A. x e. A ( F ` x ) = ( G ` x ) ) ) ) $=
      ( vy vz vw con0 wcel wfn wa wss cv cfv cres wceq wral wi ssid sseq1 
      raleq imbi12d imbi2d anbi2d anbi12d onelss sstr2 anim2d ax-17 hbra1 ssel 
      ra4 syl9 r19.21ad anim12d syl6 com23 r19.21adv eqeq12 fvreseq biimpar 
      fveq2d syl5bir exp4c com4l imp4a imp31 ralimdva ralim fveq2 eqeq12d 
      cbvralv syl5bb cbvral syl5ib ex imim12d pm2.43 syl5 tfis2 vtoclga mpii ) 
      BIJDBKEBKLZBBMZANZDOZDWFPZCOZQWFEOZEWFPZCOZQLZABRZWGWJQZABRZSZBTWDFNZBMZW
      MAWRRZWOAWRRZSZSZSWDWEWQSZSFBIWRBQZXCXDWDXEWSWEXBWQWRBBUAXEWTWNXAWPWMAWRB
      UBWOAWRBUBUCUCUDWRIJZWDWSWTXAWDWSLZWTLZXASZWDGNZBMZLZWMAXJRZLZWOAXJRZSZFG
      WRXJQZXHXNXAXOXQXGXLWTXMXQWSXKWDWRXJBUAUEWMAWRXJUBUFWOAWRXJUBUCXFXNGWRRZX
      OGWRRZSZXIXPGWRRXFXTXHXISXIXFXHXRXSXIXFXHXNGWRXFXJWRJZXHXNXFYAXJWRMZXHXNS
      WRXJUGYBXGXLWTXMYBWSXKWDXJWRBUHUIYBWTWMAXJYBAUJWMAWRUKYBWFXJJWFWRJZWTWMXJ
      WRWFULWMAWRUMUNUOUPUQURUSXFXSXGWTXAXFXGXSXBXFXGXSXBSXFXGLZHNZDOZYEEOZQZHW
      FRZAWRRZXBXSYDYJWMWOSZAWRRXBYDYIYKAWRXFXGYCYIYKSZXFYCXGYLXFYCWDWSYLXFYCWF
      WRMZWDWSYLSSWRWFUGYMWSWFBMZWDYLWFWRBUHWMWDYNYIWOWMWDYNYIWOWMWOWIWLQWDYNLZ
      YILZWGWIWJWLUTYPWHWKCYOWHWKQYIHBWFDEVAVBVCVDVEVFUNUQVGURVHVIWMWOAWRVJUQXO
      YIGAWRWOAXJUKYIGUJXJWFQYHHXJRYIXOYHHXJWFUBWOYHAHXJWFYEQWGYFWJYGWFYEDVKWFY
      EEVKVLVMVNVOVPVQURVGVRXHXAVSUQXNXOGWRVJVTWAVEWBWC $.
      $( [24-Jul-2012] $) $( [23-Mar-1995] $)
  $}

  ${
    $d w A $.  $d w F $.  $d w G $.  $d w x $.
    $( Lemma for transfinite recursion.  This provides some messy details
       needed to link ~ tfrlem1 into the main proof.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    tfrlem2 $p |- ( ( F Fn A /\ G Fn A ) ->
       ( ( <. x , y >. e. F /\ <. x , z >. e. G ) ->
       ( A e. On -> ( A. w ( A e. On -> ( w e. A ->
          ( ( F ` w ) = ( B ` ( F |` w ) ) /\
            ( G ` w ) = ( B ` ( G |` w ) ) ) ) ) ->
       y = z ) ) ) ) $=
      ( wfn wa cv cop wcel con0 cfv cres wceq wi wal wral fnop adantlr tfrlem1 
      com12 imp3a adantr fveq2 eqeq12d rcla4v sylsyld imp adantlrr df-ral 
      anbi2i sylan2br wb wfun visset funopfv anim12i an4s fnfun sylan eqeq12 
      syl mpbid abai albii 19.28v 3bitr3ri sylan2b exp43 ) GEIZHEIZJZAKZBKZLGMZ
      VPCKZLHMZJZENMZWBDKZEMWCGOZGWCPFOQWCHOZHWCPFOQJZRZRZDSZVQVSQZVOWAJZWBWGDS
      ZJZWJWBWIJZWKWMJVPGOZVPHOZQZWJWKWBWFDETZJZWQWMVOVRWSWQVTVOVRJZWSWQWTVPEMZ
      WSWDWEQZDETZWQVMVRXAVNEVPVQGUAUBVOWSXCRVRVOWBWRXCWBVOWRXCRDEFGHUCUDUEUFXB
      WQDVPEWCVPQWDWOWEWPWCVPGUGWCVPHUGUHUIUJUKULWRWLWBWFDEUMUNUOWKWQWJUPZWMWKW
      OVQQZWPVSQZJZXDGUQZHUQZJWAXGVOXHVRXIVTXGXHVRJXEXIVTJXFXHVRXEVPVQGBURUSUKX
      IVTXFVPVSHCURUSUKUTVAVMXHVNXIEGVBEHVBUTVCWOVQWPVSVDVEUFVFWBWGJZDSWBWHJZDS
      WMWNXJXKDWBWGVGVHWBWGDVIWBWHDVIVJVKVL $.
      $( [24-Jul-2012] $) $( [23-Mar-1995] $)
  $}

  ${
    $d x y f g $.  $d x y z $.  $d g z $.  $d f g G $.  $d x z G $.
    tfrlem3.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.
    $( Lemma for transfinite recursion.  Let ` A ` be the class of "acceptable"
       functions.  The final thing we're interested in is the union of all
       these acceptable functions.  This lemma just changes some bound
       variables in ` A ` for later use. $)
    tfrlem3 $p |- A = { g | E. z e. On ( g Fn z /\
                A. y e. z ( g ` y ) = ( G ` ( g |` y ) ) ) } $=
      ( cv wfn cfv cres wceq wral wa con0 wrex cab wcel visset fneq1 fveq1 
      reseq1 fveq2d eqeq12d ralbidv anbi12d rexbidv elab fneq2 raleq cbvrexv 
      bitri abbi2i eqtri ) DEIZAIZJZBIZUPKZUPUSLZGKZMZBUQNZOZAPQZERZFIZCIZJZUSV
      HKZVHUSLZGKZMZBVINZOZCPQZFRHVQFVGVHVGSVHUQJZVNBUQNZOZAPQZVQVFWAEVHFTUPVHM
      ZVEVTAPWBURVRVDVSUQUPVHUAWBVCVNBUQWBUTVKVBVMUSUPVHUBWBVAVLGUPVHUSUCUDUEUF
      UGUHUIVTVPACPUQVIMVRVJVSVOUQVIVHUJVNBUQVIUKUGULUMUNUO $.
      $( [3-May-2004] $) $( [9-Apr-1995] $)
  $}

  ${
    $d x y f g $.  $d f g G $.
    tfrlem3a.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.
    $( Lemma for transfinite recursion.  Let ` A ` be the class of "acceptable"
       functions.  The final thing we're interested in is the union of all
       these acceptable functions.  This lemma just changes some bound
       variables in ` A ` for later use. $)
    tfrlem3a $p |- A = { g | E. x e. On ( g Fn x /\
                A. y e. x ( g ` y ) = ( G ` ( g |` y ) ) ) } $=
      ( cv wfn cfv cres wceq wral wa con0 wrex cab visset fneq1 fveq1 reseq1 
      fveq2d eqeq12d ralbidv anbi12d rexbidv elab abbi2i eqtri ) CDHZAHZIZBHZUJ
      JZUJUMKZFJZLZBUKMZNZAOPZDQZEHZUKIZUMVBJZVBUMKZFJZLZBUKMZNZAOPZEQGVJEVAUTV
      JDVBERUJVBLZUSVIAOVKULVCURVHUKUJVBSVKUQVGBUKVKUNVDUPVFUMUJVBTVKUOVEFUJVBU
      MUAUBUCUDUEUFUGUHUI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d f x y g z G $.
    tfrlem.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.
    $( Lemma for transfinite recursion. ` A ` is the class of all "acceptable"
       functions, and ` F ` is their union.  First we show that an acceptable
       function is in fact a function. $)
    tfrlem4 $p |- ( g e. A -> Fun g ) $=
      ( vz cv wcel wfn cfv cres wceq wral wa con0 wrex wfun tfrlem3 abeq2i wi 
      fnfun adantr a1i r19.23aiv sylbi ) EIZCJUHHIZKZBIZUHLUHUKMFLNBUIOZPZHQRZU
      HSZUNECABHCDEFGTUAUMUOHQUMUOUBUIQJUJUOULUIUHUCUDUEUFUG $.
      $( [3-May-2004] $) $( [9-Apr-1995] $)

    $d h w G $.  $d f g h u v w x y z $.
    $( Lemma for transfinite recursion.  The values of two acceptable functions
       are the same within their domains. $)
    tfrlem5 $p |- ( ( g e. A /\ h e. A ) ->
                  ( ( <. x , u >. e. g /\ <. x , v >. e. h ) -> u = v ) ) $=
      ( vz vw cv wcel wa wfn cfv cres wceq wral con0 wrex cop wi tfrlem3 
      abeq2i anbi12i reeanv bitr4i cin wal 2elresin tfrlem2 fnresin1 fnresin2 
      syl2an sylbid com24 com3r imp32 onin r19.26m prth simpr elin sylib syl5 
      wss wb onelss impac fvres resabs1 fveq2d eqeqan12rd anbi12d syl bicomd 
      mpbidi exp3a alimi sylbir anim2i an4s ex r19.23aivv sylbi ) GMZENZHMZENZO
      ZWHKMZPZBMZWHQZWHWORZIQZSZBWMTZOZWJLMZPZWOWJQZWJWORZIQZSZBXBTZOZOZLUAUBKU
      AUBZAMZDMZUCZWHNXLCMZUCZWJNOZXMXOSZUDZWLXAKUAUBZXILUAUBZOXKWIXTWKYAXTGEAB
      KEFGIJUEUFYAHEABLEFHIJUEUFUGXAXIKLUAUAUHUIXJXSKLUAUAWMUANXBUANOZXJXSWMXBU
      JZUANZWNXCOZYDWOYCNZWOWHYCRZQZYGWORZIQZSZWOWJYCRZQZYLWORZIQZSZOZUDUDZBUKZ
      OZXSYBXJYDYEYSXSYEYSYDXSYEXQYDYSXRYEXQXNYGNXPYLNOZYDYSXRUDUDZADCWMXBWHWJU
      LYGYCPYLYCPUUAUUBUDWNXCADCBYCIYGYLUMWMXBWHUNXBWMWJUOUPUQURUSUTWMXBVAWNXCW
      TXHYTWTXHOZYSYEUUCWOWMNZWSUDWOXBNZXGUDOZBUKYSWSXGBWMXBVBUUFYRBUUFYDYFYQYD
      YFOZWSXGOZYQUUFUUFUUDUUEOZUUHUUGUUDWSUUEXGVCUUGYFUUIYDYFVDWOWMXBVEVFVGUUG
      YQUUHUUGWOYCVHZYFOZYQUUHVIYDYFUUJYCWOVJVKUUKYKWSYPXGYFUUJYHWPYJWRWOYCWHVL
      UUJYIWQIWHWOYCVMVNVOYFUUJYMXDYOXFWOYCWJVLUUJYNXEIWJWOYCVMVNVOVPVQVRVSVTWA
      WBWCWDUPWEWFWG $.
      $( [3-May-2004] $) $( [9-Apr-1995] $)

    $d g A $.
    tfrlem.2 $e |- F = U. A $.
    $( Lemma for transfinite recursion.  The union of all acceptable functions
       is a relation. $)
    tfrlem6 $p |- Rel F $=
      ( vg cuni wceq wrel cv reluni wcel wfun tfrlem4 funrel syl mprgbir releq 
      mpbiri ax-mp ) ECJZKZELZHUEUFUDLZUGIMZLZICICNUHCOUHPUIABCDIFGQUHRSTEUDUAU
      BUC $.
      $( [3-May-2004] $) $( [8-Aug-1994] $)

    $d h A $.  $d u v x F $.
    $( Lemma for transfinite recursion.  The union of all acceptable functions
       is a function. $)
    tfrlem7 $p |- Fun F $=
      ( vu vv vg vh wfun wrel cv cop wcel wa wceq wi wal dffun4 tfrlem6 wex 
      cuni eleq2i eluni bitri anbi12i eeanv bitr4i an4 ancom tfrlem5 imp sylbi 
      19.23aivv ax-gen gen2 mpbir2an ) EMENAOZIOZPZEQZVAJOZPZEQZRZVBVESZTZJUAZI
      UAAUAAIJEUBABCDEFGHUCVKAIVJJVHVCKOZQZVLCQZRZVFLOZQZVPCQZRZRZLUDKUDZVIVHVO
      KUDZVSLUDZRWAVDWBVGWCVDVCCUEZQWBEWDVCHUFKVCCUGUHVGVFWDQWCEWDVFHUFLVFCUGUH
      UIVOVSKLUJUKVTVIKLVTVNVRRZVMVQRZRZVIVTWFWERWGVMVNVQVRULWFWEUMUHWEWFVIABJI
      CDKLFGUNUOUPUQUPURUSUT $.
      $( [4-May-2004] $) $( [9-Aug-1994] $)

    $d x f A $.
    $( Lemma for transfinite recursion.  The domain of ` F ` is ordinal.  (The
       proof was shortened by Alan Sare, 11-Mar-2008.) $)
    tfrlem8 $p |- Ord dom F $=
      ( cdm word cv wceq wrex cab cuni con0 wss wcel eleq1a imp wfn wa wex cfv 
      cres wral abeq2i simpl reximi sylbi df-rex sylib fndm sylan2 19.23aiv 
      syl sylan r19.23aiva abssi ssorduni ax-mp wb ciun dmeqi dmuni visset 
      dmex dfiun2 3eqtri ordeq mpbir ) EIZJZAKZDKZIZLZDCMZANZOZJZVSPQWAVRAPVQVN
      PRZDCVPPRZVQWBVOCRZWCVQWBVPPVNSTWDWBVOVNUAZUBZAUCZWCWDWEAPMZWGWDWEBKZVOUD
      VOWIUEFUDLBVNUFZUBZAPMZWHWLDCGUGWKWEAPWEWJUHUIUJWEAPUKULWFWCAWBVPVNLZWCWE
      WBWMWCVNPVPSTVNVOUMUNUOUPUQURUSVSUTVAVLVTLVMWAVBVLCOZIDCVPVCVTEWNHVDDCVED
      ACVPVODVFVGVHVIVLVTVJVAVK $.
      $( [12-Mar-2008] $) $( [14-Aug-1994] $)

    $d f z F $.
    $( Lemma for transfinite recursion.  Here we compute the value of ` F `
       (the union of all acceptable functions). $)
    tfrlem9 $p |- ( y e. dom F -> ( F ` y ) = ( G ` ( F |` y ) ) ) $=
      ( vz cv cdm wcel cop wex cfv cres wceq visset eldm2 wfn wral wa con0 
      wrex cab cuni unieqi eqtri eleq2i eluniab bitri wi fnop wss ra4e abeq2i 
      elssuni syl6ssr sylbir syl ra4 com12 fndm eleq2d wfun tfrlem7 funssfv 
      mp3an1 adantrl w3a fun2ssres fveq2d eleq1d onelss syl6bir imp31 sylan2 
      eqeq12d exbiri com3l exp31 com34 com24 sylbird syld imp4d mpdi exp4d ex 
      com4r pm2.43i imp4a r19.23adv imp 19.23aiv sylbi ) BJZEKLWQIJZMZELZINWQEO
      ZEWQPZFOZQZIWQEBRSWTXDIWTWSDJZLZXEAJZTZWQXEOZXEWQPZFOZQZBXGUAZUBZAUCUDZUB
      ZDNZXDWTWSXODUEZUFZLXQEXSWSECUFZXSHCXRGUGUHUIXODWSUJUKXPXDDXFXOXDXFXNXDAU
      CXFXGUCLZXHXMXDXHXFYAXMXDULZXHXFYAYBULULXHXFYAXHYBXHXFYAXHYBULULXHXFUBZYA
      XHXMXDYCWQXGLZYAXNUBZXDULXGWQWRXEUMYDYEXEEUNZXDYEXOYFXNAUCUOXOXECLZYFXODC
      GUPYGXEXTEXECUQHURUSUTYDYAXHXMYFXDULZYDXMXHYAYHYDXMXLXHYAYHULZULXMYDXLXLB
      XGVAVBXHYDXLYIXHYDWQXEKZLZXLYIULXHYJXGWQXGXEVCZVDXHYAXLYKYHXHYAYKXLYHXHYA
      YKXLYHULYFXHYAUBZYKUBZXLXDYFYNXDXLYFYNUBXAXIXCXKYFYKXAXIQZYMEVEZYFYKYOABC
      DEFGHVFZWQEXEVGVHVIYFWQYJUNZXCXKQZYNYPYFYRYSYQYPYFYRVJXBXJFWQEXEVKVLVHXHY
      AYKYRXHYAYJUCLYKYRULXHYJXGUCYLVMYJWQVNVOVPVQVRVSVTWAWBWCWDVTWEWCWFWGUTWHW
      IWJWKVTWLWMWNWOWPWOWP $.
      $( [4-May-2004] $) $( [17-Aug-1994] $)

    ${
      $d w F $.
      tfrlem.3 $e |- C = ( F u. { <. dom F , ( G ` ( F |` dom F ) ) >. } ) $.
      $( Lemma for transfinite recursion.  We define class ` C ` by extending
         ` F ` with one ordered pair.  We will assume, falsely, that domain of
         ` F ` is a member of, and thus not equal to, ` On ` .  Using this
         assumption we will prove facts about ` C ` that will lead to a
         contradiction in ~ tfrlem13 , thus showing the domain of ` F ` does in
         fact equal ` On ` .  Here we show (under the false assumption) that
         ` C ` is a function extending the domain of ` F ` by one.  (The proof
         was shortened by Alan Sare, 20-Feb-2008.) $)
      tfrlem10 $p |- ( dom F e. On -> C Fn suc dom F ) $=
        ( vw cdm con0 wcel cres cfv cop csn cun csuc wfn wfun wceq wa cin c0 
        funun cv wb opeq1 sneq funeq 3syl visset fvex funsn vtoclg tfrlem7 
        jctil dmsnop ineq2i word tfrlem8 orddisj ax-mp eqtri sylancl uneq2i 
        dmun df-suc 3eqtr4i jctir df-fn sylibr fneq1i ) FLZMNZFVPFVPOZGPZQZRZSZ
        VPTZUAZDWCUAVQWBUBZWBLZWCUCZUDWDVQWEWGFUBZWAUBZUDVPWALZUEZUFUCWEVQFWAUG
        VQWIWHKUHZVSQZRZUBZWIKVPMWLVPUCWMVTUCWNWAUCWOWIUIWLVPVSUJWMVTUKWNWAULUM
        WLVSKUNVRGUOUPUQABCEFGHIURUSWKVPVPRZUEZUFWJWPVPVPVSUTZVAVPVBWQUFUCABCEF
        GHIVCVPVDVEVFVGVPWJSVPWPSWFWCWJWPVPWRVHFWAVIVPVJVKVLWBWCVMVNWCDWBJVOVN 
        $.
        $( [20-Feb-2008] $) $( [14-Aug-1994] $)

      $( Lemma for transfinite recursion.  Compute the value of ` C ` . $)
      tfrlem11 $p |- ( dom F e. On ->
                     ( y e. suc dom F -> ( C ` y ) = ( G ` ( C |` y ) ) ) ) $=
        ( cdm con0 wcel cv wceq wo cfv cres csuc wi wfun wa wss cop csn cun 
        ssun1 sseqtr4i funssfv 3expa adantrl fun2ssres fveq2d onelss imp 
        sylan2 eqeq12d tfrlem9 syl5bir mpanl2 wfn tfrlem10 fnfun syl sylan 
        exp32 pm2.43i pm2.43d opeq1 adantl mp3an2 eqimss syl2an reseq2 eqtrd 
        fveq2 opeq2 3syl sneqd opex snid syl5eleq elun2 syl6eleqr wb fvex 
        fnopfvb visset eqelsuc mpbird ex jaod elsuci syl5 ) FKZLMZBNZWOMZWQWOOZ
        PWQDQZDWQRZGQZOZWQWOSZMZWPWRXCWSWPWRXCWPWRWRXCTZTWPWPWRXFDUAZWPWRUBZXFW
        PXGFDUCZXHXFFFWOFWORZGQZUDZUEZUFZDFXMUGJUHZXGXIUBZXHUBZXCWQFQZFWQRZGQZO
        WRXQWTXRXBXTXPWRWTXROZWPXGXIWRYAWQDFUIUJUKXPWQWOUCZXBXTOXHXPYBUBXAXSGXG
        XIYBXAXSOZWQDFULZUJUMWPWRYBWOWQUNUOUPUQABCEFGHIURUSUTWPDXDVAZXGABCDEFGH
        IJVBZXDDVCVDZVEVFVGVHWPWSXCWPWSUBZXCWQXBUDZDMZYHYIXNDYHYIXMMYIXNMYHYIUE
        XMYIYHYIXLYHYIWOXBUDZXLWSYIYKOWPWQWOXBVIVJYHXAXJOXBXKOYKXLOYHXAXSXJXGYB
        YCWPWSXGXIYBYCXOYDVKYGWQWOVLVMWSXSXJOWPWQWOFVNVJVOXAXJGVPXBXKWOVQVRVOVS
        YIWQXBVTWAWBYIXMFWCVDJWDYEXEXCYJWEWPWSXDWQXBDXAGWFWGYFWQWOBWHWIVMWJWKWL
        WQWOWMWN $.
        $( [4-May-2004] $) $( [18-Aug-1994] $)

      $d f x y C $.  $d y F $.
      $( Lemma for transfinite recursion.  Show ` C ` is an acceptable
         function. $)
      tfrlem12 $p |- ( dom F e. On -> C e. A ) $=
        ( cdm con0 wcel cv wfn cfv cres wceq wral wa wrex csuc suceloni 
        tfrlem10 tfrlem11 r19.21aiv fneq2 raleq anbi12d rcla4ev syl12anc cvv 
        wb fnex syl11anc fneq1 fveq1 reseq1 fveq2d eqeq12d ralbidv rexbidv 
        elab2g syl mpbird ) FKZLMZDCMZDANZOZBNZDPZDVKQZGPZRZBVISZTZALUAZVGVFUBZ
        LMZDVSOZVOBVSSZVRVFUCZABCDEFGHIJUDZVGVOBVSABCDEFGHIJUEUFVQWAWBTAVSLVIVS
        RVJWAVPWBVIVSDUGVOBVIVSUHUIUJUKVGDULMZVHVRUMVGWAVTWEWDWCVSLDUNUOENZVIOZ
        VKWFPZWFVKQZGPZRZBVISZTZALUAVREDCULWFDRZWMVQALWNWGVJWLVPVIWFDUPWNWKVOBV
        IWNWHVLWJVNVKWFDUQWNWIVMGWFDVKURUSUTVAUIVBHVCVDVE $.
        $( [4-May-2004] $) $( [15-Aug-1994] $)

      $( Lemma for transfinite recursion.  If ` dom F ` is in ` On ` , then
         ` C ` is acceptable, and thus a subset of ` F ` , but ` dom C ` is
         bigger than ` dom F ` .  This is a contradiction, so ` dom F ` must be
         ` On ` . $)
      tfrlem13 $p |- dom F = On $=
        ( cdm con0 wcel wn wceq wo word tfrlem8 ordirr tfrlem12 csuc sucidg 
        wfn tfrlem10 fndm syl eleqtrrd wss wi cuni elssuni syl6ssr dmss ssel 
        3syl sylc nsyl ax-mp ordeleqon mpbi orel1 mp2 ) FKZLMZNZVDVCLOZPZVFVCQZ
        VEABCEFGHIRZVHVCVCMZVDVCSVDDCMZVCDKZMZVJABCDEFGHIJTVDVCVCUAZVLVCLUBVDDV
        NUCVLVNOABCDEFGHIJUDVNDUEUFUGVKDFUHVLVCUHVMVJUIVKDCUJFDCUKIULDFUMVLVCVC
        UNUOUPUQURVHVGVIVCUSUTVDVFVAVB $.
        $( [4-May-2004] $) $( [14-Aug-1994] $)

    $}
  $}

  ${
    $d f x A $.  $d x y f F $.  $d x y f G $.
    tfr.1 $e |- A = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.
    tfr.2 $e |- F = U. A $.
    $( TODO - rewrite so ~ eqid can eliminate hyps. $)
    $( Principle of Transfinite Recursion, part 1 of 3.  Theorem 7.41(1) of
       [TakeutiZaring] p. 47.  We start with an arbitrary class ` G ` ,
       normally a function, and define a class ` A ` of all "acceptable"
       functions.  The final function we're interested in is the union ` F ` of
       them. ` F ` is then said to be defined by transfinite recursion.  The
       purpose of the 3 parts of this theorem is to demonstrate properties of
       ` F ` .  In this first part we show that ` F ` is a function whose
       domain is all ordinal numbers. $)
    tfr1 $p |- F Fn On $=
      ( con0 wfn wfun cdm wceq df-fn tfrlem7 cres cfv cop csn cun eqid 
      tfrlem13 mpbir2an ) EIJEKELZIMEINABCDEFGHOABCEUDEUDPFQRSTZDEFGHUEUAUBUC 
      $.
      $( [5-May-2004] $) $( [17-Aug-1994] $)

    $d y z $.
    $( Principle of Transfinite Recursion, part 2 of 3.  Theorem 7.41(2) of
       [TakeutiZaring] p. 47.  Here we show that the function ` F ` has the
       property that for any function ` G ` whatsoever, the "next" value of
       ` F ` is ` G ` recursively applied to all "previous" values of
       ` F ` . $)
    tfr2 $p |- ( z e. On -> ( F ` z ) = ( G ` ( F |` z ) ) ) $=
      ( cv cfv cres wceq con0 fveq2 reseq2 fveq2d eqeq12d wcel cdm cop csn cun 
      eqid tfrlem13 eleq2i tfrlem9 sylbir vtoclga ) BJZFKZFUJLZGKZMZCJZFKZFUOLZ
      GKZMBUONUJUOMZUKUPUMURUJUOFOUSULUQGUJUOFPQRUJNSUJFTZSUNUTNUJABDFUTFUTLGKU
      AUBUCZEFGHIVAUDUEUFABDEFGHIUGUHUI $.
      $( [5-May-2004] $) $( [9-Apr-1995] $)

    $d x y B $.
    $( Principle of Transfinite Recursion, part 3 of 3.  Theorem 7.41(3) of
       [TakeutiZaring] p. 47.  Finally we show that ` F ` is unique.  We do
       this by showing that any class ` B ` with the same properties of ` F `
       that we showed in parts 1 and 2 is identical to ` F ` . $)
    tfr3 $p |- ( ( B Fn On /\
               A. x e. On ( B ` x ) = ( G ` ( B |` x ) ) ) -> B = F ) $=
      ( con0 wfn cv cfv cres wceq wral wa ax-17 hbra1 hban wcel wi hbim fveq2 
      eqeq12d imbi2d ra4 wss wb tfr1 fvreseq mpanl2 syl6bir onss sylan2 ancoms 
      imp adantr tfr2 jctr jcab sylibr eqeq12 syl6 adantl mpbird exp43 com4t 
      exp4a pm2.43d syl com3l imp3a a2d r19.21v syl5ib tfis2f com12 r19.21ai 
      eqid eqfnfv mpan2 biimpar mpanr1 syldan ) DJKZALZDMZDWGNZGMZOZAJPZWHWGFMZ
      OZAJPZDFOZWFWLQZWNAJWFWLAWFARWKAJSTZWGJUAZWQWNWQWNUBZWQBLZDMZXAFMZOZUBZAB
      WQXDAWRXDARUCWGXAOZWNXDWQXFWHXBWMXCWGXADUDWGXAFUDUEUFWSWQXDBWGPZUBWTXEBWG
      PWSWQXGWNWSWFWLXGWNUBZWLWSWFXHWLWSWKUBZWSWFXHUBZUBWKAJUGXIWSXJXIWSWSWFXHW
      SWFQZXGXIWSWNXKXGXIWSWNXKXGQZXIWSQZQWNWJFWGNZGMZOZXLXPXMXKXGXPWFWSXGXPUBZ
      WFWGJUHZXQWSWFXRQXGWIXNOZXPWFFJKZXRXSXGUIABCEFGHIUJZBJWGDFUKULWIXNGUDUMWG
      UNUOUPUQURXMWNXPUIZXLXIWSYBXIWSWKWMXOOZQZYBXIXIWSYCUBZQWSYDUBXIYEABACEFGH
      IUSUTWSWKYCVAVBWHWJWMXOVCVDUQVEVFVGVHVIVJVKVLVMVNWQXDBWGVOVPVQVRVSWFJJOZW
      OWPJVTWFWPYFWOQZWFXTWPYGUIYAAJJDFWAWBWCWDWE $.
      $( [5-May-2004] $) $( [18-Aug-1994] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y H $.
    tz7.44lem1.1 $e |- G = { <. x , y >. | ( ( x = (/) /\ y = A ) \/
            ( -. ( x = (/) \/ Lim dom x ) /\ y = ( H ` ( x ` U. dom x ) ) )
                \/ ( Lim dom x /\ y = U. ran x ) ) } $.
    $( ` G ` is a function.  Lemma for ~ tz7.44-1 , ~ tz7.44-2 , and
       ~ tz7.44-3 .  (Unnecessary distinct variable restrictions were removed
       by David Abernethy, 19-Jun-2012.) $)
    tz7.44lem1 $p |- Fun G $=
      ( wfun cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab wmo funopab 
      fvex cvv wcel visset rnexg uniexg syl ax-mp nlim0 wb dm0 limeq mtbir 
      dmeq biimpa mto moeq3 mpgbir funeq mpbir ) DGZAHZIJZBHZCJKVEVDLZMZNOVFVGP
      VDQZEQZJKVHVFVDRZPZJKSZABTZGZVOVMBUAAVMABUBVEVHBCVJVLVIEUCVDUDUEZVLUDUEZA
      UFVPVKUDUEVQVDUDUGVKUDUHUIUJVEVHKILZMZVSIMZUKVRIJVSVTULUMVRIUNUJUOVEVHVSV
      EVGVRJVHVSULVDIUPVGVRUNUIUQURUSUTDVNJVCVOULFDVNVAUJVB $.
      $( [24-Jul-2012] $) $( [23-Apr-1995] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d x F $.  $d x G $.  $d y H $.
    tz7.44.1 $e |- G = { <. x , y >. | ( ( x = (/) /\ y = A ) \/
            ( -. ( x = (/) \/ Lim dom x ) /\ y = ( H ` ( x ` U. dom x ) ) )
                \/ ( Lim dom x /\ y = U. ran x ) ) } $.
    tz7.44.2 $e |- F Fn On $.
    tz7.44.3 $e |- ( x e. On -> ( F ` x ) = ( G ` ( F |` x ) ) ) $.
    ${
      $d x y A $.
      tz7.44.4 $e |- A e. _V $.
      $( The value of ` F ` at ` (/) ` .  Part 1 of Theorem 7.44 of
         [TakeutiZaring] p. 49. $)
      tz7.44-1 $p |- ( F ` (/) ) = A $=
        ( c0 cfv cres con0 wcel wceq 0elon cv fveq2 reseq2 fveq2d eqeq12d 
        vtoclga ax-mp res0 fveq2i wfun cop tz7.44lem1 wa copab cdm wlim wo wn 
        cuni crn w3o 3mix1 ssopab2i sseqtr4i 0ex eqeq1 anbi1d anbi2d opelopab 
        eqid mpbir2an sselii funopfv mp2 3eqtri ) KDLZDKMZELZKELZCKNOVMVOPZQARZ
        DLZDVRMZELZPVQAKNVRKPZVSVMWAVOVRKDSWBVTVNEVRKDTUAUBIUCUDVNKEDUEUFEUGKCU
        HZEOVPCPABCEFGUIWBBRZCPZUJZABUKZEWCWGWFWBVRULZUMZUNUOWDWHUPVRLFLPUJZWIW
        DVRUQUPPUJZURZABUKEWFWLABWFWJWKUSUTGVAWCWGOKKPZCCPZWFWMWEUJWMWNUJABKCVB
        JWBWBWMWEVRKKVCVDWEWEWNWMWDCCVCVEVFKVGCVGVHVIKCEJVJVKVL $.
        $( [23-Apr-1995] $)
    $}

    ${
      $d y F $.  $d x H $.
      tz7.44.5 $e |- B e. On $.
      $( The value of ` F ` at a successor ordinal.  Part 2 of Theorem 7.44 of
         [TakeutiZaring] p. 49.  (Unnecessary distinct variable restrictions
         were removed by David Abernethy, 19-Jun-2012.) $)
      tz7.44-2 $p |- ( F ` suc B ) = ( H ` ( F ` B ) ) $=
        ( csuc cfv cres con0 wcel wceq onsuci cv fveq2 reseq2 fveq2d eqeq12d 
        vtoclga ax-mp wfun cop tz7.44lem1 c0 cdm wlim wo wn cuni wa copab crn 
        w3o 3mix2 ssopab2i sseqtr4i cvv wfn fnfun resfunexg mp2an fvex eqeq1 
        wb dmeq limeq syl orbi12d notbid unieq 3syl fveq1 eqtrd eqeq2d anbi12d 
        anbi2d opelopab nsuceq0 cin fndm ineq2i dmres wss onssi dfss mpbi 
        3eqtr4i eqeq1i nemtbir dm0 syl6eq mto elisseti nlimsucg mtbir pm3.2ni 
        sucid fvres unieqi onunisuci eqtr2i fveq2i eqtr3i mpbir2an sselii 
        funopfv mp2 eqtri ) DLZEMZEXNNZFMZDEMZGMZXNOPZXOXQQZDKRZASZEMZEYCNZFMZQ
        YAAXNOYCXNQZYDXOYFXQYCXNETYGYEXPFYCXNEUAUBUCJUDUEFUFXPXSUGZFPXQXSQABCFG
        HUHYCUIQZYCUJZUKZULZUMZBSZYJUNZYCMZGMZQZUOZABUPZFYHYTYIYNCQUOZYSYKYNYCU
        QUNQUOZURZABUPFYSUUCABYSUUAUUBUSUTHVAYHYTPXPUIQZXPUJZUKZULZUMZXSUUEUNZX
        PMZGMZQZYSUUHYNUUKQZUOUUHUULUOABXPXSEUFZXTXPVBPEOVCZUUNIOEVDUEYBEXNOVEV
        FXRGVGZYCXPQZYMUUHYRUUMUUQYLUUGUUQYIUUDYKUUFYCXPUIVHUUQYJUUEQZYKUUFVIYC
        XPVJZYJUUEVKVLVMVNUUQYQUUKYNUUQYPUUJGUUQYPUUIYCMZUUJUUQUURYOUUIQYPUUTQU
        USYJUUEVOYOUUIYCTVPUUIYCXPVQVRUBVSVTYNXSQUUMUULUUHYNXSUUKVHWAWBUUDUUFUU
        DUUEUIQZUVAXNUIDWCUUEXNUIXNEUJZWDXNOWDZUUEXNUVBOXNUUOUVBOQIOEWEUEWFEXNW
        GXNOWHXNUVCQXNYBWIXNOWJWKWLZWMWNUUDUUEUIUJUIXPUIVJWOWPWQUUFXNUKZDVBPUVE
        UMDOKWRZDVBWSUEUUEXNQUUFUVEVIUVDUUEXNVKUEWTXAXRUUJGDXPMZXRUUJDXNPUVGXRQ
        DUVFXBDXNEXCUEDUUIXPUUIXNUNDUUEXNUVDXDDKXEXFXGXHXGXIXJXPXSFUUPXKXLXM $.
        $( [24-Jul-2012] $) $( [23-Apr-1995] $)
    $}

    ${
      $d y F $.
      tz7.44-3.5 $e |- B e. On $.
      $( The value of ` F ` at a limit ordinal.  Part 3 of Theorem 7.44 of
         [TakeutiZaring] p. 49.  (Unnecessary distinct variable restrictions
         were removed by David Abernethy, 19-Jun-2012.) $)
      tz7.44-3 $p |- ( Lim B -> ( F ` B ) = U. ( F " B ) ) $=
        ( wlim cres cfv cima cuni cop cv cdm crn wceq wa copab wcel wb cin 
        con0 wfn fndm ax-mp ineq2i dmres wss onssi dfss mpbi 3eqtr4i limeq 
        biimpri df-ima unieqi jctir wfun cvv fnfun resfunexg mp2an elisseti 
        funimaex uniex dmeq syl rneq unieqd eqeq2d anbi12d eqeq1 anbi2d 
        opelopab sylibr c0 wo wn w3o 3mix3 ssopab2i sseqtr4i sseli wi 
        tz7.44lem1 funopfv 3syl fveq2 reseq2 fveq2d eqeq12d vtoclga syl5eq ) DL
        ZEDMZFNZEDOZPZDENZWSWTXCQZARZSZLZBRZXFTZPZUAZUBZABUCZUDZXEFUDZXAXCUAZWS
        WTSZLZXCWTTZPZUAZUBZXOWSXSYBXSWSXRDUAXSWSUEDESZUFDUGUFZXRDYDUGDEUGUHZYD
        UGUAIUGEUIUJUKEDULDUGUMDYEUADKUNDUGUOUPUQXRDURUJUSXBXTEDUTVAVBXMXSXIYAU
        AZUBYCABWTXCEVCZDUGUDZWTVDUDYFYHIUGEVEUJZKEDUGVFVGXBYHXBVDUDYJEDDUGKVHV
        IUJVJZXFWTUAZXHXSXLYGYLXGXRUAXHXSUEXFWTVKXGXRURVLYLXKYAXIYLXJXTXFWTVMVN
        VOVPXIXCUAYGYBXSXIXCYAVQVRVSVTXNFXEXNXFWAUAZXICUAUBZYMXHWBWCXIXGPXFNGNU
        AUBZXMWDZABUCFXMYPABXMYNYOWEWFHWGWHFVCXPXQWIABCFGHWJWTXCFYKWKUJWLYIXDXA
        UAZKXFENZEXFMZFNZUAYQADUGXFDUAZYRXDYTXAXFDEWMUUAYSWTFXFDEWNWOWPJWQUJWR 
        $.
        $( [24-Jul-2012] $) $( [23-Apr-1995] $)
    $}
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
            Recursive definition generator
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Define a constant for the recursive definition generator. $)
  $c rec $.

  $( Extend class notation with the recursive definition generator. $)
  crdg $a class rec ( A , B ) $.

  ${
    $d x y z f g F $.  $d x y z f g A $.
    $( Define a recursive definition generator on ` On ` (the class of ordinal
       numbers) with characteristic function ` F ` and initial value ` A ` .
       This combines functions ` F ` in ~ tfr1 and ` G ` in ~ tz7.44-1 into one
       definition.  This rather amazing operation allows us to define, with
       compact direct definitions, functions that are usually defined in
       textbooks only with indirect self-referencing recursive definitions.  A
       recursive definition requires advanced metalogic to justify - in
       particular, eliminating a recursive definition is very difficult and
       often not even shown in textbooks.  On the other hand, the elimination
       of a direct definition is a matter of simple mechanical substitution.
       The price paid is the daunting complexity of our ` rec ` operation.  But
       once we get past this hurdle, otherwise recursive definitions become
       relatively simple, as in for example ~ oav , from which we prove the
       recursive textbook definition as theorems ~ oa0 , ~ oasuc , and ~ oalim
       (with the help of theorems ~ rdg0 , ~rdgsuc , and ~ rdglimi ).  We can
       also restrict the ` rec ` operation to define otherwise recursive
       functions on the natural numbers ` om ` ; see ~ fr0g and ~ frsuc .  Our
       ` rec ` operation apparently does not appear in published literature,
       although closely related is Definition 25.2 of [Quine] p. 177, which he
       uses to "turn...a recursion into a genuine or direct definition" (p.
       174).  Note that the ` if ` operations (see ~ df-if ) select cases based
       on whether the domain of ` g ` is zero, a successor, or a limit ordinal.

       An important use of this definition is in the recursive sequence
       generator ~ df-seq1 on the natural numbers (as a subset of the complex
       numbers), allowing us to define, with direct definitions, recursive
       infinite sequences such as the factorial function ~ df-fac and integer
       powers ~ df-exp .

       _Note:  We introduce ` rec ` with the philosophical goal of being able_
       _to eliminate all definitions with direct mechanical substitution and_
       _to verify easily the soundness of definitions.  Metamath itself has no_
       _built-in technical limitation that prevents recursive definitions in_
       _the traditional textbook style_. $)
    df-rdg $a |- rec ( F , A ) = U. { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( { <. g , z >. | z = if ( g = (/) , A ,
                if ( Lim dom g , U. ran g , ( F ` ( g ` U. dom g ) ) ) ) }
                ` ( f |` y ) ) ) } $.
  $}

  ${
    $d x y z f g F $.  $d x y z f g A $.
    $( Alternate definition of a recursive definition generator.  (This was the
       original definition, but it was later replaced with the slightly shorter
       ~ df-rdg .) $)
    dfrdg2 $p |- rec ( F , A ) = U. { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = (
                    { <. g , z >. | ( ( g = (/) /\ z = A ) \/
                    ( -. ( g = (/) \/ Lim dom g ) /\
                        z = ( F ` ( g ` U. dom g ) ) )
                    \/ ( Lim dom g /\ z = U. ran g ) ) }
                ` ( f |` y ) ) ) } $=
      ( crdg cv wfn cfv cres c0 wceq cdm wlim crn cuni cif copab wral wa con0 
      wrex cab wo wn w3o df-rdg eqif anbi2i orcom andi ioran anbi1i anass 
      bitri dmeq dm0 syl6eq nlim0 limeq mtbiri syl con2i pm4.71ri orbi12i 
      bitr4i 3bitri orbi2i 3orass 3bitr4i opabbii fveq1i eqeq2i ralbii rexbii 
      abbii unieqi eqtri ) GDHEIZAIZJZBIZWAKZWAWDLZCIZFIZMNZDWHOZPZWHQRZWJRWHKG
      KZSZSNZFCTZKZNZBWBUAZUBZAUCUDZEUEZRWCWEWFWIWGDNUBZWIWKUFUGZWGWMNZUBZWKWGW
      LNZUBZUHZFCTZKZNZBWBUAZUBZAUCUDZEUEZRABCDEFGUIXBXPXAXOEWTXNAUCWSXMWCWRXLB
      WBWQXKWEWFWPXJWOXIFCXCWIUGZWGWNNZUBZUFXCXFXHUFZUFWOXIXSXTXCXSXQXHWKUGZXEU
      BZUFZUBXQYBXHUFZUBZXTXRYCXQWKWGWLWMUJUKYCYDXQXHYBULUKYEXQYBUBZXQXHUBZUFXT
      XQYBXHUMXFYFXHYGXFXQYAUBZXEUBYFXDYHXEWIWKUNUOXQYAXEUPUQXHXQWKUBZXGUBYGWKY
      IXGWKXQWIWKWIWJMNZYAWIWJMOMWHMURUSUTYJWKMPVAWJMVBVCVDVEVFUOXQWKXGUPUQVGVH
      VIVJWIWGDWNUJXCXFXHVKVLVMVNVOVPUKVQVRVSVT $.
      $( [15-Feb-2005] $)
  $}

  ${
    $d x y z f g F $.  $d x y z f g G $.  $d x y z f g A $.  $d x y z f g B $.
    $( Equality theorem for the recursive definition generator. $)
    rdgeq1 $p |- ( F = G -> rec ( F , A ) = rec ( G , A ) ) $=
      ( vf vx vy vz vg wceq cv wfn cfv cres c0 cdm wlim crn cuni cif copab 
      wral wa con0 wrex cab crdg fveq1 ifeq2d eqeq2d opabbidv fveq1d ralbidv 
      anbi2d rexbidv abbidv unieqd df-rdg 3eqtr4g ) BCIZDJZEJZKZFJZUTLZUTVCMZGJ
      ZHJZNIZAVGOZPZVGQRZVIRVGLZBLZSZSZIZHGTZLZIZFVAUAZUBZEUCUDZDUEZRVBVDVEVFVH
      AVJVKVLCLZSZSZIZHGTZLZIZFVAUAZUBZEUCUDZDUEZRBAUFCAUFUSWCWNUSWBWMDUSWAWLEU
      CUSVTWKVBUSVSWJFVAUSVRWIVDUSVEVQWHUSVPWGHGUSVOWFVFUSVHVNWEAUSVJVMWDVKVLBC
      UGUHUHUIUJUKUIULUMUNUOUPEFGADHBUQEFGADHCUQUR $.
      $( [9-Apr-1995] $)


    $( Equality theorem for the recursive definition generator. $)
    rdgeq2 $p |- ( A = B -> rec ( F , A ) = rec ( F , B ) ) $=
      ( vf vx vy vz vg wceq cv wfn cfv cres c0 cdm wlim crn cuni cif copab 
      wral wa con0 wrex cab crdg ifeq1 eqeq2d opabbidv fveq1d ralbidv anbi2d 
      rexbidv abbidv unieqd df-rdg 3eqtr4g ) ABIZDJZEJZKZFJZUSLZUSVBMZGJZHJZNIZ
      AVFOZPVFQRVHRVFLCLSZSZIZHGTZLZIZFUTUAZUBZEUCUDZDUEZRVAVCVDVEVGBVISZIZHGTZ
      LZIZFUTUAZUBZEUCUDZDUEZRCAUFCBUFURVRWGURVQWFDURVPWEEUCURVOWDVAURVNWCFUTUR
      VMWBVCURVDVLWAURVKVTHGURVJVSVEVGABVIUGUHUIUJUHUKULUMUNUOEFGADHCUPEFGBDHCU
      PUQ $.
      $( [9-Apr-1995] $)
  $}

  ${
    $d y z w v f g F $.  $d y z w v f g A $.  $d x y z w v f g $.
    hbrdg.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbrdg.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for the recursive definition
       generator. $)
    hbrdg $p |- ( y e. rec ( F , A ) -> A. x y e. rec ( F , A ) ) $=
      ( vf vw vv vz vg crdg cv wfn cfv cres c0 wceq cdm wlim crn cuni cif 
      copab wral wa con0 wrex cab df-rdg wcel ax-17 hbfv hbif hbeq hbopab 
      hbral hban hbrex hbab hbuni hbxfr ) ABDCLGMZHMZNZIMZVCOZVCVFPZJMZKMZQRZCV
      JSZTZVJUAUBZVLUBVJOZDOZUCZUCZRZKJUDZOZRZIVDUEZUFZHUGUHZGUIZUBHIJCGKDUJABW
      FWEAGBWDAHUGVDUGUKAULVEWCAVEAULWBAIVDVFVDUKAULABBVGWABMZVGUKAULABVHVTVSKJ
      ABABBVIVRWGVIUKAULVKABCVQVKAULFVMABVNVPVMAULWGVNUKAULABVODEWGVOUKAULUMUNU
      NUOUPWGVHUKAULUMUOUQURUSUTVAVB $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x y f g $.  $d x y z g $.  $d f g G $.  $d x z G $.  $d y z w g G $.
    $( Lemma used with the recursive definition generator.  This is a trivial
       lemma that just changes bound variables for later use. $)
    rdglem1 $p |- { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) }
                = { g | E. z e. On ( g Fn z /\
                A. w e. z ( g ` w ) = ( G ` ( g |` w ) ) ) } $=
      ( cv wfn cfv cres wceq wral wa con0 wrex cab eqid tfrlem3 fveq2 reseq2 
      fveq2d eqeq12d cbvralv anbi2i rexbii abbii eqtri ) EHZAHZIBHZUIJUIUKKGJLB
      UJMNAOPEQZFHZCHZIZUKUMJZUMUKKZGJZLZBUNMZNZCOPZFQUODHZUMJZUMVCKZGJZLZDUNMZ
      NZCOPZFQABCULEFGULRSVBVJFVAVICOUTVHUOUSVGBDUNUKVCLZUPVDURVFUKVCUMTVKUQVEG
      UKVCUMUAUBUCUDUEUFUGUH $.
      $( [7-May-2004] $) $( [9-Apr-1995] $)
  $}

  ${
    $d x y z w $.  $d x z w A $.  $d x z w H $.
    $( Lemma used with the recursive definition generator.  This is a trivial
       lemma that just changes bound variables for later use. $)
    rdglem2 $p |- { <. x , y >. | ( ( x = (/) /\ y = A ) \/
            ( -. ( x = (/) \/ Lim dom x ) /\ y = ( H ` ( x ` U. dom x ) ) )
                \/ ( Lim dom x /\ y = U. ran x ) ) }
                = { <. z , y >. | ( ( z = (/) /\ y = A ) \/
            ( -. ( z = (/) \/ Lim dom z ) /\ y = ( H ` ( z ` U. dom z ) ) )
                \/ ( Lim dom z /\ y = U. ran z ) ) } $=
      ( vw cv cop wceq c0 wa cdm wlim wo wn cuni cfv crn w3o wex cab copab 
      opeq1 eqeq2d eqeq1 anbi1d wb dmeq limeq syl orbi12d notbid unieq fveq2 
      3syl fveq1 eqtrd fveq2d anbi12d rneq unieqd 3orbi123d exbidv cbvexv 
      abbii df-opab 3eqtr4i ) FGZAGZBGZHZIZVIJIZVJDIZKZVMVILZMZNZOZVJVPPZVIQZEQ
      ZIZKZVQVJVIRZPZIZKZSZKZBTZATZFUAVHCGZVJHZIZWMJIZVNKZWPWMLZMZNZOZVJWRPZWMQ
      ZEQZIZKZWSVJWMRZPZIZKZSZKZBTZCTZFUAWIABUBXKCBUBWLXNFWKXMACVIWMIZWJXLBXOVL
      WOWIXKXOVKWNVHVIWMVJUCUDXOVOWQWDXFWHXJXOVMWPVNVIWMJUEZUFXOVSXAWCXEXOVRWTX
      OVMWPVQWSXPXOVPWRIZVQWSUGVIWMUHZVPWRUIUJZUKULXOWBXDVJXOWAXCEXOWAXBVIQZXCX
      OXQVTXBIWAXTIXRVPWRUMVTXBVIUNUOXBVIWMUPUQURUDUSXOVQWSWGXIXSXOWFXHVJXOWEXG
      VIWMUTVAUDUSVBUSVCVDVEWIABFVFXKCBFVFVG $.
      $( [9-Apr-1995] $)
  $}

  ${
    $d x y z f g u v w F $.  $d x y z f g u v w A $.
    $( The recursive definition generator is a function on ordinal numbers. $)
    rdgfnon $p |- rec ( F , A ) Fn On $=
      ( vx vy vw vu vv vz vg vf cv wfn cfv cres c0 wceq cdm wlim crn cuni cif 
      copab wral wa con0 wrex cab crdg rdglem1 df-rdg tfr1 ) CDEKZFKZLGKZULMULU
      NNHKIKZOPAUOQZRUOSTUPTUOMBMUAUAPIHUBZMPGUMUCUDFUEUFEUGJBAUHUQFGCDEJUQUIFG
      HAEIBUJUK $.
      $( [9-Apr-1995] $)
  $}

  ${
    $d x y z f g u v w F $.  $d x y z f g u v w A $.
    $( Value of the recursive definition generator. $)
    rdgval $p |- ( g e. On -> ( rec ( F , A ) ` g ) = (
                       { <. w , z >. | ( ( w = (/) /\ z = A ) \/
                       ( -. ( w = (/) \/ Lim dom w ) /\
                               z = ( F ` ( w ` U. dom w ) ) )
                       \/ ( Lim dom w /\ z = U. ran w ) ) }
                   ` ( rec ( F , A ) |` g ) ) ) $=
      ( vx vy vu vv vf cv con0 wcel crdg cfv cres c0 wceq wa cdm wlim wo wn 
      cuni crn w3o copab wfn wral wrex cab rdglem1 dfrdg2 tfr2 rdglem2 fveq1i 
      syl6eq ) DKZLMURECNZOUSURPZURQRZAKZCRZSVAURTZUAZUBUCVBVDUDUROEORSVEVBURUE
      UDRSUFDAUGZOUTBKZQRZVCSVHVGTZUAZUBUCVBVIUDVGOEORSVJVBVGUEUDRSUFBAUGZOFGDV
      GHKZUHIKZVGOVGVMPVFORIVLUISHLUJBUKJUSVFHIFGBJVFULHIACBDEUMUNUTVFVKDABCEUO
      UPUQ $.
      $( [9-Apr-1995] $)
  $}

  ${
    $d z g w F $.  $d z g w A $.
    ${
      rdg.1 $e |- A e. _V $.
      $( The initial value of the recursive definition generator. $)
      rdg0 $p |- ( rec ( F , A ) ` (/) ) = A $=
        ( vg vz vw crdg cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab 
        rdglem2 rdgfnon rdgval tz7.44-1 ) DEABAGFHZIJZEHZAJKUFUELZMZNOUGUHPUEQB
        QJKUIUGUERPJKSFETBFEDABUAABUBEFADBUCCUD $.
        $( [23-Apr-1995] $)
    $}

    ${
      $d z g B $.
      rdg.2 $e |- B e. On $.
      $( The value of the recursive definition generator at a successor. $)
      rdgsuci $p |- ( rec ( F , A ) ` suc B )
                   = ( F ` ( rec ( F , A ) ` B ) ) $=
        ( vg vz vw crdg cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab 
        rdglem2 rdgfnon rdgval tz7.44-2 ) EFABCAHGIZJKZFIZAKLUGUFMZNZOPUHUIQUFR
        CRKLUJUHUFSQKLTGFUACGFEACUBACUCFGAECUDDUE $.
        $( [23-Apr-1995] $)

      $( The value of the recursive definition generator at a limit ordinal. $)
      rdglimi $p |- ( Lim B ->
                   ( rec ( F , A ) ` B ) = U. ( rec ( F , A ) " B ) ) $=
        ( vg vz vw crdg cv c0 wceq wa cdm wlim wo wn cuni cfv crn w3o copab 
        rdglem2 rdgfnon rdgval tz7.44-3 ) EFABCAHGIZJKZFIZAKLUGUFMZNZOPUHUIQUFR
        CRKLUJUHUFSQKLTGFUACGFEACUBACUCFGAECUDDUE $.
        $( [23-Apr-1995] $)
    $}
  $}

  ${
    $d x A $.  $d x F $.
    $( The initial value of the recursive definition generator. $)
    rdg0g $p |- ( A e. C -> ( rec ( F , A ) ` (/) ) = A ) $=
      ( vx c0 cv crdg cfv wceq rdgeq2 fveq1d id eqeq12d visset rdg0 vtoclg ) EC
      DFZGZHZQIECAGZHZAIDABQAIZSUAQAUBERTQACJKUBLMQCDNOP $.
      $( [25-Apr-1995] $)
  $}

  $( The value of the recursive definition generator at a successor. $)
  rdgsuc $p |- ( B e. On ->
               ( rec ( F , A ) ` suc B ) = ( F ` ( rec ( F , A ) ` B ) ) ) $=
    ( con0 wcel csuc crdg cfv wceq c0 cif suceq fveq2d fveq2 eqeq12d 0elon 
    elimel rdgsuci dedth ) BDEZBFZCAGZHZBUBHZCHZITBJKZFZUBHZUFUBHZCHZIBJBUFIZUC
    UHUEUJUKUAUGUBBUFLMUKUDUICBUFUBNMOAUFCBJDPQRS $.
    $( [23-Apr-1995] $)

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $.  $d x y z $.
    rdgsucopab.1 $e |- ( z e. A -> A. x z e. A ) $.
    rdgsucopab.2 $e |- ( z e. B -> A. x z e. B ) $.
    rdgsucopab.3 $e |- ( z e. D -> A. x z e. D ) $.
    rdgsucopab.4 $e |- F = rec ( { <. x , y >. | y = C } , A ) $.
    rdgsucopab.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function is an ordered pair
       abstraction). $)
    rdgsucopab $p |- ( ( B e. On /\ D e. R ) -> ( F ` suc B ) = D ) $=
      ( con0 wcel csuc cfv cv wceq copab crdg rdgsuc fveq1i syl5eq cvv fvex 
      hbopab1 hbrdg hbfv eqeq2i sylbir fvopabgf mpan sylan9eq ) EOPZGHPZEQZIRZE
      BSFTZABUAZDUBZRZVARZGUPURVBRVDUSDEVAUCURIVBMUDUEVCUFPUQVDGTEVBUGABCVCFGUF
      HACEVBACDVAUTABCUHJUIKUJLASZVCTVEEIRZTFGTVFVCVEEIVBMUDUKNULUMUNUO $.
      $( [22-Oct-2003] $)

    $( The value of the recursive definition generator at a successor (special
       case where the characteristic function is an ordered-pair class
       abstraction and where the mapping class ` D ` is a proper class).  This
       is a technical lemma that can be used together with ~ rdgsucopab to help
       eliminate redundant sethood antecedents. $)
    rdgsucopabn $p |- ( -. D e. _V -> ( F ` suc B ) = (/) ) $=
      ( con0 wcel cvv wn csuc cfv c0 wceq wi cv copab crdg rdgsuc fveq1i 
      syl5eq hbopab1 hbrdg hbfv eqeq2i sylbir fvopabnf sylan9eq ex cdm sucelon 
      dmeqi wfn rdgfnon fndm ax-mp eqtri eleq2i bitr4i notbii ndmfv sylbi a1d 
      pm2.61i ) ENOZGPOQZERZHSZTUAZUBVLVMVPVLVMVOEBUCFUAZABUDZDUEZSZVRSZTVLVNVS
      SWAVODEVRUFVNHVSLUGUHABCVTFGACEVSACDVRVQABCUIIUJJUKKAUCZVTUAWBEHSZUAFGUAW
      CVTWBEHVSLUGULMUMUNUOUPVLQZVPVMWDVNHUQZOZQVPVLWFVLVNNOWFEURWENVNWEVSUQZNH
      VSLUSVSNUTWGNUADVRVANVSVBVCVDVEVFVGVNHVHVIVJVK $.
      $( [22-Oct-2003] $)
  $}

  $( The value of the recursive definition generator at a limit ordinal. $)
  rdglim $p |- ( ( B e. C /\ Lim B ) ->
                 ( rec ( F , A ) ` B ) = U. ( rec ( F , A ) " B ) ) $=
    ( wcel wlim con0 crdg cfv cima cuni wceq limelon wi c0 cif limeq fveq2 
    imaeq2 unieqd eqeq12d imbi12d 0elon elimel rdglimi dedth imp sylancom ) BCE
    BFZBGEZBDAHZIZUKBJZKZLZBCMUJUIUOUJUIUONUJBOPZFZUPUKIZUKUPJZKZLZNBOBUPLZUIUQ
    UOVABUPQVBULURUNUTBUPUKRVBUMUSBUPUKSTUAUBAUPDBOGUCUDUEUFUGUH $.
    $( [23-Apr-1995] $)

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( The value of the recursive definition generator at a limit ordinal, in
       terms of the union of all smaller values. $)
    rdglim2 $p |- ( ( B e. C /\ Lim B ) -> ( rec ( F , A ) ` B ) =
                  U. { y | E. x e. B y = ( rec ( F , A ) ` x ) } ) $=
      ( wcel wlim wa crdg cfv cima cuni cv wceq wrex cab rdglim cop wex con0 
      wb word wi limord ordelord ex visset elon syl6ibr syl wfn rdgfnon 
      fnopfvb mpan eqcom syl5bb syl6 pm5.32d exbidv df-rex syl5rbb abbidv 
      dfima3 syl5eq unieqd adantl eqtrd ) DEGZDHZIDFCJZKVKDLZMZBNZANZVKKZOZADPZ
      BQZMZCDEFRVJVMVTOVIVJVLVSVJVODGZVOVNSVKGZIZATZBQVSVLVJWDVRBVJWAVQIZATWDVR
      VJWEWCAVJWAVQWBVJWAVOUAGZVQWBUBVJDUCZWAWFUDDUEWGWAVOUCZWFWGWAWHDVOUFUGVOA
      UHUIUJUKWFVPVNOZWBVQVKUAULWFWIWBUBCFUMUAVOVNVKBUHUNUOVNVPUPUQURUSUTVQADVA
      VBVCABVKDVDVEVFVGVH $.
      $( [23-Apr-1995] $)

    $( The value of the recursive definition generator at a limit ordinal, in
       terms of indexed union of all smaller values. $)
    rdglim2a $p |- ( ( B e. C /\ Lim B ) -> ( rec ( F , A ) ` B ) =
                  U_ x e. B ( rec ( F , A ) ` x ) ) $=
      ( vy wcel wlim wa crdg cfv cv wceq wrex cab cuni ciun rdglim2 fvex 
      dfiun2 syl6eqr ) CDGCHICEBJZKFLALZUBKZMACNFOPACUDQAFBCDERAFCUDUCUBSTUA $.
      $( [28-Jun-1998] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Finite recursion
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( We use the next 3 theorems for finite recursion.  Note that we take
     advantage of what we have done for transfinite recursion, which allows
     us to explicitly specify the function and moreover not require the
     existence of omega. $)

  $( The function generated by finite recursive definition generation is a
     function on omega. $)
  frfnom $p |- ( rec ( F , A ) |` om ) Fn om $=
    ( crdg com cres wfn wfun cdm wceq df-fn con0 rdgfnon fnfun ax-mp funres 
    cin fndm ineq2i dmres wss omsson dfss mpbi 3eqtr4i mpbir2an ) BACZDEZDFUGGZ
    UGHZDIUGDJUFGZUHUFKFZUJABLZKUFMNDUFONDUFHZPDKPZUIDUMKDUKUMKIULKUFQNRUFDSDKT
    DUNIUADKUBUCUDUE $.
    $( [15-Oct-1996] $)

  $( The initial value resulting from finite recursive definition
     generation. $)
  fr0g $p |- ( A e. B -> ( ( rec ( F , A ) |` om ) ` (/) ) = A ) $=
    ( wcel c0 crdg cfv com cres rdg0g wceq peano1 fvres ax-mp syl5eq ) ABDECAFZ
    GZAEPHIGZABCJEHDRQKLEHPMNO $.
    $( [15-Oct-1996] $)

  $( The successor value resulting from finite recursive definition
     generation. $)
  frsuc $p |- ( B e. om -> ( ( rec ( F , A ) |` om ) ` suc B ) =
              ( F ` ( ( rec ( F , A ) |` om ) ` B ) ) ) $=
    ( com wcel csuc crdg cfv cres con0 wceq nnon rdgsuc syl peano2b fvres 
    sylbi fveq2d 3eqtr4d ) BDEZBFZCAGZHZBUBHZCHZUAUBDIZHZBUFHZCHTBJEUCUEKBLABCM
    NTUADEUGUCKBOUADUBPQTUHUDCBDUBPRS $.
    $( [15-Oct-1996] $)

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $.  $d x y z $.
    frsucopab.1 $e |- ( z e. A -> A. x z e. A ) $.
    frsucopab.2 $e |- ( z e. B -> A. x z e. B ) $.
    frsucopab.3 $e |- ( z e. D -> A. x z e. D ) $.
    frsucopab.4 $e |- F = ( rec ( { <. x , y >. | y = C } , A ) |` om ) $.
    frsucopab.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The successor value resulting from finite recursive definition
       generation (special case where the generation function is an ordered
       pair abstraction). $)
    frsucopab $p |- ( ( B e. om /\ D e. R ) -> ( F ` suc B ) = D ) $=
      ( com wcel csuc cfv cv wceq copab crdg cres frsuc fveq1i syl5eq cvv fvex 
      hbopab1 hbrdg ax-17 hbres hbfv eqeq2i sylbir fvopabgf mpan sylan9eq ) EOP
      ZGHPZEQZIRZEBSFTZABUAZDUBZOUCZRZVDRZGUSVAVFRVHVBDEVDUDVAIVFMUEUFVGUGPUTVH
      GTEVFUHABCVGFGUGHACEVFACVEOACDVDVCABCUIJUJCSOPAUKULKUMLASZVGTVIEIRZTFGTVJ
      VGVIEIVFMUEUNNUOUPUQUR $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d z D $.  $d y z C $.  $d z A $.  $d z B $.  $d x y z $.
    frsucmpt.1 $e |- ( z e. A -> A. x z e. A ) $.
    frsucmpt.2 $e |- ( z e. B -> A. x z e. B ) $.
    frsucmpt.3 $e |- ( z e. D -> A. x z e. D ) $.
    frsucmpt.4 $e |- F = ( rec ( ( x e. _V |-> C ) , A ) |` om ) $.
    frsucmpt.5 $e |- ( x = ( F ` B ) -> C = D ) $.
    $( The successor value resulting from finite recursive definition
       generation (special case where the generation function is expressed in
       maps-to notation). $)
    frsucmpt $p |- ( ( B e. om /\ D e. R ) -> ( F ` suc B ) = D ) $=
      ( vy cvv cmpt crdg com cres cv wceq copab wcel wa df-mpt visset biantrur 
      opabbii eqtr4i rdgeq1 ax-mp reseq1 eqtri frsucopab ) ANBCDEFGHIJKHAOEPZCQ
      ZRSZNTEUAZANUBZCQZRSZLUPUTUAZUQVAUAUOUSUAVBUOATOUCZURUDZANUBUSANOEUEURVDA
      NVCURAUFUGUHUICUOUSUJUKUPUTRULUKUMMUN $.
      $( [2-Nov-2011] $)
  $}

  ${
    $d x y z w F $.  $d x y z w A $.
    tz7.48.1 $e |- F Fn On $.
    $( A way of showing an ordinal function is one-to-one. $)
    tz7.48lem $p |- ( ( A C_ On /\ A. x e. A A. y e. x
                    -. ( F ` x ) = ( F ` y ) ) -> Fun `' ( F |` A ) ) $=
      ( vw vz con0 wss cv cfv wceq wn wral wa cres wi ccnv wfun wcel wal wb 
      fvres eqeqan12d ad2antrl ssel anim12d wo pm3.48 oridm eqcom notbii 
      orbi1i bitr3i syl6ibr con2d word ordtri3 biimprd eloni syl2an syl9r syl6 
      imp32 sylbid exp32 a2d alimdv r2al 3imtr4g simpl anim1i imim1i exp3a 
      2alimi 3imtr4i eleq1 fveq2 eqeq2d notbid imbi12d cbvralv ralbii eleq2 
      eqeq1d ralbidv bitri 3bitri ralcom2 sylbi ancri r19.26-2 sylibr syl syl5 
      imdistani wfn cvv wf wf1 dff13 df-f1 simprbi dffn2 sylanb fnssres mpan 
      sylan ) CHIZAJZDKZBJZDKZLZMZBXJNACNZOXIXJDCPZKZXLXQKZLZXJXLLZQZBCNACNZOXQ
      RSZXIXPYCXIXJXLTZXMXKLZMZQZXLXJTZXOQZOZBCNACNZYCXPXIXJCTZXLCTZOZYKQZBUAZA
      UAYOYBQZBUAZAUAYLYCXIYQYSAXIYPYRBXIYOYKYBXIYOYKYBXIYOYKOOXTXNYAYOXTXNUBXI
      YKYMYNXRXKXSXMXJCDUCXLCDUCUDUEXIYOYKXNYAQZXIYOXJHTZXLHTZOZYKYTQXIYMUUAYNU
      UBCHXJUFCHXLUFUGYKXNYEYIUHZMZUUCYAYKUUDXNYKUUDYGXOUHZXOYEYGYIXOUIXOXOXOUH
      UUFXOUJXOYGXOXNYFXKXMUKULUMUNUOUPXJUQZXLUQZUUEYAQUUAUUBUUGUUHOYAUUEXJXLUR
      USXJUTXLUTVAVBVCVDVEVFVGVHVHYKABCCVIYBABCCVIVJXPYJBCNZACNZYLYMYIOZXOQZBUA
      AUAYOYJQZBUAAUAXPUUJUULUUMABUULYOYIXOYOYIOUUKXOYOYMYIYMYNVKVLVMVNVOXOABCX
      JVIYJABCCVIVPUUJYHBCNACNZUUJOYLUUJUUNUUJYHACNZBCNZUUNUUJFJZXJTZXKUUQDKZLZ
      MZQZFCNZACNUUQGJZTZUVDDKZUUSLZMZQZFCNZGCNZUUPUUIUVCACYJUVBBFCXLUUQLZYIUUR
      XOUVAXLUUQXJVQUVLXNUUTUVLXMUUSXKXLUUQDVRVSVTWAWBWCUVCUVJAGCXJUVDLZUVBUVIF
      CUVMUURUVEUVAUVHXJUVDUUQWDUVMUUTUVGUVMXKUVFUUSXJUVDDVRWEVTWAWFWBUVKXJUVDT
      ZUVFXKLZMZQZACNZGCNUUPUVJUVRGCUVIUVQFACUUQXJLZUVEUVNUVHUVPUUQXJUVDVQUVSUV
      GUVOUVSUUSXKUVFUUQXJDVRVSVTWAWBWCUVRUUOGBCUVDXLLZUVQYHACUVTUVNYEUVPYGUVDX
      LXJWDUVTUVOYFUVTUVFXMXKUVDXLDVRWEVTWAWFWBWGWHYHBACWIWJWKYHYJABCCWLWMWNWOW
      PXQCWQZYCYDXICWRXQWSZYCYDUWAUWBYCOZUWBYDUWCCWRXQWTUWBYDOABCWRXQXACWRXQXBU
      NXCCXQXDXEDHWQXIUWAEHCDXFXGXHWN $.
      $( [9-Feb-1997] $)

    $( Proposition 7.48(1) of [TakeutiZaring] p. 51. $)
    tz7.48-1 $p |- ( A. x e. On ( F ` x ) e. ( A \ ( F " x ) ) ->
                   ran F C_ A ) $=
      ( vy cv cfv cima cdif wcel con0 wral crn wceq wa wex hbra1 ax-17 wi ra4 
      eleq1 eldifi syl5cbi imim2i imp3a syl 19.23ad cop visset elrn2 cdm 
      opeldm wfn fndm ax-mp syl6eleq ancri wb fnopfvb mpan pm5.32i sylibr 
      eximi sylbi syl5 ssrdv ) AFZCGZBCVGHZIJZAKLZECMZBVKVGKJZVHEFZNZOZAPZVNBJZ
      VNVLJZVKVPVRAVJAKQVRARVKVMVJSZVPVRSVJAKTVTVMVOVRVJVOVRSVMVOVHBJVRVJVHVNBU
      AVHBVIUBUCUDUEUFUGVSVGVNUHCJZAPVQAVNCEUIZUJWAVPAWAVMWAOVPWAVMWAVGCUKZKVGV
      NCAUIULCKUMZWCKNDKCUNUOUPUQVMVOWAWDVMVOWAURDKVGVNCWBUSUTVAVBVCVDVEVF $.
      $( [9-Feb-1997] $)

    $( Proposition 7.48(2) of [TakeutiZaring] p. 51. $)
    tz7.48-2 $p |- ( A. x e. On ( F ` x ) e. ( A \ ( F " x ) ) -> Fun `' F ) $=
      ( vy cv cfv cima cdif wcel con0 wral cres ccnv wfun wss wceq wn 
      tz7.48lem ssid wa wi onelon ancoms cdm crn cin dmres eleq2i elin bitri 
      wfn fnfun ax-mp funres fvelrn mpan sylbir wb fvres eleq1d df-ima 
      syl6rbbr adantr mpbird eleq1a eldifn nsyli syl fndm sylan2br syldan 
      expimpd com12 r19.21aiv ralimiaa sylancr wrel fnrel eqimssi relssres 
      mp2an cnveqi funeq sylib ) AFZCGZBCWFHZIJZAKLZCKMZNZOZCNZOZKKPWGEFZCGZQZR
      ZEWFLZAKLWMWJAEKCDSKTWIWTAKWFKJZWIUAZWSEWFWPWFJZXBWSXCXAWIWSXCXAWPKJZWIWS
      UBZXAXCXDWFWPUCUDXCWPCUEZJZXEXDXCXGUAZWQWHJZXEXHXIWPCWFMZGZXJUFZJZXHWPXJU
      EZJZXMXOWPWFXFUGZJXHXNXPWPCWFUHUIWPWFXFUJUKXJOZXOXMCOZXQCKULZXRDKCUMUNWFC
      UOUNWPXJUPUQURXCXIXMUSXGXCXMWQXLJXIXCXKWQXLWPWFCUTVAWHXLWQCWFVBUIVCVDVEXI
      WRWGWHJWIWQWHWGVFWGBWHVGVHVIXFKWPXSXFKQDKCVJUNZUIVKVLVMVNVOVPVQWLWNQWMWOU
      SWKCCVRZXFKPWKCQXSYADKCVSUNXFKXTVTCKWAWBWCWLWNWDUNWE $.
      $( [9-Feb-1997] $)

    $( Proposition 7.48(3) of [TakeutiZaring] p. 51. $)
    tz7.48-3 $p |- ( A. x e. On ( F ` x ) e. ( A \ ( F " x ) ) ->
                    -. A e. _V ) $=
      ( cv cfv cima cdif wcel con0 wral cvv crn cdm onprc wfn wceq fndm ax-mp 
      eleq1i mtbir ccnv wfun wi tz7.48-2 funrnex com12 df-rn dfdm4 3imtr4g syl 
      mtoi wss tz7.48-1 ssexg ex mtod ) AEZCFBCURGHIAJKZBLIZCMZLIZUSVBCNZLIZVDJ
      LIOVCJLCJPVCJQDJCRSTUAUSCUBZUCZVBVDUDABCDUEVFVENZLIZVEMZLIZVBVDVHVFVJLVEU
      FUGVAVGLCUHTVCVILCUITUJUKULUSVABUMZUTVBUDABCDUNVKUTVBVABLUOUPUKUQ $.
      $( [9-Feb-1997] $)

    ${
      tz7.49.2 $e |- A e. _V $.
      $( Proposition 7.49 of [TakeutiZaring] p. 51. $)
      tz7.49 $p |- ( A. x e. On ( ( A \ ( F " x ) ) =/= (/) ->
                   ( F ` x ) e. ( A \ ( F " x ) ) ) ->
                   E. x e. On ( A. y e. x ( A \ ( F " y ) ) =/= (/) /\
                   ( F " x ) = A /\ Fun `' ( F |` x ) ) ) $=
        ( vz cv cima cdif c0 wne cfv wcel wi con0 wral wceq wa wrex cres ccnv 
        wfun w3a wn cvv tz7.48-3 mt2 ralim df-ne ralbii syl5ibr mtoi dfrex2 
        sylibr imaeq2 difeq2d eqeq1d onminex syl anbi2i rexbii hbra1 simpllr 
        wss ax-17 hban ra4 adantld onelon neeq1d fveq2 eleq12d imbi12d rcla4v 
        com23 sylcom com3r imp exp3a eleq1 eldifi syl5cbi syl8 com34 r19.23ad 
        wfn fnfun ax-mp fvelima mpan syl5 ssrdv ssdif0 biimpri anim12i eqss 
        wal ssel cdm funfvima2 onss fndm syl6ssr sylancr syl6 com12 a1i syldd 
        imp4a eleq1a con3d eldifn syl5com com4r 19.21adv 19.21ad r2al syl6ibr 
        ancld tz7.48lem ancoms adantr 3jca exp41 reximdai mpd ) CDAHZIZJZKLZYHD
        MZYJNZOZAPQZYJKRZCDBHZIZJZKLZBYHQZSZAPTZUUAYICRZDYHUAUBUCZUDZAPTYOYPYSK
        RZUEZBYHQZSZAPTZUUCYOYPAPTZUUKYOYPUEZAPQZUEUULYOUUNYMAPQZUUOCUFNFACDEUG
        UHYOYKAPQUUOUUNYKYMAPUIYKUUMAPYJKUJUKULUMYPAPUNUOYPUUGABYHYQRZYJYSKUUPY
        IYRCYHYQDUPUQZURUSUTUUBUUJAPUUAUUIYPYTUUHBYHYSKUJUKVAVBUOYOUUBUUFAPYNAP
        VCYOYHPNZYPUUAUUFYOUURUUAYPUUFYOUUAUURYPUUFOYOUUAUURYPUUFYOUUASZUURSZYP
        SZUUAUUDUUEYOUUAUURYPVDUVAYICVEZCYIVEZSUUDUUTUVBYPUVCUUTGYICUUSUURGHZYI
        NZUVDCNZOUUSUVEUURUVFUUSYQDMZUVDRZBYHTZUURUVFOZUVEUUSUVHUVJBYHYOUUABYOB
        VFZYTBYHVCZVGUVJBVFUUSYQYHNZUURUVHUVFUUSUVMUURUVGYSNZUVHUVFOUUSUURUVMUV
        NUUSUURUVMUVNYOUUAUURUVMSZUVNOUUAUVOYOUVNUUAUVOYTYOUVNOZUUAUVMYTUURYTBY
        HVHZVIUVOYQPNZYTUVPOZYHYQVJUVRYOYTUVNYNYTUVNOAYQPUUPYKYTYMUVNUUPYJYSKUU
        QVKUUPYLUVGYJYSYHYQDVLUUQVMVNVOVPZUTVQVRVSVTVPUVHUVGCNUVFUVNUVGUVDCWAUV
        GCYRWBWCWDWEWFDUCZUVEUVIDPWGZUWAEPDWHWIZBUVDYHDWJWKWLVPVSWMUVCYPCYIWNWO
        WPYICWQUOUUTUUEYPUUSUURUUEUUAYOUURUUEOUUAYOSZYHPVEZUUEUURUWDUWEUWEUVGUV
        DDMZRZUEZGYQQBYHQZSUUEUWDUWEUWIUWDUWEUVMUVDYQNZSUWHOZGWRZBWRUWIUWDUWEUW
        LBUUAYOBUVLUVKVGUWEBVFUWDUWEUWKGUWDUWEUVMUWJUWHUWEUVMUWJUWDUWHUWEUVMUWJ
        UWFYRNZUWDUWHOUWEUVMUVRUWJUWMOZYHPYQWSZUWAYQDWTZVEUWNUVRYQUVDDXAUWCUVRY
        QPUWPYQXBUWBUWPPREPDXCWIXDXEXFUWEUVMUWDUWMUWHUWEUVMUWDUVNUWMUWHOUWEUVMU
        UAYOUVNUWEUVMUUAYTUVPUVMUUAYTOOUWEUUAUVMYTUVQXGXHUWEUVMUVRUVSUWOUVTXFXI
        XJUWMUVGYRNZUEUWHUVNUWMUWGUWQUWFYRUVGXKXLUVGCYRXMXNWDWEXIXOXJXPXQUWHBGY
        HYQXRXSXTBGYHDEYAXFYHXBWLYBVSYCYDYEVPWEXJYFYG $.
        $( [4-May-2007] $) $( [10-Feb-1997] $)

      $( Corollary of Proposition 7.49 of [TakeutiZaring] p. 51. $)
      tz7.49c $p |- ( A. x e. On ( ( A \ ( F " x ) ) =/= (/) ->
                   ( F ` x ) e. ( A \ ( F " x ) ) ) ->
                   E. x e. On ( F |` x ) : x -1-1-onto-> A ) $=
        ( vy cv cima cdif c0 wne cfv wcel wi con0 wral wceq cres ccnv wfun w3a 
        wrex wf1o tz7.49 wa wfn crn wss fnssres onss sylancr df-ima eqeq1i 
        biimpi anim12i anim1i dff1o2 df-3an an32 3bitri sylibr expl 3simpc 
        syl5 reximia syl ) BCAGZHZIZJKVGCLVIMNAOPBCFGHIJKFVGPZVHBQZCVGRZSTZUAZA
        OUBVGBVLUCZAOUBAFBCDEUDVNVOAOVGOMZVKVMUEVOVNVPVKVMVOVPVKUEZVMUEVLVGUFZV
        LUGZBQZUEZVMUEZVOVQWAVMVPVRVKVTCOUFVGOUHVRVPOVGCUIDVGUJUKVKVTVHVSBCVGUL
        UMUNUOUPVOVRVMVTUAVRVMUEVTUEWBVGBVLUQVRVMVTURVRVMVTUSUTVAVBVJVKVMVCVDVE
        VF $.
        $( [5-May-2007] $) $( [10-Feb-1997] $)
    $}
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Abian's "most fundamental" fixed point theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    abianfp.1 $e |- A e. _V $.
    abianfp.2 $e |- G = rec ( { <. z , w >. | w = ( F ` z ) } , x ) $.
    ${
      $d x z $.  $d x v y u $.  $d z w y u F $.  $d F v $.  $d v y u G $.
      $( Lemma for ~ abianfp .  We prove by transfinite induction that if ` F `
         has a fixed point ` x ` , then its iterates also equal ` x ` .  This
         lemma is used for the "trivial" direction of the main theorem. $)
      abianfplem $p |- ( v e. On -> ( ( F ` x ) = x -> ( G ` v ) = x ) ) $=
        ( vy vu cv cfv wceq c0 csuc fveq2 eqeq1d copab crdg fveq1i visset rdg0 
        eqtri a1i con0 wcel wa cvv fvex ax-17 hbopab1 hbrdg hbxfr hbfv 
        rdgsucopab mpan2 id sylan9eqr sylan9eq exp32 wlim wral wi ciun 
        rdglim2a mpan iuneq2i 3eqtr4g adantr iuneq2 wne word cuni df-lim 
        simp2bi iunconst syl eqtrd ex a1d tfinds2 ) DLZGMZALZNZOGMZWENZJLZGMZWE
        NZWIPZGMZWENZWEFMZWENZDJWCONWDWGWEWCOGQRWCWINWDWJWEWCWIGQRWCWLNWDWMWEWC
        WLGQRWHWPWGOCLBLZFMZNZBCSZWETZMWEOGXAIUAWEWTAUBUCUDUEWIUFUGZWPWKWNXBWPW
        KUHWMWJFMZWEXBXCUIUGWMXCNWJFUJBCKWEWIWRXCUIGKLZWEUGBUKZXDWIUGBUKZBKWJFX
        DFUGBUKBKWIGBKGXAIBKWEWTWSBCKULXEUMUNXFUOUOIWQWJFQUPUQWKWPXCWOWEWJWEFQW
        PURUSUTVAWCVBZWKJWCVCZWFVDWPXGXHWFXGXHUHWDJWCWJVEZWEXGWDXINXHXGWCXAMZJW
        CWIXAMZVEZWDXIWCUIUGXGXJXLNDUBJWEWCUIWTVFVGWCGXAIUAJWCWJXKWJXKNWIWCUGWI
        GXAIUAUEVHVIVJXHXGXIJWCWEVEZWEJWCWJWEVKXGWCOVLZXMWENXGWCVMXNWCWCVNNWCVO
        VPJWCWEVQVRUSVSVTWAWB $.
        $( [4-Sep-2004] $)
    $}

    $d x v y A $.  $d x z $.  $d x v y F $.  $d z w F $.  $d v u y G $.
    $( No longer active:
       ~ http://www.math.ucdavis.edu/~~suh/abian/abian-themostfixed.html . $)
    $( "A most fundamental fixed point theorem" of Alexander Abian (1923-1999),
       apparently proved in 1998.  Let ` G `` 0 = x ` , ` G `` 1 = F `` x ` ,
       ` G `` 2 = F `` ( F `` x ) ` ,... be the iterates of ` F ` .  The
       theorem reads (using our variable names):  "Let ` F ` be a mapping from
       a set ` A ` into itself.  Then ` F ` has a fixed point if and only if:
       There exists an element ` x ` of ` A ` such that for every ordinal
       ` v ` , ` G `` v ` is an element of ` A ` , and if ` G `` v ` is not a
       fixed point of ` F ` then the ` G `` u ` 's are all distinct for every
       ordinal ` u e. v ` ."  See ~ df-rdg for the ` rec ` operation.  The
       proof's key idea is to assume that ` F ` does not have a fixed point,
       then use the Axiom of Replacement in the form of ~ f1dmex to derive that
       the class of all ordinal numbers exists, contradicting ~ onprc .  Our
       version of this theorem does not require the hypothesis that ` F ` be a
       mapping.  Reference:
       ~ http://us2.metamath.org:88/abian-themostfixed.html .  For an
       application of this theorem, see
       ~ http://groups.google.com/group/sci.stat.math/msg/1737ee1133c24aeb for
       its use in a proof of Tarski's fixed point theorem.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    abianfp $p |- ( E. x e. A ( F ` x ) = x <-> E. x e. A
           A. v e. On ( ( G ` v ) e. A /\ ( -. ( F ` ( G ` v ) ) = ( G ` v ) ->
                    A. u e. v -. ( G ` v ) = ( G ` u ) ) ) ) $=
      ( vy cv cfv wceq wrex wcel wn wral wi wa con0 abianfplem imp eleq1d 
      biimprd fveq2 id eqeq12d biimprcd sylcom pm2.24d jctird ex com13 
      r19.21adv reximia cvv onprc r19.26 notbid rcla4cv imim1d ralimdv ralim 
      syl6 com12 wf1 f1dmex wf ccnv wfun wfn copab crdg rdgfnon fneq1i mpbir 
      ffnfv biimpri mpan cres wss ssid tz7.48lem wb fnresdm ax-mp cnveqi funeq 
      sylib anim12i df-f1 sylibr sylancl syld exp3a com23 sylbi mtoi a1i 
      r19.23aiv cbvrexv dfrex2 bitr2i impbii ) ALZGMZXFNZAFOZDLZHMZFPZXKGMZXKNZ
      QZXKELHMNQEXJRZSZTZDUARZAFOZXHXSAFXFFPZXHXRDUAXJUAPZXHYAXRYBXHYAXRSYBXHTZ
      YAXLXQYCXLYAYCXKXFFYBXHXKXFNZABCDFGHIJUBZUCUDUEYCXNXPYBXHXNYBXHYDXNYEYDXN
      XHYDXMXGXKXFXKXFGUFYDUGUHUIUJUCUKULUMUNUOUPXTKLZGMZYFNZQZKFRZQZXIXSYKAFXS
      YKSYAXSYJUAUQPZURXSXLDUARZXQDUARZTYJYLSZXLXQDUAUSYMYNYOYMYJYNYLYMYJYNYLYM
      YJYNTZXPDUARZYLYPYMYQYJYNYMYQSZYJYNXLXPSZDUARYRYJXQYSDUAYJXLXOXPYIXOKXKFY
      FXKNZYHXNYTYGXMYFXKYFXKGUFYTUGUHUTVAVBVCXLXPDUAVDVEUCVFYMYQYLUAFHVGZFUQPY
      LYMYQTZUAFUQHVHUUBUAFHVIZHVJZVKZTUUAYMUUCYQUUEHUAVLZYMUUCUUFCLBLGMNBCVMZX
      FVNZUAVLXFUUGVOUAHUUHJVPVQZUUCUUFYMTDUAFHVRVSVTYQHUAWAZVJZVKZUUEUAUAWBYQU
      ULUAWCDEUAHUUIWDVTUUKUUDNUULUUEWEUUJHUUFUUJHNUUIUAHWFWGWHUUKUUDWIWGWJWKUA
      FHWLWMIWNUMWOWPWQUCWRWSWTXAXIYHKFOYKXHYHAKFXFYFNZXGYGXFYFXFYFGUFUUMUGUHXB
      YHKFXCXDWJXE $.
      $( [24-Jul-2012] $) $( [5-Sep-2004] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Ordinal arithmetic
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c 1o $. $( The ordinal number 1 $)
  $c 2o $. $( The ordinal number 2 $)
  $c +o $.  $( Ordinal addition operation (plus subscript o) $)
  $c .o $.  $( Ordinal multiplication operation (center dot subscript o) $)
  $c ^o $.  $( Ordinal exponentiation operation (caret subscript o) $)

  $( Extend the definition of a class to include the ordinal number 1. $)
  c1o $a class 1o $.

  $( Extend the definition of a class to include the ordinal number 2. $)
  c2o $a class 2o $.

  $( Extend the definition of a class to include the ordinal addition
     operation. $)
  coa $a class +o $.

  $( Extend the definition of a class to include the ordinal multiplication
     operation. $)
  comu $a class .o $.

  $( Extend the definition of a class to include the ordinal exponentiation
     operation. $)
  coe $a class ^o $.

  $( Define the ordinal number 1. $)
  df-1o $a |- 1o = suc (/) $.

  $( Define the ordinal number 2. $)
  df-2o $a |- 2o = suc 1o $.

  ${
    $d x y z w v $.
    $( Define the ordinal addition operation. $)
    df-oadd $a |- +o = { <. <. x , y >. , z >. | ( ( x e. On /\ y e. On ) /\
                z = ( rec ( { <. w , v >. | v = suc w } , x ) ` y ) ) } $.
  $}

  ${
    $d x y z w v $.
    $( Define the ordinal multiplication operation. $)
    df-omul $a |- .o = { <. <. x , y >. , z >. | ( ( x e. On /\ y e. On ) /\
             z = ( rec ( { <. w , v >. | v = ( w +o x ) } , (/) ) ` y ) ) } $.
  $}

  ${
    $d x y z w v $.
    $( Define the ordinal exponentiation operation. $)
    df-oexp $a |- ^o = { <. <. x , y >. , z >. | ( ( x e. On /\ y e. On ) /\
                   z = if ( x = (/) , ( 1o \ y ) ,
                 ( rec ( { <. w , v >. | v = ( w .o x ) } , 1o ) ` y ) ) ) } $.
  $}

  $( Ordinal 1 is an ordinal number. $)
  1on $p |- 1o e. On $=
    ( c1o c0 csuc con0 df-1o 0elon onsuci eqeltri ) ABCDEBFGH $.
    $( [29-Oct-1995] $)

  $( Ordinal 2 is an ordinal number.  (The proof was shortened by Andrew
     Salmon, 12-Aug-2011.) $)
  2on $p |- 2o e. On $=
    ( c2o c1o csuc con0 df-2o 1on onsuci eqeltri ) ABCDEBFGH $.
    $( [12-Aug-2011] $) $( [18-Feb-2004] $)

  $( Expanded value of the ordinal number 1. $)
  df1o2 $p |- 1o = { (/) } $=
    ( c1o c0 csuc csn df-1o suc0 eqtri ) ABCBDEFG $.
    $( [4-Nov-2002] $)

  $( Expanded value of the ordinal number 2. $)
  df2o2 $p |- 2o = { (/) , { (/) } } $=
    ( c2o c1o csuc csn cun c0 cpr df-2o df-suc df1o2 sneqi uneq12i df-pr 
    eqtr4i 3eqtri ) ABCBBDZEZFFDZGZHBIQRRDZESBRPTJBRJKLFRMNO $.
    $( [29-Jan-2004] $)

  $( Ordinal one is not equal to ordinal zero. $)
  1n0 $p |- 1o =/= (/) $=
    ( c1o c0 csn df1o2 0ex snnz eqnetri ) ABCBDBEFG $.
    $( [30-Apr-2007] $) $( [26-Dec-2004] $)

  $( Cross products with the singletons of ordinals 0 and 1 are disjoint. $)
  xp01disj $p |- ( ( A X. { (/) } ) i^i ( C X. { 1o } ) ) = (/) $=
    ( c0 c1o wne csn cxp cin wceq 1n0 necomi xpsndisj ax-mp ) CDEACFGBDFGHCIDCJ
    KACBDLM $.
    $( [2-Jun-2007] $)

  $( Two ways to express that an ordinal class is positive. $)
  ordgt0ge1 $p |- ( Ord A -> ( (/) e. A <-> 1o C_ A ) ) $=
    ( word c0 wcel csuc wss c1o con0 wb 0elon ordelsuc mpan df-1o sseq1i 
    syl6bbr ) ABZCADZCEZAFZGAFCHDPQSIJCAHKLGRAMNO $.
    $( [21-Dec-2004] $)

  $( An ordinal greater than or equal to 1 is nonzero. $)
  ordge1n0 $p |- ( Ord A -> ( 1o C_ A <-> A =/= (/) ) ) $=
    ( word c0 wcel c1o wss wne ordgt0ge1 ord0eln0 bitr3d ) ABCADEAFACGAHAIJ $.
    $( [29-May-2007] $) $( [21-Dec-2004] $)

  $( Membership in ordinal one. $)
  el1o $p |- ( A e. 1o <-> A = (/) ) $=
    ( c1o wcel c0 csn wceq df1o2 eleq2i 0ex elsnc2 bitri ) ABCADEZCADFBLAGHADIJ
    K $.
    $( [5-Jan-2005] $)

  $( Ordinal zero is less than ordinal one. $)
  0lt1o $p |- (/) e. 1o $=
    ( c0 c1o wcel wceq eqid el1o mpbir ) ABCAADAEAFG $.
    $( [5-Jan-2005] $)

  ${
    $d x y z w v $.
    $( Functionality and domain of ordinal addition. $)
    fnoa $p |- +o Fn ( On X. On ) $=
      ( vx vy vz vv vw con0 cv csuc wceq copab crdg cfv coa fvex df-oadd 
      fnoprab2 ) ABCFFBGZDGEGHIEDJAGKZLMQRNABCEDOP $.
      $( [26-Aug-1995] $)
  $}

  ${
    $d x y z w v $.
    $( Functionality and domain of ordinal multiplication. $)
    fnom $p |- .o Fn ( On X. On ) $=
      ( vx vy vz vv vw con0 cv coa co wceq copab c0 crdg cfv comu fvex df-omul 
      fnoprab2 ) ABCFFBGZDGEGAGHIJEDKLMZNOSTPABCEDQR $.
      $( [26-Aug-1995] $)
  $}

  ${
    $d x y z w v $.  $d z w v A $.  $d z w v B $.
    $( Value of ordinal addition. $)
    oav $p |- ( ( A e. On /\ B e. On ) ->
             ( A +o B ) = ( rec ( { <. x , y >. | y = suc x } , A ) ` B ) ) $=
      ( vw vv vz con0 cv csuc wceq copab crdg cfv coa fvex rdgeq2 fveq1d fveq2 
      df-oadd oprabval2 ) EFGCDHHFIZBIAIJKABLZEIZMZNDUCCMZNOUBUFNDUFPUDCKUBUEUF
      UDCUCQRUBDUFSEFGABTUA $.
      $( [3-May-1995] $)
  $}

  ${
    $d x y z w v A $.  $d z w v B $.
    $( Value of ordinal multiplication. $)
    omv $p |- ( ( A e. On /\ B e. On ) ->
     ( A .o B ) = ( rec ( { <. x , y >. | y = ( x +o A ) } , (/) ) ` B ) ) $=
      ( vw vv vz con0 cv coa co wceq copab c0 crdg cfv comu fvex opreq2 eqeq2d 
      opabbidv rdgeq1 fveq1 3syl fveq2 df-omul oprabval2 ) EFGCDHHFIZBIZAIZEIZJ
      KZLZABMZNOZPZDUIUJCJKZLZABMZNOZPQUHUTPZDUTRUKCLZUNUSLUOUTLUPVALVBUMURABVB
      ULUQUIUKCUJJSTUANUNUSUBUHUOUTUCUDUHDUTUEEFGABUFUG $.
      $( [17-Sep-1995] $)
  $}

  ${
    oe0lem.1 $e |- ( ( ph /\ A = (/) ) -> ps ) $.
    oe0lem.2 $e |- ( ( ( A e. On /\ ph ) /\ (/) e. A ) -> ps ) $.
    $( A helper lemma for ~ oe0 and others. $)
    oe0lem $p |- ( ( A e. On /\ ph ) -> ps ) $=
      ( con0 wcel wa c0 wceq wi ex adantl wne wb on0eln0 adantr sylbird 
      pm2.61dne ) CFGZAHZBCIACIJZBKTAUBBDLMUACINZICGZBTUDUCOACPQUAUDBELRS $.
      $( [6-Jan-2005] $)
  $}

  ${
    $d x y z w v A $.  $d z w v B $.
    $( Value of ordinal exponentiation. $)
    oev $p |- ( ( A e. On /\ B e. On ) -> ( A ^o B ) = if ( A = (/) ,
      ( 1o \ B ) , ( rec ( { <. x , y >. | y = ( x .o A ) } , 1o ) ` B ) ) ) $=
      ( vw vv vz con0 cv c0 wceq c1o cdif comu co copab crdg cfv cif coe wcel 
      cvv 1on difexg ax-mp fvex ifex eqeq1 opreq2 eqeq2d opabbidv rdgeq1 fveq1 
      3syl ifbieq2d difeq2 ifeq1d fveq2 ifeq2d eqtrd df-oexp oprabval2 ) EFGCDH
      HEIZJKZLFIZMZVEBIZAIZVCNOZKZABPZLQZRZSCJKZLDMZDVGVHCNOZKZABPZLQZRZSZTVNVF
      VEVSRZSZVNVOVTLHUAVOUBUAUCLDHUDUEDVSUFUGVCCKZVDVNVMWBVFVCCJUHWDVKVRKVLVSK
      VMWBKWDVJVQABWDVIVPVGVCCVHNUIUJUKLVKVRULVEVLVSUMUNUOVEDKZWCVNVOWBSWAWEVNV
      FVOWBVEDLUPUQWEVNWBVTVOVEDVSURUSUTEFGABVAVB $.
      $( [30-Dec-2004] $)

    $( Value of ordinal exponentiation at a nonzero mantissa. $)
    oevn0 $p |- ( ( ( A e. On /\ B e. On ) /\ (/) e. A ) -> ( A ^o B ) =
                ( rec ( { <. x , y >. | y = ( x .o A ) } , 1o ) ` B ) ) $=
      ( con0 wcel wa c0 coe co cv comu wceq copab c1o crdg cfv wn wb wne 
      on0eln0 df-ne syl6bb adantr cdif cif oev iffalse sylan9eq ex sylbid imp 
      ) CEFZDEFZGZHCFZCDIJZDBKAKCLJMABNOPQZMZUOUPCHMZRZUSUMUPVASUNUMUPCHTVACUAC
      HUBUCUDUOVAUSUOVAUQUTODUEZURUFURABCDUGUTVBURUHUIUJUKUL $.
      $( [31-Dec-2004] $)
  $}

  ${
    $d x y A $.
    $( Addition with zero.  Proposition 8.3 of [TakeutiZaring] p. 57. $)
    oa0 $p |- ( A e. On -> ( A +o (/) ) = A ) $=
      ( vy vx con0 wcel c0 coa co cv csuc wceq copab crdg cfv 0elon oav mpan2 
      rdg0g eqtrd ) ADEZAFGHZFBICIJKCBLZAMNZATFDEUAUCKOCBAFPQADUBRS $.
      $( [3-May-1995] $)

    $( Ordinal multiplication with zero.  Definition 8.15 of [TakeutiZaring]
       p. 62. $)
    om0 $p |- ( A e. On -> ( A .o (/) ) = (/) ) $=
      ( vy vx con0 wcel c0 comu co cv coa wceq copab crdg cfv 0elon omv mpan2 
      0ex rdg0 syl6eq ) ADEZAFGHZFBICIAJHKCBLZFMNZFUAFDEUBUDKOCBAFPQFUCRST $.
      $( [17-Sep-1995] $)

    $( Ordinal exponentiation with zero mantissa. $)
    oe0m $p |- ( A e. On -> ( (/) ^o A ) = ( 1o \ A ) ) $=
      ( vy vx con0 wcel c0 coe co wceq c1o cdif cv comu copab crdg cfv cif 
      0elon oev mpan eqid iftrue ax-mp syl6eq ) ADEZFAGHZFFIZJAKZABLCLFMHICBNJO
      PZQZUHFDEUEUFUJIRCBFASTUGUJUHIFUAUGUHUIUBUCUD $.
      $( [31-Dec-2004] $)
  $}

  $( Ordinal multiplication with zero.  Definition 8.15 of [TakeutiZaring]
     p. 62.  Unlike ~ om0 , this version works whether or not ` A ` is an
     ordinal.  However, since it is an artifact of our particular function
     value definition outside the domain, we will not use it in order to be
     conventional and present it only as a curiosity. $)
  om0x $p |- ( A .o (/) ) = (/) $=
    ( con0 wcel c0 wa comu co wceq om0 adantr 0ex cxp wfn cdm fnom fndm ax-mp 
    ndmopr pm2.61i ) ABCZDBCZEADFGDHZTUBUAAIJADBFKFBBLZMFNUCHOUCFPQRS $.
    $( [1-Feb-1996] $)

  $( Ordinal exponentiation with zero mantissa and zero exponent.  Proposition
     8.31 of [TakeutiZaring] p. 67. $)
  oe0m0 $p |- ( (/) ^o (/) ) = 1o $=
    ( c0 con0 wcel coe co c1o wceq 0elon cdif oe0m dif0 syl6eq ax-mp ) ABCZAADE
    ZFGHNOFAIFAJFKLM $.
    $( [31-Dec-2004] $)

  $( Ordinal exponentiation with zero mantissa and nonzero exponent.
     Proposition 8.31(2) of [TakeutiZaring] p. 67 and its converse. $)
  oe0m1 $p |- ( A e. On -> ( (/) e. A <-> ( (/) ^o A ) = (/) ) ) $=
    ( con0 wcel c0 c1o wss coe co wceq word wb eloni ordgt0ge1 syl cdif oe0m 
    eqeq1d ssdif0 syl6rbbr bitrd ) ABCZDACZEAFZDAGHZDIZUAAJUBUCKALAMNUAUEEAOZDI
    UCUAUDUFDAPQEARST $.
    $( [5-Jan-2005] $)

  ${
    $d x y A $.
    $( Ordinal exponentiation with zero exponent.  Definition 8.30 of
       [TakeutiZaring] p. 67. $)
    oe0 $p |- ( A e. On -> ( A ^o (/) ) = 1o ) $=
      ( vy vx con0 wcel c0 coe co c1o wceq opreq1 oe0m0 syl6eq adantl wa cv 
      comu copab crdg cfv 0elon oevn0 mpanl2 1on elisseti rdg0 adantll oe0lem 
      anidms ) ADEZAFGHZIJZUJULAAFJZULUJUMUKFFGHIAFFGKLMNUJFAEZULUJUJUNOUKFBPCP
      AQHJCBRZISTZIUJFDEUNUKUPJUACBAFUBUCIUOIDUDUEUFMUGUHUI $.
      $( [31-Dec-2004] $)

    $( Alternate value of ordinal exponentiation.  Compare ~ oev . $)
    oev2 $p |- ( ( A e. On /\ B e. On ) -> ( A ^o B ) = ( ( rec ( {
               <. x , y >. | y = ( x .o A ) } , 1o ) ` B )
                  i^i ( ( _V \ |^| A ) u. |^| B ) ) ) $=
      ( con0 wcel coe co cv comu wceq copab c1o crdg cfv cvv cint cdif cun cin 
      c0 wa oe0m0 opreq12 fveq2 1on elisseti rdg0 syl6eq inteq int0 ineq12d 
      inv1 a1i sylan9eqr 3eqtr4a opreq1 oe0m1 biimpa an32s int0el ineq2d in0 
      adantl eqtr4d oe0lem difeq2d difid uneq2d uncom un0 3eqtr3g oevn0 dif0 
      unv syl6req eqtrd ) DEFZCDGHZDBIAICJHKABLZMNZOZPCQZRZDQZSZTZKCVRCUAKZUBZV
      SWBWETZWGWHVSWJKDWHDUAKZUBUAUAGHMVSWJUCCUADUAGUDWKWHWJMPTZMWKWBMWEPWKWBUA
      WAOMDUAWAUEMVTMEUFUGUHUIWKWEUAQZPDUAUJUKUIULWLMKWHMUMUNUOUPWIUADFZUBVSUAW
      JVRWNWHVSUAKWHVRWNUBVSUADGHZUACUADGUQVRWNWOUAKDURUSUOUTWNWJUAKWIWNWJWBUAT
      UAWNWEUAWBDVAVBWBVCUIVDVEVFWIWFWEWBWHWFWEKVRWHWEWDSZWEUASWFWEWHWDUAWEWHWD
      PPRUAWHWCPPWHWCWMPCUAUJUKUIVGPVHUIVIWEWDVJZWEVKVLVDVBVECEFVRUBZUACFZUBZVS
      WBWGABCDVMWTWGWBPTWBWTWFPWBWSWFPKWRWSWPWEPSWFPWSWDPWEWSWDPUARPWSWCUAPCVAV
      GPVNUIVIWQWEVOVLVDVBWBUMVPVQVF $.
      $( [21-Jul-2006] $) $( [2-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Addition with successor.  Definition 8.1 of [TakeutiZaring] p. 56. $)
    oasuc $p |- ( ( A e. On /\ B e. On ) ->
                ( A +o suc B ) = suc ( A +o B ) ) $=
      ( vy vx con0 wcel wa csuc cv wceq copab crdg cfv coa co rdgsuc adantl 
      oav suceloni sylan2 fveq2d oprex sucex suceq fvopab syl5eqr 3eqtr4d ) AEF
      ZBEFZGZBHZCIDIZHZJDCKZALZMZBUOMZUNMZAUKNOZABNOZHZUIUPURJUHABUNPQUHUKEFUSU
      PJUIDCAUKRBSTUJUTUNMURVAUJUTUQUNDCABRUADCUTUMVAABNUBZUTVBUCULUTUDUEUFUG 
      $.
      $( [3-May-1995] $)
  $}

  $( Addition with 1 is same as successor.  Proposition 4.34(a) of [Mendelson]
     p. 266. $)
  oa1suc $p |- ( A e. On ->
                ( A +o 1o ) = suc A ) $=
    ( con0 wcel c1o coa co c0 csuc wceq 0elon oasuc mpan2 df-1o opreq2i syl5eq 
    oa0 suceq syl eqtrd ) ABCZADEFZAGEFZHZAHZTAGHZEFZUCUATGBCUFUCIJAGKLDUEAEMNO
    TUBAIUCUDIAPUBAQRS $.
    $( [29-Oct-1995] $)

  ${
    $d x y A $.  $d x y B $.
    $( Multiplication with successor.  Definition 8.15 of [TakeutiZaring]
       p. 62. $)
    omsuc $p |- ( ( A e. On /\ B e. On ) ->
                ( A .o suc B ) = ( ( A .o B ) +o A ) ) $=
      ( vy vx con0 wcel wa csuc cv coa co wceq copab c0 crdg cfv comu rdgsuc 
      adantl omv suceloni sylan2 fveq2d oprex opreq1 fvopab syl5eqr 3eqtr4d ) 
      AEFZBEFZGZBHZCIDIZAJKZLDCMZNOZPZBUPPZUOPZAULQKZABQKZAJKZUJUQUSLUINBUORSUI
      ULEFUTUQLUJDCAULTBUAUBUKVAUOPUSVBUKVAURUODCABTUCDCVAUNVBABQUDVAAJUDUMVAAJ
      UEUFUGUH $.
      $( [17-Sep-1995] $)

    $( Ordinal exponentiation with a successor exponent.  Definition 8.30 of
       [TakeutiZaring] p. 67. $)
    oesuc $p |- ( ( A e. On /\ B e. On ) ->
                ( A ^o suc B ) = ( ( A ^o B ) .o A ) ) $=
      ( vy vx con0 wcel csuc coe co comu wceq c0 wa opreq1 suceloni word eloni 
      0elsuc syl oe0m1 biimpa syl11anc sylan9eqr id opreq12d opreq2 c1o oe0m0 
      1on eqeltri syl6eqel adantl 0elon adantll oe0lem anidms om0 eqtr4d cv 
      copab crdg cfv rdgsuc ad2antlr oevn0 sylanl2 fveq2d oprex fvopab syl5eqr 
      3eqtr4d ) BEFZABGZHIZABHIZAJIZKAVLALKZMVNLVPVQVLVNLVMHIZLALVMHNVLVMEFZLVM
      FZVRLKZBOZVLBPVTBQBRSVSVTWAVMTUAUBUCVQVLVPLBHIZLJIZLVQVOWCALJALBHNVQUDUEV
      LWCEFZWDLKVLWEVLWEBBLKZWEVLWFWCLLHIZEBLLHUFWGUGEUHUIUJUKULVLLBFZWEVLVLWHM
      WCLEVLWHWCLKBTUAUMUKUNUOUPWCUQSUCURAEFZVLMLAFZMZVMCUSDUSZAJIZKDCUTZUGVAZV
      BZBWOVBZWNVBZVNVPVLWPWRKWIWJUGBWNVCVDWIVSWJVNWPKVLDCAVMVEWBVFWKVOWNVBWRVP
      WKVOWQWNDCABVEVGDCVOWMVPABHVHVOAJVHWLVOAJNVIVJVKUO $.
      $( [21-Jul-2006] $) $( [31-Dec-2004] $)
  $}

  ${
    $d x y z A $.  $d x B $.
    $( Ordinal addition with a limit ordinal.  Definition 8.1 of
       [TakeutiZaring] p. 56. $)
    oalim $p |- ( ( A e. On /\ ( B e. C /\ Lim B ) ) ->
                ( A +o B ) = U_ x e. B ( A +o x ) ) $=
      ( vz vy con0 wcel wlim wa coa co cv ciun wceq csuc copab crdg cfv 
      rdglim2a adantl wb oav onelon sylan2 anassrs iuneq2dv eqeq12d adantrr 
      mpbird limelon simpr jca ) BGHZCGHZCIZJZBCKLZACBAMZKLZNZOZCDHZUPJZUNUQJVB
      CEMFMPOFEQZBRZSZACUSVFSZNZOZUQVJUNABCGVETUAUNUOVBVJUBUPUNUOJZURVGVAVIFEBC
      UCVKACUTVHUNUOUSCHZUTVHOZUNUSGHVMUOVLJFEBUSUCCUSUDUEUFUGUHUIUJVDUOUPCDUKV
      CUPULUMUE $.
      $( [3-Aug-2004] $)

    $( Ordinal multiplication with a limit ordinal.  Definition 8.15 of
       [TakeutiZaring] p. 62. $)
    omlim $p |- ( ( A e. On /\ ( B e. C /\ Lim B ) ) ->
                ( A .o B ) = U_ x e. B ( A .o x ) ) $=
      ( vz vy con0 wcel wlim wa comu co cv ciun wceq coa copab c0 crdg cfv 
      rdglim2a adantl wb omv onelon sylan2 anassrs iuneq2dv eqeq12d adantrr 
      mpbird limelon simpr jca ) BGHZCGHZCIZJZBCKLZACBAMZKLZNZOZCDHZUQJZUOURJVC
      CEMFMBPLOFEQZRSZTZACUTVGTZNZOZURVKUOARCGVFUAUBUOUPVCVKUCUQUOUPJZUSVHVBVJF
      EBCUDVLACVAVIUOUPUTCHZVAVIOZUOUTGHVNUPVMJFEBUTUDCUTUEUFUGUHUIUJUKVEUPUQCD
      ULVDUQUMUNUF $.
      $( [3-Aug-2004] $)

    $( Ordinal exponentiation with a limit exponent and nonzero mantissa.
       Definition 8.30 of [TakeutiZaring] p. 67. $)
    oelim $p |- ( ( ( A e. On /\ ( B e. C /\ Lim B ) ) /\ (/) e. A ) ->
                ( A ^o B ) = U_ x e. B ( A ^o x ) ) $=
      ( vz vy con0 wcel wlim wa c0 coe co cv ciun wceq comu copab c1o crdg cfv 
      rdglim2a ad2antlr wb oevn0 onelon sylanl2 exp42 com34 imp41 iuneq2dv 
      eqeq12d adantlrr mpbird limelon simpr jca ) BGHZCGHZCIZJZKBHZBCLMZACBANZL
      MZOZPZCDHZUTJZURVAJVBJVGCENFNBQMPFERZSTZUAZACVDVKUAZOZPZVAVOURVBASCGVJUBU
      CURUSVBVGVOUDUTURUSJVBJZVCVLVFVNFEBCUEVPACVEVMURUSVBVDCHZVEVMPZURUSVQVBVR
      URUSVQVBVRURVDGHVBVRUSVQJFEBVDUECVDUFUGUHUIUJUKULUMUNVIUSUTCDUOVHUTUPUQUG
      $.
      $( [1-Jan-2005] $)
  $}

  ${
    $d x y A $.  $d x B $.
    $( Closure law for ordinal addition.  Proposition 8.2 of [TakeutiZaring]
       p. 57. $)
    oacl $p |- ( ( A e. On /\ B e. On ) -> ( A +o B ) e. On ) $=
      ( vx vy con0 wcel coa co cv c0 csuc wceq opreq2 eleq1d oa0 ibir wi wa 
      oasuc suceloni syl5bir expcom wlim wral ciun cvv visset oalim mpanr1 
      oprex iunon tfinds3 impcom ) BEFAEFZABGHZEFZACIZGHZEFZAJGHZEFZADIZGHZEFZA
      VBKZGHZEFZUPUNCDBUQJLURUTEUQJAGMNUQVBLURVCEUQVBAGMNUQVELURVFEUQVEAGMNUQBL
      URUOEUQBAGMNUNVAUNUTAEAONPUNVBEFZVDVGQUNVHRZVGVCKZEFVDVIVFVJEAVBSNVCTUAUB
      UNUQUCZVDDUQUDZUSQUNVKRZUSDUQVCUEZEFVLVMURVNEUNUQUFFVKURVNLCUGZDAUQUFUHUI
      NDUQVCVOAVBGUJUKUAUBULUM $.
      $( [5-May-1995] $)

    $( Closure law for ordinal multiplication.  Proposition 8.16 of
       [TakeutiZaring] p. 57.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    omcl $p |- ( ( A e. On /\ B e. On ) -> ( A .o B ) e. On ) $=
      ( vx vy con0 wcel comu co cv c0 csuc wceq opreq2 eleq1d om0 0elon 
      syl6eqel wi wa coa oacl expcom adantr omsuc sylibrd wlim wral ciun cvv 
      visset omlim mpanr1 oprex iunon syl5bir tfinds3 impcom ) BEFAEFZABGHZEFZA
      CIZGHZEFZAJGHZEFADIZGHZEFZAVEKZGHZEFZUTURCDBVAJLVBVDEVAJAGMNVAVELVBVFEVAV
      EAGMNVAVHLVBVIEVAVHAGMNVABLVBUSEVABAGMNURVDJEAOPQURVEEFZVGVJRURVKSZVGVFAT
      HZEFZVJURVGVNRVKVGURVNVFAUAUBUCVLVIVMEAVEUDNUEUBURVAUFZVGDVAUGZVCRURVOSZV
      CDVAVFUHZEFVPVQVBVREURVAUIFVOVBVRLCUJZDAVAUIUKULNDVAVFVSAVEGUMUNUOUBUPUQ 
      $.
      $( [22-Oct-2011] $) $( [3-Aug-2004] $)

    $( Closure law for ordinal exponentiation.  (The proof was shortened by
       Andrew Salmon, 22-Oct-2011.) $)
    oecl $p |- ( ( A e. On /\ B e. On ) -> ( A ^o B ) e. On ) $=
      ( vx vy con0 wcel coe co c0 wceq opreq1 eleq1d opreq2 c1o oe0m0 1on 
      eqeltri syl6eqel adantl wa oe0m1 biimpa 0elon adantll oe0lem anidms 
      syl5bir impcom wi cv csuc oe0 adantr comu omcl expcom oesuc sylibrd 
      adantrd wlim wral ciun cvv visset oelim mpanlr1 anasss an12s oprex iunon 
      ex tfinds3 exp3a com12 imp31 ) BEFZABGHZEFZAAIJZVPVRVSVRIBGHZEFZVPVSVQVTE
      AIBGKLVPWAVPWABBIJZWAVPWBVTIIGHZEBIIGMWCNEOPQRSVPIBFZWAVPVPWDTVTIEVPWDVTI
      JBUAUBUCRUDUEUFUGUHAEFZVPIAFZVRVPWEWFVRUIVPWEWFVRACUJZGHZEFZAIGHZEFZADUJZ
      GHZEFZAWLUKZGHZEFZVRWEWFTZCDBWGIJWHWJEWGIAGMLWGWLJWHWMEWGWLAGMLWGWOJWHWPE
      WGWOAGMLWGBJWHVQEWGBAGMLWEWKWFWEWJNEAULPRUMWLEFZWEWNWQUIZWFWEWSWTWEWSTZWN
      WMAUNHZEFZWQWEWNXCUIWSWNWEXCWMAUOUPUMXAWPXBEAWLUQLURUPUSWGUTZWRWNDWGVAZWI
      UIXDWRTZWIDWGWMVBZEFXEXFWHXGEWEXDWFWHXGJZWEXDWFXHWEWGVCFXDWFXHCVDZDAWGVCV
      EVFVGVHLDWGWMXIAWLGVIVJUGVKVLVMVNVOUE $.
      $( [22-Oct-2011] $) $( [1-Jan-2005] $)
  $}

  ${
    $d x y $.  $d x A $.
    $( Ordinal addition with zero.  Proposition 8.3 of [TakeutiZaring]
       p. 57. $)
    oa0r $p |- ( A e. On -> ( (/) +o A ) = A ) $=
      ( vx vy c0 cv coa co wceq csuc opreq2 id eqeq12d con0 wcel 0elon oa0 
      ax-mp oasuc mpan suceq sylan9eq ex wlim ciun cuni wral cvv visset wa 
      oalim limuni iuneq2 uniiun syl6eqr syl5bir tfinds ) DBEZFGZUQHZDDFGZDHZDC
      EZFGZVBHZDVBIZFGZVEHZDAFGZAHBCAUQDHZURUTUQDUQDDFJVIKLUQVBHZURVCUQVBUQVBDF
      JVJKLUQVEHZURVFUQVEUQVEDFJVKKLUQAHZURVHUQAUQADFJVLKLDMNZVAODPQVBMNZVDVGVN
      VDVFVCIZVEVMVNVFVOHODVBRSVCVBTUAUBUQUCZUSCUQVCUDZUQUEZHVDCUQUFZVPURVQUQVR
      UQUGNZVPURVQHZBUHVMVTVPUIWAOCDUQUGUJSSUQUKLVSVQCUQVBUDVRCUQVCVBULCUQUMUNU
      OUP $.
      $( [5-May-1995] $)
  $}

  ${
    $d x y A $.
    $( Ordinal multiplication with zero.  Proposition 8.18(1) of
       [TakeutiZaring] p. 63. $)
    om0r $p |- ( A e. On -> ( (/) .o A ) = (/) ) $=
      ( vx vy c0 cv comu co wceq csuc opreq2 eqeq1d con0 wcel 0elon om0 ax-mp 
      coa omsuc mpan oa0 eqcomi a1i eqeq12d opreq1 syl5bir wlim ciun wral cvv 
      visset wa omlim iuneq2 iun0 syl6eq tfinds ) DBEZFGZDHZDDFGZDHZDCEZFGZDHZD
      VBIZFGZDHZDAFGZDHBCAUQDHURUTDUQDDFJKUQVBHURVCDUQVBDFJKUQVEHURVFDUQVEDFJKU
      QAHURVHDUQADFJKDLMZVANDOPVBLMZVGVCDQGZDDQGZHVDVJVFVKDVLVIVJVFVKHNDVBRSDVL
      HVJVLDVIVLDHNDTPUAUBUCVCDDQUDUEUQUFZUSCUQVCUGZDHVDCUQUHZVMURVNDUQUIMZVMUR
      VNHZBUJVIVPVMUKVQNCDUQUIULSSKVOVNCUQDUGDCUQVCDUMCUQUNUOUEUP $.
      $( [3-Aug-2004] $)
  $}

  $( 1 + 1 = 2 for ordinal numbers. $)
  o1p1e2 $p |- ( 1o +o 1o ) = 2o $=
    ( c1o coa co csuc c2o con0 wcel wceq 1on oa1suc ax-mp df-2o eqtr4i ) AABCZA
    DZEAFGNOHIAJKLM $.
    $( [18-Feb-2004] $)

  $( Ordinal multiplication with 1.  Proposition 8.18(2) of [TakeutiZaring]
     p. 63. $)
  om1 $p |- ( A e. On -> ( A .o 1o ) = A ) $=
    ( con0 wcel c1o comu co c0 coa csuc wceq 0elon omsuc mpan2 df-1o opreq2i 
    syl5eq om0 opreq1d oa0r 3eqtrd ) ABCZADEFZAGEFZAHFZGAHFAUAAGIZEFZUDUBUAGBCU
    FUDJKAGLMDUEAENOPUAUCGAHAQRAST $.
    $( [29-Oct-1995] $)

  ${
    $d x y $.  $d x A $.
    $( Ordinal multiplication with 1.  Proposition 8.18(2) of [TakeutiZaring]
       p. 63. $)
    om1r $p |- ( A e. On -> ( 1o .o A ) = A ) $=
      ( vx vy c1o cv comu co wceq c0 csuc opreq2 id eqeq12d con0 wcel 1on om0 
      ax-mp wa coa omsuc mpan opreq1 sylan9eq oa1suc adantr eqtrd ex wlim ciun 
      cuni wral cvv visset omlim limuni iuneq2 uniiun syl6eqr syl5bir tfinds ) 
      DBEZFGZVBHZDIFGZIHZDCEZFGZVGHZDVGJZFGZVJHZDAFGZAHBCAVBIHZVCVEVBIVBIDFKVNL
      MVBVGHZVCVHVBVGVBVGDFKVOLMVBVJHZVCVKVBVJVBVJDFKVPLMVBAHZVCVMVBAVBADFKVQLM
      DNOZVFPDQRVGNOZVIVLVSVISVKVGDTGZVJVSVIVKVHDTGZVTVRVSVKWAHPDVGUAUBVHVGDTUC
      UDVSVTVJHVIVGUEUFUGUHVBUIZVDCVBVHUJZVBUKZHVICVBULZWBVCWCVBWDVBUMOZWBVCWCH
      ZBUNVRWFWBSWGPCDVBUMUOUBUBVBUPMWEWCCVBVGUJWDCVBVHVGUQCVBURUSUTVA $.
      $( [3-Aug-2004] $)
  $}

  $( Ordinal exponentiation with an exponent of 1. $)
  oe1 $p |- ( A e. On -> ( A ^o 1o ) = A ) $=
    ( con0 wcel c1o coe co c0 comu csuc wceq 0elon oesuc mpan2 df-1o opreq2i 
    syl5eq oe0 opreq1d om1r 3eqtrd ) ABCZADEFZAGEFZAHFZDAHFAUAAGIZEFZUDUBUAGBCU
    FUDJKAGLMDUEAENOPUAUCDAHAQRAST $.
    $( [2-Jan-2005] $)

  ${
    $d x y $.  $d x A $.
    $( Ordinal exponentiation with a mantissa of 1.  Proposition 8.31(3) of
       [TakeutiZaring] p. 67. $)
    oe1m $p |- ( A e. On -> ( 1o ^o A ) = 1o ) $=
      ( vx vy c1o cv coe co wceq c0 csuc opreq2 eqeq1d con0 wcel 1on oe0 ax-mp 
      comu oesuc mpan opreq1 om1 syl6eq sylan9eq ex wlim ciun wral cvv visset 
      wa 0lt1o oelim mpan2 wne 0ellim ne0i iunconst 3syl eqeq2d bitr4d iuneq2 
      syl5bir tfinds ) DBEZFGZDHZDIFGZDHZDCEZFGZDHZDVJJZFGZDHZDAFGZDHBCAVEIHVFV
      HDVEIDFKLVEVJHVFVKDVEVJDFKLVEVMHVFVNDVEVMDFKLVEAHVFVPDVEADFKLDMNZVIODPQVJ
      MNZVLVOVRVLVNVKDRGZDVQVRVNVSHODVJSTVLVSDDRGZDVKDDRUAVQVTDHODUBQUCUDUEVEUF
      ZVGCVEVKUGZCVEDUGZHZVLCVEUHWAVGWBDHWDWAVFWBDVEUINZWAVFWBHZBUJVQWEWAUKZWFO
      VQWGUKIDNWFULCDVEUIUMUNTTLWAWCDWBWAIVENVEIUOWCDHVEUPVEIUQCVEDURUSUTVACVEV
      KDVBVCVD $.
      $( [2-Jan-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Ordering property of ordinal addition.  Proposition 8.4 of
       [TakeutiZaring] p. 58. $)
    oaordi $p |- ( ( B e. On /\ C e. On ) ->
                 ( A e. B -> ( C +o A ) e. ( C +o B ) ) ) $=
      ( vx vy con0 wcel coa co wi wa onelon adantll csuc wss word eloni 
      ordsucss syl ad2antlr cv wceq opreq2 sseq2d imbi2d ssid a1i12 oasuc 
      ancoms sssucid sstr2 mpi syl5bir ex ad2antrr a2d wlim wral ciun sucelon 
      sucssel sylbir limsuc biimpd sylan9r imp ssiun2s adantr cvv visset oalim 
      mpanr1 adantlr sseqtr4d a1d tfindsg exp31 syl5ib com4r imp31 sseq1d 
      oprex ax-mp syl6bi 3syld an32s mpdan ) CFGZBFGZABGZCAHIZCBHIZGZJWHWIKZWJW
      MWNWJKAFGZWMWIWJWOWHBALMWNWOWJWMWNWOKZWJWMWPWJANZBOZCWQHIZWLOZWMWIWJWRJZW
      HWOWIBPXABQABRSTWHWIWOWRWTJWIWOWRWHWTWIWQFGZWRWHWTJZJWOWIXBWRXCWHWSCDUAZH
      IZOZJZWHWSWSOZJWHWSCEUAZHIZOZJZWHWSCXINZHIZOZJXCDEBWQXDWQUBZXFXHWHXPXEWSW
      SXDWQCHUCUDUEXDXIUBZXFXKWHXQXEXJWSXDXICHUCUDUEXDXMUBZXFXOWHXRXEXNWSXDXMCH
      UCUDUEXDBUBZXFWTWHXSXEWLWSXDBCHUCUDUEXBWHXHWSUFUGXIFGZXBKWQXIOZKWHXKXOXTW
      HXKXOJZJXBYAXTWHYBXTWHKZXOWSXJNZOZXKYCXNYDWSWHXTXNYDUBCXIUHUIUDXKXJYDOYEX
      JUJWSXJYDUKULUMUNUOUPXDUQZXBKZWQXDOZKZXGYAXLJEXDURYIWHXFYIWHKWSEXDXJUSZXE
      YIWSYJOZWHYIWQXDGZYKYGYHYLXBYHAXDGZYFYLXBWOYHYMJAUTZAXDFVAVBYFYMYLXDAVCVD
      VEVFEXDXJWQWSXIWQCHUCVGSVHYGWHXEYJUBZYHYFWHYOXBWHYFYOWHXDVIGYFYODVJECXDVI
      VKVLUIVMVMVNUNVOVPVQYNVRVSVTWHWOWTWMJWIWHWOKZWTWKNZWLOZWMYPWSYQWLCAUHWAWK
      VIGYRWMJCAHWBWKWLVIVAWCWDVMWEVFWFWGUNUI $.
      $( [5-Dec-2004] $)
  $}

  $( Ordering property of ordinal addition.  Proposition 8.4 of [TakeutiZaring]
     p. 58 and its converse. $)
  oaord $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                 ( A e. B <-> ( C +o A ) e. ( C +o B ) ) ) $=
    ( con0 wcel w3a coa co wi oaordi 3adant1 wceq wo wn opreq2 a1i 3adant2 
    orim12d con3d word wa wb df-3an ancom anandi 3bitri oacl eloni syl anim12i 
    sylbi ordtri2 3simpa 3syl 3imtr4d impbid ) ADEZBDEZCDEZFZABEZCAGHZCBGHZEZUR
    USVAVDIUQABCJKUTVBVCLZVCVBEZMZNZABLZBAEZMZNZVDVAUTVKVGUTVIVEVJVFVIVEIUTABCG
    OPUQUSVJVFIURBACJQRSUTVBTZVCTZUAZVDVHUBUTUSUQUAZUSURUAZUAZVOUTUQURUAZUSUAUS
    VSUAVRUQURUSUCVSUSUDUSUQURUEUFVPVMVQVNVPVBDEVMCAUGVBUHUIVQVCDEVNCBUGVCUHUIU
    JUKVBVCULUIUTVSATZBTZUAVAVLUBUQURUSUMUQVTURWAAUHBUHUJABULUNUOUP $.
    $( [5-Dec-2004] $)

  $( Left cancellation law for ordinal addition.  Corollary 8.5 of
     [TakeutiZaring] p. 58. $)
  oacan $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                   ( ( A +o B ) = ( A +o C ) <-> B = C ) ) $=
    ( con0 wcel w3a wo wn coa co wceq wb oaord 3comr 3com13 orbi12d notbid 
    word ordtri3 eloni syl2an 3adant1 wa oacl syl 3impdi 3bitr4rd ) ADEZBDEZCDE
    ZFZBCEZCBEZGZHZABIJZACIJZEZUQUPEZGZHZBCKZUPUQKZUKUNUTUKULURUMUSUIUJUHULURLB
    CAMNUJUIUHUMUSLCBAMOPQUIUJVBUOLZUHBRCRVDUIUJBCSBTCTUAUBUHUIUJVCVALZUPRZUQRZ
    VEUHUIUCZUHUJUCZUPUQSVHUPDEVFABUDUPTUEVIUQDEVGACUDUQTUEUAUFUG $.
    $( [5-Dec-2004] $)

  $( Weak ordering property of ordinal addition.  (The proof was shortened by
     Andrew Salmon, 22-Oct-2011.) $)
  oaword $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                 ( A C_ B <-> ( C +o A ) C_ ( C +o B ) ) ) $=
    ( con0 wcel w3a wn coa co wss wb oaord 3com12 notbid ontri1 3adant3 oacl 
    ancoms 3adant2 3adant1 syl11anc 3bitr4d ) ADEZBDEZCDEZFZBAEZGZCBHIZCAHIZEZG
    ZABJZUJUIJZUFUGUKUDUCUEUGUKKBACLMNUCUDUMUHKUEABOPUFUJDEZUIDEZUNULKUCUEUOUDU
    EUCUOCAQRSUDUEUPUCUEUDUPCBQRTUJUIOUAUB $.
    $( [22-Oct-2011] $) $( [6-Dec-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Weak ordering property of ordinal addition.  Proposition 8.7 of
       [TakeutiZaring] p. 59. $)
    oawordri $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                 ( A C_ B -> ( A +o C ) C_ ( B +o C ) ) ) $=
      ( vx vy con0 wcel wss coa co wi cv c0 csuc wa wceq opreq2 sseq12d oa0 
      adantr adantl biimpar wb word ordsucsssuc oacl eloni syl syl2an anandirs 
      oasuc adantlr adantll bitr4d biimpd expcom adantrd wlim wral cvv visset 
      ciun oalim ss2iun syl5bir mpanr1 tfinds3 exp4c com3l 3imp ) AFGZBFGZCFGZA
      BHZACIJZBCIJZHZKZVMVKVLVRVMVKVLVNVQADLZIJZBVSIJZHZAMIJZBMIJZHZAELZIJZBWFI
      JZHZAWFNZIJZBWJIJZHZVQVKVLOZVNODECVSMPVTWCWAWDVSMAIQVSMBIQRVSWFPVTWGWAWHV
      SWFAIQVSWFBIQRVSWJPVTWKWAWLVSWJAIQVSWJBIQRVSCPVTVOWAVPVSCAIQVSCBIQRWNWEVN
      WNWCAWDBVKWCAPVLASTVLWDBPVKBSUARUBWFFGZWNWIWMKZVNWNWOWPWNWOOZWIWMWQWIWGNZ
      WHNZHZWMVKVLWOWIWTUCZWGUDZWHUDZXAVKWOOZVLWOOZWGWHUEXDWGFGXBAWFUFWGUGUHXEW
      HFGXCBWFUFWHUGUHUIUJWQWKWRWLWSVKWOWKWRPVLAWFUKULVLWOWLWSPVKBWFUKUMRUNUOUP
      UQVSURZWNWIEVSUSZWBKZVNWNXFXHWNVSUTGZXFXHDVAWNXIXFOZOZWBEVSWGVBZEVSWHVBZH
      XGXKVTXLWAXMVKXJVTXLPVLEAVSUTVCULVLXJWAXMPVKEBVSUTVCUMREVSWGWHVDVEVFUPUQV
      GVHVIVJ $.
      $( [7-Dec-2004] $)
  $}

  $( An ordinal is less than its sum with a nonzero ordinal.  Theorem 18 of
     [Suppes] p. 209 and its converse. $)
  oaord1 $p |- ( ( A e. On /\ B e. On ) ->
               ( (/) e. B <-> A e. ( A +o B ) ) ) $=
    ( con0 wcel c0 coa co wb wa 0elon oaord mp3an1 wceq oa0 adantl eleq1d 
    bitrd ancoms ) BCDZACDZEBDZAABFGZDZHSTIZUAAEFGZUBDZUCECDSTUAUFHJEBAKLUDUEAU
    BTUEAMSANOPQR $.
    $( [6-Dec-2004] $)

  $( An ordinal is less than or equal to its sum with another.  Part of
     Exercise 5 of [TakeutiZaring] p. 62.  (For the other part see
     ~ oaord1 .) $)
  oaword1 $p |- ( ( A e. On /\ B e. On ) -> A C_ ( A +o B ) ) $=
    ( con0 wcel wa c0 coa co wceq oa0 adantr wss 0ss wb 0elon oaword 3com13 
    mp3an3 mpbii eqsstr3d ) ACDZBCDZEZAAFGHZABGHZUAUDAIUBAJKUCFBLZUDUELZBMUAUBF
    CDZUFUGNZOUHUBUAUIFBAPQRST $.
    $( [6-Dec-2004] $)

  $( An ordinal is less than or equal to its sum with another.  Theorem 21 of
     [Suppes] p. 209. $)
  oaword2 $p |- ( ( A e. On /\ B e. On ) -> A C_ ( B +o A ) ) $=
    ( con0 wcel coa co wss wa c0 0ss wi 0elon oawordri mp3an1 wceq oa0r adantl 
    sseq1d sylibd mpi ancoms ) BCDZACDZABAEFZGZUBUCHZIBGZUEBJUFUGIAEFZUDGZUEICD
    UBUCUGUIKLIBAMNUFUHAUDUCUHAOUBAPQRSTUA $.
    $( [7-Dec-2004] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x z S $.
    oawordeulem.1 $e |- A e. On $.
    oawordeulem.2 $e |- B e. On $.
    oawordeulem.3 $e |- S = { y e. On | B C_ ( A +o y ) } $.
    $( Lemma for ~ oawordex . $)
    oawordeulem $p |- ( A C_ B -> E! x e. On ( A +o x ) = B ) $=
      ( vz wss cv coa co wceq con0 wrex wa wi wral wreu cint wcel opreq2 
      eqeq1d rcla4ev c0 wne crab ssrab2 eqsstri sseq2d elrab2 oaword2 mp2an 
      mpbir2an ne0i ax-mp oninton csuc cvv wlim w3o onzsl mpbi oa0 syl6eq 
      sseq1d biimprd oasuc mpan sylan9eqr visset sucid eleq2 mpbiri oneli wn 
      onnminsb inteqi eleq2i syl5ib wb ontri1 oacl sylancr con2bid sylibrd 
      mpcom word onordi ordsucss 3syl adantl eqsstrd r19.23aiva a1d ciun iunss 
      onelssi syl mprgbir oalim 3jaoi ax-17 hbrab1 hbint hbopr hbss onminsb 
      opreq2i sseqtr4i jctir eqss sylibr oacan mp3an1 eqtr3 syl5bi rgen2a reu4 
      ) CDJZCAKZLMZDNZAOPZYDCBKZLMZDNZQZYBYFNZRZBOSAOSZQYDAOTYAYEYLEUAZOUBZCYML
      MZDNZYEYAYDYPAYMOYBYMNYCYODYBYMCLUCUDUEEOJEUFUGZYNEDYGJZBOUHZOHYRBOUIUJDE
      UBZYQYTDOUBZDCDLMZJZYRUUCBDOEYFDNYGUUBDYFDCLUCUKZHULGUUACOUBZUUCGFDCUMUNZ
      UOEDUPUQEURUNZYAYODJZDYOJZQYPYAUUHUUIYMUFNZYMIKZUSZNZIOPZYMUTUBYMVAQZVBZY
      AUUHRZYNUUPUUGIYMVCVDUUJUUQUUNUUOUUJUUHYAUUJYOCDUUJYOCUFLMZCYMUFCLUCUUEUU
      RCNFCVEUQVFVGVHUUNUUHYAUUMUUHIOUUKOUBZUUMQYOCUUKLMZUSZDUUMUUSYOCUULLMZUVA
      YMUULCLUCUUEUUSUVBUVANFCUUKVIVJVKUUMUVADJZUUSUUMUUKYMUBZUUTDUBZUVCUUMUVDU
      UKUULUBUUKIVLVMYMUULUUKVNVOUUSUVDUVEYMUUKUUGVPUUSUVDDUUTJZVQZUVEUUSUUKYSU
      AZUBUVGUVDYRUVFBUUKYFUUKNYGUUTDYFUUKCLUCUKVRYMUVHUUKEYSHVSZVTWAUUSUVFUVEU
      UAUUTOUBZUVFUVEVQWBUUSDUUTWCGUUEUUSUVJFCUUKWDVJWEWFWGWHZDWIUVEUVCRDGWJUUT
      DWKUQWLWMWNWOWPUUOUUHYAUUOUUHIYMUUTWQZDJZUVMUUTDJZIYMIYMUUTDWRUVDUVEUVNUV
      KDUUTGWSWTXAUUOYOUVLDUUEUUOYOUVLNFICYMUTXBVJVGVOWPXCUQDCUVHLMZYOYRBOPZDUV
      OJZUUAUUCUVPGUUFYRUUCBDOUUDUEUNYRUVQBBIDUVOUUKDUBBXDBICUVHLUUKCUBBXDUUKLU
      BBXDBIYSYRBIOXEXFXGXHYFUVHNYGUVODYFUVHCLUCUKXIUQYMUVHCLUVIXJXKXLYODXMXNWE
      YKABOYBOUBZYFOUBZQYCYGNZYJYIUUEUVRUVSUVTYJWBFCYBYFXOXPYCYGDXQXRXSXLYDYHAB
      OYJYCYGDYBYFCLUCUDXTXN $.
      $( [11-Dec-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Existence theorem for weak ordering of ordinal sum.  Proposition 8.8 of
       [TakeutiZaring] p. 59. $)
    oawordeu $p |- ( ( ( A e. On /\ B e. On ) /\ A C_ B ) ->
                  E! x e. On ( A +o x ) = B ) $=
      ( vy con0 wcel wa wss cv coa co wceq wreu wi c0 cif sseq1 opreq1 eqeq1d 
      reubidv imbi12d sseq2 eqeq2 crab 0elon elimel eqid oawordeulem dedth2h 
      imp ) BEFZCEFZGBCHZBAIZJKZCLZAEMZUKULUMUQNUKBOPZCHZURUNJKZCLZAEMZNURULCOP
      ZHZUTVCLZAEMZNBCOOBURLZUMUSUQVBBURCQVGUPVAAEVGUOUTCBURUNJRSTUACVCLZUSVDVB
      VFCVCURUBVHVAVEAECVCUTUCTUAADURVCVCURDIJKHDEUDZBOEUEUFCOEUEUFVIUGUHUIUJ 
      $.
      $( [11-Dec-2004] $)

    $( Existence theorem for weak ordering of ordinal sum. $)
    oawordexr $p |- ( ( A e. On /\ E. x e. On ( A +o x ) = B ) -> A C_ B ) $=
      ( con0 wcel cv coa co wceq wrex wss wa sseq2 oaword1 syl5cbi r19.23adva 
      imp ) BDEZBAFZGHZCIZADJBCKZRUAUBADUABTKUBRSDELTCBMBSNOPQ $.
      $( [12-Dec-2004] $)

    $( Existence theorem for weak ordering of ordinal sum.  Proposition 8.8 of
       [TakeutiZaring] p. 59 and its converse.  See ~ oawordeu for
       uniqueness. $)
    oawordex $p |- ( ( A e. On /\ B e. On ) ->
                  ( A C_ B <-> E. x e. On ( A +o x ) = B ) ) $=
      ( con0 wcel wa wss cv coa co wceq wrex wreu oawordeu ex reurex syl6 wi 
      oawordexr adantr impbid ) BDEZCDEZFZBCGZBAHIJCKZADLZUDUEUFADMZUGUDUEUHABC
      NOUFADPQUBUGUERUCUBUGUEABCSOTUA $.
      $( [12-Dec-2004] $)

    $( Existence theorem for ordering of ordinal sum.  Similar to Proposition
       4.34(f) of [Mendelson] p. 266 and its converse. $)
    oaordex $p |- ( ( A e. On /\ B e. On ) ->
                  ( A e. B <-> E. x e. On ( (/) e. x /\ ( A +o x ) = B ) ) ) $=
      ( con0 wcel wa c0 cv coa co wceq wrex wss wi onelss adantl oawordex 
      sylibd oaord1 eleq2 sylan9bb biimprcd exp4c com12 imp4b simpr a1i jcad 
      exp3a reximdvai ex adantr mpdd biimpd exp31 com34 imp4a r19.23adv impbid 
      ) BDEZCDEZFZBCEZGAHZEZBVDIJZCKZFZADLZVBVCVGADLZVIVBVCBCMZVJVAVCVKNUTCBOPA
      BCQRUTVCVJVINZNVAUTVCVLUTVCFZVGVHADVMVDDEZVGVHVMVNVGFZVEVGUTVCVNVGVEVCUTV
      NVGVENNVCUTVNVGVEUTVNFZVGFZVEVCVPVEBVFEVGVCBVDSVFCBTUAZUBUCUDUEVOVGNVMVNV
      GUFUGUHUIUJUKULUMUTVIVCNVAUTVHVCADUTVNVEVGVCUTVNVGVEVCUTVNVGVEVCNVQVEVCVR
      UNUOUPUQURULUS $.
      $( [12-Dec-2004] $)
  $}

  $( An ordinal sum is zero iff both of its arguments are zero. $)
  oa00 $p |- ( ( A e. On /\ B e. On ) ->
             ( ( A +o B ) = (/) <-> ( A = (/) /\ B = (/) ) ) ) $=
    ( con0 wcel wa coa co c0 wceq wne wb on0eln0 adantr oaword1 sseld sylbird 
    ne0i syl6 necon4d adantl 0elon oaord mp3an1 ancoms bitr3d syl6bi jcad 
    opreq12 oa0 ax-mp syl6eq impbid1 ) ACDZBCDZEZABFGZHIZAHIZBHIZEZUOUQURUSUOAH
    UPHUOAHJZHUPDZUPHJZUOVAHADZVBUMVDVAKUNALMUOAUPHABNOPUPHQRSUOBHUPHUOBHJZAHFG
    ZUPDZVCUOHBDZVEVGUNVHVEKUMBLTUNUMVHVGKZHCDZUNUMVIUAHBAUBUCUDUEUPVFQUFSUGUTU
    PHHFGZHAHBHFUHVJVKHIUAHUIUJUKUL $.
    $( [6-Dec-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( The ordinal sum with a limit ordinal is a limit ordinal.  Proposition
       8.11 of [TakeutiZaring] p. 60. $)
    oalimcl $p |- ( ( A e. On /\ ( B e. C /\ Lim B ) ) -> Lim ( A +o B ) ) $=
      ( vy vx coa co wlim word c0 wceq cv csuc con0 wrex wo wn wcel wa dflim3 
      oacl eloni syl limelon sylan2 ioran 0ellim n0i ad2antll wi oa00 simpr 
      syl6bi con3d mpd ciun eqeq1 oalim syl5bi imp visset sucid syl5eleq eliun 
      sylib onelon sylan onnbtwn imnan sylibr com12 adantl ad2antrl wb 
      ordsucelsuc 3syl oasuc eleq2d bitr4d eleq1 bicomd sylan9bbr oaord 3expa 
      adantr sucelon jca ancoms biimpd exp32 com4l imp32 mtod exp44 r19.23adv 
      expcom pm2.01d nrexdv sylanbrc ) ABFGZHWTIZWTJKZWTDLZMZKZDNOZPQZANRZBCRZB
      HZSZSZDWTTXHBNRZXAXKXHXMSZWTNRXAABUAWTUBUCBCUDZUEXGXBQZXFQXLXBXFUFXLBJKZQ
      ZXPXJXRXHXIXJJBRXRBUGBJUHUCUIXHXMXRXPUJXKXNXBXQXNXBAJKZXQSXQABUKXSXQULUMU
      NXOUEUOXLXEDNXLXEQZXCNRXLXEXEXLXTXEXLSZXCAELZFGZRZEBOZXTYAXCEBYCUPZRYEYAX
      DYFXCXEXLXDYFKZXEWTYFKYGXLWTXDYFUQEABCURUSUTXCDVAVBVCEXCBYCVDVEXLYEXTUJXE
      XLYDXTEBXHXKYBBRZYDXTUJUJXHXKYHYDXTXHXKYHSZYDSSXEBYBMZRZYIYKQZXHYDYIYBNRZ
      YLXMYHYMXKBYBVFXOVGZYHYMYLUJXKYMYHYLYMYHYKSQYHYLUJYBBVHYHYKVIVJVKVLUOVMXH
      YIYDXEYKUJXEXHYIYDYKXEXHYIYDYKUJXEXHYISZSZYDYKYPYDWTAYJFGZRZYKYOYDXDYQRZX
      EYRXHYMYDYSVNYIXHYMSZYDXDYCMZRZYSYTYCNRYCIYDUUBVNAYBUAYCUBXCYCVOVPYTYQUUA
      XDAYBVQVRVSYNUEXEYRYSWTXDYQVTWAWBYOYKYRVNZXEYIXHUUCXMYJNRZSXHUUCYIXMUUDXH
      UUCBYJAWCWDYIXMUUDXKXMYHXOWEYIYMUUDYNYBWFVEWGVGWHVLVSWIWJWKWLWMWNUTWOVLUO
      WPWQWEWRWSWS $.
      $( [8-Dec-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x C $.
    $( Ordinal addition is associative.  Theorem 25 of [Suppes] p. 211. $)
    oaass $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                 ( ( A +o B ) +o C ) = ( A +o ( B +o C ) ) ) $=
      ( vx vy vz vw con0 wcel coa co wceq wa cv c0 csuc opreq2 opreq2d eqeq12d 
      oacl oa0 syl adantl eqtr4d wi oasuc sylan sylan2 eqtrd anassrs suceq 
      syl5bir expcom wlim wral ciun iuneq2 cvv visset oalim mpanr1 ancoms 
      adantr oprex oalimcl wss wrex limelon mpan onelon ex adantld wo word 
      ordtri2or eloni syl2an ad2ant2l sseq2d rcla4ev 0ellim onelss sylibrd imp 
      expr adantrl adantrr wb oawordex oaord 3expb eleq1 sylan9bb an32s 
      biimpar eqimss2 ad2antrr jca anasss reximdv2 sylbid jaod mpd exp45 imp32 
      simplrr exp32 com12 imp31 adantll adantlr simpll ad2antlr oaword 
      syl111anc rexbidva mpbid mpdd exp4a r19.21aiv iunss2 oaordi anim1d 
      eleq2d syl6 exp3a r19.23adv eliun 3imtr4g ssrdv eqssd an12s 3eqtr4d 
      exp31 tfinds3 3impia ) AHIZBHIZCHIZABJKZCJKZABCJKZJKZLZYSYQYRMZUUDYTDNZJK
      ZABUUFJKZJKZLZYTOJKZABOJKZJKZLYTENZJKZABUUNJKZJKZLZYTUUNPZJKZABUUSJKZJKZL
      ZUUDUUEDECUUFOLZUUGUUKUUIUUMUUFOYTJQUVDUUHUULAJUUFOBJQRSUUFUUNLZUUGUUOUUI
      UUQUUFUUNYTJQUVEUUHUUPAJUUFUUNBJQRSUUFUUSLZUUGUUTUUIUVBUUFUUSYTJQUVFUUHUV
      AAJUUFUUSBJQRSUUFCLZUUGUUAUUIUUCUUFCYTJQUVGUUHUUBAJUUFCBJQRSUUEUUKYTUUMUU
      EYTHIZUUKYTLABTZYTUAUBYRUUMYTLYQYRUULBAJBUAZRUCUDUUEUUNHIZUURUVCUEUUEUVKM
      ZUVCUUOPZUUQPZLUURUVLUUTUVMUVBUVNUVHUVKUUTUVMLUUEYTUUNUFUVIUGYQYRUVKUVBUV
      NLYQYRUVKMZMUVBAUUPPZJKZUVNUVOUVBUVQLYQUVOUVAUVPAJBUUNUFRUCYQUUPHIZUVQUVN
      LUVOAUUPUFBUUNTZUHUIUJSUUOUUQUKULUMUUFUNZUUEUUREUUFUOZUUJUVTUUEMZUWAMEUUF
      UUOUPZEUUFUUQUPZUUGUUIUWAUWCUWDLUWBEUUFUUOUUQUQUCUWBUUGUWCLZUWAUUEUVTUWEU
      VHUVTUWEUUEUVHUUFURIZUVTUWEDUSZEYTUUFURUTVAUVIUGVBVCUWBUUIUWDLZUWAYQUVTYR
      UWHYQUVTYRMZMZUUIFUUHAFNZJKZUPZUWDYQUUHUNZUUIUWMLZUWIYQUUHURIUWNUWOBUUFJV
      DFAUUHURUTVAYRUVTUWNYRUWFUVTUWNUWGBUUFURVEVAVBUHUWJUWMUWDUWIYQUWMUWDVFZUW
      IYQMZUWLUUQVFZEUUFVGZFUUHUOUWPUWQUWSFUUHUVTYRYQUWKUUHIZUWSUEUVTYRYQUWTUWS
      UVTUUFHIZYRYQUWTMZUWSUEZUEUWFUVTUXAUWGUUFURVHVIZUVTUXAYRUXCUVTUXAYRMZMZUX
      BUWKHIZUWSUXEUXBUXGUEUVTUXEUWTUXGYQUXEUUHHIZUWTUXGUEYRUXAUXHBUUFTVBUXHUWT
      UXGUUHUWKVJVKUBVLUCUXFUXBUXGUWSUXFUXBUXGMZMZUWKUUPVFZEUUFVGZUWSUXFUXBUXGU
      XLUXFUWTUXGUXLUEZYQUVTUXEUWTUXMUEUVTUXEUWTUXGUXLUVTUXEUWTUXGMZMZMZUWKBIZB
      UWKVFZVMZUXLUXOUXSUVTYRUXGUXSUXAUWTBVNZUWKVNZUXSYRUXGUYAUXTUXSUWKBVOVBBVP
      UWKVPVQVRUCUXPUXQUXLUXRUVTUXEUXQUXLUEZUXNUVTYRUYBUXAUVTYRUXQUXLOUUFIUWKUU
      LVFZUXLUVTYRUXQMUXKUYCEOUUFUUNOLUUPUULUWKUUNOBJQVSVTUUFWAYRUXQUYCYRUXQUWK
      BVFUYCBUWKWBYRUULBUWKUVJVSWCWDVQWEWFWGUXOUXRUXLUEUVTUXOUXRUUPUWKLZEHVGZUX
      LYRUXGUXRUYEWHUXAUWTEBUWKWIVRUXEUWTUYEUXLUEUXGUXEUWTMZUYDUXKEHUUFUVKUYDMZ
      UYFUUNUUFIZUXKMZUYGUXEUWTUYIUYGUXEMZUWTMUYHUXKUYJUYHUWTUVKUXEUYDUYHUWTWHU
      VKUXEMUYHUUPUUHIZUYDUWTUVKUXAYRUYHUYKWHUUNUUFBWJWKUUPUWKUUHWLWMWNWOUYGUXK
      UXEUWTUYDUXKUVKUWKUUPWPUCWQWRWSUMWTWGXAUCXBXCXDWDVLXEUXJUXKUWREUUFUXJUYHM
      UXGUVRYQUXKUWRWHUXFUXBUXGUYHXFUXFUYHUVRUXIUXEUYHUVRUVTUXAYRUYHUVRYRUXAUYH
      UVRUEYRUXAUYHUVRYRUVKUVRUXAUYHMUVSUUFUUNVJUHXGXHXIXJXKUXIYQUXFUYHYQUWTUXG
      XLXMUWKUUPAXNXOXPXQXGXRXGXCXSXIXTFEUUHUUFUWLUUQYAUBVBUWIUWDUWMVFZYQUXAYRU
      YLUVTUXEGUWDUWMUXEGNZUUQIZEUUFVGUYMUWLIZFUUHVGZUYMUWDIUYMUWMIUXEUYNUYPEUU
      FUXEUYHUYNUYPUXEUYHUYNMUYKUYNMUYPUXEUYHUYKUYNUUNUUFBYBYCUYOUYNFUUPUUHUWKU
      UPLUWLUUQUYMUWKUUPAJQYDVTYEYFYGEUYMUUFUUQYHFUYMUUHUWLYHYIYJUXDUGUCYKUIYLV
      CYMYNYOXHYP $.
      $( [10-Dec-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z B $.
    $( Recursive definition of ordinal addition.  Exercise 25 of [Enderton]
       p. 240. $)
    oarec $p |- ( ( A e. On /\ B e. On ) ->
                ( A +o B ) = ( A u. { x | E. y e. B x = ( A +o y ) } ) ) $=
      ( vz vw con0 wcel coa co cv wceq wrex cab cun c0 csuc opreq2 rexeq 
      abbidv uneq2d eqeq12d oa0 wex wn rex0 nex abn0 necon1bbii mpbi uneq2i 
      un0 eqtr2i syl6eq wi wa oasuc csn df-sn uneq12 mpan2 df-suc wo visset 
      elsuc anbi1i andir bitri exbii 19.43 df-rex eqeq2d ceqsexv bicomi 
      orbi12i 3bitr4i abbii unab eqtr4i unass 3eqtr4g sylan9eq exp31 com12 
      wlim wral ciun cvv oalim mpanr1 ancoms adantr iuneq2 adantl wne 0ellim 
      ne0i iunconst 3syl word limord ordtr1 syl exp3a com23 imp anim1d 
      reximdv2 r19.23adva ax-17 hbre1 hbrex limsuc biimpd sucidg a1i jcad 
      eleq2 anbi1d rcla4ev ra4e reximi anassrs syl6 r19.23ad impbid iunab 
      syl5eq uneq12d iunun ad2antrr 3eqtrd tfinds3 impcom ) DGHCGHZCDIJZCAKZCBK
      ZIJZLZBDMZANZOZLZCEKZIJZCYTBUUEMZANZOZLZCPIJZCYTBPMZANZOZLCFKZIJZCYTBUUOM
      ZANZOZLZCUUOQZIJZCYTBUVAMZANZOZLZUUDYOEFDUUEPLZUUFUUKUUIUUNUUEPCIRUVGUUHU
      UMCUVGUUGUULAYTBUUEPSTUAUBUUEUUOLZUUFUUPUUIUUSUUEUUOCIRUVHUUHUURCUVHUUGUU
      QAYTBUUEUUOSTUAUBUUEUVALZUUFUVBUUIUVEUUEUVACIRUVIUUHUVDCUVIUUGUVCAYTBUUEU
      VASTUAUBUUEDLZUUFYPUUIUUCUUEDCIRUVJUUHUUBCUVJUUGUUAAYTBUUEDSTUAUBYOUUKCUU
      NCUCUUNCPOCUUMPCUULAUDZUEUUMPLUULAYTBUFUGUVKUUMPUULAUHUIUJUKCULUMUNYOUUOG
      HZUUTUVFUOYOUVLUUTUVFYOUVLUPUUTUVBUUPQZUVECUUOUQUUTUUPUUPURZOZUUSYQUUPLZA
      NZOZUVMUVEUUTUVNUVQLUVOUVRLAUUPUSUUPUUSUVNUVQUTVAUUPVBUVECUURUVQOZOUVRUVD
      UVSCUVDUUQUVPVCZANUVSUVCUVTAYRUVAHZYTUPZBUDZYRUUOHZYTUPZBUDZYRUUOLZYTUPZB
      UDZVCZUVCUVTUWCUWEUWHVCZBUDUWJUWBUWKBUWBUWDUWGVCZYTUPUWKUWAUWLYTYRUUOBVDV
      EVFUWDUWGYTVGVHVIUWEUWHBVJVHYTBUVAVKUUQUWFUVPUWIYTBUUOVKUWIUVPYTUVPBUUOFV
      DUWGYSUUPYQYRUUOCIRVLVMVNVOVPVQUUQUVPAVRVSUKCUURUVQVTVSWAWBWCWDUUEWEZYOUU
      TFUUEWFZUUJUWMYOUPZUWNUPUUFFUUEUUPWGZFUUEUUSWGZUUIUWOUUFUWPLZUWNYOUWMUWRY
      OUUEWHHUWMUWREVDFCUUEWHWIWJWKWLUWNUWPUWQLUWOFUUEUUPUUSWMWNUWMUWQUUILYOUWN
      UWMFUUECWGZFUUEUURWGZOUUIUWQUWMUWSCUWTUUHUWMPUUEHUUEPWOUWSCLUUEWPUUEPWQFU
      UECWRWSUWMUUQFUUEMZANUUHUWTUWMUXAUUGAUWMUXAUUGUWMUUQUUGFUUEUWMUUOUUEHZUPZ
      YTYTBUUOUUEUXCUWDYRUUEHZYTUWMUXBUWDUXDUOUWMUWDUXBUXDUWMUWDUXBUXDUWMUUEWTU
      WDUXBUPUXDUOUUEXAYRUUOUUEXBXCXDXEXFXGXHXIUWMYTUXABUUEUWMBXJUUQBFUUEUXBBXJ
      YTBUUOXKXLUWMUXDYTUXAUWMUXDYTUPYRQZUUEHZYRUXEHZUPZYTUPUXAUWMUXDUXHYTUWMUX
      DUXFUXGUWMUXDUXFUUEYRXMXNUXDUXGUOUWMYRUUEXOXPXQXGUXFUXGYTUXAUXFUXGYTUPZUP
      UWEFUUEMUXAUWEUXIFUXEUUEUUOUXELUWDUXGYTUUOUXEYRXRXSXTUWEUUQFUUEYTBUUOYAYB
      XCYCYDXDYEYFTUUQFAUUEYGYHYIFUUECUURYJYHYKYLWCYMYN $.
      $( [26-Dec-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Ordering property of ordinal multiplication.  Half of Proposition 8.19
       of [TakeutiZaring] p. 63. $)
    omordi $p |- ( ( ( B e. On /\ C e. On ) /\ (/) e. C ) ->
                 ( A e. B -> ( C .o A ) e. ( C .o B ) ) ) $=
      ( vx vy con0 wcel c0 comu co wi onelon ex wa cv csuc wceq eleq2 opreq2 
      eleq2d imbi12d noel pm2.21i a1i coa wo oaword1 sseld imim2d imp adantrl 
      eleq1d oaord1 biimpa syl5cbir adantrr jaod omcl simpl jca sylan elsuci 
      syl5 wb omsuc adantr sylibrd exp43 com12 adantld imp3a wlim wral wss 
      ciun limsuc ssiun2s syl adantll cvv visset omlim mpanr1 sseqtr4d id 
      ad2ant2r anabss1 eleqtrrd sseldd exp53 com13 imp4c a1dd tfinds3 com23 
      exp4a mpdd com34 com24 imp31 ) BFGZCFGZHCGZABGZCAIJZCBIJZGZKZXAXDXCXBXGXA
      XDXBXCXGXAXDAFGZXBXCXGKZKXAXDXIBALMXAXDXIXBXJXAXDXIXBNZXCXGXAXKXCNZXDXGAD
      OZGZXECXMIJZGZKZAHGZXECHIJZGZKZAEOZGZXECYBIJZGZKZAYBPZGZXECYGIJZGZKZXHXLD
      EBXMHQZXNXRXPXTXMHARYLXOXSXEXMHCISTUAXMYBQZXNYCXPYEXMYBARYMXOYDXEXMYBCIST
      UAXMYGQZXNYHXPYJXMYGARYNXOYIXEXMYGCISTUAXMBQZXNXDXPXGXMBARYOXOXFXEXMBCIST
      UAYAXLXRXTAUBUCUDYBFGZXKXCYFYKKZYPXBXCYQKZXIXBYPYRXBYPXCYFYKXBYPNZXCYFNZN
      ZYHXEYDCUEJZGZYJUUAYCAYBQZUFZUUCYHYDFGZXBNZYTUUEUUCKYSUUGYTNYCUUCUUDUUGYF
      YCUUCKZXCUUGYFUUHUUGYEUUCYCUUGYDUUBXEYDCUGUHUIUJUKUUGXCUUDUUCKYFUUDUUCYDU
      UBGZUUGXCNUUDXEYDUUBAYBCISULUUGXCUUIYDCUMUNUOUPUQYSUUFXBCYBURXBYPUSUTVAAY
      BVBVCYSYJUUCVDYTYSYIUUBXECYBVETVFVGVHVIVJVKXMVLZXLXQYFEXMVMUUJXIXBXCXQXBX
      IUUJXCXQKXBXIUUJXCXNXPXBXINZUUJXCNNZXNNCAPZIJZXOXEXBUUJNZXNUUNXOVNUULUUOX
      NNUUNEXMYDVOZXOUUJXNUUNUUPVNZXBUUJXNNUUMXMGZUUQUUJXNUURXMAVPUNEXMYDUUMUUN
      YBUUMCISVQVRVSUUOXOUUPQZXNXBXMVTGUUJUUSDWAECXMVTWBWCVFWDXBUUJUUOXIXCUUOWE
      WFVAUULXEUUNGZXNUUKXCUUTUUJUUKXCNXEXECUEJZUUNUUKXCXEUVAGZXBXIXCUVBVDZXEFG
      XBUVCUUKXECUMCAURVAWGUNUUKUUNUVAQXCCAVEVFWHUKVFWIWJWKWLWMWNWOWPWPWQWRWSWT
      $.
      $( [14-Dec-2004] $)
  $}

  $( Ordering property of ordinal multiplication. $)
  omord2 $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ (/) e. C ) ->
               ( A e. B <-> ( C .o A ) e. ( C .o B ) ) ) $=
    ( con0 wcel w3a c0 wa comu co wi omordi 3adantl1 wceq wo wn opreq2 a1i 
    3adantl2 orim12d con3d wb word ordtri2 eloni syl2an omcl anandis ancoms 
    3impa adantr 3adant3 3imtr4d impbid ) ADEZBDEZCDEZFZGCEZHZABEZCAIJZCBIJZEZU
    PUQUSVAVDKUOABCLMUTVBVCNZVCVBEZOZPZABNZBAEZOZPZVDVAUTVKVGUTVIVEVJVFVIVEKUTA
    BCIQRUOUQUSVJVFKUPBACLSTUAURVDVHUBZUSUOUPUQVMUQUOUPHVMUQUOUPVMVBDEZVCDEZVMU
    QUOHUQUPHVBUCVCUCVMVNVOVBVCUDVBUEVCUEUFCAUGCBUGUFUHUIUJUKURVAVLUBZUSUOUPVPU
    QAUCBUCVPUOUPABUDAUEBUEUFULUKUMUN $.
    $( [25-Dec-2004] $)

  $( Ordering property of ordinal multiplication.  Proposition 8.19 of
     [TakeutiZaring] p. 63. $)
  omord $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
               ( ( A e. B /\ (/) e. C ) <-> ( C .o A ) e. ( C .o B ) ) ) $=
    ( con0 wcel w3a c0 wa comu co wb omord2 ex pm5.32rd simpl wi wne wceq 
    opreq1 eqeq1d om0r syl5cbir necon3d ne0i syl5 adantr on0eln0 adantl 
    sylibrd 3adant1 ancld impbid2 bitrd ) ADEZBDEZCDEZFZABEZGCEZHCAIJZCBIJZEZUS
    HZVBUQUSURVBUQUSURVBKABCLMNUQVCVBVBUSOUQVBUSUOUPVBUSPUNUOUPHVBCGQZUSUOVBVDP
    UPUOVAGQVDVBUOCGVAGCGRZVAGRGBIJZGRUOVEVAVFGCGBISTBUAUBUCVAUTUDUEUFUPUSVDKUO
    CUGUHUIUJUKULUM $.
    $( [14-Dec-2004] $)

  $( Left cancellation law for ordinal multiplication.  Proposition 8.20 of
     [TakeutiZaring] p. 63 and its converse. $)
  omcan $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ (/) e. A ) ->
                   ( ( A .o B ) = ( A .o C ) <-> B = C ) ) $=
    ( con0 wcel w3a c0 wa comu co wceq wo wn wi omordi ex ancoms 3adant2 imp 
    3adant3 orim12d con3d wb word ordtri3 omcl eloni syl syl2an 3impdi adantr 
    3adant1 3imtr4d opreq2 impbid1 ) ADEZBDEZCDEZFZGAEZHZABIJZACIJZKZBCKZVAVBVC
    EZVCVBEZLZMZBCEZCBEZLZMZVDVEVAVLVHVAVJVFVKVGUSUTVJVFNZUPURUTVNNZUQURUPVOURU
    PHUTVNBCAOPQRSUSUTVKVGNZUPUQUTVPNZURUQUPVQUQUPHUTVPCBAOPQTSUAUBUSVDVIUCZUTU
    PUQURVRVBUDZVCUDZVRUPUQHZUPURHZVBVCUEWAVBDEVSABUFVBUGUHWBVCDEVTACUFVCUGUHUI
    UJUKUSVEVMUCZUTUQURWCUPBUDCUDWCUQURBCUEBUGCUGUIULUKUMBCAIUNUO $.
    $( [14-Dec-2004] $)

  $( Weak ordering property of ordinal multiplication. $)
  omword $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ (/) e. C ) ->
                   ( A C_ B <-> ( C .o A ) C_ ( C .o B ) ) ) $=
    ( con0 wcel w3a c0 wa wceq wo comu co wss omord2 wb omcan 3anrot sylanbr 
    bicomd orbi12d onsseleq 3adant3 adantr omcl anim12i anandis ancoms 3impa 
    syl 3bitr4d ) ADEZBDEZCDEZFZGCEZHZABEZABIZJZCAKLZCBKLZEZUTVAIZJZABMZUTVAMZU
    PUQVBURVCABCNUPVCURUMUKULFUOVCUROUNCABPUMUKULQRSTUNVEUSOZUOUKULVGUMABUAUBUC
    UNVFVDOZUOUNUTDEZVADEZHZVHUKULUMVKUMUKULHVKUMUKULVKUMUKHVIUMULHVJCAUDCBUDUE
    UFUGUHUTVAUAUIUCUJ $.
    $( [21-Dec-2004] $)

  $( Weak ordering property of ordinal multiplication. $)
  omwordi $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                   ( A C_ B -> ( C .o A ) C_ ( C .o B ) ) ) $=
    ( con0 wcel w3a c0 wss comu co wi wa omword biimpd ex wn wceq wb word 
    eloni ord0eln0 necon2bbid syl 3ad2ant3 opreq1 sseq12d ssid om0r adantr 
    adantl mpbiri syl5cbir 3adant3 sylbird a1dd pm2.61d ) ADEZBDEZCDEZFZGCEZABH
    ZCAIJZCBIJZHZKZUTVAVFUTVALVBVEABCMNOUTVAPZVEVBUTVGCGQZVEUSUQVHVGRZURUSCSZVI
    CTVJVACGCUAUBUCUDUQURVHVEKUSVHVEGAIJZGBIJZHZUQURLZVHVCVKVDVLCGAIUECGBIUEUFV
    NVMGGHGUGVNVKGVLGUQVKGQURAUHUIURVLGQUQBUHUJUFUKULUMUNUOUP $.
    $( [21-Dec-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Weak ordering property of ordinal multiplication.  Proposition 8.21 of
       [TakeutiZaring] p. 63. $)
    omwordri $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
        ( A C_ B -> ( A .o C ) C_ ( B .o C ) ) ) $=
      ( vx vy con0 wcel wss comu co wi wa cv c0 csuc wceq opreq2 sseq12d 0ss 
      om0 sseq1d mpbiri ad2antrr w3a coa omcl 3adant2 3adant1 simp1 oawordri 
      syl111anc imp adantrl wb oaword syld3an3 biimpa adantrr sstrd omsuc 
      adantr 3sstr4d exp520 com3r imp4c wlim wral cvv visset ciun omlim 
      ad2ant2rl adantl ss2iun syl5bir anandirs mpanr1 expcom adantrd tfinds3 
      exp3a 3impib 3coml ) CFGZAFGZBFGZABHZACIJZBCIJZHZKZWDWEWFWKWDWEWFLZWGWJAD
      MZIJZBWMIJZHZANIJZBNIJZHZAEMZIJZBWTIJZHZAWTOZIJZBXDIJZHZWJWLWGLDECWMNPWNW
      QWOWRWMNAIQWMNBIQRWMWTPWNXAWOXBWMWTAIQWMWTBIQRWMXDPWNXEWOXFWMXDAIQWMXDBIQ
      RWMCPWNWHWOWIWMCAIQWMCBIQRWEWSWFWGWEWSNWRHWRSWEWQNWRATUAUBUCWTFGZWEWFWGXC
      XGKZWEWFXHWGXIKWEWFXHWGXCXGWEWFXHUDZWGXCLZLZXAAUEJZXBBUEJZXEXFXLXMXBAUEJZ
      XNXJXCXMXOHZWGXJXCXPXJXAFGZXBFGZWEXCXPKWEXHXQWFAWTUFUGWFXHXRWEBWTUFUHZWEW
      FXHUIXAXBAUJUKULUMXJWGXOXNHZXCXJWGXTWEWFXRWGXTUNXHABXBUOXSUPUQURUSXJXEXMP
      ZXKWEXHYAWFAWTUTUGVAXJXFXNPZXKWFXHYBWEBWTUTUHVAVBVCVDVEWMVFZWLXCEWMVGZWPK
      ZWGWLYCYEWLWMVHGZYCYEDVIWEWFYFYCLZYEWEYGLZWFYGLZLZWPEWMXAVJZEWMXBVJZHYDYJ
      WNYKWOYLWEYGWNYKPYGWFEAWMVHVKVLYIWOYLPYHEBWMVHVKVMREWMXAXBVNVOVPVQVRVSVTW
      AWBWC $.
      $( [20-Dec-2004] $)
  $}

  $( An ordinal is less than or equal to its product with another. $)
  omword1 $p |- ( ( ( A e. On /\ B e. On ) /\ (/) e. B ) ->
                 A C_ ( A .o B ) ) $=
    ( con0 wcel wa c0 comu co wss c1o wb word eloni ordgt0ge1 syl adantl wi 
    1on omwordi mp3an1 ancoms wceq om1 adantr sseq1d sylibd sylbid imp ) ACDZBC
    DZEZFBDZAABGHZIZUKULJBIZUNUJULUOKZUIUJBLUPBMBNOPUKUOAJGHZUMIZUNUJUIUOURQZJC
    DUJUIUSRJBASTUAUKUQAUMUIUQAUBUJAUCUDUEUFUGUH $.
    $( [21-Dec-2004] $)

  $( An ordinal is less than or equal to its product with another. $)
  omword2 $p |- ( ( ( A e. On /\ B e. On ) /\ (/) e. B ) ->
                 A C_ ( B .o A ) ) $=
    ( con0 wcel wa c0 c1o comu co wceq om1r ad2antrr wss word ordgt0ge1 biimpa 
    eloni sylan adantll wi 1on omwordri mp3an1 ancoms adantr mpd eqsstr3d ) ACD
    ZBCDZEZFBDZEZAGAHIZBAHIZUHUMAJUIUKAKLULGBMZUMUNMZUIUKUOUHBNZUKUOUIUQUKUOBOP
    BQRSUJUOUPTZUKUIUHURGCDUIUHURUAGBAUBUCUDUEUFUG $.
    $( [21-Dec-2004] $)

  $( The product of two ordinal numbers is zero iff at least one of them is
     zero.  Proposition 8.22 of [TakeutiZaring] p. 64. $)
  om00 $p |- ( ( A e. On /\ B e. On ) -> ( ( A .o B ) = (/) <->
              ( A = (/) \/ B = (/) ) ) ) $=
    ( con0 wcel wa comu co c0 wceq wo wn c1o wss wne wi word wb eloni ordge1n0 
    syl biimprd adantr on0eln0 adantl omword1 ex sylbird anim12d sstr syl6 
    neanior syl5ibr omcl 3syl sylibd necon4bd opreq1 om0r sylan9eqr opreq2 om0 
    jaod impbid ) ACDZBCDZEZABFGZHIZAHIZBHIZJZVFVKVGHVFVKKZLVGMZVGHNZVFAHNZBHNZ
    EZVMVLVFVQLAMZAVGMZEVMVFVOVRVPVSVDVOVROVEVDVRVOVDAPVRVOQARASTUAUBVFVPHBDZVS
    VEVTVPQVDBUCUDVFVTVSABUEUFUGUHLAVGUIUJAHBHUKULVFVGCDVGPVMVNQABUMVGRVGSUNUOU
    PVFVIVHVJVEVIVHOVDVEVIVHVIVEVGHBFGHAHBFUQBURUSUFUDVDVJVHOVEVDVJVHVJVDVGAHFG
    HBHAFUTAVAUSUFUBVBVC $.
    $( [21-Dec-2004] $)

  $( The product of two nonzero ordinal numbers is nonzero. $)
  om00el $p |- ( ( A e. On /\ B e. On ) -> ( (/) e. ( A .o B ) <->
              ( (/) e. A /\ (/) e. B ) ) ) $=
    ( con0 wcel wa comu co c0 wne wceq wo wn om00 necon3abid wb omcl on0eln0 
    syl bi2anan9 neanior syl6bb 3bitr4d ) ACDZBCDZEZABFGZHIZAHJBHJKZLZHUFDZHADZ
    HBDZEZUEUHUFHABMNUEUFCDUJUGOABPUFQRUEUMAHIZBHIZEUIUCUKUNUDULUOAQBQSAHBHTUAU
    B $.
    $( [28-Dec-2004] $)

  ${
    $d x y z w v A $.  $d x y z w v B $.  $d x y C $.
    $( Ordering involving the product of a limit ordinal.  Proposition 8.23 of
       [TakeutiZaring] p. 64. $)
    omordlim $p |- ( ( ( A e. On /\ ( B e. D /\ Lim B ) ) /\ C e. ( A .o B ) )
                -> E. x e. B C e. ( A .o x ) ) $=
      ( con0 wcel wlim wa comu co cv wrex ciun omlim eleq2d eliun syl6bb 
      biimpa ) BFGCEGCHIIZDBCJKZGZDBALJKZGACMZTUBDACUCNZGUDTUAUEDABCEOPADCUCQRS
      $.
      $( [25-Dec-2004] $)

    $( The product of any nonzero ordinal with a limit ordinal is a limit
       ordinal.  Proposition 8.24 of [TakeutiZaring] p. 64. $)
    omlimcl $p |- ( ( ( A e. On /\ ( B e. C /\ Lim B ) ) /\ (/) e. A ) ->
                  Lim ( A .o B ) ) $=
      ( vy vx comu co wlim word c0 wceq cv csuc con0 wrex wo wn wcel wa dflim3 
      omcl eloni syl limelon sylan2 adantr ioran n0i 0ellim anim12i ancoms 
      adantll wb om00 notbid syl6bb mpbird ciun eqeq1 biimpac omlim sylan 
      visset sucid syl5eleq eliun sylib adantlr wi onelon onnbtwn imnan sylibr 
      com12 adantl mpd c1o coa ordsucelsuc oa1suc eleq2d bitr4d wss ordgt0ge1 
      1on oaword mp3an1 syldan bitrd biimpa omsuc sseqtr4d sseld sylbid eleq1 
      biimprd syl9 com23 adantlrl w3a omord simpl syl6bir sucelon syl3an2b 
      3comr 3expb syl6d jca anim2i anassrs an32s imp mtod exp31 r19.23adv ex 
      pm2.01d nrexdv sylanbrc ) ABFGZHYAIZYAJKZYADLZMZKZDNOZPQZANRZBCRZBHZSZSZJ
      ARZSZDYATYMYBYNYIBNRZYBYLYIYPSZYANRYBABUAYAUBUCBCUDZUEUFYHYCQZYGQYOYCYGUG
      YOYSAJKZQZBJKZQZSZYLYNUUDYIYKYNUUDYJYNYKUUDYNUUAYKUUCAJUHYKJBRUUCBUIBJUHU
      CUJUKULULYMYSUUDUMZYNYIYPUUEYLYQYSYTUUBPZQUUDYQYCUUFABUNUOYTUUBUGUPYRUEUF
      UQYOYFDNYOYFQZYDNRYOYFYOYFUUGYOYFSYDAELZFGZRZEBOZUUGYMYFUUKYNYMYFSZYDEBUU
      IURZRUUKUULYEUUMYDYAUUMKZYFYEUUMKZYMYFUUNUUOYAYEUUMUSUTEABCVAVBYDDVCVDVEE
      YDBUUIVFVGVHYOUUKUUGVIYFYOUUJUUGEBYOUUHBRZUUJUUGYOUUPSZUUJSYFBUUHMZRZUUQU
      USQZUUJYMUUPUUTYNYLUUPUUTYIYLUUPSZUUHNRZUUTYPUUPUVBYLBUUHVJZYRVBUUPUVBUUT
      VIYLUVBUUPUUTUVBUUPUUSSQUUPUUTVIUUHBVKUUPUUSVLVMVNVOVPULVHUFUUQUUJYFUUSVI
      ZYMUUPYNUUJUVDVIZYIYPUVBSZSZYNUVEYMUUPSUVGYNSUUJYFYAAUURFGZRZUUSYIUVBYNUU
      JYFUVIVIVIYPYIUVBSZYNSZYFUUJUVIUVKUUJYEUVHRZYFUVIUVKUUJYEUUIVQVRGZRZUVLUV
      JUUJUVNUMZYNUVJUUINRZUVOAUUHUAZUVPUUJYEUUIMZRZUVNUVPUUIIUUJUVSUMUUIUBYDUU
      IVSUCUVPUVMUVRYEUUIVTWAWBUCUFUVKUVMUVHYEUVKUVMUUIAVRGZUVHUVJYNUVMUVTWCZUV
      JYNVQAWCZUWAYIYNUWBUMZUVBYIAIUWCAUBAWDUCUFYIUVBUVPUWBUWAUMZUVQVQNRYIUVPUW
      DWEVQAUUIWFWGWHWIWJUVJUVHUVTKYNAUUHWKUFWLWMWNYFUVIUVLYAYEUVHWOWPWQWRWSUVG
      UVIUUSVIZYNYIYPUVBUWEYPUVBYIUWEYPUURNRZYIUWEUVBYPUWFYIWTUVIUUSYNSUUSBUURA
      XAUUSYNXBXCUUHXDXEXFXGUFXHYIYLUUPUVGUVAUVFYIYPUUPUVFYLYPUUPSYPUVBYPUUPXBU
      VCXIYRVBXJXKVBXLXMXNXOXPUFVPXQXRUFXSXTXT $.
      $( [25-Dec-2004] $)

    $( Distributive law for ordinal arithmetic.  Proposition 8.25 of
       [TakeutiZaring] p. 64. _Warning:  The HTML proof page is 3/4 megabyte in
       size_. $)
    odi $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                 ( A .o ( B +o C ) ) = ( ( A .o B ) +o ( A .o C ) ) ) $=
      ( vx vy vz vw vv con0 wcel coa co comu wceq cv c0 csuc wa opreq2 opreq2d 
      eqeq12d omcl oa0 syl om0 adantr adantl 3eqtr4rd wi w3a oasuc 3adant1 
      omsuc oacl sylan2 3impb eqtrd 3adant2 oaass syl3an1 syl3an2 3exp exp4b 
      pm2.43a com4r pm2.43i 3imp eqtr4d opreq1 syl5bir com3r imp3a wlim wral 
      opreq12d om0r opreqan12d 0elon ax-mp syl6req cvv visset limelon mpan 
      ancoms exp3a imp a1dd ciun wss wrex wo wn wb simplr onelon sylan ontri1 
      oawordex bitr3d syl11anc oaord 3expb eleq1 sylan9bb iba an32s biimpcd 
      exp4c reximdvai sylbid orrd sylanl1 adantlrl adantlr om00el biimprd 
      0ellim sylan2i imp31 a1d adantlrr omordi ancom1s onelss sseq2d sylibrd 
      syld adantll jcad rcla4ev syl6 adantrr adantrd rcla4cv eqeq1 syl5bi 
      eqimss2 imim2i ad2antll r19.23adv jaod mpd r19.21aiva iunss2 omordlim ex 
      mpanr1 oaordi word ordelon limord rcla4cva eleq2d an12s r19.23adva 
      adantrl eqssd oalimcl anim2i oprex omlim ad2antlr omlimcl jctl jctil 
      oalim 3eqtr4d exp43 com3l oe0lem com12 tfinds3 ) AIJZBIJZCIJZABCKLZMLZABM
      LZACMLZKLZNZUVPUVNUVOUWBUVPUVNUVOUWBABDOZKLZMLZUVSAUWCMLZKLZNZABPKLZMLZUV
      SAPMLZKLZNABEOZKLZMLZUVSAUWMMLZKLZNZABUWMQZKLZMLZUVSAUWSMLZKLZNZUWBUVNUVO
      RZDECUWCPNZUWEUWJUWGUWLUXFUWDUWIAMUWCPBKSTUXFUWFUWKUVSKUWCPAMSTUAUWCUWMNZ
      UWEUWOUWGUWQUXGUWDUWNAMUWCUWMBKSTUXGUWFUWPUVSKUWCUWMAMSTUAUWCUWSNZUWEUXAU
      WGUXCUXHUWDUWTAMUWCUWSBKSTUXHUWFUXBUVSKUWCUWSAMSTUAUWCCNZUWEUVRUWGUWAUXIU
      WDUVQAMUWCCBKSTUXIUWFUVTUVSKUWCCAMSTUAUXEUVSPKLZUVSUWLUWJUXEUVSIJZUXJUVSN
      ABUBZUVSUCZUDUXEUWKPUVSKUVNUWKPNUVOAUEUFTUXEUWIBAMUVOUWIBNUVNBUCUGTUHUWMI
      JZUVNUVOUWRUXDUIZUVNUVOUXNUXOUVNUVOUXNUXOUVNUVOUXNUJZUXDUWOAKLZUWQAKLZNUW
      RUXPUXAUXQUXCUXRUXPUXAAUWNQZMLZUXQUXPUWTUXSAMUVOUXNUWTUXSNUVNBUWMUKULTUVN
      UVOUXNUXTUXQNZUVNUWNIJUYAUVOUXNRAUWNUMBUWMUNUOUPUQUXPUXCUVSUWPAKLZKLZUXRU
      XPUXBUYBUVSKUVNUXNUXBUYBNUVOAUWMUMURTUVNUVOUXNUXRUYCNZUVNUVOUXNUYDUIUIUVN
      UVOUXNUVNUYDUVOUVNUXNUVNUYDUIZUIUVNUVOUVNUXNUYEUXEUVNUXNRZUVNUYDUXEUWPIJZ
      UVNUYDUYFUXKUYGUVNUYDUXEUVSUWPAUSUXLUTAUWMUBVAVBVCVDVEVFVGVHUAUWOUWQAKVIV
      JVBVKVLUXEUWCVMZUWREUWCVNZUWHUIZUVOUYHUYJUIZAUVOAPNZRUYHUWHUYIUVOUYLUYHUW
      HUIUYLUYHUVOUWHUYLUYHUVOUWHUYLUWHPUWDMLZPBMLZPUWCMLZKLZNZUYHUVORZUYLUWEUY
      MUWGUYPAPUWDMVIUYLUVSUYNUWFUYOKAPBMVIAPUWCMVIVOUAUVOUYHUYQUVOUWCIJZUYQUYH
      UVOUYSRZUYMPUYPUYTUWDIJZUYMPNBUWCUNZUWDVPUDUYTUYPPPKLZPUVOUYSUYNPUYOPKBVP
      UWCVPVQPIJVUCPNVRPUCVSVTUQUWCWAJZUYHUYSDWBZUWCWAWCWDZUOWEVJWFVKWGWHUXEPAJ
      ZUYKUYHUXEVUGUYJUYHUXEVUGUYIUWHUYHUXERZVUGUYIRZRZFUWDAFOZMLZWIZGUWFUVSGOZ
      KLZWIZUWEUWGVUJVUMVUPVUJVULVUOWJZGUWFWKZFUWDVNVUMVUPWJVUJVURFUWDVUJVUKUWD
      JZRVUKBJZHOZUWCJZBVVAKLZVUKNZRZHIWKZWLZVURVUHVUSVVGVUIUYHUVOVUSVVGUVNUYSU
      VOVUSVVGUYHUYSUVORZVUSRZVUTVVFVVIVUTWMZVVDHIWKZVVFVVIUVOVUKIJZVVJVVKWNUYS
      UVOVUSWOVUAVUSVVLVVHUWDVUKWPUVOUYSVUAVUBWEWQUVOVVLRBVUKWJVVJVVKBVUKWRHBVU
      KWSWTXAVVIVVDVVEHIVVHVUSVVAIJZVVDVVEUIUIVUSVVMVVDVVHVVEVUSVVMVVDVVHVVEVVM
      VVDRVVHRVUSVVEVVMVVHVVDVUSVVEWNVVMVVHRZVVDRVVBVUSVVEVVNVVBVVCUWDJZVVDVUSV
      VMUYSUVOVVBVVOWNVVAUWCBXBXCVVCVUKUWDXDXEVVDVVBVVEWNVVNVVDVVBXFUGWTXGXHXIV
      EWGXJXKXLVUFXMXNXOVUJVVGVURUIVUSVUJVUTVURVVFVUHVUGVUTVURUIUYIVUHVUGRZVUTP
      UWFJZVULUXJWJZRVURVVPVUTVVQVVRUYHUVNVUGVUTVVQUIUVOUYHUVNRZVUGRZVVQVUTUYHU
      VNVUGVVQUVNUYHVUGVVQUIUVNUYHVUGUYHVVQUVNUYHVUGUYHVVQUVNUYSVUGUYHRVVQUIUYH
      UVNUYSRZVUGPUWCJZVVQUYHVWAVVQVUGVWBRAUWCXPXQUWCXRXSVUFUOVCVEVDXTYAYBUXEVU
      GVUTVVRUIUYHUXEVUGRVUTVULUVSJZVVRUVOUVNVUGVUTVWCUIVUKBAYCYDUXEVWCVVRUIZVU
      GUXEUXKVWDUXLUXKVWCVULUVSWJVVRUVSVULYEUXKUXJUVSVULUXMYFYGUDUFYHYIYJVUQVVR
      GPUWFVUNPNVUOUXJVULVUNPUVSKSYFYKYLYMUYHUVNVUIVVFVURUIUVOVVSVUIRZVVEVURHIV
      WEVVEVURUIVVMVWEVVEAVVAMLZUWFJZVULUVSVWFKLZWJZRVURVWEVVEVWGVWIVVSVUGVVEVW
      GUIUYIVVTVVBVWGVVDUYSUVNVUGVVBVWGUIUYHVVAUWCAYCVUFXMYNYMUYIVVEVWIUIZVVSVU
      GUYIVVBAVVCMLZVWHNZUIZVWJUWRVWLEVVAUWCUWMVVANZUWOVWKUWQVWHVWNUWNVVCAMUWMV
      VABKSTVWNUWPVWFUVSKUWMVVAAMSTUAZYOVWMVVBVVDVWIVWLVVDVWIUIVVBVWLVVDVWHVULN
      ZVWIVWLVWKVULNVWPVVDVWKVWHVULYPVVCVUKAMSYQVULVWHYRYLYSVLUDYTYJVUQVWIGVWFU
      WFVUNVWFNVUOVWHVULVUNVWFUVSKSYFYKYLYAUUAYBUUBUFUUCUUDFGUWDUWFVULVUOUUEUDV
      UHUYIVUPVUMWJZVUGVUHUYIRZVUOVULWJZFUWDWKZGUWFVNVWQVWRVWTGUWFVWRVUNUWFJZRV
      UNVWFJZHUWCWKZVWTVUHVXAVXCUYIUYHUVNVXAVXCUVOVVSVXAVXCUVNUYHVXAVXCUIZUVNVU
      DUYHVXDVUEUVNVUDUYHRZRZVXAVXCHAUWCVUNWAUUFUUGUUHWEWGYBXOVWRVXCVWTUIVXAVWR
      VXBVWTHUWCVWRVVBRZVXBVVOVUOVWKWJZRVWTVXGVXBVVOVXHVUHVVBVXBVVOUIUYIVUHVVBR
      ZVVOVXBUYHUVOVVBVVOUVNUYRVVBVVOUYSUVOVVBVVOUIUYHVVAUWCBUUIVUFWQWGXNYAXOVX
      GVXBVUOVWKJZVXHVXGVXBVUOVWHJZVXJVUHVVBVXBVXKUIZUYIUYHVVBUXEVXLVVMUXEVXLUY
      HVVBRZVVMUXERVWFIJZUXKVXLVVMUVNVXNUVOUVNVVMVXNAVVAUBWEYMUXEUXKVVMUXLUGVUN
      VWFUVSUUIXAUWCUUJVVBVVMUYHUWCVVAUUKUWCUULWQZWQXGXOUYIVVBVXJVXKWNVUHUYIVVB
      RVWKVWHVUOUWRVWLEVVAUWCVWOUUMUUNYIYGVUHVVBVXJVXHUIZUYIVXIVWKIJZVXPUYHVVBU
      XEVXQVVMUXEVXQVXMUVNVVMUVOVXQUVNVVCIJZVXQVVMUVORAVVCUBUVOVVMVXRBVVAUNWEUO
      UUOVXOWQXGVWKVUOYEUDXOYHYJVWSVXHFVVCUWDVUKVVCNVULVWKVUOVUKVVCAMSYFYKYLUUP
      UFUUCUUDGFUWFUWDVUOVULUUEUDUUQUURVUHUWEVUMNZVUIVUHUVNUWDVMZRZVXSUVNUYHUVO
      VYAUYRVXTUVNUVOUYHVXTUVOVUDUYHVXTVUEBUWCWAUUSUUHWEUUTUUOUVNUWDWAJVXTVXSBU
      WCKUVAFAUWDWAUVBUUHUDUFVUHVUGUWGVUPNZUYIVVPUXKUWFWAJZUWFVMZRVYBUXEUXKUYHV
      UGUXLUVCVVPVYDVYCUYHUVNVUGVYDUVOVXFVUGVYDVVSAUWCWAUVDUVNUYHVXFUYHVXEUVNUY
      HVUDVUEUVEUUTWEWQYBAUWCMUVAUVFGUVSUWFWAUVGXAYMUVHUVIUVJWGUVKUVLUVMWFUVJVG
      $.
      $( [26-Dec-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x C $.
    $( Multiplication of ordinal numbers is associative.  Theorem 8.26 of
       [TakeutiZaring] p. 65. $)
    omass $p |- ( ( A e. On /\ B e. On /\ C e. On ) ->
                 ( ( A .o B ) .o C ) = ( A .o ( B .o C ) ) ) $=
      ( vx vy vz con0 wcel comu co wceq cv c0 csuc wa opreq2 opreq2d eqeq12d 
      omcl om0 syl sylan9eqr eqtr4d wi w3a coa omsuc sylan 3impa 3adant1 odi 
      syl3an2 3exp exp3a com34 pm2.43d 3imp eqtrd opreq1 syl5bir com3r imp3a 
      wlim wral ciun cvv visset omlim mpanr1 ancoms an32s ad2antrr iuneq2 wss 
      wrex omordi limelon mpan anim1i ssid sseq2d rcla4ev mpan2 syl6 r19.21aiv 
      iunss2 adantlr onelon sylan2 omordlim ex ad2antlr onelss 3ad2ant2 
      omwordi syld syl5 exp4d imp32 com23 imp reximdvai exp31 imp4c mpcom 
      r19.21aiva adantr eqssd oprex omlimcl mpanlr1 wn wb word eloni ord0eln0 
      necon2bbid opreq1d om0r anassrs sylan9eq adantll sylbird a1dd pm2.61d 
      com3l tfinds3 ) AGHZBGHZCGHZABIJZCIJZABCIJZIJZKZYJYHYIYOYJYHYIYOYKDLZIJZA
      BYPIJZIJZKZYKMIJZABMIJZIJZKYKELZIJZABUUDIJZIJZKZYKUUDNZIJZABUUIIJZIJZKZYO
      YHYIOZDECYPMKZYQUUAYSUUCYPMYKIPUUOYRUUBAIYPMBIPQRYPUUDKZYQUUEYSUUGYPUUDYK
      IPUUPYRUUFAIYPUUDBIPQRYPUUIKZYQUUJYSUULYPUUIYKIPUUQYRUUKAIYPUUIBIPQRYPCKZ
      YQYLYSYNYPCYKIPUURYRYMAIYPCBIPQRUUNUUAMUUCUUNYKGHZUUAMKABSZYKTUAYIYHUUCAM
      IJZMYIUUBMAIBTQATZUBUCUUDGHZYHYIUUHUUMUDZYHYIUVCUVDYHYIUVCUVDYHYIUVCUEZUU
      MUUEYKUFJZUUGYKUFJZKUUHUVEUUJUVFUULUVGYHYIUVCUUJUVFKZUUSUVCUVHUUNYKUUDUGU
      UTUHUIUVEUULAUUFBUFJZIJZUVGUVEUUKUVIAIYIUVCUUKUVIKYHBUUDUGUJQYHYIUVCUVJUV
      GKZYHYIUVCUVKUDYHYIUVCYIUVKYHYIUVCYIUVKUDYHYIUVCOZYIUVKYHUUFGHZYIUVKUVLAU
      UFBUKBUUDSZULUMUNUOUPUQURRUUEUUGYKUFUSUTUMVAVBYPVCZYHYIUUHEYPVDZYTUDZYIUV
      OYHUVQYIUVOYHUVQYIUVOOZYHOZMBHZUVQUVSUVTUVPYTUVSUVTOZUVPOYQEYPUUEVEZYSUVS
      YQUWBKZUVTUVPYIYHUVOUWCUUSUVOUWCYIYHOUUSYPVFHZUVOUWCDVGZEYKYPVFVHVIYHYIUU
      SUUTVJUHVKVLUVPUWAUWBEYPUUGVEZYSEYPUUEUUGVMUWAUWFFYRAFLZIJZVEZYSUWAUWFUWI
      UVRUVTUWFUWIVNZYHUVRUVTOZUUGUWHVNZFYRVOZEYPVDUWJUWKUWMEYPUWKUUDYPHZUUFYRH
      ZUWMYPGHZYIOZUVTUWNUWOUDUVRUUDYPBVPUVOYIUWQUVOUWPYIUWDUVOUWPUWEYPVFVQVRZV
      SVJUHUWOUUGUUGVNZUWMUUGVTUWLUWSFUUFYRUWGUUFKUWHUUGUUGUWGUUFAIPWAWBWCWDWEE
      FYPYRUUGUWHWFUAWGUVSUWIUWFVNZUVTUVSUWHUUGVNZEYPVOZFYRVDUWTUVSUXBFYRUWGGHZ
      UVSUWGYRHZOUXBUVRUXDUXCYHYRGHZUXDUXCUVRYRUWGWHYIUWPUXEUVOBYPSUWRWIUHWGUXC
      UVRYHUXDUXBUXCUVRYHUXDUXBUDUXCUVROZYHOZUXDUWGUUFHZEYPVOZUXBUVRUXDUXIUDZUX
      CYHYIUWDUVOUXJUWEYIUWDUVOOOUXDUXIEBYPUWGVFWJWKVIWLUXGUXHUXAEYPUXFYHUWNUXH
      UXAUDZUDUXFUWNYHUXKUXCYIUVOUWNYHUXKUDZUDUXCYIUVOUWNUXLUXCUVMUXLYIUVOUWNOZ
      OUXCUVMYHUXKUXCUVMYHUEUXHUWGUUFVNZUXAUVMUXCUXHUXNUDYHUUFUWGWMWNUWGUUFAWOW
      PUMYIUVCUVMUXMUVNUWPUWNUVCUVOYPUUDWHUWRUHWIWQWRWSWTXAXBWPXCXDXEXFFEYRYPUW
      HUUGWFUAXGXHUVRUVTYHYSUWIKZYHUWKUXOYHYRVCZUXOUWKYHYRVFHUXPUXOBYPIXIFAYRVF
      VHVIYIUWDUVOUVTUXPUWEBYPVFXJXKWIVJVKUCUBURXCUVSUVTXLZYTUVPUVSUXQBMKZYTYIU
      XRUXQXMZUVOYHYIBXNZUXSBXOUXTUVTBMBXPXQUAVLUVOYHUXRYTUDZYIUWPYHUYAUVOUWPYH
      OZUXRYTUYBUXROYQMYSUWPYHUXRYQMKYHUXROZUWPYQMYPIJZMUYCYKMYPIUXRYHYKUVAMBMA
      IPUVBUBXRYPXSZUBXTUWPUXRYHYSMKUWPUXROZYHYSUVAMUYFYRMAIUXRUWPYRUYDMBMYPIUS
      UYEUBQUVBYAVKUCWKUWRUHYBYCYDYEXCYFVBYGUNYFUQ $.
      $( [28-Dec-2004] $)
  $}

  $( If an ordinal number is even, its successor is odd. $)
  oneo $p |- ( ( A e. On /\ B e. On /\ C = ( 2o .o A ) ) ->
              -. suc C = ( 2o .o B ) ) $=
    ( con0 wcel c2o comu co wceq w3a csuc wa wn onnbtwn 3ad2ant1 wb suceq 
    eqeq1d 3ad2ant3 wi c0 2on omord mp3an3 simpl syl6bir oprex sucid eleq2 
    mpbii syl5 simpr c1o coa omcl mpan oa1suc syl 1on elisseti df-2o eleqtrri 
    oaord mp3an12 omsuc eleqtrrd eqeltrrd ad2antrr suceloni sylan2 ancoms 
    adantr mpbird simpld ex jcad 3adant3 sylbid mtod ) ADEZBDEZCFAGHZIZJZCKZFBG
    HZIZABEZBAKZEZLZVTWAWKMWCABNOWDWGWBKZWFIZWKWCVTWGWMPWAWCWEWLWFCWBQRSVTWAWMW
    KTWCVTWALZWMWHWJWNWBWFEZWHWMWNWOWHUAFEZLZWHVTWAFDEZWQWOPUBABFUCUDWHWPUEUFWM
    WBWLEWOWBFAGUGUHWLWFWBUIUJUKWNWMWJWNWMLZWJWPWSWJWPLZWFFWIGHZEZWSWLWFXAWNWMU
    LVTWLXAEWAWMVTWBUMUNHZWLXAVTWBDEZXCWLIWRVTXDUBFAUOUPZWBUQURVTXCWBFUNHZXAVTU
    MFEZXCXFEZUMUMKFUMUMDUSUTUHVAVBVTXDXGXHPZXEUMDEWRXDXIUSUBUMFWBVCVDURUJWRVTX
    AXFIUBFAVEUPVFVGVHVGWNWTXBPZWMWAVTXJWAWIDEZXJVTWAXKWRXJUBBWIFUCUDAVIVJVKVLV
    MVNVOVPVQVRVS $.
    $( [26-Jan-2006] $)

  ${
    $d x y A $.  $d x y B $.
    $( Ordinal exponentiation with a nonzero mantissa is nonzero.  Proposition
       8.32 of [TakeutiZaring] p. 67. $)
    oen0 $p |- ( ( ( A e. On /\ B e. On ) /\ (/) e. A ) ->
               (/) e. ( A ^o B ) ) $=
      ( vx vy con0 wcel c0 coe co wi cv csuc wa wceq opreq2 eleq2d c1o oe0 
      0lt1o syl5eleqr adantr comu omordi wb om0 eleq1d ad2antlr sylibd simpl 
      oecl jca sylan oesuc sylibrd exp31 com12 com34 imp3a wlim wral wss ciun 
      wrex 0ellim eqimss2 syl anim12i sseq2d rcla4ev ssiun 3syl adantrr cvv 
      visset oelim mpanlr1 anasss an12s sseqtr4d word ancoms limelon mpan 
      eloni ordgt0ge1 mpbird ex a1dd tfinds3 exp3a imp31 ) AEFZBEFZGAFZGABHIZFZ
      WMWLWNWPJWMWLWNWPGACKZHIZFZGAGHIZFZGADKZHIZFZGAXBLZHIZFZWPWLWNMZCDBWQGNWR
      WTGWQGAHOPWQXBNWRXCGWQXBAHOPWQXENWRXFGWQXEAHOPWQBNWRWOGWQBAHOPWLXAWNWLQWT
      GARZSTUAXBEFZWLWNXDXGJXJWLXDWNXGWLXJXDWNXGJZJWLXJXDXKWLXJMZXDMWNGXCAUBIZF
      ZXGWLXCEFZMZXDWNXNJXLXPXDMWNXCGUBIZXMFZXNGAXCUCXOXRXNUDWLXDXOXQGXMXCUEUFU
      GUHXLWLXOWLXJUIAXBUJUKULXLXGXNUDXDXLXFXMGAXBUMPUAUNUOUPUQURWQUSZXHWSXDDWQ
      UTXSXHWSXSXHMZWSQWRVAZXTQDWQXCVBZWRXSWLQYBVAZWNXSWLMZGWQFZQWTVAZMQXCVAZDW
      QVCYCXSYEWLYFWQVDWLWTQNYFXIQWTVEVFVGYGYFDGWQXBGNXCWTQXBGAHOVHVIDWQXCQVJVK
      VLWLXSWNWRYBNZWLXSWNYHWLWQVMFZXSWNYHCVNZDAWQVMVOVPVQVRVSXSWLWSYAUDZWNYDWR
      EFZWRVTYKWQEFZWLYLXSWLYMYLAWQUJWAYIXSYMYJWQVMWBWCULWRWDWRWEVKVLWFWGWHWIWJ
      UPWK $.
      $( [4-Jan-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Ordering law for ordinal exponentiation.  Proposition 8.33 of
       [TakeutiZaring] p. 67. $)
    oeordi $p |- ( ( ( B e. On /\ C e. On ) /\ 1o e. C ) ->
                 ( A e. B -> ( C ^o A ) e. ( C ^o B ) ) ) $=
      ( vx vy con0 wcel c1o coe co wi wa cv csuc wceq opreq2 eleq2d imbi2d 
      comu c0 0lt1o ontr1 mpani adantr oen0 ex syld simpl oecl jca jctild 
      omordi syli om1 syl eleq1d oesuc bitr4d sylibd expcom imp3a sucelon 
      sylan2b exp3a com23 a2d wlim wral ciun limsuc biimpa cvv elisset sucexb 
      sucidg sylbir eleq2 imbi12d rcla4v mpid anc2li wrex rcla4ev eliun sylibr 
      syl6 visset oelim mpanlr1 impr an12s adantlr sylibrd bi2.04 ralbii 
      r19.21v bitri syl5ib tfindsg2 exp4b com34 com24 imp31 ) BFGZCFGZHCGZABGZC
      AIJZCBIJZGZKXDXGXFXEXJXDXGXEXFXJXDXGXEXFXJXEXFLZXHCDMZIJZGZKZXKXHCANZIJZG
      ZKXKXHCEMZIJZGZKZXKXHCXSNZIJZGZKXKXJKDEBAXLXPOZXNXRXKYFXMXQXHXLXPCIPQRXLX
      SOZXNYAXKYGXMXTXHXLXSCIPQRXLYCOZXNYEXKYHXMYDXHXLYCCIPQRXLBOZXNXJXKYIXMXIX
      HXLBCIPQRAFGZXEXFXRXEYJXFXRKXEYJLZXFXHHSJZXHCSJZGZXRXFYKXEXHFGZLZTXHGZLYN
      YKXFYQYPYKXFTCGZYQXEXFYRKZYJXETHGXFYRUATHCUBUCZUDYKYRYQCAUEUFUGYKXEYOXEYJ
      UHCAUIZUJUKHCXHULUMYKYNXHYMGXRYKYLXHYMYKYOYLXHOUUAXHUNUOUPYKXQYMXHCAUQQUR
      USUTVAXSFGZAXSGZLXKYAYEUUBXKYAYEKZKUUCUUBXEXFUUDXEUUBXFUUDKXEUUBLZXFXTYDG
      ZUUDUUEXFXTHSJZXTCSJZGZUUFXFUUEXEXTFGZLZTXTGZLUUIUUEXFUULUUKUUEXFYRUULXEY
      SUUBYTUDUUEYRUULCXSUEUFUGUUEXEUUJXEUUBUHCXSUIZUJUKHCXTULUMUUEUUIXTUUHGUUF
      UUEUUGXTUUHUUEUUJUUGXTOUUMXTUNUOUPUUEYDUUHXTCXSUQQURUSUUEYAUUFYEUUEYAUUFY
      EUUEYDFGZYAUUFLYEKXEYCFGUUNUUBCYCUIXSVBVCXHXTYDUBUOVDVEUGUTVAUDVFXLVGZAXL
      GZLZXKUUCYAKZEXLVHZKZXOUUCYBKZEXLVHZUUQXKUUSXNUUQXKUUSXNKUUQXKLZUUSXHEXLX
      TVIZGZXNUUQUUSUVEKZXKUUQXPXLGZUVFUUOUUPUVGXLAVJVKUVGUUSUVGXRLZUVEUVGUUSXR
      UVGUUSAXPGZXRUVGXPVLGZUVIXPXLVMUVJAVLGUVIAVNAVLVOVPUOUURUVIXRKEXPXLXSXPOZ
      UUCUVIYAXRXSXPAVQUVKXTXQXHXSXPCIPQZVRVSVTWAUVHYAEXLWBUVEYAXREXPXLUVLWCEXH
      XLXTWDWEWFUOUDUVCXMUVDXHUUOXKXMUVDOZUUPXEUUOXFUVMXEUUOXFUVMXEUUOLZXFYRUVM
      XEYSUUOYTUDUVNYRUVMXEXLVLGUUOYRUVMDWGECXLVLWHWIUFUGWJWKWLQWMUFVFUVBXKUURK
      ZEXLVHUUTUVAUVOEXLUUCXKYAWNWOXKUUREXLWPWQWRWSWTXAXBXC $.
      $( [5-Jan-2005] $)
  $}

  $( Ordering property of ordinal exponentiation.  Corollary 8.34 of
     [TakeutiZaring] p. 68 and its converse. $)
  oeord $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ 1o e. C ) ->
               ( A e. B <-> ( C ^o A ) e. ( C ^o B ) ) ) $=
    ( con0 wcel w3a c1o wa coe co wi oeordi 3adantl1 wceq wo wn opreq2 a1i 
    3adantl2 orim12d con3d wb word ordtri2 eloni syl2an oecl anandis ancoms 
    3impa adantr 3adant3 3imtr4d impbid ) ADEZBDEZCDEZFZGCEZHZABEZCAIJZCBIJZEZU
    PUQUSVAVDKUOABCLMUTVBVCNZVCVBEZOZPZABNZBAEZOZPZVDVAUTVKVGUTVIVEVJVFVIVEKUTA
    BCIQRUOUQUSVJVFKUPBACLSTUAURVDVHUBZUSUOUPUQVMUQUOUPHVMUQUOUPVMVBDEZVCDEZVMU
    QUOHUQUPHVBUCVCUCVMVNVOVBVCUDVBUEVCUEUFCAUGCBUGUFUHUIUJUKURVAVLUBZUSUOUPVPU
    QAUCBUCVPUOUPABUDAUEBUEUFULUKUMUN $.
    $( [6-Jan-2005] $)

  $( Left cancellation law for ordinal exponentiation. $)
  oecan $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ 1o e. A ) ->
                   ( ( A ^o B ) = ( A ^o C ) <-> B = C ) ) $=
    ( con0 wcel w3a c1o wa coe co wceq wo wn wi oeordi ex ancoms 3adant2 imp 
    3adant3 orim12d con3d wb word ordtri3 oecl eloni syl syl2an 3impdi adantr 
    3adant1 3imtr4d opreq2 impbid1 ) ADEZBDEZCDEZFZGAEZHZABIJZACIJZKZBCKZVAVBVC
    EZVCVBEZLZMZBCEZCBEZLZMZVDVEVAVLVHVAVJVFVKVGUSUTVJVFNZUPURUTVNNZUQURUPVOURU
    PHUTVNBCAOPQRSUSUTVKVGNZUPUQUTVPNZURUQUPVQUQUPHUTVPCBAOPQTSUAUBUSVDVIUCZUTU
    PUQURVRVBUDZVCUDZVRUPUQHZUPURHZVBVCUEWAVBDEVSABUFVBUGUHWBVCDEVTACUFVCUGUHUI
    UJUKUSVEVMUCZUTUQURWCUPBUDCUDWCUQURBCUEBUGCUGUIULUKUMBCAIUNUO $.
    $( [6-Jan-2005] $)

  $( Weak ordering property of ordinal exponentiation. $)
  oeword $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ 1o e. C ) ->
                   ( A C_ B <-> ( C ^o A ) C_ ( C ^o B ) ) ) $=
    ( con0 wcel w3a c1o wa wceq wo coe co wss oeord wb oecan 3anrot sylanbr 
    bicomd orbi12d onsseleq 3adant3 adantr oecl anim12i anandis ancoms 3impa 
    syl 3bitr4d ) ADEZBDEZCDEZFZGCEZHZABEZABIZJZCAKLZCBKLZEZUTVAIZJZABMZUTVAMZU
    PUQVBURVCABCNUPVCURUMUKULFUOVCUROUNCABPUMUKULQRSTUNVEUSOZUOUKULVGUMABUAUBUC
    UNVFVDOZUOUNUTDEZVADEZHZVHUKULUMVKUMUKULHVKUMUKULVKUMUKHVIUMULHVJCAUDCBUDUE
    UFUGUHUTVAUAUIUCUJ $.
    $( [6-Jan-2005] $)

  $( Weak ordering property of ordinal exponentiation. $)
  oewordi $p |- ( ( ( A e. On /\ B e. On /\ C e. On ) /\ (/) e. C ) ->
                   ( A C_ B -> ( C ^o A ) C_ ( C ^o B ) ) ) $=
    ( con0 wcel w3a c0 wss coe co wi c1o wceq wo wb word eloni ordgt0ge1 syl 
    1on onsseleq mpan bitrd 3ad2ant3 wa oeword biimpd ex opreq1 sseq12d oe1m 
    adantr adantl eqtr4d eqimss syl5cbi 3adant3 a1dd jaod sylbid imp ) ADEZBDEZ
    CDEZFZGCEZABHZCAIJZCBIJZHZKZVEVFLCEZLCMZNZVKVDVBVFVNOVCVDVFLCHZVNVDCPVFVOOC
    QCRSLDEVDVOVNOTLCUAUBUCUDVEVLVKVMVEVLVKVEVLUEVGVJABCUFUGUHVEVMVJVGVBVCVMVJK
    VDVMLAIJZLBIJZHZVJVBVCUEZVMVPVHVQVILCAIUILCBIUIUJVSVPVQMVRVSVPLVQVBVPLMVCAU
    KULVCVQLMVBBUKUMUNVPVQUOSUPUQURUSUTVA $.
    $( [6-Jan-2005] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Weak ordering property of ordinal exponentiation.  Proposition 8.35 of
       [TakeutiZaring] p. 68. $)
    oewordri $p |- ( ( B e. On /\ C e. On ) ->
        ( A e. B -> ( A ^o C ) C_ ( B ^o C ) ) ) $=
      ( vx vy con0 wcel coe co wss wi cv c0 csuc wa wceq opreq2 sseq12d c1o 
      onelon oe0 syl adantr eqtr4d eqimss w3a comu oecl 3adant2 3adant1 simp1 
      omwordri syl111anc imp adantrl omwordi syld3an3 adantrr sstrd oesuc 
      3sstr4d exp520 com3r imp4c simpl onelss jca31 syl5 wlim wral opreq1 
      sseq1d cvv visset limelon mpan 0ellim oe0m1 biimpa syl11anc 0ss a1i 
      eqsstrd syl5bir adantl a1dd ciun oelim mpanlr1 an32s adantllr anim1i wne 
      on0eln0 ne0i adantlr adantlll ss2iun ex oe0lem com12 ancri tfinds3 exp3a 
      impcom ) CFGZBFGZABGZACHIZBCHIZJZKXFXGXHXKADLZHIZBXLHIZJZAMHIZBMHIZJZAELZ
      HIZBXSHIZJZAXSNZHIZBYCHIZJZXKXGXHOZDECXLMPXMXPXNXQXLMAHQXLMBHQRXLXSPXMXTX
      NYAXLXSAHQXLXSBHQRXLYCPXMYDXNYEXLYCAHQXLYCBHQRXLCPXMXIXNXJXLCAHQXLCBHQRYG
      XPXQPXRYGXPSXQYGAFGZXPSPBATZAUAUBXGXQSPXHBUAUCUDXPXQUEUBXSFGZYHXGOABJZOYB
      YFKZYGYJYHXGYKYLYHXGYJYKYLKYHXGYJYKYBYFYHXGYJUFZYKYBOZOZXTAUGIZYABUGIZYDY
      EYOYPYAAUGIZYQYMYBYPYRJZYKYMYBYSYMXTFGZYAFGZYHYBYSKYHYJYTXGAXSUHUIXGYJUUA
      YHBXSUHUJZYHXGYJUKXTYAAULUMUNUOYMYKYRYQJZYBYMYKUUCYHXGUUAYKUUCKYJABYAUPUU
      BUQUNURUSYMYDYPPZYNYHYJUUDXGAXSUTUIUCYMYEYQPZYNXGYJUUEYHBXSUTUJUCVAVBVCVD
      YGYHXGYKYIXGXHVEZXGXHYKBAVFUNVGVHXLVIZYHYGOZYBEXLVJZXOKZYGUUHUUGUUJYGUUGU
      UJKAYGAMPZOUUGXOUUIUUKUUGXOKYGUUKXOMXLHIZXNJUUGUUKXMUULXNAMXLHVKVLUUGUULM
      XNUUGXLFGZMXLGZUULMPZXLVMGZUUGUUMDVNZXLVMVOVPXLVQUUMUUNUUOXLVRVSVTMXNJUUG
      XNWAWBWCWDWEWFUUHMAGZOZUUGUUJUUSUUGOZXOEXLXTWGZEXLYAWGZJUUIUUTXMUVAXNUVBY
      HUURUUGXMUVAPZYGYHUUGUURUVCYHUUPUUGUURUVCUUQEAXLVMWHWIWJWKYGUURUUGXNUVBPZ
      YHYGUUGUVDUURYGUUGOXGUUGOMBGZUVDYGXGUUGUUFWLYGUVEUUGXGXHUVEXGUVEBMWMXHBWN
      BAWOWDUNUCXGUUPUUGUVEUVDUUQEBXLVMWHWIVTWPWQREXLXTYAWRWDWSWTXAYGYHYIXBVHXC
      XDXE $.
      $( [22-Jul-2006] $) $( [6-Jan-2005] $)

    $( Ordinal exponentiation compared to its exponent.  Proposition 8.37 of
       [TakeutiZaring] p. 68. $)
    oeworde $p |- ( ( ( A e. On /\ B e. On ) /\ 1o e. A ) ->
                  B C_ ( A ^o B ) ) $=
      ( vx vy con0 wcel c1o coe co wss wi cv c0 csuc wa wceq id opreq2 sseq12d 
      0ss a1i wb word eloni adantr oecl ancoms syl ordsucsssuc syl11anc 
      adantrr sstr2 visset sucid oeordi mpi anasss ordsucss mpd sucelon sylanb 
      syl5com sylbid ex wlim wral ciun cuni limuni uniiun syl6eq cvv oelim 
      mpanlr1 an12s ss2iun syl5bir wne on0eln0 ne0i imdistani syl5 tfinds3 
      exp3a com12 imp31 ) AEFZBEFZGAFZBABHIZJZWHWGWIWKKWHWGWIWKCLZAWLHIZJZMAMHI
      ZJZDLZAWQHIZJZWQNZAWTHIZJZWKWGWIOZCDBWLMPZWLMWMWOXDQWLMAHRSWLWQPZWLWQWMWR
      XEQWLWQAHRSWLWTPZWLWTWMXAXFQWLWTAHRSWLBPZWLBWMWJXGQWLBAHRSWPXCWOTUAWQEFZX
      CWSXBKXHXCOZWSWTWRNZJZXBXHWGWSXKUBZWIXHWGOZWQUCZWRUCZXLXHXNWGWQUDUEXMWREF
      ZXOWGXHXPAWQUFUGWRUDUHWQWRUIUJUKXKXJXAJZXBXIWTXJXAULWTEFZXCXQXHXRXCOWRXAF
      ZXQXRWGWIXSXRWGOZWIOWQWTFXSWQDUMUNWQWTAUOUPUQXRWGXSXQKZWIXTXAUCZYAWGXRYBW
      GXROXAEFYBAWTUFXAUDUHUGWRXAURUHUKUSWQUTVAVBVCVDWLVEZWGMAFZOZWSDWLVFZWNKZX
      CYCYEYGYCYEOZWNDWLWQVGZDWLWRVGZJYFYHWLYIWMYJYCWLYIPYEYCWLWLVHYIWLVIDWLVJV
      KUEWGYCYDWMYJPZWGYCYDYKWGWLVLFYCYDYKCUMDAWLVLVMVNUQVOSDWLWQWRVPVQVDWGWIYD
      WGYDAMVRWIAVSAGVTVQWAWBWCWDWEWF $.
      $( [7-Jan-2005] $)
  $}

  $( Ordering property of ordinal exponentiation with a successor exponent.
     Corollary 8.36 of [TakeutiZaring] p. 68. $)
  oeordsuc $p |- ( ( B e. On /\ C e. On ) ->
      ( A e. B -> ( A ^o suc C ) e. ( B ^o suc C ) ) ) $=
    ( con0 wcel wa csuc coe co wi onelon ex adantr comu wss w3a oewordri 
    3adant1 oecl 3adant2 simp1 omwordri syl111anc syld wceq oesuc sseq1d 
    sylibrd c0 wne on0eln0 ne0i syl5bir oen0 omordi simpl jca sylan com23 mpdd 
    eleq2d jcad 3expa ontr2 syl2an anandirs sucelon sylan2b exp31 com4l imp ) 
    BDEZCDEZFZABEZADEZACGZHIZBVQHIZEZVLVOVPJVMVLVOVPBAKLMVLVMVOVPVTJJVPVLVMVOVT
    VPVLVMVOVTJVPVLFZVMFVOVRBCHIZANIZOZWCVSEZFZVTVPVLVMVOWFJVPVLVMPZVOWDWEWGVOA
    CHIZANIZWCOZWDWGVOWHWBOZWJVLVMVOWKJVPABCQRWGWHDEZWBDEZVPWKWJJVPVMWLVLACSTVL
    VMWMVPBCSZRVPVLVMUAWHWBAUBUCUDWGVRWIWCVPVMVRWIUEVLACUFTUGUHWGVOWCWBBNIZEZWE
    VLVMVOWPJZVPVNVOUIWBEZWPVNVOUIBEZWRVLVOWSJVMVLWSBUIUJVOBUKBAULUMMVNWSWRBCUN
    LUDVNWRVOWPVNWRWQVLWMFWRWQVNABWBUOVNVLWMVLVMUPWNUQURLUSUTRWGVSWOWCVLVMVSWOU
    EVPBCUFRVAUHVBVCWAVQDEZWFVTJZVMVPVLWTXAVRDEVSDEXAVPWTFVLWTFVRWCVSVDAVQSBVQS
    VEVFCVGVHUDVIVJVKUT $.
    $( [7-Jan-2005] $)

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Ordinal exponentiation with a limit exponent.  Part of Exercise 4.36 of
       [Mendelson] p. 250. $)
    oelim2 $p |- ( ( A e. On /\ ( B e. C /\ Lim B ) ) ->
                ( A ^o B ) = U_ x e. ( B \ 1o ) ( A ^o x ) ) $=
      ( vy wcel wlim wa coe co c1o cdif cv ciun wceq c0 opreq1 adantr iuneq2dv 
      eqeq12d con0 limelon 0ellim adantl oe0m1 biimpa syl11anc wn wi word 
      ordelon limord sylan wne on0eln0 el1o necon3bbii syl6bbr biimpd sylbird 
      syl impr eldif sylan2b csuc limsuc mpbid df-1o syl5eqel 1on onirri jctir 
      sylibr ne0i iunconst 3syl eqtrd eqtr4d syl5bir impcom oelim wss wrex 
      wral nsuceq0 nemtbir ex ad2antlr sssucid w3a oewordi id 3expa ancoms 
      suceloni ancli sylan2 anassrs an32s mpi jcad opreq2 sseq2d rcla4ev syl6 
      r19.21aiv iunss2 difss iunss1 ax-mp cbviunv sseqtri a1i eqssd adantlrl 
      oe0lem ) CDFZCGZHZBCIJZACKLZBAMZIJZNZOZBBPOZXSYEYFYEPCIJZAYAPYBIJZNZOXSYF
      XTYGYDYIBPCIQYFAYAYCYHYFYCYHOYBYAFZBPYBIQRSTXSYGPYIXSCUAFZPCFZYGPOZCDUBXR
      YLXQCUCZUDYKYLYMCUEUFUGXRYIPOXQXRYIAYAPNZPXRAYAYHPXRYBCFZYBKFZUHZHYHPOZYJ
      XRYPYRYSXRYPHYBUAFZYRYSUICUJZYPYTXRCYBUKCULZUMYTYRPYBFZYSYTUUCYBPUNYRYBUO
      YQYBPYBUPUQURYTUUCYSYBUEUSUTVAVBYBCKVCVDSXRKYAFZYAPUNYOPOXRKCFZKKFUHZHUUD
      XRUUEUUFXRPVEZCKXRYLUUGCFYNCPVFVGVHVIKVJVKVLKCKVCVMYAKVNAYAPVOVPVQUDVRVSV
      TBUAFZXSHPBFZHXTECBEMZIJZNZYDEBCDWAUUHXRUUIUULYDOXQUUHXRHZUUIHZUULYDUUNUU
      KYCWBZAYAWCZECWDUULYDWBUUNUUPECUUNUUJCFZUUJVEZYAFZUUKBUURIJZWBZHUUPUUNUUQ
      UUSUVAXRUUQUUSUIUUHUUIXRUUQUUSXRUUQHZUURCFZUURKFZUHZHUUSUVBUVCUVEXRUUQUVC
      CUUJVFUFUVDUURPUUJWEUURUPWFVLUURCKVCVMWGWHUUNUUQUVAUUNUUQHUUJUURWBZUVAUUJ
      WIUUMUUQUUIUVFUVAUIZUUJUAFZUURUAFZUUHWJZUUIUVGUUMUUQHUUJUURBWKUUHXRUUQUVJ
      UUHUVHUVIHZUVJUVBUVKUUHUVJUVHUVIUUHUVJUVJWLWMWNUVBUVHUVKUUAUUQUVHXRCUUJUK
      UUBUMUVHUVIUUJWOWPVAWQWRUMWSWTWGXAUUOUVAAUURYAYBUUROYCUUTUUKYBUURBIXBXCXD
      XEXFEACYAUUKYCXGVAYDUULWBUUNYDACYCNZUULYACWBYDUVLWBCKXHAYACYCXIXJAECYCUUK
      YBUUJBIXBXKXLXMXNXOVQXP $.
      $( [21-Jul-2006] $) $( [6-Jan-2005] $)
  $}

  ${
    $d x C $.  $d x y z w A $.  $d x y z w B $.
    oeoalem.1 $e |- A e. On $.
    oeoalem.2 $e |- (/) e. A $.
    oeoalem.3 $e |- B e. On $.
    $( Lemma for ~ oeoa . $)
    oeoalem $p |- ( C e. On
               -> ( A ^o ( B +o C ) ) = ( ( A ^o B ) .o ( A ^o C ) ) ) $=
      ( vx vy vz vw cv coa co coe comu wceq c0 csuc opreq2 opreq2d eqeq12d c1o 
      con0 wcel oecl mp2an om1 ax-mp oe0 opreq2i oa0 3eqtr4ri wa oasuc oesuc 
      oacl sylancr eqtrd mpan opreq1 sylan9eq omass mp3an13 syl eqtr4d adantr 
      ex wlim wral ciun cvv visset oalim wne a1i word ordelon limord sylan 
      r19.21aiva 0ellim ne0i oelim mpan2 wss wi w3a oewordi mp3an3 3impia 
      onopriun syl111anc iuneq2 omlim omwordi tfinds ) ABGKZLMZNMZABNMZAWQNMZOM
      ZPZABQLMZNMZWTAQNMZOMZPABHKZLMZNMZWTAXHNMZOMZPZABXHRZLMZNMZWTAXNNMZOMZPZA
      BCLMZNMZWTACNMZOMZPGHCWQQPZWSXEXBXGYDWRXDANWQQBLSTYDXAXFWTOWQQANSTUAWQXHP
      ZWSXJXBXLYEWRXIANWQXHBLSTYEXAXKWTOWQXHANSTUAWQXNPZWSXPXBXRYFWRXOANWQXNBLS
      TYFXAXQWTOWQXNANSTUAWQCPZWSYAXBYCYGWRXTANWQCBLSTYGXAYBWTOWQCANSTUAWTUBOMZ
      WTXGXEWTUCUDZYHWTPAUCUDZBUCUDZYIDFABUEUFZWTUGUHXFUBWTOYJXFUBPDAUIUHUJXDBA
      NYKXDBPFBUKUHUJULXHUCUDZXMXSYMXMUMXPXLAOMZXRYMXMXPXJAOMZYNYKYMXPYOPFYKYMU
      MZXPAXIRZNMZYOYPXOYQANBXHUNTYJXIUCUDZYRYOPYPAXIUODBXHUPZUQURUSXJXLAOUTVAY
      MYNXRPZXMYJYMUUADYJYMUMZYNWTXKAOMZOMZXRUUBXKUCUDZYNUUDPZAXHUEZYIUUEYJUUFY
      LDWTXKAVBVCVDUUBXQUUCWTOAXHUOTVEUSVFURVGWQVHZXMHWQVIZXCUUHUUIUMWSHWQXLVJZ
      XBUUHUUIWSHWQXJVJZUUJUUHWSAHWQXIVJZNMZUUKUUHWRUULANWQVKUDZUUHWRUULPZGVLZY
      KUUNUUHUMZUUOFHBWQVKVMUSUSTUUHUUNYSHWQVIWQQVNZUUMUUKPUUNUUHUUPVOZUUHYSHWQ
      YKYMYSUUHXHWQUDZUMZYTFWQVPUUTYMUUHWQXHVQWQVRVSZUQVTUUHQWQUDUURWQWAWQQWBVD
      ZIJHAVKNWQXIJKZVKUDZUVDVHZAUVDNMZIUVDAIKZNMZVJPZJVLZYJUVEUVFUMZUVJDYJUVLU
      MQAUDZUVJEIAUVDVKWCWDUSUSUVHUCUDZUVDUCUDZUVHUVDWEZUVIUVGWEZUVNUVOYJUVPUVQ
      WFZDUVNUVOYJWGUVMUVREUVHUVDAWHWDWIWJWKWLURHWQXJXLWMVAUUHXBUUJPUUIUUHXBWTH
      WQXKVJZOMZUUJUUHXAUVSWTOUUNUUHXAUVSPZUUPYJUUQUWADYJUUQUMUVMUWAEHAWQVKWCWD
      USUSTUUHUUNUUEHWQVIUURUVTUUJPUUSUUHUUEHWQYJYMUUEUVAUUGDUVBUQVTUVCIJHWTVKO
      WQXKUVEUVFWTUVDOMZIUVDWTUVHOMZVJPZUVKYIUVLUWDYLIWTUVDVKWNUSUSUVNUVOUVPUWC
      UWBWEZUVNUVOYIUVPUWEWFYLUVHUVDWTWOWIWJWKWLURVFVEVGWP $.
      $( [26-May-2009] $)
  $}

  $( Sum of exponents law for ordinal exponentiation.  Theorem 8R of [Enderton]
     p. 238.  Also Proposition 8.41 of [TakeutiZaring] p. 69.  (Contributed by
     Eric Schmidt, 26-May-2009.) $)
  oeoa $p |- ( ( A e. On /\ B e. On /\ C e. On )
          -> ( A ^o ( B +o C ) ) = ( ( A ^o B ) .o ( A ^o C ) ) ) $=
    ( con0 wcel coa co coe comu wceq wa c0 opreq1 opreq12d eqeq12d oa00 
    biimpar opreq2d c1o opreq2 oe0m0 syl6eq opreqan12d 0elon oecl mp2an om1 
    ax-mp adantl eqtr4d wn wne wb oacl on0eln0 syl oe0m1 necon3abid 3bitr3d wo 
    adantr orbi12d neorian syl6bb biimpa opreq1d mpan om0r sylan9eq an32s om0 
    sylan9eqr anassrs jaodan ex sylbird imp pm2.61dan syl5bir impcom wi cif 
    imbi2d eleq1 eleq2 anbi12d 1on 0lt1o pm3.2i elimhyp simpli simpri elimel 
    oeoalem dedth2h impr oe0lem 3impb ) ADEZBDEZCDEZABCFGZHGZABHGZACHGZIGZJZWTX
    AKZXGAALJZXHXGXIXGLXBHGZLBHGZLCHGZIGZJZXHXIXCXJXFXMALXBHMXIXDXKXEXLIALBHMAL
    CHMNOXHBLJZCLJZKZXNXHXQKZXJLLHGZXMXRXBLLHXHXBLJXQBCPZQRXQXMXSJXHXQXMXSSIGZX
    SXOXPXKXSXLSIBLLHTXPXLXSSCLLHTUAUBUCXSDEZYAXSJLDEZYCYBUDUDLLUEUFXSUGUHUBUIU
    JXHXQUKZKXJLXMXHXJLJZYDXHLXBEZXBLULZYEYDXHXBDEZYFYGUMBCUNZXBUOUPXHYHYFYEUMY
    IXBUQUPXHXQXBLXTURUSQXHYDXMLJZXHYDLBEZLCEZUTZYJXHYMBLULZCLULZUTYDXHYKYNYLYO
    WTYKYNUMXABUOVAXAYLYOUMWTCUOUIVBBLCLVCVDXHYMYJXHYKYJYLWTYKXAYJWTYKKZXAXMLXL
    IGZLYPXKLXLIWTYKXKLJBUQVEVFXAXLDEZYQLJYCXAYRUDLCUEVGXLVHUPVIVJWTXAYLYJXAYLK
    ZWTXMXKLIGZLYSXLLXKIXAYLXLLJCUQVERWTXKDEZYTLJYCWTUUAUDLBUEVGXKVKUPVLVMVNVOV
    PVQUJVRVSVTWSLAEZXHXGWSUUBKZWTXAXGUUCWTXAXGWAXAUUCASWBZXBHGZUUDBHGZUUDCHGZI
    GZJZWAXAUUDWTBSWBZCFGZHGZUUDUUJHGZUUGIGZJZWAABSSAUUDJZXGUUIXAUUPXCUUEXFUUHA
    UUDXBHMUUPXDUUFXEUUGIAUUDBHMAUUDCHMNOWCBUUJJZUUIUUOXAUUQUUEUULUUHUUNUUQXBUU
    KUUDHBUUJCFMRUUQUUFUUMUUGIBUUJUUDHTVFOWCUUDUUJCUUDDEZLUUDEZUUCUURUUSKSDEZLS
    EZKASUUPWSUURUUBUUSAUUDDWDAUUDLWEWFSUUDJUUTUURUVAUUSSUUDDWDSUUDLWEWFUUTUVAW
    GWHWIWJZWKUURUUSUVBWLBSDWGWMWNWOWPVJWQWR $.
    $( [26-May-2009] $)

  ${
    $d x C $.  $d x y z w A $.  $d x y z w B $.
    oeoelem.1 $e |- A e. On $.
    oeoelem.2 $e |- (/) e. A $.
    $( Lemma for ~ oeoe . $)
    oeoelem $p |- ( ( B e. On /\ C e. On )
               -> ( ( A ^o B ) ^o C ) = ( A ^o ( B .o C ) ) ) $=
      ( vx vy vz vw con0 wcel coe co comu wceq cv c0 csuc opreq2 opreq2d 
      eqeq12d c1o oecl mpan oe0 syl om0 ax-mp syl6eq eqtr4d wi wa oesuc sylan 
      coa omsuc oeoa mp3an1 omcl anabss1 eqtrd opreq1 syl5bir expcom wlim wral 
      ciun cvv visset oelim sylanl1 oen0 mpan2 sylan2 mpanl1 mpanr1 omlim wne 
      a1i word ordelon limord anassrs r19.21aiva 0ellim ne0i adantl wss w3a 
      oewordi mp3an3 3impia onopriun syl111anc iuneq2 tfinds3 impcom ) CJKBJKZA
      BLMZCLMZABCNMZLMZOZWSFPZLMZABXDNMZLMZOZWSQLMZABQNMZLMZOWSGPZLMZABXLNMZLMZ
      OZWSXLRZLMZABXQNMZLMZOZXCWRFGCXDQOZXEXIXGXKXDQWSLSYBXFXJALXDQBNSTUAXDXLOZ
      XEXMXGXOXDXLWSLSYCXFXNALXDXLBNSTUAXDXQOZXEXRXGXTXDXQWSLSYDXFXSALXDXQBNSTU
      AXDCOZXEWTXGXBXDCWSLSYEXFXAALXDCBNSTUAWRXIUBXKWRWSJKZXIUBOAJKZWRYFDABUCZU
      DZWSUEUFWRXKAQLMZUBWRXJQALBUGTYGYJUBODAUEUHUIUJWRXLJKZXPYAUKWRYKULZYAXMWS
      NMZXOWSNMZOXPYLXRYMXTYNYFYKXRYMOWRWSXLUMYIUNYLXTAXNBUOMZLMZYNYLXSYOALBXLU
      PTWRYKYPYNOZXNJKZWRYQYLYGYRWRYQDAXNBUQURBXLUSZUNUTVAUAXMXOWSNVBVCVDWRXDVE
      ZXPGXDVFZXHUKWRYTULZXHGXDXMVGZGXDXOVGZOUUAUUBXEUUCXGUUDWRXDVHKZYTXEUUCOZF
      VIZYGWRUUEYTULZUUFDYGWRULZUUHUUFUUIUUHULQWSKZUUFUUIYFUUHUUJUUFUUIGWSXDVHV
      JYHVKUUIQAKZUUJEABVLVMVNUTVOVPUUBXGAGXDXNVGZLMZUUDUUBXFUULALWRUUEYTXFUULO
      UUGGBXDVHVQVPTUUBUUEYRGXDVFXDQVRZUUMUUDOUUEUUBUUGVSUUBYRGXDWRYTXLXDKZYRWR
      YKYRYTUUOULYSXDVTUUOYKYTXDXLWAXDWBUNVNWCWDYTUUNWRYTQXDKUUNXDWEXDQWFUFWGHI
      GAVHLXDXNIPZVHKZUUPVEZAUUPLMZHUUPAHPZLMZVGOZIVIYGUUQUURULZUVBDYGUVCULUUKU
      VBEHAUUPVHVJVMUDUDUUTJKZUUPJKZUUTUUPWHZUVAUUSWHZUVDUVEYGUVFUVGUKZDUVDUVEY
      GWIUUKUVHEUUTUUPAWJVMWKWLWMWNVAUAGXDXMXOWOVCVDWPWQ $.
      $( [26-May-2009] $)
  $}

  $( Product of exponents law for ordinal exponentiation.  Theorem 8S of
     [Enderton] p. 238.  Also Proposition 8.42 of [TakeutiZaring] p. 70.
     (Contributed by Eric Schmidt, 26-May-2009.) $)
  oeoe $p |- ( ( A e. On /\ B e. On /\ C e. On )
          -> ( ( A ^o B ) ^o C ) = ( A ^o ( B .o C ) ) ) $=
    ( con0 wcel coe co comu wceq wa c0 opreq1 opreq1d eqeq12d wo c1o opreq2 
    oe0m0 syl6eq oe1m sylan9eqr adantll 0elon oecl mpan oe0 syl adantlr jaodan 
    om00 biimpar opreq2d eqtr4d wn wne on0eln0 bi2anan9 neanior syl6bb oe0m1 
    biimpa sylan9eq an4s om00el wb omcl bitr3d ex sylbird imp pm2.61dan 
    syl5bir impcom wi cif imbi2d eleq1 eleq2 anbi12d 1on 0lt1o pm3.2i elimhyp 
    simpli simpri oeoelem dedth an32s oe0lem 3impb ) ADEZBDEZCDEZABFGZCFGZABCHG
    ZFGZIZWLWMJZWRAAKIZWSWRWTWRKBFGZCFGZKWPFGZIZWSWTWOXBWQXCWTWNXACFAKBFLMAKWPF
    LNWSBKIZCKIZOZXDWSXGJZXBPXCWSXEXBPIZXFWMXEXIWLXEWMXBPCFGPXEXAPCFXEXAKKFGZPB
    KKFQRSMCTUAUBWLXFXIWMXFWLXBXAKFGZPCKXAFQWLXADEZXKPIKDEWLXLUCKBUDUEXAUFUGUAU
    HUIXHXCXJPXHWPKKFWSWPKIXGBCUJUKULRSUMWSXGUNZXDWSXMKBEZKCEZJZXDWSXPBKUOZCKUO
    ZJXMWLXNXQWMXOXRBUPCUPUQBKCKURUSWSXPXDWSXPJXBKXCWLXNWMXOXBKIWLXNJZWMXOJXBKC
    FGZKXSXAKCFWLXNXAKIBUTVAMWMXOXTKICUTVAVBVCWSXPXCKIZWSKWPEZXPYABCVDWSWPDEYBY
    AVEBCVFWPUTUGVGVAUMVHVIVJVKVLVMWKKAEZWSWRWKYCJZWSWRYDWSWRVNWSYDAPVOZBFGZCFG
    ZYEWPFGZIZVNAPAYEIZWRYIWSYJWOYGWQYHYJWNYFCFAYEBFLMAYEWPFLNVPYEBCYEDEZKYEEZY
    DYKYLJPDEZKPEZJAPYJWKYKYCYLAYEDVQAYEKVRVSPYEIYMYKYNYLPYEDVQPYEKVRVSYMYNVTWA
    WBWCZWDYKYLYOWEWFWGVJWHWIWJ $.
    $( [26-May-2009] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                      Natural number arithmetic
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Addition with zero.  Theorem 4I(A1) of [Enderton] p. 79. $)
  nna0 $p |- ( A e. om -> ( A +o (/) ) = A ) $=
    ( com wcel con0 c0 coa co wceq nnon oa0 syl ) ABCADCAEFGAHAIAJK $.
    $( [20-Sep-1995] $)

  $( Multiplication with zero.  Theorem 4J(A1) of [Enderton] p. 80. $)
  nnm0 $p |- ( A e. om -> ( A .o (/) ) = (/) ) $=
    ( com wcel con0 c0 comu co wceq nnon om0 syl ) ABCADCAEFGEHAIAJK $.
    $( [20-Sep-1995] $)

  $( Addition with successor.  Theorem 4I(A2) of [Enderton] p. 79. $)
  nnasuc $p |- ( ( A e. om /\ B e. om ) ->
                ( A +o suc B ) = suc ( A +o B ) ) $=
    ( con0 wcel csuc coa co wceq com oasuc nnon syl2an ) ACDBCDABEFGABFGEHAIDBI
    DABJAKBKL $.
    $( [20-Sep-1995] $)

  $( Multiplication with successor.  Theorem 4J(A2) of [Enderton] p. 80. $)
  nnmsuc $p |- ( ( A e. om /\ B e. om ) ->
                ( A .o suc B ) = ( ( A .o B ) +o A ) ) $=
    ( con0 wcel csuc comu co coa wceq com omsuc nnon syl2an ) ACDBCDABEFGABFGAH
    GIAJDBJDABKALBLM $.
    $( [20-Sep-1995] $)

  $( Addition to zero.  Remark in proof of Theorem 4K(2) of [Enderton]
     p. 81. $)
  nna0r $p |- ( A e. om -> ( (/) +o A ) = A ) $=
    ( com wcel con0 c0 coa co wceq nnon oa0r syl ) ABCADCEAFGAHAIAJK $.
    $( [20-Sep-1995] $)

  $( Multiplication with zero.  Exercise 16 of [Enderton] p. 82. $)
  nnm0r $p |- ( A e. om -> ( (/) .o A ) = (/) ) $=
    ( com wcel con0 c0 comu co wceq nnon om0r syl ) ABCADCEAFGEHAIAJK $.
    $( [20-Sep-1995] $)

  ${
    $d x y A $.  $d x B $.
    $( Closure of addition of natural numbers.  Proposition 8.9 of
       [TakeutiZaring] p. 59.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    nnacl $p |- ( ( A e. om /\ B e. om ) -> ( A +o B ) e. om ) $=
      ( vx vy com wcel coa co cv wi wceq opreq2 eleq1d imbi2d c0 csuc nna0 
      ibir wa nnasuc peano2 syl5bir expcom finds2 vtoclga impcom ) BEFAEFZABGHZ
      EFZUGACIZGHZEFZJUGUIJCBEUJBKZULUIUGUMUKUHEUJBAGLMNULAOGHZEFZADIZGHZEFZAUP
      PZGHZEFZUGCDUJOKUKUNEUJOAGLMUJUPKUKUQEUJUPAGLMUJUSKUKUTEUJUSAGLMUGUOUGUNA
      EAQMRUGUPEFZURVAJUGVBSZVAUQPZEFURVCUTVDEAUPTMUQUAUBUCUDUEUF $.
      $( [22-Oct-2011] $) $( [20-Sep-1995] $)
  $}

  ${
    $d x y A $.  $d x B $.
    $( Closure of multiplication of natural numbers.  Proposition 8.17 of
       [TakeutiZaring] p. 63.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    nnmcl $p |- ( ( A e. om /\ B e. om ) -> ( A .o B ) e. om ) $=
      ( vx vy com wcel comu co cv wi wceq opreq2 eleq1d imbi2d c0 csuc nnm0 
      peano1 syl6eqel wa coa nnacl expcom adantr nnmsuc sylibrd finds2 vtoclga 
      impcom ) BEFAEFZABGHZEFZUJACIZGHZEFZJUJULJCBEUMBKZUOULUJUPUNUKEUMBAGLMNUO
      AOGHZEFADIZGHZEFZAURPZGHZEFZUJCDUMOKUNUQEUMOAGLMUMURKUNUSEUMURAGLMUMVAKUN
      VBEUMVAAGLMUJUQOEAQRSUJUREFZUTVCJUJVDTZUTUSAUAHZEFZVCUJUTVGJVDUTUJVGUSAUB
      UCUDVEVBVFEAURUEMUFUCUGUHUI $.
      $( [22-Oct-2011] $) $( [20-Sep-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Closure of exponentiation of natural numbers.  Proposition 8.17 of
       [TakeutiZaring] p. 63.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    nnecl $p |- ( ( A e. om /\ B e. om ) -> ( A ^o B ) e. om ) $=
      ( vy vx com wcel coe co cv wi wceq opreq2 eleq1d imbi2d c0 csuc c1o con0 
      nnon oe0 syl df-1o peano1 peano2 ax-mp eqeltri syl6eqel wa comu nnmcl 
      expcom adantr oesuc syl2an sylibrd finds2 vtoclga impcom ) BEFAEFZABGHZEF
      ZUSACIZGHZEFZJUSVAJCBEVBBKZVDVAUSVEVCUTEVBBAGLMNVDAOGHZEFADIZGHZEFZAVGPZG
      HZEFZUSCDVBOKVCVFEVBOAGLMVBVGKVCVHEVBVGAGLMVBVJKVCVKEVBVJAGLMUSVFQEUSARFZ
      VFQKASZATUAQOPZEUBOEFVOEFUCOUDUEUFUGUSVGEFZVIVLJUSVPUHZVIVHAUIHZEFZVLUSVI
      VSJVPVIUSVSVHAUJUKULVQVKVREVMVGRFVKVRKUSVPAVGUMVNVGSUNMUOUKUPUQUR $.
      $( [22-Oct-2011] $) $( [24-Mar-2007] $)
  $}

  $( Reverse closure law for addition of natural numbers.  Exercise 1 of
     [TakeutiZaring] p. 62 and its converse. $)
  nnarcl $p |- ( ( A e. On /\ B e. On ) ->
               ( ( A +o B ) e. om <-> ( A e. om /\ B e. om ) ) ) $=
    ( con0 wcel wa coa co com wss wi oaword1 word ordtr2 eloni ordom sylancl 
    exp3a adantr mpd oaword2 ancoms adantl jcad nnacl impbid1 ) ACDZBCDZEZABFGZ
    HDZAHDZBHDZEUHUJUKULUHAUIIZUJUKJZABKUFUMUNJUGUFUMUJUKALHLZUMUJEUKJUFAUIHMAN
    OPQRSUHBUIIZUJULJZUGUFUPBATUAUGUPUQJUFUGUPUJULBLUOUPUJEULJUGBUIHMBNOPQUBSUC
    ABUDUE $.
    $( [12-Dec-2004] $)

  ${
    $d x A $.  $d x y z B $.
    $( Addition of natural numbers is commutative.  Theorem 4K(2) of [Enderton]
       p. 81. $)
    nnacom $p |- ( ( A e. om /\ B e. om ) -> ( A +o B ) = ( B +o A ) ) $=
      ( vx vy vz com wcel coa co wceq cv wi c0 csuc opreq1 opreq2 eqeq12d 
      imbi2d nna0r nna0 eqtr4d wa suceq syl peano2b sylbi con0 oasuc nnon 
      suceloni syl2an anim12i 3syl syl5bir expcom a2d finds imp nnasuc ) AFGBFG
      ZABHIZBAHIZJZUTCKZBHIZBVDHIZJZLUTMBHIZBMHIZJZLUTDKZBHIZBVKHIZJZLUTVKNZBHI
      ZBVOHIZJZLUTVCLCDAVDMJZVGVJUTVSVEVHVFVIVDMBHOVDMBHPQRVDVKJZVGVNUTVTVEVLVF
      VMVDVKBHOVDVKBHPQRVDVOJZVGVRUTWAVEVPVFVQVDVOBHOVDVOBHPQRVDAJZVGVCUTWBVEVA
      VFVBVDABHOVDABHPQRUTVHBVIBSBTUAVKFGZUTVNVRUTWCVNVRLUTWCUBZVRVLNZVMNZJVNWD
      VPWEVQWFUTWCVPWEJZWCVOVDHIZVKVDHIZNZJZLWCVOMHIZVKMHIZNZJZLWCVOEKZHIZVKWPH
      IZNZJZLWCVOWPNZHIZVKXAHIZNZJZLWCWGLCEBVSWKWOWCVSWHWLWJWNVDMVOHPVSWIWMJWJW
      NJVDMVKHPWIWMUCUDQRVDWPJZWKWTWCXFWHWQWJWSVDWPVOHPXFWIWRJWJWSJVDWPVKHPWIWR
      UCUDQRVDXAJZWKXEWCXGWHXBWJXDVDXAVOHPXGWIXCJWJXDJVDXAVKHPWIXCUCUDQRVDBJZWK
      WGWCXHWHVPWJWEVDBVOHPXHWIVLJWJWEJVDBVKHPWIVLUCUDQRWCWLVOWNWCVOFGWLVOJVKUE
      VOTUFWCWMVKJWNVOJVKTWMVKUCUDUAWPFGZWCWTXEWCXIWTXELWCXIUBZXEWQNZWSNZJWTXJX
      BXKXDXLVOUGGZWPUGGZXBXKJWCXIVOWPUHWCVKUGGZXMVKUIZVKUJUDWPUIZUKXJXOXNUBXCW
      SJXDXLJWCXOXIXNXPXQULVKWPUHXCWSUCUMQWQWSUCUNUOUPUQURBVKUSQVLVMUCUNUOUPUQU
      R $.
      $( [6-May-1995] $)
  $}

  $( Ordering property of addition.  Proposition 8.4 of [TakeutiZaring] p. 58,
     limited to natural numbers. $)
  nnaordi $p |- ( ( B e. om /\ C e. om ) ->
               ( A e. B -> ( C +o A ) e. ( C +o B ) ) ) $=
    ( con0 wcel coa co wi com oaordi nnon syl2an ) BDECDEABECAFGCBFGEHBIECIEABC
    JBKCKL $.
    $( [3-Feb-1996] $)

  $( Ordering property of addition.  Proposition 8.4 of [TakeutiZaring] p. 58,
     limited to natural numbers, and its converse. $)
  nnaord $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
                 ( A e. B <-> ( C +o A ) e. ( C +o B ) ) ) $=
    ( con0 wcel coa co wb com oaord nnon syl3an ) ADEBDECDEABECAFGCBFGEHAIEBIEC
    IEABCJAKBKCKL $.
    $( [7-Mar-1996] $)

  $( Ordering property of addition of natural numbers. $)
  nnaordr $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
                 ( A e. B <-> ( A +o C ) e. ( B +o C ) ) ) $=
    ( com wcel w3a coa co nnaord wceq nnacom ancoms 3adant2 3adant1 eleq12d 
    bitrd ) ADEZBDEZCDEZFZABECAGHZCBGHZEACGHZBCGHZEABCITUAUCUBUDQSUAUCJZRSQUECA
    KLMRSUBUDJZQSRUFCBKLNOP $.
    $( [9-Nov-2002] $)

  $( Addition of natural numbers is associative.  (For brevity, this is just a
     special case of the proof for ordinals.  A direct proof would be about 1/3
     the size of the ordinal proof, since it would use finite induction and not
     require the limit ordinal case..)  Theorem 4K(1) of [Enderton] p. 81. $)
  nnaass $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
               ( ( A +o B ) +o C ) = ( A +o ( B +o C ) ) ) $=
    ( con0 wcel coa co wceq com oaass nnon syl3an ) ADEBDECDEABFGCFGABCFGFGHAIE
    BIECIEABCJAKBKCKL $.
    $( [20-Sep-1995] $)

  $( Distributive law for natural numbers.  (For brevity, this is just a
     special case of the proof for ordinals.  A direct proof would be about 1/4
     the size of the ordinal proof, since it would use finite induction and not
     require the limit ordinal case.)  Theorem 4K(3) of [Enderton] p. 81. $)
  nndi $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
               ( A .o ( B +o C ) ) = ( ( A .o B ) +o ( A .o C ) ) ) $=
    ( con0 wcel coa co comu wceq com odi nnon syl3an ) ADEBDECDEABCFGHGABHGACHG
    FGIAJEBJECJEABCKALBLCLM $.
    $( [20-Sep-1995] $)

  $( Multiplication of natural numbers is associative.  (For brevity, this is
     just a special case of the proof for ordinals.  A direct proof would be
     about 1/3 the size of the ordinal proof, since it would use finite
     induction and not require the limit ordinal case..)  Theorem 4K(4) of
     [Enderton] p. 81. $)
  nnmass $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
               ( ( A .o B ) .o C ) = ( A .o ( B .o C ) ) ) $=
    ( con0 wcel comu co wceq com omass nnon syl3an ) ADEBDECDEABFGCFGABCFGFGHAI
    EBIECIEABCJAKBKCKL $.
    $( [20-Sep-1995] $)

  ${
    $d x y A $.  $d x B $.
    $( Multiplication with successor.  Exercise 16 of [Enderton] p. 82.  (The
       proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    nnmsucr $p |- ( ( A e. om /\ B e. om ) ->
                  ( suc A .o B ) = ( ( A .o B ) +o B ) ) $=
      ( vx vy com wcel csuc comu co coa wceq cv wi opreq2 id opreq12d eqeq12d 
      imbi2d c0 nnm0 peano1 nnmcl mpan2 nna0 syl peano2 3eqtr4rd wa nnmsuc 
      peano2b sylanb opreq1d nnacom suceq nnasuc ancoms 3eqtr4d opreq2d nnaass 
      syl3an3b syl3an1 3expb anidms an42s eqtrd opreq1 syl5bir expcom finds2 
      vtoclga impcom ) BEFAEFZAGZBHIZABHIZBJIZKZVLVMCLZHIZAVRHIZVRJIZKZMVLVQMCB
      EVRBKZWBVQVLWCVSVNWAVPVRBVMHNWCVTVOVRBJVRBAHNWCOPQRWBVMSHIZASHIZSJIZKVMDL
      ZHIZAWGHIZWGJIZKZVMWGGZHIZAWLHIZWLJIZKZVLCDVRSKZVSWDWAWFVRSVMHNWQVTWEVRSJ
      VRSAHNWQOPQVRWGKZVSWHWAWJVRWGVMHNWRVTWIVRWGJVRWGAHNWROPQVRWLKZVSWMWAWOVRW
      LVMHNWSVTWNVRWLJVRWLAHNWSOPQVLWESWFWDATVLWEEFZWFWEKVLSEFWTUAASUBUCWEUDUEV
      LVMEFZWDSKAUFVMTUEUGVLWGEFZWKWPMVLXBUHZWPWHVMJIZWJVMJIZKWKXCWMXDWOXEXAXBW
      MXDKVLVMWGUIAUJZUKXCWOWIAJIZWLJIZXEXCWNXGWLJAWGUIULXCWIAWLJIZJIZWIWGVMJIZ
      JIZXHXEXCXIXKWIJXCAWGJIZGZWGAJIZGZXIXKXCXMXOKXNXPKAWGUMXMXOUNUEAWGUOXBVLX
      KXPKWGAUOUPUQURXCXHXJKZXCVLXBXQWIEFZVLXBXQXCXRVLWLEFXQXBWIAWLUSWGUJUTAWGU
      BZVAVBVCXCXEXLKZVLXBXBVLXTXCXBVLXTXRXBVLXTXCXRXBXAXTVLWIWGVMUSXFUTXSVAVBV
      DVCUQVEQWHWJVMJVFVGVHVIVJVK $.
      $( [22-Oct-2011] $) $( [21-Sep-1995] $)
  $}

  ${
    $d x A $.  $d x y B $.
    $( Multiplication of natural numbers is commutative.  Theorem 4K(5) of
       [Enderton] p. 81.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    nnmcom $p |- ( ( A e. om /\ B e. om ) -> ( A .o B ) = ( B .o A ) ) $=
      ( vx vy com wcel comu co wceq cv wi opreq1 opreq2 eqeq12d imbi2d c0 csuc 
      nnm0r nnm0 eqtr4d wa coa nnmsucr nnmsuc ancoms syl5bir ex finds2 vtoclga 
      imp ) AEFBEFZABGHZBAGHZIZUKCJZBGHZBUOGHZIZKUKUNKCAEUOAIZURUNUKUSUPULUQUMU
      OABGLUOABGMNOURPBGHZBPGHZIDJZBGHZBVBGHZIZVBQZBGHZBVFGHZIZUKCDUOPIUPUTUQVA
      UOPBGLUOPBGMNUOVBIUPVCUQVDUOVBBGLUOVBBGMNUOVFIUPVGUQVHUOVFBGLUOVFBGMNUKUT
      PVABRBSTVBEFZUKVEVIKVJUKUAZVIVCBUBHZVDBUBHZIVEVKVGVLVHVMVBBUCUKVJVHVMIBVB
      UDUENVCVDBUBLUFUGUHUIUJ $.
      $( [22-Oct-2011] $) $( [21-Sep-1995] $)
  $}

  $( Cancellation law for addition of natural numbers. $)
  nnacan $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
                   ( ( A +o B ) = ( A +o C ) <-> B = C ) ) $=
    ( con0 wcel coa co wceq wb com oacan nnon syl3an ) ADEBDECDEABFGACFGHBCHIAJ
    EBJECJEABCKALBLCLM $.
    $( [27-Oct-1995] $)

  $( Weak ordering property of addition. $)
  nnaword $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
                ( A C_ B <-> ( C +o A ) C_ ( C +o B ) ) ) $=
    ( con0 wcel wss coa co wb com oaword nnon syl3an ) ADEBDECDEABFCAGHCBGHFIAJ
    EBJECJEABCKALBLCLM $.
    $( [17-Sep-1995] $)

  $( Weak ordering property of addition. $)
  nnaword1 $p |- ( ( A e. om /\ B e. om ) -> A C_ ( A +o B ) ) $=
    ( con0 wcel coa co wss com oaword1 nnon syl2an ) ACDBCDAABEFGAHDBHDABIAJBJK
    $.
    $( [9-Nov-2002] $)

  $( Weak ordering property of addition. $)
  nnaword2 $p |- ( ( A e. om /\ B e. om ) -> A C_ ( B +o A ) ) $=
    ( com wcel wa coa co nnaword1 nnacom sseqtrd ) ACDBCDEAABFGBAFGABHABIJ $.
    $( [9-Nov-2002] $)

  $( Ordering property of multiplication.  Half of Proposition 8.19 of
     [TakeutiZaring] p. 63, limited to natural numbers. $)
  nnmordi $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
               ( ( A e. B /\ (/) e. C ) -> ( C .o A ) e. ( C .o B ) ) ) $=
    ( com wcel c0 wa comu co wi con0 omordi ex nnon syl2an com23 imp3a 3adant1 
    ) BDEZCDEZABEZFCEZGCAHICBHIEZJADESTGZUAUBUCUDUBUAUCBKEZCKEZUBUAUCJZJSTUEUFG
    UBUGABCLMBNCNOPQR $.
    $( [18-Sep-1995] $)

  $( Ordering property of multiplication.  Proposition 8.19 of [TakeutiZaring]
     p. 63, limited to natural numbers. $)
  nnmord $p |- ( ( A e. om /\ B e. om /\ C e. om ) ->
               ( ( A e. B /\ (/) e. C ) <-> ( C .o A ) e. ( C .o B ) ) ) $=
    ( con0 wcel c0 wa comu co wb com omord nnon syl3an ) ADEBDECDEABEFCEGCAHICB
    HIEJAKEBKECKEABCLAMBMCMN $.
    $( [22-Jan-1996] $)

  $( Cancellation law for multiplication of natural numbers. $)
  nnmcan $p |- ( ( ( A e. om /\ B e. om /\ C e. om ) /\ (/) e. A ) ->
                   ( ( A .o B ) = ( A .o C ) <-> B = C ) ) $=
    ( con0 wcel c0 comu co wceq wb com omcan nnon syl3anl ) ADEBDECDEFAEABGHACG
    HIBCIJAKEBKECKEABCLAMBMCMN $.
    $( [26-Oct-1995] $)

  ${
    $d x A $.  $d x B $.
    $( Equivalence for ordering.  Compare Exercise 23 of [Enderton] p. 88. $)
    nnaordex $p |- ( ( A e. om /\ B e. om ) -> ( A e. B <->
                  E. x e. om ( (/) e. x /\ ( A +o x ) = B ) ) ) $=
      ( con0 wcel com c0 cv coa co wceq wa wrex wb oaordex nnon sylan2 wi 
      eleq1 bicomd nnarcl sylan9bbr simpr syl6bi exp31 com23 adantld com24 
      imp4b a1i jcad anim1i impbid1 rexbidv2 bitrd sylan ) BDEZCFEZBCEZGAHZEZBU
      TIJZCKZLZAFMZNBFEZUQURLZUSVDADMZVEUQCDEUSVHNURABCOCPQVGVDVDADFVGUTDEZVDLZ
      UTFEZVDLVGVJVKVDUQURVIVDVKUQVDVIURVKUQVCVIURVKRZRVAUQVIVCVLUQVIVCVLUQVILZ
      VCLURVFVKLZVKVCURVBFEZVMVNVCVOURVBCFSTBUTUAUBVFVKUCUDUEUFUGUHUIVJVDRVGVIV
      DUCUJUKVKVIVDUTPULUMUNUOBPUP $.
      $( [5-Dec-1995] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Equivalence for weak ordering of natural numbers. $)
    nnawordex $p |- ( ( A e. om /\ B e. om ) -> ( A C_ B <->
                  E. x e. om ( A +o x ) = B ) ) $=
      ( con0 wcel com wss cv coa co wceq wrex wb wa oawordex nnon sylan2 wi 
      eleq1 bicomd nnarcl sylan9bbr simpr syl6bi exp31 com23 com24 imp4b a1i 
      jcad anim1i impbid1 rexbidv2 bitrd sylan ) BDEZCFEZBCGZBAHZIJZCKZAFLZMBFE
      ZUPUQNZURVAADLZVBUPCDEURVEMUQABCOCPQVDVAVAADFVDUSDEZVANZUSFEZVANVDVGVHVAU
      PUQVFVAVHUPVAVFUQVHUPVFVAUQVHRZUPVFVAVIUPVFNZVANUQVCVHNZVHVAUQUTFEZVJVKVA
      VLUQUTCFSTBUSUAUBVCVHUCUDUEUFUGUHVGVARVDVFVAUCUIUJVHVFVAUSPUKULUMUNBPUO 
      $.
      $( [8-Nov-2002] $)
  $}

  ${
    $d x y A $.  $d x B $.
    $( Lemma for ~ oaabs . $)
    oaabslem $p |- ( ( om e. On /\ A e. om ) -> ( A +o om ) = om ) $=
      ( vx com con0 wcel wa coa co wss cv ciun wlim wceq oalim nnon limom jctr 
      syl2an wral word ordelss ordom nnacl sylancr r19.21aiva iunss sylibr 
      adantr eqsstrd ancoms oaword2 sylan2 eqssd ) CDEZACEZFACGHZCUOUNUPCIUOUNF
      UPBCABJZGHZKZCADEZUNCLZFUPUSMUOUNBACDNAOZUNVAPQRUOUSCIZUNUOURCIZBCSVCUOVD
      BCCTURCEVDUOUQCEFCURUAUBAUQUCUDUEBCURCUFUGUHUIUJUNUTCUPIUOCAUKVBULUM $.
      $( [9-Dec-2004] $)

    $( Ordinal addition absorbs a natural number added to the left of a
       transfinite number.  Proposition 8.10 of [TakeutiZaring] p. 59. $)
    oaabs $p |- ( ( ( A e. om /\ B e. On ) /\ om C_ B ) -> ( A +o B ) = B ) $=
      ( vx vy com wcel con0 wss coa co wceq wi wa cvv ssexg ex word ordom 
      elong mpbiri syl6com imp cv csuc opreq2 id eqeq12d imbi2d oaabslem oasuc 
      nnon sylan suceq sylan9eq exp31 com12 ad2antrr a2d wlim wral ciun cdif 
      cun cuni oalim limom jctr syl2an ancoms limuni ax-mp syl6eq eqtr3d 
      adantl wn wb ordelon limord eloni ordtri1 mpan 3syl pm5.32da eldif 
      syl6bbr imbi1d impexp syl5bbr ralbidv2 iuneq2 uniiun syl6eqr syl6bi 
      adantlr adantr uneq12d visset jctl ssequn1 biimpi undif2 syl5eq iuneq1 
      syl iunxun syl5reqr an32s ad2ant2r unieqd uniun 3eqtr4d exp43 com23 
      bi2.04 ralbii r19.21v bitri syl5ib com4r impcom tfindsg mpdan com3r 
      imp31 ) AEFZBGFZEBHZABIJZBKZYFYGYEYIYFYGYEYILZYFYGMEGFZYJYFYGYKYGYFENFZYK
      YGYFYLEBGOPYLYKEQZRENSTUAUBYFYKYGYJYEACUCZIJZYNKZLZYEAEIJZEKZLYEADUCZIJZY
      TKZLZYEAYTUDZIJZUUDKZLYJCDBEYNEKZYPYSYEUUGYOYRYNEYNEAIUEUUGUFUGUHYNYTKZYP
      UUBYEUUHYOUUAYNYTYNYTAIUEUUHUFUGUHYNUUDKZYPUUFYEUUIYOUUEYNUUDYNUUDAIUEUUI
      UFUGUHYNBKZYPYIYEUUJYOYHYNBYNBAIUEUUJUFUGUHYKYEYSAUIZPYTGFZYKMEYTHZMYEUUB
      UUFUULYEUUBUUFLZLYKUUMYEUULUUNYEUULUUBUUFYEUULMUUBUUEUUAUDZUUDAGFZUULUUEU
      UOKYEAYTUJAUKZULUUAYTUMUNUOUPUQURYNUSZEYNHZYKUUMUUCLZDYNUTZYQLZYKUURUUSMZ
      UVBUVCUVAYEYKYPUVCYEUUMUUBLZDYNUTZLZYEYKYPLZLUVAUVCYEUVEUVGUVCUVEYEUVGUVC
      UVEYEYKYPUVCUVEMZYEYKMZMZDEUUAVAZDYNEVBZUUAVAZVCZEVDZUVLVDZVCZYOYNUVJUVKU
      VOUVMUVPUVIUVKUVOKUVHUVIYRUVKUVOUUPYKEUSZMYRUVKKYEYKDAEGVEUUQYKUVRVFVGVHU
      VIYREUVOYKYEYSUUKVIUVREUVOKVFEVJVKVLVMVNUVHUVMUVPKZUVIUURUVEUVSUUSUURUVEU
      VSUURUVEUUBDUVLUTZUVSUURUVDUUBDYNUVLUURYTYNFZUUMMZUUBLYTUVLFZUUBLUWAUVDLU
      URUWBUWCUUBUURUWBUWAYTEFVOZMUWCUURUWAUUMUWDUURUWAMUULYTQZUUMUWDVPZYNQUWAU
      ULUURYNYTVQYNVRULYTVSYMUWEUWFREYTVTWAWBWCYTYNEWDWEWFUWAUUMUUBWGWHWIUVTUVM
      DUVLYTVAUVPDUVLUUAYTWJDUVLWKWLWMUBWNWOWPUVCYEYOUVNKZUVEYKUURYEUUSUWGUURYE
      MUUSYODYNUUAVAZUVNYEUURYOUWHKZUUPYNNFZUURMUWIYEUURDAYNNVEUUQUURUWJCWQWRVH
      VIUUSDEUVLVCZUUAVAZUWHUVNUUSUWKYNKUWLUWHKUUSEYNVCZYNUWKUUSUWMYNKEYNWSWTEY
      NXAXBZDUWKYNUUAXCXDDEUVLUUAXEXFUNXGXHUVCYNUVQKUVEUVIUURUUSYNYNVDZUVQYNVJU
      USUWKVDUWOUVQUUSUWKYNUWNXIEUVLXJXFUNUQXKXLXMURUVAYEUVDLZDYNUTUVFUUTUWPDYN
      UUMYEUUBXNXOYEUVDDYNXPXQXRXSXTXGYAXGYBPYCYD $.
      $( [9-Dec-2004] $)
  $}

  $( One is a natural number. $)
  1onn $p |- 1o e. om $=
    ( c1o c0 csuc com df-1o wcel peano1 peano2 ax-mp eqeltri ) ABCZDEBDFKDFGBHI
    J $.
    $( [29-Oct-1995] $)

  $( The ordinal 2 is a natural number. $)
  2onn $p |- 2o e. om $=
    ( c2o c1o csuc com df-2o wcel 1onn peano2 ax-mp eqeltri ) ABCZDEBDFKDFGBHIJ
    $.
    $( [28-Sep-2004] $)

  ${
    $d x y z A $.
    $( A natural number is even iff its successor is odd. $)
    nneob $p |- ( A e. om ->
      ( E. x e. om A = ( 2o .o x ) <-> -. E. x e. om suc A = ( 2o .o x ) ) ) $=
      ( vy vz com wcel c2o cv comu co wceq wrex csuc wn opreq2 eqeq2d cbvrexv 
      wa con0 oneo nnon id syl3an 3com23 3expa nrexdv r19.23aiva sylbi wi c0 
      suceq eqeq1d rexbidv notbid eqeq1 imbi12d peano1 eqid 2on om0 ax-mp 
      syl6eq rcla4ev mp2an a1i c1o coa 1on oaass mp3an23 o1p1e2 opreq2i 
      syl6req oa1suc opreq1d suceloni syl 3eqtrd eqcomd ad2antrr opreq1 2onn 
      1onn nndi mp3an13 om1 sylan9eqr adantll eqtrd ex nnacl mpan2 adantl 
      jctild syl6 r19.23adva syl5ib con3d con1 syl9 finds impbid2 ) BEFBGAHZIJZ
      KZAELZBMZXDKZAELZNZXFBGCHZIJZKZCELXJXEXMACEXCXKKZXDXLBXCXKGIOZPQXMXJCEXKE
      FZXMRXHAEXPXMXCEFZXHNZXPXQXMXRXKSFXCSFXMXRXPXQXMXKXCBTXKUAXCUAXMUBUCUDUEU
      FUGUHXKMZXDKZAELZNZXKXDKZAELZUIUJMZXDKZAELZNZUJXDKZAELZUIDHZMZXDKZAELZNZY
      KXDKZAELZUIZYLMZXDKZAELZNZYNUIXJXFUICDBXKUJKZYBYHYDYJUUCYAYGUUCXTYFAEUUCX
      SYEXDXKUJUKULUMUNUUCYCYIAEXKUJXDUOUMUPXKYKKZYBYOYDYQUUDYAYNUUDXTYMAEUUDXS
      YLXDXKYKUKULUMUNUUDYCYPAEXKYKXDUOUMUPXKYLKZYBUUBYDYNUUEYAUUAUUEXTYTAEUUEX
      SYSXDXKYLUKULUMUNUUEYCYMAEXKYLXDUOUMUPXKBKZYBXJYDXFUUFYAXIUUFXTXHAEUUFXSX
      GXDXKBUKULUMUNUUFYCXEAEXKBXDUOUMUPYJYHUJEFUJUJKZYJUQUJURYIUUGAUJEXCUJKZXD
      UJUJUUHXDGUJIJZUJXCUJGIOGSFZUUIUJKUSGUTVAVBPVCVDVEYKEFZUUBYQNYRYNUUKYQUUA
      UUKYKXLKZCELUUAYQUUKUULUUACEUUKXPRZUULXKVFVGJZEFZYSGUUNIJZKZRUUAUUMUULUUQ
      UUOUUMUULUUQUUMUULRYSYKGVGJZUUPUUKYSUURKXPUULUUKUURYSUUKYKSFZUURYSKYKUAUU
      SUURYKVFVGJZVFVGJZYLVFVGJZYSUUSUVAYKVFVFVGJZVGJZUURUUSVFSFZUVEUVAUVDKVHVH
      YKVFVFVIVJUVCGYKVGVKVLVMUUSUUTYLVFVGYKVNVOUUSYLSFUVBYSKYKVPYLVNVQVRVQVSVT
      XPUULUURUUPKUUKUULXPUURXLGVGJZUUPYKXLGVGWAXPUUPXLGVFIJZVGJZUVFGEFXPVFEFZU
      UPUVHKWBWCGXKVFWDWEUVGGXLVGUUJUVGGKUSGWFVAVLVMWGWHWIWJXPUUOUUKXPUVIUUOWCX
      KVFWKWLWMWNYTUUQAUUNEXCUUNKXDUUPYSXCUUNGIOPVCWOWPYPUULACEXNXDXLYKXOPQWQWR
      YNYQWSWTXAXB $.
      $( [26-Jan-2006] $)
  $}

  ${
    $d x y z w v A $.  $d x y z w v F $.
    $( Lemma for ~ omsmo . $)
    omsmolem $p |- ( y e. om -> ( ( ( A C_ On /\ F : om --> A ) /\
        A. x e. om ( F ` x ) e. ( F ` suc x ) ) ->
       ( z e. y -> ( F ` z ) e. ( F ` y ) ) ) ) $=
      ( vw cv wcel cfv wi c0 csuc con0 wss com wf wa wral wceq eleq2 fveq2 
      eleq2d imbi12d noel pm2.21i a1i wo suceq fveq2d eleq12d rcla4cva adantll 
      ssel ffvelrn peano2b sylan2b syl5 ontr1 exp3a com23 syl6 imp31 adantlr 
      mpd imim2d imp eleq1d syl5cbir adantr jaod visset elsuc syl5ib exp31 
      com12 finds2 ) CGZBGZHZVQEIZVREIZHZJVQKHZVTKEIZHZJZVQFGZHZVTWGEIZHZJZVQWG
      LZHZVTWLEIZHZJZDMNZODEPZQZAGZEIZWTLZEIZHZAORZQZBFVRKSZVSWCWBWEVRKVQTXGWAW
      DVTVRKEUAUBUCVRWGSZVSWHWBWJVRWGVQTXHWAWIVTVRWGEUAUBUCVRWLSZVSWMWBWOVRWLVQ
      TXIWAWNVTVRWLEUAUBUCWFXFWCWEVQUDUEUFXFWGOHZWKWPJXFXJWKWPXFXJQZWKQZWHVQWGS
      ZUGWOWMXLWHWOXMXKWKWHWOJXKWJWOWHXKWIWNHZWJWOJZXEXJXNWSXDXNAWGOWTWGSZXAWIX
      CWNWTWGEUAXPXBWLEWTWGUHUIUJUKZULWSXJXNXOJZXEWQWRXJXRWQWRXJXRWQWRXJQZWNMHZ
      XRWQWNDHZXTXSDMWNUMWRWLOHYAXJODWLEUNWGUOUPUQXTWJXNWOXTWJXNWOVTWIWNURUSUTV
      AUSVBVCVDVEVFXKXMWOJZWKXEXJYBWSXMWOXNXEXJQXMVTWIWNVQWGEUAVGXQVHULVIVJVQWG
      CVKVLVMVNVOVP $.
      $( [30-Nov-2003] $)

    $( A strictly monotonic ordinal function on the set of natural numbers is
       one-to-one. $)
    omsmo $p |- ( ( ( A C_ On /\ F : om --> A ) /\
          A. x e. om ( F ` x ) e. ( F ` suc x ) ) -> F : om -1-1-> A ) $=
      ( vy vz com wf1 wf cv cfv wceq wi wral con0 wss wa csuc wcel dff13 
      simplr wo wn omsmolem adantl imp adantr orim12d ancoms con3d wb word 
      ssel ffvelrn syl5 expdimp eloni syl6 anim12d ordtri3 syl adantlr nnord 
      syl2an 3imtr4d exp32 r19.21adv r19.21aiv sylanbrc ) FBCGFBCHZDIZCJZEIZCJZ
      KZVJVLKZLZEFMZDFMBNOZVIPZAIZCJVTQCJRAFMZPZDEFBCSVRVIWATWBVQDFWBVJFRZVPEFW
      BWCVLFRZVPWBWCWDPZPZVKVMRZVMVKRZUAZUBZVJVLRZVLVJRZUAZUBZVNVOWFWMWIWEWBWMW
      ILWEWBPWKWGWLWHWEWBWKWGLZWDWBWOLWCAEDBCUCUDUEWEWBWLWHLZWCWBWPLWDADEBCUCUF
      UEUGUHUIVSWEVNWJUJZWAVSWEPVKUKZVMUKZPZWQVSWEWTVSWCWRWDWSVSWCVKNRZWRVRVIWC
      XAVRVKBRXAVIWCPBNVKULFBVJCUMUNUOVKUPUQVSWDVMNRZWSVRVIWDXBVRVMBRXBVIWDPBNV
      MULFBVLCUMUNUOVMUPUQURUEVKVMUSUTVAWEVOWNUJZWBVJUKVLUKXCWCWDVJVLUSVJVBVLVB
      VCUDVDVEVFVGVH $.
      $( [30-Nov-2003] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Equivalence relations and classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c Er $.  $( Equivalence predicate $)
  $c /. $.  $( Long slash for quotient set $)

  $( Extend the definition of a wff to include the equivalence predicate. $)
  wer $a wff Er R $.

  $( Extend the definition of a class to include equivalence class. $)
  cec $a class [ A ] R $.

  $( Extend the definition of a class to include quotient set. $)
  cqs $a class ( A /. R ) $.

  $( Define the equivalence predicate. ` R ` need not be a relation but
     ordinarily will be, in which case we call it an equivalence relation.  Our
     notation is not standard.  A formal notation doesn't seem to exist in the
     literature; instead only informal English tends to be used.  Some
     definitions in the literature may also require that ` R ` be a relation.
     The present definition, although somewhat cryptic, nicely avoids dummy
     variables.  In ~ dfer2 we derive a more typical definition.  We show that
     an equivalence relation is reflexive, symmetric, and transitive in
     ~ erref , ~ ersymb , and ~ ertr . $)
  df-er $a |- ( Er R <-> ( `' R u. ( R o. R ) ) C_ R ) $.

  ${
    $d x y z R $.
    $( Alternate definition of equivalence predicate. $)
    dfer2 $p |- ( Er R <-> A. x A. y A. z
              ( ( x R y -> y R x ) /\ ( ( x R y /\ y R z ) -> x R z ) ) ) $=
      ( wer ccnv ccom cun wss cv wbr wi wa wal df-er cnvsym cotr anbi12i unss 
      19.28v albii 19.26 bitri bitr2i 3bitr3i ) DEDFZDDGZHDIZAJZBJZDKZUJUIDKLZU
      KUJCJZDKMUIUMDKLZMCNZBNZANZDOUFDIZUGDIZMULBNZANZUNCNZBNZANZMZUHUQURVAUSVD
      ABDPABCDQRUFUGDSUQUTVCMZANVEUPVFAUPULVBMZBNVFUOVGBULUNCTUAULVBBUBUCUAUTVC
      AUBUDUEUC $.
      $( [3-Jan-1997] $)
  $}

  $( Define the ` R ` -coset of ` A ` .  Exercise 35 of [Enderton] p. 61.  This
     is called the equivalence class of ` A ` modulo ` R ` when ` R ` is an
     equivalence relation (i.e. when ` Er R ` ; see ~ dfer2 ).  In this case,
     ` A ` is a representative (member) of the equivalence class ` [ A ] R ` ,
     which contains all sets that are equivalent to ` A ` .  Definition of
     [Enderton] p. 57 uses the notation ` [ A ] ` (subscript) ` R ` , although
     we simply follow the brackets by ` R ` since we don't have subscripted
     expressions.  For an alternate definition, see ~ dfec2 . $)
  df-ec $a |- [ A ] R = ( R " { A } ) $.

  ${
    $d y A x $.  $d y R x $.
    ec2.1 $e |- A e. _V $.
    $( Alternate definition of ` R ` -coset of ` A ` .  Definition 34 of
       [Suppes] p. 81. $)
    dfec2 $p |- [ A ] R = { y | A R y } $=
      ( vx csn cima cv wcel cop wa wex cab cec wbr dfima3 df-ec wceq opeq1 
      eleq1d ceqsexv elsn anbi1i exbii df-br 3bitr4ri abbii 3eqtr4i ) CBFZGEHZU
      IIZUJAHZJZCIZKZELZAMBCNBULCOZAMEACUIPBCQUQUPAUJBRZUNKZELBULJZCIZUPUQUNVAE
      BDURUMUTCUJBULSTUAUOUSEUKURUNEBUBUCUDBULCUEUFUGUH $.
      $( [3-Jan-1997] $)
  $}

  $( An equivalence class modulo a set is a set. $)
  ecexg $p |- ( R e. B -> [ A ] R e. _V ) $=
    ( wcel csn cima cvv cec imaexg df-ec syl5eqel ) CBDCAEZFGACHCLBIACJK $.
    $( [24-Jul-1995] $)

  ${
    $d x y A $.  $d x y R $.
    $( Define quotient set. ` R ` is usually an equivalence relation.
       Definition of [Enderton] p. 58. $)
    df-qs $a |- ( A /. R ) = { y | E. x e. A y = [ x ] R } $.
  $}

  $( Equality theorem for equivalence predicate. $)
  ereq $p |- ( R = S -> ( Er R <-> Er S ) ) $=
    ( wceq ccnv ccom cun wss wer cnveq coeq1 coeq2 eqtrd uneq12d sseq1d sseq2 
    bitrd df-er 3bitr4g ) ABCZADZAAEZFZAGZBDZBBEZFZBGZAHBHSUCUFAGUGSUBUFASTUDUA
    UEABISUABAEUEABAJABBKLMNABUFOPAQBQR $.
    $( [4-Jun-1995] $)

  ${
    $d x y z R $.
    ster.1 $e |- ( x R y -> y R x ) $.
    ster.2 $e |- ( ( x R y /\ y R z ) -> x R z ) $.
    $( A symmetric, transitive relation is an equivalence relation. $)
    ster $p |- Er R $=
      ( wer cv wbr wi wa wal dfer2 pm3.2i gen2 mpgbir ) DGAHZBHZDIZRQDIJZSRCHZD
      IKQUADIJZKZCLBLAABCDMUCBCTUBEFNOP $.
      $( [4-Jun-1995] $)
  $}

  ${
    $d x y z $.
    $( The identity relation is an equivalence relation.  (The proof was
       shortened by Andrew Salmon, 22-Oct-2011.) $)
    ider $p |- Er _I $=
      ( cid wer ccnv ccom cun wss cnvi eqimssi wrel wceq reli coi1 ax-mp unssi 
      df-er mpbir ) ABACZAADZEAFQRAQAGHRAAIRAJKALMHNAOP $.
      $( [22-Oct-2011] $) $( [10-May-1998] $)
  $}

  ${
    $d y A $.  $d v x B $.  $d v w z R $.  $d v w x y z $.
    eqer.1 $e |- ( x = y -> A = B ) $.
    eqer.2 $e |- R = { <. x , y >. | A = B } $.
    $( Lemma for ~ eqer . $)
    eqerlem $p |- ( z R w <-> [_ z / x ]_ A = [_ w / x ]_ A ) $=
      ( vv cv wbr wceq wsbc csb brabsb cvv wcel wb visset sbceq1dig ax-mp 
      ax-17 csbief eqeq2i bitr4i sbbii sbceq2dig csbcog bitri 3bitri ) CKZDKZGL
      EFMZAULNZBUMNAULEOZABKZEOZMZBUMNZUPAUMEOZMZUNABCDGIPUOUSBDUOUPFMZUSULQRUO
      VCSCTAULEFQUAUBURFUPAJUQEFBTJKFRAUCHUDUEUFUGUTUPBUMUROZMZVBUMQRZUTVESDTZB
      UMUPURQUHUBVDVAUPVFVDVAMVGABUMEQUIUBUEUJUK $.
      $( [17-Mar-2008] $)

    $( Equivalence relation involving equality of dependent classes ` A ( x ) `
       and ` B ( y ) ` . $)
    eqer $p |- Er R $=
      ( vz vw vv cv csb wceq wbr id eqcomd eqerlem 3imtr4i wa eqtr anbi12i 
      ster ) HIJEAHKZCLZAIKZCLZMZUFUDMUCUEENZUEUCENUGUDUFUGOPABHICDEFGQZABIHCDE
      FGQRUGUFAJKZCLZMZSUDUKMUHUEUJENZSUCUJENUDUFUKTUHUGUMULUIABIJCDEFGQUAABHJC
      DEFGQRUB $.
      $( [17-Mar-2008] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    ersym.1 $e |- A e. _V $.
    ersym.2 $e |- B e. _V $.
    ersym.3 $e |- Er R $.
    $( An equivalence relation is symmetric. $)
    ersym $p |- ( A R B -> B R A ) $=
      ( vx vy vz cv wbr wi wceq wa breq12 wb ancoms imbi12d wal wer dfer2 mpbi 
      a4i simpli vtocl2 ) GJZHJZCKZUGUFCKZLZABCKZBACKZLGHABDEUFAMZUGBMZNUHUKUIU
      LUFAUGBCOUNUMUIULPUGBUFACOQRUJUHUGIJZCKNUFUOCKLZUJUPNZIUQISZHURHSZGCTUSGS
      FGHICUAUBUCUCUCUDUE $.
      $( [4-Jun-1995] $)
  $}

  ${
    ersymb.1 $e |- A e. _V $.
    ersymb.2 $e |- B e. _V $.
    ersymb.3 $e |- Er R $.
    $( An equivalence relation is symmetric. $)
    ersymb $p |- ( A R B <-> B R A ) $=
      ( wbr ersym impbii ) ABCGBACGABCDEFHBACEDFHI $.
      $( [30-Jul-1995] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.  $d x y z C $.
    ertr.1 $e |- A e. _V $.
    ertr.2 $e |- B e. _V $.
    ertr.3 $e |- C e. _V $.
    ertr.4 $e |- Er R $.
    $( An equivalence relation is transitive. $)
    ertr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
      ( vx vy vz cv wbr wa wi wceq breq1 anbi1d imbi12d breq2 anbi12d imbi1d 
      anbi2d syl3an9b wal wer dfer2 mpbi a4i simpri vtocl3 ) ILZJLZDMZUMKLZDMZN
      ZULUODMZOZABDMZBCDMZNZACDMZOZIJKABCEFGULAPZUSAUMDMZUPNZAUODMZOUMBPZUTBUOD
      MZNZVHOUOCPZVDVEUQVGURVHVEUNVFUPULAUMDQRULAUODQSVIVGVKVHVIVFUTUPVJUMBADTU
      MBUODQUAUBVLVKVBVHVCVLVJVAUTUOCBDTUCUOCADTSUDUNUMULDMOZUSVMUSNZKVNKUEZJVO
      JUEZIDUFVPIUEHIJKDUGUHUIUIUIUJUK $.
      $( [4-Jun-1995] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    erref.1 $e |- Er R $.
    $( An equivalence relation is reflexive on its field.  Compare Theorem 3M
       of [Enderton] p. 56. $)
    erref $p |- ( A e. ( dom R u. ran R ) -> A R A ) $=
      ( vx vy cv wbr cdm crn cun wceq breq1 breq2 bitrd wcel wo elun wex 
      visset eldm ertr ersymb sylan2b anidms 19.23aiv sylbi elrn sylanb jaoi 
      vtoclga ) DFZUKBGZAABGZDABHZBIZJZUKAKULAUKBGUMUKAUKBLUKAABMNUKUPOUKUNOZUK
      UOOZPULUKUNUOQUQULURUQUKEFZBGZERULEUKBDSZTUTULEUTULUTUSUKBGZULUTUKUSUKBVA
      ESZVACUAZUKUSBVAVCCUBUCUDUEUFURVBERULEUKBVAUGVBULEVBULUTVBULVBVDUSUKBVCVA
      CUBUHUDUEUFUIUFUJ $.
      $( [4-Jun-1995] $)
  $}

  ${
    $d x y R $.
    erdmrn.1 $e |- Er R $.
    $( The range and domain of an equivalence relation are equal. $)
    erdmrn $p |- dom R = ran R $=
      ( vx vy cdm crn cv wbr wex wcel visset ersymb exbii eldm elrn 3bitr4i 
      eqriv ) CAEZAFZCGZDGZAHZDIUATAHZDITRJTSJUBUCDTUAACKZDKBLMDTAUDNDTAUDOPQ 
      $.
      $( [6-Aug-1995] $)
  $}

  $( Equality theorem for equivalence class. $)
  eceq1 $p |- ( A = B -> [ C ] A = [ C ] B ) $=
    ( wceq csn cima cec imaeq1 df-ec 3eqtr4g ) ABDACEZFBKFCAGCBGABKHCAICBIJ $.
    $( [23-Jul-1995] $)

  $( Equality theorem for equivalence class. $)
  eceq2 $p |- ( A = B -> [ A ] C = [ B ] C ) $=
    ( wceq csn cima cec sneq imaeq2d df-ec 3eqtr4g ) ABDZCAEZFCBEZFACGBCGLMNCAB
    HIACJBCJK $.
    $( [23-Jul-1995] $)

  ${
    $d x A $.  $d x B $.  $d x R $.
    elec.1 $e |- A e. _V $.
    elec.2 $e |- B e. _V $.
    $( Membership in an equivalence class.  Theorem 72 of [Suppes] p. 82. $)
    elec $p |- ( A e. [ B ] R <-> B R A ) $=
      ( vx cv wbr cec breq2 dfec2 elab2 ) BFGZCHBACHFABCIDMABCJFBCEKL $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x R $.  $d x A $.
    ecdmn0.1 $e |- A e. _V $.
    $( A representative of a nonempty equivalence class belongs to the domain
       of the equivalence relation. $)
    ecdmn0 $p |- ( A e. dom R <-> [ A ] R =/= (/) ) $=
      ( vx cv cec wcel wex wbr c0 wne cdm visset elec exbii n0 eldm 3bitr4ri ) 
      DEZABFZGZDHASBIZDHTJKABLGUAUBDSABDMCNODTPDABCQR $.
      $( [28-Dec-2008] $) $( [15-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x R $.
    erthi.1 $e |- A e. _V $.
    erthi.2 $e |- B e. _V $.
    erthi.3 $e |- Er R $.
    $( Basic property of equivalence relations.  Part of Lemma 3N of [Enderton]
       p. 57. $)
    erthi $p |- ( A R B -> [ A ] R = [ B ] R ) $=
      ( vx wbr cec cv wcel wi ersymb visset ertr ex sylbi impbid elec 3bitr4g 
      eqrdv ) ABCHZGACIZBCIZUBAGJZCHZBUECHZUEUCKUEUDKUBUFUGUBBACHZUFUGLABCDEFMU
      HUFUGBAUECEDGNZFOPQUBUGUFABUECDEUIFOPRUEACUIDSUEBCUIESTUA $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x R $.
    erth.1 $e |- B e. _V $.
    erth.2 $e |- Er R $.
    $( Basic property of equivalence relations.  Theorem 73 of [Suppes]
       p. 82. $)
    erth $p |- ( A e. ( dom R u. ran R ) ->
                   ( [ A ] R = [ B ] R <-> A R B ) ) $=
      ( vx cv cec wceq wbr wb cdm crn cun eceq2 eqeq1d breq1 bibi12d wcel 
      eleq2 visset elec 3bitr3g ersym syl6bi erref syl5com erthi impbid1 
      vtoclga ) FGZCHZBCHZIZUKBCJZKACHZUMIZABCJZKFACLCMNZUKAIZUNUQUOURUTULUPUMU
      KACOPUKABCQRUKUSSZUNUOUNUKUKCJZUOVAUNVBBUKCJZUOUNUKULSUKUMSVBVCULUMUKTUKU
      KCFUAZVDUBUKBCVDDUBUCBUKCDVDEUDUEUKCEUFUGUKBCVDDEUHUIUJ $.
      $( [23-Jul-1995] $)
  $}

  ${
    erthdm.1 $e |- B e. _V $.
    erthdm.2 $e |- Er R $.
    $( Basic property of equivalence relations.  Compare Theorem 73 of [Suppes]
       p. 82.  Assumes membership in the domain instead of just the field. $)
    erthdm $p |- ( A e. dom R -> ( [ A ] R = [ B ] R <-> A R B ) ) $=
      ( cdm wcel crn cun cec wceq wbr wb elun1 erth syl ) ACFZGAQCHZIGACJBCJKAB
      CLMAQRNABCDEOP $.
      $( [28-Jul-1995] $)
  $}

  ${
    erthdmr.1 $e |- A e. _V $.
    erthdmr.2 $e |- B e. _V $.
    erthdmr.3 $e |- Er R $.
    $( Basic property of equivalence relations.  Compare Theorem 73 of [Suppes]
       p. 82.  Assumes membership of the second argument in the domain. $)
    erthdmr $p |- ( B e. dom R -> ( [ A ] R = [ B ] R <-> A R B ) ) $=
      ( cdm wcel cec wceq wbr erthdm eqcom ersymb 3bitr4g ) BCGHBCIZACIZJBACKQP
      JABCKBACDFLQPMABCDEFNO $.
      $( [30-Jul-1995] $)
  $}

  ${
    ereldm.1 $e |- A e. _V $.
    ereldm.2 $e |- B e. _V $.
    ereldm.3 $e |- Er R $.
    ereldm.4 $e |- dom R = D $.
    $( Equality of equivalence classes implies equivalence of domain
       membership. $)
    ereldm $p |- ( [ A ] R = [ B ] R -> ( A e. D <-> B e. D ) ) $=
      ( cec wceq cdm wcel wbr erthdm biimpcd ersymb breldm sylbi syl6 erthdmr 
      impbid eleq2i 3bitr3g ) ADIBDIJZADKZLZBUELZACLBCLUDUFUGUDUFABDMZUGUFUDUHA
      BDFGNOUHBADMUGABDEFGPBADFQRSUDUGUHUFUGUDUHABDEFGTOABDEQSUAUECAHUBUECBHUBU
      C $.
      $( [28-Jan-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x R $.
    erdisj.1 $e |- A e. _V $.
    erdisj.2 $e |- B e. _V $.
    erdisj.3 $e |- Er R $.
    $( Equivalence classes do not overlap.  In other words, two equivalence
       classes are either equal or disjoint.  Theorem 74 of [Suppes] p. 83. $)
    erdisj $p |- ( [ A ] R = [ B ] R \/ ( [ A ] R i^i [ B ] R ) = (/) ) $=
      ( vx cec wceq cin c0 wn cv wcel wi wal wbr visset elec ertr ex erthi 
      syl6 ersymb bitri syl5ib sylbi con3d com12 19.21aiv disj1 sylibr orri ) 
      ACHZBCHZIZUNUOJKIZUPLZGMZUNNZUSUONZLZOZGPUQURVCGUTURVBUTVAUPUTAUSCQZVAUPO
      USACGRZDSVDUSBCQZUPVAVDVFABCQZUPVDVFVGAUSBCDVEEFTUAABCDEFUBUCVABUSCQVFUSB
      CVEESBUSCEVEFUDUEUFUGUHUIUJGUNUOUKULUM $.
      $( [15-Jun-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x R $.
    erdisj2.1 $e |- A e. _V $.
    erdisj2.2 $e |- B e. _V $.
    $( Equivalence classes do not overlap.  (Contributed by FL, 1-Jun-2007.) $)
    erdisj2 $p |- ( Er R -> ( [ A ] R = [ B ] R \/
        ( [ A ] R i^i [ B ] R ) = (/) ) ) $=
      ( wer cec wceq cin c0 wo cid cif eceq1 eqeq12d ineq12d eqeq1d orbi12d 
      ereq ider elimhyp erdisj dedth ) CFZACGZBCGZHZUEUFIZJHZKAUDCLMZGZBUJGZHZU
      KULIZJHZKCLCUJHZUGUMUIUOUPUEUKUFULCUJANZCUJBNZOUPUHUNJUPUEUKUFULUQURPQRAB
      UJDEUDUJFLFCLCUJSLUJSTUAUBUC $.
      $( [1-Jun-2007] $)
  $}

  $( An equivalence class modulo the identity relation is a singleton. $)
  ecidsn $p |- [ A ] _I = { A } $=
    ( cid cec csn cima df-ec imai eqtri ) ABCBADZEIABFIGH $.
    $( [24-Oct-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Equality theorem for quotient set. $)
    qseq1 $p |- ( A = B -> ( A /. C ) = ( B /. C ) ) $=
      ( vy vx wceq cv cec wrex cab cqs rexeq abbidv df-qs 3eqtr4g ) ABFZDGEGCHF
      ZEAIZDJQEBIZDJACKBCKPRSDQEABLMEDACNEDBCNO $.
      $( [23-Jul-1995] $)

    $( Equality theorem for quotient set. $)
    qseq2 $p |- ( A = B -> ( C /. A ) = ( C /. B ) ) $=
      ( vy vx wceq cv cec wrex cab cqs eceq1 eqeq2d rexbidv abbidv df-qs 
      3eqtr4g ) ABFZDGZEGZAHZFZECIZDJSTBHZFZECIZDJCAKCBKRUCUFDRUBUEECRUAUDSABTL
      MNOEDCAPEDCBPQ $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    elqs.1 $e |- B e. _V $.
    $( Membership in a quotient set. $)
    elqs $p |- ( B e. ( A /. R ) <-> E. x e. A B = [ x ] R ) $=
      ( vy cv cec wceq wrex cqs eqeq1 rexbidv df-qs elab2 ) FGZAGDHZIZABJCQIZAB
      JFCBDKEPCIRSABPCQLMAFBDNO $.
      $( [12-Nov-2008] $) $( [23-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( Membership in a quotient set. $)
    elqsi $p |- ( B e. ( A /. R ) -> E. x e. A B = [ x ] R ) $=
      ( vy cv cec wceq wrex cqs eqeq1 rexbidv wcel visset elqs biimpi vtoclga 
      ) EFZAFDGZHZABIZCSHZABIECBDJZRCHTUBABRCSKLRUCMUAABRDENOPQ $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    ecelqsi.1 $e |- R e. _V $.
    $( Membership of an equivalence class in a quotient set. $)
    ecelqsi $p |- ( B e. A -> [ B ] R e. ( A /. R ) ) $=
      ( vy vx cv cec cqs wcel wceq eceq2 eleq1d wrex eqid eqeq2d rcla4ev mpan2 
      cvv ecexg ax-mp elqs sylibr vtoclga ) EGZCHZACIZJZBCHZUGJEBAUEBKUFUIUGUEB
      CLMUEAJZUFFGZCHZKZFANZUHUJUFUFKZUNUFOUMUOFUEAUKUEKULUFUFUKUECLPQRFAUFCCSJ
      UFSJDUESCTUAUBUCUD $.
      $( [25-Jul-1995] $)
  $}

  ${
    ecopqsi.1 $e |- R e. _V $.
    ecopqsi.2 $e |- S = ( ( A X. A ) /. R ) $.
    $( "Closure" law for equivalence class of ordered pairs. $)
    ecopqsi $p |- ( ( B e. A /\ C e. A ) -> [ <. B , C >. ] R e. S ) $=
      ( wcel wa cop cxp cec opelxpi cqs ecelqsi syl6eleqr syl ) BAHCAHIBCJZAAKZ
      HZRDLZEHBCAAMTUASDNESRDFOGPQ $.
      $( [25-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( A quotient set exists.  (Contributed by FL, 19-May-2007.) $)
    qsexg $p |- ( A e. _V -> ( A /. R ) e. _V ) $=
      ( vx vy cvv wcel cv cec wceq wa copab crn cqs opabex2g rnexg wrex cab 
      wex df-rex abbii df-qs rnopab 3eqtr4ri eleq1i biimpi 3syl ) AEFCGZAFDGUGB
      HZIZJZCDKZEFUKLZEFZABMZEFZCDAUHENUKEOUMUOULUNEUICAPZDQUJCRZDQUNULUPUQDUIC
      ASTCDABUAUJCDUBUCUDUEUF $.
      $( [23-Apr-2007] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    qsex.1 $e |- A e. _V $.
    $( A quotient set exists. $)
    qsex $p |- ( A /. R ) e. _V $=
      ( cvv wcel cqs qsexg ax-mp ) ADEABFDECABGH $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.
    uniqs.1 $e |- R e. _V $.
    $( The union of a quotient set. $)
    uniqs $p |- U. ( A /. R ) = ( R " A ) $=
      ( vx vy vz cqs cuni cima cv wcel wa wex cec wceq wrex eluni visset elqs 
      anbi1i ancom r19.41v 3bitr4i exbii wbr elima cvv ecexg ax-mp eleq2 
      ceqsexv elec bitri rexbii rexcom4 3bitr2ri 3bitri eqriv ) DABGZHZBAIZDJZU
      TKVBEJZKZVCUSKZLZEMVCFJZBNZOZVDLZFAPZEMZVBVAKZEVBUSQVFVKEVEVDLVIFAPZVDLVF
      VKVEVNVDFAVCBERSTVDVEUAVIVDFAUBUCUDVMVGVBBUEZFAPVJEMZFAPVLFVBBADRZUFVPVOF
      AVPVBVHKZVOVDVREVHBUGKVHUGKCVGUGBUHUIVCVHVBUJUKVBVGBVQFRULUMUNVJFEAUOUPUQ
      UR $.
      $( [9-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    snec.1 $e |- A e. _V $.
    $( The singleton of an equivalence class. $)
    snec $p |- { [ A ] R } = ( { A } /. R ) $=
      ( vy vx cv cec wceq cab csn wrex cqs wcel wa wex df-rex elsn anbi1i 
      exbii eceq2 eqeq2d ceqsexv 3bitrri abbii df-sn df-qs 3eqtr4i ) DFZABGZHZD
      IUHEFZBGZHZEAJZKZDIUIJUNBLUJUODUOUKUNMZUMNZEOUKAHZUMNZEOUJUMEUNPUQUSEUPUR
      UMEAQRSUMUJEACURULUIUHUKABTUAUBUCUDDUIUEEDUNBUFUG $.
      $( [29-Jan-1999] $)
  $}

  ${
    ecqs.1 $e |- R e. _V $.
    $( Equivalence class in terms of quotient set. $)
    ecqs $p |- [ A ] R = U. ( { A } /. R ) $=
      ( cec csn cima cqs cuni df-ec uniqs eqtr4i ) ABDBAEZFLBGHABILBCJK $.
      $( [15-Jan-2009] $) $( [29-Jan-1999] $)
  $}

  ${
    $d x R $.  $d x A $.
    0nelqs.1 $e |- dom R = A $.
    $( A quotient set doesn't contain the empty set. $)
    0nelqs $p |- -. (/) e. ( A /. R ) $=
      ( vx c0 cqs wcel cv cec wceq wrex wn cdm wne visset ecdmn0 necom bitri 
      eleq2i df-ne 3bitr3i biimpi nrex elqsi mto ) EABFGEDHZBIZJZDAKUHDAUFAGZUH
      LZUFBMZGZEUGNZUIUJULUGENUMUFBDOPUGEQRUKAUFCSEUGTUAUBUCDAEBUDUE $.
      $( [21-Mar-2007] $) $( [24-Aug-1995] $)
  $}

  ${
    ecelqsdm.1 $e |- B e. _V $.
    ecelqsdm.2 $e |- dom R = A $.
    $( Membership of an equivalence class in a quotient set. $)
    ecelqsdm $p |- ( [ B ] R e. ( A /. R ) -> B e. A ) $=
      ( wcel cec cqs wn c0 0nelqs wceq wb wne cdm ecdmn0 eleq2i bitr3i 
      necon1bbii eleq1 sylbi mtbiri con4i ) BAFZBCGZACHZFZUDIZUGJUFFZACEKUHUEJL
      UGUIMUDUEJUEJNBCOZFUDBCDPUJABEQRSUEJUFTUAUBUC $.
      $( [21-Mar-2007] $) $( [30-Jul-1995] $)
  $}

  ${
    $d y A $.
    ecid.1 $e |- A e. _V $.
    $( A set is equal to its converse epsilon coset.  (Note: converse epsilon
       is not an equivalence relation.) $)
    ecid $p |- [ A ] `' _E = A $=
      ( vy cep ccnv cec cv wbr cab wcel dfec2 visset brcnv epelc bitri abbii 
      abid2 3eqtri ) ADEZFACGZSHZCITAJZCIACASBKUAUBCUATADHUBATDBCLZMTAUCBNOPCAQ
      R $.
      $( [13-Aug-1995] $)
  $}

  ${
    $d x y A $.
    $( A set is equal to its quotient set mod converse epsilon.  (Note:
       converse epsilon is not an equivalence relation.) $)
    qsid $p |- ( A /. `' _E ) = A $=
      ( vy vx cep ccnv cqs cv cec wceq wrex cab wcel df-qs visset ecid eqeq2i 
      eqcom bitri rexbii risset bitr4i abbii abid2 3eqtri ) ADEZFBGZCGZUEHZIZCA
      JZBKUFALZBKACBAUEMUJUKBUJUGUFIZCAJUKUIULCAUIUFUGIULUHUGUFUGCNOPUFUGQRSCUF
      ATUAUBBAUCUD $.
      $( [21-Mar-2007] $) $( [13-Aug-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x R $.  $d x ps $.
    ectocl.1 $e |- S = ( B /. R ) $.
    ectocl.2 $e |- ( [ x ] R = A -> ( ph <-> ps ) ) $.
    ectocl.3 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of class for equivalence class. $)
    ectocl $p |- ( A e. S -> ps ) $=
      ( wcel cqs eleq2i cv cec wceq wrex elqsi wb eqcoms syl5cbi r19.23aiv syl 
      sylbi ) DGKDEFLZKZBGUEDHMUFDCNZFOZPZCEQBCEDFRUIBCEUIABUGEKABSUHDITJUAUBUC
      UD $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.  $d x y z ps $.
    ecoptocl.1 $e |- S = ( ( B X. C ) /. R ) $.
    ecoptocl.2 $e |- ( [ <. x , y >. ] R = A -> ( ph <-> ps ) ) $.
    ecoptocl.3 $e |- ( ( x e. B /\ y e. C ) -> ph ) $.
    $( Implicit substitution of class for equivalence class of ordered pair. $)
    ecoptocl $p |- ( A e. S -> ps ) $=
      ( vz wcel cxp cqs eleq2i cv cec wceq wrex elqsi cop wi eqid eceq2 eqeq2d 
      imbi1d wa wb eqcoms syl5cbi optocl r19.23aiv syl sylbi ) EINEFGOZHPZNZBIU
      REJQUSEMRZHSZTZMUQUABMUQEHUBVBBMUQECRZDRZUCZHSZTZBUDVBBUDCDUTFGUQUQUEVEUT
      TZVGVBBVHVFVAEVEUTHUFUGUHVGABVCFNVDGNUIABUJVFEKUKLULUMUNUOUP $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.  $d x y z w D $.  $d z w S $.
    $d x y z w R $.  $d x y ps $.  $d z w ch $.
    2ecoptocl.1 $e |- S = ( ( C X. D ) /. R ) $.
    2ecoptocl.2 $e |- ( [ <. x , y >. ] R = A -> ( ph <-> ps ) ) $.
    2ecoptocl.3 $e |- ( [ <. z , w >. ] R = B -> ( ps <-> ch ) ) $.
    2ecoptocl.4 $e |- ( ( ( x e. C /\ y e. D ) /\
                      ( z e. C /\ w e. D ) ) -> ph ) $.
    $( Implicit substitution of classes for equivalence classes of ordered
       pairs. $)
    2ecoptocl $p |- ( ( A e. S /\ B e. S ) -> ch ) $=
      ( wcel wi cv cop cec wceq imbi2d wa ex ecoptocl com12 impcom ) IMRHMRZCUJ
      BSUJCSFGIJKLMNFTZGTZUALUBIUCBCUJPUDUJUKJRULKRUEZBUMASUMBSDEHJKLMNDTZETZUA
      LUBHUCABUMOUDUNJRUOKRUEUMAQUFUGUHUGUI $.
      $( [23-Jul-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d z w v u B $.  $d v u C $.  $d x y z w v u D $.
    $d z w v u S $.  $d x y z w v u R $.  $d x y ps $.  $d z w ch $.
    $d v u th $.
    3ecoptocl.1 $e |- S = ( ( D X. D ) /. R ) $.
    3ecoptocl.2 $e |- ( [ <. x , y >. ] R = A -> ( ph <-> ps ) ) $.
    3ecoptocl.3 $e |- ( [ <. z , w >. ] R = B -> ( ps <-> ch ) ) $.
    3ecoptocl.4 $e |- ( [ <. v , u >. ] R = C -> ( ch <-> th ) ) $.
    3ecoptocl.5 $e |- ( ( ( x e. D /\ y e. D ) /\
                      ( z e. D /\ w e. D ) /\ ( v e. D /\ u e. D ) ) -> ph ) $.
    $( Implicit substitution of classes for equivalence classes of ordered
       pairs. $)
    3ecoptocl $p |- ( ( A e. S /\ B e. S /\ C e. S ) -> th ) $=
      ( wcel wa wi cv cop cec wceq imbi2d 3expib ecoptocl com12 2ecoptocl 
      3impib ) KPUBZLPUBZMPUBZDUPUQUCUODUOBUDUOCUDUODUDGHIJLMNNOPQGUEZHUEZUFOUG
      LUHBCUOSUIIUEZJUEZUFOUGMUHCDUOTUIUOURNUBUSNUBUCZUTNUBVANUBUCZUCZBVDAUDVDB
      UDEFKNNOPQEUEZFUEZUFOUGKUHABVDRUIVENUBVFNUBUCVBVCAUAUJUKULUMULUN $.
      $( [9-Aug-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u S $.  $d x y H $.  $d z w v u G $.
    $d x y ph $.  $d z w v u ps $.
    brecop.1 $e |- S e. _V $.
    brecop.2 $e |- Er S $.
    brecop.3 $e |- dom S = ( G X. G ) $.
    brecop.4 $e |- H = ( ( G X. G ) /. S ) $.
    brecop.5 $e |- R = { <. x , y >. | ( ( x e. H /\ y e. H ) /\
                      E. z E. w E. v E. u ( ( x = [ <. z , w >. ] S /\
                      y = [ <. v , u >. ] S ) /\ ph ) ) } $.
    brecop.6 $e |- ( ( ( ( z e. G /\ w e. G ) /\ ( A e. G /\ B e. G ) ) /\
                       ( ( v e. G /\ u e. G ) /\ ( C e. G /\ D e. G ) ) ) ->
                     ( ( [ <. z , w >. ] S = [ <. A , B >. ] S /\
                         [ <. v , u >. ] S = [ <. C , D >. ] S ) ->
                     ( ph <-> ps ) ) ) $.
    $( Binary relation on a quotient set.  Lemma for real number
       construction. $)
    brecop $p |- ( ( ( A e. G /\ B e. G ) /\ ( C e. G /\ D e. G ) ) ->
                ( [ <. A , B >. ] S R [ <. C , D >. ] S <-> ps ) ) $=
      ( wcel wa cop cec wbr cv wceq wex wb copab eleq1 anbi1d eqeq1 4exbidv 
      anbi12d anbi2d opelopabg bianabs df-br eleq2i bitri syl5bb ecopqsi 
      syl2an wi opeq12 eceq2 syl anim12i cxp opex ereldm visset opelxp syl5bbr 
      opelxpi syl5bir im2anan9 an4s ex com13 mpdd pm5.74d cgsex4g eqcom 
      anbi12i a1i biimt 3bitr4d bitrd ) IOUCJOUCUDZKOUCLOUCUDZUDZIJUEZNUFZKLUEZ
      NUFZMUGZWQEUHZFUHZUEZNUFZUIZWSGUHZHUHZUEZNUFZUIZUDZAUDZHUJGUJFUJEUJZBWQPU
      CZWSPUCZWTXMUKWMWNXNXOUDZWQWSUEZCUHZPUCZDUHZPUCZUDZXRXDUIZXTXIUIZUDZAUDZH
      UJGUJFUJEUJZUDZCDULZUCZXMWTXPYJXMYHXNYAUDZXEYDUDZAUDZHUJGUJFUJEUJZUDXPXMU
      DCDWQWSPPXRWQUIZYBYKYGYNYOXSXNYAXRWQPUMUNYOYFYMEFGHYOYEYLAYOYCXEYDXRWQXDU
      OUNUNUPUQXTWSUIZYKXPYNXMYPYAXOXNXTWSPUMURYPYMXLEFGHYPYLXKAYPYDXJXEXTWSXIU
      OURUNUPUQUSUTWTXQMUCYJWQWSMVAMYIXQUAVBVCVDOIJNPQTVEOKLNPQTVEVFWOXDWQUIZXI
      WSUIZUDZWOAVGZUDZHUJGUJFUJEUJWOBVGZXMBYTUUBYSEFGHIJKLOOXAIUIXBJUIUDZYQXFK
      UIXGLUIUDZYRUUCXCWPUIYQXAXBIJVHXCWPNVIVJUUDXHWRUIYRXFXGKLVHXHWRNVIVJVKYSW
      OABYSWOXAOUCXBOUCUDZXFOUCXGOUCUDZUDZABUKZYQWMUUEYRWNUUFYQUUEWPOOVLZUCZWMY
      QXCUUIUCUUJUUEXCWPUUINXAXBVMIJVMRSVNXAXBOOFVOVPVQIJOOVRVSYRUUFWRUUIUCZWNY
      RXHUUIUCUUKUUFXHWRUUINXFXGVMKLVMRSVNXFXGOOHVOVPVQKLOOVRVSVTUUGWOYSUUHUUGW
      OYSUUHVGZUUEWMUUFWNUULUBWAWBWCWDWEWFWOXLUUAEFGHWOXKYSAYTXKYSUKWOXEYQXJYRW
      QXDWGWSXIWGWHWIWOAWJUQUPWOBWJWKWL $.
      $( [29-Jan-1996] $)
  $}

  ${
    brecop2.1 $e |- S e. _V $.
    brecop2.2 $e |- B e. _V $.
    brecop2.3 $e |- C e. _V $.
    brecop2.4 $e |- D e. _V $.
    brecop2.5 $e |- dom S = ( G X. G ) $.
    brecop2.6 $e |- H = ( ( G X. G ) /. S ) $.
    brecop2.7 $e |- R C_ ( H X. H ) $.
    brecop2.8 $e |- Q C_ ( G X. G ) $.
    brecop2.9 $e |- -. (/) e. G $.
    brecop2.10 $e |- dom F = ( G X. G ) $.
    brecop2.11 $e |- ( ( ( A e. G /\ B e. G ) /\ ( C e. G /\ D e. G ) ) ->
                    ( [ <. A , B >. ] S R [ <. C , D >. ] S <->
                    ( A F D ) Q ( B F C ) ) ) $.
    $( Binary relation on a quotient set.  Lemma for real number construction.
       Eliminates antecedent from last hypothesis. $)
    brecop2 $p |- ( [ <. A , B >. ] S R [ <. C , D >. ] S <->
                    ( A F D ) Q ( B F C ) ) $=
      ( cop cec wbr wcel wa co cvv ecexg ax-mp brel cxp cqs eleq2i opex 
      ecelqsdm sylbi opelxp sylib anim12i syl oprex ndmoprrcl an42 pm5.21nii ) 
      ABUBZGUCZCDUBZGUCZFUDZAIUEZBIUEZUFZCIUEZDIUEZUFZUFZADHUGZBCHUGZEUDZVJVGJU
      EZVIJUEZUFVQVGVIJJFGUHUEVIUHUEKVHUHGUIUJQUKWAVMWBVPWAVFIIULZUEZVMWAVGWCGU
      MZUEWDJWEVGPUNWCVFGABUOOUPUQABIILURUSWBVHWCUEZVPWBVIWEUEWFJWEVIPUNWCVHGCD
      UOOUPUQCDIINURUSUTVAVTVKVOUFZVLVNUFZUFZVQVTVRIUEZVSIUEZUFWIVRVSIIEBCHVBRU
      KWJWGWKWHADIHNTSVCBCIHMTSVCUTVAVKVOVLVNVDUSUAVE $.
      $( [21-Mar-2007] $) $( [13-Feb-1996] $)
  $}

  ${
    $d f g h t s r A $.  $d f g h t s r B $.  $d f g h t s r C $.
    $d f g h t s r D $.  $d x y z w v u f g h t s r F $.  $d f g h t s r R $.
    $d x y z w v u f g h t s r S $.
    ecopopr.1 $e |- R = { <. x , y >. | ( ( x e. ( S X. S ) /\ y e. ( S X. S )
          ) /\ E. z E. w E. v E. u ( ( x = <. z , w >. /\ y = <. v , u >. ) /\
          ( z F u ) = ( w F v ) ) ) } $.
    ${
      $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
      $d x y z w v u D $.
      $( This is the first of several theorems about equivalence relations of
         the kind used in construction of fractions and signed reals, involving
         operations on equivalent classes of ordered pairs.  This theorem
         expresses the relation ` R ` (specified by the hypothesis) in terms of
         its operation ` F ` . $)
      ecopopreq $p |- ( ( ( A e. S /\ B e. S ) /\
                     ( C e. S /\ D e. S ) ) ->
          ( <. A , B >. R <. C , D >. <-> ( A F D ) = ( B F C ) ) ) $=
        ( cv co wceq wb wa opreq12 eqeqan12d an42s opbrop ) COZFOZMPZDOZEOZMPZQ
        ZGJMPZHIMPZQZABCDEFGHIJKLUDGQZUEJQZUGHQZUHIQZUJUMRUNUOSUPUQSUFUKUIULUDG
        UEJMTUGHUHIMTUAUBNUC $.
        $( [16-Aug-1995] $)
    $}

    ${
      ecopopr.com $e |- ( x F y ) = ( y F x ) $.
      $( Assuming the operation ` F ` is commutative, compute the domain the
         relation ` R ` specified by the first hypothesis. $)
      ecopoprdm $p |- dom R = ( S X. S ) $=
        ( vf vg cdm cxp wss cv wcel wa cop wceq co wex copab opabssxp eqsstri 
        dmss ax-mp dmxpid sseqtri relxp visset opelxp wbr caoprcom wb 
        ecopopreq anidms mpbiri df-br sylib opex opeldm syl sylbi relssi eqssi 
        ) GNZHHOZVHVIVIOZNZVIGVJPVHVKPGAQZVIRBQZVIRSVLCQZDQZTUAVMEQZFQZTUASVNVQ
        IUBVOVPIUBUASFUCEUCDUCCUCZSABUDVJJVRABVIVIUEUFGVJUGUHVIUIUJLMVIVHHHUKLQ
        ZMQZTZVIRVSHRVTHRSZWAVHRZVSVTHHMULZUMWBWAWATGRZWCWBWAWAGUNZWEWBWFVSVTIU
        BVTVSIUBUAZABVSVTILULWDKUOWBWFWGUPABCDEFVSVTVSVTGHIJUQURUSWAWAGUTVAWAWA
        GVSVTVBVCVDVEVFVG $.
        $( [27-Aug-1995] $)

      ${
        ecopopr.2 $e |- B e. _V $.
        $( Assuming the operation ` F ` is commutative, show that the relation
           ` R ` , specified by the first hypothesis, is symmetric. $)
        ecopoprsym $p |- ( A R B -> B R A ) $=
          ( vf vg vh vt wbr cxp wcel wa wb cv cop wceq co wex copab opabssxp 
          eqsstri brel eqid breq1 breq2 bibi12d ecopopreq visset caoprcom 
          eqeq12i eqcom bitri syl6bb ancoms bitr4d 2optocl syl ibi ) GHISZHGISZ
          VIGJJTZUAHVKUAUBVIVJUCZGHVKVKINIAUDZVKUABUDZVKUAUBVMCUDZDUDZUEUFVNEUD
          ZFUDZUEUFUBVOVRKUGVPVQKUGUFUBFUHEUHDUHCUHZUBABUIVKVKTLVSABVKVKUJUKULO
          UDZPUDZUEZQUDZRUDZUEZISZWEWBISZUCGWEISZWEGISZUCVLOPQRGHJJVKVKUMWBGUFW
          FWHWGWIWBGWEIUNWBGWEIUOUPWEHUFWHVIWIVJWEHGIUOWEHGIUNUPVTJUAWAJUAUBZWC
          JUAWDJUAUBZUBZWFWCWAKUGZWDVTKUGZUFZWGWLWFVTWDKUGZWAWCKUGZUFZWOABCDEFV
          TWAWCWDIJKLUQWRWNWMUFWOWPWNWQWMABVTWDKOURRURMUSABWAWCKPURQURMUSUTWNWM
          VAVBVCWKWJWGWOUCABCDEFWCWDVTWAIJKLUQVDVEVFVGVH $.
          $( [27-Aug-1995] $)
      $}

      ${
        $( Assume the operation is closed. $)
        ecopopr.cl $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
        $( Assume the operation is associative. $)
        ecopopr.ass $e |- ( ( x F y ) F z ) = ( x F ( y F z ) ) $.
        $( Assume the operation has the cancellation property. $)
        ecopopr.can $e |- ( ( x e. S /\ y e. S ) ->
                   ( ( x F y ) = ( x F z ) -> y = z ) ) $.
        ${
          ecopopr.3 $e |- B e. _V $.
          ecopopr.4 $e |- C e. _V $.
          $( Assuming that operation ` F ` is commutative (second hypothesis),
             closed (third hypothesis), associative (fourth hypothesis), and
             has the cancellation property (fifth hypothesis), show that the
             relation ` R ` , specified by the first hypothesis, is
             transitive. $)
          ecopoprtrn $p |- ( ( A R B /\ B R C ) -> A R C ) $=
            ( vf vg vh vt vs vr cxp wcel w3a wbr wa cv cop wceq co wex copab 
            opabssxp eqsstri brel simpld anim12i 3anass sylibr wi eqid breq1 
            anbi1d imbi12d breq2 anbi12d imbi1d anbi2d wb ecopopreq 3adant3 
            3adant1 opreq12 visset caopr411 caopr4 eqtr3i 3eqtr4g syl6bi oprex 
            caoprcan caoprcl syl2an 3impb 3com12 3adant3l 3adant1r syld 
            3adant2 sylibrd 3optocl mpcom ) GKKUFZUGZHWQUGZIWQUGZUHZGHJUIZHIJUI
            ZUJZGIJUIZXDWRWSWTUJZUJXAXBWRXCXFXBWRWSGHWQWQJRJAUKZWQUGBUKZWQUGUJX
            GCUKZDUKZULUMXHEUKZFUKZULUMUJXIXLLUNXJXKLUNUMUJFUOEUODUOCUOZUJABUPW
            QWQUFMXMABWQWQUQURZUSUTHIWQWQJSXNUSVAWRWSWTVBVCTUKZUAUKZULZUBUKZUCU
            KZULZJUIZXTUDUKZUEUKZULZJUIZUJZXQYDJUIZVDGXTJUIZYEUJZGYDJUIZVDXBHYD
            JUIZUJZYJVDXDXEVDTUAUBUCUDUEGHIKWQKWQVEXQGUMZYFYIYGYJYMYAYHYEXQGXTJ
            VFVGXQGYDJVFVHXTHUMZYIYLYJYNYHXBYEYKXTHGJVIXTHYDJVFVJVKYDIUMZYLXDYJ
            XEYOYKXCXBYDIHJVIVLYDIGJVIVHXOKUGZXPKUGZUJZXRKUGXSKUGUJZYBKUGZYCKUG
            ZUJZUHZYFXOYCLUNZXPYBLUNZUMZYGUUCYFXRXSLUNZUUDLUNZUUGUUELUNZUMZUUFU
            UCYFXOXSLUNZXPXRLUNZUMZXRYCLUNZXSYBLUNZUMZUJZUUJUUCYAUUMYEUUPYRYSYA
            UUMVMUUBABCDEFXOXPXRXSJKLMVNVOYSUUBYEUUPVMYRABCDEFXRXSYBYCJKLMVNVPV
            JUUQUUKUUNLUNUULUUOLUNZUUHUUIUUKUULUUNUUOLVQABCXRXSXOYCLUBVRZUCVRZT
            VRNPUEVRVSXPXSLUNXRYBLUNLUNUUIUURABCXPXSXRYBLUAVRZUUTUUSNPUDVRZVSAB
            CXPXSXRYBLUVAUUTUUSNPUVBVTWAWBWCYPYSUUBUUJUUFVDZYQYPYSUUAUVCYTYSYPU
            UAUVCYSYPUUAUVCUUGKUGUUDKUGUVCYSYPUUAUJABCUUGUUDUUEKLXPYBLWDQWEABXR
            XSKLOWFABXOYCKLOWFWGWHWIWJWKWLYRUUBYGUUFVMYSABCDEFXOXPYBYCJKLMVNWMW
            NWOWP $.
            $( [11-Feb-1996] $)
        $}

        $( Assuming that operation ` F ` is commutative (second hypothesis),
           closed (third hypothesis), associative (fourth hypothesis), and has
           the cancellation property (fifth hypothesis), show that the relation
           ` R ` , specified by the first hypothesis, is an equivalence
           relation. $)
        ecopoprer $p |- Er R $=
          ( vf vg vh cv visset ecopoprsym ecopoprtrn ster ) OPQGABCDEFORZPRZGHI
          JKPSZTABCDEFUCUDQRGHIJKLMNUEQSUAUB $.
          $( [16-Feb-1996] $)
      $}

    $}
  $}

  ${
    $d x y F $.  $d x y S $.  $d x y A $.  $d x y B $.  $d x y C $.
    $d x y D $.
    eceqopreq.2 $e |- B e. _V $.
    $( (We don't bother to eliminate this redundant hypothesis.) $)
    eceqopreq.3 $e |- C e. _V $.
    eceqopreq.4 $e |- D e. _V $.
    eceqopreq.5 $e |- Er R $.
    eceqopreq.6 $e |- dom R = ( S X. S ) $.
    eceqopreq.7 $e |- dom F = ( S X. S ) $.
    eceqopreq.8 $e |- -. (/) e. S $.
    eceqopreq.9 $e |- ( ( x e. S /\ y e. S ) -> ( x F y ) e. S ) $.
    eceqopreq.10 $e |- ( ( ( A e. S /\ B e. S ) /\
                     ( C e. S /\ D e. S ) ) ->
          ( <. A , B >. R <. C , D >. <-> ( A F D ) = ( B F C ) ) ) $.
    $( Equality of equivalence relation in terms of an operation. $)
    eceqopreq $p |- ( ( A e. S /\ C e. S ) ->
                      ( [ <. A , B >. ] R = [ <. C , D >. ] R <->
                      ( A F D ) = ( B F C ) ) ) $=
      ( wcel wa cop cec wceq co wb wi w3a wbr cdm simpl cxp opelxpi syl6eleqr 
      opex erthdm 3syl bitrd exp43 3imp wn wne c0 eleq2i ecdmn0 opelxp 3bitr3i 
      simprbi necon1bi eqeq1 biimprcd necon3d syl syl5ibr com12 3adant3 eleq1 
      caoprcl syl5bir ndmoprrcl simprd syl6com necon3bd 3adant1 jcad pm5.1 
      necon4bid syl6 pm2.61d 3exp com23 imp biimpcd syl5bi simpld 3adant2 
      3expia eqeq2d con3i ndmopr eqeq2 simpr pm2.61d1 ) CHSZEHSZTZDHSZCDUAZGUBZ
      EFUAZGUBZUCZCFIUDZDEIUDZUCZUEZXCXDXFXOUFXCXFXDXOXCXFXDXOXCXFXDUGZFHSZXOXC
      XFXDXQXOUFXCXFXDXQXOXCXFTZXDXQTZTZXKXGXIGUHZXNXTXRXGGUIZSZXKYAUEXRXSUJXRX
      GHHUKZYBCDHHULNUMXGXIGEFUNZMUOUPRUQURUSXPXQUTZXHXJVAZXLXMVAZTZXOXPYFYGYHX
      CXFYFYGUFXDYFXRYGYFXHVBVAZYGXRYFXJVBUCZYJYGUFXQXJVBXJVBVAZXDXQXIYBSXIYDSY
      LXSYBYDXINVCXIGYEVDEFHHLVEVFZVGVHZYKXHXJXHVBXKXHVBUCZYKXHXJVBVIZVJVKVLYCX
      GYDSYJXRYBYDXGNVCXGGCDUNVDCDHHJVEVFZVMVNVOXFXDYFYHUFXCXFXDTZXQXLXMXNYRXLH
      SZXQXNYSXMHSZYRXLXMHVPZABDEHIQVQVRYSXCXQCFHILOPVSVTWAWBWCWDYIXHXJXLXMYGYH
      WEWFZWGWHWIWJWKXEXQXFUTZXOUFZXCXDXQUUDXCXDXQUGZUUCYIXOUUEUUCYGYHXDXQUUCYG
      UFXCUUCXSYGUUCYLYGXSUUCYOYLYGUFXFXHVBYJXCXFYQVGVHZYOXHXJXJVBXKYOYKYPWLVKV
      LYMVMVNWCXCXQUUCYHUFXDXCXQTZXFXLXMXNUUGYTXFXNYSYTUUGUUAABCFHIQVQWMYTXFXDD
      EHIKOPVSWNWAWBWOWDUUBWGWPYFUUCXKXNTXOYFUUCXKXNYFXKYOUUCYFXJVBXHYNWQUUFVRU
      UCYFXNUUCYRUTXMVBUCZYFXNUFYRXFXFXDUJWRDEHIKOWSUUHXNXLVBUCZYFXMVBXLWTYFUUG
      UTUUIUUGXQXCXQXAWRCFHILOWSVLVRUPVNWDXKXNWEWGXBWH $.
      $( [15-Feb-1996] $)
  $}

  ${
    $d x y z w v u F $.  $d x y z w v u R $.  $d x y z w v u S $.
    $d x y z w v u A $.  $d x y z w v u B $.
    th3qlem1.1 $e |- Er R $.
    th3qlem1.2 $e |- dom R = S $.
    $( Compatibility assumption. $)
    th3qlem1.3 $e |- ( ( ( y e. S /\ w e. S ) /\ ( z e. S /\ v e. S ) ) ->
                 ( ( y R w /\ z R v ) -> ( y F z ) R ( w F v ) ) ) $.
    $( Lemma for Exercise 44 version of Theorem 3Q of [Enderton] p. 60.  The
       third hypothesis is the compatibility assumption. $)
    th3qlem1 $p |- ( ( A e. ( S /. R ) /\ B e. ( S /. R ) ) -> E* x
       E. y E. z ( ( A = [ y ] R /\ B = [ z ] R ) /\
       x = [ ( y F z ) ] R ) ) $=
      ( vu cqs wcel wa cv cec wceq co wex wi wal wmo an4 anbi2i eleq1 pm5.32ri 
      anbi12i bitri 3bitri wbr cdm wb simpl syl6eleqr visset erthdm syl 
      bi2anan9 sylbid eqeq12 oprex erthi syl5bir syl9 com23 imp ecelqsdm 
      anim12i eqtr2 syl2an an4s syl2anb sylbi anidm sylanbr expimpd syl5ib 
      19.23advv ee4anv syl5ibr 19.21aivv eqeq1 anbi2d 2exbidv eceq2 eqeq2d 
      opreq12 anbi12d cbvex2v syl6bb mo4 sylibr ) FIHOZPZGWPPZQZFBRZHSZTZGCRZHS
      ZTZQZARZWTXCJUAZHSZTZQZCUBBUBZFDRZHSZTZGERZHSZTZQZNRZXMXPJUAZHSZTZQZEUBDU
      BZQZXGXTTZUCZNUDAUDXLAUEWSYHANWSXKYDQZEUBDUBZCUBBUBYGYFWSYJYGBCWSYIYGDEWS
      XFXSQZXJYCQZQYGYIWSYKYLYGWQWQQZWRWRQZQZYKYLYGUCZWSYOYKQZXAWPPZXBQZXNWPPZX
      OQZQZXDWPPZXEQZXQWPPZXRQZQZQZYPYQYOXBXOQZXEXRQZQZQYMUUIQZYNUUJQZQUUHYKUUK
      YOXBXEXOXRUFUGYMYNUUIUUJUFUULUUBUUMUUGUULWQXBQZWQXOQZQUUBWQWQXBXOUFUUNYSU
      UOUUAXBWQYRFXAWPUHUIXOWQYTFXNWPUHUIUJUKUUMWRXEQZWRXRQZQUUGWRWRXEXRUFUUPUU
      DUUQUUFXEWRUUCGXDWPUHUIXRWRUUEGXQWPUHUIUJUKUJULYRYTQZUUIQUUCUUEQZUUJQYPUU
      BUUGUURUUSUUIUUJYPWTIPZXMIPZQZXCIPZXPIPZQZQZXAXNTZXDXQTZQZYPUURUUSQUUKUVF
      UVIYPUVFYLUVIYGUVFUVIXHYAHUMZYLYGUVFUVIWTXMHUMZXCXPHUMZQUVJUVBUVGUVKUVEUV
      HUVLUVBWTHUNZPUVGUVKUOUVBWTIUVMUUTUVAUPLUQWTXMHDURZKUSUTUVEXCUVMPUVHUVLUO
      UVEXCIUVMUVCUVDUPLUQXCXPHEURZKUSUTVAMVBYLYGXIYBTZUVJXGXIXTYBVCXHYAHWTXCJV
      DXMXPJVDKVEVFVGVHVIUURUVBUUSUVEYRUUTYTUVAIWTHBURLVJIXMHUVNLVJVKUUCUVCUUEU
      VDIXCHCURLVJIXPHUVOLVJVKVKUUIUVGUUJUVHFXAXNVLGXDXQVLVKVMVNYRXBYTXOUFUUCXE
      UUEXRUFVOVPYMWQYNWRWQVQWRVQUJVRVSXFXJXSYCUFVTWAWAXKYDBCDEWBWCWDXLYEANYGXL
      XFXTXITZQZCUBBUBYEYGXKUVRBCYGXJUVQXFXGXTXIWEWFWGUVRYDBCDEWTXMTZXCXPTZQZXF
      XSUVQYCUVSXBXOUVTXEXRUVSXAXNFWTXMHWHWIUVTXDXQGXCXPHWHWIVAUWAXIYBXTUWAXHYA
      TUVPWTXMXCXPJWJXHYAHWHUTWIWKWLWMWNWO $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x y z w v u t s f g h R $.  $d x y z w v u t s f g h S $.
    $d x y z w v u t s f g h A $.  $d x y z w v u t s f g h B $.
    $d x y z w v u t s f g h C $.  $d x y z w v u t s f g h D $.
    $d x y z w v u t s f g h F $.  $d x y z w v u t s f g h G $.
    th3q.1 $e |- R e. _V $.
    th3q.2 $e |- Er R $.
    th3q.3 $e |- dom R = ( S X. S ) $.
    $( Compatibility assumption. $)
    th3q.4 $e |- ( ( ( ( w e. S /\ v e. S ) /\ ( u e. S /\ t e. S ) )
       /\ ( ( s e. S /\ f e. S ) /\ ( g e. S /\ h e. S ) ) ) ->
       ( ( <. w , v >. R <. u , t >. /\ <. s , f >. R <. g , h >. ) ->
       ( <. w , v >. F <. s , f >. ) R ( <. u , t >. F <. g , h >. ) ) ) $.
    $( Lemma for Exercise 44 version of Theorem 3Q of [Enderton] p. 60,
       extended to operations on ordered pairs.  The fourth hypothesis is the
       compatibility assumption. $)
    th3qlem2 $p |- ( ( A e. ( ( S X. S ) /. R ) /\ B e. ( ( S X. S ) /. R ) )
           -> E* z E. w E. v E. u E. t (
           ( A = [ <. w , v >. ] R /\ B = [ <. u , t >. ] R ) /\
                  z = [ ( <. w , v >. F <. u , t >. ) ] R ) ) $=
      ( vx vy cxp cqs wcel wa cv cec wceq co wex wmo cop wbr wi eqid breq1 
      anbi1d opreq1 breq1d imbi12d imbi2d breq2 breq2d anbi2d opreq2 expcom 
      2optocl com12 imp th3qlem1 opex eceq2 eqeq2d bi2anan9 opreq12 syl 
      anbi12d cla42ev 19.23aivv immoi ) FIIUAZHUBZUCGWAUCUDFNUEZHUFZUGZGSUEZHUF
      ZUGZUDZAUEZWBWEMUHZHUFZUGZUDZSUINUIZAUJFBUEZCUEZUKZHUFZUGZGDUEZEUEZUKZHUF
      ZUGZUDZWIWQXBMUHZHUFZUGZUDZEUIDUIZCUIBUIZAUJANSJTFGHVTMPQWBVTUCJUEZVTUCUD
      WEVTUCTUEZVTUCUDZWBXLHULZWEXMHULZUDZWJXLXMMUHZHULZUMZXNWQXBHULZXPUDZWQWEM
      UHZXBXMMUHZHULZUMZUMXNWBXBHULZXPUDZWJYDHULZUMZUMXNXTUMBCDEWBXLIIVTVTUNZWQ
      WBUGZYFYJXNYLYBYHYEYIYLYAYGXPWQWBXBHUOUPYLYCWJYDHWQWBWEMUQURUSUTXBXLUGZYJ
      XTXNYMYHXQYIXSYMYGXOXPXBXLWBHVAUPYMYDXRWJHXBXLXMMUQVBUSUTXNWOIUCWPIUCUDWT
      IUCXAIUCUDUDZYFYNYAWBXLUKZKUEZLUEZUKZHULZUDZWQYOMUHZXBYRMUHZHULZUMZUMYNYA
      WEYRHULZUDZYCUUBHULZUMZUMYNYFUMNJKLWEXMIIVTYKYOWEUGZUUDUUHYNUUIYTUUFUUCUU
      GUUIYSUUEYAYOWEYRHUOVCUUIUUAYCUUBHYOWEWQMVDURUSUTYRXMUGZUUHYFYNUUJUUFYBUU
      GYEUUJUUEXPYAYRXMWEHVAVCUUJUUBYDYCHYRXMXBMVDVBUSUTYNWBIUCXLIUCUDYPIUCYQIU
      CUDUDUUDRVEVFVGVFVHVIXKWNAXJWNBCXIWNDEWMXINSWQXBWOWPVJWTXAVJWBWQUGZWEXBUG
      ZUDZWHXEWLXHUUKWDWSUULWGXDUUKWCWRFWBWQHVKVLUULWFXCGWEXBHVKVLVMUUMWKXGWIUU
      MWJXFUGWKXGUGWBWQWEXBMVNWJXFHVKVOVLVPVQVRVRVSVO $.
      $( [4-Aug-1995] $)

    ${
      th3q.5 $e |- G = { <. <. x , y >. , z >. | ( ( x e. ( ( S X. S ) /. R )
           /\ y e. ( ( S X. S ) /. R ) ) /\ E. w E. v E. u E. t ( (
           x = [ <. w , v >. ] R /\ y = [ <. u , t >. ] R ) /\
           z = [ ( <. w , v >. F <. u , t >. ) ] R ) ) } $.
      $( Corollary of Theorem 3Q of [Enderton] p. 60. $)
      th3qcor $p |- Fun G $=
        ( wfun cv cxp cqs wcel wa cop cec wceq co wex copab2 wmo wi th3qlem2 
        moanimv mpbir funoprab wb funeq ax-mp ) NUAZAUBZIIUCHUDZUEBUBZVDUEUFZVC
        DUBEUBUGZHUHUIVEFUBGUBUGZHUHUIUFCUBVGVHMUJHUHUIUFGUKFUKEUKDUKZUFZABCULZ
        UAZVJABCVJCUMVFVICUMUNCDEFGVCVEHIJKLMOPQRSUOVFVICUPUQURNVKUIVBVLUSTNVKU
        TVAUQ $.
        $( [12-Nov-1995] $)

      $( Theorem 3Q of [Enderton] p. 60, extended to operations on ordered
         pairs. $)
      th3q $p |- ( ( ( A e. S /\ B e. S ) /\ ( C e. S /\ D e. S ) ) ->
                 ( [ <. A , B >. ] R G [ <. C , D >. ] R ) =
                 [ ( <. A , B >. F <. C , D >. ) ] R ) $=
        ( wcel wa cop cec cxp cqs cv wceq co wex opelxpi ecelqsi syl anim12i 
        eqid pm3.2i wb opeq12 eceq2 eqeq2d anbi1d opreq1 anbi12d cla42egv 
        anbi2d opreq2 2eximdv sylan9 mp2ani cvv ecexg ax-mp eqeq1 4exbidv 
        th3qlem2 oprabvali sylc ) HMUEIMUEUFZJMUEKMUEUFZUFZHIUGZLUHZMMUIZLUJZUE
        ZJKUGZLUHZWHUEZUFWFDUKZEUKZUGZLUHZULZWKFUKZGUKZUGZLUHZULZUFZWEWJQUMZLUH
        ZWOWTQUMZLUHZULZUFZGUNFUNZEUNDUNZWFWKRUMXEULWBWIWCWLWBWEWGUEWIHIMMUOWGW
        ELTUPUQWCWJWGUEWLJKMMUOWGWJLTUPUQURWDWFWFULZWKWKULZUFZXEXEULZXKXLXMWFUS
        WKUSUTXEUSWBXNXOUFZWQXMUFZXEWOWJQUMZLUHZULZUFZEUNDUNWCXKYAXPDEHIMMWMHUL
        WNIULUFWOWEULZYAXPVAWMWNHIVBYBXQXNXTXOYBWQXLXMYBWPWFWFWOWELVCVDVEYBXSXE
        XEYBXRXDULXSXEULWOWEWJQVFXRXDLVCUQVDVGUQVHWCYAXJDEXIYAFGJKMMWRJULWSKULU
        FWTWJULZXIYAVAWRWSJKVBYCXCXQXHXTYCXBXMWQYCXAWKWKWTWJLVCVDVIYCXGXSXEYCXF
        XRULXGXSULWTWJWOQVJXFXRLVCUQVDVGUQVHVKVLVMAUKZWPULZBUKZXAULZUFZCUKZXGUL
        ZUFZGUNFUNEUNDUNWQYGUFZYJUFZGUNFUNEUNDUNXCYJUFZGUNFUNEUNDUNXKABCWFWKXEW
        HWHRLVNUEXEVNUETXDVNLVOVPYDWFULZYKYMDEFGYOYHYLYJYOYEWQYGYDWFWPVQVEVEVRY
        FWKULZYMYNDEFGYPYLXCYJYPYGXBWQYFWKXAVQVIVEVRYIXEULZYNXIDEFGYQYJXHXCYIXE
        XGVQVIVRCDEFGYDYFLMNOPQSTUAUBUCVSUDVTWA $.
        $( [4-Aug-1995] $)
    $}
  $}

  ${
    $d x y z w v u t s f g h a b c d A $.
    $d x y z w v u t s f g h a b c d B $.
    $d x y z w v u t s f g h a b c d C $.
    $d x y z w v u t s f g h a b c d D $.  $d x y z t s g h a b c d F $.
    $d x y z t s g h a b c d G $.  $d x y z w v u f H $.  $d x y z J $.
    $d x y z w v u f K $.  $d x y z w v u f L $.  $d x y z a b c d Q $.
    $d x y z t s g h a b c d R $.  $d x y z w v u t s f g h a b c d S $.
    $d x y ph $.  $d z w v u ps $.  $d z w v u ch $.
    oprec.1 $e |- H e. _V $.
    oprec.2 $e |- K e. _V $.
    oprec.3 $e |- L e. _V $.
    oprec.4 $e |- R e. _V $.
    oprec.5 $e |- Er R $.
    oprec.6 $e |- dom R = ( S X. S ) $.
    $( Equivalence relation. $)
    oprec.7 $e |- R = { <. x , y >. | ( ( x e. ( S X. S ) /\
                      y e. ( S X. S ) ) /\
                      E. z E. w E. v E. u ( ( x = <. z , w >. /\
                      y = <. v , u >. ) /\ ph ) ) } $.
    $( Substitutions for equivalence relation. $)
    oprec.8 $e |- ( ( ( z = a /\ w = b ) /\ ( v = c /\ u = d ) ) ->
                     ( ph <-> ps ) ) $.
    oprec.9 $e |- ( ( ( z = g /\ w = h ) /\ ( v = t /\ u = s ) ) ->
                     ( ph <-> ch ) ) $.
    $( Pre-operation. $)
    oprec.10 $e |- G = { <. <. x , y >. , z >. | ( ( x e. ( S X. S ) /\
                      y e. ( S X. S ) ) /\
                      E. w E. v E. u E. f ( ( x = <. w , v >. /\
                      y = <. u , f >. ) /\ z = J ) ) } $.
    $( Substitutions for pre-operation. $)
    oprec.11 $e |- ( ( ( w = a /\ v = b ) /\ ( u = g /\ f = h ) ) -> J = K ) $.
    oprec.12 $e |- ( ( ( w = c /\ v = d ) /\ ( u = t /\ f = s ) ) -> J = L ) $.
    oprec.13 $e |- ( ( ( w = A /\ v = B ) /\ ( u = C /\ f = D ) ) -> J = H ) $.
    $( Main operation. $)
    oprec.14 $e |- F = { <. <. x , y >. , z >. | ( ( x e. Q /\ y e. Q ) /\
           E. a E. b E. c E. d ( (
           x = [ <. a , b >. ] R /\ y = [ <. c , d >. ] R ) /\
           z = [ ( <. a , b >. G <. c , d >. ) ] R ) ) } $.
    $( Quotient class for main operation. $)
    oprec.15 $e |- Q = ( ( S X. S ) /. R ) $.
    $( Lemma to establish compatibility of pre-operation. $)
    oprec.16 $e |- ( ( ( ( a e. S /\ b e. S ) /\ ( c e. S /\ d e. S ) ) /\
                       ( ( g e. S /\ h e. S ) /\ ( t e. S /\ s e. S ) ) ) ->
                   ( ( ps /\ ch ) -> K R L ) ) $.
    $( Express an operation on equivalence classes of ordered pairs in terms of
       equivalence class of operations on ordered pairs.  (See set.mm for
       additional comments for the hypotheses.) $)
    oprec $p |- ( ( ( A e. S /\ B e. S ) /\ ( C e. S /\ D e. S ) ) ->
                ( [ <. A , B >. ] R F [ <. C , D >. ] R ) =
                   [ H ] R ) $=
      ( wcel wa cop cec co cv wbr opbrop bi2anan9 wb oprabval3 breqan12d an4s 
      3imtr4d wceq wex copab2 cxp cqs eleq2i anbi12i anbi1i oprabbii eqtri 
      th3q eceq2 syl eqtrd ) KQVHLQVHVIMQVHNQVHVIVIZKLVJZPVKMNVJZPVKUAVLWQWRUBV
      LZPVKZUCPVKZDEFUHUIUJUKKLMNPQTJUGUBUASUOUPUQUHVMZQVHUIVMZQVHVIZUJVMZQVHUK
      VMZQVHVIZVIZSVMZQVHTVMZQVHVIZJVMZQVHUGVMZQVHVIZVIZVIBCVIUEUFPVNZXBXCVJZXE
      XFVJZPVNZXIXJVJZXLXMVJZPVNZVIXQXTUBVLZXRYAUBVLZPVNZVGXHXSBXOYBCABDEFGHIXB
      XCXEXFPQUSURVOACDEFGHIXIXJXLXMPQUTURVOVPXDXKXGXNYEXPVQXDXKVIXGXNVIYCUEYDU
      FPDEFGHIXBXCXIXJUDUERUBQUMVBVAVRDEFGHIXEXFXLXMUDUFRUBQUNVCVAVRVSVTWAUADVM
      ZOVHZEVMZOVHZVIZYFXQPVKWBYHXRPVKWBVIFVMXQXRUBVLPVKWBVIUKWCUJWCUIWCUHWCZVI
      ZDEFWDYFQQWEPWFZVHZYHYMVHZVIZYKVIZDEFWDVEYLYQDEFYJYPYKYGYNYIYOOYMYFVFWGOY
      MYHVFWGWHWIWJWKWLWPWSUCWBWTXAWBDEFGHIKLMNUDUCRUBQULVDVAVRWSUCPWMWNWO $.
      $( [6-Aug-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w F $.  $d x y z w R $.
    $d x y z w S $.  $d z w C $.
    ecoprcom.1 $e |- C = ( ( S X. S ) /. R ) $.
    $( D,G for AFB $)
    ecoprcom.2 $e |- ( ( ( x e. S /\ y e. S ) /\ ( z e. S /\ w e. S ) ) ->
 ( [ <. x , y >. ] R F [ <. z , w >. ] R ) = [ <. D , G >. ] R ) $.
    $( H,J for BFA $)
    ecoprcom.3 $e |- ( ( ( z e. S /\ w e. S ) /\ ( x e. S /\ y e. S ) ) ->
 ( [ <. z , w >. ] R F [ <. x , y >. ] R ) = [ <. H , J >. ] R ) $.
    ecoprcom.4 $e |- D = H $.
    ecoprcom.5 $e |- G = J $.
    $( Lemma used to transfer a commutative law via an equivalence relation. $)
    ecoprcom $p |- ( ( A e. C /\ B e. C ) -> ( A F B ) = ( B F A ) ) $=
      ( cv cop cec co wceq opreq1 opreq2 eqeq12d wcel wa opeq12 eceq2 syl 
      mp2an ancoms 3eqtr4a 2ecoptocl ) ATZBTZUAIUBZCTZDTZUAIUBZKUCZVBUSKUCZUDEV
      BKUCZVBEKUCZUDEFKUCZFEKUCZUDABCDEFJJIGOUSEUDVCVEVDVFUSEVBKUEUSEVBKUFUGVBF
      UDVEVGVFVHVBFEKUFVBFEKUEUGUQJUHURJUHUIZUTJUHVAJUHUIZUIHLUAZIUBZMNUAZIUBZV
      CVDHMUDZLNUDZVLVNUDZRSVOVPUIVKVMUDVQHLMNUJVKVMIUKULUMPVJVIVDVNUDQUNUOUP 
      $.
      $( [29-Aug-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u F $.  $d x y z w v u R $.  $d x y z w v u S $.
    $d z w v u D $.
    ecoprass.1 $e |- D = ( ( S X. S ) /. R ) $.
    ecoprass.2 $e |- ( ( ( x e. S /\ y e. S ) /\ ( z e. S /\ w e. S ) ) ->
 ( [ <. x , y >. ] R F [ <. z , w >. ] R ) = [ <. G , H >. ] R ) $.
    ecoprass.3 $e |- ( ( ( z e. S /\ w e. S ) /\ ( v e. S /\ u e. S ) ) ->
 ( [ <. z , w >. ] R F [ <. v , u >. ] R ) = [ <. N , Q >. ] R ) $.
    ecoprass.4 $e |- ( ( ( G e. S /\ H e. S ) /\ ( v e. S /\ u e. S ) ) ->
 ( [ <. G , H >. ] R F [ <. v , u >. ] R ) = [ <. J , K >. ] R ) $.
    ecoprass.5 $e |- ( ( ( x e. S /\ y e. S ) /\ ( N e. S /\ Q e. S ) ) ->
 ( [ <. x , y >. ] R F [ <. N , Q >. ] R ) = [ <. L , M >. ] R ) $.
    ecoprass.6 $e |- ( ( ( x e. S /\ y e. S ) /\ ( z e. S /\ w e. S ) ) ->
                     ( G e. S /\ H e. S ) ) $.
    ecoprass.7 $e |- ( ( ( z e. S /\ w e. S ) /\ ( v e. S /\ u e. S ) ) ->
                     ( N e. S /\ Q e. S ) ) $.
    ecoprass.8 $e |- J = L $.
    ecoprass.9 $e |- K = M $.
    $( Lemma used to transfer an associative law via an equivalence
       relation. $)
    ecoprass $p |- ( ( A e. D /\ B e. D /\ C e. D ) ->
                 ( ( A F B ) F C ) = ( A F ( B F C ) ) ) $=
      ( cv cop cec co wceq opreq1 opreq1d eqeq12d opreq2 opreq2d wcel wa w3a 
      opeq12 eceq2 syl mp2an adantr sylan eqtrd 3impa adantl sylan2 3impb 
      3eqtr4a 3ecoptocl ) AUKZBUKZULLUMZCUKZDUKZULLUMZNUNZEUKZFUKZULLUMZNUNZVSW
      BWFNUNZNUNZUOGWBNUNZWFNUNZGWHNUNZUOGHNUNZWFNUNZGHWFNUNZNUNZUOWMINUNZGHINU
      NZNUNZUOABCDEFGHIMLJUBVSGUOZWGWKWIWLWTWCWJWFNVSGWBNUPUQVSGWHNUPURWBHUOZWK
      WNWLWPXAWJWMWFNWBHGNUSUQXAWHWOGNWBHWFNUPUTURWFIUOZWNWQWPWSWFIWMNUSXBWOWRG
      NWFIHNUSUTURVQMVAVRMVAVBZVTMVAWAMVAVBZWDMVAWEMVAVBZVCQRULZLUMZSTULZLUMZWG
      WIQSUOZRTUOZXGXIUOZUIUJXJXKVBXFXHUOXLQRSTVDXFXHLVEVFVGXCXDXEWGXGUOXCXDVBZ
      XEVBWGOPULLUMZWFNUNZXGXMWGXOUOXEXMWCXNWFNUCUQVHOMVAPMVAVBXEXOXGUOXMUEUGVI
      VJVKXCXDXEWIXIUOXCXDXEVBZVBWIVSUAKULLUMZNUNZXIXPWIXRUOXCXPWHXQVSNUDUTVLXC
      UAMVAKMVAVBXRXIUOXPUFUHVMVJVNVOVP $.
      $( [31-Aug-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u F $.  $d x y z w v u R $.  $d x y z w v u S $.
    $d x y z w v u G $.  $d z w v u D $.
    ecoprdi.1 $e |- D = ( ( S X. S ) /. R ) $.
    $( M,N for BFC $)
    ecoprdi.2 $e |- ( ( ( z e. S /\ w e. S ) /\ ( v e. S /\ u e. S ) ) ->
 ( [ <. z , w >. ] R F [ <. v , u >. ] R ) = [ <. M , N >. ] R ) $.
    $( H,J for AG(BFC) $)
    ecoprdi.3 $e |- ( ( ( x e. S /\ y e. S ) /\ ( M e. S /\ N e. S ) ) ->
 ( [ <. x , y >. ] R G [ <. M , N >. ] R ) = [ <. H , J >. ] R ) $.
    $( W,X for AGB $)
    ecoprdi.4 $e |- ( ( ( x e. S /\ y e. S ) /\ ( z e. S /\ w e. S ) ) ->
 ( [ <. x , y >. ] R G [ <. z , w >. ] R ) = [ <. W , X >. ] R ) $.
    $( Y,Z for AGC $)
    ecoprdi.5 $e |- ( ( ( x e. S /\ y e. S ) /\ ( v e. S /\ u e. S ) ) ->
 ( [ <. x , y >. ] R G [ <. v , u >. ] R ) = [ <. Y , Z >. ] R ) $.
    $( K,L for (AGB)F(AGC) $)
    ecoprdi.6 $e |- ( ( ( W e. S /\ X e. S ) /\ ( Y e. S /\ Z e. S ) ) ->
 ( [ <. W , X >. ] R F [ <. Y , Z >. ] R ) = [ <. K , L >. ] R ) $.
    ecoprdi.7 $e |- ( ( ( z e. S /\ w e. S ) /\ ( v e. S /\ u e. S ) ) ->
                     ( M e. S /\ N e. S ) ) $.
    ecoprdi.8 $e |- ( ( ( x e. S /\ y e. S ) /\ ( z e. S /\ w e. S ) ) ->
                     ( W e. S /\ X e. S ) ) $.
    ecoprdi.9 $e |- ( ( ( x e. S /\ y e. S ) /\ ( v e. S /\ u e. S ) ) ->
                     ( Y e. S /\ Z e. S ) ) $.
    ecoprdi.10 $e |- H = K $.
    ecoprdi.11 $e |- J = L $.
    $( Lemma used to transfer a distributive law via an equivalence
       relation. $)
    ecoprdi $p |- ( ( A e. D /\ B e. D /\ C e. D ) ->
                 ( A G ( B F C ) ) = ( ( A G B ) F ( A G C ) ) ) $=
      ( cv cop cec co wceq opreq1 opreq12d eqeq12d opreq2d opreq2 opreq1d wcel 
      wa w3a opeq12 eceq2 syl mp2an adantl sylan2 eqtrd 3impb opreqan12d 
      syl2an 3impdi 3eqtr4a 3ecoptocl ) AUPZBUPZUQKURZCUPZDUPZUQKURZEUPZFUPZUQK
      URZMUSZNUSZWEWHNUSZWEWKNUSZMUSZUTGWLNUSZGWHNUSZGWKNUSZMUSZUTGHWKMUSZNUSZG
      HNUSZWSMUSZUTGHIMUSZNUSZXCGINUSZMUSZUTABCDEFGHILKJUEWEGUTZWMWQWPWTWEGWLNV
      AXIWNWRWOWSMWEGWHNVAWEGWKNVAVBVCWHHUTZWQXBWTXDXJWLXAGNWHHWKMVAVDXJWRXCWSM
      WHHGNVEVFVCWKIUTZXBXFXDXHXKXAXEGNWKIHMVEVDXKWSXGXCMWKIGNVEVDVCWCLVGWDLVGV
      HZWFLVGWGLVGVHZWILVGWJLVGVHZVIOPUQZKURZQRUQZKURZWMWPOQUTZPRUTZXPXRUTZUNUO
      XSXTVHXOXQUTYAOPQRVJXOXQKVKVLVMXLXMXNWMXPUTXLXMXNVHZVHWMWESTUQKURZNUSZXPY
      BWMYDUTXLYBWLYCWENUFVDVNXLSLVGTLVGVHYDXPUTYBUGUKVOVPVQXLXMXNWPXRUTXLXMVHZ
      XLXNVHZVHWPUAUBUQKURZUCUDUQKURZMUSZXRYEYFWNYGWOYHMUHUIVRUALVGUBLVGVHUCLVG
      UDLVGVHYIXRUTYEYFUJULUMVSVPVTWAWB $.
      $( [2-Sep-1995] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The mapping operation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c ^m $.  $( The mapping operation. $)
  $c ^pm $.  $( The mapping operation. $)

  $( Extend the definition of a class to include the mapping operation.  (Read
     for ` A ^m B ` , "the set of all functions that map from ` B ` to
     ` A ` .) $)
  cmap $a class ^m $.

  $( Extend the definition of a class to include the partial mapping
     operation.  (Read for ` A ^m B ` , "the set of all partial functions that
     map from ` B ` to ` A ` .) $)
  cpm $a class ^pm $.

  ${
    $d x y z f $.
    $( Define the mapping operation or set exponentiation.  The set of all
       functions that map from ` B ` to ` A ` is written ` ( A ^m B ) ` (see
       ~ mapval ).  Many authors write ` A ` followed by ` B ` as a superscript
       for this operation and rely on context to avoid confusion other
       exponentiation operations (e.g.  Definition 10.42 of [TakeutiZaring]
       p. 95).  Other authors show ` B ` as a prefixed superscript, which is
       read " ` A ` pre ` B ` " (e.g. definition of [Enderton] p. 52).
       Definition 8.21 of [Eisenberg] p. 125 uses the notation Map( ` B ` ,
       ` A ` ) for our ` ( A ^m B ) ` .  The up-arrow is used by Donald Knuth
       for iterated exponentiation (_Science_ 194, 1235-1242, 1976).  We adopt
       the first case of his notation (simple exponentiation) and subscript it
       with _m_ to distinguish it from other kinds of exponentiation. $)
    df-map $a |- ^m = { <. <. x , y >. , z >. | z = { f | f : y --> x } } $.

    $( Define the partial mapping operation.  A partial function from ` B ` to
       ` A ` is a function from a subset of ` B ` to ` A ` .  The set of all
       partial functions from ` B ` to ` A ` is written ` ( A ^pm B ) ` (see
       ~ pmvalg ).  A notation for this operation apparently does not appear in
       the literature.  We use ` ^pm ` to distinguish it from the less general
       set exponentiation operation ` ^m ` ( ~ df-map ) .  See ~ mapsspm for
       its relationship to set exponentiation. $)
    df-pm $a |- ^pm = { <. <. x , y >. , z >. | z =
                    { f | ( Fun f /\ f C_ ( y X. x ) ) } } $.
  $}

  $( Note:  an alternate way to express partial functions is as follows,
     which would be added after df-fun above.  The symbol would be _pfun.gif.
     This definition would be needed only if we need proper class partial
     functions, which seems unlikely.  While nice-looking, for ordinary usage
     it would inconveniently require a new set of equality theorems, etc. $)
  $( Define a partial function, which is a function from a subset of the
     domain ` A ` to the codomain ` B ` .  The notation of a stroke through
     the arrow is used by the Z language: see, for example,
     ~ http://staff.washington.edu/jon/z/dcs.html . $)
  $(
  df-fp $a |- ( F : A -|-> B <-> ( Fun F /\ F C_ ( X X. Y ) ) $.
  $)

  ${
    $d f x A $.  $d f x B $.
    $( When ` A ` is a proper class, the class of all functions mapping ` A `
       to ` B ` is empty.  Exercise 4.41 of [Mendelson] p. 255. $)
    mapprc $p |- ( -. A e. _V -> { f | f : A --> B } = (/) ) $=
      ( cvv wcel cv wf cab c0 wne wex abn0 cdm fdm visset dmex syl6eqelr 
      19.23aiv sylbi necon1bi ) ADEZABCFZGZCHZIUDIJUCCKUAUCCLUCUACUCAUBMDABUBNU
      BCOPQRST $.
      $( [8-Dec-2003] $)

    $( The class of all partial functions from one set to another is a set. $)
    pmex $p |- ( ( A e. C /\ B e. D ) ->
                   { f | ( Fun f /\ f C_ ( A X. B ) ) } e. _V ) $=
      ( wcel wa cv cxp wss wfun cab cvv xpexg abssexg syl ancom abbii syl5eqel 
      ) ACFBDFGZEHZABIZJZUAKZGZELZMUDUCGZELTUBMFUFMFABCDNUDEUBMOPUGUEEUDUCQRS 
      $.
      $( [15-Nov-2007] $)

    $( The class of all functions mapping one set to another is a set.  Remark
       after Definition 10.24 of [Kunen] p. 31.  (Contributed by Raph Levien,
       4-Dec-2003.) $)
    mapex $p |- ( ( A e. C /\ B e. D ) -> { f | f : A --> B } e. _V ) $=
      ( cv wf cab cxp cpw wss cvv wcel wa ssexg fssxp ss2abi df-pw sseqtr4i 
      xpexg pwexg syl sylancr ) ABEFZGZEHZABIZJZKUHLMZUFLMACMBDMNZUFUHLOUFUDUGK
      ZEHUHUEUKEABUDPQEUGRSUJUGLMUIABCDTUGLUAUBUC $.
      $( [4-Dec-2003] $)
  $}

  ${
    $d f x y z $.
    $( Set exponentiation has a universal domain. $)
    fnmap $p |- ^m Fn ( _V X. _V ) $=
      ( vx vy vz vf cvv cv wf cab cmap wcel visset mapex mp2an wceq copab2 wa 
      df-map pm3.2i biantrur oprabbii eqtri fnoprab2 ) ABCEEBFZAFZDFGDHZIUCEJZU
      DEJZUEEJBKZAKZUCUDEEDLMICFUENZABCOUGUFPZUJPZABCOABCDQUJULABCUKUJUGUFUIUHR
      STUAUB $.
      $( [8-Dec-2003] $)
  $}

  ${
    $d x y z f A $.  $d x y z f B $.
    $( The value of set exponentiation. ` ( A ^m B ) ` is the set of all
       functions that map from ` B ` to ` A ` .  Definition 10.24 of [Kunen]
       p. 24. $)
    mapvalg $p |- ( ( A e. C /\ B e. D ) ->
                  ( A ^m B ) = { f | f : B --> A } ) $=
      ( vx vy vz wcel wa cv wf cab cvv cmap co wceq mapex ancoms wi feq3 
      abbidv feq2 copab2 df-map visset pm3.2i biantrur oprabbii eqtri 
      oprabval2g 3expia elisset syl2an mpd ) ACIZBDIZJBAEKZLZEMZNIZABOPUTQZUQUP
      VABADCERSANIZBNIZVAVBTUPUQVCVDVAVBFGHABNNGKZFKZURLZEMZUTOVEAURLZEMNVFAQVG
      VIEVFAVEURUAUBVEBQVIUSEVEBAURUCUBOHKVHQZFGHUDVFNIZVENIZJZVJJZFGHUDFGHEUEV
      JVNFGHVMVJVKVLFUFGUFUGUHUIUJUKULACUMBDUMUNUO $.
      $( [8-Dec-2003] $)

    $( The value of the partial mapping operation. ` ( A ^pm B ) ` is the set
       of all partial functions that map from ` B ` to ` A ` . $)
    pmvalg $p |- ( ( A e. C /\ B e. D ) ->
                  ( A ^pm B ) = { f | ( Fun f /\ f C_ ( B X. A ) ) } ) $=
      ( vx vy vz wcel wa cv wfun cxp wss cab cvv cpm co wceq pmex ancoms wi 
      xpeq2 sseq2d anbi2d abbidv xpeq1 copab2 df-pm visset pm3.2i biantrur 
      oprabbii eqtri oprabval2g 3expia elisset syl2an mpd ) ACIZBDIZJEKZLZVBBAM
      ZNZJZEOZPIZABQRVGSZVAUTVHBADCETUAAPIZBPIZVHVIUBUTVAVJVKVHVIFGHABPPVCVBGKZ
      FKZMZNZJZEOZVGQVCVBVLAMZNZJZEOPVMASZVPVTEWAVOVSVCWAVNVRVBVMAVLUCUDUEUFVLB
      SZVTVFEWBVSVEVCWBVRVDVBVLBAUGUDUEUFQHKVQSZFGHUHVMPIZVLPIZJZWCJZFGHUHFGHEU
      IWCWGFGHWFWCWDWEFUJGUJUKULUMUNUOUPACUQBDUQURUS $.
      $( [15-Nov-2007] $)
  $}

  ${
    $d f A $.  $d f B $.
    mapval.1 $e |- A e. _V $.
    mapval.2 $e |- B e. _V $.
    $( The value of set exponentiation (inference version). ` ( A ^m B ) ` is
       the set of all functions that map from ` B ` to ` A ` .  Definition
       10.24 of [Kunen] p. 24. $)
    mapval $p |- ( A ^m B ) = { f | f : B --> A } $=
      ( cvv wcel cmap co cv wf cab wceq mapvalg mp2an ) AFGBFGABHIBACJKCLMDEABF
      FCNO $.
      $( [8-Dec-2003] $)
  $}

  ${
    $d g A $.  $d g B $.  $d g C $.
    $( Membership relation for set exponentiation. $)
    elmapg $p |- ( ( A e. R /\ B e. S ) ->
                  ( C e. ( A ^m B ) <-> C : B --> A ) ) $=
      ( vg wcel wa cmap co cv wf cab mapvalg eleq2d cvv wi wb fex expcom 
      adantl feq1 elab3g syl bitrd ) ADGZBEGZHZCABIJZGCBAFKZLZFMZGZBACLZUHUIULC
      ABDEFNOUHUNCPGZQZUMUNRUGUPUFUNUGUOBAECSTUAUKUNFCPBAUJCUBUCUDUE $.
      $( [17-Oct-2006] $)
  $}

  ${
    $d g A $.  $d f g B $.  $d g F $.
    elmap.1 $e |- A e. _V $.
    elmap.2 $e |- B e. _V $.
    $( Membership relation for set exponentiation. $)
    elmap $p |- ( F e. ( A ^m B ) <-> F : B --> A ) $=
      ( cvv wcel cmap co wf wb elmapg mp2an ) AFGBFGCABHIGBACJKDEABCFFLM $.
      $( [8-Dec-2003] $)

    $( Alternate expression for the value of set exponentiation. $)
    mapval2 $p |- ( A ^m B ) = ( ~P ( B X. A ) i^i { f | f Fn B } ) $=
      ( vg cmap co cxp cpw cv wfn cab cin wf wss wa wcel ffn fssxp jca crn 
      sstr rnss rnxpss sylancl anim2i df-f sylibr impbii ancom bitri elmap 
      elin visset elpw fneq1 elab anbi12i 3bitr4i eqriv ) FABGHZBAIZJZCKZBLZCMZ
      NZBAFKZOZVIVCPZVIBLZQZVIVBRVIVHRZVJVLVKQZVMVJVOVJVLVKBAVISBAVITUAVOVLVIUB
      ZAPZQVJVKVQVLVPVCUBZPVRAPVQVKVPVRAUCVIVCUDBAUEUFUGBAVIUHUIUJVLVKUKULABVID
      EUMVNVIVDRZVIVGRZQVMVIVDVGUNVSVKVTVLVIVCFUOZUPVFVLCVIWABVEVIUQURUSULUTVA 
      $.
      $( [3-Nov-2007] $)

    $( The predicate "is a partial function." $)
    elpm $p |- ( F e. ( A ^pm B ) <-> ( Fun F /\ F C_ ( B X. A ) ) ) $=
      ( vg cpm co wcel cv wfun cxp wss wa cab cvv wceq pmvalg mp2an eleq2i 
      xpex ssex adantl funeq sseq1 anbi12d elab3 bitri ) CABGHZICFJZKZUJBALZMZN
      ZFOZICKZCULMZNZUIUOCAPIBPIUIUOQDEABPPFRSTUNURFCUQCPIUPCULBAEDUAUBUCUJCQUK
      UPUMUQUJCUDUJCULUEUFUGUH $.
      $( [15-Nov-2007] $)

    $( The predicate "is a partial function." $)
    elpm2 $p |- ( F e. ( A ^pm B ) <-> ( F : dom F --> A /\ dom F C_ B ) ) $=
      ( cpm co wcel wfun cxp wss wa cdm wf elpm funssxp bitri ) CABFGHCICBAJKLC
      MZACNRBKLABCDEOBACPQ $.
      $( [15-Nov-2007] $)

    $( A total function is a partial function. $)
    fpm $p |- ( F : A --> B -> F e. ( B ^pm A ) ) $=
      ( wf cdm wss wa cpm co wcel ffdm elpm2 sylibr ) ABCFCGZBCFPAHICBAJKLABCMB
      ACEDNO $.
      $( [15-Nov-2007] $)

    $( Set exponentiation is a subset of partial maps. $)
    mapsspm $p |- ( A ^m B ) C_ ( A ^pm B ) $=
      ( vg cmap co cpm cv wcel wf elmap fpm sylbi ssriv ) EABFGZABHGZEIZPJBARKR
      QJABRCDLBARDCMNO $.
      $( [15-Nov-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.  $d x y R $.
    fvopabf4.1 $e |- C e. _V $.
    fvopabf4.2 $e |- D e. _V $.
    fvopabf4.3 $e |- R e. _V $.
    fvopabf4.4 $e |- ( x = A -> B = C ) $.
    fvopabf4.5 $e |- F = { <. x , y >. | ( x : D --> R /\ y = B ) } $.
    $( Special case of ~ fvopab4 for operator theorems. $)
    fvopabf4 $p |- ( A : D --> R -> ( F ` A ) = C ) $=
      ( wf cmap co wcel cfv wceq elmap cv wa copab anbi1i opabbii eqtr4i 
      fvopab4 sylbir ) FGCNCGFOPZQCHRESGFCKJTABCDEUIHLHFGAUAZNZBUADSZUBZABUCUJU
      IQZULUBZABUCMUOUMABUNUKULGFUJKJTUDUEUFIUGUH $.
      $( [27-Nov-2007] $)
  $}

  ${
    $d f A $.  $d f B $.
    $( Set exponentiation is a subset of the power set of the cross product of
       its arguments. $)
    mapsspw $p |- ( B e. R -> ( A ^m B ) C_ ~P ( B X. A ) ) $=
      ( vf cvv wcel cmap co cxp cpw wss wa cv wf cab mapvalg fssxp ss2abi 
      df-pw sseqtr4i a1i eqsstrd wn c0 cdm wrel relxp wfn wceq fnmap fndm 
      ax-mp releqi mpbir oprprc1 0ss adantr pm2.61ian ) AEFZBCFZABGHZBAIZJZKZUS
      UTLZVABADMZNZDOZVCABECDPVHVCKVEVHVFVBKZDOVCVGVIDBAVFQRDVBSTUAUBUSUCZVDUTV
      JVAUDVCABGGUEZUFEEIZUFEEUGVKVLGVLUHVKVLUIUJVLGUKULUMUNUOUDVCKVJVCUPUAUBUQ
      UR $.
      $( [8-Dec-2006] $)
  $}

  ${
    $d f A $.
    map0e.1 $e |- A e. _V $.
    $( Set exponentiation with an empty exponent (ordinal number 0) is ordinal
       number 1.  Exercise 4.42(a) of [Mendelson] p. 255. $)
    map0e $p |- ( A ^m (/) ) = 1o $=
      ( vf c0 cmap co csn c1o cv wf cab wceq wfn crn wss wa fn0 anbi1i df-f 
      0ss rneq rn0 syl6eq sseq1d mpbiri pm4.71i 3bitr4i abbii 0ex mapval df-sn 
      3eqtr4i df1o2 eqtr4i ) ADEFZDGZHDACIZJZCKUQDLZCKUOUPURUSCUQDMZUQNZAOZPUSV
      BPURUSUTUSVBUQQRDAUQSUSVBUSVBDAOATUSVADAUSVADNDUQDUAUBUCUDUEUFUGUHADCBUIU
      JCDUKULUMUN $.
      $( [10-Dec-2003] $)

    $( Set exponentiation with an empty base is the empty set, provided the
       exponent is non-empty.  Theorem 96 of [Suppes] p. 89. $)
    map0b $p |- ( A =/= (/) -> ( (/) ^m A ) = (/) ) $=
      ( vf c0 wne cv wf cab cmap co wex wceq abn0 cdm fdm crn wss frn ss0 syl 
      dm0rn0 sylibr eqtr3d 19.23aiv sylbi necon1i 0ex mapval syl5eq ) ADEADCFZG
      ZCHZDDAIJULDADULDEUKCKADLZUKCMUKUMCUKUJNZADADUJOUKUJPZDLZUNDLUKUODQUPADUJ
      RUOSTUJUAUBUCUDUEUFDACUGBUHUI $.
      $( [19-Mar-2007] $) $( [10-Dec-2003] $)
  $}

  ${
    $d f x y A $.  $d f x y B $.
    map0.1 $e |- A e. _V $.
    map0.2 $e |- B e. _V $.
    $( Set exponentiation is empty iff the base is empty and the exponent is
       not empty.  Theorem 97 of [Suppes] p. 89. $)
    map0 $p |- ( ( A ^m B ) = (/) <-> ( A = (/) /\ B =/= (/) ) ) $=
      ( vf vx cmap co c0 wceq wne wa cv wf cab mapval eqeq1i wcel wex csn wss 
      cxp snssi visset fconst fss mpan snex xpex feq1 cla4ev 3syl 19.23aiv n0 
      abn0 3imtr4i necon4i sylbi c1o map0e df1o2 eqtri 0ex snnz eqnetri opreq2 
      neeq1d mpbiri necon2i jca opreq1 map0b sylan9eq impbii ) ABGHZIJZAIJZBIKZ
      LVPVQVRVPBAEMZNZEOZIJVQVOWAIABECDPQAIWAIFMZARZFSVTESZAIKWAIKWCWDFWCWBTZAU
      AZBABWEUBZNZWDWBAUCBWEWGNWFWHBWBFUDUEBWEAWGUFUGVTWHEWGBWEDWBUHUIBAVSWGUJU
      KULUMFAUNVTEUOUPUQURBIVOIBIJZVOIKAIGHZIKWJITZIWJUSWKACUTVAVBIVCVDVEWIVOWJ
      IBIAGVFVGVHVIVJVQVRVOIBGHIAIBGVKBDVLVMVN $.
      $( [17-May-2007] $) $( [10-Dec-2003] $)

    $( The value of set exponentiation with a singleton exponent.  Theorem 98
       of [Suppes] p. 89. $)
    mapsn $p |- ( A ^m { B } ) = { f | E. y e. A f = { <. B , y >. } } $=
      ( cv cop csn wceq wrex cmap co wcel wf snex elmap wa wex crn wbr weu wfn 
      fneu ffn snid sylancl cab cima wrel frel relimasn syl cdm fdm imaeq2d 
      imadmrn syl5reqr eqtr3d eqeq1d exbidv euabsn syl5bb mpbid frn sseld 
      visset eleq2 mpbiri syl5 feq3 wfo dffn4 sylib fof syl5cbi fsn syl6ib 
      jcad eximdv mpd df-rex sylibr wss fss wf1o f1osn f1oeq1 f1of snssi 
      syl2an expcom r19.23aiv impbii bitri abbi2i ) DGZCAGZHIZJZABKZDBCIZLMZWQX
      CNXBBWQOZXABXBWQECPQXDXAXDWRBNZWTRZASZXAXDWQTZWRIZJZASZXGXDCWRWQUAZAUBZXK
      WQXBUCZCXBNXMXDAXBCWQUDXBBWQUEZCFUFUGXDXLAUHZXIJZASXKXMXDXQXJAXDXPXHXIXDW
      QXBUIZXPXHXDWQUJXRXPJXBBWQUKACWQULUMXDWQWQUNZUIXRXHXDXSXBWQXBBWQUOUPWQUQU
      RUSUTVAXLAVBVCVDXDXJXFAXDXJXEWTXDWRXHNZXEXJXDXHBWRXBBWQVEVFXJXTWRXINWRAVG
      ZUFXHXIWRVHVIVJXDXJXBXIWQOZWTXJXBXHWQOZYBXDXHXIXBWQVKXDXBXHWQVLZYCXDXNYDX
      OXBWQVMVNXBXHWQVOUMVPCWRWQFYAVQVRVSVTWAWTABWBWCWTXDABWTXEXDYBXIBWDXDWTXEX
      BXIBWQWEWTXBXIWQWFZYBWTYEXBXIWSWFCWRFYAWGXBXIWQWSWHVIXBXIWQWIUMWRBWJWKWLW
      MWNWOWP $.
      $( [10-Dec-2003] $)
  $}

  ${
    $d f A $.  $d f B $.  $d f C $.
    mapss.1 $e |- B e. _V $.
    mapss.2 $e |- C e. _V $.
    $( Subset inheritance for set exponentiation.  Theorem 99 of [Suppes]
       p. 89. $)
    mapss $p |- ( A C_ B -> ( A ^m C ) C_ ( B ^m C ) ) $=
      ( vf wss cv wf cab cmap co fss expcom ss2abdv cvv wcel wceq mapvalg ssex 
      sylancl mapval a1i 3sstr4d ) ABGZCAFHZIZFJZCBUFIZFJZACKLZBCKLZUEUGUIFUGUE
      UICABUFMNOAPQCPQUKUHRUEACPPFSABDTEUAULUJRUEBCFDEUBUCUD $.
      $( [10-Dec-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Infinite Cartesian products
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c X_ $.

  $( Extend class notation to include infinite Cartesian products. $)
  cixp $a class X_ x e. A B $.

  ${
    $d f x $.  $d f A $.  $d f B $.
    $( Definition of infinite Cartesian product of [Enderton] p. 54.  Enderton
       uses a bold "X" with ` x e. A ` written underneath or as a subscript, as
       does Stoll p. 47.  Some books use a capital pi, but we will reserve that
       notation for products of numbers.  Usually ` B ` represents a class
       expression containing ` x ` free and thus can be thought of as
       ` B ( x ) ` .  Normally, ` x ` is not free in ` A ` , although this is
       not a requirement of the definition. $)
    df-ixp $a |- X_ x e. A B =
                 { f | ( f Fn A /\ A. x e. A ( f ` x ) e. B ) } $.
  $}

  ${
    $d f A $.  $d f B $.  $d f x F $.
    $( Membership in an infinite Cartesian product.  See ~ df-ixp for
       discussion of the notation. $)
    elixp2 $p |- ( F e. X_ x e. A B <->
                ( F e. _V /\ F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vf cvv wcel cixp wa wfn cv cfv wral w3a wceq fneq1 fveq1 eleq1d 
      ralbidv anbi12d df-ixp elab2g pm5.32i elisset pm4.71ri 3anass 3bitr4i ) 
      DFGZDABCHZGZIUHDBJZAKZDLZCGZABMZIZIUJUHUKUONUHUJUPEKZBJZULUQLZCGZABMZIUPE
      DUIFUQDOZURUKVAUOBUQDPVBUTUNABVBUSUMCULUQDQRSTABCEUAUBUCUJUHDUIUDUEUHUKUO
      UFUG $.
      $( [28-Sep-2006] $)
  $}

  ${
    $d x F $.
    elixp.1 $e |- F e. _V $.
    $( Membership in an infinite Cartesian product. $)
    elixp $p |- ( F e. X_ x e. A B <->
                ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( cvv wcel wfn cv cfv wral w3a wa cixp 3anass elixp2 biantrur 3bitr4i ) 
      DFGZDBHZAIDJCGABKZLSTUAMZMDABCNGUBSTUAOABCDPSUBEQR $.
      $( [28-Sep-2006] $)

    ${
      $d x A $.  $d x B $.
      $( Membership in an infinite Cartesian product of a constant ` B ` . $)
      elixpconst $p |- ( F e. X_ x e. A B <-> F : A --> B ) $=
        ( cixp wcel wfn cv cfv wral wa wf elixp ffnfv bitr4i ) DABCFGDBHAIDJCGA
        BKLBCDMABCDENABCDOP $.
        $( [12-Apr-2008] $)
    $}
  $}

  ${
    $d f x A $.  $d f x B $.
    ixpconst.1 $e |- A e. _V $.
    ixpconst.2 $e |- B e. _V $.
    $( Infinite Cartesian product of a constant ` B ` . $)
    ixpconst $p |- X_ x e. A B = ( B ^m A ) $=
      ( vf cixp cv wf cab cmap co visset elixpconst abbi2i mapval eqtr4i ) ABCG
      ZBCFHZIZFJCBKLTFRABCSFMNOCBFEDPQ $.
      $( [12-Apr-2008] $)
  $}

  ${
    $d f x A $.  $d f x B $.  $d f C $.
    $( Equality theorem for infinite Cartesian product. $)
    ixpeq1 $p |- ( A = B -> X_ x e. A C = X_ x e. B C ) $=
      ( vf wceq cv wfn cfv wcel wral wa cab cixp fneq2 raleq anbi12d abbidv 
      df-ixp 3eqtr4g ) BCFZEGZBHZAGUBIDJZABKZLZEMUBCHZUDACKZLZEMABDNACDNUAUFUIE
      UAUCUGUEUHBCUBOUDABCPQRABDESACDEST $.
      $( [9-Jun-2007] $) $( [29-Sep-2006] $)
  $}

  ${
    $d f A $.  $d f B $.  $d f C $.  $d f x $.
    $( Subclass theorem for infinite Cartesian product. $)
    ss2ixp $p |- ( A. x e. A B C_ C -> X_ x e. A B C_ X_ x e. A C ) $=
      ( vf wss wral cixp cv wfn cfv wcel wa ssel ral2imi anim2d visset elixp 
      3imtr4g ssrdv ) CDFZABGZEABCHZABDHZUBEIZBJZAIUEKZCLZABGZMUFUGDLZABGZMUEUC
      LUEUDLUBUIUKUFUAUHUJABCDUGNOPABCUEEQZRABDUEULRST $.
      $( [29-Sep-2006] $)
  $}

  $( Equality theorem for infinite Cartesian product. $)
  ixpeq2 $p |- ( A. x e. A B = C -> X_ x e. A B = X_ x e. A C ) $=
    ( wss wral wa cixp wceq ss2ixp anim12i eqss ralbii r19.26 bitri 3imtr4i ) 
    CDEZABFZDCEZABFZGZABCHZABDHZEZUCUBEZGCDIZABFZUBUCIRUDTUEABCDJABDCJKUGQSGZAB
    FUAUFUHABCDLMQSABNOUBUCLP $.
    $( [16-Aug-2007] $) $( [29-Sep-2006] $)

  ${
    $d f x y A $.  $d f y B $.  $d x y F $.
    $( A member of an infinite Cartesian product maps to the indexed union of
       the product argument.  Remark in [Enderton] p. 54. $)
    ixpf $p |- ( F e. X_ x e. A B -> F : A --> U_ x e. A B ) $=
      ( vy cixp wcel cvv wfn cv cfv wral w3a ciun wf elixp2 wa ssiun2 sseld 
      ralimia anim2i ax-17 hbiu1 ffnfvf sylibr 3adant1 sylbi ) DABCFGDHGZDBIZAJ
      ZDKZCGZABLZMBABCNZDOZABCDPUIUMUOUHUIUMQUIUKUNGZABLZQUOUMUQUIULUPABUJBGCUN
      UKABCRSTUAAEBUNDEJZBGAUBAEBCUCURDGAUBUDUEUFUG $.
      $( [28-Sep-2006] $)

    $( The union of an infinite Cartesian product is included in a cross
       product. $)
    uniixp $p |- U. X_ x e. A B C_ ( A X. U_ x e. A B ) $=
      ( vy vf cixp cuni ciun cxp cv wcel wf wa wex eluni ixpf anim2i eximi 
      sylbi fssxp sseld impcom 19.23aiv syl ssriv ) DABCFZGZBABCHZIZDJZUGKZUJEJ
      ZKZBUHULLZMZENZUJUIKZUKUMULUFKZMZENUPEUJUFOUSUOEURUNUMABCULPQRSUOUQEUNUMU
      QUNULUIUJBUHULTUAUBUCUDUE $.
      $( [28-Sep-2006] $)

    $( The existence of an infinite Cartesian product. ` x ` is normally a
       free-variable parameter in ` B ` .  Remark in Enderton p. 54. $)
    ixpexg $p |- ( ( A e. C /\ A. x e. A B e. D ) -> X_ x e. A B e. _V ) $=
      ( wcel wral wa cixp cuni cvv ciun cxp wss ssexg uniixp iunexg xpexg 
      syldan sylancr uniexb sylibr ) BDFZCEFABGZHZABCIZJZKFZUFKFUGBABCLZMZNUJKF
      ZUHUEUGUJKOABCPUCUDUIKFUKABCDEQBUIDKRSTUFUAUB $.
      $( [28-Jun-2007] $) $( [28-Sep-2006] $)
  $}

  ${
    $d f A $.  $d f x $.
    $( An infinite Cartesian product with an empty index set. $)
    ixp0x $p |- X_ x e. (/) A = { (/) } $=
      ( vf c0 cixp cv wfn cfv wcel wral wa cab csn df-ixp wceq elsn fn0 ral0 
      biantru 3bitr2i abbi2i eqtr4i ) ADBECFZDGZAFUCHBIZADJZKZCLDMZADBCNUGCUHUC
      UHIUCDOUDUGCDPUCQUFUDUEARSTUAUB $.
      $( [21-Sep-2007] $)
  $}

  $( Membership of the empty set in an infinite Cartesian product.
     (Contributed by Steve Rodriguez, 29-Sep-2006.) $)
  0elixp $p |- (/) e. X_ x e. (/) A $=
    ( c0 csn cixp 0ex snid ixp0x eleqtrri ) CCDACBECFGABHI $.
    $( [29-Sep-2006] $)

  ${
    $d f A $.  $d f B $.  $d f x $.
    $( The infinite Cartesian product of a family ` B ( x ) ` with an empty
       member is empty. $)
    ixp0 $p |- ( E. x e. A B = (/) -> X_ x e. A B = (/) ) $=
      ( vf c0 wceq wrex cixp cv wfn cfv wcel wral wa wn wb pm5.21 n0i con2i 
      reximi rexnal sylib intnand noel sylancl visset elixp syl5bb eqrdv ) CEFZ
      ABGZDABCHZEUKDIZBJZAIUMKZCLZABMZNZUMELZUMULLUROUSOURUSPUKURUSQUKUQUNUKUPO
      ZABGUQOUJUTABUPUJCUORSTUPABUAUBUCUMUDUEABCUMDUFUGUHUI $.
      $( [1-Oct-2006] $)
  $}

  ${
    $d f x A $.  $d f B $.
    mapixp.1 $e |- A e. _V $.
    mapixp.2 $e |- B e. _V $.
    ${
      $d x B $.
      $( Express set exponentiation in terms of an infinite Cartesian product.
         Remark in [Stoll] p. 47.  Note that ` B ` is constant, i.e. ` x ` does
         not occur in ` B ` . $)
      mapixp $p |- ( B ^m A ) = X_ x e. A B $=
        ( vf cmap co cixp cv wf wfn cfv wcel wral wa ffnfv elmap visset elixp 
        3bitr4i eqriv ) FCBGHZABCIZBCFJZKUEBLAJUEMCNABOPUEUCNUEUDNABCUEQCBUEEDR
        ABCUEFSTUAUB $.
        $( [28-Sep-2006] $)
    $}

    $( An infinite Cartesian product is a subset of set exponentation.  Remark
       in [Enderton] p. 54. $)
    ixpssmap $p |- X_ x e. A B C_ ( U_ x e. A B ^m A ) $=
      ( vf cixp ciun cmap co cv wcel wf ixpf iunex elmap sylibr ssriv ) FABCGZA
      BCHZBIJZFKZSLBTUBMUBUALABCUBNTBUBABCDEODPQR $.
      $( [8-Jul-2007] $) $( [28-Sep-2006] $)
  $}

$(
  @{
    xpixp.1 @e |- P = X_ x e. { (/) , 1o } if ( x = (/) , A , B ) @.
    xpixp.1 @e |- P = X_ x e. 2o if ( x = (/) , A , B ) @.
    xpixp.1 @e |- P =
               X_ x e. { (/) , 1o } ( { <. (/) , A >. , <. 1o , B >. } ` x ) @.
    @( A cross product in terms of an infinite Cartesian product. @)
    xpixp @p |- ( A X. B ) =
                ( ran ( U. P |` { (/) } ) X. ran ( U. P |` { 1o } ) ) @=
?@.
      @( [ ?] @) @( [29-Sep-2006] @)
  @}

  @{
    ixpxp.1 @e |- P = ( A X. B ) @.
    @( An infinite Cartesian product in terms of a cross product. @)
    ixpxp @p |- X_ x e. { (/) , 1o } if ( x = (/) , A , B ) =
                { ( { (/) } X. dom P ) , ( { 1o } X. ran P ) } @=
?@.
      @( [ ?] @) @( [29-Sep-2006] @)
  @}
$)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Equinumerosity
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  $( Introduce new constant symbols. $)
  $c ~~ $.  $( Equinumerosity relation ("approximately equals" symbol) $)
  $c ~<_ $.  $( Dominance relation (curly less-than-or-equal) $)
  $c ~< $.  $( Strict dominance relation (curly less-than) $)
  $c Fin $.  $( Class of all finite sets. $)

  $( Extend class definition to include the equinumerosity relation
     ("approximately equals" symbol) $)
  cen $a class ~~ $.

  $( Extend class definition to include the dominance relation (curly
     less-than-or-equal) $)
  cdom $a class ~<_ $.

  $( Extend class definition to include the strict dominance relation (curly
     less-than) $)
  csdm $a class ~< $.

  $( Extend class definition to include the class of all finite sets. $)
  cfn $a class Fin $.

  ${
    $d x y f $.
    $( Define the equinumerosity relation.  Definition of [Enderton] p. 129.
       We define ` ~~ ` to be a binary relation rather than a connective, so
       its arguments must be sets to be meaningful.  This is acceptable because
       we do not consider equinumerosity for proper classes.  We derive the
       usual definition as ~ bren . $)
    df-en $a |- ~~ = { <. x , y >. | E. f f : x -1-1-onto-> y } $.

    $( Define the dominance relation.  For an alternate definition see
       ~ dfdom2 .  Compare Definition of [Enderton] p. 145.  Typical textbook
       definitions are derived as ~ brdom and ~ domen . $)
    df-dom $a |- ~<_ = { <. x , y >. | E. f f : x -1-1-> y } $.

    $( Define the strict dominance relation.  Alternate possible definitions
       are derived as ~ brsdom and ~ brsdom2 .  Definition 3 of [Suppes]
       p. 97. $)
    df-sdom $a |- ~< = ( ~<_ \ ~~ ) $.

    $( Define the (proper) class of all finite sets.  Similar to Definition
       10.29 of [TakeutiZaring] p. 91, whose "Fin(a)" corresponds to
       our " ` a e. Fin ` ".  This definition is meaningful whether or not we
       accept the Axiom of Infinity ~ ax-inf2 .  If we accept Infinity, we can
       also express ` A e. Fin ` by ` A ~< om ` (theorem ~ isfinite .) $)
    df-fin $a |- Fin = { x | E. y e. om x ~~ y } $.
  $}

  ${
    $d x y f $.  $d x y f $.
    $( Equinumerosity is a relation. $)
    relen $p |- Rel ~~ $=
      ( vx vy vf cen wrel cv wf1o wex copab relopab df-en releqi mpbir ) DEAFBF
      CFGCHZABIZENABJDOABCKLM $.
      $( [28-Mar-1998] $)

    $( Dominance is a relation. $)
    reldom $p |- Rel ~<_ $=
      ( vx vy vf cdom wrel cv wf1 wex copab relopab df-dom releqi mpbir ) DEAFB
      FCFGCHZABIZENABJDOABCKLM $.
      $( [28-Mar-1998] $)
  $}

  $( Strict dominance is a relation. $)
  relsdom $p |- Rel ~< $=
    ( cdom wrel csdm reldom cen cdif reldif df-sdom releqi sylibr ax-mp ) ABZCB
    ZDLAEFZBMAEGCNHIJK $.
    $( [31-Mar-1998] $)

  ${
    $d f x y A $.  $d f x y B $.  $d y C $.
    $( Equinumerosity relation. $)
    breng $p |- ( B e. C -> ( A ~~ B <-> E. f f : A -1-1-onto-> B ) ) $=
      ( vx vy cvv wcel cen wbr cv wf1o wex wb wi wceq f1oeq2 exbidv f1oeq3 
      df-en brabg ex wn relen brrelexi wfn f1ofn cdm fndm visset dmex 
      syl6eqelr syl 19.23aiv pm5.21ni a1d pm2.61i ) AGHZBCHZABIJZABDKZLZDMZNZOU
      RUSVDEKZFKZVALZDMAVFVALZDMVCEFABGCIVEAPVGVHDVEAVFVAQRVFBPVHVBDVFBAVASREFD
      TUAUBURUCVDUSUTURVCABIUDUEVBURDVBVAAUFZURABVAUGVIAVAUHGAVAUIVADUJUKULUMUN
      UOUPUQ $.
      $( [15-Jun-1998] $)

    $( Dominance relation. $)
    brdomg $p |- ( B e. C -> ( A ~<_ B <-> E. f f : A -1-1-> B ) ) $=
      ( vx vy cvv wcel cdom wbr cv wf1 wex wb wi wceq f1eq2 exbidv f1eq3 
      df-dom brabg ex wn reldom brrelexi wf f1f cdm fdm visset dmex syl6eqelr 
      syl 19.23aiv pm5.21ni a1d pm2.61i ) AGHZBCHZABIJZABDKZLZDMZNZOURUSVDEKZFK
      ZVALZDMAVFVALZDMVCEFABGCIVEAPVGVHDVEAVFVAQRVFBPVHVBDVFBAVASREFDTUAUBURUCV
      DUSUTURVCABIUDUEVBURDVBABVAUFZURABVAUGVIAVAUHGABVAUIVADUJUKULUMUNUOUPUQ 
      $.
      $( [15-Jun-1998] $)
  $}

  ${
    $d f x y A $.  $d f x y B $.  $d f w x y z $.
    bren.1 $e |- B e. _V $.
    $( Equinumerosity relation.  Compare Definition of [Enderton] p. 129. $)
    bren $p |- ( A ~~ B <-> E. f f : A -1-1-onto-> B ) $=
      ( cvv wcel cen wbr cv wf1o wex wb breng ax-mp ) BEFABGHABCIJCKLDABECMN $.
      $( [15-Jun-1998] $)

    $( Dominance relation. $)
    brdom $p |- ( A ~<_ B <-> E. f f : A -1-1-> B ) $=
      ( cvv wcel cdom wbr cv wf1 wex wb brdomg ax-mp ) BEFABGHABCIJCKLDABECMN 
      $.
      $( [15-Jun-1998] $)

    $( Dominance in terms of equinumerosity.  Example 1 of [Enderton]
       p. 146. $)
    domen $p |- ( A ~<_ B <-> E. x ( A ~~ x /\ x C_ B ) ) $=
      ( vf cv wf1 wex wf1o wss wa cdom wbr cen visset f11o exbii excom bitri 
      brdom bren anbi1i 19.41v bitr4i 3bitr4i ) BCEFZGZEHZBAFZUFIZUICJZKZEHZAHZ
      BCLMBUINMZUKKZAHUHULAHZEHUNUGUQEABCUFEOPQULEARSBCEDTUPUMAUPUJEHZUKKUMUOUR
      UKBUIEAOUAUBUJUKEUCUDQUE $.
      $( [15-Jun-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Dominance in terms of equinumerosity, with the sethood requirement
       expressed as an antecedent.  Example 1 of [Enderton] p. 146. $)
    domeng $p |- ( B e. C -> ( A ~<_ B <-> E. x ( A ~~ x /\ x C_ B ) ) ) $=
      ( vy cv cdom wbr cen wss wa wex breq2 wceq sseq2 anbi2d exbidv visset 
      domen vtoclbg ) BEFZGHBAFZIHZUBUAJZKZALBCGHUCUBCJZKZALECDUACBGMUACNZUEUGA
      UHUDUFUCUACUBOPQABUAERST $.
      $( [24-Apr-2004] $)
  $}

  $( Strict dominance relation, meaning " ` B ` is strictly greater in size
     than ` A ` ."  Definition of [Mendelson] p. 255. $)
  brsdom $p |- ( A ~< B <-> ( A ~<_ B /\ -. A ~~ B ) ) $=
    ( cop csdm wcel cdom cen cdif wbr wn wa df-sdom eleq2i df-br notbii 
    anbi12i eldif bitr4i 3bitr4i ) ABCZDETFGHZEZABDIABFIZABGIZJZKZDUATLMABDNUFT
    FEZTGEZJZKUBUCUGUEUIABFNUDUHABGNOPTFGQRS $.
    $( [25-Jun-1998] $)

  ${
    $d x y f A $.
    $( Express " ` A ` is finite."  Definition 10.29 of [TakeutiZaring] p. 91
       (whose " ` Fin ` " is a predicate instead of a class). $)
    isfi $p |- ( A e. Fin <-> E. x e. om A ~~ x ) $=
      ( vy cfn wcel cv cen wbr com wrex cab df-fin eleq2i cvv wi relen 
      brrelexi a1i r19.23aiv wceq breq1 rexbidv elab3 bitri ) BDEBCFZAFZGHZAIJZ
      CKZEBUFGHZAIJZDUIBCALMUHUKCBUJBNEZAIUJULOUFIEBUFGPQRSUEBTUGUJAIUEBUFGUAUB
      UCUD $.
      $( [22-Aug-2008] $)

    $( Equinumerosity implies dominance. $)
    enssdom $p |- ~~ C_ ~<_ $=
      ( vx vy vf cen cdom relen cv cop wf1o wex copab wcel wf1 f1of1 eximi 
      opabid 3imtr4i df-en eleq2i df-dom relssi ) ABDEFAGZBGZHZUBUCCGZIZCJZABKZ
      LZUDUBUCUEMZCJZABKZLZUDDLUDELUGUKUIUMUFUJCUBUCUENOUGABPUKABPQDUHUDABCRSEU
      LUDABCTSQUA $.
      $( [31-Mar-1998] $)
  $}

  $( Alternate definition of dominance. $)
  dfdom2 $p |- ~<_ = ( ~< u. ~~ ) $=
    ( cen csdm cun cdom cdif df-sdom uneq2i uncom wss wceq enssdom undif mpbi 
    3eqtr3ri ) ABCADAEZCZBACDBOAFGABHADIPDJKADLMN $.
    $( [17-Jun-1998] $)

  $( Equinumerosity implies dominance.  Theorem 15 of [Suppes] p. 94. $)
  endom $p |- ( A ~~ B -> A ~<_ B ) $=
    ( cen cdom enssdom ssbri ) CDABEF $.
    $( [28-May-1998] $)

  $( Strict dominance implies dominance. $)
  sdomdom $p |- ( A ~< B -> A ~<_ B ) $=
    ( csdm wbr cdom cen wn brsdom simplbi ) ABCDABEDABFDGABHI $.
    $( [10-Jun-1998] $)

  $( Strict dominance implies non-equinumerosity. $)
  sdomnen $p |- ( A ~< B -> -. A ~~ B ) $=
    ( csdm wbr cdom cen wn brsdom simprbi ) ABCDABEDABFDGABHI $.
    $( [10-Jun-1998] $)

  $( Dominance in terms of strict dominance and equinumerosity.  Theorem 22(iv)
     of [Suppes] p. 97. $)
  brdom2 $p |- ( A ~<_ B <-> ( A ~< B \/ A ~~ B ) ) $=
    ( cop cdom wcel csdm cen cun wbr wo dfdom2 eleq2i df-br orbi12i elun 
    bitr4i 3bitr4i ) ABCZDERFGHZEZABDIABFIZABGIZJZDSRKLABDMUCRFEZRGEZJTUAUDUBUE
    ABFMABGMNRFGOPQ $.
    $( [17-Jun-1998] $)

  $( Equinumerosity expressed in terms of dominance and strict dominance. $)
  bren2 $p |- ( A ~~ B <-> ( A ~<_ B /\ -. A ~< B ) ) $=
    ( cen wbr cdom csdm wn wa endom sdomnen con2i jca wo brdom2 biimpi orcanai 
    impbii ) ABCDZABEDZABFDZGZHRSUAABITRABJKLSTRSTRMABNOPQ $.
    $( [23-Oct-2004] $)

  ${
    $d f A $.
    $( Equinumerosity is reflexive.  Theorem 1 of [Suppes] p. 92. $)
    enrefg $p |- ( A e. B -> A ~~ A ) $=
      ( vf wcel cen wbr cv wf1o wex cid cres cvv resiexg f1oi f1oeq1 cla4egv 
      mpi syl breng mpbird ) ABDZAAEFAACGZHZCIZUAJAKZLDZUDABMUFAAUEHZUDANUCUGCU
      ELAAUBUEOPQRAABCST $.
      $( [20-Jan-2007] $) $( [18-Jun-1998] $)
  $}

  ${
    enref.1 $e |- A e. _V $.
    $( Equinumerosity is reflexive.  Theorem 1 of [Suppes] p. 92. $)
    enref $p |- A ~~ A $=
      ( cvv wcel cen wbr enrefg ax-mp ) ACDAAEFBACGH $.
      $( [25-Sep-2004] $)
  $}

  $( Equality implies equinumerosity. $)
  eqeng $p |- ( A e. C -> ( A = B -> A ~~ B ) ) $=
    ( wceq cen wbr wcel breq2 enrefg syl5cbi ) ABDAAEFABEFACGABAEHACIJ $.
    $( [26-Oct-2003] $)

  $( Dominance is reflexive. $)
  domrefg $p |- ( A e. B -> A ~<_ A ) $=
    ( wcel cen wbr cdom enrefg endom syl ) ABCAADEAAFEABGAAHI $.
    $( [18-Jun-1998] $)

  ${
    $d f A $.  $d f B $.  $d f F $.
    $( The domain and range of a one-to-one, onto function are equinumerous.
       This variation of ~ f1oeng does not require the Axiom of Replacement. $)
    f1oen2g $p |- ( ( F e. C /\ F : A -1-1-onto-> B ) -> A ~~ B ) $=
      ( vf wcel wf1o wa cvv cv wex cen wbr wf dmfex f1of sylan2 f1oeq1 cla4egv 
      imp wi wn brprc enrefg syl5bir a1d com3r breng biimprd pm2.61d2 sylc ) DC
      FZABDGZHAIFZABEJZGZEKZABLMZULABDNUNUMABCDOABDPQULUMUQUPUMEDCABUODRSTUNBIF
      ZUQURUAUSUBZUQUNURUTUNURUAUQUTURAALMUNABLUCAIUDUEUFUGUSURUQABIEUHUIUJUK 
      $.
      $( [13-Jan-2007] $)

    $( The domain and range of a one-to-one, onto function are equinumerous. $)
    f1oeng $p |- ( ( A e. C /\ F : A -1-1-onto-> B ) -> A ~~ B ) $=
      ( wcel wf1o cvv cen wbr wfn fnex ancoms f1ofn sylan2 f1oen2g sylancom ) 
      ACEZABDFZDGEZABHIQDAJZSRTQSACDKLABDMNABGDOP $.
      $( [30-Jan-2007] $) $( [19-Jun-1998] $)

    $( The domain of a one-to-one function is dominated by its codomain. $)
    f1domg $p |- ( A e. C -> ( F : A -1-1-> B -> A ~<_ B ) ) $=
      ( vf wcel wf1 cv wex cdom wbr cvv wf fex f1f sylan expcom f1eq1 cla4egv 
      syli wi wn brprc domrefg syl5bir a1d com3r brdomg biimprd pm2.61d2 syld 
      ) ACFZABDGZABEHZGZEIZABJKZUMULDLFZUPUMULURABDMULURUMABCDNABDOPQUOUMEDLABU
      NDRSTULBLFZUPUQUAUSUBZUPULUQUTULUQUAUPUTUQAAJKULABJUCACUDUEUFUGUSUQUPABLE
      UHUIUJUK $.
      $( [18-Jun-1998] $)

    $( The domain of a one-to-one function is dominated by its codomain. $)
    f1dom2g $p |- ( B e. C -> ( F : A -1-1-> B -> A ~<_ B ) ) $=
      ( wf1 wcel cvv cdom wbr f1dmex expcom f1domg syli ) ABDEZBCFZAGFZABHINOPA
      BCDJKABGDLM $.
      $( [4-Sep-2004] $)
  $}

  ${
    f1oen.1 $e |- A e. _V $.
    $( The domain and range of a one-to-one, onto function are equinumerous. $)
    f1oen $p |- ( F : A -1-1-onto-> B -> A ~~ B ) $=
      ( cvv wcel wf1o cen wbr f1oeng mpan ) AEFABCGABHIDABECJK $.
      $( [19-Jun-1998] $)

    $( The domain of a one-to-one function is dominated by its codomain. $)
    f1dom $p |- ( F : A -1-1-> B -> A ~<_ B ) $=
      ( cvv wcel wf1 cdom wbr wi f1domg ax-mp ) AEFABCGABHIJDABECKL $.
      $( [19-Jun-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.  $d x y ph $.
    en2d.1 $e |- ( ph -> A e. _V ) $.
    en2d.2 $e |- ( ph -> ( x e. A -> C e. _V ) ) $.
    en2d.3 $e |- ( ph -> ( y e. B -> D e. _V ) ) $.
    en2d.4 $e |- ( ph -> ( ( x e. A /\ y = C ) <-> ( y e. B /\ x = D ) ) ) $.
    $( Equinumerosity inference from an implicit one-to-one onto function. $)
    en2d $p |- ( ph -> A ~~ B ) $=
      ( cvv wcel cv wceq wa copab wf1o cen wbr wfn ccnv dff1o4 weu wral eueq 
      syl6ib r19.21aiv eqid fnopabg sylib opabbidv fneq1d mpbid cnvopab 
      sylanbrc f1oeng syl11anc ) ADLMDECNZEMZBNZGOZPZBCQZRZDESTHVEVDDUAZVDUBZEU
      AZADEVDUCAVADMZUSFOZPZBCQZDUAZVFAVJCUDZBDUEVMAVNBDAVIFLMVNICFUFUGUHVJBCDV
      LVLUIUJUKADVLVDAVKVCBCKULUMUNAVBBUDZCEUEVHAVOCEAUTGLMVOJBGUFUGUHVBCBEVGVC
      BCUOUJUKUPDELVDUQUR $.
      $( [27-Jul-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.  $d x y ph $.
    en3d.1 $e |- ( ph -> A e. _V ) $.
    en3d.2 $e |- ( ph -> ( x e. A -> C e. B ) ) $.
    en3d.3 $e |- ( ph -> ( y e. B -> D e. A ) ) $.
    en3d.4 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ( x = D <-> y = C ) ) ) $.
    $( Equinumerosity inference from an implicit one-to-one onto function. $)
    en3d $p |- ( ph -> A ~~ B ) $=
      ( cv wcel cvv elisset syl6 wceq wa wi eleq1a imp32 wb imp biimpar exp42 
      com34 jcai biimpa com23 impbida en2d ) ABCDEFGHABLZDMZFEMZFNMIFEOPACLZEMZ
      GDMZGNMJGDOPAUMUOFQZRZUPULGQZRZAUSRUPUTAUMURUPAUMUNURUPSIFEUOTPUAAUMURUPU
      TSAUMUPURUTAUMUPURUTAUMUPRZRZUTURAVBUTURUBKUCZUDUEUFUAUGAVARUMURAUPUTUMAU
      PUQUTUMSJGDULTPUAAUPUTUMURSAUPUMUTURAUMUPUTURSAUMUPUTURVCUTURVDUHUEUIUFUA
      UGUJUK $.
      $( [27-Jul-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    en2.1 $e |- A e. _V $.
    en2.2 $e |- ( x e. A -> C e. _V ) $.
    en2.3 $e |- ( y e. B -> D e. _V ) $.
    en2.4 $e |- ( ( x e. A /\ y = C ) <-> ( y e. B /\ x = D ) ) $.
    $( Equinumerosity inference from an implicit one-to-one onto function. $)
    en2 $p |- A ~~ B $=
      ( wceq cen wbr eqid cvv wcel a1i cv wi wa wb en2d ax-mp ) CCKZCDLMCNUDABC
      DEFCOPUDGQARZCPZEOPSUDHQBRZDPZFOPSUDIQUFUGEKTUHUEFKTUAUDJQUBUC $.
      $( [4-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    en3.1 $e |- A e. _V $.
    en3.2 $e |- ( x e. A -> C e. B ) $.
    en3.3 $e |- ( y e. B -> D e. A ) $.
    en3.4 $e |- ( ( x e. A /\ y e. B ) -> ( x = D <-> y = C ) ) $.
    $( Equinumerosity inference from an implicit one-to-one onto function. $)
    en3 $p |- A ~~ B $=
      ( wceq cen wbr eqid cvv wcel a1i cv wi wa wb en3d ax-mp ) CCKZCDLMCNUDABC
      DEFCOPUDGQARZCPZEDPSUDHQBRZDPZFCPSUDIQUFUHTUEFKUGEKUASUDJQUBUC $.
      $( [19-Jul-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d y z C $.  $d x z D $.  $d x y ph $.
    dom2d.1 $e |- ( ph -> ( x e. A -> C e. B ) ) $.
    dom2d.2 $e |- ( ph -> ( ( x e. A /\ y e. A ) -> ( C = D <-> x = y ) ) ) $.
    $( A mapping (first hypothesis) that is one-to-one (second hypothesis)
       implies its domain is dominated by its codomain. $)
    dom2d $p |- ( ph -> ( A e. R -> A ~<_ B ) ) $=
      ( vz wcel cv wceq wa copab wf1 cdom wbr f1domg wf cfv wi wral hbopab1 
      hbopab2 dff13f r19.21aiv eqid fopab2 sylib imp fvopab2 adantll mpdan 
      adantrr ax-17 hbfv hbeq hbim eleq1 anbi2d imbi1d wb anbi1d anidm syl6bb 
      fveq2 adantr biimparc eqeq12d ex sylbird pm5.74d bitrd chvar adantrl 
      biimpd sylbid r19.21aivv sylanbrc syl5com ) DHLDEBMZDLZCMZFNOZBCPZQZDERSA
      DEHWGTWHDEWGUAZWCWGUBZWEWGUBZNZWCWENZUCZCDUDBDUDABCKDEWGWFBCKUEZWFBCKUFUG
      AFELZBDUDWIAWPBDIUHBCDEFWGWGUIUJUKAWNBCDDAWDWEDLZOZWNAWROZWLFGNZWMWSWJFWK
      GAWDWJFNZWQAWDOZWPXAAWDWPIULWDWPXAABCDFEUMUNUOZUPAWQWKGNZWDXBXAUCZAWQOZXD
      UCZBCXFXDBXFBUQBKKWKGBKWEWGWOKMZWELBUQURXHGLBUQUSUTWMXEXFXAUCXGWMXBXFXAWM
      WDWQAWCWEDVAZVBVCWMXFXAXDWMXFWSXAXDVDZWMWRWQAWMWRWQWQOWQWMWDWQWQXIVEWQVFV
      GVBWMWSXJWMWSOWJWKFGWMWLWSWCWEWGVHVIWSWTWMAWRWTWMVDJULZVJVKVLVMVNVOXCVPVQ
      VKWSWTWMXKVRVSVLVTWAWB $.
      $( [24-Jul-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    dom2.1 $e |- ( x e. A -> C e. B ) $.
    dom2.2 $e |- ( ( x e. A /\ y e. A ) -> ( C = D <-> x = y ) ) $.
    $( A mapping (first hypothesis) that is one-to-one (second hypothesis)
       implies its domain is dominated by its codomain. ` C ` and ` D ` can be
       read ` C ( x ) ` and ` D ( y ) ` , as can be shown from their distinct
       variable conditions. $)
    dom2 $p |- ( A e. R -> A ~<_ B ) $=
      ( wceq wcel cdom wbr wi eqid cv a1i wa wb dom2d ax-mp ) CCJZCGKCDLMNCOUBA
      BCDEFGAPZCKZEDKNUBHQUDBPZCKREFJUCUEJSNUBIQTUA $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( Equality implies equinumerosity. $)
    idssen $p |- _I C_ ~~ $=
      ( vx vy cid cen reli cv wbr cop wcel wceq visset ideq cres wf1o f1oi 
      f1oeq3 mpbii f1oen syl sylbi df-br 3imtr3i relssi ) ABCDEAFZBFZCGZUDUEDGZ
      UDUEHZCIUHDIUFUDUEJZUGUDUEBKLUIUDUECUDMZNZUGUIUDUDUJNUKUDOUDUEUDUJPQUDUEU
      JAKRSTUDUECUAUDUEDUAUBUC $.
      $( [30-Apr-1998] $)
  $}

  $( The domain of equinumerosity. $)
  dmen $p |- dom ~~ = _V $=
    ( cvv cen cdm wss wceq cid idssen dmss dmi syl5ssr ax-mp vss mpbi ) ABCZDZN
    AEFBDZOGPFCNAFBHIJKNLM $.
    $( [10-May-1998] $)

  ${
    $d x A $.  $d x B $.
    $( A set dominates its subsets.  Theorem 16 of [Suppes] p. 94. $)
    ssdomg $p |- ( A e. C -> ( A C_ B -> A ~<_ B ) ) $=
      ( wcel cid cres wf1 cdom wbr wss f1domg wf ccnv wfun wa wfo wf1o f1oi 
      dff1o3 mpbi simpli fof ax-mp fss mpan funi wceq wb cnvi funeq mpbir 
      funres11 jctir df-f1 sylibr syl5 ) ACDABEAFZGZABHIABJZABCUQKUSABUQLZUQMNZ
      OURUSUTVAAAUQLZUSUTAAUQPZVBVCVAAAUQQVCVAOARAAUQSTUAAAUQUBUCAABUQUDUEEMZNZ
      VAVEENZUFVDEUGVEVFUHUIVDEUJUCUKAEULUCUMABUQUNUOUP $.
      $( [19-Jun-1998] $)
  $}

  $( A set dominates its subsets.  Theorem 16 of [Suppes] p. 94. $)
  ssdom2g $p |- ( B e. C -> ( A C_ B -> A ~<_ B ) ) $=
    ( wss wcel cvv cdom wbr ssexg expcom ssdomg syli ) ABDZBCEZAFEZABGHMNOABCIJ
    ABFKL $.
    $( [19-Jun-1998] $)

  ${
    $d f g x y z $.
    $( Equinumerosity is an equivalence relation. $)
    ener $p |- Er ~~ $=
      ( vx vy vz vf vg cen cv wbr wf1o wex visset bren ccnv f1ocnv f1oen syl 
      19.23aiv sylbi wa eeanv ccom f1oco ancoms 19.23aivv sylbir syl2anb ster 
      ) ABCFAGZBGZFHZUHUIDGZIZDJUIUHFHZUHUIDBKZLULUMDULUIUHUKMZIUMUHUIUKNUIUHUO
      UNOPQRUHUIEGZIZEJZUICGZUKIZDJZUHUSFHZUJUIUSFHURVASUQUTSZDJEJVBUQUTEDTVCVB
      EDVCUHUSUKUPUAZIZVBUTUQVEUHUIUSUKUPUBUCUHUSVDAKOPUDUEUHUIEUNLUIUSDCKLUFUG
      $.
      $( [19-Mar-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Symmetry of equinumerosity.  Theorem 2 of [Suppes] p. 92. $)
    ensymg $p |- ( B e. C -> ( A ~~ B -> B ~~ A ) ) $=
      ( vx vy wcel cen wbr cvv wi relen brrelexi cv wceq breq1 breq2 imbi12d 
      visset ener ersym vtocl2g ex syl pm2.43b ) BCFZABGHZBAGHZUFAIFZUEUFUGJZJA
      BGKLUHUEUIDMZEMZGHZUKUJGHZJAUKGHZUKAGHZJUIDEABICUJANULUNUMUOUJAUKGOUJAUKG
      PQUKBNUNUFUOUGUKBAGPUKBAGOQUJUKGDRERSTUAUBUCUD $.
      $( [26-Oct-2003] $)
  $}

  ${
    ensym.1 $e |- B e. _V $.
    $( Symmetry of equinumerosity.  Theorem 2 of [Suppes] p. 92. $)
    ensym $p |- ( A ~~ B -> B ~~ A ) $=
      ( cvv wcel cen wbr wi ensymg ax-mp ) BDEABFGBAFGHCABDIJ $.
      $( [25-Sep-2004] $)
    ${
      ensymi.2 $e |- A ~~ B $.
      $( Symmetry of equinumerosity.  Theorem 2 of [Suppes] p. 92. $)
      ensymi $p |- B ~~ A $=
        ( cen wbr ensym ax-mp ) ABEFBAEFDABCGH $.
        $( [25-Sep-2004] $)
    $}
  $}

  ${
    $d x y z f g h A $.  $d x y z f g B $.  $d x y z f g h C $.
    $( Transitivity of equinumerosity.  Theorem 3 of [Suppes] p. 92. $)
    entr $p |- ( ( A ~~ B /\ B ~~ C ) -> A ~~ C ) $=
      ( vx vy vz cen relen cv visset ener ertr enref vtoclrbr ) DEFABCGHDIZEIFI
      GDJZEJFJKLOPMN $.
      $( [9-Jun-1998] $)

    $( Transitivity of dominance relation.  Theorem 17 of [Suppes] p. 94. $)
    domtr $p |- ( ( A ~<_ B /\ B ~<_ C ) -> A ~<_ C ) $=
      ( vx vy vz vg vf cdom reldom cv wf1 wex wbr wa eeanv ccom f1co ancoms 
      visset f1dom syl 19.23aivv sylbir brdom syl2anb cvv wcel domrefg ax-mp 
      vtoclrbr ) DEFABCIJDKZEKZGKZLZGMZUMFKZHKZLZHMZULUQINZULUMINUMUQINUPUTOUOU
      SOZHMGMVAUOUSGHPVBVAGHVBULUQURUNQZLZVAUSUOVDULUMUQURUNRSULUQVCDTZUAUBUCUD
      ULUMGETUEUMUQHFTUEUFULUGUHULULINVEULUGUIUJUK $.
      $( [4-Jun-1998] $)
  $}

  ${
    entri.1 $e |- A ~~ B $.
    entri.2 $e |- B ~~ C $.
    $( A chained equinumerosity inference. $)
    entri $p |- A ~~ C $=
      ( cen wbr entr mp2an ) ABFGBCFGACFGDEABCHI $.
      $( [25-Sep-2004] $)
  $}

  ${
    entr2i.1 $e |- C e. _V $.
    entr2i.2 $e |- A ~~ B $.
    entr2i.3 $e |- B ~~ C $.
    $( A chained equinumerosity inference. $)
    entr2i $p |- C ~~ A $=
      ( entri ensymi ) ACDABCEFGH $.
      $( [25-Sep-2004] $)
  $}

  ${
    entr3i.1 $e |- B e. _V $.
    entr3i.2 $e |- A ~~ B $.
    entr3i.3 $e |- A ~~ C $.
    $( A chained equinumerosity inference. $)
    entr3i $p |- B ~~ C $=
      ( ensymi entri ) BACABDEGFH $.
      $( [25-Sep-2004] $)
  $}

  ${
    entr4i.1 $e |- B e. _V $.
    entr4i.2 $e |- A ~~ B $.
    entr4i.3 $e |- C ~~ B $.
    $( A chained equinumerosity inference. $)
    entr4i $p |- A ~~ C $=
      ( ensymi entri ) ABCECBDFGH $.
      $( [25-Sep-2004] $)
  $}

  $( Transitivity of equinumerosity and dominance. $)
  endomtr $p |- ( ( A ~~ B /\ B ~<_ C ) -> A ~<_ C ) $=
    ( cdom wbr cen domtr endom sylan ) ABDEBCDEACDEABFEABCGABHI $.
    $( [7-Jun-1998] $)

  $( Transitivity of dominance and equinumerosity. $)
  domentr $p |- ( ( A ~<_ B /\ B ~~ C ) -> A ~<_ C ) $=
    ( cdom wbr cen domtr endom sylan2 ) ABDEBCDEACDEBCFEABCGBCHI $.
    $( [7-Jun-1998] $)

  ${
    f1imaen.1 $e |- C e. _V $.
    $( A one-to-one function's image under a subset of its domain is
       equinumerous to the subset. $)
    f1imaen $p |- ( ( F : A -1-1-> B /\ C C_ A ) -> ( F " C ) ~~ C ) $=
      ( wf1 wss wa cima cres wf1o cen wbr f1ores f1oen wfo cvv wcel wi f1ofo 
      fornex ax-mp ensymg 3syl mpd syl ) ABDFCAGHCDCIZDCJZKZUGCLMZABCDNUICUGLMZ
      UJCUGUHEOUICUGUHPZUGQRZUKUJSCUGUHTCQRULUMSECUGQUHUAUBCUGQUCUDUEUF $.
      $( [30-Sep-2004] $)
  $}

  ${
    $d f A $.
    $( The empty set is equinumerous only to itself.  Exercise 1 of
       [TakeutiZaring] p. 88. $)
    en0 $p |- ( A ~~ (/) <-> A = (/) ) $=
      ( vf c0 cen wbr wceq cv wf1o wex 0ex bren ccnv f1ocnv f1o00 simprbi syl 
      19.23aiv sylbi enref breq1 mpbiri impbii ) ACDEZACFZUCACBGZHZBIUDACBJKUFU
      DBUFCAUELZHZUDACUEMUHUGCFUDAUGNOPQRUDUCCCDECJSACCDTUAUB $.
      $( [27-May-1998] $)
  $}

  ${
    $d f A $.
    ensn1.1 $e |- A e. _V $.
    $( A singleton is equinumerous to ordinal one. $)
    ensn1 $p |- { A } ~~ 1o $=
      ( vf csn c0 c1o cen wbr cv wf1o wex cop 0ex f1osn snex f1oeq1 cla4ev 
      ax-mp p0ex bren mpbir df1o2 breqtrri ) ADZEDZFGUDUEGHUDUECIZJZCKZUDUEAELZ
      DZJZUHAEBMNUGUKCUJUIOUDUEUFUJPQRUDUECSTUAUBUC $.
      $( [4-Nov-2002] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A singleton is equinumerous to ordinal one. $)
    ensn1g $p |- ( A e. B -> { A } ~~ 1o ) $=
      ( vx cv csn c1o cen wbr wceq sneq breq1d visset ensn1 vtoclg ) CDZEZFGHAE
      ZFGHCABOAIPQFGOAJKOCLMN $.
      $( [23-Apr-2004] $)
  $}

  ${
    $d x f A $.
    $( A set is equinumerous to ordinal one iff it is a singleton. $)
    en1 $p |- ( A ~~ 1o <-> E. x A = { x } ) $=
      ( vf c1o cen wbr cv csn wceq wex c0 wf1o df1o2 breq2i p0ex bren bitri 
      ccnv cfv f1ocnv crn wfo f1ofo forn syl cop wf f1of wcel 0ex fsn2 simprbi 
      rneqd fvex rnsnop syl6eq eqtr3d sneq eqeq2d cla4ev 3syl 19.23aiv sylbi 
      visset ensn1 breq1 mpbiri impbii ) BDEFZBAGZHZIZAJZVIBKHZCGZLZCJZVMVIBVNE
      FVQDVNBEMNBVNCOPQVPVMCVPVNBVORZLZBKVRSZHZIZVMBVNVOTVSVRUAZBWAVSVNBVRUBWCB
      IVNBVRUCVNBVRUDUEVSWCKVTUFHZUAWAVSVRWDVSVNBVRUGZVRWDIZVNBVRUHWEVTBUIWFKBV
      RUJUKULUEUMKVTUJKVRUNZUOUPUQVLWBAVTWGVJVTIVKWABVJVTURUSUTVAVBVCVLVIAVLVIV
      KDEFVJAVDVEBVKDEVFVGVBVH $.
      $( [25-Jul-2004] $)
  $}

  ${
    $d x y f A $.
    2dom.1 $e |- A e. _V $.
    $( A set that dominates ordinal 2 has at least 2 different members. $)
    2dom $p |- ( 2o ~<_ A -> E. x e. A E. y e. A -. x = y ) $=
      ( vf c2o cdom wbr c0 csn cpr cv wf1 wex wceq wn wrex df2o2 breq1i brdom 
      bitri cfv wcel wf ffvelrn f1f 0ex prid1 sylancl p0ex prid2 wne 0nep0 
      df-ne mpbi wb f1fveq mpanr12 mtbiri eqeq1 notbid eqeq2 rcla42ev 
      syl111anc 19.23aiv sylbi ) FCGHZIIJZKZCELZMZENZALZBLZOZPZBCQACQZVGVICGHVL
      FVICGRSVICEDTUAVKVQEVKIVJUBZCUCZVHVJUBZCUCZVRVTOZPZVQVICVJUDZIVIUCZVSVKVI
      CIVJUEVICVJUFZIVHUGUHZUIWDVHVIUCZWAVKVICVHVJUEWFIVHUJUKZUIVKWBIVHOZIVHULW
      JPUMIVHUNUOVKWEWHWBWJUPWGWIVICIVHVJUQURUSVPWCVRVNOZPABVRVTCCVMVROVOWKVMVR
      VNUTVAVNVTOWKWBVNVTVRVBVAVCVDVEVF $.
      $( [25-Jul-2004] $)
  $}

  ${
    $d x y z w F $.
    fundmen.1 $e |- F e. _V $.
    $( A function is equinumerous to its domain.  Exercise 4 of [Suppes]
       p. 98. $)
    fundmen $p |- ( Fun F -> dom F ~~ F ) $=
      ( vx vy vz vw wfun cdm cv cfv cop cint cvv wcel dmex a1i funfvop ex wrel 
      wi funrel elreldm syl wa wceq wb wex cxp wss ssel2 df-rel sylib sylan 
      elvv eqeq1 inteq inteqd visset op1stb syl6eq syl5bir opeq1 syl6 imp 
      eqeq2 biimprcd adantl mpd ancoms eleq1d funopfv adantr sylbid exp32 
      com24 imp43 opeq2d eqtr4d 19.23advv adantrl syl6req impbid1 en3d ) AGZCDA
      HZACIZWFAJZKZDIZLZLZWEMNWDABOPWDWFWENZWHANWFAQRWDASZWIANZWKWENZTAUAZWMWNW
      OAWIUBRUCWDWLWNUDZWFWKUEZWIWHUEZUFWDWQUDWRWSWDWNWRWSTZWLWDWNUDZWIEIZFIZKZ
      UEZFUGEUGZWTXAWIMMUHZNZXFAXGUIZWNXHWDAXGWIUJWDWMXIWPAUKULUMEFWIUNULXAXEWT
      EFXAXEWRWSXAXEWRUDZUDZWIWFXCKZWHXJWIXLUEZXAWRXEXMWRXEUDZXLXDUEZXMWRXEXOWR
      XEWFXBUEZXOWRXPWKXBUEXEWFWKXBUOXEWKXDLZLXBXEWJXQWIXDUPUQXBXCEURUSUTVAWFXB
      XCVBVCVDXEXOXMTWRXOXMXEXLXDWIVEVFVGVHZVIVGXKWGXCWFWDWNXEWRWGXCUEZWDWRXEWN
      XSWDWRXEWNXSTWDXNUDWNXLANZXSXNWNXTUFWDXNWIXLAXRVJVGWDXTXSTXNWFXCAFURVKVLV
      MVNVOVPVQVRVNVSVHVTWSWKWHLZLWFWSWJYAWIWHUPUQWFWGCURUSWAWBRWC $.
      $( [28-Jul-2004] $)
  $}

  $( A function is equinumerate to its domain.  (Contributed by Paul Chapman,
     22-Jun-2011.) $)
  fndmeng $p |- ( ( F Fn A /\ A e. C ) -> A ~~ F ) $=
    ( wfn wcel wa cdm cen wbr cvv wfun fnex fnfun adantr wi c0 cif wceq funeq 
    dmeq id breq12d imbi12d 0ex elimel fundmen dedth imp syl11anc wb fndm 
    breq1d mpbid ) CADZABEZFZCGZCHIZACHIZUPCJEZCKZURABCLUNVAUOACMNUTVAURUTVAURO
    UTCPQZKZVBGZVBHIZOCPCVBRZVAVCURVECVBSVFUQVDCVBHCVBTVFUAUBUCVBCPJUDUEUFUGUHU
    IUNURUSUJUOUNUQACHACUKULNUM $.
    $( [22-Jun-2011] $)

  ${
    $d f y z w A $.  $d f y z w B $.
    mapsnen.1 $e |- A e. _V $.
    mapsnen.2 $e |- B e. _V $.
    $( Set exponentiation to a singleton exponent is equinumerous to its base.
       Exercise 4.43 of [Mendelson] p. 255. $)
    mapsnen $p |- ( A ^m { B } ) ~~ A $=
      ( vz vw vy csn cmap co cv cfv cop oprex cvv wcel fvex a1i snex wceq wa 
      wex wrex mapsn abeq2i anbi1i r19.41v df-rex 3bitr2i fveq1 visset fvsn 
      syl6eq eqeq2d equcom syl6bb pm5.32i anbi2i anass ancom exbii eleq1 opeq2 
      sneqd anbi12d ceqsexv 3bitri en2 ) EFABHZIJZABEKZLZBFKZMZHZAVIINVLOPVKVJP
      ZBVKQRVOOPVMAPZVNSRVPVMVLTZUAZGKZAPZVKBVTMZHZTZVRUAZUAZGUBZVTVMTZWAWDUAZU
      AZGUBVQVKVOTZUAZVSWDGAUCZVRUAWEGAUCWGVPWMVRWMEVJGABECDUDUEUFWDVRGAUGWEGAU
      HUIWFWJGWFWAWDWHUAZUAWIWHUAWJWEWNWAWDVRWHWDVRVMVTTWHWDVLVTVMWDVLBWCLVTBVK
      WCUJBVTDGUKULUMUNFGUOUPUQURWAWDWHUSWIWHUTUIVAWIWLGVMFUKWHWAVQWDWKVTVMAVBW
      HWCVOVKWHWBVNVTVMBVCVDUNVEVFVGVH $.
      $( [17-Dec-2003] $)
  $}

  ${
    $d x y A $.
    map1.1 $e |- A e. _V $.
    $( Set exponentiation: ordinal 1 to any set is equinumerous to ordinal 1.
       Exercise 4.42(b) of [Mendelson] p. 255. $)
    map1 $p |- ( 1o ^m A ) ~~ 1o $=
      ( vx vy c1o cmap co c0 csn cxp oprex cvv wcel cv 0ex a1i p0ex xpex wceq 
      wa ancom wf df1o2 opreq1i eleq2i elmap fconst2 3bitrri el1o anbi12i 
      bitr2i en2 ) CDEAFGZEHAHIZJZEAFKHLMCNZUMMZOPUOLMDNZEMZAUNBQRPUSUPUOSZTUTU
      STUQURHSZTUSUTUAUTUQUSVAUQUPUNAFGZMAUNUPUBUTUMVBUPEUNAFUCUDUEUNAUPQBUFAHU
      POUGUHURUIUJUKUL $.
      $( [17-Dec-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Two singletons are equinumerous. $)
    en2sn $p |- ( ( A e. C /\ B e. D ) -> { A } ~~ { B } ) $=
      ( csn c1o cen wbr wcel entr ensn1g con0 wi 1on ensymg ax-mp syl syl2an ) 
      AEZFGHFBEZGHZSTGHACIBDIZSFTJACKUBTFGHZUABDKFLIUCUAMNTFLOPQR $.
      $( [9-Nov-2003] $)
  $}

  ${
    $d x A $.
    $( A singleton is finite. $)
    snfi $p |- { A } e. Fin $=
      ( vx csn cfn wcel cv cen wbr com wrex cvv c1o breq2 rcla4ev 1onn ensn1g 
      sylancr wn c0 wceq snprc en0 peano1 mpan sylbir sylbi pm2.61i isfi mpbir 
      ) ACZDEUJBFZGHZBIJZAKEZUMLIEUJLGHZUMUNULUOBLIUKLUJGMNOAKPQUNRUJSTZUMAUAUP
      UJSGHZUMUJUBSIEUQUMUCULUQBSIUKSUJGMNUDUEUFUGBUJUHUI $.
      $( [29-Aug-2008] $) $( [4-Nov-2002] $)
  $}

  ${
    $d x y $.
    $( The class of finite sets is a proper class.  (Contributed by Jeffrey
       Hankins, 10-Oct-2008.) $)
    fiprc $p |- Fin e/ _V $=
      ( vx vy cv csn wceq wex cab cvv wnel cfn snnex wcel wn wss snfi eleq1 
      mpbiri 19.23aiv abssi ssexg mpan con3i df-nel 3imtr4i ax-mp ) ACZBCZDZEZB
      FZAGZHIZJHIZABKUKHLZMJHLZMULUMUOUNUKJNUOUNUJAJUIUFJLZBUIUPUHJLUGOUFUHJPQR
      SUKJHTUAUBUKHUCJHUCUDUE $.
      $( [3-Oct-2008] $)
  $}

  ${
    $d f g h A $.  $d f g h B $.  $d f g h C $.  $d f g h D $.
    $( Equinumerosity of union of disjoint sets.  Theorem 4 of [Suppes]
       p. 92. $)
    unen $p |- ( ( ( A ~~ B /\ C ~~ D ) /\
  ( ( A i^i C ) = (/) /\ ( B i^i D ) = (/) ) ) -> ( A u. C ) ~~ ( B u. D ) ) $=
      ( vf vg vh cun cvv wcel cen wbr wa cin c0 wceq wi cv wf1o wex wb unexb 
      breng bi2anan9 sylbir f1oun visset unex f1oeq1 cla4ev syl syl5bir exp3a 
      19.23advv eeanv syl5ibr sylbid imp3a wn brprc relen brrelexi anim12i 
      sylib enrefg adantrd pm2.61i ) BDHZIJZABKLZCDKLZMZACNOPBDNOPMZMACHZVHKLZQ
      VIVLVMVOVIVLABERZSZETZCDFRZSZFTZMZVMVOQZVIBIJZDIJZMVLWBUABDUBWDVJVRWEVKWA
      ABIEUCCDIFUCUDUEVIVQVTMZFTETWCWBVIWFWCEFVIWFVMVOVIVOVNVHGRZSZGTZWFVMMZVNV
      HIGUCWJVNVHVPVSHZSZWIABCDVPVSUFWHWLGWKVPVSEUGFUGUHVNVHWGWKUIUJUKULUMUNVQV
      TEFUOUPUQURVIUSZVLVOVMWMVOVNVNKLZVLVNVHKUTVLVNIJZWNVLAIJZCIJZMWOVJWPVKWQA
      BKVAVBCDKVAVBVCACUBVDVNIVEUKULVFVG $.
      $( [11-Jun-1998] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.
    xpsnen.1 $e |- A e. _V $.
    xpsnen.2 $e |- B e. _V $.
    $( A set is equinumerous to its cross-product with a singleton.
       Proposition 4.22(c) of [Mendelson] p. 254. $)
    xpsnen $p |- ( A X. { B } ) ~~ A $=
      ( vy vx vz csn cxp cv cint cop snex xpex wcel wceq wa wex cvv elxp inteq 
      inteqd visset op1stb syl6eq syl6eqel adantr 19.23aivv sylbi opex a1i wb 
      eleq1 mpbii opeq1 eqeq2d anbi12d ceqsexgv ancom anass elsn anbi1i 
      3bitr3i exbii opeq2 anbi1d ceqsexv syl6req pm4.71ri bitri 3bitri syl5bb 
      syl pm5.32ri pm4.71i bitr2i en2 ) EFABHZIZAEJZKZKZFJZBLZAVRCBMNVTVSOZVTWC
      GJZLZPZWCAOZWFVROZQZQZGRZFRZWBSOZFGVTAVRTZWLWOFGWHWOWKWHWBWCSWHWBWGKZKWCW
      HWAWQVTWGUAUBWCWFFUCZUDUEWRUFUGUHUIWDSOWIWCBUJUKWEWCWBPZQVTWBBLZPZWBAOZQZ
      WSQZVTWDPZWIQZWIXEQWSWEXCWSWOWEXCULWSWCSOWOWRWCWBSUMUNWOWSXFQZFRZXCWEXFXC
      FWBSWSXEXAWIXBWSWDWTVTWCWBBUOUPWCWBAUMUQZURWEWNXHWPWMXGFWMWFBPZWHWIQZQZGR
      XFXGWLXLGXKWJQWJXKQWLXLXKWJUSWHWIWJUTWJXJXKGBVAVBVCVDXKXFGBDXJWHXEWIXJWGW
      DVTWFBWCVEUPVFVGXFWSXEQZWIQXGXEXMWIXEWSXEWBWDKZKWCXEWAXNVTWDUAUBWCBWRUDVH
      ZVIVBWSXEWIUTVJVKVDVJVLVMVNXFXFWSQXDXFWSXEWSWIXOUGVOWSXFXCXIVNVPXEWIUSVKV
      Q $.
      $( [4-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A set is equinumerous to its cross-product with a singleton.
       Proposition 4.22(c) of [Mendelson] p. 254. $)
    xpsneng $p |- ( ( A e. C /\ B e. D ) -> ( A X. { B } ) ~~ A ) $=
      ( vx vy cv csn cxp cen wbr wceq xpeq1 id breq12d sneq xpeq2 syl breq1d 
      visset xpsnen vtocl2g ) EGZFGZHZIZUCJKAUEIZAJKABHZIZAJKEFABCDUCALZUFUGUCA
      JUCAUEMUJNOUDBLZUGUIAJUKUEUHLUGUILUDBPUEUHAQRSUCUDETFTUAUB $.
      $( [22-Oct-2004] $)
  $}


  ${
    $d x y A $.  $d x y B $.
    endisj.1 $e |- A e. _V $.
    endisj.2 $e |- B e. _V $.
    $( Any two sets are equinumerous to disjoint sets.  Exercise 4.39 of
       [Mendelson] p. 255. $)
    endisj $p |- E. x E. y ( ( x ~~ A /\ y ~~ B ) /\ ( x i^i y ) = (/) ) $=
      ( c0 csn cxp cen wbr c1o wa cin wceq cv wex 0ex xpsnen con0 1on elisseti 
      pm3.2i xp01disj p0ex xpex snex breq1 bi2anan9 ineq12 eqeq1d anbi12d 
      cla42ev mp2an ) CGHZIZCJKZDLHZIZDJKZMZUPUSNZGOZAPZCJKZBPZDJKZMZVDVFNZGOZM
      ZBQAQUQUTCGERSDLFLTUAUBSUCCDUDVKVAVCMABUPUSCUOEUEUFDURFLUGUFVDUPOZVFUSOZM
      ZVHVAVJVCVLVEUQVMVGUTVDUPCJUHVFUSDJUHUIVNVIVBGVDUPVFUSUJUKULUMUN $.
      $( [16-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    undom.1 $e |- B e. _V $.
    undom.2 $e |- C e. _V $.
    undom.3 $e |- D e. _V $.
    $( Dominance law for union.  Proposition 4.24(a) of [Mendelson] p. 257. $)
    undom $p |- ( ( ( A ~<_ B /\ C ~<_ D ) /\ ( B i^i D ) = (/) ) ->
                ( A u. C ) ~<_ ( B u. D ) ) $=
      ( vx vy cdom wbr wa cin c0 wceq cun cdif wi cv cen wss wex unen undif2 
      syl5eqbrr sseq2 ss0b syl6bb ss2in syl5bi imp difdisj jctil sylan2 
      anassrs an32s unss12 cvv wcel unex ssdom2g ax-mp syl ad2antlr endomtr 
      syl11anc ex an4s 19.23aiv 19.23adv domen syl2anb difss mp2 domtr mpan ) 
      ABJKZCDJKZLBDMZNOZACPZBDPZJKZVQCAQZDJKZVTWCRZVRAHSZTKZWGBUAZLZHUBZWDISZTK
      ZWLDUAZLZIUBZWFVQWEWKWPWFWKWOWFIWJWOWFRHWJWOWFWHWMWIWNWFWHWMLZWIWNLZLZVTW
      CWSVTLWAWGWLPZTKZWTWBJKZWCWQVTWRXAWQVTWRXAWQAWDMNOZWGWLMZNOZLZXAVTWRLZWQX
      FLAWDPWTWATAWGWDWLUCACUDUEXGXEXCVTWRXEVTXDVSUAZXEWRVTXHXDNUAXEVSNXDUFXDUG
      UHWGBWLDUIUJUKACULUMUNUOUPWRXBWQVTWRWTWBUAZXBWGBWLDUQWBURUSXIXBRBDEGUTWTW
      BURVAVBVCVDWAWTWBVEVFVGVHVGVIVJUKHABEVKIWDDGVKVLWDCJKZVRWECURUSWDCUAXJFCA
      VMWDCURVAVNWDCDVOVPUNUK $.
      $( [3-Sep-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.
    xpcomen.1 $e |- A e. _V $.
    xpcomen.2 $e |- B e. _V $.
    $( Commutative law for equinumerosity of cross product.  Proposition
       4.22(d) of [Mendelson] p. 254. $)
    xpcomen $p |- ( A X. B ) ~~ ( B X. A ) $=
      ( vx vy vz vw cxp cv csn ccnv cuni xpex cvv wcel snex cnvex uniex a1i 
      cop wceq wa wex sneq cnveq syl visset cnvsn syl6eq unieqd opex unisn 
      syl6req eq2tri ancom anbi12i an32 3bitr4i 2exbii 19.41vv 3bitr3i elxp 
      anbi1i excom bitri en2 ) EFABIZBAIZEJZKZLZMZFJZKZLZMZABCDNVMOPVJVHPZVLVKV
      JQRSTVQOPVNVIPZVPVOVNQRSTVJGJZHJZUAZUBZVTAPZWABPZUCZUCZHUDGUDZVNVMUBZUCZV
      NWAVTUAZUBZWEWDUCZUCZHUDGUDZVJVQUBZUCZVRWIUCVSWPUCWGWIUCZHUDGUDWNWPUCZHUD
      GUDWJWQWRWSGHWCWIUCZWFUCWLWPUCZWMUCWRWSWTXAWFWMVJVNWBWKVMVQWCVMWKKZMWKWCV
      LXBWCVLWBKZLZXBWCVKXCUBVLXDUBVJWBUEVKXCUFUGVTWAGUHZHUHZUIUJUKWKWAVTULUMUN
      WLVQXCMWBWLVPXCWLVPXBLZXCWLVOXBUBVPXGUBVNWKUEVOXBUFUGWAVTXFXEUIUJUKWBVTWA
      ULUMUNUOWDWEUPUQWCWFWIURWLWMWPURUSUTWGWIGHVAWNWPGHVAVBVRWHWIGHVJABVCVDVSW
      OWPVSWNGUDHUDWOHGVNBAVCWNHGVEVFVDUSVG $.
      $( [5-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( Commutative law for equinumerosity of cross product.  Proposition
       4.22(d) of [Mendelson] p. 254. $)
    xpcomeng $p |- ( ( A e. C /\ B e. D ) -> ( A X. B ) ~~ ( B X. A ) ) $=
      ( vx vy cv cxp cen wbr wceq xpeq1 xpeq2 breq12d visset xpcomen vtocl2g ) 
      EGZFGZHZSRHZIJASHZSAHZIJABHZBAHZIJEFABCDRAKTUBUAUCIRASLRASMNSBKUBUDUCUEIS
      BAMSBALNRSEOFOPQ $.
      $( [27-Mar-2006] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    xpassen.1 $e |- A e. _V $.
    xpassen.2 $e |- B e. _V $.
    xpassen.3 $e |- C e. _V $.
    $( Associative law for equinumerosity of cross product.  Proposition
       4.22(e) of [Mendelson] p. 254. $)
    xpassen $p |- ( ( A X. B ) X. C ) ~~ ( A X. ( B X. C ) ) $=
      ( vx vy vz vw vv vu cxp cv csn cdm cuni crn cop xpex cvv wcel opex a1i 
      wceq wa wex sneq dmeqd unieqd sneqd op1sta sneqi dmeqi unieqi visset 
      eqtri syl6req rneqd rneqi op2nda opeq12d eq2tri anass anbi12i an32 
      3bitr4i exbii 19.41v 3bitr3i 2exbii 19.41vv elxp excom anbi1i an12 
      exrot4 opeq1 eqeq2d anbi1d anbi2d ceqsexv 3bitri 3exbii anbi2i 19.42vv 
      bitri bitr3i exrot3 opeq2 en2 ) GHABMZCMZABCMZMZGNZOZPZQZOZPZQZWTRZQZWQRZ
      QZSZSZHNZOZPZQZXJRZQZOZPZQZSZXORZQZSZWLCABDETFTXHUAUBWPWMUBZXBXGUCUDYAUAU
      BXIWOUBZXRXTUCUDWPINZJNZSZKNZSZUEZYDAUBZYEBUBZUFZYGCUBZUFZUFZKUGZJUGIUGZX
      IXHUEZUFZXIYDYEYGSZSZUEZYJYKYMUFZUFZUFZKUGZJUGZIUGZWPYAUEZUFZYBYRUFYCUUIU
      FYPYRUFZJUGIUGUUFUUIUFZJUGIUGYSUUJUUKUULIJYOYRUFZKUGUUEUUIUFZKUGUUKUULUUM
      UUNKYIYRUFZYNUFUUBUUIUFZUUDUFUUMUUNUUOUUPYNUUDWPXIYHUUAXHYAYIYDXBYTXGYIXB
      YHOZPZQZOZPZQZYDYIXAUVAYIWTUUTYIWSUUSYIWRUURYIWQUUQWPYHUHZUIUJUKZUIUJUVBY
      FOZPZQYDUVAUVFUUTUVEUUSYFYFYGYDYEUCZULUMZUNUOYDYEIUPZULUQURYIYEXDYGXFYIXD
      UUTRZQZYEYIXCUVJYIWTUUTUVDUSUJUVKUVERZQYEUVJUVLUUTUVEUVHUTUOYDYEUVIJUPZVA
      UQURYIXFUUQRZQYGYIXEUVNYIWQUUQUVCUSUJYFYGUVGKUPZVAURVBVBUUBYFXRYGXTUUBYDX
      LYEXQUUBXLUUAOZPZQYDUUBXKUVQUUBXJUVPXIUUAUHZUIUJYDYTUVIULURUUBXQUVPRZQZOZ
      PZQZYEUUBXPUWBUUBXOUWAUUBXNUVTUUBXMUVSUUBXJUVPUVRUSUJUKZUIUJUWCYTOZPZQYEU
      WBUWFUWAUWEUVTYTYDYTUVIYEYGUCZVAUMZUNUOYEYGUVMULUQURVBUUBXTUWARZQZYGUUBXS
      UWIUUBXOUWAUWDUSUJUWJUWERZQYGUWIUWKUWAUWEUWHUTUOYEYGUVMUVOVAUQURVBVCYJYKY
      MVDVEYIYNYRVFUUBUUDUUIVFVGVHYOYRKVIUUEUUIKVIVJVKYPYRIJVLUUFUUIIJVLVJYBYQY
      RYBWPLNZYGSZUEZUWLWLUBZYMUFUFZKUGLUGUWPLUGKUGZYQLKWPWLCVMUWPLKVNUWQUWLYFU
      EZYLUFZUWNYMUFZUFZJUGIUGZLUGKUGUXALUGZKUGJUGIUGYQUWPUXBKLUWOUWTUFUWSJUGIU
      GZUWTUFUWPUXBUWOUXDUWTIJUWLABVMVOUWNUWOYMVPUWSUWTIJVLVGVKUXAKLIJVQUXCYOIJ
      KUXCUWRYLUWTUFZUFZLUGYLYIYMUFZUFZYOUXAUXFLUWRYLUWTVDVHUXEUXHLYFUVGUWRUWTU
      XGYLUWRUWNYIYMUWRUWMYHWPUWLYFYGVRVSVTWAWBYLYIYMVPWCWDWCWCVOYCUUHUUIYCXIYD
      UWLSZUEZYJUWLWNUBZUFUFZLUGZIUGUUHILXIAWNVMUXMUUGIUXMUWLYTUEZUXJUUDUFZUFZK
      UGJUGZLUGUXPLUGZKUGJUGUUGUXLUXQLUXJYJUFZUXKUFUXSUXNUUCUFZKUGJUGZUFZUXLUXQ
      UXKUYAUXSJKUWLBCVMWEUXJYJUXKVDUYBUXSUXTUFZKUGJUGUXQUXSUXTJKWFUYCUXPJKUYCU
      XNUXSUUCUFZUFUXPUXSUXNUUCVPUYDUXOUXNUXJYJUUCVDWEWGVKWHVJVHUXPLJKWIUXRUUEJ
      KUXOUUELYTUWGUXNUXJUUBUUDUXNUXIUUAXIUWLYTYDWJVSVTWBVKWCVHWGVOVGWK $.
      $( [22-Jan-2004] $)
  $}

  ${
    $d t A $.  $d t x y z w v u f B $.  $d t x y z w v u f C $.
    xpdom.1 $e |- B e. _V $.
    xpdom.2 $e |- C e. _V $.
    $( Dominance law for cross product.  Proposition 10.33(2) of
       [TakeutiZaring] p. 92. $)
    xpdom2 $p |- ( A ~<_ B -> ( C X. A ) ~<_ ( C X. B ) ) $=
      ( vt vf vx vy vz vw vv vu cvv wcel cdom wbr cxp reldom brrelexi cv wi 
      wceq breq1 xpeq2 breq1d imbi12d wf1 wex brdom visset xpex csn cdm cuni 
      crn cfv cop wa wf f1f ffvelrn ex syl anim2d adantld elxp4 fvex opelxp 
      3imtr4g wb wrex f1fveq ancoms anbi2d opth syl5bb ad2ant2l imp adantlr 
      sneq dmeqd unieqd op1sta syl6eq rneqd op2nda fveq2d opeq12d eqeqan12d 
      ad2antlr eqeq12 syl6bb 3bitr4d exp53 com23 r19.23aivv r19.23advv elxp2 
      syl2anb com12 dom2d mpi 19.23aiv sylbi vtoclg mpcom ) ANOABPQZCARZCBRZPQZ
      ABPSTFUAZBPQZCXLRZXJPQZUBXHXKUBFANXLAUCZXMXHXOXKXLABPUDXPXNXIXJPXLACUEUFU
      GXMXLBGUAZUHZGUIXOXLBGDUJXRXOGXRXNNOXOCXLEFUKULXRHIXNXJHUAZUMZUNZUOZXTUPZ
      UOZXQUQZURZIUAZUMZUNZUOZYHUPZUOZXQUQZURZNXRXSYBYDURUCZYBCOZYDXLOZUSZUSYPY
      EBOZUSZXSXNOZYFXJOXRYRYTYOXRYQYSYPXRXLBXQUTZYQYSUBXLBXQVAUUBYQYSXLBYDXQVB
      VCVDVEVFXSCXLVGYBYECBYDXQVHVIVJUUAYGXNOZUSXRYFYNUCZXSYGUCZVKZXSJUAZKUAZUR
      ZUCZKXLVLJCVLZYGLUAZMUAZURZUCZMXLVLLCVLZXRUUFUBZUUAUUCUUKUUPUUQUUKUUOUUQL
      MCXLUUJUULCOZUUMXLOZUSZUUOUUQUBZUBJKCXLUUGCOZUUHXLOZUSZUUTUUJUVAUVDUUTUUJ
      UUOXRUUFUVDUUTUSZUUJUUOUSZUSXRUSUUGUUHXQUQZURZUULUUMXQUQZURZUCZUUGUULUCZU
      UHUUMUCZUSZUUDUUEUVEXRUVKUVNVKZUVFUVEXRUVOUVCUUSXRUVOUBUVBUURUVCUUSUSZXRU
      VOUVPXRUSZUVLUVGUVIUCZUSUVNUVKUVQUVRUVMUVLXRUVPUVRUVMVKXLBUUHUUMXQVMVNVOU
      UGUVGUULUVIJUKZUUHXQVHUUMXQVHVPVQVCVRVSVTUVFUUDUVKVKUVEXRUUJUUOYFUVHYNUVJ
      UUJYBUUGYEUVGUUJYBUUIUMZUNZUOUUGUUJYAUWAUUJXTUVTXSUUIWAZWBWCUUGUUHUVSWDWE
      UUJYDUUHXQUUJYDUVTUPZUOUUHUUJYCUWCUUJXTUVTUWBWFWCUUGUUHUVSKUKZWGWEWHWIUUO
      YJUULYMUVIUUOYJUUNUMZUNZUOUULUUOYIUWFUUOYHUWEYGUUNWAZWBWCUULUUMLUKZWDWEUU
      OYLUUMXQUUOYLUWEUPZUOUUMUUOYKUWIUUOYHUWEUWGWFWCUULUUMUWHMUKZWGWEWHWIWJWKU
      VFUUEUVNVKUVEXRUVFUUEUUIUUNUCUVNXSUUIYGUUNWLUUGUUHUULUUMUVSUWDUWJVPWMWKWN
      WOWPWQWRVSJKXSCXLWSLMYGCXLWSWTXAXBXCXDXEXFXG $.
      $( [29-Mar-2006] $) $( [24-Jul-2004] $)

    $( Dominance law for cross product.  Theorem 6L(c) of [Enderton] p. 149. $)
    xpdom1 $p |- ( A ~<_ B -> ( A X. C ) ~<_ ( B X. C ) ) $=
      ( cxp cdom wbr cen domentr cvv wcel xpcomeng reldom brrelexi sylancl 
      xpdom2 endomtr syl11anc xpcomen ) ACFZCBFZGHZUBBCFZIHUAUDGHABGHZUAUBUDJUE
      UACAFZIHZUFUBGHUCAKLCKLUGUEACKKMABGNOEPABCDEQUAUFUBRSCBEDTP $.
      $( [29-Mar-2006] $) $( [28-Sep-2004] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d z C $.
    $( Dominance law for cross product.  Theorem 6L(c) of [Enderton] p. 149. $)
    xpdom1g $p |- ( ( B e. R /\ C e. S /\ A ~<_ B ) ->
                  ( A X. C ) ~<_ ( B X. C ) ) $=
      ( vy vz wcel cdom wbr cxp cv wi wceq breq2 xpeq1 breq2d imbi12d xpeq2 
      breq12d imbi2d visset xpdom1 vtocl2g 3impia ) BDHCEHABIJZACKZBCKZIJZAFLZI
      JZAGLZKZUJULKZIJZMUFUMBULKZIJZMUFUIMFGBCDEUJBNZUKUFUOUQUJBAIOURUNUPUMIUJB
      ULPQRULCNZUQUIUFUSUMUGUPUHIULCASULCBSTUAAUJULFUBGUBUCUDUE $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    xpdom3.1 $e |- A e. _V $.
    $( A set is dominated by its cross product with a non-empty set.  Exercise
       6 of [Suppes] p. 98. $)
    xpdom3 $p |- ( B =/= (/) -> A ~<_ ( A X. B ) ) $=
      ( vx c0 wne cv wcel wex cxp cdom wbr n0 csn wss visset snss ssid xpss12 
      mpan cvv wi snex xpex ssdomg ax-mp cen xpsnen ensymi endomtr 3syl sylbi 
      19.23aiv ) BEFDGZBHZDIAABJZKLZDBMUOUQDUOUNNZBOZUQUNBDPZQUSAURJZUPOZVAUPKL
      ZUQAAOUSVBARAAURBSTVAUAHVBVCUBAURCUNUCUDVAUPUAUEUFAVAUGLVCUQVAACAUNCUTUHU
      IAVAUPUJTUKULUMUL $.
      $( [24-Nov-2006] $) $( [27-Jul-2004] $)
  $}

  ${
    $d x y z w v u A $.
    pw2en.1 $e |- A e. _V $.
    $( The power set of a set is equinumerous to set exponentiation with a base
       of ordinal 2.  Proposition 10.44 of [TakeutiZaring] p. 96.  (The proof
       seems excessively long.  An attempt to find a shorter one is on my to-do
       list.) $)
    pw2en $p |- ~P A ~~ ( 2o ^m A ) $=
      ( vx vy vz vw vv vu cpw c2o cmap co cv wcel c0 wceq wa cab copab ccnv 
      csn cima pwex cvv opabex2 a1i visset cnvex imaexg ax-mp wss cin sseqin2 
      biimpi eqeq1d cop eleq2 p0ex elimasn opelcnv bitri syl5bb wb wal eq2ab 
      df-sn eqeq1i iba 19.21aiv 0ex eqeq1 anbi1d bibi12d cla4v wi eqid a1bi 
      pm4.71 sylibr impbii 3bitr4ri anbi2i elin eleq1 anbi2d abbidv eqeq2d 
      anbi12d opelopab 3bitr4i syl6rbbr eqrdv syl5cbi sseq1 crn imassrn cdm 
      wfn eqeltrri simpl ss2abi ssexi fnopab2 fneq1 mpbiri fndm syl dfdm4 
      syl5eqr sseq2d mpbii syl5cbir impbid elpw pm5.32ri ancom wf elsn abbi2dv 
      cpr prid2 df2o2 eleqtrri syl6eqelr wn wne wex abn0 simpr 19.23aiv sylbi 
      necon1bi prid1 syl6eqel pm2.61i fopab feq1 cfv wral syl6bb fnopfvb ffn 
      sylan bicomd sylan9bb biimpa adantl eqtrd wo ffvelrn eleq2i fvex elpr 
      sylib ord sylibrd con1d imp eqtr4d pm2.61dan fvopab2 mpan2 ad2antll expr 
      r19.21aiv ax-17 hbopab1 eqfnfv2f sylancl mpbird ex impbid2 con0 2on 
      elisseti elmap syl6bbr 3bitri en2 ) CDAIZJAKLZEMZANZFMZGMZOPZUWBCMZNZQZGR
      ZPZQZEFSZDMZTZOUAZUAZUBZABUCUWMUDNUWGUVTNZEFAUWJBUEUFUWRUDNZUWNUWANZUWOUD
      NUWTUWNDUGUHUWOUWQUDUIUJUFUWSUWNUWMPZQUWGUWRPZUXBQUXBUXCQUXAUXCQUXBUWSUXC
      UXBUWGAUKZUXCUWSUXBUXDUXCUXDAUWGULZUWRPUXCUXBUXDUXEUWGUWRUXDUXEUWGPUWGAUM
      UNUOUXBHUXEUWRUXBHMZUWRNZUXFUWPUPZUWMNZUXFUXENZUXBUXHUWNNZUXIUXGUWNUWMUXH
      UQUXGUWPUXFUPUWONUXKUWOUWPUXFURHUGZUSUWPUXFUWNURUXLUTVAVBUXFANZUXFUWGNZQU
      XMUWPUWFUXNQZGRZPZQZUXJUXIUXNUXQUXMUWFGRZUXPPUWFUXOVCZGVDZUXQUXNUWFUXOGVE
      UWPUXSUXPGOVFZVGUXNUYAUXNUXTGUXNUWFVHVIUYAOOPZUYCUXNQZVCZUXNUXTUYEGOVJUWF
      UWFUYCUXOUYDUWEOOVKZUWFUWFUYCUXNUYFVLVMVNUXNUYCUXNVOUYEUYCUXNOVPVQUYCUXNV
      RVAVSVTWAWBUXFAUWGWCUWLUXMUWDUXPPZQUXREFUXFUWPUXLURUWBUXFPZUWCUXMUWKUYGUW
      BUXFAWDUYHUWJUXPUWDUYHUWIUXOGUYHUWHUXNUWFUWBUXFUWGWDWEWFWGWHUWDUWPPUYGUXQ
      UXMUWDUWPUXPVKWEWIWJWKWLWMUXCUXDUWRAUKZUXBUWGUWRAWNUXBUWRUWOWOZUKUYIUWOUW
      QWPUXBUYJAUWRUXBUWNWQZAUYJUXBUWNAWRZUYKAPUXBUYLUWMAWRZEFAUWJUWMUWJUXSUWPU
      XSUDUYBURWSUWIUWFGUWFUWHWTXAXBZUWMVPZXCZAUWNUWMXDXEAUWNXFXGUWNXHXIXJXKXLX
      MUWGACUGXNVBXOUXCUXBXPUXCUXBUXAUXCUXBAJUWNXQZUXAUXCUXBUYQUXBUYQAJUWMXQEFA
      JUWJUWMUYOUWJJNZUWCUWHUYRUWHUWJUWPJUWHUWIGUWPUWHUWFUWIUWEUWPNUWHUWFVHGOXR
      VBXSZUWPOUWPXTZJOUWPURYAYBYCYDUWHYEZUWJOJUWHUWJOUWJOYFUWIGYGUWHUWIGYHUWIU
      WHGUWFUWHYIYJYKYLZOUYTJOUWPVJYMYBYCYNYOUFYPAJUWNUWMYQXEUXCUYQUXBUXCUYQQZU
      XBUWBUWNYRZUWBUWMYRZPZEAYSZVUCVUFEAUXCUYQUWCVUFUXCUYQUWCQZQZVUDUWJVUEVUIU
      WHVUDUWJPVUIUWHQVUDUWPUWJVUIUWHVUDUWPPZUXCUWHUWBUWPUPUWNNZVUHVUJUXCUWHUWB
      UWRNZVUKUWGUWRUWBUQVULUWPUWBUPUWONVUKUWOUWPUWBUREUGZUSUWPUWBUWNURVUMUTVAY
      TVUHVUJVUKUYLUWCVUJVUKVCUYQAUWBUWPUWNURUUAAJUWNUUBZUUCUUDUUEZUUFUWHUWPUWJ
      PVUIUYSUUGUUHVUIVUAQVUDOUWJVUIVUAVUDOPZVUIVUPUWHVUIVUPYEZVUJUWHVUHVUQVUJV
      OUXCVUHVUPVUJVUHVUDJNZVUPVUJUUIZAJUWBUWNUUJVURVUDUYTNVUSJUYTVUDYBUUKVUDOU
      WPUWBUWNUULUUMVAUUNUUOUUGVUOUUPUUQUURVUAUWJOPVUIVUBUUGUUSUUTUWCVUEUWJPZUX
      CUYQUWCUWJUDNVUTUYNEFAUWJUDUVAUVBUVCUUSUVDUVEUYQUXBVUGVCZUXCUYLUYMVVAUYQE
      HAUWNUWMUXFUWNNEUVFUWLEFHUVGUVHVUNUYPUVIUUGUVJUVKUVLJAUWNJUVMUVNUVOBUVPUV
      QXOUVRUVS $.
      $( [29-Jan-2004] $)
  $}

  ${
    $d f z B $.  $d f C $.  $d f ph $.  $d f x z $.
    ac6sfilem1.1 $e |- B e. _V $.
    ac6sfilem1.2 $e |- ( C = ( f ` x ) -> ( ph <-> ps ) ) $.
    $( Lemma for ~ ac6sfi . $)
    ac6sfilem1 $p |- ( C = ( B ` x ) -> ( ph <-> [ B / f ] ps ) ) $=
      ( vz cv cfv wceq wb wi wsbc cvv wcel wal ax-17 hbsbc1v hbbi hbim fveq1 
      eqeq2d sbceq1a bibi2d imbi12d cla4gf ax-mp mpg ) ECJZFJZKZLZABMZNZEUKDKZL
      ZABFDOZMZNZFDPQUPFRVANGUPVAFIDPIJDQFSURUTFURFSAUSFAFSBFDGTUAUBULDLZUNURUO
      UTVBUMUQEUKULDUCUDVBBUSABFDUEUFUGUHUIHUJ $.
      $( [26-Jun-2009] $)
  $}

  ${
    ac6sfilem2.1 $e |- A e. _V $.
    $( Lemma for ~ ac6sfi . $)
    ac6sfilem2 $p |- ( F : suc A -1-1-onto-> B
         -> ( ( F " A ) u. { ( F ` A ) } ) = B ) $=
      ( csuc wf1o wfo wfn cima wceq wa cfv csn cun f1ofo fofn foima jca df-suc 
      a1i imaeq2d imaundi wcel sucid fnsnfv eqcomd mpan2 uneq2d 3eqtrd eqeq1d 
      biimpa 3syl ) AEZBCFUMBCGZCUMHZCUMIZBJZKCAIZACLMZNZBJZUMBCOUNUOUQUMBCPUMB
      CQRUOUQVAUOUPUTBUOUPCAAMZNZIZURCVBIZNZUTUOUMVCCUMVCJUOASTUAVDVFJUOCAVBUBT
      UOVEUSURUOAUMUCZVEUSJADUDUOVGKUSVEUMACUEUFUGUHUIUJUKUL $.
      $( [26-Jun-2009] $)
  $}

  ${
    $d f h m x z A $.  $d f g h m t w x y z B $.  $d f g h m t w z ph $.
    $d g h m t w y z ps $.  $d f g h k m t w x y z $.
    ac6sfi.1 $e |- ( y = ( f ` x ) -> ( ph <-> ps ) ) $.
    $( Lemma for ~ ac6sfi . $)
    ac6sfilem3 $p |- ( ( ( y e. B /\ [ ( `' h ` w ) / x ] ph /\ ( w e. om
            /\ `' h : suc w -1-1-onto-> z ) ) /\ ( g : ( `' h " w ) --> B
            /\ A. x e. ( `' h " w ) [ g / f ] ps ) ) -> ( ( g u. {
            <. ( `' h ` w ) , y >. } ) : z --> B /\ A. x e. z [ ( g u.
            { <. ( `' h ` w ) , y >. } ) / f ] ps ) ) $=
      ( vt vm cv wcel ccnv cfv wsbc com csuc wf1o wa w3a cima wf wral cop csn 
      cun cin c0 wceq simprl fvex visset f1osn wss wi simpl1 snssd fss expcom 
      syl f1of syl5 mpi wn wrex word nnord wne nordeq necom df-ne bitri sylib 
      ex ad2antrl 3adant1 adantr imp wf1 wb f1of1 ad2antll ad2antrr elelsuc 
      adantl sucid jctir f1fveq syl11anc mtbird nrexdv wfn fvelimab f1ofn 
      sssucid sylancl disjsn sylibr fun syl21anc unidm a1i feq3 mpbid 
      ac6sfilem2 feq2d ax-17 hbsbc1v hb3an hbra1 hban wo eqcomd eleq2d elun 
      syl6bb pm2.27 simpl2 wfun cdm ffun ssun1 fdm 3ad2ant3 eleqtrrd funssfv 
      syl111anc snex unex cvv wal ax-gen hbbi hbim eqeq1 sbceq1a bibi1d 
      imbi12d cla4gf mp2 ac6sfilem1 eqcoms eqid ax-mp syl5rbbr mpbird 3exp1 
      syld com4l impcom ra4 sylan2 fndm opex snid f1ofun funopfv jca fveq2 
      eqeq1d ssun2 simpl syl6eqel simpr adantlr simplr eqtr2d biimpd exp31 
      com34 com24 sylbird com12 ancoms 3ad2antl2 com13 sylbid com14 elsn 
      syl5ib jaod r19.21ai jcai ) DNZGOZACFNZJNPZQZRZUWISOZUWITZENZUWJUAZUBZUCZ
      UWJUWIUDZGINZUEZBHUWTRZCUWSUFZUBZUBZUWOGUWTUWKUWGUGZUHZUIZUEZBHUXHRZCUWOU
      FZUXEUWSUWKUHZUIZGUXHUEZUXIUXEUXMGGUIZUXHUEZUXNUXEUXAUXLGUXGUEZUWSUXLUJUK
      ULZUXPUWRUXAUXCUMUXEUXLUWGUHZUXGUAZUXQUWKUWGUWIUWJUNZDUOZUPZUXEUXLUXSUXGU
      EZUXQUXTUXEUXSGUQZUYDUXQURUXEUWGGUWHUWLUWQUXDUSUTUYDUYEUXQUXLUXSGUXGVAVBV
      CUXLUXSUXGVDVEVFUXEUWKUWSOZVGUXRUXEUYFLNZUWJQUWKULZLUWIVHZUXEUYHLUWIUXEUY
      GUWIOZUBZUYHUYGUWIULZUXEUYJUYLVGZUWRUYJUYMURZUXDUWLUWQUYNUWHUWMUYNUWLUWPU
      WMUWIVIZUYNUWIVJUYOUYJUYMUYOUYJUBUWIUYGVKZUYMUWIUYGVLUYPUYGUWIVKUYMUWIUYG
      VMUYGUWIVNVOVPVQVCVRVSVTWAUYKUWNUWOUWJWBZUYGUWNOZUWIUWNOZUBUYHUYLWCUWRUYQ
      UXDUYJUWLUWQUYQUWHUWPUYQUWLUWMUWNUWOUWJWDWEVSWFUYKUYRUYSUYJUYRUXEUYGUWIWG
      WHUWIFUOZWIWJUWNUWOUYGUWIUWJWKWLWMWNUWJUWNWOZUWIUWNUQUYFUYIWCUXELUWNUWIUW
      KUWJWPUWRVUAUXDUWLUWQVUAUWHUWPVUAUWLUWMUWNUWOUWJWQWEVSVTUWIWRWSWMUWSUWKWT
      XAUWSUXLGGUWTUXGXBXCUXEUXOGULZUXPUXNWCVUBUXEGXDXEUXOGUXMUXHXFVCXGUXEUXMUW
      OGUXHUWRUXMUWOULZUXDUWLUWQVUCUWHUWPVUCUWLUWMUWIUWOUWJUYTXHZWEVSVTXIXGUXEU
      XIUXKUXEUXIUBZUXJCUWOUXEUXICUWRUXDCUWHUWLUWQCUWHCXJACUWKUYAXKUWQCXJXLUXAU
      XCCUXACXJUXBCUWSXMXNXNUXICXJXNVUECNZUWOOZVUFUWSOZVUFUXLOZXOZUXJVUEVUGVUFU
      XMOVUJVUEUWOUXMVUFUWRUWOUXMULZUXDUXIUWLUWQVUKUWHUWPVUKUWLUWMUWPUXMUWOVUDX
      PWEVSWFXQVUFUWSUXLXRXSVUEVUHUXJVUIUXEUXIVUHUXJURZUXDUXIVULURZUWRUXAVUHUXB
      URZVUMUXCVUNUXAVUMVUHVUNUXAUXIUXJVUHVUNUXBUXAUXIUXJURURVUHUXBXTVUHUXBUXAU
      XIUXJVUHUXBUXAUCZUXIUBZUXJUXBVUHUXBUXAUXIYAVUPVUFUXHQZVUFUWTQZULZUXJUXBWC
      VUPUXHYBZUWTUXHUQZVUFUWTYCZOVUSUXIVUTVUOUWOGUXHYDZWHVVAVUPUWTUXGYEXEVUPVU
      FUWSVVBVUHUXBUXAUXIUSVUOVVBUWSULZUXIUXAVUHVVDUXBUWSGUWTYFYGVTYHVUFUXHUWTY
      IYJVUSADVURRZUXJUXBVVEUXJWCVURVUQVVEBCUXHVURHUWTUXGIUOZUXFYKYLZVURYMOUWGV
      UFHNQZULZABWCZURZDYNVURVVHULZVVEBWCZURZVUFUWTUNZVVKDKYOVVKVVNDMVURYMMNVUR
      ODXJVVLVVMDVVLDXJVVEBDADVURVVOXKBDXJYPYQUWGVURULZVVIVVLVVJVVMUWGVURVVHYRV
      VPAVVEBADVURYSYTUUAUUBUUCZUUDUUEVURVURULVVEUXBWCVURUUFVVEBCUWTVURHVVFVVQU
      UDUUGUUHVCUUIUUJUUKUULUUMUXBCUWSUUNUUOWHWAVUEVUFUWKULZUXJVUIUXGYCZUXLULZU
      WKUXGQZUWGULZUBZVUEVVRUXJURURZUXTVWCUYCUXTVVTVWBUXTUXGUXLWOVVTUXLUXSUXGWQ
      UXLUXGUUPVCUXTUXFUXGOZVWBUXFUWKUWGUUQUURUXTUXGYBVWEVWBURUXLUXSUXGUUSUWKUW
      GUXGUYBUUTVCVFUVAUUGVVTVWBVWDVVRVWBVUEVVTUXJVVRVWBVUFUXGQZUWGULZVUEVVTUXJ
      URZURVVRVWAVWFUWGVVRVWFVWAVUFUWKUXGUVBXPUVCVUEVWGVVRVWHUXEUXIVWGVVRVWHURU
      RZUWLUWHUXDUXIVWIURZUWQUXDUWLVWJUXDUWLUBVVRVWGUXIVWHUWLVVRVWGUXIVWHURURZU
      RUXDVVRUWLVWKVVRUWLAVWKACUWKYSVVRUXIVWGAVWHVVRUXIVWGAVWHURURVVRUXIUBZVWGV
      VTAUXJVWLVWGVVTAUXJURZVWLVWGUBVVTUBZUWGVUQULZVWMVWNVUQVWFUWGVWNVUTUXGUXHU
      QZVUFVVSOZVUQVWFULVWLVUTVWGVVTUXIVUTVVRVVCWHWFVWPVWNUXGUWTUVDXEVWLVVTVWQV
      WGVVRVVTVWQUXIVVRVVTUBZVUFUXLVVSVWRVUFUWKUXLVVRVVTUVEUWKUYAUURUVFVVRVVTUV
      GYHUVHUVHVUFUXHUXGYIYJVWLVWGVVTUVIUVJVWOAUXJABCUXHUWGHVVGKUUDUVKVCUVLUVMV
      QUVNUVOUVPWHUVNUVQUVRWAUVSUVTUWAWAUUGCUWKUWBUWCUWDUVTUWEVQUWF $.
      $( [26-Jun-2009] $)

    $( A version of ~ ac6s for finite sets.  (Contributed by Jeffrey Hankins,
       26-Jun-2009.) $)
    ac6sfi $p |- ( ( A e. Fin /\ A. x e. A E. y e. B ph ) ->
                E. f ( f : A --> B /\ A. x e. A ps ) ) $=
      ( vm vh vz vw vt vk vg cfn wcel wrex wral cv wf wa wex cen wbr com wi 
      isfi cvv relen brrelexi wf1o visset bren wal wceq f1oeq2 exbidv raleq 
      feq2 anbi12d imbi12d cla4gv c0 csuc f1oeq3 imbi1d albidv ccnv f1ocnv 
      f1o00 biimpi wsbc 0ex a1i f0 ral0 pm3.2i mpbiri adantl ax-17 hbsbc1v 
      hbral hban feq1 sbceq1a ralbidv cla4egf sylc 3syl a1d 19.23aiv ax-gen 
      cima cres wf1 wss f1ores f1of1 sssucid sylancl sylan2 cnvex resexg ax-mp 
      f1oeq1 cla4ev pm2.27 crn dff1o5 simpr imassrn sseq2 mpbii ssralv imp 
      sbequ12 cbvex cfv csn wfn sucid fnsnfv mpan2 eqcomd sseq1d biimpa sylan 
      wfo f1ofo fofn cun foima df-suc imaeq2i imaundi eqtri eqeq1i ssun2 jca 
      adantll w3a cop ac6sfilem3 snex unex syl 3exp1 r19.23aiv com12 wb fvex 
      sbcrexg sylan2b ralsn syldan sylbi syl6 com3r mpd ex imaexg cla4v syl5 
      com23 19.23adv cbvexv imbi1i albii 19.21aiv cbvalv syl5ib finds1 ) EPQZAD
      FRZCESZEFGTZUAZBCESZUBZGUCZUVNEITZUDUEZIUFRUVPUWAUGZIEUHUWCUWDIUFUWCUWBUF
      QZUWDUWCEUIQZUWEUWDUGZEUWBUDUJUKUWCEUWBJTZULZJUCZUWFUWGUGEUWBJIUMUNUWFUWE
      UWJUWDUWFKTZUWBUWHULZJUCZUVOCUWKSZUWKFUVQUAZBCUWKSZUBZGUCZUGZUGZKUOZUWJUW
      DUGZUWEUWTUXBKEUIUWKEUPZUWMUWJUWSUWDUXCUWLUWIJUWKEUWBUWHUQURUXCUWNUVPUWRU
      WAUVOCUWKEUSUXCUWQUVTGUXCUWOUVRUWPUVSUWKEFUVQUTBCUWKEUSVAURVBVBVCUXAUWKVD
      UWHULZJUCZUWSUGZKUOUWKLTZUWHULZJUCZUWSUGZKUOZUWKUXGVEZUWHULZJUCZUWSUGZKUO
      ZILUWBVDUPZUWTUXFKUXQUWMUXEUWSUXQUWLUXDJUWBVDUWKUWHVFURVGVHUWBUXGUPZUWTUX
      JKUXRUWMUXIUWSUXRUWLUXHJUWBUXGUWKUWHVFURVGVHUWBUXLUPZUWTUXOKUXSUWMUXNUWSU
      XSUWLUXMJUWBUXLUWKUWHVFURVGVHUXFKUXDUWSJUXDUWRUWNUXDVDUWKUWHVIZULZUXTVDUP
      ZUWKVDUPZUBZUWRUWKVDUWHVJUYAUYDUWKUXTVKVLUYDVDUIQZUWKFVDUAZBGVDVMZCUWKSZU
      BZUWRUYEUYDVNVOUYCUYIUYBUYCUYIVDFVDUAZUYGCVDSZUBUYJUYKFVPUYGCVQVRUYCUYFUY
      JUYHUYKUWKVDFVDUTUYGCUWKVDUSVAVSVTUWQUYIGCVDUICTZVDQGWAUYFUYHGUYFGWAUYGGC
      UWKUYLUWKQGWAZBGVDVNWBWCWDUVQVDUPZUWOUYFUWPUYHUWKFUVQVDWEUYNBUYGCUWKBGVDW
      FWGVAWHWIWJWKWLWMUXGUFQZMTZUXGUWHULZJUCZUVOCUYPSZUYPFUVQUAZBCUYPSZUBZGUCZ
      UGZUGZMUOZUXPUXKUYOVUFUXPUYOVUFUBUXOKUYOUYPUXGNTZULZNUCZVUDUGZMUOZUXOVUFU
      YOVUKUBUXMUWSJUYOVUKUXMUWSUGUYOUXMVUKUWSUYOUXMVUKUWSUGUYOUXMUBZUXTUXGWNZU
      XGVUGULZNUCZUVOCVUMSZVUMFUVQUAZBCVUMSZUBZGUCZUGZUGZUWSVUKVULVUOVVBUWSUGVU
      LUXGVUMUXTUXGWOZULZVUMUXGVVCVIZULZVUOUYOUXLUWKUXTULZVVDUXMVVGVVDUYOUXLUWK
      UXTWPZUXGUXLWQVVDVVGUXLUWKUXGUXTWRUXLUWKUXTWSUXGWTXAVTUWKUXLUWHVJZXBUXGVU
      MVVCVJVUNVVFNVVEVVCUXTUIQZVVCUIQUWHJUMXCZUXTUXGUIXDXEXCVUMUXGVUGVVEXFXGWJ
      VUOVVBVULUWSVUOVVBVVAVULUWSUGVUOVVAXHVULUWNVVAUWRVULUWNVVAUWRUGZVULUWNUBZ
      VUPVVLVULUWNVUPUXMUWNVUPUGZUYOUXMVVGVUMUWKWQZVVNVVIVVGVVHUXTXIZUWKUPZUBZV
      VQVVOVVGVVRUXLUWKUXTXJVLVVHVVQXKVVQVUMVVPWQVVOUXTUXGXLVVPUWKVUMXMXNWJUVOC
      VUMUWKXOWJVTXPVUPVVAVVMUWRVUPVVAVUTVVMUWRUGZVUPVUTXHVUTVUMFOTZUAZBGVVTVMZ
      CVUMSZUBZOUCVVSVUSVWDGOVUSOWAVWAVWCGVWAGWAVWBGCVUMUYLVUMQGWABGVVTOUMZWBWC
      WDUVQVVTUPZVUQVWAVURVWCVUMFUVQVVTWEVWFBVWBCVUMBGOXQWGVAXRVWDVVSOVVMVWDUWR
      VULUWNUVOCUXGUXTXSZXTZSZVWDUWRUGZUXMUWNVWIUYOUXTUXLYAZUXTUXGXTZWNZUWKWQZU
      BZUWNVWIUXMVWHUWKWQZUWNVWIVWOVWPUWNVWIUVOCVWHUWKXOXPVWKVWNVWPVWKVWMVWHUWK
      VWKVWHVWMVWKUXGUXLQVWHVWMUPUXGLUMYBUXLUXGUXTYCYDYEYFYGYHUXMVWKVWNUXMVVGUX
      LUWKUXTYIZVWKVVIUXLUWKUXTYJZUXLUWKUXTYKWJUXMUXTUXLWNZUWKUPZVUMVWMYLZUWKUP
      ZVWNUXMVVGVWQVWTVVIVWRUXLUWKUXTYMWJVWTVXBVWSVXAUWKVWSUXTUXGVWLYLZWNVXAUXL
      VXCUXTUXGYNYOUXTUXGVWLYPYQYRVLVXBVWMVXAWQVWNVWMVUMYSVXAUWKVWMXMXNWJYTYHUU
      AVULUVOCVWGVMZVWJVWIVULACVWGVMZDFRZVWJVXDVULVXFVWJUYOVVGVXFVWJUGUXMVXFUYO
      VVGUBZVWJVXEVXGVWJUGDFDTZFQZVXEVXGVWDUWRVXIVXEVXGUUBVWDUBUWKFVVTVWGVXHUUC
      ZXTZYLZUAZBGVXLVMZCUWKSZUBZUWRABCDKLFGOJHUUDVXLUIQVXPUWRUGVVTVXKVWEVXJUUE
      UUFZUWQVXPGMVXLUIUYPVXLQGWAVXMVXOGVXMGWAVXNGCUWKUYMBGVXLVXQWBWCWDUVQVXLUP
      ZUWOVXMUWPVXOUWKFUVQVXLWEVXRBVXNCUWKBGVXLWFWGVAWHXEUUGUUHUUIUUJVVIXBXPVWG
      UIQVXDVXFUUKUXGUXTUULZACDVWGFUIUUMXEUUNUVOCVWGVXSUUOUUNUUPUUJWLUUQUURUUSU
      UTUVAUUSUURUUSUUTVUJVVBMVUMVVJVUMUIQVVKUXTUXGUIUVBXEUYPVUMUPZVUIVUOVUDVVA
      VXTVUHVUNNUYPVUMUXGVUGUQURVXTUYSVUPVUCVUTUVOCUYPVUMUSVXTVUBVUSGVXTUYTVUQV
      UAVURUYPVUMFUVQUTBCUYPVUMUSVAURVBVBUVCUVDUVAUVEXPUVFVUEVUJMUYRVUIVUDUYQVU
      HJNUYPUXGUWHVUGXFUVGUVHUVIUUNUVJUVAUXJVUEKMUWKUYPUPZUXIUYRUWSVUDVYAUXHUYQ
      JUWKUYPUXGUWHUQURVYAUWNUYSUWRVUCUVOCUWKUYPUSVYAUWQVUBGVYAUWOUYTUWPVUAUWKU
      YPFUVQUTBCUWKUYPUSVAURVBVBUVKUVLUVMUVDUUSUUQUUTUUJUUIUUQXP $.
      $( [24-Jun-2009] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Schroeder-Bernstein Theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.  $d x B $.  $d x D $.  $d x f $.  $d x g $.
    sbthlem.1 $e |- A e. _V $.
    sbthlem.2 $e |- D = { x |
                   ( x C_ A /\ ( g " ( B \ ( f " x ) ) ) C_ ( A \ x ) ) } $.
    $( Lemma for ~ sbth . $)
    sbthlem1 $p |- U. D C_ ( A \ ( g " ( B \ ( f " U. D ) ) ) ) $=
      ( cuni cv cima cdif wss unissb wcel wa abeq2i wi ssconb exbiri difss 
      sstr2 mpi syl5 pm2.43d imp sylbi elssuni imass2 sscon 3syl sstrd mprgbir 
      ) DIZBFJZCEJZUNKZLZKZLZMAJZUTMADADUTNVADOZVABUOCUPVAKZLZKZLZUTVBVABMZVEBV
      ALZMZPZVAVFMZVJADHQVGVIVKVGVIVKVGVEBMZVIVKRVIVGVLVKVIVAVEBSTVIVHBMVLBVAUA
      VEVHBUBUCUDUEUFUGVBURVDMZUSVEMVFUTMVBVAUNMVCUQMVMVADUHVAUNUPUIVCUQCUJUKUR
      VDUOUIUSVEBUJUKULUM $.
      $( [22-Mar-1998] $)

    $( Lemma for ~ sbth . $)
    sbthlem2 $p |- ( ran g C_ A ->
                     ( A \ ( g " ( B \ ( f " U. D ) ) ) ) C_ U. D ) $=
      ( cv crn wss cuni cima cdif wcel wa cab sbthlem1 imass2 ax-mp sscon wb 
      ssconb wi imassrn sstr2 difss sylancl mpbiri jctil ssexi wceq sseq1 
      difeq2 sseq2d imaeq2 difeq2d 3syl bitrd anbi12d elab sylibr syl6eleqr 
      elssuni syl ) FIZJZBKZBVFCEIZDLZMZNZMZNZDOVNVJKVHVNAIZBKZVFCVIVOMZNZMZBVO
      NZKZPZAQZDVHVNBKZVFCVIVNMZNZMZBVNNZKZPZVNWCOVHWIWDVHWIVNBWGNKZWGVMKZWKWFV
      LKZWLVKWEKZWMVJVNKWNABCDEFGHRVJVNVISTVKWECUATWFVLVFSTWGVMBUATWGBKZWDWIWKU
      BVHWGVNBUCWGVGKVHWOUDVFWFUEWGVGBUFTBVMUGZUHUIWPUJWBWJAVNVNBGWPUKVOVNULZVP
      WDWAWIVOVNBUMWQWAVSWHKZWIWQVTWHVSVOVNBUNUOWQVRWFULVSWGULWRWIUBWQVQWECVOVN
      VIUPUQVRWFVFUPVSWGWHUMURUSUTVAVBHVCVNDVDVE $.
      $( [22-Mar-1998] $)

    $( Lemma for ~ sbth . $)
    sbthlem3 $p |- ( ran g C_ A ->
                  ( g " ( B \ ( f " U. D ) ) ) = ( A \ U. D ) ) $=
      ( cv crn wss cuni cdif cima wa wceq sbthlem2 sbthlem1 jctil eqss sylibr 
      difeq2d wi imassrn sstr2 ax-mp dfss4 sylib eqtr2d ) FIZJZBKZBDLZMBBUJCEIU
      MNMZNZMZMZUOULUMUPBULUMUPKZUPUMKZOUMUPPULUSURABCDEFGHQABCDEFGHRSUMUPTUAUB
      ULUOBKZUQUOPUOUKKULUTUCUJUNUDUOUKBUEUFUOBUGUHUI $.
      $( [22-Mar-1998] $)

    $( Lemma for ~ sbth . $)
    sbthlem4 $p |- ( ( ( dom g = B /\ ran g C_ A ) /\ Fun `' g ) ->
                  ( `' g " ( A \ U. D ) ) = ( B \ ( f " U. D ) ) ) $=
      ( cv cdm wceq crn wss wa ccnv wfun cuni cima cdif cres difss sseq2 
      mpbiri ssdmres sylib dfdm4 syl5reqr funcnvres sbthlem3 reseq2d sylan9eqr 
      rneqd sylan9eq anassrs df-ima syl6reqr ) FIZJZCKZUQLBMZNUQOZPZNCEIDQZRZSZ
      VABVCSZTZLZVAVFRUSUTVBVEVHKUSUTVBNZVEUQVETZOZLZVHUSVJJZVEVLUSVEURMZVMVEKU
      SVNVECMCVDUAURCVEUBUCVEUQUDUEVJUFUGVIVKVGVBUTVKVAUQVERZTVGVEUQUHUTVOVFVAA
      BCDEFGHUIUJUKULUMUNVAVFUOUP $.
      $( [27-Mar-1998] $)

    ${
      $d x H $.
      sbthlem.3 $e |- H = ( ( f |` U. D ) u. ( `' g |` ( A \ U. D ) ) ) $.
      $( Lemma for ~ sbth . $)
      sbthlem5 $p |- ( ( dom f = A /\ ran g C_ A ) -> dom H = A ) $=
        ( cv cdm wceq crn wss wa cuni cdif cun cin cima sbthlem1 difss sstri 
        sseq2 mpbiri dfss sylib uneq1d imassrn sbthlem3 sseq1d mpbii uneq2d 
        sylan9eq cres ccnv dmeqi dmun dmres df-rn eqcomi ineq2i eqtri uneq12i 
        3eqtri syl6reqr undif mpbi syl6eq ) EKZLZBMZFKZNZBOZPZGLZDQZBVSRZSZBVQW
        AVSVLTZVTVOTZSZVRVMVPWAWBVTSWDVMVSWBVTVMVSVLOZVSWBMVMWEVSBOZVSBVNCVKVSU
        ARZUAZRBABCDEFHIUBBWHUCUDZVLBVSUEUFVSVLUGUHUIVPVTWCWBVPVTVOOZVTWCMVPWHV
        OOWJVNWGUJVPWHVTVOABCDEFHIUKULUMVTVOUGUHUNUOVRVKVSUPZVNUQZVTUPZSZLWKLZW
        MLZSWDGWNJURWKWMUSWOWBWPWCVKVSUTWPVTWLLZTWCWLVTUTWQVOVTVOWQVNVAVBVCVDVE
        VFVGWFWABMWIVSBVHVIVJ $.
        $( [22-Mar-1998] $)

      $( Lemma for ~ sbth . $)
      sbthlem6 $p |- ( ( ran f C_ B /\
               ( ( dom g = B /\ ran g C_ A ) /\ Fun `' g ) ) -> ran H = B ) $=
        ( cv cdm wceq crn wss wa ccnv wfun cuni cima cdif cun cres sbthlem4 
        df-ima syl5reqr uneq2d rnun rneqi uneq1i 3eqtr4i syl6reqr wi imassrn 
        sstr2 ax-mp undif sylib sylan9eqr ) FKZLCMUTNBOPUTQZRPZEKZNZCOZGNZVCDSZ
        TZCVHUAZUBZCVBVJVHVABVGUAZUCZNZUBZVFVBVIVMVHVBVAVKTVIVMABCDEFHIUDVAVKUE
        UFUGVCVGUCZVLUBZNVONZVMUBVFVNVOVLUHGVPJUIVHVQVMVCVGUEUJUKULVEVHCOZVJCMV
        HVDOVEVRUMVCVGUNVHVDCUOUPVHCUQURUS $.
        $( [27-Mar-1998] $)

      $( Lemma for ~ sbth . $)
      sbthlem7 $p |- ( ( Fun f /\ Fun `' g ) -> Fun H ) $=
        ( cv wfun ccnv wa cuni cres cdif cun cdm cin c0 wceq wss dmres inss1 
        eqsstri ssrin ax-mp sslin sstri difdisj sseqtri ss0 funun mpan2 funres 
        syl2an wb funeq sylibr ) EKZLZFKMZLZNVADOZPZVCBVEQZPZRZLZGLZVFLZVHLZVJV
        BVDVLVMNVFSZVHSZTZUAUBZVJVPUAUCVQVPVEVGTZUAVPVEVOTZVRVNVEUCVPVSUCVNVEVA
        SZTVEVAVEUDVEVTUEUFVNVEVOUGUHVOVGUCVSVRUCVOVGVCSZTVGVCVGUDVGWAUEUFVOVGV
        EUIUHUJVEBUKULVPUMUHVFVHUNUOVEVAUPVGVCUPUQGVIUBVKVJURJGVIUSUHUT $.
        $( [27-Mar-1998] $)

      $( Lemma for ~ sbth . $)
      sbthlem8 $p |- ( ( Fun `' f /\ ( ( ( Fun g /\ dom g = B ) /\ ran g C_ A )
                     /\ Fun `' g ) ) -> Fun `' H ) $=
        ( cv ccnv wfun cdm wceq wa crn wss cuni cres cdif cun cin c0 funres11 
        funcnvcnv syl ad3antrrr anim12i cima ineq12 df-ima df-rn eqtr2i 
        sbthlem4 eqtri syl5eqr sylancr difdisj syl6eq adantlll adantl funun 
        syl11anc wb cnveqi cnvun funeq ax-mp sylibr ) EKZLMZFKZMZVMNCOZPVMQBRZP
        VMLZMZPZPZVKDSZTZLZVQBWAUAZTZLZUBZMZGLZMZVTWCMZWFMZPWCNZWFNZUCZUDOZWHVL
        WKVSWLWAVKUEVNWLVOVPVRVNVQLMWLVMUFWDVQUEUGUHUIVSWPVLVOVPVRWPVNVOVPPVRPZ
        WOVKWAUJZCWRUAZUCZUDWMWROWNWSOWOWTOWQWMWRWNWSUKWRWBQWMVKWAULWBUMUNWQVQW
        DUJZWSWNABCDEFHIUOXAWEQWNVQWDULWEUMUPUQURWRCUSUTVAVBWCWFVCVDWIWGOWJWHVE
        WIWBWEUBZLWGGXBJVFWBWEVGUPWIWGVHVIVJ $.
        $( [27-Mar-1998] $)

      $( Lemma for ~ sbth . $)
      sbthlem9 $p |- ( ( f : A -1-1-> B /\ g : B -1-1-> A ) ->
                    H : A -1-1-onto-> B ) $=
        ( cv wfun cdm wceq wa crn wss ccnv wf1 wf1o sbthlem7 sbthlem5 adantrl 
        anim12i an42s adantlr sbthlem8 adantll sbthlem6 df-rn syl5eqr simpr 
        anim1i sylanr1 jca32 wf df-f1 wfn df-f df-fn anbi1i bitri anbi12i 
        dff1o4 3imtr4i ) EKZLZVFMBNZOZVFPCQZOZVFRLZOZFKZLZVNMCNZOZVNPBQZOZVNRLZ
        OZOZGLZGMBNZOZGRZLZWFMZCNZOZOZBCVFSZCBVNSZOBCGTZWBWEWGWIVKWAWEVLVIWAWEV
        JVGVTVHVSWEVGVTOWCVHVSOWDABCDEFGHIJUAVHVRWDVQABCDEFGHIJUBUCUDUEUFUFVLWA
        WGVKABCDEFGHIJUGUHVKWAWIVLVJWAWIVIVJVPVROZVTWIVSVJWOVTOOGPCWHABCDEFGHIJ
        UIGUJUKVQVPVRVOVPULUMUNUHUFUOWLVMWMWAWLBCVFUPZVLOVMBCVFUQWPVKVLWPVFBURZ
        VJOVKBCVFUSWQVIVJVFBUTVAVBVAVBWMCBVNUPZVTOWACBVNUQWRVSVTWRVNCURZVROVSCB
        VNUSWSVQVRVNCUTVAVBVAVBVCWNGBURZWFCURZOWKBCGVDWTWEXAWJGBUTWFCUTVCVBVE 
        $.
        $( [28-Mar-1998] $)

      ${
        $d f g A $.  $d f g B $.
        sbthlem.4 $e |- B e. _V $.
        $( Lemma for ~ sbth . $)
        sbthlem10 $p |- ( ( A ~<_ B /\ B ~<_ A ) -> A ~~ B ) $=
          ( cdom wbr wa cv wf1 wex cen brdom anbi12i eeanv bitr4i wf1o 
          sbthlem9 f1oen syl 19.23aivv sylbi ) BCLMZCBLMZNZBCEOPZCBFOPZNZFQEQZB
          CRMZUKULEQZUMFQZNUOUIUQUJURBCEKSCBFHSTULUMEFUAUBUNUPEFUNBCGUCUPABCDEF
          GHIJUDBCGHUEUFUGUH $.
          $( [20-Jan-2007] $) $( [28-Mar-1998] $)
      $}
    $}

  $}

  ${
    $d x y z w f g A $.  $d x y z w f g B $.
    $( Schroeder-Bernstein Theorem.  Theorem 18 of [Suppes] p. 95.  This
       theorem states that if set ` A ` is smaller (has lower cardinality) than
       ` B ` and vice-versa, then ` A ` and ` B ` are equinumerous (have the
       same cardinality).  The interesting thing is that this can be proved
       without invoking the Axiom of Choice, as we do here, but the proof as
       you can see is quite difficult.  (The theorem can be proved more easily
       if we allow AC.) The main proof consists of lemmas ~ sbthlem1 through
       ~ sbthlem10 ; this final piece mainly changes bound variables to
       eliminate the hypotheses of ~ sbthlem10 .  We follow closely the proof
       in Suppes, which you should consult to understand our proof at a higher
       level.  Note that Suppes' proof, which is credited to J. M. Whitaker,
       does not require the Axiom of Infinity. $)
    sbth $p |- ( ( A ~<_ B /\ B ~<_ A ) -> A ~~ B ) $=
      ( vz vw vx vy vg vf cdom wbr wa cen cvv wcel wi cv wceq breq1 breq2 
      anbi12d imbi12d wss cima cdif cab cuni cres ccnv cun visset sseq1 wb 
      imaeq2 difeq2d 3syl difeq2 sseq2d bitrd cbvabv eqid sbthlem10 vtocl2g 
      reldom brrelexi syl2an pm2.43i ) ABIJZBAIJZKZABLJZAMNBMNVIVJOZVGVHCPZDPZI
      JZVMVLIJZKZVLVMLJZOAVMIJZVMAIJZKZAVMLJZOVKCDABMMVLAQZVPVTVQWAWBVNVRVOVSVL
      AVMIRVLAVMISTVLAVMLRUAVMBQZVTVIWAVJWCVRVGVSVHVMBAISVMBAIRTVMBALSUAEVLVMFP
      ZVLUBZGPZVMHPZWDUCZUDZUCZVLWDUDZUBZKZFUEZHGWGWNUFZUGWFUHVLWOUDUGUIZCUJWME
      PZVLUBZWFVMWGWQUCZUDZUCZVLWQUDZUBZKFEWDWQQZWEWRWLXCWDWQVLUKXDWLXAWKUBZXCX
      DWIWTQWJXAQWLXEULXDWHWSVMWDWQWGUMUNWIWTWFUMWJXAWKUKUOXDWKXBXAWDWQVLUPUQUR
      TUSWPUTDUJVAVBABIVCVDBAIVCVDVEVF $.
      $( [20-Jan-2007] $) $( [8-Jun-1998] $)
  $}

  $( Schroeder-Bernstein Theorem and its converse. $)
  sbthbg $p |- ( B e. C -> ( ( A ~<_ B /\ B ~<_ A ) <-> A ~~ B ) ) $=
    ( wcel cdom wbr wa cen sbth wi endom a1i ensymg syl6 jcad impbid2 ) BCDZABE
    FZBAEFZGABHFZABIQTRSTRJQABKLQTBAHFSABCMBAKNOP $.
    $( [8-Jun-1998] $)

  ${
    $d x y $.
    $( Schroeder-Bernstein Theorem in class form. $)
    sbthcl $p |- ~~ = ( ~<_ i^i `' ~<_ ) $=
      ( vx vy cen cdom ccnv cin relen wrel reldom relin1 ax-mp cv wbr wa cop 
      wcel cvv wb visset sbthbg df-br opelcnv bitr4i anbi12i elin 3bitr3ri 
      eqrelriv ) ABCDDEZFZGDHUIHIDUHJKALZBLZDMZUKUJDMZNZUJUKCMZUJUKOZUIPZUPCPUK
      QPUNUORBSZUJUKQTKUNUPDPZUPUHPZNUQULUSUMUTUJUKDUAUMUKUJODPUTUKUJDUAUJUKDAS
      URUBUCUDUPDUHUEUCUJUKCUAUFUG $.
      $( [28-Mar-1998] $)
  $}

  $( Alternate definition of strict dominance.  Compare Definition 3 of
     [Suppes] p. 97. $)
  dfsdom2 $p |- ~< = ( ~<_ \ `' ~<_ ) $=
    ( csdm cdom cen cdif ccnv cin df-sdom sbthcl difeq2i difin 3eqtri ) ABCDBBB
    EZFZDBLDGCMBHIBLJK $.
    $( [31-Mar-1998] $)

  ${
    brsdom2.1 $e |- A e. _V $.
    brsdom2.2 $e |- B e. _V $.
    $( Alternate definition of strict dominance.  Definition 3 of [Suppes]
       p. 97. $)
    brsdom2 $p |- ( A ~< B <-> ( A ~<_ B /\ -. B ~<_ A ) ) $=
      ( cop csdm wcel cdom ccnv cdif wbr wn wa dfsdom2 eleq2i df-br opelcnv 
      bitr4i notbii anbi12i eldif 3bitr4i ) ABEZFGUCHHIZJZGZABFKABHKZBAHKZLZMZF
      UEUCNOABFPUJUCHGZUCUDGZLZMUFUGUKUIUMABHPUHULUHBAEHGULBAHPABHCDQRSTUCHUDUA
      RUB $.
      $( [27-Jul-2004] $)
  $}

  $( Strict dominance is not symmetric.  Theorem 21(ii) of [Suppes] p. 97. $)
  sdomnsym $p |- ( A ~< B -> -. B ~< A ) $=
    ( csdm wbr cen sdomnen cdom sbth sdomdom syl2an mtand ) ABCDZBACDZABEDZABFA
    BGDBAGDNLMABHABIBAIJK $.
    $( [8-Jun-1998] $)

  $( Theorem 22(i) of [Suppes] p. 97. $)
  domnsym $p |- ( A ~<_ B -> -. B ~< A ) $=
    ( cdom wbr csdm cen wo wn brdom2 sdomnsym cvv wcel relsdom brrelexi 
    sdomnen ensymg con3d sylc con2i jaoi sylbi ) ABCDABEDZABFDZGBAEDZHZABIUBUEU
    CABJUDUCUDBKLZBAFDZHUCHBAEMNBAOUFUCUGABKPQRSTUA $.
    $( [10-Jun-1998] $)

  $( Any set dominates the empty set. $)
  0dom $p |- (/) ~<_ A $=
    ( c0 cvv wcel wss cdom wbr 0ex 0ss ssdomg mp2 ) BCDBAEBAFGHAIBACJK $.
    $( [26-Oct-2003] $)

  $( A set dominated by the empty set is empty. $)
  dom0 $p |- ( A ~<_ (/) <-> A = (/) ) $=
    ( c0 cdom wbr wa cen wceq 0dom biantru cvv wcel wb 0ex sbthbg ax-mp en0 
    3bitri ) ABCDZRBACDZEZABFDZABGSRAHIBJKTUALMABJNOAPQ $.
    $( [22-Nov-2004] $)

  $( A set strictly dominates the empty set iff it is not empty. $)
  0sdomg $p |- ( A e. B -> ( (/) ~< A <-> A =/= (/) ) ) $=
    ( wcel c0 cen wbr wn wceq csdm wne ensymg 0ex ensym impbid1 en0 syl6bb 
    notbid cdom brsdom 0dom mpbiran df-ne 3bitr4g ) ABCZDAEFZGZADHZGDAIFZADJUDU
    EUGUDUEADEFZUGUDUEUIDABKADLMNAOPQUHDARFUFDASATUAADUBUC $.
    $( [25-Nov-2006] $) $( [23-Mar-2006] $)

  ${
    0sdom.1 $e |- A e. _V $.
    $( A set strictly dominates the empty set iff it is not empty. $)
    0sdom $p |- ( (/) ~< A <-> A =/= (/) ) $=
      ( cvv wcel c0 csdm wbr wne wb 0sdomg ax-mp ) ACDEAFGAEHIBACJK $.
      $( [26-Nov-2006] $) $( [29-Jul-2004] $)
  $}

  $( The empty set does not strictly dominate any set. $)
  sdom0 $p |- -. A ~< (/) $=
    ( c0 cdom wbr csdm wn 0dom domnsym ax-mp ) BACDABEDFAGBAHI $.
    $( [26-Oct-2003] $)

  $( Transitivity of strict dominance and dominance.  Theorem 22(iii) of
     [Suppes] p. 97. $)
  sdomdomtr $p |- ( C e. D -> ( ( A ~< B /\ B ~<_ C ) -> A ~< C ) ) $=
    ( wcel csdm wbr cdom wa cen wn sdomnen ad2antrl wi domtr sdomdom sylan wo 
    brdom2 df-or bitri sylib adantl ensymg endom syl6 sylan9r jctird simprr 
    sbth jcad entr mt3d ex ) CDEZABFGZBCHGZIZACFGZUOURIZUSABJGZUPVAKUOUQABLMUTU
    SKZACJGZCBJGZIVAUTVBVCVDURVBVCNZUOURACHGZVEABHGZUQVFUPABCOABPZQVFUSVCRVEACS
    USVCTUAUBZUCUTVBCBHGZUQIVDUTVBVJUQUTVBCAHGZVGIVJUTVBVKVGURVBVCUOVKVIUOVCCAJ
    GVKACDUDCAUEUFUGUPVGUOUQVHMUHCABOUFUOUPUQUIUHCBUJUFUKACBULUFUMUN $.
    $( [26-Oct-2003] $)

  $( Transitivity of strict dominance and equinumerosity.  Exercise 11 of
     [Suppes] p. 98. $)
  sdomentr $p |- ( C e. D -> ( ( A ~< B /\ B ~~ C ) -> A ~< C ) ) $=
    ( wcel csdm wbr cdom cen sdomdomtr endom sylan2i ) CDEABFGBCHGACFGBCIGABCDJ
    BCKL $.
    $( [26-Oct-2003] $)

  $( Transitivity of equinumerosity and strict dominance. $)
  ensdomtr $p |- ( ( A ~~ B /\ B ~< C ) -> A ~< C ) $=
    ( cvv wcel cen wbr csdm wa wi cdom wn endomtr ex adantl ensymg imp entr 
    syl con3d anim12d brsdom 3imtr4g expimpd relsdom brrelexi con3i pm2.21d 
    adantld pm2.61i ) BDEZABFGZBCHGZIACHGZJUKULUMUNUKULIZBCKGZBCFGZLZIACKGZACFG
    ZLZIUMUNUOUPUSURVAULUPUSJUKULUPUSABCMNOUOUTUQUOBAFGZUTUQJUKULVBABDPQVBUTUQB
    ACRNSTUABCUBACUBUCUDUKLZUMUNULVCUMUNUMUKBCHUEUFUGUHUIUJ $.
    $( [26-Oct-2003] $)

  $( Strict dominance is irreflexive.  Theorem 21(i) of [Suppes] p. 97. $)
  sdomirr $p |- -. A ~< A $=
    ( cvv wcel csdm wbr wn cen sdomnen enrefg nsyl3 relsdom brrelexi con3i 
    pm2.61i ) ABCZAADEZFPAAGEOAAHABIJPOAADKLMN $.
    $( [4-Jun-1998] $)

  $( Technical lemma for simplifying proofs involving strict dominance. $)
  sdomex $p |- ( A ~< B -> ( A e. _V /\ B e. _V ) ) $=
    ( csdm wbr cvv wcel relsdom brrelexi wn sdomirr brprc mtbiri con4i jca ) AB
    CDZAEFBEFZABCGHPOPIOAACDAJABCKLMN $.
    $( [3-Sep-2004] $)

  $( Strict dominance is transitive.  Theorem 21(iii) of [Suppes] p. 97. $)
  sdomtr $p |- ( ( A ~< B /\ B ~< C ) -> A ~< C ) $=
    ( csdm wbr cvv wcel wa wi sdomex simprd cdom sdomdomtr sdomdom sylan2i syl 
    anabsi7 ) ABDEZBCDEZACDEZSCFGZRSHTISBFGUABCJKUARBCLETSABCFMBCNOPQ $.
    $( [9-Jun-1998] $)

  $( Strict dominance has no 2-cycle loops. $)
  sdomn2lp $p |- -. ( A ~< B /\ B ~< A ) $=
    ( csdm wbr wa sdomirr sdomtr mto ) ABCDBACDEAACDAFABAGH $.
    $( [6-May-2008] $)

  $( Transitivity of dominance and strict dominance.  Theorem 22(ii) of
     [Suppes] p. 97. $)
  domsdomtr $p |- ( ( A ~<_ B /\ B ~< C ) -> A ~< C ) $=
    ( cdom wbr csdm cen wo wi brdom2 sdomtr ex cvv wcel relsdom brrelexi wa wn 
    endomtr adantl ensymg entr syl6 imp con3d anim12d brsdom 3imtr4g syl 
    pm2.43b jaoi sylbi ) ABDEZBCFEZACFEZUMABFEZABGEZHUNUOIZABJUPURUQUPUNUOABCKL
    UQUNUOUNBMNZUQURIBCFOPUSUQURUSUQQZBCDEZBCGEZRZQACDEZACGEZRZQUNUOUTVAVDVCVFU
    QVAVDIUSUQVAVDABCSLTUTVEVBUSUQVEVBIZUSUQBAGEZVGABMUAVHVEVBBACUBLUCUDUEUFBCU
    GACUGUHLUIUJUKULUD $.
    $( [10-Jun-1998] $)

  $( Equality-like theorem for equinumerosity. $)
  enen1 $p |- ( ( B e. D /\ A ~~ B ) -> ( A ~~ C <-> B ~~ C ) ) $=
    ( wcel cen wbr wa wi ensymg imp entr ex syl adantll impbid ) BDEZABFGZHZACF
    GZBCFGZSBAFGZTUAIQRUBABDJKUBTUABACLMNSUATRUATQABCLOMP $.
    $( [18-Dec-2003] $)

  $( Equality-like theorem for equinumerosity. $)
  enen2 $p |- ( ( B e. D /\ A ~~ B ) -> ( C ~~ A <-> C ~~ B ) ) $=
    ( wcel cen wbr wa wi entr expcom adantl ex ensymg imp syl5com impbid ) BDEZ
    ABFGZHZCAFGZCBFGZSUAUBIRUASUBCABJKLUBBAFGZUATUBUCUACBAJMRSUCABDNOPQ $.
    $( [18-Dec-2003] $)

  $( Equality-like theorem for equinumerosity and dominance. $)
  domen1 $p |- ( ( B e. D /\ A ~~ B ) -> ( A ~<_ C <-> B ~<_ C ) ) $=
    ( wcel cen wbr wa cdom wi ensymg imp endomtr ex syl adantl impbid ) BDEZABF
    GZHZACIGZBCIGZTBAFGZUAUBJRSUCABDKLUCUAUBBACMNOSUBUAJRSUBUAABCMNPQ $.
    $( [8-Nov-2003] $)

  $( Equality-like theorem for equinumerosity and dominance. $)
  domen2 $p |- ( ( B e. D /\ A ~~ B ) -> ( C ~<_ A <-> C ~<_ B ) ) $=
    ( wcel cen wbr wa cdom wi domentr expcom adantl ex ensymg imp syl5com 
    impbid ) BDEZABFGZHZCAIGZCBIGZTUBUCJSUBTUCCABKLMUCBAFGZUBUAUCUDUBCBAKNSTUDA
    BDOPQR $.
    $( [7-Jul-2004] $) $( [8-Nov-2003] $)

  $( Equality-like theorem for equinumerosity and strict dominance. $)
  sdomen1 $p |- ( ( B e. D /\ A ~~ B ) -> ( A ~< C <-> B ~< C ) ) $=
    ( wcel cen wbr wa csdm wi ensymg imp ensdomtr ex syl adantll impbid ) BDEZA
    BFGZHZACIGZBCIGZTBAFGZUAUBJRSUCABDKLUCUAUBBACMNOTUBUASUBUARABCMPNQ $.
    $( [8-Nov-2003] $)

  $( Equality-like theorem for equinumerosity and strict dominance. $)
  sdomen2 $p |- ( ( B e. D /\ A ~~ B ) -> ( C ~< A <-> C ~< B ) ) $=
    ( cvv wcel cen wbr wa csdm wb wi sdomentr exp3a com23 imp adantll ensymg 
    syl9r imp31 impbid expl wn relen brrelexi con3i pm2.21d adantld pm2.61i ) 
    AEFZBDFZABGHZICAJHZCBJHZKZLUJUKULUOUJUKIULIUMUNUKULUMUNLZUJUKULUPUKUMULUNUK
    UMULUNCABDMNOPQUJUKULUNUMLZUKULBAGHZUJUQABDRUJUNURUMUJUNURUMCBAEMNOSTUAUBUJ
    UCZULUOUKUSULUOULUJABGUDUEUFUGUHUI $.
    $( [7-Jul-2004] $) $( [8-Nov-2003] $)

  $( Dominance is trichotomous in the restricted case of ordinal numbers.
     (Contributed by Jeff Hankins, 24-Oct-2009.) $)
  domtriord $p |- ( ( A e. On /\ B e. On ) -> ( A ~<_ B <-> -. B ~< A ) ) $=
    ( con0 wcel wa cdom wbr csdm wn cen wi sbth expcom a1i iman brsdom notbii 
    bicomi bitri syl6ib wss onelss ssdomg sylan9r con3d wb word ordtri1 eloni 
    syl2an ancoms sylibrd adantl syld ensymg adantr endom syl6 jcad syl6ibr 
    con1d impbid ) ACDZBCDZEZABFGZBAHGZIZVEVFBAFGZBAJGZKZVHVFVKKVEVIVFVJBALMNVK
    VIVJIZEZIZVHVIVJOVHVNVGVMBAPZQRSTVEVFVGVEVFIZVMVGVEVPVIVLVEVPBAUAZVIVEVPABD
    ZIZVQVEVRVFVDVRABUAVCVFBAUBABCUCUDUEVDVCVQVSUFZBUGAUGVTVDVCBAUHBUIAUIUJUKUL
    VDVQVIKVCBACUCUMUNVEVJVFVEVJABJGZVFVCVJWAKVDBACUOUPABUQURUEUSVOUTVAVB $.
    $( [24-Oct-2009] $)

  ${
    $d f g z A $.  $d f g z B $.
    $( There exists a mapping from a set onto any (non-empty) set that it
       dominates. $)
    fodomr $p |- ( ( A e. C /\
                 (/) ~< B /\ B ~<_ A ) -> E. f f : A -onto-> B ) $=
      ( vz vg wcel c0 csdm wbr cdom w3a cvv cv wex wf1 wfo elisset 3ad2ant1 wb 
      reldom brrelexi wne 0sdomg n0 syl6bb syl biimpac 3adant1 brdomg biimpa 
      3adant2 wi wa ccnv crn cdif csn cxp cun xpexg difexg snex sylancl visset 
      cnvex jctil unexb sylib foeq1 cla4egv wfn wceq df-fo wfun cdm df-fn cin 
      funun wf df-f1 simprbi fconst ffun ax-mp jctir df-rn eqcomi snnz dmxp 
      ineq12i difdisj eqtri adantl wss f1f frn undif dmun uneq1i uneq2i 
      3eqtr2i syl5eq sylanbrc fdm dfdm4 syl5eqr uneq1d 0ss xpeq1 xp0r syl6eq 
      rneqd rn0 sseq1d mpbiri a1d rnxp adantr snssi eqsstrd ex pm2.61ine 
      ssequn2 sylan9eqr rnun syl5 expdimp 19.23adv syl3c ) ACGZHBIJZBAKJZLAMGZE
      NZBGZEOZBAFNZPZFOZABDNZQZDOZYKYLYNYMACRSYLYMYQYKYMYLYQYMBMGZYLYQTBAKUAUBU
      UDYLBHUCYQBMUDEBUEUFUGUHUIYKYMYTYLYKYMYTBACFUJUKULYNYPYTUUCUMZEYNYPUUEYNY
      PUNYSUUCFYNYPYSUUCYNABYRUOZAYRUPZUQZYOURZUSZUTZQZUUCYPYSUNZYNUUKMGZUULUUC
      UMYNUUFMGZUUJMGZUNUUNYNUUPUUOUUHMGUUIMGUUPYNUUHUUIMMVAAUUGMVBYOVCVDYRFVEV
      FVGUUFUUJVHVIUUBUULDUUKMABUUAUUKVJVKUGUULUUKAVLZUUKUPZBVMUUMABUUKVNUUQUUK
      VOZUUKVPZAVMZUUMUUKAVQYSUUSYPUUFVOZUUJVOZUNUUFVPZUUJVPZVRZHVMUUSYSUUFUUJV
      SYSUVBUVCYSBAYRVTZUVBBAYRWAWBUUHUUIUUJVTUVCUUHYOEVEZWCUUHUUIUUJWDWEWFUVFU
      UGUUHVRHUVDUUGUVEUUHUUGUVDYRWGZWHUUIHUCUVEUUHVMYOUVHWIUUHUUIWJWEZWKUUGAWL
      WMVDWNYSUVAYPYSUUGUUHUTZAUUTYSUUGAWOZUVKAVMYSUVGUVLBAYRWPZBAYRWQUGUUGAWRV
      IUUTUVDUVEUTUUGUVEUTUVKUUFUUJWSUUGUVDUVEUVIWTUVEUUHUUGUVJXAXBXCWNXDUUMUUF
      UPZUUJUPZUTZBUURYSYPUVPBUVOUTZBYSUVNBUVOYSYRVPZBUVNYSUVGUVRBVMUVMBAYRXEUG
      YRXFXGXHYPUVOBWOZUVQBVMYPUVSUMUUHHUUHHVMZUVSYPUVTUVSHBWOBXIUVTUVOHBUVTUVO
      HUPHUVTUUJHUVTUUJHUUIUSHUUHHUUIXJUUIXKXLXMXNXLXOXPXQUUHHUCZYPUVSUWAYPUNUV
      OUUIBUWAUVOUUIVMYPUUHUUIXRXSYPUUIBWOUWAYOBXTWNYAYBYCUVOBYDVIYEUUFUUJYFXCX
      DYGYHYIYBYIYJ $.
      $( [23-Mar-2006] $)
  $}

  ${
    $d x y z f A $.
    canth2.1 $e |- A e. _V $.
    $( Cantor's Theorem.  No set is equinumerous to its power set.
       Specifically, any set has a cardinality (size) strictly less than the
       cardinality of its power set.  For example, the cardinality of real
       numbers is the same as the cardinality of the power set of integers, so
       real numbers cannot be put into a one-to-one correspondence with
       integers.  Theorem 23 of [Suppes] p. 97.  For the function version, see
       ~ canth . $)
    canth2 $p |- A ~< ~P A $=
      ( vx vy vf cpw csdm wbr cdom cen wn brsdom cvv wcel cv csn visset snelpw 
      biimpi wceq wb wa sneqr sneq impbii a1i dom2 ax-mp wf1o wex wfo canth 
      f1ofo mto nex pwex bren mtbir mpbir2an ) AAFZGHAUTIHZAUTJHZKAUTLAMNVABCDA
      UTCOZPZDOZPZMVCANZVDUTNVCACQZRSVDVFTZVCVETZUAVGVEANUBVIVJVCVEVHUCVCVEUDUE
      UFUGUHVBAUTEOZUIZEUJVLEVLAUTVKUKAVKBULAUTVKUMUNUOAUTEABUPUQURUS $.
      $( [1-Apr-198] $)
  $}

  ${
    $d x A $.
    $( Cantor's theorem with the sethood requirement expressed as an
       antecedent.  Theorem 23 of [Suppes] p. 97. $)
    canth2g $p |- ( A e. B -> A ~< ~P A ) $=
      ( vx cv cpw csdm wbr wceq wb pweq breq12 mpdan visset canth2 vtoclg ) CDZ
      PEZFGZAAEZFGZCABPAHQSHRTIPAJPAQSFKLPCMNO $.
      $( [7-Nov-2003] $)
  $}

  $( The power set of the union of a set does not belong to the set.  This
     theorem provides a way of constructing a new set that doesn't belong to a
     given set. $)
  pwuninel $p |- -. ~P U. A e. A $=
    ( cvv wcel cuni cpw wn csdm wbr sdomirr wi uniexb wss cdom ssdom2g 
    domsdomtr canth2g sylan2 expcom syld elssuni syl5 sylbi mtoi elisset pwexb 
    bitri sylibr con3i pm2.61i ) ABCZADZEZACZFUJUMULULGHZULIUJUKBCZUMUNJAKZUOUL
    UKLZUNUMUOUQULUKMHZUNULUKBNURUOUNURUKULGHUNUOULUKULOUKBPQRSULATUAUBUCUMUJUM
    ULBCZUJULAUDUJUOUSUPUKUEUFUGUHUI $.
    $( [27-Jun-2008] $)

  $( The power set of the power set of the union of a set does not belong to
     the set.  This theorem provides a way of constructing a new set that
     doesn't belong to a given set. $)
  2pwuninel $p |- -. ~P ~P U. A e. A $=
    ( cuni cvv wcel cpw wn csdm wbr sdomirr wss cdom ssdom2g domsdomtr ex 
    canth2g pwexb sylbi sdomtr syl11anc syl5com syld elssuni syl5 mtoi elisset 
    bitri sylibr con3i pm2.61i ) ABZCDZUJEZEZADZFUKUNUMUMGHZUMIUKUMUJJZUOUNUKUP
    UMUJKHZUOUMUJCLUQUJUMGHZUOUKUQURUOUMUJUMMNUKUJULGHULUMGHZURUJCOUKULCDZUSUJP
    ZULCOQUJULUMRSTUAUMAUBUCUDUNUKUNUMCDZUKUMAUEUKUTVBVAULPUFUGUHUI $.
    $( [27-Jun-2008] $)

  $( No set equals its power set. $)
  pwne $p |- ( A e. B -> ~P A =/= A ) $=
    ( wcel cpw wceq wn wne csdm wbr sdomirr breq1 canth2g syl5cbir mtoi df-ne 
    sylibr ) ABCZADZAEZFRAGQSRRHIZRJSTARHIQRARHKABLMNRAOP $.
    $( [17-Nov-2008] $)

  $( No set equals the power set of its power set. $)
  2pwne $p |- ( A e. B -> ~P ~P A =/= A ) $=
    ( wcel cpw wceq wn wne csdm wbr sdomirr breq1 canth2g cvv pwexg syl sdomtr 
    syl11anc syl5cbir mtoi df-ne sylibr ) ABCZADZDZAEZFUDAGUBUEUDUDHIZUDJUEUFAU
    DHIZUBUDAUDHKUBAUCHIUCUDHIZUGABLUBUCMCUHABNUCMLOAUCUDPQRSUDATUA $.
    $( [17-Nov-2008] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Partial functions and restricted iota
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c Undef $.
  $c iota_ $.

  $( Extend class notation with undefined value function. $)
  cund $a class Undef $.

  $( Extend class notation with restricted description binder. $)
  crio $a class ( iota_ x e. A ph ) $.

  $( Def. 8.3.36 p. 181. $)
  $( Define the undefined value function, whose value at set ` s ` is
     guaranteed not to be a member of ` s ` (see ~ pwuninel ). $)
  df-undef $a |- Undef = ( s e. _V |-> ~P U. s ) $.

  ${
    $d s S $.
    undefval.1 $e |- S e. _V $.
    $( Value of the undefined value function.  Normally we will not reference
       the explicit value but will use ~ undefnel instead. $)
    undefval $p |- ( Undef ` S ) = ~P U. S $=
      ( vs cvv wcel cund cfv cuni cpw wceq cv unieq pweq syl df-undef uniex 
      pwex fvmpt ax-mp ) ADEAFGAHZIZJBCACKZHZIZUADFUBAJUCTJUDUAJUBALUCTMNCOTABP
      QRS $.
      $( [15-Sep-2011] $)

    $( The undefined value generated from a set is not a member of the set. $)
    undefnel2 $p |- -. ( Undef ` S ) e. S $=
      ( cund cfv wcel cuni cpw pwuninel undefval eleq1i mtbir ) ACDZAEAFGZAEAHL
      MAABIJK $.
      $( [15-Sep-2011] $)

    $( The undefined value generated from a set is not a member of the set. $)
    undefnel $p |- ( Undef ` S ) e/ S $=
      ( cund cfv wnel wcel wn undefnel2 df-nel mpbir ) ACDZAEKAFGABHKAIJ $.
      $( [15-Sep-2011] $)
  $}

  ${
    $( Define restricted description binder.  In case it doesn't exist, we
       return a set which is not a member of the domain of discourse ` A ` . $)
    df-riota $a |- ( iota_ x e. A ph ) =
       if ( E! x e. A ph , ( iota x ( x e. A /\ ph ) ) , ( Undef ` A ) ) $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    riotaeqdv.1 $e |- ( ph -> A = B ) $.
    $( Formula-building deduction rule for iota. $)
    riotaeqdv $p |- ( ph -> ( iota_ x e. A ps ) = ( iota_ x e. B ps ) ) $=
      ( wreu cv wcel wa cio cund cfv cif crio wceq wb reueq1 syl eleq2d anbi1d 
      iotabidv fveq2d ifbieq12d df-riota 3eqtr4g ) ABCDGZCHZDIZBJZCKZDLMZNBCEGZ
      UHEIZBJZCKZELMZNBCDOBCEOAUGUMUKULUPUQADEPUGUMQFBCDERSAUJUOCAUIUNBADEUHFTU
      AUBADELFUCUDBCDUEBCEUEUF $.
      $( [15-Sep-2011] $)
  $}

  ${
    $d x ph $.
    riotabidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for restricted iota. $)
    riotabidv $p |- ( ph -> ( iota_ x e. A ps ) = ( iota_ x e. A ch ) ) $=
      ( wreu cv wcel wa cio cund cfv cif crio reubidv anbi2d iotabidv eqidd 
      ifbieq12d df-riota 3eqtr4g ) ABDEGZDHEIZBJZDKZELMZNCDEGZUDCJZDKZUGNBDEOCD
      EOAUCUHUFUGUJUGABCDEFPAUEUIDABCUDFQRAUGSTBDEUACDEUAUB $.
      $( [15-Sep-2011] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    riotaeqbidv.1 $e |- ( ph -> A = B ) $.
    riotaeqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    riotaeqbidv $p |- ( ph -> ( iota_ x e. A ps ) = ( iota_ x e. B ch ) ) $=
      ( crio riotabidv riotaeqdv eqtrd ) ABDEICDEICDFIABCDEHJACDEFGKL $.
      $( [15-Sep-2011] $)
  $}

  $( Restricted iota is a set. $)
  riotaex $p |- ( iota_ x e. A ps ) e. _V $=
    ( crio wreu cv wcel wa cio cund cfv cif cvv df-riota iotaex fvex ifex 
    eqeltri ) ABCDABCEZBFCGAHZBIZCJKZLMABCNSUAUBTBOCJPQR $.
    $( [15-Sep-2011] $)

  $( An iota restricted to the universe is unrestricted. $)
  riotav $p |- ( iota_ x e. _V ph ) = ( iota x ph ) $=
    ( cvv crio wreu cv wcel wa cio cund cfv cif df-riota wceq iftrue wb iotabi 
    visset biantrur mpg syl6reqr wn c0 weu reuv notbii iotanul sylbi vprc 
    fvprc ax-mp syl6eqr iffalse eqtr4d pm2.61i eqtr4i ) ABCDABCEZBFCGZAHZBIZCJK
    ZLZABIZABCMUQVCVBNUQVBUTVCUQUTVAOAUSPVCUTNBAUSBQURABRSTUAUQUBZVCVAVBVDVCUCV
    AVDABUDZUBVCUCNUQVEABUEUFABUGUHCCGUBVAUCNUICJUJUKULUQUTVAUMUNUOUP $.
    $( [18-Sep-2011] $)

  $( Restricted iota in terms of iota. $)
  riotaiota $p |- ( E! x e. A ph
         -> ( iota_ x e. A ph ) = ( iota x ( x e. A /\ ph ) ) ) $=
    ( wreu cv wcel wa cio cund cfv cif crio iftrue df-riota syl5eq ) ABCDZPBECF
    AGBHZCIJZKQABCLPQRMABCNO $.
    $( [15-Sep-2011] $)

  $( For proper classes, restricted and unrestricted iota are the same. $)
  riotaprc $p |- ( -. A e. _V
         -> ( iota_ x e. A ph ) = ( iota x ( x e. A /\ ph ) ) ) $=
    ( cvv wcel wn wreu crio cv wa cio wceq cund cfv c0 fvprc adantr cif 
    iffalse adantl df-riota syl5eq weu df-reu notbii iotanul sylbi 3eqtr4d ex 
    riotaiota pm2.61d2 ) CDEFZABCGZABCHZBICEAJZBKZLZULUMFZUQULURJZCMNZOUNUPULUT
    OLURCMPQUSUMUPUTRZUTUNURVAUTLULUMUPUTSTABCUAUBURUPOLZULURUOBUCZFVBUMVCABCUD
    UEUOBUFUGTUHUIABCUJUK $.
    $( [15-Sep-2011] $)

  $( Restricted iota in terms of class union. $)
  riotauni $p |- ( E! x e. A ph
                    -> ( iota_ x e. A ph ) = U. { x e. A | ph } ) $=
    ( wreu crio cv wcel wa cio crab cuni riotaiota cab weu wceq df-reu iotaequ 
    sylbi df-rab unieqi syl6eqr eqtrd ) ABCDZABCEBFCGAHZBIZABCJZKZABCLUCUEUDBMZ
    KZUGUCUDBNUEUIOABCPUDBQRUFUHABCSTUAUB $.
    $( [11-Oct-2011] $)

  ${
    $d x y A $.  $d y ph $.
    $( The abstraction variable in a restricted iota descriptor isn't free. $)
    hbriota1 $p |- ( y e. ( iota_ x e. A ph )
                       -> A. x y e. ( iota_ x e. A ph ) ) $=
      ( crio wreu cv wcel wa cio cund cfv cif df-riota hbreu1 hbiota1 ax-17 
      hbfv hbif hbxfr ) BCABDEABDFZBGDHAIZBJZDKLZMABDNUABCUCUDABDOUBBCPBCDKCGZK
      HBQUEDHBQRST $.
      $( [12-Oct-2011] $)
  $}

  ${
    $d x y z $.  $d z A $.  $d z ph $.
    hbriota.1 $e |- ( ph -> A. x ph ) $.
    hbriota.2 $e |- ( z e. A -> A. x z e. A ) $.
    $( A variable not free in a wff remains so in a restricted iota
       descriptor. $)
    hbriota $p |- ( z e. ( iota_ y e. A ph )
                       -> A. x z e. ( iota_ y e. A ph ) ) $=
      ( crio wreu cv wcel wa cio cund cfv cif df-riota hblem hbreu hban hbiota 
      ax-17 hbfv hbif hbxfr ) BDACEHACEIZCJEKZALZCMZENOZPACEQUFBDUIUJABCEBDCEGR
      ZFSUHBCDUGABUKFTUABDENDJNKBUBGUCUDUE $.
      $( [12-Oct-2011] $)
  $}

  ${
    $d x A $.
    $( Closure of restricted iota. $)
    riotacl $p |- ( E! x e. A ph -> ( iota_ x e. A ph ) e. A ) $=
      ( wreu crio cv wcel wa cio riotaiota reiotacl eqeltrd ) ABCDABCEBFCGAHBIC
      ABCJABCKL $.
      $( [16-Jan-2012] $)
  $}

  $( Restricted iota equals the undefined value of its domain of discourse
     ` A ` when not meaningful. $)
  riotaund $p |- ( -. E! x e. A ph
                    -> ( iota_ x e. A ph ) = ( Undef ` A ) ) $=
    ( wreu wn cv wcel wa cio cund cfv cif crio iffalse df-riota syl5eq ) ABCDZE
    QBFCGAHBIZCJKZLSABCMQRSNABCOP $.
    $( [16-Jan-2012] $)

  ${
    $d x A $.
    riotaclb.1 $e |- A e. _V $.
    $( Closure of restricted iota. $)
    riotaclb $p |- ( E! x e. A ph <-> ( iota_ x e. A ph ) e. A ) $=
      ( wreu crio wcel riotacl wn cund cfv undefnel2 cv wa cio cif iffalse 
      df-riota syl5eq eleq1d mtbiri con4i impbii ) ABCEZABCFZCGZABCHUDUFUDIZUFC
      JKZCGCDLUGUEUHCUGUDBMCGANBOZUHPUHUEUDUIUHQABCRSTUAUBUC $.
      $( [15-Sep-2011] $)

    $( Restricted iota equals the undefined value of its domain of discourse
       ` A ` when not meaningful. $)
    riotaundb $p |- ( -. E! x e. A ph
                      <-> ( iota_ x e. A ph ) = ( Undef ` A ) ) $=
      ( wreu wn crio cund cfv wceq riotaund wcel undefnel2 eleq1 riotaclb 
      syl5bb mtbiri impbii ) ABCEZFABCGZCHIZJZABCKUBSUACLZCDMUBTCLUCSTUACNABCDO
      PQR $.
      $( [26-Sep-2011] $)
  $}

  ${
    $d x ph $.
    riotabidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule).  (Th. ~ rabbidva analog.) $)
    riotabidva $p |- ( ph -> ( iota_ x e. A ps ) = ( iota_ x e. A ch ) ) $=
      ( wreu crio wceq wa cv wcel cio pm5.32da iotabidv adantr riotaiota 
      adantl reubidva syl6bi imp 3eqtr4d wn cund cfv riotaund notbid eqtr4d 
      pm2.61dan ) ABDEGZBDEHZCDEHZIAUJJDKELZBJZDMZUMCJZDMZUKULAUOUQIUJAUNUPDAUM
      BCFNOPUJUKUOIABDEQRAUJULUQIZAUJCDEGZURABCDEFSZCDEQTUAUBAUJUCZJUKEUDUEZULV
      AUKVBIABDEUFRAVAULVBIZAVAUSUCVCAUJUSUTUGCDEUFTUAUHUI $.
      $( [17-Jan-2012] $)
  $}

  ${
    riotabiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Equivalent wff's yield equal restricted iotas (inference rule).  (Th.
       ~ rabbiia analog.) $)
    riotabiia $p |- ( iota_ x e. A ph ) = ( iota_ x e. A ps ) $=
      ( cvv wceq crio eqid cv wcel wb adantl riotabidva ax-mp ) FFGZACDHBCDHGFI
      PABCDCJDKABLPEMNO $.
      $( [16-Jan-2012] $)
  $}

  $( Substitution law for descriptions.  Compare ~ reuuni4 . $)
  riota4 $p |- ( E! x e. A ph -> [ ( iota_ x e. A ph ) / x ] ph ) $=
    ( wreu crio wsbc cv wcel wa cio reiota4 wceq wb riotaiota dfsbcq syl 
    mpbird ) ABCDZABABCEZFZABBGCHAIBJZFZABCKRSUALTUBMABCNABSUAOPQ $.
    $( [16-Sep-2011] $)

  ${
    $d x y A $.
    $( Membership law for "the unique element in ` A ` such that ` ph ` ."
       (Th. ~ reucl2 analog.) $)
    riotacl2 $p |- ( E! x e. A ph
            -> ( iota_ x e. A ph ) e. { x e. A | ph } ) $=
      ( vy crio crab wcel wsbc wreu cv ax-17 elrabsf riotacl riota4 sylanbrc ) 
      ABCEZABCFGPCGABPHABCIABDPCDJCGBKLABCMABCNO $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d y ph $.  $d x y A $.  $d y B $.
    riota2f.1 $e |- ( y e. B -> A. x y e. B ) $.
    riota2f.2 $e |- ( B e. A -> ( ps -> A. x ps ) ) $.
    riota2f.3 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( This theorem shows a condition that allows us to represent a descriptor
       with a class expression ` B ` .  The second hypothesis is a weakened
       bound variable condition that allows ~ hbsbc1g to be used.  Compare
       ~ reuuni2f . $)
    riota2f $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> ( iota_ x e. A ph ) = B ) ) $=
      ( wcel wreu wa cv cio wceq crio reiota2f wb riotaiota eqeq1d adantl 
      bitr4d ) FEJZACEKZLBCMEJALCNZFOZACEPZFOZABCDEFGHIQUDUHUFRUCUDUGUEFACESTUA
      UB $.
      $( [11-Oct-2011] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ph $.  $d y ps $.
    riota5.1 $e |- ( ( ph /\ B e. A /\ x e. A ) -> ( ps <-> x = B ) ) $.
    $( A method for computing restricted iota. $)
    riota5 $p |- ( ( ph /\ B e. A ) -> ( iota_ x e. A ps ) = B ) $=
      ( vy wcel wa wsbc crio wceq cv wex elex adantl wi wal simpr simpll 
      simplr eleq1a imp adantll w3a biimparc syl13anc wb sbceq1a mpbid ex 
      19.21aiv ax-17 hbsbc1g 19.23t syl mpd wreu wral wrex 3expa r19.21aiva 
      eqeq2 bibi2d ralbidv rcla4ev syl11anc reu6 sylibr riota2f ) AEDHZIZBCEJZB
      CDKELZVLCMZELZCNZVMVKVQACEDOPVLVPVMQZCRZVQVMQZVLVRCVLVPVMVLVPIZBVMWAVPAVK
      VODHZBVLVPSAVKVPTAVKVPUAVKVPWBAVKVPWBEDVOUBUCUDAVKWBUEBVPFUFUGVPBVMUHVLBC
      EUIZPUJUKULVLVMVMCRQZCRZVSVTUHVKWEAVKWDCBCGEDGMZEHCUMZUNZULPVPVMCUOUPUJUQ
      VLVKBCDURZVMVNUHAVKSZVLBVOWFLZUHZCDUSZGDUTZWIVLVKBVPUHZCDUSZWNWJVLWOCDAVK
      WBWOFVAVBWMWPGEDWFELZWLWOCDWQWKVPBWFEVOVCVDVEVFVGBCGDVHVIBVMCGDEWGWHWCVJV
      GUJ $.
      $( [20-Oct-2011] $)
  $}

  ${
    $d x B $.  $d x z C $.  $d x y z A $.  $d x y ph $.  $d ps y z $.
    $d ch x z $.
    riotaxfrd.1 $e |- ( z e. C -> A. y z e. C ) $.
    riotaxfrd.2 $e |- ( ( ph /\ y e. A ) -> B e. A ) $.
    riotaxfrd.3 $e |- ( ( ph /\ ( iota_ y e. A ch ) e. A ) -> C e. A ) $.
    riotaxfrd.4 $e |- ( x = B -> ( ps <-> ch ) ) $.
    riotaxfrd.5 $e |- ( y = ( iota_ y e. A ch ) -> B = C ) $.
    riotaxfrd.6 $e |- ( ( ph /\ x e. A ) -> E! y e. A x = B ) $.
    $( Change the variable ` x ` in the expression for "the unique ` A ` such
       that ` ph ` " to another variable ` y ` contained in expression ` B ` .
       Use ~ reuhypd to eliminate the last hypothesis.  (Th. ~ reuunixfr
       analog.) $)
    riotaxfrd $p |- ( ( ph /\ E! x e. A ps ) -> ( iota_ x e. A ps ) = C ) $=
      ( wreu wa cv crab wcel crio wceq reuxfrd riotacl2 adantl wb hbriota1 
      rabxfrd riotacl sylan2 mpbird ex sylbid imp syl5 rabid baibr reubiia 
      biimpi ax-17 wal wi hbrab1 hbel a1i eleq1 riota2f syl11anc mpbid baib 
      riotabiia syl5eqr ) ABDGPZQZDRZBDGSZTZDGUAZIBDGUAVNIVPTZVRIUBZAVMVSAVMCEG
      PZVSABCDEHGKOMUCZAWAVSAWAQVSCEGUAZCEGSTZWAWDACEGUDUEAWCGTZVSWDUFWAABCDEFH
      WCIGCEFGUGJKMNUHCEGUIZUJUKULUMUNVNIGTZVQDGPZVSVTUFAVMWGAVMWAWGWBAWEWGWAAW
      EWGLULWFUOUMUNVMWHAVMWHBVQDGVQVOGTZBBDGUPZUQURUSUEVQVSDFGIFRITDUTZVSVSDVA
      VBWGDFFIVPWKBDFGVCVDVEVOIVPVFVGVHVIVQBDGVQWIBWJVJVKVL $.
      $( [16-Jan-2012] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
            Equinumerosity (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    xpen.1 $e |- A e. _V $.
    xpen.2 $e |- B e. _V $.
    xpen.3 $e |- C e. _V $.
    xpen.4 $e |- D e. _V $.
    $( Equinumerosity law for cross product.  Proposition 4.22(b) of
       [Mendelson] p. 254. $)
    xpen $p |- ( ( A ~~ B /\ C ~~ D ) -> ( A X. C ) ~~ ( B X. D ) ) $=
      ( cxp cen wbr entr cdom wa xpdom2 anim12i cvv wcel wb sbthbg ax-mp xpex 
      3imtr3i xpcomen enen2 mp2an enen1 bitri sylib syl2an ) ACIZBCIZJKZULBDIZJ
      KZUKUNJKABJKZCDJKZUKULUNLUPCAIZCBIZJKZUMABMKZBAMKZNZURUSMKZUSURMKZNZUPUTV
      AVDVBVEABCFGOBACEGOPBQRVCUPSFABQTUAUSQRVFUTSCBGFUBURUSQTUAUCUTURULJKZUMUL
      QRUSULJKUTVGSBCFGUBCBGFUDUSULURQUEUFUKQRURUKJKVGUMSACEGUBCAGEUDURUKULQUGU
      FUHUICDMKZDCMKZNZULUNMKZUNULMKZNZUQUOVHVKVIVLCDBHFODCBGFOPDQRVJUQSHCDQTUA
      UNQRVMUOSBDFHUBULUNQTUAUCUJ $.
      $( [24-Jul-2004] $)
  $}

  ${
    $d f g x y z w v A $.  $d f g x y z w v B $.  $d f g x y z w v C $.
    $d f g x y z w v D $.  $d z w v H $.
    mapenlem.1 $e |- A e. _V $.
    mapenlem.2 $e |- B e. _V $.
    mapenlem.3 $e |- C e. _V $.
    mapenlem.4 $e |- D e. _V $.
    mapenlem.5 $e |- H =
         { <. x , y >. | ( x e. ( A ^m C ) /\ y = ( ( f o. x ) o. `' g ) ) } $.
    $( Lemma for ~ mapen . $)
    mapenlem1 $p |- ( ( ( ( f : A -1-1-onto-> B /\ g : C -1-1-onto-> D ) /\ z :
    C --> A ) /\ v e. C ) -> ( ( H ` z ) ` ( g ` v ) ) = ( f ` ( z ` v ) ) ) $=
      ( cv wf1o wa wf wcel cfv ccom ccnv wceq cmap co elmap coeq2 coeq1d 
      visset coex cnvex fvopab4 sylbir fveq1d ad2antlr cid cres f1ococnv1 
      coeq2d fcoi1 sylan9eqr fco f1of sylan an32s coass syl5eq adantr wfun 
      fvco3 3expa funco f1ofun ffun syl2an wfo dff1o3 simprbi anim12i anabss3 
      3expb adantlr anassrs 3eqtr3d eqtrd ) EFIQZRZGHJQZRZSZGECQZTZSZDQZGUAZSZW
      PWJUBZWMKUBZUBZWSWHWMUCZWJUDZUCZUBZWPWMUBWHUBZWNXAXEUEWLWQWNWSWTXDWNWMEGU
      FUGZUAWTXDUEEGWMLNUHABWMWHAQZUCZXCUCXDXGKXHWMUEXIXBXCXHWMWHUIUJPXBXCWHWMI
      UKCUKULWJJUKUMULUNUOUPUQWRWPXDWJUCZUBZWPXBUBZXEXFWOXKXLUEWQWOWPXJXBWOXBXC
      WJUCZUCZXBXJWIWNWKXNXBUEZGFXBTZWKXOWIWNSZWKXPXNXBURGUSZUCXBWKXMXRXBGHWJUT
      VAGFXBVBVCEFWHTWNXPWIGEFWHWMVDEFWHVEVFVFVGXBXCWJVHVIUPVJXDVKZGHWJTZSZWQXK
      XEUEZWOXSXTWQYBGHWPXDWJVLVMWIWNWKYAXQWKYAXQWKSXSWKXTXBVKZXCVKZXSXQWKXBXCV
      NWHVKZWMVKYCWIWNWHWMVNEFWHVOZGEWMVPVQWKGHWJVRYDGHWJVSVTVQGHWJVEWAWBVGVFWL
      WNWQXLXFUEZWIWNWQSZYGWKYEYHYGWIYEWNWQYGGEWPWHWMVLWCYFVFWDWEWFWG $.
      $( [16-Dec-2003] $)

    $( Lemma for ~ mapen . $)
    mapenlem2 $p |- ( ( f : A -1-1-onto-> B /\ g : C -1-1-onto-> D ) ->
             H : ( A ^m C ) -1-1-onto-> ( B ^m D ) ) $=
      ( vz vw vv cmap co wf1o wf1 crn wceq cv wa dff1o5 wf cfv wi wral dff13 
      ccom ccnv wcel fco f1of sylan f1ocnv syl syl2an exp31 com23 imp elmap 
      3imtr4g r19.21aiv fopab2 sylib fveq1 adantl ad2antlr mapenlem1 adantrl 
      exp43 adantrd imp42 adantld 3eqtr3d wb f1fveq f1of1 ffvelrn adantlr 
      adantll jca anassrs mpbid r19.21aiva wfn eqfnfv2 ffn ad2antrl mpbird 
      exp32 anbi12i syl5ib exp3a r19.21adv sylanbrc wss frn wrex an32s sylibr 
      coeq2 coeq1d visset cnvex coex fvopab4 cid cres f1ococnv2 fcoi2 sylan9eq 
      coeq2d fcoi1 eqtrd coass coeq2i coeq1i eqtr2i 3eqtri syl5eq ex fveq2 
      eqeq1d rcla4ev syl6 fvelrnb 3syl sylibrd ssrdv eqssd ) CERSZDFRSZITYOYPIU
      AZIUBZYPUCCDGUDZTZEFHUDZTZUEZYOYPIUFYQYOYPIUGZOUDZIUHZPUDZIUHZUCZUUEUUGUC
      ZUIZPYOUJZOYOUJUUCOPYOYPIUKUUCYSAUDZULZUUAUMZULZYPUNZAYOUJUUDUUCUUQAYOUUC
      ECUUMUGZFDUUPUGZUUMYOUNUUQYTUUBUURUUSUIYTUURUUBUUSYTUURUUBUUSEDUUNUGZFEUU
      OUGZUUSYTUURUEUUBFEDUUNUUOUOCDYSUGUURUUTYTECDYSUUMUOCDYSUPUQUUBFEUUOTUVAE
      FUUAURFEUUOUPUSUTVAVBVCCEUUMJLVDDFUUPKMVDVEVFABYOYPUUPINVGVHZUUCUULOYOUUC
      UUEYOUNZUUKPYOUUCUVCUUGYOUNZUUKUUCECUUEUGZECUUGUGZUEZUUKUVCUVDUEUUCUVGUUI
      UUJUUCUVGUUIUEZUEZUUJQUDZUUEUHZUVJUUGUHZUCZQEUJZUVIUVMQEUVIUVJEUNZUEZUVKY
      SUHZUVLYSUHZUCZUVMUVPUVJUUAUHZUUFUHZUVTUUHUHZUVQUVRUVHUWAUWBUCZUUCUVOUUIU
      WCUVGUVTUUFUUHVIVJVKUUCUVGUUIUVOUWAUVQUCZUUCUVEUUIUVOUWDUIUIUVFUUCUVEUUIU
      VOUWDUUCUVEUEUVOUWDUUIABOQCDEFGHIJKLMNVLVMVNVOVPUUCUVGUUIUVOUWBUVRUCZUUCU
      VFUUIUVOUWEUIUIUVEUUCUVFUUIUVOUWEUUCUVFUEUVOUWEUUIABPQCDEFGHIJKLMNVLVMVNV
      QVPVRUUCUVHUVOUVSUVMVSZYTUVHUVOUEZUWFUUBCDYSUAUVKCUNZUVLCUNZUEZUWFYTUWGCD
      UVKUVLYSVTCDYSWAUVGUVOUWJUUIUVGUVOUEUWHUWIUVEUVOUWHUVFECUVJUUEWBWCUVFUVOU
      WIUVEECUVJUUGWBWDWEWCUTWCWFWGWHUVGUUJUVNVSZUUCUUIUUEEWIUUGEWIUWKUVEUVFQEU
      UEUUGWJECUUEWKECUUGWKUTWLWMWNUVCUVEUVDUVFCEUUEJLVDCEUUGJLVDWOWPWQWRVFWSUU
      CYRYPUUCUUDYRYPWTUVBYOYPIXAUSUUCOYPYRUUCUUEYPUNZUUHUUEUCZPYOXBZUUEYRUNZUU
      CUWLYSUMZUUEULZUUAULZYOUNZUWRIUHZUUEUCZUEZUWNUUCFDUUEUGZUXBUWLUUCUXCUXBUU
      CUXCUEZUWSUXAUXDECUWRUGZUWSYTUXCUUBUXEFCUWQUGZEFUUAUGUXEYTUXCUEZUUBEFCUWQ
      UUAUODCUWPUGZUXCUXFYTFDCUWPUUEUOYTDCUWPTUXHCDYSURDCUWPUPUSUQEFUUAUPUTXCCE
      UWRJLVDXDZUXDUWTYSUWRULZUUOULZUUEUXDUWSUWTUXKUCUXIABUWRUUPUXKYOIUUMUWRUCU
      UNUXJUUOUUMUWRYSXEXFNUXJUUOYSUWRGXGZUWQUUAUWPUUEYSUXLXHOXGXIHXGZXIXIUUAUX
      MXHXIXJUSUXDYSUWPULZUUEULZUUAUUOULZULZUUEUXKUXDUXQUUEUXPULZUUEYTUXCUXQUXR
      UCUUBUXGUXOUUEUXPYTUXCUXOXKDXLZUUEULUUEYTUXNUXSUUECDYSXMXFFDUUEXNXOXFWCUU
      BUXCUXRUUEUCYTUUBUXCUXRUUEXKFXLZULUUEUUBUXPUXTUUEEFUUAXMXPFDUUEXQXOWDXRUX
      KYSUWRUUOULZULYSUWQUXPULZULZUXQYSUWRUUOXSUYAUYBYSUWQUUAUUOXSXTUXQYSUWQULZ
      UXPULUYCUXOUYDUXPYSUWPUUEXSYAYSUWQUXPXSYBYCYDXRWEYEDFUUEKMVDWPUWMUXAPUWRY
      OUUGUWRUCUUHUWTUUEUUGUWRIYFYGYHYIUUCUUDIYOWIUWOUWNVSUVBYOYPIWKPYOUUEIYJYK
      YLYMYNWS $.
      $( [16-Dec-2003] $)
  $}

  ${
    $d f g x y A $.  $d f g x y B $.  $d f g x y C $.  $d f g x y D $.
    mapen.1 $e |- A e. _V $.
    mapen.2 $e |- B e. _V $.
    mapen.3 $e |- C e. _V $.
    mapen.4 $e |- D e. _V $.
    $( Two set exponentiations are equinumerous when their bases and exponents
       are equinumerous.  Theorem 6H(c) of [Enderton] p. 139. $)
    mapen $p |- ( ( A ~~ B /\ C ~~ D ) -> ( A ^m C ) ~~ ( B ^m D ) ) $=
      ( vf vg vx vy cv wf1o wex cmap co cen wbr wi wa wcel ccom ccnv wceq 
      copab eqid mapenlem2 oprex f1oen syl ex 19.23aiv 19.23adv imp bren 
      syl2anb ) ABIMZNZIOZCDJMZNZJOZACPQZBDPQZRSZABRSCDRSUTVCVFUTVBVFJUSVBVFTIU
      SVBVFUSVBUAVDVEKMZVDUBLMURVGUCVAUDUCUEUAKLUFZNVFKLABCDIJVHEFGHVHUGUHVDVEV
      HACPUIUJUKULUMUNUOABIFUPCDJHUPUQ $.
      $( [16-Dec-2003] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.
    mapdom1.1 $e |- A e. _V $.
    mapdom1.2 $e |- B e. _V $.
    mapdom1.3 $e |- C e. _V $.
    $( Order-preserving property of set exponentiation.  Theorem 6L(c) of
       [Enderton] p. 149. $)
    mapdom1 $p |- ( A ~<_ B -> ( A ^m C ) ~<_ ( B ^m C ) ) $=
      ( vx cdom wbr cv cen wss wa wex cmap co domen endomtr enref visset mapen 
      mpan2 mapss cvv wcel wi oprex ssdomg ax-mp syl syl2an 19.23aiv sylbi ) AB
      HIAGJZKIZUNBLZMZGNACOPZBCOPZHIZGABEQUQUTGURUNCOPZKIZVAUSHIZUTUOUPURVAUSRU
      OCCKIVBCFSAUNCCDGTFFUAUBUPVAUSLZVCUNBCEFUCVAUDUEVDVCUFUNCOUGVAUSUDUHUIUJU
      KULUM $.
      $( [27-Jul-2004] $)

    $( Lemma for ~ mapdom2 . $)
    mapdom2lem $p |- ( x e. ( C ^m z ) ->
                     ( x i^i ( ( B \ z ) X. { w } ) ) = (/) ) $=
      ( cv cmap co wcel cdif csn cxp cin cdm c0 wceq wf visset elmap fdm sylbi 
      fconst fdmi a1i ineq12d difdisj syl6eq wss dmin sseq2 mpbii ss0 syl wrel 
      wb relxp relin1 ax-mp incom releqi mpbi reldm0 sylibr ) AJZFBJZKLMZVHEVIN
      ZCJZOZPZQZRZSTZVOSTZVJVHRZVNRZQZSTZVQVJWAVIVKQSVJVSVIVTVKVJVIFVHUAVSVITFV
      IVHIBUBUCVIFVHUDUEVTVKTVJVKVMVNVKVLCUBUFUGUHUIVIEUJUKWBVPSULZVQWBVPWAULWC
      VHVNUMWASVPUNUOVPUPUQUQVOURZVRVQUSVNVHQZURZWDVNURWFVKVMUTVNVHVAVBWEVOVNVH
      VCVDVEVOVFVBVG $.
      $( [23-Sep-2004] $)

    $( Order-preserving property of set exponentiation.  Theorem 6L(d) of
       [Enderton] p. 149. $)
    mapdom2 $p |- ( ( A ~<_ B /\ -. ( A = (/) /\ C = (/) ) ) ->
                  ( C ^m A ) ~<_ ( C ^m B ) ) $=
      ( vw vz vx vy cdom wbr c0 wceq wn wa wo cmap co wi opreq1 wne df-ne 
      map0b sylbir sylan9eqr 0dom syl6eqbr a1i cv wcel wex cen wss domen 
      endomtr enref visset mapen mpan cvv oprex cdif csn cxp cun wf wb undif 
      feq2 sylbi snssi ssequn2 sylib feq3 syl sylan9bb fconst cin difdisj fun 
      mpan2 syl5bi elmap 3imtr4g mapdom2lem eqcomd sylan9eq biantrud unineq 
      syl6bb dom2d mpi syl2an expr 19.23aiv 19.23adv neq0 syl5ib jaod imp 
      exmid biantru ianor ordir 3bitr4i sylan2b ) ABKLZAMNZOZCMNZPZXKOZQZCARSZC
      BRSZKLZXIXKPOZXHXNXQXHXLXQXMXLXQTXHXLXOMXPKXKXJXOMARSZMCMARUAXJAMUBXSMNAM
      UCADUDUEUFXPUGUHUIXHGUJZCUKZGULXQXMXHYAXQGXHAHUJZUMLZYBBUNZPZHULYAXQTZHAB
      EUOYEYFHYCYDYAXQXOCYBRSZUMLZYGXPKLZXQYCYDYAPZXOYGXPUPCCUMLYCYHCFUQCCAYBFF
      DHURZUSUTYJYGVAUKYICYBRVBYJIJYGXPIUJZBYBVCZXTVDZVEZVFZJUJZYOVFZVAYJYBCYLV
      GZBCYPVGZYLYGUKZYPXPUKYJYBYMVFZCYNVFZYPVGZYTYSYDUUDBUUCYPVGZYAYTYDUUBBNUU
      DUUEVHYBBVIUUBBUUCYPVJVKYAUUCCNZUUEYTVHYAYNCUNUUFXTCVLYNCVMVNUUCCBYPVOVPV
      QYSYMYNYOVGZUUDYMXTGURVRYSUUGPYBYMVSMNUUDYBBVTYBYMCYNYLYOWAWBWBWCCYBYLFYK
      WDCBYPFEWDWEUUAYQYGUKZPZYPYRNZYLYQNZVHTYJUUIUUJUUJYLYOVSZYQYOVSZNZPUUKUUI
      UUNUUJUUAUUHUULMUUMIHGABCDEFWFUUHUUMMJHGABCDEFWFWGWHWIYLYQYOWJWKUIWLWMWNW
      OWPVKWQGCWRWSWTXAXJXMQZUUOXKXMQZPXRXNUUPUUOXKXBXCXIXKXDXJXKXMXEXFXG $.
      $( [23-Sep-2004] $)
  $}

  ${
    $d x y z w v f g A $.  $d x y z w v f g B $.  $d x y z w v f g C $.
    mapxpen.1 $e |- A e. _V $.
    mapxpen.2 $e |- B e. _V $.
    mapxpen.3 $e |- C e. _V $.
    $( Equinumerosity law for double set exponentiation.  Proposition 10.45 of
       [TakeutiZaring] p. 96. $)
    mapxpen $p |- ( ( A ^m B ) ^m C ) ~~ ( A ^m ( B X. C ) ) $=
      ( vx vy vz vw vv vf vg cmap co cxp cv wcel wa cfv wceq copab2 copab 
      oprex cvv eqid oprabex2 a1i opabex2 wfn wral wf xpex elmap ffnoprv bitri 
      fvex fnoprab2 fneq1 mpbiri adantl ax-17 hboprab1 hbeleq hban hboprab2 
      ffvelrn sylanb sylan an32s anasss adantlr wb opreq oprabval4g mp3an3 
      sylan9eq eleq1d adantll mpbird exp32 r19.21ad r19.21ai sylanbrc fopabfv 
      simplbi sylbi adantr wi anassrs eqeq2d pm5.32da opabbid syl5bir mpd 
      eqtrd jca hbopab1 hbopab fveq1 fvopab2 mpan2 fveq1d oprabbid fnoprv 
      syl6bbr anbi1d biimparc ancomd fnopab2 biantrurd ffnfv bitr2i syl6bb 
      ralbida anbi2d syl5bb syl bitr4d bitr3d ralcom impbii en2 ) GHABNOZCNOZAB
      CPZNOZIQZBRZJQZCRZSZKQZYHYJGQZTZTZUAZSZIJKUBZYKLQZYIMQZYHYJHQZOZUAZSZIMUC
      ZUAZSZJLUCZYDCNUDYSUERYNYERZIJKBCYPYSEFYSUFZUGUHUUIUERUUBYGRZJLCUUFFUIUHU
      UJUUBYSUAZSZUULYNUUIUAZSZUUNUULUUOUULUUBYFUJZUUCARZJCUKZIBUKZUUNUULYFAUUB
      ULUUQUUTSZAYFUUBDBCEFUMUNIJBCAUUBUOUPZUUMUUQUUJUUMUUQYSYFUJIJKBCYPYSYHYOU
      QZUUKURYFUUBYSUSUTVAUUNUUSIBUUJUUMIUUJIVBIHYSYRIJKHVCVDZVEUUNYIUURJCUUJUU
      MJUUJJVBJHYSYRIJKHVFVDVEZYIJVBUUNYIYKUURUUNYLSUURYPARZUUJYLUVFUUMUUJYIYKU
      VFUUJYKYIUVFYOYDRZYIUVFUUJYKSBAYOULZYIUVFUVGBAYHYOVGABYODEUNZVHCYDYNULZYK
      UVGUUJCYDYJYNVGYDCYNABNUDFUNZVHZVIVJVKVLUUMYLUURUVFVMUUJUUMYLSUUCYPAUUMYL
      UUCYHYJYSOZYPYHYJUUBYSVNYIYKYPUERUVMYPUAUVCIJKBCYPUEYSUUKVOVPVQZVRVSVTWAW
      BWCWDUUNYNYKYTYOUAZSZJLUCZUUIUUJYNUVQUAZUUMUUJUVJUVRUVKUVJUVRUVGJCUKZJLCY
      DYNWEWFWGWHUUNUVPUUHJLUVEUUNLVBUUNYKUVOUUGUUNYKSZYOUUFYTUVTUVGYOUUFUAZUUJ
      YKUVGUUMUVLVLUUMYKUVGUWAWIUUJUUMYKSZUWAYOYIUUAYPUAZSZIMUCZUAZUVGUWBUUFUWE
      YOUWBUUEUWDIMUUMYKIUVDYKIVBZVEUWBMVBUWBYIUUDUWCUWBYISUUCYPUUAUUMYIYKUUCYP
      UAZUUMYIYKUWHUVNWJVJWKWLWMWKUVGUVHUWFUVIUVHUWFUVFIBUKZIMBAYOWEWFWGWNVSWOW
      KWLWMWPWQUUPUUNUUTUUMSUUPUUMUUTUUOUUMUUTSZUULUUOUWJUVAUULUUOUUMUUQUUTUUOU
      UMUUBYLYMUUCUAZSZIJKUBZUAUUQUUOYSUWMUUBUUOYRUWLIJKIGUUIUUHJLIGYKUUGIUWGIL
      UUFUUEIMLWRVDVEWSVDZJGUUIUUHJLGWRVDZUUOKVBUUOYLYQUWKUUOYLSYPUUCYMUUOYIYKY
      PUUCUAZUUOYKYIUWPUUOYKSZYIYPYHUUFTZUUCUWQYHYOUUFUUOYKYOYJUUITZUUFYJYNUUIW
      TYKUUFUERUWSUUFUAIMBUUCEUIZJLCUUFUEXAXBVQZXCYIUUCUERUWRUUCUAYHYJUUBUDZIMB
      UUCUEXAXBVQZVJVKWKWLXDWKIJKBCUUBXEXFXGUVBXFXHXIUUPUUJUUTUUMUUOUUJUUTVMUUL
      UUOUUJUURIBUKZJCUKZUUTUUOUVSUUJUXEUUOUVSYNCUJZUVSSZUUJUUOUXFUVSUUOUXFUUIC
      UJJLCUUFUUIUWTUUIUFXJCYNUUIUSUTXKUUJUVJUXGUVKJCYDYNXLXMXNUUOUVGUXDJCUWOUW
      QUVGYOBUJZUXDSZUXDUWQUXHUWISZUXIUVGUWQUWIUXDUXHUWQUVFUURIBUUOYKIUWNUWGVEU
      WQYISYPUUCAUXCVRXOXPUVGUVHUXJUVIIBAYOXLUPXQUWQUXHUXDUWQUWAUXHUXAUWAUXHUUF
      BUJIMBUUCUUFUXBUUFUFXJBYOUUFUSUTXRXKXSXOXTUURJICBYAXNVAXGVTYBYC $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x y z w v f g A $.  $d x y z w v f g B $.  $d x y z w v f g C $.
    xpmapen.1 $e |- A e. _V $.
    xpmapen.2 $e |- B e. _V $.
    xpmapen.3 $e |- C e. _V $.
    ${
      $d y D $.  $d y R $.  $d x S $.
      xpmapenlem.4 $e |- D =
                    { <. z , w >. | ( z e. C /\ w = U. dom { ( x ` z ) } ) } $.
      xpmapenlem.5 $e |- R =
                    { <. z , w >. | ( z e. C /\ w = U. ran { ( x ` z ) } ) } $.
      xpmapenlem.6 $e |- S = { <. z , w >. | ( z e. C /\ w =
                       <. ( U. dom { y } ` z ) , ( U. ran { y } ` z ) >. ) } $.
      $( Lemma for ~ xpmapen . $)
      xpmapenlem1 $p |- ( ( y = <. D , R >. -> A. z y = <. D , R >. ) /\
                           ( y = <. D , R >. -> A. w y = <. D , R >. ) ) $=
        ( cv cop wceq wal wi wcel cfv csn cdm cuni wa copab hbopab1 hbxfr crn 
        hbop hbeleq hbopab2 pm3.2i ) BQHIRZSZUQCTUAUQUQDTUACBUPCBHICBHCQZGUBZDQ
        ZURAQUCUDZUEUFSUGZCDUHZNVBCDBUIUJCBIUSUTVAUKUFSUGZCDUHZOVDCDBUIUJULUMDB
        UPDBHIDBHVCNVBCDBUNUJDBIVEOVDCDBUNUJULUMUO $.
        $( [2-May-2004] $)

      $( Lemma for ~ xpmapen . $)
      xpmapenlem2 $p |- ( ( y = <. D , R >. /\ z e. C ) ->
             ( ( U. dom { y } ` z ) = U. dom { ( x ` z ) } /\
               ( U. ran { y } ` z ) = U. ran { ( x ` z ) } ) ) $=
        ( cv cop wceq wcel wa csn cdm cuni cfv crn copab sneq opeq1i sneqi 
        syl6eq dmeqd unieqd opabex2 op1sta fveq1d cvv snex dmex uniex fvopab2 
        mpan2 sylan9eq opeq2i rneqd fopabex2 op2nda rnex jca ) BQZHIRZSZCQZGTZU
        AVMVJUBZUCZUDZUEZVMAQUEZUBZUCZUDZSVMVOUFZUDZUEZVTUFZUDZSVLVNVRVMVNDQZWB
        SUACDUGZUEZWBVLVMVQWIVLVQWIIRZUBZUCZUDWIVLVPWMVLVOWLVLVOVKUBZWLVJVKUHZV
        KWKHWIINUIUJUKULUMWIICDGWBMUNUOUKUPVNWBUQTWJWBSWAVTVSURZUSUTCDGWBUQVAVB
        VCVLVNWEVMVNWHWGSUACDUGZUEZWGVLVMWDWQVLWDHWQRZUBZUFZUDWQVLWCXAVLVOWTVLV
        OWNWTWOVKWSIWQHOVDUJUKVEUMHWQCDGWBHMNVFCDGWGMUNVGUKUPVNWGUQTWRWGSWFVTWP
        VHUTCDGWGUQVAVBVCVI $.
        $( [1-May-2004] $)

      $( Lemma for ~ xpmapen . $)
      xpmapenlem3 $p |- ( ( x : C --> ( A X. B ) /\ y = <. D , R >. ) ->
                        x = S ) $=
        ( cxp cv wf cop wceq wa wcel cfv copab wfn ffn dffn5 sylib adantr csn 
        cdm cuni crn ax-17 wal wi xpmapenlem1 simpli hban simpri ffvelrn elxp4 
        simplbi syl adantlr xpmapenlem2 opeq12 adantll eqtr4d eqeq2d pm5.32da 
        opabbid syl6eqr eqtrd ) GEFQZARZSZBRZHITUAZUBZVQCRZGUCZDRZWBVQUDZUAZUBZ
        CDUEZJVRVQWHUAZVTVRVQGUFWIGVPVQUGCDGVQUHUIUJWAWHWCWDWBVSUKZULUMUDZWBWJU
        NUMUDZTZUAZUBZCDUEJWAWGWOCDVRVTCVRCUOVTVTCUPUQZVTVTDUPUQZABCDEFGHIJKLMN
        OPURZUSUTVRVTDVRDUOWPWQWRVAUTWAWCWFWNWAWCUBZWEWMWDWSWEWEUKZULUMZWTUNUMZ
        TZWMVRWCWEXCUAZVTVRWCUBWEVPUCZXDGVPWBVQVBXEXDXAEUCXBFUCUBWEEFVCVDVEVFVT
        WCWMXCUAZVRVTWCUBWKXAUAWLXBUAUBXFABCDEEGHIJKKMNOPVGWKWLXAXBVHVEVIVJVKVL
        VMPVNVO $.
        $( [1-May-2004] $)

      $( Lemma for ~ xpmapen . $)
      xpmapenlem4 $p |- ( ( ( y = <. U. dom { y } , U. ran { y } >. /\
        ( U. dom { y } : C --> A /\ U. ran { y } : C --> B ) ) /\ x = S ) ->
                     ( x : C --> ( A X. B ) /\ y = <. D , R >. ) ) $=
        ( cv csn cdm cuni crn cop wceq wf wa cxp cfv wcel wral copab wb eqtr 
        feq1d mpan2 fvex opelxp ralbii eqid fopab2 r19.26 3bitr3ri syl6rbbr 
        biimpac ffvelrn r19.21aiva anim12i sylan adantll eqeq1 fopabfv simplbi 
        hbopab1 hbxfr hbeleq hbopab2 fveq1d cvv opex fvopab2 sylan9eq sneqd 
        dmeqd unieqd op1sta syl6eq eqeq2d pm5.32da opabbid syl5req adantlr 
        rneqd op2nda opeq12d syl5bir exp3a imp31 jca ) BQZWRRZSTZWSUATZUBZUCZGE
        WTUDZGFXAUDZUEZUEAQZJUCZUEGEFUFZXGUDZWRHIUBZUCZXFXHXJXCCQZWTUGZEUHZCGUI
        ZXMXAUGZFUHZCGUIZUEZXHXJXFXHXTXJXHXJGXIXMGUHZDQZXNXQUBZUCUEZCDUJZUDZXTX
        HJYEUCZXJYFUKPXHYGUEGXIXGYEXGJYEULZUMUNYCXIUHZCGUIXOXRUEZCGUIYFXTYIYJCG
        XNXQEFXMXAUOZUPUQCDGXIYCYEYEURUSXOXRCGUTVAVBVCXDXPXEXSXDXOCGGEXMWTVDVEX
        EXRCGGFXMXAVDVEVFVGVHXCXFXHXLXCXFXHXLXCXLXBXKUCXFXHUEZWRXBXKVIYLWTHXAIX
        DXHWTHUCXEXDXHWTYAYBXNUCZUEZCDUJZHXDWTYOUCXPCDGEWTVJVKXHYAYBXMXGUGZRZSZ
        TZUCZUEZCDUJYOHXHUUAYNCDCAJCAJYEPYDCDAVLVMVNZDAJDAJYEPYDCDAVOVMVNZXHYAY
        TYMXHYAUEZYSXNYBUUDYSYCRZSZTXNUUDYRUUFUUDYQUUEUUDYPYCXHYAYPXMYEUGZYCXHX
        MXGYEXHYGXGYEUCPYHUNVPYAYCVQUHUUGYCUCXNXQVRCDGYCVQVSUNVTWAZWBWCXNXQXMWT
        UOZWDWEWFWGWHNWIVTWJXEXHXAIUCXDXEXHXAYAYBXQUCZUEZCDUJZIXEXAUULUCXSCDGFX
        AVJVKXHYAYBYQUAZTZUCZUEZCDUJUULIXHUUPUUKCDUUBUUCXHYAUUOUUJUUDUUNXQYBUUD
        UUNUUEUAZTXQUUDUUMUUQUUDYQUUEUUHWKWCXNXQUUIYKWLWEWFWGWHOWIVTVHWMWNWOWPW
        Q $.
        $( [2-May-2004] $)

      $( Lemma for ~ xpmapen . $)
      xpmapenlem5 $p |- ( ( A X. B ) ^m C ) ~~ ( ( A ^m C ) X. ( B ^m C ) ) $=
        ( cxp cmap co cop oprex cvv wcel cv opex a1i csn cdm cuni cfv crn 
        fopabex2 wf wceq wa opelxp mpbir2an eleq1 mpbiri adantl elxp4 simplbi 
        syl copab wral op1sta sneq dmeqd unieqd wal wi xpmapenlem1 simpli 
        simpri xpmapenlem2 simpld eqeq2d pm5.32da opabbid syl6eqr 3eqtr4a 
        op2nda rneqd simprd jca ffvelrn r19.21aiva adantr ax-17 hban 
        xpmapenlem3 fveq1d fvopab2 mpan2 fveq1i syl5eq sylan9eq eleq1d fvex 
        syl6bb ralbida r19.26 mpbid an4 fopabfv anbi12i bitr4i sylib jca31 
        xpmapenlem4 impbii xpex elmap anbi1i anbi2i bitri 3bitr4i en2 ) ABEFQZG
        RSZEGRSZFGRSZQZHITZJXSGRUAYDUBUCAUDZXTUCZHIUEUFJUBUCBUDZYCUCZCDGCUDZYGU
        GZUHZUIZUJZYIYJUKZUIZUJZTZJMPULUFGXSYEUMZYGYDUNZUOZYGYLYOTUNZGEYLUMZGFY
        OUMZUOZUOZYEJUNZUOZYFYSUOYHUUFUOYTUUGYTUUAUUDUUFYTYGUBUBQZUCZUUAYSUUIYR
        YSUUIYDUUHUCZUUJHUBUCIUBUCHIUBUBCDGYIYEUJZUGZUKUIZIMOULZUPCDGUULUHUIZHM
        NULZUUNUQYGYDUUHURUSUTUUIUUAYLUBUCYOUBUCUOYGUBUBVAVBVCYTYLYIGUCZDUDZYMU
        NZUOZCDVDZUNZYOUUQUURYPUNZUOZCDVDZUNZUOZYMEUCZCGVEZYPFUCZCGVEZUOZUOZUUD
        YTUVGUVLYSUVGYRYSUVBUVFYSYDUGZUHZUIHYLUVAHIUUPVFYSYKUVOYSYJUVNYGYDVGZVH
        VIYSUVAUUQUURUUOUNZUOZCDVDHYSUUTUVRCDYSYSCVJVKZYSYSDVJVKZABCDEFGHIJKLMN
        OPVLZVMZUVSUVTUWAVNZYSUUQUUSUVQYSUUQUOZYMUUOUURUWDYMUUOUNZYPUUMUNZABCDE
        FGHIJKLMNOPVOZVPVQVRVSNVTWAYSUVNUKZUIIYOUVEHIUUPUUNWBYSYNUWHYSYJUVNUVPW
        CVIYSUVEUUQUURUUMUNZUOZCDVDIYSUVDUWJCDUWBUWCYSUUQUVCUWIUWDYPUUMUURUWDUW
        EUWFUWGWDVQVRVSOVTWAWEUTYTUUKXSUCZCGVEZUVLYRUWLYSYRUWKCGGXSYIYEWFWGWHYT
        UWLUVHUVJUOZCGVEUVLYTUWKUWMCGYRYSCYRCWIUWBWJYTUUQUOZUWKYQXSUCUWMUWNUUKY
        QXSYTUUQUUKYIJUJZYQYTYIYEJABCDEFGHIJKLMNOPWKZWLUUQYIUUQUURYQUNUOCDVDZUJ
        ZYQUWOUUQYQUBUCUWRYQUNYMYPUECDGYQUBWMWNYIJUWQPWOWPWQWRYMYPEFYIYOWSUPWTX
        AUVHUVJCGXBWTXCWEUVMUVBUVIUOZUVFUVKUOZUOUUDUVBUVFUVIUVKXDUUBUWSUUCUWTCD
        GEYLXECDGFYOXEXFXGXHUWPXIABCDEFGHIJKLMNOPXJXKYFYRYSXSGYEEFKLXLMXMXNYHUU
        EUUFYHUUAYLYAUCZYOYBUCZUOZUOUUEYGYAYBVAUXCUUDUUAUXAUUBUXBUUCEGYLKMXMFGY
        OLMXMXFXOXPXNXQXR $.
        $( [1-May-2004] $)
    $}

    $( Equinumerosity law for set exponentiation of a cross product.  Exercise
       4.47 of [Mendelson] p. 255. $)
    xpmapen $p |- ( ( A X. B ) ^m C ) ~~ ( ( A ^m C ) X. ( B ^m C ) ) $=
      ( vx vy vz vw cv wcel cfv csn cdm cuni wceq wa copab crn cop eqid 
      xpmapenlem5 ) GHIJABCIKZCLZJKZUDGKMNZOPQRIJSZUEUFUGTPQRIJSZUEUFUDHKNZOPMU
      DUJTPMUAQRIJSZDEFUHUBUIUBUKUBUC $.
      $( [23-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    mapunen.1 $e |- A e. _V $.
    mapunen.2 $e |- B e. _V $.
    mapunen.3 $e |- C e. _V $.
    $( Equinumerosity law for set exponentiation of a disjoint union.  Exercise
       4.45 of [Mendelson] p. 255. $)
    mapunen $p |- ( ( A i^i B ) = (/) ->
                  ( C ^m ( A u. B ) ) ~~ ( ( C ^m A ) X. ( C ^m B ) ) ) $=
      ( vx vy cin c0 wceq cun cmap co cxp cv cres cop cint csn crn cuni cvv 
      wcel oprex a1i wi wf wa wss ssun1 fssres mpan2 elmap sylibr ssun2 jca 
      unex visset resexg ax-mp opelxp 3imtr4i fun wb unidm feq3 bitr4i elxp5 
      simprbi anbi12i sylib sylan expcom wfn reseq1 resundir syl6eq fnresdm 
      uneq1d fnresdisj biimpa incom eqeq1i sylan2b uneq2d un0 sylan9eq anassrs 
      sylan9eqr uncom eqtri an32s opeq12d eqeq2d biimparc exp44 imp ffn sylbi 
      anim12i sylan2 impcom adantrl syl inteq inteqd op1stb sneq rneqd unieqd 
      op2nda uneq12d resundi syl6reqr sylan9req ex ad2antrl impbid en3d ) ABIZJ
      KZGHCABLZMNZCAMNZCBMNZOZGPZAQZYHBQZRZHPZSZSZYLTZUAZUBZLZYDUCUDYBCYCMUEUFY
      HYDUDZYKYGUDZUGYBYCCYHUHZYIYEUDZYJYFUDZUIYSYTUUAUUBUUCUUAACYIUHZUUBUUAAYC
      UJUUDABUKYCCAYHULUMCAYIFDUNUOUUABCYJUHZUUCUUABYCUJUUEBAUPYCCBYHULUMCBYJFE
      UNUOUQCYCYHFABDEURZUNZYIYJYEYFYHUCUDZYJUCUDGUSZYHBUCUTVAZVBVCUFYLYGUDZYBY
      RYDUDZACYNUHZBCYQUHZUIZYBUULUUKUUOYBUIYCCCLZYRUHZUULABCCYNYQVDUULYCCYRUHZ
      UUQCYCYRFUUFUNUUPCKUUQUURVECVFUUPCYCYRVGVAVHUOUUKYNYEUDZYQYFUDZUIZUUOUUKY
      LYNYQRZKZUVAYLYEYFVIZVJUUSUUMUUTUUNCAYNFDUNZCBYQFEUNZVKVLVMVNYBYSUUKUIZYH
      YRKZYLYKKZVEYBUVGUIUVHUVIYBUUKUVHUVIUGZYSUUKYBUVJUUKUVCUVAUIYBUVJUGZUVDUV
      CYNAVOZYQBVOZUIZUVKUVAUVCUVNUVKUVCUVNYBUVHUVIUVNYBUIZUVHUIZUVIUVCUVPYKUVB
      YLUVPYIYNYJYQUVHUVOYIYNAQZYQAQZLZYNUVHYIYRAQUVSYHYRAVPYNYQAVQVRUVLUVMYBUV
      SYNKUVLUVMYBUIZUVSYNUVRLZYNUVLUVQYNUVRAYNVSVTUVTUWAYNJLYNUVTUVRJYNUVMBAIZ
      JKZUVRJKZYBUVMUWCUWDBAYQWAWBYAUWBJABWCWDWEWFYNWGVRWHWIWJUVHUVOYJYNBQZYQBQ
      ZLZYQUVHYJYRBQUWGYHYRBVPYNYQBVQVRUVLYBUVMUWGYQKUVMUVLYBUIZUWGUWEYQLZYQUVM
      UWFYQUWEBYQVSWFUWHUWIJYQLZYQUWHUWEJYQUVLYBUWEJKABYNWAWBVTUWJYQJLYQJYQWKYQ
      WGWLVRWJWMWJWNWOWPWQWRUUSUVLUUTUVMUUSUUMUVLUVEACYNWSWTUUTUUNUVMUVFBCYQWSW
      TXAXBWTXCXDYSUVIUVHUGYBUUKYSUVIUVHYSUVIYHYHYCQZYRYSYHYCVOZUWKYHKYSUUAUWLU
      UGYCCYHWSWTYCYHVSXEUVIYRYIYJLUWKUVIYNYIYQYJUVIYNYKSZSYIUVIYMUWMYLYKXFXGYI
      YJUUHYIUCUDUUIYHAUCUTVAZXHVRUVIYQYKTZUAZUBYJUVIYPUWPUVIYOUWOYLYKXIXJXKYIY
      JUWNUUJXLVRXMYHABXNXOXPXQXRXSXQXT $.
      $( [23-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x B $.
    pwen.1 $e |- B e. _V $.
    $( If two sets are equinumerous, then their power sets are equinumerous.
       Proposition 10.15 of [TakeutiZaring] p. 87. $)
    pwen $p |- ( A ~~ B -> ~P A ~~ ~P B ) $=
      ( vx cvv wcel cen wbr cpw relen brrelexi cv wi wceq breq1 pweq breq1d 
      imbi12d c2o cmap co con0 2on enrefg ax-mp elisseti visset mapen mpan wb 
      oprex pw2en enen1 mp2an enen2 bitr2i sylib vtoclg mpcom ) AEFABGHZAIZBIZG
      HZABGJKDLZBGHZVDIZVBGHZMUTVCMDAEVDANZVEUTVGVCVDABGOVHVFVAVBGVDAPQRVESVDTU
      AZSBTUAZGHZVGSSGHZVEVKSUBFVLUCSUBUDUESSVDBSUBUCUFZVMDUGZCUHUIVGVIVBGHZVKV
      IEFVFVIGHVGVOUJSVDTUKVDVNULVFVIVBEUMUNVJEFVBVJGHVOVKUJSBTUKBCULVBVJVIEUOU
      NUPUQURUS $.
      $( [29-Mar-2007] $) $( [29-Jan-2004] $)
  $}

  ${
    $d x y z f A $.  $d x y z f B $.  $d x y z f C $.
    ssenen.1 $e |- A e. _V $.
    ssenen.2 $e |- B e. _V $.
    $( Equinumerosity of equinumerous subsets of a set. $)
    ssenen $p |- ( A ~~ B ->
             { x | ( x C_ A /\ x ~~ C ) } ~~ { x | ( x C_ B /\ x ~~ C ) } ) $=
      ( vf vy vz cen wbr cpw cv cab cin wss wa wf1o wex bren cima ccnv cvv 
      wcel pwex inex1 a1i entr wf1 visset f1imaen f1of1 sylan expl wfo f1ofo 
      crn imassrn forn sseq2d mpbii syl jctild elin elpw breq1 elab anbi12i 
      bitri imaexg ax-mp 3imtr4g wi f1ocnv cnvex wceq wb imaeq2 wrel f1orel 
      dfrel2 sylib imaeq1d adantr f1imacnv eqtr3d sylan9eqr eqcomd ex simpl 
      sylbi sylan2 adantrl adantrr impbid en3d 19.23aiv df-pw ineq1i inab 
      eqtri 3brtr3g ) BCJKZBLZAMZDJKZANZOZCLZXGOZXEBPZXFQANZXECPZXFQANZJXCBCGMZ
      RZGSXHXJJKZBCGFTXPXQGXPHIXHXJXOHMZUAZXOUBZIMZUAZXHUCUDXPXDXGBEUEUFUGXPXRB
      PZXRDJKZQZXSCPZXSDJKZQZXRXHUDZXSXJUDZXPYEYGYFXPYCYDYGXSXRJKZYDYGXPYCQZXSX
      RDUHBCXOUIZYCYKXPBCXRXOHUJZUKBCXOULZUMUMUNXPBCXOUOZYFBCXOUPYPXSXOUQZPYFXO
      XRURYPYQCXSBCXOUSUTVAVBVCYIXRXDUDZXRXGUDZQZYEXRXDXGVDZYRYCYSYDXRBYNVEZXFY
      DAXRYNXEXRDJVFVGVHVIYJXSXIUDZXSXGUDZQYHXSXIXGVDUUCYFUUDYGXSCXOUCUDXSUCUDG
      UJZXOXRUCVJVKZVEXFYGAXSUUFXEXSDJVFVGVHVIVLXPYACPZYADJKZQZYBBPZYBDJKZQZYAX
      JUDZYBXHUDZXPCBXTRZUUIUULVMBCXOVNZUUOUUIUUKUUJUUOUUGUUHUUKYBYAJKZUUHUUKUU
      OUUGQYBYADUHCBXTUIZUUGUUQUUOCBYAXTIUJZUKCBXTULZUMUMUNUUOCBXTUOZUUJCBXTUPU
      VAYBXTUQZPUUJXTYAURUVAUVBBYBCBXTUSUTVAVBVCVBUUMYAXIUDZYAXGUDZQZUUIYAXIXGV
      DZUVCUUGUVDUUHYACUUSVEZXFUUHAYAUUSXEYADJVFVGVHVIUUNYBXDUDZYBXGUDZQUULYBXD
      XGVDUVHUUJUVIUUKYBBXTUCUDYBUCUDXOUUEVOXTYAUCVJVKZVEXFUUKAYBUVJXEYBDJVFVGV
      HVIVLXPYIUUMQZXRYBVPZYAXSVPZVQXPUVKQUVLUVMXPUUMUVLUVMVMZYIXPUUGUVNUUMXPUU
      GQZUVLUVMUVOUVLQXSYAUVLUVOXSXOYBUAZYAXRYBXOVRUVOXTUBZYBUAZUVPYAXPUVRUVPVP
      UUGXPUVQXOYBXPXOVSUVQXOVPBCXOVTXOWAWBWCWDUURUUGUVRYAVPXPCBYAXTWEXPUUOUURU
      UPUUTVBUMWFWGWHWIUUMUVEUUGUVFUVEUVCUUGUVCUVDWJUVGWBWKWLWMXPYIUVMUVLVMZUUM
      XPYCUVSYIYLUVMUVLYLUVMQYBXRUVMYLYBXTXSUAZXRYAXSXTVRYMYCUVTXRVPXPBCXRXOWEY
      OUMWGWHWIYIYTYCUUAYTYRYCYRYSWJUUBWBWKWLWNWOWIWPWQWKXHXKANZXGOXLXDUWAXGABW
      RWSXKXFAWTXAXJXMANZXGOXNXIUWBXGACWRWSXMXFAWTXAXB $.
      $( [21-Mar-2007] $) $( [30-Sep-2004] $)
  $}

  ${
    $d x y A $.
    limenpsi.1 $e |- Lim A $.
    $( A limit ordinal is equinumerous to a proper subset of itself. $)
    limenpsi $p |- ( A e. B -> A ~~ ( A \ { (/) } ) ) $=
      ( vx vy wcel c0 csn cdif cdom wbr cen cv csuc wne wa wlim wb limsuc 
      ax-mp biimpi nsuceq0 jctir eldifsn sylibr con0 wceq suc11 word limord 
      ordelon mpan syl2an dom2 wss difss ssdom2g mpi sbth syl11anc ) ABFZAAGHZI
      ZJKVCAJKZAVCLKDEAVCDMZNZEMZNZBVEAFZVFAFZVFGOZPVFVCFVIVJVKVIVJAQZVIVJRCAVE
      STUAVEUBUCVFAGUDUEVEUFFZVGUFFZVFVHUGVEVGUGRVIVGAFZVEVGUHAUIZVIVMVLVPCAUJT
      ZAVEUKULVPVOVNVQAVGUKULUMUNVAVCAUOVDAVBUPVCABUQURAVCUSUT $.
      $( [30-Oct-2003] $)
  $}

  ${
    limensuci.1 $e |- Lim A $.
    $( A limit ordinal is equinumerous to its successor. $)
    limensuci $p |- ( A e. B -> A ~~ suc A ) $=
      ( wcel c0 csn cdif cun csuc cen wbr cvv difexg limenpsi ensymg sylc 0ex 
      en2sn mpan wa cin wceq incom difdisj eqtri wn word wlim limord ax-mp 
      ordirr disjsn mpbir unen mpanr12 syl11anc wss 0ellim snss mpbi undif 
      uncom eqtr3i df-suc 3brtr4g ) ABDZAEFZGZVGHZAAFZHZAAIJVFVHAJKZVGVJJKZVIVK
      JKZVFVHLDAVHJKVLAVGBMABCNAVHLOPELDVFVMQEALBRSVLVMTVHVGUAZEUBAVJUAEUBZVNVO
      VGVHUAEVHVGUCVGAUDUEVPAADUFZAUGZVQAUHZVRCAUIUJAUKUJAAULUMVHAVGVJUNUOUPVGV
      HHZAVIVGAUQZVTAUBEADZWAVSWBCAURUJEAQUSUTVGAVAUTVGVHVBVCAVDVE $.
      $( [30-Oct-2003] $)
  $}

  $( A limit ordinal is equinumerous to its successor. $)
  limensuc $p |- ( ( A e. B /\ Lim A ) -> A ~~ suc A ) $=
    ( wlim wcel csuc cen wbr wi con0 cif wceq eleq1 id suceq breq12d imbi12d 
    limeq limon elimhyp limensuci dedth impcom ) ACZABDZAAEZFGZUCUDUFHUCAIJZBDZ
    UGUGEZFGZHAIAUGKZUDUHUFUJAUGBLUKAUGUEUIFUKMAUGNOPUGBUCUGCICAIAUGQIUGQRSTUAU
    B $.
    $( [30-Oct-2003] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               Pigeonhole Principle
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Lemma for Pigeonhole Principle.  If we join a natural number to itself
     minus an element, we end up with its successor minus the same element. $)
  phplem1 $p |- ( ( A e. om /\ B e. A ) ->
             ( { A } u. ( A \ { B } ) ) = ( suc A \ { B } ) ) $=
    ( com wcel wa csn cin c0 wceq cdif cun csuc word wne nordeq disjsn2 syl 
    nnord sylan undif4 df-suc uncom eqtri difeq1i syl6eqr ) ACDZBADZEAFZBFZGHIZ
    UHAUIJKZALZUIJZIAMZUGUJUFUNUGEABNUJABOABPQARSUJUKUHAKZUIJUMUHAUITULUOUIULAU
    HKUOAUAAUHUBUCUDUEQ $.
    $( [25-May-1998] $)

  ${
    $d f A $.  $d f B $.
    phplem2.1 $e |- A e. _V $.
    phplem2.2 $e |- B e. _V $.
    $( Lemma for Pigeonhole Principle.  A natural number is equinumerous to its
       successor minus one of its elements. $)
    phplem2 $p |- ( ( A e. om /\ B e. A ) -> A ~~ ( suc A \ { B } ) ) $=
      ( com wcel wa csn cdif cun csuc cen wbr cin c0 wceq unen cop wf1o f1osn 
      snex f1oen ax-mp difss ssexi enref pm3.2i wss ssrin word nnord orddisj 
      syl sseq2d mpbii ss0 incom syl5eq difdisj jctil sylancr adantr difsnid 
      uncom adantl phplem1 3brtr3d ) AEFZBAFZGBHZAVJIZJZAHZVKJZAAKVJILVHVLVNLMZ
      VIVJVMLMZVKVKLMZGVJVKNOPZVMVKNZOPZGVOVHVJVMVKVKQVPVQVJVMBARHZSVPBADCTVJVM
      WABUAUBUCVKVKACAVJUDZUEUFUGVHVTVRVHVKVMNZOVSVHWCOUHZWCOPVHWCAVMNZUHZWDVKA
      UHWFWBVKAVMUIUCVHWEOWCVHAUJWEOPAUKAULUMUNUOWCUPUMVMVKUQURVJAUSUTVAVBVIVLA
      PVHVIVKVJJAVLABVCVJVKVDURVEABVFVG $.
      $( [11-Jun-1998] $)

    $( Lemma for Pigeonhole Principle.  A natural number is equinumerous to its
       successor minus any element of the successor. $)
    phplem3 $p |- ( ( A e. om /\ B e. suc A ) -> A ~~ ( suc A \ { B } ) ) $=
      ( com wcel wceq wo csuc csn cdif cen wbr phplem2 wa word nnord orddif 
      syl sneq difeq2d eqcoms sylan9eq enref syl5breq jaodan elsuci sylan2 ) AE
      FZBAFZBAGZHAAIZBJZKZLMZBULFUIUJUOUKABCDNUIUKOAUNALUIUKAULAJZKZUNUIAPAUQGA
      QARSUQUNGABABGUPUMULABTUAUBUCACUDUEUFBAUGUH $.
      $( [26-May-1998] $)

    $( Lemma for Pigeonhole Principle.  Equinumerosity of successors implies
       equinumerosity of the original natural numbers. $)
    phplem4 $p |- ( ( A e. om /\ B e. om ) -> ( suc A ~~ suc B -> A ~~ B ) ) $=
      ( vf com wcel wa csuc cv wf1o wex cen wbr cfv csn cdif entr cima wf1 wss 
      cres f1of1 sssucid jctir f1ores f1oen 3syl adantl word wceq nnord orddif 
      imaeq2 wfn f1ofn sucid fnsnfv mpan2 difeq2 crn cdm imadmrn eqcomi a1i 
      wfo f1ofo forn syl fndm 3eqtr3d difeq1d ccnv wfun dff1o3 simprbi imadif 
      3eqtr4rd sylan9eq breqtrd fvex phplem3 fnfvelrn sylancl wb eleq2d mpbid 
      sylan2 sucex difss ssexi ensym syl2an anandirs ex 19.23adv bren syl5ib ) 
      AFGZBFGZHZAIZBIZEJZKZELABMNZXBXCMNXAXEXFEXAXEXFWSWTXEXFAXCAXDOZPZQZMNXIBM
      NZXFWSXEHZWTXEHZAXIBRXKAXDASZXIMXEAXMMNZWSXEXBXCXDTZAXBUAZHAXMXDAUBZKXNXE
      XOXPXBXCXDUCAUDUEXBXCAXDUFAXMXQCUGUHUIWSXEXMXDXBAPZQZSZXIWSAUJAXSUKXMXTUK
      AULAUMAXSXDUNUHXEXDXBSZXHQZYAXDXRSZQZXIXTXEXDXBUOZXHYCUKZYBYDUKXBXCXDUPZY
      EAXBGZYFACUQZXBAXDURUSXHYCYAUTUHXEXCYAXHXEXDVAZXDXDVBZSZXCYAYJYLUKXEYLYJX
      DVCVDVEXEXBXCXDVFZYJXCUKXBXCXDVGZXBXCXDVHZVIXEYEYKXBUKYLYAUKYGXBXDVJYKXBX
      DUNUHVKVLXEXDVMVNZXTYDUKXEYMYPXBXCXDVOVPXBXRXDVQVIVRVSVTXLBXIMNZXJWTXGXCG
      ZYQXEBXGDAXDWAWBXEXGYJGZYRYEYHYSXEXBAXDWCYGYIWDXEYMYSYRWEYNYMYJXCXGYOWFVI
      WGWHBXIXIXCBDWIZXCXHWJWKWLVIWMWNWOWPXBXCEYTWQWR $.
      $( [28-May-1998] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.
    $( Two equinumerous natural numbers are equal.  Proposition 10.20 of
       [TakeutiZaring] p. 90 and its converse.  Also compare Corollary 6E of
       [Enderton] p. 136. $)
    nneneq $p |- ( ( A e. om /\ B e. om ) -> ( A ~~ B <-> A = B ) ) $=
      ( vz vx vy vw com wcel wa cen wbr wceq wi cv wral breq2 eqeq2 imbi12d 
      rcla4v c0 csuc breq1 eqeq1 ralbidv visset ensym en0 eqcom bitri sylib 
      a1i rgen wrex wo wb bibi12d mpbiri biimpd ax-17 hbra1 hban phplem4 
      imim1d ex a2d ra4 syl5 imp suceq syl8 biimprcd syl6 r19.23ad jaod nn0suc 
      syl7 r19.21adv cbvralv syl6ib finds impcom eqeng adantr impbid ) AGHZBGHZ
      IABJKZABLZWFWEWGWHMZWFACNZJKZAWJLZMZCGOZWIWEWMWICBGWJBLWKWGWLWHWJBAJPWJBA
      QRSDNZWJJKZWOWJLZMZCGOTWJJKZTWJLZMZCGOENZWJJKZXBWJLZMZCGOZXBUAZWJJKZXGWJL
      ZMZCGOZWNDEAWOTLZWRXACGXLWPWSWQWTWOTWJJUBWOTWJUCRUDWOXBLZWRXECGXMWPXCWQXD
      WOXBWJJUBWOXBWJUCRUDWOXGLZWRXJCGXNWPXHWQXIWOXGWJJUBWOXGWJUCRUDWOALZWRWMCG
      XOWPWKWQWLWOAWJJUBWOAWJUCRUDXACGXAWJGHZWSWJTJKZWTTWJCUEZUFXQWJTLWTWJUGWJT
      UHUIUJUKULXBGHZXFXGFNZJKZXGXTLZMZFGOXKXSXFYCFGXSXFXTTLZXTWJUAZLZCGUMZUNZY
      CXTGHXSXFYHYCMXSXFIZYDYCYGYDYCMYIYDYAYBYDYAYBUOXGTJKZXGTLZUOXGUGYDYAYJYBY
      KXTTXGJPXTTXGQUPUQURUKYIYFYCCGXSXFCXSCUSXECGUTVAYCCUSYIXPXGYEJKZXGYELZMZY
      FYCMYIXPYLXDYMXSXFXPYLXDMZMZXSXPXEMYPXFXSXPXEYOXSXPXEYOMXSXPIYLXCXDXBWJEU
      EXRVBVCVDVEXECGVFVGVHXBWJVIVJYFYCYNYFYAYLYBYMXTYEXGJPXTYEXGQRVKVLVMVNVDCX
      TVOVPVQYCXJFCGXTWJLYAXHYBXIXTWJXGJPXTWJXGQRVRVSVTVGWAWEWHWGMWFABGWBWCWD 
      $.
      $( [28-May-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Pigeonhole Principle.  A natural number is not equinumerous to a proper
       subset of itself.  Theorem (Pigeonhole Principle) of [Enderton] p. 134.
       The theorem is so-called because you can't put _n_ + 1 pigeons into _n_
       holes (if each hole holds only one pigeon).  The proof consists of
       lemmas ~ phplem1 through ~ phplem4 , ~ nneneq , and this final piece of
       the proof. $)
    php $p |- ( ( A e. om /\ B C. A ) -> -. A ~~ B ) $=
      ( vx vy com wcel wpss cen wbr wn wi wa cv csuc wceq wrex c0 nn0suc 
      orcanai wss 0ss sspsstr mpan wne 0pss df-ne bitri sylib sylan2 psseq2 
      breq1 notbid imbi12d cdom wex pssnel csn cdif domentr wb cin disjsn 
      disj3 bitr3i sseq1 sylbi ssdif syl5bir cvv visset sucex difss ssexi 
      ssdom2g ax-mp syl6 pssss syl5 imp phplem3 ensym syl syl2an exp43 com4r 
      19.23aiv mpcom sbth endomtr sssucid mp2 sylancl expcom word nordeq 
      peano2b nnord sucid nneneq sylanb anidms necon3bbid mpbird nsyli syli 
      com12 syl5cbir r19.23aiv ex pm2.43d ) AEFZBAGZABHIZJZXKXLXNXKXLXLXNKZXKXL
      LACMZNZOZCEPZXOXKAQOZJZXSXLXKXTXSCARSXLQAGZYAQBTXLYBBUAQBAUBUCYBAQUDYAAUE
      AQUFUGUHUIXRXOCEXRXOBXQGZXQBHIZJZKXPEFZXRXLYCXNYEAXQBUJXRXMYDAXQBHUKULUMY
      CYFYEYFYCBXPUNIZYEDMZXQFZYHBFJZLZDUOYCYFYGKZDBXQUPYKYCYLKZDYIYJYMYJYCYFYI
      YGYJYCYFYIYGBXQYHUQZURZUNIZYOXPHIZYGYJYCLYFYILZBYOXPUSYJYCYPYJBXQTZYPYCYJ
      YSBYOTZYPYJYTBYNURZYOTZYSYJBUUAOZYTUUBUTYJBYNVAQOUUCBYHVBBYNVCVDBUUAYOVEV
      FBXQYNVGVHYOVIFYTYPKYOXQXPCVJZVKZXQYNVLVMZBYOVIVNVOVPBXQVQVRVSYRXPYOHIYQX
      PYHUUDDVJVTXPYOUUFWAWBWCWDWEVSWFWGYGYDXQXPHIZYFYDYGUUGXQXPUNIXPXQUNIZUUGY
      DYGLXQXPWHXQBXPWIXQVIFXPXQTUUHUUEXPWJXPXQVIVNWKWLWMYFUUGJXQXPUDZXQWNZXPXQ
      FUUIYFXQXPWOYFXQEFZUUJXPWPZXQWQVFXPUUDWRWLYFUUGXQXPYFUUGXQXPOUTZUUKYFUUMY
      FXQXPWSUULWTXAXBXCXDXEXFXGXHWBXIXJVS $.
      $( [29-May-1998] $)

    $( Corollary of Pigeonhole Principle. $)
    php2 $p |- ( ( A e. om /\ B C. A ) -> B ~< A ) $=
      ( vx com wcel wpss csdm wbr cv wa wi wceq eleq1 psseq2 anbi12d breq2 
      imbi12d cdom cen wn brsdom wss pssss cvv visset ssdom2g ax-mp syl adantl 
      php ensym nsyl sylanbrc vtoclg anabsi5 ) ADEZBAFZBAGHZCIZDEZBUSFZJZBUSGHZ
      KUPUQJZURKCADUSALZVBVDVCURVEUTUPVAUQUSADMUSABNOUSABGPQVCBUSRHZBUSSHZTVBBU
      SUAVAVFUTVABUSUBZVFBUSUCUSUDEVHVFKCUEZBUSUDUFUGUHUIVBUSBSHVGUSBUJBUSVIUKU
      LUMUNUO $.
      $( [31-May-1998] $)
  $}

  ${
    $d f x y A $.  $d f x y B $.
    $( Corollary of Pigeonhole Principle.  If ` A ` is finite and ` B ` is a
       proper subset of ` A ` , the ` B ` is strictly less numerous than
       ` A ` .  Stronger version of Corollary 6C of [Enderton] p. 135. $)
    php3 $p |- ( ( A e. Fin /\ B C. A ) -> B ~< A ) $=
      ( vx vf vy cfn wcel wpss csdm wbr cv cen com wrex wi isfi cdom wn wa 
      brsdom cvv wss ssdom2g imp relen brrelexi pssss syl2an adantll wf1o wex 
      cima php dfpss3 imass2 syl adantl cdif c0 wceq cfv wfun cdm f1ofun difss 
      wfn wb f1ofn fndm sseq2 3syl mpbiri funfvima2 syl11anc ccnv wfo dff1o3 
      simprbi imadif eleq2d sylibd n0i syl6 eldif syl5ibr 19.23adv pssnel 
      sylan2 ssdif0 notbii sylibr sylanbrc crn imadmrn a1i imaeq2 f1ofo forn 
      3eqtr3d psseq2d adantr mpbid cres wf1 f1ores f1of1 visset resexg ax-mp 
      f1oeq1 cla4ev imaexg bren entr expcom mtod exp32 syl5ib imp31 ex ensym 
      syl6com ad2antlr exp31 r19.23aiv sylbi ) AFGZBAHZBAIJZYGACKZLJZCMNYHYIOZC
      APYKYLCMYJMGZYKYHYIYIBAQJZBALJZRYMYKSYHSZBATYKYHYNYMAUAGZBAUBZYNYKYHYQYRY
      NBAUAUCUDAYJLUEUFBAUGZUHUIYPYOYJBLJZYMYKYHYTRZYMAYJDKZUJZDUKYHUUAOZYKYMUU
      CUUDDYMUUCYHUUAYMUUCYHSZSYTYJUUBBULZLJZYMUUFYJHZUUGRUUEYJUUFUMUUEUUFUUBAU
      LZHZUUHUUJUUFUUIUBZUUIUUFUBZRZUUEUUFUUIUNYHUUKUUCYHYRUUKYSBAUUBUOUPUQUUEU
      UIUUFURZUSUTZRZUUMUUCEKZAGUUQBGRSZEUKZUUPYHUUCUUSUUPUUCUURUUPEUUCUUQABURZ
      GZUUPUURUUCUVAUUQUUBVAZUUNGZUUPUUCUVAUVBUUBUUTULZGZUVCUUCUUBVBUUTUUBVCZUB
      ZUVAUVEOAYJUUBVDUUCUVGUUTAUBZABVEUUCUUBAVFZUVFAUTZUVGUVHVGAYJUUBVHZAUUBVI
      ZUVFAUUTVJVKVLUUTUUQUUBVMVNUUCUVDUUNUVBUUCUUBVOVBZUVDUUNUTUUCAYJUUBVPZUVM
      AYJUUBVQVRABUUBVSUPVTWAUUNUVBWBWCUUQABWDWEWFUDEBAWGWHUULUUOUUIUUFWIWJWKWL
      UUCUUJUUHVGYHUUCUUIYJUUFUUCUUBUVFULZUUBWMZUUIYJUVOUVPUTUUCUUBWNWOUUCUVIUV
      JUVOUUIUTUVKUVLUVFAUUBWPVKUUCUVNUVPYJUTAYJUUBWQAYJUUBWRUPWSWTXAXBWHUUEYTU
      UGOZYMUUEBUUFUUBBXCZUJZBUUFLJZUVQAYJUUBXDYRUVSUUCYHAYJBUUBXEAYJUUBXFYSUHU
      VSBUUFUUQUJZEUKUVTUWAUVSEUVRUUBUAGZUVRUAGDXGZUUBBUAXHXIBUUFUUQUVRXJXKBUUF
      EUWBUUFUAGUWCUUBBUAXLXIXMWKYTUVTUUGYJBUUFXNXOVKUQXPXQWFAYJDCXGZXMXRXSYKYO
      YTOYMYHYOYKBYJLJZYTYOYKUWEBAYJXNXTBYJUWDYAYBYCXPWLYDYEYFUD $.
      $( [22-Aug-2008] $)
  $}

  $( Corollary of the Pigeonhole Principle ~ php : a natural number is strictly
     dominated by its successor. $)
  php4 $p |- ( A e. om -> A ~< suc A ) $=
    ( com wcel csuc wpss csdm wbr sucidg word wa wb nnord ordsuc biimpi ancli 
    ordelpss 3syl mpbid php2 peano2b sylanb mpdan ) ABCZAADZEZAUDFGZUCAUDCZUEAB
    HUCAIZUHUDIZJUGUEKALUHUIUHUIAMNOAUDPQRUDBCUEUFUCUDASATUAUB $.
    $( [26-Jul-2004] $)

  $( Corollary of the Pigeonhole Principle ~ php : a natural number is not
     equinumerous to its successor.  Corollary 10.21(1) of [TakeutiZaring]
     p. 90. $)
  php5 $p |- ( A e. om -> -. A ~~ suc A ) $=
    ( com wcel csuc csdm wbr cen wn php4 sdomnen syl ) ABCAADZEFALGFHAIALJK $.
    $( [26-Jul-2004] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               Finite sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( An ordinal number equinumerous to a natural number is equal to it.
     Proposition 10.22 of [TakeutiZaring] p. 90 and its converse. $)
  onomeneq $p |- ( ( A e. On /\ B e. om ) -> ( A ~~ B <-> A = B ) ) $=
    ( con0 wcel com wa cen wbr wceq wss wn csuc php5 adantr enen1 mtbird 
    adantll cdom wi endomtr sssucid ssdomg mpi sylan2 ancoms a1d ssel com12 
    word wb ordelsuc eloni sylibd ssdom2g adantl syld jcad sbth syl6 mtod 
    ordtri1 ordom sylancr con2bid ad2antrr mpbird simplr jca nneneq biimpa 
    sylancom ex eqeng impbid ) ACDZBEDZFZABGHZABIZVQVRVSVQVRAEDZVPFZVSVQVRFZVTV
    PWBVTEAJZKZWBWCABLZGHZVPVRWFKVOVPVRFZWFBWEGHZVPWHKVRBMNABWEEOPQWBWCAWERHZWE
    ARHZFWFWBWCWIWJVPVRWCWISVOWGWIWCVRVPWIVRBWERHZWIVPABWETVPBWEJWKBUABWEEUBUCU
    DUEUFQVQWCWJSZVRVPVOWLVPVOFZWCWEAJZWJWMWCBADZWNVPWCWOSVOWCVPWOEABUGUHNVPAUI
    ZWOWNUJVOBAEUKAULZUDUMVOWNWJSVPWEACUNUOUPUENUQAWEURUSUTVOVTWDUJVPVRVOWCVTEU
    IWPWCVTKUJVOEAVAVBWQVCVDVEVFVOVPVRVGVHWAVRVSABVIVJVKVLVOVSVRSVPABCVMNVN $.
    $( [26-Jul-2004] $)

  ${
    $d x A $.
    $( An ordinal number is finite iff it is a natural number.  Proposition
       10.32 of [TakeutiZaring] p. 92. $)
    onfin $p |- ( A e. On -> ( A e. Fin <-> A e. om ) ) $=
      ( vx con0 wcel cv cen wbr com wrex cfn wa wceq onomeneq wi eleq1a adantl 
      sylbid r19.23adva enrefg breq2 rcla4ev mpdan impbid1 isfi syl5bb ) ACDZAB
      EZFGZBHIZAHDZAJDUFUIUJUFUHUJBHUFUGHDZKUHAUGLZUJAUGMUKULUJNUFUGHAOPQRUJAAF
      GZUIAHSUHUMBAHUGAAFTUAUBUCBAUDUE $.
      $( [25-Sep-2008] $) $( [26-Jul-2004] $)
  $}

  $( Cardinal ordering agrees with natural number ordering.  Example 3 of
     [Enderton] p. 146. $)
  nndomo $p |- ( ( A e. om /\ B e. om ) -> ( A ~<_ B <-> A C_ B ) ) $=
    ( com wcel wa cdom wbr wss wpss wn wi csdm php2 ex domnsym nsyli adantr 
    word wb ordtri1 ordelpss ancoms notbid bitrd nnord syl2an sylibrd ssdomg 
    impbid ) ACDZBCDZEZABFGZABHZULUMBAIZJZUNUJUMUPKUKUJUOBALGZUMUJUOUQABMNABOPQ
    ARZBRZUNUPSUJUKURUSEZUNBADZJUPABTUTVAUOUSURVAUOSBAUAUBUCUDAUEBUEUFUGUJUNUMK
    UKABCUHQUI $.
    $( [17-Jun-1998] $)

  $( Cardinal ordering agrees with natural number ordering. $)
  nnsdomo $p |- ( ( A e. om /\ B e. om ) -> ( A ~< B <-> A C. B ) ) $=
    ( com wcel wa cdom wbr cen wn wss wceq csdm wpss nndomo nneneq notbid 
    anbi12d brsdom dfpss2 3bitr4g ) ACDBCDEZABFGZABHGZIZEABJZABKZIZEABLGABMUAUB
    UEUDUGABNUAUCUFABOPQABRABST $.
    $( [17-Jun-1998] $)

  $( Strict dominance of natural numbers is the same as dominance over the
     successor of the smaller. $)
  omsucdom $p |- ( ( A e. om /\ B e. om ) -> ( A ~< B <-> suc A ~<_ B ) ) $=
    ( com wcel wa wpss csuc wss csdm wbr cdom word wb ordelpss nnord sylan 
    ordelsuc bitr3d sylan2 nnsdomo nndomo peano2b sylanb 3bitr4d ) ACDZBCDZEABF
    ZAGZBHZABIJUHBKJZUEBLZUGUIMUFUEUKEABDZUGUIALUKULUGMUEABNAOPABCQRBOSABTUHCDU
    FUJUIMUEUHBUAAUBUCUD $.
    $( [25-Jul-2004] $)

  $( Dominance of a set over a successor of a natural number implies strict
     dominance over the number.  For the converse, see ~ sucdom . $)
  sucdomi $p |- ( ( A e. om /\ B e. C ) ->
                   ( suc A ~<_ B -> A ~< B ) ) $=
    ( csuc csdm wbr wcel cdom wi com sdomdomtr exp3a impcom php4 sylan ) AADZEF
    ZBCGZPBHFZABEFZIZAJGRQUARQSTAPBCKLMANO $.
    $( [26-Jul-2004] $)

  ${
    $d x A $.
    0sdom1dom.1 $e |- A e. _V $.
    $( Strict dominance over zero is the same as dominance over one. $)
    0sdom1dom $p |- ( (/) ~< A <-> 1o ~<_ A ) $=
      ( vx c0 csdm wbr c1o cdom cv wcel wex wne 0sdom n0 bitri csn wss snssi 
      cvv wi ssdom2g ax-mp cen con0 1on elisseti visset ensn1 ensymi endomtr 
      mpan 3syl 19.23aiv sylbi csuc df-1o breq1i com peano1 sucdomi mp2an 
      impbii ) DAEFZGAHFZVCCIZAJZCKZVDVCADLVGABMCANOVFVDCVFVEPZAQZVHAHFZVDVEARA
      SJZVIVJTBVHASUAUBGVHUCFVJVDVHGGUDUEUFVECUGUHUIGVHAUJUKULUMUNVDDUOZAHFZVCG
      VLAHUPUQDURJVKVMVCTUSBDASUTVAUNVB $.
      $( [28-Sep-2004] $)
  $}

  $( Ordinal 1 is strictly dominated by ordinal 2. $)
  1sdom2 $p |- 1o ~< 2o $=
    ( c0 csn cpw c1o c2o csdm p0ex canth2 df1o2 cpr df2o2 pwpw0 eqtr4i 3brtr4i 
    ) ABZOCZDEFOGHIEAOJPKLMN $.
    $( [4-Apr-2007] $)

  ${
    $d x A $.  $d x B $.
    $( Strict dominance of a finite set over a natural number is the same as
       dominance over its successor. $)
    fisucdom $p |- ( ( A e. om /\ B e. Fin ) ->
                     ( A ~< B <-> suc A ~<_ B ) ) $=
      ( vx com wcel cv cen wbr wrex csdm csuc cdom wb cfn wa omsucdom adantr 
      sdomen2 adantll domen2 3bitr4d exp31 r19.23adv imp isfi sylan2b ) ADEZBCF
      ZGHZCDIZABJHZAKZBLHZMZBNEUGUJUNUGUIUNCDUGUHDEZUIUNUGUOOZUIOAUHJHZULUHLHZU
      KUMUPUQURMUIAUHPQUOUIUKUQMUGBUHADRSUOUIUMURMUGBUHULDTSUAUBUCUDCBUEUF $.
      $( [9-Sep-2008] $) $( [26-Jul-2004] $)
  $}

  $( A set equinumerous to a proper subset of itself is infinite.  Corollary
     6D(a) of [Enderton] p. 136. $)
  pssinf $p |- ( ( A C. B /\ A ~~ B ) -> -. B e. Fin ) $=
    ( wpss cen wbr cfn wcel wn csdm php3 ex sdomnen syl6com con2d imp ) ABCZABD
    EZBFGZHPRQRPABIEZQHRPSBAJKABLMNO $.
    $( [6-Sep-2008] $) $( [2-Jun-1998] $)

  $( A finite set is equal to its subset if they are equinumerous.
     (Contributed by FL, 11-Aug-2008.) $)
  fisseneq $p |- ( ( B e. Fin /\ A C_ B /\ A ~~ B ) -> A = B ) $=
    ( cen wbr wss cfn wcel wceq wa wne wn wpss pssinf expcom df-pss syl5ibr 
    expdimp necon4ad 3impia 3com13 ) ABCDZABEZBFGZABHZUAUBUCUDUAUBIUCABUAUBABJZ
    UCKZUAABLZUFUBUEIUGUAUFABMNABOPQRST $.
    $( [11-Aug-2008] $)

  $( The set of natural numbers is infinite.  Corollary 6D(b) of [Enderton]
     p. 136. $)
  ominf $p |- -. om e. Fin $=
    ( vx com cfn wcel wn wi cv cen wbr wrex isfi wpss pssinf wss wne wa word 
    wb ordelssne nnord ordom sylancl ibi df-pss sylibr visset ensym syl2an 
    r19.23aiva sylbi pm2.01 ax-mp ) BCDZUMEZFUNUMBAGZHIZABJUNABKUPUNABUOBLZUOBH
    IUNUOBDZUPUOBMURUOBNUOBOPZUQURUSUOQBQURUSRURUOBSUOTUAUBUCUOBUDUEBUOAUFUGUHU
    IUJUMUKUL $.
    $( [7-Sep-2008] $) $( [2-Jun-1998] $)

  ${
    $d x A $.
    $( Omega strictly dominates a natural number.  Example 3 of [Enderton]
       p. 146.  Here we use ` A ~<_ om /\ -. om ~~ A ` instead of ` A ~< om `
       because, due to a peculiarity ultimately caused our ordered pair
       definition, we would need the Axiom of infinity (which we have avoided
       up to now) in order to prove the latter. $)
    omsdomnn $p |- ( A e. om -> ( A ~<_ om /\ -. om ~~ A ) ) $=
      ( vx com wcel cdom wbr cen wn wss word ordom ordelss mpan ssdomg mpd cv 
      wceq breq2 notbid wral wrex cfn ominf isfi mtbi ralnex mpbir vtoclri jca 
      ) ACDZACEFZCAGFZHZUJACIZUKCJUJUNKCALMACCNOCBPZGFZHZUMBACUOAQUPULUOACGRSUQ
      BCTUPBCUAZHCUBDURUCBCUDUEUPBCUFUGUHUI $.
      $( [15-Jun-1998] $)

    $( Omega strictly dominates a finite set.  See comment in ~ omsdomnn . $)
    isfinite1 $p |- ( A e. Fin -> ( A ~<_ om /\ -. om ~~ A ) ) $=
      ( vx cfn wcel cv cen wbr com wrex cdom wn wa isfi omsdomnn anim2i anandi 
      sylib ancoms endomtr entr expcom con3d imp anim12i syl r19.23aiva sylbi 
      ) ACDABEZFGZBHIAHJGZHAFGZKZLZBAMUIUMBHUHHDZUILUIUHHJGZLZUIHUHFGZKZLZLZUMU
      IUNUTUIUNLUIUOURLZLUTUNVAUIUHNOUIUOURPQRUPUJUSULAUHHSUIURULUIUKUQUKUIUQHA
      UHTUAUBUCUDUEUFUG $.
      $( [14-Sep-2008] $) $( [3-Nov-2002] $)
  $}

  ${
    infsdomnn.1 $e |- A e. _V $.
    $( An infinite set strictly dominates a natural number. $)
    infsdomnn $p |- ( ( om ~<_ A /\ B e. om ) -> B ~< A ) $=
      ( com cdom wbr wcel csdm cvv wi reldom brrelexi cen wn wa ensymg con3d 
      anim2d omsdomnn syl5 brsdom syl6ibr sdomdomtr ax-mp expcom syl9 mpcom 
      imp ) DAEFZBDGZBAHFZDIGZUIUJUKJDAEKLULUJBDHFZUIUKULUJBDEFZBDMFZNZOZUMULUN
      DBMFZNZOUQUJULUSUPUNULUOURBDIPQRBSTBDUAUBUMUIUKAIGUMUIOUKJCBDAIUCUDUEUFUG
      UH $.
      $( [22-Nov-2004] $)

    $( An infinite set is not empty. $)
    infn0 $p |- ( om ~<_ A -> A =/= (/) ) $=
      ( com cdom wbr c0 csdm wne wcel peano1 infsdomnn mpan2 0sdom sylib ) CADE
      ZFAGEZAFHOFCIPJAFBKLABMN $.
      $( [27-Nov-2006] $) $( [23-Oct-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x C $.
    $( Equinmerous sets have the same finiteness. $)
    enfi $p |- ( ( B e. C /\ A ~~ B ) -> ( A e. Fin <-> B e. Fin ) ) $=
      ( vx wcel cen wbr wa cv com wrex cfn enen1 rexbidv isfi 3bitr4g ) BCEABFG
      HZADIZFGZDJKBRFGZDJKALEBLEQSTDJABRCMNDAODBOP $.
      $( [22-Aug-2008] $)

    $( A proper subset of a natural number is equinumerous to some smaller
       number.  Lemma 6F of [Enderton] p. 137. $)
    pssnn $p |- ( ( A e. om /\ B C. A ) -> E. x e. A B ~~ x ) $=
      ( vw vz vy com wcel wpss wa cvv cv cen wbr wrex wss ssexg pssss sylan 
      ancoms wi wal wceq psseq1 breq1 rexbidv imbi12d cla4gv c0 csuc psseq2 
      rexeq albidv npss0 pm2.21i ax-gen ax-17 hba1 wn elequ1 biimpcd con3d 
      adantl sseld elsuci ord con1d syl6 imp syld ex com23 ssrdv anim1i dfpss2 
      sylibr elelsuc reximi2 imim12i exp4c a4s com4t csn cdif word nnord 
      orddif syl sseq2d ssdif syl5bir syl5 wex eleq2 eldifi syl6bir eleq1a 
      sylan9r adantr pm2.61d expimpd 19.23adv pssnel im2anan9r anidm syl5ibr 
      syl6ibr cbvalv visset difss ssexi cla4v sylbi sylan9 ordsucelsuc biimpd 
      adantrd cun difsnid eqcomd df-suc a1i breq12d cin unen cop wf1o f1osn 
      snex f1oen ax-mp jctr orddisj incom difdisj eqtr3i jctil syl2an elnn 
      sylan2i exp4d com24 imp4b jcad breq2 rcla4ev df-rex cbvrexv 3imtr4g expl 
      eqelsuc enref sylancl a1d pm2.61ii 19.21ad finds com3l mpd ) BGHZCBIZJCKH
      ZCALZMNZABOZUVAUUTUVBCBPUUTUVBUVACBGQCBRSTUUTUVAUVBUVEUAUVBUUTUVAUVEUVBDL
      ZBIZUVFUVCMNZABOZUAZDUBZUVAUVEUAZUUTUVJUVLDCKUVFCUCZUVGUVAUVIUVEUVFCBUDUV
      MUVHUVDABUVFCUVCMUEUFUGUHUVFELZIZUVHAUVNOZUAZDUBUVFUIIZUVHAUIOZUAZDUBUVFF
      LZIZUVHAUWAOZUAZDUBZUVFUWAUJZIZUVHAUWFOZUAZDUBUVKEFBUVNUIUCZUVQUVTDUWJUVO
      UVRUVPUVSUVNUIUVFUKUVHAUVNUIULUGUMUVNUWAUCZUVQUWDDUWKUVOUWBUVPUWCUVNUWAUV
      FUKUVHAUVNUWAULUGUMUVNUWFUCZUVQUWIDUWLUVOUWGUVPUWHUVNUWFUVFUKUVHAUVNUWFUL
      UGUMUVNBUCZUVQUVJDUWMUVOUVGUVPUVIUVNBUVFUKUVHAUVNBULUGUMUVTDUVRUVSUVFUNUO
      UPUWAGHZUWEUWIDUWNDUQUWDDURUWNUWEUWIUWAUVFHZUVFUWAUCZUWNUWEJZUWIUAUWQUWGU
      WOUSZUWPUSZUWHUWEUWGUWRUWSUWHUAUAUAZUWNUWDUWTDUWDUWGUWRUWSUWHUWGUWRJZUWSJ
      ZUWBUWCUWHUXBUVFUWAPZUWSJUWBUXAUXCUWSUXAEUVFUWAUWGUWRUVNUVFHZUVNUWAHZUAUW
      GUXDUWRUXEUWGUXDUWRUXEUAUWGUXDJUWRUWKUSZUXEUXDUWRUXFUAUWGUXDUWKUWOUWKUXDU
      WOEFDUTVAVBVCUWGUXDUXFUXEUAZUWGUXDUVNUWFHZUXGUWGUVFUWFUVNUVFUWFRZVDUXHUXE
      UWKUXHUXEUWKUVNUWAVEVFZVGVHVIVJVKVLVIVMVNUVFUWAVOVPUVHUVHAUWAUWFUVCUWAHZU
      VCUWFHUVHUVCUWAVQVNVRVSVTWAVCWBUWOUWNUWEUWIUWOUWNJZUWEJUWGUVFUWAWCZWDZUVC
      MNZAUWAOZUWHUXLUWGUXNUWAIZUWEUXPUXLUWGUXNUWAPZUXNUWAUCZUSZJZUXQUXLUWGUWGJ
      UYAUWGUWNUWGUXRUWOUWGUXTUWNUVFUWFPZUXRUWGUWNUXRUXNUWFUXMWDZPUYBUWNUWAUYCU
      XNUWNUWAWEZUWAUYCUCUWAWFZUWAWGWHWIUVFUWFUXMWJWKUXIWLUWOUXHUXDUSZJZEWMUXTU
      WGUWOUYGUXTEUWOUXHUYFUXTUWOUXHJZUXSUXDUYHUXSUXDUYHUXSJUXEUXDUXSUXEUXDUAUY
      HUXSUXEUVNUXNHUXDUXNUWAUVNWNUVNUVFUXMWOWPVCUYHUXEUSZUXDUAUXSUXHUYIUWKUWOU
      XDUXJUWAUVFUVNWQWRWSWTVKVBXAXBEUVFUWFXCWLXDUWGXEXFUXNUWAVOXGUWEUVNUWAIZUV
      NUVCMNZAUWAOZUAZEUBUXQUXPUAZUWDUYMDEUVFUVNUCZUWBUYJUWCUYLUVFUVNUWAUDUYOUV
      HUYKAUWAUVFUVNUVCMUEUFUGXHUYMUYNEUXNUXNUVFDXIZUVFUXMXJXKUVNUXNUCZUYJUXQUY
      LUXPUVNUXNUWAUDUYQUYKUXOAUWAUVNUXNUVCMUEUFUGXLXMXNUXLUXPUWHUAUWEUXLUXKUXO
      JZAWMUVFUVNMNZEUWFOZUXPUWHUXLUYRUYTAUXLUYRUVCUJZUWFHZUVFVUAMNZJUYTUXLUYRV
      UBVUCUXLUXKVUBUXOUWNUXKVUBUAZUWOUWNUYDVUDUYEUYDUXKVUBUVCUWAXOXPWHVCXQUWOU
      WNUXKUXOVUCUWOUXOUXKUWNVUCUWOUXOUXKUWNVUCUWOUXOUVCGHZVUCUXKUWNJUWOVUCUXNU
      XMXRZUVCUVCWCZXRZMNZUXOVUEJUWOUVFVUFVUAVUHMUWOVUFUVFUVFUWAXSXTVUAVUHUCUWO
      UVCYAYBYCUXOUXMVUGMNZJUXNUXMYDZUIUCZUVCVUGYDUIUCZJVUIUXOVUEUXNUVCUXMVUGYE
      UXOVUJUXMVUGUWAUVCYFWCZYGVUJUWAUVCFXIAXIYHUXMVUGVUNUWAYIYJYKYLVUEVUMVULVU
      EUVCWEVUMUVCWFUVCYMWHUXMUXNYDVUKUIUXMUXNYNUXMUVFYOYPYQYRWKUVCUWAYSYTUUAUU
      BUUCUUDUYSVUCEVUAUWFUVNVUAUVFMUUEUUFVHXBUXOAUWAUUGUVHUYSAEUWFUVCUVNUVFMUU
      EUUHUUIWSVJUUJUWPUWIUWQUWPUWHUWGUVFUWFHUVFUVFMNZUWHUWPUVHVUOAUVFUWFUVCUVF
      UVFMUUEUUFUVFUWAUYPUUKUVFUYPUULUUMUUNUUNUUOVKUUPUUQWLUURVIUUS $.
      $( [22-Jun-1998] $)

    $( A subset of a natural number is finite. $)
    ssnnfi $p |- ( ( A e. om /\ B C_ A ) -> B e. Fin ) $=
      ( vx com wcel wss wa cv cen wbr wrex cfn wpss wceq wo pssnn wi elnn 
      expcom anim1d reximdv2 adantr mpd eleq1 biimparc enrefg ancli breq2 
      rcla4ev 3syl jaodan sspss sylan2b isfi sylibr ) ADEZBAFZGBCHZIJZCDKZBLEUP
      BAMZBANZOUTUQUPVAUTVBUPVAGUSCAKZUTCABPUPVCUTQVAUPUSUSCADUPURAEZURDEZUSVDU
      PVEURARSTUAUBUCUPVBGBDEZVFBBIJZGUTVBVFUPBADUDUEVFVGBDUFUGUSVGCBDURBBIUHUI
      UJUKBAULUMCBUNUO $.
      $( [29-Aug-2008] $) $( [24-Jun-1998] $)

    $( A subset of a finite set is finite.  Corollary 6G of [Enderton]
       p. 138. $)
    ssfi $p |- ( ( A e. Fin /\ B C_ A ) -> B e. Fin ) $=
      ( vx vz vy cfn wcel wss cv cen wbr com wrex wi isfi wf1o wex breng wa 
      cima ssnnfi sylib wfo f1ofo crn imassrn forn sseq2d mpbii syl sylan2 
      adantrr cres entr cvv visset resexg ax-mp f1oeq1 cla4ev imaexg bren 
      sylibr sylan wf1 f1ores f1of1 ex reximdv syl6ibr adantl mpd exp32 
      19.23adv sylbid r19.23aiv sylbi imp ) AFGZBAHZBFGZVSACIZJKZCLMVTWANZCAOWC
      WDCLWBLGZWCAWBDIZPZDQWDAWBLDRWEWGWDDWEWGVTWAWEWGVTSZSWFBTZEIZJKZELMZWAWEW
      GWLVTWEWIWBHZWLWGWEWMSWIFGWLWBWIUAEWIOUBWGAWBWFUCZWMAWBWFUDWNWIWFUEZHWMWF
      BUFWNWOWBWIAWBWFUGUHUIUJUKULWHWLWANWEWHWLBWJJKZELMWAWHWKWPELWHWKWPBWIWFBU
      MZPZWKWPWHBWIJKZWKWPWRBWIWJUNWRBWIWBPZCQWSWTWRCWQWFUOGZWQUOGDUPZWFBUOUQUR
      BWIWBWQUSUTBWICXAWIUOGXBWFBUOVAURVBVCVDAWBWFVEVTWRWGAWBBWFVFAWBWFVGVDVDVH
      VIEBOVJVKVLVMVNVOVPVQVR $.
      $( [29-Aug-2008] $) $( [24-Jun-1998] $)

    $( A set dominated by a finite set is finite. $)
    domfi $p |- ( ( A e. Fin /\ B ~<_ A ) -> B e. Fin ) $=
      ( vx cfn wcel cdom wbr cv cen wss wa wex domeng wi cvv wb visset enfi 
      mpan ssfi syl5bir exp3a com12 imp3a 19.23adv sylbid imp ) ADEZBAFGZBDEZUH
      UIBCHZIGZUKAJZKZCLUJCBADMUHUNUJCUHULUMUJULUHUMUJNULUHUMUJULUJUKDEZUHUMKUK
      OEULUJUOPCQBUKORSAUKTUAUBUCUDUEUFUG $.
      $( [18-Sep-2008] $) $( [23-Mar-2006] $)

    $d A x y $.  $d B y $.
    $( The components of a non-empty finite cross product are finite.
       (Contributed by Paul Chapman, 11-Apr-2009.) $)
    xpfir $p |- ( ( ( A X. B ) e. Fin /\ ( A X. B ) =/= (/) ) ->
                 ( A e. Fin /\ B e. Fin ) ) $=
      ( vx vy cvv wcel wa cxp cfn c0 wne xpexr2 cv wi wceq xpeq1 eleq1d neeq1d 
      anbi12d eleq1 anbi1d imbi12d xpeq2 anbi2d cdom wbr visset xpdom3 cen wb 
      xpex xpcomen domen2 mp2an sylibr anim12i ancoms domfi ex anim12d mpan9 
      xpnz sylan2br vtocl2g mpcom ) AEFBEFGABHZIFZVFJKZGZAIFZBIFZGZABILCMZDMZHZ
      IFZVOJKZGZVMIFZVNIFZGZNAVNHZIFZWBJKZGZVJVTGZNVIVLNCDABEEVMAOZVRWEWAWFWGVP
      WCVQWDWGVOWBIVMAVNPZQWGVOWBJWHRSWGVSVJVTVMAITUAUBVNBOZWEVIWFVLWIWCVGWDVHW
      IWBVFIVNBAUCZQWIWBVFJWJRSWIVTVKVJVNBITUDUBVPVMJKZVNJKZGZWAVQWMVPWAWMVMVOU
      EUFZVNVOUEUFZGZVPWAWLWKWPWLWNWKWOVMVNCUGZUHWKVNVNVMHZUEUFZWOVNVMDUGZUHWRE
      FVOWRUIUFWOWSUJVNVMWTWQUKVMVNWQWTULVOWRVNEUMUNUOUPUQVPWNVSWOVTVPWNVSVOVMU
      RUSVPWOVTVOVNURUSUTVAUQVMVNVBVCVDVE $.
      $( [11-Apr-2009] $)
  $}

  $( The empty set is finite.  (Contributed by FL, 14-Jul-2008.) $)
  0fin $p |- (/) e. Fin $=
    ( c0 com wcel wss cfn peano1 ssid ssnnfi mp2an ) ABCAADAECFAGAAHI $.
    $( [14-Jul-2008] $)

  $( A set with one element is a singleton.  (Contributed by FL,
     18-Aug-2008.) $)
  en1eqsn $p |- ( ( A e. B /\ B ~~ 1o ) -> B = { A } ) $=
    ( wcel c1o cen wbr wa csn cfn wss wceq com 1onn ssid ssnnfi mp2an wb enfi 
    mpan mpbiri adantl snssi adantr entr ensn1g wi ensymg ax-mp syl2an 
    fisseneq syl111anc eqcomd ) ABCZBDEFZGZAHZBUOBICZUPBJZUPBEFZUPBKUNUQUMUNUQD
    ICZDLCZDDJUTMDNDDOPVAUNUQUTQMBDLRSTUAUMURUNABUBUCUPDEFDBEFZUSUMUNUPDBUDABUE
    VAUNVBUFMBDLUGUHUIUPBUJUKUL $.
    $( [18-Aug-2008] $)

  $( If ` A ` is finite, ` ( A \ B ) ` is finite.  (Contributed by FL,
     3-Aug-2009.) $)
  diffi $p |- ( A e. Fin -> ( A \ B ) e. Fin ) $=
    ( cfn wcel cdif wss difss ssfi mpan2 ) ACDABEZAFJCDABGAJHI $.
    $( [10-Jul-2009] $)

  ${
    $d A x $.  $d X x $.  $d M x $.
    dif1en.1 $e |- A e. _V $.
    $( If a set ` A ` is equinumerous to the successor of a natural number
       ` M ` , then ` A ` with an element removed is equinumerous to ` M ` .
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    dif1en $p |- ( ( M e. om /\ A ~~ suc M /\ X e. A )
                                                -> ( A \ { X } ) ~~ M ) $=
      ( vx com wcel csuc cen wbr w3a csn cdif cv wrex wa cfn breq2 rcla4ev 
      isfi sylibr peano2 sylan diffi sylib syl 3adant3 wceq cun wi cin c0 
      incom difdisj eqtri unen an4s mpanl2 expcom cvv visset en2sn mpan2 word 
      nnord orddisj syl2an 3ad2antl3 wb difsnid df-suc eqcomi a1i breq12d 
      3ad2ant3 adantr ensymg nneneq sylan2 entr syl5bi exp3a syld imp an32s 
      3adantl3 sylbid peano4 biimpd 3ad2antl1 3syld biimprcd sylcom r19.23adva 
      mpd ) BFGZABHZIJZCAGZKZACLZMZENZIJZEFOZXBBIJZWPWRXEWSWPWRPAQGZXEWQFGZWRXG
      WPXHWRPAXCIJZEFOXGXIWREWQFXCWQAIRSEATUABUBZUCXGXBQGXEAXAUDEXBTUEUFUGWTXDX
      FEFWTXCFGZPZXDBXCUHZXFXLXDXBXAUIZXCXCLZUIZIJZWQXCHZUHZXMWSWPXKXDXQUJZWRXA
      XOIJZXCXOUKULUHZXTWSXKXDYAYBPZXQXDXBXAUKZULUHZYCXQYDXAXBUKULXBXAUMXAAUNUO
      XDYAYEYBXQXBXCXAXOUPUQURUSWSXCUTGYAEVACXCAUTVBVCXKXCVDYBXCVEXCVFUFVGVHXLX
      QAXRIJZXSWTXQYFVIZXKWSWPYGWRWSXNAXPXRIACVJXPXRUHWSXRXPXCVKVLVMVNVOVPWPWRX
      KYFXSUJZWSWPXKWRYHWPXKPZWRYHXHXKWRYHUJWPXHXKPZWRWQAIJZYHXHWRYKUJXKAWQFVQV
      PYJYKYFXSYJWQXRIJZXSYKYFPXHXRFGYLXSVIXKWQXRVRXCUBVSWQAXRVTWAWBWCXJUCWDWEW
      FWGWPWRXKXSXMUJWSYIXSXMBXCWHWIWJWKXMXFXDBXCXBIRWLWMWNWO $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d v w x y z $.  $d A x y z $.  $d ps x $.  $d ch x $.  $d th x $.
    $d ta x $.  $d ph v w y z $.
    findcard.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    findcard.2 $e |- ( x = ( y \ { z } ) -> ( ph <-> ch ) ) $.
    findcard.3 $e |- ( x = y -> ( ph <-> th ) ) $.
    findcard.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    findcard.5 $e |- ps $.
    findcard.6 $e |- ( y e. Fin -> ( A. z e. y ch -> th ) ) $.
    $( Schema for induction on the cardinality of a finite set.  The inductive
       hypothesis is that the result is true on the given set with any one
       element removed.  The result is then proven to be true for all finite
       sets.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    findcard $p |- ( A e. Fin -> ta ) $=
      ( vw vv cfn wcel cv wceq wex elex wi cen wbr com wrex isfi wal c0 csuc 
      breq2 imbi1d albidv en0 mpbiri sylbi ax-gen w3a wral wa rcla4ev peano2 
      sylan sylibr 3adant2 csn cdif visset dif1en 3expa pm2.27 syl cvv difexg 
      ax-mp breq1 imbi12d cla4v syl5 r19.21adva imp an32s 3impa sylc 3exp 
      19.21adv cbvalv syl6ibr finds1 19.21bi r19.23aiv eleq1 mpbii com12 
      19.23adv mpd ) IRSZFTZIUAZFUBEFIRUCWSXAEFXAWSEXAWTRSZAUDWSEUDXBWTPTZUEUFZ
      PUGUHAPWTUIXDAPUGXCUGSXDAUDZFXEFUJWTUKUEUFZAUDZFUJWTQTZUEUFZAUDZFUJZWTXHU
      LZUEUFZAUDZFUJZPQXCUKUAZXEXGFXPXDXFAXCUKWTUEUMUNUOXCXHUAZXEXJFXQXDXIAXCXH
      WTUEUMUNUOXCXLUAZXEXNFXRXDXMAXCXLWTUEUMUNUOXGFXFWTUKUAZAWTUPXSABNJUQURUSX
      HUGSZXKGTZXLUEUFZDUDZGUJXOXTXKYCGXTXKYBDXTXKYBUTYARSZCHYAVAZDXTYBYDXKXTYB
      VBZYAXCUEUFZPUGUHZYDXLUGSYBYHXTYGYBPXLUGXCXLYAUEUMVCXHVDVEPYAUIVFVGXTXKYB
      YEXTYBXKYEYFXKYEYFXKCHYAYFHTZYASZVBZYAYIVHZVIZXHUEUFZCUDZCXKYKYNYOCUDXTYB
      YJYNYAXHYIGVJZVKVLYNCVMVNXJYOFYMYAVOSYMVOSYPYAYLVOVPVQWTYMUAXIYNACWTYMXHU
      EVRKVSVTWAWBWCWDWEOWFWGWHXNYCFGWTYAUAXMYBADWTYAXLUEVRLVSWIWJWKWLWMURXAXBW
      SAEWTIRWNMVSWOWPWQWR $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d v w x y z $.  $d A w x y z $.  $d ps x $.  $d ch x $.  $d th x $.
    $d ta x $.  $d ph v w y z $.
    findcard2.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    findcard2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    findcard2.3 $e |- ( x = ( y u. { z } ) -> ( ph <-> th ) ) $.
    findcard2.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    findcard2.5 $e |- ps $.
    findcard2.6 $e |- ( y e. Fin -> ( ch -> th ) ) $.
    $( Schema for induction on the cardinality of a finite set.  The inductive
       step shows that the result is true if one more element is added to the
       set.  The result is then proven to be true for all finite sets.
       (Contributed by Jeff Madsen, 8-Jul-2010.) $)
    findcard2 $p |- ( A e. Fin -> ta ) $=
      ( vw vv cfn cv wcel cen wbr com wrex isfi wi wal c0 csuc wceq breq2 
      imbi1d albidv en0 mpbiri sylbi ax-gen wsbc wne wa nsuceq0 breq1 anbi2d 
      wb nneneq peano1 peano2 sylancr biimpa eqcomd syl6bi com12 necon3d mpi 
      ex wex csn cdif visset dif1en 3expia wss cun snssi undif biimpi uncom 
      syl5eq dfsbcq imbi2d cvv difexg ax-mp uneq1 syl imbi12d ra4e sylibr 
      pm2.27 adantl sylsyld cla4v syl5 snex unex sbcie syl6ibr vtocl syl5bi 
      3syl exp3a adantr mpdd 19.23adv n0 syl5ib com23 19.21adv ax-17 hbsb3 
      hbim sbequ12 cbval finds1 19.21bi r19.23aiv vtoclga ) AEFIRMFSZRTYHPSZUAU
      BZPUCUDAPYHUEYJAPUCYIUCTYJAUFZFYKFUGYHUHUAUBZAUFZFUGYHQSZUAUBZAUFZFUGZYHY
      NUIZUAUBZAUFZFUGZPQYIUHUJZYKYMFUUBYJYLAYIUHYHUAUKULUMYIYNUJZYKYPFUUCYJYOA
      YIYNYHUAUKULUMYIYRUJZYKYTFUUDYJYSAYIYRYHUAUKULUMYMFYLYHUHUJZAYHUNUUEABNJU
      OUPUQYNUCTZYQYIYRUAUBZAFYIURZUFZPUGUUAUUFYQUUIPUUFUUGYQUUHUUFUUGYIUHUSZYQ
      UUHUFZUUFUUGUUJUUFUUGUTZYRUHUSUUJYNVAUULYIUHYRUHUUBUULYRUHUJZUUBUULUUFUHY
      RUAUBZUTZUUMUUBUUGUUNUUFYIUHYRUAVBVCUUOUHYRUUFUUNUHYRUJZUHUCTYRUCTUUNUUPV
      DUUFUHYRVEVFYNVGVHVIVJVKVLVMVNVOUUFUUGUUJUUKUFUULHSZYITZHVPUUKUUJUULUURUU
      KHUULUURYIUUQVQZVRZYNUAUBZUUKUUFUUGUURUVAYIYNUUQPVSZVTWAUUFUURUVAUUKUFZUF
      UUGUURUUFUVCUURUUFUVAUUKUURUUSYIWBZUUTUUSWCZYIUJZUUFUVAUTZUUKUFUUQYIWDUVD
      UUSUUTWCZYIUVEUVDUVHYIUJUUSYIWEWFUUTUUSWGWHUVFYQAFUVEURZUFZUUKUVGUVFUVIUU
      HYQAFUVEYIWIWJUUFGSZYNUAUBZUTZYQAFUVKUUSWCZURZUFZUFUVGUVJUFGUUTYIWKTUUTWK
      TUVBYIUUSWKWLWMUVKUUTUJZUVMUVGUVPUVJUVQUVLUVAUUFUVKUUTYNUAVBVCUVQUVOUVIYQ
      UVQUVNUVEUJUVOUVIVDUVKUUTUUSWNAFUVNUVEWIWOWJWPUVMYQDUVOUVMUVLCUFZDYQUVMUV
      KRTZUVRCDUVMUVLQUCUDUVSUVLQUCWQQUVKUEWRUVLUVRCUFUUFUVLCWSWTOXAYPUVRFUVKGV
      SZYHUVKUJYOUVLACYHUVKYNUAVBKWPXBXCADFUVNUVKUUSUVTUUQXDXELXFXGXHXIXJXKVLXL
      XMXNHYIXOXPVOXMXQXRYTUUIFPYTPXSUUGUUHFUUGFXSAFPAPXSXTYAYHYIUJYSUUGAUUHYHY
      IYRUAVBAFPYBWPYCXGYDYEYFUPYG $.
      $( [8-Jul-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Lemma for ~ unbnn .  After removing the successor of an element from an
       unbounded set of natural numbers, the intersection of the result belongs
       to the original unbounded set. $)
    unblem1 $p |- ( ( ( B C_ om /\ A. x e. om E. y e. B x e. y ) /\
                 A e. B ) -> |^| ( B \ suc A ) e. B ) $=
      ( com wss cv wcel wrex wral wa csuc cdif con0 c0 wne cint omsson sstr 
      mpan2 ssdifss syl ad2antrr wn wi ssel word nnord ordn2lp imnan sylibr 
      con2d syl6 imdistand eldif ne0i sylbir exp3a r19.23adv wceq eleq1 
      rexbidv rcla4cva syl5 peano2b syl6ib sylan2d imp31 jca onint eldifi 3syl 
      ) DEFZAGZBGZHZBDIZAEJZKCDHZKZDCLZMZNFZWBOPZKWBQZWBHWEDHVTWCWDVMWCVRVSVMDN
      FZWCVMENFWFRDENSTDNWAUAUBUCVMVRVSWDVMVRVSWDVMVRWAEHZWDVSVMWAVOHZBDIZWDVRW
      GKVMWHWDBDVMVODHZWHWDVMWJWHKWJVOWAHZUDZKZWDVMWJWHWLVMWJVOEHZWHWLUEZDEVOUF
      WNVOUGZWOVOUHWPWKWHWPWKWHKUDWKWHUDUEVOWAUIWKWHUJUKULUBUMUNWMVOWBHWDVODWAU
      OWBVOUPUQUMURUSVQWIAWAEVNWAUTVPWHBDVNWAVOVAVBVCVDVMVSCEHWGDECUFCVEVFVGURV
      HVIWBVJWEDWAVKVL $.
      $( [3-Dec-2003] $)
  $}

  ${
    $d x y z w v u A $.  $d z w v u F $.
    unblem.1 $e |- ( w e. F -> A. x w e. F ) $.
    unblem.2 $e |- F =
          ( rec ( { <. x , y >. | y = |^| ( A \ suc x ) } , |^| A ) |` om ) $.
    $( Lemma for ~ unbnn .  The value of the function ` F ` belongs to the
       unbounded set of natural numbers ` A ` . $)
    unblem2 $p |- ( ( A C_ om /\ A. w e. om E. v e. A w e. v ) -> ( z e. om ->
                ( F ` z ) e. A ) ) $=
      ( vu cv com wcel wss wrex wral wa cfv c0 csuc wceq fveq2 eleq1d cint 
      con0 wne onint omsson sstr mpan2 wex wi peano1 eleq1 rexbidv rcla4v 
      ax-mp df-rex sylib exsimpl syl n0 sylibr syl2an cdif copab crdg cres 
      fr0g fveq1i syl5req ibi wb ax-17 hbfv hbsuc hbdif hbint suceq difeq2d 
      inteqd frsucopab eqcomd ex ibd unblem1 syl5 exp3a finds2 com12 ) CKZLMFLN
      ZDKZEKZMZEFOZDLPZQZWKGRZFMZWTSGRZFMZJKZGRZFMZXCTZGRZFMZWRCJWKSUAWSXAFWKSG
      UBUCWKXCUAWSXDFWKXCGUBUCWKXFUAWSXGFWKXFGUBUCWRFUDZFMZXBFUENZFSUFZXJWLWQFU
      GWLLUENXKUHFLUEUIUJWQWNFMZEUKZXLWQXMSWNMZQEUKZXNWQXOEFOZXPSLMWQXQULUMWPXQ
      DSLWMSUAWOXOEFWMSWNUNUOUPUQXOEFURUSXMXOEUTVAEFVBVCVDXJXBXJXIXAFXJSBKFAKZT
      ZVEZUDZUAABVFZXIVGLVHZRXIXAXIFYBVISGYCIVJVKUCVLVAXCLMZWRXEXHYDFXDTZVEZUDZ
      FMZXHWRXEQYDYHXHYDYHYHXHVMYDYHQZYGXGFYIXGYGABDXIXCYAYGFGWMXIMAVNWMXCMAVNZ
      ADYFADFYEWMFMAVNADXDADXCGHYJVOVPVQVRIXRXDUAZXTYFYKXSYEFXRXDVSVTWAWBWCUCWD
      WEDEXDFWFWGWHWIWJ $.
      $( [3-Dec-2003] $)

    $( Lemma for ~ unbnn .  The value of the function ` F ` is less than its
       value at a successor. $)
    unblem3 $p |- ( ( A C_ om /\ A. w e. om E. v e. A w e. v ) -> ( z e. om ->
                ( F ` z ) e. ( F ` suc z ) ) ) $=
      ( com wss cv wcel wrex wral wa cfv csuc cdif cint con0 unblem2 imp wi 
      omsson sstr mpan2 ssel anc2li syl ad2antrr mpd onmindif wceq unblem1 ex 
      syld ax-17 hbfv hbsuc hbdif hbint suceq difeq2d inteqd frsucopab sylcom 
      eleqtrrd ) FJKZDLZELMEFNDJOZPZCLZJMZVMGQZVMRGQZMVLVNPZVOFVORZSZTZVPVQFUAK
      ZVOUAMZPZVOVTMVQVOFMZWCVLVNWDABCDEFGHIUBZUCVIWDWCUDZVKVNVIWAWFVIJUAKWAUEF
      JUAUFUGWAWDWBFUAVOUHUIUJUKULFVOUMUJVLVNVPVTUNZVLVNVTFMZWGVLVNWDWHWEVLWDWH
      DEVOFUOUPUQVNWHWGABDFTZVMFALZRZSZTVTFGVJWIMAURVJVMMAURZADVSADFVRVJFMAURAD
      VOADVMGHWMUSUTVAVBIWJVOUNZWLVSWNWKVRFWJVOVCVDVEVFUPVGUCVHUP $.
      $( [3-Dec-2003] $)

    $( Lemma for ~ unbnn .  The function ` F ` maps the set of natural numbers
       one-to-one to the set of unbounded natural numbers ` A ` . $)
    unblem4 $p |- ( ( A C_ om /\ A. w e. om E. v e. A w e. v ) ->
                 F : om -1-1-> A ) $=
      ( vz com wss cv wcel wrex wral wa con0 wf cfv csuc wf1 omsson sstr mpan2 
      adantr wfn ffnfv biimpri cdif cint wceq copab crdg cres frfnom fneq1i 
      mpbir unblem2 r19.21aiv sylancr unblem3 omsmo syl21anc ) EJKZCLDLMDENCJOZ
      PZEQKZJEFRZILZFSZVITFSMZIJOJEFUAVDVGVEVDJQKVGUBEJQUCUDUEFJUFZVJEMZIJOZVHV
      FVHVLVNPIJEFUGUHVLBLEALTUIUJUKABULZEUJZUMJUNZJUFVPVOUOJFVQHUPUQVFVMIJABIC
      DEFGHURUSUTVFVKIJABICDEFGHVAUSIEFVBVC $.
      $( [3-Dec-2003] $)
  $}

  ${
    $d x y z w A $.
    unbnn.1 $e |- A e. _V $.
    $( Any unbounded subset of natural numbers is equinumerous to the set of
       all natural numbers.  Part of the proof of Theorem 42 of [Suppes]
       p. 151.  See ~ unbnn3 for a stronger version without the hypothesis. $)
    unbnn $p |- ( ( A C_ om /\ A. x e. om E. y e. A x e. y ) -> A ~~ om ) $=
      ( vw vz com wss cv wcel wrex wral wa cdom wbr cen cvv wi ssdomg ax-mp 
      adantr csuc cdif cint wceq copab crdg cres wf1 hbopab1 ax-17 hbrdg hbres 
      eqid unblem4 f1dom2g syl sbth syl11anc ) CGHZAIZBIJBCKAGLZMZCGNOZGCNOZCGP
      OUTVDVBCQJZUTVDRDCGQSTUAVCGCEICFIUBUCUDUEZFEUFZCUDZUGZGUHZUIZVEFEABCVKFAV
      JGFAVIVHVGFEAUJVAVIJFUKULVAGJFUKUMVKUNUOVFVLVERDGCQVKUPTUQCGURUS $.
      $( [3-Dec-2003] $)

    $( Version of ~ unbnn that does not require a strict upper bound. $)
    unbnn2 $p |- ( ( A C_ om /\ A. x e. om E. y e. A x C_ y ) -> A ~~ om ) $=
      ( vz com wss cv wcel wrex wral cen wbr unbnn csuc wceq sseq1 rexbidv 
      rcla4v cvv wi visset sucssel ax-mp reximi syl6com peano2 syl5 r19.21aiv 
      sylan2 ) CFGEHZBHZIZBCJZEFKCFLMAHZULGZBCJZAFKZEBCDNURUNEFURUKOZFIZUNUKFIU
      TURUSULGZBCJZUNUQVBAUSFUOUSPUPVABCUOUSULQRSVAUMBCUKTIVAUMUAEUBUKULTUCUDUE
      UFUKUGUHUIUJ $.
      $( [24-Apr-2004] $)
  $}

  ${
    $d x y z w A $.
    $( Any set strictly dominated by the class of natural numbers is finite.
       Sufficiency part of Theorem 42 of [Suppes] p. 151.  This theorem does
       not require the Axiom of Infinity. $)
    isfinite2 $p |- ( A ~< om -> A e. Fin ) $=
      ( vy vz vw com cvv wcel csdm wbr cfn sdomex simprd cv cen wss wa wex 
      cdom domeng sdomdom syl5bi wi wrex wral wn visset unbnn ex sdomnen nsyli 
      ensdomtr ensym sylan syl5 csuc con0 word wb cuni ordtri1 ssel2 elon 
      sylib an32s ralbidva unissb ralnex bicomi 3bitr4g ordunisssuc bitr3d 
      omsson sstr mpan2 nnord syl2an ssnnfi peano2b sylanb adantl sylbid 
      r19.23adva rexnal syl5ibr syld expdimp enfi mpan sylibrd com13 imp3a 
      19.23adv sylcom mpcom ) EFGZAEHIZAJGZWPAFGWOAEKLWOWPABMZNIZWREOZPZBQZWQWO
      AERIXBWPBAEFSAETUAWPXAWQBWPWSWTWQWTWSWPWQWTWSWPWQUBWTWSPWPWRJGZWQWTWSWPXC
      WTWSWPPZCMZDMZGZDWRUCZCEUDZUEZXCWTWREHIZXJXDWTXIWRENIZXKWTXIXLCDWRBUFZUGU
      HWREUIUJWRANIWPXKWSWRAEUKAWRXMULUMUNWTXHUEZCEUCXCXJWTXNXCCEWTXEEGZPXNWRXE
      UOZOZXCWRUPOZXEUQZXNXQURWTXOXRXSPZWRUSXEOZXNXQXTXFXEOZDWRUDXGUEZDWRUDZYAX
      NXTYBYCDWRXRXFWRGZXSYBYCURZXFUQZXSYFXRYEPZXFXEUTYHXFUPGYGWRUPXFVAXFDUFVBV
      CUMVDVEDWRXEVFYDXNXGDWRVGVHVIWRXEVJVKWTEUPOXRVLWREUPVMVNXEVOVPXOXQXCUBWTX
      OXQXCXPEGXQXCXOXPWRVQXEVRVSUHVTWAWBXHCEWCWDWEWFWSWQXCURZWTWRFGWSYIXMAWRFW
      GWHVTWIUHWJWKWLWMWN $.
      $( [10-Sep-2008] $) $( [24-Apr-2004] $)
  $}

  $( This (useless) theorem, which was proved without the Axiom of Infinity,
     demonstrates an artifact of our definition of strict dominance, which is
     meaningful only when its arguments exist.  In particular, the antecedent
     cannot be satisfied unless ` om ` exists. $)
  fin2inf $p |- ( A ~< om -> om e. _V ) $=
    ( com csdm wbr cvv wcel sdomex simprd ) ABCDAEFBEFABGH $.
    $( [12-Mar-2006] $) $( [13-Nov-2003] $)

  ${
    $d x y z w A $.  $d x y z w B $.  $d z w F $.
    unfilem1.1 $e |- A e. om $.
    unfilem1.2 $e |- B e. om $.
    unfilem1.3 $e |- F = { <. x , y >. | ( x e. B /\ y = ( A +o x ) ) } $.
    $( Lemma for proving that the union of two finite sets is finite. $)
    unfilem1 $p |- ran F = ( ( A +o B ) \ A ) $=
      ( cv wcel coa co wceq wa copab crn wex cab cdif rnopab rneqi wn eldif 
      com wb nnacl mp2an elnn mpan2 wrex wss word ordtri1 nnord syl2an 
      nnawordex bitr3d mpan df-rex syl6bb syl nnaord mp3an23 eleq1 sylan9bb 
      biimprcd wi eqcom biimpi adantl a1i jcad eximdv sylbid imp notbid 
      anbi12d biimparc ibi nnaword1 ax-mp 3syl mpbid sylancr jca sylan 
      19.23aiv impbii bitri abbi2i 3eqtr4i ) AIZDJZBIZCWLKLZMZNZABOZPWQAQZBREPC
      DKLZCSZWQABTEWRHUAWSBXAWNXAJWNWTJZWNCJZUBZNZWSWNWTCUCXEWSXBXDWSXBXDWLUDJZ
      WOWNMZNZAQZWSXBWNUDJZXDXIUEXBWTUDJZXJCUDJZDUDJZXKFGCDUFUGWNWTUHUIXJXDXGAU
      DUJZXIXLXJXDXNUEFXLXJNCWNUKZXDXNCULZWNULXOXDUEXLXJCWNUMCUNZWNUNUOACWNUPUQ
      URXGAUDUSUTVAXBXHWQAXBXHWMWPXHWMXBXFWMWOWTJZXGXBXFXMXLWMXRUEZGFWLDCVBVCZW
      OWNWTVDVEVFXHWPVGXBXGWPXFXGWPWOWNVHVIVJVKVLVMVNVOWQXEAXRWOCJZUBZNZWPXEWMW
      PXEYCWPXBXRXDYBWNWOWTVDWPXCYAWNWOCVDVPVQVRWMXRYBWMXRWMXFXSWMXMXFGWLDUHUIZ
      XTVAVSXLXFYBWMXLXFNZCWOUKZYBCWLVTYEWOUDJWOULZYFYBUEZCWLUFWOUNXPYGYHXLXPFX
      QWACWOUMURWBWCFYDWDWEWFWGWHWIWJWK $.
      $( [10-Nov-2002] $)

    $( Lemma for proving that the union of two finite sets is finite. $)
    unfilem2 $p |- F : B -1-1-onto-> ( ( A +o B ) \ A ) $=
      ( vz vw coa co cdif wf1o wf1 wfo df-f1o wf cv cfv wceq wi wral dff13 wfn 
      crn df-fo oprex fnopab2 unfilem1 mpbir2an fof ax-mp wcel wa opreq2 
      fvopab4 eqeqan12d com wb nnacan mp3an1 elnn mpan2 syl2an bitrd biimpd 
      rgen2a ) DCDKLCMZENDVIEOZDVIEPZDVIEQVJDVIERZISZETZJSZETZUAZVMVOUAZUBZJDUC
      IDUCIJDVIEUDVKVLVKEDUEEUFVIUADVIEUGABDCASZKLZECVTKUHHUIABCDEFGHUJUKZDVIEU
      LUMVSIJDVMDUNZVODUNZUOZVQVRWEVQCVMKLZCVOKLZUAZVRWCWDVNWFVPWGABVMWAWFDEVTV
      MCKUPHCVMKUHUQABVOWAWGDEVTVOCKUPHCVOKUHUQURVMUSUNZVOUSUNZWHVRUTZWCWDCUSUN
      WIWJWKFCVMVOVAVBWCDUSUNZWIGVMDVCVDWDWLWJGVODVCVDVEVFVGVHUKWBUK $.
      $( [10-Nov-2002] $)
  $}

  ${
    $d x y f A $.  $d x y f B $.
    $( Lemma for proving that the union of two finite sets is finite. $)
    unfilem3 $p |- ( ( A e. om /\ B e. om ) -> B ~~ ( ( A +o B ) \ A ) ) $=
      ( vf vx vy com wcel wa coa co cdif cv wf1o wex cen wbr wceq copab cvv 
      wfn c0 cif wb opreq1 eqeq2d anbi2d opabbidv f1oeq1 syl difeq1d difeq2 
      eqtrd f1oeq3 bitrd eleq2 anbi1d f1oeq2 opreq2 3bitrd peano1 elimel eqid 
      unfilem2 dedth2h f1ofn fnex sylancom cla4egv sylc oprex difexg ax-mp 
      bren sylibr ) AFGZBFGZHZBABIJZAKZCLZMZCNZBVSOPVQDLZBGZELZAWCIJZQZHZDERZSG
      ZBVSWIMZWBVOVPWIBTZWJVQWKWLVOVPWKBVOAUAUBZBIJZWMKZWDWEWMWCIJZQZHZDERZMZVP
      BUAUBZWMXAIJZWMKZWCXAGZWQHZDERZMZABUAUAAWMQZWKBVSWSMZWTXHWIWSQWKXIUCXHWHW
      RDEXHWGWQWDXHWFWPWEAWMWCIUDUEUFUGBVSWIWSUHUIXHVSWOQXIWTUCXHVSWNAKWOXHVRWN
      AAWMBIUDUJAWMWNUKULVSWOBWSUMUIUNBXAQZWTBWOXFMZXAWOXFMZXGXJWSXFQWTXKUCXJWR
      XEDEXJWDXDWQBXAWCUOUPUGBWOWSXFUHUIBXAWOXFUQXJWOXCQXLXGUCXJWNXBWMBXAWMIURU
      JWOXCXAXFUMUIUSDEWMXAXFAUAFUTVABUAFUTVAXFVBVCVDZBVSWIVEUIBFWIVFVGXMWAWKCW
      ISBVSVTWIUHVHVIBVSCVRSGVSSGABIVJVRASVKVLVMVN $.
      $( [16-Nov-2002] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The union of two finite sets is finite.  Part of Corollary 6K of
       [Enderton] p. 144. $)
    unfi $p |- ( ( A e. Fin /\ B e. Fin ) -> ( A u. B ) e. Fin ) $=
      ( vx vy vz cfn wcel cdif cun wa cv cen wbr com wrex reeanv isfi anbi12i 
      bitr4i coa co nnacl wceq undif2 a1i wss nnaword1 undif sylib breq12d cin 
      c0 difdisj unen mpanr12 syl5bi wi unfilem3 entr expcom syl sylan2d breq2 
      rcla4ev sylibr ex sylsyld r19.23aivv sylbir difss ssfi mpan2 sylan2 ) AFG
      ZBAHZFGZABIZFGZBFGZVNVPJZACKZLMZVODKZLMZJZDNOCNOZVRWFWBCNOZWDDNOZJVTWBWDC
      DNNPVNWGVPWHCAQDVOQRSWEVRCDNNWANGWCNGJZWAWCTUAZNGZWEVQWJLMZVRWAWCUBWIWBVO
      WJWAHZLMZWLWDWIAVOIZWAWMIZLMZWLWBWNJZWIWOVQWPWJLWOVQUCWIABUDUEWIWAWJUFWPW
      JUCWAWCUGWAWJUHUIUJWRAVOUKULUCWAWMUKULUCWQABUMWAWJUMAWAVOWMUNUOUPWIWCWMLM
      ZWDWNUQWAWCURWDWSWNVOWCWMUSUTVAVBWKWLVRWKWLJVQEKZLMZENOVRXAWLEWJNWTWJVQLV
      CVDEVQQVEVFVGVHVIVSVOBUFVPBAVJBVOVKVLVM $.
      $( [30-Aug-2008] $) $( [16-Nov-2002] $)
  $}

  $( If a union is finite, the operands are finite.  Converse of ~ unfi .
     (Contributed by FL, 3-Aug-2009.) $)
  unfir $p |- ( ( A u. B ) e. Fin -> ( A e. Fin /\ B e. Fin ) ) $=
    ( cun cfn wcel wss ssun1 ssfi mpan2 ssun2 jca ) ABCZDEZADEZBDEZMALFNABGLAHI
    MBLFOBAJLBHIK $.
    $( [1-Dec-2010] $) $( [10-Jul-2009] $)

  $( The union of two finite sets is finite.  Part of Corollary 6K of
     [Enderton] p. 144.  This version of ~ unfi is useful only if we assume the
     Axiom of Infinity (see comments in ~ fin2inf ). $)
  unfi2 $p |- ( ( A ~< om /\ B ~< om ) -> ( A u. B ) ~< om ) $=
    ( com csdm wbr wa cun cdom cen wn cfn wcel unfi isfinite2 syl2an isfinite1 
    syl wi cvv fin2inf ensymg con3d adantr anim2d mpd brsdom sylibr ) ACDEZBCDE
    ZFZABGZCHEZUKCIEZJZFZUKCDEUJULCUKIEZJZFZUOUJUKKLZURAKLBKLUSUHUIABMANBNOUKPQ
    UJUQUNULUHUQUNRUIUHUMUPUHCSLUMUPRATUKCSUAQUBUCUDUEUKCUFUG $.
    $( [15-Sep-2008] $) $( [22-Oct-2004] $)

  $( An infinite set ` A ` minus a finite set is infinite.  (Contributed by FL,
     3-Aug-2009.) $)
  difinf $p |- ( ( -. A e. Fin /\ B e. Fin ) -> -. ( A \ B ) e. Fin ) $=
    ( cfn wcel wn cdif wa cun unfi undif1 eleq1i unfir simpld sylbi syl expcom 
    con3d impcom ) BCDZACDZEABFZCDZESUBTUBSTUBSGUABHZCDZTUABIUDABHZCDZTUCUECABJ
    KUFTSABLMNOPQR $.
    $( [10-Jul-2009] $)

  ${
    $d A w x y z $.  $d B w x y z $.
    $( The Cartesian product of two finite sets is finite.  (Contributed by
       Jeff Madsen 2-Sep-2009.) $)
    xpfi $p |- ( ( A e. Fin /\ B e. Fin ) -> ( A X. B ) e. Fin ) $=
      ( vx vy vz vw cfn wcel cxp cv wi c0 csn cdif wceq xpeq1 eleq1d imbi2d 
      xp0r 0fin eqeltri a1i wral wa wex wn sneq difeq2d syl rcla4v adantl 
      pm2.27 ad2antlr cen wbr wb cvv c2nd cres wf1o f1oeng snex xpexg mpan 
      visset 2ndconst ax-mp sylancl enfi mpdan ibir cun difsnid xpundir 
      syl5eqr biimpd unfi syl5 mpan2d 3syld ex 19.23adv neq0 syl5ib syl6eqel 
      a1d pm2.61d2 com23 findcard imp ) AGHBGHZABIZGHZWKCJZBIZGHZKWKLBIZGHZKWKD
      JZEJZMZNZBIZGHZKZWKWSBIZGHZKWKWMKCDEAWNLOZWPWRWKXHWOWQGWNLBPQRWNXBOZWPXDW
      KXIWOXCGWNXBBPQRWNWSOZWPXGWKXJWOXFGWNWSBPQRWNAOZWPWMWKXKWOWLGWNABPQRWRWKW
      QLGBSTUAZUBWSGHZWKXEEWSUCZXGXMWKXNXGKZXMWKUDZWSLOZXOXPFJZWSHZFUEXOXQUFXPX
      SXOFXPXSXOXPXSUDZXNWKWSXRMZNZBIZGHZKZYDXGXSXNYEKXPXEYEEXRWSWTXROZXDYDWKYF
      XCYCGYFXBYBOXCYCOYFXAYAWSWTXRUGUHXBYBBPUIQRUJUKWKYEYDKXMXSWKYDULUMXTYDYAB
      IZGHZXGWKYHXMXSWKYHWKYGBUNUOZYHWKUPYGUQHZYGBURYGUSZUTZYIWKYGBUQYKVAYAUQHW
      KYJXRVBYABUQGVCVDXRUQHYLFVEXRBUQVFVGVHYGBGVIVJVKUMXTYCYGVLZGHZXGYDYHUDXSY
      NXGKXPXSYNXGXSYMXFGXSYBYAVLZBIZXFYMXSYOWSOYPXFOWSXRVMYOWSBPUIYBYABVNVOQVP
      UKYCYGVQVRVSVTWAWBFWSWCWDXQXGXNXQXFWQGWSLBPXLWEWFWGWAWHWIWJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x A $.
    infcntss.1 $e |- A e. _V $.
    $( Every infinite set has a denumerable subset.  Similar to Exercise 8 of
       [TakeutiZaring] p. 91.  (However, we need neither AC nor the Axiom of
       Infinity because of the way we express "infinite" in the antecedent.) $)
    infcntss $p |- ( om ~<_ A -> E. x ( x C_ A /\ x ~~ om ) ) $=
      ( com cdom wbr cv cen wss wa wex domen visset ensym anim2i ancoms eximi 
      sylbi ) DBEFDAGZHFZSBIZJZAKUASDHFZJZAKADBCLUBUDAUATUDTUCUADSAMNOPQR $.
      $( [23-Oct-2004] $)
  $}

  $( An unordered pair is finite. $)
  prfi $p |- { A , B } e. Fin $=
    ( cpr csn cun cfn df-pr wcel snfi unfi mp2an eqeltri ) ABCADZBDZEZFABGMFHNF
    HOFHAIBIMNJKL $.
    $( [22-Aug-2008] $)

  ${
    $d f j k m x y z A $.
    $( The finite union of finite sets is finite.  Exercise 13 of [Enderton]
       p. 144. $)
    unifi $p |- ( ( A e. Fin /\ A. x e. A x e. Fin ) -> U. A e. Fin ) $=
      ( vm vy vk vz vf cfn wcel cv wral cuni cen wbr com wrex wi isfi wa wal 
      c0 csuc wceq breq2 anbi1d imbi1d albidv en0 unieq uni0 syl6eq wss peano1 
      ssid ssnnfi mp2an syl6eqel sylbi adantr ax-gen breq1 raleq anbi12d 
      eleq1d imbi12d cbvalv wf1o wex visset sucex ensym bren sylib cima cfv 
      cun cvv imaexg ax-mp cla4v imp wf1 cres f1of1 sssucid f1ores mpan2 f1oen 
      3syl syl csn ssun1 a1i wfn fnsnfv f1ofn sucid sylancl uneq2d df-suc 
      imaeq2i imaundi eqtr2i wfo f1ofo foima eqtrd sseqtrd ssralv jca sylan2 
      an12s eleq1 rcla4va wf ffvelrn f1of sylan adantrl unfi syl11anc wb 
      unieqd uniun fvex unisn uneq2i syl5eq mpbid exp32 19.23aiv com12 imp3a 
      19.21aiv finds1 relen brrelexi cla4gv exp4a pm2.43b r19.23aiv ) BHIZAJZHI
      ZABKZBLZHIZUUBBCJZMNZCOPUUEUUGQZCBRUUIUUJCOUUHOIDJZUUHMNZUUDAUUKKZSZUUKLZ
      HIZQZDTZUUIUUJQZUURUUKUAMNZUUMSZUUPQZDTUUKEJZMNZUUMSZUUPQZDTZUUKUVCUBZMNZ
      UUMSZUUPQZDTZCEUUHUAUCZUUQUVBDUVMUUNUVAUUPUVMUULUUTUUMUUHUAUUKMUDUEUFUGUU
      HUVCUCZUUQUVFDUVNUUNUVEUUPUVNUULUVDUUMUUHUVCUUKMUDUEUFUGUUHUVHUCZUUQUVKDU
      VOUUNUVJUUPUVOUULUVIUUMUUHUVHUUKMUDUEUFUGUVBDUUTUUPUUMUUTUUKUAUCZUUPUUKUH
      UVPUUOUAHUVPUUOUALUAUUKUAUIUJUKUAOIUAUAULUAHIUMUAUNUAUAUOUPUQURUSUTUVGUVL
      QUVCOIUVGFJZUVCMNZUUDAUVQKZSZUVQLZHIZQZFTZUVLUVFUWCDFUUKUVQUCZUVEUVTUUPUW
      BUWEUVDUVRUUMUVSUUKUVQUVCMVAUUDAUUKUVQVBVCUWEUUOUWAHUUKUVQUIVDVEVFUWDUVKD
      UWDUVIUUMUUPUVIUWDUUMUUPQZUVIUVHUUKGJZVGZGVHZUWDUWFQZUVIUVHUUKMNUWIUUKUVH
      UVCEVIZVJVKUVHUUKGDVIVLVMUWHUWJGUWHUWDUUMUUPUWHUWDUUMSZSZUWGUVCVNZLZUVCUW
      GVOZVPZHIZUUPUWMUWOHIZUWPHIZUWRUWDUWHUUMUWSUWDUWNUVCMNZUUDAUWNKZSZUWSUWHU
      UMSZUWDUXCUWSUWCUXCUWSQFUWNUWGVQIUWNVQIGVIUWGUVCVQVRVSZUVQUWNUCZUVTUXCUWB
      UWSUXFUVRUXAUVSUXBUVQUWNUVCMVAUUDAUVQUWNVBVCUXFUWAUWOHUVQUWNUIVDVEVTWAUXD
      UXAUXBUWHUXAUUMUWHUVCUWNMNZUXAUWHUVHUUKUWGWBZUVCUWNUWGUVCWCZVGZUXGUVHUUKU
      WGWDUXHUVCUVHULUXJUVCWEUVHUUKUVCUWGWFWGUVCUWNUXIUWKWHWIUVCUWNUXEVKWJUSUWH
      UUMUXBUWHUWNUUKULUUMUXBQUWHUWNUWNUWPWKZVPZUUKUWNUXLULUWHUWNUXKWLWMUWHUXLU
      WGUVHVNZUUKUWHUXLUWNUWGUVCWKZVNZVPZUXMUWHUXKUXOUWNUWGUVHWNUVCUVHIZUXKUXOU
      CUWHUVHUVCUWGWOUVHUUKUWGWPUVCUWKWQZWRWSUXMUWGUVCUXNVPZVNUXPUVHUXSUWGUVCWT
      XAUWGUVCUXNXBXCUKUWHUVHUUKUWGXDUXMUUKUCUVHUUKUWGXEUVHUUKUWGXFWJXGZXHUUDAU
      WNUUKXIWJWAXJXKXLUWHUUMUWTUWDUWPUUKIZUUMUWTUWHUUDUWTAUWPUUKUUCUWPHXMXNUVH
      UUKUWGXOUXQUYAUWHUVHUUKUVCUWGXPUVHUUKUWGXQUXRWRXRXSUWOUWPXTYAUWHUWRUUPYBU
      WLUWHUWQUUOHUWHUXLLZUUOUWQUWHUXLUUKUXTYCUYBUWOUXKLZVPUWQUWNUXKYDUYCUWPUWO
      UWPUVCUWGYEYFYGXCYHVDUSYIYJYKWJYLYMYNURWMYOUURUUIUUJUUIBVQIZUURUUSQBUUHMY
      PYQUYDUURUUIUUEUUGUUQUUIUUESZUUGQDBVQUUKBUCZUUNUYEUUPUUGUYFUULUUIUUMUUEUU
      KBUUHMVAUUDAUUKBVBVCUYFUUOUUFHUUKBUIVDVEYRYSWJYTWJUUAURWA $.
      $( [22-Aug-2008] $)

    $( The finite union of finite sets is finite.  Exercise 13 of [Enderton]
       p. 144.  This version of ~ unifi is useful only if we assume the Axiom
       of Infinity (see comments in ~ fin2inf ). $)
    unifi2 $p |- ( ( A ~< om /\ A. x e. A x ~< om ) -> U. A ~< om ) $=
      ( com csdm wbr cv wral wa cuni cdom cen wn cfn wcel unifi isfinite2 
      ralimi syl2an isfinite1 syl wi cvv fin2inf ensymg con3d adantr anim2d 
      mpd brsdom sylibr ) BCDEZAFZCDEZABGZHZBIZCJEZUPCKEZLZHZUPCDEUOUQCUPKEZLZH
      ZUTUOUPMNZVCBMNULMNZABGVDUKUNABOBPUMVEABULPQRUPSTUOVBUSUQUKVBUSUAUNUKURVA
      UKCUBNURVAUABUCUPCUBUDTUEUFUGUHUPCUIUJ $.
      $( [28-Sep-2008] $) $( [11-Mar-2006] $)
  $}

  ${
    $d x y z w v f A $.
    $( Equivalent ways of stating the finite intersection property.  We show
       two ways of saying, "the intersection of elements in every finite
       non-empty subcollection of ` A ` is in ` A ` ."  This theorem is
       applicable to a topology, which (among other axioms) is closed under
       finite intersections.  Some texts use the left-hand version of this
       axiom and others the right-hand version, but as our proof here shows,
       their "intuitively obvious" equivalence can be non-trivial to establish
       formally. $)
    fiint $p |- ( A. x e. A A. y e. A ( x i^i y ) e. A <->
  A. x ( ( x C_ A /\ x =/= (/) /\ x e. Fin ) -> |^| x e. A ) ) $=
      ( vz vw vv vf cv cin wcel wral wss c0 wne wa cfn cint wi wal w3a cen wbr 
      com wrex isfi csuc wceq breq1 anbi2d imbi1d albidv visset ensym en0 
      sylib anim1i ancoms adantll wn pm3.24 pm2.21i df-ne sylan2b syl ax-gen 
      a1i ax-17 hba1 wf1o wex cima cfv ssel wfo wf f1ofo fof sucid ffvelrn 
      mpan2 3syl syl5 imp adantr crn imassrn wfn ccnv wfun dff1o2 simp3bi 
      sseq2d mpbii sstr2 anim1d wf1 cres f1of1 sssucid f1ores f1oen jctird cvv 
      imaexg ax-mp sseq1 neeq1 anbi12d breq2 inteq eleq1d imbi12d cla4v sylan9 
      ineq1 ineq2 rcla42v ex syl6 com4r exp4a exp3a com14 imp43 syl5ibr int0 
      syl6eq ineq1d ssv sseqin2 mpbi biimprd pm2.61d2 mpd wb csn cun fnsnfv 
      f1ofn sylancl uneq2d df-suc imaeq2i imaundi eqtr2i foima eqtrd inteqd 
      fvex intunsn syl5eqr ad2antlr mpbid exp43 19.23adv bren syl5ib adantlr 
      com13 19.21ad finds2 ax-4 com24 r19.23aiv sylbi imp3a 19.21aiv cpr 
      zfpair2 eleq1 prss prnz biantru prfi 3bitrri intpr eleq1i 3imtr3g 
      r19.21aivv impbii cbvral2v df-3an imbi1i albii 3bitr4i ) DHZEHZIZCJZECKDC
      KZAHZCLZUWKMNZOZUWKPJZOZUWKQZCJZRZASZUWKBHZIZCJZBCKACKUWLUWMUWOTZUWRRZASU
      WJUWTUWJUWSAUWJUWNUWOUWRUWOUWNUWJUWRUWOUWKUXAUAUBZBUCUDUWNUWJUWRRZRZBUWKU
      EUXFUXHBUCUXAUCJZUXAUWKUAUBZUXHUXFUXIUWJUWNUXJUWRUXIUWJUWNUXJUWRUXIUWJUWN
      UXJOZUWRRZASZUXLUXMUWNMUWKUAUBZOZUWRRZASZUWNFHZUWKUAUBZOZUWRRZASZUWNUXRUF
      ZUWKUAUBZOZUWRRZASZUWJBFUXAMUGZUXLUXPAUYHUXKUXOUWRUYHUXJUXNUWNUXAMUWKUAUH
      UIUJUKUXAUXRUGZUXLUYAAUYIUXKUXTUWRUYIUXJUXSUWNUXAUXRUWKUAUHUIUJUKUXAUYCUG
      ZUXLUYFAUYJUXKUYEUWRUYJUXJUYDUWNUXAUYCUWKUAUHUIUJUKUXQUWJUXPAUXOUWKMUGZUW
      MOZUWRUWMUXNUYLUWLUXNUWMUYLUXNUYKUWMUXNUWKMUAUBUYKMUWKAULZUMUWKUNUOUPUQUR
      UYKUYKUSZUWRUWMUYKUYNOUWRUYKUTVAUWKMVBVCVDVEVFUWJUYBUYGRRUXRUCJUWJUYBUYFA
      UWJAVGUYAAVHUYEUYBUWJUWRUWLUYDUYBUXGRZUWMUWLUYDUYOUWLUYCUWKGHZVIZGVJUYOUY
      DUWLUYQUYOGUWLUYQUYBUWJUWRUWLUYQOZUYBUWJOZOZUYPUXRVKZQZUXRUYPVLZIZCJZUWRU
      YTVUCCJZVUEUYRVUFUYSUWLUYQVUFUWLVUCUWKJZVUFUYQUWKCVUCVMUYQUYCUWKUYPVNZUYC
      UWKUYPVOZVUGUYCUWKUYPVPZUYCUWKUYPVQVUIUXRUYCJZVUGUXRFULZVRZUYCUWKUXRUYPVS
      VTWAWBWCWDUYTVUAMUGZVUFVUERZUYTVUAMNZVUOVUNUSUWLUYQUYBUWJVUPVUORZUWJUYQUY
      BUWLVUQUWJUYQUYBUWLVUQRUWJUYQUYBOZUWLVUPVUOVURUWLVUPOZVUFUWJVUEVURVUSVUBC
      JZVUFUWJVUERZRUYQVUSVUACLZVUPOZUXRVUAUAUBZOZUYBVUTUYQVUSVVCVVDUYQUWLVVBVU
      PUYQVUAUWKLZUWLVVBRUYQVUAUYPWEZLVVFUYPUXRWFUYQVVGUWKVUAUYQUYPUYCWGZUYPWHW
      IVVGUWKUGUYCUWKUYPWJWKWLWMVUAUWKCWNVDWOUYQUYCUWKUYPWPZUXRVUAUYPUXRWQZVIZV
      VDUYCUWKUYPWRVVIUXRUYCLVVKUXRWSUYCUWKUXRUYPWTVTUXRVUAVVJVULXAWAXBUYAVVEVU
      TRAVUAUYPXCJVUAXCJGULUYPUXRXCXDXEUWKVUAUGZUXTVVEUWRVUTVVLUWNVVCUXSVVDVVLU
      WLVVBUWMVUPUWKVUACXFUWKVUAMXGXHUWKVUAUXRUAXIXHVVLUWQVUBCUWKVUAXJXKXLXMXNV
      UTVUFVVAUWIVUEVUBUWGIZCJDEVUBVUCCCUWFVUBUGUWHVVMCUWFVUBUWGXOXKUWGVUCUGVVM
      VUDCUWGVUCVUBXPXKXQXRXSXTYAYBYCYDVUAMVBYEVUNVUEVUFVUNVUDVUCCVUNVUDXCVUCIZ
      VUCVUNVUBXCVUCVUNVUBMQXCVUAMXJYFYGYHVUCXCLVVNVUCUGVUCYIVUCXCYJYKYGXKYLYMY
      NUYQVUEUWRYOUWLUYSUYQVUDUWQCUYQVUAVUCYPZYQZQUWQVUDUYQVVPUWKUYQVVPUYPUYCVK
      ZUWKUYQVVPVUAUYPUXRYPZVKZYQZVVQUYQVVOVVSVUAVVHVUKVVOVVSUGUYQUYCUXRUYPYRUY
      CUWKUYPYSVUMYTUUAVVQUYPUXRVVRYQZVKVVTUYCVWAUYPUXRUUBUUCUYPUXRVVRUUDUUEYGU
      YQVUHVVQUWKUGVUJUYCUWKUYPUUFVDUUGUUHVUAVUCUXRUYPUUIUUJUUKXKUULUUMUUNUUOUY
      CUWKGUYMUUPUUQWCUURUUSUUTVFUVAUXLAUVBXSYAUVCUWKUXABULUMWBUVDUVEUUSUVFUVGU
      WTUWIDECCUWTUWFUWGUVHZCLZVWBMNZOZVWBPJZOZVWBQZCJZUWFCJUWGCJOZUWIUWSVWGVWI
      RAVWBDEUVIUWKVWBUGZUWPVWGUWRVWIVWKUWNVWEUWOVWFVWKUWLVWCUWMVWDUWKVWBCXFUWK
      VWBMXGXHUWKVWBPUVJXHVWKUWQVWHCUWKVWBXJXKXLXMVWJVWCVWEVWGUWFUWGCDULZEULZUV
      KVWDVWCUWFUWGVWLUVLUVMVWFVWEUWFUWGUVNUVMUVOVWHUWHCUWFUWGVWLVWMUVPUVQUVRUV
      SUVTUXCUWIUWFUXAIZCJABDECCUWKUWFUGUXBVWNCUWKUWFUXAXOXKUXAUWGUGVWNUWHCUXAU
      WGUWFXPXKUWAUXEUWSAUXDUWPUWRUWLUWMUWOUWBUWCUWDUWE $.
      $( [2-Sep-2008] $) $( [22-Sep-2002] $)
  $}

  ${
    $d x y z $.
    $( Two ways to express the collection of finite intersections of a set
       ` A ` . $)
    abfii1 $p |- |^| { x | ( A C_ x /\
                         A. y e. x A. z e. x ( y i^i z ) e. x ) } =
                  |^| { x | ( A C_ x /\ A. y ( ( y C_ x /\ y =/= (/) /\
                   y e. Fin ) -> |^| y e. x ) ) } $=
      ( cv wss cin wcel wral wa cab c0 wne cfn w3a cint wi wal fiint anbi2i 
      abbii inteqi ) DAEZFZBEZCEGUCHCUCIBUCIZJZAKUDUEUCFUELMUENHOUEPUCHQBRZJZAK
      UGUIAUFUHUDBCUCSTUAUB $.
      $( [29-Sep-2008] $) $( [29-Jul-2006] $)
  $}

  ${
    $d f t u v w x y z A $.
    abfii2.1 $e |- A e. _V $.
    $( Two ways to express the collection of finite intersections of a set
       ` A ` . $)
    abfii2 $p |- { x | E. y ( y C_ A /\ y e. Fin /\ x = |^| y ) }
            = |^| { x | A. y ( ( y C_ A /\ y =/= (/) /\ y e. Fin ) ->
                 |^| y e. x ) } $=
      ( cv wss c0 wne cfn wcel w3a cint cuni cin wi wal cab wceq wa wex uniex 
      inex2 csn cvv df-sn snex eqeltrri abexssex simp1 anim1i eximi ss2abi 
      ssexi intab intssuni2 dfss sylib 3adant3 eleq1d pm5.74i albii abbii 
      inteqi df-3an visset eleq1 mpbii intex sylibr pm4.71ri anbi2i an4 anbi1i 
      wb eqeq2d pm5.32i anass 3bitr3ri bitri 3bitri exbii 3eqtr4ri ) BEZCFZWCGH
      ZWCIJZKZWCLZCMZNZAEZJZOZBPZAQZLWGWKWJRZSZBTZAQZWGWHWKJZOZBPZAQZLWDWFWKWHR
      ZKZBTZAQWGABWJWIWHCDUAUBWSWDWPSZBTZAQWPBACDWJUCWPAQUDAWJUEWJUFUGUHWRXHAWQ
      XGBWGWDWPWDWEWFUIUJUKULUMUNXCWOXBWNAXAWMBWGWTWLWGWHWJWKWDWEWHWJRZWFWDWESZ
      WHWIFXIWCCUOWHWIUPUQZURUSUTVAVBVCXFWRAXEWQBXEWDWFSZXDSXLWEXDSZSZWQWDWFXDV
      DXDXMXLXDWEXDWHUDJZWEXDWKUDJXOAVEWKWHUDVFVGWCVHVIVJVKXNXJWFXDSSZWQWDWFWEX
      DVLWGXDSXJWFSZXDSWQXPWGXQXDWDWEWFVDVMWGXDWPWDWEXDWPVNWFXJWHWJWKXKVOURVPXJ
      WFXDVQVRVSVTWAVBWB $.
      $( [1-Oct-2008] $) $( [29-Jul-2006] $)

    $( Two ways to express the collection of finite intersections of a set
       ` A ` . $)
    abfii3 $p |- |^| { x | ( A C_ x /\ A. y ( ( y C_ A /\ y =/= (/) /\
                   y e. Fin ) -> |^| y e. x ) ) } =
                  |^| { x | A. y ( ( y C_ A /\ y =/= (/) /\
                   y e. Fin ) -> |^| y e. x ) } $=
      ( vz cv wss c0 wne cfn wcel w3a cint wi wal cab wa wceq wex csn snssi 
      snfi eqid snex sseq1 eleq1 inteq visset intsn syl6eq eqeq2d 3anbi123d 
      cla4ev mp3an23 syl eqeq1 3anbi3d exbidv elab sylibr ssriv abfii2 sseqtri 
      intmin4 ax-mp ) CBFZCGZVFHIVFJKZLVFMZAFZKNBOZAPMZGCVJGVKQAPMVLRCVGVHVJVIR
      ZLZBSZAPZVLECVPEFZCKZVGVHVQVIRZLZBSZVQVPKVRVQTZCGZWAVQCUAWCWBJKZVQVQRZWAV
      QUBVQUCVTWCWDWELBWBVQUDVFWBRZVGWCVHWDVSWEVFWBCUEVFWBJUFWFVIVQVQWFVIWBMVQV
      FWBUGVQEUHZUIUJUKULUMUNUOVOWAAVQWGVJVQRZVNVTBWHVMVSVGVHVJVQVIUPUQURUSUTVA
      ABCDVBVCVKACVDVE $.
      $( [2-Oct-2008] $) $( [10-Aug-2006] $)

    $( Two ways to express the collection of finite intersections of a set
       ` A ` .  Even though the expressions differ by only one symbol, the
       proof is not simple. $)
    abfii4 $p |- |^| { x | ( A C_ x /\ A. y ( ( y C_ x /\ y =/= (/) /\
                   y e. Fin ) -> |^| y e. x ) ) } =
                  |^| { x | ( A C_ x /\ A. y ( ( y C_ A /\ y =/= (/) /\
                   y e. Fin ) -> |^| y e. x ) ) } $=
      ( vv vw vz vt vf cv wss c0 wne cfn wcel w3a cint wi wal wa cab wceq wex 
      cvv csn df-sn snex eqeltrri abexssex 3simpb eximi ss2abi ssexi sseq2 
      3anbi1d eleq2 imbi12d albidv anbi12d ssmin abfii3 abfii2 eqtr4i sseqtri 
      cin wral eeanv an6 cun visset unex sseq1 eleq1 inteq eqeq2d 3anbi123d 
      cla4ev unss biimpi unfi ineq12 intun syl6eqr syl3an sylbi 19.23aivv 
      sylbir inex1 eqeq1 3anbi3d exbidv elab sylibr cbvexv bitri syl2anb 
      rgen2a fiint mpbi pm3.2i intmin3 ax-mp syl6bb cbvabv eqtri sstr2 com12 
      idd 3anim123d imim1d alimdv imp intss eqssi ) CAJZKZBJZXOKZXQLMZXQNOZPZXQ
      QZXOOZRZBSZTZAUAZQZXQCKZXSXTPZYCRZBSZAUAZQZXPYLTAUAQYHYNYHEJZCKZYONOZFJZY
      OQZUBZPZEUCZFUAZYNUUCUDOYHUUCKUUCYPYTTZEUCZFUAYTEFCDYSUEYTFUAUDFYSUFYSUGU
      HUIUUBUUEFUUAUUDEYPYQYTUJUKULUMYFCUUCKZXQUUCKZXSXTPZYBUUCOZRZBSZTAUUCUDXO
      UUCUBZXPUUFYEUUKXOUUCCUNUULYDUUJBUULYAUUHYCUUIUULXRUUGXSXTXOUUCXQUNUOXOUU
      CYBUPUQURUSUUFUUKCCYRKYPYOLMYQPYSYRORESZTFUAQZUUCUUMFCUTUUNUUMFUAQUUCFECD
      VAFECDVBVCVDXQGJZVEZUUCOZGUUCVFBUUCVFUUKUUQBGUUCHJZCKZUURNOZXQUURQZUBZPZH
      UCZIJZCKZUVENOZUUOUVEQZUBZPZIUCZUUQXQUUCOZUUOUUCOZUVDUVKTZYPYQUUPYSUBZPZE
      UCZUUQUVNUVCUVJTZIUCHUCUVQUVCUVJHIVGUVRUVQHIUVRUUSUVFTZUUTUVGTZUVBUVITZPU
      VQUUSUUTUVBUVFUVGUVIVHUURUVEVIZCKZUWBNOZUUPUWBQZUBZUVQUVSUVTUWAUVPUWCUWDU
      WFPEUWBUURUVEHVJIVJVKYOUWBUBZYPUWCYQUWDUVOUWFYOUWBCVLYOUWBNVMUWGYSUWEUUPY
      OUWBVNVOVPVQUVSUWCUURUVECVRVSUURUVEVTUWAUUPUVAUVHVEUWEXQUVAUUOUVHWAUURUVE
      WBWCWDWEWFWGUUBUVQFUUPXQUUOBVJZWHYRUUPUBZUUAUVPEUWIYTUVOYPYQYRUUPYSWIWJWK
      WLWMUVLYPYQXQYSUBZPZEUCZUVDUUBUWLFXQUWHYRXQUBZUUAUWKEUWMYTUWJYPYQYRXQYSWI
      WJWKWLUWKUVCEHYOUURUBZYPUUSYQUUTUWJUVBYOUURCVLYOUURNVMUWNYSUVAXQYOUURVNVO
      VPWNWOUVMYPYQUUOYSUBZPZEUCZUVKUUBUWQFUUOGVJYRUUOUBZUUAUWPEUWRYTUWOYPYQYRU
      UOYSWIWJWKWLUWPUVJEIYOUVEUBZYPUVFYQUVGUWOUVIYOUVECVLYOUVENVMUWSYSUVHUUOYO
      UVEVNVOVPWNWOWPWQBGUUCWRWSWTXAXBUUCYIXTXOYBUBZPZBUCZAUAYNUUBUXBFAYRXOUBZU
      UBYPYQXOYSUBZPZEUCUXBUXCUUAUXEEUXCYTUXDYPYQYRXOYSWIWJWKUXEUXAEBYOXQUBZYPY
      IYQXTUXDUWTYOXQCVLYOXQNVMUXFYSYBXOYOXQVNVOVPWNXCXDABCDVBXEVDYGYMKYNYHKYFY
      LAXPYEYLXPYDYKBXPYJYAYCXPYIXRXSXSXTXTYIXPXRXQCXOXFXGXPXSXHXPXTXHXIXJXKXLU
      LYGYMXMXBXNABCDVAVC $.
      $( [5-Oct-2008] $) $( [10-Aug-2006] $)

    $( Two ways to express the collection of finite intersections of a set
       ` A ` . $)
    abfii5 $p |- |^| { x | ( A C_ x /\
                         A. y e. x A. z e. x ( y i^i z ) e. x ) } =
                  { x | E. y ( y C_ A /\ y e. Fin /\ x = |^| y ) } $=
      ( cv wss c0 wne cfn wcel w3a cint wi wal wa cab cin wral wceq wex abfii4 
      abfii3 eqtri abfii1 abfii2 3eqtr4i ) DAFZGZBFZUHGUJHIZUJJKZLUJMZUHKZNBOPA
      QMZUJDGZUKULLUNNBOZAQMZUIUJCFRUHKCUHSBUHSPAQMUPULUHUMTLBUAAQUOUIUQPAQMURA
      BDEUBABDEUCUDABCDUEABDEUFUG $.
      $( [11-Oct-2008] $) $( [29-Jul-2006] $)
  $}

  ${
    $d A a b x y c z w m n p $.  $d B a b x y c z w m n p $.
    $d ph a b c z w m n p $.  $d M a b m n p z y x w c $.
    $( If for every element of a finite indexing set ` A ` there exists a
       corresponding element of another set ` B ` , then there exists a finite
       subset of ` B ` consisting only of those elements which are indexed by
       ` A ` .  Proven without the Axiom of Choice, unlike ~ indexdom .
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    indexfi $p |- ( ( A e. Fin /\ B e. M /\ A. x e. A E. y e. B ph ) ->
                E. c e. Fin ( c C_ B /\ A. x e. A E. y e. c ph /\
                                                A. y e. c E. x e. A ph ) ) $=
      ( vp va vn vm vz vb vw cfn wcel wrex wral cv wss w3a cen wbr com wa wi 
      cab df-fin eleq2i wceq breq1 rexbidv elabg ibi sylbi wal raleq anbi2d 
      rexeq ralbidv 3anbi23d imbi12d cla4gv c0 csuc breq2 imbi1d albidv 0ss 
      a1i ral0 wb en0 mpbiri adantr 0fin sseq1 3anbi123d rcla4ev mpan 
      syl111anc ex ax-gen ax-17 hba1 wex wn nsuceq0 nemtbir visset sucex ensym 
      entr syl syl5ibr mtoi neq0 sylib 3ad2ant3 csn cdif dif1en 3expa 3adant3 
      pm2.27 difss ssralv ax-mp anim2i adantl wsbc hbsb3 hbrex sbceq1a rcla4 
      imp adantrl cun snfi unfi mpan2 ad2antlr ad2antrr unss biimpi snss 
      sylan2b ancoms adantlr adantlll 3ad2antr1 hbra1 hban hbsb hbre1 hbral 
      hb3an wo snssi undif eleq2 elun elsn orbi1i bitri syl6bir 3syl ad3antrrr 
      sbbid snid elun2 rcla4e com12 ra4 ssun1 ssrexv syl6 3ad2ant2 jaod syld 
      r19.21ai biimparc sylan2 expr orbi2i syl5ib syl13anc exp31 r19.23adva 
      cbvrex mpd cbvrexv syl6ib 3adant1 cbvalv cvv difexg syl5com 3expd com23 
      3imp 19.23adv 3exp 19.21ad finds syl5 com3l r19.23aiv mpcom 3impib ) DOPZ
      EFPZACEQZBDRZGSZETZACUWOQZBDRZABDQZCUWORZUAZGOQZDHSZUBUCZHUDQZUWKUWLUWNUE
      ZUXBUFZUWKDISZUXCUBUCZHUDQZIUGZPZUXEOUXKDIHUHUIUXLUXEUXJUXEIDUXKUXHDUJZUX
      IUXDHUDUXHDUXCUBUKZULUMUNUOUXDUWKUXGUFHUDUWKUXCUDPZUXDUXGUWKUXIUWLUWMBUXH
      RZUEZUWPUWQBUXHRZABUXHQZCUWORZUAZGOQZUFZUFZIUPZUXDUXGUFZUXOUYDUYFIDOUXMUX
      IUXDUYCUXGUXNUXMUXQUXFUYBUXBUXMUXPUWNUWLUWMBUXHDUQURUXMUYAUXAGOUXMUXRUWRU
      XTUWTUWPUWQBUXHDUQUXMUXSUWSCUWOABUXHDUSUTVAULVBVBVCUXHJSZUBUCZUYCUFZIUPUX
      HVDUBUCZUYCUFZIUPUXHKSZUBUCZUYCUFZIUPZUXHUYLVEZUBUCZUYCUFZIUPUYEJKUXCUYGV
      DUJZUYIUYKIUYSUYHUYJUYCUYGVDUXHUBVFVGVHUYGUYLUJZUYIUYNIUYTUYHUYMUYCUYGUYL
      UXHUBVFVGVHUYGUYPUJZUYIUYRIVUAUYHUYQUYCUYGUYPUXHUBVFVGVHUYGUXCUJZUYIUYDIV
      UBUYHUXIUYCUYGUXCUXHUBVFVGVHUYKIUYJUXQUYBUYJUXQUEZVDETZACVDQZBUXHRZUXSCVD
      RZUYBVUDVUCEVIVJUYJVUFUXQUYJVUFVUEBVDRZVUEBVKUYJUXHVDUJZVUFVUHVLUXHVMZVUE
      BUXHVDUQUOVNVOVUGVUCUXSCVKVJVDOPVUDVUFVUGUAZUYBVPUYAVUKGVDOUWOVDUJZUWPVUD
      UXRVUFUXTVUGUWOVDEVQVULUWQVUEBUXHACUWOVDUSUTUXSCUWOVDUQVRVSVTWAWBWCUYLUDP
      ZUYOUYRIVUMIWDUYNIWEVUMUYOUYQUYCVUMUYOUYQUAZLSZUXHPZLWFZUYCUYQVUMVUQUYOUY
      QVUIWGVUQUYQVUIUYPVDUBUCZVURUYPVDUYLWHUYPVMWIUYQUYJVURVUIUYQUYPUXHUBUCZUY
      JVURUFUXHUYPUYLKWJWKWLVUSUYJVURUYPUXHVDWMWBWNVUJWOWPLUXHWQWRWSVUNVUPUYCLV
      UMUYOUYQVUPUYCUFZVUMUYQUYOVUTVUMUYQUYOVUTUFUYOVUMUYQUEZVUTUYOVVAVUPUXQUYB
      VVAVUPUXQUAZUXHVUOWTZXAZUYLUBUCZUWLUWMBVVDRZUEZUWPUWQBVVDRZABVVDQZCUWORZU
      AZGOQZUFZUFZUYBUYOVVBVVNVVMUYBVVBVVEVVNVVMUFVVAVUPVVEUXQVUMUYQVUPVVEUXHUY
      LVUOIWJZXBXCXDVVEVVMXEWNVUPUXQVVMUYBUFVVAVUPUXQUEZVVMVVLUYBVVPVVGVVMVVLUF
      UXQVVGVUPUXPVVFUWLVVDUXHTZUXPVVFUFUXHVVCXFZUWMBVVDUXHXGXHXIXJVVGVVLXEWNVV
      PVVLMSZETZACVVSQZBUXHRZUXSCVVSRZUAZMOQZUYBVVPVVKVWEGOVVPUWOOPZUEZABVUOXKZ
      CEQZVVKVWEUFZVVPVWIVWFVUPUXPVWIUWLVUPUXPVWIUWMVWIBVUOUXHVWHBCECSZEPBWDABL
      ALWDXLZXMBSZVUOUJZAVWHCEABVUOXNZULXOXPXQVOVWGVWHCNSZXKZNEQVWJVWIVWGVWQVWJ
      NEVWGVWPEPZUEZVWQVVKVWEVWSVWQUEZVVKUEZUWOVWPWTZXRZOPZVXCETZACVXCQZBUXHRZU
      XSCVXCRZVWEVWSVXDVWQVVKVWFVXDVVPVWRVWFVXBOPVXDVWPXSUWOVXBXTYAYBYCVWTVVHUW
      PVXEVVJVWRVWQUWPVXEVWGVWRUWPVXEVWQUWPVWRVXEUWPVXBETZVXEVWRUWPVXIUEVXEUWOV
      XBEYDYEVWPENWJZYFYGYHYIYJYKVXAVXFBUXHVWTVVKBVWSVWQBVWGVWRBVVPVWFBVUPUXQBV
      UPBWDUWLUXPBUWLBWDUWMBUXHYLYMYMVWFBWDYMVWRBWDYMVWHCNBVWLYNYMUWPVVHVVJBUWP
      BWDUWQBVVDYLVVIBCUWOVWKUWOPZBWDABVVDYOYPYQYMVXAVWMUXHPZVWNVWMVVDPZYRZVXFV
      WGVXLVXNUFZVWRVWQVVKVUPVXOUXQVWFVUPVVCUXHTZVVCVVDXRZUXHUJZVXOVUOUXHYSVXPV
      XRVVCUXHYTYEVXRVXLVWMVXQPZVXNVXQUXHVWMUUAVXSVXNVXSVWMVVCPZVXMYRVXNVWMVVCV
      VDUUBVXTVWNVXMBVUOUUCUUDUUEYEUUFUUGYCUUHVXAVWNVXFVXMVWQVWNVXFUFVWSVVKVWNV
      WQVXFVWNVWQACVWPXKZVXFVWNAVWHCNVWNCWDVWOUUIVWPVXCPZVYAVXFVWPVXBPVYBVWPVXJ
      UUJVWPVXBUWOUUKXHAVYACVWPVXCACNANWDXLACVWPXNUULVTUUFUUMYBVVKVXMVXFUFZVWTV
      VHUWPVYCVVJVVHVXMUWQVXFUWQBVVDUUNUWOVXCTUWQVXFUFUWOVXBUUOACUWOVXCUUPXHUUQ
      UURXJUUSUUTUVAVXAUXSCVXCVWTVVKCVWSVWQCVWGVWRCVVPVWFCVUPUXQCVUPCWDUWLUXPCU
      WLCWDUWMCBUXHVXLCWDACEYOYPYMYMVWFCWDYMVWRCWDYMVWHCNVWHNWDZXLZYMUWPVVHVVJC
      UWPCWDUWQCBVVDVXMCWDACUWOYOYPVVICUWOYLYQYMVXAVXKVWKVWPUJZYRZUXSVWKVXCPZVX
      AVXKUXSVYFVVKVXKUXSUFZVWTVVJUWPVYIVVHVVJVXKVVIUXSVVICUWOUUNVVQVVIUXSUFVVR
      ABVVDUXHUUPXHUUQWSXJVWTVYFUXSUFZVVKVWGVWQVYJVWRVVPVWQVYJVWFVUPVWQVYJUXQVU
      PVWQVYFUXSVUPVWHUXSVWQVYFUEAVWHBVUOUXHVWLVWOUULVYFVWHVWQVWHCVWPXNZUVBUVCU
      VDYIYIYIVOUUSVYHVXKVWKVXBPZYRVYGVWKUWOVXBUUBVYLVYFVXKCVWPUUCUVEUUEUVFUVAV
      WDVXEVXGVXHUAMVXCOVVSVXCUJZVVTVXEVWBVXGVWCVXHVVSVXCEVQVYMVWAVXFBUXHACVVSV
      XCUSUTUXSCVVSVXCUQVRVSUVGUVHUVIVWHVWQCNEVYDVYEVYKUVJUVFUVKUVIVWDUYAMGOVVS
      UWOUJZVVTUWPVWBUXRVWCUXTVVSUWOEVQVYNVWAUWQBUXHACVVSUWOUSUTUXSCVVSUWOUQVRU
      VLUVMUUTUVNUUTUYOVVSUYLUBUCZUWLUWMBVVSRZUEZUWPUWQBVVSRZABVVSQZCUWORZUAZGO
      QZUFZUFZMUPZVVNUYNWUDIMUXHVVSUJZUYMVYOUYCWUCUXHVVSUYLUBUKWUFUXQVYQUYBWUBW
      UFUXPVYPUWLUWMBUXHVVSUQURWUFUYAWUAGOWUFUXRVYRUXTVYTUWPUWQBUXHVVSUQWUFUXSV
      YSCUWOABUXHVVSUSUTVAULVBVBUVOVVDUVPPZWUEVVNUFUXHUVPPWUGVVOUXHVVCUVPUVQXHW
      UDVVNMVVDUVPVVSVVDUJZVYOVVEWUCVVMVVSVVDUYLUBUKWUHVYQVVGWUBVVLWUHVYPVVFUWL
      UWMBVVSVVDUQURWUHWUAVVKGOWUHVYRVVHVYTVVJUWPUWQBVVSVVDUQWUHVYSVVICUWOABVVS
      VVDUSUTVAULVBVBVCXHUOUVRUVSUUMWBUVTUWAUWBUVKUWCUWDUWEUWFUWGUWHUWIUWJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d F c x y $.  $d A c x y $.  $d B c x y $.  $d M c x y $.
    $( Given a finite subset ` A ` of the range of a function, there exists a
       finite subset of the domain whose image is ` A ` .  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    fipreima $p |- ( ( ( F Fn B /\ B e. M ) /\ ( A C_ ran F /\ A e. Fin ) )
                                -> E. c e. ( ~P B i^i Fin ) ( F " c ) = A ) $=
      ( vy vx wfn wcel wa crn wss cfn cv cfv wceq wrex wral w3a cima cpw cin 
      simprr simplr fvelrnb ralbidv biimpd dfss3 syl5ib imp ad2ant2r indexfi 
      syl111anc wi df-pw abeq2i biimpri anim1i ancoms elin sylibr 3ad2antr1 
      a1i wfun cdm wb fnfun adantr fndm sseq2d biimpar funimass4 syl11anc 
      eleq1a r19.23aiv ralimi syl5bir impr 3adantr2 eleq1 ad2antrr simpr 
      funfni ssel2 sylan2 anassrs funfvima 3impia syl5cbi r19.23adva ralimdv 
      3adantr3 eqssd ex adantld jcad reximdv2 mpd ) CBHZBDIZJZACKZLZAMIZJZJZENZ
      BLZFNZCOZGNZPZFXGQZGARZXLGAQZFXGRZSZEMQZCXGTZAPZEBUAZMUBZQZXFXDWTXLFBQZGA
      RZXRXAXCXDUCWSWTXEUDWSXCYEWTXDWSXCYEWSXKXBIZGARZYEXCWSYGYEWSYFYDGAFBXKCUE
      UFUGGAXBUHUIUJUKXLGFABDEULUMWSXRYCUNWTXEWSXQXTEMYBWSXGMIZXQJZXGYBIZXTYIYJ
      UNWSYHXNXHYJXPYHXHJXGYAIZYHJZYJXHYHYLXHYKYHYKXHXHEYAEBUOUPUQURUSXGYAMUTVA
      VBVCWSXQXTYHWSXQXTWSXQJXSAWSXHXPXSALZXNWSXHXPYMWSXHJZYMXJAIZFXGRZXPYNCVDZ
      XGCVEZLZYMYPVFWSYQXHBCVGZVHWSYSXHWSYRBXGBCVIVJVKFXGACVLVMXOYOFXGXLYOGAXKA
      XJVNVOVPVQVRVSWSXHXNAXSLZXPWSXHXNJJXKXSIZGARZUUAWSXHXNUUCYNXMUUBGAYNXLUUB
      FXGXLXJXSIZUUBYNXIXGIZJZXJXKXSVTUUFYQXIYRIZUUEUUDWSYQXHUUEYTWAWSXHUUEUUGW
      SXIBIUUGXHUUEJUUGBXICYQUUGWBWCXGBXIWDWEWFYNUUEWBYQUUGUUEUUDXGXICWGWHUMWIW
      JWKVRGAXSUHVAWLWMWNWOWPWQWAWR $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d f g m k y x A $.  $d f g m x B $.  $d f g m F $.
    $( An onto function implies dominance of domain over range, for finite
       sets.  Unlike ~ fodom for arbitrary sets, this theorem does not require
       the Axiom of Choice for its proof. $)
    fodomfi $p |- ( ( A e. Fin /\ F : A -onto-> B ) -> B ~<_ A ) $=
      ( vm vg vf vx vk vy cv cen wbr com wrex wfo cdom cfn wcel wi wa cvv wf 
      fex ancoms relen brrelexi fof syl2an adantl ccom wex visset coexg mpan2 
      foeq1 cla4egv syl fornex ax-mp 19.23aiv wal wceq foeq3 exbidv breq1 
      imbi12d cla4gv c0 csuc foeq2 breq2 albidv fo00 simprbi 0dom syl6eqbr 
      ax-gen csn cun cima cfv wfn fnsnfv fofn sucid sylancl uneq2d foima 
      df-suc imaeq2i imaundi eqtr2i syl5eq eqtrd cin imaexg cla4v imp cres 
      wfun cdm wss fofun sssucid fdm sseq2d mpbiri fores syl11anc resexg 
      cla4ev sylan2 adantll fvex en2sn mp2an endom jctir word nnord orddisj 
      ad2antrr snex undom eqbrtrrd syl6breqr ex 19.23adv 19.21adv cbvexv 
      syl6bb cbvalv syl5ib finds1 syl5 pm2.43b sylan9 19.42v foco eximi sylbir 
      wf1o bren ccnv f1ocnv f1ofo cnvex 3syl sylbi impr mpancom ensym ad2antrl 
      domentr exp32 r19.23aiv isfi sylanb ) ADJZKLZDMNZABCOZBAPLZAQRUVAUVBUVCUU
      TUVBUVCSDMUUSMRZUUTUVBUVCUVDUUTUVBTZTZBUUSPLZUUSAKLZUVCCUARZUVFUVGUVEUVIU
      VDAUARZABCUBZUVIUUTUVBUVKUVJUVIABUACUCUDAUUSKUEUFABCUGUHUIUVIUVDUVEUVGUVI
      UVDTZUUSBCEJZUJZOZEUKZUVGUVEUVLUVOUVGEUVIUVOUUSBFJZOZFUKZUVDUVGUVIUVNUARZ
      UVOUVSSUVIUVMUARUVTEULCUVMUAUAUMUNUVRUVOFUVNUAUUSBUVQUVNUOUPUQUVDUVSUVGUV
      SBUARZUVDUVSUVGSZSUVRUWAFUUSUARUVRUWASDULZUUSBUAUVQURUSUTUWAUUSGJZUVQOZFU
      KZUWDUUSPLZSZGVAZUWBUVDUWHUWBGBUAUWDBVBZUWFUVSUWGUVGUWJUWEUVRFUWDBUUSUVQV
      CVDUWDBUUSPVEVFVGUWIVHUWDUVQOZFUKZUWDVHPLZSZGVAHJZUWDUVQOZFUKZUWDUWOPLZSZ
      GVAZUWOVIZUWDUVQOZFUKZUWDUXAPLZSZGVAZDHUUSVHVBZUWHUWNGUXGUWFUWLUWGUWMUXGU
      WEUWKFUUSVHUWDUVQVJVDUUSVHUWDPVKVFVLUUSUWOVBZUWHUWSGUXHUWFUWQUWGUWRUXHUWE
      UWPFUUSUWOUWDUVQVJVDUUSUWOUWDPVKVFVLUUSUXAVBZUWHUXEGUXIUWFUXCUWGUXDUXIUWE
      UXBFUUSUXAUWDUVQVJVDUUSUXAUWDPVKVFVLUWNGUWKUWMFUWKUWDVHVHPUWKUVQVHVBUWDVH
      VBUWDUVQVMVNVHVOVPUTVQUWOMRZUWOIJZUVMOZEUKZUXKUWOPLZSZIVAZUXFUWTUXJUXPUXE
      GUXJUXPUXEUXJUXPTZUXBUXDFUXQUXBUXDUXQUXBTZUWDUWOUWOVRZVSZUXAPUXRUVQUWOVTZ
      UWOUVQWAZVRZVSZUWDUXTPUXBUYDUWDVBUXQUXBUYDUYAUVQUXSVTZVSZUWDUXBUYCUYEUYAU
      VQUXAWBUWOUXARUYCUYEVBUXBUXAUWOUVQWCUXAUWDUVQWDUWOHULZWEWFWGUXBUVQUXAVTZU
      WDUYFUXAUWDUVQWHUYHUVQUXTVTUYFUXAUXTUVQUWOWIZWJUVQUWOUXSWKWLWMWNUIUXRUYAU
      WOPLZUYCUXSPLZTUWOUXSWOVHVBZUYDUXTPLUXRUYJUYKUXPUXBUYJUXJUXPUWOUYAUVMOZEU
      KZUYJUXBUXPUYNUYJUXOUYNUYJSIUYAUVQUARZUYAUARFULZUVQUWOUAWPUSUXKUYAVBZUXMU
      YNUXNUYJUYQUXLUYMEUXKUYAUWOUVMVCVDUXKUYAUWOPVEVFWQWRUXBUWOUYAUVQUWOWSZOZU
      YNUXBUVQWTUWOUVQXAZXBZUYSUXAUWDUVQXCUXBUXAUWDUVQUBZVUAUXAUWDUVQUGVUBVUAUW
      OUXAXBUWOXDVUBUYTUXAUWOUXAUWDUVQXEXFXGUQUWOUVQXHXIUYMUYSEUYRUYOUYRUARUYPU
      VQUWOUAXJUSUWOUYAUVMUYRUOXKUQXLXMUYCUXSKLZUYKUYBUARUWOUARVUCUWOUVQXNUYGUY
      BUWOUAUAXOXPUYCUXSXQUSXRUXJUYLUXPUXBUXJUWOXSUYLUWOXTUWOYAUQYBUYAUWOUYCUXS
      UYGUYBYCUWOYCYDXIYEUYIYFYGYHYGYIUWSUXOGIUWDUXKVBZUWQUXMUWRUXNVUDUWQUWOUXK
      UVQOZFUKUXMVUDUWPVUEFUWDUXKUWOUVQVCVDVUEUXLFEUWOUXKUVQUVMUOYJYKUWDUXKUWOP
      VEVFYLYMYNYOUQYPYQYHUVBUUTUVPUVBUUSAUVMOZEUKZUVPUUTUVBVUGTUVBVUFTZEUKUVPU
      VBVUFEYRVUHUVOEUUSABCUVMYSYTUUAUUTAUUSUVQUUBZFUKVUGAUUSFUWCUUCVUIVUGFVUIU
      USAUVQUUDZUUBUUSAVUJOZVUGAUUSUVQUUEUUSAVUJUUFVUFVUKEVUJUVQUYPUUGUUSAUVMVU
      JUOXKUUHUTUUIXLUDYOUUJUUKUUTUVHUVDUVBAUUSUWCUULUUMBUUSAUUNXIUUOUUPWRDAUUQ
      UUR $.
      $( [17-Sep-2008] $) $( [23-Mar-2006] $)

    $( Equivalence of an onto mapping and dominance for a non-empty finite
       set.  Unlike ~ fodomb for arbitrary sets, this theorem does not require
       the Axiom of Choice for its proof. $)
    fodomfib $p |- ( A e. Fin ->
    ( ( A =/= (/) /\ E. f f : A -onto-> B ) <-> ( (/) ~< B /\ B ~<_ A ) ) ) $=
      ( cfn wcel c0 wne cv wfo wex wa csdm wbr cdom cdm wceq wf fof fdm syl 
      eqeq1d crn forn dm0rn0 syl5bb bitr3d necon3bid biimpac adantll wb cvv 
      fornex imp 0sdomg adantlr mpbird ex wi fodomfi adantr jcad 19.23adv 
      expimpd sdomdomtr sylibd fodomr 3expib impbid ) ADEZAFGZABCHZIZCJZKFBLMZB
      ANMZKZVIVJVMVPVIVJKZVLVPCVQVLVNVOVQVLVNVQVLKVNBFGZVJVLVRVIVLVJVRVLAFBFVLV
      KOZFPZAFPBFPZVLVSAFVLABVKQVSAPABVKRABVKSTUAVLVKUBZFPWAVTVLWBBFABVKUCUAVKU
      DUEUFUGUHUIVIVLVNVRUJZVJVIVLKBUKEZWCVIVLWDABDVKULUMBUKUNTUOUPUQVIVLVOURVJ
      VIVLVOABVKUSUQUTVAVBVCVIVPVJVMVIVPFALMVJFBADVDADUNVEVIVNVOVMABDCVFVGVAVH 
      $.
      $( [8-Oct-2008] $) $( [23-Mar-2006] $)
  $}

  ${
    $d w x y z A $.  $d w y z B $.
    $( If a function has a finite domain, its range is finite.  Theorem 37 of
       [Suppes] p. 104. $)
    fofi $p |- ( ( A e. Fin /\ F : A -onto-> B ) -> B e. Fin ) $=
      ( cfn wcel wfo cdom wbr fodomfi domfi syldan ) ADEABCFBAGHBDEABCIABJK $.
      $( [14-Oct-2008] $) $( [25-Mar-2007] $)

    $( The finite union of finite sets is finite.  Exercise 13 of [Enderton]
       p. 144.  This is the indexed union version of ~ unifi .  Note that ` B `
       depends on ` x ` , i.e. can be thought of as ` B ( x ) ` . $)
    iunfi $p |- ( ( A e. Fin /\ A. x e. A B e. Fin )
        -> U_ x e. A B e. Fin ) $=
      ( vy vz vw cfn wcel wral wa ciun cv wceq wrex cab cuni cvv cdom wbr 
      copab crn wfo fodomfi wfn eqid fnopab2g dffn4 bitri sylan2b rnopab2 
      syl5eqbrr domfi syldan elisset ralimi sylan2 wi r19.29 eleq1a imp a1i 
      r19.23aiv syl ex adantl abid syl5ib r19.21aiv unifi hbab1 ax-17 eleq1 
      cbvralf syl11anc wb dfiun2g eleq1d mpbird ) BGHZCGHZABIZJZABCKZGHZDLZCMZA
      BNZDOZPZGHZWBWHGHZWEGHZDWHIZWJVSCQHZABIZWKWAVSWOWHBRSWKVSWOJALBHZWFJADTZU
      AZBWHRVSBWRWQUBZWRBRSWOBWRWQUCWOWQBUDWSADBCWQWQUEUFBWQUGUHUIADBCUJUKBWHUL
      UMVTWNABCGUNUOUPWBWLDWHWBWGWLWEWHHWAWGWLUQVSWAWGWLWAWGJVTWFJZABNWLVTWFABU
      RWTWLABWTWLUQWPVTWFWLCGWEUSUTVAVBVCVDVEWGDVFVGVHWKELZGHZEWHIWJWMEWHVIWLXB
      DEFWHWGDFVJFLWHHEVKWLEVKXBDVKWEXAGVLVMUIVNWAWDWJVOVSWAWCWIGADBCGVPVQVEVR 
      $.
      $( [14-Oct-2008] $) $( [23-Mar-2006] $)
  $}

  ${
    $d d F $.  $d c d y b $.  $d c d y x $.
    pwfilem.1 $e |- F =
              { <. c , y >. | ( c e. ~P b /\ y = ( c u. { x } ) ) } $.
    $( Lemma for ~ pwfi . $)
    pwfilem $p |- ( ~P b e. Fin ->
                    ~P ( b u. { x } ) e. Fin ) $=
      ( vd cv cpw cfn wcel csn cun cdif crn cdom wbr domfi wfo wfn visset snex 
      unex fnopab2 dffn4 mpbi fodomfi mpan2 mpdan cvv wss pwex difexg ax-mp 
      wceq wrex eldifi elpwun sylib elpwunsn snssd ssequn2 undif1 syl5req 
      uneq1 eqeq2d rcla4ev syl11anc elrnopab sylibr ssriv ssdomg mp2 sylancl 
      unfi mpancom pwundif eleq1i ) DHZIZJKZVSAHZLZMZIZVTNZVTMZJKZWEJKWFJKZWAWH
      COZJKZWFWJPQZWIWAWJWFRWAWJVTPQZWKWAVTWJCSZWMCVTTWNEBVTEHZWCMZCWOWCEUAWBUB
      ZUCZFUDVTCUEUFVTWJCUGUHVTWJRUIWFUJKZWFWJUKWLWEUJKWSWDVSWCDUAWQUCULWEVTUJU
      MUNGWFWJGHZWFKZWTWPUOZEVTUPZWTWJKXAWTWCNZVTKZWTXDWCMZUOZXCXAWTWEKXEWTWEVT
      UQWTVSWCWQURUSXAWTWCMZWTXFXAWCWTUKXHWTUOXAWBWTWTVSWBUTVAWCWTVBUSWTWCVCVDX
      BXGEXDVTWOXDUOWPXFWTWOXDWCVEVFVGVHEBVTWPWTCWRFVIVJVKWFWJUJVLVMVNWFVTVOVPW
      EWGJVSWCVQVRVJ $.
      $( [19-Sep-2008] $) $( [26-Mar-2007] $)
  $}

  ${
    $d m A $.  $d c k m y $.
    $( The power set of a finite set is finite and vice-versa.  Theorem 38 of
       [Suppes] p. 104 and its converse, Theorem 40 of [Suppes] p. 105. $)
    pwfi $p |- ( A e. Fin <-> ~P A e. Fin ) $=
      ( vm vk vy vc cfn wcel cpw cv cen wbr com wrex isfi cvv wb enfi visset 
      pwex pwen sylancr c0 csn cun wceq pweq eleq1d csuc df-suc ax-mp syl6eq 
      c1o pw0 df1o2 eqtr4i wss 1onn ssid ssnnfi mp2an eqeltri wi wa copab eqid 
      pwfilem a1i finds1 syl5cbir r19.23aiv sylbi cdom csdm elisset pwexb 
      sylibr canth2g sdomdom 3syl domfi mpdan impbii ) AFGZAHZFGZWCABIZJKZBLMWE
      BANWGWEBLWGWEWFHZFGZWFLGWHOGWDWHJKWEWIPWGWDWHOQWFBRZSAWFWJTUAWIUBHZFGCIZH
      ZFGZWLWLUCZUDZHZFGZBCWFUBUEWHWKFWFUBUFUGWFWLUEWHWMFWFWLUFUGWFWLUHZUEZWHWQ
      FWTWHWSHZWQWFWSUFWSWPUEXAWQUEWLUIWSWPUFUJUKUGWKULFWKUBUCULUMUNUOULLGULULU
      PULFGUQULURULULUSUTVAWNWRVBWLLGCDEIZWMGDIXBWOUDUEVCEDVDZCEXCVEVFVGVHVIVJV
      KWEAWDVLKZWCWEAOGZAWDVMKXDWEWDOGXEWDFVNAVOVPAOVQAWDVRVSWDAVTWAWB $.
      $( [20-Sep-2008] $) $( [26-Mar-2007] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Theorem *54.43 of [WhiteheadRussell] p. 360.  "From this proposition it
       will follow, when arithmetical addition has been defined, that 1+1=2."
       See ~ http://en.wikipedia.org/wiki/Principia_Mathematica#Quotations .
       This theorem states that two sets of cardinality 1 are disjoint iff
       their union has cardinality 2.

       Whitehead and Russell define 1 as the collection of all sets with
       cardinality 1 (i.e. all singletons; see ~ card1 ), so that their
       ` A e. 1 ` means, in our notation, ` A e. { x | ( card `` x ) = 1o } `
       i.e. ` ( card `` A ) = 1o ` (by ~ elab ) i.e. ` A ~~ 1o ` (by ~ carden
       and ~ cardnn ).  We do not have several of their earlier lemmas
       available (which would otherwise be unused by our different approach to
       arithmetic), so our proof is longer.  (It is also longer because we must
       show every detail.)

       Theorem ~ pm110.643 shows the derivation of 1+1=2 for cardinal numbers
       from this theorem. $)
    pm54.43 $p |- ( ( A ~~ 1o /\ B ~~ 1o ) -> ( ( A i^i B ) = (/) <->
                  ( A u. B ) ~~ 2o ) ) $=
      ( vx vy c1o cen wbr wa cin c0 wceq cun c2o csn wi wcel wn 1on onirri 
      disjsn mpbir unen mpanr2 ex con0 elisseti ensn1 ensymi entr mpan2 sylan2 
      csuc df-2o df-suc eqtri breq2i syl6ibr cv wex wne csdm sneq uneq2d unidm 
      syl5reqr visset 1sdom2 ensdomtr mp2an syl6eqbr sdomnen syl necon2ai 
      disjsn2 a1i uneq12 breq1d ineq12 eqeq1d 3imtr4d 19.23adv 19.23aiv imp 
      en1 syl2anb impbid ) AEFGZBEFGZHZABIZJKZABLZMFGZWIWKWLEENZLZFGZWMWGBWNFGZ
      WKWPOWHWGWQHZWKWPWRWKEWNIJKZWPWSEEPQERSEETUAAEBWNUBUCUDWHEWNFGWQWNEEUERUF
      ZEWTUGUHBEWNUIUJUKMWOWLFMEULWOUMEUNUOUPUQACURZNZKZCUSZBDURZNZKZDUSZWMWKOZ
      WGWHXDXHXIXCXHXIOCXCXGXIDXCXGXIXCXGHZXBXFLZMFGZXBXFIZJKZWMWKXLXNOXJXLXAXE
      UTXNXLXAXEXAXEKZXKMVAGXLQXOXKXBMVAXOXBXBLXKXBXOXBXFXBXAXEVBVCXBVDVEXBEFGE
      MVAGXBMVAGXACVFUGVGXBEMVHVIVJXKMVKVLVMXAXEVNVLVOXJWLXKMFAXBBXFVPVQXJWJXMJ
      AXBBXFVRVSVTUDWAWBWCCAWDDBWDWEWF $.
      $( [4-Apr-2007] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Supremum
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Add new constant symbol. $)
  $c sup $.  $( Supremum. $)

  $( Extend class notation to include supremum of class ` A ` .  Here ` R ` is
     ordinarily a relation that strictly orders class ` B ` .  For example,
     ` R ` could be 'less than' and ` B ` could be the set of real numbers. $)
  csup $a class sup ( A , B , R ) $.

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    $( Define the supremum of class ` B ` .  It is meaningful when ` R ` is a
       relation that strictly orders ` A ` and when the supremum exists.  For
       example, ` R ` could be 'less than', ` A ` could be the set of real
       numbers, and ` B ` could be the set of all positive reals whose square
       is less than 2; in this case the supremum is defined as the square root
       of 2 per ~ sqrval .

       We will also use this notation for "infimum" by replacing ` R ` with
       ` ``' R ` . $)
    df-sup $a |- sup ( B , A , R ) = U. { x e. A | ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) } $.

    $( can't be used if A is a proper class... important?  we already
       have U. as sup for On... but since sup exists, can't use sup for
       On anyway e.g. sup of On itself.
    df-supNEW $a |- sup = { <. <. x , y >. , z >. | z =
             U. { w e. ( 1st ` x ) | ( A. v e. y -. w ( 2nd ` x ) v /\
                  A. v e. ( 1st ` x ) ( v ( 2nd ` x ) w ->
                 E. u e. y v ( 2nd ` x ) u ) ) } } $.
    $)
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for supremum. $)
    supeq1 $p |- ( B = C -> sup ( B , A , R ) = sup ( C , A , R ) ) $=
      ( vx vy vz wceq cv wbr wn wral wrex wi wa crab cuni csup raleq rexeq 
      imbi2d ralbidv anbi12d rabbidv unieqd df-sup 3eqtr4g ) BCHZEIZFIZDJKZFBLZ
      UJUIDJZUJGIDJZGBMZNZFALZOZEAPZQUKFCLZUMUNGCMZNZFALZOZEAPZQBADRCADRUHUSVEU
      HURVDEAUHULUTUQVCUKFBCSUHUPVBFAUHUOVAUMUNGBCTUAUBUCUDUEEFGABDUFEFGACDUFUG
      $.
      $( [22-May-1999] $)
  $}

  ${
    supeq1d.1 $e |- ( ph -> B = C ) $.
    $( Equality deduction for supremum.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    supeq1d $p |- ( ph -> sup ( B , A , R ) = sup ( C , A , R ) ) $=
      ( wceq csup supeq1 syl ) ACDGCBEHDBEHGFBCDEIJ $.
      $( [22-Jun-2011] $)
  $}

  ${
    supeq1i.1 $e |- B = C $.
    $( Equality inference for supremum.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    supeq1i $p |- sup ( B , A , R ) = sup ( C , A , R ) $=
      ( wceq csup supeq1 ax-mp ) BCFBADGCADGFEABCDHI $.
      $( [22-Jun-2011] $)
  $}

  ${
    $d x y z w A $.  $d x y z w R $.  $d x y z w B $.  $d w C $.
    supmo.1 $e |- R Or A $.
    $( Any class ` B ` has at most one supremum in ` A ` (where ` R ` is
       interpreted as 'less than'). $)
    supmo $p |- E* x ( x e. A /\ ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) ) $=
      ( vw cv wcel wbr wn wral wrex wi wa wmo wceq wal eleq1 breq1 notbid 
      ralbidv breq2 imbi1d anbi12d mo4 wb wor sotrieq2 mpan ad2ant2r rexbidv 
      imbi12d rcla4va con3d imp cbvralv ralnex bitri sylan2b an32s adantlrr 
      adantrl rcla4cva anasss adantrrr adantll mpbir2and ax-gen mpgbir ) AIZDJZ
      VLBIZFKZLZBEMZVNVLFKZVNCIZFKZCENZOZBDMZPZPZAQWEHIZDJZWFVNFKZLZBEMZVNWFFKZ
      WAOZBDMZPZPZPZVLWFRZOZHSAWEWOAHWQVMWGWDWNVLWFDTWQVQWJWCWMWQVPWIBEWQVOWHVL
      WFVNFUAUBUCWQWBWLBDWQVRWKWAVLWFVNFUDUEUCUFUFUGWRHWPWQVLWFFKZLZWFVLFKZLZVM
      WGWQWTXBPUHZWDWNDFUIVMWGPXCGDVLWFFUJUKULWEWNWTWGWEWMWTWJVMVQWMWTWCVMWMVQW
      TVMWMPZVLVSFKZCENZLZWTVQXDXGWTXDWSXFWLWSXFOBVLDVNVLRZWKWSWAXFVNVLWFFUAXHV
      TXECEVNVLVSFUAUMUNUOUPUQVQXELZCEMXGVPXIBCEVNVSRZVOXEVNVSVLFUDUBURXECEUSUT
      VAVBVCVDVDWDWOXBVMWCWOXBVQWCWGWJXBWMWCWGWJXBWCWGPZWFVSFKZCENZLZXBWJXKXNXB
      XKXAXMWBXAXMOBWFDVNWFRZVRXAWAXMVNWFVLFUAXOVTXLCEVNWFVSFUAUMUNVEUPUQWJXLLZ
      CEMXNWIXPBCEXJWHXLVNVSWFFUDUBURXLCEUSUTVAVFVGVHVHVIVJVK $.
      $( [5-May-1999] $)

    $( A supremum is a set. $)
    supex $p |- sup ( B , A , R ) e. _V $=
      ( vx vy vz csup cv wcel wbr wn wral wrex wi wa cab cuni cvv crab df-sup 
      df-rab unieqi eqtri wmo supmo moabex ax-mp uniex eqeltri ) BACHZEIZAJULFI
      ZCKLFBMUMULCKUMGICKGBNOFAMPZPZEQZRZSUKUNEATZRUQEFGABCUAURUPUNEAUBUCUDUPUO
      EUEUPSJEFGABCDUFUOEUGUHUIUJ $.
      $( [22-May-1999] $)

    $( A supremum is unique.  Similar to Theorem I.26 of [Apostol] p. 24 (but
       for suprema in general). $)
    supeu $p |- ( E. x e. A ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) ->
                  E! x e. A ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) ) $=
      ( cv wbr wn wral wrex wi wa wcel wmo wreu supmo jctr reu5 sylibr ) AHZBHZ
      FIJBEKUCUBFIUCCHFICELMBDKNZADLZUEUBDOUDNAPZNUDADQUEUFABCDEFGRSUDADTUA $.
      $( [12-Oct-2004] $)

    $( A supremum belongs to its base class (closure law). $)
    supcl $p |- ( E. x e. A ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) ->
                sup ( B , A , R ) e. A ) $=
      ( cv wbr wn wral wrex wi wa crab cuni csup wreu wcel supeu reucl syl 
      df-sup syl5eqel ) AHZBHZFIJBEKUFUEFIUFCHFICELMBDKNZADLZUGADOPZDEDFQUHUGAD
      RUIDSABCDEFGTUGADUAUBABCDEFUCUD $.
      $( [12-Oct-2004] $)

    $( A supremum is an upper bound. $)
    supub $p |- ( E. x e. A ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) ->
                 ( C e. B -> -. sup ( B , A , R ) R C ) ) $=
      ( vw wcel cv wbr wn wral wrex wi wa csup wceq breq2 notbid imbi2d rcla4v 
      crab cuni df-sup eqcomi wreu wb supcl supeu breq1 ralbidv imbi1d anbi12d 
      reuuni2 syl11anc mpbiri simpld syl5 vtoclga com12 ) FEJAKZBKZGLZMZBENZVDV
      CGLZVDCKGLCEOZPZBDNZQZADOZEDGRZFGLZMZVMVNIKZGLZMZPVMVPPIFEVQFSZVSVPVMVTVR
      VOVQFVNGTUAUBVQEJVNVDGLZMZBENZVSVMWBVSBVQEVDVQSWAVRVDVQVNGTUAUCVMWCVDVNGL
      ZVIPZBDNZVMWCWFQZVLADUDUEZVNSZVNWHABCDEGUFUGVMVNDJVLADUHWGWIUIABCDEGHUJAB
      CDEGHUKVLWGADVNVCVNSZVGWCVKWFWJVFWBBEWJVEWAVCVNVDGULUAUMWJVJWEBDWJVHWDVIV
      CVNVDGTUNUMUOUPUQURUSUTVAVB $.
      $( [12-Oct-2004] $)

    ${
      $d z C $.
      $( A supremum is the least upper bound. $)
      suplub $p |- ( E. x e. A ( A. y e. B -. x R y /\
                      A. y e. A ( y R x -> E. z e. B y R z ) ) ->
                    ( ( C e. A /\ C R sup ( B , A , R ) ) ->
                      E. z e. B C R z ) ) $=
        ( vw cv wbr wn wral wrex wi wa wcel csup wceq breq1 rexbidv imbi12d 
        imbi2d rcla4v crab cuni df-sup eqcomi wreu wb supcl supeu notbid 
        ralbidv breq2 imbi1d anbi12d reuuni2 syl11anc mpbiri simprd syl5 
        vtoclga com12 imp3a ) AJZBJZGKZLZBEMZVGVFGKZVGCJZGKZCENZOZBDMZPZADNZFDQ
        ZFEDGRZGKZFVLGKZCENZVSVRWAWCOZVRIJZVTGKZWEVLGKZCENZOZOVRWDOIFDWEFSZWIWD
        VRWJWFWAWHWCWEFVTGTWJWGWBCEWEFVLGTUAUBUCWEDQVGVTGKZVNOZBDMZWIVRWLWIBWED
        VGWESZWKWFVNWHVGWEVTGTWNVMWGCEVGWEVLGTUAUBUDVRVTVGGKZLZBEMZWMVRWQWMPZVQ
        ADUEUFZVTSZVTWSABCDEGUGUHVRVTDQVQADUIWRWTUJABCDEGHUKABCDEGHULVQWRADVTVF
        VTSZVJWQVPWMXAVIWPBEXAVHWOVFVTVGGTUMUNXAVOWLBDXAVKWKVNVFVTVGGUOUPUNUQUR
        USUTVAVBVCVDVE $.
        $( [13-Oct-2004] $)

      $( An upper bound is not less than the supremum. $)
      supnub $p |- ( E. x e. A ( A. y e. B -. x R y /\
                      A. y e. A ( y R x -> E. z e. B y R z ) ) ->
                    ( ( C e. A /\ A. z e. B -. C R z ) ->
                      -. C R sup ( B , A , R ) ) ) $=
        ( cv wbr wn wral wrex wi wa wcel csup suplub expdimp dfrex2 syl6ib 
        con2d expimpd ) AIZBIZGJKBELUEUDGJUECIZGJCEMNBDLOADMZFDPZFUFGJZKCELZFED
        GQGJZKUGUHOZUKUJULUKUICEMZUJKUGUHUKUMABCDEFGHRSUICETUAUBUC $.
        $( [13-Oct-2004] $)
    $}
  $}

  ${
    $d x y z w A $.  $d x y z w R $.  $d x y z w B $.  $d w C $.
    sup.1 $e |- R Or A $.
    sup.2 $e |- E. x e. A ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) $.
    $( A supremum is unique.  Similar to Theorem I.26 of [Apostol] p. 24 (but
       for suprema in general). $)
    supeui $p |- E! x e. A ( A. y e. B -. x R y /\
                  A. y e. A ( y R x -> E. z e. B y R z ) ) $=
      ( cv wbr wn wral wrex wi wa wreu supeu ax-mp ) AIZBIZFJKBELTSFJTCIFJCEMNB
      DLOZADMUAADPHABCDEFGQR $.
      $( [23-May-1999] $)

    $( A supremum belongs to its base class (closure law). $)
    supcli $p |- sup ( B , A , R ) e. A $=
      ( cv wbr wn wral wrex wi wa csup wcel supcl ax-mp ) AIZBIZFJKBELUATFJUACI
      FJCEMNBDLOADMEDFPDQHABCDEFGRS $.
      $( [23-May-1999] $)

    $( A supremum is an upper bound. $)
    supubi $p |- ( C e. B -> -. sup ( B , A , R ) R C ) $=
      ( cv wbr wn wral wrex wi wa wcel csup supub ax-mp ) AJZBJZGKLBEMUBUAGKUBC
      JGKCENOBDMPADNFEQEDGRFGKLOIABCDEFGHST $.
      $( [23-May-1999] $)

    ${
      $d z C $.
      $( A supremum is the least upper bound. $)
      suplubi $p |- ( ( C e. A /\ C R sup ( B , A , R ) ) ->
                    E. z e. B C R z ) $=
        ( cv wbr wn wral wrex wi wa wcel csup suplub ax-mp ) AJZBJZGKLBEMUBUAGK
        UBCJZGKCENOBDMPADNFDQFEDGRGKPFUCGKCENOIABCDEFGHST $.
        $( [23-May-1999] $)

      $( An upper bound is not less than the supremum. $)
      supnubi $p |- ( ( C e. A /\ A. z e. B -. C R z ) ->
                   -. C R sup ( B , A , R ) ) $=
        ( cv wbr wn wral wrex wi wa wcel csup supnub ax-mp ) AJZBJZGKLBEMUBUAGK
        UBCJZGKCENOBDMPADNFDQFUCGKLCEMPFEDGRGKLOIABCDEFGHST $.
        $( [23-May-1999] $)
    $}
  $}

  ${
    $d x A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.
    $( A set that contains a greatest element satisfies the antecedent in
       supremum theorems.  This allows ` sup ( A , B , R ) ` to be used in some
       situations without the completeness axiom.  (Contributed by Jeff
       Hoffman, 17-Jun-2008.) $)
    supmaxlem $p |- ( ( C e. A /\ C e. B /\ A. z e. B -. C R z ) -> E. x e. A
         ( A. y e. B -. x R y /\ A. y e. A ( y R x -> E. z e. B y R z ) ) ) $=
      ( wcel cv wbr wn wral wrex wi wa wceq breq1 notbid ralbidv breq2 imbi1d 
      anbi12d rcla4ev cbvralv biimpi ex a1d r19.21aiv anim12i ancoms sylan2 
      3impb ) FDHZFEHZFCIZGJZKZCELZAIZBIZGJZKZBELZUTUSGJZUTUOGJZCEMZNZBDLZOZADM
      ZUMFUTGJZKZBELZUTFGJZVFNZBDLZOZVJUNUROVIVQAFDUSFPZVCVMVHVPVRVBVLBEVRVAVKU
      SFUTGQRSVRVGVOBDVRVDVNVFUSFUTGTUASUBUCURUNVQURVMUNVPURVMUQVLCBEUOUTPUPVKU
      OUTFGTRUDUEUNVOBDUNVOUTDHUNVNVFVEVNCFEUOFUTGTUCUFUGUHUIUJUKUL $.
      $( [17-Jun-2008] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.  $d R x y z $.
    supmax.1 $e |- R Or A $.
    $( The greatest element of a set is its supremum.  Note that the converse
       is not true; the supremum might not be an element of the set
       considered.  (Contributed by Jeff Hoffman, 17-Jun-2008.) $)
    supmax $p |- ( ( C e. A /\ C e. B /\ A. y e. B -. C R y )
                           -> sup ( B , A , R ) = C ) $=
      ( vx vz wcel cv wbr wn wral w3a csup wceq wa wb wrex wi supmaxlem supcl 
      syl simp1 wor sotrieq2 mpan syl11anc simp2 supub sylc 3simpb supnub 
      mpbir2and ) DBIZDCIZDAJZEKLACMZNZCBEOZDPZUTDEKLZDUTEKLZUSUTBIZUOVAVBVCQRZ
      USGJZHJZEKLHCMVGVFEKVGUQEKACSTHBMQGBSZVDGHABCDEUAZGHABCEFUBUCUOUPURUDBEUE
      VDUOQVEFBUTDEUFUGUHUSVHUPVBVIUOUPURUIGHABCDEFUJUKUSVHUOURQVCVIUOUPURULGHA
      BCDEFUMUKUN $.
      $( [17-Jun-2008] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z R $.
    suppr.1 $e |- R Or A $.
    $( The supremum of a pair. $)
    suppr $p |- ( ( B e. A /\ C e. A ) -> sup ( { B , C } , A , R ) =
                if ( C R B , B , C ) ) $=
      ( vx vy vz wcel wa cv wbr wn cpr wral wrex wi crab cuni cif csup wceq 
      wreu wb ifcl wmo wo breq2 notbid wor sonr mpan ad2antrr syl5cbir so2nr 
      imnan sylibr ancoms imp jaod iftrue breq1d adantl sylibrd simpr ad2antlr 
      iffalse pm2.61dan visset elpr syl5ib r19.21aiv rcla4ev ifpr sylan ex a1d 
      breq1 ralbidv imbi1d anbi12d syl12anc supmo jctir reu5 reuuni2 syl11anc 
      mpbi2and df-sup syl5eq ) BAIZCAIZJZFKZGKZDLZMZGBCNZOZWOWNDLZWOHKZDLZHWRPZ
      QZGAOZJZFARSZCBDLZBCTZWRADUAWMXIWODLZMZGWROZWOXIDLZXCQZGAOZXGXIUBZWMXIAIZ
      XFFAUCZXLXOJZXPUDXHBCAUEZWMXFFAPZWNAIXFJFUFZJXRWMYAYBWMXQXLXOYAXTWMXKGWRW
      MWOBUBZWOCUBZUGZXKWOWRIWMXHYEXKQWMXHJZYEBWODLZMZXKYFYCYHYDYCYHBBDLZMZYFYC
      YGYIWOBBDUHUIWKYJWLXHADUJZWKYJEABDUKULUMUNYDYHBCDLZMZYFYDYGYLWOCBDUHUIWMX
      HYMWLWKXHYMQZWLWKJZXHYLJMZYNYKYOYPEACBDUOULXHYLUPUQURUSUNUTXHXKYHUDWMXHXJ
      YGXHXIBWODXHBCVAVBUIVCVDWMXHMZJZYECWODLZMZXKYRYCYTYDYCYTYQYRYCYSXHWOBCDUH
      UIWMYQVEUNYDYTCCDLZMZYRYDYSUUAWOCCDUHUIWLUUBWKYQYKWLUUBEACDUKULVFUNUTYQXK
      YTUDWMYQXJYSYQXICWODXHBCVGVBUIVCVDVHWOBCGVIVJVKVLZWMXNGAWMXNWOAIWMXMXCXIW
      RIXMXCWMXBXMHXIWRXAXIWODUHVMXHBCAAVNVOVPVQVLZXFXSFXIAWNXIUBZWSXLXEXOUUEWQ
      XKGWRUUEWPXJWNXIWODVRUIVSUUEXDXNGAUUEWTXMXCWNXIWODUHVTVSWAZVMWBFGHAWRDEWC
      WDXFFAWEUQXFXSFAXIUUFWFWGUUCUUDWHFGHAWRDWIWJ $.
      $( [17-Jun-2007] $)

    $( The supremum of a singleton. $)
    supsn $p |- ( B e. A -> sup ( { B } , A , R ) = B ) $=
      ( wcel csn csup wbr cif cpr wceq suppr anidms dfsn2 supeq1i syl5eq ifid 
      syl6eq ) BAEZBFZACGZBBCHZBBIZBSBBJZACGZUCUASUEUCKABBCDLMATUDCBNOPUBBQR $.
      $( [2-Oct-2007] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z R $.
    supsn.1 $e |- R Or A $.
    $( TO BE REVISED - delete this? $)
    $( The supremum of a singleton.  This version of ~ supsn is proved
       directly. $)
    supsnALT $p |- ( B e. A -> sup ( { B } , A , R ) = B ) $=
      ( vx vy vz wcel cv wbr wn csn wral wrex wi wa crab cuni csup wceq wreu 
      wb wmo elsni breq2 notbid wor sonr mpan syl5bir syl com12 r19.21aiv 
      rcla4ev snidg sylan ex a1d jca breq1 ralbidv imbi1d anbi12d mpdan supmo 
      jctir reu5 sylibr reuuni2 mpbi2and df-sup syl5eq ) BAHZEIZFIZCJZKZFBLZMZV
      OVNCJZVOGIZCJZGVRNZOZFAMZPZEAQRZBVRACSVMBVOCJZKZFVRMZVOBCJZWCOZFAMZWGBTZV
      MWFEAUAZWJWMPZWNUBVMWFEANZVNAHWFPEUCZPWOVMWQWRVMWPWQVMWJWMVMWIFVRVOVRHZVM
      WIWSVOBTZVMWIOVOBUDWTWIBBCJZKZVMWTWHXAVOBBCUEUFACUGVMXBDABCUHUIUJUKULUMZV
      MWLFAVMWLVOAHVMWKWCBVRHWKWCVMWBWKGBVRWABVOCUEUNBAUOUPUQURUMZUSWFWPEBAVNBT
      ZVSWJWEWMXEVQWIFVRXEVPWHVNBVOCUTUFVAXEWDWLFAXEVTWKWCVNBVOCUEVBVAVCZUNVDEF
      GAVRCDVEVFWFEAVGVHWFWPEABXFVIVDXCXDVJEFGAVRCVKVL $.
      $( [23-May-1999] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                      Ordinal isomorphism, Hartog's theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d f w x y z A $.  $d f w x y z B $.
    $( Order-isomorphic ordinal numbers are equal.  (Contributed by Jeff
       Hankins, 16-Oct-2009.) $)
    ordiso $p |- ( ( A e. On /\ B e. On ) -> ( A = B
                <-> E. f f Isom _E , _E ( A , B ) ) ) $=
      ( vx vy vz vw con0 wcel wa wceq cep cv wiso wex w3a cid cres cvv resiexg 
      3ad2ant1 wf1o wbr cfv wb wral df-iso f1oi f1oeq3 3ad2ant3 mpbii fvresi 
      ad2antrl ad2antll breq12d bicomd ex r19.21aivv sylanbrc isoeq1 cla4egv 
      sylc 3expia wn wrex wi crn simpllr ad2antrr simpr wf isof1o f1of syl 
      ad2antlr simplrr ffvelrn syl11anc jca ontr1 wfo f1ofo forn 3syl eleqtrrd 
      wfn f1ofn fvelrnb mpbid simprrr simprl eqeltrd fvex epelc sylibr simplr 
      simprrl isorel syl12anc mpbird epel sylib simprr eleq1 fveq2 id eqeq12d 
      imbi12d rcla4v exp3a com12 pm2.27 syl8 com24 syld com14 imp42 adantllr 
      adantrl eqtr3d expr mpd r19.23adv imp44 adantlr biimpri ancomsd imp 
      adantrll simprlr eqeltrrd impbid eqrdv exp43 r19.21aiv iman ralbii 
      imbi12i imnan ancom notbii 3bitri ralnex bitri onelon adantrd ancrd 
      reximdv2 notbid anbi12d onminex syl6 rexnal syl5ibr mt3d rcla4cva 
      adantll sylan adantlrr eleq2d bitr3d a1i simpl adantl syldd com23 impr 
      sylbid 19.23adv ) AHIZBHIZJZABKZABLLCMZNZCOZUVJUVKUVMUVPUVJUVKUVMPZQARZSI
      ZABLLUVRNZUVPUVJUVKUVSUVMAHTUAUVTABUVRUBZDMZEMZLUCZUWBUVRUDZUWCUVRUDZLUCZ
      UEZEAUFDAUFUVQDEABLLUVRUGUVQAAUVRUBZUWAAUHUVMUVJUWIUWAUEUVKABAUVRUIUJUKUV
      QUWHDEAAUVQUWBAIZUWCAIZJZUWHUVQUWLJZUWGUWDUWMUWEUWBUWFUWCLUWJUWEUWBKUVQUW
      KAUWBULUMUWKUWFUWCKUVQUWJAUWCULUNUOUPUQURUSUVOUVTCUVRSABLLUVRUVNUTVAVBVCU
      VLUVOUVMCUVLUVOUVMUVLUVOJZUWBUVNUDZUWBKZDAUFZUVMUWNUWQUWJUWPVDZJZUWKUWCUV
      NUDZUWCKZVDZJZVDZEUWBUFZJZDHVEZUWNUWKUXAVFZEUWBUFZUWJUWPVFZVFZDHUFZUXGVDZ
      UWNUXKDHUWNUWBHIZUXIUWJUWPUWNUXNJZUXIUWJJZJZFUWOUWBUXQFMZUWOIZUXRUWBIZUXQ
      UXSUXTUXQUXSJZGMZUVNUDZUXRKZGAVEZUXTUYAUXRUVNVGZIZUYEUYAUXRBUYFUYAUVKUXSU
      WOBIZJUXRBIZUXOUVKUXPUXSUVJUVKUVOUXNVHVIUYAUXSUYHUXQUXSVJUYAABUVNVKZUWJUY
      HUXOUYJUXPUXSUVOUYJUVLUXNUVOABUVNUBZUYJABLLUVNVLZABUVNVMVNZVOVIUXOUXIUWJU
      XSVPABUWBUVNVQVRVSUXRUWOBVTVBUXOUYFBKZUXPUXSUVOUYNUVLUXNUVOUYKABUVNWAUYNU
      YLABUVNWBABUVNWCWDZVOVIWEUXOUYGUYEUEZUXPUXSUVOUYPUVLUXNUVOUYKUVNAWFUYPUYL
      ABUVNWGGAUXRUVNWHWDZVOVIWIUYAUYDUXTGAUYAUYBAIZUYDUXTUXQUXSUYRUYDJZUXTUXQU
      XSUYSJZJZUYBUWBIZUXTVUAUYBUWBLUCZVUBVUAVUCUYCUWOLUCZVUAUYCUWOIVUDVUAUYCUX
      RUWOUXQUXSUYRUYDWJUXQUXSUYSWKWLUYCUWOUYBUVNWMUWBUVNWMZWNWOVUAUVOUYRUWJVUC
      VUDUEUXOUVOUXPUYTUVLUVOUXNWPVIUXQUXSUYRUYDWQUXOUXIUWJUYTVPABUYBUWBLLUVNWR
      WSWTGDXAXBUXQUYTVUBUXTUXQUYTVUBJJZUXRUYBUWBVUFUYCUXRUYBUYTUYDUXQVUBUXSUYR
      UYDXCUMUXQVUBUYCUYBKZUYTUWNUXPVUBVUGUXNUVLUXPVUBVUGUVOUVJUXPVUBVUGUVKUVJU
      XIUWJVUBVUGVUBUXIUWJUVJVUGVUBUXIUYRVUGVFZUWJUVJVUGVFVFUXHVUHEUYBUWBUWCUYB
      KZUWKUYRUXAVUGUWCUYBAXDVUIUWTUYCUWCUYBUWCUYBUVNXEVUIXFXGXHXIVUBUVJUWJVUHV
      UGVUBUVJUWJUYRVUHVUGVFUVJVUBUWJUYRVFUVJVUBUWJUYRUYBUWBAVTXJXKUYRVUGXLXMXN
      XOXPXQXRXRXRXSXTUXQUYTVUBXCWLYAYBYAXJYCYBUQUXOUXPUXTUXSUXOUXPUXTJZJZUXRUV
      NUDZUXRUWOUWNVUJVULUXRKZUXNUVLVUJVUMUVOUVJVUJVUMUVKUVJUXIUWJUXTVUMUXTUXIU
      WJUVJVUMUXTUXIUXRAIZVUMVFZUWJUVJVUMVFVFUXHVUOEUXRUWBUWCUXRKZUWKVUNUXAVUMU
      WCUXRAXDVUPUWTVULUWCUXRUWCUXRUVNXEVUPXFXGXHXIUXTUVJUWJVUOVUMUXTUVJUWJVUNV
      UOVUMVFUVJUXTUWJVUNVFUVJUXTUWJVUNUXRUWBAVTZXJXKVUNVUMXLXMXNXOXPYDYEYEYEVU
      KVULUWOLUCZVULUWOIVUKUXRUWBLUCZVURUXTVUSUXOUXPVUSUXTFDXAYFUNVUKUVOVUNUWJV
      USVURUEUVLUVOUXNVUJVHUXOUWJUXTVUNUXIUWNUWJUXTJZVUNUXNUVLVUTVUNUVOUVJVUTVU
      NUVKUVJVUTVUNUVJUXTUWJVUNVUQYGYHYEYEYEYIUXOUXIUWJUXTYJABUXRUWBLLUVNWRWSWI
      VULUWOUXRUVNWMVUEWNXBYKYAYLYMYNYOUXLUXFVDZDHUFUXMUXKVVADHUXKUXEUWSVDZVFUX
      EUWSJZVDVVAUXIUXEUXJVVBUXHUXDEUWBUWKUXAYPYQUWJUWPYPYRUXEUWSYSVVCUXFUXEUWS
      YTUUAUUBYQUXFDHUUCUUDXBUWNUWRDAVEZUXGUWQVDUWNVVDUWSDHVEUXGUWNUWRUWSDAHUWN
      UWSUXNUVJUWSUXNVFUVKUVOUVJUWJUXNUWRUVJUWJUXNAUWBUUEUQUUFVIUUGUUHUWSUXCDEU
      WBUWCKZUWJUWKUWRUXBUWBUWCAXDVVEUWPUXAVVEUWOUWTUWBUWCUWBUWCUVNXEVVEXFXGUUI
      UUJUUKUULUWPDAUUMUUNUUOUVLUVOUWQUVMUVLUVOUWQJZJZFABVVGVUNUYIVVGVUNUYIVVGV
      UNJVULUXRBVVFVUNVUMUVLUWQVUNVUMUVOUWPVUMDUXRAUWBUXRKZUWOVULUWBUXRUWBUXRUV
      NXEVVHXFXGUUPUUQUUQUVLUVOVUNVULBIZUWQUVOVUNVVIUVLUYJVUNVVIUVOABUXRUVNVQUY
      MUURUUQUUSYKUQVVGUYIUYEVUNVVGUYGUYIUYEVVGUYFBUXRUVOUYNUVLUWQUYOUMUUTUVOUY
      PUVLUWQUYQUMUVAVVGUYDVUNGAUVLUVOUWQUYRUYDVUNVFZVFUWNUYRUWQVVJUWNUYRUWQVUG
      VVJUYRUWQVUGVFVFUWNUWPVUGDUYBAUWBUYBKZUWOUYCUWBUYBUWBUYBUVNXEVVKXFXGXIUVB
      UWNUYRVUGUYDVUNUWNUYRJZVUGUYDJZJUXRUYBAVVMUXRUYBKVVLVVMUYCUXRUYBVUGUYDVJV
      UGUYDUVCXTUVDUWNUYRVVMWPWLYNUVEUVFUVGYCUVHYLYMYAYBUQUVIYL $.
      $( [16-Oct-2009] $)
  $}

  ${
    $d a b c f g h j k m n o p q r s t u v w x y z A $.
    $d a b c f h m n o p q x y z B $.  $d c m n o p q u C $.
    $d h j m n o p q r u v w y z D $.
    $d b c h j m n o p q r s u v w x y z F $.  $d b c h m n o p q G $.
    $d a f g h j m n o p q r s u v w x z H $.
    $d a b c f g h j k m n o p q r s t u v w x y z R $.
    ${
      ordtypelem.1 $e |- A e. _V $.
      ordtypelem.2 $e |- B = { h | E. b e. On ( h Fn b /\ A. c e. b ( h ` c ) =
      ( G ` ( h |` c ) ) ) } $.
      ordtypelem.3 $e |- F = U. B $.
      ordtypelem.4 $e |- C = { w e. A | A. j e. ran h j R w } $.
      ordtypelem.5 $e |- D = { w e. A | A. j e. ( F " x ) j R w } $.
      ordtypelem.6 $e |- G = { <. h , c >. | c = U. { v e. C | A. u e. C -. u R
      v } } $.
      ordtypelem.7 $e |- H = { w e. A | A. j e. ( F " y ) j R w } $.
      $( Lemma for ~ ordtype . $)
      ordtypelem1 $p |- ( ( x e. On /\ R We A /\ D =/= (/) ) -> ( F ` x ) e. D
      ) $=
        ( cv con0 wcel wwe c0 wne cfv wbr wn wral crab cuni wa cres tfr2 wceq 
        copab fveq1i wfun cvv tfrlem7 visset resfunexg mp2an cima ssrab2 
        eqsstri ssexi rabex uniex cab crn rneq df-ima syl6eqr raleqdv rabbidv 
        3eqtr4g eleq2d anbi12d abbidv df-rab unieqd fvopab eqtri syl6eq eleq1d 
        wss wereucl mp3an2 syl5bir 3impib ) AUEZUFUGZFJUHZIUIUJZWQMUKZIUGZWRXBE
        UEDUEZJULUMZEIUNZDIUOZUPZIUGZWSWTUQWRXAXGIWRXAMWQURZNUKZXGPQAGKMNSTUSXJ
        XIQUEXDEHUNZDHUOZUPZUTKQVAZUKXGXINXNUCVBKQXIXMXGMVCWQVDUGXIVDUGPQGKMNST
        VEAVFMWQVDVGVHXFXEDIIFRILUECUEJULZLMWQVIZUNZCFUOZFUBXQCFVJVKZVLZVMVNKUE
        ZXIUTZXLXFYBXCHUGZXKUQZDVOXCIUGZXEUQZDVOXLXFYBYDYFDYBYCYEXKXEYBHIXCYBXO
        LYAVPZUNZCFUOXRHIYBYHXQCFYBXOLYGXPYBYGXIVPXPYAXIVQMWQVRVSVTWAUAUBWBZWCY
        BXDEHIYIVTWDWEXKDHWFXEDIWFWBWGWHWIWJWKWSIFWLWTXHXSDEFIJXTWMWNWOWP $.
        $( [17-Oct-2009] $)

      $( Lemma for ~ ordtype . $)
      ordtypelem2 $p |- ( ( x e. On /\ R We A /\ D =/= (/) )
              -> ( y e. x -> ( F ` y ) R ( F ` x ) ) ) $=
        ( cv con0 wcel wwe c0 wne w3a cfv cima wbr wi cdm wss onss wfn wceq 
        tfr1 fndm ax-mp syl6ssr wfun tfrlem7 funfvima2 mpan syl 3ad2ant1 wral 
        ordtypelem1 breq2 ralbidv elrab2 simprbi breq1 rcla4cv 3syl syld ) AUEZ
        UFUGZFJUHZIUIUJZUKZBUEZWAUGZWFMULZMWAUMZUGZWHWAMULZJUNZWBWCWGWJUOZWDWBW
        AMUPZUQZWMWBWAUFWNWAURMUFUSWNUFUTPQGKMNSTVAUFMVBVCVDMVEWOWMPQGKMNSTVFWA
        WFMVGVHVIVJWEWKIUGZLUEZWKJUNZLWIVKZWJWLUOABCDEFGHIJKLMNOPQRSTUAUBUCUDVL
        WPWKFUGWSWQCUEZJUNZLWIVKWSCWKFIWTWKUTXAWRLWIWTWKWQJVMVNUBVOVPWRWLLWHWIW
        QWHWKJVQVRVSVT $.
        $( [17-Oct-2009] $)

      $( Lemma for ~ ordtype . $)
      ordtypelem3 $p |- ( ( x e. On /\ R We A /\ D =/= (/) )
            -> ( y e. x -> -. ( F ` x ) = ( F ` y ) ) ) $=
        ( cv con0 wcel wwe c0 wne w3a cfv wbr wceq wn ordtypelem2 wpo wi wor 
        weso sopo syl 3ad2ant2 ordtypelem1 cima wral crab ssrab2 eqsstri sseli 
        wa breq1 biimprcd poirr nsyli com12 syl11anc syld ) AUEZUFUGZFJUHZIUIUJ
        ZUKZBUEZVSUGWDMULZVSMULZJUMZWFWEUNZUOZABCDEFGHIJKLMNOPQRSTUAUBUCUDUPWCF
        JUQZWFFUGZWGWIURWAVTWJWBWAFJUSWJFJUTFJVAVBVCWCWFIUGWKABCDEFGHIJKLMNOPQR
        STUAUBUCUDVDIFWFILUECUEJUMLMVSVEVFZCFVGFUBWLCFVHVIVJVBWGWJWKVKZWIWGWHWF
        WFJUMZWMWHWNWGWFWEWFJVLVMFWFJVNVOVPVQVR $.
        $( [17-Oct-2009] $)

      $( Lemma for ~ ordtype .  There is a smallest ordinal number whose image
         has no upper bounds in ` A ` . $)
      ordtypelem4 $p |- ( R We A
            -> E. x e. On ( D = (/) /\ A. y e. x H =/= (/) ) ) $=
        ( vr wwe c0 wceq con0 wrex wne cv wral wa crn cvv wcel wn pm3.24 wi 
        wal wss cfv ax-17 hba1 hban eleq1 ordtypelem1 3expb wbr cima crab 
        ssrab2 eqsstri sseli syl syl5cbi exp32 com12 a2d a4sd imp r19.23ad wfn 
        wb tfr1 fvelrnb ax-mp syl5ib ssrdv ssex ex ccnv wfun ordtypelem3 
        3com12 3exp imp4a 19.21adv alimdv r2al syl6ibr cres ssid tz7.48lem 
        mpan wrel cdm tfrlem6 fndm eqimssi relssres mp2an cnveqi funeq sylib 
        syl6 onprc funrnex df-rn eleq1i dfdm4 eqtr3i 3imtr4g mtoi jcad df-ne 
        ralbii df-ral ralnex 3bitr3i syl5ibr mt3i imaeq2 raleqdv rabbidv 
        3eqtr4g eqeq1d onminex anbi2i rexbii sylibr ) FJUFZIUGUHZAUIUJZUUDOUGUK
        ZBAULZUMZUNZAUIUJZUUCUUEMUOZUPUQZUULURZUNZUULUSUUCUUGUIUQZIUGUKZUTZAVAZ
        UUNUUEURZUUCUURUULUUMUUCUURUULUUCUURUNZUUKFVBUULUUTUEUUKFUUTUUGMVCZUEUL
        ZUHZAUIUJZUVBFUQZUVBUUKUQZUUTUVCUVEAUIUUCUURAUUCAVDUUQAVEVFUVEAVDUUCUUR
        UUOUVCUVEUTZUTZUUCUUQUVHAUUCUUOUUPUVGUUOUUCUUPUVGUTUUOUUCUUPUVGUVCUVAFU
        QZUVEUUOUUCUUPUNUNZUVAUVBFVGUVJUVAIUQZUVIUUOUUCUUPUVKABCDEFGHIJKLMNOPQR
        STUAUBUCUDVHVIIFUVAILULCULJVJZLMUUGVKZUMZCFVLZFUBUVNCFVMVNVOVPVQVRVSVTW
        AWBWCMUIWDZUVFUVDWEPQGKMNSTWFZAUIUVBMWGWHWIWJUUKFRWKVPWLUUCUURMWMZWNZUU
        MUUCUURUVABULZMVCUHURZBUUGUMAUIUMZUVSUUCUURUUOUVTUUGUQZUNUWAUTZBVAZAVAU
        WBUUCUUQUWEAUUCUUQUWDBUUCUUQUUOUWCUWAUUCUUOUUPUWCUWAUTZUUCUUOUUPUWFUUOU
        UCUUPUWFABCDEFGHIJKLMNOPQRSTUAUBUCUDWOWPWQVTWRWSWTUWAABUIUUGXAXBUWBMUIX
        CZWMZWNZUVSUIUIVBUWBUWIUIXDABUIMUVQXEXFUWHUVRUHUWIUVSWEUWGMMXGMXHZUIVBU
        WGMUHPQGKMNSTXIUWJUIUVPUWJUIUHUVQUIMXJWHZXKMUIXLXMXNUWHUVRXOWHXPXQUVSUU
        LUIUPUQZXRUVSUVRXHZUPUQZUVRUOZUPUQZUULUWLUWNUVSUWPUPUVRXSVSUUKUWMUPMXTY
        AUIUWOUPUWJUIUWOUWKMYBYCYAYDYEXQYFUUPAUIUMUUDURZAUIUMUURUUSUUPUWQAUIIUG
        YGYHUUPAUIYIUUDAUIYJYKYLYMUUEUUDOUGUHZURZBUUGUMZUNZAUIUJUUJUUDUWRABUUGU
        VTUHZIOUGUXBUVOUVLLMUVTVKZUMZCFVLIOUXBUVNUXDCFUXBUVLLUVMUXCUUGUVTMYNYOY
        PUBUDYQYRYSUUIUXAAUIUUHUWTUUDUUFUWSBUUGOUGYGYHYTUUAUUBVP $.
        $( [20-Oct-2009] $)

      $( Lemma for ~ ordtype .  Establish injectivity of ` F ` when restricted
         to the ordinal number of ~ ordtypelem4 . $)
      ordtypelem5 $p |- ( ( ( R We A /\ x e. On ) /\ ( D = (/)
            /\ A. y e. x H =/= (/) ) ) -> Fun `' ( F |` x ) ) $=
        ( vz vr vm wwe cv con0 wcel wa c0 wceq wne wral wss cfv wn cres ccnv 
        wfun onss ad2antlr wi csb visset ax-17 hbcsb1 hbne csbeq1a neeq1d 
        rcla4 w3a wal ordtypelem3 gen2 cvv hb3an hbim hbal eleq1 3anbi13d 
        eleq2 fveq2 eqeq1d notbid imbi12d albidv cla4gf ax-mp eqeq2d imbi2d 
        a4v syl 3expia ancoms onelon sylan2 expr com3l wbr cima crab imaeq2 
        raleqdv rabbidv 3eqtr4g cbvcsbv neeq1i syl5ib syld com13 imp4b adantrl 
        r19.21aivv tfr1 tz7.48lem syl11anc ) FJUHZAUIZUJUKZULZIUMUNZOUMUOZBYAUP
        ZULZULZYAUJUQZUEUIZMURZUFUIZMURZUNZUSZUFYJUPUEYAUPMYAUTVAVBYBYIXTYGYAVC
        VDYHYOUEUFYAYJYCYFYJYAUKZYLYJUKZULYOVEYDYCYFYPYQYOYPYFYCYQYOVEZYPYFBYJO
        VFZUMUOZYCYRVEZYEYTBYJYABUGYSUMBUGYJOUEVGZUGUIZYJUKZBVHVIUUCUMUKZBVHVJB
        UIZYJUNOYSUMBYJOVKVLVMYPAYJIVFZUMUOZUUAYTYCYPUUHYRXTYBYPUUHYRVEZXTYJUJU
        KZUUIYBYPULUUJXTUUIUUJXTUUHYRYBXTIUMUOZVNZUUFYAUKZYAMURZUUFMURZUNZUSZVE
        ZVEZBVOZAVOZUUJXTUUHVNZYRVEZUUSABABCDEFGHIJKLMNOPQRSTUAUBUCUDVPVQUVAUVB
        UUFYJUKZYKUUOUNZUSZVEZVEZBVOZUVCYJVRUKZUVAUVIVEUUBUUTUVIAUGYJVRUUDAVHZU
        VHABUVBUVGAUUJXTUUHAUUJAVHXTAVHAUGUUGUMAUGYJIUUBUVKVIUUEAVHVJVSUVGAVHVT
        WAYAYJUNZUUSUVHBUVLUULUVBUURUVGUVLYBUUJUUKUUHXTYAYJUJWBUVLIUUGUMAYJIVKV
        LWCUVLUUMUVDUUQUVFYAYJUUFWDUVLUUPUVEUVLUUNYKUUOYAYJMWEWFWGWHWHWIWJWKUVH
        UVCBUFUUFYLUNZUVGYRUVBUVMUVDYQUVFYOUUFYLYJWBUVMUVEYNUVMUUOYMYKUUFYLMWEW
        LWGWHWMWNWOWKWPWQYAYJWRWSWTXAYSUUGUMUVJYSUUGUNUUBBAYJOIVRUUFYAUNZLUICUI
        JXBZLMUUFXCZUPZCFXDUVOLMYAXCZUPZCFXDOIUVNUVQUVSCFUVNUVOLUVPUVRUUFYAMXEX
        FXGUDUBXHXIWKXJXKXLXMXNXOXPUEUFYAMPQGKMNSTXQXRXS $.
        $( [20-Oct-2009] $)

      $( Lemma for ~ ordtype .  If ` z ` is not in ` ( F " x ) ` , ` m ` is in
         ` ( F " x ) ` , and every element of ` ( F " x ) ` which is less than
         ` m ` is also less than ` z ` , ` m ` is also less than ` z ` . $)
      ordtypelem6 $p |- ( ( ( ( R We A /\ x e. On ) /\ ( ( F " x ) C_ A
              /\ A. y e. x H =/= (/) ) ) /\ ( ( z e. A /\ -. z e. ( F " x ) )
              /\ m e. ( F " x ) ) )
            -> ( A. n ( n R m -> ( n e. ( F " x ) -> n R z ) ) -> m R z ) ) $=
        ( vr wwe cv con0 wcel wa cima wss c0 wne wral wn wbr wi wal wceq eleq1 
        anbi2d imaeq2 sseq1d raleq anbi12d eleq2d notbid imbi1d imbi2d albidv 
        imbi12d a4v cfv wrex crab cuni cres onelon tfr2 syl adantll adantlr 
        copab fveq1i wfun cvv tfrlem7 visset resfunexg mp2an rabex eqeltri 
        uniex cab crn rneq df-ima syl6eqr raleqdv rabbidv 3eqtr4g abbidv 
        df-rab unieqd fvopab eqtri syl6eq eqeq1d breq2 breq1 wsbc wreu simpll 
        ad2antrr ssrab2 eqsstri a1i neeq1d rcla4cv adantl ad2antlr imp wereu 
        syl111anc reuuni4 ax-17 hbra1 hbrab hbuni hbbr hbn hbim cla4gf ax-mp 
        simprl simplll adantr wereucl ra4 com12 adantld eleq2i ralbidv elrab 
        bitri syl5ib mpd imass2 sseld onelss simpllr sylan idd mpid imim2d ex 
        com23 sylan2 r19.21aiv jca bitr2i sylib syl5com wo ioran simplrr 
        syl6req cdm wfn tfr1 fndm syl6eleqr jctil simpr funfvima sylc eqeltrd 
        syl5cbi mtod sylanbrc wor wb weso sseldd simplrl sotric syl12anc 
        mpbird syld df-ral cbvsbc hbeq ralbid sbcie sylbid r19.23adv fvelima 
        mpan syl5 impr mpg ) GKUIZUHUJZUKULZUMZPUXGUNZGUOZRUPUQZBUXGURZUMZUMZCU
        JZGULZUXPUXJULZUSZUMZNUJZUXJULZUMZUMZOUJZUYAKUTZUYEUXJULZUYEUXPKUTZVAZV
        AZOVBZUYAUXPKUTZVAZVAZUXFAUJZUKULZUMZPUYOUNZGUOZUXLBUYOURZUMZUMZUXQUXPU
        YRULZUSZUMZUYAUYRULZUMZUMZUYFUYEUYRULZUYHVAZVAZOVBZUYLVAZVAZUHUYNVUNUHA
        UXGUYOVCZUYDVUHUYMVUMVUOUXOVUBUYCVUGVUOUXIUYQUXNVUAVUOUXHUYPUXFUXGUYOUK
        VDVEVUOUXKUYSUXMUYTVUOUXJUYRGUXGUYOPVFZVGUXLBUXGUYOVHVIVIVUOUXTVUEUYBVU
        FVUOUXSVUDUXQVUOUXRVUCVUOUXJUYRUXPVUPVJVKVEVUOUXJUYRUYAVUPVJVIVIVUOUYKV
        ULUYLVUOUYJVUKOVUOUYIVUJUYFVUOUYGVUIUYHVUOUXJUYRUYEVUPVJVLVMVNVLVOVPUXO
        UXTUYBUYMUXOUXTUMZUYOPVQZUYAVCZAUXGVRZUYMUYBVUQVUSUYMAUXGVUQUYOUXGULZVU
        SUYMVAVUQVVAUMZVUSFUJZEUJZKUTZUSZFJURZEJVSZVTZUYAVCZUYMVVBVURVVIUYAVVBV
        URPUYOWAZQVQZVVIUXOVVAVURVVLVCZUXTUXIVVAVVMUXNUXHVVAVVMUXFUXHVVAUMZUYPV
        VMUXGUYOWBZSTAHLPQUBUCWCWDWEWFWFZVVLVVKTUJVVFFIURZEIVSZVTZVCLTWGZVQVVIV
        VKQVVTUFWHLTVVKVVSVVIPWIZUYOWJULVVKWJULSTHLPQUBUCWKZAWLPUYOWJWMWNVVHVVG
        EJJMUJZDUJZKUTZMUYRURZDGVSZWJUEVWFDGUAWOWPZWOWQZLUJZVVKVCZVVRVVHVWKVVDI
        ULZVVQUMZEWRVVDJULZVVGUMZEWRVVRVVHVWKVWMVWOEVWKVWLVWNVVQVVGVWKIJVVDVWKV
        WEMVWJWSZURZDGVSVWGIJVWKVWQVWFDGVWKVWEMVWPUYRVWKVWPVVKWSUYRVWJVVKWTPUYO
        XAXBXCXDUDUEXEZVJVWKVVFFIJVWRXCVIXFVVQEIXGVVGEJXGXEXHXIXJZXKXLVVJUYEVVI
        KUTZUYIVAZOVBZVVIUXPKUTZVAZUYMVVBVVJVXBUYKVXCUYLVVJVXAUYJOVVJVWTUYFUYIV
        VIUYAUYEKXMVLVNVVIUYAUXPKXNVOVVBVVGEVVIXOZVXDVVBVVGEJXPZVXEVVBUXFJGUOZJ
        UPUQZVXFUXOUXFUXTVVAUXFUXHUXNXQXRZVXGVVBJVWGGUEVWFDGXSXTZYAVUQVVAVXHUXN
        VVAVXHVAZUXIUXTUXMVXKUXKUXLVXHBUYOUXGBUJZUYOVCZRJUPVXMVWEMPVXLUNZURZDGV
        SVWGRJVXMVXOVWFDGVXMVWEMVXNUYRVXLUYOPVFXCXDUGUEXEYBYCZYDYEYFZEFGJKVWHYG
        YHVVGEJYIWDVVBVVCVVIKUTZUSZFJURZVXDVXEVVBVXBVXTVXCVVBVXBVXTVXCVAVVBVXBU
        MZVVCJULZVXSVAZFVBZVXCVXTVYAVYDUXPVVIKUTZUSZVXCVYDUXPJULZVYFVYAUXPWJULV
        YDVYGVYFVAZVACWLVYCVYHFNUXPWJUYAUXPULFYJZVYGVYFFVYGFYJVYEFFNUXPVVIKVYIU
        YAKULFYJFNVVHVVGFENJVVFFJYKUYAJULFYJYLYMZYNYOYPVVCUXPVCZVYBVYGVXSVYFVVC
        UXPJVDVYKVXRVYEVVCUXPVVIKXNVKVOYQYRVYAUXQVWCUXPKUTZMUYRURZUMZVYGVYAUXQV
        YMVUQUXQVVAVXBUXOUXQUXSYSXRVYAVYLMUYRVVBVWCVVIKUTZVWCUXJULZVYLVAZVAZVWC
        UYRULZVYLVAZVXBVVBVYRVYTVVBVYSVYRVYLVVBVYSVYRVYLVAVVBVYSUMZVYRVYOVYLWUA
        VVIJULZVYOWUAUXFVXGVXHWUBVUQUXFVVAVYSUXFUXHUXNUXTYTXRVXGWUAVXJYAVVBVXHV
        YSUXOVVAVXHUXTUXNVVAVXHUXIUXMVVAVXHUXKUXMVVAVXHVXPYFWEWEWFUUAEFGJKVWHUU
        BZYHWUAVVIGULZVYOMUYRURZUMZVYOWUBWUAWUEVYOWUDVYSWUEVYOVAVVBWUEVYSVYOVYO
        MUYRUUCUUDYDUUEWUBVVIVWGULWUFJVWGVVIUEUUFVWFWUEDVVIGVWDVVIVCZVWEVYOMUYR
        VWDVVIVWCKXMUUGUUHUUIUUJUUKWUAVYQVYLVYOWUAVYQVYPVYLUYOUXGUOZVYSVYPVVBWU
        HVYSVYPWUHUYRUXJVWCUYOUXGPUULUUMYFUXHVVAWUHVUQUXHVVAWUHUXGUYOUUNYFUXFUX
        HUXNUXTUUOUUPUUPWUAVYQUUQUURUUSUURUUTUVAYFVXAVYROMUYEVWCVCZVWTVYOUYIVYQ
        UYEVWCVVIKXNWUIUYGVYPUYHVYLUYEVWCUXJVDUYEVWCUXPKXNVOVOVPUVBUVCUVDVYGUXP
        VWGULVYNJVWGUXPUEUUFVWFVYMDUXPGVWDUXPVCVWEVYLMUYRVWDUXPVWCKXMUUGUUHUVEU
        VFUVGVYAVYFVXCVYAVYFUMZVXCVVIUXPVCZVYEUVHUSZWULWUKUSVYFWUJWUKVYEUVIWUJW
        UKUXRVVBUXSVXBVYFUXOUXQUXSVVAUVJXRVVBWUKUXRVAVXBVYFWUKVVIUXJULUXRVVBVVI
        UXPUXJVDVVBVVIVURUXJVVBVURVVLVVIVVPVWSUVKVVBVWAUYOPUVLZULZUMVVAVURUXJUL
        VVBWUNVWAUXOVVAWUNUXTUXIVVAWUNUXNUXHVVAWUNUXFVVNUYOUKWUMVVOPUKUVMWUMUKV
        CSTHLPQUBUCUVNUKPUVOYRUVPWEWFWFVWBUVQVUQVVAUVRUXGUYOPUVSUVTUWAUWBXRUWCV
        YAVYFUVRUWDWUJGKUWEZWUDUXQVXCWULUWFVVBWUOVXBVYFUXOWUOUXTVVAUXFWUOUXHUXN
        GKUWGXRXRXRWUJJGVVIVXGWUJVXJYAZWUJUXFVXGVXHWUBVVBUXFVXBVYFVXIXRWUPVVBVX
        HVXBVYFVXQXRWUCYHUWHVVBUXQVXBVYFUXOUXQUXSVVAUWIXRGVVIUXPKUWJUWKUWLUUTUW
        MVXSFJUWNUUJUUTUVAVXEVVCVWDKUTZUSZFJURZDVVIXOZVXTVVIWJULVXEWUTUWFVWIVVG
        WUSEDVVIWJVVGDYJWUSEYJVVDVWDVCZVVFWURFJWVAVVEWUQVVDVWDVVCKXMVKUUGUWOYRW
        USVXTDVVIVWIWUGWURVXSFJFNNVWDVVIUYAVWDULFYJVYJUWPWUGWUQVXRVWDVVIVVCKXMV
        KUWQUWRUUIUUJUUKUWBUWSUUTUWTVWAUYBVUTVWBAUYAUXGPUXAUXBUXCUXDUXE $.
        $( [20-Oct-2009] $)

      $( Lemma for ~ ordtype . ` F ` maps some ordinal isomorphically onto
         ` A ` . $)
      ordtypelem7 $p |- ( R We A
            -> E. x e. On ( F |` x ) Isom _E , R ( x , A ) ) $=
        ( vz vs vn vm wwe c0 wceq wne cv wral wa con0 wrex cep cres wiso 
        ordtypelem4 wcel wf1o wbr cfv wb df-iso wfn ccnv wfun crn w3a wss onss 
        tfr1 fnssres mpan syl ad2antlr ordtypelem5 cima ax-17 hbra1 hban wi 
        eleq1 ordtypelem1 3expb crab ssrab2 eqsstri sseli syl5bi onelon sylani 
        com12 exp43 com3r imp a2d ra4 syl5 r19.23ad tfrlem7 fvelima ssrdv 
        adantrl wn wex cuni simpll a1i simpl wal ordtypelem6 breq1 notbid 
        elrab notbii iman bitr4i imbi2i albii syl5ib con3d expr imp3a 
        r19.21aiv con2b df-ral ralbii ralnex bitri sylib wreu ad2antrr simprl 
        sstrd hbrab1 hbne rabid ne0i sylbir ex r19.23ai adantl cvv visset 
        funimaex ax-mp ssexi wereu syl111anc reurex rexnal syl5ibr mt3d jcad 
        breq2 ralbidv syl6ibr syl6 19.23adv impr wereucl syl6eleqr n0i nss 
        con4d com23 jcai eqss sylibr df-ima syl5eqr 3jca dff1o2 csb adantll 
        ad2ant2r simplll hbcsb1 csbeq1a neeq1d rcla4 impcom ad2ant2lr csbieb 
        imaeq2 raleqdv rabbidv syl5eq mpgbi ordtypelem2 3eqtr4g cbvcsbv neeq1i 
        syl3an3b wo fveq2 ad2ant2rl ad2ant2l orim12d word eloni ordtri2 
        con2bid syl11anc wor weso ad3antrrr sseldd hbss sseq1d chvar sotric 
        syl12anc 3imtr3d impcon4bid epel fvres breqan12rd 3bitr4d r19.21adva 
        r19.21ai sylanbrc exp31 reximdvai mpd ) FJUIZIUJUKZOUJULZBAUMZUNZUOZAUP
        UQUYMFURJMUYMUSZUTZAUPUQABCDEFGHIJKLMNOPQRSTUAUBUCUDVAUYJUYOUYQAUPUYJUY
        MUPVBZUYOUYQUYQUYMFUYPVCZBUMZUEUMZURVDZUYTUYPVEZVUAUYPVEZJVDZVFZUEUYMUN
        ZBUYMUNZUYJUYRUOZUYOUOZBUEUYMFURJUYPVGVUJUYPUYMVHZUYPVIVJZUYPVKZFUKZVLU
        YSVUJVUKVULVUNUYRVUKUYJUYOUYRUYMUPVMZVUKUYMVNMUPVHVUOVUKPQGKMNSTVOUPUYM
        MVPVQVRVSABCDEFGHIJKLMNOPQRSTUAUBUCUDVTVUJMUYMWAZFVUMVUJVUPFVMZFVUPVMZU
        OVUPFUKVUJVUQVURVUIUYNVUQUYKVUIUYNUOZUFVUPFVUSUYTMVEZUFUMZUKZBUYMUQZVVA
        FVBZVVAVUPVBZVUSVVBVVDBUYMVUIUYNBVUIBWBUYLBUYMWCWDZVVDBWBVUIUYNUYTUYMVB
        ZVVBVVDWEZWEZVUIVVGUYLWEVVIUYNVUIVVGUYLVVHUYJUYRVVGUYLVVHWEZWEUYRVVGUYJ
        VVJUYRVVGUYJUYLVVHVVBUYRVVGUOZUYJUYLUOZUOVVDVVBUYTUPVBZVVLVVDVVKVVBVUTF
        VBZVVDVVMVVLUOZVUTVVAFWFVVOVUTOVBZVVNVVMUYJUYLVVPBACDEFGHOJKLMNIPQRSTUA
        UDUCUBWGZWHOFVUTOLUMZCUMZJVDZLMUYTWAZUNZCFWIZFUDVWBCFWJWKZWLVRWMUYMUYTW
        NZWOWPWQWRWSWTUYLBUYMXAZXBWSXCMVJZVVEVVCPQGKMNSTXDZBVVAUYMMXEVQXBXFXGVU
        IUYOVUQVURWEVUIVUQUYOVURVUIVUQUYOVURWEVUIVUQUOZUYKUYNVURVWIUYNUYKVURVUI
        VUQUYNUYKVURWEVUIVUQUYNUOZUOZVURUYKVWKVUAFVBZVUAVUPVBXHZUOZUEXIZUYKXHZV
        URXHVWKVWOUGUMZUHUMZJVDZXHZUGVVTLVUPUNZCFWIZUNUHVXBWIXJZIVBZVWPVUIVWJVW
        OVXDVUIVWJVWOUOZUOZVXCVXBIVXFUYJVXBFVMZVXBUJULZVXCVXBVBUYJUYRVXEXKVXGVX
        FVXACFWJZXLVUIVWJVWOVXHVWKVWNVXHUEVWKVWNVUAVXBVBZVXHVWKVWNVWLVVRVUAJVDZ
        LVUPUNZUOVXJVWKVWNVWLVXLVWNVWLWEVWKVWLVWMXMXLVWKVWNVXLVWKVWNUOZVXLVWTUG
        VXKXHZLVUPWIZUNZUHVXOUQZVXMVWSVWQVXOVBZXHZWEZUGXNZXHZUHVXOUNZVXQXHZVXMV
        YBUHVXOVXMVWRVUPVBZVWRVUAJVDZXHZUOVYBVWRVXOVBVXMVYEVYGVYBVWKVWNVYEVYGVY
        BWEVWKVWNVYEUOUOZVYAVYFVYHVWSVWQVUPVBZVWQVUAJVDZWEZWEZUGXNVYFVYAABUECDE
        FGHIJKLUHUGMNOPQRSTUAUBUCUDXOVXTVYLUGVXSVYKVWSVXSVYIVYJXHZUOZXHVYKVXRVY
        NVXNVYMLVWQVUPVVRVWQUKVXKVYJVVRVWQVUAJXPXQXRXSVYIVYJXTYAYBYCYDYEYFYGVXN
        VYGLVWRVUPVVRVWRUKVXKVYFVVRVWRVUAJXPXQXRYDYHVYCVXPXHZUHVXOUNVYDVYBVYOUH
        VXOVYAVXPVYAVXRVWTWEZUGXNVXPVXTVYPUGVWSVXRYIYCVWTUGVXOYJYAXSYKVXPUHVXOY
        LYMYNVXMVXNLVUPUQZVXQVXLXHVXMVYQVXQVXMVYQUOZVXPUHVXOYOZVXQVYRUYJVXOFVMV
        XOUJULZVYSVWKUYJVWNVYQUYJUYRVWJXKYPVYRVXOVUPFVXOVUPVMVYRVXNLVUPWJZXLVWK
        VUQVWNVYQVUIVUQUYNYQYPYRVYQVYTVXMVXNVYTLVUPLUHVXOUJVXNLUHVUPYSVWRUJVBZL
        WBYTVVRVUPVBZVXNVYTWUCVXNUOVVRVXOVBVYTVXNLVUPUUAVXOVVRUUBUUCUUDUUEUUFUH
        UGFVXOJVXOVUPVWGVUPUUGVBVWHMUYMAUUHUUIUUJWUAUUKUULUUMVXPUHVXOUUNVRUUDVX
        KLVUPUUOUUPUUQUUDUURVXAVXLCVUAFVVSVUAUKVVTVXKLVUPVVSVUAVVRJUUSUUTXRUVAV
        XBVUAUUBUVBUVCUVDUHUGFVXBJVXBFRVXIUUKUVEUUMUBUVFYFIVXCUVGUVBUEFVUPUVHYD
        UVIYFUVJYGUUDUVJWSUVKVUPFUVLUVMMUYMUVNUVOUVPUYMFUYPUVQUVMVUIUYNVUHUYKVU
        SVUGBUYMVVFVUSVVGVUFUEUYMVUSVUAUYMVBZVVGVUFVUSWUDVVGUOZUOZUYTVUAVBZVUTV
        UAMVEZJVDZVUBVUEWUFWUGWUIWUFVUAUPVBZUYJBVUAOUVRZUJULZWUGWUIWEZVUIWUDWUJ
        UYNVVGUYRWUDWUJUYJUYMVUAWNUVSUVTZUYJUYRUYNWUEUWAZUYNWUDWULVUIVVGWUDUYNW
        ULUYLWULBVUAUYMBUHWUKUJBUHVUAOUEUUHZVWRVUAVBBWBUWBZWUBBWBYTUYTVUAUKZOWU
        KUJBVUAOUWCZUWDUWEUWFUWGZWUJUYJAVUAIUVRZUJULWUMWULUEBCDEFGHWVAJKLMNOPQR
        STUAUYMVUAUKZIVVTLMVUAWAZUNZCFWIZUKWEWVAWVEUKAAUHVUAIWVEWUPVWRWVEVBZAWB
        UWHWVBVXBWVEIWVBVXAWVDCFWVBVVTLVUPWVCUYMVUAMUWIUWJUWKUBUWLUWMZUCUDUWNWU
        KWVAUJVUAUUGVBWUKWVAUKWUPBAVUAOIUUGUYTUYMUKZVWCVXBOIWVHVWBVXACFWVHVVTLV
        WAVUPUYTUYMMUWIUWJUWKUDUBUWOUWPUUJUWQUWRUUMWUFWURVUAUYTVBZUWSZVUTWUHUKZ
        WUHVUTJVDZUWSZWUGXHZWUIXHZWUFWURWVKWVIWVLWURWVKWEWUFUYTVUAMUWTXLWUFVVMU
        YJUYLWVIWVLWEVUIVVGVVMUYNWUDUYRVVGVVMUYJVWEUVSUXAZWUOUYNVVGUYLVUIWUDUYN
        VVGUYLVWFWSUXBZBUECDEFGHOJKLMNWVAPQRSTUAUDUCWVGUWNUUMUXCWUFUYTUXDZVUAUX
        DZWVJWVNVFWUFVVMWVRWVPUYTUXEVRWUFWUJWVSWUNVUAUXEVRWVRWVSUOWUGWVJUYTVUAU
        XFUXGUXHWUFFJUXIZVVNWUHFVBZWVMWVOVFUYJWVTUYRUYNWUEFJUXJUXKWUFOFVUTOFVMZ
        WUFVWDXLWUFVVMUYJUYLVVPWVPWUOWVQVVQUUMUXLWUFWUKFWUHWUKFVMZWUFWWBWWCBUEB
        UHWUKFWUQVWRFVBBWBUXMWUROWUKFWUSUXNVWDUXOXLWUFWUJUYJWULWUHWUKVBWUNWUOWU
        TUEACDEFGHWUKJKLMNIPQRSTUAWUROWVEUKWEWUKWVEUKBBUHVUAOWVEWUPWVFBWBUWHWUR
        VWCWVEOWURVWBWVDCFWURVVTLVWAWVCUYTVUAMUWIUWJUWKUDUWLUWMUCUBWGUUMUXLWVTV
        VNWWAUOUOWUIWVMFVUTWUHJUXPUXGUXQUXRUXSVUBWUGVFWUFBUEUXTXLWUEVUEWUIVFVUS
        VVGWUDVUCVUTVUDWUHJUYTUYMMUYAVUAUYMMUYAUYBUUFUYCYFUYDUYEXGUYFUYGUYHUYI 
        $.
        $( [17-Oct-2009] $)
    $}

    $( For any well-ordered set, there is an isomorphic ordinal number called
       its order type.  (Contributed by Jeff Hankins, 17-Oct-2009.) $)
    ordtype $p |- ( ( A e. B /\ R We A )
           -> E! x e. On E. f f Isom _E , R ( x , A ) ) $=
      ( vy va vg vr vs vo vm vn vk vz vq vw vv vu vh vb vp vj vc wcel wwe wa 
      cv cep wiso wex con0 wrex wceq wi wral wreu weeq2 isoeq5 exbidv rexbidv 
      imbi12d wfn cfv cres wbr wn crn crab cuni copab cab cima visset rdglem1 
      eqid wb breq1 cbvralv a1i rabbiia breq2 ralbidv cbvrabv eqtri notbid 
      unieqi eqeq2i opabbii rneq raleqdv rabbidv eleq2d anbi12d abbidv df-rab 
      3eqtr4g unieqd eqeq2d eqeq1 sylan9bb cbvopabv ordtypelem7 wfun cvv 
      tfrlem7 resfunexg mp2an isoeq1 cla4ev reximi syl vtoclg imp hbe1 ax-17 
      hbim ccnv ccom ordiso cnvex coex syl5bir isotr syl5com ex isocnv syl5 
      19.23adv cbvexv syl5ib 19.23ai com12 rgen2a jctir isoeq4 reu4 sylibr ) BC
      UEZBDUFZUGZAUHZBUIDEUHZUJZEUKZAULUMZUUEFUHZBUIDUUCUJZEUKZUGZUUBUUGUNZUOZF
      ULUPAULUPZUGUUEAULUQUUAUUFUUMYSYTUUFGUHZDUFZUUBUUNUIDUUCUJZEUKZAULUMZUOYT
      UUFUOGBCUUNBUNZUUOYTUURUUFUUNBDURUUSUUQUUEAULUUSUUPUUDEUUBUUNBUIDUUCUSUTV
      AVBUUOUUBUUNUIDHUHZIUHZVCJUHZUUTVDUUTUVBVEKUHZLUHZMUHZDVFZVGZLNUHZOUHZDVF
      ZNPUHZVHZUPZOUUNVIZUPZMUVNVIZVJZUNZPKVKZVDUNJUVAUPUGIULUMHVLZVJZUUBVEZUJZ
      AULUMUURAFQRSUUNUVTUVJNTUHZVHZUPZOUUNVIZUAUHZUBUHZDVFZUAUWAUUBVMZUPZUBUUN
      VIZDTUCUWAUVSUWJUAUWAUUGVMZUPZUBUUNVIZUAUDGVNIJUAUDHTUVSVOZUWAVPZUWGUCUHZ
      UVIDVFZUCUWEUPZOUUNVIUWSQUHZDVFZUCUWEUPZQUUNVIUWFUXAOUUNUWFUXAVQUVIUUNUEU
      VJUWTNUCUWEUVHUWSUVIDVRVSVTWAUXAUXDOQUUNUVIUXBUNUWTUXCUCUWEUVIUXBUWSDWBWC
      WDWEUWMUWSUWIDVFZUCUWKUPZUBUUNVIUXCUCUWKUPZQUUNVIUWLUXFUBUUNUWLUXFVQUWIUU
      NUEZUWJUXEUAUCUWKUWHUWSUWIDVRZVSVTWAUXFUXGUBQUUNUWIUXBUNZUXEUXCUCUWKUWIUX
      BUWSDWBZWCWDWEUVSUVCSUHZRUHZDVFZVGZSUVNUPZRUVNVIZVJZUNZPKVKUDUHZUXOSUWGUP
      ZRUWGVIZVJZUNZTUDVKUVRUXSPKUVQUXRUVCUVPUXQUVPUXLUVEDVFZVGZSUVNUPZMUVNVIUX
      QUVOUYGMUVNUVOUYGVQUVEUVNUEUVGUYFLSUVNUVDUXLUNUVFUYEUVDUXLUVEDVRWFVSVTWAU
      YGUXPMRUVNUVEUXMUNZUYFUXOSUVNUYHUYEUXNUVEUXMUXLDWBWFWCWDWEWGWHWIUXSUYDPKT
      UDUVKUWDUNZUXSUVCUYCUNUVCUXTUNUYDUYIUXRUYCUVCUYIUXQUYBUYIUXMUVNUEZUXPUGZR
      VLUXMUWGUEZUYAUGZRVLUXQUYBUYIUYKUYMRUYIUYJUYLUXPUYAUYIUVNUWGUXMUYIUVMUWFO
      UUNUYIUVJNUVLUWEUVKUWDWJWKWLZWMUYIUXOSUVNUWGUYNWKWNWOUXPRUVNWPUYARUWGWPWQ
      WRWSUVCUXTUYCWTXAXBWEUWPUXEUCUWNUPZUBUUNVIUXCUCUWNUPZQUUNVIUWOUYOUBUUNUWO
      UYOVQUXHUWJUXEUAUCUWNUXIVSVTWAUYOUYPUBQUUNUXJUXEUXCUCUWNUXKWCWDWEXCUWCUUQ
      AULUUPUWCEUWBUWAXDUUBXEUEUWBXEUEUAUDUVTTUWAUVSUWQUWRXFAVNUWAUUBXEXGXHUUBU
      UNUIDUWBUUCXIXJXKXLXMXNUULAFULUUJUUBULUEUUGULUEUGZUUKUUEUUIUYQUUKUOZUUDUU
      IUYRUOEUUIUYREUUHEXOUYREXPXQUUDUUGBUIDUUTUJZHUKUYRUUIUUDUYSUYRHUUDBUUGDUI
      UUTXRZUJZUYRUYSUUDVUAUYRUYQUUBUUGUIUIUYTUUCXSZUJZUUKUUDVUAUGUYQUUKUUBUUGU
      IUIUWDUJZTUKVUCUUBUUGTXTVUDVUCTVUBUYTUUCUUTHVNYAEVNYBUUBUUGUIUIVUBUWDXIXJ
      YCUUBBUUGUIDUIUYTUUCYDYEYFUUGBUIDUUTYGYHYIUUHUYSEHUUGBUIDUUTUUCXIYJYKYLXN
      YMYNYOUUEUUIAFULUUKUUDUUHEUUBBUUGUIDUUCYPUTYQYR $.
      $( [17-Oct-2009] $)
  $}

  ${
    $d a b c d f g k m n o p r s t w x y z A $.
    $d a b c d f g k m n o p r s t w y z B $.
    $d a b c d f g k m n o p r s t w y z H $.
    hartog.1 $e |- H = { x e. On | x ~<_ A } $.
    ${
      $d r s R $.
      hartoglem.2 $e |- R = { <. a , b >. | E. c e. t E. d e. t
         ( a = ( g ` c ) /\ b = ( g ` d ) /\ c e. d ) } $.
      $( Lemma for ~ hartog . $)
      hartoglem $p |- ( ( ( A e. B /\ g : t -1-1-> A ) /\ t e. On )
            -> g Isom _E , R ( t , ( g " t ) ) ) $=
        ( vr vs cv cima cep wiso wf1o wbr cfv wb wral wcel wf1 wa con0 df-iso 
        wfo df-f1o wf ccnv wfun df-f1 crn wfn f1f ffn dffn4 fof sylbi 3syl 
        wceq fnima feq3 syl mpbird simprbi sylanbrc df-fo eqcomd ad2antlr w3a 
        wrex simprll simprlr eqidd simprr fveq2 eqeq2d eleq1 3anbi13d eleq2 
        3anbi23d rcla42ev syl113anc expr simprr3 simprr1 simplr ad2antrr 
        simplrl f1fveq syl12anc mpbid simprr2 simplrr eleq12d exp32 r19.23advv 
        impbid epel fvex eqeq1 3anbi1d 2rexbidv 3anbi2d brab 3bitr4g ex 
        r19.21aivv ) BPZFPZXMQZREXNSXMXOXNTZNPZOPZRUAZXQXNUBZXRXNUBZEUAZUCZOXMU
        DNXMUDCDUEZXMCXNUFZUGXMUHUEZUGZNOXMXOREXNUIYEXPYDYFXPXMXOXNUFZXMXOXNUJZ
        YEXMXOXNUKYHXMXOXNULZXNUMUNZYEXMXOXNUOYEYJXMXNUPZXNULZYEXMCXNULZXNXMUQZ
        YMXMCXNURZXMCXNUSZYOXMYLXNUJYMXMXNUTXMYLXNVAVBVCYEXOYLVDZYJYMUCYEYNYOYR
        YPYQXMXNVEVCZXOYLXMXNVFVGVHYEYNYKXMCXNUOVIVJYIYOYLXOVDYEXMXOXNVKYEYNYOY
        PYQVGYEXOYLYSVLVJVJVMYGYCNOXMXMYGXQXMUEZXRXMUEZUGZYCYGUUBUGZXQXRUEZXTJP
        ZXNUBZVDZYAKPZXNUBZVDZUUEUUHUEZVNZKXMVOJXMVOZXSYBUUCUUDUUMYGUUBUUDUUMYG
        UUBUUDUGUGZYTUUAXTXTVDZYAYAVDZUUDUUMYGYTUUAUUDVPYGYTUUAUUDVQUUNXTVRUUNY
        AVRYGUUBUUDVSUULUUOUUPUUDVNUUOUUJXQUUHUEZVNJKXQXRXMXMUUEXQVDZUUGUUOUUKU
        UQUUJUURUUFXTXTUUEXQXNVTWAUUEXQUUHWBWCUUHXRVDZUUJUUPUUQUUDUUOUUSUUIYAYA
        UUHXRXNVTWAUUHXRXQWDWEWFWGWHUUCUULUUDJKXMXMUUCUUEXMUEZUUHXMUEZUGZUULUUD
        UUCUVBUULUGZUGZUUDUUKUUGUUJUUKUVBUUCWIUVDXQUUEXRUUHUVDUUGXQUUEVDZUUGUUJ
        UUKUVBUUCWJUVDYEYTUUTUUGUVEUCYGYEUUBUVCYDYEYFWKWLZYGYTUUAUVCWMUUCUUTUVA
        UULVPXMCXQUUEXNWNWOWPUVDUUJXRUUHVDZUUGUUJUUKUVBUUCWQUVDYEUUAUVAUUJUVGUC
        UVFYGYTUUAUVCWRUUCUUTUVAUULVQXMCXRUUHXNWNWOWPWSVHWTXAXBNOXCHPZUUFVDZIPZ
        UUIVDZUUKVNZKXMVOJXMVOUUGUVKUUKVNZKXMVOJXMVOUUMHIXTYAEXQXNXDXRXNXDUVHXT
        VDZUVLUVMJKXMXMUVNUVIUUGUVKUUKUVHXTUUFXEXFXGUVJYAVDZUVMUULJKXMXMUVOUVKU
        UJUUGUUKUVJYAUUIXEXHXGMXIXJXKXLVJ $.
        $( [22-Oct-2009] $)
    $}

    $( Associate every set with an ordinal number known as its Hartog number.
       Apparently, this theorem has some sort of topological significance.  I
       guess you would have to ask someone like Jeff Madsen or Dr.  James
       Conant.  Notice the similarity of this theorem to ~ ondomon , but unlike
       that theorem, this one does not require the Axiom of Choice ~ ax-ac .
       (Contributed by Jeff Hankins, 22-Oct-2009.) $)
    hartog $p |- ( A e. B -> H e. On ) $=
      ( vy vz vw vo vf vt vp vg va vc vb vd vm wcel con0 word wtr wss cv cdom 
      wbr crab wa wi wal breq1 elrab onelon ancoms adantrr domtr onelss impcom 
      cvv visset ssdomg ax-mp syl sylan anasss sylanbrc sylan2b gen2 wceq wb 
      treq dftr2 bitri mpbir ssrab2 eqsstri ordon trssord mp3an cxp wwe w3a 
      cep wiso wex cuni copab2 crn cop wf1 brdomg cima cfv wrex copab imassrn 
      a1i wf f1f frn sstrd ad2antlr simprl simprr1 adantl ad2antrr ffvelrn 
      syl11anc eqeltrd simprr2 adantll ad2ant2rl opelxpi exp32 r19.23advv imp 
      adantrl ex 19.23advv elopab syl5ib ssrdv eloni ordwe eqid hartoglem 
      isowe mpbid 3jca adantr isoeq1 cla4ev wreu simplr imaexg simp3 ordtype 
      isoeq4 exbidv reuuni2 eqcomd jcai cab abrexex abrexex2 ssab eqeq1 opeq12 
      3adant3 syl5bir reximdv 19.23aivv sylbi mpgbir ssexi sseq1 weeq2 
      3anbi13d isoeq5 rabbidv unieqd eqeq2d anbi12d weeq1 3anbi23d isoeq3 
      anbi2d eloprabg sylibr opex opeq1 eleq1d exp31 19.23adv sylbid com23 
      imp3a elrn2 3imtr4g cdm weu wfn mpan 3ad2ant3 reucl elisset 3syl eueq 
      sylib 19.21aivv fnoprabg fndm cpw simpl elpw syl2anbr ssriv pwexg xpexg 
      anidms ssexg wfun moeq moani funoprab funrnex mpi syl5eqel elong mpbiri 
      ) BCSZDTSZDUAZDUBZDTUCTUAUXMUXNFUDZGUDZSZUXPAUDZBUEUFZATUGZSZUHUXOUXTSZUI
      ZGUJFUJZUYCFGUXQUXPTSZUXPBUEUFZUHZUYBUYAUYBUXOTSZUXOBUEUFZUXQUYGUHUXSUYIA
      UXOTUXRUXOBUEUKULUXQUYEUYHUYFUYEUXQUYHUXPUXOUMUNUOUXQUYEUYFUYIUXOUXPUEUFZ
      UYFUYIUXQUYEUHZUXOUXPBUPUYKUXOUXPUCZUYJUYEUXQUYLUXPUXOUQURUXOUSSZUYLUYJUI
      FUTZUXOUXPUSVAVBVCVDVEVFUXSUYFAUXPTUXRUXPBUEUKULVGVHUXNUXTUBZUYDDUXTVIUXN
      UYOVJEDUXTVKVBFGUXTVLVMVNDUXTTEUXSATVOVPVQDTVRVSUXKDUSSUXLUXMVJUXKUXTUSDU
      XKUXTUXOBUCZHUDZBBVTZUCZUXOUYQWAZWBZUXPIUDZUXOWCUYQJUDZWDZJWEZITUGZWFZVIZ
      UHZFHGWGZWHZUCVUKUSSZUXTUSSUXKKUXTVUKUXKKUDZTSZVUMBUEUFZUHLUDZVUMWIZVUJSZ
      LWEZVUMUXTSVUMVUKSUXKVUNVUOVUSUXKVUOVUNVUSUXKVUOVUMBMUDZWJZMWEVUNVUSUIZVU
      MBCMWKUXKVVAVVBMUXKVVAVUNVUSUXKVVAUHZVUNUHZVUTVUMWLZNUDZOUDZVUTWMZVIZPUDZ
      QUDZVUTWMZVIZVVGVVKSZWBZQVUMWNZOVUMWNZNPWOZWIZVUMWIZVUJSZVUSVVDVVEBUCZVVR
      UYRUCZVVEVVRWAZWBZVUMVUBVVEWCVVRVUCWDZJWEZITUGZWFZVIZUHZVWAVVDVWEVWJVVDVW
      BVWCVWDVVAVWBUXKVUNVVAVVEVUTWHZBVVEVWLUCVVAVUTVUMWPWQVVAVUMBVUTWRZVWLBUCV
      UMBVUTWSZVUMBVUTWTVCXAXBVVDRVVRUYRVVDRUDZVVFVVJWIZVIZVVQUHZPWENWEZVWOUYRS
      ZVWOVVRSZVVDVWRVWTNPVVDVWRVWTVVDVWRUHVWOVWPUYRVVDVWQVVQXCVVDVVQVWPUYRSZVW
      QVVDVVQVXBVVDVVOVXBOQVUMVUMVVDVVGVUMSZVVKVUMSZUHZVVOVXBVVDVXEVVOUHUHZVVFB
      SVVJBSVXBVXFVVFVVHBVVIVVMVVNVXEVVDXDVVDVXEVVHBSZVVOVVDVXEUHVWMVXCVXGVVCVW
      MVUNVXEVVAVWMUXKVWNXEXFVVDVXCVXDXCVUMBVVGVUTXGXHUOXIVXFVVJVVLBVVIVVMVVNVX
      EVVDXJVVDVXEVVLBSZVVOVVCVXDVXHVUNVXCVVAVXDVXHUXKVWMVXDVXHVVAVUMBVVKVUTXGV
      WNVDXKXLUOXIVVFVVJBBXMXHXNXOXPXQXIXRXSVVQNPVWOXTZYAYBVVDVUMWCWAZVWDVUNVXJ
      VVCVUNVUMUAVXJVUMYCVUMYDVCXEVVDVUMVVEWCVVRVUTWDZVXJVWDVJAKBCVVRMDNPOQEVVR
      YEYFZVUMVVEWCVVRVUTYGVCYHYIVVDVWEVWJVVDVWEUHZVWIVUMVXMVUMVVEWCVVRVUCWDZJW
      EZVWIVUMVIZVXMVXKVXOVVDVXKVWEVXLYJVXNVXKJVUTMUTZVUMVVEWCVVRVUTVUCYKYLVCVX
      MVUNVWGITYMZVXOVXPVJVVCVUNVWEYNVXMVVEUSSZVWDVXRVXSVXMVUTUSSVXSVXQVUTVUMUS
      YOVBZWQVWEVWDVVDVWBVWCVWDYPXEIVVEUSVVRJYQXHVWGVXOITVUMVUBVUMVIVWFVXNJVUBV
      VEVUMWCVVRVUCYRYSYTXHYHUUAXRUUBVXSVVRUSSVUMUSSVWAVWKVJVXTVVRVWOVVHVVLWIZV
      IZQVUMWNZOVUMWNZRUUCZVYCORVUMKUTZQRVUMVYAVYFUUDUUEVVRVYEUCVXAVYDUIRVYDRVV
      RUUFVXAVWSVYDVXIVWRVYDNPVWQVVQVYDVWQVVPVYCOVUMVWQVVOVYBQVUMVWQVYBVWPVYAVI
      ZVVOVWOVWPVYAUUGVVIVVMVYGVVNVVFVVJVVHVVLUUHUUIUUJUUKUUKXPUULUUMUUNUUOVYFV
      UIVWBUYSVVEUYQWAZWBZUXPVUBVVEWCUYQVUCWDZJWEZITUGZWFZVIZUHVWEUXPVWIVIZUHVW
      KFHGVVEVVRVUMUSUSUSUXOVVEVIZVUAVYIVUHVYNVYPUYPVWBUYTVYHUYSUXOVVEBUUPUXOVV
      EUYQUUQUURVYPVUGVYMUXPVYPVUFVYLVYPVUEVYKITVYPVUDVYJJVUBUXOVVEWCUYQVUCUUSY
      SUUTUVAUVBUVCUYQVVRVIZVYIVWEVYNVYOVYQUYSVWCVYHVWDVWBUYQVVRUYRUUPVVEUYQVVR
      UVDUVEVYQVYMVWIUXPVYQVYLVWHVYQVYKVWGITVYQVYJVWFJVUBVVEWCUYQVVRVUCUVFYSUUT
      UVAUVBUVCUXPVUMVIVYOVWJVWEUXPVUMVWIUUGUVGUVHVSUVIVURVWALVVSVVEVVRUVJVUPVV
      SVIVUQVVTVUJVUPVVSVUMUVKUVLYLVCUVMUVNUVOUVPUVQUXSVUOAVUMTUXRVUMBUEUKULLVU
      MVUJVYFUVRUVSYBUXKVUJUVTZUSSZVULUXKVYRVUAFHWOZUSUXKVUAVUHGUWAZUIZHUJFUJVU
      JVYTUWBVYRVYTVIUXKWUBFHUXKVUAWUAUXKVUAUHZVUGUSSZWUAWUCVUEITYMZVUGTSWUDVUA
      WUEUXKUYTUYPWUEUYSUYMUYTWUEUYNIUXOUSUYQJYQUWCUWDXEVUEITUWEVUGTUWFUWGGVUGU
      WHUWIXRUWJVUAVUHFHGUWKVYTVUJUWLUWGUXKVYTBUWMZUYRUWMZVTZUCZWUHUSSZVYTUSSWU
      IUXKKVYTWUHVUMVYTSVUMUXOUYQWIZVIZVUAUHZHWEFWEVUMWUHSZVUAFHVUMXTWUMWUNFHWU
      MVUMWUKWUHWULVUAUWNVUAWUKWUHSZWULUYPUYSWUOUYTUXOWUFSUYQWUGSWUOUYPUYSUXOUY
      QWUFWUGXMUXOBUYNUWOUYQUYRHUTUWOUWPUUIXEXIUULUUMUWQWQUXKWUFUSSWUGUSSZWUJBC
      UWRUXKUYRUSSZWUPUXKWUQBBCCUWSUWTUYRUSUWRVCWUFWUGUSUSUWSXHVYTWUHUSUXAXHXIV
      YSVUJUXBVULVUIFHGVUHVUAGGVUGUXCUXDUXEUSVUJUXFUXGVCUXTVUKUSUXAXHEUXHDUSUXI
      VCUXJ $.
      $( [27-Aug-2011] $) $( [22-Oct-2009] $)
  $}

  ${
    $d x y z A $.
    $( Any ordinal number is strictly dominated by some other ordinal number.
       (Contributed by Jeff Hankins, 22-Oct-2009.) $)
    onsdom $p |- ( A e. On -> E. x e. On A ~< x ) $=
      ( vy vz con0 wcel cv cdom wbr crab csdm wrex eqid hartog cen wn brsdom 
      wss wa onelon ex onelss cvv wi visset ssdomg ax-mp syl6 jcad breq1 elrab 
      syl6ibr ssrdv mpd word eloni ordirr 3syl a1d ancrd cbvrabv eleq2i bitr3i 
      syl6ib mtod ensymg syl endom sylanbrc breq2 rcla4ev syl11anc ) BEFZCGZBHI
      ZCEJZEFZBVPKIZBAGZKIZAELCBEVPVPMNZVRBVPHIZBVPOIZPVMBVPQVMBVPRWBVMDBVPVMDG
      ZBFZWDEFZWDBHIZSWDVPFVMWEWFWGVMWEWFBWDTUAVMWEWDBRZWGBWDUBWDUCFWHWGUDDUEWD
      BUCUFUGUHUIVOWGCWDEVNWDBHUJUKULUMBVPEUFUNVMWCVPBHIZVMWIVPVPFZVMVQVPUOWJPW
      AVPUPVPUQURVMWIVQWISZWJVMWIVQVMVQWIWAUSUTWKVPWGDEJZFWJWGWIDVPEWDVPBHUJUKW
      LVPVPWGVODCEWDVNBHUJVAVBVCVDVEVMWCVPBOIZWIVMVQWCWMUDWABVPEVFVGVPBVHUHVEVI
      VTVRAVPEVSVPBKVJVKVL $.
      $( [22-Oct-2009] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Regularity
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Introduce the Axiom of Regularity
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z $.
    $( Axiom of Regularity.  An axiom of Zermelo-Fraenkel set theory.  Also
       called the Axiom of Foundation.  A rather non-intuitive axiom that
       denies more than it asserts, it states (in the form of ~ zfreg ) that
       every non-empty set contains a set disjoint from itself.  One
       consequence is that it denies the existence of a set containing itself
       ( ~ elirrv ).  A stronger version that works for proper classes is
       proved as ~ zfregs . $)
    ax-reg $a |- ( E. y y e. x ->
                 E. y ( y e. x /\ A. z ( z e. y -> -. z e. x ) ) ) $.

    $( Axiom of Regularity expressed more compactly. $)
    axreg $p |- ( x e. y ->
                 E. x ( x e. y /\ A. z ( z e. x -> -. z e. y ) ) ) $=
      ( cv wcel wn wi wal wa wex ax-reg 19.23bi ) ADZBDZEZOCDZMEPNEFGCHIAJABACK
      L $.
      $( [14-Aug-2003] $)
  $}

  ${
    $d x y A z $.
    zfregcl.1 $e |- A e. _V $.
    $( The Axiom of Regularity with class variables. $)
    zfregcl $p |- ( E. x x e. A -> E. x e. A A. y e. x -. y e. A ) $=
      ( vz cv wcel wex wn wral wrex wi wceq eleq2 exbidv notbid ralbidv 
      rexeqbi1dv imbi12d hbre1 wal wa axreg df-ral rexbii df-rex bitr2i sylib 
      19.23ai vtocl ) AFZEFZGZAHZBFZULGZIZBUKJZAULKZLUKCGZAHZUOCGZIZBUKJZACKZLE
      CDULCMZUNVAUSVEVFUMUTAULCUKNOURVDAULCVFUQVCBUKVFUPVBULCUONPQRSUMUSAURAULT
      UMUMUOUKGUQLBUAZUBAHZUSAEBUCUSVGAULKVHURVGAULUQBUKUDUEVGAULUFUGUHUIUJ $.
      $( [7-May-2004] $) $( [5-Aug-1994] $)
  $}

  ${
    $d x A y $.
    zfreg.1 $e |- A e. _V $.
    $( The Axiom of Regularity using abbreviations.  Axiom 6 of [TakeutiZaring]
       p. 21.  This is called the "weak form."  There is also a "strong form,"
       not requiring that ` A ` be a set, that can be proved with more
       difficulty (see ~ zfregs ). $)
    zfreg $p |- ( A =/= (/) -> E. x e. A ( x i^i A ) = (/) ) $=
      ( vy cv wcel wex wn wral wrex c0 wne cin wceq zfregcl n0 disj rexbii 
      3imtr4i ) AEZBFAGDEBFHDTIZABJBKLTBMKNZABJADBCOABPUBUAABDTBQRS $.
      $( [11-Apr-2007] $) $( [26-Nov-1995] $)
  $}

  ${
    $d x A y $.
    zfreg2.1 $e |- A e. _V $.
    $( The Axiom of Regularity using abbreviations.  This form with the
       intersection arguments commuted (compared to ~ zfreg ) is formally more
       convenient for us in some cases.  Axiom Reg of [BellMachover] p. 480. $)
    zfreg2 $p |- ( A =/= (/) -> E. x e. A ( A i^i x ) = (/) ) $=
      ( vy cv wcel wex wn wral wrex c0 wne cin wceq zfregcl n0 incom eqeq1i 
      disj bitri rexbii 3imtr4i ) AEZBFAGDEBFHDUCIZABJBKLBUCMZKNZABJADBCOABPUFU
      DABUFUCBMZKNUDUEUGKBUCQRDUCBSTUAUB $.
      $( [12-Apr-2007] $) $( [17-Sep-2003] $)
  $}

  ${
    $d x y z $.
    $( The membership relation is irreflexive: no set is a member of itself.
       Theorem 105 of [Suppes] p. 54.  (This is trivial to prove from ~ zfregfr
       and ~ efrirr , but this proof is direct from the Axiom of
       Regularity.) $)
    elirrv $p |- -. x e. x $=
      ( vz vy cv wcel csn wn wral wrex wex eleq1 visset snid a4eiv snex 
      zfregcl ax-mp wceq wi ax-14 equcoms com12 elsn syl5ib notbid rcla4cv 
      mt2i nsyli con2d r19.21aiv ralnex sylib mt2 ) ADZUNEZBDZUNFZEZGZBCDZHZCUQ
      IZUTUQEZCJVBVCUNUQEZCAUTUNUQKUNALMZNCBUQUNOPQUOVAGZCUQHVBGUOVFCUQUOVAVCUO
      VCUNUTEZVAUOUTUNRZVGVCVHUOVGUOVGSACACATUAUBCUNUCUDVAVGVDVEUSVDGBUNUTUPUNR
      URVDUPUNUQKUEUFUGUHUIUJVACUQUKULUM $.
      $( [19-Aug-1993] $)
  $}

  ${
    $d A x $.
    $( No class is a member of itself.  Exercise 6 of [TakeutiZaring] p. 22.
       (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    elirr $p |- -. A e. A $=
      ( vx wcel wn wi cv wceq id eleq12d notbid elirrv vtoclg pm2.01 ax-mp ) AA
      CZODZEPBFZQCZDPBAAQAGZROSQAQASHZTIJBKLOMN $.
      $( [9-Jul-2011] $) $( [7-Aug-1994] $)

    $( A class is equal to its successor iff it is a proper class (assuming the
       Axiom of Regularity). $)
    sucprcreg $p |- ( -. A e. _V <-> suc A = A ) $=
      ( vx cvv wcel wn csuc wceq sucprc cv wi wal elirr ax-17 eleq1 ceqsalg 
      mtbiri csn wo cun wss ssid wb df-suc eqeq1i sseq1 sylbi mpbiri sseld 
      elun syl5ibr olc syl5 elsn 19.21aiv nsyl3 impbii ) ACDZEAFZAGZAHUQBIZAGZU
      TADZJZBKZUSUQVDAADZALVBVEBACVEBMUTAANOPUSVCBUSUTAQZDZVBVAUSVBVGRZVBVGUSUT
      AVFSZDVBVHUSVIAUTUSVIATZAATZAUAUSVIAGVJVKUBURVIAAUCUDVIAAUEUFUGUHUTAVFUIU
      JVGVBUKULBAUMUJUNUOUP $.
      $( [6-Jan-2004] $) $( [9-Jul-2004] $)
  $}

  $( The Russell class is equal to the universe ` _V ` .  Exercise 5 of
     [TakeutiZaring] p. 22.  (Contributed by Alan Sare, 4-Oct-2008.) $)
  ruv $p |- { x | x e/ x } = _V $=
    ( cvv cv wceq cab wnel df-v equid wcel wn elirrv df-nel mpbir 2th abbii 
    eqtr2i ) BACZQDZAEQQFZAEAGRSARSAHSQQIJAKQQLMNOP $.
    $( [4-Oct-2008] $)

  $( Alternate proof of Russell's Paradox ~ ru , simplified using (indirectly)
     the Axiom of Regularity ~ ax-reg .  (Contributed by Alan Sare,
     4-Oct-2008.) $)
  ruALT $p |- { x | x e/ x } e/ _V $=
    ( cv wnel cab cvv wcel wn vprc df-nel mpbir wceq wb ruv neleq1 ax-mp ) ABZP
    CADZECZEECZSEEFGHEEIJQEKRSLAMQEENOJ $.
    $( [4-Oct-2008] $)

  ${
    $d x y A $.
    $( The epsilon relation is founded on any class. $)
    zfregfr $p |- _E Fr A $=
      ( vx vy cep wfr cv wss c0 wne wa cin wceq wrex wi dfepfr visset zfreg2 
      adantl mpgbir ) ADEBFZAGZTHIZJTCFKHLCTMZNBBCAOUBUCUACTBPQRS $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( No class has 2-cycle membership loops.  Theorem 7X(b) of [Enderton]
       p. 206. $)
    en2lp $p |- -. ( A e. B /\ B e. A ) $=
      ( vx vy cvv wcel wa wn cv wceq eleq1 eleq2 anbi12d notbid cep wfr 
      zfregfr visset pm3.2i efrn2lp mp2an vtocl2g elisset anim12i con3i 
      pm2.61i ) AEFZBEFZGZABFZBAFZGZHZCIZDIZFZUOUNFZGZHZAUOFZUOAFZGZHUMCDABEEUN
      AJZURVBVCUPUTUQVAUNAUOKUNAUOLMNUOBJZVBULVDUTUJVAUKUOBALUOBAKMNEOPUNEFZUOE
      FZGUSEQVEVFCRDRSCDETUAUBULUIUJUGUKUHABUCBAUCUDUEUF $.
      $( [16-Oct-1996] $)

  $}

  ${
    preleq.1 $e |- A e. _V $.
    preleq.2 $e |- B e. _V $.
    preleq.3 $e |- C e. _V $.
    preleq.4 $e |- D e. _V $.
    $( Equality of two unordered pairs when one member of each pair contains
       the other member. $)
    preleq $p |- ( ( ( A e. B /\ C e. D ) /\ { A , B } = { C , D } ) ->
                   ( A = C /\ B = D ) ) $=
      ( cpr wceq wcel wa wn wo preq12b biimpi ord en2lp eleq12 anbi1d mtbiri 
      syl6 con4d impcom ) ABICDIJZABKZCDKZLZACJBDJLZUEUIUHUEUIMADJBCJLZUHMUEUIU
      JUEUIUJNABCDEFGHOPQUJUHDCKZUGLDCRUJUFUKUGADBCSTUAUBUCUD $.
      $( [16-Oct-1996] $)

    $( Theorem for alternate representation of ordered pairs, requiring the
       Axiom of Regularity ~ ax-reg (via the ~ preleq step).  See ~ df-op for a
       description of other ordered pair representations.  Exercise 34 of
       [Enderton] p. 207. $)
    opthreg $p |- ( { A , { A , B } } = { C , { C , D } } <->
                   ( A = C /\ B = D ) ) $=
      ( cpr wceq wa wcel prid1 prex preleq mpanl12 preq1 eqeq1d preqr2 syl6bi 
      imdistani syl adantr preq12 preq2d eqtrd impbii ) AABIZIZCCDIZIZJZACJZBDJ
      ZKZULUMUHUJJZKZUOAUHLCUJLULUQABEMCDGMAUHCUJEABNGCDNOPUMUPUNUMUPCBIZUJJUNU
      MUHURUJACBQRBDCFHSTUAUBUOUICUHIZUKUMUIUSJUNACUHQUCUOUHUJCABCDUDUEUFUG $.
      $( [16-Oct-1996] $)
  $}

  $( The successor operation behaves like a one-to-one function (assuming the
     Axiom of Regularity).  Exercise 35 of [Enderton] p. 208 and its
     converse. $)
  suc11reg $p |- ( suc A = suc B <-> A = B ) $=
    ( csuc wceq cvv wcel wi wa wn wo en2lp ianor mpbi eleq2 sucidg syl5cbi 
    elsucg sylibd imp ord ex com23 syl5cbir eqcom syl6ib jaao mpi nelneq 
    sucexb notbii syl2anb pm2.21d ancoms syl5ib sucprc eqeqan12d biimpd 4cases 
    suceq impbii ) ACZBCZDZABDZAEFZBEFZVCVDGZVEVFHABFZIZBAFZIZJZVGVHVJHIVLABKVH
    VJLMVEVIVGVFVKVEVCVIVDVEVCVIVDGVEVCHVHVDVEVCVHVDJZVEVCAVBFZVMVCAVAFVNVEVAVB
    ANAEOPABEQRSTUAUBVFVCVKVDVFVCVKVDGVFVCHZVKBADZVDVOVJVPVFVCVJVPJZVFVCBVAFZVQ
    VCVRBVBFVFVAVBBNBEOUCBAEQRSTBAUDUEUAUBUFUGVEVFIZHVCVDVAEFZVBEFZIVCIVEVSVAVB
    EUHAUIZVFWABUIZUJUKULVEIZVFHZVBVADZVDVCWEWFVDVFWDWFIZWAVTIWGVFWDVBVAEUHWCVE
    VTWBUJUKUMULVAVBUDUNWDVSHVCVDWDVSVAAVBBAUOBUOUPUQURABUSUT $.
    $( [25-Oct-2003] $)

  ${
    $d x y A $.
    $( Assuming ~ ax-reg , an ordinal is a transitive class on which inclusion
       satisfies trichotomy.  (Contributed by Scott Fenton, 27-Oct-2010.) $)
    dford2 $p |- ( Ord A <-> ( Tr A /\
                    A. x e. A A. y e. A ( x e. y \/ x = y \/ y e. x ) ) ) $=
      ( word wtr cep wwe wa cv wcel wceq w3o wral df-ord wfr wbr dfwe2 zfregfr 
      biantrur epel biid 3orbi123i 2ralbii 3bitr2i anbi2i bitri ) CDCEZCFGZHUGA
      IZBIZJZUIUJKZUJUIJZLZBCMACMZHCNUHUOUGUHCFOZUIUJFPZULUJUIFPZLZBCMACMZHUTUO
      ABCFQUPUTCRSUSUNABCCUQUKULULURUMABTULUABATUBUCUDUEUF $.
      $( [27-Oct-2010] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Axiom of Infinity equivalents
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( First we prove the equivalence of our version of Infinity with
     some others. $)

  ${
    $d x y z w v u f $.
    inf0.1 $e |- om e. _V $.
    $( Our Axiom of Infinity derived from existence of omega.  The proof shows
       that the especially contrived
       class " ` ran ( rec ( { <. v , u >. | u = suc v } , x ) |`` om ) ` " exi
       sts, is a subset of its union, and contains a given set ` x ` (and thus
       is non-empty).  Thus it provides an example demonstrating that a set
       ` y ` exists with the necessary properties demanded by ~ ax-inf . $)
    inf0 $p |- E. y ( x e. y /\ A. z ( z e. y -> E. w ( z e. w /\ w e. y )
                   ) ) $=
      ( vu vv vf cv csuc wceq copab crdg com cres crn wcel wa wex wi wal c0 
      cfv cvv visset fr0g ax-mp wfn frfnom peano1 fnfvelrn mp2an eqeltrri wrex 
      wb fvelrnb eleq1 fvex sucex ax-17 hbopab1 hbrdg hbres hbfv hbsuc eqid 
      suceq frsucopab mpan2 sucid syl5eleqr syl5bi peano2b mpan sylbi a1i jcad 
      eleq2 anbi12d cla4ev syl6com r19.23aiv ax-gen cdm wfun fndm eqeltri 
      fnfun funrnex mp2 anbi2d exbidv imbi12d albidv ) AIZFIGIZJZKZGFLZWOMZNOZP
      ZQZCIZXBQZXDDIZQZXFXBQZRZDSZTZCUAZWOBIZQZXDXMQZXGXFXMQZRZDSZTZCUAZRZBSUBX
      AUCZWOXBWOUDQYBWOKAUEWOUDWSUFUGXANUHZUBNQYBXBQWOWSUIZUJNUBXAUKULUMXKCXEHI
      ZXAUCZXDKZHNUNZXJYCXEYHUOYDHNXDXAUPUGYGXJHNYGYENQZXDYEJZXAUCZQZYKXBQZRZXJ
      YGYIYLYMYGYFYKQYLYIYFXDYKUQYIYFJZYKYFYIYOUDQYKYOKYFYEXAURZUSGFCWOYEWQYOUD
      XAXDWOQGUTZXDYEQGUTZGCYFGCYEXAGCWTNGCWOWSWRGFCVAYQVBXDNQGUTVCYRVDVEXAVFWP
      YFVGVHVIYFYPVJVKVLYIYMTYGYIYJNQZYMYEVMYCYSYMYDNYJXAUKVNVOVPVQXIYNDYKYJXAU
      RXFYKKXGYLXHYMXFYKXDVRXFYKXBUQVSVTWAWBVOWCYAXCXLRBXBXAWDZUDQXAWEZXBUDQYTN
      UDYCYTNKYDNXAWFUGEWGYCUUAYDNXAWHUGUDXAWIWJXMXBKZXNXCXTXLXMXBWOVRUUBXSXKCU
      UBXOXEXRXJXMXBXDVRUUBXQXIDUUBXPXHXGXMXBXFVRWKWLWMWNVSVTUL $.
      $( [2-Apr-2007] $) $( [15-Oct-1996] $)
  $}

  ${
    $d x y z $.
    inf1.1 $e |- E. x ( y e. x /\
                 A. y ( y e. x -> E. z ( y e. z /\ z e. x ) ) ) $.
    $( Variation of Axiom of Infinity (using ~ zfinf as a hypothesis).  Axiom
       of Infinity in [FreydScedrov] p. 283. $)
    inf1 $p |- E. x ( x =/= (/) /\
                 A. y ( y e. x -> E. z ( y e. z /\ z e. x ) ) ) $=
      ( cv wcel wa wex wi wal c0 wne ne0i anim1i eximi ax-mp ) BEZAEZFZSQCEZFTR
      FGCHIBJZGZAHRKLZUAGZAHDUBUDASUCUARQMNOP $.
      $( [11-Apr-2007] $) $( [14-Oct-1996] $)

    $( Variation of Axiom of Infinity.  There exists a non-empty set that is a
       subset of its union (using ~ zfinf as a hypothesis).  Abbreviated
       version of the Axiom of Infinity in [FreydScedrov] p. 283. $)
    inf2 $p |- E. x ( x =/= (/) /\ x C_ U. x ) $=
      ( cv c0 wne cuni wss wa wex wcel wi wal inf1 dfss2 eluni imbi2i albii 
      bitri anbi2i exbii mpbir ) AEZFGZUDUDHZIZJZAKUEBEZUDLZUICEZLUKUDLJCKZMZBN
      ZJZAKABCDOUHUOAUGUNUEUGUJUIUFLZMZBNUNBUDUFPUQUMBUPULUJCUIUDQRSTUAUBUC $.
      $( [11-Apr-2007] $) $( [28-Oct-1996] $)
  $}

  ${
    $d x y z w v u f g $.  $d v u f g G $.  $d v u f g F $.  $d v u f g A $.
    $d v u f g B $.
    inf3lem.1 $e |- G =
         { <. y , z >. | z = { w e. x | ( w i^i x ) C_ y } } $.
    inf3lem.2 $e |- F = ( rec ( G , (/) ) |` om ) $.
    inf3lem.3 $e |- A e. _V $.
    inf3lem.4 $e |- B e. _V $.
    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lema $p |- ( A e. ( G ` B ) <-> ( A e. x /\ ( A i^i x ) C_ B ) ) $=
      ( vf vu vv cv cin wss cfv wceq ineq1 sseq1d crab copab id sseq2 rabbidv 
      cbvrabv syl6eq eqeqan12rd cbvopabv eqtri fveq1i visset rabex fvopab 
      elrab2 ) MPZAPZQZFRZEUSQZFRMEUSFHSZURETUTVBFUREUSUAUBVCFNPZUTOPZRZMUSUCZT
      ZONUDZSVAMUSUCZFHVIHCPZDPZUSQZBPZRZDUSUCZTZBCUDVIIVQVHBCONVKVDTZVNVETZVKV
      DVPVGVRUEVSVPVMVERZDUSUCVGVSVOVTDUSVNVEVMUFUGVTVFDMUSVLURTVMUTVEVLURUSUAU
      BUHUIUJUKULUMONFVGVJLVAMUSAUNUOVEFTVFVAMUSVEFUTUFUGUPULUQ $.
      $( [28-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lemb $p |- ( F ` (/) ) = (/) $=
      ( c0 cfv crdg com cres fveq1i cvv wcel wceq 0ex fr0g ax-mp eqtri ) MGNMHM
      OPQZNZMMGUFJRMSTUGMUAUBMSHUCUDUE $.
      $( [28-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lemc $p |- ( A e. om -> ( F ` suc A ) = ( G ` ( F ` A ) ) ) $=
      ( com wcel csuc c0 crdg cres cfv frsuc fveq1i fveq2i 3eqtr4g ) EMNEOZHPQM
      RZSEUESZHSUDGSEGSZHSPEHTUDGUEJUAUGUFHEGUEJUAUBUC $.
      $( [28-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lemd $p |- ( A e. om -> ( F ` A ) C_ x ) $=
      ( vv vu com wcel cfv cv wss wi c0 wceq 0ss fveq2 inf3lemb syl6eq sseq1d 
      mpbiri a1d wne wa csuc wrex nnsuc visset inf3lemc eleq2d cin fvex 
      inf3lema simplbi syl6bi ssrdv syl5cbir r19.23aiv syl expcom pm2.61ine ) 
      EOPZEGQZARZSZTEUAEUAUBZVLVIVMVLUAVKSVKUCVMVJUAVKVMVJUAGQUAEUAGUDABCDEFGHI
      JKLUEUFUGUHUIVIEUAUJZVLVIVNUKEMRZULZUBZMOUMVLMEUNVQVLMOVQVLVPGQZVKSVOOPZV
      QVJVRVKEVPGUDUGVSNVRVKVSNRZVRPVTVOGQZHQZPZVTVKPZVSVRWBVTABCDVOFGHIJMUOLUP
      UQWCWDVTVKURWASABCDVTWAGHIJNUOVOGUSUTVAVBVCVDVEVFVGVH $.
      $( [28-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lem1 $p |- ( A e. om -> ( F ` A ) C_ ( F ` suc A ) ) $=
      ( vv vu cv cfv csuc wss c0 wceq fveq2 suceq fveq2d sseq12d inf3lemb 0ss 
      eqsstri com wcel wa wi cin visset inf3lemc eleq2d fvex inf3lema syl6bb 
      peano2b sucex sylbi imbi12d sstr2 com12 anim2d syl5bir imp ssrdv ex 
      finds ) MOZGPZVKQZGPZRSGPZSQZGPZRNOZGPZVRQZGPZRZWAVTQZGPZRZEGPZEQZGPZRMNE
      VKSTZVLVOVNVQVKSGUAWIVMVPGVKSUBUCUDVKVRTZVLVSVNWAVKVRGUAWJVMVTGVKVRUBUCUD
      VKVTTZVLWAVNWDVKVTGUAWKVMWCGVKVTUBUCUDVKETZVLWFVNWHVKEGUAWLVMWGGVKEUBUCUD
      VOSVQABCDEEGHIJKKUEVQUFUGVRUHUIZWBWEWMWBUJMWAWDWMWBVKWAUIZVKWDUIZUKZWMWPV
      KAOZUIZVKWQULZVSRZUJZWRWSWARZUJZUKWBWMWNXAWOXCWMWNVKVSHPZUIXAWMWAXDVKABCD
      VRVRGHIJNUMZXEUNUOABCDVKVSGHIJMUMZVRGUPUQURWMWOVKWAHPZUIXCWMWDXGVKWMVTUHU
      IWDXGTVRUSABCDVTVRGHIJVRXEUTXEUNVAUOABCDVKWAGHIJXFVTGUPUQURVBWBWTXBWRWTWB
      XBWSVSWAVCVDVEVFVGVHVIVJ $.
      $( [28-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lem2 $p |- ( ( x =/= (/) /\ x C_ U. x ) ->
                    ( A e. om -> ( F ` A ) =/= x ) ) $=
      ( vv vu vf com wcel cv c0 wne cuni wss wa cfv wi csuc wceq fveq2 neeq1d 
      imbi2d inf3lemb eqeq1i eqcom bitri biimpi necon3i adantr wn wex ssel 
      eluni syl6ib visset inf3lemc eleq2d cin fvex inf3lema simprbi sseld elin 
      syl5ibr syl6bi eleq2 biimparc syl5 com23 exp4a exp3a com34 imp3a 
      19.23adv sylan9r pm2.43d id necon3bd syl6 wpss df-pss pssnel sylbir 
      inf3lemd sylani exp4b pm2.43a adantld a2d finds com12 ) EPQARZSTZWTWTUAZU
      BZUCZEGUDZWTTZXDMRZGUDZWTTZUEXDSGUDZWTTZUEXDNRZGUDZWTTZUEXDXLUFZGUDZWTTZU
      EXDXFUEMNEXGSUGZXIXKXDXRXHXJWTXGSGUHUIUJXGXLUGZXIXNXDXSXHXMWTXGXLGUHUIUJX
      GXOUGZXIXQXDXTXHXPWTXGXOGUHUIUJXGEUGZXIXFXDYAXHXEWTXGEGUHUIUJXAXKXCXJWTWT
      SXJWTUGZWTSUGZYBSWTUGYCXJSWTABCDEFGHIJKLUKULSWTUMUNUOUPUQXLPQZXDXNXQYDXCX
      NXQUEZXAXCYDYEYDXCYDXNXQYDXCUCZXMWTUBZXNXQYDYFXGWTQZXGXMQZURZUCZMUSZXQYGX
      NUCZYFYKXQMYFYHYJXQYFYHXPWTUGZYIUEZYJXQUEYFYHYOXCYHXGORZQZYPWTQZUCZOUSZYD
      YHYOUEZXCYHXGXBQYTWTXBXGUTOXGWTVAVBYDYSUUAOYDYQYRUUAYDYQYHYRYOYDYQYHYRYOU
      EYDYQYHUCZYRYNYIYDYRYNUCZUUBYIYDYPXPQZUUBYIUEZUUCYDUUDYPXMHUDZQZUUEYDXPUU
      FYPABCDXLFGHIJNVCZLVDVEUUGXGYPWTVFZQYIUUBUUGUUIXMXGUUGYRUUIXMUBABCDYPXMGH
      IJOVCXLGVGVHVIVJXGYPWTVKVLVMYNUUDYRXPWTYPVNVOVPVQVRVSVTWAWBWCWDYOYIXPWTYO
      WEWFWGWAWBYMXMWTWHYLXMWTWIMXMWTWJWKVPABCDXLFGHIJUUHLWLWMWNWOWPWQWRWS $.
      $( [28-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description.  In the proof, we invoke the Axiom of
       Regularity in the form of ~ zfreg . $)
    inf3lem3 $p |- ( ( x =/= (/) /\ x C_ U. x ) ->
                    ( A e. om -> ( F ` A ) =/= ( F ` suc A ) ) ) $=
      ( vv com wcel cv c0 wne cuni wss wa cfv csuc cdif inf3lem2 com12 
      inf3lemd jctild pssdifn0 syl6 cin wceq wrex wn inf3lemc eleq2d eldifi 
      inssdif0 biimpri anim12i visset fvex inf3lema sylibr syl5bir wi eldifn 
      adantr a1i jcad eleq2 biimprd iman sylib necon2ai exp3a r19.23adv difss 
      ssexi zfreg syl5 syld ) ENOZAPZQRWDWDSTUAZEGUBZEUCGUBZRZWCWEWDWFUDZQRZWHW
      CWEWFWDTZWFWDRZUAWJWCWEWLWKWEWCWLABCDEFGHIJKLUEUFABCDEFGHIJKLUGUHWFWDUIUJ
      WCMPZWIUKQULZMWIUMWHWJWCWNWHMWIWCWMWIOZWNWHWCWOWNUAZWMWGOZWMWFOZUNZUAZWHW
      CWPWQWSWCWQWMWFHUBZOZWPWCWGXAWMABCDEFGHIJKLUOUPWPWMWDOZWMWDUKWFTZUAXBWOXC
      WNXDWMWDWFUQXDWNWMWDWFURUSUTABCDWMWFGHIJMVAEGVBVCVDVEWPWSVFWCWOWSWNWMWDWF
      VGVHVIVJWTWFWGWFWGULZWQWRVFWTUNXEWRWQWFWGWMVKVLWQWRVMVNVOUJVPVQMWIWIWDAVA
      WDWFVRVSVTWAWBUF $.
      $( [29-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lem4 $p |- ( ( x =/= (/) /\ x C_ U. x ) ->
                    ( A e. om -> ( F ` A ) C. ( F ` suc A ) ) ) $=
      ( cv c0 wne cuni wss wa com wcel cfv csuc wpss wi inf3lem1 a1i inf3lem3 
      jcad df-pss syl6ibr ) AMZNOUKUKPQRZESTZEGUAZEUBGUAZQZUNUOOZRUNUOUCULUMUPU
      QUMUPUDULABCDEFGHIJKLUEUFABCDEFGHIJKLUGUHUNUOUIUJ $.
      $( [29-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lem5 $p |- ( ( x =/= (/) /\ x C_ U. x ) ->
                    ( ( A e. om /\ B e. A ) -> ( F ` B ) C. ( F ` A ) ) ) $=
      ( vv vu com wcel wa cv c0 wne cuni wss cfv wpss wi elnn ancoms csuc word 
      nnord ordsucss syl adantr wceq fveq2 psseq2d imbi2d peano2b inf3lem4 
      com12 sylbir visset psstr expcom syl6com a2d ad2antrr findsg ex sylan2b 
      syld com23 imp mpd ) EOPZFEPZQZARZSTVRVRUAUBQZFGUCZEGUCZUDZVQFOPZVSWBUEZV
      PVOWCFEUFUGVOVPWCWDUEVOWCVPWDVOWCVPWDUEVOWCQVPFUHZEUBZWDVOVPWFUEZWCVOEUIW
      GEUJFEUKULUMVOWEOPZWFWDUEWCVOWHQWFWDVSVTMRZGUCZUDZUEVSVTWEGUCZUDZUEZVSVTN
      RZGUCZUDZUEZVSVTWOUHZGUCZUDZUEZWDMNEWEWIWEUNZWKWMVSXCWJWLVTWIWEGUOUPUQWIW
      OUNZWKWQVSXDWJWPVTWIWOGUOUPUQWIWSUNZWKXAVSXEWJWTVTWIWSGUOUPUQWIEUNZWKWBVS
      XFWJWAVTWIEGUOUPUQWHWCWNFURZVSWCWMABCDFFGHIJLLUSUTVAWOOPZWRXBUEWHWEWOUBXH
      VSWQXAVSXHWPWTUDZWQXAUEABCDWOFGHIJNVBLUSWQXIXAVTWPWTVCVDVEVFVGVHVIXGVJVKV
      IVLVMVNUT $.
      $( [29-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description. $)
    inf3lem6 $p |- ( ( x =/= (/) /\ x C_ U. x ) -> F : om -1-1-> ~P x ) $=
      ( vv vu cv c0 wne cuni wss wa com cpw wf cfv wceq wi wral wf1 wcel wal 
      wo wn wpss visset inf3lem5 dfpss2 simprbi syl6 expdimp adantrl eqcom 
      notbii sylib adantrr jaod con2d wb word ordtri3 nnord syl2an adantl 
      sylibrd ex 19.21aivv r2al sylibr wfn crn crdg cres frfnom fneq1 mpbiri 
      ax-mp wrex fvelrnb eleq1 inf3lemd fvex elpw syl5cbi r19.23aiv syl6bi 
      ssrdv ancli df-f mpbir jctil dff13 ) AOZPQXAXARSTZUAXAUBZGUCZMOZGUDZNOZGU
      DZUEZXEXGUEZUFZNUAUGMUAUGZTUAXCGUHXBXLXDXBXEUAUIZXGUAUIZTZXKUFZNUJMUJXLXB
      XPMNXBXOXKXBXOTZXIXEXGUIZXGXEUIZUKZULZXJXQXTXIXQXRXIULZXSXBXNXRYBUFXMXBXN
      XRYBXBXNXRTXFXHUMZYBABCDXGXEGHIJNUNZMUNZUOYCXFXHSYBXFXHUPUQURUSUTXBXMXSYB
      UFXNXBXMXSYBXBXMXSTXHXFUMZYBABCDXEXGGHIJYEYDUOYFXHXFUEZULZYBYFXHXFSYHXHXF
      UPUQYGXIXHXFVAVBVCURUSVDVEVFXOXJYAVGZXBXEVHXGVHYIXMXNXEXGVIXEVJXGVJVKVLVM
      VNVOXKMNUAUAVPVQXDGUAVRZGVSZXCSZTZYJYMGHPVTUAWAZUEZYJJYOYJYNUAVRPHWBUAGYN
      WCWDWEYJYLYJNYKXCYJXGYKUIXFXGUEZMUAWFXGXCUIZMUAXGGWGYPYQMUAYPXFXCUIZYQXMX
      FXGXCWHXMXFXASYRABCDXEFGHIJYELWIXFXAXEGWJWKVQWLWMWNWOWPWEUAXCGWQWRWSMNUAX
      CGWTVQ $.
      $( [29-Oct-1996] $)

    $( Lemma for our Axiom of Infinity => standard Axiom of Infinity.  See
       ~ inf3 for detailed description.  In the proof, we invoke the Axiom of
       Replacement in the form of ~ funrnex . $)
    inf3lem7 $p |- ( ( x =/= (/) /\ x C_ U. x ) -> om e. _V ) $=
      ( cv c0 wne cuni wss wa com cpw wf1 cvv wcel inf3lem6 ccnv crn cdm wf 
      wceq f1f fdm syl dfdm4 syl5eqr wfun frn visset pwex ssex 3syl df-rn 
      syl5eqelr df-f1 simprbi funrnex sylc eqeltrrd ) AMZNOVHVHPQRSVHTZGUAZSUBU
      CABCDEFGHIJKLUDVJGUEZUFZSUBVJGUGZSVLVJSVIGUHZVMSUISVIGUJZSVIGUKULGUMUNVJV
      KUGZUBUCVKUOZVLUBUCVJGUFZUBVPVJVNVRVIQVRUBUCVOSVIGUPVRVIVHAUQURUSUTGVAVBV
      JVNVQSVIGVCVDUBVKVEVFVGUL $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y z w $.
    inf3.1 $e |- E. x ( x =/= (/) /\ x C_ U. x ) $.
    $( Note: the special <HTML> tag is handled by mmwtex.c. $)
    $( Our Axiom of Infinity ~ ax-inf implies the standard Axiom of Infinity.
       The hypothesis is a variant of our Axiom of Infinity provided by
       ~ inf2 , and the conclusion is the version of the Axiom of Infinity
       shown as Axiom 7 in [TakeutiZaring] p. 43.  (Other standard versions are
       proved later as ~ axinf2 and ~ zfinf2 .)  The main proof is provided by
       ~ inf3lema through ~ inf3lem7 , and this final piece eliminates the
       auxiliary hypothesis of ~ inf3lem7 .  This proof is due to
       Ian Sutherland, Richard Heck, and Norman Megill and was posted
       on Usenet as shown below.  Although the result is not new, the authors
       were unable to find a published proof.
       <HTML>
       <PRE>
       (As posted to sci.logic on 30-Oct-1996, with annotations added.)

       Theorem:  The statement "There exists a non-empty set that is a subset
       of its union" implies the Axiom of Infinity.

       Proof:  Let X be a nonempty set which is a subset of its union; the
       latter
       property is equivalent to saying that for any y in X, there exists a z
       in X
       such that y is in z.

       Define by finite recursion a function F:omega-->(power X) such that
       F_0 = 0  (See ~ inf3lemb .)
       F_n+1 = {y&lt;X | y^X subset F_n}  (See ~ inf3lemc .)
       Note: ^ means intersect, &lt; means \in ("element of").
       (Finite recursion as typically done requires the existence of omega;
       to avoid this we can just use transfinite recursion restricted to omega.
       F is a class-term that is not necessarily a set at this point.)

       Lemma 1.  F_n subset F_n+1.  (See ~ inf3lem1 .)
       Proof:  By induction:  F_0 subset F_1.  If y &lt; F_n+1, then y^X subset
       F_n,
       so if F_n subset F_n+1, then y^X subset F_n+1, so y &lt; F_n+2.

       Lemma 2.  F_n =/= X.  (See ~ inf3lem2 .)
       Proof:  By induction:  F_0 =/= X because X is not empty.  Assume F_n =/=
       X.
       Then there is a y in X that is not in F_n.  By definition of X, there is
       a
       z in X that contains y.  Suppose F_n+1 = X.  Then z is in F_n+1, and z^X
       contains y, so z^X is not a subset of F_n, contrary to the definition of
       F_n+1.

       Lemma 3.  F_n =/= F_n+1.  (See ~ inf3lem3 .)
       Proof:  Using the identity y^X subset F_n &lt;-> y^(X-F_n) = 0, we have
       F_n+1 = {y&lt;X | y^(X-F_n) = 0}.  Let q = {y&lt;X-F_n | y^(X-F_n) = 0}.
       Then q subset F_n+1.  Since X-F_n is not empty by Lemma 2 and q is the
       set of \in-minimal elements of X-F_n, by Foundation q is not empty, so q
       and therefore F_n+1 have an element not in F_n.

       Lemma 4.  F_n proper_subset F_n+1.  (See ~ inf3lem4 .)
       Proof:  Lemmas 1 and 3.

       Lemma 5.  F_m proper_subset F_n, m &lt; n.  (See ~ inf3lem5 .)
       Proof:  Fix m and use induction on n > m.  Basis: F_m proper_subset
       F_m+1
       by Lemma 4.  Induction:  Assume F_m proper_subset F_n.  Then since F_n
       proper_subset F_n+1, F_m proper_subset F_n+1 by transitivity of proper
       subset.

       By Lemma 5, F_m =/= F_n for m =/= n, so F is 1-1.  (See ~ inf3lem6 .)
       Thus the inverse of F is a function with range omega and domain a subset
       of power X, so omega exists by Replacement.  (See ~ inf3lem7 .)
       Q.E.D.
       </PRE> </HTML> $)
    inf3 $p |- om e. _V $=
      ( vy vz vw cv c0 wne cuni wss wa wex com cvv wcel cin crab wceq copab 
      crdg cres eqid visset inf3lem7 19.23aiv ax-mp ) AFZGHUGUGIJKZALMNOZBUHUIA
      ACDEUGUGDFEFUGPCFJEUGQRCDSZGTMUAZUJUJUBUKUBAUCZULUDUEUF $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y z w $.
    $( The statement "there exists a set that is a proper subset of its union"
       is equivalent to the Axiom of Infinity (shown on the right-hand side in
       the form of ~ omex .)  The left-hand side provides us with a very short
       way to express of the Axiom of Infinity using only elementary symbols.
       This proof of equivalence does not depend on the Axiom of Infinity. $)
    infeq5 $p |- ( E. x x C. U. x <-> om e. _V ) $=
      ( vy vz vw cv cuni wpss wex com cvv wcel c0 wne wss wa df-pss wceq unieq 
      uni0 syl6req eqtr mpdan necon3i anim1i ancoms sylbi eximi cin crab copab 
      crdg cres eqid visset inf3lem7 19.23aiv syl csn cdif difexg 0ex snid wn 
      disj4 disj3 bitr3i peano1 eleq2 mpbii eldif sylib simprd con4i ax-mp 
      unidif0 wlim limom limuni eqtr4i psseq2i mpbir psseq1 psseq2d bitrd 
      cla4egv mpi impbii ) AEZWHFZGZAHZIJKZWKWHLMZWHWINZOZAHWLWJWOAWJWNWHWIMZOW
      OWHWIPWPWNWOWPWMWNWHLWHWIWHLQZLWIQWHWIQWQWILFLWHLRSTWHLWIUAUBUCUDUEUFUGWO
      WLAABCDWHWHCEDEWHUHBENDWHUIQBCUJZLUKIULZWRWRUMWSUMAUNZWTUOUPUQWLILURZUSZJ
      KZWKIXAJUTXCXBXBFZGZWKXEXBIGZLXAKZXFLVAVBXFXGXFVCZIXBQZXGVCZXHIXAUHLQXIIX
      AVDIXAVEVFXILIKZXJXILXBKZXKXJOXIXKXLVGIXBLVHVILIXAVJVKVLUFVMVNXDIXBXDIFZI
      IVOIVPIXMQVQIVRVNVSVTWAWJXEAXBJWHXBQZWJXBWIGXEWHXBWIWBXNWIXDXBWHXBRWCWDWE
      WFUQWG $.
      $( [23-Mar-2004] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Infinity
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Introduce the Axiom of Infinity
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$(
         +-------------------------------------------------+
         |         "Cantor's Paradise" begins here!        |
         | (i.e. we start to assume the Axiom of Infinity) |
         +-------------------------------------------------+
$)

  ${
    $d x y z w $.
    $( Axiom of Infinity.  An axiom of Zermelo-Fraenkel set theory.  This axiom
       is the gateway to "Cantor's paradise" (an expression coined by
       Hilbert).  It asserts that given a starting set ` x ` , an infinite set
       ` y ` built from it exists.  Although our version is apparently not
       given in the literature, it is similar to, but slightly shorter than,
       the Axiom of Infinity in [FreydScedrov] p. 283 (see ~ inf1 and
       ~ inf2 ).  More standard versions, which essentially state that there
       exists a set containing all the natural numbers, are shown as ~ zfinf2
       and ~ omex and are based on the (nontrivial) proof of ~ inf3 .  Our
       version has the advantage that when expanded to primitives, it has fewer
       symbols than the standard version ~ ax-inf2 .  Theorem ~ inf0 shows the
       reverse derivation of our axiom from a standard one.  Theorem ~ inf5
       shows a very short way to state this axiom.

       An interesting property of our version is that, unlike the standard
       version, it does not assert the independent existence of any set; it
       needs a starting set ` x ` .  Since none of our other ZFC axioms assert
       the independent existence of any set, we would need to add an axiom of
       existence such as Axiom 0 of [Kunen] p. 10 if we were to use a "free
       logic" predicate calculus that (unlike ours) does not assert (as we do
       with ~ ax-4 and ~ ax-9 ) that at least one thing exists.

       The standard version of Infinity ~ ax-inf2 requires this axiom along
       with Regularity ~ ax-reg for its derivation (as theorem ~ axinf2
       below).  In order to more easily identify the normal uses of Regularity,
       we will usually reference ~ ax-inf2 instead of this one.  The derivation
       of this axiom from ~ ax-inf2 is shown by theorem ~ axinf . $)
    ax-inf $a |- E. y ( x e. y /\
                 A. z ( z e. y -> E. w ( z e. w /\ w e. y ) ) ) $.

    $( Axiom of Infinity expressed with fewest number of different
       variables. $)
    zfinf $p |- E. x ( y e. x /\
                 A. y ( y e. x -> E. z ( y e. z /\ z e. x ) ) ) $=
      ( vw cv wcel wa wex wi wal ax-inf wceq elequ1 anbi1d exbidv imbi12d 
      cbvalv anbi2i exbii mpbi ) BEZAEZFZDEZUBFZUDCEZFZUFUBFZGZCHZIZDJZGZAHUCUC
      UAUFFZUHGZCHZIZBJZGZAHBADCKUMUSAULURUCUKUQDBUDUALZUEUCUJUPDBAMUTUIUOCUTUG
      UNUHDBCMNOPQRST $.
      $( [14-Aug-2003] $)

    $( A standard version of Axiom of Infinity, expanded to primitives, derived
       from our version of Infinity ~ ax-inf and Regularity ~ ax-reg .

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-inf2 below so that the ordinary uses of Regularity can be more
       easily identified. $)
    axinf2 $p |- E. x ( E. y ( y e. x /\ A. z -. z e. y ) /\ A. y ( y e. x ->
          E. z ( z e. x /\ A. w ( w e. z <-> ( w e. y \/ w = y ) ) ) ) ) $=
      ( c0 cv wcel csuc wi wal wa wex wn wceq wo wb com peano1 peano2 ax-gen 
      zfinf inf2 inf3 eleq2 imbi12d albidv anbi12d cla4ev mp2an wrex 0el 
      df-rex bitri sucel imbi2i albii anbi12i exbii mpbi ) EAFZGZBFZUTGZVBHZUTG
      ZIZBJZKZALZVCCFZVBGMCJZKBLZVCVJUTGDFZVJGVMVBGVMVBNOPDJZKCLZIZBJZKZALEQGZV
      BQGZVDQGZIZBJZVIRWBBVBSTVHVSWCKAQAABCABCUAUBUCUTQNZVAVSVGWCUTQEUDWDVFWBBW
      DVCVTVEWAUTQVBUDUTQVDUDUEUFUGUHUIVHVRAVAVLVGVQVAVKBUTUJVLBCUTUKVKBUTULUMV
      FVPBVEVOVCVEVNCUTUJVOCDVBUTUNVNCUTULUMUOUPUQURUS $.
      $( [6-May-2008] $) $( [3-Nov-1996] $)

    $( A standard version of Axiom of Infinity of ZF set theory.  In English,
       it says: there exists a set that contains the empty set and the
       successors of all of its members.  Theorem ~ zfinf2 shows it converted
       to abbreviations.  This axiom was derived as theorem ~ axinf2 above,
       using our version of Infinity ~ ax-inf and the Axiom of Regularity
       ~ ax-reg .  We will reference ~ ax-inf2 instead of ~ axinf2 so that the
       ordinary uses of Regularity can be more easily identified.  The reverse
       derivation of ~ ax-inf from ~ ax-inf2 is shown by theorem ~ axinf . $)
    ax-inf2 $a |- E. x ( E. y ( y e. x /\ A. z -. z e. y ) /\ A. y ( y e. x ->
          E. z ( z e. x /\ A. w ( w e. z <-> ( w e. y \/ w = y ) ) ) ) ) $.
  $}

  ${
    $d x y z w $.
    $( A standard version of the Axiom of Infinity, using definitions to
       abbreviate.  Axiom Inf of [BellMachover] p. 472.  (See ~ ax-inf2 for the
       unabbreviated version.) $)
    zfinf2 $p |- E. x ( (/) e. x /\ A. y e. x suc y e. x ) $=
      ( vz vw c0 cv wcel csuc wral wa wex wn wal wceq wo wb wi ax-inf2 wrex 
      0el df-rex bitri sucel ralbii df-ral anbi12i exbii mpbir ) EAFZGZBFZHUIGZ
      BUIIZJZAKUKUIGZCFZUKGLCMZJBKZUOUPUIGDFZUPGUSUKGUSUKNOPDMZJCKZQBMZJZAKABCD
      RUNVCAUJURUMVBUJUQBUISURBCUITUQBUIUAUBUMVABUIIVBULVABUIULUTCUISVACDUKUIUC
      UTCUIUAUBUDVABUIUEUBUFUGUH $.
      $( [4-Mar-2004] $) $( [30-Aug-1993] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Existence of omega (the set of natural numbers)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( The existence of omega (the class of natural numbers).  Axiom 7 of
       [TakeutiZaring] p. 43.  This theorem is proved assuming the Axiom of
       Infinity and in fact is equivalent to it, as shown by the reverse
       derivation ~ inf0 .

       A finitist (someone who doesn't believe in infinity) could, without
       contradiction, replace the Axiom of Infinity by its denial
       ` -. om e. _V ` ; this would lead to ` om = On ` (the proper class of
       ordinals) by ~ omon and ~ onprc .  The finitist could still develop
       natural number, integer, and rational number arithmetic but would be
       denied the real numbers (as well as much of the rest of mathematics).
       In deference to the finitist, much of our development is done, when
       possible, without invoking the Axiom of Infinity; an example is Peano's
       axioms ~ peano1 through ~ peano5 (which many textbooks prove more easily
       assuming Infinity). $)
    omex $p |- om e. _V $=
      ( vx vy com cv wss wex cvv wcel c0 csuc wral wa zfinf2 wi peano5 ax-1 
      ralimi2 sylan2 eximi ax-mp visset ssex 19.23aiv ) CADZEZAFZCGHZIUDHZBDZJU
      DHZBUDKZLZAFUFABMULUEAUHUIUDHUJNZBCKUEUKBUDOUJUMBUDCUMUICHPQRSTUEUGACUDAU
      AUBUCT $.
      $( [6-Aug-1994] $)
  $}

  ${
    $d x y z w $.
    $( The first version of the Axiom of Infinity ~ ax-inf proved from the
       second version ~ ax-inf2 . $)
    axinf $p |- E. y ( x e. y /\
                 A. z ( z e. y -> E. w ( z e. w /\ w e. y ) ) ) $=
      ( omex inf0 ) ABCDEF $.
      $( [24-Apr-2009] $)
  $}

  ${
    $d x y z w $.
    $( The statement "there exists a set that is a proper subset of its union"
       is equivalent to the Axiom of Infinity (see theorem ~ infeq5 ).  This
       provides us with a very compact way to express of the Axiom of Infinity
       using only elementary symbols. $)
    inf5 $p |- E. x x C. U. x $=
      ( cv cuni wpss wex com cvv wcel omex infeq5 mpbir ) ABZLCDAEFGHIAJK $.
      $( [3-Jun-2005] $)
  $}

  $( Omega is an ordinal number. $)
  omelon $p |- om e. On $=
    ( com con0 wcel wceq cvv omex onprc eleq1 mtbiri mt2 omon ori mt3 ) ABCZABD
    ZOAECZFOPBECGABEHIJNOKLM $.
    $( [10-May-1998] $)

  ${
    $d x y z $.
    $( The class of natural numbers omega can be defined as the smallest
       "inductive set," which is valid provided we assume the Axiom of
       Infinity.  Definition 6.3 of [Eisenberg] p. 82. $)
    dfom3 $p |- om = |^| { x | ( (/) e. x /\ A. y e. x suc y e. x ) } $=
      ( vz com c0 cv wcel csuc wral wa cab cint wi wss 0ex elintab simpl 
      mpgbir wal wceq suceq eleq1d rcla4cv adantl a2i alimi visset sucex 
      3imtr4i a1i rgen peano5 mp2an peano1 peano2 omex eleq2 raleqbi1dv 
      anbi12d imbi12d cla4v sylbi mp2ani ssriv eqssi ) DEAFZGZBFZHZVFGZBVFIZJZA
      KLZEVMGZCFZVMGZVOHZVMGZMZCDIDVMNVNVLVGMAVLAEOPVGVKQRVSCDVSVODGZVLVOVFGZMZ
      ASZVLVQVFGZMZASVPVRWBWEAVLWAWDVKWAWDMVGVJWDBVOVFVHVOTVIVQVFVHVOUAUBUCUDUE
      UFVLAVOCUGZPZVLAVQVOWFUHPUIUJUKCVMULUMCVMDVPEDGZVIDGZBDIZVTUNWIBDVHUOUKVP
      WCWHWJJZVTMZWGWBWLADUPVFDTZVLWKWAVTWMVGWHVKWJVFDEUQVJWIBVFDVFDVIUQURUSVFD
      VOUQUTVAVBVCVDVE $.
      $( [27-Jun-2004] $) $( [6-Aug-1994] $)
  $}

  ${
    $d A x $.
    $( A simplification of ~ elom assuming the Axiom of Infinity. $)
    elom3 $p |- ( A e. om <-> A. x ( Lim x -> A e. x ) ) $=
      ( com wcel cv wlim wi wal word wa elomg ibi simprd limom omex wceq limeq 
      eleq2 imbi12d cla4v mpi impbii ) BCDZAEZFZBUDDZGZAHZUCBIZUHUCUIUHJABCKLMU
      HCFZUCNUGUJUCGACOUDCPUEUJUFUCUDCQUDCBRSTUAUB $.
      $( [30-May-2003] $)
  $}

  ${
    $d x y $.
    $( A simplification of ~ df-om assuming the Axiom of Infinity. $)
    dfom4 $p |- om = { x | A. y ( Lim y -> x e. y ) } $=
      ( cv wlim wcel wi wal com elom3 abbi2i ) BCZDACZKEFBGAHBLIJ $.
      $( [30-May-2003] $)
  $}

  $( Ordinal addition is not commutative.  This theorem shows a
     counterexample.  Remark in [TakeutiZaring] p. 60. $)
  oancom $p |- ( 1o +o om ) =/= ( om +o 1o ) $=
    ( c1o com coa co wcel wne con0 wceq omelon 1onn oaabslem mp2an csuc omex 
    sucid oa1suc ax-mp eleqtrri eqeltri wss wa wb 1on oacl onelpss simprbi ) AB
    CDZBACDZEZUGUHFZUGBUHBGEZABEUGBHIJAKLBBMZUHBNOUKUHULHIBPQRSUIUGUHTZUJUGGEZU
    HGEZUIUMUJUAUBAGEZUKUNUCIABUDLUKUPUOIUCBAUDLUGUHUELUFQ $.
    $( [10-Dec-2004] $)

  $( A set is strictly dominated by the class of natural numbers iff it is
     finite.  Theorem 42 of [Suppes] p. 151.  This theorem provides two
     equivalent ways to express " ` A ` is finite."  The Axiom of Infinity is
     used for the reverse implication. $)
  isfinite $p |- ( A ~< om <-> A e. Fin ) $=
    ( com csdm wbr cfn wcel isfinite2 cdom cen wn wa isfinite1 omex ensym 
    con3i anim2i brsdom sylibr syl impbii ) ABCDZAEFZAGUBABHDZBAIDZJZKZUAALUFUC
    ABIDZJZKUAUEUHUCUGUDABMNOPABQRST $.
    $( [22-Sep-2008] $) $( [24-Apr-2004] $)

  $( A natural number is strictly dominated by the set of natural numbers. $)
  nnsdom $p |- ( A e. om -> A ~< om ) $=
    ( com wcel cdom wbr cen wn wa csdm omsdomnn omex ensym con3i anim2i syl 
    brsdom sylibr ) ABCZABDEZABFEZGZHZABIERSBAFEZGZHUBAJUDUASTUCABKLMNOABPQ $.
    $( [28-Oct-2003] $)

  ${
    $d x y $.
    $( Omega is equinumerous to a proper subset of itself.  Example 13.2(4) of
       [Eisenberg] p. 216. $)
    omenps $p |- om ~~ ( om \ { (/) } ) $=
      ( com cvv wcel c0 csn cdif cen wbr omex limom limenpsi ax-mp ) ABCAADEFGH
      IABJKL $.
      $( [30-Jul-2003] $)
  $}

  $( The set of natural numbers is equinumerous to its successor. $)
  omensuc $p |- om ~~ suc om $=
    ( com cvv wcel csuc cen wbr omex limom limensuci ax-mp ) ABCAADEFGABHIJ $.
    $( [30-Oct-2003] $)

  ${
    $d x y A $.
    $( Any infinite ordinal is equinumerous to its successor.  Exercise 7 of
       [TakeutiZaring] p. 88. $)
    infensuc $p |- ( ( A e. On /\ om C_ A ) -> A ~~ suc A ) $=
      ( vx vy con0 wcel com wss csuc cen wbr omelon cv wceq id suceq breq12d 
      omensuc a1i wi csn cvv visset sucex en2sn mp2an wa cin c0 cun unen 
      df-suc 3brtr4g ex wn word eloni ordirr syl disjsn sylibr sucelon 3imtr4i 
      jca syl5 mpan2 com12 ad2antrr wlim wral limensuc mpan a1d tfindsg mpanl2 
      ) ADEFDEZFAGAAHZIJZKBLZVRHZIJZFFHZIJZCLZWCHZIJZWDWDHZIJZVQBCAFVRFMZVRFVSW
      AIWHNVRFOPVRWCMZVRWCVSWDIWINVRWCOPVRWDMZVRWDVSWFIWJNVRWDOPVRAMZVRAVSVPIWK
      NVRAOPWBVOQRWCDEZWEWGSVOFWCGZWEWLWGWEWCTZWDTZIJZWLWGSWCUAEWDUAEWPCUBZWCWQ
      UCWCWDUAUAUDUEWEWPUFZWCWNUGUHMZWDWOUGUHMZUFZWGWLWRXAWGWRXAUFWCWNUIWDWOUIW
      DWFIWCWDWNWOUJWCUKWDUKULUMWLWSWTWLWCWCEUNZWSWLWCUOXBWCUPWCUQURWCWCUSUTWDD
      EZWDWDEUNZWLWTXCWDUOXDWDUPWDUQURWCVAWDWDUSVBVCVDVEVFVGVRVHZVOUFFVRGZUFVTW
      MWESCVRVIXEVTVOXFVRUAEXEVTBUBVRUAVJVKVGVLVMVN $.
      $( [30-Oct-2003] $)
  $}


  ${
    $d x y z A $.
    $( Any unbounded subset of natural numbers is equinumerous to the set of
       all natural numbers.  This version of ~ unbnn eliminates its hypothesis
       by assuming the Axiom of Infinity. $)
    unbnn3 $p |- ( ( A C_ om /\ A. x e. om E. y e. A x e. y ) -> A ~~ om ) $=
      ( vz com wss cv wcel wrex wral cen wbr cvv wi omex ssex wa wceq sseq1 
      rexeq ralbidv anbi12d breq1 imbi12d visset unbnn vtoclg exp3a mpcom imp 
      ) CEFZAGBGHZBCIZAEJZCEKLZCMHZUKUNUONCEOPUPUKUNUODGZEFZULBUQIZAEJZQZUQEKLZ
      NUKUNQZUONDCMUQCRZVAVCVBUOVDURUKUTUNUQCESVDUSUMAEULBUQCTUAUBUQCEKUCUDABUQ
      DUEUFUGUHUIUJ $.
      $( [4-May-2005] $)
  $}

  ${
    $d x y z F $.
    $( Using the Axiom of Regularity in the form ~ zfregfr , show that there
       are no infinite descending ` e. ` -chains.  Proposition 7.34 of
       [TakeutiZaring] p. 44. $)
    noinfep $p |- ( F Fn om -> E. x e. om -. ( F ` suc x ) e. ( F ` x ) ) $=
      ( vz vy com wfn cv cep wbr wn crn wral wrex csuc cfv wcel cvv c0 wne cdm 
      wfun fndm omex syl6eqel fnfun funrnex sylc wceq peano1 eleq2 mpbiri ne0i 
      syl dm0rn0 necon3bii sylib wfr zfregfr wa wss ssid fri mpanr1 mpanl2 
      syl11anc wi wb fvelrnb adantr notbid eleq1 epel syl5bb rcla4va syl5bir 
      fnfvelrn adantlr simplr jca syl5 peano2 sylan2i com12 reximdva sylbid ex 
      com23 r19.23adv mpd ) BEFZCGZDGZHIZJZCBKZLZDWOMZAGZNZBOZWRBOZPZJZAEMZWJWO
      QPZWORSZWQWJBTZQPBUAXEWJXGEQEBUBZUCUDEBUEQBUFUGWJXGEUHZXFXHXIXGRSZXFXIRXG
      PZXJXIXKREPUIXGERUJUKXGRULUMXGRWORBUNUOUPUMXEWOHUQZXFWQWOURXEXLUSWOWOUTXF
      WQWOVADCWOWOQHVBVCVDVEWJWPXDDWOWJWPWLWOPZXDWJWPXMXDVFWJWPUSZXMXAWLUHZAEMZ
      XDWJXMXPVGWPAEWLBVHVIXNXOXCAEXOXNWREPZUSXCXOXNWSEPZXCXQXOWTWOPZWPUSZXCXNX
      RUSZXOXCWTWLPZJZXTXOXBYBXAWLWTUJVJWNYCCWTWOWKWTUHZWMYBYDWKWLPYBWMWKWTWLVK
      CDVLVMVJVNVOYAXSWPWJXRXSWPEWSBVPVQWJWPXRVRVSVTWRWAWBWCWDWEWFWGWHWI $.
      $( [26-Jan-2006] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Rank
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c R1 $. $( Cumulative hierarchy of sets function $)
  $c rank $. $( Rank function $)

  $( Extend class definition to include the cumulative hierarchy of sets
     function. $)
  cr1 $a class R1 $.

  $( Extend class definition to include rank function. $)
  crnk $a class rank $.

  ${
    $d x y z $.
    $( Define the cumulative hierarchy of sets function, using Takeuti and
       Zaring's notation ( ` R1 ` ).  Starting with the empty set, this
       function builds up layers of sets where the next layer is the power set
       of the previous layer (and the union of previous layers when the
       argument is a limit ordinal).  Using the Axiom of Regularity, we can
       show that any set whatsoever belongs to one of the layers of this
       hierarchy (see ~ tz9.13 ).  Our definition expresses Definition 9.9 of
       [TakeutiZaring] p. 76 in a closed form, from which we derive the
       recursive definition as theorems ~ r10 , ~ r1suc , and ~ r1lim .
       Theorem ~ r1val1 shows a recursive definition that works for all values,
       and theorems ~ r1val2 and ~ r1val3 show the value expressed in terms of
       rank.  Other notations for this function are _R_ with the argument as a
       subscript (Equation 3.1 of [BellMachover] p. 477), ` _V ` with a a
       subscript (Definition of [Enderton] p. 202), _M_ with a subscript
       (Definition 15.19 of [Monk1] p. 113), the capital Greek letter psi
       (Definition of [Mendelson] p. 281), and bold-face R (Definition 2.1 of
       [Kunen] p. 95). $)
    df-r1 $a |- R1 = rec ( { <. x , y >. | y = ~P x } , (/) ) $.

    $( Define the rank function.  See ~ rankval , ~ rankval2 , ~ rankval3 , or
       ~ rankval4 its value.  The rank is a kind of "inverse" of the cumulative
       hierarchy of sets function ` R1 ` : given a set, it returns an ordinal
       number telling us the smallest layer of the hierarchy to which the set
       belongs.  Based on Definition 9.14 of [TakeutiZaring] p. 79.  Theorem
       ~ rankid illustrates the "inverse" concept.  Another nice theorem
       showing the relationship is ~ rankr1a . $)
    df-rank $a |- rank =
          { <. x , y >. | y = |^| { z e. On | x e. ( R1 ` suc z ) } } $.
  $}

  ${
    $d x y z w v u $.  $d y z v A $.  $d y v u F $.
    trcl.1 $e |- A e. _V $.
    trcl.2 $e |- F =
               ( rec ( { <. z , w >. | w = ( z u. U. z ) } , A ) |` om ) $.
    trcl.3 $e |- C = U_ y e. om ( F ` y ) $.
    $( For any set ` A ` , show the properties of its transitive closure
       ` C ` .  Similar to Theorem 9.1 of [TakeutiZaring] p. 73 except that we
       show an explicit expression for the transitive closure rather than just
       its existence.  See ~ tz9.1 for an abbreviated version showing
       existence. $)
    trcl $p |- ( A C_ C /\ Tr C /\ A. x ( ( A C_ x /\ Tr x ) -> C C_ x ) ) $=
      ( vv vu wss wtr cv wa wi wal com cfv ciun wrex c0 wcel peano1 cuni cun 
      wceq copab crdg cres fveq1i cvv fr0g ax-mp eqtr2i eqimssi fveq2 sseq2d 
      rcla4ev mp2an ssiun sseqtr4i dftr2 csuc eliun anbi2i r19.42v bitr4i 
      ssun2 fvex uniex unex ax-17 hbopab1 hbrdg hbres hbxfr hbfv hbuni hbun 
      unieq uneq12 mpdan frsucopab mpan2 mpbiri sseld elunii syl5 reximia 
      sylbi peano2 eleq2d ex syl r19.23aiv cbvrexv sylibr ax-gen mpgbir wb 
      treq mpbir wral sseq1d eqtri sseq1i biimpri adantr uniss sstr2 df-tr 
      syl5ib anc2li unss syl6ib biimprd syl9r com23 adantld finds2 com12 
      r19.21aiv cbviunv iunss bitri 3pm3.2i ) EFMFNZEAOZMZYJNZPZFYJMZQZAREBSBOZ
      GTZUAZFEYQMZBSUBZEYRMUCSUDEUCGTZMZYTUEEUUAUUAUCDOCOZUUCUFZUGZUHZCDUIZEUJZ
      SUKZTZEUCGUUIIULZEUMUDUUJEUHHEUMUUGUNUOZUPUQYSUUBBUCSYPUCUHYQUUAEYPUCGURU
      SUTVABSYQEVBUOJVCYIYRNZUUMKOZLOZUDZUUOYRUDZPZUUNYRUDZQZLRKKLYRVDUUTLUURUU
      NYPVEZGTZUDZBSUBZUUSUURUUPUUOYQUDZPZBSUBZUVDUURUUPUVEBSUBZPUVGUUQUVHUUPBU
      UOSYQVFVGUUPUVEBSVHVIUVFUVCBSYPSUDZUUNYQUFZUDUVCUVFUVIUVJUVBUUNUVIUVJUVBM
      UVJYQUVJUGZMUVJYQVJUVIUVBUVKUVJUVIUVKUMUDUVBUVKUHYQUVJYPGVKZYQUVLVLVMCDKE
      YPUUEUVKUMGUUNEUDCVNZUUNYPUDCVNZCKYQUVJCKYPGCKGUUIICKUUHSCKEUUGUUFCDKVOUV
      MVPUUNSUDZCVNVQVRUVNVSZCKYQUVPVTWAIUUCYQUHUUDUVJUHUUEUVKUHUUCYQWBUUCYQUUD
      UVJWCWDWEWFZUSWGWHUUNUUOYQWIWJWKWLUVDUUNYQUDZBSUBZUUSUVDUUNUUOGTZUDZLSUBZ
      UVSUVCUWBBSUVIUVASUDZUVCUWBQYPWMUWCUVCUWBUWAUVCLUVASUUOUVAUHUVTUVBUUNUUOU
      VAGURWNUTWOWPWQUVRUWABLSYPUUOUHYQUVTUUNYPUUOGURWNWRWSBUUNSYQVFWSWPWTXAFYR
      UHYIUUMXBJFYRXCUOXDYOAYMUUNGTZYJMZKSXEZYNYMUWEKSUVOYMUWEUWEUUAYJMZYQYJMZU
      VBYJMZYMKBUUNUCUHUWDUUAYJUUNUCGURXFUUNYPUHUWDYQYJUUNYPGURXFUUNUVAUHUWDUVB
      YJUUNUVAGURXFYKUWGYLUWGYKUUAEYJUUAUUJEUUKUULXGXHXIXJUVIYLUWHUWIQYKUVIUWHY
      LUWIUWHYLUVKYJMZUVIUWIUWHYLUWHUVJYJMZPUWJUWHYLUWKUWHUVJYJUFZMZYLUWKQYQYJX
      KUWMUWLYJMUWKYLUVJUWLYJXLYJXMXNWPXOYQUVJYJXPXQUVIUWIUWJUVIUVBUVKYJUVQXFXR
      XSXTYAYBYCYDYNKSUWDUAZYJMUWFFUWNYJFYRUWNJBKSYQUWDYPUUNGURYEXGXHKSUWDYJYFY
      GWSWTYH $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d A x y z w v $.
    tz9.1.1 $e |- A e. _V $.
    $( Every set has a transitive closure (smallest transitive extension).
       Theorem 9.1 of [TakeutiZaring] p. 73.  See ~ trcl for an explicit
       expression for the transitive closure.  Apparently open problems are
       whether this theorem can be proved without the Axiom of Infinity; if
       not, then whether it implies Infinity; and if not, what is the
       "property" that Infinity has that the other axioms don't have that is
       weaker than Infinity itself?

       (Added 22-Mar-2011) The following article seems to answer the first
       question, that it can't be proved without Infinity, in the affirmative:
       Mancini, Antonella and Zambella, Domenico (2001).  "A note on recursive
       models of set theories." _Notre Dame Journal of Formal Logic_,
       42(2):109-115.  (Thanks to Scott Fenton.) $)
    tz9.1 $p |- E. x ( A C_ x /\ Tr x
                /\ A. y ( ( A C_ y /\ Tr y ) -> x C_ y ) ) $=
      ( vz vv vw com cv cuni cun wceq copab crdg cres cfv ciun wss wtr wa wi 
      wal w3a wex eqid trcl omex fvex iunex sseq2 treq sseq1 imbi2d albidv 
      3anbi123d cla4ev ax-mp ) CEHEIZFIGIZUSJKLGFMCNHOZPZQZRZVBSZCBIZRVESTZVBVE
      RZUAZBUBZUCZCAIZRZVKSZVFVKVERZUAZBUBZUCZAUDBEGFCVBUTDUTUEVBUEUFVQVJAVBEHV
      AUGURUTUHUIVKVBLZVLVCVMVDVPVIVKVBCUJVKVBUKVRVOVHBVRVNVGVFVKVBVEULUMUNUOUP
      UQ $.
      $( [22-Mar-2011] $) $( [15-Sep-2003] $)
  $}

  ${
    $d x y z w A $.
    $( The strong form of the Axiom of Regularity, which does not require that
       ` A ` be a set.  Axiom 6' of [TakeutiZaring] p. 21.  The proof makes use
       of a special case of Proposition 9.4 of [TakeutiZaring] p. 75. $)
    zfregs $p |- ( A =/= (/) -> E. x e. A ( x i^i A ) = (/) ) $=
      ( vz vy vw c0 wne cv wcel wex cin wceq wrex n0 csn wss wtr wa wi wal w3a 
      snex tz9.1 trel inass incom ineq2i eqtri eleq2i elin bitr2i ne0i sylbi 
      ex syl6 exp3a com34 imp3a inss1 sseli ancri syl5 19.23adv syl5ib com23 
      imp necon4d anim2d expimpd anbi1i anass bitri reximdv2 visset inex1 
      zfreg2 snssi anim2i ssin snss bitr4i sylib syl impcom 3adant3 19.23aiv 
      ax-mp ) BFGCHZBIZCJAHZBKZFLZABMZCBNWIWMCWHOZDHZPZWOQZWNEHZPWRQRWOWRPSETZU
      AZDJWIWMSZDEWNWHUBUCWTXADWPWQXAWSWQWPXAWQWPWIWMWQWOBKZFGZWMWPWIRZWQXBWJKZ
      FLZAXBMWMXCWQXFWLAXBBWQWJWOIZWJBIZXFRZRZXHWLRZWJXBIZXFRZWQXGXIXKWQXGRZXFW
      LXHXNWKFXEFWQXGWKFGZXEFGZSWQXOXGXPWQWRWKIZEJXGXPSZXOWQXQXREWQWRWJIZXQRXRX
      QWQXSXQXRWQXSXGXQXPWQXSXGXQXPSZWQXSXGRWRWOIZXTWOWRWJUDYAXQXPYAXQRZWRXEIZX
      PYCWRWOWKKZIYBXEYDWRXEWOBWJKZKYDWOBWJUEYEWKWOBWJUFUGUHUIWRWOWKUJUKXEWRULU
      MUNUOUPUQURXQXSWKWJWRWJBUSUTVAVBVCEWKNVDVEVFVGVHVIXMXGXHRZXFRXJXLYFXFWJWO
      BUJVJXGXHXFVKVLVDVMAXBWOBDVNVOVPVBXDWHXBIZXCXDWPWNBPZRZYGWIYHWPWHBVQVRYIW
      NXBPYGWNWOBVSWHXBCVNVTWAWBXBWHULWCVBUPWDWEWFWGWFUM $.
      $( [12-Apr-2007] $) $( [17-Sep-2003] $)
  $}

  ${
    $d x y A $.
    $( Alternate strong form of the Axiom of Regularity.  Not every element of
       a non-empty class contains some element of that class.  This proof was
       automatically generated from the virtual deduction proof ~ zfregs2VD
       using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    zfregs2 $p |- ( A =/= (/) -> -. A. x e. A E. y ( y e. A /\ y e. x ) ) $=
      ( c0 wne cv wcel wel wa wex wn wral wrex wi wal cin wceq zfregs incom 
      eqeq1i rexbii sylib disj1 alinexa dfrex2 notnot2 notnot1 impbii ralbii 
      notbii ) CDEZBFCGZBAHZIBJZKZKZACLZKZUNACLZKUKUOACMZURUKULUMKNBOZACMZUTUKC
      AFZPZDQZACMZVBUKVCCPZDQZACMVFACRVHVEACVGVDDVCCSTUAUBVEVAACBCVCUCUAUBVAUOA
      CULUMBUDUAUBUOACUEUBUQUSUPUNACUPUNUNUFUNUGUHUIUJUB $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Lemma for ~ en3lp .  This proof was automatically generated from the
       virtual deduction proof ~ en3lplem1VD using a translation program.
       (Contributed by Alan Sare, 24-Oct-2011) $)
    en3lplem1 $p |- ( ( A e. B /\ B e. C /\ C e. A ) ->
                    ( x = A -> E. y ( y e. { A , B , C } /\ y e. x ) ) ) $=
      ( wcel w3a cv wceq ctp wa wex eleq2 simp3 syl5cbir elex22 tpid3g 
      3ad2ant3 sylan ex syld ) CDFZDEFZECFZGZAHZCIZEUFFZBHZCDEJZFUIUFFKBLZUGUHU
      DUEUFCEMUBUCUDNOUEUHUKEUJFZUHUKUEBEUJUFPUDUBULUCECCDQRSTUA $.
      $( [28-Oct-2011] $)

    $( Lemma for ~ en3lp .  This proof was automatically generated from the
       virtual deduction proof ~ en3lplem2VD using a translation program.
       (Contributed by Alan Sare, 24-Oct-2011.) $)
    en3lplem2 $p |- ( ( A e. B /\ B e. C /\ C e. A ) -> ( x e. { A , B , C }
                    -> E. y ( y e. { A , B , C } /\ y e. x ) ) ) $=
      ( wcel w3a cv ctp wel wa wex wceq wo wi en3lplem1 3comr a1d tprot eleq2i 
      anbi1i exbii bicomi syl8ib jao sylsyld imp 3coml w3o cab idd dftp2 
      syl6ib abid df-3or syl3c ex ) CDFZDEFZECFZGZAHZCDEIZFZBHZVCFZBAJZKZBLZVAV
      DKVBCMZVBDMZNZVIOZVBEMZVIOZVLVNNZVIVAVDVMVAVJVIOVDVKVIOVMABCDEPVAVDVKVEDE
      CIZFZVGKZBLZVIVAVKVTOZVDUSUTURWAABDECPQRVIVTVHVSBVFVRVGVCVQVECDESTUAUBUCU
      DVJVIVKUEUFUGVAVDVOVAVDVNVEECDIZFZVGKZBLZVIVAVNWEOZVDUTURUSWFABECDPUHRWDV
      HBWCVFVGWBVCVEECDSTUAUBUDUGVAVDVPVAVDVJVKVNUIZVPVAVDVBWGAUJZFZWGVAVDVDWIV
      AVDUKVCWHVBACDEULTUMWGAUNUMVJVKVNUOUMUGVLVIVNUEUPUQ $.
      $( [28-Oct-2011] $)

    $( No class has 3-cycle membership loops.  This proof was automatically
       generated from the virtual deduction proof ~ en3lpVD using a translation
       program.  (Contributed by Alan Sare, 24-Oct-2011.) $)
    en3lp $p |- -. ( A e. B /\ B e. C /\ C e. A ) $=
      ( vy vx wcel w3a wn ctp c0 wceq noel eleq2 mtbiri tpid3g nsyl simp3 wne 
      cv wel wa wex wral zfregs2 wi wal en3lplem2 19.21aiv df-ral sylibr 
      pm2.61ine ) ABFZBCFZCAFZGZHABCIZJUPJKZUNUOUQCUPFZUNUQURCJFCLUPJCMNCAABOPU
      LUMUNQPUPJRDSUPFDETUADUBZEUPUCZUOEDUPUDUOESUPFUSUEZEUFUTUOVAEEDABCUGUHUSE
      UPUIUJPUK $.
      $( [28-Oct-2011] $)
  $}

  ${
    $d x y z A $.
    $( Set (epsilon) induction.  Theorem 5.22 of [TakeutiZaring] p. 21. $)
    setind $p |- ( A. x ( x C_ A -> x e. A ) -> A = _V ) $=
      ( vy cv wss wcel wi wal cvv cdif c0 wceq cin wrex wn sseq1 eleq1 imbi12d 
      a4v ssindif0 syl5ibr eldifn nsyli imp nrexdv zfregs necon1bi syl vdif0 
      sylibr ) ADZBEZUKBFZGZAHZIBJZKLZBILUOCDZUPMKLZCUPNZOUQUOUSCUPUOURUPFZUSOU
      OUSURBFZVAUOURBEZVBUSUNVCVBGACUKURLULVCUMVBUKURBPUKURBQRSURBTUAURIBUBUCUD
      UEUTUPKCUPUFUGUHBUIUJ $.
      $( [17-Sep-2003] $)
  $}

  ${
    $d x A $.
    $( Set (epsilon) induction, stated compactly.  Given as a homework problem
       in 1992 by George Boolos (1940-1996). $)
    setind2 $p |- ( ~P A C_ A -> A = _V ) $=
      ( vx cpw wss cv wcel wi wal cvv wceq dfss2 visset elpw imbi1i albii 
      bitri setind sylbi ) ACZADZBEZADZUAAFZGZBHZAIJTUASFZUCGZBHUEBSAKUGUDBUFUB
      UCUAABLMNOPBAQR $.
      $( [17-Sep-2003] $)
  $}

  ${
    $d x y $.
    $( The cumulative hierarchy of sets function is a function on the class of
       ordinal numbers. $)
    r1fnon $p |- R1 Fn On $=
      ( vy vx cr1 con0 wfn cv cpw wceq copab c0 crdg rdgfnon df-r1 fneq1i 
      mpbir ) CDEAFBFGHBAIZJKZDEJPLDCQBAMNO $.
      $( [5-Oct-2003] $)

    $( Value of the cumulative hierarchy of sets function at ` (/) ` .  Part of
       Definition 9.9 of [TakeutiZaring] p. 76. $)
    r10 $p |- ( R1 ` (/) ) = (/) $=
      ( vy vx c0 cr1 cfv cv cpw wceq copab crdg df-r1 fveq1i 0ex rdg0 eqtri ) 
      CDECAFBFGHBAIZCJZECCDQBAKLCPMNO $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x y z A $.
    $( Value of the cumulative hierarchy of sets function at a successor
       ordinal.  Part of Definition 9.9 of [TakeutiZaring] p. 76. $)
    r1suc $p |- ( A e. On -> ( R1 ` suc A ) = ~P ( R1 ` A ) ) $=
      ( vx vy vz con0 wcel cr1 cfv cpw cvv csuc wceq fvex pwex c0 cv ax-17 
      df-r1 pweq rdgsucopab mpan2 ) AEFAGHZIZJFAKGHUCLUBAGMNBCDOABPZIUCJGDPZOFB
      QUEAFBQUEUCFBQBCRUDUBSTUA $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x y z A $.
    $( Value of the cumulative hierarchy of sets function at a limit ordinal.
       Part of Definition 9.9 of [TakeutiZaring] p. 76. $)
    r1lim $p |- ( ( A e. B /\ Lim A ) -> ( R1 ` A ) = U_ x e. A ( R1 ` x ) ) $=
      ( vz vy wcel wlim wa cv cpw wceq copab c0 crdg cfv ciun cr1 rdglim2a 
      df-r1 fveq1i a1i iuneq2i 3eqtr4g ) BCFBGHBDIEIJKEDLZMNZOABAIZUEOZPBQOABUF
      QOZPAMBCUDRBQUEEDSZTABUHUGUHUGKUFBFUFQUEUITUAUBUC $.
      $( [4-Oct-2003] $)
  $}

  ${
    $d x y z A $.
    $( The cumulative hierarchy of sets is transitive.  Lemma 7T of [Enderton]
       p. 202. $)
    r1tr $p |- Tr ( R1 ` A ) $=
      ( vx vy vz con0 wcel cr1 cfv wtr cv c0 csuc wceq wb fveq2 treq syl tr0 
      r10 ax-mp mpbir wa wss wral cpw r1suc eleq2d visset elpw syl6bb adantr 
      ssel wi dftr4 sylbi biimprd sylan9r ssrdv ex sylbid r19.21aiv dftr3 
      sylibr wlim wrex ciun cvv r1lim mpan eliun biimpi syl6bi hbra1 ra4 trss 
      syl6 reximdai sylan9 sseq2d ssiun syl5bir syld tfinds wn cdm wfn r1fnon 
      fndm eleq2i notbii ndmfv sylbir mpbiri pm2.61i ) AEFZAGHZIZBJZGHZIZKGHZIZ
      CJZGHZIZXCLZGHZIZWQBCAWRKMWSXAMWTXBNWRKGOWSXAPQWRXCMWSXDMWTXENWRXCGOWSXDP
      QWRXFMWSXGMWTXHNWRXFGOWSXGPQWRAMWSWPMWTWQNWRAGOWSWPPQXBKIZRXAKMXBXINSXAKP
      TUAXCEFZXEXHXJXEUBZWRXGUCZBXGUDXHXKXLBXGXKWRXGFZWRXDUCZXLXJXMXNNXEXJXMWRX
      DUEZFXNXJXGXOWRXCUFZUGWRXDBUHZUIUJUKXKXNXLXKXNUBDWRXGXNDJZWRFXRXDFZXKXRXG
      FZWRXDXRULXEXSXRXOFZXJXTXEXDXOUCXSYAUMXDUNXDXOXRULUOXJXTYAXJXGXOXRXPUGUPU
      QUQURUSUTVABXGVBVCUSWRVDZXECWRUDZWTYBYCUBZXRWSUCZDWSUDWTYDYEDWSYDXRWSFZXR
      XDUCZCWRVEZYEYBYFXSCWRVEZYCYHYBYFXRCWRXDVFZFZYIYBWSYJXRWRVGFYBWSYJMXQCWRV
      GVHVIZUGYKYICXRWRXDVJVKVLYCXSYGCWRXECWRVMYCXCWRFXEXSYGUMXECWRVNXDXRVOVPVQ
      VRYBYHYEUMYCYBYEXRYJUCYHYBWSYJXRYLVSCWRXDXRVTWAUKWBVADWSVBVCUSWCWOWDZWQXI
      RYMWPKMZWQXINYMAGWEZFZWDYNYPWOYOEAGEWFYOEMWGEGWHTWIWJAGWKWLWPKPQWMWN $.
      $( [8-Sep-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Ordering relation for the cumulative hierarchy of sets.  Part of
       Proposition 9.10(2) of [TakeutiZaring] p. 77. $)
    r1ord $p |- ( B e. On -> ( A e. B -> ( R1 ` A ) e. ( R1 ` B ) ) ) $=
      ( vx vy con0 wcel cr1 cfv wi wa csuc wss simpl onelon suceloni syl word 
      eloni ordsucss imp cv wceq eleq2 fveq2 eleq2d imbi12d cpw r1suc fvex 
      pwid syl5eleqr ex wtr r1tr trss ax-mp sseld imim2d cvv elisset sucexb 
      sylibr sucssel syl7 a1d com24 exp3a imp31 wlim wral ciun wrex limsuc 
      biimpa limord visset elon sylan rcla4ev syl11anc eliun wb r1lim mpan 
      adantr mpbird ad2antrr tfindsg syl21anc pm2.43d ) BEFZABFZAGHZBGHZFZWKWLW
      LWOIZWKWLJZWKAKZEFZWRBLZWPWKWLMWQAEFZWSBANAOPWKWLWTWKBQWLWTIBRABSPTACUAZF
      ZWMXBGHZFZIZAWRFZWMWRGHZFZIADUAZFZWMXJGHZFZIZAXJKZFZWMXOGHZFZIZWPCDBWRXBW
      RUBZXCXGXEXIXBWRAUCXTXDXHWMXBWRGUDUEUFXBXJUBZXCXKXEXMXBXJAUCYAXDXLWMXBXJG
      UDUEUFXBXOUBZXCXPXEXRXBXOAUCYBXDXQWMXBXOGUDUEUFXBBUBZXCWLXEWOXBBAUCYCXDWN
      WMXBBGUDUEUFWSXGXIWSXGJXAXIWRANXAWMUGXHWMAUHWMAGUIUJUKZPULXJEFZWSWRXJLZXN
      XSIZYEWSYFYGYEXPXNWSYFJZXRYEXNYHXRIIXPYEXNXKXRYHYEXMXRXKYEXLXQWMYEXLXQFZX
      LXQLZYEXLUGXQXLXJUHXLXJGUIUJUKXQUMYIYJIXOUNXQXLUOUPPUQURWSYFXKWSAUSFZYFXK
      IWSWRUSFYKWREUTAVAVBAXJUSVCPTVDVEVFVGVHXBVIZWSJWRXBLZJXFYFXNIDXBVJYLXFWSY
      MYLXCXEYLXCJZXEWMDXBXLVKZFZYNXMDXBVLZYPYNWRXBFZXIYQYLXCYRXBAVMVNYNXAXIXBE
      FZXCXAYLXBANYLXBQYSXBVOXBCVPZVQVBVRYDPXMXIDWRXBXJWRUBXLXHWMXJWRGUDUEVSVTD
      WMXBXLWAVBYLXEYPWBXCYLXDYOWMXBUSFYLXDYOUBYTDXBUSWCWDUEWEWFULWGVEWHWIULWJ 
      $.
      $( [8-Sep-2003] $)
  $}

  $( Ordering relation for the cumulative hierarchy of sets.  Part of
     Proposition 9.10(2) of [TakeutiZaring] p. 77. $)
  r1ord2 $p |- ( B e. On -> ( A e. B -> ( R1 ` A ) C_ ( R1 ` B ) ) ) $=
    ( con0 wcel cr1 cfv wss r1ord wtr wi r1tr trss ax-mp syl6 ) BCDABDAEFZBEFZD
    ZOPGZABHPIQRJBKPOLMN $.
    $( [22-Sep-2003] $)

  $( Ordering relation for the cumulative hierarchy of sets.  Part of Theorem
     3.3(i) of [BellMachover] p. 478. $)
  r1ord3 $p |- ( ( A e. On /\ B e. On ) -> ( A C_ B ->
               ( R1 ` A ) C_ ( R1 ` B ) ) ) $=
    ( con0 wcel wa wss wceq wo cr1 cfv onsseleq wi r1ord2 adantl fveq2 eqimss 
    syl a1i jaod sylbid ) ACDZBCDZEZABFABDZABGZHAIJZBIJZFZABKUCUDUHUEUBUDUHLUAA
    BMNUEUHLUCUEUFUGGUHABIOUFUGPQRST $.
    $( [22-Sep-2003] $)

  ${
    $d x y z w v A $.
    $( The value of the cumulative hierarchy of sets function expressed
       recursively.  Theorem 7Q of [Enderton] p. 202. $)
    r1val1 $p |- ( A e. On -> ( R1 ` A ) = U_ x e. A ~P ( R1 ` x ) ) $=
      ( vy con0 wcel cr1 cfv cv cpw ciun c0 wceq csuc wrex cvv wlim wa w3o wss 
      onzsl 0ss fveq2 r10 syl6eq sseq1d mpbiri ax-17 hbiu1 hbss r1suc 
      sylan9eqr visset sucid eleq2 ssiun2 syl adantl eqsstrd ex r19.23ai r1lim 
      wral word ordelon limord sylan sucelon r1ord2 mpi sylbi sseqtrd 
      r19.21aiva ss2iun 3jaoi onelon sylib simpl jca wi eloni ordsucss imp 
      r1ord3 sylc eqsstr3d iunss sylibr eqssd ) BDEZBFGZABAHZFGZIZJZWIBKLZBWKMZ
      LZADNZBOEZBPZQZRWJWNSZABTWOXBWRXAWOXBKWNSWNUAWOWJKWNWOWJKFGKBKFUBUCUDUEUF
      WQXBADACWJWNCHWJEAUGACBWMUHUIWKDEZWQXBXCWQQWJWMWNWQXCWJWPFGZWMBWPFUBWKUJZ
      UKWQWMWNSZXCWQWKBEZXFWQXGWKWPEZWKAULUMZBWPWKUNUFABWMUOUPUQURUSUTXAWJABWLJ
      ZWNABOVAWTXJWNSZWSWTWLWMSZABVBXKWTXLABWTXGQXCXLBVCZXGXCWTBWKVDBVEVFXCWLXD
      WMXCWPDEZWLXDSZWKVGZXNXHXOXIWKWPVHVIVJXEVKUPVLABWLWMVMUPUQURVNVJWIWMWJSZA
      BVBWNWJSWIXQABWIXGQZWMXDWJXRXCXDWMLBWKVOZXEUPXRXNWIQWPBSZXDWJSXRXNWIXRXCX
      NXSXPVPWIXGVQVRWIXGXTWIXMXGXTVSBVTWKBWAUPWBWPBWCWDWEVLABWMWJWFWGWH $.
      $( [25-Nov-2003] $)
  $}

  ${
    $d x y z w v A $.  $d x y u F $.
    tz9.12lem.1 $e |- A e. _V $.
    tz9.12lem.2 $e |- F =
                   { <. z , w >. | w = |^| { v e. On | z e. ( R1 ` v ) } } $.
    $( Lemma for ~ tz9.12 . $)
    tz9.12lem1 $p |- ( F " A ) C_ On $=
      ( vy vx cima con0 cv wcel cop wa wex visset elima3 cr1 cfv crab cint 
      wceq copab eleq2i eleq1 rabbidv inteqd eqeq2d eqeq1 opelopab bitri cvv 
      19.8a isset sylibr c0 wne wi intex wss ssrab2 oninton mpan syl5cbir 
      sylbir mpcom sylbi adantl 19.23aiv ssriv ) HEDJZKHLZVLMILZDMZVNVMNZEMZOZI
      PVMKMZIVMEDHQZRVRVSIVQVSVOVQVMVNCLSTZMZCKUAZUBZUCZVSVQVPBLZALZWAMZCKUAZUB
      ZUCZABUDZMWEEWLVPGUEWKWFWDUCWEABVNVMIQVTWGVNUCZWJWDWFWMWIWCWMWHWBCKWGVNWA
      UFUGUHUIWFVMWDUJUKULWDUMMZWEVSWEWEHPWNWEHUNHWDUOUPWNWCUQURZWEVSUSWCUTWEVS
      WDKMZWOVMWDKUFWCKVAWOWPWBCKVBWCVCVDVEVFVGVHVIVJVHVK $.
      $( [22-Sep-2003] $)

    $( Lemma for ~ tz9.12 . $)
    tz9.12lem2 $p |- suc U. ( F " A ) e. On $=
      ( cima cuni con0 wss wcel tz9.12lem1 wfun cvv cv cr1 cfv crab cint wceq 
      copab funopabeq wb funeq ax-mp mpbir funimaex ssonunii onsuci ) EDHZIZUKJ
      KULJLABCDEFGMUKENZUKOLUMBPAPCPQRLCJSTZUAABUBZNZABUNUCEUOUAUMUPUDGEUOUEUFU
      GEDFUHUFUIUFUJ $.
      $( [22-Sep-2003] $)

    $( Lemma for ~ tz9.12 . $)
    tz9.12lem3 $p |- ( A. x e. A E. y e. On x e. ( R1 ` y ) ->
                    A e. ( R1 ` suc suc U. ( F " A ) ) ) $=
      ( cv cr1 cfv wcel con0 wrex wral cima cuni csuc wa wss wfun cdm wi 
      funfvima crab cint wceq copab funopabeq wb funeq ax-mp mpbir c0 wne 
      fveq2 eleq2d rcla4ev rabn0 sylibr cvv cop wex eleq2i visset eleq1 
      rabbidv inteqd eqeq2d eqeq1 opelopab bitri exbii eldm2 isset 3bitr4i 
      intex bitr4i sylancr tz9.12lem1 onsucuni sseli tz9.12lem2 r1ord2 syl 
      syl6 imp fvopabg mpan fveq1i syl5eq sylbi ssrab2 onint eqeltrd hbrab1 
      hbint hbeleq hbopab hbxfr ax-17 hbfv hbel elrabf simprbi 3syl adantr 
      sseldd exp31 com3r r19.23adv ralimia cpw r1suc elpw dfss3 3bitri ) AJZBJZ
      KLZMZBNOZAFPXSGFQZRSZKLZMZAFPZFYESKLZMZYCYGAFXSFMZYBYGBNXTNMZYBYKYGYLYBYK
      YGYLYBTZYKTXSGLZKLZYFXSYMYKYOYFUAZYMYKYNYDMZYPGUBZXSGUCMZYKYQUDYMFXSGUEYR
      DJZCJZEJZKLZMZENUFZUGZUHZCDUIZUBZCDUUFUJGUUHUHYRUUIUKIGUUHULUMUNYMXSUUCMZ
      ENUFZUOUPZYSYMUUJENOUULUUJYBEXTNUUBXTUHUUCYAXSUUBXTKUQURUSUUJENUTVAZYSUUK
      UGZVBMZUULXSXTVCZGMZBVDXTUUNUHZBVDYSUUOUUQUURBUUQUUPUUHMUURGUUHUUPIVEUUGY
      TUUNUHUURCDXSXTAVFZBVFUUAXSUHZUUFUUNYTUUTUUEUUKUUTUUDUUJENUUAXSUUCVGVHVIZ
      VJYTXTUUNVKVLVMVNBXSGUUSVOBUUNVPVQUUKVRZVSVAVTYQYNYEMZYPYDYEYNYDNUAYDYEUA
      CDEFGHIWAYDWBUMWCYENMZUVCYPUDCDEFGHIWDZYNYEWEUMWFWGWHYMXSYOMZYKYMUULYNUUK
      MZUVFUUMUULYNUUNUUKUULUUOYNUUNUHUVBUUOXSUUHLZUUNYNXSVBMUUOUVHUUNUHUUSCDXS
      UUFUUNVBVBUVAWIWJXSGUUHIWKWLWMUUKNUAUULUUNUUKMUUJENWNUUKWOWJWPUVGYNNMUVFU
      UJUVFEBYNNEBXSGEBGUUHIUUGCDEBEDUUFEDUUEUUDEDNWQWRWSWTXAXTXSMEXBZXCZYLEXBE
      BBXSYOUVIEBYNKXTKMEXBUVJXCXDUUBYNUHUUCYOXSUUBYNKUQURXEXFXGXHXIXJXKXLXMYJF
      YFXNZMFYFUAYHYIUVKFUVDYIUVKUHUVEYEXOUMVEFYFHXPAFYFXQXRVA $.
      $( [22-Sep-2003] $)
  $}

  ${
    $d x y z w v A $.
    tz9.12.1 $e |- A e. _V $.
    $( A set is well-founded if all of its elements are well-founded.
       Proposition 9.12 of [TakeutiZaring] p. 78.  The main proof consists of
       ~ tz9.12lem1 through ~ tz9.12lem3 . $)
    tz9.12 $p |- ( A. x e. A E. y e. On x e. ( R1 ` y ) ->
              E. y e. On A e. ( R1 ` y ) ) $=
      ( vw vz vv cv cr1 cfv wcel con0 crab cint wceq copab cima cuni csuc wrex 
      wral fveq2 eleq2d rcla4ev eqid tz9.12lem2 onsuci tz9.12lem3 sylancr ) EHF
      HGHIJKGLMNOFEPZCQRSZSZLKCULIJZKZCBHZIJZKZBLTAHUPKBLTACUAUQUNBULLUOULOUPUM
      CUOULIUBUCUDUKFEGCUJDUJUEZUFUGABFEGCUJDURUHUI $.
      $( [22-Sep-2003] $)
  $}

  ${
    $d x y z w A $.
    tz9.13.1 $e |- A e. _V $.
    $( Every set is well-founded, assuming the Axiom of Regularity.  In other
       words, every set belongs to a layer of the cumulative hierarchy of
       sets.  Proposition 9.13 of [TakeutiZaring] p. 78. $)
    tz9.13 $p |- E. x e. On A e. ( R1 ` x ) $=
      ( vy vz vw cv cr1 cfv wcel con0 wrex cab cvv wss wi wceq setind wral 
      ssel visset eleq1 rexbidv elab syl6ib r19.21aiv tz9.12 syl sylibr mpg 
      eleqtrri mpbi ) BDGZAGHIZJZAKLZDMZJBUNJZAKLZBNUQCEGZUQOZUTUQJZPUQNQEEUQRV
      AUTUNJZAKLZVBVAFGZUNJZAKLZFUTSVDVAVGFUTVAVEUTJVEUQJVGUTUQVETUPVGDVEFUAUMV
      EQUOVFAKUMVEUNUBUCUDUEUFFAUTEUAZUGUHUPVDDUTVHUMUTQUOVCAKUMUTUNUBUCUDUIUJU
      KUPUSDBCUMBQUOURAKUMBUNUBUCUDUL $.
      $( [23-Sep-2003] $)
  $}

  ${
    $d x y A $.
    $( Every set is well-founded, assuming the Axiom of Regularity.
       Proposition 9.13 of [TakeutiZaring] p. 78.  This variant of ~ tz9.13
       expresses the class existence requirement as an antecedent. $)
    tz9.13g $p |- ( A e. B -> E. x e. On A e. ( R1 ` x ) ) $=
      ( vy cv cr1 cfv wcel con0 wrex wceq ax-17 eleq1 rexbid visset tz9.13 
      vtoclg ) DEZAEFGZHZAIJBSHZAIJDBCRBKZTUAAIUBALRBSMNARDOPQ $.
      $( [4-Oct-2003] $)
  $}

  ${
    $d x A $.
    $( Every set is well-founded, assuming the Axiom of Regularity.
       Proposition 9.13 of [TakeutiZaring] p. 78.  This variant of ~ tz9.13g is
       useful in proofs of theorems about the rank function. $)
    rankwflem $p |- ( A e. B -> E. x e. On A e. ( R1 ` suc x ) ) $=
      ( wcel cv cr1 cfv con0 wrex csuc tz9.13g wss suceloni visset sucid 
      r1ord2 mpi syl sseld reximia ) BCDBAEZFGZDZAHIBUAJZFGZDZAHIABCKUCUFAHUAHD
      ZUBUEBUGUDHDZUBUELZUAMUHUAUDDUIUAANOUAUDPQRSTR $.
      $( [4-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( Every set belongs to some value of the cumulative hierarchy of sets
       function ` R1 ` , i.e. the indexed union of all values of ` R1 ` is the
       universe.  Lemma 9.3 of [Jech] p. 71. $)
    jech9.3 $p |- U_ x e. On ( R1 ` x ) = _V $=
      ( vy con0 cv cr1 cfv ciun cvv wcel wrex visset tz9.13 eliun mpbir 2th 
      eqriv ) BACADEFZGZHBDZRIZSHITSQIACJASBKZLASCQMNUAOP $.
      $( [4-Oct-2003] $)

    $( The cumulative hierarchy of sets covers the universe.  Proposition 4.45
       (b) to (a) of [Mendelson] p. 281. $)
    unir1 $p |- U. ( R1 " On ) = _V $=
      ( vx cr1 con0 cima cuni crn cv cfv ciun cvv cdm wfn wceq r1fnon fndm 
      ax-mp imaeq2i imadmrn eqtr3i unieqi fniunfv jech9.3 3eqtr2i ) BCDZEBFZEZA
      CAGBHIZJUDUEBBKZDUDUEUHCBBCLZUHCMNCBOPQBRSTUIUGUFMNACBUAPAUBUC $.
      $( [27-Sep-2004] $)
  $}

  ${
    $d x y z A $.
    rankval.1 $e |- A e. _V $.
    $( Value of the rank function.  Definition 9.14 of [TakeutiZaring] p. 79
       (proved as a theorem from our definition). $)
    rankval $p |- ( rank ` A ) = |^| { x e. On | A e. ( R1 ` suc x ) } $=
      ( vz vy crnk cfv cv csuc cr1 wcel con0 crab cint wceq copab df-rank 
      fveq1i c0 wne cvv wrex rankwflem ax-mp rabn0 mpbir intex mpbi eleq1 
      rabbidv inteqd fvopab eqtri ) BFGBDHEHZAHIJGZKZALMZNZOEDPZGBUOKZALMZNZBFU
      SEDAQREDBURVBCVASTZVBUAKVCUTALUBZBUAKVDCABUAUCUDUTALUEUFVAUGUHUNBOZUQVAVE
      UPUTALUNBUOUIUJUKULUM $.
      $( [24-Sep-2003] $)
  $}

  ${
    $d x y A $.
    $( Value of the rank function.  Definition 9.14 of [TakeutiZaring] p. 79
       (proved as a theorem from our definition).  This variant of ~ rankval
       expresses the class existence requirement as an antecedent instead of a
       hypothesis. $)
    rankvalg $p |- ( A e. B ->
                   ( rank ` A ) = |^| { x e. On | A e. ( R1 ` suc x ) } ) $=
      ( vy cv crnk cfv csuc cr1 wcel con0 crab cint wceq fveq2 eleq1 rabbidv 
      inteqd eqeq12d visset rankval vtoclg ) DEZFGZUCAEHIGZJZAKLZMZNBFGZBUEJZAK
      LZMZNDBCUCBNZUDUIUHULUCBFOUMUGUKUMUFUJAKUCBUEPQRSAUCDTUAUB $.
      $( [5-Oct-2003] $)

    $( Value of an alternate definition of the rank function.  Definition of
       [BellMachover] p. 478. $)
    rankval2 $p |- ( A e. B ->
                   ( rank ` A ) = |^| { x e. On | A C_ ( R1 ` x ) } ) $=
      ( wcel crnk cfv cv csuc cr1 con0 crab cint wss rankvalg cpw r1suc eleq2d 
      fvex elpw2 syl6bb rabbiia inteqi syl6eq ) BCDBEFBAGZHIFZDZAJKZLBUDIFZMZAJ
      KZLABCNUGUJUFUIAJUDJDZUFBUHOZDUIUKUEULBUDPQBUHUDIRSTUAUBUC $.
      $( [8-Oct-2003] $)
  $}

  ${
    $d x A $.
    $( The rank of a set is an ordinal number.  Proposition 9.15(1) of
       [TakeutiZaring] p. 79. $)
    rankon $p |- ( rank ` A ) e. On $=
      ( vx cvv wcel crnk cfv con0 cv csuc cr1 crab cint rankvalg wss c0 wne 
      oninton ssrab2 wrex rankwflem rabn0 sylibr sylancr eqeltrd wn fvprc 
      0elon syl6eqel pm2.61i ) ACDZAEFZGDUJUKABHIJFDZBGKZLZGBACMUMGNUMOPZUNGDUJ
      UMQULBGRUJULBGSUOBACTULBGUAUBUCUDUJUEUKOGAEUFUGUHUI $.
      $( [5-Oct-2003] $)
  $}

  ${
    $d x y A $.
    rankid.1 $e |- A e. _V $.
    $( Identity law for the rank function. $)
    rankid $p |- A e. ( R1 ` suc ( rank ` A ) ) $=
      ( vx vy cv csuc cr1 cfv wcel con0 crab cint crnk wrex cvv rankwflem 
      ax-mp ax-17 hbrab1 hbint hbsuc hbfv hbel wceq suceq fveq2d eleq2d 
      onminsb rankval fveq2i eleqtrri ) AACEZFZGHZIZCJKZLZFZGHZAMHZFZGHUOCJNZAU
      SIZAOIVBBCAOPQUOVCCCDDAUSDEZAICRCDURGVDGICRCDUQCDUPUOCDJSTUAUBUCULUQUDZUN
      USAVEUMURGULUQUEUFUGUHQVAURGUTUQUDVAURUDCABUIUTUQUEQUJUK $.
      $( [3-Oct-2003] $)
  $}

  ${
    rankr1lem.1 $e |- A e. _V $.
    $( Lemma for ~ rankr1 . $)
    rankr1lem $p |- ( B e. On ->
                    ( -. A e. ( R1 ` B ) -> B C_ ( rank ` A ) ) ) $=
      ( con0 wcel cr1 cfv wn crnk csuc wss wb rankon onsuci ontri1 mpan wi 
      r1ord3 rankid ssel syl6mpi sylbird con1d onsssuc mpan2 sylibrd ) BDEZABFG
      ZEZHBAIGZJZEZBUJKZUGULUIUGULHZUKBKZUIUKDEZUGUOUNLUJAMZNZUKBOPUGUOUKFGZUHK
      ZAUSEUIUPUGUOUTQURUKBRPACSUSUHATUAUBUCUGUJDEUMULLUQBUJUDUEUF $.
      $( [6-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    rankr1.1 $e |- A e. _V $.
    $( A relationship between the rank function and the cumulative hierarchy of
       sets function ` R1 ` .  Proposition 9.15(2) of [TakeutiZaring] p. 79. $)
    rankr1 $p |- ( B = ( rank ` A ) <->
                 ( -. A e. ( R1 ` B ) /\ A e. ( R1 ` suc B ) ) ) $=
      ( vx vy crnk cfv wceq cr1 wcel wn csuc wa con0 rankon eleq1 mpbiri word 
      wi eloni c0 cv wrex wlim w3o ordzsl noel fveq2 r10 syl6eq eleq2d mtbiri 
      a1d wss visset sucid eleq2 adantl wb eleq1a imp suceloni sylan simpl 
      ontri1 con2bid syl11anc mpbid adantr crab cint rankval eqeq2i biimpi 
      sseq1d suceq fveq2d onintss syl5bir biimpa sylan2i exp4d com3l imp31 
      mtod exp31 r19.23aiv oneli syl6bi anc2li r1ord2 mpi syl sseld sseq1i 
      syl6ibr syld sseq1 biimprd sylan9r sylibd syl6 con2 pm2.43a con2i ciun 
      cvv r1lim fvex eliun syl6bb mtbird expcom 3jaoi sylbi mpcom wne ssrab2 
      rankwflem ax-mp rabn0 mpbir onint mp2an eqeltri elrab simprbi jca 
      rankr1lem com12 cdm elfvdm wfn r1fnon fndm eleq2i sucelon bitr4i sylib 
      syl5 syl5ss eqssd impbii ) BAFGZHZABIGZJZKZABLZIGZJZMZUUEUUHUUKBNJZUUEUUH
      UUEUUMUUDNJAOZBUUDNPQZUUMBRZUUEUUHSZBTUUPBUAHZBDUBZLZHZDNUCZBUDZUEUUQDBUF
      UURUUQUVBUVCUURUUHUUEUURUUGAUAJAUGUURUUFUAAUURUUFUAIGUABUAIUHUIUJUKULUMUV
      AUUQDNUUSNJZUVAUUEUUHUVDUVAMZUUEMUUGBUUSUNZUVEUVFKZUUEUVEUUSBJZUVGUVAUVHU
      VDUVAUVHUUSUUTJZUUSDUOUPZBUUTUUSUQQURUVEUUMUVDUVHUVGUSUUTNJZUVAUUMUVDUVKU
      VAUUMUUTNBUTVAUUSVBZVCUVDUVAVDUUMUVDMUVFUVHBUUSVEZVFVGVHVIUVDUVAUUEUUGUVF
      SZUUEUVDUVAUVNUUEUVDUVAUUGUVFUUEUVDAUUTIGZJZUVFUVAUUGMUUEUVFAEUBZLZIGZJZE
      NVJZVKZUUSUNZUVDUVPMUUEBUWBUUSUUEBUWBHUUDUWBBEACVLZVMVNVOUVDUVPUWCUVTUVPE
      UUSUVQUUSHZUVSUVOAUWEUVRUUTIUVQUUSVPVQUKVRZVAVSUVAUUGUVPUVAUUFUVOABUUTIUH
      UKVTWAWBWCWDWEWFWGUUEUVCUUHUUEUVCMZUUGAUUSIGZJZDBUCZUUEUWJKUVCUWJUUEUWIUU
      EKZDBUWIUVHUWKUVHUWIUUEUVHKZSUVHUWKSUUEUVHUWIUWLUUEUVHUUEUVDMZUWIUWLSUUEU
      VHUVDUUEUVHUUSUUDJUVDBUUDUUSUQUUDUUSUUNWHWIWJUWMUWIUVFUWLUVDUWIUUDUUSUNZU
      UEUVFUVDUWIUVPUWNUVDUWHUVOAUVDUVKUWHUVOUNZUVLUVKUVIUWOUVJUUSUUTWKWLWMWNUV
      DUVPUWCUWNUWFUUDUWBUUSUWDWOWPWQUUEUVFUWNBUUDUUSWRWSWTUUMUVDUVFUWLUSUUEUVM
      UUOVCXAXBWCUUEUVHXCXBXDWGXEVIUWGUUGADBUWHXFZJUWJUWGUUFUWPABXGJZUVCUUFUWPH
      UUEDBXGXHUUEUWQUUDXGJAFXIBUUDXGPQVCUKDABUWHXJXKXLXMXNXOWMXPUUEBUWAJZUUKUU
      EUWRUUDUWAJUUDUWBUWAUWDUWANUNUWAUAXQZUWBUWAJUVTENXRUWSUVTENUCZAXGJUWTCEAX
      GXSXTUVTENYAYBUWAYCYDYEBUUDUWAPQUWRUUMUUKUVTUUKEBNUVQBHZUVSUUJAUXAUVRUUII
      UVQBVPVQUKZYFYGWMYHUULBUUDUUHUUKBUUDUNZUUHUUMUXCUUKUUMUUHUXCABCYIYJUUKUUI
      IYKZJZUUMAUUIIYLUXEUUINJUUMUXDNUUIINYMUXDNHYNNIYOXTYPBYQYRYSZYTVAUUKUUDBU
      NUUHUUKUWBBUUDUUMUUKUWBBUNUXFUVTUUKEBUXBVRXPUWDUUAURUUBUUC $.
      $( [6-Oct-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A relationship between the rank function and the cumulative hierarchy of
       sets function ` R1 ` .  Proposition 9.15(2) of [TakeutiZaring] p. 79. $)
    rankr1g $p |- ( A e. C -> ( B = ( rank ` A ) <->
                 ( -. A e. ( R1 ` B ) /\ A e. ( R1 ` suc B ) ) ) ) $=
      ( vx cv crnk cfv wceq cr1 wcel wn csuc wa wb fveq2 eqeq2d eleq1 notbid 
      anbi12d bibi12d visset rankr1 vtoclg ) BDEZFGZHZUDBIGZJZKZUDBLIGZJZMZNBAF
      GZHZAUGJZKZAUJJZMZNDACUDAHZUFUNULURUSUEUMBUDAFOPUSUIUPUKUQUSUHUOUDAUGQRUD
      AUJQSTUDBDUAUBUC $.
      $( [6-Oct-2003] $)
  $}

  ${
    ssrankr1.1 $e |- A e. _V $.
    $( A relationship between an ordinal number less than or equal to a rank,
       and the cumulative hierarchy of sets ` R1 ` .  Proposition 9.15(3) of
       [TakeutiZaring] p. 79. $)
    ssrankr1 $p |- ( B e. On ->
                   ( B C_ ( rank ` A ) <-> -. A e. ( R1 ` B ) ) ) $=
      ( con0 wcel crnk cfv wss cr1 wn wa csuc wceq eqid rankr1 mpbi simpli wi 
      rankon r1ord3 mpan2 imp sseld mtoi ex rankr1lem impbid ) BDEZBAFGZHZABIGZ
      EZJZUHUJUMUHUJKZULAUIIGZEZUPJZAUILIGEZUIUIMUQURKUINAUICOPQUNUKUOAUHUJUKUO
      HZUHUIDEUJUSRASBUITUAUBUCUDUEABCUFUG $.
      $( [8-Oct-2003] $)
  $}

  ${
    rankr1a.1 $e |- A e. _V $.
    $( A relationship between rank and ` R1 ` , clearly equivalent to
       ~ ssrankr1 and friends through trichotomy, but in Raph's opinion
       considerably more intuitive.  See ~ rankr1b for the subset verion.
       (Contributed by Raph Levien, 29-May-2004.) $)
    rankr1a $p |- ( B e. On -> ( A e. ( R1 ` B ) <-> ( rank ` A ) e. B ) ) $=
      ( con0 wcel cr1 cfv crnk wss wn ssrankr1 wb rankon ontri1 mpan2 bitr3d 
      con4bid ) BDEZABFGEZAHGZBEZRBTIZSJUAJZABCKRTDEUBUCLAMBTNOPQ $.
      $( [29-May-2004] $)
  $}

  ${
    $d x y A $.
    $( The value of the cumulative hierarchy of sets function expressed in
       terms of rank.  Definition 15.19 of [Monk1] p. 113. $)
    r1val2 $p |- ( A e. On -> ( R1 ` A ) = { x | ( rank ` x ) e. A } ) $=
      ( con0 wcel cv crnk cfv cr1 visset rankr1a abbi2dv ) BCDAEZFGBDABHGLBAIJK
      $.
      $( [30-Nov-2003] $)

    $( The value of the cumulative hierarchy of sets function expressed in
       terms of rank.  Theorem 15.18 of [Monk1] p. 113. $)
    r1val3 $p |- ( A e. On ->
                 ( R1 ` A ) = U_ x e. A ~P { y | ( rank ` y ) e. x } ) $=
      ( con0 wcel cr1 cfv cv cpw ciun crnk cab r1val1 wceq wral wa onelon 
      r1val2 pweq 3syl r19.21aiva iuneq2 syl eqtrd ) CDEZCFGACAHZFGZIZJZACBHKGU
      FEBLZIZJZACMUEUHUKNZACOUIULNUEUMACUEUFCEPUFDEUGUJNUMCUFQBUFRUGUJSTUAACUHU
      KUBUCUD $.
      $( [3-Jul-2004] $) $( [30-Nov-2003] $)
  $}

  ${
    rankel.1 $e |- B e. _V $.
    $( The membership relation is inherited by the rank function.  Proposition
       9.16 of [TakeutiZaring] p. 79. $)
    rankel $p |- ( A e. B -> ( rank ` A ) e. ( rank ` B ) ) $=
      ( wcel crnk cfv csuc cr1 wn wceq wa eqid rankr1g mpbii simpld wss wi cpw 
      con0 rankon r1suc ax-mp eleq2i elpw bitri ssel sylbi com12 mtod wb 
      ontri1 mp2an word onordi ordsucsssuc rankid onsuci r1ord3 sseld mpi 
      sylbir nsyl2 ) ABDZBAEFZGZHFZDZVDBEFZDZVCVGAVDHFZDZVCVKIZAVFDZVCVDVDJVLVM
      KVDLAVDBMNOVGVCVKVGBVJPZVCVKQVGBVJRZDVNVFVOBVDSDZVFVOJATZVDUAUBUCBVJCUDUE
      BVJAUFUGUHUIVIIZVHVDPZVGVHSDVPVSVRUJBTZVQVHVDUKULVSVHGZVEPZVGVHUMVDUMVSWB
      UJVHVTUNVDVQUNVHVDUOULWBBWAHFZDVGBCUPWBWCVFBWASDVESDWBWCVFPQVHVTUQVDVQUQW
      AVEURULUSUTUGVAVB $.
      $( [4-Oct-2003] $)
  $}

  ${
    $d x y A $.
    rankval3.1 $e |- A e. _V $.
    $( The value of the rank function expressed recursively: the rank of a set
       is the smallest ordinal number containing the ranks of all members of
       the set.  Proposition 9.17 of [TakeutiZaring] p. 79. $)
    rankval3 $p |- ( rank ` A ) =
                  |^| { x e. On | A. y e. A ( rank ` y ) e. x } $=
      ( crnk cfv cv wcel wral con0 crab cint csuc cr1 rankval wss word wi 
      eloni ordsucss syl rankon onsuci r1ord3 mpan syld visset rankid ssel 
      syl6mpi ralimdv cpw r1suc eleq2d elpw dfss3 bitri syl6bb sylibrd ss2rabi 
      intss ax-mp eqsstri rankel rgen wceq eleq2 ralbidv onintss mp2 eqssi ) CE
      FZBGZEFZAGZHZBCIZAJKZLZVLCVOMNFZHZAJKZLZVSACDOVRWBPWCVSPVQWAAJVOJHZVQVMVO
      NFZHZBCIZWAWDVPWFBCWDVPVNMZNFZWEPZVMWIHWFWDVPWHVOPZWJWDVOQVPWKRVOSVNVOTUA
      WHJHWDWKWJRVNVMUBUCWHVOUDUEUFVMBUGUHWIWEVMUIUJUKWDWACWEULZHZWGWDVTWLCVOUM
      UNWMCWEPWGCWEDUOBCWEUPUQURUSUTVRWBVAVBVCVLJHVNVLHZBCIZVSVLPCUBWNBCVMCDVDV
      EVQWOAVLVOVLVFVPWNBCVOVLVNVGVHVIVJVK $.
      $( [11-Oct-2003] $)
  $}

  ${
    $d x y A $.
    $( Any class whose elements have bounded rank is a set.  Proposition 9.19
       of [TakeutiZaring] p. 80. $)
    bndrank $p |- ( E. x e. On A. y e. A ( rank ` y ) C_ x -> A e. _V ) $=
      ( cv crnk cfv wss wral cvv wcel con0 csuc cr1 word wb ordsucsssuc rankon 
      onordi eloni sylancr wi r1ord3 onsuci suceloni sylbid visset rankid ssel 
      syl6mpi ralimdv dfss3 fvex ssex sylbir syl6 r19.23aiv ) BDZEFZADZGZBCHZCI
      JZAKUSKJZVAUQUSLZMFZJZBCHZVBVCUTVFBCVCUTURLZMFZVEGZUQVIJVFVCUTVHVDGZVJURN
      USNUTVKOVCURUSPURUQQZRUSSTVHKJVDKJVKVJUAVCVHVDUBURVLUCUSUDTUEUQBUFUGVIVEU
      QUHUIUJVGCVEGVBBCVEUKCVEVDMULUMUNUOUP $.
      $( [13-Oct-2003] $)

    $( The elements of a proper class have unbounded rank.  Exercise 2 of
       [TakeutiZaring] p. 80. $)
    unbndrank $p |- ( -. A e. _V -> A. x e. On E. y e. A x e. ( rank ` y ) ) $=
      ( cv crnk cfv wcel wrex con0 wral cvv wn wss wb rankon ontri1 mpan 
      ralbidv ralnex syl6bb rexbiia rexnal bitri bndrank sylbir con1i ) ADZBDZE
      FZGZBCHZAIJZCKGZULLZUIUGMZBCJZAIHZUMUQUKLZAIHUNUPURAIUGIGZUPUJLZBCJURUSUO
      UTBCUIIGUSUOUTNUHOUIUGPQRUJBCSTUAUKAIUBUCABCUDUEUF $.
      $( [13-Oct-2003] $)
  $}

  ${
    rankpw.1 $e |- A e. _V $.
    $( The rank of a power set.  Part of Exercise 30 of [Enderton] p. 207. $)
    rankpw $p |- ( rank ` ~P A ) = suc ( rank ` A ) $=
      ( crnk cfv csuc cpw wceq cr1 wcel wn pwex rankr1 wss eqid simplbi ax-mp 
      pwid ssel mpi mto elpw mtbir con0 rankon r1suc eleq2i rankid eleqtri 
      mpbi sspwb sseqtr4i mpbir onsuci eleqtrri mpbir2an eqcomi ) ACDZEZAFZCDZU
      RUTGUSURHDZIZJUSUREHDZIUSURABKZLVBUSUQHDZFZIZVGUSVEMZVHAVEIZUQUQGZVIJZUQN
      VJVKAVAIAUQBLOPVHAUSIVIABQUSVEARSTUSVEVDUAUBVAVFUSUQUCIVAVFGAUDZUQUEPZUFU
      BUSVAFZVCUSVNIUSVAMUSVFVAAVEMZUSVFMAVFIVOAVAVFABUGVMUHAVEBUAUIAVEUJUIVMUK
      USVAVDUAULURUCIVCVNGUQVLUMURUEPUNUOUP $.
      $( [22-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The rank of a set belongs to a limit ordinal iff the rank of its power
       set does. $)
    ranklim $p |- ( Lim B ->
                  ( ( rank ` A ) e. B <-> ( rank ` ~P A ) e. B ) ) $=
      ( vx cvv wcel wlim crnk cfv cpw wb wa csuc limsuc adantl cv wceq pweq 
      fveq2d fveq2 suceq syl eqeq12d visset rankpw vtoclg eleq1d adantr bitr4d 
      wn c0 fvprc pwexb notbii sylbi eqtr4d pm2.61ian ) ADEZBFZAGHZBEZAIZGHZBEZ
      JZUQURKUTUSLZBEZVCURUTVFJUQBUSMNUQVCVFJURUQVBVEBCOZIZGHZVGGHZLZPVBVEPCADV
      GAPZVIVBVKVEVLVHVAGVGAQRVLVJUSPVKVEPVGAGSVJUSTUAUBVGCUCUDUEUFUGUHUQUIZVDU
      RVMUSVBBVMUSUJVBAGUKVMVADEZUIVBUJPUQVNAULUMVAGUKUNUOUFUGUP $.
      $( [18-Sep-2006] $)

    $( A stronger property of ` R1 ` than ~ rankpw .  The latter merely proves
       that ` R1 ` of the successor is a power set, but here we prove that if
       ` A ` is in the cumulative hierarchy, then ` ~P A ` is in the cumulative
       hierarchy of the successor.  (Contributed by Raph Levien,
       29-May-2004.) $)
    r1pw $p |- ( B e. On ->
                 ( A e. ( R1 ` B ) <-> ~P A e. ( R1 ` suc B ) ) ) $=
      ( vx cvv wcel con0 cr1 cfv cpw csuc wb wi cv wceq eleq1 pweq eleq1d 
      bibi12d imbi2d crnk visset rankr1a word eloni ordsucelsuc syl bitrd 
      rankpw eleq1i syl6bbr suceloni pwex bitr4d vtoclg wn elisset pwexb 
      sylibr pm5.21ni a1d pm2.61i ) ADEZBFEZABGHZEZAIZBJZGHZEZKZLZVCCMZVDEZVLIZ
      VHEZKZLVKCADVLANZVPVJVCVQVMVEVOVIVLAVDOVQVNVFVHVLAPQRSVCVMVNTHZVGEZVOVCVM
      VLTHZJZVGEZVSVCVMVTBEZWBVLBCUAZUBVCBUCWCWBKBUDVTBUEUFUGVRWAVGVLWDUHUIUJVC
      VGFEVOVSKBUKVNVGVLWDULUBUFUMUNVBUOVJVCVEVBVIAVDUPVIVFDEVBVFVHUPAUQURUSUTV
      A $.
      $( [29-May-2004] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( MAY BE REVISED - can ranklim + rankr1a shorten this? $)
    $( The cumulative hierarchy of a limit ordinal is closed under power set.
       (Contributed by Raph Levien, 29-May-2004.) $)
    r1pwcl $p |- ( Lim B -> ( A e. ( R1 ` B ) <-> ~P A e. ( R1 ` B ) ) ) $=
      ( vx vy cvv wcel wlim cr1 cfv cpw wb wi wa cv wrex csuc ciun r1lim 
      eleq2d eliun syl6bb con0 onelon limelon sylan r1pw syl rexbidva wex 
      limsuc anbi1d visset sucex wceq eleq1 fveq2 anbi12d cla4ev syl6bi 
      19.23adv df-rex 3imtr4g cbvrexv syl6ibr adantl ex wss sssucid r1ord3 mpi 
      sucelon sylan2b anidms sseld syl6 reximdvai impbid 3bitrd bitr4d wn c0 
      n0i fvprc nsyl2 pm5.21ni a1d pm2.61i ) BEFZBGZABHIZFZAJZWJFZKZLWHWIWNWHWI
      MZWKWLCNZHIZFZCBOZWMWOWKAWQFZCBOZWLWPPZHIZFZCBOZWSWOWKACBWQQZFXAWOWJXFACB
      ERZSCABWQTUAWOWTXDCBWOWPBFZMWPUBFZWTXDKBUBFXHXIWOBWPUCBEUDUEZAWPUFUGUHWOX
      EWSWIXEWSLWHWIXEWLDNZHIZFZDBOZWSWIXHXDMZCUIXKBFZXMMZDUIZXEXNWIXOXRCWIXOXB
      BFZXDMZXRWIXHXSXDBWPUJUKXQXTDXBWPCULUMXKXBUNZXPXSXMXDXKXBBUOYAXLXCWLXKXBH
      UPSUQURUSUTXDCBVAXMDBVAVBWRXMCDBWPXKUNWQXLWLWPXKHUPSVCVDVEWOWRXDCBWOXHXIW
      RXDLWOXHXIXJVFXIWQXCWLXIWQXCVGZXIXBUBFZYBXIXIYCMWPXBVGYBWPVHWPXBVIVJWPVKV
      LVMVNVOVPVQVRWOWMWLXFFWSWOWJXFWLXGSCWLBWQTUAVSVFWHVTWNWIWKWHWMWKWJWAUNZWH
      WJAWBBHWCZWDWMYDWHWJWLWBYEWDWEWFWG $.
      $( [29-May-2004] $)
  $}

  ${
    rankss.1 $e |- B e. _V $.
    $( The subset relation is inherited by the rank function.  Exercise 1 of
       [TakeutiZaring] p. 80. $)
    rankss $p |- ( A C_ B -> ( rank ` A ) C_ ( rank ` B ) ) $=
      ( cpw wcel crnk cfv wss pwex rankel elpw2 csuc rankpw eleq2i con0 wb 
      rankon onsssuc mp2an bitr4i 3imtr3i ) ABDZEAFGZUBFGZEZABHUCBFGZHZAUBBCIJA
      BCKUEUCUFLZEZUGUDUHUCBCMNUCOEUFOEUGUIPAQBQUCUFRSTUA $.
      $( [25-Nov-2003] $)
  $}

  ${
    $d x y z A $.
    ranksn.1 $e |- A e. _V $.
    $( The rank of a singleton.  Theorem 15.17(v) of [Monk1] p. 112. $)
    ranksn $p |- ( rank ` { A } ) = suc ( rank ` A ) $=
      ( vy vx cv crnk cfv wcel csn wral con0 crab cint csuc wb wi wal wceq 
      df-ral elsn imbi1i albii fveq2 eleq1d ceqsalv 3bitri a1i rabbiia inteqi 
      snex rankval3 rankon onsucmin ax-mp 3eqtr4i ) CEZFGZDEZHZCAIZJZDKLZMAFGZU
      RHZDKLZMZUTFGVCNZVBVEVAVDDKVAVDOURKHVAUPUTHZUSPZCQUPARZUSPZCQVDUSCUTSVIVK
      CVHVJUSCATUAUBUSVDCABVJUQVCURUPAFUCUDUEUFUGUHUIDCUTAUJUKVCKHVGVFRAULDVCUM
      UNUO $.
      $( [20-Jul-2004] $) $( [28-Nov-2003] $)

    $( The rank of a union.  Part of Theorem 15.17(iv) of [Monk1] p. 112. $)
    rankuni2 $p |- ( rank ` U. A ) = U_ x e. A ( rank ` x ) $=
      ( vy vz cuni crnk cfv cv ciun wcel wral con0 crab cint uniex rankval3 
      wss wceq eleq2 ralbidv elrab fvex iunon rankon a1i mprg wrex eluni2 
      ax-17 hbiu1 hbel ssiun2 sseld visset rankel syl5 r19.23ai sylbi rgen 
      mpbir2an intss1 ax-mp eqsstri iunss elssuni rankss syl mprgbir eqssi ) BF
      ZGHZABAIZGHZJZVLDIZGHZEIZKZDVKLZEMNZOZVOEDVKBCPZQVOWAKZWBVORWDVOMKZVQVOKZ
      DVKLZVTWGEVOMVRVOSVSWFDVKVRVOVQTUAUBVNMKZWEABABVNCVMGUCUDWHVMBKZVMUEUFUGW
      FDVKVPVKKVPVMKZABUHWFAVPBUIWJWFABAEEVQVOVRVQKAUJAEBVNUKULWIVQVNKWFWJWIVNV
      OVQABVNUMUNVPVMAUOUPUQURUSUTVAVOWAVBVCVDVOVLRVNVLRZABABVNVLVEWIVMVKRWKVMB
      VFVMVKWCVGVHVIVJ $.
      $( [21-Jul-2004] $) $( [30-Nov-2003] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    rankun.1 $e |- A e. _V $.
    rankun.2 $e |- B e. _V $.
    $( The rank of the union of two sets.  Theorem 15.17(iii) of [Monk1]
       p. 112. $)
    rankun $p |- ( rank ` ( A u. B ) ) = ( ( rank ` A ) u. ( rank ` B ) ) $=
      ( vx vz vy cun crnk cfv cv wcel wral wi con0 crab cint unex rankval3 
      eleq2i visset elintrab bitri wo elun rankel elun1 syl elun2 jaoi sylbi 
      rgen rankon onun2i wceq eleq2 ralbidv imbi12d rcla4v ax-mp mpi ssriv wss 
      ssun1 rankss ssun2 unssi eqssi ) ABHZIJZAIJZBIJZHZEVJVMEKZVJLZFKZIJZGKZLZ
      FVIMZVNVRLZNZGOMZVNVMLZVOVNVTGOPQZLWCVJWEVNGFVIABCDRZSTVTGVNOEUAUBUCWCVQV
      MLZFVIMZWDWGFVIVPVILVPALZVPBLZUDWGVPABUEWIWGWJWIVQVKLWGVPACUFVQVKVLUGUHWJ
      VQVLLWGVPBDUFVQVLVKUIUHUJUKULVMOLWCWHWDNZNVKVLAUMBUMUNWBWKGVMOVRVMUOZVTWH
      WAWDWLVSWGFVIVRVMVQUPUQVRVMVNUPURUSUTVAUKVBVKVLVJAVIVCVKVJVCABVDAVIWFVEUT
      BVIVCVLVJVCBAVFBVIWFVEUTVGVH $.
      $( [25-Aug-2004] $) $( [26-Nov-2003] $)

    $( The rank of an unordered pair.  Part of Exercise 30 of [Enderton]
       p. 207. $)
    rankpr $p |- ( rank ` { A , B } ) = suc ( ( rank ` A ) u. ( rank ` B ) ) $=
      ( cpr crnk cfv csuc cun csn df-pr fveq2i snex rankun ranksn uneq12i 
      3eqtri word wceq rankon onordi ordsucun mp2an eqtr4i ) ABEZFGZAFGZHZBFGZH
      ZIZUGUIIHZUFAJZBJZIZFGUMFGZUNFGZIUKUEUOFABKLUMUNAMBMNUPUHUQUJACOBDOPQUGRU
      IRULUKSUGATUAUIBTUAUGUIUBUCUD $.
      $( [19-Sep-2004] $) $( [28-Nov-2003] $)

    $( The rank of an ordered pair.  Part of Exercise 4 of [Kunen] p. 107. $)
    rankop $p |- ( rank ` <. A , B >. ) =
                 suc suc ( ( rank ` A ) u. ( rank ` B ) ) $=
      ( cop crnk cfv csn cpr cun csuc df-op fveq2i snex prex rankpr wceq wss 
      snsspr1 ssequn1 mpbi rankun 3eqtr3i suceq ax-mp 3eqtri ) ABEZFGAHZABIZIZF
      GUHFGUIFGZJZKZAFGBFGJKZKZUGUJFABLMUHUIANZABOZPULUNQUMUOQUHUIJZFGUKULUNURU
      IFUHUIRURUIQABSUHUITUAMUHUIUPUQUBABCDPUCULUNUDUEUF $.
      $( [13-Sep-2006] $)
  $}

  $( Any set is a subset of the hierarchy of its rank. $)
  r1rankid $p |- ( A e. B -> A C_ ( R1 ` ( rank ` A ) ) ) $=
    ( wcel crnk cfv cr1 cpw wss csuc wn wceq wa eqid rankr1g mpbii simprd con0 
    rankon r1suc ax-mp syl6eleq elpwg mpbid ) ABCZAADEZFEZGZCAUFHUDAUEIFEZUGUDA
    UFCJZAUHCZUDUEUEKUIUJLUEMAUEBNOPUEQCUHUGKARUESTUAAUFBUBUC $.
    $( [14-Oct-2003] $)

  ${
    $d x y z A $.
    $( The rank of an ordinal number is itself.  Proposition 9.18 of
       [TakeutiZaring] p. 79 and its converse. $)
    rankonid $p |- ( A e. On <-> ( rank ` A ) = A ) $=
      ( vx vy vz con0 wcel crnk cfv wceq cv fveq2 id eqeq12d wral wss crab 
      cint wb eleq1 ralimi ralbi syl dfss3 syl6bbr rabbidv inteqd visset 
      rankval3 syl5eq intmin sylan9eqr ex tfis3 rankon mpbii impbii ) AEFZAGHZA
      IZBJZGHZUTIZCJZGHZVCIZUSBCAUTVCIZVAVDUTVCUTVCGKVFLMUTAIZVAURUTAUTAGKVGLMU
      TEFZVECUTNZVBVIVHVAUTDJZOZDEPZQZUTVIVDVJFZCUTNZDEPZQVMVAVIVPVLVIVOVKDEVIV
      OVCVJFZCUTNZVKVIVNVQRZCUTNVOVRRVEVSCUTVDVCVJSTVNVQCUTUAUBCUTVJUCUDUEUFDCU
      TBUGUHUIDUTEUJUKULUMUSUREFUQAUNURAESUOUP $.
      $( [14-Oct-2003] $)
  $}

  ${
    $d x A $.
    rankeq0.1 $e |- A e. _V $.
    $( A set is empty iff its rank is empty. $)
    rankeq0 $p |- ( A = (/) <-> ( rank ` A ) = (/) ) $=
      ( vx c0 wceq crnk cfv fveq2 con0 wcel 0elon rankonid mpbi syl6eq cv cr1 
      wss crab cint cvv rankval2 ax-mp eqeq1i wa wb ssrab2 onint0 sseq2d elrab 
      biantrur r10 sseq2i bitr3i 3bitri ss0 sylbi impbii ) ADEZAFGZDEZURUSDFGZD
      ADFHDIJZVADEKDLMNUTACOZPGZQZCIRZSZDEZURUSVGDATJUSVGEBCATUAUBUCVHADQZURVHD
      VFJZVBADPGZQZUDZVIVFIQVHVJUEVECIUFVFUGUBVEVLCDIVCDEVDVKAVCDPHUHUIVMVLVIVB
      VLKUJVKDAUKULUMUNAUOUPUPUQ $.
      $( [18-Sep-2006] $)
  $}

  ${
    $d x y z A $.
    $( The rank of the hierarchy of an ordinal number is itself. $)
    rankr1id $p |- ( A e. On <-> ( rank ` ( R1 ` A ) ) = A ) $=
      ( vx vy con0 wcel cr1 cfv crnk wceq cv fveq2 fveq2d id eqeq12d wss crab 
      cint r1ord3 ss2rabdv intss syl intmin sseqtrd cvv fvex rankval2 ax-mp 
      syl5ss rankonid visset r1rankid sseq2d mpbii rankss sseq1 mpbid sylbi 
      eqssd vtoclga rankon eleq1 impbii ) ADEZAFGZHGZAIZBJZFGZHGZVGIVFBADVGAIZV
      IVEVGAVJVHVDHVGAFKLVJMNVGDEZVIVGVKVHCJZFGOZCDPZQZVGVIVKVOVGVLOZCDPZQZVGVK
      VQVNOVOVROVKVPVMCDVGVLRSVQVNTUACVGDUBUCVHUDEVIVOIVGFUEZCVHUDUFUGUHVKVGHGZ
      VGIZVGVIOZVGUIWAVTVIOZWBWAVGVHOZWCWAVGVTFGZOZWDVGUDEWFBUJVGUDUKUGWAWEVHVG
      VTVGFKULUMVGVHVSUNUAVTVGVIUOUPUQURUSVFVEDEVCVDUTVEADVAUMVB $.
      $( [14-Oct-2003] $)

    $( The rank of a union.  Part of Exercise 4 of [Kunen] p. 107. $)
    rankuni $p |- ( rank ` U. A ) = U. ( rank ` A ) $=
      ( vx vy vz cvv wcel cuni crnk cfv wceq cv unieq fveq2d fveq2 unieqd 
      eqeq12d wrex cab ciun visset rankuni2 fvex dfiun2 eqtri wss wa wex 
      df-rex rankel anim1i eximi 19.42v eleq1 pm5.32ri exbii simpl cr1 con0 
      rankon oneli rankr1id sylib eqcomd eqeq2d cla4ev syl ancli impbii 
      3bitr3i sylbi abssi uniss ax-mp eqsstri csuc cpw pwuni uniex pwex rankss 
      rankpw sseqtri onunisuci eqssi vtoclg wn c0 uniexb notbii fvprc uni0 
      syl6eqr eqtr4d pm2.61i ) AEFZAGZHIZAHIZGZJZBKZGZHIZXAHIZGZJWTBAEXAAJZXCWQ
      XEWSXFXBWPHXAALMXFXDWRXAAHNOPXCXEXCCKZDKZHIZJZDXAQZCRZGZXEXCDXAXISXMDXABT
      ZUADCXAXIXHHUBUCUDXLXDUEXMXEUEXKCXDXKXHXAFZXJUFZDUGZXGXDFZXJDXAUHXQXIXDFZ
      XJUFZDUGZXRXPXTDXOXSXJXHXAXNUIUJUKXRXJUFZDUGXRXJDUGZUFZYAXRXRXJDULYBXTDXJ
      XRXSXGXIXDUMUNUOYDXRXRYCUPXRYCXRXGXGUQIZHIZJZYCXRYFXGXRXGURFYFXGJXDXGXAUS
      UTXGVAVBVCXJYGDYEXGUQUBXHYEJXIYFXGXHYEHNVDVEVFVGVHVIVBVJVKXLXDVLVMVNXEXCV
      OZGZXCXDYHUEXEYIUEXDXBVPZHIZYHXAYJUEXDYKUEXAVQXAYJXBXAXNVRZVSVTVMXBYLWAWB
      XDYHVLVMXCXBUSWCWBWDWEWOWFZWQWGGZWSYMWQWGYNYMWPEFZWFWQWGJWOYOAWHWIWPHWJVJ
      WKWLYMWRWGAHWJOWMWN $.
      $( [15-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d x B $.
    rankr1b.1 $e |- A e. _V $.
    $( A relationship between rank and ` R1 ` .  See ~ rankr1a for the
       membership version. $)
    rankr1b $p |- ( B e. On -> ( A C_ ( R1 ` B ) <-> ( rank ` A ) C_ B ) ) $=
      ( con0 wcel cr1 cfv wss crnk wceq rankr1id biimpi sseq2d fvex rankss 
      syl5bi wi rankon r1ord3 mpan cvv r1rankid ax-mp sstr syl6 impbid ) BDEZAB
      FGZHZAIGZBHZUGUJUHIGZHUKUIUGULBUJUGULBJBKLMAUHBFNOPUGUKUJFGZUHHZUIUJDEUGU
      KUNQARUJBSTAUMHZUNUIAUAEUOCAUAUBUCAUMUHUDTUEUF $.
      $( [15-Sep-2006] $)

    $( The rank of a successor. $)
    ranksuc $p |- ( rank ` suc A ) = suc ( rank ` A ) $=
      ( csuc crnk cfv csn cun df-suc fveq2i snex rankun ranksn uneq2i wss wceq 
      sssucid ssequn1 mpbi eqtri 3eqtri ) ACZDEAAFZGZDEADEZUBDEZGZUDCZUAUCDAHIA
      UBBAJKUFUDUGGZUGUEUGUDABLMUDUGNUHUGOUDPUDUGQRST $.
      $( [18-Sep-2006] $)

    $( Upper bound of the rank of a union.  Part of Exercise 30 of [Enderton]
       p. 207. $)
    rankuniss $p |- ( rank ` U. A ) C_ ( rank ` A ) $=
      ( cuni crnk cfv rankuni word wss rankon onordi orduniss ax-mp eqsstri ) 
      ACDEADEZCZNAFNGONHNAIJNKLM $.
      $( [30-Nov-2003] $)

    $( The rank of a set is the supremum of the successors of the ranks of its
       members.  Exercise 9.1 of [Jech] p. 72.  Also a special case of Theorem
       7V(b) of [Enderton] p. 204. $)
    rankval4 $p |- ( rank ` A ) = U_ x e. A suc ( rank ` x ) $=
      ( vy crnk cfv cv csuc ciun cr1 wss wcel wi ax-17 hbiu1 hbfv dfss2f 
      visset rankid ssiun2 con0 rankon onsuci fvex sucex iunon a1i mprg r1ord3 
      mp2an syl sseld mpi mpgbir rankss ax-mp crab cint mpan ss2rabi intss cvv 
      wceq rankval2 intmin eqcomi 3sstr4i sstri iunss rankel onsucssi sylib 
      mprgbir eqssi ) BEFZABAGZEFZHZIZVOVSJFZEFZVSBVTKZVOWAKWBVPBLZVPVTLZMAADBV
      TDGZBLANADVSJWEJLANADBVROPQWCVPVRJFZLWDVPARSWCWFVTVPWCVRVSKZWFVTKZABVRTVR
      UALZVSUALZWGWHMVQVPUBZUCZWIWJABABVRCVQVPEUDUEUFWIWCWLUGUHZVRVSUIUJUKULUMU
      NBVTVSJUDZUOUPVTWEJFKZDUAUQZURZVSWEKZDUAUQZURZWAVSWSWPKWQWTKWRWODUAWJWEUA
      LWRWOMWMVSWEUIUSUTWSWPVAUPVTVBLWAWQVCWNDVTVBVDUPWTVSWJWTVSVCWMDVSUAVEUPVF
      VGVHVSVOKVRVOKZABABVRVOVIWCVQVOLXAVPBCVJVQVOWKBUBVKVLVMVN $.
      $( [7-Nov-2004] $) $( [12-Oct-2003] $)

    $( The rank of a set is bounded by a bound for the successor of its
       members. $)
    rankbnd $p |- ( A. x e. A suc ( rank ` x ) C_ B <-> ( rank ` A ) C_ B ) $=
      ( crnk cfv wss cv csuc ciun wral rankval4 sseq1i iunss bitr2i ) BEFZCGABA
      HEFIZJZCGQCGABKPRCABDLMABQCNO $.
      $( [18-Sep-2006] $)

    $( The rank of a set is bounded by the successor of a bound for its
       members. $)
    rankbnd2 $p |- ( B e. On -> ( A. x e. A ( rank ` x ) C_ B <->
                  ( rank ` A ) C_ suc B ) ) $=
      ( con0 wcel crnk cfv cuni wss csuc cv wral word wb ordunisssuc rankon 
      onssi eloni sylancr ciun rankuni rankuni2 eqtr3i sseq1i iunss bitr2i 
      syl5bb ) CEFZBGHZIZCJZUJCKJZALGHZCJABMZUJEJCNULUMOUIUJCPUJBQRCSTULABUNUAZ
      CJUOUKUPCBIGHUKUPBUBABDUCUDUEABUNCUFUGUH $.
      $( [15-Sep-2006] $)

    $( A relationship that can be used for computation of rank. $)
    rankc1 $p |- ( A. x e. A ( rank ` x ) e. ( rank ` U. A ) <->
                 ( rank ` A ) = ( rank ` U. A ) ) $=
      ( crnk cfv cuni wss wa cv wcel wral wceq rankuniss biantru csuc ciun 
      iunss rankval4 sseq1i rankon onsucssi ralbii 3bitr4ri eqss 3bitr4i ) BDEZ
      BFZDEZGZUIUHUFGZHAIZDEZUHJZABKZUFUHLUJUIBCMNABULOZPZUHGUOUHGZABKUIUNABUOU
      HQUFUPUHABCRSUMUQABULUHUKTUGTUAUBUCUFUHUDUE $.
      $( [16-Sep-2006] $)

    $( A relationship that can be used for computation of rank. $)
    rankc2 $p |- ( E. x e. A ( rank ` x ) = ( rank ` U. A ) ->
                 ( rank ` A ) = suc ( rank ` U. A ) ) $=
      ( cv crnk cfv cuni wceq wrex csuc wss cpw pwuni uniex pwex rankss ax-mp 
      rankpw sseqtri a1i wcel eleq1 rankel syl5cbi r19.23aiv rankon onsucssi 
      sylib eqssd ) ADZEFZBGZEFZHZABIZBEFZUMJZUPUQKUOUPULLZEFZUQBURKUPUSKBMBURU
      LBCNZOPQULUTRSTUOUMUPUAZUQUPKUNVAABUNUKUPUAVAUJBUAUKUMUPUBUJBCUCUDUEUMUPU
      LUFBUFUGUHUI $.
      $( [7-Jul-2007] $) $( [16-Sep-2006] $)
  $}

  ${
    rankelun.1 $e |- A e. _V $.
    rankelun.2 $e |- B e. _V $.
    rankelun.3 $e |- C e. _V $.
    rankelun.4 $e |- D e. _V $.
    $( Rank membership is inherited by union. $)
    rankelun $p |- ( ( ( rank ` A ) e. ( rank ` C ) /\ ( rank ` B ) e.
          ( rank ` D ) ) -> ( rank ` ( A u. B ) ) e. ( rank ` ( C u. D ) ) ) $=
      ( crnk cfv wcel wa cun cr1 csuc wss cpr elun1 elun2 anim12i prss sylib 
      fvex unex rankss syl rankpr wceq rankun suceq ax-mp eqtr4i syl5ssr cvv 
      wi sucssel con0 wb rankon rankr1a syl2anbr rankr1id mpbi uneq12i 3eqtr4i 
      syl6eleq ) AIJZCIJZKZBIJZDIJZKZLABMZIJZVHNJZVKNJZMZIJZCDMIJZAVOKZBVPKZVNV
      RKZVIVLVTWALZVNOZVRPZWBWCABQZIJZVRWDWCWFVQPZWGVRPWCAVQKZBVQKZLWHVTWIWAWJA
      VOVPRBVPVOSTABVQEFUAUBWFVQVOVPVHNUCZVKNUCZUDUEUFWGVGVJMZOZWDABEFUGVNWMUHW
      DWNUHABEFUIVNWMUJUKULUMVNUNKWEWBUOVMIUCVNVRUNUPUKUFVHUQKZVTVIURCUSZAVHEUT
      UKVKUQKZWAVLURDUSZBVKFUTUKVAVOIJZVPIJZMVHVKMVRVSWSVHWTVKWOWSVHUHWPVHVBVCW
      QWTVKUHWRVKVBVCVDVOVPWKWLUICDGHUIVEVF $.
      $( [18-Sep-2006] $)

    $( Rank membership is inherited by unordered pairs. $)
    rankelpr $p |- ( ( ( rank ` A ) e. ( rank ` C ) /\ ( rank ` B ) e.
            ( rank ` D ) ) -> ( rank ` { A , B } ) e. ( rank ` { C , D } ) ) $=
      ( crnk cfv wcel wa cun csuc cpr rankelun rankun syl6eleq syl5eqelr word 
      wb rankon onun2i onordi ordsucelsuc ax-mp sylib rankpr syl6eleqr 
      syl5eqel ) AIJZCIJZKBIJZDIJZKLZUKUMMZNZCDOIJZABOIJUOUQULUNMZNZURUOUPUSKZU
      QUTKZUOABMIJZUSUPUOVCCDMIJUSABCDEFGHPCDGHQRABEFQSUSTVAVBUAUSULUNCUBDUBUCU
      DUPUSUEUFUGCDGHUHUIABEFUHUJ $.
      $( [18-Sep-2006] $)

    $( Rank membership is inherited by ordered pairs. $)
    rankelop $p |- ( ( ( rank ` A ) e. ( rank ` C ) /\ ( rank ` B ) e.
        ( rank ` D ) ) -> ( rank ` <. A , B >. ) e. ( rank ` <. C , D >. ) ) $=
      ( crnk cfv wcel wa cpr csuc cop rankelpr word wb rankon onordi 
      ordsucelsuc ax-mp sylib cun wceq rankpr suceq rankop eqtr4i syl6eleq 
      syl5eqel ) AIJZCIJZKBIJZDIJZKLZABMIJZNZCDOIJZABOIJZUPURCDMZIJZNZUSUPUQVBK
      ZURVCKZABCDEFGHPVBQVDVERVBVASTUQVBUAUBUCVCUMUOUDNZNZUSVBVFUEVCVGUECDGHUFV
      BVFUGUBCDGHUHUIUJUTULUNUDNZNZURABEFUHUQVHUEURVIUEABEFUFUQVHUGUBUIUK $.
      $( [25-Jun-2007] $) $( [18-Sep-2006] $)
  $}

  ${
    rankxpl.1 $e |- A e. _V $.
    rankxpl.2 $e |- B e. _V $.
    $( A lower bound on the rank of a cross product. $)
    rankxpl $p |- ( ( A X. B ) =/= (/) -> ( rank ` ( A u. B ) ) C_
                  ( rank ` ( A X. B ) ) ) $=
      ( cxp c0 wne cun crnk cfv cuni unixp fveq2d wss xpex uniex rankuniss 
      sstri a1i eqsstr3d ) ABEZFGZABHZIJUAKZKZIJZUAIJZUBUEUCIABLMUFUGNUBUFUDIJU
      GUDUAABCDOZPQUAUHQRST $.
      $( [18-Sep-2006] $)

    $( An upper bound on the rank of a cross product. $)
    rankxpu $p |- ( rank ` ( A X. B ) ) C_
                 suc suc ( rank ` ( A u. B ) ) $=
      ( cxp crnk cfv cun cpw csuc wss xpsspw unex pwex rankss ax-mp rankpw 
      wceq suceq eqtri sseqtri ) ABEZFGZABHZIZIZFGZUDFGJZJZUBUFKUCUGKABLUBUFUEU
      DABCDMZNZNOPUGUEFGZJZUIUEUKQULUHRUMUIRUDUJQULUHSPTUA $.
      $( [18-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    rankxplim.1 $e |- A e. _V $.
    rankxplim.2 $e |- B e. _V $.
    $( The rank of a cross product when the rank of the union of its arguments
       is a limit ordinal.  Part of Exercise 4 of [Kunen] p. 107.  See
       ~ rankxpsuc for the successor case. $)
    rankxplim $p |- ( ( Lim ( rank ` ( A u. B ) ) /\ ( A X. B ) =/= (/) ) ->
                    ( rank ` ( A X. B ) ) = ( rank ` ( A u. B ) ) ) $=
      ( vx vy vz cun crnk cfv wlim cxp c0 wne wa wss cv cop csuc wral wcel cpw 
      con0 wi rankon ontr2 mp2an cpr cuni pwuni wceq uniop pweq ax-mp sseqtri 
      visset unipr sspwb mpbi sstri unex pwex rankss rankelun rankel syl2an 
      adantl wb ranklim bitrd adantr mpbid sylancr onsucssi sylib ex 
      r19.21aivv fveq2 suceq syl sseq1d ralxp xpex rankbnd bitr3i rankxpl 
      eqssd ) ABHZIJZKZABLZMNZOWKIJZWIWJWMWIPZWLWJEQZFQZRZIJZSZWIPZFBTEATZWNWJW
      TEFABWJWOAUAZWPBUAZOZWTWJXDOZWRWIUAZWTWRWOWPHZUBZUBZIJZPZXJWIUAZXFXEWRUCU
      AWIUCUAXKXLOXFUDWQUEZWHUEZWRXJWIUFUGWQXIPXKWQWOWPUHZUBZXIWQWQUIZUBZXPWQUJ
      XQXOUKXRXPUKWOWPULXQXOUMUNUOXOXHPXPXIPXOXOUIZUBZXHXOUJXSXGUKXTXHUKWOWPEUP
      ZFUPZUQXSXGUMUNUOXOXHURUSUTWQXIXHXGWOWPYAYBVAVBVBVCUNXEXGIJWIUAZXLXDYCWJW
      OIJAIJUAWPIJBIJUAYCXBXCWOWPABYAYBCDVDWOACVEWPBDVEVFVGWJYCXLVHXDWJYCXHIJWI
      UAXLXGWIVIXHWIVIVJVKVLVMWRWIXMXNVNVOVPVQXAGQZIJZSZWIPZGWKTWNYGWTGEFABYDWQ
      UKZYFWSWIYHYEWRUKYFWSUKYDWQIVRYEWRVSVTWAWBGWKWIABCDWCWDWEVOVKWLWIWMPWJABC
      DWFVGWG $.
      $( [19-Sep-2006] $)


    $( If the rank of a cross product is a limit ordinal, so is the rank of the
       union of its arguments. $)
    rankxplim2 $p |- ( Lim ( rank ` ( A X. B ) ) ->
                     Lim ( rank ` ( A u. B ) ) ) $=
      ( cxp c0 wne crnk cfv wlim cun wcel wceq wn 0ellim n0i df-ne xpex 
      rankeq0 notbii bitr2i biimpi 3syl cuni wb unixp fveq2d rankuni unieqi 
      eqtr2i syl5eq limeq syl limuni2 syl5bi mpcom ) ABEZFGZUQHIZJZABKZHIZJZUTF
      USLUSFMZNZURUSOUSFPVEURURUQFMZNVEUQFQVFVDUQABCDRSTUAUBUCURUSUDZUDZJZVCUTU
      RVHVBMVIVCUEURUQUDZUDZHIZVBVHURVKVAHABUFUGVLVJHIZUDVHVJUHVMVGUQUHUIUJUKVH
      VBULUMUTVGJVIUSUNVGUNUMUOUP $.
      $( [19-Sep-2006] $)

    $( The rank of a cross product is a limit ordinal iff its union is. $)
    rankxplim3 $p |- ( Lim ( rank ` ( A X. B ) ) <->
                     Lim U. ( rank ` ( A X. B ) ) ) $=
      ( vx vy cxp crnk cfv wlim cuni limuni2 c0 wceq wn cun cv csuc con0 wrex 
      wa wcel 0ellim n0i unieq uni0 syl6eq con3i 3syl wss rankon onsuci 
      elisseti sucid wb ontri1 mp2an con2bii mpbi rankxpu sstr mpan2 mto wi 
      simprl simpr wne df-ne xpex rankeq0 notbii bitr2i sylib unixp syl fveq2d 
      rankuni unieqi eqtri syl5reqr eqimss adantr eqsstr3d adantrr limuni 
      sseqtr4d cvv word visset onordi orduni ax-mp ordelsuc sylibr limsuc 
      mpbid eqeltrd ordsucelsuc onsucuni2 mpan ad2antll eleqtrd onsucssi ex 
      a1d r19.23advv reeanv syl5ibr mtoi wo w3o ordzsl 3ori un00 olc adantl 
      sylbir xpeq0 unex 3imtr3i sylan orim12d ianor syl5ib imp simpl rankxplim 
      necon3abii sylan2br limeq mpbird expcom idd jaod mpd syl11anc impbii ) AB
      GZHIZJZYSKZJZYSLUUBYSMNZOZABPZHIZEQZRZNZESTZYSFQZRNZFSTZUAZOZYTUUBMUUAUBU
      UAMNZOUUDUUAUCUUAMUDUUCUUPUUCUUAMKMYSMUEUFUGUHUIZUUBUUNUUFRZRZRZYSUJZUVAU
      UTUUSUJZUUSUUTUBZUVBOUUSUUSSUURUUFUUEUKZULULZUMUNUVBUVCUUTSUBUUSSUBUVBUVC
      OUOUUSUVEULUVEUUTUUSUPUQURUSUVAYSUUSUJUVBABCDUTUUTYSUUSVAVBVCUUBUUIUULUAZ
      FSTESTUVAUUNUUBUVFUVAEFSSUUBUVFUVAVDUUGSUBUUKSUBUAUUBUVFUVAUUBUVFUAZUUSYS
      UBUVAUVGUUSUUARZYSUVGUURUUAUBZUUSUVHUBZUVGUUFUUAUBZUVIUVGUUFUUHUUAUUBUUIU
      ULVEUVGUUGUUAUBZUUHUUAUBZUVGUUHUUAUJZUVLUVGUUHUUAKZUUAUUBUUIUUHUVOUJUULUU
      BUUIUAUUHUUFUVOUUBUUIVFUUBUUFUVOUJZUUIUUBUUFUVONUVPUUBYRKZKZHIZUUFUVOUUBU
      VRUUEHUUBYRMVGZUVRUUENUUBUUDUVTUUQUVTYRMNZOZUUDYRMVHUWAUUCYRABCDVIVJZVKZV
      LVMABVNVOVPUVSUVQHIZKUVOUVQVQUWEUUAYRVQVRVSVTUUFUVOWAVOWBWCWDUUBUUAUVONUV
      FUUAWEWBWFUUGWGUBUUAWHZUVLUVNUOEWIYSWHZUWFYSYRUKZWJZYSWKWLZUUGUUAWGWMUQWN
      UUBUVLUVMUOUVFUUAUUGWOWBWPWQUUBUVKUVIUOUVFUUAUUFWOWBWPUWFUVIUVJUOUWJUURUU
      AWRWLVMUULUVHYSNZUUBUUIYSSUBUULUWKUWHYSUUKWSWTXAXBUUSYSUVEUWHXCVMXDXEXFUU
      IUULEFSSXGXHXIUUDUUOUAUUFJZYTXJZYTUUDUUOUWMUUDUUJOZUUMOZXJUWMUUOUUDUWNUWL
      UWOYTUUDUWNUWLUUFMNZOZUWNUWLUUDUWPUUJUWLUUFWHUWPUUJUWLXKUUFUVDWJEUUFXLUSX
      MUWBUUEMNZOUUDUWQUWRUWAUWRAMNZBMNZXJZUWAUWRUWSUWTUAUXAABXNUWTUXAUWSUWTUWS
      XOXPXQABXRWNUHUWDUWRUWPUUEABCDXSVJVKXTYAXDUUDUWOYTUUCUUMYTUWGUUCUUMYTXKUW
      IFYSXLUSXMXDYBUUJUUMYCYDYEUUDUWMYTVDUUOUUDUWLYTYTUWLUUDYTUWLUUDUAZYTUWLUW
      LUUDYFUXBYSUUFNZYTUWLUOUWLUVTUXCUUDABCDYGUUCYRMUWCYHYIYSUUFYJVOYKYLUUDYTY
      MYNWBYOYPYQ $.
      $( [19-Sep-2006] $)

    $( The rank of a cross product when the rank of the union of its arguments
       is a successor ordinal.  Part of Exercise 4 of [Kunen] p. 107.  See
       ~ rankxplim for the limit ordinal case. $)
    rankxpsuc $p |- ( ( ( rank ` ( A u. B ) ) = suc C /\ ( A X. B ) =/= (/) )
                  -> ( rank ` ( A X. B ) ) = suc suc ( rank ` ( A u. B ) ) ) $=
      ( vx cun crnk cfv csuc wceq cxp c0 wne wa cuni unixp fveq2d rankuni 
      unieqi eqtri syl5reqr suc11reg sylibr adantl cv con0 wrex wlim wn wi cvv 
      wcel fvex eleq1 mpbii sucexb nlimsucg syl limeq mtbird rankxplim2 con3i 
      wo xpex rankeq0 necon3abii w3o word rankon onordi ordzsl mpbi 3orass ori 
      sylbi ord con1d com12 3syl visset ax-mp mtbiri a1i r19.23aiv rankxplim3 
      notbii sylib syl6com unixp0 uniex eqeq1i 3bitri onuni syld impcom 
      onsucuni2 mpan eqtrd imp eqtr2d ) ABGZHIZCJZKZABLZMNZOZXCJZJZXFHIZPZJZXKX
      HXIXLKXJXMKXHXIXLPZJZXLXGXIXOKZXEXGXCXNKXPXGXFPZPZHIZXCXNXGXRXBHABQRXSXQH
      IZPXNXQSXTXLXFSZTUAUBXCXNUCUDUEXHXLFUFZJZKZFUGUHZXOXLKZXGXEYEXGXEXLUIZUJZ
      YEXEXGXKYCKZFUGUHZYHXEXCUIZUJXKUIZUJZXGYJUKXEYKXDUIZXECULUMZYNUJXEXDULUMZ
      YOXEXCULUMYPXBHUNXCXDULUOUPCUQUDCULURUSXCXDUTVAYLYKABDEVBVCXGYMYJXGYJYLXG
      YJYLXGXKMKZUJYJYLVDZYQXFMXFABDEVEZVFVGYQYRYQYJYLVHZYQYRVDXKVIYTXKXFVJZVKF
      XKVLVMYQYJYLVNVMVOVPVQVRVSVTZYJYMYHYIYMFUGYIYMUKYBUGUMZYIYLYCUIZYBULUMUUD
      UJFWAYBULURWBXKYCUTWCWDWEYLYGABDEWFWGWHWIXGYEYGXGYEYGXGXLMKZUJYEYGVDZUUEX
      FMXFMKXQMKXTMKUUEABWJXQXFYSWKVFXTXLMYAWLWMVGUUEUUFUUEYEYGVHZUUEUUFVDXLVIU
      UGXLXKUGUMZXLUGUMZUUAXKWNWBZVKFXLVLVMUUEYEYGVNVMVOVPVQVRWOWPYDYFFUGYDYFUK
      UUCUUIYDYFUUJXLYBWQWRWDWEUSWSXIXLUCUDXHYJXMXKKZXEXGYJUUBWTYIUUKFUGYIUUKUK
      UUCUUHYIUUKUUAXKYBWQWRWDWEUSXA $.
      $( [19-Sep-2006] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Auxiliary theorems for Alan Sare's virtual deduction, part 2
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d A x $.  $d B x $.  $d C x $.  $d C y $.  $d D x $.  $d D y $.
    $( Quantification restricted to a subclass for two quantifiers. ~ ssralv
       for two quantifiers.  The proof of ~ ssralv2 was automatically generated
       by minimizing the automatically translated proof of ~ ssralv2VD .  The
       automatic translation is by the tools program
       translate_without_overwriting.cmd (Contributed by Alan Sare,
       18-Feb-2012.). $)
    ssralv2 $p |- ( ( A C_ B /\ C C_ D ) -> ( A. x e. B A. y e. D ph ->
                    A. x e. A A. y e. C ph ) ) $=
      ( wss wa wral ax-17 hbra1 cv wcel wi wal ssralv adantr df-ral syl6ib ax4 
      syl6 adantl syl6d r19.21ad ) DEHZFGHZIZACGJZBEJZACFJZBDUHBKUIBELUHUJBMDNZ
      UIUKUHUJULUIOZBPZUMUHUJUIBDJZUNUFUJUOOUGUIBDEQRUIBDSTUMBUAUBUGUIUKOUFACFG
      QUCUDUE $.
      $( [18-Feb-2012] $)
  $}

  ${
    $( ~ sbcorg with a 3-disjuncts.  This proof is ~ sbc3orgVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
    sbc3org $p |- ( A e. B -> ( [ A / x ] ( ph \/ ps \/ ch ) <->
                  ( [ A / x ] ph \/ [ A / x ] ps \/ [ A / x ] ch ) ) ) $=
      ( wcel w3o wsbc wo sbcorg df-3or bicomi sbcbii orbi1d 3bitr3d syl6bbr ) 
      EFGZABCHZDEIZADEIZBDEIZJZCDEIZJZUAUBUDHRABJZCJZDEIUFDEIZUDJTUEUFCDEFKUGSD
      EFSUGABCLMNRUHUCUDABDEFKOPUAUBUDLQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d x ps $.  $d x ch $.
    $( Closed form of ~ 19.21ai with 2 additional conjuncts having no
       occurences of the quantifying variable.  This proof is ~ 19.21a3con13vVD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    19.21a3con13v $p |- ( ( ph -> A. x ph ) ->
                        ( ( ps /\ ph /\ ch ) -> A. x ( ps /\ ph /\ ch ) ) ) $=
      ( wal wi w3a simp1 a1i ax-17 syl6 simp2 imim1i simp3 3jcad 19.26-3an 
      syl6ibr ) AADEZFZBACGZBDEZRCDEZGTDESTUARUBSTBUATBFSBACHIBDJKTARBACLMSTCUB
      TCFSBACNICDJKOBACDPQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d B x $.  $d D x y $.
    $( ~ ra4sbc with two quantifying variables.  This proof is ~ ra4sbc2VD
       automatically translated and minimized.  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    ra4sbc2 $p |- ( A e. B -> ( C e. D -> ( A. x e. B A. y e. D ph ->
                  [ C / y ] [ A / x ] ph ) ) ) $=
      ( wcel wral wsbc idd wi ra4sbc a1d sbcralg biimpd syl6d ee23 ) DEHZFGHZTA
      CGIZBEIZABDJZCGIZUCCFJSTKSTUBUABDJZUDSUBUELTUABDEMNSUEUDABCDGEOPQUCCFGMR 
      $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A y $.  $d x y $.
    $( Substitution of a set variable for another set variable in a 3-conjunct
       formula.  Derived automatically from ~ sbcoreleleqVD .  (Contributed by
       Alan Sare, 31-Dec-2011.) $)
    sbcoreleleq $p |- ( A e. B -> ( [ A / y ] ( x e. y \/ y e. x \/ x = y ) <->
                      ( x e. A \/ A e. x \/ x = A ) ) ) $=
      ( wcel wel weq w3o wsbc cv wceq sbc3org wb sbcel2gv sbcel1gv eqsbc3r 
      3orbi123 3impexpbicomi syl3c bitr4d ) CDEZABFZBAFZABGZHBCIUBBCIZUCBCIZUDB
      CIZHZAJZCEZCUIEZUICKZHZUBUCUDBCDLUAUEUJMZUFUKMZUGULMZUMUHMBUICDNBCUIDOBCD
      UIPUNUOUPUHUMUEUJUFUKUGULQRST $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( If a class is transitive and any two distinct elements of the class are
       E-comparable, then every element of that class is transitive.  Derived
       automatically from ~ tratrbVD .  (Contributed by Alan Sare,
       31-Dec-2011.) $)
    tratrb $p |- ( ( Tr A /\ A. x e. A A. y e. A ( x e. y \/ y e. x \/ x = y )
                 /\ B e. A ) -> Tr B ) $=
      ( wtr wel weq w3o wral wcel w3a cv wa wi wal hbra1 19.21a3con13v ax-mp 
      hbra2 wn wceq simpl a1i simpr pm3.2an3 ee22 en3lp con3 syl6mpi eleq2 
      biimprcd syl6 pm3.2 ee23 en2lp wsbc simp3 wsb simp1 trel exp3a ee121 
      ee122 ralcom2 3ad2ant2 ra4sbc2 sbid syl6ib sbcoreleleq biimpd sylsyld 
      3ornot23 ex ee222 19.21ai dftr2 sylibr ) CEZABFZBAFZABGHZBCIZACIZDCJZKZVS
      BLZDJZMZALZDJZNZBOZAODEWEWLAWCWCAONWEWEAONWBACPWCVRWDAQRWEWKBWCWCBONWEWEB
      ONWAABCCSWCVRWDBQRWEWHDWIJZTZWIDUAZTZWJWMWOHZWJWEWHWMVSWGWMKZNZWRTWNWEWHV
      SWGWSWHVSNWEVSWGUBUCZWHWGNWEVSWGUDUCZVSWGWMUEUFWIWFDUGWMWRUHUIWEWHWOVSVTM
      ZNXBTWPWEWHVSWOVTXBWTWEWHWGWOVTNXAWOVTWGWIDWFUJUKULVSVTUMUNWIWFUOWOXBUHUI
      WEWDWHWABDUPZWQVRWCWDUQZWEWHXCAAURZXCWEWDWHWICJZWAACIBCIZXEXDWEVRWHVSWFCJ
      ZXFVRWCWDUSZWTWEVRWHWGWDXHXIXAXDVRWGWDXHCWFDUTVAVBVRVSXHXFCWIWFUTVAVCWCVR
      XGWDWAABCVDVEWABADCWICVFVBXCAVGVHWDXCWQABDCVIVJVKWNWPWQWJNWMWOWJVLVMVNVOV
      OABDVPVQ $.
      $( [31-Dec-2011] $)
  $}

  ${
    $( ~ ax-5 for a 3 element left-nested implication.  Derived automatically
       from ~ 3ax5VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3ax5 $p |- ( A. x ( ph -> ( ps -> ch ) ) -> ( A. x ph ->
               ( A. x ps -> A. x ch ) ) ) $=
      ( wi wal ax-5 syl6 ) ABCEZEDFADFIDFBDFCDFEAIDGBCDGH $.
      $( [31-Dec-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( An element of an ordinal class is ordinal.  Proposition 7.6 of
       [TakeutiZaring] p. 36.  This is an alternate proof of ~ ordelord using
       the Axiom of Regularity indirectly through ~ dford2 . dford2 is a weaker
       definition of ordinal number.  Given the Axiom of Regularity, it need
       not be assumed that ` _E Fr A ` because this is inferred by the Axiom of
       Regularity. ~ ordelordALT is ~ ordelordALTVD without virtual deductions
       and was automatically derived from ~ ordelordALTVD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    ordelordALT $p |- ( ( Ord A /\ B e. A ) -> Ord B ) $=
      ( vx vy word wtr wel weq w3o wral wcel wa dford2 ordtr adantr simprbi 
      3orcomb 2ralbii sylib simpr tratrb syl111anc wss trss sylc wi ssralv2 ex 
      syl3c sylanbrc ) BEBFZCDGZCDHZDCGZIZDBJCBJZAEZBAKZLZCDBMUSAFZULUNUMIZDAJC
      AJZURUKUQUTURANOZUSUODAJCAJZVBUQVDURUQUTVDCDAMPOZUOVACDAAULUMUNQRSUQURTZC
      DABUAUBUSBAUCZVGVDUPUSUTURVGVCVFABUDUEZVHVEVGVGVDUPUFUOCDBABAUGUHUIUJ $.
      $( [18-Feb-2012] $)
  $}

  $( Distribution of class substitution over a left-nested implication.
     Similar to ~ sbcimg . ~ sbcim2g is ~ sbcim2gVD without virtual deductions
     and was automatically derived from ~ sbcim2gVD using the tools program
     translate..without..overwriting.cmd and Metamath's minimize command.
     (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcim2g $p |- ( A e. B -> ( [ A / x ] ( ph -> ( ps -> ch ) ) <->
                ( [ A / x ] ph -> ( [ A / x ] ps -> [ A / x ] ch ) ) ) ) $=
    ( wcel wi wsbc wb sbcimg biimpd imbi2 biimpcd ee21 idd bi2 ee13 sylibrd 
    impbid ) EFGZABCHZHDEIZADEIZBDEICDEIHZHZUAUCUDUBDEIZHZUGUEJZUFUAUCUHAUBDEFK
    ZLBCDEFKZUIUHUFUGUEUDMNOUAUFUHUCUAUIUFUDUEUGUKUAUFPUGUEQRUJST $.
    $( [18-Mar-2012] $)

  $( Implication form of ~ sbcbii . ~ sbcbi is ~ sbcbiVD without virtual
     deductions and was automatically derived from ~ sbcbiVD using the tools
     program translate..without..overwriting.cmd and Metamath's minimize
     command.  (Contributed by Alan Sare, 18-Mar-2012.) $)
  sbcbi $p |- ( A e. B -> ( A. x ( ph <-> ps ) -> ( [ A / x ] ph <->
                  [ A / x ] ps ) ) ) $=
    ( wcel wb wal wsbc a4sbc sbcbidig sylibd ) DEFABGZCHMCDIACDIBCDIGMCDEJABCDE
    KL $.
    $( [18-Mar-2012] $)

  ${
    $d A x y z $.  $d B y z $.
    $( Formula-building inference rule for class substitution, substituting a
       class variable for the set variable of the transitivity predicate.
       ~ trsbc is ~ trsbcVD without virtual deductions and was automatically
       derived from ~ trsbcVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    trsbc $p |- ( A e. B -> ( [ A / x ] Tr x <-> Tr A ) ) $=
      ( vz vy wcel cv wtr wsbc wel wa wi wal dftr2 sbcbii sbcalg pm3.31 pm3.3 
      impbii sbcim2g wb wceq biidd sbcieg sbcel2gv imbi13 syl3c bitrd syl6bb 
      bitr3d albidv syl6bbr ) BCFZAGZHZABIDEJZEAJZKDAJZLZEMZDMZABIZBHZUOVAABCDE
      UNNOUMVBUPEGZBFZKDGZBFZLZEMZDMZVCUMVBUTABIZDMVJUTDABCPUMVKVIDUMVKUSABIZEM
      VIUSEABCPUMVLVHEUMUPUQURLLZABIZVLVHVMUSABCVMUSUPUQURQUPUQURRSOUMVNUPVEVGL
      LZVHUMVNUPABIZUQABIZURABIZLLZVOUPUQURABCTUMVPUPUAVQVEUAVRVGUAVSVOUAUPUPAB
      CUNBUBUPUCUDAVDBCUEAVFBCUEVPUPVQVEVRVGUFUGUHVOVHUPVEVGQUPVEVGRSUIUJUKUHUK
      UHDEBNULUH $.
      $( [18-Mar-2012] $)
  $}

  ${
    $d A q x y z $.
    $( The union of a class of transitive sets is transitive.  Alternate proof
       of ~ truni . ~ truniALT is ~ truniALTVD without virtual deductions and
       was automatically derived from ~ truniALTVD using the tools program
       translate..without..overwriting.cmd and Metamath's minimize command.
       (Contributed by Alan Sare, 18-Mar-2012.) $)
    truniALT $p |- ( A. x e. A Tr x -> Tr U. A ) $=
      ( vz vy vq cv wtr wral wel cuni wcel wa wi wal wex simpr a1i eluni 
      syl6ib simpl a1i12 wsb ra4sbc com12 syl6d trsbc biimpd ee33 trel 
      exp3acom3r ee233 elunii ex 19.21adv 19.23v mpdd 19.21aivv dftr2 sylibr ) 
      AFGZABHZCDIZDFZBJZKZLZCFZVDKZMZDNCNVDGVAVICDVAVFDEIZEFZBKZLZEOZVHVAVFVEVN
      VFVEMVAVBVEPQEVCBRSVAVFVMVHMZENVNVHMVAVFVOEVAVFVMCEIZVLVHVAVFVBVMVJVKGZVP
      VFVBMVAVBVETQVAVFVMVJMVJVLTUAVAVFVMVLUTAEUBZVQVAVFVMVLMVJVLPUAZVAVFVMVLVR
      VSVLVAVRUTAVKBUCUDUEVLVRVQAVKBUFUGUHVQVBVJVPVKVGVCUIUJUKVSVPVLVHVGVKBULUM
      UHUNVMVHEUOSUPUQCDVDURUS $.
      $( [18-Mar-2012] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d D y $.  $d x y $.
    $( Distribute proper substitution through a subclass relation.  This
       theorem was automatically derived from ~ sbcssVD .  (Contributed by Alan
       Sare, 22-Jul-2012.) $)
    sbcss $p |- ( A e. B -> ( [ A / x ] C C_ D <->
      [_ A / x ]_ C C_ [_ A / x ]_ D ) ) $=
      ( vy wcel wss wsbc cv csb wi wal dfss2 sbcbii sbcalg wb sbcimg sbcel2g 
      imbi12d bitrd 19.21aiv albi syl syl6bbr ) BCGZDEHZABIZFJZABDKZGZUIABEKZGZ
      LZFMZUJULHUFUHUIDGZUIEGZLZFMZABIZUOUGUSABCFDENOUFUTURABIZFMZUOURFABCPUFVA
      UNQZFMVBUOQUFVCFUFVAUPABIZUQABIZLUNUPUQABCRUFVDUKVEUMABUIDCSABUIECSTUAUBV
      AUNFUCUDUAUAFUJULNUE $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a b y $.  $d b x y $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem5VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem5 $p |- ( [ ( a i^i x ) / b ] ( ( b C_ ( a i^i x ) /\ b =/= (/) )
        ->
                  E. y e. b ( b i^i y ) = (/) ) <->
                  ( ( ( a i^i x ) C_ ( a i^i x ) /\ ( a i^i x ) =/= (/) ) ->
                  E. y e. ( a i^i x ) ( ( a i^i x ) i^i y ) = (/) ) ) $=
      ( cv cin wss c0 wne wa wceq wrex wi wsbc cvv wcel wb visset inex1 sbcimg 
      ax-mp sbcang sseq1 sbcieg wn wal df-ne ax-gen sbcbi mp2 sbcng bicomd 
      eqsbc3 necon3bbii 3bitr2i anbi12i bitri wel wex df-rex sbcel2gv csb 
      sbceqdig csbing csbvarg csbconstgfv ineq12i eqtri eqeq12i exbii sbcexg 
      3bitr2ri imbi12i ) DEZCEZAEZFZGZVNHIZJZVNBEZFZHKZBVNLZMDVQNZVTDVQNZWDDVQN
      ZMZVQVQGZVQHIZJZVQWAFZHKZBVQLZMVQOPZWEWHQVOVPCRSZVTWDDVQOTUAWFWKWGWNWFVRD
      VQNZVSDVQNZJZWKWOWFWSQWPVRVSDVQOUBUAWQWIWRWJWOWQWIQWPVRWIDVQOVNVQVQUCUDUA
      WRVNHKZUEZDVQNZWTDVQNZUEZWJWOVSXAQZDUFWRXBQWPXEDVNHUGUHVSXADVQOUIUJWOXDXB
      QWPWOXBXDWTDVQOUKULUAXCVQHWOXCVQHKQWPDVQHOUMUAUNUOUPUQWGBDURZWCJZBUSZDVQN
      ZWNWOWDXHQZDUFWGXIQWPXJDWCBVNUTUHWDXHDVQOUIUJWNWAVQPZWMJZBUSXGDVQNZBUSZXI
      WMBVQUTXMXLBXMXFDVQNZWCDVQNZJZXLWOXMXQQWPXFWCDVQOUBUAXOXKXPWMWOXOXKQWPDWA
      VQOVAUAXPDVQWBVBZDVQHVBZKZWMWOXPXTQWPDVQWBHOVCUAXRWLXSHXRDVQVNVBZDVQWAVBZ
      FZWLWOXRYCKWPDVQOVNWAVDUAYAVQYBWAWOYAVQKWPDVQOVEUAWOYBWAKWPDVQWAOVFUAVGVH
      WOXSHKWPDVQHOVFUAVIUQUPUQVJWOXNXIQWPWOXIXNXGBDVQOVKULUAVLUQVMUQ $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem4VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem4 $p |- ( [ y / x ] ( x e. a /\ ( a i^i x ) = (/) ) <->
                        ( y e. a /\ ( a i^i y ) = (/) ) ) $=
      ( wel cv cin c0 wceq wa wsb sban cvv wcel wb visset sbcel1gv ax-mp csb 
      sbceqdig csbing csbconstgfv csbvarg ineq12i eqtri eqeq12i bitri anbi12i 
      ) ACDZCEZAEZFZGHZIABJUHABJZULABJZIBCDZUIBEZFZGHZIUHULABKUMUOUNURUPLMZUMUO
      NBOZAUPUILPQUNAUPUKRZAUPGRZHZURUSUNVCNUTAUPUKGLSQVAUQVBGVAAUPUIRZAUPUJRZF
      ZUQUSVAVFHUTAUPLUIUJTQVDUIVEUPUSVDUIHUTAUPUILUAQUSVEUPHUTAUPLUBQUCUDUSVBG
      HUTAUPGLUAQUEUFUGUF $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a b y $.  $d b x y $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem3VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem3 $p |- ( ( a C_ On /\ a =/= (/) ) ->
                        ( ( x e. a /\ -. ( a i^i x ) = (/) ) ->
                        E. y e. ( a i^i x ) ( ( a i^i x ) i^i y ) = (/) ) ) $=
      ( vb cv con0 wss c0 wne wa wel cin wceq wn wrex ssid wi simpr a1i df-ne 
      syl6ibr pm3.2 ee02 wsbc cvv wcel wal visset inex2 cep wfr wwe word simpl 
      ssel sylsyld eloni syl6 ordwe inss2 wess com12 syl6mpi wefr dfepfr 
      syl6ib a4sbc onfrALTlem5 mpdd ) CEZFGZVJHIZJZACKZVJAEZLZHMNZJZVPVPGZVPHIZ
      JZVPBEZLHMBVPOZVSVMVRVTWAVPPVMVRVQVTVRVQQVMVNVQRSVPHTUAVSVTUBUCVMVRDEZVPG
      WDHIJWDWBLHMBWDOQZDVPUDZWAWCQVPUEUFVMVRWEDUGZWFVOVJAUHUIVMVRVPUJUKZWGVMVR
      VPUJULZWHVMVRVOUJULZVPVOGZWIVMVRVOUMZWJVMVRVOFUFZWLVMVKVRVNWMVKVLUNVRVNQV
      MVNVQUNSVJFVOUOUPVOUQURVOUSURVJVOUTWKWJWIVPVOUJVAVBVCVPUJVDURDBVPVEVFWEDV
      PUEVGUCABCDVHVFVI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d ch x $.  $d ph x $.  $d ps x $.
    ggen31.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( ~ gen31 without virtual deductions.  (Contributed by Alan Sare,
       22-Jul-2012.) $)
    ggen31 $p |- ( ph -> ( ps -> ( ch -> A. x th ) ) ) $=
      ( wal wi wa imp 19.21adv ex ) ABCDEGHABICDEABCDHFJKL $.
      $( [22-Jun-2012] $)
  $}

  ${
    $d a y z $.  $d x y z $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem2VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem2 $p |- ( ( a C_ On /\ a =/= (/) ) -> ( ( x e. a /\
                      -. ( a i^i x ) = (/) ) -> E. y e. a ( a i^i y ) =
                      (/) ) ) $=
      ( vz cv con0 wss c0 wne wa wcel cin wceq wn wex wrex onfrALTlem3 df-rex 
      syl6ib wi wal simpr a1i12 inss2 sseli syl8 inss1 wtr word simpl a1i ssel 
      sylsyld eloni syl6 ordtr simpll trel exp3acom23 ee233 elin simplbi2 ee33 
      simplbi2com exp4a ggen31 dfss2 biimpri sseq0 ex pm3.21 iin3 19.21adv 
      exim mpdd syl6ibr ) CEZFGZVQHIZJZAEZVQKZVQWALZHMNZJZBEZVQKZVQWFLZHMZJZBOZ
      WIBVQPVTWEWFWCKZWCWFLZHMZJZBOZWKVTWEWNBWCPWPABCQWNBWCRSVTWEWOWJTZBUAWPWKT
      VTWEWQBVTWEWOWJVTWEWOWIWGWJVTWEWOWHWMGZWNWIVTWEWODEZWHKZWSWMKZTZDUAZWRVTW
      EWOXBDVTWEWOWTXAVTWEWOWTJZWSWFKZWSWCKZXAVTWEXDWTXEVTWEXDWTTWOWTUBUCZWHWFW
      SVQWFUDUEUFZVTWEXDWSVQKZWSWAKZXFVTWEXDWTXIXGWHVQWSVQWFUGUEUFVTWEWAUHZXDWF
      WAKZXEXJVTWEWAUIZXKVTWEWAFKZXMVTVRWEWBXNVRVSUJWEWBTVTWBWDUJUKVQFWAULUMWAU
      NUOWAUPUOVTWEXDWLXLVTWEXDWLTWLWNWTUQUCWCWAWFVQWAUDUEUFXHXKXEXLXJWAWSWFURU
      SUTXFXIXJWSVQWAVAVBVCXAXFXEWSWCWFVAVDVCVEVFWRXCDWHWMVGVHUFVTWEWOWNTWLWNUB
      UCWRWNWIWHWMVIVJVCVTWEWOWLWGVTWEWOWLTWLWNUJUCWCVQWFVQWAUGUEUFWIWGVKVCVLVM
      WOWJBVNUOVOWIBVQRVP $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d ph y $.
    $( A theorem pertaining to the substitution for an existentially quantified
       variable when the substituted variable does not occur in the quantified
       wff.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    cbvexsv $p |- ( E. x ph <-> E. y [ y / x ] ph ) $=
      ( cvv wrex wsb wex cbvrexsv rexv 3bitr3i ) ABDEABCFZCDEABGKCGABCDHABIKCIJ
      $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x y $.
    $( Lemma for ~ onfrALT automatically derived from ~ onfrALTlem1VD .
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    onfrALTlem1 $p |- ( ( a C_ On /\ a =/= (/) ) -> ( ( x e. a /\ ( a i^i x ) =
                      (/) ) -> E. y e. a ( a i^i y ) = (/) ) ) $=
      ( cv con0 wss c0 wne wa wel cin wceq wex wrex wsb wi 19.8a a1i cbvexsv 
      syl6ib onfrALTlem4 exbii df-rex syl6ibr ) CDZEFUEGHIZACJUEADKGLIZBCJUEBDK
      GLZIZBMZUHBUENUFUGUGABOZBMZUJUFUGUGAMZULUGUMPUFUGAQRUGABSTUKUIBABCUAUBTUH
      BUEUCUD $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d a x y $.
    $( The epsilon relation is foundational on the class of ordinal numbers.
       ~ onfrALT is an alternate proof of ~ onfr . ~ onfrALTVD is the Virtual
       Deduction proof from which ~ onfrALT is derived.  The Virtual Deduction
       proof mirrors the working proof of ~ onfr which is the main part of the
       proof of Theorem 7.12 of the first edition of TakeutiZaring.  The proof
       of the corresponding Proposition 7.12 of [TakeutiZaring] p. 38 (second
       edition) does not contain the working proof equivalent of ~ onfrALTVD .
       This theorem does not rely on the Axiom of Regularity.  (Contributed by
       Alan Sare, 22-Jul-2012.) $)
    onfrALT $p |- _E Fr On $=
      ( va vy vx con0 cep wfr cv wss c0 wne wa cin wceq wrex wi dfepfr simpr 
      wel wex wn onfrALTlem1 exp3a onfrALTlem2 pm2.61 ee22 19.23adv n0 syl5ib 
      mpd mpgbir ) DEFAGZDHZUKIJZKZUKBGLIMBUKNZOAABDPUNUMUOULUMQUNCARZCSUOUMUNU
      PUOCUNUPUKCGLIMZUOOUQTZUOOUOUNUPUQUOCBAUAUBUNUPURUOCBAUCUBUQUOUDUEUFCUKUG
      UHUIUJ $.
      $( [30-Jun-2012] $)
  $}

  $( Formula-building implication rule for class substitution.  Closed form of
     ~ csbeq2i . ~ csbeq2g is derived from the virtual deduction proof
     ~ csbeq2gVD .  (Contributed by Alan Sare, 10-Nov-2012. ) $)
  csbeq2g $p |- ( A e. D -> ( A. x B = C ->
                   [_ A / x ]_ B = [_ A / x ]_ C ) ) $=
    ( wcel wceq wal wsbc csb a4sbc sbceqdig sylibd ) BEFCDGZAHNABIABCJABDJGNABE
    KABCDELM $.
    $( [10-Nov-2012] $)

$( End of auxiliary theorems for Alan Sare's virtual deduction, part 2 $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Scott's trick; collection principle; Hilbert's epsilon
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w A $.
    $( Scott's trick collects all sets that have a certain property and are of
       smallest possible rank.  This theorem shows that the resulting
       collection, expressed as in Equation 9.3 of [Jech] p. 72, is a set. $)
    scottex $p |- { x e. A | A. y e. A ( rank ` x ) C_ ( rank ` y ) } e. _V $=
      ( vz vw c0 wceq cv crnk cfv wss wral crab cvv wcel 0ex eleq1 mpbiri 
      rabexg syl wn wex neq0 hbra1 ax-17 hbrab hbel wi ra4 com12 a1d r19.21aiv 
      ss2rab sylibr con0 wrex rankon fveq2 sseq1d elrab simprbi rgen sseq2 
      ralbidv rcla4ev mp2an bndrank ax-mp ssex 19.23ai sylbi pm2.61i ) CFGZAHZI
      JZBHZIJZKZBCLZACMZNOZVMCNOZWAVMWBFNOPCFNQRVSACNSTVMUAVPCOZBUBWABCUCWCWABB
      DDVTNVSBADCVRBCUDDHZCOBUEUFWDNOBUEUGWCVTVRACMZKZWAWCVSVRUHZACLWFWCWGACWCW
      GVNCOVSWCVRVRBCUIUJUKULVSVRACUMUNVTWEEHZIJZWDKZEWELZDUOUPZWENOVQUOOWIVQKZ
      EWELZWLVPUQWMEWEWHWEOWHCOWMVRWMAWHCVNWHGVOWIVQVNWHIURUSUTVAVBWKWNDVQUOWDV
      QGWJWMEWEWDVQWIVCVDVEVFDEWEVGVHVITVJVKVL $.
      $( [13-Oct-2003] $)
  $}

  ${
    $d x y z w A $.
    $( Scott's trick collects all sets that have a certain property and are of
       smallest possible rank.  This theorem shows that the resulting
       collection, expressed as in Equation 9.3 of [Jech] p. 72, contains at
       least one representative with the property, if there is one.  In other
       words, the collection is empty iff no set has the property (i.e. ` A `
       is empty). $)
    scott0 $p |- ( A = (/) <->
               { x e. A | A. y e. A ( rank ` x ) C_ ( rank ` y ) } = (/) ) $=
      ( vz c0 wceq cv crnk cfv wss wral crab rabeq rab0 syl6eq wne wrex ciin 
      cab wcel wex n0 hbre1 eqid ra4e mpan2 19.23ai sylbi wa fvex eqeq1 anbi2d 
      cla4ev eximi excom sylibr df-rex exbii 3imtr4i syl abn0 cint con0 wi 
      hbab1 ax-17 dfss2f abid rankon eleq1 mpbiri a1i r19.23aiv mpgbir onint 
      mpan dfiin2 syl5eqel hbii1 hbeleq rexbid elabg ibi sseq1 ssid fveq2 
      sseq1d rcla4ev iinss syl5bi r19.21aiv reximi 3syl rabn0 necon4i impbii ) 
      CEFZAGZHIZBGZHIZJZBCKZACLZEFWQXDXCAELEXCACEMXCANOCEXDECEPZXCACQZXDEPXEACW
      SRZWTWSFZACQZBSZTZXGWSFZACQZXFXEXJEPZXKXEXIBUAZXNXEWSWSFZACQZXOXEWRCTZAUA
      XQACUBXRXQAXPACUCXRXPXQWSUDXPACUEUFUGUHXRXPUIZAUAZXRXHUIZAUAZBUAZXQXOXTYA
      BUAZAUAYCXSYDAYAXSBWSWRHUJZXHXHXPXRWTWSWSUKULUMUNYABAUOUPXPACUQXIYBBXHACU
      QURUSUTXIBVAUPXNXJVBZXJXGXJVCJZXNYFXJTYGWTXJTZWTVCTZVDBBDXJVCXIBDVEDGVCTB
      VFVGYHXIYIXIBVHXHYIACXHYIVDXRXHYIWSVCTWRVIWTWSVCVJVKVLVMUHVNXJVOVPABCWSYE
      VQVRUTXKXMXIXMBXGXJWTXGFXHXLACABXGABCWSVSVTWTXGWSUKWAWBWCXLXCACXLXBBCXLXG
      XAJZXBWTCTZXGWSXAWDYKXBACQZYJYKXAXAJZYLXAWEXBYMAWTCWRWTFWSXAXAWRWTHWFWGWH
      UFACWSXAWIUTWJWKWLWMXCACWNUPWOWP $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    $( Theorem scheme version of ~ scottex .  The collection of all ` x ` of
       minimum rank such that ` ph ( x ) ` is true, is a set. $)
    scottexs $p |- { x | ( ph /\
             A. y ( [ y / x ] ph -> ( rank ` x ) C_ ( rank ` y ) ) ) } e. _V $=
      ( vz cv crnk cfv wss cab wral crab wsbc wi wal wa cvv wcel ax-17 hbab1 
      hbral wceq fveq2 sseq1d ralbidv cbvrab df-rab abid df-ral df-clab imbi1i 
      albii bitri anbi12i abbii 3eqtri scottex eqeltrri ) DEZFGZCEZFGZHZCABIZJZ
      DVCKZAABUTLZBEZFGZVAHZMZCNZOZBIZPVEVICVCJZBVCKVGVCQZVNOZBIVMVDVNDBCVCUTVC
      QZDRABCSZVBBCVCVRVBBRTVNDRURVGUAZVBVICVCVSUSVHVAURVGFUBUCUDUEVNBVCUFVPVLB
      VOAVNVKABUGVNVQVIMZCNVKVICVCUHVTVJCVQVFVIACBUIUJUKULUMUNUODCVCUPUQ $.
      $( [13-Oct-2003] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    $( Theorem scheme version of ~ scott0 .  The collection of all ` x ` of
       minimum rank such that ` ph ( x ) ` is true, is not empty iff there is
       an ` x ` such that ` ph ( x ) ` holds. $)
    scott0s $p |- ( E. x ph <-> { x | ( ph /\
         A. y ( [ y / x ] ph -> ( rank ` x ) C_ ( rank ` y ) ) ) } =/= (/) ) $=
      ( vz wex cab c0 wne cv wsbc crnk cfv wss wi wal wa abn0 wceq wral crab 
      scott0 wcel ax-17 hbab1 hbral fveq2 sseq1d ralbidv cbvrab df-rab abid 
      df-ral df-clab imbi1i albii bitri anbi12i abbii 3eqtri eqeq1i necon3bii 
      bitr3i ) ABEABFZGHAABCIZJZBIZKLZVDKLZMZNZCOZPZBFZGHABQVCGVMGVCGRDIZKLZVHM
      ZCVCSZDVCTZGRVMGRDCVCUAVRVMGVRVICVCSZBVCTVFVCUBZVSPZBFVMVQVSDBCVCVDVCUBZD
      UCABCUDZVPBCVCWCVPBUCUEVSDUCVNVFRZVPVICVCWDVOVGVHVNVFKUFUGUHUIVSBVCUJWAVL
      BVTAVSVKABUKVSWBVINZCOVKVICVCULWEVJCWBVEVIACBUMUNUOUPUQURUSUTUPVAVB $.
      $( [6-Apr-2007] $) $( [13-Oct-2003] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.  $d w C $.  $d w D $.
    cplem1.1 $e |- C = { y e. B | A. z e. B ( rank ` y ) C_ ( rank ` z ) } $.
    cplem1.2 $e |- D = U_ x e. A C $.
    $( Lemma for the Collection Principle ~ cp . $)
    cplem1 $p |- A. x e. A ( B =/= (/) -> ( B i^i D ) =/= (/) ) $=
      ( vw c0 wne cin wi cv wcel wex wa crnk cfv wss wral crab ssrab2 eqsstri 
      sseli a1i ciun ssiun2 syl6ssr sseld jcad inelcm syl6 19.23adv wceq 
      scott0 eqeq1i bitr4i necon3bii n0 bitri syl5ib rgen ) EKLZEGMKLZNADAODPZJ
      OZFPZJQZVFVEVGVIVFJVGVIVHEPZVHGPZRVFVGVIVKVLVIVKNVGFEVHFBOSTCOSTUACEUBZBE
      UCZEHVMBEUDUEUFUGVGFGVHVGFADFUHGADFUIIUJUKULVHEGUMUNUOVEFKLVJEKFKEKUPVNKU
      PFKUPBCEUQFVNKHURUSUTJFVAVBVCVD $.
      $( [2-Apr-2007] $) $( [17-Oct-2003] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.
    cplem2.1 $e |- A e. _V $.
    $( -Lemma for the Collection Principle ~ cp . $)
    cplem2 $p |- E. y A. x e. A ( B =/= (/) -> ( B i^i y ) =/= (/) ) $=
      ( vz vw c0 wne cv crnk cfv wss wral crab ciun cin wi wex eqid cplem1 
      scottex iunex wceq hbiu1 hbeleq ineq2 neeq1d imbi2d ralbid cla4ev ax-mp 
      ) DHIZDACFJKLGJKLMGDNFDOZPZQZHIZRZACNZUMDBJZQZHIZRZACNZBSAFGCDUNUOUNTUOTU
      AVDUSBUOACUNEFGDUBUCUTUOUDZVCURACABUOABCUNUEUFVEVBUQUMVEVAUPHUTUODUGUHUIU
      JUKUL $.
      $( [2-Apr-2007] $) $( [17-Oct-2003] $)
  $}

  ${
    $d ph z w $.  $d x y z w $.
    $( Collection Principle.  This remarkable theorem scheme is in effect a
       very strong generalization of the Axiom of Replacement.  The proof makes
       use of Scott's trick ~ scottex that collapses a proper class into a set
       of minimum rank.  The wff ` ph ` can be thought of as
       ` ph ( x , y ) ` .  Scheme "Collection Principle" of [Jech] p. 72. $)
    cp $p |- E. w A. x e. z ( E. y ph -> E. y e. w ph ) $=
      ( cab c0 wne cv cin wi wral wex wrex visset cplem2 abn0 wcel wa elin 
      abid anbi1i ancom 3bitri exbii hbab1 ax-17 hbin ne0f df-rex 3bitr4i 
      imbi12i ralbii mpbi ) ACFZGHZUOEIZJZGHZKZBDIZLZEMACMZACUQNZKZBVALZEMBEVAU
      ODOPVBVFEUTVEBVAUPVCUSVDACQCIZURRZCMVGUQRZASZCMUSVDVHVJCVHVGUORZVISAVISVJ
      VGUOUQTVKAVIACUAUBAVIUCUDUECDURCDUOUQACDUFVAUQRCUGUHUIACUQUJUKULUMUEUN $.
      $( [17-Oct-2003] $)
  $}

  ${
    $d ph z w $.  $d x y z w $.
    $( A very strong generalization of the Axiom of Replacement (compare
       ~ zfrep6 ), derived from the Collection Principle ~ cp .  Its strength
       lies in the rather profound fact that ` ph ( x , y ) ` does not have to
       be a "function-like" wff, as it does in the standard Axiom of
       Replacement.  This theorem is sometimes called the Boundedness Axiom. $)
    bnd $p |- ( A. x e. z E. y ph -> E. w A. x e. z E. y e. w ph ) $=
      ( wex cv wral wrex wi cp ralim eximi ax-mp 19.37v mpbi ) ACFZBDGZHZACEGIZ
      BRHZJZEFZSUAEFJQTJBRHZEFUCABCDEKUDUBEQTBRLMNSUAEOP $.
      $( [2-Jan-2004] $) $( [17-Oct-2004] $)
  $}

  ${
    $d ph z w v $.  $d x z w v A $.  $d x y z w v B $.
    bnd2.1 $e |- A e. _V $.
    $( A variant of the Boundedness Axiom ~ bnd that picks a subset ` z ` out
       of a possibly proper class ` B ` in which a property is true. $)
    bnd2 $p |- ( A. x e. A E. y e. B ph ->
              E. z ( z C_ B /\ A. x e. A E. y e. z ph ) ) $=
      ( vw vv wrex wral cv wcel wa wex wss df-rex ralbii wi wceq raleq exbidv 
      imbi12d bnd vtocl sylbi cin visset inex1 inss2 sseq1 mpbiri biantrurd 
      rexeq elin anbi1i anass bitri rexbii2 syl6bb ralbidv bitr3d cla4ev 
      19.23aiv syl ) ACFJZBEKZCLZFMZANZCHLZJZBEKZHOZDLZFPZACVOJZBEKZNZDOZVGVJCO
      ZBEKZVNVFWABEACFQRWABILZKZVLBWCKZHOZSWBVNSIEGWCETZWDWBWFVNWABWCEUAWGWEVMH
      VLBWCEUAUBUCVJBCIHUDUEUFVMVTHVSVMDVKFUGZVKFHUHUIVOWHTZVRVSVMWIVPVRWIVPWHF
      PVKFUJVOWHFUKULUMWIVQVLBEWIVQACWHJVLACVOWHUNAVJCWHVKVHWHMZANVHVKMZVINZANW
      KVJNWJWLAVHVKFUOUPWKVIAUQURUSUTVAVBVCVDVE $.
      $( [4-Feb-2004] $)
  $}

  ${
    $d x y z A $.
    $( The collection of all sets equinumerous to a set ` A ` and having least
       possible rank is a set.  This is the part of the justification of the
       definition of kard of [Enderton] p. 222. $)
    kardex $p |- { x | ( x ~~ A /\
                  A. y ( y ~~ A -> ( rank ` x ) C_ ( rank ` y ) ) ) } e. _V $=
      ( vz cv crnk cfv wss cen wbr cab wral crab wi wal wa cvv wcel df-rab 
      visset breq1 elab ralab anbi12i abbii eqtri scottex eqeltrri ) AEZFGBEZFG
      HZBDEZCIJZDKZLZAUNMZUICIJZUJCIJZUKNBOZPZAKZQUPUIUNRZUOPZAKVAUOAUNSVCUTAVB
      UQUOUSUMUQDUIATULUICIUAUBUMURUKBDULUJCIUAUCUDUEUFABUNUGUH $.
      $( [21-Mar-2007] $) $( [14-Dec-2003] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d z C $.  $d z D $.
    karden.1 $e |- A e. _V $.
    karden.2 $e |- B e. _V $.
    karden.3 $e |- C =
       { x | ( x ~~ A /\ A. y ( y ~~ A -> ( rank ` x ) C_ ( rank ` y ) ) ) } $.
    karden.4 $e |- D =
       { x | ( x ~~ B /\ A. y ( y ~~ B -> ( rank ` x ) C_ ( rank ` y ) ) ) } $.
    $( If we allow the Axiom of Regularity, we can avoid the Axiom of Choice by
       defining the cardinal number of a set as the set of all sets
       equinumerous to it and having least possible rank.  This theorem proves
       the equinumerosity relationship for this definition (compare
       ~ carden ).  The hypotheses correspond to the definition of kard of
       [Enderton] p. 222 (which we don't define separately since currently we
       do not use it elsewhere).  This theorem along with ~ kardex justify the
       definition of kard.  The restriction to least rank prevents the proper
       class that would result from ` { x | x ~~ A } ` . $)
    karden $p |- ( C = D <-> A ~~ B ) $=
      ( vz vw wceq cen wbr cv crnk cfv wss cab wral wrex crab c0 wne wex enref 
      breq1 cla4ev ax-mp abn0 mpbir scott0 necon3bii mpbi rabn0 wcel wi wal wa 
      simpl a1i wb eqeq12i eq2ab bitri fveq2 sseq1d imbi2d albidv anbi12d 
      bibi12d a4v sylbi syl6bi jcad entr ensym sylan syl6 visset elab ralab 
      anbi12i syl5ib exp3a r19.23adv mpi cvv enen2 mpan imbi1d abbidv 3eqtr4g 
      impbii ) EFMZCDNOZWPKPZQRZBPZQRZSZBLPZCNOZLTZUAZKXEUBZWQXFKXEUCZUDUEZXGXE
      UDUEZXIXJXDLUFZCCNOZXKCGUGXDXLLCGXCCCNUHUIUJXDLUKULXEUDXHUDKBXEUMUNUOXFKX
      EUPUOWPXFWQKXEWPWRXEUQZXFWQWPWRCNOZWTCNOZXBURZBUSZUTZWQXMXFUTWPXRXNWRDNOZ
      UTWQWPXRXNXSXRXNURWPXNXQVAVBWPXRXSWTDNOZXBURZBUSZUTZXSWPAPZCNOZXOYDQRZXAS
      ZURZBUSZUTZYDDNOZXTYGURZBUSZUTZVCZAUSZXRYCVCZWPYJATZYNATZMYPEYRFYSIJVDYJY
      NAVEVFYOYQAKYDWRMZYJXRYNYCYTYEXNYIXQYDWRCNUHYTYHXPBYTYGXBXOYTYFWSXAYDWRQV
      GVHZVIVJVKYTYKXSYMYBYDWRDNUHYTYLYABYTYGXBXTUUAVIVJVKVLVMVNXSYBVAVOVPCWRNO
      XSWQXNCWRDVQWRCGVRVSVTXMXNXFXQXDXNLWRKWAXCWRCNUHWBXDXOXBBLXCWTCNUHWCWDWEW
      FWGWHWQYRYSEFWQYJYNAWQYEYKYIYMDWIUQZWQYEYKVCHCDYDWIWJWKWQYHYLBWQXOXTYGUUB
      WQXOXTVCHCDWTWIWJWKWLVJVKWMIJWNWO $.
      $( [18-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    htalem.1 $e |- A e. _V $.
    htalem.2 $e |- B = U. { x e. A | A. y e. A -. y R x } $.
    $( Lemma for defining an emulation of Hilbert's epsilon.  Hilbert's epsilon
       is described at ~ http://plato.stanford.edu/entries/epsilon-calculus/ .
       This theorem is equivalent to Hilbert's "transfinite axiom," described
       on that page, with the additional ` R We A ` antecedent.  The element
       ` B ` is the epsilon that the theorem emulates. $)
    htalem $p |- ( ( R We A /\ A =/= (/) ) -> B e. A ) $=
      ( wwe c0 wne wa cv wbr wn wral crab cuni wss wcel ssid wereucl mp3an2 
      syl5eqel ) CEHZCIJZKBLALEMNBCOACPQZCDUDCCRUEUFCSCTABCCEFUAUBGUC $.
      $( [10-Apr-2007] $) $( [11-Mar-2004] $)
  $}

  ${
    $d z v A $.  $d x y R z v $.  $d y z v ph $.
    hta.1 $e |- A = { x | ( ph /\ A. y ( [ y / x ] ph ->
                                         ( rank ` x ) C_ ( rank ` y ) ) ) } $.
    hta.2 $e |- B = U. { x e. A | A. y e. A -. y R x } $.
    $( A ZFC emulation of Hilbert's transfinite axiom.  The set ` B ` has the
       properties of Hilbert's epsilon, except that it also depends on a
       well-ordering ` R ` .  This theorem arose from discussions with Raph
       Levien on 5-Mar-2004 about translating the HOL proof language, which
       uses Hilbert's epsilon.  See
       ~ http://us.metamath.org/downloads/choice.txt (copy of obsolete link
       http://ghilbert.org/choice.txt) and
       ~ http://us.metamath.org/downloads/megillaward2005he.pdf .

       Hilbert's epsilon is described at
       ~ http://plato.stanford.edu/entries/epsilon-calculus/ .  This theorem
       differs from Hilbert's transfinite axiom described on that page in that
       it requires ` R We A ` as an antecedent.  Class ` A ` collects the sets
       of least rank for which ` ph ( x ) ` is true.  Class ` B ` , which
       emulates the epsilon, is the minimum element in a well-ordering ` R ` on
       ` A ` .

       If a well-ordering ` R ` on ` A ` can be expressed in a closed form, as
       might be the case if we are working with say natural numbers, we can
       eliminate the antecedent with modus ponens, giving us the exact
       equivalent of Hilbert's transfinite axiom.  Otherwise, we replace ` R `
       with a dummy set variable, say ` w ` , and attach ` w We A ` as an
       antecedent in each step of the ZFC version of the HOL proof until the
       epsilon is eliminated.  At that point, ` B ` (which will have ` w ` as a
       free variable) will no longer be present, and we can eliminate
       ` w We A ` by applying ~ 19.23aiv and ~ weth , using ~ scottexs to
       establish the existence of ` A ` .

       For a version of this theorem scheme using class (meta)variables instead
       of wff (meta)variables, see ~ htalem . $)
    hta $p |- ( R We A -> ( ph -> [ B / x ] ph ) ) $=
      ( vz vv wwe cv wsbc crnk cfv wss wi wal wa cab c0 wne wcel wceq wb weeq2 
      ax-mp scottexs wbr wn wral crab cuni ax-17 hba1 hban hbab hbxfr raleqf 
      a1i rabbiia hbab1 rabeqf hbral breq2 notbid ralbidv cbvrab breq1 cbvralf 
      eqtri 3eqtri unieqi htalem ex sylbi simpl ss2abi sseli cvv eqeltri hbel 
      ssrab2 eqsstri ssexi uniex elabs sylib syl6 wex 19.8a scott0s syl5 ) DFKZ
      AABCLZMBLZNOWONOPQZCRZSZBTZUAUBZABEMZAWNXAEWTUCZXBWNWTFKZXAXCQDWTUDZWNXDU
      EGDWTFUFUGXDXAXCIJWTEFABCUHZEWOWPFUIZUJZCDUKZBDULZUMZJLZILZFUIZUJZJWTUKZI
      WTULZUMHXJXQXJXHCWTUKZBDULZXRBWTULZXQXIXRBDXIXRUEZWPDUCXEYAGXHCIDWTCIDWTG
      WSCBIAWRCACUNWQCUOUPUQZURYBUSUGUTVAXEXSXTUDGXRBIDWTBIDWTGWSBIVBZURZYCVCUG
      XTWOXMFUIZUJZCWTUKZIWTULXQXRYGBIJWTWSBJVBXLWTUCIUNXRIUNYFBCWTWSBCVBYFBUNZ
      VDWPXMUDZXHYFCWTYIXGYEWPXMWOFVEVFZVGVHYGXPIWTYGXPUEXMWTUCZYFXOCJIWTYBYKJU
      NYFJUNXOCUNWOXLUDYEXNWOXLXMFVIVFVJUTVAVKVLVMVKVNVOVPXCEABTZUCXBWTYLEWSABA
      WRVQVRVSABEEXKVTHXJXJDDWTVTGXFWAXJYFCDUKZIDULDXIYMBIJDBIIXLDXMXLUCBUNYDWB
      XLDUCIUNXIIUNYFBCDBIIWODXMWOUCBUNYDWBYHVDYIXHYFCDYJVGVHYMIDWCWDWEWFWAWGWH
      WIAABWJXAABWKABCWLWHWM $.
      $( [11-Mar-2004] $)

  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Cardinal numbers
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c card $. $( Cardinal size function $)
  $c aleph $. $( Aleph function $)
  $c cf $. $( Cofinality function $)

  $( Extend class definition to include the cardinal size function. $)
  ccrd $a class card $.

  $( Extend class definition to include the aleph function. $)
  cale $a class aleph $.

  $( Extend class definition to include the cofinality function. $)
  ccf $a class cf $.

  ${
    $d x y z $.
    $( Define the cardinal number function.  The cardinal number of a set is
       the least ordinal number equinumerous to it.  In other words, it is the
       "size" of the set.  Definition of [Enderton] p. 197.  See ~ cardval for
       its value, ~ cardval2 for a simpler version of its value.  The principle
       theorem relating cardinality to equinumerosity is ~ carden .  Our
       notation is from Enderton.  Other textbooks often use a double bar over
       the set to express this function. $)
    df-card $a |- card = { <. x , y >. | y = |^| { z e. On | z ~~ x } } $.
  $}

  ${
    $d x y z $.
    $( Define the aleph function.  Our definition expresses Definition 12 of
       [Suppes] p. 229 in a closed form, from which we derive the recursive
       definition as theorems ~ aleph0 , ~ alephsuc , and ~ alephlim .  The
       aleph function provides a one-to-one, onto mapping from the ordinal
       numbers to the infinite cardinal numbers.  Roughly, any aleph is the
       smallest infinite cardinal number whose size is strictly greater than
       any aleph before it. $)
    df-aleph $a |- aleph = rec ( { <. x , y >. | y = |^| { z e. On |
                   x ~< z } } , om ) $.
  $}

  ${
    $d x y z w v u $.
    $( Define the cofinality function.  Definition B of Saharon Shelah,
       _Cardinal Arithmetic_ (1994), p. xxx (Roman numeral 30).  See ~ cfval
       for its value and a description. $)
    df-cf $a |- cf = { <. x , y >. | ( x e. On /\
                y = |^| { z | E. w ( z = ( card ` w ) /\
                ( w C_ x /\ A. v e. x E. u e. w v C_ u ) ) } ) } $.
  $}

  ${
    $d x y z A $.
    $( The value of the cardinal number function with an ordinal number as its
       argument.  Unlike ~ cardval , this theorem does not require the Axiom of
       Choice. $)
    oncardval $p |- ( A e. On -> ( card ` A ) = |^| { x e. On | x ~~ A } ) $=
      ( vz vy con0 wcel cv cen wbr crab cint wceq copab cfv ccrd wss c0 wne 
      oninton ssrab2 wrex enrefg breq1 rcla4ev mpdan rabn0 sylibr sylancr 
      breq2 rabbidv inteqd fvopabg df-card fveq1i syl5eq ) BEFZBCGAGZDGZHIZAEJZ
      KZLDCMZNZUQBHIZAEJZKZBONUPVFEFZVCVFLVEEPVEQRZVGUPVESVDAETUPVDAEUAZVHUPBBH
      IZVIBEUBVDVJABEUQBBHUCUDUEVDAEUFUGUHDCBVAVFEEURBLZUTVEVKUSVDAEURBUQHUIUJU
      KULUEBOVBDCAUMUNUO $.
      $( [24-Nov-2003] $)

    $( The cardinal number of an ordinal number is an ordinal number.  Unlike
       ~ cardon , this theorem does not require the Axiom of Choice. $)
    oncardon $p |- ( A e. On -> ( card ` A ) e. On ) $=
      ( vx con0 wcel ccrd cfv cv cen wbr crab cint oncardval wss c0 wne 
      oninton ssrab2 cvv fvex syl6eqelr intex sylibr sylancr eqeltrd ) ACDZAEFZ
      BGAHIZBCJZKZCBALZUHCMUHNOZUICDUEUHPUGBCQUEUIRDUKUEUIUFRUJAESTUHUAUBUCUD 
      $.
      $( [26-Jul-2004] $)

    $( Any ordinal number is equinumerous to its cardinal number.  Unlike
       ~ cardid , this theorem does not require the Axiom of Choice. $)
    oncardid $p |- ( A e. On -> ( card ` A ) ~~ A ) $=
      ( vx con0 wcel ccrd cfv cv cen wbr crab cint oncardval wss c0 wne onint 
      ssrab2 cvv fvex syl6eqelr intex sylibr sylancr eqeltrd breq1 elrab 
      simprbi syl ) ACDZAEFZBGZAHIZBCJZDZUJAHIZUIUJUMKZUMBALZUMCMUMNOZUPUMDUIUM
      PULBCQUIUPRDURUIUPUJRUQAESTUMUAUBUCUDUNUJCDUOULUOBUJCUKUJAHUEUFUGUH $.
      $( [26-Jul-2004] $)

    $( The cardinal of an ordinal number is less than or equal to the ordinal
       number.  Proposition 10.6(3) of [TakeutiZaring] p. 85. $)
    cardonle $p |- ( A e. On -> ( card ` A ) C_ A ) $=
      ( vx con0 wcel ccrd cfv cv cen wbr crab cint oncardval wss enrefg wa 
      breq1 elrab intss1 sylbir mpdan eqsstrd ) ACDZAEFBGZAHIZBCJZKZABALUBAAHIZ
      UFAMZACNUBUGOAUEDUHUDUGBACUCAAHPQAUERSTUA $.
      $( [22-Oct-2003] $)
  $}

  $( The cardinality of the empty set is the empty set. $)
  card0 $p |- ( card ` (/) ) = (/) $=
    ( c0 ccrd cfv wss wceq con0 wcel 0elon cardonle ax-mp ss0b mpbi ) ABCZADZMA
    EAFGNHAIJMKL $.
    $( [25-Oct-2003] $)

  $( The cardinality of a natural number is the number.  Corollary 10.23 of
     [TakeutiZaring] p. 90. $)
  cardnn $p |- ( A e. om -> ( card ` A ) = A ) $=
    ( com wcel ccrd cfv wn wceq csdm wbr cen sdomnen con0 nnon oncardid syl 
    nsyl3 wpss wb oncardon word ordelpss eloni syl2an mpancom wo wss cardonle 
    onsseleq mpbid elnn expcom eleq1a jaod mpd nnsdomo bitr4d mtbird ord ) ABCZ
    ADEZACZFUTAGZUSVAUTAHIZVCUTAJIZUSUTAKUSALCZVDAMZANOPUSVAUTAQZVCUSVEVAVGRZVF
    UTLCZVEVHASZUTTATVHVIVEUTAUAUTUBAUBUCUDOUTBCZUSVCVGRUSVAVBUEZVKUSVEVLVFVEUT
    AUFZVLAUGVIVEVMVLRVJUTAUHUDUIOZUSVAVKVBVAUSVKUTAUJUKABUTULUMUNUTAUOUDUPUQUS
    VAVBVNURUN $.
    $( [10-Jul-2004] $) $( [28-Oct-2003] $)

  $( The cardinality of the successor of a finite ordinal (natural number).
     This theorem does not hold for infinite ordinals; see ~ cardsucinf . $)
  cardsucnn $p |- ( A e. om -> ( card ` suc A ) = suc ( card ` A ) ) $=
    ( com wcel csuc ccrd cfv wceq peano2 cardnn syl suceq eqtr4d ) ABCZADZEFZNA
    EFZDZMNBCONGAHNIJMPAGQNGAIPAKJL $.
    $( [7-Nov-2008] $)

  $( The set of natural numbers is a cardinal number.  Theorem 18.11 of [Monk1]
     p. 133. $)
  cardom $p |- ( card ` om ) = om $=
    ( com ccrd cfv wcel wn wceq cen wbr con0 omelon oncardid ax-mp csdm nnsdom 
    sdomnen syl mt2 wss wo cardonle oncardon onsseli mpbi ori ) ABCZADZEUEAFZUF
    UEAGHZAIDZUHJAKLUFUEAMHUHEUENUEAOPQUFUGUEARZUFUGSUIUJJATLUEAUIUEIDJAUALJUBU
    CUDL $.
    $( [28-Oct-2003] $)

  ${
    $d x y z $.
    $( The aleph function is a function on the class of ordinal numbers. $)
    alephfnon $p |- aleph Fn On $=
      ( vy vx vz cale con0 wfn cv csdm wbr crab cint wceq copab com crdg 
      rdgfnon df-aleph fneq1i mpbir ) DEFAGBGCGHICEJKLBAMZNOZEFNTPEDUABACQRS $.
      $( [21-Oct-2003] $)

    $( The first infinite cardinal number, discovered by Georg Cantor in 1873,
       has the same size as the set of natural numbers ` om ` (and under our
       particular definition is also equal to it).  In the literature, the
       argument of the aleph function is often written as a subscript, and the
       first aleph is written ` aleph ` _0.  Exercise 3 of [TakeutiZaring]
       p. 91.  Also Definition 12(i) of [Suppes] p. 228.  From Mosh&eacute
       Machover, _Set Theory, Logic, and Their Limitations_, p. 95:
       "Aleph...the first letter in the Hebrew alphabet...is also the first
       letter of the Hebrew word...(_einsoph_, meaning infinity), which is a
       cabbalistic appellation of the deity.  The notation is due to Cantor,
       who was deeply interested in mysticism." $)
    aleph0 $p |- ( aleph ` (/) ) = om $=
      ( vy vx vz c0 cale cfv cv csdm wbr con0 crab cint wceq copab com crdg 
      df-aleph fveq1i omex rdg0 eqtri ) DEFDAGBGCGHICJKLMBANZOPZFODEUCBACQROUBS
      TUA $.
      $( [21-Oct-2003] $)
  $}

  ${
    $d x y z w A $.
    $( Value of the aleph function at a limit ordinal.  Definition 12(iii) of
       [Suppes] p. 91. $)
    alephlim $p |- ( ( A e. B /\ Lim A ) -> ( aleph ` A ) =
                   U_ x e. A ( aleph ` x ) ) $=
      ( vz vy vw wcel wlim wa cv csdm wbr con0 crab cint wceq copab com crdg 
      cfv ciun cale rdglim2a df-aleph fveq1i a1i iuneq2i 3eqtr4g ) BCGBHIBDJEJF
      JKLFMNOPEDQZRSZTABAJZUJTZUABUBTABUKUBTZUAARBCUIUCBUBUJEDFUDZUEABUMULUMULP
      UKBGUKUBUJUNUEUFUGUH $.
      $( [21-Oct-2003] $)

    $( An aleph is an ordinal number. $)
    alephon $p |- ( aleph ` A ) e. On $=
      ( vx vy vz vw con0 wcel cale cfv cv c0 csuc wceq fveq2 eleq1d com aleph0 
      omelon eqeltri csdm wbr crab cint cvv wb wa ax-17 df-aleph breq1 rabbidv 
      inteqd rdgsucopab onintrab syl6rbbr ex ibd wn rdgsucopabn 0elon syl6eqel 
      pm2.61d1 a1d wlim ciun wral visset alephlim mpan fvex iunon syl5bir 
      tfinds cdm wfn alephfnon fndm ax-mp eleq2i notbii ndmfv sylbir pm2.61i ) 
      AFGZAHIZFGZBJZHIZFGZKHIZFGCJZHIZFGZWJLZHIZFGZWEBCAWFKMWGWIFWFKHNOWFWJMWGW
      KFWFWJHNOWFWMMWGWNFWFWMHNOWFAMWGWDFWFAHNOWIPFQRSWJFGZWOWLWPWKWFTUAZBFUBZU
      CZUDGZWOWPWTWOWPWTWTWOUEWPWTUFZWOWSFGWTXAWNWSFDCEPWJDJZWFTUAZBFUBZUCZWSUD
      HEJZPGDUGZXFWJGDUGZXFWSGDUGZDCBUHZXBWKMZXDWRXKXCWQBFXBWKWFTUIUJUKZULOWQBU
      MUNUOUPWTUQWNKFDCEPWJXEWSHXGXHXIXJXLURUSUTVAVBWFVCZWHCWFWKVDZFGWLCWFVEXMW
      GXNFWFUDGXMWGXNMBVFZCWFUDVGVHOCWFWKXOWJHVIVJVKVLWCUQZWDKFXPAHVMZGZUQWDKMX
      RWCXQFAHFVNXQFMVOFHVPVQVRVSAHVTWAUSUTWB $.
      $( [10-Nov-2003] $)

    $( The initial ordinal of a successor index is the smallest ordinal
       strictly larger than the previous initial ordinal.  (Contributed by Jeff
       Hankins, 23-Oct-2009.) $)
    omsubsuc $p |- ( A e. On
           -> ( aleph ` suc A ) = |^| { x e. On | ( aleph ` A ) ~< x } ) $=
      ( vz vy vw con0 wcel csuc cv csdm wbr crab cint wceq copab com crdg cfv 
      cale rdgsuc wfun cop funopabeq a1i breq2 cbvrabv inteqi fvex wrex cvv 
      alephon onsdom ax-mp intexrab mpbi breq1 rabbidv inteqd eqeq2d eqeq1 
      opelopab sylibr funopfv sylc df-aleph fveq1i fveq2i eqcomi syl5eq eqtrd 
      ) BFGZBHZCIZDIZEIZJKZEFLZMZNZDCOZPQZRZBSRZAIZJKZAFLZMZVLSRVKWBBWARZVTRZWG
      PBVTTVKWCVTRZWGWIVKVTUAZWCWGUBVTGZWJWGNWKVKDCVRUCUDVKWGWCVOJKZEFLZMZNZWLW
      PVKWFWNWEWMAEFWDVOWCJUEUFUGUDVSVMWONWPDCWCWGBSUHWEAFUIZWGUJGWCFGWQBUKAWCU
      LUMWEAFUNUOZVNWCNZVRWOVMWSVQWNWSVPWMEFVNWCVOJUPUQURUSVMWGWOUTVAVBWCWGVTWR
      VCVDWJWIWCWHVTBSWADCEVEZVFVGVHVIVJVLSWAWTVFVI $.
      $( [23-Oct-2009] $)

    $( An initial ordinal with successor index.  (Contributed by Jeff Hankins,
       26-Oct-2009.) $)
    omsubsuc2 $p |- ( A e. On
          -> ( aleph ` suc A ) = { x e. On | x ~<_ ( aleph ` A ) } ) $=
      ( vy vz con0 wcel csuc cale cfv cv csdm wbr crab cint cdom omsubsuc wa 
      wrex alephon onsdom ax-mp onintrab2 mpbi a1i onelon sylancom wi wn breq2 
      onnminsb adantl wb domtriord mpan2 sylibrd ex com23 imp jcai wal wss 
      sdomirr simprlr cvv visset ssdomg ad2antll simplrr domtr syl11anc fvex 
      sdomdomtr expr mtoi word ordtri1 eloni syl2an ancoms con2bid adantlr 
      ad2ant2lr mpbird exp31 elrab syl7ib 19.21adv elint syl6ibr impbid breq1 
      syl6bbr eqrdv eqtrd ) BEFZBGHIBHIZAJZKLZAEMZNZWQWPOLZAEMZABPWOCWTXBWOCJZW
      TFZXCEFZXCWPOLZQZXCXBFWOXDXGWOXDXGWOXDQZXEXFWOXDWTEFZXEXIXHWRAERZXIWPEFZX
      JBSZAWPTUAWRAUBUCUDWTXCUEUFWOXDXEXFUGWOXEXDXFWOXEXDXFUGWOXEQXDWPXCKLZUHZX
      FXEXDXNUGWOWRXMAXCWQXCWPKUIUJUKXEXFXNULZWOXEXKXOXLXCWPUMUNUKUOUPUQURUSUPW
      OXGDJZWSFZXCXPFZUGZDUTXDWOXGXSDWOXGXPEFZWPXPKLZQZXRXQWOXGYBXRWOXGQZYBQZXR
      XPXCVAZUHZYDYEWPWPKLZWPVBYCYBYEYGYCYBYEQZQZYAXPWPOLZYGYCXTYAYEVCYIXPXCOLZ
      XFYJYEYKYCYBXPVDFYEYKUGDVEXPXCVDVFUAVGWOXEXFYHVHXPXCWPVIVJWPVDFYAYJQYGUGB
      HVKWPXPWPVDVLUAVJVMVNXGXTXRYFULZWOYAXEXTYLXFXEXTQYEXRXTXEYEXRUHULZXPVOXCV
      OYMXTXEXPXCVPXPVQXCVQVRVSVTWAWBWCWDWRYAAXPEWQXPWPKUIWEWFWGDXCWSCVEWHWIWJX
      AXFAXCEWQXCWPOWKWEWLWMWN $.
      $( [26-Oct-2009] $)
  $}

  ${
    $d j k m z A $.  $d k B $.
    $( Lemma for ~ omsubsdom . $)
    omsubsdomlem1 $p |- ( A e. On -> ( aleph ` A ) ~< ( aleph ` suc A ) ) $=
      ( vz vm con0 wcel cale cfv cv csdm wbr crab cint csuc wrex alephon 
      onsdom ax-mp a1i ax-17 hbrab1 hbint hbbr breq2 onminsb syl omsubsuc 
      breqtrrd ) ADEZAFGZUIBHZIJZBDKZLZAMFGIUHUKBDNZUIUMIJZUNUHUIDEUNAOBUIPQRUK
      UOBBCUIUMICHZUIEBSUPIEBSBCULUKBCDTUAUBUJUMUIIUCUDUEBAUFUG $.
      $( [23-Oct-2009] $)

    $( Lemma for ~ omsubsdom . $)
    omsubsdomlem2 $p |- ( ( A e. On /\ B e. On )
          -> ( A e. B -> ( aleph ` A ) ~< ( aleph ` B ) ) ) $=
      ( vk vj vm con0 wcel cale cfv csdm wbr wi cv csuc wceq fveq2 breq2d 
      omsubsdomlem1 wa sdomtr adantr sylan2 expcom wlim wral ciun wex hbra1 
      ax-17 hbiu1 hbbr hbim ra4 com12 adantl cdom cvv visset fvex iunex 
      sdomdomtr ax-mp wss a1i ssiun2 ssdomg sylc imim2d com23 impcom syld 
      19.23ai imp cuni limuni eleq2d biimpa eluni sylib sylan alephlim mpan 
      ad2antrr eqcomd breqtrd ex tfindsg2 ) BFGZABGZAHIZBHIZJKZLAFGWHWIWLWJCMZH
      IZJKZWJANZHIZJKWJDMZHIZJKZWJWRNZHIZJKZWLCDBAWMWPOWNWQWJJWMWPHPQWMWROWNWSW
      JJWMWRHPQWMXAOWNXBWJJWMXAHPQWMBOWNWKWJJWMBHPQARWTWRFGZAWRGZSZXCWTWSXBJKZX
      CXFWJWSXBTXDXGXEWRRUAUBUCWMUDZAWMGZSZXEWTLZDWMUEZWOXJXLSZWJDWMWSUFZWNJXEW
      RWMGZSZDUGZXLWJXNJKZXJXQXLXRXPXLXRLDXLXRDXKDWMUHDEWJXNJEMZWJGDUIXSJGDUIDE
      WMWSUJUKULXPXLXKXRXOXLXKLXEXLXOXKXKDWMUMUNUOXOXEXKXRLXOXKXEXRXOWTXRXEWTXO
      XRWTWSXNUPKZXRXOXNUQGWTXTSXRLDWMWSCURZWRHUSZUTWJWSXNUQVAVBXOWSUQGZWSXNVCX
      TYCXOYBVDDWMWSVEWSXNUQVFVGUBUCVHVIVJVKVLVMXJAWMVNZGZXQXHXIYEXHWMYDAWMVOVP
      VQDAWMVRVSVTXMWNXNXHWNXNOZXIXLWMUQGXHYFYADWMUQWAWBWCWDWEWFWGWFUO $.
      $( [23-Oct-2009] $)
  $}

  $( Relationship between ordering on ordinal numbers and strict dominance of
     infinite initial ordinal numbers, which are frequently denoted by omega
     with an ordinal number subscript.  The ` aleph ` notation is being
     recycled for this purpose, although the aleph function does not have the
     same meaning if Choice is not assumed.  (Closure is given by ~ alephon ,
     which does not use Choice.)  (Contributed by Jeff Hankins,
     23-Oct-2009.) $)
  omsubsdom $p |- ( ( A e. On /\ B e. On )
        -> ( A e. B <-> ( aleph ` A ) ~< ( aleph ` B ) ) ) $=
    ( con0 wcel wa cale cfv csdm wbr omsubsdomlem2 wn wceq wo word wb ordtri2 
    eloni syl2an con2bid bicomd cen cvv fvex a1i fveq2 adantl eqeng sylc wi 
    cdom brsdom simprbi mt2d ex sbth sdomdom syl6 ancoms imp expcom sdomnen 
    pm2.65d jaod sylbid impcon4bid ) ACDZBCDZEZABDZAFGZBFGZHIZABJVHVIKZABLZBADZ
    MZVLKZVHVPVMVHVIVPANBNVIVPKOVFVGABPAQBQRSTVHVNVQVOVHVNVQVHVNEZVLVJVKUAIZVRV
    JUBDZVJVKLZVSVTVRAFUCUDVNWAVHABFUEUFVJVKUBUGUHVLVSKZUIZVRVLVJVKUJIZWBVJVKUK
    ULUDUMUNVHVOVQVHVOEZVLVSVLWEVSWDVKVJUJIZVSVLWEVJVKUOVJVKUPVHVOWFVGVFVOWFUIV
    GVFEVOVKVJHIWFBAJVKVJUPUQURUSRUTWCWEVJVKVAUDVBUNVCVDVE $.
    $( [23-Oct-2009] $)

  $( Relationship between inclusion of ordinal numbers and dominance of
     infinite initial ordinals.  (Contributed by Jeff Hankins, 23-Oct-2009.) $)
  omsubdom $p |- ( ( A e. On /\ B e. On )
        -> ( A C_ B <-> ( aleph ` A ) ~<_ ( aleph ` B ) ) ) $=
    ( con0 wcel wa wss cale cfv cdom wbr wceq wo word wb ordsseleq eloni 
    syl2an csdm omsubsdom sdomdom syl6bi cen wi fveq2 cvv fvex eqeng ax-mp syl 
    a1i endom syl6 jaod sylbid wn ordtri2or ancoms ord con1d sdomnen sbth ex 
    mtod syld impcon4bid ) ACDZBCDZEZABFZAGHZBGHZIJZVHVIABDZABKZLZVLAMZBMZVIVON
    VFVGABOAPZBPZQVHVMVLVNVHVMVJVKRJVLABSVJVKTUAVHVNVJVKUBJZVLVNVTUCVHVNVJVKKZV
    TABGUDVJUEDWAVTUCAGUFVJVKUEUGUHUIUJVJVKUKULUMUNVHVIUOBADZVLUOZVHWBVIVHWBVIV
    GVFWBVILZVQVPWDVGVFBAUPVSVRQUQURUSVHWBVKVJRJZWCVGVFWBWENBASUQWEVLVKVJUBJZVK
    VJUTWEVKVJIJZVLWFUCVKVJTWGVLWFVKVJVAVBUIVCUAVDVE $.
    $( [23-Oct-2009] $)

  $( Relationship between ordering of ordinal numbers and ordering of infinite
     initial ordinals.  (Contributed by Jeff Hankins, 23-Oct-2009.) $)
  omsubel $p |- ( ( A e. On /\ B e. On )
        -> ( A e. B <-> ( aleph ` A ) e. ( aleph ` B ) ) ) $=
    ( con0 wcel wa cale cfv csdm wbr omsubsdom wss wn cen cdom wi sbth cvv 
    fvex ssdomg ax-mp sylan2 expcom adantl sdomdom syl5 sdomnen a1i pm2.65d ex 
    word wo alephon eloni ordtri2or mp2an ori con4d sylbid onelss syl wb 
    omsubdom adantr mpbird wceq ordsseleq syl2an idd ordirr fveq2 eleq2d mtbii 
    con2d imp pm2.21d jaod mpd impbid ) ACDZBCDZEZABDZAFGZBFGZDZWAWBWCWDHIZWEAB
    JWAWEWFWAWDWCKZWFLZWELZWAWGWHWAWGEZWFWCWDMIZWJWCWDNIZWKWFWGWLWKOWAWLWGWKWLW
    DWCNIZWKWGWCWDPWDQDWGWMOBFRWDWCQSTUAUBUCWCWDUDUEWFWKLOWJWCWDUFUGUHUIWEWGWCU
    JZWDUJZWEWGUKWCCDZWNAULZWCUMTZWDCDZWOBULZWDUMTWCWDUNUOUPUEUQURWAWEWBWAWEEZA
    BKZWBXAXBWLWEWLWAWEWCWDKZWLWSWEXCOWTWDWCUSTWPXCWLOWQWCWDCSTUTUCWAXBWLVAWEAB
    VBVCVDXAXBWBABVEZUKZWBWAXBXEVAZWEAUJBUJXFVSVTABVFAUMBUMVGVCXAWBWBXDXAWBVHXA
    XDWBWAWEXDLWAXDWEXDWIOWAXDWCWCDZWEWNXGLWRWCVITXDWCWDWCABFVJVKVLUGVMVNVOVPUR
    VQUIVR $.
    $( [23-Oct-2009] $)

  $( Relationship between inclusion of ordinal numbers and inclusion of
     infinite initial ordinals.  (Contributed by Jeff Hankins, 23-Oct-2009.) $)
  omsubss $p |- ( ( A e. On /\ B e. On )
       -> ( A C_ B <-> ( aleph ` A ) C_ ( aleph ` B ) ) ) $=
    ( con0 wcel wa wn cale cfv wss wb omsubel ancoms notbid word ordtri1 eloni 
    syl2an alephon ax-mp mp2an a1i 3bitr4d ) ACDZBCDZEZBADZFZBGHZAGHZDZFZABIZUI
    UHIZUEUFUJUDUCUFUJJBAKLMANBNULUGJUCUDABOAPBPQUMUKJZUEUINZUHNZUNUICDUOARUIPS
    UHCDUPBRUHPSUIUHOTUAUB $.
    $( [23-Oct-2009] $)

  ${
    $d j k x y A $.  $d j k x y B $.
    $( If an ordinal is smaller than an initial ordinal, it is strictly
       dominated by it.  (Contributed by Jeff Hankins, 24-Oct-2009.) $)
    elomsubsd $p |- ( ( A e. On /\ B e. On )
          -> ( A e. ( aleph ` B ) <-> A ~< ( aleph ` B ) ) ) $=
      ( vk vj vx vy con0 wcel wa cale cfv csdm wbr wi cv c0 csuc wceq fveq2 
      eleq2d breq2d imbi12d imbi2d com nnsdom aleph0 eleq2i breq2i 3imtr4i a1i 
      crab cint cdom cen wn brsdom wss simplr wrex alephon onsdom ax-mp 
      onintrab2 mpbi onelss adantl ssdomg sylc wb word eloni ordtri1 mpan syl 
      con2bid biimpa a1d simpllr simpr ensymg ax-17 hbrab1 hbint hbbr breq2 
      onminsb jctil sdomentr ex jcad elrab syl6ibr intss1 syl6 mtod sylanbrc 
      omsubsuc adantr 3imtr4d wlim wral w3a ciun hbra1 hban hbiu1 ra4 com12 
      cvv visset fvex iunex sdomdomtr ssiun2 sylan2 expcom imim2d syl6d imp3a 
      r19.23ad eliun syl5ib 3adant1 alephlim 3ad2ant1 3exp tfinds impcom 
      domtriord 3imtr3d impcon4bid ) AGHZBGHZIZABJKZHZAYOLMZYMYLYPYQNZYLACOZJKZ
      HZAYTLMZNZNYLAPJKZHZAUUDLMZNZNYLADOZJKZHZAUUILMZNZNZYLAUUHQZJKZHZAUUOLMZN
      ZNZYLYRNCDBYSPRZUUCUUGYLUUTUUAUUEUUBUUFUUTYTUUDAYSPJSZTUUTYTUUDALUVAUAUBU
      CYSUUHRZUUCUULYLUVBUUAUUJUUBUUKUVBYTUUIAYSUUHJSZTUVBYTUUIALUVCUAUBUCYSUUN
      RZUUCUURYLUVDUUAUUPUUBUUQUVDYTUUOAYSUUNJSZTUVDYTUUOALUVEUAUBUCYSBRZUUCYRY
      LUVFUUAYPUUBYQUVFYTYOAYSBJSZTUVFYTYOALUVGUAUBUCUUGYLAUDHAUDLMUUEUUFAUEUUD
      UDAUFUGUUDUDALUFUHUIUJUUHGHZUUSUUMUVHYLUURUVHYLIZAUUIEOZLMZEGUKZULZHZAUVM
      LMZUUPUUQUVIUVNUVOUVOAUVMUMMZAUVMUNMZUOUVIUVNIZAUVMUPUVRYLAUVMUQZUVPUVHYL
      UVNURZUVNUVSUVIUVMGHZUVNUVSNUVKEGUSZUWAUUIGHZUWBUUHUTZEUUIVAZVBUVKEVCVDZU
      VMAVEVBVFAUVMGVGVHUVRUVQUVMAUQZUVIUVNUWGUOUVIUWGUVNYLUWGUVNUOVIZUVHYLAVJZ
      UWHAVKZUVMVJZUWIUWHUWAUWKUWFUVMVKVBUVMAVLVMVNVFVOVPUVRUVQAUVLHZUWGUVRUVQY
      LUUIALMZIUWLUVRUVQYLUWMUVRYLUVQUVTVQUVRUVQUWMUVRUVQIZYLUUIUVMLMZUVMAUNMZI
      UWMUVHYLUVNUVQVRUWNUWPUWOUWNUWAUVQUWPUWAUWNUWFUJUVRUVQVSAUVMGVTVHUWCUWOUW
      DUWCUWBUWOUWEUVKUWOEEFUUIUVMLFOZUUIHEWAUWQLHZEWAEFUVLUVKEFGWBWCWDUVJUVMUU
      ILWEWFVNVBWGUUIUVMAGWHVHWIWJUVKUWMEAGUVJAUUILWEWKWLAUVLWMWNWOWPWIUVHUUPUV
      NVIYLUVHUUOUVMAEUUHWQZTWRUVHUUQUVOVIYLUVHUUOUVMALUWSUAWRWSWIVQYSWTZUUMDYS
      XAZYLUUCUWTUXAYLXBADYSUUIXCZHZAUXBLMZUUAUUBUXAYLUXCUXDNUWTUXAYLIZUUJDYSUS
      UXDUXCUXEUUJUXDDYSUXAYLDUUMDYSXDYLDWAXEDFAUXBLUWQAHDWAUWRDWADFYSUUIXFWDUU
      HYSHZUXEUUJUXDNZUXFUXAYLUXGUXFUXAYLUULUXGUXAUXFUUMUUMDYSXGXHUXFUUKUXDUUJU
      UKUXFUXDUUKUUIUXBUMMZUXDUXFUXBXIHUUKUXHIUXDNDYSUUICXJZUUHJXKZXLAUUIUXBXIX
      MVBUXFUUIUXBUQZUXHDYSUUIXNUUIXIHUXKUXHNUXJUUIUXBXIVGVBVNXOXPXQXRXSXHXTDAY
      SUUIYAYBYCUWTUXAUUAUXCVIYLUWTYTUXBAYSXIHUWTYTUXBRUXIDYSXIYDVMZTYEUWTUXAUU
      BUXDVIYLUWTYTUXBALUXLUAYEWSYFYGYHYNYOAUQZYOAUMMZYPUOZYQUOZUXMUXNNZYNYOXIH
      UXQBJXKYOAXIVGVBUJYLUXMUXOVIZYMYLUWIUXRUWJYOVJZUWIUXRYOGHZUXSBUTZYOVKVBYO
      AVLVMVNWRYLUXNUXPVIZYMUXTYLUYBUYAYOAYIVMWRYJYK $.
      $( [24-Oct-2009] $)
  $}

  $( A dominated initial ordinal is included.  (Contributed by Jeff Hankins,
     24-Oct-2009.) $)
  omsubdmss $p |- ( ( A e. On /\ B e. On )
        -> ( ( aleph ` A ) C_ B <-> ( aleph ` A ) ~<_ B ) ) $=
    ( con0 wcel wa cale cfv wn csdm wbr wss cdom wb elomsubsd ancoms notbid 
    word eloni alephon ax-mp ordtri1 mpan syl adantl domtriord 3bitr4d ) ACDZBC
    DZEZBAFGZDZHZBUJIJZHZUJBKZUJBLJZUIUKUMUHUGUKUMMBANOPUHUOULMZUGUHBQZUQBRUJQZ
    URUQUJCDZUSASZUJRTUJBUAUBUCUDUHUPUNMZUGUTUHVBVAUJBUEUBUDUF $.
    $( [24-Oct-2009] $)

  ${
    $d t w x y z A $.
    $( An infinite initial ordinal is a limit ordinal.  (Contributed by Jeff
       Hankins, 29-Oct-2009.) $)
    omsublim $p |- ( A e. On -> Lim ( aleph ` A ) ) $=
      ( vx vy vz vw vt cv cale cfv wlim c0 csuc wceq wb fveq2 limeq syl com 
      limom aleph0 ax-mp mpbir con0 wcel word wral w3a alephon eloni a1i cdom 
      wbr wa 0elon cvv wss 0ex 0ss ssdomg mp2 pm3.2i crab omsubsuc2 eleq2d 
      breq1 elrab syl6rbb mpbii wi suceloni adantr wo ordom ordtri2or mpan2 
      adantl peano2 omelon onelss omsubss mpan syl5ssr sylan9ssr sylc ex a1dd 
      cen infensuc ad2ant2lr visset sucex ensymg simprr endomtr syl11anc exp32 
      jaod mpd imp3a jcad syl6bb 3imtr4d r19.21aiv 3jca dflim4 sylibr a1d wrex 
      cab cuni wne 0ellim eqid eqeq2d rcla4ev fvex eqeq1 rexbidv elab ne0i 
      rcla4cv biimprcd sylan9r r19.23adv syl5ib limuni3 ciun alephlim dfiun2 
      syl6eq mpbird tfinds ) BGZHIZJZKHIZJZCGZHIZJZYRLZHIZJZAHIZJZBCAYMKMYNYPMY
      OYQNYMKHOYNYPPQYMYRMYNYSMYOYTNYMYRHOYNYSPQYMUUAMYNUUBMYOUUCNYMUUAHOYNUUBP
      QYMAMYNUUDMYOUUENYMAHOYNUUDPQYQRJZSYPRMYQUUFNTYPRPUAUBYRUCUDZUUCYTUUGUUBU
      EZKUUBUDZYMLZUUBUDZBUUBUFZUGUUCUUGUUHUUIUULUUHUUGUUBUCUDUUHUUAUHUUBUIUAUJ
      UUGKUCUDZKYSUKULZUMZUUIUUMUUNUNKUOUDKYSUPUUNUQYSURKYSUOUSUTVAUUGUUIKYMYSU
      KULZBUCVBZUDUUOUUGUUBUUQKBYRVCVDUUPUUNBKUCYMKYSUKVEVFVGVHUUGUUKBUUBUUGYMU
      CUDZUUPUMZUUJUCUDZUUJYSUKULZUMZYMUUBUDZUUKUUGUUSUUTUVAUUSUUTVIUUGUURUUTUU
      PYMVJVKUJUUGUURUUPUVAUUGUURUUPUVAVIZUUGUURUMZYMRUDZRYMUPZVLZUVDUURUVHUUGU
      URYMUEZUVHYMUIUVIRUEUVHVMYMRVNVOQVPUVEUVFUVDUVGUUGUVFUVDVIUURUUGUVFUVAUUP
      UUGUVFUVAUUGUVFUMUUJRUDZUUJYSUPUVAUVFUVJUUGYMVQZVPUVFUUGUUJRYSUVFUVJUUJRU
      PZUVKRUCUDUVJUVLVIVRRUUJVSUAQUUGYPYSRUUGKYRUPZYPYSUPZYRURUUMUUGUVMUVNNUNK
      YRVTWAVHTWBWCUUJYSRUSWDWEWFVKUVEUVGUUPUVAUVEUVGUUPUMUMZUUJYMWGULZUUPUVAUV
      OYMUUJWGULZUVPUURUVGUVQUUGUUPYMWHWIUUJUOUDUVQUVPVIYMBWJZWKYMUUJUOWLUAQUVE
      UVGUUPWMUUJYMYSWNWOWPWQWRWEWSWTUUGUVCYMDGZYSUKULZDUCVBZUDUUSUUGUUBUWAYMDY
      RVCZVDUVTUUPDYMUCUVSYMYSUKVEVFXAUUGUUKUUJUWAUDUVBUUGUUBUWAUUJUWBVDUVTUVAD
      UUJUCUVSUUJYSUKVEVFXAXBXCXDBUUBXEXFXGYMJZYTCYMUFZYOUWCUWDUMZYOEGZUVSHIZMZ
      DYMXHZEXIZXJZJZUWEUWJKXKZFGZJZFUWJUFUWLUWEYPUWJUDZUWMUWEYPUWGMZDYMXHZUWPU
      WCUWRUWDUWCKYMUDZUWRYMXLUWSYPYPMZUWRYPXMUWQUWTDKYMUVSKMUWGYPYPUVSKHOXNXOV
      OQVKUWIUWREYPKHXPUWFYPMUWHUWQDYMUWFYPUWGXQXRXSXFUWJYPXTQUWEUWOFUWJUWEUWNU
      WGMZDYMXHZUWOUWNUWJUDUWEUXAUWODYMUWDUVSYMUDUWGJZUWCUXAUWOVIZYTUXCCUVSYMYR
      UVSMYSUWGMYTUXCNYRUVSHOYSUWGPQYAUXCUXDVIUWCUXAUWOUXCUWNUWGPYBUJYCYDUWIUXB
      EUWNFWJUWFUWNMUWHUXADYMUWFUWNUWGXQXRXSYEXCFUWJYFWOUWCYOUWLNZUWDUWCYNUWKMU
      XEUWCYNDYMUWGYGZUWKYMUOUDUWCYNUXFMUVRDYMUOYHWADEYMUWGUVSHXPYIYJYNUWKPQVKY
      KWEYL $.
      $( [29-Oct-2009] $)
  $}

  ${
    $d x y z A $.
    $( An initial ordinal includes its index.  (Contributed by Jeff Hankins,
       26-Oct-2009.) $)
    omsubindss $p |- ( A e. On -> A C_ ( aleph ` A ) ) $=
      ( vx vy vz cv cale cfv wss wceq id fveq2 sseq12d con0 wcel wral wa wi 
      rcla4v w3a onelon 3adant3 alephon jctir simp3 simp2 wb omsubel ancoms 
      syldan mpbid jca ontr2 sylc 3exp com3l syld com13 imp ssrdv ex tfis3 ) BE
      ZVBFGZHZCEZVEFGZHZAAFGZHBCAVBVEIZVBVEVCVFVIJVBVEFKLVBAIZVBAVCVHVJJVBAFKLV
      BMNZVGCVBOZVDVKVLPDVBVCVKVLDEZVBNZVMVCNZQVNVLVKVOVNVLVMVMFGZHZVKVOQVGVQCV
      MVBVEVMIZVEVMVFVPVRJVEVMFKLRVKVNVQVOVKVNVQVOVKVNVQSZVMMNZVCMNZPVQVPVCNZPV
      OVSVTWAVKVNVTVQVBVMTZUAVBUBUCVSVQWBVKVNVQUDVSVNWBVKVNVQUEVKVNVNWBUFZVQVKV
      NVTWDWCVTVKWDVMVBUGUHUIUAUJUKVMVPVCULUMUNUOUPUQURUSUTVA $.
      $( [26-Oct-2009] $)
  $}

  ${
    $d x y z A $.
    $( An infinite ordinal is equinumerous to an infinite initial ordinal.
       (Contributed by Jeff Hankins, 23-Oct-2009.) $)
    infenomsub $p |- ( ( A e. On /\ om C_ A ) -> E. x e. ran aleph x ~~ A ) $=
      ( vy vz con0 wcel com wss wa cv cale cfv cdom wbr crab cint crn cen wrex 
      wfn alephfnon a1i omsubindss ssdomg mpd wceq fveq2 breq2d rcla4ev mpdan 
      adantr onintrab2 sylib fnfvelrn syl11anc c0 csuc wlim wo word eloni w3o 
      ordzsl 3orass bitri syl wi breq1d aleph0 sseq1i cvv fvex ax-mp sylbir 
      syl5bir ax-17 hbrab1 hbint hbfv hbbr onminsb anim12d com12 ancoms wb 
      sbthbg sylibd csdm wn bren2 simplr visset sucid eleq2 mpbiri adantl 
      onnminsb sylc eleq2d omsubsuc2 sylan9bbr breq1 elrab simprbi syl6bi mtod 
      exp31 r19.23adv wral onelon ex syli r19.21aiv ralnex ciun alephlim sylan 
      alephon onelss syl5 reximdvai eliun syl5ib sylbid jaod imp simpl 
      elomsubsd mtbid adantlr sylanbrc ensymg ) BEFZGBHZIZBCJZKLZMNZCEOZPZKLZKQ
      ZFZUUABRNZAJZBRNZAUUBSYOKETZYTEFZUUCUUGYOUAUBYOYRCESZUUHYMUUIYNYMBBKLZMNZ
      UUIYMBUUJHUUKBUCBUUJEUDUEYRUUKCBEYPBUFYQUUJBMYPBKUGUHUIUJZUKZYRCULZUMZEYT
      KUNUOYOYTUPUFZYTDJZUQZUFZDESZYTURZUSZUSZUUDYOUUHUVCUUOUUHYTUTZUVCYTVAUVDU
      UPUUTUVAVBUVCDYTVCUUPUUTUVAVDVEUMVFYOUUPUUDUVBYOUUPUUABMNZBUUAMNZIZUUDYNY
      MUUPUVGVGUUPYNYMIUVGUUPYNUVEYMUVFUUPUVEUPKLZBMNZYNUUPUUAUVHBMYTUPKUGVHYNU
      VHBHZUVIUVHGBVIVJUVHVKFUVJUVIVGUPKVLUVHBVKUDVMVNVOYMUVFVGUUPYMUUIUVFUULYR
      UVFCCABUUAMUUEBFCVPUUEMFCVPCAYTKUUEKFCVPCAYSYRCAEVQVRVSVTYPYTUFYQUUABMYPY
      TKUGUHWAZVFUBWBWCWDYMUVGUUDWEYNUUABEWFUKWGYOUVBUUDYOUVBIZUUAVKFZBUUARNZUU
      DUVMUVLYTKVLUBUVNUVFBUUAWHNZWIZUVLBUUAWJYOUVFUVBYOUUIUVFUUMUVKVFUKYMUVBUV
      PYNYMUVBIZBUUAFZUVOYMUVBUVRWIZYMUUTUVSUVAYMUUSUVSDEYMUUQEFZUUSUVSYMUVTIZU
      USIZUVRBUUQKLZMNZUWBUVTUUQYTFZUWDWIZYMUVTUUSWKUUSUWEUWAUUSUWEUUQUURFUUQDW
      LWMYTUURUUQWNWOWPYRUWDCUUQYPUUQUFYQUWCBMYPUUQKUGUHWQZWRUWBUVRBYPUWCMNZCEO
      ZFZUWDUUSUVRBUURKLZFZUWAUWJUUSUUAUWKBYTUURKUGWSUVTUWLUWJWEYMUVTUWKUWIBCUU
      QWTWSWPXAUWJYMUWDUWHUWDCBEYPBUWCMXBXCXDXEXFXGXHYMUVAUVSYMUVAIZUVRUWDDYTSZ
      UWMUWFDYTXIUWNWIUWMUWFDYTYMUWEUWFVGUVAUWEYMUVTUWFYMUUHUWEUVTVGYMUUIUUHUUL
      UUNUMZUUHUWEUVTYTUUQXJXKVFUWGXLUKXMUWDDYTXNUMUWMUVRBDYTUWCXOZFZUWNUUHUVAU
      VRUWQWEYMUUHUVAIUUAUWPBDYTEXPWSUWOXQUWMBUWCFZDYTSUWNUWQUWMUWRUWDDYTYMUWEU
      WRUWDVGZVGUVAYMUWEUWSYMUWEIBUWCHZUWDUWRYMUWTUWDVGUWEBUWCEUDUKUWCEFUWRUWTV
      GUUQXRUWCBXSVMXTXKUKYADBYTUWCYBYCYDXFXKYEYFUVQYMUUHUVRUVOWEYMUVBYGYMUUHUV
      BUWOUKBYTYHUOYIYJYKBUUAVKYLWRXKYEUEUUFUUDAUUAUUBUUEUUABRXBUIUO $.
      $( [23-Oct-2009] $)
  $}

  ${
    $d w x y z A $.
    $( An infinite initial ordinal is characterized by the property of being
       initial - that is, it is a subset of any dominating ordinal.
       (Contributed by Jeff Hankins, 29-Oct-2009.) $)
    omsubinit $p |- ( ( A e. On /\ om C_ A )
          -> ( A e. ran aleph <-> A. x e. On ( A ~<_ x -> A C_ x ) ) ) $=
      ( vy vz vw con0 wcel com wss wa cv cale cfv wceq wrex cdom wbr wi wral 
      crn breq1 sseq1 imbi12d omsubdmss biimprd syl5cbi adantl expr com23 impr 
      r19.21aiv exp32 r19.23adv cen infenomsub imbi1d simpll simprr ensymg 
      sylc endom syl simplrl wb ancoms adantlr syl5 adantr simpr eqssd fveq2 
      eqeq1d rcla4ev syl11anc ex imim2d mpid alephon breq2 sseq2 rcla4v ax-mp 
      wfn alephfnon fvelrnb syl5ib mpd impbid syl5bb ) BFGZHBIZJZCKZLMZBNZCFOZB
      AKZPQZBWQIZRZAFSZBLTZGZWLWPXAWLWOXACFWLWMFGZWOXAWLXDWOJJWTAFWLXDWOWQFGZWT
      RWLXDJXEWOWTWLXDXEWOWTRZXDXEJZXFWLWOWNWQPQZWNWQIZRWTXGWOXHWRXIWSWNBWQPUAW
      NBWQUBUCXGXIXHWMWQUDUEUFUGUHUIUJUKULUMWLDKZBUNQZDXBOXAWPRZDBUOWLXKXLDXBWL
      EKZLMZXJNZEFOZXKXLRZXJXBGZWLXOXQEFWLXMFGZXOXQRXOXNBUNQZXLRXQWLXSJZXOXTXKX
      LXNXJBUNUAUPWLXSXTXLWLXSXTJZJZBXNPQZBXNIZRZWPXAYCYFYDWPYCBXNUNQZYDYCWJXTY
      GWJWKYBUQWLXSXTURXNBFUSUTBXNVAVBYCYEWPYDYCYEWPYCYEJZXSXNBNZWPWLXSXTYEVCYH
      XNBYCXNBIZYEWLXSXTYJYAXNBPQZYJXTYAYJYKWJXSYJYKVDZWKXSWJYLXMBUDVEVFUEXNBVA
      VGUJVHYCYEVIVJWOYICXMFWMXMNWNXNBWMXMLVKVLVMVNVOVPVQXNFGXAYFRXMVRWTYFAXNFW
      QXNNWRYDWSYEWQXNBPVSWQXNBVTUCWAWBVGUHUFVOUMLFWCZXRXPVDWDEFXJLWEWBWFUMWGWH
      YMXCWPVDWDCFBLWEWBWI $.
      $( [29-Oct-2009] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Axiom of Choice equivalents
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w v u t h $.
    $( Equivalence of two versions of the Axiom of Choice ~ ax-ac .  The proof
       uses neither AC nor the Axiom of Regularity.  The right-hand side
       expresses our AC with the fewest number of different variables. $)
    aceq1 $p |- ( E. y A. z e. x A. w e. z E! v e. z E. u e. y
                      ( z e. u /\ v e. u ) <->
                  E. y A. z A. w ( ( z e. w /\ w e. x ) -> E. x A. z ( E. x
           ( ( z e. w /\ w e. x ) /\ ( z e. x /\ x e. y ) ) <-> z = x ) ) ) $=
      ( vt vh cv wcel wa wrex wreu wral wex wceq wb wal wi biidd cbvralv eleq1 
      anbi2d rexbidv cbvreuv ralbii bitri anbi1d reueqd raleqbi1dv 3bitr4i 
      exbii 19.21v impexp bi2.04 albii weu df-eu df-reu 19.42v an42 anass 
      bitr3i df-rex eleq2 anbi12d cbvexv anbi2i bibi1i imbi2i df-ral ax-17 
      hba1 hbex hbim imbi1d cbval alcom 3bitr4ri ) CIZFIZJZEIZWAJZKZFBIZLZEVTMZ
      DVTNZCAIZNZBODIZWAJZWBKZFWFLZCWLMZGWLNZDWJNZBOVTWLJZWLWJJZKZXAVTWJJZWJWFJ
      ZKKZAOZVTWJPZQZCRZAOZSZDRCRZBOWKWRBHIZWAJZWDKZFWFLZEXLMZDXLNZHWJNXMWBKZFW
      FLZCXLMZGXLNZHWJNWKWRXQYAHWJXQXPGXLNYAXPXPDGXLWLGIZPXPTUAXPXTGXLXOXSECXLW
      CVTPZXNXRFWFYCWDWBXMWCVTWAUBUCUDUEUFUGUFWIXQCHWJWHXPDVTXLWGXOEVTXLVTXLPZW
      EXNFWFYDWBXMWDVTXLWAUBUHUDUIUJUAWQYADHWJWPXTGWLXLWOXSCWLXLWLXLPZWNXRFWFYE
      WMXMWBWLXLWAUBUHUDUIUJUAUKULWRXKBXJCRZDRWTWQSZDRXKWRYFYGDWTWSXISZSZCRWTYH
      CRZSYFYGWTYHCUMXJYICXJWSWTXISSYIWSWTXIUNWSWTXIUOUGUPWQYJWTYBWLJZWPSZGRYKX
      ISZGRWQYJYLYMGWPXIYKWSWOKZCUQYNXFQZCRZAOWPXIYNCAURWOCWLUSXHYPAXGYOCXEYNXF
      WSXCWTXBKZKZKZAOWSYRAOZKXEYNWSYRAUTXDYSAXDWSXCKYQKYSWSXCWTXBVAWSXCYQVBVCU
      LWOYTWSWOWAWFJZWNKZFOYTWNFWFVDUUBYRFAWAWJPZUUAXCWNYQWAWJWFUBUUCWMWTWBXBWA
      WJWLVEWAWJVTVEVFVFVGUGVHUKVIUPULUKVJUPWPGWLVKYHYMCGYHGVLYKXICYKCVLXHCAXGC
      VMVNVOVTYBPWSYKXIVTYBWLUBVPVQUKVJUKUPXJCDVRWQDWJVKVSULUG $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d x y z w v u t $.
    $( Equivalence of two versions of the Axiom of Choice.  The proof uses
       neither AC nor the Axiom of Regularity.  The right-hand side is our
       original ~ ax-ac . $)
    aceq0 $p |- ( E. y A. z e. x A. w e. z E! v e. z E. u e. y
                      ( z e. u /\ v e. u ) <->
                  E. y A. z A. w ( ( z e. w /\ w e. x ) -> E. v A. u
     ( E. t ( ( u e. w /\ w e. t ) /\ ( u e. t /\ t e. y ) ) <-> u = v ) ) ) $=
      ( cv wcel wa wrex wreu wral wex wceq wb wal wi aceq1 equequ2 bibi2d 
      elequ2 anbi2d elequ1 anbi12d cbvexv bibi1i syl6bb albidv anbi1d exbidv 
      equequ1 bibi12d cbvalv imbi2i 2albii exbii bitr4i ) CHZFHZIEHZUTIJFBHZKEU
      SLDUSMCAHZMBNUSDHZIZVDVCIZJZVGUSVCIZVCVBIZJZJZANZUSVCOZPZCQZANZRZDQCQZBNV
      GUTVDIZVDGHZIZJZUTVTIZVTVBIZJZJZGNZUTVAOZPZFQZENZRZDQCQZBNABCDEFSWMVRBWLV
      QCDWKVPVGWJVOEAVAVCOZWJVSVFJZUTVCIZVIJZJZANZUTVCOZPZFQVOWNWIXAFWNWIWGWTPX
      AWNWHWTWGEAFTUAWGWSWTWFWRGAVTVCOZWBWOWEWQXBWAVFVSGADUBUCXBWCWPWDVIGAFUBGA
      BUDUEUEUFUGUHUIXAVNFCUTUSOZWSVLWTVMXCWRVKAXCWOVGWQVJXCVSVEVFFCDUDUJXCWPVH
      VIFCAUDUJUEUKFCAULUMUNUHUFUOUPUQUR $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d x y z w v u t $.
    $( Equivalence of two versions of the Axiom of Choice.  The proof uses
       neither AC nor the Axiom of Regularity. $)
    aceq2 $p |- ( E. y A. z e. x A. w e. z E! v e. z E. u e. y
                     ( z e. u /\ v e. u ) <->
                  E. y A. z e. x ( z =/= (/) -> E! w e. z E. v e. y
                      ( z e. v /\ w e. v ) ) ) $=
      ( vt cv wcel wa wrex wreu wral c0 wne wi wex wal df-ral 19.23v bitri 
      wceq biidd cbvralv n0 eleq2 anbi12d cbvrexv reubii eleq1 anbi2d rexbidv 
      cbvreuv imbi12i 3bitr4i ralbii exbii ) CHZFHZIZEHZUSIZJZFBHZKZEURLZDURMZC
      AHZMURNOZURVAIZDHZVAIZJZEVDKZDURLZPZCVHMBVGVPCVHVFGURMZGHZURIZGQZVFPZVGVP
      VQVSVFPGRWAVFGURSVSVFGTUAVFVFDGURVKVRUBVFUCUDVIVTVOVFGURUEVOUTVKUSIZJZFVD
      KZDURLVFVNWDDURVMWCEFVDVAUSUBVJUTVLWBVAUSURUFVAUSVKUFUGUHUIWDVEDEURVKVAUB
      ZWCVCFVDWEWBVBUTVKVAUSUJUKULUMUAUNUOUPUQ $.
      $( [7-Apr-2007] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x y z w v u t h g f $.  $d t h g F $.
    aceq3lem.1 $e |- F =
              { <. w , v >. | ( w e. dom y /\ v = ( f ` { u | w y u } ) ) } $.
    $( Lemma for ~ aceq3 . $)
    aceq3lem $p |- ( A. x E. f A. z e. x ( z =/= (/) -> ( f ` z
                 ) e. z ) -> E. f ( f C_ y /\ f Fn dom y ) ) $=
      ( vg vt vh cv c0 wne cfv wcel wi wral wex wal wss cdm wfn wa crn cpw 
      visset rnex pwex wceq raleq exbidv cla4v cvv wbr cab fvex fnopab2 dmex 
      fnex mp2an sseq1 fneq1 anbi12d cla4ev wrel copab relopab releqi mpbir 
      a1i cop eleq2i eleq1 breq1 abbidv fveq2d eqeq2d eqeq1 anbi2d opelopab 
      bitri simplbi 19.8a ss2abi dfrn2 sseqtr4i elpw2 neeq1 fveq2 id eleq12d 
      imbi12d rcla4v ax-mp eldm abn0 bitr4i syl5ib com12 fvopab4 eleq1d breq2 
      cbvabv elab2 df-br bitr2i syl5bb sylibrd syl wb wfun fnfun funopfv opeq2 
      sylibd relssdv sylancl 19.23aiv cbvexv sylib ) CMZNOZYCGMZPZYCQZRZCAMZSZG
      TZAUAZJMZBMZUBZYMYNUCZUDZUEZJTZYEYNUBZYEYPUDZUEZGTYLYHCYNUFZUGZSZGTZYSYKU
      UFAUUDUUCYNBUHZUIZUJYIUUDUKYJUUEGYHCYIUUDULUMUNUUEYSGHYNUBZHYPUDZYSUUEYRU
      UIUUJUEJHUUJYPUOQHUOQDEYPDMZFMZYNUPZFUQZYEPZHUUNYEURIUSZYNUUGUTYPUOHVAVBY
      MHUKYOUUIYQUUJYMHYNVCYPYMHVDVEVFUUEKLHYNHVGZUUEUUQUUKYPQZEMZUUOUKZUEZDEVH
      ZVGUVADEVIHUVBIVJVKVLKMZLMZVMZHQZUUEUVEYNQZUVFUUEUVCUVCHPZVMZYNQZUVGUVFUV
      CYPQZUUEUVJRUVFUVKUVDUVCUULYNUPZFUQZYEPZUKZUVFUVEUVBQUVKUVOUEZHUVBUVEIVNU
      VAUVKUUSUVNUKZUEUVPDEUVCUVDKUHZLUHZUUKUVCUKZUURUVKUUTUVQUUKUVCYPVOUVTUUOU
      VNUUSUVTUUNUVMYEUVTUUMUVLFUUKUVCUULYNVPVQVRZVSVEUUSUVDUKUVQUVOUVKUUSUVDUV
      NVTWAWBWCWDUVKUUEUVNUVMQZUVJUUEUVKUWBUUEUVMNOZUWBUVKUVMUUDQZUUEUWCUWBRZRU
      WDUVMUUCUBUVMUVLKTZFUQUUCUVLUWFFUVLKWEWFKFYNWGWHUVMUUCUUHWIVKYHUWECUVMUUD
      YCUVMUKZYDUWCYGUWBYCUVMNWJUWGYFUVNYCUVMYCUVMYEWKUWGWLWMWNWOWPUVKUVLFTUWCF
      UVCYNUVRWQUVLFWRWSWTXAUVKUVHUVMQZUWBUVJUVKUVHUVNUVMDEUVCUUOUVNYPHUWAIUVMY
      EURXBXCUWHUVCUVHYNUPZUVJUVCUVDYNUPZUWILUVHUVMUVCHURUVDUVHUVCYNXDUVLUWJFLU
      ULUVDUVCYNXDXEXFUVCUVHYNXGXHXIXJXKUVFUVHUVDUKZUVJUVGXLHXMZUVFUWKRUUJUWLUU
      PYPHXNWPUVCUVDHUVSXOWPUWKUVIUVEYNUVHUVDUVCXPXCXKXQXAXRUUPXSXTXKYRUUBJGYMY
      EUKYOYTYQUUAYMYEYNVCYPYMYEVDVEYAYB $.
      $( [14-Apr-2007] $) $( [2-Apr-2004] $)
  $}

  ${
    $d f x y z w v u g h $.
    $( Equivalence of two versions of the Axiom of Choice.  The left-hand side
       is similar to the Axiom of Choice (first form) of [Enderton] p. 49.  The
       right-hand side is the Axiom of Choice of [TakeutiZaring] p. 83.  The
       proof does not depend on AC. $)
    aceq3 $p |- ( A. x E. f ( f C_ x /\ f Fn dom x ) <->
             A. x E. f A. z e. x ( z =/= (/) -> ( f ` z ) e. z ) ) $=
      ( vy vw vv vu cv wss cdm wfn wa wex wal c0 wne cfv wcel wi wral wceq 
      sseq2 dmeq fneq2d anbi12d exbidv cbvalv copab cuni cxp visset uniex xpex 
      simpl elunii ancoms jca ssopab2i df-xp sseqtr4i ssexi cla4v csn cima wb 
      fndm eleq2 cab dmopab eleq2i 19.42v eleq1 elab n0 anbi2i 3bitr4i bitr2i 
      syl6rbbr syl adantl wfun funfvima3 fnfun sylan2 sylbid imp ibar abbi2dv 
      wbr cvv imasng ax-mp anbi2d eqid brab abbii eqtri syl6reqr eleq2d 
      ad2antrl mpbid exp32 r19.21aiv eximi 19.21aiv aceq3lem impbii bitri ) CHZ
      AHZIZXIXJJZKZLZCMZANXIDHZIZXIXPJZKZLZCMZDNZBHZOPZYCXIQZYCRZSZBXJTZCMZANZX
      OYAADXJXPUAZXNXTCYKXKXQXMXSXJXPXIUBYKXLXRXIXJXPUCUDUEUFUGYBYJYBYIAYBXIEHZ
      XJRZFHZYLRZLZEFUHZIZXIYQJZKZLZCMZYIYAUUBDYQYQXJXJUIZUJZXJUUCAUKZXJUUEULUM
      YQYMYNUUCRZLZEFUHUUDYPUUGEFYPYMUUFYMYOUNYOYMUUFYNYLXJUOUPUQUREFXJUUCUSUTV
      AXPYQUAZXTUUACUUHXQYRXSYTXPYQXIUBUUHXRYSXIXPYQUCUDUEUFVBUUAYHCUUAYGBXJUUA
      YCXJRZYDYFUUAUUIYDLZLYEYQYCVCVDZRZYFUUAUUJUULUUAUUJYCXIJZRZUULYTUUJUUNVEZ
      YRYTUUMYSUAZUUOYSXIVFUUPUUNYCYSRZUUJUUMYSYCVGUUQYCYPFMZEVHZRZUUJYSUUSYCYP
      EFVIVJUUIYNYCRZLZFMZUUIUVAFMZLUUTUUJUUIUVAFVKUURUVCEYCBUKZYLYCUAZYPUVBFUV
      FYMUUIYOUVAYLYCXJVLYLYCYNVGUEZUFVMYDUVDUUIFYCVNVOVPVQVRVSVTYRXIWAZUUNUULS
      ZYTUVHYRUVIYCXIYQWBUPYSXIWCWDWEWFUUIUULYFVEUUAYDUUIUUKYCYEUUIYCUUIGHZYCRZ
      LZGVHZUUKUUIUVLGYCUUIUVKWGWHUUKYCUVJYQWIZGVHZUVMYCWJRUUKUVOUAUVEGYCWJYQWK
      WLUVNUVLGYPUVBUVLEFYCUVJYQUVEGUKUVGYNUVJUAUVAUVKUUIYNUVJYCVLWMYQWNWOWPWQW
      RWSWTXAXBXCXDVSXEYJYADADBEFGCYLXRRYNYLUVJXPWIGVHXIQUALEFUHZUVPWNXFXEXGXH 
      $.
      $( [14-Apr-2007] $) $( [24-Mar-2004] $)
  $}

  ${
    $d f x z y w v $.
    $( Equivalence of two versions of the Axiom of Choice.  The left-hand side
       is similar to the Axiom of Choice (first form) of [Enderton] p. 49.  The
       right-hand side is Axiom AC of [BellMachover] p. 488.  The proof does
       not depend on AC. $)
    aceq4 $p |- ( A. x E. f ( f C_ x /\ f Fn dom x ) <->
        A. x E. f ( f Fn x /\ A. z e. x ( z =/= (/) -> ( f ` z ) e. z ) ) ) $=
      ( vy vw vv cv wss cdm wfn wa wex wal c0 wne cfv wcel wi wral aceq3 wceq 
      fveq1 eleq1d imbi2d ralbidv cbvexv copab fveq2 eqid fvex fvopab4 ralbiia 
      anbi2i fnopab2 mpbiran visset opabex2 fneq1 anbi12d cla4ev sylbir 
      19.23aiv sylbi simpr eximi impbii albii bitri ) CGZAGZHVIVJIJKCLAMBGZNOZV
      KVIPZVKQZRZBVJSZCLZAMVIVJJZVPKZCLZAMABCTVQVTAVQVTVQVLVKDGZPZVKQZRZBVJSZDL
      VTVPWECDVIWAUAZVOWDBVJWFVNWCVLWFVMWBVKVKVIWAUBUCUDUEUFWEVTDWEEGZVJQFGWGWA
      PZUAKEFUGZVJJZVLVKWIPZVKQZRZBVJSZKZVTWOWJWEWNWEWJWMWDBVJVKVJQZWLWCVLWPWKW
      BVKEFVKWHWBVJWIWGVKWAUHWIUIZVKWAUJUKUCUDULUMEFVJWHWIWGWAUJWQUNUOVSWOCWIEF
      VJWHAUPUQVIWIUAZVRWJVPWNVJVIWIURWRVOWMBVJWRVNWLVLWRVMWKVKVKVIWIUBUCUDUEUS
      UTVAVBVCVSVPCVRVPVDVEVFVGVH $.
      $( [17-Apr-2007] $) $( [24-Mar-2004] $)
  $}

  ${
    $d v w y g t $.
    $( Lemma for ~ aceq5 . $)
    aceq5lem1 $p |- ( E! v v e. ( ( { w } X. w ) i^i y ) <->
                      E! g ( g e. w /\ <. w , g >. e. y ) ) $=
      ( vt cv csn cxp cin wcel weu cop wceq wa wex elin elxp excom bitri 
      anbi1i 19.41vv an32 eleq1 pm5.32i elsn anbi12i an4 ancom anass 3bitri 
      exbii visset opeq1 eqeq2d eleq1d anbi2d anbi12d ceqsexv bitr3i eubii 
      euop2 ) CFZBFZGZVCHZAFZIJZCKVBVCDFZLZMZVHVCJZVIVFJZNZNZDOZCKVMDKVGVOCVGVB
      VEJZVBVFJZNVBEFZVHLZMZVRVDJZVKNZNZEODOZVQNZVOVBVEVFPVPWDVQVPWCDOEOWDEDVBV
      DVCQWCEDRSTWEWCVQNZEOZDOVOWCVQDEUAWGVNDWGVRVCMZVTVKVSVFJZNZNZNZEOVNWFWLEW
      FVTVQNZWBNVTWINZWHVKNZNZWLVTWBVQUBWMWNWBWOVTVQWIVBVSVFUCUDWAWHVKEVCUETUFW
      PVTWHNZWIVKNZNWHVTNZWJNWLVTWIWHVKUGWQWSWRWJVTWHUHWIVKUHUFWHVTWJUIUJUJUKWK
      VNEVCBULWHVTVJWJVMWHVSVIVBVRVCVHUMZUNWHWIVLVKWHVSVIVFWTUOUPUQURSUKUSUJUTV
      MCDVCVAS $.
      $( [12-Apr-2004] $)
  $}

  ${
    $d f x z y w v u t h g $.  $d z w f g B $.  $d x y z w g A $.
    aceq5lem.1 $e |- A =
                    { u | ( u =/= (/) /\ E. t e. h u = ( { t } X. t ) ) } $.
    $( Lemma for ~ aceq5 . $)
    aceq5lem2 $p |- ( <. w , g >. e. U. A <-> ( w e. h /\ g e. w ) ) $=
      ( cv cop cuni wcel c0 wne csn cxp wceq wrex wa cab wex unieqi eleq2i 
      eluniab r19.42v anass bitr2i exbii rexcom4 df-rex bitr3i 3bitri ancom 
      ne0i pm4.71i anbi2i bitr4i snex visset xpex eleq2 ceqsexv bitri opelxp 
      elsn eqcom anbi1i an12 eleq1 anbi12d ) AHZEHZIZDJZKVLBHZLMZVNCHZNZVPOZPZC
      FHZQZRZBSZJZKZVPVTKZVLVNKZVORZVSRZBTZRZCTZVJVTKZVKVJKZRZVMWDVLDWCGUAUBWEW
      GWBRZBTWICVTQZBTZWLWBBVLUCWPWQBWQWHWARWPWHVSCVTUDWGVOWAUEUFUGWRWJCVTQWLWI
      CBVTUHWJCVTUIUJUKWLVPVJPZWFVKVPKZRZRZCTWOWKXBCWKWFVLVRKZRWFWSWTRZRXBWJXCW
      FWJVSWGRZBTXCWIXEBWIVSWHRXEWHVSULWGWHVSWGVOVNVLUMUNUOUPUGWGXCBVRVQVPVPUQC
      URUSVNVRVLUTVAVBUOXCXDWFXCVJVQKZWTRXDVJVKVQVPEURVCXFWSWTXFVJVPPWSAVPVDVJV
      PVEVBVFVBUOWFWSWTVGUKUGXAWOCVJAURWSWFWMWTWNVPVJVTVHVPVJVKUTVIVAVBUK $.
      $( [3-Apr-2007] $) $( [12-Apr-2004] $)

    $( Lemma for ~ aceq5 . $)
    aceq5lem3 $p |- ( ( { w } X. w ) e. A <-> ( w =/= (/) /\ w e. h ) ) $=
      ( cv csn cxp c0 wne wceq wrex wa cab wcel snex visset xpex neeq1 eqeq1 
      rexbidv anbi12d elab eleq2i xpeq2 xp0 syl6eq crn rneq snnz rnxp ax-mp 
      rn0 3eqtr3g impbii necon3bii wex df-rex sneq xpeq1 syl eqtrd eqcom bitri 
      anbi2i ancom exbii eleq1 ceqsexv 3bitrri anbi12i 3bitr4i ) AGZHZVNIZBGZJK
      ZVQCGZHZVSIZLZCEGZMZNZBOZPVPJKZVPWALZCWCMZNZVPDPVNJKZVNWCPZNWEWJBVPVOVNVN
      QARZSVQVPLZVRWGWDWIVQVPJTWNWBWHCWCVQVPWAUAUBUCUDDWFVPFUEWKWGWLWIVNJVPJVNJ
      LZVPJLZWOVPVOJIJVNJVOUFVOUGUHWPVPUIZJUIVNJVPJUJVOJKWQVNLVNWMUKVOVNULUMZUN
      UOUPUQWIVSWCPZWHNZCURVSVNLZWSNZCURWLWHCWCUSWTXBCWTWSXANXBWHXAWSWHVNVSLZXA
      WHXCWHWQWAUIZVNVSVPWAUJWRVTJKXDVSLVSCRUKVTVSULUMUOXCVPVTVNIZWAXCVOVTLVPXE
      LVNVSUTVOVTVNVAVBVNVSVTUFVCUPVNVSVDVEVFWSXAVGVEVHWSWLCVNWMVSVNWCVIVJVKVLV
      M $.
      $( [3-Apr-2007] $) $( [12-Apr-2004] $)

    ${
      aceq5lem.2 $e |- B = ( U. A i^i y ) $.
      aceq5lem.3 $e |- ( ph <-> A. x ( ( A. z e. x z =/= (/) /\
             A. z e. x A. w e. x ( z =/= w -> ( z i^i w ) = (/) ) ) ->
            E. y A. z e. x E! v v e. ( z i^i y ) ) ) $.
      $( Lemma for ~ aceq5 . $)
      aceq5lem4 $p |- ( ph -> E. y A. z e. A E! v v e. ( z i^i y ) ) $=
        ( vg cv c0 wne wral cin wceq wi wcel weu wex csn cxp wrex wa cab 
        eleq2i visset neeq1 eqeq1 rexbidv anbi12d elab simplbi sylbi rgen wn 
        wal cop eleq2 elxp excom bitri syl6bb bi2anan9 eeanv syl6bbr opeq1 
        eqeq2d biimpac elsn sylan2b adantrr 19.23aiv anim12i eqtr2 opth 3syl 
        19.23aivv syl6bi sneq xpeq1 syl xpeq2 eqtrd syl6 eqeq12 sylibrd ex a1i 
        r19.23aiv a1d r19.23adv imp elab2 simprbi cbvrexv sylib syl2an df-an 
        syl5ibr necon1ad 19.21adv disj1 syl6ibr rgen2a cvv abrexex simpr 
        ss2abi ssexi eqeltri raleq raleqbi1dv exbidv imbi12d cla4v mp2ani ) ADP
        ZQRZDISZYCEPZRZYCYFTQUAZUBZEISZDISZFPZYCCPZTUCFUDZDISZCUEZYDDIYCIUCZYCG
        PZQRZYRHPZUFZYTUGZUAZHKPZUHZUIZGUJZUCZYDIUUGYCLUKUUHYDYCUUBUAZHUUDUHZUU
        FYDUUJUIZGYCDULZYRYCUAZYSYDUUEUUJYRYCQUMUUMUUCUUIHUUDYRYCUUBUNUOUPZUQUR
        USUTYIDEIYQYFIUCZUIZYGBPZYCUCZUUQYFUCZVAUBZBVBYHUUPYGUUTBUUPUUTYCYFUUPU
        URUUSUIZYCYFUAZUUTVAUUJYFOPZUFZUVCUGZUAZOUUDUHZUVAUVBUBZYQUUOUUJUVGUVHU
        UJUVFUVHOUUDUUJUVFUVHUBZUVCUUDUCUUIUVIHUUDUUIUVIUBYTUUDUCUUIUVFUVHUUIUV
        FUIZUVAUUBUVEUAZUVBUVJUVAYTUVCUAZUVKUVJUVAUUQYRYLVCZUAZYRUUAUCZYLYTUCZU
        IUIZGUEZUUQYRYMVCZUAZYRUVDUCZYMUVCUCZUIUIZGUEZUIZCUEFUEZUVLUVJUVAUVRFUE
        ZUWDCUEZUIUWFUUIUURUWGUVFUUSUWHUUIUURUUQUUBUCZUWGYCUUBUUQVDUWIUVQFUEGUE
        UWGGFUUQUUAYTVEUVQGFVFVGVHUVFUUSUUQUVEUCZUWHYFUVEUUQVDUWJUWCCUEGUEUWHGC
        UUQUVDUVCVEUWCGCVFVGVHVIUVRUWDFCVJVKUWEUVLFCUWEUUQYTYLVCZUAZUUQUVCYMVCZ
        UAZUIUWKUWMUAZUVLUVRUWLUWDUWNUVQUWLGUVNUVOUWLUVPUVNYRYTUAZUWLUVOUWPUVNU
        WLUWPUVMUWKUUQYRYTYLVLVMVNGYTVOVPVQVRUWCUWNGUVTUWAUWNUWBUVTYRUVCUAZUWNU
        WAUWQUVTUWNUWQUVSUWMUUQYRUVCYMVLVMVNGUVCVOVPVQVRVSUUQUWKUWMVTUWOUVLYLYM
        UAYTYLUVCYMHULFULCULWAURWBWCWDUVLUUBUVDYTUGZUVEUVLUUAUVDUAUUBUWRUAYTUVC
        WEUUAUVDYTWFWGYTUVCUVDWHWIZWJYCUUBYFUVEWKWLWMWNWOWPWQWRYQYDUUJUUFUUKGYC
        IUULUUNLWSWTUUOYFUUBUAZHUUDUHZUVGUUOYFQRZUXAUUFUXBUXAUIGYFIEULYRYFUAZYS
        UXBUUEUXAYRYFQUMUXCUUCUWTHUUDYRYFUUBUNUOUPLWSWTUWTUVFHOUUDUVLUUBUVEYFUW
        SVMXAXBXCUURUUSXDXEXFXGBYCYFXHXIXJAYDDUUQSZYIEUUQSZDUUQSZUIZYNDUUQSZCUE
        ZUBZBVBYEYKUIZYPUBZNUXJUXLBIIUUGXKLUUGUUEGUJHGUUDUUBKULXLUUFUUEGYSUUEXM
        XNXOXPUUQIUAZUXGUXKUXIYPUXMUXDYEUXFYKYDDUUQIXQUXEYJDUUQIYIEUUQIXQXRUPUX
        MUXHYOCYNDUUQIXQXSXTYAUSYB $.
        $( [3-Apr-2007] $) $( [11-Apr-2004] $)

      $( Lemma for ~ aceq5 . $)
      aceq5lem5 $p |- ( ph ->
                           E. f A. w e. h ( w =/= (/) -> ( f ` w ) e. w ) ) $=
        ( vg cv cin wcel weu wral wex c0 wne cfv wi aceq5lem4 wa cop simpr a1i 
        csn cxp wceq ineq1 eleq2d eubidv rcla4cv aceq5lem3 aceq5lem1 3imtr3g 
        jcad cuni eleq2i elin aceq5lem2 anbi1i anass bitri 3bitri eubii euanv 
        bitr2i syl6ib euex hbeu1 ax-17 hbim simprbi simpld visset tz6.12 
        eleq1d biimparc exp32 mpcom 19.23ai syl6 exp3a com23 r19.21aiv cvv 
        inex2 eqeltri fveq1 imbi2d ralbidv cla4ev syl 19.23aiv ) AFQZDQZCQZRZSZ
        FTZDIUAZCUBEQZUCUDZXHKQZUEZXHSZUFZELQZUAZKUBZABCDEFGHIJLMNOUGXGXPCXGXIX
        HJUEZXHSZUFZEXNUAZXPXGXSEXNXGXIXHXNSZXRXGXIYAXRXGXIYAUHZXHPQZUIZJSZPTZX
        RXGYBYAYCXHSZYDXCSZUHZPTZUHZYFXGYBYAYJYBYAUFXGXIYAUJUKXGXHULXHUMZISXAYL
        XCRZSZFTZYBYJXFYODYLIXBYLUNZXEYNFYPXDYMXAXBYLXCUOUPUQUREGHILMUSCEFPUTVA
        VBYFYAYIUHZPTYKYEYQPYEYDIVCZXCRZSYDYRSZYHUHZYQJYSYDNVDYDYRXCVEUUAYAYGUH
        ZYHUHYQYTUUBYHEGHIPLMVFVGYAYGYHVHVIVJZVKYAYIPVLVMVNYEPUBYFXRYEPVOYEYFXR
        UFZPYFXRPYEPVPXRPVQVRYGYEUUDYEYGYHYEYAYIUUCVSVTYGYEYFXRYEYFUHZXRYGUUEXQ
        YCXHPXHJEWAWBWCWDWEWFWGWFWHWIWJWKXOXTKJJYSWLNXCYRCWAWMWNXJJUNZXMXSEXNUU
        FXLXRXIUUFXKXQXHXHXJJWOWCWPWQWRWSWTWS $.
        $( [3-Apr-2007] $) $( [12-Apr-2004] $)
    $}
  $}

  ${
    $d f x z y w v h u t $.
    $( Equivalence of two versions of the Axiom of Choice.  The left-hand side
       is similar to the Axiom of Choice (first form) of [Enderton] p. 49.  The
       right-hand side is Theorem 6M(4) of [Enderton] p. 151 and asserts that
       given a family of mutually disjoint nonempty sets, a set exists
       containing exactly one member from each set in the family.  The proof
       does not depend on AC. $)
    aceq5 $p |- ( A. x E. f ( f C_ x /\ f Fn dom x ) <->
           A. x ( ( A. z e. x z =/= (/) /\
           A. z e. x A. w e. x ( z =/= w -> ( z i^i w ) = (/) ) ) ->
          E. y A. z e. x E! v v e. ( z i^i y ) ) ) $=
      ( vt vh vu cv wss cdm wfn wa wex wal c0 wne wral cin wceq wi wcel weu 
      cfv aceq4 crn wb wrex fveq2 id eleq12d neeq2 ineq2 eqeq1d imbi12d 
      anbi12d rcla4v wn minel ex imim2d imp necon4ad eleq1 biimpar sylan2 
      eqeq2 eqcom syl6bb syl5bi ad2antrl mpd exp32 syl6com com14 r19.23adv 
      fvelrnb biimpac syl5 exp3a com4t imp4b elin syl5ib r19.26 sylan2br 
      anassrs adantlr fnfvelrn expcom anim12d syl6ibr com13 imp31 syl5cbir 
      adantr impbid 19.21adv fvex bibi2d albidv cla4ev df-eu sylibr syl6 
      ralimdva neeq1 cbvralv anbi2i bitr4i pm3.35 ancoms ralimi sylbi visset 
      rnex eleq2d eubidv ralbidv 19.23aiv alimi csn cxp cab cuni eqid biid 
      aceq5lem5 19.21aiv aceq3 raleq exbidv cbvalv bitr2i sylib impbii ) FJZAJZ
      KYRYSLMNFOAPZCJZQRZCYSSZUUADJZRZUUAUUDTZQUAZUBZDYSSZCYSSZNZEJZUUABJZTZUCZ
      EUDZCYSSZBOZUBZAPZYTYRYSMZUUDQRZUUDYRUEZUUDUCZUBZDYSSZNZFOZAPUUTADFUFUVHU
      USAUVGUUSFUVGUUKUULUUAYRUGZTZUCZEUDZCYSSZUURUVAUVFUUCUUJUVMUVAUVFUUCUUJUV
      MUBZUVAUVDDYSSZUVNUVFUUCNZUVAUVOUVNUVAUVONZUUIUVLCYSUVQUUAYSUCZNZUUIUVKUU
      LUUAYRUEZUAZUHZEPZUVLUVSUUIUWBEUVSUUIUWBUVSUUINUVKUWAUVQUUIUVKUWAUBZUVRUV
      AUVOUUIUWDUVAUVDUUHNZDYSSZUWDUVOUUINUVAUWFNUULUUAUCZUULUVIUCZNUWAUVKUVAUW
      FUWGUWHUWAUWGUWHUVAUWFUWAUWGUWHUVAUWFUWAUBZUWGGJZYRUEZUULUAZGYSUIZUWIUWHU
      VANUWGUWLUWIGYSUWFUWJYSUCZUWLUWGUWAUWNUWFUWKUWJUCZUUAUWJRZUUAUWJTZQUAZUBZ
      NZUWLUWGUWAUBUBUWEUWTDUWJYSUUDUWJUAZUVDUWOUUHUWSUXAUVCUWKUUDUWJUUDUWJYRUJ
      UXAUKULUXAUUEUWPUUGUWRUUDUWJUUAUMUXAUUFUWQQUUDUWJUUAUNUOUPUQURUWTUWLUWGUW
      AUWTUWLUWGNZNUUAUWJUAZUWAUWTUWKUUAUCZUXCUXBUWTUXDUXCUWTUXDUUAUWJUWOUWSUWP
      UXDUSZUBUWOUWRUXEUWPUWOUWRUXEUWKUWJUUAUTVAVBVCVDVCUWLUXDUWGUWKUULUUAVEVFV
      GUWLUXCUWAUBUWTUWGUWLUVTUWKUAZUWAUXCUWLUXFUVTUULUAUWAUWKUULUVTVHUVTUULVIV
      JUUAUWJYRUJVKVLVMVNVOVPVQUVAUWHUWMGYSUULYRVRVSVTWAWBWCUULUUAUVIWDWEUVDUUH
      DYSWFWGWHWIUVSUWAUVKUBUUIUWAUVKUVTUVJUCZUVSUULUVTUVJVEUVAUVOUVRUXGUVRUVOU
      VAUXGUVRUVOUVAUXGUVRUVOUVANUVTUUAUCZUVTUVIUCZNUXGUVRUVOUXHUVAUXIUVDUXHDUU
      AYSUUDUUAUAZUVCUVTUUDUUAUUDUUAYRUJUXJUKULURUVAUVRUXIYSUUAYRWJWKWLUVTUUAUV
      IWDWMWAWNWOWPWQWRVAWSUWCUVKUULHJZUAZUHZEPZHOUVLUXNUWCHUVTUUAYRWTUXKUVTUAZ
      UXMUWBEUXOUXLUWAUVKUXKUVTUULVHXAXBXCUVKEHXDXEXFXGVAUVPUVEUVBNZDYSSZUVOUVP
      UVFUVBDYSSZNUXQUUCUXRUVFUUBUVBCDYSUUAUUDQXHXIXJUVEUVBDYSWFXKUXPUVDDYSUVBU
      VEUVDUVBUVDXLXMXNXOVTWAWCUUQUVMBUVIYRFXPXQUUMUVIUAZUUPUVLCYSUXSUUOUVKEUXS
      UUNUVJUULUUMUVIUUAUNXRXSXTXCXFYAYBXOUUTUVEDUXKSZFOZHPZYTUUTUYAHUUTABCDEIG
      IJZQRUYCUWJYCUWJYDUAGUXKUINIYEZUYDYFUUMTZFHUYDYGUYEYGUUTYHYIYJYTUVFFOZAPU
      YBADFYKUYFUYAAHYSUXKUAUVFUXTFUVEDYSUXKYLYMYNYOYPYQ $.
      $( [21-Apr-2007] $) $( [11-Apr-2004] $)
  $}

  ${
    $d x z f y w v u g $.
    $( Our Axiom of Choice (in the form of ~ ac3 ) implies the Axiom of Choice
       (first form) of [Enderton] p. 49.  The proof uses neither AC nor the
       Axiom of Regularity.  See ~ aceq6b for the converse (which does use the
       Axiom of Regularity). $)
    aceq6a $p |- ( A. x E. y A. z e. x ( z =/= (/) -> E! w e. z E. v e. y
                      ( z e. v /\ w e. v ) ) ->
                  A. x E. f ( f C_ x /\ f Fn dom x ) ) $=
      ( vu vg cv c0 wne wcel wa wrex wreu wi wral wex wal cfv wss cdm wfn crab 
      cuni wceq copab cab eleq2 eleq1 anbi1d rexbidv anbi12d abbidv df-rab 
      3eqtr4g unieqd eqid visset rabex uniex fvopab4 eleq1d reucl syl5bir 
      imim2d ralimia opabex2 fveq1 imbi2d ralbidv cla4ev syl 19.23aiv alimi 
      aceq3 sylibr ) CIZJKZVREIZLZDIZVTLZMZEBIZNZDVROZPZCAIZQZBRZASVSVRFIZTZVRL
      ZPZCWIQZFRZASWLWIUAWLWIUBUCMFRASWKWQAWJWQBWJVSVRGIZWILHIWRVTLZWCMZEWENZDW
      RUDZUEZUFMGHUGZTZVRLZPZCWIQZWQWHXGCWIVRWILZWGXFVSXIXFWFDVRUDZUEZVRLWGXIXE
      XKVRGHVRXCXKWIXDWRVRUFZXBXJXLWBWRLZXAMZDUHWBVRLZWFMZDUHXBXJXLXNXPDXLXMXOX
      AWFWRVRWBUIXLWTWDEWEXLWSWAWCWRVRVTUJUKULUMUNXADWRUOWFDVRUOUPUQXDURXJWFDVR
      CUSUTVAVBVCWFDVRVDVEVFVGWPXHFXDGHWIXCAUSVHWLXDUFZWOXGCWIXQWNXFVSXQWMXEVRV
      RWLXDVIVCVJVKVLVMVNVOACFVPVQ $.
      $( [30-Apr-2007] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x y z w v u f g h $.
    $( Axiom of Choice (first form) of [Enderton] p. 49 implies of our Axiom of
       Choice (in the form of ~ ac3 ).  The proof does not make use of AC. Note
       that the Axiom of Regularity is used by the proof.  Specifically,
       ~ elirrv and ~ preleq that are referenced in the proof each make use of
       Regularity for their derivations.  (The reverse implication can be
       derived without using Regularity; see ~ aceq6a .) $)
    aceq6b $p |- ( A. x E. f ( f C_ x /\ f Fn dom x ) ->
                  A. x E. y A. z e. x ( z =/= (/) -> E! w e. z E. v e. y
                      ( z e. v /\ w e. v ) ) ) $=
      ( vu vg cv wss cdm wfn wa wex wal c0 wne cfv wcel wi wral wrex wreu 
      aceq3 cpr wceq cab hbra1 wmo ra4 fvex eleq1 anbi2d rexbidv anbi12d 
      cla4ev eleq2 rcla4ev eqid neeq1 eqeq1 mpanr2 fveq2 preq1d preq2 eqtr2d 
      anim2i reximi syl prex elab sylibr visset prid2 prid1 pm3.2i sylancl 
      sylan2 ex syl8 imp3a pm2.43d eleq1d bitrd imbi12d rcla4cv wb wn prel12 
      ancom syl5rbbr sylan9bbr elirrv mtbii con2i adantrr pm5.32da preleq 
      syl6bir eqeq2d biimparc syl6 exp4c com13 com4r imp imp4a com3l r19.23aiv 
      sylbi exp3a imp4b 19.23adv df-rex syl5ib expimpd 19.21aiv mo2icl jctird 
      weu df-reu eu5 bitri syl6ibr r19.21ai abrexex simpr ss2abi ssexi rexeq 
      reubidv imbi2d ralbidv 19.23aiv alimi ) FIZAIZJYPYQKLMFNAOCIZPQZYRYPRZYRS
      ZTZCYQUAZFNZAOYSYREIZSZDIZUUESZMZEBIZUBZDYRUCZTZCYQUAZBNZAOACFUDUUDUUOAUU
      CUUOFUUCYSUUIEGIZPQZHIZUUPYPRZUUPUEZUFZMZGYQUBZHUGZUBZDYRUCZTZCYQUAZUUOUU
      CUVGCYQUUBCYQUHUUCYRYQSZYSUVFUUCUVIYSMZUUGYRSZUVEMZDNZUVLDUIZMZUVFUUCUVJU
      VMUVNUUCUVJUVMUUCUVIYSUVJUVMTZUUCUVIYSUUAUVPUUBCYQUJUUAUVJUVMUUAUUFYTUUES
      ZMZEUVDUBZUVMUVJUVLUUAUVSMDYTYRYPUKZUUGYTUFZUVKUUAUVEUVSUUGYTYRULUWAUUIUV
      REUVDUWAUUHUVQUUFUUGYTUUEULUMUNUOUPYTYRUEZUVDSZYRUWBSZYTUWBSZMZUVSUVJUVRU
      WFEUWBUVDUUEUWBUFUUFUWDUVQUWEUUEUWBYRUQUUEUWBYTUQUOURUVJUUQUWBUUTUFZMZGYQ
      UBZUWCUVJUUQUUPYRUFZMZGYQUBZUWIUVIYSYRYRUFZUWLYRUSUWKYSUWMMGYRYQUWJUUQYSU
      WJUWMUUPYRPUTUUPYRYRVAUOURVBUWKUWHGYQUWJUWGUUQUWJUUTYTUUPUEUWBUWJUUSYTUUP
      UUPYRYPVCVDUUPYRYTVEVFVGVHVIUVCUWIHUWBYTYRVJUURUWBUFZUVBUWHGYQUWNUVAUWGUU
      QUURUWBUUTVAUMUNVKVLUWDUWEYTYRCVMZVNYTYRUVTVOVPVQVRVSVTWAWBUUCUVLUWATZDOU
      VNUUCUWPDUUCUVKUVEUWAUUCUVKMZUUEUVDSZUUIMZENUWAUVEUWQUWSUWAEUUCUVKUWRUUIU
      WAUWRUVKUUCUUIUWATZUWRUVKUUCUWTUWRUUQUUEUUTUFZMZGYQUBZUVKUUCMZUWTTZUVCUXC
      HUUEEVMUURUUEUFZUVBUXBGYQUXFUVAUXAUUQUURUUEUUTVAUMUNVKUXBUXEGYQUXDUUPYQSZ
      UXBUWTUXDUXGUUQUXAUWTUVKUUCUXGUUQUXAUWTTZTTUUCUXGUUQUVKUXHUUCUXGUUQUUSUUP
      SZUVKUXHTUUBUUQUXITCUUPYQYRUUPUFZYSUUQUUAUXIYRUUPPUTUXJUUAUUSYRSUXIUXJYTU
      USYRYRUUPYPVCZWCYRUUPUUSUQWDWEWFUXAUVKUXIUWTUXAUVKUXIUUIUWAUXAUVKUXIMZUUI
      MZUUGUUSUFZUXJMZUWAUXAUXMUXLUUGYRUEUUTUFZMUXOUXAUXLUXPUUIUXAUVKUXPUUIWGZU
      XIUXAUUGYRUFZWHZUXQUVKUXSUXPUUGUUTSZYRUUTSZMZUXAUUIUUGYRUUSUUPDVMZUWOUUPY
      PUKZGVMZWIUXAUUHUUFMUYBUUIUXAUUHUXTUUFUYAUUEUUTUUGUQUUEUUTYRUQUOUUHUUFWJW
      KWLUXRUVKUXRUUGUUGSUVKDWMUUGYRUUGUQWNWOVRWPWQUUGYRUUSUUPUYCUWOUYDUYEWRWSU
      XJUWAUXNUXJYTUUSUUGUXKWTXAXBXCXDVTXEXFXGXHXIXJXKXDXLXMUUIEUVDXNXOXPXQUVLD
      YTXRVIXSUVFUVLDXTUVOUVEDYRYAUVLDYBYCYDXKYEUUNUVHBUVDUVDUVAGYQUBZHUGGHYQUU
      TAVMYFUVCUYFHUVBUVAGYQUUQUVAYGVHYHYIUUJUVDUFZUUMUVGCYQUYGUULUVFYSUYGUUKUV
      EDYRUUIEUUJUVDYJYKYLYMUPVIYNYOXJ $.
      $( [30-Apr-2007] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x z f y w v u $.
    $( Equivalence of the Axiom of Choice (first form) of [Enderton] p. 49 and
       our Axiom of Choice (in the form of ~ ac2 ).  The proof does not depend
       AC on but does depend on the Axiom of Regularity. $)
    aceq7 $p |- ( A. x E. f ( f C_ x /\ f Fn dom x ) <->
                  A. x E. y A. z e. x A. w e. z E! v e. z E. u e. y
                      ( z e. u /\ v e. u ) ) $=
      ( cv wss cdm wfn wa wex wal c0 wne wcel wrex wreu wi wral aceq6b aceq6a 
      impbii aceq2 albii bitr4i ) GHZAHZIUHUIJKLGMANZCHZOPUKEHZQDHULQLEBHZRDUKS
      TCUIUABMZANZUKFHZQULUPQLFUMREUKSDUKUACUIUABMZANUJUOABCDEGUBABCDEGUCUDUQUN
      AABCDEFUEUFUG $.
      $( [26-Jun-2007] $) $( [5-Apr-2004] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZFC Set Theory - add the Axiom of Choice
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
             Introduce the Axiom of Choice
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w v u t $.
    $( Axiom of Choice.  The Axiom of Choice (AC) is usually considered an
       extension of ZF set theory rather than a proper part of it.  It is
       sometimes considered philosophically controversial because it asserts
       the existence of a set without telling us what the set is.  ZF set
       theory that includes AC is called ZFC.

       The unpublished version given here says that given any set ` x ` , there
       exists a ` y ` that is a collection of unordered pairs, one pair for
       each non-empty member of ` x ` .  One entry in the pair is the member of
       ` x ` , and the other entry is some arbitrary member of that member of
       ` x ` .  See the rewritten version ~ ac3 for a more detailed
       explanation.

       This version was specifically crafted to be short when expanded to
       primitives.  Kurt Maes' 5-quantifier version ~ ackm is slightly shorter
       when the biconditional of ~ ax-ac is expanded into implication and
       negation.

       Standard textbook versions of AC are derived as ~ ac8 , ~ ac5 , and
       ~ ac7 .  The Axiom of Regularity ~ ax-reg (among others) is used to
       derive our version from the standard ones; this reverse derivation is
       shown as theorem ~ aceq6b .  Equivalents to AC are the well-ordering
       theorem ~ weth and Zorn's lemma ~ zorn .  See ~ ac4 for comments about
       stronger versions of AC. $)
    ax-ac $a |- E. y A. z A. w ( ( z e. w /\ w e. x ) -> E. v A. u ( E. t
              ( ( u e. w /\ w e. t ) /\ ( u e. t /\ t e. y ) ) <-> u = v ) ) $.

    $( Axiom of Choice expressed with fewest number of different variables.
       The penultimate step shows the logical equivalence to ~ ax-ac . $)
    zfac $p |- E. x A. y A. z ( ( y e. z /\ z e. w ) -> E. w A. y ( E. w
              ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) ) <-> y = w ) ) $=
      ( vu vt vv cv wcel wa wex wceq wb wal wi ax-ac equequ2 bibi2d elequ2 
      anbi2d elequ1 anbi12d cbvexv bibi1i syl6bb albidv anbi1d exbidv equequ1 
      bibi12d cbvalv imbi2i 2albii exbii mpbi ) BHZCHZIZUQDHZIZJZEHZUQIZUQFHZIZ
      JZVBVDIZVDAHZIZJZJZFKZVBGHZLZMZENZGKZOZCNBNZAKVAVAUPUSIZUSVHIZJZJZDKZUPUS
      LZMZBNZDKZOZCNBNZAKDABCGEFPVSWJAVRWIBCVQWHVAVPWGGDVMUSLZVPVCUTJZVBUSIZWAJ
      ZJZDKZVBUSLZMZENWGWKVOWREWKVOVLWQMWRWKVNWQVLGDEQRVLWPWQVKWOFDVDUSLZVFWLVJ
      WNWSVEUTVCFDCSTWSVGWMVIWAFDESFDAUAUBUBUCUDUEUFWRWFEBVBUPLZWPWDWQWEWTWOWCD
      WTWLVAWNWBWTVCURUTEBCUAUGWTWMVTWAEBDUAUGUBUHEBDUIUJUKUEUCULUMUNUO $.
      $( [14-Aug-2003] $)

    $( Axiom of Choice equivalent.  By using restricted quantifiers, we can
       express the Axiom of Choice with a single explicit conjunction.  (If you
       want to figure it out, the rewritten equivalent ~ ac3 is easier to
       understand.)  Note: ~ aceq0 shows the logical equivalence to
       ~ ax-ac . $)
    ac2 $p |- E. y A. z e. x A. w e. z E! v e. z E. u e. y
              ( z e. u /\ v e. u ) $=
      ( vt cv wcel wa wrex wreu wral wex wceq wb wal wi ax-ac aceq0 mpbir ) CHZ
      FHZIEHZUCIJFBHZKEUBLDUBMCAHZMBNUBDHZIUGUFIJUCUGIUGGHZIJUCUHIUHUEIJJGNUCUD
      OPFQENRDQCQBNABCDEFGSABCDEFGTUA $.
      $( [18-Jul-1996] $)
  $}

  ${
    $d x y z w v u $.
    $( Axiom of Choice using abbreviations.  The logical equivalence to ~ ax-ac
       can be established by chaining ~ aceq0 and ~ aceq2 .  A standard
       textbook version of AC is derived from this one in ~ aceq6a , and this
       version of AC is derived from the textbook version in ~ aceq6b .

       The following sketch will help you understand this version of the
       axiom.  Given any set ` x ` , the axiom says that there exists a ` y `
       that is a collection of unordered pairs, one pair for each non-empty
       member of ` x ` .  One entry in the pair is the member of ` x ` , and
       the other entry is some arbitrary member of that member of ` x ` .
       Using the Axiom of Regularity, we can show that ` y ` is really a set of
       _ordered_ pairs, very similar to the ordered pair construction
       ~ opthreg .  The key theorem for this (used in the proof of ~ aceq6b )
       is ~ preleq .  With this modified definition of ordered pair, it can be
       seen that ` y ` is actually a choice function on the members of ` x ` .

       For example, suppose ` x = { { 1 , 2 } , { 1 , 3 } , { 2 , 3 } } ` .
       Take
       ` y = { { { 1 , 2 } , 1 } , { { 1 , 3 } , 1 } , { { 2 , 3 } , 2 } } ` .
       For the member (of ` x ` ) ` z = { 1 , 2 } ` , the only assignment to
       ` w ` and ` v ` that satisfies the axiom is ` w = 1 ` and
       ` v = { { 1 , 2 } , 1 } ` , so there is exactly one ` w ` as required.
       We verify the other two members of ` x ` similarly.  Thus ` y `
       satisfies the axiom.  Using our modified ordered pair definition, it is
       easy to see that ` y ` is the choice function
       ` { <. { 1 , 2 } , 1 >. , <. { 1 , 3 } , 1 >. , `
       ` <. { 2 , 3 } , 2 >. } ` .  Of course other choices for ` y ` will also
       satisfy the axiom, for example
       ` y = { { { 1 , 2 } , 2 } , { { 1 , 3 } , 1 } , { { 2 , 3 } , 3 } } ` .
       What AC tells us is that there exists at least one such ` y ` , but it
       doesn't tell us which one. $)
    ac3 $p |- E. y A. z e. x ( z =/= (/) -> E! w e. z E. v e. y
              ( z e. v /\ w e. v ) ) $=
      ( vu cv wcel wa wrex wreu wral wex c0 wne wi ac2 aceq2 mpbi ) CGZFGZHEGZU
      AHIFBGZJETKDTLCAGZLBMTNOTUBHDGUBHIEUCJDTKPCUDLBMABCDEFQABCDEFRS $.
      $( [9-Apr-2007] $) $( [19-Jul-1996] $)
  $}

  ${
    $d f x y z w v u $.
    $( An Axiom of Choice equivalent similar to the Axiom of Choice (first
       form) of [Enderton] p. 49. $)
    ac7 $p |- E. f ( f C_ x /\ f Fn dom x ) $=
      ( vz vu vv vy vw cv wcel wa wrex wreu wral wex wss cdm wfn wal c0 wne wi 
      aceq2 albii aceq6a sylbi 19.21bi ac2 mpg ) CHZDHZIEHZUJIJDFHZKEUILGUIMCAH
      ZMFNZBHZUMOUOUMPQJBNZAUNARZUPAUQUISTUIUKIGHUKIJEULKGUILUACUMMFNZARUPARUNU
      RAAFCGEDUBUCAFCGEBUDUEUFAFCGEDUGUH $.
      $( [7-Mar-2007] $) $( [29-Apr-2004] $)
  $}

  ${
    $d f x R $.
    $( An Axiom of Choice equivalent similar to the Axiom of Choice (first
       form) of [Enderton] p. 49. $)
    ac7g $p |- ( R e. A -> E. f ( f C_ R /\ f Fn dom R ) ) $=
      ( vx cv wss cdm wfn wa wex wceq sseq2 dmeq fneq2d anbi12d exbidv ac7 
      vtoclg ) CEZDEZFZSTGZHZIZCJSBFZSBGZHZIZCJDBATBKZUDUHCUIUAUEUCUGTBSLUIUBUF
      STBMNOPDCQR $.
      $( [23-Jul-2004] $)
  $}

  ${
    $d x z f $.
    $( Equivalent of Axiom of Choice.  We do not insist that ` f ` be a
       function.  However, theorem ~ ac5 , derived from this one, shows that
       this form of the axiom does imply that at least one such set ` f ` whose
       existence we assert is in fact a function.  Axiom of Choice of
       [TakeutiZaring] p. 83.

       Takeuti and Zaring call this "weak choice" in contrast to "strong
       choice" ` E. F A. z ( z =/= (/) -> ( F `` z ) e. z ) ` , which asserts
       the existence of a universal choice function but requires second-order
       quantification on (proper) class variable ` F ` and thus cannot be
       expressed in our first-order formalization.  However, it has been shown
       that ZF plus strong choice is a conservative extension of ZF plus weak
       choice.  See Ulrich Felgner, "Comparison of the axioms of local and
       universal choice," _Fundamenta Mathematica_, 71, 43-62 (1971).

       Weak choice can be strengthened in a different direction to choose from
       a collection of proper classes; see ~ ac6s5 . $)
    ac4 $p |- E. f A. z e. x ( z =/= (/) -> ( f ` z ) e. z ) $=
      ( cv c0 wne cfv wcel wi wral wex wss cdm wfn wa wal aceq3 ac7 mpgbi a4i 
      ) BDZEFUACDZGUAHIBADZJCKZAUBUCLUBUCMNOCKUDAPAABCQACRST $.
      $( [30-Mar-2008] $) $( [21-Jul-1996] $)
  $}

  ${
    $d x y f A $.
    ac4c.1 $e |- A e. _V $.
    $( Equivalent of Axiom of Choice (class version) $)
    ac4c $p |- E. f A. x e. A ( x =/= (/) -> ( f ` x ) e. x ) $=
      ( vy cv c0 wne cfv wcel wi wral wex wceq raleq exbidv ac4 vtocl ) AFZGHSC
      FISJKZAEFZLZCMTABLZCMEBDUABNUBUCCTAUABOPEACQR $.
      $( [3-May-2007] $) $( [10-Feb-1997] $)
  $}

  ${
    $d f x y A $.
    ac5.1 $e |- A e. _V $.
    $( An Axiom of Choice equivalent: there exists a function ` f ` (called a
       choice function) with domain ` A ` that maps each nonempty member of the
       domain to an element of that member.  Axiom AC of [BellMachover]
       p. 488.  Note that the assertion that ` f ` be a function is not
       necessary; see ~ ac4 . $)
    ac5 $p |- E. f ( f Fn A /\ A. x e. A ( x =/= (/) -> ( f ` x ) e. x ) ) $=
      ( vy cv wfn c0 wne cfv wcel wi wral wa wex wceq fneq2 raleq anbi12d 
      exbidv wss cdm wal aceq3 ac4 mpgbir aceq4 mpbi a4i vtocl ) CFZEFZGZAFZHIU
      NUKJUNKLZAULMZNZCOZUKBGZUOABMZNZCOEBDULBPZUQVACVBUMUSUPUTULBUKQUOAULBRSTU
      REUKULUAUKULUBGNCOEUCZUREUCVCUPCOEEACUDEACUEUFEACUGUHUIUJ $.
      $( [25-Apr-2007] $) $( [29-Aug-1999] $)
  $}

  ${
    $d x f A $.
    ac5b.1 $e |- A e. _V $.
    $( Equivalent of Axiom of Choice. $)
    ac5b $p |- ( A. x e. A x =/= (/) ->
               E. f ( f : A --> U. A /\ A. x e. A ( f ` x ) e. x ) ) $=
      ( cv c0 wne wral wfn cfv wcel wi wa wex cuni wf ac5 19.42v crn wss 
      chfnrn ex anc2li df-f syl6ibr impac r19.26 pm3.35 ralimi sylbir sylan2 
      an12s eximi mpan2 ) AEZFGZABHZCEZBIZUPUOURJUOKZLZABHZMZCNZBBOZURPZUTABHZM
      ZCNZABCDQUQVDMUQVCMZCNVIUQVCCRVJVHCUSUQVBVHUSVGVHUQVBMZUSVGVFUSVGUSURSVET
      ZMVFUSVGVLUSVGVLABURUAUBUCBVEURUDUEUFVKUPVAMZABHVGUPVAABUGVMUTABUPUTUHUIU
      JUKULUMUJUN $.
      $( [30-Apr-2007] $) $( [31-Aug-1999] $)
  $}

  ${
    $d f g x y z w A $.  $d f g x y z w B $.  $d ph z w f $.  $d y ps $.
    ac6.1 $e |- A e. _V $.
    ac6.2 $e |- B e. _V $.
    ${
      $d z f g C $.  $d z f g H $.
      ac6lem.4 $e |- C = { y e. B | ph } $.
      ac6lem.5 $e |- H = { <. x , z >. | ( x e. A /\ z = C ) } $.
      $( Lemma for ~ ac6 . $)
      ac6lem $p |- ( A. x e. A E. y e. B ph ->
                   E. f ( f : A --> B /\ A. x e. A ( f ` x ) e. C ) ) $=
        ( vg wrex wral cv c0 wne crn cuni wf cfv wcel wa wex wceq wi crab 
        eqeq2i biimpi neeq1d rabn0 syl6bb biimprcd ralimi r19.23v sylib cab 
        abid copab rneqi rnopab eqtri eleq2i df-rex 3bitr4i syl5ib r19.21aiv 
        wfn cvv rabex eqeltri fnopab2 fnex mp2an rnex ac5b ccom dffn3 mpbi fco 
        mpan2 adantr wfun ax-17 hbopab1 hbxfr hbrn hbral hban 19.8a abeq2i 
        sylibr expcom eleq1 sylibd vtocle fveq2 id eleq12d rcla4v syl impcom 
        adantll wb cdm fnfun ax-mp fvco mp3an2 dmopab2 sylan2br fvopab2 fveq1i 
        syl5eq fveq2d adantl eqtrd eleq1d adantlr mpbird ex r19.21ai ffun 
        sylan jca wss unissb ssrab2 eqsstri sseq1 mpbiri a1i r19.23aiv sylbi 
        mprgbir fss visset coex feq1 hbco hbeleq fveq1 ralbid anbi12d cla4ev 
        19.23aiv 3syl ) ACFOZBEPZDQZRSZDITZPUUNUUNUAZNQZUBZUULUUPUCZUULUDZDUUNP
        ZUEZNUFEFHQZUBZBQZUVBUCZGUDZBEPZUEZHUFZUUKUUMDUUNUUKUULGUGZBEOZUUMUULUU
        NUDZUUKUVJUUMUHZBEPUVKUUMUHUUJUVMBEUVJUUMUUJUVJUUMACFUIZRSUUJUVJUULUVNR
        UVJUULUVNUGGUVNUULLUJUKULACFUMUNUOUPUVJUUMBEUQURUULUVDEUDZUVJUEZBUFZDUS
        ZUDUVQUVLUVKUVQDUTUUNUVRUULUUNUVPBDVAZTUVRIUVSMVBUVPBDVCVDZVEUVJBEVFVGZ
        VHVIDUUNNIIEVJZEVKUDIVKUDBDEGIGUVNVKLACFKVLVMZMVNZJEVKIVOVPZVQVRUVAUVIN
        UVAEFUUPIVSZUBZUVDUWFUCZGUDZBEPZUEZUVIUUNFUUPUBZUUTUWKUUQUWLUUTUEUWGUWJ
        UWLUWGUUTUWLEUUNIUBZUWGUWBUWMUWDEIVTWAEUUNFUUPIWBWCWDUUPWEZUUTUWJUWLUWN
        UUTUEZUWIBEUWNUUTBUWNBWFUUSBDUUNBDIBDIUVSMUVPBDDWGWHWIUUSBWFWJWKUWOUVOU
        WIUWOUVOUEUWIGUUPUCZGUDZUUTUVOUWQUWNUVOUUTUWQUVOGUUNUDZUUTUWQUHUVOUWRUH
        DGUWCUVJUVOUVLUWRUVOUVJUVLUVPUVQUVLUVPBWLUVQDUUNUVTWMWNWOUULGUUNWPWQWRU
        USUWQDGUUNUVJUURUWPUULGUULGUUPWSUVJWTXAXBXCXDXEUWNUVOUWIUWQXFUUTUWNUVOU
        EZUWHUWPGUWSUWHUVDIUCZUUPUCZUWPUWNUVDIXGZUDZUWHUXAUGZUVOUWNIWEZUXCUXDUW
        BUXEUWDEIXHXIUVDUUPIXJXKUXBEUVDBDEGIUWCMXLVEXMUVOUXAUWPUGUWNUVOUWTGUUPU
        VOUVDUVSUCZGUWTUVOGVKUDUXFGUGUWCBDEGVKXNWCUVDIUVSMXOXPXQXRXSXTYAYBYCYDU
        UNFUUPYEYFYGUUQUUOFYHZUWLUXGUULFYHZDUUNDUUNFYIUVLUVKUXHUWAUVJUXHBEUVJUX
        HUHUVOUVJUXHGFYHGUVNFLACFYJYKUULGFYLYMYNYOYPYQUUNUUOFUUPYRWCYFUVHUWKHUW
        FUUPINYSUWEYTUVBUWFUGZUVCUWGUVGUWJEFUVBUWFUUAUXIUVFUWIBEBHUWFBHUUPIUVBU
        UPUDBWFBHIUVSMUVPBDHWGWHUUBUUCUXIUVEUWHGUVDUVBUWFUUDXTUUEUUFUUGXCUUHUUI
        $.
        $( [18-Oct-1999] $)
    $}

    ${
      ac6.3 $e |- ( y = ( f ` x ) -> ( ph <-> ps ) ) $.
      $( Equivalent of Axiom of Choice.  This is useful for proving that there
         exists, for example, a sequence mapping natural numbers to members of
         a larger set ` B ` , where ` ph ` depends on ` x ` (the natural
         number) and ` y ` (to specify a member of ` B ` ).  A stronger version
         of this theorem, ~ ac6s , allows ` B ` to be a proper class. $)
      ac6 $p |- ( A. x e. A E. y e. B ph ->
                E. f ( f : A --> B /\ A. x e. A ps ) ) $=
        ( vz vw wrex wral cv wf cfv crab wcel wa wex wceq copab eqid eqeq1 
        anbi2d cbvopab2v ac6lem elrab simprbi ralimi anim2i eximi syl ) ADFMCEN
        EFGOZPZCOZUOQZADFRZSZCENZTZGUAUPBCENZTZGUAACDKEFUSGUQESZLOZUSUBZTZCLUCH
        IUSUDVHVEKOZUSUBZTCLKVFVIUBVGVJVEVFVIUSUEUFUGUHVBVDGVAVCUPUTBCEUTURFSBA
        BDURFJUIUJUKULUMUN $.
        $( [18-Oct-1999] $)
    $}
  $}

  ${
    $d x y f z A $.  $d x y f z B $.  $d f z ph $.  $d y z ps $.
    ac6s.1 $e |- A e. _V $.
    ac6s.2 $e |- ( y = ( f ` x ) -> ( ph <-> ps ) ) $.
    $( Equivalent of Axiom of Choice.  Using the Boundedness Axiom ~ bnd2 , we
       derive this strong version of ~ ac6 that doesn't require ` B ` to be a
       set. $)
    ac6s $p |- ( A. x e. A E. y e. B ph ->
                E. f ( f : A --> B /\ A. x e. A ps ) ) $=
      ( vz wrex wral cv wss wa wex wf bnd2 visset ac6 anim2i eximi fss expcom 
      anim1d eximdv imp 19.23aiv syl ) ADFKCELJMZFNZADUJKCELZOZJPZEFGMZQZBCELZO
      ZGPZACDJEFHRUNUKEUJUOQZUQOZGPZOZJPUSUMVCJULVBUKABCDEUJGHJSITUAUBVCUSJUKVB
      USUKVAURGUKUTUPUQUTUKUPEUJFUOUCUDUEUFUGUHUIUI $.
      $( [4-Feb-2004] $)

    $( Equivalent of Axiom of Choice.  Contrapositive of ~ ac6s . $)
    ac6n $p |- ( A. f ( f : A --> B -> E. x e. A ps ) ->
                E. x e. A A. y e. B ph ) $=
      ( cv wf wn wral wa wex wrex wi wal cfv wceq notbid ac6s con3i dfrex2 
      imbi2i albii alinexa bitri dfral2 rexbii rexnal 3imtr4i ) EFGJZKZBLZCEMZN
      GOZLZALZDFPZCEMZLZUNBCEPZQZGRZADFMZCEPZVAUQUSUOCDEFGHDJCJUMSTABIUAUBUCVEU
      NUPLZQZGRURVDVIGVCVHUNBCEUDUEUFUNUPGUGUHVGUTLZCEPVBVFVJCEADFUIUJUTCEUKUHU
      L $.
      $( [10-Jun-2007] $)

    $( Generalization of the Axiom of Choice to classes.  Slightly strengthened
       version of ~ ac6s3 . $)
    ac6s2 $p |- ( A. x e. A E. y ph -> E. f ( f Fn A /\ A. x e. A ps ) ) $=
      ( wex wral cvv wrex cv wfn wa rexv ralbii wf ac6s ffn anim1i eximi syl 
      sylbir ) ADIZCEJADKLZCEJZFMZENZBCEJZOZFIZUFUECEADPQUGEKUHRZUJOZFIULABCDEK
      FGHSUNUKFUMUIUJEKUHTUAUBUCUD $.
      $( [29-Sep-2006] $)

    $( Generalization of the Axiom of Choice to classes.  Theorem 10.46 of
       [TakeutiZaring] p. 97. $)
    ac6s3 $p |- ( A. x e. A E. y ph -> E. f A. x e. A ps ) $=
      ( wex wral cv wfn wa ac6s2 simpr eximi syl ) ADICEJFKELZBCEJZMZFISFIABCDE
      FGHNTSFRSOPQ $.
      $( [3-Nov-2004] $)
  $}

  ${
    $d f x z A $.  $d x y f z B $.  $d f z ph $.  $d z ps $.
    ac6sf.1 $e |- ( ps -> A. y ps ) $.
    ac6sf.2 $e |- A e. _V $.
    ac6sf.3 $e |- ( y = ( f ` x ) -> ( ph <-> ps ) ) $.
    $( Version of ~ ac6 with bound-variable hypothesis. $)
    ac6sf $p |- ( A. x e. A E. y e. B ph ->
                E. f ( f : A --> B /\ A. x e. A ps ) ) $=
      ( vz wrex wral cv wsbc wf wa wex cbvrexsv ralbii cfv sbhypf ac6s sylbi ) 
      ADFLZCEMADKNOZKFLZCEMEFGNZPBCEMQGRUEUGCEADKFSTUFBCKEFGIABDKCNUHUAHJUBUCUD
      $.
      $( [2-Mar-2008] $)
  $}

  ${
    $d f x y A $.  $d f y B $.
    ac6s4.1 $e |- A e. _V $.
    $( Generalization of the Axiom of Choice to proper classes. ` B ` is a
       collection ` B ( x ) ` of nonempty, possible proper classes. $)
    ac6s4 $p |- ( A. x e. A B =/= (/) ->
               E. f ( f Fn A /\ A. x e. A ( f ` x ) e. B ) ) $=
      ( vy c0 wne wral cv wcel wex wfn cfv wa n0 ralbii eleq1 ac6s2 sylbi ) CGH
      ZABIFJZCKZFLZABIDJZBMAJUENZCKZABIODLUAUDABFCPQUCUGAFBDEUBUFCRST $.
      $( [29-Sep-2006] $)

    $( Generalization of the Axiom of Choice to proper classes. ` B ` is a
       collection ` B ( x ) ` of nonempty, possible proper classes.  Remark
       after Theorem 10.46 of [TakeutiZaring] p. 98. $)
    ac6s5 $p |- ( A. x e. A B =/= (/) -> E. f A. x e. A ( f ` x ) e. B ) $=
      ( c0 wne wral cv wfn cfv wcel wa wex ac6s4 simpr eximi syl ) CFGABHDIZBJZ
      AISKCLABHZMZDNUADNABCDEOUBUADTUAPQR $.
      $( [19-Nov-2006] $) $( [27-Mar-2006] $)
  $}

  ${
    $d x z y w v f $.
    $( An Axiom of Choice equivalent.  Given a family ` x ` of mutually
       disjoint nonempty sets, there exists a set ` y ` containing exactly one
       member from each set in the family.  Theorem 6M(4) of [Enderton]
       p. 151. $)
    ac8 $p |- ( ( A. z e. x z =/= (/) /\
                   A. z e. x A. w e. x ( z =/= w -> ( z i^i w ) = (/) ) ) ->
               E. y A. z e. x E! v v e. ( z i^i y ) ) $=
      ( vf cv c0 wne wral cin wceq wi wa wcel weu wex wss cdm wfn wal aceq5 
      ac7 mpgbi a4i ) CGZHICAGZJUFDGZIUFUHKHLMDUGJCUGJNEGUFBGKOEPCUGJBQMZAFGZUG
      RUJUGSTNFQUIAUAAABCDEFUBAFUCUDUE $.
      $( [22-Apr-2007] $) $( [14-May-2004] $)
  $}

  ${
    $d f x A $.  $d f B $.
    ac9.1 $e |- A e. _V $.
    $( An Axiom of Choice equivalent: the infinite Cartesian product of
       nonempty classes is nonempty.  Axiom of Choice (second form) of
       [Enderton] p. 55 and its converse.  This is a stronger version of the
       axiom in Enderton, with no existence requirement for the family of
       classes ` B ( x ) ` (achieved via the Collection Principle ~ cp ). $)
    ac9s $p |- ( A. x e. A B =/= (/) <-> X_ x e. A B =/= (/) ) $=
      ( vf c0 wne wral cixp cv wfn cfv wcel wa wex ac6s4 n0 visset elixp exbii 
      bitr2i sylib wceq wn wrex ixp0 con3i df-ne ralbii ralnex bitri 3imtr4i 
      impbii ) CFGZABHZABCIZFGZUOEJZBKAJURLCMABHNZEOZUQABCEDPUQURUPMZEOUTEUPQVA
      USEABCURERSTUAUBUPFUCZUDCFUCZABUEZUDZUQUOVDVBABCUFUGUPFUHUOVCUDZABHVEUNVF
      ABCFUHUIVCABUJUKULUM $.
      $( [29-Sep-2006] $)
  $}

  ${
    $d v A $.  $d u v x y ph $.  $d ps x v $.  $d u v w x y z $.
    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, 1 => 2. $)
    kmlem1 $p |- ( A. x ( ( A. z e. x z =/= (/) /\ A. z e. x A. w e. x ph ) ->
                 E. y A. z e. x ps ) -> A. x ( A. z e. x A. w e. x ph ->
                   E. y A. z e. x ( z =/= (/) -> ps ) ) ) $=
      ( vv vu cv c0 wne wral wa wex wi wal crab visset rabex wceq raleq 
      raleqbi1dv anbi12d exbidv imbi12d cla4v 19.21aiv wcel ssrab2 sseli 
      imim1i ralimi2 imim12i neeq1 elrab simprbi rgen jctil biimpri exp3a 
      eximi alimi syl cbvalv sylib ) EIZJKZECIZLZAFVHLZEVHLZMZBEVHLZDNZOZCPZAFG
      IZLZEVQLZVGBOZEVQLZDNZOZGPZVKVTEVHLZDNZOZCPVPVGEHIZJKZHVQQZLZAFWJLZEWJLZM
      ZBEWJLZDNZOZGPWDVPWQGVOWQCWJWIHVQGRSVHWJTZVLWNVNWPWRVIWKVKWMVGEVHWJUAVJWL
      EVHWJAFVHWJUAUBUCWRVMWODBEVHWJUAUDUEUFUGWQWCGVSWNWPWBVSWMWKVRWLEVQWJVFWJU
      HZVFVQUHZVRWLWJVQVFWIHVQUIZUJAAFVQWJFIZWJUHXBVQUHAWJVQXBXAUJUKULUMULVGEWJ
      WSWTVGWIVGHVFVQWHVFJUNUOZUPUQURWOWADBVTEWJVQWSBOWTVGBWTVGMZWSBWSXDXCUSUKU
      TULVAUMVBVCWCWGGCVQVHTZVSVKWBWFVRVJEVQVHAFVQVHUAUBXEWAWEDVTEVQVHUAUDUEVDV
      E $.
      $( [12-May-2007] $) $( [5-Apr-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem2 $p |- ( E. y A. z e. x ( ph -> E! w w e. ( z i^i y ) ) <->
        E. y ( -. y e. x /\ A. z e. x ( ph -> E! w w e. ( z i^i y ) ) ) ) $=
      ( vv vu cv cin wcel weu wi wral wex wn wa wceq ineq2 eleq2d eubidv 
      imbi2d ralbidv cbvexv cuni visset uniex eleq2 notbid exbidv wal nalset 
      alexn mpbir a4i vtocl csn cun c0 elssuni sseld con3d disjsn syl6ibr 
      impcom uneq2d un0 syl6eq indi syl5req ralbidva wo snid olci elun mpi 
      con3i biantrurd bitrd snex unex eleq1 anbi12d cla4ev syl6bi 19.23aiv 
      ax-mp sylbi simpr eximi impbii ) AEHZDHZCHZIZJZEKZLZDBHZMZCNZWMWRJZOZWSPZ
      CNZWTAWKWLFHZIZJZEKZLZDWRMZFNXDWSXJCFWMXEQZWQXIDWRXKWPXHAXKWOXGEXKWNXFWKW
      MXEWLRSTUAUBUCXJXDFGHZWRUDZJZOZGNZXJXDLZXLWMJZOZGNZXPCXMWRBUEUFWMXMQZXSXO
      GYAXRXNWMXMXLUGUHUIXTCXTCUJXRGUJCNOCGUKXRCGULUMUNUOXOXQGXOXJXEXLUPZUQZWRJ
      ZOZAWKWLYCIZJZEKZLZDWRMZPZXDXOXJYJYKXOXIYIDWRXOWLWRJZPZXHYHAYMXGYGEYMXFYF
      WKYMXFWLYBIZUQZXFYFYMYOXFURUQXFYMYNURXFYLXOYNURQZYLXOXLWLJZOYPYLYQXNYLWLX
      MXLWLWRUSUTVAWLXLVBVCVDVEXFVFVGWLXEYBVHVISTUAVJXOYEYJYDXNYDXLYCJZXNYRXLXE
      JZXLYBJZVKYTYSXLGUEVLVMXLXEYBVNUMYDYCXMXLYCWRUSUTVOVPVQVRXCYKCYCXEYBFUEXL
      VSVTWMYCQZXBYEWSYJUUAXAYDWMYCWRWAUHUUAWQYIDWRUUAWPYHAUUAWOYGEUUAWNYFWKWMY
      CWLRSTUAUBWBWCWDWEWFWEWGXCWSCXBWSWHWIWJ $.
      $( [25-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4.  The
       right-hand side is part of the hypothesis of 4. $)
    kmlem3 $p |- ( ( z \ U. ( x \ { z } ) ) =/= (/) <->
        E. v e. z A. w e. x ( z =/= w -> -. v e. ( z i^i w ) ) ) $=
      ( cv csn cdif cuni c0 wne cin wcel wn wi wral crab wrex wo dfdif2 cun 
      dfnul3 uneq2i un0 unrab 3eqtr3i wb wa ianor wex eluni anbi1i df-rex 
      eldifsn necom anbi2i bitri ancom anass 3bitri an32 elin df-an bitr3i 
      3bitr3ri exbii 19.41v rexnal 3bitr2ri con1bii a1i rabbiia 3eqtri neeq1i 
      rabn0 ) BEZAEZVOFGZHZGZIJVOCEZJZDEZVOVTKLZMNZCVPOZDVOPZIJWEDVOQVSWFIVSWBV
      RLZMZDVOPZWHWBVOLZMZRZDVOPZWFDVOVRSWIITWIWKDVOPZTWIWMIWNWIDVOUAUBWIUCWHWK
      DVOUDUEWLWEDVOWLWEUFWJWLWGWJUGZMWEWGWJUHWEWOWOWBVTLZVTVQLZUGZCUIZWJUGZWDM
      ZCVPQZWEMWGWSWJCWBVQUJUKXBVTVPLZXAUGZCUIWRWJUGZCUIWTXACVPULXDXECWPWJUGZWQ
      UGZXCWAWJWPUGZUGZUGZXEXDXGXFXCWAUGZUGZXKXHUGZXJWQXKXFWQXCVTVOJZUGXKVTVPVO
      UMXNWAXCVTVOUNUOUPUOXLXHXKUGXMXFXHXKWPWJUQUKXHXKUQUPXCWAXHURUSWPWJWQUTXIX
      AXCXIWAWCUGXAWCXHWAWBVOVTVAUOWAWCVBVCUOVDVEWRWJCVFUSWDCVPVGVHVIVCVJVKVLVM
      WEDVOVNUP $.
      $( [12-Oct-2007] $) $( [25-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem4 $p |- ( ( w e. x /\ z =/= w ) ->
                    ( ( z \ U. ( x \ { z } ) ) i^i w ) = (/) ) $=
      ( vy vv cv wcel wne wa wn csn cdif cuni wral cin c0 wceq wi wal visset 
      eleq1 neeq2 anbi12d eleq2 notbid imbi12d cla4v com12 eldif simpr wex 
      eluni notbii alnex con2b imnan eldifsn necom anbi2i bitri imbi1i 3bitr3i 
      albii 3bitr2i sylib sylbi syl5 r19.21aiv disj sylibr ) CFZAFZGZBFZVKHZIZD
      FZVKGZJZDVNVLVNKLZMZLZNWBVKOPQVPVSDWBVPEFZVLGZVNWCHZIZVQWCGZJZRZESZVSVQWB
      GZWJVPVSWIVPVSREVKCTWCVKQZWFVPWHVSWLWDVMWEVOWCVKVLUAWCVKVNUBUCWLWGVRWCVKV
      QUDUEUFUGUHWKVQVNGZVQWAGZJZIZWJVQVNWAUIWPWOWJWMWOUJWOWGWCVTGZIZEUKZJWRJZE
      SWJWNWSEVQVTULUMWREUNWTWIEWGWQJRWQWHRWTWIWGWQUOWGWQUPWQWFWHWQWDWCVNHZIWFW
      CVLVNUQXAWEWDWCVNURUSUTVAVBVCVDVEVFVGVHDWBVKVIVJ $.
      $( [12-Oct-2007] $) $( [26-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem5 $p |- ( ( w e. x /\ z =/= w ) ->
          ( ( z \ U. ( x \ { z } ) ) i^i ( w \ U. ( x \ { w } ) ) ) = (/) ) $=
      ( cv wcel wne wa csn cdif cuni cin c0 wss wceq difss sslin ax-mp kmlem4 
      sseq2d mpbii ss0b sylib ) CDZADZEBDZUCFGZUEUDUEHIJIZUCUDUCHIJZIZKZLMZUJLN
      UFUJUGUCKZMZUKUIUCMUMUCUHOUIUCUGPQUFULLUJABCRSTUJUAUB $.
      $( [12-Oct-2007] $) $( [25-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 4 => 1. $)
    kmlem6 $p |- ( ( A. z e. x z =/= (/) /\
           A. z e. x A. w e. x ( ph -> A = (/) ) ) ->
           A. z e. x E. v e. z A. w e. x ( ph -> -. v e. A ) ) $=
      ( cv c0 wne wral wceq wi wa wcel wn wrex r19.26 wex wal 19.29r df-rex 
      sylibr n0 biimpi ne0i necon2bi imim2i ralimi 19.21aiv syl2an sylbir ) CGZ
      HIZCBGZJAFHKZLZDUNJZCUNJMUMUQMZCUNJAEGZFNZOZLZDUNJZEULPZCUNJUMUQCUNQURVDC
      UNUSULNZERZVCESZVDUMUQVFVGMVEVCMERVDVEVCETVCEULUAUBUMVFEULUCUDUQVCEUPVBDU
      NUOVAAUTFHFUSUEUFUGUHUIUJUHUK $.
      $( [12-May-2007] $) $( [26-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 4 => 1. $)
    kmlem7 $p |- ( ( A. z e. x z =/= (/) /\
           A. z e. x A. w e. x ( z =/= w -> ( z i^i w ) = (/) ) ) ->
       -. E. z e. x A. v e. z E. w e. x ( z =/= w /\ v e. ( z i^i w ) ) ) $=
      ( cv c0 wne wral cin wceq wi wa wcel wn wrex kmlem6 ralinexa rexbii 
      rexnal bitri ralbii ralnex sylib ) BEZFGBAEZHUDCEZGZUDUFIZFJKCUEHBUEHLUGD
      EUHMZNKCUEHZDUDOZBUEHZUGUILCUEOZDUDHZBUEONZUGABCDUHPULUNNZBUEHUOUKUPBUEUK
      UMNZDUDOUPUJUQDUDUGUICUEQRUMDUDSTUAUNBUEUBTUC $.
      $( [12-Oct-2007] $) $( [26-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4 1 <=> 4. $)
    kmlem8 $p |- ( ( -. E. z e. u A. w e. z ps -> E. y A. z e. u ( z =/= (/)
                  -> E! w w e. ( z i^i y ) ) ) <-> ( E. z e. u A. w e. z ps \/
                 E. y ( -. y e. u /\ A. z e. u E! w w e. ( z i^i y ) ) ) ) $=
      ( cv wral wrex wn c0 wne cin wcel weu wi wex wa wo wb ralnex df-rex 
      rexnal bitr3i exsimpl n0 sylibr sylbir ralimi biimt ralbi syl anbi2d 
      exbidv kmlem2 syl6rbbr pm5.74i pm4.64 bitri ) ADCFZGZCEFZHZIZUSJKZDFZUSBF
      ZLMDNZOZCVAGZBPZOVCVFVAMIZVGCVAGZQZBPZOVBVNRVCVJVNVCVDCVAGZVJVNSVCUTIZCVA
      GVOUTCVATVPVDCVAVPVEUSMZAIZQDPZVDVSVRDUSHVPVRDUSUAADUSUBUCVSVQDPVDVQVRDUD
      DUSUEUFUGUHUGVOVNVKVIQZBPVJVOVMVTBVOVLVIVKVOVGVHSZCVAGVLVISVDWACVAVDVGUIU
      HVGVHCVAUJUKULUMVDEBCDUNUOUKUPVBVNUQUR $.
      $( [12-May-2007] $) $( [4-Apr-2004] $)
  $}

  ${
    $d x y z w v u t h g $.  $d y z w v h g A $.  $d h ph $.
    kmlem9.1 $e |- A = { u | E. t e. x u = ( t \ U. ( x \ { t } ) ) } $.
    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem9 $p |- A. z e. A A. w e. A ( z =/= w -> ( z i^i w ) = (/) ) $=
      ( vh cv wne cin c0 wceq wi csn cdif cuni wrex wcel wa reeanv ineq12 
      eqeq1d kmlem5 syl5bir exp3a eqeq12 difeq1 sneq difeq2d unieqd eqtrd 
      necon3d syl5d com12 adantl r19.23aivv sylbir visset eqeq1 rexbidv elab2 
      eqeq2d cbvrexv bitri syl2anb rgen2a ) BIZCIZJZVHVIKZLMZNZBCFVHEIZAIZVNOZP
      ZQZPZMZEVORZVIHIZVOWBOZPZQZPZMZHVORZVMVHFSVIFSZWAWHTVTWGTZHVOREVORVMVTWGE
      HVOVOUAWJVMEHVOVOWBVOSZWJVMNVNVOSWJWKVMWJWKVNWBJZVLVJWJWKWLVLWJVLVSWFKZLM
      WKWLTWJVKWMLVHVSVIWFUBUCAEHUDUEUFWJVNWBVHVIWJVHVIMVSWFMVNWBMZVHVSVIWFUGWN
      VSWBVRPWFVNWBVRUHWNVRWEWBWNVQWDWNVPWCVOVNWBUIUJUKUJULZUEUMUNUOUPUQURDIZVS
      MZEVORZWADVHFBUSWPVHMWQVTEVOWPVHVSUTVAGVBWIVIVSMZEVORZWHWRWTDVIFCUSWPVIMW
      QWSEVOWPVIVSUTVAGVBWSWGEHVOWNVSWFVIWOVCVDVEVFVG $.
      $( [12-Oct-2007] $) $( [25-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem10 $p |- ( A. h ( A. z e. h A. w e. h
                              ( z =/= w -> ( z i^i w ) = (/) ) ->
                         E. y A. z e. h ph ) -> E. y A. z e. A ph ) $=
      ( cv wne cin c0 wceq wi wral wex wal kmlem9 csn cdif cuni wrex cab cvv 
      visset abrexex eqeltri raleq raleqbi1dv exbidv imbi12d cla4v mpi ) DKZEKZ
      LUPUQMNOPZEIKZQZDUSQZADUSQZCRZPZISUREHQZDHQZADHQZCRZBDEFGHJTVDVFVHPIHHFKG
      KZBKZVIUAUBUCUBZOGVJUDFUEUFJGFVJVKBUGUHUIUSHOZVAVFVCVHUTVEDUSHUREUSHUJUKV
      LVBVGCADUSHUJULUMUNUO $.
      $( [12-Oct-2007] $) $( [25-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem11 $p |- ( z e. x -> ( z i^i U. A ) = ( z \ U. ( x \ { z } ) ) ) $=
      ( cv wcel csn cdif cuni cin ciun c0 cun wceq wss snssi ssequn1 sylib 
      undif2 syl5req iuneq1 syl wral wne wa kmlem4 incom syl5eq ex eldifsn 
      simprbi syl5 r19.21aiv iuneq2 iun0 syl6eq uneq2d iunxun visset difeq1 
      sneq difeq2d unieqd eqtrd ineq2d iunxsn uneq1i eqtri un0 indif wrex cab 
      unieqi cvv difexg ax-mp dfiun2 eqtr4i ineq2i iunin2 ) BGZAGZHZDWDWCDGZWDW
      FIZJZKZJZLZMZWCWDWCIZJZKZJZWCEKZLZWEWLWCWPLZNOZWPWEWLDWMWNOZWKMZWTWEWDXAP
      WLXBPWEWMWDOZWDXAWEWMWDQXCWDPWCWDRWMWDSTWMWDUAUBDWDXAWKUCUDWEWSDWNWKMZOZW
      TXBWEXDNWSWEXDDWNNMZNWEWKNPZDWNUEXDXFPWEXGDWNWEWFWCUFZXGWFWNHZWEXHXGWEXHU
      GWJWCLNWKADBUHWCWJUIUJUKXIWFWDHXHWFWDWCULUMUNUODWNWKNUPUDDWNUQURUSXBDWMWK
      MZXDOXEDWMWNWKUTXJWSXDDWCWKWSBVAWFWCPZWJWPWCXKWJWCWIJWPWFWCWIVBXKWIWOWCXK
      WHWNXKWGWMWDWFWCVCVDVEVDVFVGVHVIVJUJVFWTWSWPWSVKWCWOVLVJURWRWCDWDWJMZLWLW
      QXLWCWQCGWJPDWDVMCVNZKXLEXMFVODCWDWJWFVPHWJVPHDVAWFWIVPVQVRVSVTWADWDWCWJW
      BVTUJ $.
      $( [26-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 3 => 4. $)
    kmlem12 $p |- ( A. z e. x ( z \ U. ( x \ { z } ) ) =/= (/) ->
                    ( A. z e. A ( z =/= (/) -> E! v v e. ( z i^i y ) ) ->
        A. z e. x ( z =/= (/) -> E! v v e. ( z i^i ( y i^i U. A ) ) ) ) ) $=
      ( cv csn cdif cuni c0 wne wral cin wcel weu wi wceq difeq1 sneq difeq2d 
      unieqd eqtrd neeq1d cbvralv ineq1d eleq2d eubidv imbi12i kmlem11 in12 
      incom eqtri syl5req ax-1 syl6bi ralimia imim2i sylbi com12 wrex cab wal 
      raleqi df-ral visset eqeq1 rexbidv elab imbi1i r19.23v bitr4i albii 
      ralcom4 cvv difexg ax-mp neeq1 ineq1 imbi12d ceqsalv ralbii 3bitr2i 
      3bitri ralim syl5 ) CIZAIZWIJZKZLZKZMNZCWJOZFIZWJWQJZKZLZKZMNZFWJOZDIZXAB
      IZPZQZDRZFWJOZSZWIMNZXDWIXEGLZPPZQZDRZSZCWJOZXKXDWIXEPZQZDRZSZCGOZXJWPXQX
      JWPXDWNXEPZQZDRZCWJOZSWPXQSXCWPXIYFXBWOFCWJWQWITZXAWNMYGXAWIWTKWNWQWIWTUA
      YGWTWMWIYGWSWLYGWRWKWJWQWIUBUCUDUCUEZUFUGXHYEFCWJYGXGYDDYGXFYCXDYGXAWNXEY
      HUHUIUJUGUKYFXQWPYEXPCWJWIWJQZYEXOXPYIYDXNDYIYCXMXDYIWIXLPZXEPZYCXMYIYJWN
      XEACEFGHULUHXMXEYJPYKWIXEXLUMXEYJUNUOUPUIUJXOXKUQURUSUTVAVBYBXBXHSZFWJOZX
      JYBYACEIZXATZFWJVCZEVDZOWIYQQZYASZCVEZYMYACGYQHVFYACYQVGYTWIXATZYASZFWJOZ
      CVEUUBCVEZFWJOYMYSUUCCYSUUAFWJVCZYASUUCYRUUEYAYPUUEEWICVHYNWITYOUUAFWJYNW
      IXAVIVJVKVLUUAYAFWJVMVNVOUUBFCWJVPUUDYLFWJYAYLCXAWQVQQXAVQQFVHWQWTVQVRVSU
      UAXKXBXTXHWIXAMVTUUAXSXGDUUAXRXFXDWIXAXEWAUIUJWBWCWDWEWFXBXHFWJWGVAWH $.
      $( [12-May-2007] $) $( [27-Mar-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4 1 <=> 4. $)
    kmlem13 $p |- ( A. x ( ( A. z e. x z =/= (/) /\
           A. z e. x A. w e. x ( z =/= w -> ( z i^i w ) = (/) ) ) ->
         E. y A. z e. x E! v v e. ( z i^i y ) ) <->
          A. x ( -. E. z e. x A. v e. z E. w e. x
                     ( z =/= w /\ v e. ( z i^i w ) ) ->
               E. y A. z e. x ( z =/= (/) ->
                    E! v v e. ( z i^i y ) ) ) ) $=
      ( vh vg cv c0 wne wral cin wceq wi wa wcel weu wex wal wrex wn kmlem1 
      raleq raleqbi1dv exbidv imbi12d cbvalv kmlem10 ineq2 eleq2d eubidv 
      imbi2d ralbidv cbvexv csn cdif cuni kmlem12 visset inex1 cla4ev syl6 
      19.23adv com12 kmlem3 ralinexa rexbii rexnal 3bitri ralbii ralnex bitri 
      syl5ibr sylbi syl 19.21aiv kmlem7 imim1i wb biimt ralimi ralbi adantr 
      pm5.74i sylibr alimi impbii ) CLZMNZCALZOZWLDLZNZWLWPPZMQRZDWNOZCWNOZSZEL
      ZWLBLZPZTZEUAZCWNOZBUBZRZAUCZWQXCWRTZSDWNUDZEWLOZCWNUDUEZWMXGRZCWNOZBUBZR
      ZAUCZXKXAXRRZAUCZXTWSXGABCDUFYBWSDJLZOZCYCOZXPCYCOZBUBZRZJUCZXTYAYHAJWNYC
      QZXAYEXRYGWTYDCWNYCWSDWNYCUGUHYJXQYFBXPCWNYCUGUIUJUKYIXSAYIXPCHOZBUBZXSXP
      ABCDFGHJIULYLWMXCWLKLZPZTZEUAZRZCHOZKUBZXSYKYRBKXDYMQZXPYQCHYTXGYPWMYTXFY
      OEYTXEYNXCXDYMWLUMUNUOUPUQURYSWLWNWLUSUTVAUTMNZCWNOZXRXOUUBYSXRUUBYRXRKUU
      BYRWMXCWLYMHVAZPZPZTZEUAZRZCWNOZXRAKCEFGHIVBXQUUIBUUDYMUUCKVCVDXDUUDQZXPU
      UHCWNUUJXGUUGWMUUJXFUUFEUUJXEUUEXCXDUUDWLUMUNUOUPUQVEVFVGVHUUBXNUEZCWNOXO
      UUAUUKCWNUUAWQXLUERDWNOZEWLUDXMUEZEWLUDUUKACDEVIUULUUMEWLWQXLDWNVJVKXMEWL
      VLVMVNXNCWNVOVPVQVRVSVTVRVSXSXJAXSXBXRRXJXBXOXRACDEWAWBXBXIXRWOXIXRWCXAWO
      XHXQBWOXGXPWCZCWNOXHXQWCWMUUNCWNWMXGWDWEXGXPCWNWFVSUIWGWHWIWJWK $.
      $( [12-Oct-2007] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x y z w v u $.  $d u ph $.
    kmlem14.1 $e |- ( ph <->
                ( z e. y -> ( ( v e. x /\ y =/= v ) /\ z e. v ) ) ) $.
    kmlem14.2 $e |- ( ps <-> ( z e. x -> ( ( v e. z /\ v e. y ) /\
                ( ( u e. z /\ u e. y ) -> u = v ) ) ) ) $.
    kmlem14.3 $e |- ( ch <->
                A. z e. x E! v v e. ( z i^i y ) ) $.
    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 5 <=> 4. $)
    kmlem14 $p |- ( E. z e. x A. v e. z E. w e. x
                   ( z =/= w /\ v e. ( z i^i w ) ) <->
                 E. y A. z E. v A. u ( y e. x /\ ph ) ) $=
      ( cv wne cin wcel wa wrex wral wex wal wceq neeq1 ineq1 eleq2d anbi12d 
      rexbidv raleqbi1dv cbvrexv df-rex wi eleq1 anbi2d cbvralv df-ral bitri 
      anbi2i 19.28v neeq2 ineq2 imbi2i 19.37v bitr4i 19.42v ax-17 19.3 elin 
      baibr anass syl6bb pm5.74i bitr2i exbii 3bitr2i albii 3bitri ) FMZGMZNZHM
      ZVQVROZPZQZGDMZRZHVQSZFWDREMZVRNZVTWGVROZPZQZGWDRZHWGSZEWDRWGWDPZWMQZETWN
      AQZIUAZHTZFUAZETWFWMFEWDWEWLHVQWGVQWGUBZWCWKGWDWTVSWHWBWJVQWGVRUCWTWAWIVT
      VQWGVRUDUEUFUGUHUIWMEWDUJWOWSEWOWNVQWGPZWHVQWIPZQZGWDRZUKZFUAZQWNXEQZFUAW
      SWMXFWNWMXDFWGSXFWLXDHFWGVTVQUBZWKXCGWDXHWJXBWHVTVQWIULUMUGUNXDFWGUOUPUQW
      NXEFURXGWRFXGWNXAVTWDPZWGVTNZVQWGVTOZPZQZQZUKZHTZQWNXOQZHTWRXEXPWNXEXAXNH
      TZUKXPXDXRXAXDXMHWDRXRXCXMGHWDVRVTUBZWHXJXBXLVRVTWGUSXSWIXKVQVRVTWGUTUEUF
      UIXMHWDUJUPVAXAXNHVBVCUQWNXOHVDXQWQHWQWPXQWPIWPIVEVFAXOWNAXAXIXJQZVQVTPZQ
      ZUKXOJXAYBXNXAYBXTXLQXNXAYAXLXTXLXAYAVQWGVTVGVHUMXIXJXLVIVJVKUPUQVLVMVNVO
      VNVMVP $.
      $( [12-Oct-2007] $) $( [4-Apr-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4, part of 5 <=> 4. $)
    kmlem15 $p |- ( ( -. y e. x /\ ch ) <->
                     A. z E. v A. u ( -. y e. x /\ ps ) ) $=
      ( cv wcel wn wa wal wex cin weu wral wceq wi wsbc ax-17 eu1 elin eleq1 
      sbie bitri eqcom imbi12i albii anbi12i 19.28v bitr4i exbii ralbii df-ral 
      19.21v 19.37v 3bitri anbi2i 19.42v bitr2i 3bitr2i ) ELZDLZMNZCOVHBHPZGQZF
      PZOVHVJOZFPVHBOHPZGQZFPCVKVHCGLZFLZVFRZMZGSZFVGTVOVPMVOVFMOZHLZVPMWAVFMOZ
      WAVOUAZUBZOZHPZGQZFVGTZVKKVSWGFVGVSVRVRGWAUCZVOWAUAZUBZHPZOZGQWGVRGHVRHUD
      UEWMWFGWMVTWDHPZOWFVRVTWLWNVOVPVFUFWKWDHWIWBWJWCWIWAVQMZWBVRWOGHWOGUDVOWA
      VQUGUHWAVPVFUFUIVOWAUJUKULUMVTWDHUNUOUPUIUQWHVPVGMZWGUBZFPVKWGFVGURVJWQFV
      JWPWFUBZGQWQVIWRGVIWPWEUBZHPWRBWSHJULWPWEHUSUIUPWPWFGUTUIULUOVAVBVHVJFUNV
      LVNFVNVHVIOZGQVLVMWTGVHBHUNUPVHVIGVCVDULVE $.
      $( [4-Apr-2004] $)

    $( Lemma for 5-quantifier AC of Kurt Maes, Th. 4 5 <=> 4. $)
    kmlem16 $p |- ( ( E. z e. x A. v e. z E. w e. x
       ( z =/= w /\ v e. ( z i^i w ) ) \/ E. y ( -. y e. x /\ ch ) ) <->
       E. y A. z E. v A. u ( ( y e. x /\ ph ) \/ ( -. y e. x /\ ps ) ) ) $=
      ( cv wne cin wcel wa wrex wral wn wex wo wal kmlem14 kmlem15 exbii 
      orbi12i 19.43 wb pm3.24 simpl a4s 19.23aivv anim12i mto 19.33b ax-mp 
      19.23aiv bitr2i albii bitr3i 3bitr2i ) FMZGMZNHMVCVDOPQGDMZRHVCSFVERZEMVE
      PZTZCQZEUAZUBVGAQZIUCZHUAZFUCZEUAZVHBQZIUCZHUAZFUCZEUAZUBVNVSUBZEUAVKVPUB
      IUCZHUAZFUCZEUAVFVOVJVTABCDEFGHIJKLUDVIVSEABCDEFHIJKLUEUFUGVNVSEUHWAWDEWA
      VMVRUBZFUCZWDVMFUAZVRFUAZQZTWFWAUIWIVGVHQZVGUJZWGVGWHVHVLVGFHVKVGIVGAUKZU
      LUMVQVHFHVPVHIVHBUKZULUMUNUOVMVRFUPUQWEWCFWCVLVQUBZHUAWEWBWNHVKIUAZVPIUAZ
      QZTWBWNUIWQWJWKWOVGWPVHVKVGIWLURVPVHIWMURUNUOVKVPIUPUQUFVLVQHUHUSUTVAUFVB
      $.
      $( [12-Oct-2007] $) $( [4-Apr-2004] $)
  $}

  ${
    $d x y z w v u f t h $.
    $( Equivalence of the Axiom of Choice (first form) of [Enderton] p. 49 and
       Maes' AC ~ ackm .  The proof consists of lemmas ~ kmlem1 through
       ~ kmlem16 and this final theorem.  AC is not used for the proof.  Note:
       bypassing the first step (i.e. replacing ~ aceq5 with ~ biid )
       establishes the AC equivalence shown by Mae's writeup.  The
       left-hand-side AC shown here was chosen because it is shorter to
       display. $)
    aceqkm $p |- ( A. x E. f ( f C_ x /\ f Fn dom x ) <->
      A. x E. y A. z E. v A. u (
       ( y e. x /\ ( z e. y -> ( ( v e. x /\ -. y = v ) /\ z e. v ) ) ) \/
           ( -. y e. x /\ ( z e. x -> ( ( v e. z /\ v e. y ) /\
               ( ( u e. z /\ u e. y ) ->
                   u = v ) ) ) ) ) ) $=
      ( vw vt vh cv wss cdm wfn wa wex wal c0 wne wral cin wceq wi wcel weu 
      wrex wn wo aceq5 csn cdif cuni cab eqid kmlem13 kmlem8 albii bitri df-ne 
      bicomi anbi2i anbi1i imbi2i biid kmlem16 3bitri ) FJZAJZKVFVGLMNFOAPCJZQR
      ZCVGSVHGJZRZVHVJTZQUAUBGVGSCVGSNDJZVHBJZTUCDUDZCVGSZBOUBAPZVKVMVLUCNGVGUE
      ZDVHSCVGUEZVNVGUCZUFZVPNBOUGZAPZVTVHVNUCZVMVGUCZVNVMUAUFZNZVHVMUCZNZUBZNW
      AVHVGUCVMVHUCVMVNUCNEJZVHUCWKVNUCNWKVMUAUBNUBZNUGEPDOCPBOZAPABCGDFUHVQVSU
      FVIVOUBCVGSBOUBZAPWCABCGDHIHJIJZVGWOUIUJUKUJUAIVGUEHULZWPUMUNWNWBAVRBCDAU
      OUPUQWBWMAWJWLVPABCGDEWIWEVNVMRZNZWHNWDWGWRWHWFWQWEWQWFVNVMURUSUTVAVBWLVC
      VPVCVDUPVE $.
      $( [13-Apr-2004] $)
  $}

  ${
    $d x y z w v u f t h $.
    $( A remarkable equivalent to the Axiom of Choice that has only 5
       quantifiers (when expanded to ` e. ` , ` = ` primitives in prenex form),
       discovered and proved by Kurt Maes.  This establishes a new record,
       reducing from 6 to 5 the largest number of quantified variables needed
       by any ZFC axiom.  The ZF-equivalence to AC is shown by theorem
       ~ aceqkm .  Maes found this version of AC in April, 2004 (replacing a
       longer version, also with 5 quantifiers, that he found in November,
       2003).  See Kurt Maes, "A 5-quantifier ( ` e. ` ,=)-expression
       ZF-equivalent to the Axiom of Choice"
       ( ~ http://arxiv.org/PS_cache/arxiv/pdf/0705/0705.3162v1.pdf ).

       The original FOM posts are:
       ~ http://www.cs.nyu.edu/pipermail/fom/2003-November/007631.html
       ~ http://www.cs.nyu.edu/pipermail/fom/2003-November/007641.html . $)
    ackm $p |- A. x E. y A. z E. v A. u (
       ( y e. x /\ ( z e. y -> ( ( v e. x /\ -. y = v ) /\ z e. v ) ) ) \/
           ( -. y e. x /\ ( z e. x -> ( ( v e. z /\ v e. y ) /\
               ( ( u e. z /\ u e. y ) ->
                   u = v ) ) ) ) ) $=
      ( vf cv wss cdm wfn wa wex wcel wceq wn wi wo wal aceqkm ac7 mpgbi ) FGZA
      GZHUBUCIJKFLBGZUCMZCGZUDMDGZUCMUDUGNOKUFUGMKPKUEOUFUCMUGUFMUGUDMKEGZUFMUH
      UDMKUHUGNPKPKQERDLCRBLARAABCDEFSAFTUA $.
      $( [29-Apr-2004] $)

$(
    @( DELETE THIS @)
    ackmxx @p |- ( A. x E. y A. z E. v A. u (
       ( y e. x /\ ( z e. y -> ( ( v e. x /\ -. y = v ) /\ z e. v ) ) ) \/
           ( -. y e. x /\ ( z e. x -> ( ( v e. z /\ v e. y ) /\
               ( ( u e. z /\ u e. y ) ->
                   u = v ) ) ) ) ) <-> ph ) @=
      ( cv wcel wceq wn wa wi wo wal wex df-ex df-or df-an imbi1i notbii bitri
      imbi2i imbi12i albii bicomi ) ACGZBGZHZDGZUFHZEGZUGHZUFUKIJZKZUIUKHZKZLZK
      ZUHJZUIUGHZUKUIHZUKUFHZKZFGZUIHZVDUFHZKZVDUKIZLZKZLZKZMZFNZEOZDNZCOZBNZAU
      HUJULUMJLJZUOJZLZJZLZJZLZJZJZUSUTVAVBJLJZVEVFJLJZVHLZJZLZJZLZJZLZJZLZFNZJ
      ZENZJZDNZJZCNZJZBNZVR?VRXGVQXFBVQVPJZCNZJXFVPCPXIXEXHXDCVPXCVOXBDVOVNJZEN
      ZJXBVNEPXKXAXJWTEVNWSVMWRFVMURJZVLLWRURVLQXLWGVLWQURWFURUHUQJZLZJWFUHUQRX
      NWEXMWDUHUQWCUPWBUJUPUNVTLZJWBUNUORXOWAUNVSVTULUMRSTUAUBTUBTUATVLUSVKJZLZ
      JWQUSVKRXQWPXPWOUSVKWNVJWMUTVJVCVIJZLZJWMVCVIRXSWLVCWHXRWKVAVBRVIWJVGWIVH
      VEVFRSTUCTUAUBTUBTUAUCUAUDTUDTUAUDTUDTUAUDUEUAUE @.
      @( [ ?] @) @( [2-Feb-2006] @)

    axacxx @p  |- ( E. y A. z A. w ( ( z e. w /\ w e. x ) -> E. v A. u ( E. t
              ( ( u e. w /\ w e. t ) /\ ( u e. t /\ t e. y ) ) <-> u = v ) )
<-> ph ) @=
      ( cv wcel wa wex wceq wb wal wi wn df-ex df-an dfbi1 notbii imbi12i bitri
      albii imbi1i imbi2i bicomi ) ADIEIZJZUHBIJZKZGIZUHJZUHHIZJZKZULUNJZUNCIJZ
      KZKZHLZULFIMZNZGOZFLZPZEOZDOZCLZAUIUJQPQZUMUOQPQZUQURQPQZQZPZQZQZHOZQZVBP
      ZVBVRPZQZPZQZGOZQZFOZQZPZEOZDOZQZCOZQZVI?VIWMVIVHQZCOZQWMVHCRWOWLWNWKCVHW
      JVGWIDVFWHEUKVJVEWGUIUJSVEVDQZFOZQWGVDFRWQWFWPWEFVDWDVCWCGVCVAVBPZVBVAPZQ
      ZPZQWCVAVBTXAWBWRVSWTWAVAVRVBVAUTQZHOZQVRUTHRXCVQXBVPHUTVOUTUPUSQZPZQVOUP
      USSXEVNUPVKXDVMUMUOSUSVLUQURSUAUBUAUCUAUDUAUCZUEWSVTVAVRVBXFUFUAUBUAUCUDU
      AUDUAUCUBUDUDUAUDUAUCUGUCUG @.
      @( [ ?] @) @( [2-Feb-2006] @)

Maes expanded to primitives -  94 symbols
A.  4
e. 10
-> 11
-. 17
(  11
)  11
=   2
var occ 28
vars 5

-. A. y -. A. z -. A. v -. A. u ( ( y e. x -> -. ( z e. y -> -. ( -. ( v
e. x -> y = v ) -> -. z e. v ) ) ) -> -. ( -. y e. x -> -. ( z e. x ->
-. ( -. ( v e. z -> -. v e. y ) -> -. ( -. ( u e. z -> -. u e. y ) -> u
= v ) ) ) ) )

ax-ac expanded to primitives - 99 symbols

A.  7
e. 10
-> 11
-. 16
(  11
)  11
=   2
var occ 31
vars 7

-. A. y -. A. z A. w ( -. ( z e. w -> -. w e. x ) -> -. A. v -. A. u -.
( ( -. A. t ( -. ( u e. w -> -. w e. t ) -> ( u e. t -> -. t e. y ) ) ->
u = v ) -> -. ( u = v -> -. A. t ( -. ( u e. w -> -. w e. t ) -> ( u e.
t -> -. t e. y ) ) ) ) )
$)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       AC equivalents:  well ordering, Zorn's lemma
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)
  ${
    $d x y z f g A $.  $d x y f B $.  $d x y f F $.  $d x y f G $.
    numthlem.1 $e |- A e. _V $.
    $( Hypotheses for transfinite recursion. $)
    numthlem.2 $e |- B = { f | E. x e. On ( f Fn x /\
                A. y e. x ( f ` y ) = ( G ` ( f |` y ) ) ) } $.
    numthlem.3 $e |- F = U. B $.
    $( Generator function.  ` g ` is a choice function on ` ~P A ` . $)
    numthlem.4 $e |- G = { <. f , y >. | y = ( g ` ( A \ ran f ) ) } $.
    $( Lemma for ~ numth . $)
    numthlem $p |- E. x e. On E. f f : x -1-1-onto-> A $=
      ( cv c0 wne cfv wcel wi cpw wral wex wf1o con0 wrex pwex ac4c cima cdif 
      cres wa tfr2 crn wceq copab wfun cvv tfrlem7 visset resfunexg mp2an fvex 
      rneq difeq2 fveq2 3syl fvopab fveq1i df-ima difeq2i fveq2i 3eqtr4i 
      syl6eq eleq1d wss difss ssexi elpw mpbir neeq1 id eleq12d imbi12d rcla4v 
      ax-mp imp syl5bir exp3a com12 r19.21aiv tfr1 tz7.49c f1oeq1 cla4ev 
      reximi 19.23aiv ) BMZNOZWPFMZPZWPQZRZBCSZTZFUAAMZCEMZUBZEUAZAUCUDZBXBFCIU
      EUFXCXHFXCCGXDUGZUHZNOZXDGPZXJQZRZAUCTXDCGXDUIZUBZAUCUDXHXCXNAUCXDUCQZXCX
      NXQXCXKXMXQXMXJWRPZXJQZXCXKUJXQXLXRXJXQXLXOHPZXRABADEGHJKUKXOWPCXEULZUHZW
      RPZUMEBUNZPCXOULZUHZWRPZXTXREBXOYCYGGUOXDUPQXOUPQABDEGHJKUQAURGXDUPUSUTZY
      FWRVAXEXOUMYAYEUMYBYFUMYCYGUMXEXOVBYAYECVCYBYFWRVDVEVFXOHYDLVGXJYFWRXIYEC
      GXDVHVIVJVKVLVMXCXKXSXJXBQZXCXKXSRZRYIXJCVNCXIVOZXJCXJCIYKVPVQVRXAYJBXJXB
      WPXJUMZWQXKWTXSWPXJNVSYLWSXRWPXJWPXJWRVDYLVTWAWBWCWDWEWFWGWHWIACGABDEGHJK
      WJIWKXPXGAUCXFXPEXOYHXDCXEXOWLWMWNVEWOWD $.
      $( [10-Feb-1997] $)
  $}

  ${
    $d x y z w v u f g h A $.
    numth.1 $e |- A e. _V $.
    $( Numeration theorem: every set can be put into one-to-one correspondence
       with some ordinal (using AC).  Theorem 10.3 of [TakeutiZaring] p. 84. $)
    numth $p |- E. x e. On E. f f : x -1-1-onto-> A $=
      ( vy vg vz vw vu vv vh cv wfn cfv cres crn cdif wceq copab wral wa con0 
      wrex cab cuni rdglem1 eqid id rneq difeq2 fveq2 3syl eqeqan12rd cbvopabv 
      numthlem ) AEBFLZGLZMHLZUPNUPUROILZBJLZPZQZKLZNZRZJISZNRHUQTUAGUBUCFUDZCK
      VGUEZVFDGHAEFCVFUFVHUGVEELZBCLZPZQZVCNZRJICEUSVIRZUTVJRZUSVIVDVMVNUHVOVAV
      KRVBVLRVDVMRUTVJUIVAVKBUJVBVLVCUKULUMUNUO $.
      $( [10-Feb-1997] $)
  $}

  ${
    $d x y z A $.
    $( Numeration theorem: any set is equinumerous to some ordinal (using AC).
       Theorem 10.3 of [TakeutiZaring] p. 84. $)
    numth2 $p |- E. x e. On x ~~ A $=
      ( vy vz cvv wcel cv cen wbr con0 wrex wceq breq2 rexbidv wf1o wex visset 
      numth bren rexbii mpbir vtoclg c0 wn breq1 rcla4ev 0elon enrefg ax-mp 
      brprc mpbiri sylancr pm2.61i ) BEFZAGZBHIZAJKZUOCGZHIZAJKZUQCBEURBLUSUPAJ
      URBUOHMNUTUOURDGODPZAJKAURDCQZRUSVAAJUOURDVBSTUAUBUCJFZUCBHIZUQUNUDZUPVDA
      UCJUOUCBHUEUFUGVEVDUCUCHIZVCVFUGUCJUHUIUCBHUJUKULUM $.
      $( [20-Oct-2003] $)
  $}

  ${
    $d x y A $.
    $( Any set is strictly dominated by some ordinal. $)
    numthcor $p |- ( A e. B -> E. x e. On A ~< x ) $=
      ( vy cv csdm wbr con0 wrex wceq breq1 rexbidv cpw cen numth2 cvv wcel wa 
      wi visset sdomentr ax-mp canth2 pwex ensym sylancr reximi vtoclg ) DEZAEZ
      FGZAHIZBUJFGZAHIDBCUIBJUKUMAHUIBUJFKLUJUIMZNGZAHIULAUNOUOUKAHUIUNFGZUNUJN
      GZUKUOUJPQUPUQRUKSATUIUNUJPUAUBUIDTZUCUJUNUIURUDUEUFUGUBUH $.
      $( [22-Oct-2003] $)
  $}

  ${
    $d x y z w f A $.
    weth.1 $e |- A e. _V $.
    $( Well-ordering theorem: any set ` A ` can be well-ordered.  This is an
       equivalent of the Axiom of Choice.  Theorem 6 of [Suppes] p. 242.  First
       proved by Ernst Zermelo (the "Z" in ZFC) in 1904. $)
    weth $p |- E. x x We A $=
      ( vy vf vz vw cv wf1o wex con0 wrex wwe numth wcel wi ccnv f1ocnv cep 
      cfv wbr copab eqid f1owe cxp cin weinxp xpex inex2 weeq1 cla4ev sylbi 
      syl6 word eloni ordwe syl syl5 19.23aiv com12 r19.23aiv ax-mp ) DHZBEHZIZ
      EJZDKLBAHZMZAJZDBECNVFVIDKVFVCKOZVIVEVJVIPZEVEBVCVDQZIZVKVCBVDRVMVCSMZVIV
      JVMVNBFHVLTGHVLTSUAFGUBZMZVIFGBVCVOSVLVOUCUDVPBVOBBUEZUFZMZVIBVOUGVHVSAVR
      VQVOBBCCUHUIBVGVRUJUKULUMVJVCUNVNVCUOVCUPUQURUQUSUTVAVB $.
      $( [9-Mar-1997] $)
  $}

  ${
    $d x y w h t z f g u v r s a b A $.  $d h t f B $.
    $d x y z v u f g h t r s a b F $.  $d h t f G $.  $d t C $.
    $d y u v f t a b D $.  $d x y z w g u v f t s r a b R $.
    $d x y u v w f t s r a b $.
    zorn2lem.1 $e |- A e. _V $.
    $( Hypotheses for transfinite recursion. $)
    zorn2lem.2 $e |- B = { f | E. h e. On ( f Fn h /\
                A. t e. h ( f ` t ) = ( G ` ( f |` t ) ) ) } $.
    zorn2lem.3 $e |- F = U. B $.
    $( Auxiliary sets. $)
    zorn2lem.4 $e |- C = { z e. A | A. g e. ran f g R z } $.
    zorn2lem.5 $e |- D = { z e. A | A. g e. ( F " x ) g R z } $.
    $( Generator function.  ` w ` is a well-ordering on ` A ` . $)
    zorn2lem.6 $e |- G =
                { <. f , t >. | t = U. { v e. C | A. u e. C -. u w v } } $.
    $( Lemma for ~ zorn2 . $)
    zorn2lem1 $p |- ( ( x e. On /\ ( w We A /\ D =/= (/) ) ) ->
                   ( F ` x ) e. D ) $=
      ( cv con0 wcel wwe c0 wne wa cfv wbr wn wral crab cuni cres tfr2 wceq 
      copab fveq1i wfun cvv tfrlem7 visset resfunexg mp2an cima ssrab2 eqsstri 
      ssexi rabex uniex cab crn rneq df-ima syl6eqr eleq2d imbi1d ralbidv2 
      rabbidv 3eqtr4g anbi12d abbidv df-rab unieqd fvopab eqtri syl6eq eleq1d 
      wss wereucl mp3an2 syl5bir imp ) AUCZUDUEZGCUCZUFZJUGUHZUIZWPOUJZJUEZWQXC
      EUCZDUCZWRUKULZEJUMZDJUNZUOZJUEZXAWQXBXIJWQXBOWPUPZPUJZXINFAHLOPRSUQXLXKF
      UCXFEIUMZDIUNZUOZURLFUSZUJXIXKPXPUBUTLFXKXOXIOVAWPVBUEXKVBUENFHLOPRSVCAVD
      OWPVBVEVFXHXGDJJGQJMUCZBUCKUKZMOWPVGZUMZBGUNZGUAXTBGVHVIZVJZVKVLLUCZXKURZ
      XNXHYEXEIUEZXMUIZDVMXEJUEZXGUIZDVMXNXHYEYGYIDYEYFYHXMXGYEIJXEYEXRMYDVNZUM
      ZBGUNYAIJYEYKXTBGYEXRXRMYJXSYEXQYJUEXQXSUEXRYEYJXSXQYEYJXKVNXSYDXKVOOWPVP
      VQVRVSVTWATUAWBZVRYEXFXFEIJYEXDIUEXDJUEXFYEIJXDYLVRVSVTWCWDXMDIWEXGDJWEWB
      WFWGWHWIWJWSJGWKWTXJYBDEGJWRYCWLWMWNWO $.
      $( [3-Apr-1997] $)

    $( Lemma for ~ zorn2 . $)
    zorn2lem2 $p |- ( ( x e. On /\ ( w We A /\ D =/= (/) ) ) ->
                   ( y e. x -> ( F ` y ) R ( F ` x ) ) ) $=
      ( cv con0 wcel wwe c0 wne wa cfv cima wbr wi wfun cdm wss funfvima2 
      tfrlem7 onss wfn wceq tfr1 fndm ax-mp syl6ssr sylancr adantr wral 
      zorn2lem1 breq2 ralbidv elrab2 simprbi breq1 rcla4cv 3syl syld ) AUDZUEUF
      ZHDUDUGKUHUIUJZUJZBUDZVSUFZWCPUKZPVSULZUFZWEVSPUKZLUMZVTWDWGUNZWAPUOVSPUP
      ZUQWJVTVSWCPUROGIMPQSTUSVTVSUEWKVSUTPUEVAWKUEVBOGIMPQSTVCUEPVDVEVFVGVHWBW
      HKUFZNUDZWHLUMZNWFVIZWGWIUNACDEFGHIJKLMNOPQRSTUAUBUCVJWLWHHUFWOWMCUDZLUMZ
      NWFVIWOCWHHKWPWHVBWQWNNWFWPWHWMLVKVLUBVMVNWNWINWEWFWMWEWHLVOVPVQVR $.
      $( [3-Apr-1997] $)

    $( Lemma for ~ zorn2 . $)
    zorn2lem3 $p |- ( ( R Po A /\ ( x e. On /\ ( w We A /\ D =/= (/) ) ) ) ->
                   ( y e. x -> -. ( F ` x ) = ( F ` y ) ) ) $=
      ( wpo cv con0 wcel wwe c0 wne wa cfv wbr wceq wn wi zorn2lem2 adantl 
      breq1 biimprcd poirr nsyli com12 zorn2lem1 cima wral crab ssrab2 eqsstri 
      sseli syl sylan2 syld ) HLUDZAUEZUFUGHDUEUHKUIUJUKUKZUKBUEZVOUGZVQPULZVOP
      ULZLUMZVTVSUNZUOZVPVRWAUPVNABCDEFGHIJKLMNOPQRSTUAUBUCUQURVNVTHUGZWAWCUPVP
      WAVNWDUKZWCWAWBVTVTLUMZWEWBWFWAVTVSVTLUSUTHVTLVAVBVCVPVTKUGWDACDEFGHIJKLM
      NOPQRSTUAUBUCVDKHVTKNUECUELUMNPVOVEVFZCHVGHUBWGCHVHVIVJVKVLVM $.
      $( [3-Apr-1997] $)

    $( Lemma for ~ zorn2 . $)
    zorn2lem4 $p |- ( ( R Po A /\ w We A ) -> E. x e. On D = (/) ) $=
      ( vy wpo cv wwe wa c0 wceq con0 wrex crn cvv wcel wn pm3.24 wne wi wal 
      wss cfv ax-17 hba1 hban eleq1 zorn2lem1 wbr cima wral crab ssrab2 
      eqsstri sseli syl syl5cbi exp32 com12 a2d a4sd imp r19.23ad wfn wb tfr1 
      fvelrnb ax-mp syl5ib ssrdv ssex ex adantl ccnv wfun zorn2lem3 exp45 
      com23 imp4a 19.21adv alimdv r2al syl6ibr cres ssid tz7.48lem mpan wrel 
      cdm tfrlem6 fndm eqimssi relssres mp2an cnveqi funeq sylib syl6 onprc 
      funrnex df-rn eleq1i dfdm4 eqtr3i 3imtr4g mtoi jcad df-ne ralbii df-ral 
      ralnex 3bitr3i syl5ibr mt3i ) GKUDZGCUEUFZUGZJUHUIZAUJUKZOULZUMUNZYSUOZUG
      ZYSUPYOAUEZUJUNZJUHUQZURZAUSZUUAYQUOZYOUUFYSYTYNUUFYSURYMYNUUFYSYNUUFUGZY
      RGUTYSUUHUCYRGUUHUUBOVAZUCUEZUIZAUJUKZUUJGUNZUUJYRUNZUUHUUKUUMAUJYNUUFAYN
      AVBUUEAVCVDUUMAVBYNUUFUUCUUKUUMURZURZYNUUEUUPAYNUUCUUDUUOUUCYNUUDUUOURUUC
      YNUUDUUOUUKUUIGUNZUUMUUCYNUUDUGUGZUUIUUJGVEUURUUIJUNUUQABCDEFGHIJKLMNOPQR
      STUAUBVFJGUUIJMUEBUEKVGMOUUBVHVIZBGVJGUAUUSBGVKVLVMVNVOVPVQVRVSVTWAOUJWBZ
      UUNUULWCNFHLOPRSWDZAUJUUJOWEWFWGWHYRGQWIVNWJWKYOUUFOWLZWMZYTYOUUFUUIUUJOV
      AUIUOZUCUUBVIAUJVIZUVCYOUUFUUCUUJUUBUNZUGUVDURZUCUSZAUSUVEYOUUEUVHAYOUUEU
      VGUCYOUUEUUCUVFUVDYOUUCUUDUVFUVDURZYMYNUUCUUDUVIURZURYMUUCYNUVJYMUUCYNUUD
      UVIAUCBCDEFGHIJKLMNOPQRSTUAUBWNWOWPVTVRWQWRWSUVDAUCUJUUBWTXAUVEOUJXBZWLZW
      MZUVCUJUJUTUVEUVMUJXCAUCUJOUVAXDXEUVLUVBUIUVMUVCWCUVKOOXFOXGZUJUTUVKOUINF
      HLOPRSXHUVNUJUUTUVNUJUIUVAUJOXIWFZXJOUJXKXLXMUVLUVBXNWFXOXPUVCYSUJUMUNZXQ
      UVCUVBXGZUMUNZUVBULZUMUNZYSUVPUVRUVCUVTUMUVBXRVQYRUVQUMOXSXTUJUVSUMUVNUJU
      VSUVOOYAYBXTYCYDXPYEUUDAUJVIYPUOZAUJVIUUFUUGUUDUWAAUJJUHYFYGUUDAUJYHYPAUJ
      YIYJYKYL $.
      $( [3-Apr-1997] $)

    ${
      $d x u v f t s r a b H $.
      $( Auxiliary set.  ` H ` is ` D ` with ` x ` substituted for ` y ` . $)
      zorn2lem.7 $e |- H = { z e. A | A. g e. ( F " y ) g R z } $.
      $( Lemma for ~ zorn2 . $)
      zorn2lem5 $p |- ( ( ( w We A /\ x e. On ) /\ A. y e. x H =/= (/) ) ->
            ( F " x ) C_ A ) $=
        ( vs cv wwe con0 wcel wa c0 wne wral cima cfv wceq wrex ax-17 hbra1 
        hban wi wal eleq1 zorn2lem1 wbr crab ssrab2 eqsstri sseli syl syl5bi 
        onelon sylani com12 exp43 com3r imp a2d a4sd df-ral syl5ib r19.23ad 
        wfun tfrlem7 fvelima mpan syl5 ssrdv ) HDUGUHZAUGZUIUJZUKZRULUMZBWKUNZU
        KZUFPWKUOZHWPBUGZPUPZUFUGZUQZBWKURZWTHUJZWTWQUJZWPXAXCBWKWMWOBWMBUSWNBW
        KUTVAXCBUSWMWOWRWKUJZXAXCVBZVBZWMXEWNVBZBVCXGWOWMXHXGBWMXEWNXFWJWLXEWNX
        FVBZVBWLXEWJXIWLXEWJWNXFXAWLXEUKZWJWNUKZUKXCXAWRUIUJZXKXCXJXAWSHUJZXCXL
        XKUKZWSWTHVDXNWSRUJXMBCDEFGHIJRLMNOPQSTUAUBUEUDVERHWSRNUGCUGLVFNPWRUOUN
        ZCHVGHUEXOCHVHVIVJVKVLWKWRVMVNVOVPVQVRVSVTWNBWKWAWBVRWCPWDXDXBOGIMPQTUA
        WEBWTWKPWFWGWHWI $.
        $( [4-Apr-1997] $)

      $( Lemma for ~ zorn2 . $)
      zorn2lem6 $p |- ( R Po A ->
   ( ( ( w We A /\ x e. On ) /\ A. y e. x H =/= (/) ) -> R Or ( F " x ) ) ) $=
        ( vs vr vb va wpo cv wwe con0 wcel wa c0 wne wral cima wbr wceq w3o 
        wor wss wi zorn2lem5 poss syl com12 wal cfv wex crab onelon anim12i 
        anandis ex eqid zorn2lem2 adantll breq12 biimpcd syl6 com23 adantrrl 
        imp eqeq12 fveq2 syl5bi adantl adantlr wb ancoms adantrrr 3orim123d 
        word ordtri3or eloni syl2an syl5 exp31 com4r pm2.43i exp4a com3r a2d 
        neeq1i ralbii imaeq2 raleqdv rabbidv neeq1d rcla4cv anim12d sylbi 
        imp4b 19.23advv wfun wfn tfr1 fnfun ax-mp wrex fvelima df-rex sylib 
        an4 2exbii eeanv bitri sylibr 19.21aivv r2al a1i jcad df-so syl6ibr ) 
        HLUJZHDUKULZAUKZUMUNZUOZRUPUQZBYTURZUOZPYTUSZLUJZUFUKZUGUKZLUTZUUHUUIVA
        ZUUIUUHLUTZVBZUGUUFURUFUUFURZUOUUFLVCYRUUEUUGUUNUUEYRUUGUUEUUFHVDYRUUGV
        EABCDEFGHIJKLMNOPQRSTUAUBUCUDUEVFUUFHLVGVHVIUUEUUNVEYRUUEUUHUUFUNZUUIUU
        FUNZUOZUUMVEZUGVJUFVJUUNUUEUURUFUGUUEUHUKZYTUNZUIUKZYTUNZUOZUUSPVKZUUHV
        AZUVAPVKZUUIVAZUOZUOZUIVLUHVLZUUMUUQUUEUVIUUMUHUIUUBUUDUVCUVHUUMUUBUVCN
        UKCUKLUTZNPUUSUSZURZCHVMZUPUQZUVKNPUVAUSZURZCHVMZUPUQZUOZVEZUVCUVHUUMVE
        ZVEUUDUUBUVCUVTUWBYSUUAUVCUVTUWBVEZVEUUAUVCYSUWCUUAUVCYSUVTUWBUUAUVCUUS
        UMUNZUVAUMUNZUOZYSUVTUOZUWBVEZUUAUVCUWFUUAUUTUVBUWFUUAUUTUOUWDUUAUVBUOU
        WEYTUUSVNYTUVAVNVOVPVQUWFUWHUWFUWGUVHUWFUUMUWFUWGUVHUWFUUMVEUWFUWGUOZUV
        HUOZUUSUVAUNZUUSUVAVAZUVAUUSUNZVBZUUMUWFUWJUWKUUJUWLUUKUWMUULUWIUVHUWKU
        UJVEZUWFYSUVSUVHUWOVEUVOUWFYSUVSUOZUOZUWKUVHUUJUWQUWKUVDUVFLUTZUVHUUJVE
        UWEUWPUWKUWRVEUWDUIUHCDEFGHIJUVRLMNOPQSTUAUBUVRVRUDVSVTUVHUWRUUJUVDUUHU
        VFUUILWAWBWCWDWEWFUVHUWLUUKVEUWIUVHUVDUVFVAUUKUWLUVDUUHUVFUUIWGUUSUVAPW
        HWIWJUWIUVHUWMUULVEZUWFYSUVOUVHUWSVEUVSUWFYSUVOUOZUOZUWMUVHUULUXAUWMUVF
        UVDLUTZUVHUULVEUWDUWTUWMUXBVEUWEUHUICDEFGHIJUVNLMNOPQSTUAUBUVNVRUDVSWKU
        VHUXBUULUVGUVEUXBUULWLUVFUUIUVDUUHLWAWMWBWCWDWNWFWOUUSWPUVAWPUWNUWDUWEU
        USUVAWQUUSWRUVAWRWSWTXAXBXCWCXDXEWFXFUUDUVKNPBUKZUSZURZCHVMZUPUQZBYTURZ
        UWAUUCUXGBYTRUXFUPUEXGXHUXHUUTUVOUVBUVSUXGUVOBUUSYTUXCUUSVAZUXFUVNUPUXI
        UXEUVMCHUXIUVKNUXDUVLUXCUUSPXIXJXKXLXMUXGUVSBUVAYTUXCUVAVAZUXFUVRUPUXJU
        XEUVQCHUXJUVKNUXDUVPUXCUVAPXIXJXKXLXMXNXOWTXPXQUUQUUTUVEUOZUHVLZUVBUVGU
        OZUIVLZUOZUVJPXRZUUQUXOVEPUMXSUXPOGIMPQTUAXTUMPYAYBUXPUUOUXLUUPUXNUXPUU
        OUXLUXPUUOUOUVEUHYTYCUXLUHUUHYTPYDUVEUHYTYEYFVQUXPUUPUXNUXPUUPUOUVGUIYT
        YCUXNUIUUIYTPYDUVGUIYTYEYFVQXNYBUVJUXKUXMUOZUIVLUHVLUXOUVIUXQUHUIUUTUVB
        UVEUVGYGYHUXKUXMUHUIYIYJYKWTYLUUMUFUGUUFUUFYMYKYNYOUFUGUUFLYPYQ $.
        $( [4-Apr-1997] $)

      $( Lemma for ~ zorn2 . $)
      zorn2lem7 $p |- ( ( R Po A /\
      A. s ( ( s C_ A /\ R Or s ) -> E. a e. A A. r e. s ( r R a \/ r = a ) ) )
                  -> E. a e. A A. b e. A -. a R b ) $=
        ( wpo cv wss wor wa wbr wceq wo wral wrex wi wal wwe wex wn weth c0 
        con0 wne zorn2lem4 cima crab imaeq2 raleqdv rabbidv 3eqtr4g eqeq1d 
        onminex df-ne ralbii anbi2i rexbii sylibr wcel zorn2lem5 a1i zorn2lem6 
        jcad wfun cvv tfrlem7 visset funimaex ax-mp sseq1 soeq2 anbi12d raleq 
        rexbidv imbi12d cla4v sylan9 adantld imp noel sseld w3a potr 3anass 
        sylan2br exp3a com23 breq1 biimprcd adantl jaod exp42 sylan9r com24 
        imp31 a2d alimdv df-ral 3imtr4g wb eqeq1i eleq2 sylbi breq2 ralbidv 
        elrab syl5bbr biimpd expdimp cbvralv syl5ib exp32 com34 mtoi exp4a ex 
        com4r pm2.43a imp3a com4l 19.21adv syl6ibr imdistand reximdv2 com12 
        adantr imp32 mpd exp45 imp4a com3l r19.23aiv 3syl adantlr pm2.43i 
        19.23adv mpi ) HLUJZSUKZHULZUVCLUMZUNZTUKZUAUKZLUOZUVGUVHUPZUQZTUVCURZU
        AHUSZUTZSVAZUNZHDUKVBZDVCUVHUBUKZLUOZVDZUBHURZUAHUSZDHUCVEUVPUVQUWBDUVP
        UVQUWBUVPUVQUNZUWBUVBUVQUWCUWBUTZUVOUVBUVQUNKVFUPZAVGUSZUWERVFVHZBAUKZU
        RZUNZAVGUSZUWDACDEFGHIJKLMNOPQUCUDUEUFUGUHVIUWFUWERVFUPZVDZBUWHURZUNZAV
        GUSUWKUWEUWLABUWHBUKZUPZKRVFUWQNUKZCUKZLUOZNPUWHVJZURZCHVKZUWTNPUWPVJZU
        RZCHVKKRUWQUXBUXECHUWQUWTNUXAUXDUWHUWPPVLVMVNUGUIVOVPVQUWJUWOAVGUWIUWNU
        WEUWGUWMBUWHRVFVRVSVTWAWBUWJUWDAVGUWCUWHVGWCZUWJUWBUWCUXFUWEUWIUWBUVPUV
        QUXFUWEUWIUWBUTZUTUVPUWEUVQUXFUNZUXGUVPUWEUXHUWIUWBUVPUWEUXHUWIUNZUNZUN
        UVKTUXAURZUAHUSZUWBUVPUXJUXLUVPUXIUXLUWEUVBUXIUXAHULZUXALUMZUNZUVOUXLUV
        BUXIUXMUXNUXIUXMUTUVBABCDEFGHIJKLMNOPQRUCUDUEUFUGUHUIWDZWEABCDEFGHIJKLM
        NOPQRUCUDUEUFUGUHUIWFWGUVNUXOUXLUTSUXAPWHUXAWIWCOGIMPQUDUEWJPUWHAWKWLWM
        UVCUXAUPZUVFUXOUVMUXLUXQUVDUXMUVEUXNUVCUXAHWNUVCUXALWOWPUXQUVLUXKUAHUVK
        TUVCUXAWQWRWSWTXAXBXCUVPUWEUXIUXLUWBUTZUVBUWEUXIUXRUTZUTUVOUWEUVBUXSUWE
        UVBUXIUXRUWEUVBUXIUNZUNZUXKUWAUAHHUYAUVHHWCZUXKUWAUYAUYBUXKUWAUYAUYBUXK
        UNZUVRHWCZUVTUTZUBVAUWAUYAUYCUYEUBUYAUYBUXKUYEUYDUYAUYBUXKUVTUYDUWEUXTU
        YBUXKUVTUTZUTZUWEUYDUXTUYGUTUWEUYDUXTUYDUYGUWEUYDUXTUYDUYGUTUTUWEUYDUNZ
        UXTUYBUYDUYFUYHUXTUYBUYDUYFUYHUXTUYBUYDUNZUXKUVTUYHUXTUYIUNZUNUXKUNUVSU
        VRVFWCZUVRXDUYHUYJUXKUVSUYKUTUYHUYJUVSUXKUYKUYHUYJUVSUXKUYKUTUYJUVSUNZU
        XKUVGUVRLUOZTUXAURZUYHUYKUYLUVGUXAWCZUVKUTZTVAUYOUYMUTZTVAUXKUYNUYLUYPU
        YQTUYLUYOUVKUYMUXTUYIUVSUYOUVKUYMUTZUTZUXTUVSUYIUYSUXTUYOUYIUVSUYRUXIUY
        OUVGHWCZUVBUYIUVSUYRUTUTUXIUXAHUVGUXPXEUVBUYTUYIUVSUYRUVBUYTUYIUNZUNZUV
        SUNUVIUYMUVJVUBUVSUVIUYMUTVUBUVIUVSUYMVUBUVIUVSUYMUVBUYTUYBUYDXFUVIUVSU
        NUYMUTVUAHUVGUVHUVRLXGUYTUYBUYDXHXIXJXKXCUVSUVJUYMUTVUBUVJUYMUVSUVGUVHU
        VRLXLXMXNXOXPXQXRXKXSXTYAUVKTUXAYBUYMTUXAYBYCUYHUWRUVRLUOZNUXAURZUYKUYN
        UWEUYDVUDUYKUWEUYDVUDUNZUYKUWEUVRUXCWCZUYKVUEUWEUXCVFUPVUFUYKYDKUXCVFUG
        YEUXCVFUVRYFYGUXBVUDCUVRHUWSUVRUPUWTVUCNUXAUWSUVRUWRLYHYIYJYKYLYMUYMVUC
        TNUXAUVGUWRUVRLXLYNYOXQYPYQXSYRXPYSYQYTUUAUUBUUCUUDUUCUUEUVTUBHYBUUFXJU
        UGUUHYPUUIUUJUUKUULUUMXKYMUUNUUOUUPUUQUURUUSYTUUTUVA $.
        $( [6-Apr-1997] $)
    $}

  $}

  ${
    $d x y z $.  $d x y w $.
    $( Lemma for ~ zorn . $)
    zornlem $p |- ( z { <. x , y >. | x C. y } w <-> z C. w ) $=
      ( cv wpss copab visset psseq1 psseq2 eqid brab ) AEZBEZFZCEZNFPDEZFABPQOA
      BGZCHDHMPNINQPJRKL $.
      $( [13-Aug-2004] $)
  $}

  ${
    $d x y z w v u f g h t s r q a b c d j k m n R $.
    $d x y z w v u f g h t s r q a b c d j k m n A $.
    zorn2.1 $e |- A e. _V $.
    $( Zorn's Lemma of [Monk1] p. 117.  This theorem is equivalent to the Axiom
       of Choice and states that every partially ordered set ` A ` (with an
       ordering relation ` R ` ) in which every totally ordered subset has an
       upper bound, contains at least one maximal element.  The main proof
       consists of lemmas ~ zorn2lem1 through ~ zorn2lem7 ; this final piece
       mainly changes bound variables to eliminate the hypotheses of
       ~ zorn2lem7 . $)
    zorn2 $p |- ( ( R Po A /\
      A. w ( ( w C_ A /\ R Or w ) -> E. x e. A A. z e. w ( z R x \/ z = x ) ) )
                  -> E. x e. A A. y e. A -. x R y ) $=
      ( vt vu vr vq vn vj vg va vb vc vk vm vv vh vd vs vf cv wfn cfv cres wbr 
      wn crn wral crab cuni wceq copab wa con0 wrex cab cima rdglem1 eqid 
      breq2 ralbidv breq1 cbvralv syl5bb cbvrabv id wcel rneq raleqdv rabbidv 
      eleq2d wb raleq notbid syl anbi12d abbidv eleq1 cbvabv syl5eq df-rab 
      3eqtr4g unieqd eqeqan12rd cbvopabv zorn2lem7 ) HIJKLMNEOUEZPUEZUFQUEZWKUG
      WKWMUHRUEZWNSUEZKUEZUIZUJZRWPTUEZFUIZKUAUEZUKZULZTEUMZULZSXDUMZUNZUOZUARU
      PZUGUOQWLULUQPURUSOUTZWTKUBUEZUKZULZTEUMZUCUEZJUEZFUIZUCXJUNZHUEVAULJEUMZ
      FUBUCUDXRXIXQUCXRIUEVAULJEUMZDCABGPQUDNOUBXIVBXRVCXMXQUCXLULZTJEWSXPUOZXO
      WSFUIZUCXLULYAXMYBYCXQUCXLWSXPXOFVDVEWTYCKUCXLWPXOWSFVFVGVHVIXSVCXHNUEZMU
      EZLUEZWPUIZUJZMXNULZLXNUMZUNZUOUARUBNWNYDUOZXAXKUOZWNYDXGYKYLVJYMXFYJYMWO
      XDVKZXEUQZSUTZYFXNVKZYIUQZLUTZXFYJYMYFXDVKZWNYFWPUIZUJZRXDULZUQZLUTYSYPYM
      UUDYRLYMYTYQUUCYIYMXDXNYFYMXCXMTEYMWTKXBXLXAXKVLVMVNZVOYMXDXNUOZUUCYIVPUU
      EUUFYHMXDULYIUUCYHMXDXNVQUUBYHRMXDWNYEUOUUAYGWNYEYFWPVFVRVGVHVSVTWAYOUUDS
      LWOYFUOZYNYTXEUUCWOYFXDWBUUGWRUUBRXDUUGWQUUAWOYFWNWPVDVRVEVTWCWDXESXDWEYI
      LXNWEWFWGWHWIXTVCWJ $.
      $( [6-Apr-1997] $)

    $( Zorn's Lemma.  If the union of every chain (with respect to inclusion)
       in a set belongs to the set, then the set contains a maximal element.
       This theorem is equivalent to the Axiom of Choice.  Theorem 6M of
       [Enderton] p. 151.  See ~ zorn2 for a version with general partial
       orderings. $)
    zorn $p |- ( A. z ( ( z C_ A /\
                  A. x e. z A. y e. z ( x C_ y \/ y C_ x ) ) -> U. z e. A ) ->
                E. x e. A A. y e. A -. x C. y ) $=
      ( vw vv vu cv wss wo wral wa cuni wcel wi wal wpss copab wbr wn wrex wpo 
      wor wceq zorn2 w3a pssirr zornlem mtbir psstr sylibr syl2anb pm3.2i a1i 
      rgen3 df-po mpbir w3o df-so simprbi biid 3orbi123i sspsstri bitr4i 
      2ralbii sylib anim2i risset eqimss2 unissb orbi1i sspss ralbii reximi 
      sylbi imim12i alimi sylancr notbii rexbii ) CIZDJZAIZBIZJWEWDJKZBWBLAWBLZ
      MZWBNZDOZPZCQZWDWEFIGIRFGSZTZUAZBDLZADUBZWDWERZUAZBDLZADUBDWMUCZWCWBWMUDZ
      MZHIZWDWMTZXDWDUEZKZHWBLZADUBZPZCQWQWLABHCDWMEUFXAXDXDWMTZUAZXDWEWMTZWEWD
      WMTZMXEPZMZADLBDLHDLXPHBADDDXPXDDOWEDOWDDOUGXLXOXKXDXDRXDUHFGHHUIUJXDWERZ
      WEWDRZXEXMXNXQXRMXDWDRZXEXDWEWDUKFGHAUIZULFGHBUIFGBAUIZUMUNUOUPHBADWMUQUR
      WKXJCXCWHWJXIXBWGWCXBWNWDWEUEZXNUSZBWBLAWBLZWGXBWBWMUCYDABWBWMUTVAYCWFABW
      BWBYCWRYBXRUSWFWNWRYBYBXNXRFGABUIZYBVBYAVCWDWEVDVEVFVGVHWJWDWIUEZADUBXIAW
      IDVIYFXHADYFXDWDJZHWBLZXHYFWIWDJYHWIWDVJHWBWDVKVGXGYGHWBXGXSXFKYGXEXSXFXT
      VLXDWDVMVEVNULVOVPVQVRVSWPWTADWOWSBDWNWRYEVTVNWAVG $.
      $( [12-Aug-2004] $)
  $}

  ${
    $d f F $.  $d f A $.  $d f B $.
    fodom.1 $e |- A e. _V $.
    $( An onto function implies dominance of domain over range.  Lemma 10.20 of
       [Kunen] p. 30.  This theorem uses the Axiom of Choice ~ ac7g .  AC is
       not needed for finite sets - see ~ fodomfi . $)
    fodom $p |- ( F : A -onto-> B -> B ~<_ A ) $=
      ( vf wfo cv ccnv wss cdm wfn wa wex cdom wbr cvv wcel wf fex fof sylancl 
      cnvexg ac7g 3syl wi crn forn df-rn syl5eqr fneq2d wf1 wfun df-f1 dffn3 
      biimpi ad2antlr funss impcom fofun sstr cnvss cnvcnvss syl2an adantlr 
      sylanbrc visset rnex f1dom2g ax-mp syl rnss adantl wceq fdm dfdm4 adantr 
      sseqtrd ssdomg domtr syl11anc exp31 sylbid com23 imp3a 19.23adv mpd ) ABC
      FZEGZCHZIZWHWIJZKZLZEMZBANOZWGCPQZWIPQWNABCRZAPQWPWGABPCSABCTZDUACPUBPWIE
      UCUDWGWMWOEWGWJWLWOWGWLWJWOWGWLWHBKZWJWOUEWGWKBWHWGCUFBWKABCUGCUHUIUJWGWS
      WJWOWGWSLWJLZBWHUFZNOZXAANOZWOWTBXAWHUKZXBXDBXAWHRZWHHZULZWTBXAWHUMWSXEWG
      WJWSXEBWHUNUOUPWGWJXGWSCULZXFCIZXGWGWJXIXHXGXFCUQURABCUSXFWIHZIXJCIXIWJXF
      XJCUTWHWIVACVBUAVCVDVEXAPQZXDXBUEWHEVFVGZBXAPWHVHVIVJWGWJXCWSWGWJLZXAAIZX
      CXMXAWIUFZAWJXAXOIWGWHWIVKVLWGXOAVMWJWGCJZAXOWGWQXPAVMWRABCVNVJCVOUIVPVQX
      KXNXCUEXLXAAPVRVIVJVDBXAAVSVTWAWBWCWDWEWF $.
      $( [23-Jul-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( An onto function implies dominance of domain over range. $)
    fodomg $p |- ( A e. C -> ( F : A -onto-> B -> B ~<_ A ) ) $=
      ( vx cv wfo cdom wbr wi wceq foeq2 breq2 imbi12d visset fodom vtoclg ) EF
      ZBDGZBRHIZJABDGZBAHIZJEACRAKSUATUBRABDLRABHMNRBDEOPQ $.
      $( [23-Jul-2004] $)
  $}

  ${
    $d f g z A $.  $d f g z B $.
    fodomb.1 $e |- A e. _V $.
    $( Equivalence of an onto mapping and dominance for a non-empty set.
       Proposition 10.35 of [TakeutiZaring] p. 93. $)
    fodomb $p |- ( ( A =/= (/) /\ E. f f : A -onto-> B ) <->
                 ( (/) ~< B /\ B ~<_ A ) ) $=
      ( c0 wne cv wfo wex wa csdm wbr cdom cdm wceq wf fof fdm syl eqeq1d crn 
      forn dm0rn0 syl5bb bitr3d necon3bid biimpac wb cvv wcel wi fornex ax-mp 
      0sdomg adantl mpbird ex fodom a1i jcad 19.23adv imp sdomdomtr 0sdom 
      sylib fodomr mp3an1 jca impbii ) AEFZABCGZHZCIZJEBKLZBAMLZJZVJVMVPVJVLVPC
      VJVLVNVOVJVLVNVJVLJVNBEFZVLVJVQVLAEBEVLVKNZEOZAEOBEOZVLVRAEVLABVKPVRAOABV
      KQABVKRSTVLVKUAZEOVTVSVLWABEABVKUBTVKUCUDUEUFUGVLVNVQUHZVJVLBUIUJZWBAUIUJ
      ZVLWCUKDABUIVKULUMBUIUNSUOUPUQVLVOUKVJABVKDURUSUTVAVBVPVJVMVPEAKLZVJWDVPW
      EUKDEBAUIVCUMADVDVEWDVNVOVMDABUICVFVGVHVI $.
      $( [24-Feb-2007] $) $( [29-Jul-2004] $)
  $}

  ${
    $d f x y A $.  $d f x y B $.
    brdom3.1 $e |- A e. _V $.
    brdom3.2 $e |- B e. _V $.
    $( Equivalence to a dominance relation. $)
    brdom3 $p |- ( A ~<_ B <-> E. f ( A. x E* y x f y /\
                 A. x e. A E. y e. B y f x ) ) $=
      ( cdom wbr cv wmo wal wrex wral wa wex c0 wceq wfo wo wn wi csdm cvv 
      wcel fodomr mp3an1 wne 0sdom df-ne bitr2i sylanb ancoms pm5.6 mpbi 0ex 
      ax-17 breq mobid albidv rexbidv ralbidv anbi12d cla4ev cop noel df-br 
      mtbir nex exmo ori ax-mp ax-gen rzal sylancr wfun fofun wrel dffun6 
      simprbi syl wf dffo4 jca eximi jaoi cxp cin cdm wfn crn inss1 ssbri 
      immoi alimi relxp relin2 mpbiran sylibr funfn sylib rninxp biimpri 
      anim12i df-fo visset inex1 dmex fodom wss inss2 dmss dmxpss sstri 
      ssdom2g mp2 domtr mpan2 3syl 19.23aiv impbii ) CDHIZAJZBJZEJZIZBKZALZYDYC
      YEIZBDMZACNZOZEPZYBCQRZDCYESZEPZTZYMYBYNUAZOYPUBYBYQUBYRYBYPQCUCIZYBYPYRD
      UDUEZYSYBYPGDCUDEUFUGYSCQUHYRCFUICQUJUKULUMYBYNYPUNUOYNYMYPYCYDQIZBKZALZY
      DYCQIZBDMZACNZYMYNYLUUCUUFOEQUPYEQRZYHUUCYKUUFUUGYGUUBAUUGYFUUABUUGBUQYCY
      DYEQURUSUTUUGYJUUEACUUGYIUUDBDYDYCYEQURVAVBVCVDUUBAUUABPZUAUUBUUABUUAYCYD
      VEZQUEUUIVFYCYDQVGVHVIUUHUUBUUABVJVKVLVMUUEACVNVOYOYLEYOYHYKYOYEVPZYHDCYE
      VQUUJYEVRYHABYEVSVTWAYODCYEWBYKBADCYEWCVTWDWEWFWAYLYBEYLYEDCWGZWHZWIZCUUL
      SZCUUMHIZYBYLUULUUMWJZUULWKCRZOUUNYHUUPYKUUQYHUULVPZUUPYHYCYDUULIZBKZALZU
      URYGUUTAUUSYFBUULYEYCYDYEUUKWLWMWNWOUURUULVRZUVAABUULVSUUKVRUVBDCWPYEUUKW
      QVLWRWSUULWTXAUUQYKBADCYEXBXCXDUUMCUULXEWSUUMCUULUULYEUUKEXFXGXHXIUUOUUMD
      HIZYBYTUUMDXJUVCGUUMUUKWIZDUULUUKXJUUMUVDXJYEUUKXKUULUUKXLVLDCXMXNUUMDUDX
      OXPCUUMDXQXRXSXTYA $.
      $( [27-Mar-2007] $)
  $}

  ${
    $d f g x y A v w z $.  $d f g x y B v w z $.
    brdom4.1 $e |- A e. _V $.
    brdom4.2 $e |- B e. _V $.
    $( An equivalence to a dominance relation. $)
    brdom5 $p |- ( A ~<_ B <->
  E. f ( A. x e. B E* y x f y /\ A. x e. A E. y e. B y f x ) ) $=
      ( cdom wbr cv wmo wral wrex wa wex wal brdom3 alral anim1i eximi sylbi 
      cxp cin cdm wfo wfn crn wceq wfun wrel wcel wss inss2 dmss ax-mp dmxpss 
      sstri sseli inss1 ssbri immoi imim12i ralimi2 relxp relin2 jctil dffun7 
      sylibr funfn sylib rninxp biimpri anim12i df-fo visset inex1 dmex fodom 
      cvv ssdom2g mp2 domtr mpan2 3syl 19.23aiv impbii ) CDHIZAJZBJZEJZIZBKZADL
      ZWIWHWJIBDMACLZNZEOZWGWLAPZWNNZEOWPABCDEFGQWRWOEWQWMWNWLADRSTUAWOWGEWOWJD
      CUBZUCZUDZCWTUEZCXAHIZWGWOWTXAUFZWTUGCUHZNXBWMXDWNXEWMWTUIZXDWMWTUJZWHWIW
      TIZBKZAXALZNXFWMXJXGWLXIADXAWHXAUKWHDUKWLXIXADWHXAWSUDZDWTWSULXAXKULWJWSU
      MWTWSUNUODCUPUQZURXHWKBWTWJWHWIWJWSUSUTVAVBVCWSUJXGDCVDWJWSVEUOVFABWTVGVH
      WTVIVJXEWNBADCWJVKVLVMXACWTVNVHXACWTWTWJWSEVOVPVQVRXCXADHIZWGDVSUKXADULXM
      GXLXADVSVTWACXADWBWCWDWEWF $.
      $( [29-Mar-2007] $)

    $( An equivalence to a dominance relation. $)
    brdom4 $p |- ( A ~<_ B <->
  E. f ( A. x e. B E* y ( y e. A /\ x f y ) /\ A. x e. A E. y e. B y f x ) ) $=
      ( cdom wbr cv wcel wa wmo wral wrex wex wal brdom3 moan alimi alral syl 
      anim1i eximi sylbi cxp cin cdm wfo wfn crn wceq wfun wrel wss inss2 dmss 
      ax-mp dmxpss sstri sseli rnss rnxpss inss1 ssbri anim12i immoi imim12i 
      ralimi2 relxp relin2 jctil dffun9 sylibr funfn sylib rninxp biimpri 
      df-fo visset inex1 dmex fodom cvv ssdom2g mp2 domtr mpan2 3syl 19.23aiv 
      impbii ) CDHIZBJZCKZAJZWMEJZIZLZBMZADNZWMWOWPIBDOACNZLZEPZWLWQBMZAQZXALZE
      PXCABCDEFGRXFXBEXEWTXAXEWSAQWTXDWSAWQWNBSTWSADUAUBUCUDUEXBWLEXBWPDCUFZUGZ
      UHZCXHUIZCXIHIZWLXBXHXIUJZXHUKZCULZLXJWTXLXAXNWTXHUMZXLWTXHUNZWMXMKZWOWMX
      HIZLZBMZAXINZLXOWTYAXPWSXTADXIWOXIKWODKWSXTXIDWOXIXGUHZDXHXGUOZXIYBUOWPXG
      UPZXHXGUQURDCUSUTZVAXSWRBXQWNXRWQXMCWMXMXGUKZCYCXMYFUOYDXHXGVBURDCVCUTVAX
      HWPWOWMWPXGVDVEVFVGVHVIXGUNXPDCVJWPXGVKURVLABXHVMVNXHVOVPXNXABADCWPVQVRVF
      XICXHVSVNXICXHXHWPXGEVTWAWBWCXKXIDHIZWLDWDKXIDUOYGGYEXIDWDWEWFCXIDWGWHWIW
      JWK $.
      $( [28-Mar-2007] $)
  $}

  ${
    $d f g x y A v w z $.  $d f g x y B v w z $.
    brdom7disj.1 $e |- A e. _V $.
    brdom7disj.2 $e |- B e. _V $.
    brdom7disj.3 $e |- ( A i^i B ) = (/) $.
    $( An equivalence to a dominance relation for disjoint sets. $)
    brdom7disj $p |- ( A ~<_ B <-> E. f ( A. x e. B E* y
      ( y e. A /\ { x , y } e. f ) /\ A. x e. A E. y e. B { y , x } e. f ) ) $=
      ( vg vv vz vw cdom wbr cv wcel wa wmo wral wrex wex cpr brdom4 wceq cop 
      cab csn snex simpl ss2abi df-sn sseqtr4i ssexi abrexex2 ax-17 eleq2 
      anbi2d mobid ralbidv rexbidv anbi12d cla4ev wb wne cin c0 incom eqtri 
      disjne mp3an1 visset opthpr syl equcom anbi12i syl6rbb df-br a1i 
      rexbidva rexcom zfpair2 eqeq1 anbi1d 2rexbidv elab bitr4i adantr breq1 
      breq2 ceqsrex2v bitrd pm5.32da ralbiia ancoms eqcom ancom 3bitr4g bicomi 
      syl5bb syl2anbr 19.23aiv copab cvv df-opab cuni uniex prid1 elunii mpan 
      adantl prid2 eqeltrri abexex eqeltri breq preq1 eleq1d preq2 eqid brab 
      anbi2i mobii ralbii rexbii impbii bitri ) CDMNBOZCPZAOZYGIOZNZQZBRZADSZYG
      YIYJNZBDTZACSZQZIUAZYHYIYGUBZEOZPZQZBRZADSZYGYIUBZUUAPZBDTZACSZQZEUAZABCD
      IFGUCYSUUKYRUUKIYHYTJOZKOZLOZUBZUDZUUMUUNUEYJPZQZKDTZLCTZJUFZPZQZBRZADSZU
      UFUVAPZBDTZACSZUUKYNYQUUJUVEUVHQEUVAUUSLJCFUURKJDGUURJUFZUUOUGZUUOUHUVIUU
      PJUFUVJUURUUPJUUPUUQUIUJJUUOUKULUMUNUNUUAUVAUDZUUEUVEUUIUVHUVKUUDUVDADUVK
      UUCUVCBUVKBUOUVKUUBUVBYHUUAUVAYTUPUQURUSUVKUUHUVGACUVKUUGUVFBDUUAUVAUUFUP
      UTUSVAVBUVDYMADYIDPZUVCYLBUVLBUOUVLYHUVBYKUVLYHQUVBUUMYIUDZUUNYGUDZQZUUMU
      UNYJNZQZLCTZKDTZYKUVLUVBUVSVCYHUVLUVSYTUUOUDZUUQQZLCTZKDTZUVBUVLUVRUWBKDU
      VLUVQUWALCUVLUUNCPZQZUVOUVTUVPUUQUWEUVTYIUUMUDZYGUUNUDZQZUVOUWEYIUUNVDZUV
      TUWHVCDCVEZVFUDZUVLUWDUWIUWJCDVEVFDCVGHVHZDCYIUUNVIVJYIYGUUMUUNAVKZBVKZKV
      KZLVKZVLVMUWFUVMUWGUVNAKVNBLVNVOVPUVPUUQVCUWEUUMUUNYJVQZVRVAVSUTUWCUWAKDT
      LCTZUVBUWAKLDCVTUUTUWRJYTABWAUULYTUDZUURUWALKCDUWSUUPUVTUUQUULYTUUOWBWCWD
      WEWFVPWGUVPYIUUNYJNYKKLYIYGDCUUMYIUUNYJWHUUNYGYIYJWIWJWKWLURWMUVGYPACYICP
      ZUVFYOBDUWTYGDPZQUVFUUNYIUDZUUMYGUDZQZUVPQZKDTZLCTZYOUWTUVFUXGVCUXAUWTUUF
      UUOUDZUUQQZKDTZLCTZUXGUVFUWTUXJUXFLCUWTUXIUXEKDUWTUUMDPZQZUXHUXDUUQUVPUXM
      UUOUUFUDZUXCUXBQZUXHUXDUXMUUMYIVDZUXNUXOVCUXLUWTUXPUWKUXLUWTUXPUWLDCUUMYI
      VIVJWNUUMUUNYGYIUWOUWPUWNUWMVLVMUUFUUOWOUXBUXCWPWQUUQUVPVCUXMUVPUUQUWQWRV
      RVAVSUTUUTUXKJUUFBAWAUULUUFUDZUURUXILKCDUXQUUPUXHUUQUULUUFUUOWBWCWDWEWSWG
      UVPUUMYIYJNYOLKYIYGCDUUNYIUUMYJWIUUMYGYIYJWHWJWKVSWMWTXAUUJYSEYHYIYGUUNUU
      MUBZUUAPZLKXBZNZQZBRZADSZYGYIUXTNZBDTZACSZYSUUEUUIYRUYDUYGQIUXTUXTUULUUNU
      UMUEZUDZUXSQZKUAZLUAJUFXCUXSLKJXDUYKLJUUAXEZUUAEVKXFZUYJUUNUYLPZKUXSUYNUY
      IUUNUXRPUXSUYNUUNUUMUWPXGUUNUXRUUAXHXIXJXAUYJKJUYLUYMUXSUUMUYLPZUYIUUMUXR
      PUXSUYOUUNUUMUWOXKUUMUXRUUAXHXIXJUYJJUFUYIJUFZUYHUGUYPXCJUYHUKUYHUHXLUYJU
      YIJUYIUXSUIUJUMXMXMXNYJUXTUDZYNUYDYQUYGUYQYMUYCADUYQYLUYBBUYQBUOUYQYKUYAY
      HYIYGYJUXTXOUQURUSUYQYPUYFACUYQYOUYEBDYGYIYJUXTXOUTUSVAVBUYCUUDADUYBUUCBU
      YAUUBYHUXSYIUUMUBZUUAPUUBLKYIYGUXTUWMUWNUXBUXRUYRUUAUUNYIUUMXPXQUXCUYRYTU
      UAUUMYGYIXRXQUXTXSZXTYAYBYCUYFUUHACUYEUUGBDUXSYGUUMUBZUUAPUUGLKYGYIUXTUWN
      UWMUVNUXRUYTUUAUUNYGUUMXPXQUVMUYTUUFUUAUUMYIYGXRXQUYSXTYDYCWTXAYEYF $.
      $( [29-Mar-2007] $)

    $( An equivalence to a dominance relation for disjoint sets. $)
    brdom6disj $p |- ( A ~<_ B <-> E. f ( A. x e. B E* y
      { x , y } e. f /\ A. x e. A E. y e. B { y , x } e. f ) ) $=
      ( vg vv vz vw cdom wbr cv wmo wral wrex wa wex cpr wcel brdom5 wceq cop 
      cab csn snex simpl ss2abi df-sn sseqtr4i ssexi abrexex2 ax-17 eleq2 
      mobid ralbidv rexbidv anbi12d cla4ev wi wal wne wb cin c0 incom eqtri 
      disjne mp3an1 visset opthpr syl breq12 biimprd syl6bi imp3a ex adantrd 
      r19.23advv zfpair2 eqeq1 anbi1d df-br anbi2i syl6bbr 2rexbidv elab 
      syl5ib 19.21aiv immo ralimia ancoms eqcom ancom 3bitr4g bicomi a1i 
      rexbidva syl5bb adantr breq2 breq1 ceqsrex2v bitrd ralbiia biimpri 
      syl2an 19.23aiv copab cvv df-opab cuni uniex prid1 elunii mpan adantl 
      prid2 eqeltrri abexex eqeltri breq preq1 eleq1d preq2 eqid brab mobii 
      ralbii rexbii syl2anbr impbii bitri ) CDMNAOZBOZIOZNZBPZADQZYQYPYRNZBDRZA
      CQZSZITZYPYQUAZEOZUBZBPZADQZYQYPUAZUUHUBZBDRZACQZSZETZABCDIFGUCUUFUUQUUEU
      UQIUUGJOZKOZLOZUAZUDZUUSUUTUEYRUBZSZKDRZLCRZJUFZUBZBPZADQZUULUVGUBZBDRZAC
      QZUUQUUAUUDUUPUVJUVMSEUVGUVELJCFUVDKJDGUVDJUFZUVAUGZUVAUHUVNUVBJUFUVOUVDU
      VBJUVBUVCUIUJJUVAUKULUMUNUNUUHUVGUDZUUKUVJUUOUVMUVPUUJUVIADUVPUUIUVHBUVPB
      UOUUHUVGUUGUPUQURUVPUUNUVLACUVPUUMUVKBDUUHUVGUULUPUSURUTVAYTUVIADYPDUBZUV
      HYSVBZBVCYTUVIVBUVQUVRBUVQUUGUVAUDZUUSUUTYRNZSZKDRLCRZYSUVHUVQUWAYSLKCDUV
      QUUTCUBZUWAYSVBZUUSDUBZUVQUWCUWDUVQUWCSZUVSUVTYSUWFUVSYPUUSUDYQUUTUDSZUVT
      YSVBUWFYPUUTVDZUVSUWGVEDCVFZVGUDZUVQUWCUWHUWICDVFVGDCVHHVIZDCYPUUTVJVKYPY
      QUUSUUTAVLZBVLZKVLZLVLZVMVNUWGYSUVTYPUUSYQUUTYRVOVPVQVRVSVTWAUVFUWBJUUGAB
      WBUURUUGUDZUVDUWALKCDUWPUVDUVSUVCSUWAUWPUVBUVSUVCUURUUGUVAWCWDUVTUVCUVSUU
      SUUTYRWEZWFWGWHWIWJWKUVHYSBWLVNWMUVMUUDUVLUUCACYPCUBZUVKUUBBDUWRYQDUBZSUV
      KUUTYPUDZUUSYQUDZSZUVTSZKDRZLCRZUUBUWRUVKUXEVEUWSUWRUULUVAUDZUVCSZKDRZLCR
      ZUXEUVKUWRUXHUXDLCUWRUXGUXCKDUWRUWESZUXFUXBUVCUVTUXJUVAUULUDZUXAUWTSZUXFU
      XBUXJUUSYPVDZUXKUXLVEUWEUWRUXMUWJUWEUWRUXMUWKDCUUSYPVJVKWNUUSUUTYQYPUWNUW
      OUWMUWLVMVNUULUVAWOUWTUXAWPWQUVCUVTVEUXJUVTUVCUWQWRWSUTWTUSUVFUXIJUULBAWB
      UURUULUDZUVDUXGLKCDUXNUVBUXFUVCUURUULUVAWCWDWHWIXAXBUVTUUSYPYRNUUBLKYPYQC
      DUUTYPUUSYRXCUUSYQYPYRXDXEXFWTXGXHXIXJUUPUUFEYPYQUUTUUSUAZUUHUBZLKXKZNZBP
      ZADQZYQYPUXQNZBDRZACQZUUFUUKUUOUUEUXTUYCSIUXQUXQUURUUTUUSUEZUDZUXPSZKTZLT
      JUFXLUXPLKJXMUYGLJUUHXNZUUHEVLXOZUYFUUTUYHUBZKUXPUYJUYEUUTUXOUBUXPUYJUUTU
      USUWOXPUUTUXOUUHXQXRXSXJUYFKJUYHUYIUXPUUSUYHUBZUYEUUSUXOUBUXPUYKUUTUUSUWN
      XTUUSUXOUUHXQXRXSUYFJUFUYEJUFZUYDUGUYLXLJUYDUKUYDUHYAUYFUYEJUYEUXPUIUJUMY
      BYBYCYRUXQUDZUUAUXTUUDUYCUYMYTUXSADUYMYSUXRBUYMBUOYPYQYRUXQYDUQURUYMUUCUY
      BACUYMUUBUYABDYQYPYRUXQYDUSURUTVAUXSUUJADUXRUUIBUXPYPUUSUAZUUHUBUUILKYPYQ
      UXQUWLUWMUWTUXOUYNUUHUUTYPUUSYEYFUXAUYNUUGUUHUUSYQYPYGYFUXQYHZYIYJYKUYBUU
      NACUYAUUMBDUXPYQUUSUAZUUHUBUUMLKYQYPUXQUWMUWLUUTYQUDUXOUYPUUHUUTYQUUSYEYF
      UUSYPUDUYPUULUUHUUSYPYQYGYFUYOYIYLYKYMXJYNYO $.
      $( [5-Apr-2007] $)
  $}

  $( An image of a function under a set is dominated by the set.  Proposition
     10.34 of [TakeutiZaring] p. 92. $)
  imadomg $p |- ( A e. B -> ( Fun F -> ( F " A ) ~<_ A ) ) $=
    ( wcel wfun cima cres cdm cdom wbr wa crn cvv wfo resfunexg dmexg syl 
    funres funforn sylib adantr fodomg sylc df-ima syl5eqbr expcom domtr wss 
    cin dmres inss1 eqsstri ssdom2g mpi sylan2 syld ) ABDZCEZCAFZCAGZHZIJZUSAIJ
    ZURUQVBURUQKZUTLZVAUSIVDVAMDZVAVEUTNZVEVAIJVDUTMDVFCABOUTMPQURVGUQURUTEVGAC
    RUTSTUAVAVEMUTUBUCCAUDUEUFVBUQVCVBVAAIJZVCUQUSVAAUGUQVAAUHVHVAACHZUIACAUJAV
    IUKULVAABUMUNUOUFUP $.
    $( [23-Jul-2004] $)

  $( The range of a function is dominated by its domain. $)
  fnrndomg $p |- ( A e. B -> ( F Fn A -> ran F ~<_ A ) ) $=
    ( wcel crn wfo cdom wbr wfn fodomg dffn4 syl5ib ) ABDACEZCFMAGHCAIAMBCJACKL
    $.
    $( [1-Sep-2004] $)

  ${
    $d f g h v w x y z A $.  $d f g h v w x y z B $.
    unidom.1 $e |- A e. _V $.
    unidom.2 $e |- B e. _V $.
    $( An upper bound for the cardinality of a union.  Theorem 10.47 of
       [TakeutiZaring] p. 98. $)
    unidom $p |- ( A. x e. A x ~<_ B -> U. A ~<_ ( A X. B ) ) $=
      ( vf vh vg vy vz cv cdom wbr wral cfv wf1 wex wcel wa cuni cxp brdom 
      ralbii f1eq1 ac6s3 sylbi uniex wceq eleq2 eleq1 anbi12d eluni biimpi 
      mprg a1i wi cvv cop id fveq2 eleq12d eleq1d rcla4cv simpr syl6 adantl wf 
      wb syl f1eq2 bitrd rcla4v f1f ffvelrn expcom sylan9r com3r imp jcad 
      opelxpi fveq1d eqeq2d imp31 adantrr adantr simpl biimprd sylan9 anim12d 
      an32s adantlll f1fveq biimpd syl11anc sylbird expimpd fvex opth syl5ib 
      fveq2d eqtrd opeq12d impbid1 ex dom2d mpi 19.23adv 19.23aiv sylc ) AKZCLM
      ZABNZXJCXJFKZOZPZABNZFQZXJXJGKZOZRZXSBRZSZABTZNZGQZYCBCUAZLMZXLXJCHKZPZHQ
      ZABNXQXKYJABXJCHEUBUCYIXOAHBFDXJCYHXNUDUEUFYEXLXJYHRZYHBRZSZHQZYEAYCYMYBA
      HYCGBDUGZYHXSUHYKXTYLYAYHXSXJUIYHXSBUJUKUEXJYCRYNHXJBULUMUNUOXPYEYGUPFXPY
      DYGGXPYDYGXPYDSZYCUQRYGYOYPIJYCYFIKZXROZYQYRXMOZOZURZJKZXROZUUBUUCXMOZOZU
      RZUQYPYQYCRZYRBRZYTCRZSUUAYFRYPUUGUUHUUIYDUUGUUHUPXPYDUUGYQYRRZUUHSZUUHYB
      UUKAYQYCXJYQUHZXTUUJYAUUHUULXJYQXSYRUULUSXJYQXRUTZVAUULXSYRBUUMVBUKVCZUUJ
      UUHVDVEVFXPYDUUGUUIUPYDUUGXPUUIYDUUGUUKXPUUIUPUUNUUHXPYRCYSVGZUUJUUIUUHXP
      YRCYSPZUUOXOUUPAYRBXJYRUHZXOXJCYSPZUUPUUQXNYSUHXOUURVHXJYRXMUTXJCXNYSUDVI
      XJYRCYSVJVKVLZYRCYSVMVEUUOUUJUUIYRCYQYSVNVOVPVEVQVRVSYRYTBCVTVEYPUUGUUBYC
      RZSZUUAUUFUHZYQUUBUHZVHYPUVASZUVBUVCUVDYRUUCUHZYTUUEUHZSUVCUVBUVDUVEUVFUV
      CUVDUVESZUVFYTUUBYSOZUHZUVCUVEUVIUVFVHUVDUVEUVHUUEYTUVEUUBYSUUDYRUUCXMUTW
      AWBVFUVGUUPUUJUUBYRRZSZUVIUVCUPUVDUUPUVEYPUUGUUPUUTXPYDUUGUUPYDUUGXPUUPYD
      UUGUUKXPUUPUPZUUNUUHUVLUUJUUSVFVEVQWCWDWEYDUVAUVEUVKXPYDUVEUVAUVKYDUVESZU
      VAUVKUVMUUGUUJUUTUVJYDUUGUUJUPUVEYDUUGUUKUUJUUNUUJUUHWFVEWEYDUUTUUBUUCRZU
      VEUVJYDUUTUVNUUCBRZSZUVNYBUVPAUUBYCXJUUBUHZXTUVNYAUVOUVQXJUUBXSUUCUVQUSXJ
      UUBXRUTZVAUVQXSUUCBUVRVBUKVCUVNUVOWFVEUVEUVJUVNYRUUCUUBUIWGWHWIVRWJWKUUPU
      VKSUVIUVCYRCYQUUBYSWLWMWNWOWPYRYTUUCUUEYQXRWQYQYSWQUUBUUDWQWRWSUVCYRUUCYT
      UUEYQUUBXRUTZUVCYTYQUUDOUUEUVCYQYSUUDUVCYRUUCXMUVSWTWAYQUUBUUDUTXAXBXCXDX
      EXFXDXGXHXI $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    $( An upper bound for the cardinality of a union.  Theorem 10.47 of
       [TakeutiZaring] p. 98. $)
    unidomg $p |- ( ( A e. C /\ B e. D /\ A. x e. A x ~<_ B ) ->
                   U. A ~<_ ( A X. B ) ) $=
      ( vz vy wcel cv cdom wbr wral cuni cxp wi wceq raleq unieq xpeq1 breq12d 
      imbi12d breq2 ralbidv xpeq2 breq2d visset unidom vtocl2g 3impia ) BDHCEHA
      IZCJKZABLZBMZBCNZJKZUJFIZJKZAGIZLZURMZURUPNZJKZOUQABLZUMBUPNZJKZOULUOOGFB
      CDEURBPZUSVCVBVEUQAURBQVFUTUMVAVDJURBRURBUPSTUAUPCPZVCULVEUOVGUQUKABUPCUJ
      JUBUCVGVDUNUMJUPCBUDUEUAAURUPGUFFUFUGUHUI $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    uniimadom.1 $e |- A e. _V $.
    uniimadom.2 $e |- B e. _V $.
    $( An upper bound for the cardinality of the union of an image.  Theorem
       10.48 of [TakeutiZaring] p. 99. $)
    uniimadom $p |- ( ( Fun F /\ A. x e. A ( F ` x ) ~<_ B ) ->
                 U. ( F " A ) ~<_ ( A X. B ) ) $=
      ( vy wfun cv cfv cdom wbr wral wa cima cuni cxp cvv wcel funimaex adantr 
      wi wceq wrex fvelima ex breq1 biimpd reximi r19.36av syl syl6 com23 imp 
      r19.21aiv unidomg mp3an2 syl11anc imadomg ax-mp xpdom1 domtr ) DHZAIDJZCK
      LZABMZNZDBOZPZVHCQZKLZVJBCQZKLZVIVLKLVGVHRSZGIZCKLZGVHMZVKVCVNVFDBETUAVGV
      PGVHVCVFVOVHSZVPUBVCVRVFVPVCVRVDVOUCZABUDZVFVPUBZVCVRVTAVOBDUEUFVTVEVPUBZ
      ABUDWAVSWBABVSVEVPVDVOCKUGUHUIVEVPABUJUKULUMUNUOVNCRSVQVKFGVHCRRUPUQURVCV
      MVFVCVHBKLZVMBRSVCWCUBEBRDUSUTVHBCEFVAUKUAVIVJVLVBUR $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x z A $.  $d x y z B $.  $d y z F $.
    uniimadomf.1 $e |- ( y e. F -> A. x y e. F ) $.
    uniimadomf.2 $e |- A e. _V $.
    uniimadomf.3 $e |- B e. _V $.
    $( An upper bound for the cardinality of the union of an image.  Theorem
       10.48 of [TakeutiZaring] p. 99.  This version of ~ uniimadom uses a
       bound-variable hypothesis in place of a distinct variable condition. $)
    uniimadomf $p |- ( ( Fun F /\ A. x e. A ( F ` x ) ~<_ B ) ->
                 U. ( F " A ) ~<_ ( A X. B ) ) $=
      ( vz wfun cv cfv cdom wbr wral cima cuni cxp uniimadom ax-17 wcel hbfv 
      hbbr wceq fveq2 breq1d cbvral sylan2b ) EJIKZELZDMNZICOECPQCDRMNAKZELZDMN
      ZACOICDEGHSUNUKAICUNITABUJDMABUIEFBKZUIUAATUBUOMUAATUODUAATUCULUIUDUMUJDM
      ULUIEUEUFUGUH $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x y z A $.  $d x z B $.  $d y z C $.
    iundom.1 $e |- A e. _V $.
    iundom.2 $e |- B e. _V $.
    iundom.3 $e |- C e. _V $.
    $( An upper bound for the cardinality of an indexed union. ` C ` depends on
       ` x ` and should be thought of as ` C ( x ) ` . $)
    iundom $p |- ( A. x e. A C ~<_ B -> U_ x e. A C ~<_ ( A X. B ) ) $=
      ( vy vz cdom wbr wral cv wcel wceq wa copab cfv ciun cxp cvv fvopab2 
      mpan2 breq1d ralbiia cima cuni wfun wfn eqid fnopab2 fnfun ax-mp hbopab1 
      uniimadomf mpan iuneq2i funiunfvf eqtr3i syl5eqbr sylbir ) DCJKZABLAMZVCB
      NZHMDOPZAHQZRZCJKZABLZABDSZBCTZJKVHVBABVDVGDCJVDDUANVGDOGAHBDUAUBUCZUDUEV
      IVFBUFUGZVKVJJVFUHZVIVMVKJKVFBUIVNAHBDVFGVFUJUKBVFULUMZAIBCVFVEAHIUNZEFUO
      UPABVGSZVJVMABVGDVLUQVNVQVMOVOAIBVFVPURUMUSUTVA $.
      $( [26-Mar-2006] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Cardinal number theorems using the Axiom of Choice
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z A $.
    $( The value of the cardinal number function.  Definition 10.4 of
       [TakeutiZaring] p. 85.  See ~ cardval2 for a simpler version of its
       value. $)
    cardval $p |- ( card ` A ) = |^| { x e. On | x ~~ A } $=
      ( vz vy cvv wcel ccrd cfv cv cen wbr con0 crab cint wceq copab wrex 
      numth2 intexrab mpbi breq2 rabbidv inteqd fvopabg mpan2 df-card fveq1i 
      syl5eq wn c0 fvprc cab wa visset enref brprc mpbiri biantrud abbidv 
      df-rab syl6reqr abid2 syl6eq inton eqtr4d pm2.61i ) BEFZBGHZAIZBJKZALMZNZ
      OVGBCIVIDIZJKZALMZNZODCPZHZVLVHVGVLEFZVRVLOVJALQVSABRVJALSTDCBVPVLEEVMBOZ
      VOVKVTVNVJALVMBVIJUAUBUCUDUEBGVQDCAUFUGUHVGUIZVHUJVLBGUKWAVLLNUJWAVKLWAVK
      VILFZAULZLWAWCWBVJUMZAULVKWAWBWDAWAVJWBWAVJVIVIJKVIAUNUOVIBJUPUQURUSVJALU
      TVAALVBVCUCVDVCVEVF $.
      $( [21-Oct-2003] $)

    $( The cardinal number of a set is an ordinal number.  Proposition 10.6(1)
       of [TakeutiZaring] p. 85.  Unlike Takeuti/Zaring's proposition, we need
       the Axiom of Choice (in ~ cardval ) because of our slightly different
       definition of of cardinal number. $)
    cardon $p |- ( card ` A ) e. On $=
      ( vx ccrd cfv cv cen wbr con0 crab cint cardval wss c0 wne wcel ssrab2 
      cvv fvex eqeltrri intex mpbir oninton mp2an eqeltri ) ACDZBEAFGZBHIZJZHBA
      KZUGHLUGMNZUHHOUFBHPUJUHQOUEUHQUIACRSUGTUAUGUBUCUD $.
      $( [22-Oct-2003] $)

    $( Any set is equinumerous to its cardinal number.  Proposition 10.5 of
       [TakeutiZaring] p. 85. $)
    cardid $p |- ( card ` A ) ~~ A $=
      ( vx ccrd cfv cv cen wbr con0 crab wcel cint cardval wss c0 wne ssrab2 
      cvv fvex eqeltrri intex mpbir onint mp2an eqeltri breq1 elrab simprbi 
      ax-mp ) ACDZBEZAFGZBHIZJZUIAFGZUIULKZULBALZULHMULNOZUOULJUKBHPUQUOQJUIUOQ
      UPACRSULTUAULUBUCUDUMUIHJUNUKUNBUIHUJUIAFUEUFUGUH $.
      $( [22-Oct-2003] $)

    $( A set is a cardinal number iff it equals its own cardinal number.
       Proposition 10.9 of [TakeutiZaring] p. 85. $)
    oncard $p |- ( E. x A = ( card ` x ) <-> A = ( card ` A ) ) $=
      ( vy cv ccrd cfv wceq wex wss cen wbr cardid breq1 mpbiri entr mpan con0 
      crab cint wcel wi cardon onintss ax-mp cardval syl5ss 3syl sseq1 mpbird 
      eleq1 cardonle syl eqssd 19.23aiv cvv fvex fveq2 eqeq2d cla4egv mpcom 
      impbii ) BADZEFZGZAHZBBEFZGZVDVGAVDBVFVDBVFIVCVFIZVDBVBJKZVFVBJKZVHVDVIVC
      VBJKVBLBVCVBJMNVFBJKVIVJBLVFBVBOPVJCDZVBJKZCQRSZVFVCVFQTVJVMVFIUABUBVLVJC
      VFVKVFVBJMUCUDCVBUEUFUGBVCVFUHUIVDBQTZVFBIVDVNVCQTVBUBBVCQUJNBUKULUMUNBUO
      TZVGVEVGVOVFUOTBEUPBVFUOUJNVDVGABUOVBBGVCVFBVBBEUQURUSUTVA $.
      $( [11-Aug-2004] $) $( [22-Oct-2003] $)

    $( The cardinal number of a finite set is a finite ordinal.  (Contributed
       by Paul Chapman, 11-Apr-2009.) $)
    ficardom $p |- ( A e. Fin -> ( card ` A ) e. om ) $=
      ( vx cfn wcel ccrd cfv com cv cen wbr wrex isfi biimpi wi wral cardid 
      entr mpan a1i rgen rexim ax-mp biimpri 3syl con0 wb cardon onfin sylib ) 
      ACDZAEFZCDZUKGDZUJABHZIJZBGKZUKUNIJZBGKZULUJUPBALMUOUQNZBGOUPURNUSBGUSUNG
      DUKAIJUOUQAPUKAUNQRSTUOUQBGUAUBULURBUKLUCUDUKUEDULUMUFAUGUKUHUBUI $.
      $( [11-Apr-2009] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( No member of a cardinal number of a set is equinumerous to the set.
       Proposition 10.6(2) of [TakeutiZaring] p. 85. $)
    cardne $p |- ( A e. ( card ` B ) -> -. A ~~ B ) $=
      ( vx con0 wcel ccrd cfv cen wbr wn cardon oneli wss cv crab cint breq1 
      onintss cardval sseq1i syl6ibr wb ontri1 mpan sylibd con2d mpcom ) ADEZAB
      FGZEZABHIZJUIABKZLUHUKUJUHUKUIAMZUJJZUHUKCNZBHIZCDOPZAMUMUPUKCAUOABHQRUIU
      QACBSTUAUIDEUHUMUNUBULUIAUCUDUEUFUG $.
      $( [22-Oct-2003] $)
  $}

  $( Two sets are equinumerous iff their cardinal numbers are equal.  This
     important theorem expresses the essential concept behind "cardinality" or
     "size."  This theorem appears as Proposition 10.10 of [TakeutiZaring]
     p. 85, Theorem 7P of [Enderton] p. 197, and Theorem 9 of [Suppes] p. 242
     (among others).  The Axiom of Choice is required for its proof.

     The theory of cardinality can also be developed without AC by introducing
     "card" as a primitive notion and stating this theorem as an axiom, as is
     done with the axiom for cardinal numbers in [Suppes] p. 111.  Finally, if
     we allow the Axiom of Regularity, we can avoid AC by defining the cardinal
     number of a set as the set of all sets equinumerous to it and having least
     possible rank (see ~ karden ). $)
  carden $p |- ( ( A e. C /\ B e. D ) ->
               ( ( card ` A ) = ( card ` B ) <-> A ~~ B ) ) $=
    ( wcel wa ccrd cfv wceq cen wbr wi breq2 cardid entr mpan2 syl6bi ensymg 
    mpi syl5com adantr wss mpan wn cardne con2i con0 wb cardon ontri1 mp2an 
    sylibr syl syl6 a1i jcad eqss syl6ibr adantl impbid ) ACEZBDEZFAGHZBGHZIZAB
    JKZVAVEVFLVBVEAVCJKZVFVAVEVGAVDJKZVFVCVDAJMVHVDBJKZVFBNZAVDBOPQVAVCAJKZVGAN
    ZVCACRSTUAVBVFVELVAVBVFVCVDUBZVDVCUBZFVEVBVFVMVNVBVFBAJKZVMABDRVOVDAJKZVMVI
    VOVPVJVDBAOUCVPVDVCEZUDZVMVQVPVDAUEUFVCUGEZVDUGEZVMVRUHAUIZBUIZVCVDUJUKULUM
    UNVFVNLVBVFVCBJKZVNVKVFWCVLVCABOUCWCVCVDEZUDZVNWDWCVCBUEUFVTVSVNWEUHWBWAVDV
    CUJUKULUMUOUPVCVDUQURUSUT $.
    $( [22-Oct-2003] $)

  $( Only the empty set has cardinality zero. $)
  cardeq0 $p |- ( A e. B -> ( ( card ` A ) = (/) <-> A = (/) ) ) $=
    ( wcel ccrd cfv c0 wceq cen wbr cvv wb 0ex carden mpan2 card0 eqeq2i en0 
    3bitr3g ) ABCZADEZFDEZGZAFHIZTFGAFGSFJCUBUCKLAFBJMNUAFTOPAQR $.
    $( [23-Apr-2004] $)

  ${
    $d x A $.  $d x B $.
    $( A set has cardinality one iff it is a singleton. $)
    card1 $p |- ( ( card ` A ) = 1o <-> E. x A = { x } ) $=
      ( ccrd cfv c1o wceq cen wbr cv csn wex cvv wcel c0 wne wn 1n0 df-ne mpbi 
      eqeq1 mtbiri fvprc nsyl2 relen brrelexi com wb 1onn carden mpan2 cardnn 
      ax-mp eqeq2i syl5bbr pm5.21nii en1 bitri ) BCDZEFZBEGHZBAIJFAKUSBLMZUTUSU
      RNFZVAUSVBENFZENOVCPQENRSURENTUABCUBUCBEGUDUEVAURECDZFZUTUSVAEUFMZVEUTUGU
      HBELUFUIUJVDEURVFVDEFUHEUKULUMUNUOABUPUQ $.
      $( [16-May-2008] $)

    $( A singleton has cardinality one. $)
    cardsn $p |- ( A e. B -> ( card ` { A } ) = 1o ) $=
      ( vx wcel csn cv wceq wex ccrd cfv c1o eqid sneq eqeq2d cla4egv mpi 
      card1 sylibr ) ABDZAEZCFZEZGZCHZTIJKGSTTGZUDTLUCUECABUAAGUBTTUAAMNOPCTQR 
      $.
      $( [23-Apr-2004] $)
  $}

  ${
    unsnen.1 $e |- A e. _V $.
    unsnen.2 $e |- B e. _V $.
    $( Equinumerosity of a set with a new element added. $)
    unsnen $p |- ( -. B e. A -> ( A u. { B } ) ~~ suc ( card ` A ) ) $=
      ( wcel wn csn cun ccrd cfv csuc cen cin c0 wceq wbr disjsn word cardon 
      onordi orddisj ax-mp wa cardid ensymi cvv fvex en2sn mp2an unen mpanl12 
      mpan2 sylbir df-suc syl6breqr ) BAEFZABGZHZAIJZUSGZHZUSKLUPAUQMNOZURVALPZ
      ABQVBUSUTMNOZVCUSRVDUSASTUSUAUBAUSLPUQUTLPZVBVDUCVCUSACAUDUEBUFEUSUFEVEDA
      IUGBUSUFUFUHUIAUSUQUTUJUKULUMUSUNUO $.
      $( [7-Nov-2008] $)
  $}

  $( Two sets have the dominance relationship if their cardinalities have the
     subset relationship. $)
  carddomi $p |- ( A e. C -> ( ( card ` A ) C_ ( card ` B ) -> A ~<_ B ) ) $=
    ( wcel ccrd cfv wss cdom wbr cen wa domentr endomtr cardid ensymg mpi con0 
    wi cardon ssdomg ax-mp syl2an sylancl ex ) ACDZAEFZBEFZGZABHIZAUGHIZUGBJIUI
    UEUHKAUGBLAUFJIZUFUGHIZUJUEUHAUFUGMUEUFAJIUKANUFACOPUFQDUHULRASUFUGQTUAUBBN
    UCUD $.
    $( [22-Oct-2003] $)

  $( Two sets have the dominance relationship iff their cardinalities have the
     subset relationship.  Equation i of [Quine] p. 232. $)
  carddom $p |- ( ( A e. C /\ B e. D ) ->
               ( ( card ` A ) C_ ( card ` B ) <-> A ~<_ B ) ) $=
    ( wcel wa ccrd cfv wss cdom wbr wi carddomi adantr csdm cen wo wn cardon 
    onelssi syl5 domnsym syl6 con2d con0 wb ontri1 mp2an syl6ibr adantl wceq 
    carden eqimss syl6bir jaod brdom2 syl5ib impbid ) ACEZBDEZFZAGHZBGHZIZABJKZ
    USVDVELUTABCMNVAABOKZABPKZQVDVEVAVFVDVGUTVFVDLUSUTVFVCVBEZRZVDUTVHVFUTVHBAJ
    KZVFRUTVCVBIVJVHBADMVBVCASZTUABAUBUCUDVBUEEVCUEEVDVIUFVKBSVBVCUGUHUIUJVAVGV
    BVCUKVDABCDULVBVCUMUNUOABUPUQUR $.
    $( [22-Oct-2003] $)

  $( Two sets have the strict dominance relationship iff their cardinalities
     have the membership relationship.  Corollary 19.7(2) of [Eisenberg]
     p. 310. $)
  cardsdom $p |- ( ( A e. C /\ B e. D ) ->
               ( ( card ` A ) e. ( card ` B ) <-> A ~< B ) ) $=
    ( wcel wa ccrd cfv wss wne cdom wbr cen wn csdm carddom carden necon3abid 
    anbi12d con0 wb cardon onelpss mp2an brsdom 3bitr4g ) ACEBDEFZAGHZBGHZIZUHU
    IJZFZABKLZABMLZNZFUHUIEZABOLUGUJUMUKUOABCDPUGUNUHUIABCDQRSUHTEUITEUPULUAAUB
    BUBUHUIUCUDABUEUF $.
    $( [22-Oct-2003] $)

  $( Trichotomy law for dominance and strict dominance.  This theorem is
     equivalent to the Axiom of Choice. $)
  domtri $p |- ( ( A e. C /\ B e. D ) -> ( A ~<_ B <-> -. B ~< A ) ) $=
    ( wcel wa ccrd cfv wss cdom wbr csdm wn carddom wb cardsdom ancoms notbid 
    con0 cardon ontri1 mp2an syl5bb bitr3d ) ACEZBDEZFZAGHZBGHZIZABJKBALKZMZABC
    DNUGUIUHEZMZULUJUGUMUKUFUEUMUKOBADCPQRUHSEUISEUJUNOATBTUHUIUAUBUCUD $.
    $( [4-Jan-2004] $)

  $( Trichotomy of equinumerosity and strict dominance.  This theorem is
     equivalent to the Axiom of Choice.  Theorem 8 of [Suppes] p. 242. $)
  entric $p |- ( ( A e. C /\ B e. D ) -> ( A ~< B \/ A ~~ B \/ B ~< A ) ) $=
    ( wcel wa csdm wbr cen wo w3o wn cdom domtri biimprd brdom2 syl6ib con1d 
    orrd df-3or sylibr ) ACEBDEFZABGHZABIHZJZBAGHZJUCUDUFKUBUEUFUBUFUEUBUFLZABM
    HZUEUBUHUGABCDNOABPQRSUCUDUFTUA $.
    $( [1-Oct-2004] $) $( [4-Jan-2004] $)

  $( Trichotomy of dominance and strict dominance. $)
  entri2 $p |- ( ( A e. C /\ B e. D ) -> ( A ~<_ B \/ B ~< A ) ) $=
    ( wcel wa csdm wbr cen w3o cdom wo entric brdom2 orbi1i df-3or bitr4i 
    sylibr ) ACEBDEFABGHZABIHZBAGHZJZABKHZUALZABCDMUDSTLZUALUBUCUEUAABNOSTUAPQR
    $.
    $( [1-Oct-2004] $) $( [4-Jan-2004] $)

  $( Trichotomy of dominance.  This theorem is equivalent to the Axiom of
     Choice.  Part of Proposition 4.42(d) of [Mendelson] p. 275. $)
  entri3 $p |- ( ( A e. C /\ B e. D ) -> ( A ~<_ B \/ B ~<_ A ) ) $=
    ( wcel wa cdom wbr csdm wo entri2 sdomdom orim2i syl ) ACEBDEFABGHZBAIHZJOB
    AGHZJABCDKPQOBALMN $.
    $( [13-Nov-2004] $) $( [4-Jan-2004] $)

  $( If ` A ` is equinumerous to a natural number, then that number is its
     cardinal.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
  cardennn $p |- ( ( A e. C /\ A ~~ B /\ B e. om ) -> ( card ` A ) = B ) $=
    ( wcel cen wbr com w3a ccrd cfv wceq carden exbiri com23 3imp cardnn 
    3ad2ant3 eqtrd ) ACDZABEFZBGDZHAIJZBIJZBSTUAUBUCKZSUATUDSUAUDTABCGLMNOUASUC
    BKTBPQR $.
    $( [2-Sep-2009] $)

  $( The cardinality of the successor of an infinite ordinal. $)
  cardsucinf $p |- ( ( A e. On /\ om C_ A )
         -> ( card ` suc A ) = ( card ` A ) ) $=
    ( con0 wcel com wss wa ccrd cfv csuc wceq cen wbr infensuc wb suceloni 
    carden mpdan adantr mpbird eqcomd ) ABCZDAEZFZAGHZAIZGHZUCUDUFJZAUEKLZAMUAU
    GUHNZUBUAUEBCUIAOAUEBBPQRST $.
    $( [15-Nov-2008] $)

  $( Strict dominance of a set over a natural number is the same as dominance
     over its successor.  The proof uses AC and Infinity.  It is unclear if a
     proof without using these is possible, unlike the weaker versions
     ~ omsucdom , ~ sucdomi , and ~ fisucdom . $)
  sucdom $p |- ( ( A e. om /\ B e. C ) ->
                   ( A ~< B <-> suc A ~<_ B ) ) $=
    ( com wcel wa cdom wbr csdm wo csuc wb cvv omex entri2 mpan adantl wi 
    sdomdomtr expdimp nnsdom sylan2 ancoms peano2b sylbi sdomdom domtr ex 3syl 
    adantr jcad pm5.1 syl6 cfn fisucdom isfinite2 syl5 jaod mpd ) ADEZBCEZFZDBG
    HZBDIHZJZABIHZAKZBGHZLZVAVEUTDMEVAVENDBMCOPQVBVCVIVDVBVCVFVHFVIVBVCVFVHVAUT
    VCVFRZVAADIHZVJUTVAVKVCVFADBCSTAUAUBUCUTVCVHRZVAUTVGDIHZVGDGHZVLUTVGDEVMAUD
    VGUAUEVGDUFVNVCVHVGDBUGUHUIUJUKVFVHULUMUTVDVIRVAUTBUNEZVIVDUTVOVIABUOUHBUPU
    QUJURUS $.
    $( [13-Sep-2008] $) $( [26-Jul-2004] $)

  ${
    $d x y z w v u t f A $.  $d x y z w v u t f B $.
    unxpdomlem.1 $e |- A e. _V $.
    unxpdomlem.2 $e |- B e. _V $.
    $( Lemma for ~ unxpdom . $)
    unxpdomlem $p |- ( ( 1o ~< A /\ 1o ~< B ) -> ( A u. B ) ~<_ ( A X. B ) ) $=
      ( vu vw vt vv vx vy vz vf cv wceq wn wrex cun cxp cdom wbr c1o csdm wcel 
      wa wi cif copab2 crn wss wo eqeq1 ifeq2 ifbieq2d eqeq1d ifbid eqtrd 
      ifeq12 syl11anc rcla42ev eqid iftrue ax-mp id 3eqtr4a syl3an3 3exp com3l 
      ad2antlr iffalse sylan9eqr exp4a imp3a adantlr pm2.61d adantl equcomi 
      com24 imp syl5eq com23 adantr jaod elun syl5ib eqcom 2rexbii visset ifex 
      elrnoprab bitr4i syl6ib ssrdv cvv unex ssdomg wfn xpex fnoprab2 fnrndomg 
      mp2 domtr mpan2 3syl exp43 r19.23aivv r19.23advv c2o csuc com wb 1onn 
      sucdom mp2an df-2o breq1i 2dom sylbi syl2an ) EMZFMZNZOZFAPEAPZGMZHMZNZOZ
      HBPGBPZABQZABRZSTZUAAUBTZUABUBTZYCYHYKYCYGYKGHBBYBYDBUCZYEBUCZUDZYGYKUEUE
      EFAAXSAUCZXTAUCZUDZYBYPYGYKYSYBUDZYPYGUDZUDZYIIMZAUCJMZBUCUDKMUUCXTNZUUDY
      ENZXTUUDUFZUUFYEUUCUFZUFZNUDIJKUGZUHZUIZYIUUKSTZYKUUBLYIUUKUUBLMZYIUCZUUI
      UUNNZJBPIAPZUUNUUKUCZUUBUUNAUCZUUNBUCZUJUUQUUOUUBUUSUUQUUTUUAUUSUUQUEZYTU
      UAUUNXTNZUVAYOUVBUVAUEYNYGUUSYOUVBUUQUUSYOUVBUUQUUSYOUVBYEYENZXTYEUFZUVCY
      EUUNUFZUFZUUNNZUUQUVBUUPUVGUVBUUGUUFYEUUNUFZUFZUUNNZIJUUNYEABUUCUUNNZUUIU
      VIUUNUVKUUEUVBUUHUVHUUGUUCUUNXTUKUUFUUCUUNYEULUMUNZUUFUVIUVFUUNUUFUUGUVDN
      UVHUVENUVIUVFNUUFUUGUVCXTUUDUFUVDUUFUUFUVCXTUUDUUDYEYEUKZUOUVCUUDYEXTULUP
      UUFUUFUVCYEUUNUVMUOUVBUUGUVDUVHUVEUQURUNUSUVBUVDXTUVFUUNUVCUVDXTNYEUTUVCX
      TYEVAVBUVBUVDUVEVAUVBVCVDVEVFVGVHYNYGUVBOZUVAUEYOUUSYNYGUDUVNUUQUUSYNYGUV
      NUUQUEUUSYNYGUVNUUQUUSYNYGUVNUDZUUQUUSYNUVBYFXTYDUFZYFYEUUNUFZUFZUUNNZUUQ
      UVOUUPUVSUVJIJUUNYDABUVLUUDYDNZUVIUVRUUNUVTUUGUVPNUVHUVQNUVIUVRNUVTUUGYFX
      TUUDUFUVPUVTUUFYFXTUUDUUDYDYEUKZUOYFUUDYDXTULUPUVTUUFYFYEUUNUWAUOUVBUUGUV
      PUVHUVQUQURUNUSUVNYGUVRUVQUUNUVBUVPUVQVIYFYEUUNVIVJVEVFVKVLVGVMVNVOYTUUTU
      UQUEZUUAYTUUNYENZUWBYQYBUWCUWBUEZYRYQYBUWDYQUUTUWCYBUUQYQUUTUWCYBUUQYQUUT
      UWCYBUDZUUQYQUUTYAUWCXTUUNUFZUWCYEXSUFZUFZUUNNZUUQUWEUUPUWIYAUUGUUFYEXSUF
      ZUFZUUNNIJXSUUNABUUCXSNZUUIUWKUUNUWLUUEYAUUHUWJUUGUUCXSXTUKUUFUUCXSYEULUM
      UNUUDUUNNZUWKUWHUUNUWMUUGUWFNZUWJUWGNUWKUWHNUWMUUGUWCXTUUDUFUWFUWMUUFUWCX
      TUUDUUDUUNYEUKZUOUWCUUDUUNXTULUPZUWMUUFUWCYEXSUWOUOYAUUGUWFUWJUWGUQURUNUS
      YBUWCUWHUWGUUNYAUWFUWGVIUWCUWGYEUUNUWCYEXSVALHVPUPVJVEVFVKVQVRVMYRUWCOZUW
      BUEYQYBYRUUTUWQUUQYRUUTUWQUUQYRUUTXTXTNZUWFUWCYEXTUFZUFZUUNNZUUQUWQUUPUXA
      UWRUUGUUFYEXTUFZUFZUUNNIJXTUUNABUUEUUIUXCUUNUUEUUEUWRUUHUXBUUGUUCXTXTUKUU
      FUUCXTYEULUMUNUWMUXCUWTUUNUWMUWNUXBUWSNUXCUWTNUWPUWMUUFUWCYEXTUWOUOUWRUUG
      UWFUXBUWSUQURUNUSUWQUWFUUNUWTUWCXTUUNVIUWRUWTUWFNXTUTUWRUWFUWSVAVBVSVEVFV
      TVHVNWAWBUUNABWCWDUUQUUNUUINZJBPIAPUURUUPUXDIJABUUIUUNWEWFIJKABUUIUUNUUJU
      UEUUGUUHUUFXTUUDFWGJWGWHUUFYEUUCHWGIWGWHWHZUUJUTZWIWJWKWLYIWMUCUULUUMUEAB
      CDWNYIUUKWMWOVBUUMUUKYJSTZYKYJWMUCUUJYJWPUXGABCDWQIJKABUUIUUJUXEUXFWRYJWM
      UUJWSWTYIUUKYJXAXBXCXDXEXFVRYLXGASTZYCYLUAXHZASTZUXHUAXIUCZAWMUCYLUXJXJXK
      CUAAWMXLXMXGUXIASXNXOWJEFACXPXQYMXGBSTZYHYMUXIBSTZUXLUXKBWMUCYMUXMXJXKDUA
      BWMXLXMXGUXIBSXNXOWJGHBDXPXQXR $.
      $( [2-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( Cross product dominates union for sets with cardinality greater than 1.
       Proposition 10.36 of [TakeutiZaring] p. 93. $)
    unxpdom $p |- ( ( 1o ~< A /\ 1o ~< B ) -> ( A u. B ) ~<_ ( A X. B ) ) $=
      ( vx vy cvv wcel wa c1o csdm wbr cun cxp cdom sdomex simprd anim12i cv 
      wi wceq breq2 anbi1d uneq1 xpeq1 breq12d imbi12d anbi2d uneq2 xpeq2 
      visset unxpdomlem vtocl2g mpcom ) AEFZBEFZGHAIJZHBIJZGZABKZABLZMJZUOUMUPU
      NUOHEFZUMHANOUPVAUNHBNOPHCQZIJZHDQZIJZGZVBVDKZVBVDLZMJZRUOVEGZAVDKZAVDLZM
      JZRUQUTRCDABEEVBASZVFVJVIVMVNVCUOVEVBAHITUAVNVGVKVHVLMVBAVDUBVBAVDUCUDUEV
      DBSZVJUQVMUTVOVEUPUOVDBHITUFVOVKURVLUSMVDBAUGVDBAUHUDUEVBVDCUIDUIUJUKUL 
      $.
      $( [15-Sep-2004] $)
  $}

  ${
    unxpdom2.1 $e |- A e. _V $.
    unxpdom2.2 $e |- B e. _V $.
    $( Corollary of ~ unxpdom . $)
    unxpdom2 $p |- ( ( 1o ~< A /\ B ~<_ A ) -> ( A u. B ) ~<_ ( A X. A ) ) $=
      ( cdom wbr c1o csdm cun cxp csn c0 domtr wa cin wceq wne 1n0 xpsndisj 
      ax-mp snex xpex p0ex undom mpan2 cen com 1onn elisseti xpsnen ensymi 
      endom 0ex domentr sylancr cvv wcel wi sdomentr unxpdom syl11anc xpen 
      mp2an sylancl syl2an ancoms ) BAEFZGAHFZABIZAAJZEFZVIAGKZJZALKZJZIZEFZVPV
      JEFZVKVGVHVIVPVJMAVMEFZBVOEFZVQVGVSVTNVMVOOLPZVQGLQWARAGALSTAVMBVOAVLCGUA
      UBZDAVNCUCUBZUDUEAVMUFFZVSVMACAGCGUGUHUIUJZUKZAVMULTVGAVOUFFZVTVOACALCUMU
      JZUKZBAVOUNUEUOVPVMVOJZEFZWJVJUFFZVRVHVPWJVJUNVHGVMHFZGVOHFZWKVHWDWMWFVMU
      PUQVHWDNWMURWBGAVMUPUSTUEVHWGWNWIVOUPUQVHWGNWNURWCGAVOUPUSTUEVMVOUTVAVMAU
      FFVOAUFFWLWEWHVMAVOAWBCWCCVBVCVDVEVF $.
      $( [24-Jul-2006] $) $( [16-Sep-2004] $)
  $}

  ${
    $d x A $.
    $( Cross product dominates successor for set with cardinality greater than
       1.  Proposition 10.38 of [TakeutiZaring] p. 93 (but generalized to
       arbitrary sets, not just ordinals, with a proof using AC). $)
    sucxpdom $p |- ( 1o ~< A -> suc A ~<_ ( A X. A ) ) $=
      ( vx cvv wcel c1o csdm wbr csuc cxp cdom sdomex simprd cv wi wceq breq2 
      suceq xpeq1 xpeq2 eqtrd breq12d imbi12d csn cun c0 wa cin wne 1n0 
      xpsndisj ax-mp visset snex xpex p0ex undom mpan2 domrefg cen wb con0 1on 
      elisseti xpsnen domen2 mp2an mpbir 0ex sdomen2 ensn1 sdomen1 bitri 
      sdomdom sylbir sylancr unxpdom sylancbr jca domtr xpen domentr 3syl 
      df-suc syl5eqbr vtoclg mpcom ) ACDZEAFGZAHZAAIZJGZWHECDZWGEAKLEBMZFGZWMHZ
      WMWMIZJGZNWHWKNBACWMAOZWNWHWQWKWMAEFPWRWOWIWPWJJWMAQWRWPAWMIWJWMAWMRWMAAS
      TUAUBWNWMWMUCZUDZWPWOJWNWTWMEUCZIZWMUEUCZIZUDZJGZXEXBXDIZJGZUFWTXGJGZWTWP
      JGZWNXFXHWMXBJGZWSXDJGZXFWNXKXLUFXBXDUGUEOZXFEUEUHXMUIWMEWMUEUJUKWMXBWSXD
      WMXABULZEUMUNZWMUMWMXCXNUOUNZUPUQXKWMWMJGZWMCDZXQXNWMCURUKXRXBWMUSGZXKXQU
      TXNWMEXNEVAVBVCZVDZXBWMWMCVEVFVGWNWSXDFGZXLYBWSWMFGZWNXRXDWMUSGZYBYCUTXNW
      MUEXNVHVDZXDWMWSCVIVFWLWSEUSGYCWNUTXTWMXNVJWSEWMCVKVFVLWSXDVMVNVOEXBFGZEX
      DFGZXHWNXBXDVPXRXSYFWNUTXNYAXBWMECVIVFXRYDYGWNUTXNYEXDWMECVIVFVQVRWTXEXGV
      SXIXGWPUSGZXJXSYDYHYAYEXBWMXDWMXOXNXPXNVTVFWTXGWPWAUQWBWMWCWDWEWF $.
      $( [24-Jul-2006] $) $( [3-Sep-2004] $)
  $}

  $( Strict dominance implies ordinal membership. $)
  sdomel $p |- ( ( A e. On /\ B e. On ) -> ( A ~< B -> A e. B ) ) $=
    ( con0 wcel csdm wbr wi wa wss cdom wn ssdomg adantr ontri1 domtri 3imtr3d 
    con4d ancoms ) BCDZACDZABEFZABDZGSTHZUBUAUCBAIZBAJFZUBKUAKSUDUEGTBACLMBANBA
    CCOPQR $.
    $( [21-Nov-2004] $) $( [4-Nov-2003] $)

  $( A set strictly dominates iff its cardinal strictly dominates. $)
  sdomsdomcard $p |- ( A ~< B <-> A ~< ( card ` B ) ) $=
    ( csdm wbr cvv wcel ccrd cfv sdomex simprd wn c0 sdom0 fvprc breq2d mtbiri 
    con4i cen wa wi fvex sdomentr ax-mp ex cardid ensymg mpi syl5com mpan2i 
    impbid pm5.21nii ) ABCDZBEFZABGHZCDZULAEFUMABIJUMUOUMKZUOALCDAMUPUNLACBGNOP
    QUMULUOULBUNRDZUOUMULUQUOUNEFULUQSUOTBGUAABUNEUBUCUDUMUNBRDZUQBUEZUNBEUFUGU
    HUMUOURULUSAUNBEUBUIUJUK $.
    $( [30-Oct-2003] $)

  $( The cardinality function is idempotent.  Proposition 10.11 of
     [TakeutiZaring] p. 85. $)
  cardidm $p |- ( card ` ( card ` A ) ) = ( card ` A ) $=
    ( cvv wcel ccrd cfv wceq cen wbr cardid wb fvex carden mpan mpbiri wn c0 
    card0 fvprc fveq2d 3eqtr4a pm2.61i ) ABCZADEZDEZUCFZUBUEUCAGHZAIUCBCUBUEUFJ
    ADKUCABBLMNUBOZPDEPUDUCQUGUCPDADRZSUHTUA $.
    $( [30-Oct-2003] $)

  $( Cantor's theorem in terms of cardinals.  This theorem tells us that no
     matter how largei a cardinal number is, there is a still larger cardinal
     number.  Theorem 18.12 of [Monk1] p. 133. $)
  canth3 $p |- ( A e. B -> ( card ` A ) e. ( card ` ~P A ) ) $=
    ( wcel ccrd cfv cpw csdm wbr canth2g cvv wb pwexg cardsdom mpdan mpbird ) 
    ABCZADEAFZDECZAQGHZABIPQJCRSKABLAQBJMNO $.
    $( [11-Jul-2004] $) $( [5-Nov-2003] $)

  ${
    $d x A $.
    $( An infinite cardinal is a limit ordinal.  Equivalent to Exercise 4 of
       [TakeutiZaring] p. 91. $)
    cardlim $p |- ( om C_ ( card ` A ) <-> Lim ( card ` A ) ) $=
      ( vx com ccrd cfv wss wlim cv csuc wceq con0 wrex wn wcel wa cen wbr wi 
      sseq2 biimpd infensuc ex wb limom limsssuc ax-mp syl5ibr sylan9r breq2 
      adantl sylibrd com3r imp visset sucid eleq2 mpbiri cardidm syl6eleqr 
      cardne syl a1i pm2.65d nrexdv c0 wo peano1 ssel mpi n0i w3o word cardon 
      onordi ordzsl mpbi 3orass ori 3syl ord mpd limomss impbii ) CADEZFZWDGZWE
      WDBHZIZJZBKLZMWFWEWIBKWEWGKNZOZWIWGWDPQZWEWKWIWMRWKWIWEWMWKWIWEWMRWKWIOWE
      WGWHPQZWMWIWECWHFZWKWNWIWEWOWDWHCSTWKCWGFZWNWOWKWPWNWGUAUBCGWPWOUCUDCWGUE
      UFUGUHWIWMWNUCWKWDWHWGPUIUJUKUBULUMWIWMMZRWLWIWGWDDEZNWQWIWGWDWRWIWGWDNWG
      WHNWGBUNUOWDWHWGUPUQAURUSWGWDUTVAVBVCVDWEWJWFWEVEWDNZWDVEJZMWJWFVFZWEVECN
      WSVGCWDVEVHVIWDVEVJWTXAWTWJWFVKZWTXAVFWDVLXBWDAVMVNBWDVOVPWTWJWFVQVPVRVSV
      TWAWDWBWC $.
      $( [3-Jun-2004] $) $( [30-Oct-2003] $)
  $}

  $( A cardinal strictly dominates its members.  Equivalent to Proposition
     10.37 of [TakeutiZaring] p. 93 (use ~ cardsdom to obtain the exact
     proposition from this one). $)
  cardsdomel $p |- ( A e. On -> ( A ~< B <-> A e. ( card ` B ) ) ) $=
    ( con0 wcel ccrd cfv csdm wbr wss cdom wn ssdom2g wb cardon ontri1 mpan 
    domtri 3imtr3d con4d cen brsdom onelssi wi ax-mp syl cardidm eleq2i cardne 
    sylbir sylanbrc impbid1 sdomsdomcard syl5bb ) ACDZABEFZGHZAUODZABGHUNUPUQUN
    UQUPUNUOAIZUOAJHZUQKZUPKZUOACLUOCDZUNURUTMBNZUOAOPVBUNUSVAMVCUOACCQPRSUPAUO
    JHZAUOTHKZUQAUOUAUQAUOIZVDUOAVCUBVBVFVDUCVCAUOCLUDUEUQAUOEFZDVEVGUOABUFUGAU
    OUHUIUJUKABULUM $.
    $( [2-Nov-2003] $)

  ${
    $d x A $.
    $( Two ways to express the property of being a cardinal number. $)
    iscard $p |- ( ( card ` A ) = A <-> ( A e. On /\ A. x e. A x ~< A ) ) $=
      ( ccrd cfv wceq con0 wcel wa cv csdm wbr wral cardon eleq1 mpbii 
      pm4.71ri wss wb cardonle eqss baibr syl onelon cardsdomel ralbidva dfss3 
      syl6rbbr bitr3d pm5.32i bitri ) BCDZBEZBFGZULHUMAIZBJKZABLZHULUMULUKFGUMB
      MUKBFNOPUMULUPUMBUKQZULUPUMUKBQZUQULRBSULURUQUKBTUAUBUMUPUNUKGZABLUQUMUOU
      SABUMUNBGHUNFGUOUSRBUNUCUNBUDUBUEABUKUFUGUHUIUJ $.
      $( [2-Nov-2003] $)
  $}

  ${
    $d x y A $.
    $( Two ways to express the property of being a cardinal number.  Definition
       8 of [Suppes] p. 225. $)
    iscard2 $p |- ( ( card ` A ) = A <->
                  ( A e. On /\ A. x e. On ( A ~~ x -> A C_ x ) ) ) $=
      ( vy ccrd cfv wceq con0 wcel wa cv cen wbr wss wi wral cardon eleq1 
      mpbii pm4.71ri cardonle biantrurd eqss syl6rbbr crab cint ensymg visset 
      ensym impbid1 anbi2d breq1 elrab syl5bb imbi1d impexp syl6bb ralbidv2 
      ssint cardval sseq2i bitrd pm5.32i bitri ) BDEZBFZBGHZVEIVFBAJZKLZBVGMZNZ
      AGOZIVEVFVEVDGHVFBPVDBGQRSVFVEVKVFVEBVDMZVKVFVLVDBMZVLIVEVFVMVLBTUAVDBUBU
      CVFBCJZBKLZCGUDZUEZMZVKVLVFVIAVPOVKVRVFVIVJAVPGVFVGVPHZVINVGGHZVHIZVINVTV
      JNVFVSWAVIVFVTVGBKLZIWAVSVFWBVHVTVFWBVHVGBGUFBVGAUGUHUIUJVOWBCVGGVNVGBKUK
      ULUMUNVTVHVIUOUPUQABVPURUMVDVQBCBUSUTUMVAVBVC $.
      $( [27-Nov-2004] $) $( [7-Nov-2003] $)
  $}

  ${
    $d x A $.
    $( An alternate version of the value of the cardinal number of a set.
       Compare ~ cardval .  This theorem could be used to give us a simpler
       definition of ` card ` in place of ~ df-card .  It apparently does not
       occur in the literature. $)
    cardval2 $p |- ( card ` A ) = { x e. On | x ~< A } $=
      ( cv csdm wbr con0 crab wcel wa cab ccrd cfv df-rab cardon oneli 
      pm4.71ri cardsdomel pm5.32i bitr4i abbii abid2 3eqtr2ri ) ACZBDEZAFGUCFHZ
      UDIZAJUCBKLZHZAJUGUDAFMUHUFAUHUEUHIUFUHUEUGUCBNOPUEUDUHUCBQRSTAUGUAUB $.
      $( [7-Nov-2003] $)
  $}

  ${
    $d x y z A $.
    $( The collection of ordinal numbers dominated by a set is an ordinal
       number.  (In general, not all collections of ordinal numbers are
       ordinal.)  Theorem 56 of [Suppes] p. 227. $)
    ondomon $p |- ( A e. B -> { x e. On | x ~<_ A } e. On ) $=
      ( vy vz wcel cv cdom wbr con0 crab word wtr wss wa wi wal domtr anim2i 
      anassrs onelon onelss imp cvv visset ssdomg ax-mp syl jca sylan exp31 
      com12 imp3a breq1 elrab 3imtr4g gen2 dftr2 mpbir ssrab2 ordon trssord 
      mp3an cpw csdm wb wral elisset domsdomtr canth2g sylan2 expcom a1d 
      r19.21aiv ss2rab sylibr ccrd cfv cardval2 fvex eqeltrri ssex elong 3syl 
      mpbiri ) BCFZAGZBHIZAJKZJFZWILZWIMZWIJNJLWKWLDGZEGZFZWNWIFZOWMWIFZPZEQDQW
      RDEWOWPWQWOWNJFZWNBHIZOWMJFZWMBHIZOZWPWQWOWSWTXCWSWOWTXCPWSWOWTXCXAWMWNHI
      ZOWTXCWSWOOZXAXDWTXCXDWTOXBXAWMWNBRSTXEXAXDWNWMUAXEWMWNNZXDWSWOXFWNWMUBUC
      WMUDFXFXDPDUEWMWNUDUFUGUHUIUJUKULUMWHWTAWNJWGWNBHUNUOWHXBAWMJWGWMBHUNUOUP
      UCUQDEWIURUSWHAJUTVAWIJVBVCWFWIWGBVDZVEIZAJKZNZWIUDFWJWKVFWFWHXHPZAJVGZXJ
      WFBUDFZXLBCVHXMXKAJXMXKWGJFWHXMXHWHBXGVEIXHXMWGBXGVIBUDVJVKVLVMVNUHWHXHAJ
      VOVPWIXIXGVQVRXIUDAXGVSXGVQVTWAWBWIUDWCWDWE $.
      $( [27-Nov-2004] $) $( [7-Nov-2003] $)
  $}

  ${
    $d x y z A $.
    $( The class of ordinal numbers dominated by a set is a cardinal number.
       Theorem 59 of [Suppes] p. 228. $)
    ondomcard $p |- ( A e. B ->
                 ( card ` { x e. On | x ~<_ A } ) = { x e. On | x ~<_ A } ) $=
      ( vy wcel cvv cv cdom wbr con0 crab ccrd cfv wceq elisset cen wss wi 
      wral iscard2 ondomon wa wn csdm domsdomtr breq1 elrab simprbi word eloni 
      ordirr syl hbrab1 ax-17 hbbr elrabf biimpri mtand wb domtri con2bid 
      mpancom mpbird syl2an sdomnen expcom con2d visset ensym syl5 adantr 
      ontri1 sylan sylibrd r19.21aiva sylanbrc ) BCEBFEZAGZBHIZAJKZLMVTNZBCOWAV
      TJEZVTDGZPIZVTWCQZRZDJSVQDVTTABFUAZVQWFDJVQWCJEZUBWDWCVTEZUCZWEVQWDWJRWHV
      QWCVTPIZWJWDVQWIWKWIVQWKUCZWIVQUBWCVTUDIZWLWCBHIZBVTUDIZWMWIVQWCBVTUEWIWH
      WNVSWNAWCJVRWCBHUFUGUHVQWOVTBHIZUCZVQWBWQWGWBWPVTVTEZWBVTUIWRUCVTUJVTUKUL
      WRWBWPUBVSWPADVTJVSADJUMZWHAUNADVTBHWSWCHEAUNWCBEAUNUOVRVTBHUFUPUQURULWBV
      QWOWQUSWGWBVQUBWPWOVTBJFUTVAVBVCVDWCVTVEULVFVGVTWCDVHVIVJVKWBWHWEWJUSVQVT
      WCVLWGVMVNVOVPUL $.
      $( [2-Dec-2004] $) $( [7-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The union of a set of cardinals is a cardinal.  Theorem 18.14 of [Monk1]
       p. 133. $)
    carduni $p |- ( A e. B ->
                  ( A. x e. A ( card ` x ) = x -> ( card ` U. A ) = U. A ) ) $=
      ( vy wcel cv ccrd cfv wceq wral cuni wa wss wn con0 word wb ssonuni 
      fveq2 id eqeq12d rcla4v cardon eleq1 mpbii syl6com ssrdv syl5 imp eloni 
      onordi ordtri4 mpan 3syl cardonle syl elirr wi wex eluni cdom wbr cvv 
      uniexg visset carddom bicomd sseq1 sylan9bb elssuni ssdomg ax-mp syl5bi 
      ssel syl6 ex com13 syld com4r 19.23aiv sylbi mtoi mpbir2and ) BCEZAFZGHZW
      EIZABJZBKZGHZWIIZWDWHLZWKWJWIMZWJWIEZNZWLWIOEZWIPZWKWMWOLQZWDWHWPWDBOMWPW
      HBCRWHDBODFZBEZWHWSGHZWSIZWSOEZWGXBAWSBWEWSIZWFXAWEWSWEWSGSXDTUAUBZXBXAOE
      XCWSUCXAWSOUDUEUFUGUHUIZWIUJWJPWQWRWJWIUCUKWJWIULUMUNWLWPWMXFWIUOUPWLWNWJ
      WJEZWJUQWDWHWNXGURWNWHWDXGWNWJWSEZWTLZDUSWHWDXGURURZDWJBUTXIXJDXHWTXJWTWH
      WDXHXGWTWHXBWDXHXGURZURXEWDXBWTXKWDXBWTXKURWDXBLZWTWSWJMZXKXLWSWIVAVBZXMW
      TWDXNXAWJMZXBXMWDWIVCEZXNXOQBCVDXPXOXNWSVCEZXPXOXNQDVEZWSWIVCVCVFUMVGUPXA
      WSWJVHVIWTWSWIMZXNWSBVJXQXSXNURXRWSWIVCVKVLUPVMWSWJWJVNVOVPVQVRVSUIVTWAVQ
      UIWBWCVP $.
      $( [1-Nov-2003] $)
  $}

  ${
    $d x y z A $.  $d y z B $.
    $( The indexed union of a set of cardinals is a cardinal. $)
    cardiun $p |- ( A e. C -> ( A. x e. A ( card ` B ) = B ->
                  ( card ` U_ x e. A B ) = U_ x e. A B ) ) $=
      ( vz vy wcel ccrd cfv wceq wral ciun wa cv wrex cab cuni cvv abrexexg 
      visset eqeq1 rexbidv elab wi cardidm fveq2 id 3eqtr4a a1i r19.23aiv 
      sylbi rgen carduni mpi syl fvex dfiun2 fveq2i 3eqtr4g adantr iuneq2 
      adantl fveq2d 3eqtr3d ex ) BDGZCHIZCJABKZABCLZHIZVIJVFVHMZABVGLZHIZVLVJVI
      VFVMVLJVHVFENZVGJZABOZEPZQZHIZVRVMVLVFVQRGZVSVRJZAEBVGDSVTFNZHIZWBJZFVQKW
      AWDFVQWBVQGWBVGJZABOZWDVPWFEWBFTVNWBJVOWEABVNWBVGUAUBUCWEWDABWEWDUDANBGWE
      VGHIVGWCWBCUEWBVGHUFWEUGUHUIUJUKULFVQRUMUNUOVLVRHAEBVGCHUPUQZURWGUSUTVKVL
      VIHVHVLVIJVFABVGCVAVBZVCWHVDVE $.
      $( [3-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The smallest ordinal that strictly dominates a set is a cardinal. $)
    cardmin $p |- ( A e. B -> ( card ` |^| { x e. On | A ~< x } ) =
                      |^| { x e. On | A ~< x } ) $=
      ( vy cv csdm wbr con0 crab cint ccrd cfv wceq wcel wral iscard wrex 
      numthcor onintrab2 sylib cdom wa wn wi onelon ex syl breq2 elrab wss 
      ssrab2 onnmin mpan sylbir con2d syli cvv wb visset domtri sylibrd ax-17 
      hbrab1 hbint hbbr onminsb jctird domsdomtr syl6 r19.21aiv sylanbrc ) BAEZ
      FGZAHIZJZKLVOMVOHNZDEZVOFGZDVOOBCNZDVOPVSVMAHQZVPABCRZVMASTZVSVRDVOVSVQVO
      NZVQBUAGZBVOFGZUBVRVSWCWDWEVSWCBVQFGZUCZWDWCVSVQHNZWGVSVPWCWHUDWBVPWCWHVO
      VQUEUFUGWHWFWCWHWFWCUCZWHWFUBVQVNNZWIVMWFAVQHVLVQBFUHUIVNHUJWJWIVMAHUKVNV
      QULUMUNUFUOUPVQUQNVSWDWGURDUSVQBUQCUTUMVAVSVTWEWAVMWEAADBVOFVQBNAVBVQFNAV
      BADVNVMADHVCVDVEVLVOBFUHVFUGVGVQBVOVHVIVJVK $.
      $( [28-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( The class of all cardinal numbers is not a set (i.e. is a proper
       class).  Theorem 19.8 of [Eisenberg] p. 310. $)
    cardprc $p |- -. { x | ( card ` x ) = x } e. _V $=
      ( vy cv ccrd cfv wceq cab cvv wcel cuni cpw canth3 wss wn cdom wbr fvex 
      cardidm wb ax-17 hbab1 hbuni hbpw hbfv hbeq fveq2 id eqeq12d elabgf 
      ax-mp mpbir elssuni ssdomg mp2 carddom mpan mpbiri syl5ssr con0 cardon 
      ontri1 mp2an sylib pm2.65i uniexg mto ) ACZDEZVGFZAGZHIVJJZHIZVLVKDEZVKKZ
      DEZIZVKHLVLVOVMMZVPNZVLVODEZVMVOVLVSVMMZVOVKOPZVOHIZVOVKMZWAVNDQZVOVJIZWC
      WEVSVOFZVNRZWBWEWFSWDVIWFABVOHABVNDBCDIATZABVKABVJVIABUAUBUCUDZABBVSVOABV
      ODWHWIUDWIUEVGVOFZVHVSVGVOVGVODUFWJUGUHUIUJUKVOVJULUJVOVKHUMUNWBVLVTWASWD
      VOVKHHUOUPUQWGURVOUSIVMUSIVQVRSVNUTVKUTVOVMVAVBVCVDVJHVEVF $.
      $( [31-Oct-2004] $) $( [28-Oct-2003] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( A set is finite iff its cardinal is a natural number.  (Contributed by
       Jeff Madsen 2-Sep-2009.) $)
    ficard $p |- ( A e. B -> ( A e. Fin <-> ( card ` A ) e. om ) ) $=
      ( vx wcel cfn ccrd cfv com cv cen wbr wrex wa wceq carden wi cardnn eqtr 
      expcom syl eleq1a syld adantl sylbird r19.23adva isfi syl5ib eqcomd 
      mpbid ex ancld breq2 rcla4ev sylibr syl6 impbid ) ABDZAEDZAFGZHDZUQACIZJK
      ZCHLZUTURUQVBUTCHUQVAHDZMVBUSVAFGZNZUTAVABHOVDVFUTPUQVDVFUSVANZUTVDVEVANZ
      VFVGPVAQVFVHVGUSVEVARSTVAHUSUAUBUCUDUECAUFZUGUQUTUTAUSJKZMZURUQUTVJUQUTVJ
      UQUTMUSUSFGZNZVJUTVMUQUTVLUSUSQUHUCAUSBHOUIUJUKVKVCURVBVJCUSHVAUSAJULUMVI
      UNUOUP $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d A x y $.  $d X x y $.
    $( The cardinality of a non-empty finite set is one greater than the
       cardinality of the set with one element removed.  (Contributed by Jeff
       Madsen 2-Sep-2009.) $)
    dif1card $p |- ( ( A e. Fin /\ X e. A ) -> ( card ` A ) =
                                      suc ( card ` ( A \ { X } ) ) ) $=
      ( vx vy cfn wcel wa cv cen wbr com wrex ccrd cfv csn cdif csuc wceq isfi 
      biimpi adantr wi c0 wn n0i wo nn0suc breq2 biimpd en0 syl6ib pm2.24 syl6 
      com23 biimpcd reximdv com12 a1d jaoi syl impcom r19.23adva adantl w3a 
      cvv elisset cif breq1 eleq2 3anbi23d difeq1 breq1d imbi12d 0ex elimel 
      dif1en dedth cardennn peano2 syl3an3 difexg syl3an1 3exp imp suceq 
      eqeq2d biimprd 3adant2 mpd 3impd mpdd 3comr 3expia anassrs syld ) AEFZBAF
      ZGZACHZIJZCKLZAMNZABOZPZMNZQZRZWPXAWQWPXACASTUAWRXAADHZQZIJZDKLZXGWQXAXKU
      BZWPWQAUCRZUDZXLABUEXNWTXKCKWSKFZXNWTXKUBZXOWSUCRZWSXIRZDKLZUFXNXPUBZDWSU
      GXQXTXSXQWTXNXKXQWTXMXNXKUBXQWTAUCIJZXMXQWTYAWSUCAIUHUIAUJUKXMXKULUMUNXSX
      PXNWTXSXKWTXRXJDKXRWTXJWSXIAIUHUOUPUQURUSUTVAVBUTVCWRXJXGDKWPWQXHKFZXJXGU
      BZWQYBGZWPYCYDXJWPXGWQYBXJWPXGUBZYBXJWQYEWPYBXJWQVDZXGWPYFXDXHIJZXGWPAVEF
      ZYFYGUBZAEVFYHYIYBYHAUCVGZXIIJZBYJFZVDZYJXCPZXHIJZUBAUCAYJRZYFYMYGYOYPXJY
      KWQYLYBAYJXIIVHAYJBVIVJYPXDYNXHIAYJXCVKVLVMYJXHBAUCVEVNVOVPVQUTWPYBXJWQYG
      XGUBZWPXJYBWQYQUBZWPXJYBYRWPXJYBVDZYQWQYSXBXIRZYQWPXJXIKFYTYBAXIEVRXHVSVT
      WPYBYTYQUBXJWPYBGZYGYTXGUUAYGXEXHRZYTXGUBWPYBYGUUBUBWPYGYBUUBWPYGYBUUBXDV
      EFYGYBUUBWPXDXHVEVRAXCEWAWBWCUNWDUUBXGYTUUBXFXIXBXEXHWEWFWGUMUNWHWIURWCUN
      WJWKUQWLWMUNVAWNVBWOWI $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y z w A $.
    $( Value of the aleph function at a successor ordinal.  Definition 12(ii)
       of [Suppes] p. 91. $)
    alephsuc $p |- ( A e. On -> ( aleph ` suc A ) =
                    |^| { x e. On | ( aleph ` A ) ~< x } ) $=
      ( vy vz vw con0 wcel cale cfv cv csdm wbr crab cint cvv csuc wceq wrex 
      fvex numthcor ax-mp intexrab mpbi com ax-17 df-aleph breq1 rabbidv 
      inteqd rdgsucopab mpan2 ) BFGBHIZAJZKLZAFMZNZOGZBPHIUPQUNAFRZUQULOGURBHSA
      ULOTUAUNAFUBUCCDEUDBCJZUMKLZAFMZNUPOHEJZUDGCUEVBBGCUEVBUPGCUECDAUFUSULQZV
      AUOVCUTUNAFUSULUMKUGUHUIUJUK $.
      $( [22-Oct-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( Every aleph is a cardinal number.  Theorem 65 of [Suppes] p. 229. $)
    alephcard $p |- ( card ` ( aleph ` A ) ) = ( aleph ` A ) $=
      ( vx vy con0 wcel cale cfv ccrd wceq cv c0 csuc fveq2 fveq2d eqeq12d com 
      cardom aleph0 fveq2i 3eqtr4i csdm wbr crab cint cvv fvex cardmin ax-mp 
      alephsuc 3eqtr4a a1d wlim wral wa ciun wi visset cardiun adantl alephlim 
      mpan adantr 3eqtr4d ex tfinds wn card0 cdm wfn alephfnon fndm eleq2i 
      notbii ndmfv sylbir pm2.61i ) ADEZAFGZHGZVRIZBJZFGZHGZWBIZKFGZHGZWEICJZFG
      ZHGZWHIZWGLZFGZHGZWLIZVTBCAWAKIZWCWFWBWEWOWBWEHWAKFMZNWPOWAWGIZWCWIWBWHWQ
      WBWHHWAWGFMZNWROWAWKIZWCWMWBWLWSWBWLHWAWKFMZNWTOWAAIZWCVSWBVRXAWBVRHWAAFM
      ZNXBOPHGPWFWEQWEPHRSRTWGDEZWNWJXCWHWAUAUBBDUCUDZHGZXDWMWLWHUEEXEXDIWGFUFB
      WHUEUGUHXCWLXDHBWGUIZNXFUJUKWAULZWJCWAUMZWDXGXHUNZCWAWHUOZHGZXJWCWBXHXKXJ
      IZXGWAUEEZXHXLUPBUQZCWAWHUEURUHUSXIWBXJHXGWBXJIZXHXMXGXOXNCWAUEUTVAVBZNXP
      VCVDVEVQVFZKHGKVSVRVGXQVRKHXQAFVHZEZVFVRKIXSVQXRDAFDVIXRDIVJDFVKUHVLVMAFV
      NVOZNXTUJVP $.
      $( [25-Oct-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( No cardinal can be sandwiched between an aleph and its successor aleph.
       Theorem 67 of [Suppes] p. 229. $)
    alephnbtwn $p |- ( ( card ` B ) = B ->
                   -. ( ( aleph ` A ) e. B /\ B e. ( aleph ` suc A ) ) ) $=
      ( vx con0 wcel ccrd cfv wceq cale csuc wa wn wi csdm wbr wb eleq2 
      alephon cardsdomel ax-mp syl5bb adantl cv crab cint alephsuc eleq2d 
      biimpd breq2 onnminsb sylan9 con2d cardon eleq1 mpbii sylan2 sylbird 
      imnan sylib ex c0 n0i cdm wfn alephfnon fndm eleq2i notbii ndmfv sylbir 
      nsyl2 sucelon sylibr con3i a1d pm2.61i ) ADEZBFGZBHZAIGZBEZBAJZIGZEZKZLZM
      VQVSWFVQVSKZWAWDLZMWFWGWAVTBNOZWHVSWIWAPVQVSVTVREZWAWIVRBVTQVTDEWIWJPARVT
      BSTUAUBVQBDEZWIWHMVSVQWKKWDWIVQWDBVTCUCZNOZCDUDUEZEZWKWILVQWDWOVQWCWNBCAU
      FUGUHWMWICBWLBVTNUIUJUKULVSVRDEWKBUMVRBDUNUOUPUQWAWDURUSUTVQLWFVSWEVQWDVQ
      WAWDWBDEZVQWDWCVAHZWPWCBVBWPLWBIVCZEZLWQWSWPWRDWBIDVDWRDHVEDIVFTVGVHWBIVI
      VJVKAVLVMUBVNVOVP $.
      $( [10-Nov-2003] $)
  $}

  $( No set has equinumerosity between an aleph and its successor aleph. $)
  alephnbtwn2 $p |- -. ( ( aleph ` A ) ~< B /\ B ~< ( aleph ` suc A ) ) $=
    ( cvv wcel cale cfv csdm wbr csuc wa wn ccrd wceq cardidm alephnbtwn ax-mp 
    wb con0 alephon cardsdomel a1i cardsdom mpan2 alephcard eleq2i syl5rbbr 
    anbi12d mtbiri relsdom brrelexi adantl con3i pm2.61i ) BCDZAEFZBGHZBAIZEFZG
    HZJZKUNUTUOBLFZDZVAURDZJZVALFVAMVDKBNAVAOPUNUPVBUSVCUPVBQZUNUORDVEASUOBTPUA
    UNVAURLFZDZUSVCUNURRDVGUSQUQSBURCRUBUCVFURVAUQUDUEUFUGUHUTUNUSUNUPBURGUIUJU
    KULUM $.
    $( [3-Nov-2003] $)

  $( The power set of an aleph dominates the successor aleph.  (The Generalized
     Continuum Hypothesis says they are equinumerous.) $)
  alephsucpw $p |- ( aleph ` suc A ) ~<_ ~P ( aleph ` A ) $=
    ( csuc cale cfv cpw cdom wbr csdm wn fvex canth2 wi wa alephnbtwn2 imnan 
    mpbir ax-mp cvv wcel wb pwex domtri mp2an ) ABZCDZACDZEZFGZUGUEHGZIZUFUGHGZ
    UJUFACJZKUKUJLUKUIMIAUGNUKUIOPQUERSUGRSUHUJTUDCJUFULUAUEUGRRUBUCP $.
    $( [27-Aug-2005] $)

  $( The set exponentiation of 2 to the aleph-zero has cardinality of at least
     aleph-one.  (If we were to assume the Continuum Hypothesis, their
     cardinalities would be the same.) $)
  aleph1 $p |- ( aleph ` 1o ) ~<_ ( 2o ^m ( aleph ` (/) ) ) $=
    ( c1o cale cfv c0 csuc c2o cmap co cdom df-1o fveq2i cpw wbr alephsucpw 
    cvv wcel cen wb oprex fvex pw2en domen2 mp2an mpbi eqbrtri ) ABCDEZBCZFDBCZ
    GHZIAUFBJKUGUHLZIMZUGUIIMZDNUIOPUJUIQMUKULRFUHGSUHDBTUAUJUIUGOUBUCUDUE $.
    $( [7-Jul-2004] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Lemma for ~ alephordi . $)
    alephordlem1 $p |- ( A e. On -> ( aleph ` A ) ~< ( aleph ` suc A ) ) $=
      ( vx vy con0 wcel cale cfv cv csdm wbr crab cint csuc alephsuc wrex 
      alephon numthcor ax-mp ax-17 hbrab1 hbint hbbr breq2 onminsb syl5breqr ) 
      ADEAFGZBHZIJZBDKZLZAMFGUFIBANUHBDOZUFUJIJZUFDEUKAPBUFDQRUHULBBCUFUJICHZUF
      EBSUMIEBSBCUIUHBCDTUAUBUGUJUFIUCUDRUE $.
      $( [26-Oct-2003] $)

    $( Lemma for ~ alephordi . $)
    alephordlem2 $p |- ( ( B e. _V /\ Lim B ) ->
                       ( A e. B -> ( aleph ` A ) ~<_ ( aleph ` B ) ) ) $=
      ( vx cvv wcel wlim wa cale cfv wss cdom wbr cv ciun alephlim sseq2d 
      fveq2 ssiun2s syl5bir con0 wi alephon ssdomg ax-mp syl6 ) BDEBFGZABEZAHIZ
      BHIZJZUHUIKLZUFUJUHCBCMZHIZNZJUGUFUIUNUHCBDOPCBUMAUHULAHQRSUHTEUJUKUAAUBU
      HUITUCUDUE $.
      $( [26-Oct-2003] $)

    $( Strict ordering property of the aleph function. $)
    alephordi $p |- ( B e. On ->
                    ( A e. B -> ( aleph ` A ) ~< ( aleph ` B ) ) ) $=
      ( vx vy cv wcel cale cfv csdm wbr wi c0 csuc wceq eleq2 fveq2 breq2d 
      imbi12d noel pm2.21i con0 wo sdomtr alephordlem1 sylan2 expcom imim2d 
      com23 breq1d syl5bir a1d com3r jaod visset elsuc2 syl5ib wlim wral cdom 
      cen wn wa wss ciun cvv alephlim mpan sseq2d ssiun2s alephon ssdomg ax-mp 
      syl6 limsuc alephordlem2 sylbid imp domnsym syl fvex ensym ensdomtr ex 
      syl5 onelon limelon sylan syl5com mtod jcad brsdom syl6ibr tfinds ) ACEZF
      ZAGHZWNGHZIJZKZALFZWPLGHZIJZKADEZFZWPXCGHZIJZKZAXCMZFZWPXHGHZIJZKABFZWPBG
      HZIJZKCDBWNLNZWOWTWRXBWNLAOXOWQXAWPIWNLGPQRWNXCNZWOXDWRXFWNXCAOXPWQXEWPIW
      NXCGPQRWNXHNZWOXIWRXKWNXHAOXQWQXJWPIWNXHGPQRWNBNZWOXLWRXNWNBAOXRWQXMWPIWN
      BGPQRWTXBASTXCUAFZXIXGXKXSXDAXCNZUBXGXKKZXIXSXDYAXTXSXGXDXKXSXFXKXDXFXSXK
      XFXEXJIJZXKXSWPXEXJUCXCUDZUEUFUGUHXTXGXSXKXTXSXKKXGXTXKYBXSXTWPXEXJIAXCGP
      UIYCUJUKULUMXCADUNUOUPUHWNUQZWSXGDWNURYDWOWPWQUSJZWPWQUTJZVAZVBWRYDWOYEYG
      YDWOWPWQVCZYEYDYHWPDWNXEVDZVCWOYDWQYIWPWNVEFZYDWQYINCUNZDWNVEVFVGVHDWNXEA
      WPXCAGPVIUJWPUAFYHYEKAVJWPWQUAVKVLVMYDWOYGYDWOVBZYFWQAMZGHZIJZYLYNWQUSJZY
      OVAYDWOYPYDWOYMWNFZYPWNAVNYJYDYQYPKYKYMWNVOVGVPVQYNWQVRVSYFAUAFZYOYLYFWPY
      NIJZYOYRYFWQWPUTJZYSYOKWPWQWNGVTWAYTYSYOWQWPYNWBWCVSAUDWDWNUAFZWOYRYDWNAW
      EYJYDUUAYKWNVEWFVGWGWHWIWCWJWPWQWKWLUKWM $.
      $( [26-Oct-2003] $)
  $}

  $( Ordering property of the aleph function. $)
  alephord $p |- ( ( A e. On /\ B e. On ) ->
                 ( A e. B <-> ( aleph ` A ) ~< ( aleph ` B ) ) ) $=
    ( con0 wcel wa cale cfv csdm wbr wi alephordi adantl cdom cen wn wss wne 
    con3d wb alephon domtri mp2an syl5ib adantr ontri1 sylibrd wceq fveq2 
    eqeng ax-mp syl necon3bi a1i anim12d onelpss brsdom impbid ) ACDZBCDZEZABDZ
    AFGZBFGZHIZUSVAVDJURABKLUTVBVCMIZVBVCNIZOZEZVAVDUTVHABPZABQZEVAUTVEVIVGVJUT
    VEBADZOZVIURVEVLJUSURVCVBHIZOZVLVEURVKVMBAKRVBCDZVCCDVEVNSATZBTVBVCCCUAUBUC
    UDABUEUFVGVJJUTVFABABUGVBVCUGZVFABFUHVOVQVFJVPVBVCCUIUJUKULUMUNABUOUFVBVCUP
    UCUQ $.
    $( [26-Oct-2003] $)

  $( Ordering property of the aleph function.  Theorem 8A(a) of [Enderton]
     p. 213 and its converse. $)
  alephord2 $p |- ( ( A e. On /\ B e. On ) ->
                  ( A e. B <-> ( aleph ` A ) e. ( aleph ` B ) ) ) $=
    ( con0 wcel wa cale cfv csdm wbr alephord ccrd wb alephon cardsdomel ax-mp 
    alephcard eleq2i bitri syl6bb ) ACDBCDEABDAFGZBFGZHIZTUADZABJUBTUAKGZDZUCTC
    DUBUELAMTUANOUDUATBPQRS $.
    $( [3-Nov-2003] $)

  $( Ordering property of the aleph function.  Theorem 66 of [Suppes]
     p. 229. $)
  alephord2i $p |- ( B e. On ->
                   ( A e. B -> ( aleph ` A ) e. ( aleph ` B ) ) ) $=
    ( con0 wcel cale cfv wa onelon alephord2 biimpd expimpd mpcom ex ) BCDZABDZ
    AEFBEFDZACDZNOGPBAHQNOPQNGOPABIJKLM $.
    $( [25-Oct-2003] $)

  $( Ordering property of the aleph function. $)
  alephord3 $p |- ( ( A e. On /\ B e. On ) ->
                  ( A C_ B <-> ( aleph ` A ) C_ ( aleph ` B ) ) ) $=
    ( con0 wcel wa wn cale cfv wss wb alephord2 ancoms notbid ontri1 alephon 
    mp2an a1i 3bitr4d ) ACDZBCDZEZBADZFBGHZAGHZDZFZABIUDUCIZUAUBUETSUBUEJBAKLMA
    BNUGUFJZUAUDCDUCCDUHAOBOUDUCNPQR $.
    $( [11-Nov-2003] $)

  $( The aleph function is one-to-one. $)
  aleph11 $p |- ( ( A e. On /\ B e. On ) ->
                ( ( aleph ` A ) = ( aleph ` B ) <-> A = B ) ) $=
    ( con0 wcel wa wceq cale cfv wss alephord3 wb ancoms anbi12d eqss 3bitr4g 
    bicomd ) ACDZBCDZEZABFZAGHZBGHZFZSABIZBAIZEUAUBIZUBUAIZETUCSUDUFUEUGABJRQUE
    UGKBAJLMABNUAUBNOP $.
    $( [3-Aug-2004] $)

  $( A set dominated by an aleph is strictly dominated by its successor aleph
     and vice-versa. $)
  alephsucdom $p |- ( B e. On ->
                    ( A ~<_ ( aleph ` B ) <-> A ~< ( aleph ` suc B ) ) ) $=
    ( cvv wcel con0 cale cfv cdom wbr csuc csdm wb wi wa domsdomtr ex 
    alephordlem1 syl5com adantl wn fvex domtri mpan2 alephnbtwn2 imnan mpbir 
    con2i syl5bir adantr impbid reldom brrelexi relsdom pm5.21ni a1d pm2.61i ) 
    ACDZBEDZABFGZHIZABJFGZKIZLZMUQURVCUQURNUTVBURUTVBMUQUTUSVAKIZVBURUTVDVBAUSV
    AOPBQRSUQVBUTMURUQUTUSAKIZTZVBUQUSCDUTVFLBFUAAUSCCUBUCVEVBVEVBTMVEVBNTBAUDV
    EVBUEUFUGUHUIUJPUQTVCURUTUQVBAUSHUKULAVAKUMULUNUOUP $.
    $( [3-Nov-2003] $)

  ${
    $d x A $.
    $( An alternate representation of a successor aleph.  Using this theorem we
       could define the aleph function with ` { z e. On | z ~<_ x } ` in place
       of ` |^| { z e. On | x ~< z } ` in ~ df-aleph . $)
    alephsuc2 $p |- ( A e. On ->
                ( aleph ` suc A ) = { x e. On | x ~<_ ( aleph ` A ) } ) $=
      ( con0 wcel cv cale cfv cdom wbr crab csuc csdm alephsucdom rabbidv ccrd 
      alephcard cardval2 eqtr3i syl6reqr ) BCDZAEZBFGHIZACJUABKZFGZLIZACJZUDTUB
      UEACUABMNUDOGUDUFUCPAUDQRS $.
      $( [3-Nov-2003] $)
  $}

  $( Every aleph is greater than or equal to the set of natural numbers. $)
  alephgeom $p |- ( A e. On <-> om C_ ( aleph ` A ) ) $=
    ( con0 wcel com cale cfv wss c0 0ss wb 0elon alephord3 mpan mpbii aleph0 
    syl5ssr cdm wn peano1 word ordom ord0 ordtri1 mp2an con2bii mpbi ndmfv 
    sseq2d mtbiri con4i wfn wceq alephfnon fndm ax-mp syl6eleq impbii ) ABCZDAE
    FZGZURHEFZUSDURHAGZVAUSGZAIHBCURVBVCJKHALMNOPUTAEQZBAVDCZUTVERZUTDHGZHDCZVG
    RSVGVHDTHTVGVHRJUAUBDHUCUDUEUFVFUSHDAEUGUHUIUJEBUKVDBULUMBEUNUOUPUQ $.
    $( [11-Nov-2003] $)

  $( Every aleph is a limit ordinal. $)
  alephislim $p |- ( A e. On <-> Lim ( aleph ` A ) ) $=
    ( con0 wcel com cale cfv wss wlim alephgeom ccrd cardlim alephcard sseq2i 
    wceq wb limeq ax-mp 3bitr3i bitri ) ABCDAEFZGZTHZAIDTJFZGUCHZUAUBTKUCTDALZM
    UCTNUDUBOUEUCTPQRS $.
    $( [11-Nov-2003] $)

  ${
    $d x y A $.
    $( The argument of the aleph function is less than or equal to its value.
       Exercise 2 of [TakeutiZaring] p. 91.  (Later, in ~ alephfp2 , we will
       that equality can sometimes hold.) $)
    alephle $p |- ( A e. On -> A C_ ( aleph ` A ) ) $=
      ( vx vy cv cale cfv wss wceq id fveq2 sseq12d con0 wcel wral wa 
      alephord2i imp wi ontr2 onelon alephon sylancl mpan2d ralimdva wn wb 
      ontri1 mpan2 elirr eleq1 rcla4cv mtoi syl5bir syld tfis3 ) BDZUPEFZGZCDZU
      SEFZGZAAEFZGBCAUPUSHZUPUSUQUTVCIUPUSEJKUPAHZUPAUQVBVDIUPAEJKUPLMZVACUPNUS
      UQMZCUPNZURVEVAVFCUPVEUSUPMZOZVAUTUQMZVFVEVHVJUSUPPQUSLMUQLMZVAVJOVFRVIUS
      UTUQSUPUSTUPUAZUBUCUDVEURUQUPMZUEZVGVEVKURVNUFVLUPUQUGUHVGVMUQUQMZUQUIVFV
      OCUQUPUSUQUQUJUKULUMUNUO $.
      $( [9-Nov-2003] $)

    $( Given any transfinite cardinal number ` A ` , there is exactly one aleph
       that is equal to it.  Here we compute that aleph _explicitly_. $)
    cardaleph $p |- ( ( om C_ A /\ ( card ` A ) = A ) ->
                  A = ( aleph ` |^| { x e. On | A C_ ( aleph ` x ) } ) ) $=
      ( vy com wss ccrd cfv wceq wa cv cale con0 crab cint c0 csuc wrex wlim 
      wo wcel cardon eleq1 mpbii alephle fveq2 sseq2d rcla4ev mpdan onintrab2 
      sylib word eloni w3o ordzsl 3orass bitri 3syl adantl wi ax-17 hbrab1 
      hbint hbfv hbss onminsb a1i aleph0 syl6eq sseq1d biimprd anim12d eqss 
      syl6ibr com12 ancoms wn onnminsb visset sucid eleq2 mpbiri syl5 imp csdm 
      wbr alephsuc sylan9eqr eleq2d biimpd cdom breq2 cvv wb fvex domtri mpan2 
      sylibrd carddom syl sseq1 alephcard sseq2i syl6bb sylibd sylan9r mtod 
      exp32 r19.23adv onelon sylan adantld mpcom alephon onelssi nsyl nrexdv 
      adantr ciun alephlim eliun mtbird ex jaod onsseleq mpbid ord sylsyld mpd 
      ) DBEZBFGZBHZIZBAJZKGZEZALMZNZOHZYQCJZPZHZCLQZYQRZSZSZBYQKGZHZYKUUEYIYKBL
      TZYQLTZUUEYKYJLTUUHBUAYJBLUBUCZUUHYOALQZUUIUUHBBKGZEZUUKBUDYOUUMABLYMBHYN
      UULBYMBKUEUFUGUHZYOAUIUJZUUIYQUKZUUEYQULUUPYRUUBUUCUMUUECYQUNYRUUBUUCUOUP
      UJUQURYLYRUUGUUDYKYIYRUUGUSYRYKYIIZUUGYRUUQBUUFEZUUFBEZIUUGYRYKUURYIUUSYK
      UURUSYRYKUUHUUKUURUUJUUNYOUURAACBUUFYSBTAUTACYQKYSKTAUTACYPYOACLVAVBVCVDY
      MYQHYNUUFBYMYQKUEUFVEZUQVFYRUUSYIYRUUFDBYRUUFOKGDYQOKUEVGVHVIVJVKBUUFVLVM
      VNVOYKUUDUUGUSYIYKUUHUUDBUUFTZVPZUUGUUJYKUUBUVBUUCYKUUAUVBCLYKYSLTZUUAUVB
      YKUVCUUAIZIUVABYSKGZEZUVDUVFVPZYKUVCUUAUVGUVCYSYQTZUVGUUAYOUVFAYSYMYSHYNU
      VEBYMYSKUEUFVQZUUAUVHYSYTTYSCVRVSYQYTYSVTWAWBWCURUVDUVABUVEYMWDWEZALMNZTZ
      YKUVFUVDUVAUVLUVDUUFUVKBUUAUVCUUFYTKGUVKYQYTKUEAYSWFWGWHWIYKUVLYJUVEFGZEZ
      UVFYKUUHUVLUVNUSUUJUUHUVLBUVEWJWEZUVNUUHUVLUVEBWDWEZVPZUVOUVJUVPABYMBUVEW
      DWKVQUUHUVEWLTZUVOUVQWMYSKWNZBUVELWLWOWPWQUUHUVRUVNUVOWMUVSBUVELWLWRWPWQW
      SYKUVNBUVMEUVFYJBUVMWTUVMUVEBYSXAXBXCXDXEXFXGXHYKUUHUUCUVBUSUUJUUHUUCUVBU
      UHUUCIZUVABUVETZCYQQZUUHUWBVPUUCUUHUWACYQUUHUVHIZUVFUWAUVCUWCUVGUUIUVHUVC
      UUHYQYSXIUUOXJUVCUVHUVGUUHUVIXKXLUVEBYSXMXNXOXPXQUVTUVABCYQUVEXRZTUWBUVTU
      UFUWDBUUIUUCUUFUWDHUUHCYQLXSUUOXJWHCBYQUVEXTXCYAYBWSYCUUHUVAUUGUUHUURUVAU
      UGSZUUHUUKUURUUNUUTWSUUHUUFLTUURUWEWMYQXMBUUFYDWPYEYFYGURYCYH $.
      $( [9-Nov-2003] $)

    $( Every transfinite cardinal is an aleph and vice-versa.  Theorem 8A(b) of
       [Enderton] p. 213 and its converse. $)
    cardalephex $p |- ( om C_ A ->
                   ( ( card ` A ) = A <-> E. x e. On A = ( aleph ` x ) ) ) $=
      ( vy com wss ccrd cfv wceq cv cale con0 wrex wa crab cint wcel simpl 
      cardaleph sseq2d alephgeom syl6bbr mpbid fveq2 eqeq2d rcla4ev syl11anc 
      ex wi alephcard id 3eqtr4a a1i r19.23aiv impbid1 ) DBEZBFGZBHZBAIZJGZHZAK
      LZUOUQVAUOUQMZBCIJGECKNOZKPZBVCJGZHZVAVBUOVDUOUQQVBUODVEEVDVBBVEDCBRZSVCT
      UAUBVGUTVFAVCKURVCHUSVEBURVCJUCUDUEUFUGUTUQAKUTUQUHURKPUTUSFGUSUPBURUIBUS
      FUCUTUJUKULUMUN $.
      $( [6-Nov-2004] $) $( [5-Nov-2003] $)
  $}

  ${
    $d x A $.
    $( Two ways to express the property of being a transfinite cardinal. $)
    isinfcard $p |- ( ( om C_ A /\ ( card ` A ) = A ) <-> A e. ran aleph ) $=
      ( vx cv cale cfv wceq con0 wrex crn wcel com wss ccrd wa eqcom rexbii 
      wfn wb alephfnon fvelrnb ax-mp cardalephex pm5.32i sseq2 alephgeom 
      biimpi syl5cbir r19.23aiv pm4.71ri bitr4i 3bitr4ri ) BCZDEZAFZBGHZAUMFZBG
      HZADIJZKALZAMEAFZNZUNUPBGUMAOPDGQURUORSBGADTUAVAUSUQNUQUSUTUQBAUBUCUQUSUP
      USBGUPUSKUMLZULGJZAUMKUDVCVBULUEUFUGUHUIUJUK $.
      $( [18-Nov-2004] $) $( [9-Nov-2003] $)
  $}

  $( Two ways to express the property of being a cardinal number. $)
  iscard3 $p |- ( ( card ` A ) = A <-> A e. ( om u. ran aleph ) ) $=
    ( ccrd cfv wceq com wcel cale crn wo cun wn wss con0 word cardon eleq1 
    mpbii eloni ordom ordtri2or mpan2 3syl ord wa isinfcard biimpi expcom syld 
    orrd cardnn bicomi simprbi jaoi impbii elun bitr4i ) ABCZADZAEFZAGHZFZIZAEU
    TJFURVBURUSVAURUSKEALZVAURUSVCURAMFZANZUSVCIZURUQMFVDAOUQAMPQARVEENVFSAETUA
    UBUCVCURVAVCURUDZVAAUEZUFUGUHUIUSURVAAUJVAVCURVGVAVHUKULUMUNAEUTUOUP $.
    $( [19-Nov-2004] $) $( [9-Nov-2003] $)

  $( Two ways to express the class of all cardinal numbers, which consists of
     the finite ordinals in ` om ` plus the transfinite alephs. $)
  cardnum $p |- { x | ( card ` x ) = x } = ( om u. ran aleph ) $=
    ( com cale crn cun cv ccrd cfv wceq cab wcel iscard3 bicomi abbi2i eqcomi 
    ) BCDEZAFZGHQIZAJRAPRQPKQLMNO $.
    $( [10-Sep-2004] $)

  ${
    $d x F $.  $d x A $.
    $( The union of the image of a mapping to cardinals is a cardinal.
       Proposition 11.16 of [TakeutiZaring] p. 104. $)
    carduniima $p |- ( A e. B -> ( F : A --> ( om u. ran aleph ) ->
                     U. ( F " A ) e. ( om u. ran aleph ) ) ) $=
      ( vx wcel com cale crn cun wf cima cuni ccrd cfv wceq cvv wfun funimaexg 
      ffun sylan expcom cv wral carduni wfn ffn fnima syl frn eqsstrd sseld 
      iscard3 syl6ibr r19.21aiv syl5 syli syl6ib ) ABEZAFGHIZCJZCAKZLZMNVBOZVBU
      SEUTURVAPEZVCUTURVDCQURVDUTCABRAUSCSTUAVDDUBZMNVEOZDVAUCVCUTDVAPUDUTVFDVA
      UTVEVAEVEUSEVFUTVAUSVEUTVACHZUSUTCAUEVAVGOAUSCUFACUGUHAUSCUIUJUKVEULUMUNU
      OUPVBULUQ $.
      $( [4-Nov-2004] $)

    $( If a mapping to cardinals has an infinite value, then the union of its
       image is an infinite cardinal.  Corollary 11.17 of [TakeutiZaring]
       p. 104. $)
    cardinfima $p |- ( A e. B -> ( ( F : A --> ( om u. ran aleph ) /\
         E. x e. A ( F ` x ) e. ran aleph ) -> U. ( F " A ) e. ran aleph ) ) $=
      ( wcel cvv com cale crn cun wf cv cfv wrex wa cima cuni wi elisset wss 
      ccrd wceq isinfcard bicomi simplbi wfn fnfvelrn ex fnima eleq2d sylibrd 
      elssuni syl6 imp ffn sylan sylan9ssr anasss a1i carduniima iscard3 
      syl6ibr adantrd jcad syl6ib exp4d r19.23adv expimpd syl ) BCEBFEZBGHIZJZD
      KZALZDMZVKEZABNZODBPZQZVKEZRBCSVJVMVQVTVJVMOVPVTABVJVMVNBEZVPVTRRVJVMWAVP
      VTVJVMWAVPOZOZGVSTZVSUAMVSUBZOVTVJWCWDWEWCWDRVJVMWAVPWDVPVMWAOGVOVSVPGVOT
      ZVOUAMVOUBZWFWGOVPVOUCUDUEDBUFZWAVOVSTZVMWHWAWIWHWAVOVREZWIWHWAVODIZEZWJW
      HWAWLBVNDUGUHWHVRWKVOBDUIUJUKVOVRULUMUNBVLDUOUPUQURUSVJVMWEWBVJVMVSVLEWEB
      FDUTVSVAVBVCVDVSUCVEVFUNVGVHVI $.
      $( [4-Nov-2004] $)
  $}

  ${
    $d x y z $.
    $( Aleph is an order isomorphism of the class of ordinal numbers onto the
       class of infinite cardinals.  Definition 10.27 of [TakeutiZaring]
       p. 90. $)
    alephiso $p |- aleph Isom _E , _E ( On ,
                   { x | ( om C_ x /\ ( card ` x ) = x ) } ) $=
      ( vy vz con0 com cv wss ccrd cfv wceq wa cab cep cale wiso wf1o wbr wb 
      wral df-iso wf1 wfo df-f1o wf wi dff13 wfn crn df-fo alephfnon wcel 
      isinfcard bicomi abbi2i mpbir2an fof ax-mp aleph11 biimpd rgen2a 
      alephord2 epel fvex epelc 3bitr4g ) DEAFZGVFHIVFJKZALZMMNODVHNPZBFZCFZMQZ
      VJNIZVKNIZMQZRZCDSBDSBCDVHMMNTVIDVHNUAZDVHNUBZDVHNUCVQDVHNUDZVMVNJZVJVKJZ
      UEZCDSBDSBCDVHNUFVRVSVRNDUGNUHZVHJDVHNUIUJVGAWCVGVFWCUKVFULUMUNUOZDVHNUPU
      QWBBCDVJDUKVKDUKKZVTWAVJVKURUSUTUOWDUOVPBCDWEVJVKUKVMVNUKVLVOVJVKVABCVBVM
      VNVJNVCVKNVCVDVEUTUO $.
      $( [3-Aug-2004] $)
  $}

  $( The class of all transfinite cardinal numbers (the range of the aleph
     function) is a proper class.  Proposition 10.26 of [TakeutiZaring]
     p. 90. $)
  alephprc $p |- -. ran aleph e. _V $=
    ( vx cale crn cvv wcel com cun cv ccrd cfv wceq cab cardprc cardnum eleq1i 
    mtbi omex unexg mpan mto ) BCZDEZFUAGZDEZAHZIJUEKALZDEUDAMUFUCDANOPFDEUBUDQ
    FUADDRST $.
    $( [11-Dec-2004] $) $( [11-Nov-2003] $)

  $( The class of transfinite cardinals (the range of the aleph function) is a
     subclass of the class of ordinal numbers. $)
  alephsson $p |- ran aleph C_ On $=
    ( vx cale crn con0 cv wcel com wss ccrd cfv wceq wa isinfcard cardon eleq1 
    mpbii adantl sylbir ssriv ) ABCZDAEZTFGUAHZUAIJZUAKZLUADFZUAMUDUEUBUDUCDFUE
    UANUCUADOPQRS $.
    $( [30-Dec-2004] $) $( [11-Nov-2003] $)

  $( The union of the class of transfinite cardinals (the range of the aleph
     function) is the class of ordinal numbers. $)
  unialeph $p |- U. ran aleph = On $=
    ( cale crn cuni con0 wcel wn wceq cvv alephprc uniexb mtbi elisset mto 
    word wo wss alephsson ssorduni ax-mp ordeleqon mpbi ori ) ABZCZDEZFUDDGZUEU
    DHEZUCHEUGIUCJKUDDLMUEUFUDNZUEUFOUCDPUHQUCRSUDTUAUBS $.
    $( [23-Jan-2005] $) $( [11-Nov-2003] $)

  ${
    $d x y z w v $.  $d z w v H $.
    alephfplem.1 $e |- H = ( rec ( { <. x , y >. | y = ( aleph ` x ) } ,
                       ( aleph ` (/) ) ) |` om ) $.
    $( Lemma for ~ alephfp . $)
    alephfplem1 $p |- ( H ` (/) ) e. ran aleph $=
      ( c0 cfv cale crn cv wceq copab crdg com cres fveq1i cvv wcel fvex fr0g 
      ax-mp eqtri con0 wfn alephfnon 0elon fnfvelrn mp2an eqeltri ) ECFZEGFZGHZ
      UIEBIAIGFJABKZUJLMNZFZUJECUMDOUJPQUNUJJEGRUJPULSTUAGUBUCEUBQUJUKQUDUEUBEG
      UFUGUH $.
      $( [6-Nov-2004] $)

    $( Lemma for ~ alephfp . $)
    alephfplem2 $p |- ( w e. om -> ( H ` suc w ) = ( aleph ` ( H ` w ) ) ) $=
      ( vz cv com wcel cfv cale cvv csuc wceq fvex c0 ax-17 copab crdg cres 
      hbopab1 hbrdg hbres hbxfr hbfv fveq2 frsucopab mpan2 ) CGZHIUIDJZKJZLIUIM
      DJUKNUJKOABFPKJZUIAGZKJZUKLDFGZULIAQZUOUIIAQZAFUJKUOKIAQAFUIDAFDBGUNNZABR
      ZULSZHTEAFUTHAFULUSURABFUAUPUBUOHIAQUCUDUQUEUEEUMUJKUFUGUH $.
      $( [6-Nov-2004] $)

    $( Lemma for ~ alephfp . $)
    alephfplem3 $p |- ( v e. om -> ( H ` v ) e. ran aleph ) $=
      ( vw cv com wcel wceq cfv cale crn equid c0 csuc fveq2 eleq1d 
      alephfplem1 a1i wi alephfplem2 con0 wfn fnfvelrn alephfnon alephsson 
      sseli sylancr syl5bir a1d finds2 mpi ) CGZHIBGZUOJZUNDKZLMZIZBNUSODKZURIZ
      FGZDKZURIZVBPZDKZURIZUPCFUNOJUQUTURUNODQRUNVBJUQVCURUNVBDQRUNVEJUQVFURUNV
      EDQRVAUPABDESTVBHIZVDVGUAUPVHVGVCLKZURIZVDVHVFVIURABFDEUBRLUCUDVCUCIVJVDU
      CVCLUEUFURUCVCUGUHUIUJUKULUM $.
      $( [6-Nov-2004] $)

    $( Lemma for ~ alephfp . $)
    alephfplem4 $p |- U. ( H " om ) e. ran aleph $=
      ( vz com cale crn cun wf cv cfv wcel wrex cima cuni wss wfn wral ffnfv 
      wceq copab c0 crdg cres frfnom fneq1i mpbir alephfplem3 rgen mpbir2an 
      ssun2 fss mp2an peano1 alephfplem1 fveq2 eleq1d rcla4ev cvv wa wi omex 
      cardinfima ax-mp ) FFGHZIZCJZEKZCLZVFMZEFNZCFOPVFMZFVFCJZVFVGQVHVNCFRZVKE
      FSEFVFCTVOBKAKGLUAABUBZUCGLZUDFUEZFRVQVPUFFCVRDUGUHVKEFABECDUIUJUKVFFULFV
      FVGCUMUNUCFMUCCLZVFMZVLUOABCDUPVKVTEUCFVIUCUAVJVSVFVIUCCUQURUSUNFUTMVHVLV
      AVMVBVCEFUTCVDVEUN $.
      $( [5-Nov-2004] $)

    $( The aleph function has a fixed point.  Similar to Proposition 11.18 of
       [TakeutiZaring] p. 104, except that we construct an actual example of a
       fixed point rather than just showing its existence.  See ~ alephfp2 for
       an abbreviated version just showing existence. $)
    alephfp $p |- ( aleph ` U. ( H " om ) ) = U. ( H " om ) $=
      ( vz vv com cima cuni cv cale cfv wceq con0 wrex crn wcel alephfplem4 
      wss ccrd wa isinfcard cardalephex biimpa sylbir ax-mp wn alephle elirr 
      wi wfun wb wfn copab c0 crdg cres frfnom fneq1i mpbir fnfun eluniima 
      alephfplem3 alephsson sseli alephord2i 3syl csuc alephfplem2 peano2 
      fnfvelrn mpan fnima syl6eleqr syl eqeltrrd elssuni sseld syld r19.23aiv 
      sylbi eleq2 imbi12d mpbii mtoi anim12i word ordtri4 eloni alephon onordi 
      sylancl adantr mpbird eqeq2 adantl eqcomd fveq2d r19.23aiva ) CGHZIZEJZKL
      ZMZENOZXAKLZXAMZXAKPZQZXEABCDRXIGXASZXATLXAMZUAXEXAUBXJXKXEEXAUCUDUEUFXDX
      GENXBNQZXDUAZXGXFXCMZXMXAXBKXMXBXAXMXBXAMZXBXCMZXMXPXBXCSZXBXCQZUGZUAZXLX
      QXDXSXBUHXDXRXCXCQZXCUIXDXBXAQZXCXAQZUJXRYAUJYBXBFJZCLZQZFGOZYCCUKZYBYGUL
      CGUMZYHYIBJAJKLMABUNZUOKLZUPGUQZGUMYKYJURGCYLDUSUTZGCVAUFFGXBCVBUFYFYCFGY
      DGQZYFXCYEKLZQZYCYNYEXHQYENQYFYPUJABFCDVCXHNYEVDVEXBYEVFVGYNYOXAXCYNYOWTQ
      YOXASYNYDVHZCLZYOWTABFCDVIYNYQGQZYRWTQYDVJYSYRCPZWTYIYSYRYTQYMGYQCVKVLYIW
      TYTMYMGCVMUFVNVOVPYOWTVQVOVRVSVTWAXDYBXRYCYAXAXCXBWBXAXCXCWBWCWDWEWFXLXPX
      TULZXDXBWGXCWGUUAXLXBXCWHXBWIXCXBWJWKWLWMWNXDXOXPULXLXAXCXBWOWPWNWQWRXDXG
      XNULXLXAXCXFWOWPWNWSUF $.
      $( [6-Nov-2004] $)
  $}

  ${
    $d x y z $.
    $( The aleph function has at least one fixed point.  Proposition 11.18 of
       [TakeutiZaring] p. 104.  See ~ alephfp for an actual example of a fixed
       point.  Compare the inequality ~ alephle that holds in general.  Note
       that if ` x ` is a fixed point, then ` aleph `` aleph `` aleph `` ` ...
       ` aleph `` x = x ` . $)
    alephfp2 $p |- E. x e. On ( aleph ` x ) = x $=
      ( vz vy cv cale cfv wceq copab c0 crdg com cres cima cuni con0 wcel wrex 
      crn alephsson eqid alephfplem4 sselii alephfp fveq2 id eqeq12d rcla4ev 
      mp2an ) BDCDEFGCBHIEFJKLZKMNZOPUJEFZUJGZADZEFZUMGZAOQEROUJSCBUIUITZUAUBCB
      UIUPUCUOULAUJOUMUJGZUNUKUMUJUMUJEUDUQUEUFUGUH $.
      $( [6-Nov-2004] $)
  $}

  ${
    $d x y z w A $.
    $( An alternate way to express the value of the aleph function for nonzero
       arguments.  Theorem 64 of [Suppes] p. 229. $)
    alephval2 $p |- ( ( A e. On /\ (/) e. A ) -> ( aleph ` A ) =
                    |^| { x e. On | A. y e. A ( aleph ` y ) ~< x } ) $=
      ( vz con0 wcel c0 wa cale cfv cv csdm wbr wral crab wn cint wceq 
      alephordi r19.21aiv alephon jctil breq2 ralbidv elrab sylibr adantr com 
      cdom wo wi cvv omex visset entri3 mp2an ccrd wss wrex wb alephord ancoms 
      breq1 cen cardid sdomen1 syl5rbbr sylan9bb fveq2 breq1d rcla4v sdomirr 
      sdomen2 syl5bbr mtbiri nsyli com12 adantl sylbird exp31 r19.23adv 
      cardidm cardalephex mpbii syl5 carddom cardom sseq1i bitr3i syl5ib wne 
      ne0i r19.2z ex domtr alephgeom ssdomg ax-mp sylbi sylan2 domnsym syl 
      onelon expr rexnal syl6ib expimpd a1d com3r jaod mpi oneli cardsdomel 
      alephcard eleq2i syl6rbb ibi simprbi con3i syl6 ssrab2 oneqmini syl11anc 
      ) CEFZGCFZHZCIJZBKZIJZAKZLMZBCNZAEOZFZDKZYMFZPZDYGNZYGYMQRZYDYNYEYDYGEFZY
      IYGLMZBCNZHYNYDUUBYTYDUUABCYHCSTCUAZUBYLUUBAYGEYJYGRYKUUABCYJYGYILUCUDUEU
      FUGYFYQDYGYFYOYGFZYIYOLMZBCNZPZYQYFYOYGLMZUUGUUDYFUHYOUIMZYOUHUIMZUJZUUHU
      UGUKZUHULFZYOULFZUUKUMDUNZUHYOULULUOUPYFUUIUULUUJYDUUIUULUKYEYDUHYOUQJZUR
      ZUULUUIYDUUPYJIJZRZAEUSZUULUUQYDUUSUULAEYDYJEFZUUSUULYDUVAHZUUSHUUHYJCFZU
      UGUVBUVCUURYGLMZUUSUUHUVAYDUVCUVDUTYJCVAVBUUSUUPYGLMZUVDUUHUUPUURYGLVCUUN
      UUPYOVDMZUVEUUHUTUUOYOVEZUUPYOYGULVFUPVGVHUUSUVCUUGUKUVBUVCUUSUUGUVCUUFUU
      RYOLMZUUSUUEUVHBYJCYHYJRYIUURYOLYHYJIVIVJVKUUSUVHUURUURLMZUURVLUUSUURUUPL
      MZUVIUVHUUPUURUURLUCUUNUVFUVJUVHUTUUOUVGUUPYOUURULVMUPVNVOVPVQVRVSVTWAUUQ
      UUPUQJUUPRUUTYOWBAUUPWCWDWEUUIUHUQJZUUPURZUUQUUMUUNUVLUUIUTUMUUOUHYOULULW
      FUPUVKUHUUPWGWHWIWJUGUUJUUHYFUUGUUJYFUUGUKUUHUUJYDYEUUGYEUUJYDHZUUGYEUVMU
      UEPZBCUSZUUGYECGWKZUVMUVOUKCGWLUVPUVNBCNZUVOUVMUVPUVQUVOUVNBCWMWNUVMUVNBC
      UUJYDYHCFZUVNUUJYHEFZUVNYDUVRHUUJUVSHYOYIUIMZUVNUUJUHYIUIMZUVTUVSYOUHYIWO
      UVSUHYIURZUWAYHWPUUMUWBUWAUKUMUHYIULWQWRWSWTYOYIXAXBCYHXCWTXDTWEXBUUEBCXE
      XFVQXGXHXIXJXKUUDUUHUUDYOEFZUUDUUHUTYGYOUUCXLUWCUUHYOYGUQJZFUUDYOYGXMUWDY
      GYOCXNXOXPXBXQWEYPUUFYPUWCUUFYLUUFAYOEYJYORYKUUEBCYJYOYILUCUDUEXRXSXTTYME
      URYNYRHYSUKYLAEYADYGYMYBWRYC $.
      $( [28-Jan-2005] $) $( [15-Nov-2003] $)
  $}

  ${
    $d x y z w A $.
    $( An alternate way to express the value of the aleph function: it is the
       least infinite cardinal different from all values at smaller arguments.
       Definition of aleph in [Enderton] p. 212 and definition of aleph in
       [BellMachover] p. 490 . $)
    alephval3 $p |- ( A e. On -> ( aleph ` A ) = |^| { x | ( ( card ` x ) = x
                   /\ om C_ x /\ A. y e. A -. x = ( aleph ` y ) ) } ) $=
      ( vz con0 wcel cale cfv cv ccrd wceq com wss wn wral w3a cab cint 
      alephcard a1i alephgeom biimpi alephord2i elirr eleq2 mtbiri con2i syl6 
      r19.21aiv 3jca fvex fveq2 id eqeq12d sseq2 eqeq1 notbid ralbidv 
      3anbi123d elab sylibr wa wi wrex eleq1 alephord2 bicomd sylan9bbr 
      biimpcd simpr jcad exp4c com3r imp4b reximdv2 cardalephex biimpac syl5 
      imp dfrex2 sylib nan mpbir ex visset df-3an bitri notbii syl6ibr cardon 
      mpbii 3ad2ant1 abssi oneqmini ax-mp syl11anc ) CEFZCGHZAIZJHZWSKZLWSMZWSB
      IZGHZKZNZBCOZPZAQZFZDIZXIFZNZDWROZWRXIRKZWQWRJHZWRKZLWRMZWRXDKZNZBCOZPZXJ
      WQXQXRYAXQWQCSTWQXRCUAUBWQXTBCWQXCCFZXDWRFZXTXCCUCXSYDXSYDXDXDFXDUDWRXDXD
      UEUFUGUHUIUJXHYBAWRCGUKWSWRKZXAXQXBXRXGYAYEWTXPWSWRWSWRJULYEUMUNWSWRLUOYE
      XFXTBCYEXEXSWSWRXDUPUQURUSUTVAWQXMDWRWQXKWRFZXKJHZXKKZLXKMZVBZXKXDKZNZBCO
      ZVBZNZXMWQYFYOWQYFVBZYOVCYPYJVBZYMNZVCYQYKBCVDZYRYPYJYSYPYKBEVDZYSYJYPYKY
      KBECWQYFXCEFZYKYCYKVBZYFUUAWQYKUUBVCYFUUAWQYKUUBYFUUAWQVBZYKVBZYCYKUUDYFY
      CYKYFYDUUCYCXKXDWRVEUUCYCYDXCCVFVGVHVIUUDYKVCYFUUCYKVJTVKVLVMVNVOYIYHYTBX
      KVPVQVRVSYKBCVTWAYPYJYMWBWCWDXLYNXLYHYIYMPZYNXHUUEAXKDWEWSXKKZXAYHXBYIXGY
      MUUFWTYGWSXKWSXKJULUUFUMUNWSXKLUOUUFXFYLBCUUFXEYKWSXKXDUPUQURUSUTYHYIYMWF
      WGWHWIUIXIEMXJXNVBXOVCXHAEXAXBWSEFZXGXAWTEFUUGWSWJWTWSEVEWKWLWMDWRXIWNWOW
      P $.
      $( [1-Mar-2005] $) $( [16-Nov-2003] $)
  $}

  ${
    $d x y z w A $.
    dominf.1 $e |- A e. _V $.
    $( A nonempty set that is a subset of its union is infinite. $)
    dominf $p |- ( ( A =/= (/) /\ A C_ U. A ) -> om ~<_ A ) $=
      ( vx vz vw vy cv c0 wne cuni wss wa com cdom wbr wi wceq neeq1 id unieq 
      sseq12d anbi12d breq2 imbi12d cpw cin crab copab crdg cres wf1 eqid 
      inf3lem6 cvv wcel visset pwex f1dom2g ax-mp csdm wn cfn pwfi biimpi 
      isfinite 3imtr4i con3i wb omex domtri mp2an 3syl vtocl ) CGZHIZVNVNJZKZLZ
      MVNNOZPAHIZAAJZKZLZMANOZPCABVNAQZVRWCVSWDWEVOVTVQWBVNAHRWEVNAVPWAWESVNATU
      AUBVNAMNUCUDVRMVNUEZDGEGVNUFFGKEVNUGQFDUHZHUIMUJZUKZMWFNOZVSCFDEAAWHWGWGU
      LWHULBBUMWFUNUOZWIWJPVNCUPZUQZMWFUNWHURUSWFMUTOZVAZVNMUTOZVAZWJVSWPWNVNVB
      UOZWFVBUOZWPWNWRWSVNVCVDVNVEWFVEVFVGMUNUOZWKWJWOVHVIWMMWFUNUNVJVKWTVNUNUO
      VSWQVHVIWLMVNUNUNVJVKVFVLVM $.
      $( [22-Sep-2008] $) $( [25-Mar-2007] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Cofinality
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w v u A $.
    $( A lemma used to simplify cofinality computations, showing the existence
       of the cardinal of an unbounded subset of a set ` A ` . $)
    cflem $p |- ( A e. B -> E. x E. y ( x = ( card ` y )
                  /\ ( y C_ A /\ A. z e. A E. w e. y z C_ w ) ) ) $=
      ( wcel cv wss wrex wral wa wex ccrd cfv wceq ssid sseq2 rcla4ev mpan2 
      rgen sseq1 rexeq ralbidv anbi12d cla4egv mp2ani 19.41v fvex isseti 
      mpbiran exbii excom bitr3i sylib ) EFGZBHZEIZCHZDHZIZDUQJZCEKZLZBMZAHUQNO
      ZPZVDLZBMAMZUPEEIZVADEJZCEKZVEEQVKCEUSEGUSUSIZVKUSQVAVMDUSEUTUSUSRSTUAVDV
      JVLLBEFUQEPZURVJVCVLUQEEUBVNVBVKCEVADUQEUCUDUEUFUGVEVHAMZBMVIVOVDBVOVGAMV
      DVGVDAUHAVFUQNUIUJUKULVHBAUMUNUO $.
      $( [24-Apr-2004] $)

    $( Value of the cofinality function.  Definition B of Saharon Shelah,
       _Cardinal Arithmetic_ (1994), p. xxx (Roman numeral 30).  The cofinality
       of an ordinal number ` A ` is the cardinality (size) of the smallest
       unbounded subset ` y ` of the ordinal number.  Unbounded means that for
       every member of ` A ` , there is a member of ` y ` that is at least as
       large.  Cofinality is a measure of how "reachable from below" an ordinal
       is. $)
    cfval $p |- ( A e. On -> ( cf ` A ) = |^| { x | E. y ( x = ( card ` y ) /\
                 ( y C_ A /\ A. z e. A E. w e. y z C_ w ) ) } ) $=
      ( vv vu con0 wcel cv ccrd cfv wceq wss wrex wral wa wex cab cint cvv ccf 
      cflem intexab sylib sseq2 raleq anbi12d anbi2d exbidv abbidv inteqd 
      df-cf fvopab4g mpdan ) EHIZAJBJZKLMZUQENZCJDJNDUQOZCEPZQZQZBRZASZTZUAIZEU
      BLVFMUPVDARVGABCDEHUCVDAUDUEFGEURUQFJZNZUTCVHPZQZQZBRZASZTVFHUAUBVHEMZVNV
      EVOVMVDAVOVLVCBVOVKVBURVOVIUSVJVAVHEUQUFUTCVHEUGUHUIUJUKULFGABCDUMUNUO $.
      $( [1-Apr-2004] $)
  $}

  ${
    $d x y z w v u $.
    $( Cofinality is a function on the class of ordinal numbers. $)
    cffnon $p |- cf Fn On $=
      ( vv vu vx vy vz vw con0 cv ccrd cfv wceq wss wrex wral wa wex cab cint 
      ccf cvv wcel visset cflem ax-mp intexab mpbi df-cf fnopab2 ) ABGCHDHZIJKU
      IAHZLEHFHLFUIMEUJNOODPZCQRZSUKCPZULTUAUJTUAUMAUBCDEFUJTUCUDUKCUEUFABCDEFU
      GUH $.
      $( [24-Apr-2004] $)
  $}

  ${
    $d x y z w v A $.
    $( An upper bound on cofinality. $)
    cfub $p |- ( cf ` A ) C_
            |^| { x | E. y ( x = ( card ` y ) /\ ( y C_ A /\ A C_ U. y ) ) } $=
      ( vz vw con0 wcel ccf cfv cv ccrd wceq wss cuni wa wex cab cint wrex 
      wral cfval wi ssel onelon ex sylan9r onelss syl6 imdistand ancomsd 
      eximdv eluni df-rex 3imtr4g ralimdv dfss3 syl5ib anim2d ss2abdv intss 
      syl eqsstrd wn c0 0ss cdm wfn cffnon fndm ax-mp eleq2i notbii ndmfv 
      sylbir sseq1d mpbiri pm2.61i ) CFGZCHIZAJBJZKILZVTCMZCVTNZMZOZOZBPZAQZRZM
      ZVRVSWAWBDJZEJZMZEVTSZDCTZOZOZBPZAQZRZWIABDECUAVRWHWSMWTWIMVRWGWRAVRWFWQB
      VRWEWPWAVRWBWDWOVRWBWDWOUBVRWBOZWKWCGZDCTWOWDXAXBWNDCXAWKWLGZWLVTGZOZEPXD
      WMOZEPXBWNXAXEXFEXAXDXCXFXAXDXCWMXAXDWLFGZXCWMUBWBXDWLCGZVRXGVTCWLUCVRXHX
      GCWLUDUEUFWLWKUGUHUIUJUKEWKVTULWMEVTUMUNUODCWCUPUQUEUIURUKUSWHWSUTVAVBVRV
      CZWJVDWIMWIVEXIVSVDWIXICHVFZGZVCVSVDLXKVRXJFCHFVGXJFLVHFHVIVJVKVLCHVMVNVO
      VPVQ $.
      $( [25-Apr-2004] $)

    $( Value of the cofinality function at a limit ordinal.  Part of Definition
       of cofinality of [Enderton] p. 257. $)
    cflim $p |- ( ( A e. B /\ Lim A ) -> ( cf ` A ) =
           |^| { x | E. y ( x = ( card ` y ) /\ ( y C_ A /\ A = U. y ) ) } ) $=
      ( vz vw vv cvv wcel wlim ccf cfv cv ccrd wceq wss cuni wa wex cab cint 
      wrex wral wi csuc limsuc biimpd sseq1 rexbidv rcla4v visset sucssel 
      ax-mp reximi eluni2 sylibr syl6com syl9 r19.21adv dfss3 syl6ibr adantr 
      limuni sseq2d uniss syl5bir imp jctird eqss ex imdistand anim2d eximdv 
      ss2abdv intss syl adantl con0 limelon cfval sseqtr4d cfub eqimss anim2i 
      eximi ss2abi sstri jctil elisset sylan ) CHIZCJZCKLZAMBMZNLOZWNCPZCWNQZOZ
      RZRZBSZATZUAZOZCDIWKWLRZWMXCPZXCWMPZRXDXEXGXFXEXCWOWPEMZFMZPZFWNUBZECUCZR
      ZRZBSZATZUAZWMWLXCXQPZWKWLXPXBPXRWLXOXAAWLXNWTBWLXMWSWOWLWPXLWRWLWPXLWRUD
      WLWPRZXLCWQPZWQCPZRWRXSXLXTYAWLXLXTUDWPWLXLGMZWQIZGCUCXTWLXLYCGCWLYBCIZYB
      UEZCIZXLYCWLYDYFCYBUFUGYFXLYEXIPZFWNUBZYCXKYHEYECXHYEOXJYGFWNXHYEXIUHUIUJ
      YHYBXIIZFWNUBYCYGYIFWNYBHIYGYIUDGUKYBXIHULUMUNFYBWNUOUPUQURUSGCWQUTVAVBWL
      WPYAWLYAWQCQZPWPWLCYJWQCVCVDWNCVEVFVGVHCWQVIVAVJVKVLVMVNXPXBVOVPVQXECVRIW
      MXQOCHVSABEFCVTVPWAWMWOWPXTRZRZBSZATZUAZXCABCWBXBYNPYOXCPXAYMAWTYLBWSYKWO
      WRXTWPCWQWCWDWDWEWFXBYNVOUMWGWHWMXCVIUPCDWIWJ $.
      $( [26-Apr-2004] $)
  $}

  ${
    $d x y $.
    $( Value of the cofinality function at 0.  Exercise 2 of [TakeutiZaring]
       p. 102. $)
    cf0 $p |- ( cf ` (/) ) = (/) $=
      ( vx vy c0 ccf cfv wss wceq cv ccrd cuni wa wex cab cint cfub csn 0ss 
      biantru ss0b bitr3i anbi2i ancom bitri exbii 0ex fveq2 eqeq2d ceqsexv 
      card0 eqeq2i 3bitri abbii df-sn eqtr4i inteqi intsn eqtri sseqtri mpbi ) 
      CDEZCFUTCGUTAHZBHZIEZGZVBCFZCVBJZFZKZKZBLZAMZNZCABCOVLCPZNCVKVMVKVACGZAMV
      MVJVNAVJVBCGZVDKZBLVACIEZGZVNVIVPBVIVDVOKVPVHVOVDVHVEVOVGVEVFQRVBSTUAVDVO
      UBUCUDVDVRBCUEVOVCVQVAVBCIUFUGUHVQCVAUIUJUKULACUMUNUOCUEUPUQURUTSUS $.
      $( [16-Apr-2004] $)
  $}

  ${
    $d x y z w v u A $.
    $( Cofinality is a cardinal number.  Proposition 11.11 of [TakeutiZaring]
       p. 103. $)
    cardcf $p |- ( card ` ( cf ` A ) ) = ( cf ` A ) $=
      ( vx vy vz vw vv con0 wcel ccf cfv ccrd wceq cv wss wrex wral wa wex cab 
      cint cfval c0 wne onint visset eqeq1 anbi1d exbidv elab fveq2 cardidm 
      syl6eq eqeq2 mpbird adantr 19.23aiv sylbi cardon syl6eqelr ssriv cvv 
      fvex intex sylibr sylancr eqeltrd id eqeq12d vtoclga syl wn cdm wfn 
      cffnon fndm ax-mp eleq2i notbii ndmfv sylbir card0 3eqtr4a pm2.61i ) AGHZ
      AIJZKJZWELZWDWEBMZCMZKJZLZWIANDMEMNEWIODAPQZQZCRZBSZHWGWDWEWOTZWOBCDEAUAZ
      WOGNWOUBUCZWPWOHWDWOUDFWOGFMZWOHZWSWSKJZGWTWSWJLZWLQZCRZXAWSLZWNXDBWSFUEW
      HWSLZWMXCCXFWKXBWLWHWSWJUFUGUHUIXCXECXBXEWLXBXEXAWJLXBXAWJKJWJWSWJKUJWIUK
      ULWSWJXAUMUNUOUPUQZWSURUSUTWDWPVAHWRWDWPWEVAWQAIVBUSWOVCVDVEVFXEWGFWEWOWS
      WELZXAWFWSWEWSWEKUJXHVGVHXGVIVJWDVKZWEUBLZWGXIAIVLZHZVKXJXLWDXKGAIGVMXKGL
      VNGIVOVPVQVRAIVSVTXJUBKJUBWFWEWAWEUBKUJXJVGWBVJWC $.
      $( [24-Apr-2004] $)

    $( Cofinality is bounded by the cardinality of its argument. $)
    cflecard $p |- ( cf ` A ) C_ ( card ` A ) $=
      ( vx vy vz vw con0 wcel ccf cfv ccrd wss cv wceq wrex wral wa wex cab 
      cint cfval csn ssid sseq2 rcla4ev mpan2 rgen pm3.2i fveq2 eqeq2d sseq1 
      rexeq ralbidv anbi12d cla4egv mpan2i ss2abdv df-sn syl5ss intss syl fvex 
      intsn syl6ss eqsstrd wn c0 0ss cdm wfn cffnon fndm ax-mp eleq2i notbii 
      ndmfv sylbir sseq1d mpbiri pm2.61i ) AFGZAHIZAJIZKZVTWABLZCLZJIZMZWEAKZDL
      ZELZKZEWENZDAOZPZPZCQZBRZSZWBBCDEATVTWRWBUAZSZWBVTWSWQKWRWTKVTWDWBMZBRWQW
      SVTXAWPBVTXAAAKZWKEANZDAOZPZWPXBXDAUBXCDAWIAGWIWIKZXCWIUBWKXFEWIAWJWIWIUC
      UDUEUFUGWOXAXEPCAFWEAMZWGXAWNXEXGWFWBWDWEAJUHUIXGWHXBWMXDWEAAUJXGWLXCDAWK
      EWEAUKULUMUMUNUOUPBWBUQURWSWQUSUTWBAJVAVBVCVDVTVEZWCVFWBKWBVGXHWAVFWBXHAH
      VHZGZVEWAVFMXJVTXIFAHFVIXIFMVJFHVKVLVMVNAHVOVPVQVRVS $.
      $( [24-Apr-2004] $)

    $( Cofinality is bounded by its argument.  Exercise 1 of [TakeutiZaring]
       p. 102. $)
    cfle $p |- ( cf ` A ) C_ A $=
      ( con0 wcel ccf cfv wss ccrd cardonle wi cflecard sstr2 ax-mp syl wn c0 
      0ss cdm wceq wfn cffnon fndm eleq2i notbii ndmfv sylbir sseq1d mpbiri 
      pm2.61i ) ABCZADEZAFZUIAGEZAFZUKAHUJULFUMUKIAJUJULAKLMUINZUKOAFAPUNUJOAUN
      ADQZCZNUJORUPUIUOBADBSUOBRTBDUALUBUCADUDUEUFUGUH $.
      $( [26-Apr-2004] $)

    $( Only the ordinal zero has cofinality zero. $)
    cfeq0 $p |- ( A e. On -> ( ( cf ` A ) = (/) <-> A = (/) ) ) $=
      ( vx vy vz vw vv con0 wcel ccf cfv c0 wceq cv ccrd wss wrex wral wa wex 
      cab cint cfval eqeq1d wb visset eqeq1 anbi1d exbidv elab fveq2 cardidm 
      syl6eq eqeq2 mpbird adantr 19.23aiv sylbi cardon syl6eqelr ssriv onint0 
      ax-mp 0ex sseq1 rexeq ralbidv anbi12d biimpa eqcom cvv cardeq0 bitri 
      sylanb wne wn rex0 a1i rgen r19.2z mpan2 rexnal sylib necon4ai adantl 
      syl syl6bi cf0 impbid1 ) AGHZAIJZKLZAKLZWIWKBMZCMZNJZLZWNAOZDMZEMOZEWNPZD
      AQZRZRZCSZBTZUAZKLZWLWIWJXFKBCDEAUBUCXGKXEHZWLXEGOXGXHUDFXEGFMZXEHZXIXINJ
      ZGXJXIWOLZXBRZCSZXKXILZXDXNBXIFUEWMXILZXCXMCXPWPXLXBWMXIWOUFUGUHUIXMXOCXL
      XOXBXLXOXKWOLXLXKWONJWOXIWONUJWNUKULXIWOXKUMUNUOUPUQXIURUSUTXEVAVBXHKWOLZ
      XBRZCSZWLXDXSBKVCWMKLZXCXRCXTWPXQXBWMKWOUFUGUHUIXRWLCXRKAOZWSEKPZDAQZRZWL
      WNKLZXBYDXQYEXBYDYEWQYAXAYCWNKAVDYEWTYBDAWSEWNKVEVFVGVHXQWOKLZYEKWOVIWNVJ
      HYFYEUDCUEWNVJVKVBVLVMYCWLYAYCAKAKVNZYBVOZDAPZYCVOYGYHDAQYIYHDAYHWRAHWSEV
      PVQVRYHDAVSVTYBDAWAWBWCWDWEUPUQUQWFWLWJKIJKAKIUJWGULWH $.
      $( [2-Feb-2005] $) $( [24-Apr-2004] $)
  $}

  ${
    $d x y z w v A $.
    $( Value of the cofinality function at a successor ordinal.  Exercise 3 of
       [TakeutiZaring] p. 102. $)
    cfsuc $p |- ( A e. On -> ( cf ` suc A ) = 1o ) $=
      ( vx vy vz vw vv con0 wcel csuc ccf cfv cv ccrd wceq wss wrex wral wa 
      wex cab cint c1o sucelon cfval sylbi wn wi cardon eleq1 mpbiri adantr 
      19.23aiv abssi oneqmini ax-mp csn cardsn eqcomd wo onelss eqimss a1i 
      jaod elsuci syl5 snidg jctild sseq2 rcla4ev syl6 r19.21aiv cun ssun2 
      df-suc sseqtr4i jctil snex fveq2 eqeq2d sseq1 rexeq ralbidv anbi12d 
      cla4ev syl11anc 1on elisseti eqeq1 anbi1d exbidv elab sylibr c0 el1o 
      eqcom cvv wb visset cardeq0 bitri rex0 nrex wne nsuceq0 r19.2z mpan mto 
      mtbiri intnand imnan mpbi nex 0ex mtbir rgen sylancl eqtr4d ) AGHZAIZJKZB
      LZCLZMKZNZYBXSOZDLZELZOZEYBPZDXSQZRZRZCSZBTZUAZUBXRXSGHXTYONAUCBCDEXSUDUE
      UBYNHZFLZYNHZUFZFUBQZUBYONZXRYNGOYPYTRUUAUGYMBGYLYAGHZCYDUUBYKYDUUBYCGHYB
      UHYAYCGUIUJUKULUMFUBYNUNUOXRUBYCNZYKRZCSZYPXRUBAUPZMKZNZUUFXSOZYHEUUFPZDX
      SQZRZUUEXRUUGUBAGUQURXRUUKUUIXRUUJDXSXRYFXSHZAUUFHZYFAOZRUUJXRUUMUUOUUNXR
      YFAHZYFANZUSUUOUUMXRUUPUUOUUQAYFUTUUQUUOUGXRYFAVAVBVCYFAVDVEAGVFVGYHUUOEA
      UUFYGAYFVHVIVJVKUUFAUUFVLXSUUFAVMAVNVOVPUUDUUHUULRCUUFAVQYBUUFNZUUCUUHYKU
      ULUURYCUUGUBYBUUFMVRVSUURYEUUIYJUUKYBUUFXSVTUURYIUUJDXSYHEYBUUFWAWBWCWCWD
      WEYMUUEBUBUBGWFWGYAUBNZYLUUDCUUSYDUUCYKYAUBYCWHWIWJWKWLYSFUBYQUBHYQWMNZYS
      YQWNUUTYRWMYNHZUVAWMYCNZYKRZCSZUVCCUVBYKUFUGUVCUFUVBYJYEUVBYBWMNZYJUFUVBY
      CWMNZUVEWMYCWOYBWPHUVFUVEWQCWRYBWPWSUOWTUVEYJYHEWMPZDXSQZUVHUVGDXSPZUVGDX
      SUVGUFUUMYHEXAVBXBXSWMXCUVHUVIAXDUVGDXSXEXFXGUVEYIUVGDXSYHEYBWMWAWBXHUEXI
      UVBYKXJXKXLYMUVDBWMXMYAWMNZYLUVCCUVJYDUVBYKYAWMYCWHWIWJWKXNYQWMYNUIXHUEXO
      XPXQ $.
      $( [23-Apr-2004] $)
  $}

  ${
    $d x y z w $.
    $( Value of the cofinality function at omega (the set of natural numbers).
       Exercise 4 of [TakeutiZaring] p. 102. $)
    cfom $p |- ( cf ` om ) = om $=
      ( vx vy vz vw com ccf cfv cfle csn cint omex intsn cv ccrd wceq wss wrex 
      wral wa wex cab eqtr cen wbr visset unbnn2 cvv wcel wb carden mp2an 
      sylibr cardom syl6eq sylan2 19.23aiv ss2abi df-sn sseqtr4i intss ax-mp 
      con0 omelon cfval eqsstr3i eqssi ) EFGZEEHEEIZJZVGEKLVIAMZBMZNGZOZVKEPCMD
      MPDVKQCERSZSZBTZAUAZJZVGVQVHPVIVRPVQVJEOZAUAVHVPVSAVOVSBVMVLEOVSVNVJVLEUB
      VNVLENGZEVNVKEUCUDZVLVTOZCDVKBUEZUFVKUGUHEUGUHWBWAUIWCKVKEUGUGUJUKULUMUNU
      OUPUQAEURUSVQVHUTVAEVBUHVGVROVCABCDEVDVAUSVEVF $.
      $( [23-Apr-2004] $)
  $}


$( I decided to comment out the Card class for now.  We have too many
   definitions, and this one doesn't really buy us much. $)

$(
  @c Card @. @( Class of all cardinal numbers @)

  @( Extend class definition to include the class of all cardinal numbers. @)
  ccdn @a class Card @.

  @( Define the class of all cardinal numbers.  The notation "Card" is used
     in Exercise 5(G) of [JustWeese] p. 174.  It should not be confused with
     the lower-case "card" for the cardinal number function ~ df-card .  @)
  df-cardn @a |- Card = ( om u. ran aleph ) @.

  @( Membership in the class of cardinal numbers. @)
  elcard @p |- ( A e. Card <-> ( card ` A ) = A ) @=
    ( ccdn wcel com cale crn cun ccrd cfv wceq df-cardn eleq2i iscard3 bitr4i )
    ABCADEFGZCAHIAJBOAKLAMN @.
    @( [31-Dec-2004] @) @( [23-Sep-2004] @)

  @( The cardinality of a set is a cardinal number. @)
  cardel @p |- ( card ` A ) e. Card @=
    ( ccrd cfv ccdn wcel wceq cardidm elcard mpbir ) ABCZDEJBCJFAGJHI @.
    @( [16-Jan-2005] @) @( [23-Sep-2004] @)

  @( A natural number is a cardinal number. @)
  nncard @p |- ( A e. om -> A e. Card ) @=
    ( com wcel ccrd cfv wceq ccdn cardnn elcard sylibr ) ABCADEAFAGCAHAIJ @.
    @( [16-Jan-2005] @) @( [23-Sep-2004] @)

  @( An alternate definition of the class of all cardinal numbers. @)
  cardnum2 @p |- Card = { x | ( card ` x ) = x } @=
    ( ccdn com cale crn cun cv ccrd cfv wceq cab df-cardn wcel iscard3 bicomi
    abbi2i eqcomi eqtr4i ) BCDEFZAGZHITJZAKZLSUBUAASUATSMTNOPQR @.
    @( [25-Jan-2005] @) @( [23-Sep-2004] @)

  @( The class of cardinal numbers is a proper class.  Exercise 5(G)(b) of
     [JustWeese] p. 174. @)
  cardnprc @p |- -. Card e. _V @=
    ( vx ccdn cvv wcel cv ccrd cfv wceq cab cardprc cardnum2 eleq1i mtbir ) BCD
    AEZFGNHAIZCDAJBOCAKLM @.
    @( [25-Jan-2005] @) @( [23-Sep-2004] @)

  @( The class of transfinite cardinals (the range of the aleph function) is a
     proper class. @)
  alephprc2 @p |- -. ran aleph e. _V @=
    ( cale crn cvv wcel com cun ccdn cardnprc df-cardn eleq1i mtbi omex wa
    unexb biimpi mpan mto ) ABZCDZERFZCDZGCDUAHGTCIJKECDZSUALUBSMUAERNOPQ @.
    @( [19-Feb-2005] @) @( [23-Sep-2004] @)
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
         Cardinal number arithmetic
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c +c $. $( Cardinal number addition $)

  $( Extend class definition to include cardinal number addition. $)
  ccda $a class +c $.

  ${
    $d x y z $.
    $( Define cardinal number addition.  Definition of cardinal sum in
       [Mendelson] p. 258.  See ~ cdavali for its value and a description. $)
    df-cda $a |- +c = { <. <. x , y >. , z >. |
                   z = ( ( x X. { (/) } ) u. ( y X. { 1o } ) ) } $.
  $}

  ${
    $d x y z w A $.  $d x y z w B $.
    $( Value of cardinal addition.  Definition of cardinal sum in [Mendelson]
       p. 258. $)
    cdaval $p |- ( ( A e. C /\ B e. D ) -> ( A +c B ) =
                    ( ( A X. { (/) } ) u. ( B X. { 1o } ) ) ) $=
      ( vx vy vz cvv wcel ccda co c0 csn cxp c1o cun wceq wa p0ex xpexg mpan2 
      snex anim12i unexb sylib cv xpeq1 uneq1d uneq2d copab2 df-cda visset 
      pm3.2i biantrur oprabbii eqtri oprabval2g mpd3an3 elisset syl2an ) AHIZBH
      IZABJKALMZNZBOMZNZPZQZACIBDIVAVBVGHIZVHVAVBRVDHIZVFHIZRVIVAVJVBVKVAVCHIVJ
      SAVCHHTUAVBVEHIVKOUBBVEHHTUAUCVDVFUDUEEFGABHHEUFZVCNZFUFZVENZPZVGJVDVOPHV
      LAQVMVDVOVLAVCUGUHVNBQVOVFVDVNBVEUGUIJGUFVPQZEFGUJVLHIZVNHIZRZVQRZEFGUJEF
      GUKVQWAEFGVTVQVRVSEULFULUMUNUOUPUQURACUSBDUSUT $.
      $( [24-Sep-2004] $)
  $}

  ${
    cdaval.1 $e |- A e. _V $.
    cdaval.2 $e |- B e. _V $.
    $( Value of cardinal addition.  Definition of cardinal sum in [Mendelson]
       p. 258.  For cardinal arithmetic, we follow Mendelson.  Rather than
       defining operations restricted to cardinal numbers, we use this disjoint
       union operation for addition, while cross product and set exponentiation
       stand in for cardinal multiplication and exponentiation.  Equinumerosity
       and dominance serve the roles of equality and ordering.  If we wanted
       to, we could easily convert our theorems to actual cardinal number
       operations via ~ carden , ~ carddom , and ~ cardsdom .  The advantage of
       Mendelson's approach is that we can directly use many equinumerosity
       theorems that we already have available. $)
    cdavali $p |- ( A +c B ) = ( ( A X. { (/) } ) u. ( B X. { 1o } ) ) $=
      ( cvv wcel ccda co c0 csn cxp c1o cun wceq cdaval mp2an ) AEFBEFABGHAIJKB
      LJKMNCDABEEOP $.
      $( [27-Sep-2004] $)

    $( Cardinal addition dominates union. $)
    uncdadom $p |- ( A u. B ) ~<_ ( A +c B ) $=
      ( cun c0 csn cxp c1o ccda co cdom wbr wa cin wceq cen 0ex xpsnen ensymi 
      endom ax-mp con0 1on elisseti pm3.2i xp01disj p0ex xpex snex undom mp2an 
      cdavali breqtrri ) ABEZAFGZHZBIGZHZEZABJKLAUQLMZBUSLMZNUQUSOFPUOUTLMVAVBA
      UQQMVAUQACAFCRSTAUQUAUBBUSQMVBUSBDBIDIUCUDUESTBUSUAUBUFABUGAUQBUSAUPCUHUI
      DBURDIUJUIUKULABCDUMUN $.
      $( [24-Jul-2006] $) $( [28-Sep-2004] $)

    $( Cardinal addition is equinumerous to union for disjoint sets. $)
    cdaun $p |- ( ( A i^i B ) = (/) -> ( A +c B ) ~~ ( A u. B ) ) $=
      ( cin c0 wceq csn cxp c1o cun ccda co cen wbr xp01disj wa 0ex xpsnen 
      con0 1on elisseti unen mpanl12 mpan cdavali syl5eqbr ) ABEFGZAFHIZBJHIZKZ
      ABKZABLMNUIUJEFGZUHUKULNOZABPUIANOUJBNOUMUHQUNAFCRSBJDJTUAUBSUIAUJBUCUDUE
      ABCDUFUG $.
      $( [5-Apr-2007] $)
  $}

  ${
    $d A x y $.  $d B y $.
    $( Cardinal addition is equinumerous to union for disjoint sets.
       (Contributed by Paul Chapman, 5-Jun-2009.) $)
    cdaung $p |- ( ( A e. C /\ B e. D /\ ( A i^i B ) = (/) ) ->
                   ( A +c B ) ~~ ( A u. B ) ) $=
      ( vx vy wcel cin c0 wceq ccda co cun cen wbr cv wi ineq1 eqeq1d opreq1 
      uneq1 breq12d imbi12d ineq2 opreq2 uneq2 visset cdaun vtocl2g 3impia ) AC
      GBDGABHZIJZABKLZABMZNOZEPZFPZHZIJZUPUQKLZUPUQMZNOZQAUQHZIJZAUQKLZAUQMZNOZ
      QULUOQEFABCDUPAJZUSVDVBVGVHURVCIUPAUQRSVHUTVEVAVFNUPAUQKTUPAUQUAUBUCUQBJZ
      VDULVGUOVIVCUKIUQBAUDSVIVEUMVFUNNUQBAKUEUQBAUFUBUCUPUQEUGFUGUHUIUJ $.
      $( [5-Jun-2009] $)
  $}

  $( 1+1=2 for cardinal number addition.  Theorem *110.643 of _Principia
     Mathematica_, vol.  II, p. 86, which adds the remark, "The above
     proposition is occasionally useful."  Unlike us, Whitehead and Russell
     define cardinal addition on collections of all sets equinumerous to 1 and
     2 (which for us are proper classes unless we restrict them as in
     ~ karden ), but after applying definitions, our theorem is equivalent.
     See also the comment for ~ pm54.43 .  The comment for ~ cdavali explains
     why we use ` ~~ ` instead of =. $)
  pm110.643 $p |- ( 1o +c 1o ) ~~ 2o $=
    ( c1o ccda co c0 csn cxp cun c2o cen con0 1on elisseti cdavali cin wceq 
    wbr xp01disj wb 0ex xpsnen pm54.43 mp2an mpbi eqbrtri ) AABCADEFZAAEFZGZHIA
    AAJKLZUHMUEUFNDOZUGHIPZAAQUEAIPUFAIPUIUJRADUHSTAAUHUHTUEUFUAUBUCUD $.
    $( [5-Apr-2007] $)

  ${
    cdaen.1 $e |- A e. _V $.
    cdaen.2 $e |- B e. _V $.
    cdaen.3 $e |- C e. _V $.
    cdaen.4 $e |- D e. _V $.
    $( Cardinal addition of equinumerous sets.  Exercise 4.56(b) of [Mendelson]
       p. 258. $)
    cdaen $p |- ( ( A ~~ B /\ C ~~ D ) -> ( A +c C ) ~~ ( B +c D ) ) $=
      ( cen wbr wa c0 csn cxp c1o cun ccda co cin wceq xp01disj unen mpanr12 
      cvv wcel wb 0ex xpsnen enen1 mp2an enen2 bitri con0 1on elisseti 
      syl2anbr cdavali 3brtr4g ) ABIJZCDIJZKALMZNZCOMZNZPZBVANZDVCNZPZACQRBDQRI
      VBVFIJZVDVGIJZVEVHIJZUSUTVIVJKVBVDSLTVFVGSLTVKACUABDUAVBVFVDVGUBUCVIAVFIJ
      ZUSAUDUEVBAIJVIVLUFEALEUGUHVBAVFUDUIUJBUDUEVFBIJVLUSUFFBLFUGUHVFBAUDUKUJU
      LVJCVGIJZUTCUDUEVDCIJVJVMUFGCOGOUMUNUOZUHVDCVGUDUIUJDUDUEVGDIJVMUTUFHDOHV
      NUHVGDCUDUKUJULUPACEGUQBDFHUQUR $.
      $( [24-Jul-2006] $) $( [28-Sep-2004] $)
  $}

  ${
    $d A w x y z $.  $d B w y z $.  $d C w z $.  $d D w $.  $d W w z $.
    $d X w z $.
    $( Cardinal addition of equinumerous sets.  Exercise 4.56(b) of [Mendelson]
       p. 258.  (Contributed by Paul Chapman, 5-Jun-2009.) $)
    cdaeng $p |- ( ( ( A e. W /\ B e. X ) /\ ( C e. Y /\ D e. Z ) /\
                     ( A ~~ B /\ C ~~ D ) ) -> ( A +c C ) ~~ ( B +c D ) ) $=
      ( vz vw vx vy wcel wa cen wbr ccda co wi cv wceq breq1 anbi2d opreq2 
      breq1d imbi12d imbi2d breq2 breq2d anbi1d opreq1 visset cdaen vtocl2g 
      impcom 3impia ) AEMBFMNZCGMDHMNZABOPZCDOPZNZACQRZBDQRZOPZURUQVAVDSZUQUSIT
      ZJTZOPZNZAVFQRZBVGQRZOPZSZSUQUSCVGOPZNZVBVKOPZSZSUQVESIJCDGHVFCUAZVMVQUQV
      RVIVOVLVPVRVHVNUSVFCVGOUBUCVRVJVBVKOVFCAQUDUEUFUGVGDUAZVQVEUQVSVOVAVPVDVS
      VNUTUSVGDCOUHUCVSVKVCVBOVGDBQUDUIUFUGKTZLTZOPZVHNZVTVFQRZWAVGQRZOPZSAWAOP
      ZVHNZVJWEOPZSVMKLABEFVTAUAZWCWHWFWIWJWBWGVHVTAWAOUBUJWJWDVJWEOVTAVFQUKUEU
      FWABUAZWHVIWIVLWKWGUSVHWABAOUHUJWKWEVKVJOWABVGQUKUIUFVTWAVFVGKULLULIULJUL
      UMUNUNUOUP $.
      $( [5-Jun-2009] $)
  $}

  ${
    cda0en.1 $e |- A e. _V $.
    $( Cardinal addition with cardinal zero (the empty set).  Part (a1) of
       proof of Theorem 6J of [Enderton] p. 143. $)
    cda0en $p |- ( A +c (/) ) ~~ A $=
      ( c0 ccda co csn cxp cen c1o cun 0ex cdavali xp0r uneq2i un0 3eqtri 
      xpsnen eqbrtri ) ACDEZACFGZAHSTCIFZGZJTCJTACBKLUBCTUAMNTOPACBKQR $.
      $( [27-Sep-2004] $)

    $( Cardinal addition with cardinal one (which is the same as ordinal one).
       Used in proof of Theorem 6J of [Enderton] p. 143. $)
    cda1en $p |- ( A +c 1o ) ~~ suc ( card ` A ) $=
      ( c0 csn cxp c1o cun ccrd cfv ccda co csuc cen wbr cin wceq 0ex xpsnen 
      cardid entr4i con0 1on elisseti fvex ensn1 xp01disj word cardon onordi 
      orddisj ax-mp unen mp4an cdavali df-suc 3brtr4i ) ACDEZFFDEZGZAHIZUTDZGZA
      FJKUTLMUQUTMNURVAMNUQUROCPUTVAOCPZUSVBMNUQAUTBACBQRASTURFVAFUAUBUCZFFVDVD
      RUTAHUDUETAFUFUTUGVCUTAUHUIUTUJUKUQUTURVAULUMAFBVDUNUTUOUP $.
      $( [24-Jul-2006] $) $( [28-Sep-2004] $)

    $( One times a cardinal number. $)
    xp1en $p |- ( A X. 1o ) ~~ A $=
      ( c1o cxp c0 csn cen df1o2 xpeq2i 0ex xpsnen eqbrtri ) ACDAEFZDAGCMAHIAEB
      JKL $.
      $( [27-Sep-2004] $)

    $( Two times a cardinal number.  Exercise 4.56(g) of [Mendelson] p. 258. $)
    xp2cda $p |- ( A X. 2o ) = ( A +c A ) $=
      ( c0 csn c1o cun cxp c2o ccda co xpundi cpr df-pr df2o2 df1o2 sneqi 
      uneq2i 3eqtr4i xpeq2i cdavali ) ACDZEDZFZGAUAGAUBGFAHGAAIJAUAUBKHUCACUALU
      AUADZFHUCCUAMNUBUDUAEUAOPQRSAABBTR $.
      $( [27-Sep-2004] $)
  $}

  ${
    cdacomen.1 $e |- A e. _V $.
    cdacomen.2 $e |- B e. _V $.
    $( Commutative law for cardinal addition.  Exercise 4.56(c) of [Mendelson]
       p. 258. $)
    cdacomen $p |- ( A +c B ) ~~ ( B +c A ) $=
      ( c0 csn cxp c1o cun ccda co cen cin wceq wbr xp01disj wne 1n0 xpsndisj 
      ax-mp wa 0ex xpsnen con0 1on elisseti entr4i unen mpanl12 mp2an uncom 
      breqtri cdavali 3brtr4i ) AEFZGZBHFZGZIZBUOGZAUQGZIZABJKBAJKLUSVAUTIZVBLU
      PURMENZVAUTMENZUSVCLOZABPHEQVERAHBESTUPVALOURUTLOVDVEUAVFUPAVACAECUBUCAHC
      HUDUEUFZUCUGURBUTDBHDVGUCBEDUBUCUGUPVAURUTUHUIUJVAUTUKULABCDUMBADCUMUN $.
      $( [24-Jul-2006] $) $( [24-Sep-2004] $)

    ${
      cdaassen.3 $e |- C e. _V $.
      $( Associative law for cardinal addition.  Exercise 4.56(c) of
         [Mendelson] p. 258. $)
      cdaassen $p |- ( ( A +c B ) +c C ) ~~ ( A +c ( B +c C ) ) $=
        ( c0 csn cxp c1o cun ccda co cen wbr cin wceq cvv wcel p0ex xpex snex 
        unex xpundir eqeng mp2 con0 1on elisseti xpsnen ensymi xp01disj wa 
        pm3.2i undisj1 mpbi unen mp4an enref xpassen xpcomen xpen mp2an entr4i 
        entri xpeq1i xpindir xp0r 3eqtr3i unass breqtri 0ex undisj2 cdavali 
        opreq1i eqtri opreq2i 3brtr4i ) AGHZIZBJHZIZKZVSIZCWAIZKZVTBVSIZWEKZWAI
        ZKZABLMZCLMZABCLMZLMZNWFVTVSIZWBVSIZKZWEWAIZKZWJWDWQNOZWEWRNOWDWEPGQWQW
        RPGQZWFWSNOWDRSWDWQQWTWCVSVTWBAVSDTUAZBWAEJUBZUAUCZTUAVTWBVSUDWDWQRUEUF
        WRWECWAFXCUAZWEJXEJUGUHUIUJUKWCCULWOWRPGQZWPWRPGQZUMXAXFXGVTWEULZWBWEUL
        UNWOWPWRUOUPZWDWQWEWRUQURWSWOWGWAIZWRKZKZWJWOXKVTVSXBTUAZXJWRWGWABVSETU
        AZXCUAWEWAXEXCUAZUCUCWSWOXJKZWRKZXLNWQXPNOZWRWRNOXAXPWRPGQZWSXQNOWOWONO
        WPXJNOWOWPPZGQWOXJPGQZXRWOXMUSWPBWAVSIZIZXJBWAVSEXCTUTYCBVSWAIZIZXJBYDE
        VSWATXCUAZUABBNOYBYDNOYCYENOBEUSWAVSXCTVABBYBYDEEWAVSXCTUAYFVBVCBVSWAET
        XCUTVDVEVTWBPZVSIGVSIXTGYGGVSABULVFVTWBVSVGVSVHVIVTWGULZWOWOWPXJUQURWRX
        OUSXIXFXJWRPZGQZUMXSXFYJXHWGWEPZWAIGWAIYIGYKGWABCULVFWGWEWAVGWAVHVIUNWO
        XJWRUOUPWQXPWRWRUQURWOXJWRVJVKVTWONOWIXKNOZVTWIPGQWOXKPGQZWJXLNOWOVTXBV
        TGXBVLUJUKWIRSWIXKQYLWHWAWGWEXNXEUCZXCUAWGWEWAUDWIXKRUEUFAWHULYAXFUMYMY
        AXFYHXHUNWOXJWRVMUPVTWOWIXKUQURVDVEWLWCCLMWFWKWCCLABDEVNVOWCCXDFVNVPWNA
        WHLMWJWMWHALBCEFVNVQAWHDYNVNVPVR $.
        $( [24-Jul-2006] $) $( [26-Sep-2004] $)

      $( Cardinal multiplication distributes over cardinal addition.  Theorem
         6I(3) of [Enderton] p. 142. $)
      xpcdaen $p |- ( A X. ( B +c C ) ) ~~ ( ( A X. B ) +c ( A X. C ) ) $=
        ( c0 csn cxp c1o cun ccda co cen p0ex xpex snex unex wbr cin wceq 
        xpassen xp01disj xpeq2i xpindi xp0 3eqtr3i unen mp4an xpundi breqtrri 
        ensymi cdavali 3brtr4i ) ABGHZIZCJHZIZKZIZABIZUOIZACIZUQIZKZABCLMZIVAVC
        LMNVEUTAUSDUPURBUOEOPCUQFJQZPRPVEAUPIZAURIZKZUTNVBVHNSVDVINSVBVDTGUAVHV
        ITZGUAVEVJNSABUODEOUBACUQDFVGUBVAVCUCAUPURTZIAGIVKGVLGABCUCUDAUPURUEAUF
        UGVBVHVDVIUHUIAUPURUJUKULVFUSABCEFUMUDVAVCABDEPACDFPUMUN $.
        $( [24-Jul-2006] $) $( [26-Sep-2004] $)

      $( Sum of exponents law for cardinal arithmetic.  Theorem 6I(4) of
         [Enderton] p. 142. $)
      mapcdaen $p |- ( A ^m ( B +c C ) ) ~~ ( ( A ^m B ) X. ( A ^m C ) ) $=
        ( ccda co cmap c0 csn cxp c1o cun cen cdavali opreq2i cin wceq wbr 
        xp01disj p0ex xpex snex mapunen ax-mp enref 0ex xpsnen mapen mp2an 
        con0 1on elisseti oprex xpen entri eqbrtri ) ABCGHZIHABJKZLZCMKZLZNZIHZ
        ABIHZACIHZLZOUSVDAIBCEFPQVEAVAIHZAVCIHZLZVHVAVCRJSVEVKOTBCUAVAVCABUTEUB
        UCZCVBFMUDUCZDUEUFVIVFOTZVJVGOTZVKVHOTAAOTZVABOTVNADUGZBJEUHUIAAVABDDVL
        EUJUKVPVCCOTVOVQCMFMULUMUNUIAAVCCDDVMFUJUKVIVFVJVGAVAIUOABIUOAVCIUOACIU
        OUPUKUQUR $.
        $( [24-Jul-2006] $) $( [27-Sep-2004] $)

      $( Ordering law for cardinal addition.  Exercise 4.56(f) of [Mendelson]
         p. 258. $)
      cdadom1 $p |- ( A ~<_ B -> ( A +c C ) ~<_ ( B +c C ) ) $=
        ( cdom wbr c0 csn cxp c1o cun ccda co cvv wcel cen wb 0ex xpsnen 
        domen1 mp2an domen2 bitri snex xpex domrefg ax-mp wa cin wceq xp01disj 
        p0ex undom mpan2 sylbir cdavali 3brtr4g ) ABGHZAIJZKZCLJZKZMZBVAKZVDMZA
        CNOBCNOGUTVBVFGHZVEVGGHZVHAVFGHZUTAPQVBARHVHVJSDAIDTUAVBAVFPUBUCBPQVFBR
        HVJUTSEBIETUAVFBAPUDUCUEVHVDVDGHZVIVDPQVKCVCFLUFUGZVDPUHUIVHVKUJVFVDUKI
        ULVIBCUMVBVFVDVDBVAEUNUGVLVLUOUPUPUQACDFURBCEFURUS $.
        $( [24-Jul-2006] $) $( [28-Sep-2004] $)

      $( Ordering law for cardinal addition.  Theorem 6L(a) of [Enderton]
         p. 149. $)
      cdadom2 $p |- ( A ~<_ B -> ( C +c A ) ~<_ ( C +c B ) ) $=
        ( cdom wbr ccda co cdadom1 cen cdacomen endomtr mpan domentr mpan2 
        3syl ) ABGHACIJZBCIJZGHZCAIJZTGHZUBCBIJZGHZABCDEFKUBSLHUAUCCAFDMUBSTNOU
        CTUDLHUEBCEFMUBTUDPQR $.
        $( [28-Sep-2004] $)
    $}

    $( A set is dominated by its cardinal sum with another. $)
    cdadom3 $p |- A ~<_ ( A +c B ) $=
      ( cun cdom wbr ccda co cvv wcel wss ssun1 ssdomg mp2 uncdadom domtr 
      mp2an ) AABEZFGZSABHIZFGAUAFGAJKASLTCABMASJNOABCDPASUAQR $.
      $( [28-Sep-2004] $)
  $}

  $( The cardinal sum of two finite sets is finite. $)
  cdafi $p |- ( ( A ~< om /\ B ~< om ) -> ( A +c B ) ~< om ) $=
    ( com csdm wbr wa ccda co c0 csn cxp c1o cun cvv wcel wceq cdaval sdomex 
    simpld syl2an unfi2 cen wb con0 xpsneng 0elon sylancl sdomen1 syl11anc 
    ibir 1on eqbrtrd ) ACDEZBCDEZFABGHZAIJKZBLJKZMZCDANOZBNOZUOURPUMUNABNNQUMUS
    CNOZACRSZUNUTVABCRSZTUPCDEZUQCDEZURCDEUMUNUPUQUAUMVDUMUSUPAUBEZVDUMUCVBUSIU
    DOVFUMAINUDUEVBUFUGUPACNUHUIUJUNVEUNUTUQBUBEZVEUNUCVCUTLUDOVGUNBLNUDUEVCUKU
    GUQBCNUHUIUJTUL $.
    $( [22-Oct-2004] $)

  ${
    cdainf.1 $e |- A e. _V $.
    $( A set is infinite iff the cardinal sum with itself is infinite. $)
    cdainf $p |- ( om ~<_ A <-> om ~<_ ( A +c A ) ) $=
      ( com cdom wbr ccda co cdadom3 domtr mpan2 csdm wn cdafi anidms con3i 
      cvv wcel wb omex oprex domtri mp2an 3imtr4i impbii ) CADEZCAAFGZDEZUEAUFD
      EUGAABBHCAUFIJUFCKEZLZACKEZLZUGUEUJUHUJUHAAMNOCPQZUFPQUGUIRSAAFTCUFPPUAUB
      ULAPQUEUKRSBCAPPUAUBUCUD $.
      $( [22-Oct-2004] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d x y z $.
    $( The cardinal and ordinal sums of finite ordinals are equal.
       (Contributed by Paul Chapman, 11-Apr-2009.) $)
    nnacda $p |- ( ( A e. om /\ B e. om ) ->
                   ( card ` ( A +c B ) ) = ( A +o B ) ) $=
      ( vx vy vz com wcel wa cv ccda co ccrd cfv coa wceq wral c0 csuc opreq2 
      fveq2d eqeq12d cardnn cen wbr visset cda0en cvv wb oprex carden mp2an 
      mpbir syl5eq nna0 eqtr4d wi w3a c1o cda1en suceq syl breq2d mpbii enref 
      sucex cdaen mpan 1onn elisseti cdaassen entr 3syl ensym mpan2 3ad2ant2 
      3ad2ant3 nnasuc 3adant3 mpbid sylibr nnacl peano2b sylan2b eqtrd 3expia 
      expcom finds2 impcom rgen2a opreq1 rcla42v mpi ) AFGBFGHCIZDIZJKZLMZWMWNN
      KZOZDFPCFPABJKZLMZABNKZOZWRCDFWNFGWMFGZWRWRWMQJKZLMZWMQNKZOWMEIZJKZLMZWMX
      GNKZOZWMXGRZJKZLMZWMXLNKZOZXCDEWNQOZWPXEWQXFXQWOXDLWNQWMJSTWNQWMNSUAWNXGO
      ZWPXIWQXJXRWOXHLWNXGWMJSTWNXGWMNSUAWNXLOZWPXNWQXOXSWOXMLWNXLWMJSTWNXLWMNS
      UAXCXEWMXFXCWMLMZWMXEWMUBXEXTOZXDWMUCUDZWMCUEZUFXDUGGWMUGGYAYBUHWMQJUIYCX
      DWMUGUGUJUKULUMWMUNUOXCXGFGZXKXPUPXCYDXKXPXCYDXKUQZXNXOLMZXOYEXMXOUCUDZXN
      YFOZYEXMXIRZUCUDZYGYDXCYJXKYDXHURJKZXMUCUDZXMYKUCUDZYJYDXGURJKZXLUCUDZWMY
      NJKZXMUCUDZYLYDYNXGLMZRZUCUDYOXGEUEZUSYDYSXLYNUCYDYRXGOYSXLOXGUBYRXGUTVAV
      BVCWMWMUCUDYOYQWMYCVDWMWMYNXLYCYCXGURJUIXGYTVEVFVGYKYPUCUDYQYLWMXGURYCYTU
      RFVHVIVJYKYPXMVKVGVLYKXMWMXLJUIZVMYMYKYIUCUDYJXHWMXGJUIUSXMYKYIVKVNVLVOYE
      YIXOXMUCYEYIXJRZXOXKXCYIUUBOYDXIXJUTVPXCYDXOUUBOXKWMXGVQVRUOVBVSXMUGGXOUG
      GYHYGUHUUAWMXLNUIXMXOUGUGUJUKVTXCYDYFXOOZXKXCYDHXOFGZUUCXCXLFGUUDYDWMXLWA
      XGWBWCXOUBVAVRWDWEWFWGWHWIWRXBAWNJKZLMZAWNNKZOCDABFFWMAOZWPUUFWQUUGUUHWOU
      UELWMAWNJWJTWMAWNNWJUAWNBOZUUFWTUUGXAUUIUUEWSLWNBAJSTWNBANSUAWKWL $.
      $( [11-Apr-2009] $)
  $}

  $( The cardinality of the union of disjoint, finite sets is the ordinal sum
     of their cardinalities.  (Contributed by Paul Chapman, 5-Jun-2009.) $)
  nnaun $p |- ( ( A e. Fin /\ B e. Fin /\ ( A i^i B ) = (/) ) ->
                 ( card ` ( A u. B ) ) = ( ( card ` A ) +o ( card ` B ) ) ) $=
    ( cfn wcel cin c0 wceq w3a ccrd cfv coa co cun cen wbr ccda entr cardid 
    cvv wa fvex pm3.2i an4 cdaeng mp3an3 sylbi mpan 3adant3 cdaung syl11anc 
    sylancr wb com nnacda ficardom syl2an breq1d mpbid carden oprex unfi 
    mpbird nnacl cardnn syl eqtr3d ) ACDZBCDZABEFGZHZAIJZBIJZKLZIJZABMZIJZVMVJV
    NVPGZVMVONOZVJVKVLPLZIJZVONOZVRVTVSNOVSVONOZWAVJVTVSVOQVSRVJVSABPLZNOZWCVON
    OWBVGVHWDVIVKSDZVLSDZTZVGVHTZWDWEWFAIUABIUAUBWGWHTWEVGTZWFVHTZTWDWEWFVGVHUC
    WIWJVKANOZVLBNOZTWDWKWLARBRUBVKAVLBSCSCUDUEUFUGUHABCCUIVSWCVOQUJUKVGVHWAVRU
    LVIWHVTVMVONVKUMDZVLUMDZVTVMGVGVHVKVLUNAUOZBUOZUPUQUHURVGVHVQVRULZVIVMSDVOC
    DWQWHVMVOSCUSVKVLKUTABVAUKUHVBVGVHVNVMGZVIWMWNWRVGVHWMWNTVMUMDWRVKVLVCVMVDV
    EWOWPUPUHVF $.
    $( [5-Jun-2009] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
         ZFC Axioms with no distinct variable requirements
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A lemma for proving conditionless ZFC axioms. $)
  nd1 $p |- ( A. x x = y -> -. A. x y e. z ) $=
    ( cv wceq wal wcel elirrv wsbc stdpc4 pm2.21i elequ1 sbie sylib mto ax-10o 
    mtoi ) ADBDZEAFRCDZGZAFTBFZUASSGZCHZUATBSIUBTBCJTUBBCUBUBBFUCKBCCLMNOTABPQ 
    $.
    $( [1-Jan-2002] $)

  $( A lemma for proving conditionless ZFC axioms. $)
  nd2 $p |- ( A. x x = y -> -. A. x z e. y ) $=
    ( cv wceq wal wcel elirrv wsbc stdpc4 pm2.21i elequ2 sbie sylib mto ax-10o 
    mtoi ) ADBDZEAFCDZRGZAFTBFZUASSGZCHZUATBSIUBTBCJTUBBCUBUBBFUCKBCCLMNOTABPQ 
    $.
    $( [1-Jan-2002] $)

  $( A lemma for proving conditionless ZFC axioms. $)
  nd3 $p |- ( A. x x = y -> -. A. z x e. y ) $=
    ( cv wceq wal wcel wn ax-4 elirrv elequ2 mtbii con3i 3syl ) ADZBDZEZAFQOPGZ
    HRCFZHQAIQOOGRAJABAKLSRRCIMN $.
    $( [2-Jan-2002] $)

  $( A lemma for proving conditionless ZFC axioms. $)
  nd4 $p |- ( A. x x = y -> -. A. z y e. x ) $=
    ( cv wcel wal wn nd3 alequcoms ) BDADECFGBABACHI $.
    $( [2-Jan-2002] $)

  ${
    $d z x $.
    $( A lemma for proving conditionless ZFC axioms. $)
    nd5 $p |- ( -. A. y y = x -> ( z = y -> A. x z = y ) ) $=
      ( cv wceq wal wi dveeq2 nalequcoms ) CDBDEZJAFGABABCHI $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x v w $.  $d y v w $.  $d z v w $.
    $( A version of the Axiom of Extensionality with no distinct variable
       conditions. $)
    axextnd $p |- E. x ( ( x e. y <-> x e. z ) -> y = z ) $=
      ( vw cv wcel wb wceq wal wex wi wn wa hbnae hban dveel2 adantr adantl 
      hbbid elequ1 bibi12d a1i cbvald axext3 syl6bir 19.8a syl6 ex a9e hbae 
      ax-8 a4s eximd mpi a1d equcomi pm2.61ii 19.35ri ) AEZBEZFZUSCEZFZGZUTVBHZ
      AUSUTHZAIZUSVBHZAIZVDAIZVEAJZKZVGLZVILZVLVMVNMZVJVEVKVOVJDEZUTFZVPVBFZGZD
      IVEVOVSVDDAVMVNAABANACANOZVOVQVRAVTVMVQVQAIKVNABDPQVNVRVRAIKVMACDPRSVPUSH
      ZVSVDGKVOWAVQVAVRVCDABTDACTUAUBUCBCDUDUEVEAUFUGUHVGVKVJVGVHAJVKACUIVGVHVE
      AABAUJVFVHVEKAABCUKULUMUNUOVIVKVJVIVFAJVKABUIVIVFVEAACAUJVHVFVEKAVHVFVBUT
      HVEACBUKCBUPUGULUMUNUOUQUR $.
      $( [14-Aug-2003] $)
  $}

  ${
    $d x z w v $.  $d x y w v $.  $d w ph $.
    $( Lemma for the Axiom of Replacement with no distinct variable
       conditions. $)
    axrepndlem1 $p |- ( -. A. y y = z -> E. x ( E. y A. z ( ph -> z = y ) ->
                 A. z ( z e. x <-> E. x ( x e. y /\ A. y ph ) ) ) ) $=
      ( vw cv wceq wal wn wsbc wi wex wcel wa wb axrep2 hbnae ax-17 hbsb3 a1i 
      nd5 hbimd sbequ12r equequ1 imbi12d cbvald exbid dveel2 nalequcoms hbal 
      hband hbexd hbbid elequ1 adantl dveeq2 imp hba1 a4s albid syl anbi2d 
      exbidv bibi12d ex mpbii ) CFZDFZGCHIZADEFZJZVJVGGZKZEHZCLZVJBFZMZVPVGMZVK
      CHZNZBLZOZEHZKZBLAVHVGGZKZDHZCLZVHVPMZVRACHZNZBLZOZDHZKZBLVKBCEPVIWDWOBCD
      BQZVIVOWHWCWNVIVNWGCCDCQVIVMWFEDCDDQZVIVKVLDWQVKVKDHKVIADEAERSZTDCEUAUBVJ
      VHGZVMWFOKVIWSVKAVLWEAEDUCZEDCUDUETUFUGVIWBWMEDWQVIVQWADWQVQVQDHKVIVQDRTV
      IVTDBWPVIVRVSDVRVRDHKDCDCBUHUIVSVSDHKVIVKDCWRUJTUKULUMVIWSWBWMOVIWSNZVQWI
      WAWLWSVQWIOVIEDBUNUOXAVTWKBXAVSWJVRXAWSCHZVSWJOVIWSXBCDEUPUQXBVKACWSCURWS
      VKAOCWTUSUTVAVBVCVDVEUFUEUGVF $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d x w $.  $d y w $.  $d z w $.  $d w ph $.
    $( Lemma for the Axiom of Replacement with no distinct variable
       conditions. $)
    axrepndlem2 $p |- ( ( ( -. A. x x = y /\ -. A. x x = z ) /\ -. A. y y = z )
                 -> E. x ( E. y A. z ( ph -> z = y ) ->
                     A. z ( z e. x <-> E. x ( x e. y /\ A. y ph ) ) ) ) $=
      ( vw cv wceq wal wn wa wi wex wcel wb wsbc hbnae hban ax-17 hbsb3 a1i 
      ax-12 impcom hbimd hbald hbexd dveel1 adantl dveel2 adantr hband hbbid 
      nd5 imdistani hba1 sbequ12r imbi1d a4s albid syl simpr ax-4 syl2an exbid 
      elequ2 elequ1 sbal2 nalequcoms bicomd sylan9bb adantlr anbi12d ex cbvexd 
      bibi12d sylan2 imbi12d axrepndlem1 syl5bi imp ) BFZCFZGBHIZVTDFZGBHIZJZWA
      WCGCHIZAWCWAGZKZDHZCLZWCVTMZVTWAMZACHZJZBLZNZDHZKZBLZWEABEFZOZWGKZDHZCLZW
      CWTMZWTWAMZXACHZJZELZNZDHZKZELWSWFWEXLWREBWBWDBBCBPBDBPQZWEXDXKBXMWEXCBCW
      BWDCBCCPBDCPQZWEXBBDWBWDDBCDPBDDPZQZWEXAWGBXMXAXABHKWEABEAERSTZWDWBWGWGBH
      KDCBUAUBUCUDUEWEXJBDXPWEXEXIBXMWDXEXEBHKWBBDEUFUGWEXHBEWEERWEXFXGBWBXFXFB
      HKWDBCEUHUIWEXABCXNXQUDUJZUEUKUDUCWEWTVTGZXLWRNWEXSJZXDWJXKWQXTWEXSCHZJZX
      DWJNWEXSYAWBXSYAKWDCBEULUIUMYBXCWICWEYACXNXSCUNQWDXSXCWINZWEYAWDXSJWDXSDH
      ZJZYCWDXSYDDBEULZUMYEXBWHDWDYDDXOXSDUNZQYDXBWHNZWDXSYHDXSXAAWGAEBUOUPUQUG
      URUSWBWDUTXSCVAVBVCUSXTWEYDJZXKWQNWEXSYDWDXSYDKWBYFUGUMYIXJWPDWEYDDXPYGQW
      EXSXJWPNYDXTXEWKXIWOXSXEWKNWEEBDVDUGWEXIWONXSWEXHWNEBXMXRWEXSXHWNNXTXFWLX
      GWMXSXFWLNWEEBCVEUGWBXSXGWMNWDWBXGWMBWTOZXSWMWBYJXGYJXGNCBACBEVFVGVHWMEBU
      OVIVJVKVLVMUIVNXSDVAVOURUSVPVLVMXAECDVQVRVS $.
      $( [2-Jan-2002] $)
  $}

  $( A version of the Axiom of Replacement with no distinct variable
     conditions. $)
  axrepnd $p |- E. x ( E. y A. z ( ph -> z = y ) ->
               A. z ( A. y z e. x <-> E. x ( A. z x e. y /\ A. y ph ) ) ) $=
    ( cv wceq wal wi wex wcel wa wb wn axrepndlem2 hbnae hban ax-15 com12 
    nalequcoms imp adantlr ax-4 impbid1 alequcom con3i syl2an adantll anbi1d 
    exbid bibi12d albid imbi2d mpbid exp31 hbae nd2 alequcoms nd3 intnanrd 
    nexd pm5.21 syl11anc 19.21ai a1d 19.8a syl nd4 nd1 pm2.61iii ) BEZCEZFBGZVJ
    DEZFBGZVKVMFCGZAVMVKFZHDGCIZVMVJJZCGZVJVKJZDGZACGZKZBIZLZDGZHZBIZVLMZVNMZVO
    MZWHWIWJKZWKKZVQVRVTWBKZBIZLZDGZHZBIWHABCDNWMWRWGBWLWKBWIWJBBCBOBDBOPCDBOPZ
    WMWQWFVQWMWPWEDWLWKDWIWJDBCDOBDDOPCDDOPWMVRVSWOWDWMVRVSWIWKVRVSHZWJWIWKWTWK
    WTHCBWKVKVJFCGMWTDBCQRSTUAVRCUBUCWMWNWCBWSWMVTWAWBWMVTWAWJWKVTWAHZWIVMVJFDG
    ZMZVPDGZMZXAWJWKXCXEXABCDQTXBVNDBUDUEXDVODCUDUEUFUGVTDUBUCUHUIUJUKULUIUMUNV
    LWGWHVLWFVQVLWEDBCDUOVLVSMZWDMZWEXFCBCBDUPUQVLWCBBCBUOVLWAWBBCDURUSUTVSWDVA
    ZVBVCVDWGBVEZVFVNWGWHVNWFVQVNWEDBDDUOVNXFXGWEBDCVGVNWCBBDBUOVNWAWBWAMZDBDBC
    VHUQUSUTXHVBVCVDXIVFVOWGWHVOWFVQVOWEDCDDUOVOXFXGWECDBVHVOWCBCDBUOVOWAWBXJDC
    DCBUPUQUSUTXHVBVCVDXIVFVI $.
    $( [2-Jan-2002] $)

  ${
    $d x y w $.  $d x z w $.
    $( Lemma for the Axiom of Union with no distinct variable conditions. $)
    axunndlem1 $p |- E. x A. y ( E. x ( y e. x /\ x e. z ) -> y e. x ) $=
      ( vw cv wceq wal wcel wa wex wi hbae wn en2lp elequ2 anbi2d mtbii a4s 
      nexd pm2.21d a5i 19.8a syl zfun hbnae ax-17 a1i dveel2 hband hbexd hbimd 
      wb elequ1 anbi1d exbidv imbi12d cbvald exbid mpbii pm2.61i ) BEZCEZFZBGZV
      AAEZHZVEVBHZIZAJZVFKZBGZAJZVDVKVLVCVJBVDVIVFVDVHABCALVCVHMBVCVFVEVAHZIVHV
      AVENVCVMVGVFBCAOPQRSTUAVKAUBUCVDMZDEZVEHZVGIZAJZVPKZDGZAJVLADCUDVNVTVKABC
      AUEZVNVSVJDBBCBUEZVNVRVPBWBVNVQBAWAVNVPVGBVPVPBGKVNVPBUFUGZBCAUHUIUJWCUKV
      OVAFZVSVJULKVNWDVRVIVPVFWDVQVHAWDVPVFVGDBAUMZUNUOWEUPUGUQURUSUT $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d x w $.  $d y w $.  $d z w $.
    $( A version of the Axiom of Union with no distinct variable conditions. $)
    axunnd $p |- E. x A. y ( E. x ( y e. x /\ x e. z ) -> y e. x ) $=
      ( vw cv wceq wal wcel wa wex wi wn axunndlem1 hbnae hban ax-17 dveel1 
      adantr dveel2 adantl hband hbexd hbimd hbald wb nd5 imdistani hba1 
      elequ2 elequ1 anbi12d a1i cbvexd a4s imbi12d albid syl ex mpbii hbae 
      elirrv simpl syl5bi mtoi nexd pm2.21d 19.21ai 19.8a simpr pm2.61ii ) AEZB
      EZFZAGZVKCEZFZAGZVLVKHZVKVOHZIZAJZVRKZBGZAJZVNLZVQLZWDWEWFIZVLDEZHZWHVOHZ
      IZDJZWIKZBGZDJWDDBCMWGWNWCDAWEWFAABANACANOZWGWMABWEWFBABBNACBNOZWGWLWIAWO
      WGWKADWGDPWGWIWJAWEWIWIAGKWFABDQRZWFWJWJAGKWEACDSTUAZUBWQUCUDWGWHVKFZWNWC
      UEZWGWSIWGWSBGZIZWTWGWSXAWEWSXAKWFBADUFRUGXBWMWBBWGXABWPWSBUHOXBWLWAWIVRW
      GWLWAUEXAWGWKVTDAWOWRWSWKVTUEKWGWSWIVRWJVSDABUIZDACUJUKULUMRXAWIVRUEZWGWS
      XDBXCUNTUOUPUQURUMUSURVNWCWDVNWBBABBUTVNWAVRVNVTAABAUTVMVTLZAVMVTVLVLHZBV
      AVMVRXFVTABBUIVRVSVBVCVDUNVEVFVGWCAVHZUQVQWCWDVQWBBACBUTVQWAVRVQVTAACAUTV
      PXEAVPVTVOVOHZCVAVPVSXHVTACCUJVRVSVIVCVDUNVEVFVGXGUQVJ $.
      $( [2-Jan-2002] $)
  $}

  $( Lemma for the Axiom of Power Sets with no distinct variable conditions. $)
  axpowndlem1 $p |- ( A. x x = y -> ( -. x = y ->
             E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) ) $=
    ( cv wceq wn wcel wex wal wi pm2.24 a4s ) ADZBDZEZOFMNGCHMCDGBIJAINMGJBIAHZ
    JAOPKL $.
    $( [4-Jan-2002] $)

  ${
    $d x w $.  $d z y w $.
    $( Lemma for the Axiom of Power Sets with no distinct variable
       conditions. $)
    axpowndlem2 $p |- ( -. A. x x = y -> ( -. A. x x = z -> ( -. x = y ->
         E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) ) ) $=
      ( vw cv wceq wal wn wcel wex wi wa zfpow 19.8a ax-4 imim12i alimi imim1i 
      eximi ax-mp a1i ax-gen hbnae hban dveeq2 hbnd adantr ax-17 dveel2 hbexd 
      adantl hbald hbimd dveel1 wb equequ1 notbid nd5 imdistani hba1 elequ1 
      a4s exbid syl adantll albid adantlr imbi12d ex cbvald elequ2 cbvexd 
      mpbii 19.21bi ) AEZBEZFZAGHZVOCEZFAGHZVQHZVOVPIZCJZVOVSIZBGZKZAGZVPVOIZKZ
      BGZAJZKZVRVTLZWLAWMDEZVPFZHZWNVPIZCJZWNVSIZBGZKZDGZVPWNIZKZBGZDJZKZDGWLAG
      XGDXFWPWQWSKZDGZXCKZBGZDJXFDBCMXKXEDXJXDBXBXIXCXAXHDWQWRWTWSWQCNWSBOPQRQS
      TUAUBWMXGWLDAVRVTAABAUCZACAUCUDZWMWPXFAXMVRWPWPAGKVTVRWOAXLABDUEUFUGWMXEA
      DWMDUHZWMXDABVRVTBABBUCACBUCUDZWMXBXCAXMWMXAADVRVTDABDUCACDUCUDWMWRWTAXMW
      MWQACVRVTCABCUCACCUCUDVRWQWQAGKVTABDUIUGUJWMWSABXOVTWSWSAGKVRACDUIUKULUMZ
      ULVRXCXCAGKVTABDUNUGZUMULUJUMWMWNVOFZXGWLUOWMXRLZWPWAXFWKXRWPWAUOWMXRWOVQ
      DABUPUQUKWMXFWKUOXRWMXEWJDAXMWMXDABXOWMXBXCAXMWMXAADXNXPULXQUMULWMXRXEWJU
      OZXSWMXRBGZLZXTWMXRYAVRXRYAKVTBADURZUGUSYBXDWIBWMYABXOXRBUTZUDYBXBWGXCWHW
      MXBWGUOYAWMXAWFDAXMXPWMXRXAWFUOXSWRWCWTWEVTXRWRWCUOZVRVTXRLVTXRCGZLYEVTXR
      YFCADURUSYFYEVTYFWQWBCXRCUTXRWQWBUOCDABVAVBVCUKVDVEVRXRWTWEUOZVTVRXRLVRYA
      LYGVRXRYAYCUSYAYGVRYAWSWDBYDXRWSWDUOBDACVAVBVFUKVDVGVHVIVJUGYAXCWHUOZWMXR
      YHBDABVKVBUKVHVFVDVIVLUGVHVIVJVMVNVI $.
      $( [4-Jan-2002] $)
  $}


  ${
    $d x w $.  $d y z w $.
    $( Lemma for the Axiom of Power Sets with no distinct variable
       conditions. $)
    axpowndlem3 $p |- ( -. x = y ->
               E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) $=
      ( vw cv wceq wal wn wcel wex wi axpowndlem2 axpowndlem1 hbae wb nd3 mtt 
      syl ax-10o alequcoms alnex 3imtr3g sylbird a4sd imim1d alimd eximd c0 
      csn p0ex eleq2 imbi2d albidv cla4ev 0ex snid eleq1 mpbiri mpg neq0 
      con1bii imbi1i albii exbii mpbir hbnae dveel1 nalequcoms hbexd hbnd 
      dveel2 hbimd wa dveeq2 imdistani hba1 elequ2 a4s exbid adantl notbid 
      elequ1 imbi12d ex cbvald mpbii syl5 a1dd pm2.61d2 pm2.61ii ) AEZBEZFZAGZW
      KCEZFAGZWMHZWKWLIZCJZWKWOIBGZKZAGZWLWKIZKZBGZAJZKZABCLABCMZWPWNXGWPWNHZXF
      WQWPWRAJZHZXCKZBGZAJZXFXIWPXMXEAACANWPXLXDBACBNWPXBXKXCWPXAXKAWPXAWSHZXKW
      PWTHXOXAOACBPWTWSQRWPWRHZCGZXPAGZXOXKXQXRKCAXPCASTWRCUAWRAUAUBUCUDUEUFUGX
      IWKDEZIZAJZHZXSWKIZKZDGZAJZXNYFXSUHFZYCKZDGZAJZYGXSUHUIZIZKZYJDYIYMDGAYKU
      JWKYKFZYHYMDYNYCYLYGWKYKXSUKULUMUNYGYLUHYKIUHUOUPXSUHYKUQURUSYEYIAYDYHDYB
      YGYCYGYAAXSUTVAVBVCVDVEXIYEXMAABAVFZXIYDXLDBABBVFZXIYBYCBYPXIYABYPXIXTBAY
      OXTXTBGKBABADVGVHVIVJYCYCBGKBABADVKVHVLXIXSWLFZYDXLOXIYQVMZYBXKYCXCYRYAXJ
      YRXIYQAGZVMYAXJOZXIYQYSABDVNVOYSYTXIYSXTWRAYQAVPYQXTWROADBAVQVRVSVTRWAYQY
      CXCOXIDBAWBVTWCWDWEVSWFWGWHXHWIWJ $.
      $( [4-Jan-2002] $)
  $}

  ${
    $d x w $.  $d y w $.  $d z w $.
    $( Lemma for the Axiom of Power Sets with no distinct variable
       conditions. $)
    axpowndlem4 $p |- ( -. A. y y = x -> ( -. A. y y = z -> ( -. x = y
      -> E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) ) ) $=
      ( vw cv wceq wal wn wcel wex wi wa axpowndlem3 ax-gen hbnae hban dveeq1 
      hbnd adantr ax-17 dveel1 hbexd ax-15 imp hbald hbimd dveel2 wb equequ2 
      notbid adantl nd5 imdistani hba1 elequ2 a4s exbid syl ax-4 sylan2 
      adantll biidd a1i cbvald imbi12d albid elequ1 ex mpbii 19.21bi ) BEZAEZFB
      GHZVKCEZFBGHZVLVKFZHZVLVKIZCJZVLVNIZBGZKZAGZVKVLIZKZBGZAJZKZVMVOLZWHBWIVL
      DEZFZHZVLWJIZCJZVTDGZKZAGZWJVLIZKZDGZAJZKZDGWHBGXBDADCMNWIXBWHDBVMVOBBABO
      ZBCBOPZWIWLXABXDVMWLWLBGKVOVMWKBXCBADQRSWIWTBAVMVOABAAOBCAOPZWIWSBDWIDTZW
      IWQWRBXDWIWPBAXEWIWNWOBXDVMWNWNBGKVOVMWMBCBACOBADUAUBSWIVTBDXFVMVOVTWAKAC
      BUCUDZUEUFUEVMWRWRBGKVOBADUGSUFZUEUBUFWIWJVKFZXBWHUHWIXILZWLVQXAWGXIWLVQU
      HWIXIWKVPDBAUIUJUKWIXAWGUHXIWIWTWFAXEWIWSWEDBXDXHWIXIWSWEUHXJWQWCWRWDXJWI
      XIAGZLZWQWCUHWIXIXKVMXIXKKVOABDULSUMXLWPWBAWIXKAXEXIAUNPXLWNVSWOWAVOXKWNV
      SUHZVMVOXIXMXKVOXILVOXICGZLXMVOXIXNCBDULUMXNXMVOXNWMVRCXICUNXIWMVRUHCDBAU
      OUPUQUKURXIAUSUTVAWIWOWAUHXKWIVTVTDBXDXGXIVTVTUHKWIXIVTVBVCVDSVEVFURXIWRW
      DUHWIDBAVGUKVEVHVDUQSVEVHVDVIVJVH $.
      $( [4-Jan-2002] $)
  $}


  ${
    $d x w $.  $d y w $.
    $( A version of the Axiom of Power Sets with no distinct variable
       conditions. $)
    axpownd $p |- ( -. x = y ->
               E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) $=
      ( vw cv wceq wal wn wcel wex wi axpowndlem4 axpowndlem1 alequcoms a1d wa 
      hbnae hbae hban el dveel1 nalequcoms wb elequ2 a1i cbvexd mpbii 19.8a 
      syl df-ex sylib adantr biidd dral1 alnex 3bitr3g nd2 mtt bitrd dral2 
      adantl mtbid pm2.21d 19.21ai ex pm2.61i pm2.61ii ) BEZAEZFBGVHCEZFBGZVIVH
      FZHZVIVHIZCJZVIVJIBGZKZAGZVHVIIZKZBGZAJZKZABCLWCABABCMZNVLAGZVKWCKWEWCVKW
      DOWEHZVKWCWFVKPZWBVMWGWAWBWGVTBWFVKBABBQZBCBRSWGVRVSWGVNBJZHZAGZVRWFWKHZV
      KWFWIAJZWLWFWIWMWFVIDEZIZDJWIADTWFWOVNDBWHWOWOBGKBABADUAUBWNVHFWOVNUCKWFD
      BAUDUEUFUGWIAUHUIWIAUJUKULVKWKVRUCWFWJVQBCAVKWJVOHZVQVKVNHZBGWQCGWJWPWQWQ
      BCVKWQUMUNVNBUOVNCUOUPVKVPHWPVQUCBCAUQVPVOURUIUSUTVAVBVCVDWAAUHUIOVEVFVG 
      $.
      $( [4-Jan-2002] $)
  $}

$(
  @{
    @d x z @.  @d y z @.
    axpowndNEWlem1 @p  |- ( A. x x = y ->
        ( ( A. x x = y -> E. z A. x ( E. z z e. y -> x e. z ) )
         -> E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) ) @=
      ( weq wal wel wex wi cv csn c0 wceq wn wcel wa en2lp visset snid biantru
      mtbir snnzOLD a1bi mtbi neq0 imbi1i albii bicomi snex eqeq1 notbid eleq1
     imbi12d cla4v sylbi mto hbae wb elequ2 a4s exbidv imbi1d albid mtbii nexdv
     pm2.21d a2i com12 ) ABDZAEZCBFZCGZACFZHZAEZCGZHVIABFCGVLBEHAEBAFHBEAGZVIVO
      VPVIVOVPVIVNCVICAFZCGZVLHZAEZVNVTCIZJZKLZMZWBWANZHZWEWFWEWEWAWBNZOWBWAPWG
      WEWACQZRSTWDWEWAWHUAUBUCVTAIZKLZMZVLHZAEZWFWMVTWLVSAWKVRVLCWIUDUEUFUGWLWF
      AWBWAUHWIWBLZWKWDVLWEWNWJWCWIWBKUIUJWIWBWAUKULUMUNUOVIVSVMAABAUPVIVRVKVLV
      IVQVJCVHVQVJUQAABCURUSUTVAVBVCVDVEVFVG @.
  @}

  @{
    @d x w @.  @d y w @.
   axpowndNEW @p  |- ( ( A. x x = y -> E. z A. x ( E. z z e. y -> x e. z ) ) ->
               E. x A. y ( A. x ( E. z x e. y -> A. y x e. z ) -> y e. x ) ) @=
?@.
  @}
$)

  $( Lemma for the Axiom of Regularity with no distinct variable conditions. $)
  axregndlem1 $p |- ( A. x x = z -> ( x e. y ->
               E. x ( x e. y /\ A. z ( z e. x -> -. z e. y ) ) ) ) $=
    ( cv wceq wal wcel wex wn wi wa hbae elirrv elequ1 mtbii a4s pm2.21d 
    19.21ai anim2i expcom eximd 19.8a syl5 ) ADZCDZEZAFZUDBDZGZAHUIUEUDGZUEUHGI
    ZJZCFZKZAHUIUGUIUNAACALUIUGUNUGUMUIUGULCACCLUGUJUKUFUJIAUFUDUDGUJAMACANOPQR
    STUAUIAUBUC $.
    $( [3-Jan-2002] $)

  ${
    $d x w $.  $d z y w $.
    $( Lemma for the Axiom of Regularity with no distinct variable
       conditions. $)
    axregndlem2 $p |- ( x e. y ->
                 E. x ( x e. y /\ A. z ( z e. x -> -. z e. y ) ) ) $=
      ( vw cv wceq wal wcel wn wi wa wex axreg ax-gen hbnae hban dveel2 adantr 
      ax-17 dveel1 adantl ax-15 impcom hbnd hbimd hbald hband hbexd wb elequ1 
      nd5 imdistani hba1 elequ2 imbi1d a4s albid syl anbi12d ex cbvexd imbi12d 
      cbvald mpbii 19.21bi elirrv mtbii pm2.21d axregndlem1 pm2.61ii ) AEZBEZFZ
      AGZVKCEZFAGZVKVLHZVQVOVKHZVOVLHZIZJZCGZKZALZJZVNIZVPIZWEWFWGKZWEAWHDEZVLH
      ZWJVOWIHZVTJZCGZKZDLZJZDGWEAGWPDDBCMNWHWPWEDAWFWGAABAOACAOPZWHWJWOAWQWFWJ
      WJAGJWGABDQRZWHWNADWHDSWHWJWMAWRWHWLACWFWGCABCOACCOZPWHWKVTAWQWGWKWKAGJWF
      ACDTUAWHVSAWQWGWFVSVSAGJCBAUBUCUDUEUFUGZUHUEWHWIVKFZWPWEUIWHXAKWJVQWOWDXA
      WJVQUIZWHDABUJZUAWHWOWDUIXAWHWNWCDAWQWTWGXAWNWCUIZJWFWGXAXDWGXAKZWJVQWMWB
      XAXBWGXCUAXEWGXACGZKZWMWBUIWGXAXFCADUKULXGWLWACWGXFCWSXACUMPXFWLWAUIZWGXA
      XHCXAWKVRVTDACUNUOUPUAUQURUSUTUAVARVBUTVCVDVEUTVNVQWDVMVQIAVMVKVKHVQAVFAB
      AUNVGUPVHABCVIVJ $.
      $( [3-Jan-2002] $)
  $}

  ${
    $d x w $.  $d y w $.  $d z w $.
    $( A version of the Axiom of Regularity with no distinct variable
       conditions. $)
    axregnd $p |- ( x e. y ->
                 E. x ( x e. y /\ A. z ( z e. x -> -. z e. y ) ) ) $=
      ( vw cv wceq wal wcel wn wi wa wex hbnae hban dveel2 adantr adantl hbnd 
      hbimd wb elequ1 notbid imbi12d a1i cbvald anbi2d exbid axregndlem2 
      syl5bi ex axregndlem1 alequcoms hbae elirrv elequ2 mtbii a4s a1d a5i 
      anim2i expcom eximd 19.8a syl5 pm2.61ii ) CEZAEZFCGZVFBEZFZCGZVGVIHZVLVFV
      GHZVFVIHZIZJZCGZKZALZJZVHIZVKIZVTWAWBKZVLDEZVGHZWDVIHZIZJZDGZKZALVSVLWCWJ
      VRAWAWBACAAMCBAMNWCWIVQVLWCWHVPDCWAWBCCACMCBCMNZWCWEWGCWKWAWEWECGJWBCADOP
      WCWFCWKWBWFWFCGJWACBDOQRSWDVFFZWHVPTJWCWLWEVMWGVODCAUAWLWFVNDCBUAUBUCUDUE
      UFUGABDUHUIUJVTACABCUKULVKVLALVSVLVKVLVRACBAUMVLVKVRVKVQVLVJVPCVKVOVMVJVO
      CVJVFVFHVNCUNCBCUOUPUQURUSUTVAVBVLAVCVDVE $.
      $( [3-Jan-2002] $)
  $}

  ${
    $d x w $.  $d z y w $.
    $( Lemma for the Axiom of Infinity with no distinct variable conditions. $)
    axinfndlem1 $p |- ( A. x y e. z -> E. x ( y e. x /\
                 A. y ( y e. x -> E. z ( y e. z /\ z e. x ) ) ) ) $=
      ( vw cv wceq wal wcel wa wex wi wn zfinf a1i hbnae hban ax-15 imp wb 
      biidd cbvald dveel1 adantr adantl hband hbexd hbimd hbald elequ2 nd5 
      imdistani hba1 anbi2d a4s exbid syl imbi12d ax-4 sylan2 albid adantll 
      anbi12d ex cbvexd mpbii nd1 pm2.21d nd2 pm2.61ii ) AEZBEZFAGZVJCEZFAGZVKV
      MHZAGZVKVJHZVQVOVMVJHZIZCJZKZBGZIZAJZKZVLLZVNLZWEWFWGIZVODGZVKDEZHZWKVOVM
      WJHZIZCJZKZBGZIZDJZKWEWRWIDBCMNWHWIVPWRWDWHVOVODAWFWGAABAOACAOPZWFWGVOVPK
      BCAQRZWJVJFZVOVOSKWHXAVOTNUAWHWQWCDAWSWHWKWPAWFWKWKAGKWGABDUBUCZWHWOABWFW
      GBABBOACBOZPWHWKWNAWSXBWHWMACWFWGCABCOACCOPWHVOWLAWTWGWLWLAGKWFACDUBUDUEU
      FUGUHUEWHXAWQWCSWHXAIZWKVQWPWBXAWKVQSZWHDABUIZUDXDWHXABGZIWPWBSZWHXAXGWFX
      AXGKWGBADUJUCUKWGXGXHWFWGXGIWOWABWGXGBXCXABULPWGXAWOWASXGWGXAIZWKVQWNVTXA
      XEWGXFUDXIWGXACGZIWNVTSZWGXAXJCADUJUKXJXKWGXJWMVSCXACULXAWMVSSCXAWLVRVODA
      CUIUMUNUOUDUPUQXABURUSUTVAUPVBVCVDUQVEVCVLVPWDABCVFVGVNVPWDACBVHVGVI $.
      $( [5-Jan-2002] $)
  $}

  ${
    $d x w $.  $d y w $.  $d z w $.
    $( A version of the Axiom of Infinity with no distinct variable
       conditions. $)
    axinfnd $p |- E. x ( y e. z -> ( y e. x /\
                 A. y ( y e. x -> E. z ( y e. z /\ z e. x ) ) ) ) $=
      ( vw cv wcel wa wex wi wal wceq wn axinfndlem1 ax-gen hbnae hban dveel2 
      hbald adantl adantr ax-17 ax-15 impcom hband hbexd hbimd wb nd5 
      imdistani hba1 elequ1 a4s albid anbi1d exbid syl imbi12d adantll ex 
      cbvald bi2anan9r mpbii 19.21bi nd1 alequcoms pm2.21d nd3 pm2.61ii 
      19.35ri ) BEZCEZFZVJAEZFZVNVLVKVMFZGZCHZIZBJZGZAVJVMKBJZVJVKKBJZVLAJZVTAH
      ZIZWALZWBLZWEWFWGGZWEBWHDEZVKFZAJZWIVMFZWLWJVOGZCHZIZDJZGZAHZIZDJWEBJWSDA
      DCMNWHWSWEDBWFWGBBABOBCBOPZWHWKWRBWTWGWKWKBJIWFWGWJBABCAOZBCDQZRSWHWQBAWF
      WGABAAOXAPZWHWLWPBWFWLWLBJIWGBADQTZWHWOBDWHDUAWHWLWNBWTXDWHWMBCWFWGCBACOB
      CCOPWHWJVOBWGWJWJBJIWFXBSWGWFVOVOBJICABUBUCUDUEUFZRUDUEUFWHWIVJKZWSWEUGZW
      HXFGWHXFAJZGZXGWHXFXHWFXFXHIWGABDUHTUIXIWKWCWRWDXHWKWCUGWHXHWJVLAXFAUJZXF
      WJVLUGADBCUKZULUMSXIWQVTAWHXHAXCXJPXHWLVNWHWPVSXFWLVNUGZADBAUKZULWHWOVRDB
      WTXEWHXFWOVRUGZWGXFXNWFWGXFGZWLVNWNVQXFXLWGXMSXOWGXFCJZGWNVQUGZWGXFXPCBDU
      HUIXPXQWGXPWMVPCXFCUJXFWMVPUGCXFWJVLVOXKUNULUOSUPUQURUSUTVAUOUQUPUSUTVBVC
      USWAWCWDWCLABABCVDVEVFWBWCWDBCAVGVFVHVI $.
      $( [5-Jan-2002] $)
  $}

  $( Lemma for the Axiom of Choice with no distinct variable conditions. $)
  axacndlem1 $p |- ( A. x x = y ->
            E. x A. y A. z ( A. x ( y e. z /\ z e. w ) -> E. w A. y ( E. w
          ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) ) <-> y = w ) ) ) $=
    ( cv wceq wal wcel wa wex wb wi hbae nd1 pm2.21d simpl alimi syl5 19.21ai 
    19.8a syl ) AEZBEZFAGZUCCEZHZUEDEZHZIZAGZUIUCUGHUGUBHIIDJUCUGFKBGDJZLZCGZBG
    ZUNAJUDUMBABBMUDULCABCMUDUFAGZUKUJUDUOUKABCNOUIUFAUFUHPQRSSUNATUA $.
    $( [3-Jan-2002] $)

  $( Lemma for the Axiom of Choice with no distinct variable conditions. $)
  axacndlem2 $p |- ( A. x x = z ->
            E. x A. y A. z ( A. x ( y e. z /\ z e. w ) -> E. w A. y ( E. w
          ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) ) <-> y = w ) ) ) $=
    ( cv wceq wal wcel wa wex wb wi hbae nd1 pm2.21d simpr alimi syl5 19.21ai 
    19.8a syl ) AEZCEZFAGZBEZUCHZUCDEZHZIZAGZUIUEUGHUGUBHIIDJUEUGFKBGDJZLZCGZBG
    ZUNAJUDUMBACBMUDULCACCMUDUHAGZUKUJUDUOUKACDNOUIUHAUFUHPQRSSUNATUA $.
    $( [3-Jan-2002] $)

  $( Lemma for the Axiom of Choice with no distinct variable conditions. $)
  axacndlem3 $p |- ( A. y y = z ->
            E. x A. y A. z ( A. x ( y e. z /\ z e. w ) -> E. w A. y ( E. w
          ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) ) <-> y = w ) ) ) $=
    ( cv wceq wal wcel wa wex wb wi hbae nd3 pm2.21d simpl alimi syl5 19.21ai 
    a5i 19.8a syl ) BEZCEZFZBGZUCUDHZUDDEZHZIZAGZUJUCUHHUHAEHIIDJUCUHFKBGDJZLZC
    GZBGZUOAJUEUNBUFUMCBCCMUFUGAGZULUKUFUPULBCANOUJUGAUGUIPQRSTUOAUAUB $.
    $( [3-Jan-2002] $)

  ${
    $d x v $.  $d y z w v $.
    $( Lemma for the Axiom of Choice with no distinct variable conditions. $)
    axacndlem4 $p |- E. x A. y A. z ( A. x ( y e. z /\ z e. w ) ->
              E. w A. y ( E. w ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) )
                     <-> y = w ) ) $=
      ( vv cv wceq wal wcel wa wex wb wi wn zfac ax-4 imim1i 2alimi eximi 
      ax-mp hbnae hban ax-17 ax-15 impcom adantrr imp adantrl hband hbald 
      dveel1 adantl hbexd ax-12 hbbid hbimd nd5 sylan9 hba1 hba2 biidd a1i 
      cbvald adantr alimd alimi syl5 imdistani elequ2 anbi2d a4s exbid bibi1d 
      albid syl adantll imbi12d ex syld cbvexd mpbii exp32 axacndlem2 
      axacndlem1 hbae nd2 pm2.21d simpr 19.21ai 19.8a pm2.61iii ) AFZCFZGAHZWLB
      FZGAHZWLDFZGAHZWOWMIZWMWQIZJZAHZXAWOWQIZWQWLIZJZJZDKZWOWQGZLZBHZDKZMZCHZB
      HZAKZWNNZWPNZWRNZXOXPXQXRJZJZXAEHZXAXCWQEFZIZJZJZDKZXHLZBHZDKZMZCHZBHZEKZ
      XOXAYIMZCHBHZEKYMEBCDOYOYLEYNYJBCYAXAYIXAEPQRSTXTYLXNEAXPXSAACAUAXQXRAABA
      UAADAUAUBUBZXTYKABXPXSBACBUAXQXRBABBUAADBUAZUBUBZXTYJACXPXSCACCUAXQXRCABC
      UAZADCUAUBUBZXTYAYIAYPXTXAAEXTEUCXTWSWTAXPXQWSWSAHMZXRXQXPUUABCAUDUEUFXPX
      RWTWTAHZMZXQXPXRUUCCDAUDUGUHUIZUJXTYHADXPXSDACDUAXQXRDABDUAADDUAUBUBZXTYG
      ABYRXTYFXHAYPXTYEADUUEXTXAYDAUUDXSYDYDAHMXPXSXCYCAXQXRXCXCAHMBDAUDUGXRYCY
      CAHMXQADEUKULUIULUIUMXSXHXHAHMZXPXQXRUUFBDAUNUGULUOUJUMUPUJUJXTYBWLGZUUGC
      HZBHZYLXNLZXPXQUUGUUIMXRXPUUGUUHXQUUICAEUQXQUUGBCYSBAEUQUJURUFXTUUIUUJXTU
      UIJZYKXMBXTUUIBYRUUHBUSUBUUKYJXLCXTUUICYTUUGCBUTUBUUKYAXBYIXKXTYAXBLUUIXT
      XAXAEAYPUUDUUGXAXALMXTUUGXAVAVBVCVDXSUUIYIXKLZXPXSUUIJXSUUGDHZBHZJUULXSUU
      IUUNXRUUIUUNMXQXRUUGBHUUNUUIXRUUGUUMBYQDAEUQVEUUHUUGBUUGCPVFVGULVHUUNUULX
      SUUNYHXJDUUGDBUTUUNYGXIBUUMBUSUUMYGXILBUUMYFXGXHUUMYEXFDUUGDUSUUGYEXFLDUU
      GYDXEXAUUGYCXDXCEADVIVJVJVKVLVMVKVNVLULVOVPVQVNVNVRVSVTWAWBABCDWCABCDWDWR
      XNXOWRXMBADBWEWRXLCADCWEWRUUBXKXBWRUUBXKADCWFWGXAWTAWSWTWHVFVGWIWIXNAWJVO
      WK $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x v $.  $d y v $.  $d z w v $.
    $( Lemma for the Axiom of Choice with no distinct variable conditions. $)
    axacndlem5 $p |- E. x A. y A. z ( A. x ( y e. z /\ z e. w ) ->
              E. w A. y ( E. w ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) )
                     <-> y = w ) ) $=
      ( vv cv wceq wal wcel wa wex wb wi wn axacndlem4 hbnae hban dveel2 
      adantr ax-15 imp adantrl hband hbald ax-17 ad2antll impcom adantl hbexd 
      dveeq2 hbbid hbimd nd5 imdistani hba1 elequ1 anbi1d a4s albid syl ax-4 
      sylan2 adantlr adantll anbi12d exbid equequ1 bibi12d ex cbvald imbi12d 
      mpbii exp32 axacndlem3 axacndlem1 alequcoms hbae en2lp elequ2 anbi2d 
      mtbii pm2.21d a4sd 19.21ai a5i 19.8a pm2.61iii ) BFZCFZGBHZWHAFZGBHZWHDFZ
      GZBHZWHWIIZWIWMIZJZAHZWRWHWMIZWMWKIZJZJZDKZWNLZBHZDKZMZCHZBHZAKZWJNZWLNZW
      ONZXKXLXMXNJZJZEFZWIIZWQJZAHZXSXQWMIZXAJZJZDKZXQWMGZLZEHZDKZMZCHZEHZAKXKA
      ECDOXPYKXJAXLXOABCAPXMXNABAAPBDAPQQZXPYJXIEBXLXOBBCBPXMXNBBABPBDBPQQZXPYI
      BCXLXOCBCCPXMXNCBACPBDCPQQZXPXTYHBYMXPXSBAYLXPXRWQBXLXRXRBHMXOBCERSXLXNWQ
      WQBHMZXMXLXNYOCDBTUAUBUCZUDXPYGBDXLXODBCDPXMXNDBADPBDDPQQZXPYFBEXPEUEXPYD
      YEBYMXPYCBDYQXPXSYBBYPXPYAXABXNYAYABHMXLXMBDERUFXOXAXABHMZXLXNXMYRDABTUGU
      HUCUCUIXNYEYEBHMXLXMBDEUJUFUKZUDUIULUDXPXQWHGZYJXILZXPYTJZXPYTCHZJZUUAXPY
      TUUCXLYTUUCMXOCBEUMSUNUUDYIXHCXPUUCCYNYTCUOQUUDXTWSYHXGXOUUCXTWSLZXLXMUUC
      UUEXNXMYTUUEUUCXMYTJXMYTAHZJUUEXMYTUUFABEUMUNUUFUUEXMUUFXSWRAYTAUOYTXSWRL
      AYTXRWPWQEBCUPUQZURUSUHUTYTCVAVBVCVDXPYHXGLUUCXPYGXFDYQXPYFXEEBYMYSXPYTYF
      XELUUBYDXDYEWNXOYTYDXDLZXLXNYTUUHXMXNYTJXNYTDHZJUUHXNYTUUIDBEUMUNUUIUUHXN
      UUIYCXCDYTDUOYTYCXCLDYTXSWRYBXBUUGYTYAWTXAEBDUPUQVEURVFUHUTVDVDYTYEWNLXPE
      BDVGUHVHVIVJVFSVKUSUTVIVJVFVLVMABCDVNXKABABCDVOVPWOXJXKWNXIBWOXHCBDCVQWOW
      RXGAWOWRXGWNWRNBWNWPWIWHIZJWRWHWIVRWNUUJWQWPBDCVSVTWAURWBWCWDWEXJAWFUTWG 
      $.
      $( [3-Jan-2002] $)
  $}

  ${
    $d x v $.  $d y v $.  $d z v $.  $d w v $.
    $( A version of the Axiom of Choice with no distinct variable
       conditions. $)
    axacnd $p |- E. x A. y A. z ( A. x ( y e. z /\ z e. w ) -> E. w A. y
       ( E. w ( ( y e. z /\ z e. w ) /\ ( y e. w /\ w e. x ) ) <-> y = w ) ) $=
      ( vv cv wceq wal wcel wa wex wb wi wn axacndlem5 hbnae hban dveel1 
      ad2antrl dveel2 ad2antll hband hbald ax-15 imp adantl impcom adantrl 
      hbexd ax-12 hbbid hbimd nd5 imdistani hba1 elequ2 elequ1 anbi12d a4s 
      albid syl adantlr sylan9 hba2 anbi1d exbid bibi1d adantll imbi12d ex 
      cbvald mpbii exp32 axacndlem2 alequcoms axacndlem3 hbae nd3 pm2.21d 
      simpr alimi syl5 a5i 19.21ai 19.8a pm2.61iii ) CFZAFZGCHZWGBFZGCHZWGDFZGZ
      CHZWJWGIZWGWLIZJZAHZWQWJWLIZWLWHIZJZJZDKZWJWLGZLZBHZDKZMZCHZBHZAKZWINZWKN
      ZWNNZXKXLXMXNJZJZWJEFZIZXQWLIZJZAHZXTXAJZDKZXDLZBHZDKZMZEHZBHZAKXKABEDOXP
      YIXJAXLXOACAAPXMXNACBAPCDAPQQZXPYHXIBXLXOBCABPXMXNBCBBPCDBPZQQZXPYGXHECXL
      XOCCACPXMXNCCBCPCDCPQQZXPYAYFCYMXPXTCAYJXPXRXSCXMXRXRCHMXLXNCBERSXNXSXSCH
      MXLXMCDETUAUBZUCXPYECDXLXODCADPXMXNDCBDPCDDPQQZXPYDCBYLXPYCXDCYMXPYBCDYOX
      PXTXACYNXPWSWTCXOWSWSCHMZXLXMXNYPBDCUDUEUFXLXNWTWTCHMZXMXNXLYQDACUDUGUHUB
      UBUIXOXDXDCHMZXLXMXNYRBDCUJUEUFUKUCUIULXPXQWGGZYGXHLXPYSJYAWRYFXGXLYSYAWR
      LZXOXLYSJXLYSAHZJYTXLYSUUAACEUMUNUUAYTXLUUAXTWQAYSAUOYSXTWQLZAYSXRWOXSWPE
      CBUPECDUQURZUSUTUFVAVBXOYSYFXGLZXLXOYSJXOYSBHZDHZJUUDXOYSUUFXMYSUUEXNUUFB
      CEUMXNYSDBYKDCEUMUCVCUNUUFUUDXOUUFYEXFDUUEDUOZUUFYDXEBYSBDVDUUFYCXCXDUUFY
      BXBDUUGUUFXTWQXAUUEUUBDYSUUBBUUCUSUSVEVFVGUTVFUFVAVHVIVJVKUTVFVLVMXKACABC
      DVNVOXKBCABCDVPVOWNXJXKWNXIBCDBVQWMXHCWNWPAHZXGWRWNUUHXGCDAVRVSWQWPAWOWPV
      TWAWBWCWDXJAWEVAWF $.
      $( [3-Jan-2002] $)
  $}

  ${
    $d x y z w v u t $.
    $( Axiom of Extensionality ~ ax-ext , reproved from conditionless ZFC
       version and predicate calculus. $)
    zfcndext $p |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $=
      ( cv wcel wb wal wceq wex axextnd 19.35i 19.9v sylib ) CDZADZENBDZEFZCGOP
      HZCIRQRCCABJKRCLM $.
      $( [15-Aug-2003] $)

    $( Axiom of Replacement ~ ax-rep , reproved from conditionless ZFC
       axioms. $)
    zfcndrep $p |- ( A. w E. y A. z ( A. y ph -> z = y ) ->
                     E. y A. z ( z e. y <-> E. w ( w e. x /\ A. y ph ) ) ) $=
      ( wal cv wceq wi wex wcel wa wb hbe1 ax-17 hba1 hban hbex hbbi hbal hbim 
      elequ2 anbi1d exbidv bibi2d albidv imbi2d axrepnd 19.3 anbi1i exbii 
      bibi12i albii imbi2i mpbi chvar 19.35i anbi2i a1i bibi12d cbvex sylib ) 
      ACFZDGZCGZHIDFZCJZEFVDEGZKZVHBGZKZVCCFZLZEJZMZDFZEJVDVEKZVKVCLZEJZMZDFZCJ
      VGVPEVGVIVHVEKZVLLZEJZMZDFZIZEJZVGVPIZEJCBWICEVGVPCVFCNVOCDVIVNCVICOZVMCE
      VKVLCVKCOVCCPQRSTZUARVEVJHZWGWIEWLWFVPVGWLWEVODWLWDVNVIWLWCVMEWLWBVKVLCBE
      UBUCUDUEUFUGUDVGVICFZWBDFZVLLZEJZMZDFZIZEJWHVCECDUHWSWGEWRWFVGWQWEDWMVIWP
      WDVICWJUIWOWCEWNWBVLWBDWBDOUIUJUKULUMUNUKUOUPUQVPWAECWKVTEDVQVSEVQEOVRENS
      TVHVEHZVOVTDWTVIVQVNVSECDUBVNVSMWTVMVREVLVCVKVCCACPUIURUKUSUTUFVAVB $.
      $( [15-Aug-2003] $)

    $( Axiom of Union ~ ax-un , reproved from conditionless ZFC axioms. $)
    zfcndun $p |- E. y A. z ( E. w ( z e. w /\ w e. x ) -> z e. y ) $=
      ( cv wcel wa wex wi wal axunnd wceq elequ2 elequ1 anbi12d cbvexv imbi1i 
      albii exbii mpbir ) CEZDEZFZUBAEZFZGZDHZUABEZFZIZCJZBHUIUHUDFZGZBHZUIIZCJ
      ZBHBCAKUKUPBUJUOCUGUNUIUFUMDBUBUHLUCUIUEULDBCMDBANOPQRST $.
      $( [15-Aug-2003] $)

    $( Axiom of Power Sets ~ ax-pow , reproved from conditionless ZFC axioms.
       The proof uses the "Axiom of Twoness," ~ dtru . $)
    zfcndpow $p |- E. y A. z ( A. w ( w e. z -> w e. x ) -> z e. y ) $=
      ( cv wcel wi wal wex wceq wn dtru exnal mpbir hbe1 axpownd 19.23ai ax-mp 
      19.9v ax-17 19.3 imbi12i albii imbi1i exbii mpbi elequ1 imbi12d cbvalv ) 
      DEZCEZFZUJAEZFZGZDHZUKBEZFZGZCHZBIUQUKFZUQUMFZGZBHZURGZCHZBIZVAAIZVBCHZGZ
      BHZURGZCHZBIZVGUQUKJZKZBIZVNVQVOBHKBCLVOBMNVPVNBVMBOBCAPQRVMVFBVLVECVKVDU
      RVJVCBVHVAVIVBVAASVBCVBCTUAUBUCUDUCUEUFUTVFBUSVECUPVDURUOVCDBUJUQJULVAUNV
      BDBCUGDBAUGUHUIUDUCUEN $.
      $( [15-Aug-2003] $)

    $( Axiom of Regularity ~ ax-reg , reproved from conditionless ZFC
       axioms. $)
    zfcndreg $p |- ( E. y y e. x ->
                 E. y ( y e. x /\ A. z ( z e. y -> -. z e. x ) ) ) $=
      ( cv wcel wn wi wal wa wex hbe1 axregnd 19.23ai ) BDZADZEZPCDZNEQOEFGCHIZ
      BJBRBKBACLM $.
      $( [15-Aug-2003] $)

    $( Axiom of Infinity ~ ax-inf , reproved from conditionless ZFC axioms.
       Since we have already reproved Extensionality, Replacement, and Power
       Sets above, we are justified in referencing theorem ~ el in the
       proof. $)
    zfcndinf $p |- E. y ( x e. y /\
                 A. z ( z e. y -> E. w ( z e. w /\ w e. y ) ) ) $=
      ( cv wcel wa wex wi wal el ax-17 hbe1 hbim hbal hban hbex axinfnd 19.35i 
      syl 19.23ai ax-mp wceq elequ1 anbi1d exbidv imbi12d cbvalv anbi2i exbii 
      mpbir ) AEZBEZFZCEZUMFZUODEZFZUQUMFZGZDHZIZCJZGZBHUNUNULUQFZUSGZDHZIZAJZG
      ZBHZVEDHVKADKVEVKDVJDBUNVIDUNDLZVHDAUNVGDVLVFDMNOPQVEVEBJVKVEBLVEVJBBADRS
      TUAUBVDVJBVCVIUNVBVHCAUOULUCZUPUNVAVGCABUDVMUTVFDVMURVEUSCADUDUEUFUGUHUIU
      JUK $.
      $( [15-Aug-2003] $)

    $( Axiom of Choice ~ ax-ac , reproved from conditionless ZFC axioms. $)
    zfcndac $p |- E. y A. z A. w ( ( z e. w /\ w e. x ) -> E. v A. u ( E. t
              ( ( u e. w /\ w e. t ) /\ ( u e. t /\ t e. y ) ) <-> u = v ) ) $=
      ( cv wcel wa wex wceq wb wal wi axacnd ax-17 19.3 imbi1i 2albii exbii 
      mpbi equequ2 bibi2d elequ2 anbi2d elequ1 anbi12d cbvexv bibi1i syl6bb 
      albidv anbi1d exbidv equequ1 bibi12d cbvalv imbi2i mpbir ) CHZDHZIZVAAHZI
      ZJZFHZVAIZVAGHZIZJZVFVHIZVHBHZIZJZJZGKZVFEHZLZMZFNZEKZOZDNCNZBKVEVEUTVCIZ
      VCVLIZJZJZAKZUTVCLZMZCNZAKZOZDNCNZBKZVEBNZWLOZDNCNZBKWOBCDAPWRWNBWQWMCDWP
      VEWLVEBVEBQRSTUAUBWCWNBWBWMCDWAWLVEVTWKEAVQVCLZVTVGVDJZVFVCIZWEJZJZAKZVFV
      CLZMZFNWKWSVSXFFWSVSVPXEMXFWSVRXEVPEAFUCUDVPXDXEVOXCGAVHVCLZVJWTVNXBXGVIV
      DVGGADUEUFXGVKXAVMWEGAFUEGABUGUHUHUIUJUKULXFWJFCVFUTLZXDWHXEWIXHXCWGAXHWT
      VEXBWFXHVGVBVDFCDUGUMXHXAWDWEFCAUGUMUHUNFCAUOUPUQUKUIURTUAUS $.
      $( [15-Aug-2003] $)
  $}

$(
  @{
    @d x y z w @.
    zfcndpowNEW @p  |- E. x A. y ( A. x ( x e. y -> x e. z ) -> y e. x ) @=
     ( wel wi wal wex weq wa wb zfcndrep hbae 19.9rOLD equid a1bi albii exbii
       bitri
      imbi1i mpbir 19.37 mpbi ax-gen biantru bibi2i bicomi bi2 sylbi alimi
      eximi syl axpowndNEW ax-mp 19.9rvOLD ax-17 19.3rOLD imbi12i )
      ABDZACDZEZAFZBADZE
      ZBFZAGURCGZUSBFZEZAFZVBEZBFZAGZABHZAFZCBDZCGZUSEZAFZCGZEVKVMUSVNAAHZBFZIZ
      CGZJZAFZCGZVRVMWDEZCGZVMWEEWGVSVLEZAFZBGZWDEZCGVSCBAKWFWKCVMWJWDVMVMBGWJV
      MBABBLMVMWIBVLWHAVSVLANZOPQRSQTVMWDCABCLUAUBWDVQCWCVPAWCUSVOJZVPWMWCVOWBU
      SVNWACVTVNVSBWLUCUDQUEUFUSVOUGUHUIUJUKABCULUMVDVJAVCVIBVAVHVBUTVGAURVEUSV
      FURCUNUSBUSBUOUPUQPSPQT @.
  @}
$)

$( End of set.mm $)

$( The work below may eventually be broken off as a separate
   module, dedekind.mm. $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                       Real numbers
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Tarski's real number axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c RR < + 1 $.
  cre $a class RR $.
  cltr $a class < $.
  caddr $a class + $.
  c1r $a class 1 $.

  $( The class of reals exists $)
  axreex $a |- RR e. _V $.

  $( Trichotomy law for less than. $)
  axltlin $a |- ( ( A e. RR /\ B e. RR ) -> ( A < B \/ A = B \/ B < A ) ) $.

  $( Less than is asymmetric. $)
  axltasym $a |- ( ( A e. RR /\ B e. RR ) -> ( A < B -> -. B < A ) ) $.

  ${ $d A x $. $d B x $.
     $( Less than is dense in the reals $)
     axltdense $a |- ( ( A e. RR /\ B e. RR /\ A < B ) ->
     	       	       E. x e. RR ( A < x /\ x < B ) ) $.
  $}

  ${ $d A x y z $. $d B x y z $.
     $( Less than is Dedekind-complete. $)
     axdedekind $a |- ( ( ( A C_ RR /\ B C_ RR ) /\ 
     		      	  ( A =/= (/) /\ B =/= (/) ) /\
			  A. x e. A A. y e. B x < y ) ->
       E. z e. RR A. x e. A A. y e. B  ( -. z < x /\ -. y < z ) ) $.
  $}

  $( Rearrange the arguments in addition $)
  axaddrearr $a |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
     ( A + ( B + C ) ) = ( ( A + C ) + B ) ) $.

  ${ $d A x $. $d B x $.
     $( Existence of the difference between two reals. $)
     axsubex $a |- ( ( A e. RR /\ B e. RR ) ->
       E. x e. RR ( A + x ) = B ) $.
  $}

  $( Law relating addition and less than. $)
  axaddlt $a |- ( ( ( A e. RR /\ B e. RR ) /\ ( C e. RR /\ D e. RR ) ) ->
     ( ( A + B ) < ( C + D ) -> ( A < C \/ B < D ) ) ) $.

  $( ` 1 ` is a real number. $)
  ax1re $a |- 1 e. RR $.

  $( ` 1 ` is positive. $)
  ax1pos $a |- 1 < ( 1 + 1 ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Initial inferences from the Tarski axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Alias for ~ axltasym , for symmetry with ~ ltasymi . $)
  ltasym $p |- ( ( A e. RR /\ B e. RR ) -> ( A < B -> -. B < A ) ) $=
    ( axltasym ) ABC $.
    $( [?] $) $( [4-Jan-2013] $)


  ${
    ltasymi.1 $e |- A e. RR $.
    ltasymi.2 $e |- B e. RR $.

    $( Inference form of ~ ltasym . $)
    ltasymi $p |- ( A < B -> -. B < A ) $=
      ( cre wcel cltr wbr wn wi ltasym mp2an ) AEFBEFABGHBAGHIJCDABKL $.
      $( [?] $) $( [4-Jan-2013] $)
  $}  

  $( Less than is irreflexive $)
  ltirr $p |- ( A e. RR -> -. A < A ) $=
    ( cre wcel wa cltr wbr wn wi ltasym anidm pm4.8 3imtr3i ) ABCZMDAAEFZNGZHMO
    AAIMJNKL $.
    $( [?] $) $( [4-Jan-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Addition
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${ $d A x $. $d B x $.
     $( Addition commutes. $)
     addcom $p |- ( ( A e. RR /\ B e. RR ) -> ( A + B ) = ( B + A ) ) $=
       ( vx cre wcel wa cv caddr co wceq wrex axsubex wi opreq2 opreq1 eqeq12d 
       axaddrearr 3anidm12 syl5cbi r19.23adva adantr mpd ) ADEZBDEZFACGZHIZBJZC
       DKZABHIZBAHIZJZCABLUCUHUKMUDUCUGUKCDUGAUFHIZUFAHIZJZUKUCUEDEZFUGULUIUMUJ
       UFBAHNUFBAHOPUCUOUNAAUEQRSTUAUB $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

  ${
    addcomi.1 $e |- A e. RR $.
    addcomi.2 $e |- B e. RR $.

    $( Addition commutes. Inference form of ~ addcom . $)
    addcomi $p |- ( A + B ) = ( B + A ) $=
      ( cre wcel caddr co wceq addcom mp2an ) AEFBEFABGHBAGHICDABJK $.
      $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Addition is associative $)
  addass $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
     ( A + ( B + C ) ) = ( ( A + B ) + C ) ) $=
    ( cre wcel w3a caddr co wceq wa addcom opreq2d 3adant1 axaddrearr 3com23 
    eqtrd ) ADEZBDEZCDEZFABCGHZGHZACBGHZGHZABGHCGHZRSUAUCIQRSJTUBAGBCKLMQSRUCUD
    IACBNOP $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
    addassi.1 $e |- A e. RR $.
    addassi.2 $e |- B e. RR $.
    addassi.3 $e |- C e. RR $.

    $( Addition associates. Inference form of ~ addass . $)
    addassi $p |- ( A + ( B + C ) ) = ( ( A + B ) + C ) $=
      ( cre wcel caddr co wceq addass mp3an ) AGHBGHCGHABCIJIJABIJCIJKDEFABCL
      M $.
      $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Swap the second and third arguments in a triple addition. $)
  add23 $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
     ( ( A + B ) + C ) = ( ( A + C ) + B ) ) $=
    ( cre wcel w3a caddr co wceq addcom opreq2d 3adant1 addass 3com23 3eqtr3d
    wa ) ADEZBDEZCDEZFABCGHZGHZACBGHZGHZABGHCGHACGHBGHZRSUAUCIQRSPTUBAGBCJKLABC
    MQSRUCUDIACBMNO $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Swap the first and second arguments in a triple addition. $)
  add12 $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
    ( A + ( B + C ) ) = ( B + ( A + C ) ) ) $=
    ( cre wcel w3a caddr co wceq wa addcom opreq1d 3adant3 addass 3com12 
    3eqtr4d ) ADEZBDEZCDEZFABGHZCGHZBAGHZCGHZABCGHGHBACGHGHZQRUAUCISQRJTUBCGABK
    LMABCNRQSUDUCIBACNOP $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
     add23i.1 $e |- A e. RR $.
     add23i.2 $e |- B e. RR $.
     add23i.3 $e |- C e. RR $.

     $( Swap the second and third arguments in a triple addition. $)
     add23i $p |- ( ( A + B ) + C ) = ( ( A + C ) + B ) $=
       ( cre wcel caddr co wceq add23 mp3an ) AGHBGHCGHABIJCIJACIJBIJKDEFABCLM 
       $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

  ${ $d A x y z $. $d B x y z $. $d C x y z $.
     $( Cancellation law for addition $)
     addcan $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
       ( ( A + C ) = ( B + C ) <-> A = B ) ) $=
       ( vx vy vz cre wcel w3a caddr co wceq wa cv wrex axsubex anidms 
       3ad2ant2 adantr simpl3 simpl syl2an simp1l1 simp1l3 simp3l addass 
       syl111anc simp3r opreq2d simp1l2 syl11anc simprl simpl2l add23 simpl2r 
       opreq1d eqtrd simprr 3eqtr3d exp32 r19.23adv mpd simp1r 3eqtr3rd simp2r 
       eqtr3d 3expa ex opreq1 impbid1 ) AGHZBGHZCGHZIZACJKZBCJKZLZABLZVNVQVRVNV
       QMZBDNZJKZBLZDGOZVRVNWCVQVLVKWCVMVLWCDBBPQRSVSWBVRDGVSVTGHZWBVRVSWDWBMZM
       ZCENZJKZVTLZEGOZVRVMWDWJVSWEECVTPVKVLVMVQTWDWBUAUBWFWIVREGWFWGGHZWIVRVSW
       EWKWIMZVRVSWEWLIZVPWGJKZABWMAWHJKZVOWGJKZAWNWMVKVMWKWOWPLVKVLVMVQWEWLUCZ
       VKVLVMVQWEWLUDZVSWEWKWIUEZACWGUFUGWMWOAVTJKZAWMWHVTAJVSWEWKWIUHZUIWMBFNZ
       JKZALZFGOZWTALZWMVLVKXEVKVLVMVQWEWLUJZWQFBAPUKWMXDXFFGWMXBGHZXDXFWMXHXDM
       ZMZXCVTJKZXCWTAXJXKWAXBJKZXCXJVLXHWDXKXLLWMVLXIXGSWMXHXDULWDWBVSWLXIUMBX
       BVTUNUGXJWABXBJWDWBVSWLXIUOUPUQXJXCAVTJWMXHXDURZUPXMUSUTVAVBUQWMVOVPWGJV
       NVQWEWLVCUPVDWMBWHJKZWAWNBWMWHVTBJXAUIWMVLVMWKXNWNLXGWRWSBCWGUFUGVSWDWBW
       LVEUSVFVGUTVAVBUTVAVBVHABCJVIVJ $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Cancellation law for addition $)
  addcan2 $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
    ( ( A + B ) = ( A + C ) <-> B = C ) ) $=
    ( cre wcel w3a caddr co wceq addcom 3adant3 3adant2 eqeq12d wb addcan 
    3comr bitrd ) ADEZBDEZCDEZFZABGHZACGHZIBAGHZCAGHZIZBCIZUAUBUDUCUERSUBUDITAB
    JKRTUCUEISACJLMSTRUFUGNBCAOPQ $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
     addcani.1 $e |- A e. RR $.
     addcani.2 $e |- B e. RR $.
     addcani.3 $e |- C e. RR $.

     $( Cancellation law for addition. $)
     addcani $p |- ( ( A + C ) = ( B + C ) <-> A = B ) $=
       ( cre wcel caddr co wceq wb addcan mp3an ) AGHBGHCGHACIJBCIJKABKLDEFABCM
       N $.
       $( [?] $) $( [4-Jan-2013] $)

     $( Cancellation law for addition $)
     addcan2i $p |- ( ( A + B ) = ( A + C ) <-> B = C ) $=
       ( cre wcel caddr co wceq wb addcan2 mp3an ) AGHBGHCGHABIJACIJKBCKLDEFABC
       MN $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

  ${ $d A x y $. $d B x y $.
     subuniq $p |- ( ( A e. RR /\ B e. RR ) ->
       E! x e. RR ( A + x ) = B ) $=
       ( vy cv caddr co wceq cre wreu wrex wa weq wi wral wcel opreq2 eqeq1d 
       reu4 axsubex wb addcan2 3expb adantlr eqtr3 syl5bi r19.21aivva sylanbrc 
       ) BAEZFGZCHZAIJUKAIKUKBDEZFGZCHZLZADMZNZDIOAIOBIPZCIPZLZUKUNADIUPUJUMCUI
       ULBFQRSABCTUTUQADIIUTUIIPZULIPZLZLUJUMHZUPUOURVCVDUPUAZUSURVAVBVEBUIULUB
       UCUDUJUMCUEUFUGUH $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Zero
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

   $c 0 $.
   c0r $a class 0 $.
   
   $( Define zero as the fixed point of addition for one. $)
   df-0 $a |- 0 = ( iota_ x e. RR ( 1 + x ) = 1 ) $.

   $( Zero is a real number $)
   0re $p |- 0 e. RR $=
     ( vx c0r c1r cv caddr co wceq cre crio df-0 wreu wcel ax1re subuniq mp2an 
     riotacl ax-mp eqeltri ) BCADEFCGZAHIZHAJSAHKZTHLCHLZUBUAMMACCNOSAHPQR $.
     $( [?] $) $( [4-Jan-2013] $)

   ${ $d A x $.
      $( Zero is an identity element for addition over the reals. $)
      addid1 $p |- ( A e. RR -> ( A + 0 ) = A ) $=
        ( vx cre wcel c1r cv caddr co wceq wrex c0r ax1re axsubex mpan opreq1 
        id eqeq12d 0re add23 mp3an13 crio df-0 opreq2i wsbc wreu subuniq mp2an 
        riota4 ax-mp cvv wb riotaex csb sbceq1dig csbopr2g csbvarg opreq2d 
        eqtrd eqeq1d bitrd mpbi eqtri opreq1i syl6eq syl5cbi r19.23aiv syl ) AC
        DZEBFZGHZAIZBCJZAKGHZAIZECDZVHVLLBEAMNVKVNBCVKVJKGHZVJIVNVICDZVKVPVMVJA
        VJAKGOVKPQVQVPEKGHZVIGHZVJVOVQKCDVPVSILREVIKSTVREVIGVREVJEIZBCUAZGHZEKW
        AEGBUBUCVTBWAUDZWBEIZVTBCUEZWCVOVOWELLBEEUFUGVTBCUHUIWAUJDZWCWDUKVTBCUL
        WFWCBWAVJUMZEIWDBWAVJEUJUNWFWGWBEWFWGEBWAVIUMZGHWBBWAEVIUJGUOWFWHWAEGBW
        AUJUPUQURUSUTUIVAVBVCVDVEVFVG $.
        $( [?] $) $( [4-Jan-2013] $)
   $}

   $( Zero is a right identity element for addition. $)
   addid2 $p |- ( A e. RR -> ( 0 + A ) = A ) $=
     ( cre wcel c0r caddr co wceq 0re addcom mpan addid1 eqtrd ) ABCZDAEFZADEFZ
     ADBCMNOGHDAIJAKL $.
     $( [?] $) $( [4-Jan-2013] $)

  ${
     addidi.1 $e |- A e. RR $.

     $( Zero is a left identity for addition. $)
     addid1i $p |- ( A + 0 ) = A $=
       ( cre wcel c0r caddr co wceq addid1 ax-mp ) ACDAEFGAHBAIJ $.
       $( [?] $) $( [4-Jan-2013] $)

     $( Zero is a right identity for addition. $)
     addid2i $p |- ( 0 + A ) = A $=
       ( cre wcel c0r caddr co wceq addid2 ax-mp ) ACDEAFGAHBAIJ $.
       $( [?] $) $( [4-Jan-2013] $)
  $}
 
$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Subtraction and negation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c - -u $.
  csub $a class - $.
  cuneg $a class -u $.

  ${ $d x y z $.
     $( Define subtraction. $)
     df-sub $a |- - = { <. <. x , y >. , z >. | 
     	 ( ( ( x e. RR /\ y e. RR ) /\ z e. RR ) /\
	   ( y + z ) = x ) } $.
  $}

  $( Define negation $)
  df-neg $a |- -u = ( x e. RR |-> ( 0 - x ) ) $.

  ${ $d x y z w t u v p q $.
     $( Subtraction is a function from pairs of reals to the reals. $)
     subf $p |- - : ( RR X. RR ) --> RR $=
       ( vw vt vu vx vy vz vp vq cre cxp csub wf wfn crn wss df-f wfun cdm 
       wceq df-fn wrel cv wbr wa weq wi wal dffun2 wcel caddr co copab2 
       reloprab df-sub releqi mpbir visset breldm wex copab dmeqi dmoprab 
       relopab relxp cop simpll 19.23aiv wrex axsubex ancoms simpl simprl 
       simprr jca31 ex eximdv df-rex syl5ib mpd impbii eleq1 anbi1d eqeq2 
       anbi12d exbidv anbi2d opreq1 eqeq1d opelopab opelxp 3bitr4i eqrelriv 
       3eqtri syl6eleq elxp breq1 df-br eleq2i cvv wb opreq2 eloprabg mp3an 
       3bitri syl6bb anandi addcan2 3expb adantll sylbir eqtr3 syl5bi imp an4s 
       syl6bi adantr 19.23aivv sylbi syl anabsi5 gen2 ax-gen mpbir2an cab 
       rneqi rnoprab eqtri simplr abssi eqsstri ) IIJZIKLKYKMZKNZIOYKIKPYLKQZKR
       ZYKSKYKTYNKUAZAUBZBUBZKUCZYQCUBZKUCZUDZBCUEZUFZCUGBUGZAUGABCKUHYPDUBZIUI
       ZEUBZIUIZUDZFUBZIUIZUDZUUHUUKUJUKZUUFSZUDZDEFULZUAUUPDEFUMKUUQDEFUNZUOUP
       UUEAUUDBCYSUUAUUCYSYQYKUIZUUDYSYQYOYKYQYRKAUQZURYOUUQRUUPFUSZDEUTZYKKUUQ
       UURVAUUPDEFVBABUVBYKUVADEVCIIVDYQIUIZYRIUIZUDZUULUDZYRUUKUJUKZYQSZUDZFUS
       ZUVEYQYRVEZUVBUIUVKYKUIUVJUVEUVIUVEFUVEUULUVHVFVGUVEUVHFIVHZUVJUVDUVCUVL
       FYRYQVIVJUVEUULUVHUDZFUSUVJUVLUVEUVMUVIFUVEUVMUVIUVEUVMUDUVEUULUVHUVEUVM
       VKUVEUULUVHVLUVEUULUVHVMVNVOVPUVHFIVQVRVSVTUVAUVCUUIUDZUULUDZUUNYQSZUDZF
       USUVJDEYQYRUUTBUQZDAUEZUUPUVQFUVSUUMUVOUUOUVPUVSUUJUVNUULUVSUUGUVCUUIUUF
       YQIWAWBWBUUFYQUUNWCWDWEEBUEZUVQUVIFUVTUVOUVFUVPUVHUVTUVNUVEUULUVTUUIUVDU
       VCUUHYRIWAWFWBUVTUUNUVGYQUUHYRUUKUJWGWHWDWEWIYQYRIIUVRWJWKWLWMZWNUUSYQGU
       BZHUBZVEZSZUWBIUIZUWCIUIZUDZUDZHUSGUSUUDGHYQIIWOUWIUUDGHUWEUUDUWHUWEUUBU
       WHUVDUDZUWCYRUJUKZUWBSZUDZUWHYTIUIZUDZUWCYTUJUKZUWBSZUDZUDUUCUWEYSUWMUUA
       UWRUWEYSUWDYRKUCZUWMYQUWDYRKWPUWSUWDYRVEZKUIUWTUUQUIZUWMUWDYRKWQKUUQUWTU
       URWRUWBWSUIZUWCWSUIZYRWSUIUXAUWMWTGUQZHUQZUVRUUPUWFUUIUDZUULUDZUUNUWBSZU
       DZUWHUULUDZUWCUUKUJUKZUWBSZUDZUWMDEFUWBUWCYRWSWSWSDGUEZUUMUXGUUOUXHUXNUU
       JUXFUULUXNUUGUWFUUIUUFUWBIWAWBWBUUFUWBUUNWCWDZEHUEZUXGUXJUXHUXLUXPUXFUWH
       UULUXPUUIUWGUWFUUHUWCIWAWFWBUXPUUNUXKUWBUUHUWCUUKUJWGWHWDZFBUEZUXJUWJUXL
       UWLUXRUULUVDUWHUUKYRIWAWFUXRUXKUWKUWBUUKYRUWCUJXAWHWDXBXCXDXEUWEUUAUWDYT
       KUCZUWRYQUWDYTKWPUXSUWDYTVEZKUIUXTUUQUIZUWRUWDYTKWQKUUQUXTUURWRUXBUXCYTW
       SUIUYAUWRWTUXDUXECUQUUPUXIUXMUWRDEFUWBUWCYTWSWSWSUXOUXQFCUEZUXJUWOUXLUWQ
       UYBUULUWNUWHUUKYTIWAWFUYBUXKUWPUWBUUKYTUWCUJXAWHWDXBXCXDXEWDUWJUWOUWLUWQ
       UUCUWJUWOUDZUWLUWQUDZUUCUYCUWKUWPSZUUCUYDUYCUWHUVDUWNUDZUDUYEUUCWTZUWHUV
       DUWNXFUWGUYFUYGUWFUWGUVDUWNUYGUWCYRYTXGXHXIXJUWKUWPUWBXKXLXMXNXOXPXQXRXS
       XTYAYBYCUWAYCYMUUPEUSDUSZFYDZIYMUUQNUYIKUUQUURYEUUPDEFYFYGUYHFIUUPUULDEU
       UJUULUUOYHXQYIYJYC $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Closure law for subtraction. $)
  subcl $p |- ( ( A e. RR /\ B e. RR ) -> ( A - B ) e. RR ) $=
    ( cre csub subf foprcl ) ABCCCDEF $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
    subcli.1 $e |- A e. RR $.
    subcli.2 $e |- B e. RR $.

    $( Closure law for subtraction $)
    subcli $p |- ( A - B ) e. RR $=
      ( cre wcel csub co subcl mp2an ) AEFBEFABGHEFCDABIJ $.
      $( [?] $) $( [4-Jan-2013] $)
  $}

  ${ $d x y $.
     $( Negation is a function from reals to reals. $)
     negf $p |- -u : RR --> RR $=
       ( vx vy cre cuneg wf wfn crn wss df-f c0r cv csub co cvv wcel wral 
       oprex a1i rgen df-neg mptfng mpbi wceq wrex cab rnmpt eleq1 0re subcl 
       mpan syl5cbir r19.23aiv abssi eqsstri mpbir2an ) CCDEDCFZDGZCHCCDIJAKZLM
       ZNOZACPUPUTACUTURCOZJURLQRSACUSDATZUAUBUQBKZUSUCZACUDZBUECABCUSDVBUFVEBC
       VDVCCOZACVDVFUSCOZVAVCUSCUGJCOVAVGUHJURUIUJUKULUMUNUO $.
       $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Closure law for negation. $)
  negcl $p |- ( A e. RR -> ( -u ` A ) e. RR ) $=
    ( cre cuneg negf ffvelrni ) BBACDE $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
     negcli.1 $e |- A e. RR $.

     $( Closure law for negation $)
     negcli $p |- ( -u ` A ) e. RR $=
       ( cre wcel cuneg cfv negcl ax-mp ) ACDAEFCDBAGH $.
       $( [?] $) $( [5-Jan-2013] $)
  $}

  ${ $d A x $.
  $( The value of the negation function. $)
  fvneg $p |- ( A e. RR -> ( -u ` A ) = ( 0 - A ) ) $=
    ( vx c0r cv csub co cre cuneg opreq2 df-neg oprex fvmpt ) BACBDZEFCAEFGHMAC
    EIBJCAEKL $.
    $( [?] $) $( [4-Jan-2013] $)
  $}

  ${ $d A x y z $. $d B x y z $. $d C x y z $.
    $( Subtraction in terms of addition. $)
    subadd $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
      ( ( A - B ) = C <-> ( B + C ) = A ) ) $=
      ( vx vy vz cre wcel w3a csub co wceq cop wbr wa caddr cfv wb cdm wfun 
      cxp wf subf ffun ax-mp funbrfvbg mp3an1 opelxpi fdmi syl6eleqr sylan 
      3impa df-opr eqeq1i syl5bb cv copab2 eleq1 anbi1d eqeq2 anbi12d anbi2d 
      opreq1 eqeq1d opreq2 eloprabg df-br df-sub eleq2i bitri simpr df-3an 
      biimpi a1d ancrd impbid2 3bitrd ) AGHZBGHZCGHZIZABJKZCLZABMZCJNZVRVSOZVTO
      ZBCPKZALZOZWIWAWDJQZCLZWEWCVRVSVTWLWERZWDJSZHZVTWMWFJTZWOVTWMGGUAZGJUBWPU
      CWQGJUDUEWDCGJUFUGWFWDWQWNABGGUHWQGJUCUIUJUKULWBWKCABJUMUNUOWAWDCMZDUPZGH
      ZEUPZGHZOZFUPZGHZOZXAXDPKZWSLZOZDEFUQZHZWJWEXIVRXBOZXEOZXGALZOWFXEOZBXDPK
      ZALZOWJDEFABCGGGWSALZXFXMXHXNXRXCXLXEXRWTVRXBWSAGURUSUSWSAXGUTVAXABLZXMXO
      XNXQXSXLWFXEXSXBVSVRXABGURVBUSXSXGXPAXABXDPVCVDVAXDCLZXOWGXQWIXTXEVTWFXDC
      GURVBXTXPWHAXDCBPVEVDVAVFWEWRJHXKWDCJVGJXJWRDEFVHVIVJUOWAWJWIWGWIVKWAWIWG
      WAWGWIWAWGVRVSVTVLVMVNVOVPVQ $.
      $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Subtraction by zero is identity $)
  sub0 $p |- ( A e. RR -> ( A - 0 ) = A ) $=
    ( cre wcel c0r csub co wceq caddr addid2 wb 0re subadd mp3an2 anidms 
    mpbird ) ABCZADEFAGZDAHFAGZAIPQRJZPDBCPSKADALMNO $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Subtraction by self yields zero. $)
  subid $p |- ( A e. RR -> ( A - A ) = 0 ) $=
    ( cre wcel csub co c0r wceq caddr addid1 wb 0re subadd mp3an3 anidms 
    mpbird ) ABCZAADEFGZAFHEAGZAIPQRJZPPFBCSKAAFLMNO $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Equation relating subtraction and addition. $)
  addsub $p |- ( ( A e. RR /\ B e. RR ) -> ( A + ( B - A ) ) = B ) $=
    ( cre wcel wa csub co wceq caddr eqid wb simpr simpl subcl ancoms subadd 
    syl111anc mpbii ) ACDZBCDZEZBAFGZUBHZAUBIGBHZUBJUATSUBCDZUCUDKSTLSTMTSUEBAN
    OBAUBPQR $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
    addsubi.1 $e |- A e. RR $.
    addsubi.2 $e |- B e. RR $.

    $( Equation relating subtraction and addition. $)
    addsubi $p |- ( A + ( B - A ) ) = B $=
      ( cre wcel csub co caddr wceq addsub mp2an ) AEFBEFABAGHIHBJCDABKL $.
      $( [?] $) $( [4-Jan-2013] $)
  $}

  $( Adding a real to its negative yields zero $)
  addneg0 $p |- ( A e. RR -> ( A + ( -u ` A ) ) = 0 ) $=
    ( cre wcel cuneg cfv caddr co c0r csub fvneg opreq2d wceq 0re addsub mpan2 
    eqtrd ) ABCZAADEZFGAHAIGZFGZHQRSAFAJKQHBCTHLMAHNOP $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
     addsub2i.1 $e |- A e. RR $.
     addsub2i.2 $e |- B e. RR $.
     $( Addition is subtraction of negation. $)
     addsub2i $p |- ( A + B ) = ( A - ( -u ` B ) ) $=
       ( c0r cuneg cfv csub co caddr negcli subcli addassi addsubi opreq2i 
       addcomi eqtri cre wcel wceq addneg0 ax-mp opreq1i 3eqtr3ri addid2i 
       eqtr3i ) EABFGZHIZJIZABJIZUHBUGUHJIZJIZBUGJIZUHJIUJUIBUGUHDBDKZAUGCUNLZM
       ULBAJIUJUKABJUGAUNCNOBADCPQUMEUHJBRSUMETDBUAUBUCUDUHUOUEUF $.
       $( [?] $) $( [5-Jan-2013] $)
  $}

  $( Addition is subtraction of negation. $)
  addsub2 $p |- ( ( A e. RR /\ B e. RR ) -> ( A + B ) = ( A - ( -u ` B ) ) ) $=
    ( cre wcel caddr co cuneg cfv csub wceq c0r cif opreq1 eqeq12d opreq2 
    fveq2 opreq2d 0re elimel addsub2i dedth2h ) ACDZBCDZABEFZABGHZIFZJUBAKLZBEF
    ZUGUEIFZJUGUCBKLZEFZUGUJGHZIFZJABKKAUGJUDUHUFUIAUGBEMAUGUEIMNBUJJZUHUKUIUMB
    UJUGEOUNUEULUGIBUJGPQNUGUJAKCRSBKCRSTUA $.
    $( [?] $) $( [5-Jan-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Closure of addition
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Closure law for addition $)
  addcl $p |- ( ( A e. RR /\ B e. RR ) -> ( A + B ) e. RR ) $=
    ( cre wcel wa caddr co cuneg cfv csub addsub2 subcl negcl sylan2 eqeltrd ) 
    ACDZBCDZEABFGABHIZJGZCABKPRCDSCDQARLBMNO $.
    $( [?] $) $( [4-Jan-2013] $)

  ${
    addcli.1 $e |- A e. RR $.
    addcli.2 $e |- B e. RR $.

    $( Closure law for addition. $)
    addcli $p |- ( A + B ) e. RR $=
      ( cre wcel caddr co addcl mp2an ) AEFBEFABGHEFCDABIJ $.
      $( [?] $) $( [4-Jan-2013] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Ordering properties
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
     ltlini.1 $e |- A e. RR $.
     ltlini.2 $e |- B e. RR $.

     $( Trichotomy law for less than. $)
     ltlini $p |- ( A < B \/ A = B \/ B < A ) $=
       ( cre wcel cltr wbr wceq w3o axltlin mp2an ) AEFBEFABGHABIBAGHJCDABKL $.
       $( [?] $) $( [5-Jan-2013] $)
  $}

  $( Addition to both sides of 'less than'. $)
  ltadd1 $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
    ( A < B <-> ( A + C ) < ( B + C ) ) ) $=
    ( cre wcel w3a cltr wbr caddr co wn wceq wa wo ltirr 3ad2ant3 wi 3simpc 
    3simpb axaddlt syl11anc orel2 sylsyld axltasym ancoms 3adant3 syld con2d 
    wb addcan 3com12 breq1 notbid syl5cbi 3ad2ant2 sylbid jcad w3o addcl 
    3adant1 3adant2 axltlin 3orass df-or bitri sylib syl6ib imp3a 3impdir syl 
    impbid ) ADEZBDEZCDEZFZABGHZACIJZBCIJZGHZVOVPVRVQGHZKZVRVQLZKZMVSVOVPWAWCVO
    VTVPVOVTBAGHZVPKZVOCCGHZKZVTWDWFNZWDVNVLWGVMCOZPVOVMVNMVLVNMVTWHQVLVMVNRVLV
    MVNSBCACTUAWFWDUBUCVLVMWDWEQZVNVMVLWJBAUDUEUFUGUHVOWBVPVOWBBALZWEVMVLVNWBWK
    UIBACUJUKVMVLWKWEQVNWKBBGHZKWEVMWKWLVPBABGULUMBOUNUOUPUHUQVOWAWCVSVOWAWBVSN
    ZWCVSQVOVTWBVSURZWAWMQZVOVRDEZVQDEZWNVMVNWPVLBCUSUTVLVNWQVMACUSVAVRVQVBUAWN
    VTWMNWOVTWBVSVCVTWMVDVEVFWBVSVDVGVHUGVOVSVPWFNZVPVLVNVMVSWRQACBCTVIVNVLWRVP
    QZVMVNWGWSWIWFVPUBVJPUGVK $.
    $( [?] $) $( [5-Jan-2013] $)

  $( Addition to both sides of 'less than'. $)
  ltadd2 $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
     ( B < C <-> ( A + B ) < ( A + C ) ) ) $=
    ( cre wcel w3a cltr wbr caddr co wb ltadd1 3comr wceq addcom 3adant3 
    3adant2 breq12d bitr4d ) ADEZBDEZCDEZFZBCGHZBAIJZCAIJZGHZABIJZACIJZGHUAUBTU
    DUGKBCALMUCUHUEUIUFGTUAUHUENUBABOPTUBUIUFNUAACOQRS $.
    $( [?] $) $( [5-Jan-2013] $)

  ${
    ltaddi.1 $e |- A e. RR $.
    ltaddi.2 $e |- B e. RR $.
    ltaddi.3 $e |- C e. RR $.

    $( Addition to both sides of 'less than'. $)
    ltadd1i $p |- ( A < B <-> ( A + C ) < ( B + C ) ) $=
      ( cre wcel cltr wbr caddr co wb ltadd1 mp3an ) AGHBGHCGHABIJACKLBCKLIJMDE
      FABCNO $.
      $( [?] $) $( [5-Jan-2013] $)

    $( Addition to both sides of 'less than'. $)
    ltadd2i $p |- ( B < C <-> ( A + B ) < ( A + C ) ) $=
      ( cre wcel cltr wbr caddr co wb ltadd2 mp3an ) AGHBGHCGHBCIJABKLACKLIJMDE
      FABCNO $.
      $( [?] $) $( [5-Jan-2013] $)

    ${
       ltadd1rii.4 $e |- ( A + C ) < ( B + C ) $.
       $( Eliminate addition of identical elements from less than. $)
       ltadd1rii $p |- A < B $=
         ( cltr wbr caddr co ltadd1i mpbir ) ABHIACJKBCJKHIGABCDEFLM $.
         $( [?] $) $( [4-Jan-2013] $)
    $}

    ${
       ltadd2rii.4 $e |- ( A + B ) < ( A + C ) $.
       $( Eliminate addition of identical elements from less than. $)
       ltadd2rii $p |- B < C $=
         ( cltr wbr caddr co ltadd2i mpbir ) BCHIABJKACJKHIGABCDEFLM $.
         $( [?] $) $( [4-Jan-2013] $)
    $}
  $}

  ${
     addlti.1 $e |- A e. RR $.
     addlti.2 $e |- B e. RR $.
     addlti.3 $e |- C e. RR $.
     addlti.4 $e |- D e. RR $.

     $( Law splitting addition in less than $)
     addlti $p |- ( ( A + B ) < ( C + D ) -> ( A < C \/ B < D ) ) $=
       ( cre wcel caddr co cltr wbr wo wi axaddlt mp4an ) AIJBIJCIJDIJABKLCDKLM
       NACMNBDMNOPEFGHABCDQR $.
       $( [?] $) $( [6-Jan-2013] $)
  $}

  ${
     lttri.1 $e |- A e. RR $.
     lttri.2 $e |- B e. RR $.
     lttri.3 $e |- C e. RR $.

     $( 'Less than' is transitive. $)
     lttri $p |- ( ( A < B /\ B < C ) -> A < C ) $=
       ( cltr wbr wa wn wceq caddr co wo ltasymi anim12i ioran sylibr addlti 
       nsyl ltadd1i addcomi breq1i bitri notbii wi imnan mpbi breq2 anbi2d 
       mtbiri con2i ltlini 3ori syl11anc ) ABGHZBCGHZIZCAGHZJZCAKZJACGHZURBCLMZ
       ABLMZGHZJUTURBAGHZCBGHZNZVEURVFJZVGJZIVHJUPVIUQVJABDEOZBCEFOPVFVGQRBCABE
       FDESTUSVEUSCBLMZVDGHVECABFDEUAVLVCVDGCBFEUBUCUDUERVAURVAURUPVFIZUPVIUFVM
       JVKUPVFUGUHVAUQVFUPCABGUIUJUKULUSVAVBCAFDUMUNUO $.
       $( [?] $) $( [5-Jan-2013] $)
  $}

  $( 'Less than' is transitive. $)
  lttr $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) -> 
       ( ( A < B /\ B < C ) -> A < C ) ) $=
    ( cre wcel cltr wbr wa wi c0r cif wceq breq1 anbi1d imbi12d breq2 anbi12d 
    imbi1d anbi2d 0re elimel lttri dedth3h ) ADEZBDEZCDEZABFGZBCFGZHZACFGZIUDAJ
    KZBFGZUHHZUKCFGZIUKUEBJKZFGZUOCFGZHZUNIUPUOUFCJKZFGZHZUKUSFGZIABCJJJAUKLZUI
    UMUJUNVCUGULUHAUKBFMNAUKCFMOBUOLZUMURUNVDULUPUHUQBUOUKFPBUOCFMQRCUSLZURVAUN
    VBVEUQUTUPCUSUOFPSCUSUKFPOUKUOUSAJDTUABJDTUACJDTUAUBUC $.
    $( [?] $) $( [6-Jan-2013] $)

  ${ $d x y z $.
     $( 'Less than' strictly orders the reals. $)
     ltso $p |- < Or RR $=
       ( vx vy vz cre cltr cv ltirr lttr axltlin itlso ) ABCDEAFZGKBFZCFHKLIJ 
       $.
       $( [?] $) $( [6-Jan-2013] $)
  $}

  $( Trichotomy law for less than $)
  lttri2 $p |- ( ( A e. RR /\ B e. RR ) -> 
  	       	 ( A = B <-> ( -. A < B /\ -. B < A ) ) ) $=
    ( cre cltr wor wcel wa wceq wbr wn wb ltso sotrieq2 mpan ) CDEACFBCFGABHABD
    IJBADIJGKLCABDMN $.
    $( [?] $) $( [13-Jan-2013] $)

  $( A real is either positive, negative, or zero $)
  repnz $p |- ( A e. RR -> ( A < 0 \/ A = 0 \/ 0 < A ) ) $=
    ( cre wcel c0r cltr wbr wceq w3o 0re axltlin mpan2 ) ABCDBCADEFADGDAEFHIADJ
    K $.
    $( [?] $) $( [12-Jan-2013] $)

  $( A number is positive precisely if it is less than double itself. $)
  posdbl $p |- ( A e. RR -> ( 0 < A <-> A < ( A + A ) ) ) $=
    ( cre wcel c0r cltr wbr caddr co wb 0re ltadd1 mp3an1 anidms addid2 breq1d 
    bitrd ) ABCZDAEFZDAGHZAAGHZEFZATEFQRUAIZDBCQQUBJDAAKLMQSATEANOP $.
    $( [?] $) $( [12-Jan-2013] $)

  $( A number is negative precisely if it is greater than double itself. $)
  negdbl $p |- ( A e. RR -> ( A < 0 <-> ( A + A ) < A ) ) $=
    ( cre wcel c0r cltr wbr caddr co wb 0re ltadd2 mp3an3 anidms addid1 breq2d 
    bitrd ) ABCZADEFZAAGHZADGHZEFZSAEFQRUAIZQQDBCUBJAADKLMQTASEANOP $.
    $( [?] $) $( [12-Jan-2013] $)

  $( Zero is less than one. $)
  0lt1 $p |- 0 < 1 $=
    ( c0r c1r cltr wbr caddr co ax1pos cre wcel wb ax1re posdbl ax-mp mpbir ) 
    ABCDZBBBEFCDZGBHIOPJKBLMN $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Doubling preserves less than $)
  ltdbl $p |- ( ( A e. RR /\ B e. RR ) -> 
  	      	( A < B <-> ( A + A ) < ( B + B ) ) ) $=
    ( cre wcel wa cltr wbr caddr co wb ltadd1 3anidm23 biimpa wi ltadd2 
    3anidm12 addcl anidms adantr adantl lttr syl111anc exp3a sylbid imp mpd ex 
    simpl simpr wo axaddlt pm1.2 syl6 syl22anc impbid ) ACDZBCDZEZABFGZAAHIZBBH
    IZFGZURUSVBURUSEABHIZVAFGZVBURUSVDUPUQUSVDJABBKLMURUSVDVBNZURUSUTVCFGZVEUPU
    QUSVFJAABOPURVFVDVBURUTCDZVCCDVACDZVFVDEVBNUPVGUQUPVGAAQRSABQUQVHUPUQVHBBQR
    TUTVCVAUAUBUCUDUEUFUGURUPUPUQUQVBUSNUPUQUHZVIUPUQUIZVJUPUPEUQUQEEVBUSUSUJUS
    AABBUKUSULUMUNUO $.
    $( [?] $) $( [13-Jan-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Subtraction and negation (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Commutative law for subtraction $)
  subcom $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
    ( ( A - B ) - C ) = ( ( A - C ) - B ) ) $=
    ( cre wcel w3a csub co wceq caddr simp2 simp3 wa subcl sylan 3impa 3com23 
    add12 syl111anc 3adant2 addsub syl11anc opreq2d ancoms 3eqtrd wb subadd 
    addcl syld3an3 mpbird eqcomd 3adant3 ) ADEZBDEZCDEZFZABGHZCGHACGHZBGHZIZCUS
    JHZUQIZUPUQVAUPUQVAIZBVAJHZAIZUPVDCBUSJHZJHZCURJHZAUPUNUOUSDEZVDVGIUMUNUOKZ
    UMUNUOLZUMUOUNVIUMUOUNVIURDEZUNVIUMUOMURBNACNZOPQZBCUSRSUPVFURCJUPUNVLVFURI
    VJUMUOVLUNVMTBURUAUBUCUMUOVHAIZUNUOUMVOCAUAUDTUEUMUNVADEZVCVEUFUOABVAUGUPUO
    VIVPVKVNCUSUHUBUIUJUKUPUQDEZUOVIUTVBUFUMUNVQUOABNULVKVNUQCUSUGSUJ $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Subtraction is addition to negative $)
  subaddneg $p |- ( ( A e. RR /\ B e. RR ) ->
     ( A - B ) = ( A + ( -u ` B ) ) ) $=
    ( cre wcel wa csub co c0r caddr cuneg cfv wceq simpr simpl 0re subcl mpan 
    adantl add12 syl111anc addsub mpan2 opreq2d addid1 sylan9eqr eqtrd wb 
    addcl sylan2 subadd mpd3an3 mpbird fvneg eqtr4d ) ACDZBCDZEZABFGZAHBFGZIGZA
    BJKZIGZUQURUTLZBUTIGZALZUQVDABUSIGZIGZAUQUPUOUSCDZVDVGLUOUPMUOUPNUPVHUOHCDZ
    UPVHOHBPQZRBAUSSTUPUOVGAHIGAUPVFHAIUPVIVFHLOBHUAUBUCAUDUEUFUOUPUTCDZVCVEUGU
    OVHVKUPAUSUHVJUIABUTUJUKULUPVBUTLUOUPVAUSAIBUMUCRUN $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Associative law for addition and subtraction. $)
  addsubassoc $p |- ( ( A e. RR /\ B e. RR /\ C e. RR ) ->
     ( ( A + B ) - C ) = ( A + ( B - C ) ) ) $=
    ( cre wcel w3a cuneg cfv caddr co csub wceq addass negcl syl3an3 wa 
    subaddneg opreq2d 3adant1 addcl sylan 3impa 3eqtr4rd ) ADEZBDEZCDEZFABCGHZI
    JZIJZABIJZUGIJZABCKJZIJZUJCKJZUDUEUGDEUIUKLUFABUGMCNOUEUFUMUILUDUEUFPULUHAI
    BCQRSUDUEUFUNUKLZUJDEUFUOUDUEPUJCQABTUAUBUC $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Double negation law $)
  dblneg $p |- ( A e. RR -> ( -u ` ( -u ` A ) ) = A ) $=
    ( cre wcel cuneg cfv c0r csub co wceq negcl fvneg syl caddr addcom mpancom 
    addneg0 eqtrd wb 0re subadd mp3an1 mpbird ) ABCZADEZDEZFUDGHZAUCUDBCZUEUFIA
    JZUDKLUCUFAIZUDAMHZFIZUCUJAUDMHZFUGUCUJULIUHUDANOAPQUGUCUIUKRZUHFBCUGUCUMSF
    UDATUAOUBQ $.
    $( [?] $) $( [4-Jan-2013] $)

  $( Negation reverses less than $)
  ltneg $p |- ( ( A e. RR /\ B e. RR ) -> 
  	      	( A < B <-> ( -u ` B ) < ( -u ` A ) ) ) $=
    ( cre wcel wa cuneg cfv caddr co cltr wbr c0r csub wceq addneg0 adantl 
    subaddneg ancoms eqcomd breq12d wb simpr negcl adantr ltadd2 syl111anc 
    subcl 0re mp3an2 syldan addid1 addsub bitr2d 3bitr4rd ) ACDZBCDZEZBBFGZHIZB
    AFGZHIZJKZLBAMIZJKZURUTJKZABJKZUQUSLVAVCJUPUSLNUOBOPUQVCVAUPUOVCVANBAQRSTUQ
    UPURCDZUTCDZVEVBUAUOUPUBUPVGUOBUCPUOVHUPAUCUDBURUTUEUFUQVDALHIZAVCHIZJKZVFU
    OUPVCCDZVDVKUAZUPUOVLBAUGRUOLCDVLVMUHALVCUEUIUJUQVIAVJBJUOVIANUPAUKUDABULTU
    MUN $.
    $( [?] $) $( [13-Jan-2013] $)


  $( Negative zero is zero $)
  neg0 $p |- ( -u ` 0 ) = 0 $=
    ( c0r cre wcel cuneg cfv wceq 0re csub co fvneg sub0 eqtrd ax-mp ) ABCZADEZ
    AFGNOAAHIAAJAKLM $.
    $( [?] $) $( [13-Jan-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Continuity
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${ $d A x y z w t $.
     $( Half of any real exists, in the sense that for any real,
     	there is another real that produces the original when doubled. $)
     halfex $p |- ( A e. RR -> E. x e. RR A = ( x + x ) ) $=
       ( vy vz vt vw cre wcel cv cltr wbr wn wa caddr co crab wral wrex wceq 
       c0 wne c0r w3o repnz negdbl biimpa opreq12 anidms breq1d rcla4ev syldan 
       c1r cuneg cfv ax1re negcli 0lt1 wb 0re ltneg mp2an mpbi neg0 breqtri 
       ax-mp addcli lttri breq2 rexbidv mpbiri adantl addid2i breq1i mpan 
       sylbir 3jaodan mpdan rabn0 sylibr breq2i breq2d ax1pos breq1 posdbl wi 
       lttr 3com12 addcl syl3an3 syl3an2 3expb imp ltdbl ad2antlr mpbird 
       anasss expcom an4s weq elrab syl2anb com12 r19.21aivv wss ssrab2 pm3.2i 
       axdedekind mp3an1 syl21anc wal jca reeanv adantr anbi1d notbid imbi12d 
       anbi2d rcla42v pm2.27 syld wo con3d ioran 3imtr3g exp32 r19.23advv mpd 
       lttri2 sylan2 sylibrd an4 imbi1i impexp bitri 2albii r2al bitr4i syl5ib 
       anbi12i reximdva ) BGHZAIZCIZJKZLZDIZUUBJKZLZMZDBEIZUUJNOZJKZEGPZQCFIZUU
       NNOZBJKZFGPZQZAGRZBUUBUUBNOZSZAGRUUAUUQTUAZUUMTUAZUUCUUFJKZDUUMQCUUQQZUU
       SUUAUUPFGRZUVBUUABUBJKZBUBSZUBBJKZUCZUVFBUDZUUAUVGUVFUVHUVIUUAUVGBBNOZBJ
       KZUVFUUAUVGUVMBUEUFUUPUVMFBGUUNBSZUUOUVLBJUVNUUOUVLSUUNBUUNBNUGUHUIUJUKU
       VHUVFUUAUVHUVFUUOUBJKZFGRZULUMUNZGHZUVQUVQNOZUBJKZUVPULUOUPZUVSUVQJKZUVQ
       UBJKZUVTUWCUWBUVQUBUMUNZUBJUBULJKZUVQUWDJKZUQUBGHZULGHZUWEUWFURUSUOUBULU
       TVAVBVCVDZUVRUWCUWBURUWAUVQUEVEVBUWIUVSUVQUBUVQUVQUWAUWAVFUWAUSVGVAUVOUV
       TFUVQGUUNUVQSZUUOUVSUBJUWJUUOUVSSUUNUVQUUNUVQNUGUHUIUJVAUVHUUPUVOFGBUBUU
       OJVHVIVJVKUVIUVFUUAUVIUBUBNOZBJKZUVFUWKUBBJUBUSVLZVMUWGUWLUVFUSUUPUWLFUB
       GUUNUBSZUUOUWKBJUWNUUOUWKSUUNUBUUNUBNUGUHUIUJVNVOVKVPVQZUUPFGVRVSUUAUULE
       GRZUVCUUAUVJUWPUVKUUAUVGUWPUVHUVIUVGUWPUUAUVGBUWKJKZUWPUWKUBBJUWMVTUWGUW
       QUWPUSUULUWQEUBGUUJUBSZUUKUWKBJUWRUUKUWKSUUJUBUUJUBNUGUHWAUJVNVOVKUVHUWP
       UUAUVHUWPUBUUKJKZEGRZUWHUBULULNOZJKZUWTUOUWEULUXAJKUXBUQWBUBULUXAUSUOULU
       LUOUOVFVGVAUWSUXBEULGUUJULSZUUKUXAUBJUXCUUKUXASUUJULUUJULNUGUHWAUJVAUVHU
       ULUWSEGBUBUUKJWCVIVJVKUUAUVIBUVLJKZUWPUUAUVIUXDBWDUFUULUXDEBGUUJBSZUUKUV
       LBJUXEUUKUVLSUUJBUUJBNUGUHWAUJUKVPVQZUULEGVRVSUUAUVDCDUUQUUMUUCUUQHZUUFU
       UMHZMZUUAUVDUUCGHZUUCUUCNOZBJKZMZUUFGHZBUUFUUFNOZJKZMZUUAUVDWEZUXGUXHUXJ
       UXNUXLUXPUXRUUAUXJUXNMZUXLUXPMZMZUVDUUAUXSUXTUVDUUAUXSMZUXTMUVDUXKUXOJKZ
       UYBUXTUYCUUAUXJUXNUXTUYCWEZUUAUXKGHZUXNUYDUXJUUAUYEUXOGHZUYDUXNUYEUUAUYF
       UYDUXKBUXOWFWGUXNUYFUUFUUFWHUHWIUXJUYEUUCUUCWHUHWJWKWLUXSUVDUYCURUUAUXTU
       UCUUFWMWNWOWPWQWRUUPUXLFUUCGFCWSZUUOUXKBJUYGUUOUXKSUUNUUCUUNUUCNUGUHUIWT
       ZUULUXPEUUFGEDWSZUUKUXOBJUYIUUKUXOSUUJUUFUUJUUFNUGUHWAWTZXAXBXCUUQGXDZUU
       MGXDZMUVBUVCMUVEUUSUYKUYLUUPFGXEUULEGXEXFCDAUUQUUMXGXHXIUUAUURUVAAGUUAUU
       BGHZMZUXMUXQMZUUIWEZDXJCXJZUVAUURUYNUXTUUIWEZDGQCGQZUVAUYQUYNUYSBUUTJKZL
       UUTBJKZLMZUVAUYNUUPUULMZEGRFGRZUYSVUBWEZUUAVUDUYMUUAUVFUWPMVUDUUAUVFUWPU
       WOUXFXKUUPUULFEGGXLVSXMUYNVUCVUEFEGGUYNUUNGHUUJGHMZVUCVUEUYNVUFVUCMZMZUY
       SUUBUUNJKZLZUUJUUBJKZLZMZVUBVUGUYSVUMWEUYNVUGUYSVUCVUMWEZVUMVUFUYSVUNWEV
       UCUYRVUNUUPUXPMZVUJUUHMZWECDUUNUUJGGUUCUUNSZUXTVUOUUIVUPVUQUXLUUPUXPVUQU
       XKUUOBJVUQUXKUUOSUUCUUNUUCUUNNUGUHUIXNVUQUUEVUJUUHVUQUUDVUIUUCUUNUUBJVHX
       OXNXPUUFUUJSZVUOVUCVUPVUMVURUXPUULUUPVURUXOUUKBJVURUXOUUKSUUFUUJUUFUUJNU
       GUHWAXQVURUUHVULVUJVURUUGVUKUUFUUJUUBJWCXOXQXPXRXMVUCVUNVUMWEVUFVUCVUMXS
       VKXTVKVUHVUIVUKYAZLUYTVUAYAZLVUMVUBVUHVUTVUS?YBVUIVUKYCUYTVUAYCYDXTYEYFY
       GUUAUUTGHZUVAVUBURUYMBUUTYHUYMVVAUUBUUBWHUHYIYJUYQUXSUYRWEZDXJCXJUYSUYPV
       VBCDUYPUYAUUIWEVVBUYOUYAUUIUXJUXLUXNUXPYKYLUXSUXTUUIYMYNYOUYRCDGGYPYQYRU
       URUXIUUIWEZDXJCXJUYQUUICDUUQUUMYPVVCUYPCDUXIUYOUUIUXGUXMUXHUXQUYHUYJYSYL
       YOYNYRYTYG $.
       $( [?] $) $( [12-Jan-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The natural numbers
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c NN NN0 $.
  cnn $a class NN $.
  cnn0 $a class NN0 $.

  ${ $d x y $.
     $( Define the natural numbers starting at ` 1 ` . $)
     df-nn $a |- NN = |^| { x | ( 1 e. x /\ A. y e. x ( y + 1 ) e. x ) } $.
  $}

  $( Define the non-negative integers $)
  df-nn0 $a |- NN0 = ( NN u. { 0 } ) $.

  ${ $d A x y z $.
     $( The naturals are a subset of the reals. $)
     nnress $p |- NN C_ RR $=
       ( vx vy cnn c1r cv wcel caddr co wral wa cab cint cre df-nn wss axreex 
       wceq eleq2 raleqbi1dv anbi12d elab ax1re addcl mpan2 rgen mpbir2an 
       intss1 ax-mp eqsstri ) CDAEZFZBEZDGHZUJFZBUJIZJZAKZLZMABNMUQFZURMOUSDMFZ
       UMMFZBMIZUPUTVBJAMPUJMQUKUTUOVBUJMDRUNVABUJMUJMUMRSTUAUBVABMULMFUTVAUBUL
       DUCUDUEUFMUQUGUHUI $.
       $( [?] $) $( [6-Jan-2013] $)

     $( ` 1 ` is a natural number. $)
     1nn $p |- 1 e. NN $=
       ( vx vy c1r cv wcel caddr co wral wa cab cint cnn wi cre ax1re elisseti 
       elintab simpl mpgbir df-nn eleqtrri ) CCADZEZBDCFGUBEBUBHZIZAJKZLCUFEUEU
       CMAUEACCNOPQUCUDRSABTUA $.
       $( [?] $) $( [6-Jan-2013] $)

     $( Peano postulate: the successor of a natural is a natural $)
     peano2nn $p |- ( A e. NN -> ( A + 1 ) e. NN ) $=
       ( vz vx vy cv c1r caddr co cnn wcel wceq opreq1 eleq1d wral wa cab cint 
       wel wi wal weq rcla4cv adantl a2i alimi visset elintab oprex 3imtr4i 
       df-nn eleq2i vtoclga ) BEZFGHZIJZAFGHZIJBAIUMAKUNUPIUMAFGLMUMFCEZJZDEZFG
       HZUQJZDUQNZOZCPQZJZUNVDJZUMIJUOVCBCRZSZCTVCUNUQJZSZCTVEVFVHVJCVCVGVIVBVG
       VISURVAVIDUMUQDBUAUTUNUQUSUMFGLMUBUCUDUEVCCUMBUFUGVCCUNUMFGUHUGUIIVDUMCD
       UJZUKIVDUNVKUKUIUL $.
       $( [?] $) $( [6-Jan-2013] $)
  $}

  $( The set of naturals exist $)
  nnex $p |- NN e. _V $=
    ( cnn cre axreex nnress ssexi ) ABCDE $.
    $( [?] $) $( [13-Jan-2013] $)

  $( A natural is a real $)
  nnre $p |- ( A e. NN -> A e. RR ) $=
    ( cnn cre nnress sseli ) BCADE $.
    $( [?] $) $( [13-Jan-2013] $)

  ${ $d A x y $.
    peano5nni.1 $e |- A e. _V $.
    $( Peano postulate: inductive principle for natural numbers. $)
    peano5nni $p |- ( ( 1 e. A /\ A. x e. A ( x + 1 ) e. A ) -> NN C_ A ) $=
      ( vy c1r wcel cv caddr co wral wa cab cint cnn wss wceq eleq2 raleqbi1dv 
      anbi12d elab intss1 sylbir df-nn syl5ss ) EBFZAGEHIZBFZABJZKZEDGZFZUFUJFZ
      AUJJZKZDLZMZBNUIBUOFUPBOUNUIDBCUJBPUKUEUMUHUJBEQULUGAUJBUJBUFQRSTBUOUAUBD
      AUCUD $.
      $( [?] $) $( [6-Jan-2013] $)
  $}

  ${
    $d x y $.  $d x A $.  $d x ps $.  $d x ch $.  $d x th $.  $d x ta $.
    $d y ph $.
    $( Substitutions. $)
    nnind.1 $e |- ( x = 1 -> ( ph <-> ps ) ) $.
    nnind.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    nnind.3 $e |- ( x = ( y + 1 ) -> ( ph <-> th ) ) $.
    nnind.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    nnind.5 $e |- ps $.
    $( Induction hypothesis. $)
    nnind.6 $e |- ( y e. NN -> ( ch -> th ) ) $.
    $( Principle of Mathematical Induction (inference schema).  The first four
       hypotheses give us the substitution instances we need; the last two are
       the basis and the induction hypothesis.  See ~ nnaddcl for an example of
       its use.  See ~ nn0ind for induction on nonnegative integers and
       ~ uzind , ~ uzind4 for induction on an arbitrary set of upper integers.
       See ~ indstr for strong induction. $)
    nnind $p |- ( A e. NN -> ta ) $=
      ( cnn wcel crab wa c1r cv caddr co wral wss elrab 1nn mpbir2an ssrab2 
      sseli peano2nn a1d anim12d 3imtr4g mpcom rgen nnex rabex peano5nni mp2an 
      sylib simprd ) HOPZVBEVBHAFOQZPVBEROVCHSVCPZGTZSUAUBZVCPZGVCUCOVCUDVDSOPB
      ABFSOIUEUFMUGVGGVCVEOPZVEVCPZVGVCOVEAFOUHUIVHVHCRVFOPZDRVIVGVHVHVJCDVHVJV
      HVEUJUKNULACFVEOJUEADFVFOKUEUMUNUOGVCAFOUPUQURUSUIAEFHOLUEUTVA $.
      $( [10-Jan-1997] $)
  $}

  ${ $d A x y $. $d B y $.
    $( The naturals are closed under addition. $)
    nnaddcl $p |- ( ( A e. NN /\ B e. NN ) -> ( A + B ) e. NN ) $=
      ( vy vx cnn wcel caddr co cv wi c1r wceq opreq2 eleq1d imbi2d peano2nn 
      wa cre ax1re addass mp3an3 nnre syl2an syl5bir expcom a2d nnind impcom 
      ) BEFAEFZABGHZEFZUIACIZGHZEFZJUIAKGHZEFZJUIADIZGHZEFZJUIAUQKGHZGHZEFZJUIU
      KJCDBULKLZUNUPUIVCUMUOEULKAGMNOULUQLZUNUSUIVDUMUREULUQAGMNOULUTLZUNVBUIVE
      UMVAEULUTAGMNOULBLZUNUKUIVFUMUJEULBAGMNOAPUQEFZUIUSVBUIVGUSVBJUIVGQZVBURK
      GHZEFUSVHVAVIEARFZUQRFZVAVILZUIVGVJVKKRFVLSAUQKTUAAUBUQUBUCNURPUDUEUFUGUH
      $.
      $( [?] $) $( [13-Jan-2013] $)
  $}


  $( Membership in the non-negative integers $)
  elnn0 $p |- ( A e. NN0 <-> ( A e. NN \/ A = 0 ) ) $=
    ( cnn0 wcel cnn c0r csn cun wo wceq df-nn0 eleq2i elun cre 0re elisseti 
    elsnc2 orbi2i 3bitri ) ABCADEFZGZCADCZASCZHUAAEIZHBTAJKADSLUBUCUAAEEMNOPQR 
    $.
    $( [?] $) $( [13-Jan-2013] $)

  $( The non-negative integers are a subset of the reals $)
  nn0ress $p |- NN0 C_ RR $=
    ( cnn0 cnn c0r csn cun cre df-nn0 nnress wcel wss 0re snssi ax-mp unssi 
    eqsstri ) ABCDZEFGBPFHCFIPFJKCFLMNO $.
    $( [?] $) $( [13-Jan-2013] $)

  $( A non-negative integer is a real $)
  nn0re $p |- ( A e. NN0 -> A e. RR ) $=
    ( cnn0 cre nn0ress sseli ) BCADE $.
    $( [?] $) $( [13-Jan-2013] $)

  $( The non-negative integers exist $)
  nn0ex $p |- NN0 e. _V $=
    ( cnn0 cre axreex nn0ress ssexi ) ABCDE $.
    $( [?] $) $( [13-Jan-2013] $)

  $( The naturals are a subset of the non-negative integers $)
  nnnn0ss $p |- NN C_ NN0 $=
    ( cnn c0r csn cun cnn0 ssun1 df-nn0 sseqtr4i ) AABCZDEAIFGH $.
    $( [?] $) $( [13-Jan-2013] $)

  $( A non-negative integer is a natural $)
  nnnn0 $p |- ( A e. NN -> A e. NN0 ) $=
    ( cnn cnn0 nnnn0ss sseli ) BCADE $.
    $( [?] $) $( [13-Jan-2013] $)

  $( Zero is a non-negative integer $)
  0nn0 $p |- 0 e. NN0 $=
    ( c0r cnn0 wcel cnn wceq wo eqid olci elnn0 mpbir ) ABCADCZAAEZFLKAGHAIJ $.
    $( [?] $) $( [13-Jan-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Integers
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c ZZ $.
  czz $a class ZZ $.

  $( Define the integers $)
  df-z $a |- ZZ = ( NN0 u. ( -u " NN0 ) ) $.

  ${ $d A x $.
  $( Membership in the integers $)
  elz $p |- ( A e. ZZ <-> ( A e. RR /\ ( A e. NN0 \/ ( -u ` A ) e. NN0 ) ) ) $=
    ( vx czz wcel cnn0 cuneg cima cun wo cre cfv wa df-z eleq2i elun nn0re orc 
    jca crn imassrn wf wss negf frn ax-mp sstri sseli cv wceq wrex fveq2 
    eleq1d wb dblneg syl ibir adantl syl5cbi r19.23adva wfn ffn nn0ress 
    fvelimab mp2an syl5ib imp olcd expcom jcai jaoi simpr orcd eqeq1d rcla4ev 
    sylan2 ancoms sylibr jaodan impbii 3bitri ) ACDAEFEGZHZDAEDZAWADZIZAJDZWCAF
    KZEDZIZLZCWBAMNAEWAOWEWJWCWJWDWCWFWIAPWCWHQRWDWFWIWAJAWAFSZJFETJJFUAZWKJUBU
    CJJFUDUEUFUGWFWDWIWFWDLWHWCWFWDWHWFBUHZFKZAUIZBEUJZWHWDWFWOWHBEWOWNFKZEDZWH
    WFWMEDZLWOWQWGEWNAFUKULWSWRWFWSWRWSWMJDZWRWSUMWMPWTWQWMEWMUNULUOUPUQURUSFJU
    TZEJUBWDWPUMWLXAUCJJFVAUEVBBJEAFVCVDZVEVFVGVHVIVJWFWCWEWHWFWCLWCWDWFWCVKVLW
    FWHLZWDWCXCWPWDWHWFWPWHWGFKZAUIZWPWFWOXEBWGEWMWGUIWNXDAWMWGFUKVMVNAUNVOVPXB
    VQVGVRVSVT $.
    $( [?] $) $( [13-Jan-2013] $)
  $}

  $( Alternate membership in the integers $)
  elz2 $p |- ( A e. ZZ <->
       	       ( A e. RR /\ ( A e. NN \/ A = 0 \/ ( -u ` A ) e. NN ) ) ) $=
    ( czz wcel cre cnn0 cuneg cfv wo wa cnn c0r wceq w3o elz wi elnn0 3mix1 
    3mix2 jaoi sylbi a1i 3mix3 dblneg eqeq1d syl6bi fveq2 neg0 syl6eq syl5 
    jaod syl5ib nnnn0 orcd 0nn0 eleq1 mpbiri olcd 3jaoi impbid1 pm5.32i bitri 
    ) ABCADCZAECZAFGZECZHZIVBAJCZAKLZVDJCZMZIANVBVFVJVBVFVJVBVCVJVEVCVJOVBVCVGV
    HHVJAPVGVJVHVGVHVIQVHVGVIRZSTUAVBVIVDKLZHVJVEVBVIVJVLVIVJOVBVIVGVHUBUAVBVDF
    GZKLZVJVLVBVNVHVJVBVMAKAUCUDVKUEVLVMKFGKVDKFUFUGUHUIUJVDPUKUJVGVFVHVIVGVCVE
    AULUMVHVCVEVHVCKECUNAKEUOUPUMVIVEVCVDULUQURUSUTVA $.
    $( [?] $) $( [13-Jan-2013] $)

  $( The integers are closed under addition. $)
  zaddcl $p |- ( ( A e. ZZ /\ B e. ZZ ) -> ( A + B ) e. ZZ ) $= ? $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Bijection between the two types of naturals
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c om->NN $.
  comnn $a class om->NN $.

  ${
     $( Define a bijection between the finite ordinals and the
     	natural numbers from the reals. $)
     df-omnn $a |- om->NN = ( rec ( ( x e. _V |-> ( x + 1 ) ) , 1 ) |` om ) $.
  $}

  $( The value of the ordinal/natural bijection at zero. $)
  omnn0 $p |- ( om->NN ` (/) ) = 1 $=
    ( vx c0 comnn cfv cvv cv c1r caddr co cmpt crdg com cres df-omnn fveq1i 
    cre wcel wceq ax1re fr0g ax-mp eqtri ) BCDBAEAFGHIJZGKLMZDZGBCUDANOGPQUEGRS
    GPUCTUAUB $.
    $( [?] $) $( [13-Jan-2013] $)

  ${ $d A x $.
     $( The value of the ordinal/natural bijection at a successor $)
     omnnsuc $p |- ( A e. om -> 
     	     	   ( om->NN ` suc A ) = ( ( om->NN ` A ) + 1 ) ) $=
       ( vx com wcel csuc cvv cv c1r caddr co cmpt crdg cres cfv comnn frsuc 
       df-omnn fveq1i fveq2i wceq fvex opreq1 eqid oprex fvmpt ax-mp eqtr3i 
       syl6eq syl5eq ) ACDZAEZBFBGZHIJZKZHLCMZNZAONZHIJZUKONUJUPAUONZUNNZURHAUN
       PUQUNNZUTURUQUSUNAOUOBQZRSUQFDVAURTAOUABUQUMURFUNULUQHIUBUNUCUQHIUDUEUFU
       GUHUKOUOVBRUI $.
       $( [?] $) $( [13-Jan-2013] $)
  $}

  ${ $d A x y $.
     $( The value of the bijection at an ordinal is a natural $)
     omnnnn $p |- ( A e. om -> ( om->NN ` A ) e. NN ) $=
       ( vy vx cv comnn cfv cnn wcel c0 csuc wceq fveq2 eleq1d weq c1r omnn0 
       1nn eqeltri com caddr co omnnsuc peano2nn syl5bir finds ) BDZEFZGHIEFZGH
       CDZEFZGHZUIJZEFZGHZAEFZGHBCAUFIKUGUHGUFIELMBCNUGUJGUFUIELMUFULKUGUMGUFUL
       ELMUFAKUGUOGUFAELMUHOGPQRUISHZUNUJOTUAZGHUKUPUMUQGUIUBMUJUCUDUE $.
       $( [?] $) $( [13-Jan-2013] $)
  $}

  ${ $d u v y $. $d v x y $.
     $( ` om->NN ` is a bijection between the finite ordinals and the
     	natural numbers. $)
     omnnbiject $p |- om->NN : om -1-1-onto-> NN $=
       ( vx vy vz vu vv com cnn comnn wf1o wf1 crn wceq dff1o5 wf cv cfv weq 
       wi wral dff13 wfn wss df-f cvv c1r caddr co cmpt crdg cres frfnom 
       df-omnn fneq1i mpbir wcel wrex wb fvelrnb ax-mp eleq1 omnnnn syl5cbi 
       r19.23aiv eqeq2 rexbidv c0 peano1 omnn0 fveq2 eqeq1d rcla4ev mp2an wa 
       opreq1 eqeq2d csuc peano2 omnnsuc syl11anc adantl r19.23adva cbvrexv 
       syl6ibr nnind impbii bitri eqriv eqimssi mpbir2an rgen2 ) FGHIFGHJZHKZGL
       FGHMWKFGHNZAOZHPBOZHPZLABQRZBFSAFSABFGHTWMHFUAZWLGUBFGHUCWRCUDCOUEUFUGUH
       ZUEUIFUJZFUAUEWSUKFHWTCULUMUNZWLGDWLGDOZWLUOZEOZHPZXBLZEFUPZXBGUOZWRXCXG
       UQXAEFXBHURUSXGXHXFXHEFXFXEGUOXHXDFUOZXEXBGUTXDVAVBVCXEWOLZEFUPXEUELZEFU
       PZXEWNLZEFUPZXEWNUEUFUGZLZEFUPZXGBAXBWOUELXJXKEFWOUEXEVDVEBAQXJXMEFWOWNX
       EVDVEWOXOLXJXPEFWOXOXEVDVEBDQXJXFEFWOXBXEVDVEVFFUOVFHPZUELZXLVGVHXKXSEVF
       FXDVFLXEXRUEXDVFHVIVJVKVLWNGUOZXNWPXOLZBFUPZXQXTXMYBEFXMWPXEUEUFUGZLZBFU
       PZYBXTXIVMXMYDYABFXMYCXOWPXEWNUEUFVNVOVEXIYEXTXIXDVPZFUOYFHPZYCLZYEXDVQX
       DVRYDYHBYFFWOYFLWPYGYCWOYFHVIVJVKVSVTVBWAXPYAEBFEBQXEWPXOXDWOHVIVJWBWCWD
       WEWFWGZWHWIWQABFF?WJWIYIWI $.
       $( [?] $) $( [13-Jan-2013] $)
  $}

  $( The value of the converse of the bijection at one. $)
  nnom1 $p |- ( `' om->NN ` 1 ) = (/) $=
    ( c0 comnn cfv c1r wceq ccnv omnn0 com cnn wf1o wcel wi omnnbiject peano1 
    f1ocnvfv mp2an ax-mp ) ABCDEZDBFCAEZGHIBJAHKRSLMNHIADBOPQ $.
    $( [?] $) $( [13-Jan-2013] $)

  $( The value of the converse of the bijection at a successor. $)
  nnomsuc $p |- ( A e. NN -> 
  	     	  ( `' om->NN ` ( A + 1 ) ) = suc ( `' om->NN ` A ) ) $=
    ( cnn wcel comnn ccnv cfv csuc com c1r caddr co wceq wf1o wf omnnbiject 
    f1ocnv ax-mp f1of ffvelrni peano2 syl omnnsuc f1ocnvfv2 mpan opreq1d eqtrd 
    wi f1ocnvfv sylc ) ABCZADEZFZGZHCZUMDFZAIJKZLZUPUKFUMLZUJULHCZUNBHAUKBHUKMZ
    BHUKNHBDMZUTOHBDPQBHUKRQSZULTUAUJUOULDFZIJKZUPUJUSUOVDLVBULUBUAUJVCAIJVAUJV
    CALOHBADUCUDUEUFVAUNUQURUGOHBUMUPDUHUDUI $.
    $( [?] $) $( [13-Jan-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Natural multiplication
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c .NN $.
  cnmul $a class .NN $.

  ${ $d x y z w $. 
     $( Define multiplication by a natural number. $)
     df-nmul $a |- .NN = { <. <. x , y >. , w >. |
          ( ( x e. NN /\ y e. RR ) /\
	    w = ( rec ( ( z e. _V |-> ( z + y ) ) , y ) ` 
	      	  ( `' om->NN ` x ) ) ) } $.
  $}

  ${ $d A w y z $. $d B w x z $. $d x y $.
     $( The value of natural multiplication. $)
     nmulval $p |- ( ( A e. NN /\ B e. RR ) ->
       ( A .NN B ) = ( rec ( ( x e. _V |-> ( x + B ) ) , B ) `
       	       	       ( `' om->NN ` A ) ) ) $=
       ( vy vz vw cnn cre cv comnn ccnv cfv cvv caddr co cmpt crdg cnmul fvex 
       wceq fveq2 fveq2d wcel opreq2 adantr mpteq2dv rdgeq1 rdgeq2 sylan9eq 
       mpancom fveq1d df-nmul oprabval2 ) DEFBCGHDIZJKZLZAMAIZEIZNOZPZURQZLBUOL
       ZAMUQCNOZPZCQZLRVBVALVBVESUNBTUPVBVAUNBUOUAUBURCTZVBVAVEUTVDTZVFVAVETVFA
       MUSVCVFUSVCTUQMUCURCUQNUDUEUFVGVFVAVDURQVEURUTVDUGURCVDUHUIUJUKDEAFULUM 
       $.
       $( [?] $) $( [13-Jan-2013] $)
  $}

  ${ $d A x $.
     $( The value of natural multiplication by one. $)
     nmul1 $p |- ( A e. RR -> ( 1 .NN A ) = A ) $=
       ( vx cre wcel c1r cnmul co comnn ccnv cfv cvv cv caddr cmpt crdg cnn 
       wceq 1nn nmulval mpan c0 rdg0g nnom1 fveq2i syl5eq eqtrd ) ACDZEAFGZEHIJ
       ZBKBLAMGNZAOZJZAEPDUGUHULQRBEASTUGUAUKJAULACUJUBUIUAUKUCUDUEUF $.
       $( [?] $) $( [13-Jan-2013] $)
  $}

  ${ $d A x $. $d B x $.
     $( The value of natural multiplication at a successor. $)
     nmulsuc $p |- ( ( A e. NN /\ B e. RR ) ->
     	     	     ( ( A + 1 ) .NN B ) = ( ( A .NN B ) + B ) ) $=
       ( vx cnn wcel cre wa c1r caddr co cnmul comnn ccnv cfv cvv cv cmpt crdg 
       csuc wceq nmulval peano2nn sylan nnomsuc fveq2d adantr con0 com wf1o wf 
       omnnbiject f1ocnv ax-mp f1of ffvelrni nnon syl rdgsuc oprex opreq1 eqid 
       fvmpt syl5reqr eqtrd 3eqtrd ) ADEZBFEZGZAHIJZBKJZVILMZNZCOCPZBIJZQZBRZNZ
       AVKNZSZVPNZABKJZBIJZVIDEVGVJVQTVFCVIBUAAUBUCVFVQVTTVGVFVLVSVPAUDUEUFVHVT
       VRVPNZVONZWBVFVTWDTZVGVFVRUGEZWEVFVRUHEWFDUHAVKDUHVKUIZDUHVKUJUHDLUIWGUK
       UHDLULUMDUHVKUNUMUOVRUPUQBVRVOURUQUFVHWAVONZWDWBVHWAWCVOCABUAUEWAOEWHWBT
       ABKUSCWAVNWBOVOVMWABIUTVOVAWABIUSVBUMVCVDVE $.
       $( [?] $) $( [13-Jan-2013] $)
  $}

  ${ $d A p q $. $d B p q $. $d S p q $. $d S x y $.
    nmulclgen.1 $e |- S C_ RR $.
    nmulclgen.2 $e |- ( ( x e. S /\ y e. S ) -> ( x + y ) e. S ) $.
    $( Generic closure law for natural multiplication. $)
    nmulclgen $p |- ( ( A e. NN /\ B e. S ) -> ( A .NN B ) e. S ) $=
      ( vq vp cnn wcel cnmul co cv wi c1r caddr wceq opreq1 eleq1d imbi2d weq 
      cre sseli nmul1 syl ibir wa nmulsuc sylan2 adantr caoprcl ancoms adantll 
      eqeltrd exp31 a2d nnind imp ) CJKDEKZCDLMZEKZUTHNZDLMZEKZOUTPDLMZEKZOUTIN
      ZDLMZEKZOUTVHPQMZDLMZEKZOUTVBOHICVCPRZVEVGUTVNVDVFEVCPDLSTUAHIUBZVEVJUTVO
      VDVIEVCVHDLSTUAVCVKRZVEVMUTVPVDVLEVCVKDLSTUAVCCRZVEVBUTVQVDVAEVCCDLSTUAUT
      VGUTVFDEUTDUCKZVFDREUCDFUDZDUEUFTUGVHJKZUTVJVMVTUTVJVMVTUTUHZVJUHVLVIDQMZ
      EWAVLWBRZVJVTVRWCUTVHDUIVSUJUKUTVJWBEKZVTVJUTWDABVIDEQGULUMUNUOUPUQURUS 
      $.
      $( [?] $) $( [13-Jan-2013] $)
  $}

  ${ $d x y $.
     $( The naturals are closed under natural multiplication. $)
     nnnmulcl $p |- ( ( A e. NN /\ B e. NN ) -> ( A .NN B ) e. NN ) $=
       ( vx vy cnn nnress cv nnaddcl nmulclgen ) CDABEFCGDGHI $.
       $( [?] $) $( [13-Jan-2013] $)

     $( The reals are closed under natural multiplication. $)
     nmulcl $p |- ( ( A e. NN /\ B e. RR ) -> ( A .NN B ) e. RR ) $=
       ( vx vy cre ssid cv addcl nmulclgen ) CDABEEFCGDGHI $.
       $( [?] $) $( [13-Jan-2013] $)
  $}
