$( nf.mm - Version of 5-Jan-2018. $)

$[ set-pred.mm $]

$(
###############################################################################
                NEW FOUNDATIONS (NF) SET THEORY
###############################################################################

Here we introduce New Foundations set theory.
We first introduce the axiom of extensionality in ~ ax-ext .
We later add set construction axioms from
Hailperin, such as ~ ax-nin ,
that are designed to implement the
Stratification Axiom from Quine.

We then introduce ordered pairs, relationships, and functions.
Note that the definition of an ordered pair (in ~ df-op ) is different
than the Kuratowski ordered pair definition (in ~ df-opk )
typically used in ZFC, because the Kuratowski definition is not type-level.

We conclude with orderings.
$)


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             NF Set Theory - start with the Axiom of Extensionality
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce the Axiom of Extensionality
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    $d x y z $.
    $( Axiom of Extensionality.  An axiom of Zermelo-Fraenkel set theory.  It
       states that two sets are identical if they contain the same elements.
       Axiom Ext of [BellMachover] p. 461.

       Set theory can also be formulated with a _single_ primitive predicate
       ` e. ` on top of traditional predicate calculus _without_ equality.  In
       that case the Axiom of Extensionality becomes
       ` ( A. w ( w e. x <-> w e. y ) -> ( x e. z -> y e. z ) ) ` , and
       equality ` x = y ` is _defined_ as ` A. w ( w e. x <-> w e. y ) ` .  All
       of the usual axioms of equality then become theorems of set theory.
       See, for example, Axiom 1 of [TakeutiZaring] p. 8.

       To use the above "equality-free" version of Extensionality with
       Metamath's logical axioms, we would rewrite ~ ax-8 through ~ ax-16 with
       equality expanded according to the above definition.  Some of those
       axioms could be proved from set theory and would be redundant.  Not all
       of them are redundant, since our axioms of predicate calculus make
       essential use of equality for the proper substitution that is a
       primitive notion in traditional predicate calculus.  A study of such an
       axiomatization would be an interesting project for someone exploring the
       foundations of logic.

       _General remarks_:  Our set theory axioms are presented using defined
       connectives ( ` <-> ` , ` E. ` , etc.) for convenience.  However, it is
       implicitly understood that the actual axioms use only the primitive
       connectives ` -> ` , ` -. ` , ` A. ` , ` = ` , and ` e. ` .  It is
       straightforward to establish the equivalence between the actual axioms
       and the ones we display, and we will not do so.

       It is important to understand that strictly speaking, all of our set
       theory axioms are really schemes that represent an infinite number of
       actual axioms.  This is inherent in the design of Metamath
       ("metavariable math"), which manipulates only metavariables.  For
       example, the metavariable ` x ` in ~ ax-ext can represent any actual
       variable _v1_, _v2_, _v3_,... .  Distinct variable restrictions ($d)
       prevent us from substituting say _v1_ for both ` x ` and ` z ` .  This
       is in contrast to typical textbook presentations that present actual
       axioms (except for Replacement ~ ax-rep , which involves a wff
       metavariable).  In practice, though, the theorems and proofs are
       essentially the same.  The $d restrictions make each of the infinite
       axioms generated by the ~ ax-ext scheme exactly logically equivalent to
       each other and in particular to the actual axiom of the textbook
       version.  (Contributed by NM, 5-Aug-1993.) $)
    ax-ext $a |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $.

    $( The Axiom of Extensionality ( ~ ax-ext ) restated so that it postulates
       the existence of a set ` z ` given two arbitrary sets ` x ` and ` y ` .
       This way to express it follows the general idea of the other ZFC axioms,
       which is to postulate the existence of sets given other sets.
       (Contributed by NM, 28-Sep-2003.) $)
    axext2 $p |- E. z ( ( z e. x <-> z e. y ) -> x = y ) $=
      ( cv wcel wb wceq wi wex wal ax-ext 19.36v mpbir ) CDZADZENBDZEFZOPGZHCIQ
      CJRHABCKQRCLM $.
  $}

  ${
    $d z x w $.  $d z y w $.
    $( A generalization of the Axiom of Extensionality in which ` x ` and ` y `
       need not be distinct.  (Contributed by NM, 15-Sep-1993.)  (Proof
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    axext3 $p |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $=
      ( vw cv wcel wb wal wi elequ2 bibi1d albidv equequ1 imbi12d ax-ext chvarv
      wceq ) CEZDEZFZRBEZFZGZCHZSUAQZIRAEZFZUBGZCHZUFUAQZIDASUFQZUDUIUEUJUKUCUH
      CUKTUGUBDACJKLDABMNDBCOP $.

    $( A bidirectional version of Extensionality.  Although this theorem
       "looks" like it is just a definition of equality, it requires the Axiom
       of Extensionality for its proof under our axiomatization.  See the
       comments for ~ ax-ext and ~ df-cleq .  (Contributed by NM,
       14-Nov-2008.) $)
    axext4 $p |- ( x = y <-> A. z ( z e. x <-> z e. y ) ) $=
      ( cv wceq wcel wb wal elequ2 alrimiv axext3 impbii ) ADZBDZEZCDZMFPNFGZCH
      OQCABCIJABCKL $.
  $}

  ${
    $d x y z $.  $d ph z $.
    bm1.1.1 $e |- F/ x ph $.
    $( Any set defined by a property is the only set defined by that property.
       Theorem 1.1 of [BellMachover] p. 462.  (Contributed by NM,
       30-Jun-1994.) $)
    bm1.1 $p |- ( E. x A. y ( y e. x <-> ph ) ->
                  E! x A. y ( y e. x <-> ph ) ) $=
      ( vz cv wcel wb wal wex wsb wa wceq wi weu nfv nfbi nfal elequ2 bibi1d
      albidv sbie 19.26 biantr alimi ax-ext syl sylbir sylan2b gen2 jctr sylibr
      eu2 ) CFZBFZGZAHZCIZBJZUSURURBEKZLUOEFZMZNZEIBIZLURBOUSVDVCBEUTURUNVAGZAH
      ZCIZVBURVGBEVFBCVEABVEBPDQRVBUQVFCVBUPVEABECSTUAUBURVGLUQVFLZCIZVBUQVFCUC
      VIUPVEHZCIVBVHVJCUPAVEUDUEBECUFUGUHUIUJUKURBEUREPUMUL $.
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Class abstractions (a.k.a. class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constants use in class definition. $)
  $c { $. $( Left brace $)
  $c | $.  $( Vertical bar $)
  $c } $. $( Right brace $)
  $( --- Start of old code before overloading prevention patch. $)
  $(
  @c class @. @( Class variable type @)
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare symbols as variables $)
  $v ./\ $.
  $v .\/ $.
  $v .<_ $.
  $v .< $.
  $v .+ $.
  $v .- $.
  $v .X. $.
  $v ./ $.
  $v .^ $.
  $v .0. $.
  $v .1. $.
  $v .|| $.
  $v .~ $.
  $v ._|_ $.
  $v .+^ $.
  $v .+b $.
  $v .(+) $.
  $v .* $.
  $v .x. $.
  $v .xb $.
  $v ., $.
  $v .(x) $.
  $v .0b $.

  $( Declare variable symbols that will be used to represent classes.  Note
     that later on ` R ` , ` S ` , ` F ` and ` G ` denote relations and
     functions, but these letters serve as mnemonics only and in fact behave
     no differently from the variables ` A ` through ` D ` . $)
  $v A $.
  $v B $.
  $v C $.
  $v D $.
  $v P $.
  $v Q $.
  $v R $.
  $v S $.
  $v T $.
  $v U $.

  $( Introduce the class builder or class abstraction notation ("the class of
     sets ` x ` such that ` ph ` is true").  Our class variables ` A ` ,
     ` B ` , etc. range over class builders (implicitly in the case of defined
     class terms such as ~ df-nul ).  Note that a set variable can be expressed
     as a class builder per theorem ~ cvjust , justifying the assignment of set
     variables to class variables via the use of ~ cv . $)
  cab $a class { x | ph } $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( A set variable is a class expression.  The syntax " ` class x ` " can be
     viewed as an abbreviation for " ` class { y | y e. x } ` " (a special case
     of ~ cab ), where ` y ` is distinct from ` x ` .  See the discussion under
     the definition of class in [Jech] p. 4.  Note that ` { y | y e. x } = x `
     by ~ cvjust . @)
  cv @a class x @.
  $)
  $( --- End of old code before overloading prevention patch. $)
  $( $j primitive 'cv' 'wceq' 'wcel' 'cab'; $)

  $( Let ` A ` be a class variable. $)
  cA $f class A $.
  $( Let ` B ` be a class variable. $)
  cB $f class B $.
  $( Let ` C ` be a class variable. $)
  cC $f class C $.

  $( Define a connective symbol for use as a class variable. $)
  c.pa $f class .|| $.

  $( Let ` D ` be a class variable. $)
  cD $f class D $.

  $( Define a connective symbol for use as a class variable. $)
  c.dv $f class ./ $.

  $( Let ` P ` be a class variable. $)
  cP $f class P $.

  $( Define a connective symbol for use as a class variable. $)
  c.pl $f class .+ $.

  $( Define a connective symbol for use as a class variable. $)
  c.pd $f class .+^ $.

  $( Define a connective symbol for use as a class variable. $)
  c.pb $f class .+b $.

  $( Define a connective symbol for use as a class variable. $)
  c.po $f class .(+) $.

  $( Let ` Q ` be a class variable. $)
  cQ $f class Q $.

  $( Define a connective symbol for use as a class variable. $)
  c.sm $f class .~ $.

  $( Let ` R ` be a class variable. $)
  cR $f class R $.
  $( Let ` S ` be a class variable. $)
  cS $f class S $.

  $( Define a connective symbol for use as a class variable. $)
  c.lt $f class .< $.

  $( Define a connective symbol for use as a class variable. $)
  c.xb $f class .xb $.

  $( Let ` T ` be a class variable. $)
  cT $f class T $.

  $( Define a connective symbol for use as a class variable. $)
  c.x $f class .x. $.

  $( Define a connective symbol for use as a class variable. $)
  c.xp $f class .X. $.

  $( Define a connective symbol for use as a class variable. $)
  c.xo $f class .(x) $.

  $( Let ` U ` be a class variable. $)
  cU $f class U $.

  $( Define a connective symbol for use as a class variable. $)
  c.1 $f class .1. $.

  $v e $.
  $v f $.
  $v g $.
  $v h $.
  $v i $.
  $v j $.
  $v k $.
  $v m $.
  $v n $.
  $v o $.
  $v E $.
  $v F $.
  $v G $.
  $v H $.
  $v I $.
  $v J $.
  $v K $.
  $v L $.
  $v M $.
  $v N $.
  $v V $.
  $v W $.
  $v X $.
  $v Y $.
  $v Z $.
  $v O $.
  $v s $.
  $v r $.
  $v q $.
  $v p $.
  $v a $.
  $v b $.
  $v c $.
  $v d $.
  $v l $.


  $( Let ` e ` be an individual variable. $)
  ve $f set e $.
  $( Let ` f ` be an individual variable. $)
  vf $f set f $.
  $( Let ` g ` be an individual variable. $)
  vg $f set g $.
  $( Let ` h ` be an individual variable. $)
  vh $f set h $.
  $( Let ` i ` be an individual variable. $)
  vi $f set i $.
  $( Let ` j ` be an individual variable. $)
  vj $f set j $.
  $( Let ` k ` be an individual variable. $)
  vk $f set k $.
  $( Let ` m ` be an individual variable. $)
  vm $f set m $.
  $( Let ` n ` be an individual variable. $)
  vn $f set n $.
  $( Let ` o ` be an individual variable. $)
  vo $f set o $.
  $( Let ` E ` be a class variable. $)
  cE $f class E $.

  $( Define a connective symbol for use as a class variable. $)
  c.ex $f class .^ $.

  $( Let ` F ` be a class variable. $)
  cF $f class F $.
  $( Let ` G ` be a class variable. $)
  cG $f class G $.
  $( Let ` H ` be a class variable. $)
  cH $f class H $.

  $( Define a connective symbol for use as a class variable. $)
  c.xi $f class ., $.

  $( Let ` I ` be a class variable. $)
  cI $f class I $.

  $( Define a connective symbol for use as a class variable. $)
  c.as $f class .* $.

  $( Let ` J ` be a class variable. $)
  cJ $f class J $.

  $( Define a connective symbol for use as a class variable. $)
  c.or $f class .\/ $.

  $( Let ` K ` be a class variable. $)
  cK $f class K $.
  $( Let ` L ` be a class variable. $)
  cL $f class L $.

  $( Define a connective symbol for use as a class variable. $)
  c.le $f class .<_ $.

  $( Let ` M ` be a class variable. $)
  cM $f class M $.

  $( Define a connective symbol for use as a class variable. $)
  c.an $f class ./\ $.

  $( Define a connective symbol for use as a class variable. $)
  c.mi $f class .- $.

  $( Let ` N ` be a class variable. $)
  cN $f class N $.

  $( Define a connective symbol for use as a class variable. $)
  c.pe $f class ._|_ $.

  $( Let ` O ` be a class variable. $)
  cO $f class O $.
  $( Let ` V ` be a class variable. $)
  cV $f class V $.
  $( Let ` W ` be a class variable. $)
  cW $f class W $.
  $( Let ` X ` be a class variable. $)
  cX $f class X $.
  $( Let ` Y ` be a class variable. $)
  cY $f class Y $.

  $( Define a connective symbol for use as a class variable. $)
  c.0 $f class .0. $.

  $( Define a connective symbol for use as a class variable. $)
  c.0b $f class .0b $.

  $( Let ` Z ` be a class variable. $)
  cZ $f class Z $.
  $( Let ` s ` be an individual variable. $)
  vs $f set s $.
  $( Let ` r ` be an individual variable. $)
  vr $f set r $.
  $( Let ` q ` be an individual variable. $)
  vq $f set q $.
  $( Let ` p ` be an individual variable. $)
  vp $f set p $.
  $( Let ` a ` be an individual variable. $)
  va $f set a $.
  $( Let ` b ` be an individual variable. $)
  vb $f set b $.
  $( Let ` c ` be an individual variable. $)
  vc $f set c $.
  $( Let ` d ` be an individual variable. $)
  vd $f set d $.
  $( Let ` l ` be an individual variable. $)
  vl $f set l $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include class equality. @)
  wceq @a wff A = B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include the membership connective between
     classes. @)
  wcel @a wff A e. B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define class abstraction notation (so-called by Quine), also called a
     "class builder" in the literature. ` x ` and ` y ` need not be distinct.
     Definition 2.1 of [Quine] p. 16.  Typically, ` ph ` will have ` y ` as a
     free variable, and " ` { y | ph } ` " is read "the class of all sets ` y `
     such that ` ph ( y ) ` is true."  We do not define ` { y | ph } ` in
     isolation but only as part of an expression that extends or "overloads"
     the ` e. ` relationship.

     This is our first use of the ` e. ` symbol to connect classes instead of
     sets.  The syntax definition ~ wcel , which extends or "overloads" the
     ~ wel definition connecting set variables, requires that both sides of
     ` e. ` be a class.  In ~ df-cleq and ~ df-clel , we introduce a new kind
     of variable (class variable) that can substituted with expressions such as
     ` { y | ph } ` .  In the present definition, the ` x ` on the left-hand
     side is a set variable.  Syntax definition ~ cv allows us to substitute a
     set variable ` x ` for a class variable: all sets are classes by ~ cvjust
     (but not necessarily vice-versa).  For a full description of how classes
     are introduced and how to recover the primitive language, see the
     discussion in Quine (and under ~ abeq2 for a quick overview).

     Because class variables can be substituted with compound expressions and
     set variables cannot, it is often useful to convert a theorem containing a
     free set variable to a more general version with a class variable.  This
     is done with theorems such as ~ vtoclg which is used, for example, to
     convert ~ elirrv to ~ elirr .

     This is called the "axiom of class comprehension" by [Levy] p. 338, who
     treats the theory of classes as an extralogical extension to our logic and
     set theory axioms.  He calls the construction ` { y | ph } ` a "class
     term".

     For a general discussion of the theory of classes, see
     ~ http://us.metamath.org/mpeuni/mmset.html#class .  (Contributed by NM,
     5-Aug-1993.) $)
  df-clab $a |- ( x e. { y | ph } <-> [ x / y ] ph ) $.

  $( Simplification of class abstraction notation when the free and bound
     variables are identical.  (Contributed by NM, 5-Aug-1993.) $)
  abid $p |- ( x e. { x | ph } <-> ph ) $=
    ( cv cab wcel wsb df-clab sbid bitri ) BCABDEABBFAABBGABHI $.

  ${
    $d x y $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by NM, 5-Aug-1993.) $)
    hbab1 $p |- ( y e. { x | ph } -> A. x y e. { x | ph } ) $=
      ( cv cab wcel wsb df-clab hbs1 hbxfrbi ) CDABEFABCGBACBHABCIJ $.

    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 11-Aug-2016.) $)
    nfsab1 $p |- F/ x y e. { x | ph } $=
      ( cv cab wcel hbab1 nfi ) CDABEFBABCGH $.
  $}

  ${
    $d x z $.
    hbab.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by NM, 1-Mar-1995.) $)
    hbab $p |- ( z e. { y | ph } -> A. x z e. { y | ph } ) $=
      ( cv cab wcel wsb df-clab hbsb hbxfrbi ) DFACGHACDIBADCJACDBEKL $.
  $}

  ${
    $d x z $.
    nfsab.1 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 11-Aug-2016.) $)
    nfsab $p |- F/ x z e. { y | ph } $=
      ( cv cab wcel nfri hbab nfi ) DFACGHBABCDABEIJK $.
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    df-cleq.1 $e |- ( A. x ( x e. y <-> x e. z ) -> y = z ) $.
    $( Define the equality connective between classes.  Definition 2.7 of
       [Quine] p. 18.  Also Definition 4.5 of [TakeutiZaring] p. 13; Chapter 4
       provides its justification and methods for eliminating it.  Note that
       its elimination will not necessarily result in a single wff in the
       original language but possibly a "scheme" of wffs.

       This is an example of a somewhat "risky" definition, meaning that it has
       a more complex than usual soundness justification (outside of Metamath),
       because it "overloads" or reuses the existing equality symbol rather
       than introducing a new symbol.  This allows us to make statements that
       may not hold for the original symbol.  For example, it permits us to
       deduce ` y = z <-> A. x ( x e. y <-> x e. z ) ` , which is not a theorem
       of logic but rather presupposes the Axiom of Extensionality (see theorem
       ~ axext4 ).  We therefore include this axiom as a hypothesis, so that
       the use of Extensionality is properly indicated.

       We could avoid this complication by introducing a new symbol, say =_2,
       in place of ` = ` .  This would also have the advantage of making
       elimination of the definition straightforward, so that we could
       eliminate Extensionality as a hypothesis.  We would then also have the
       advantage of being able to identify in various proofs exactly where
       Extensionality truly comes into play rather than just being an artifact
       of a definition.  One of our theorems would then be ` x ` =_2
       ` y <-> x = y ` by invoking Extensionality.

       However, to conform to literature usage, we retain this overloaded
       definition.  This also makes some proofs shorter and probably easier to
       read, without the constant switching between two kinds of equality.

       See also comments under ~ df-clab , ~ df-clel , and ~ abeq2 .

       In the form of ~ dfcleq , this is called the "axiom of extensionality"
       by [Levy] p. 338, who treats the theory of classes as an extralogical
       extension to our logic and set theory axioms.

       For a general discussion of the theory of classes, see
       ~ http://us.metamath.org/mpeuni/mmset.html#class .  (Contributed by NM,
       15-Sep-1993.) $)
    df-cleq $a |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    $( The same as ~ df-cleq with the hypothesis removed using the Axiom of
       Extensionality ~ ax-ext .  (Contributed by NM, 15-Sep-1993.) $)
    dfcleq $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( vy vz ax-ext df-cleq ) ADEBCDEAFG $.
  $}

  ${
    $d x y z $.
    $( Every set is a class.  Proposition 4.9 of [TakeutiZaring] p. 13.  This
       theorem shows that a set variable can be expressed as a class
       abstraction.  This provides a motivation for the class syntax
       construction ~ cv , which allows us to substitute a set variable for a
       class variable.  See also ~ cab and ~ df-clab .  Note that this is not a
       rigorous justification, because ~ cv is used as part of the proof of
       this theorem, but a careful argument can be made outside of the
       formalism of Metamath, for example as is done in Chapter 4 of Takeuti
       and Zaring.  See also the discussion under the definition of class in
       [Jech] p. 4 showing that "Every set can be considered to be a class."
       (Contributed by NM, 7-Nov-2006.) $)
    cvjust $p |- x = { y | y e. x } $=
      ( vz cv wcel cab wceq wb dfcleq wsb df-clab elsb3 bitr2i mpgbir ) ADZBDOE
      ZBFZGCDZOEZRQEZHCCOQITPBCJSPCBKCBALMN $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the membership connective between classes.  Theorem 6.3 of
       [Quine] p. 41, or Proposition 4.6 of [TakeutiZaring] p. 13, which we
       adopt as a definition.  See these references for its metalogical
       justification.  Note that like ~ df-cleq it extends or "overloads" the
       use of the existing membership symbol, but unlike ~ df-cleq it does not
       strengthen the set of valid wffs of logic when the class variables are
       replaced with set variables (see ~ cleljust ), so we don't include any
       set theory axiom as a hypothesis.  See also comments about the syntax
       under ~ df-clab .  Alternate definitions of ` A e. B ` (but that require
       either ` A ` or ` B ` to be a set) are shown by ~ clel2 , ~ clel3 , and
       ~ clel4 .

       This is called the "axiom of membership" by [Levy] p. 338, who treats
       the theory of classes as an extralogical extension to our logic and set
       theory axioms.

       For a general discussion of the theory of classes, see
       ~ http://us.metamath.org/mpeuni/mmset.html#class .  (Contributed by NM,
       5-Aug-1993.) $)
    df-clel $a |- ( A e. B <-> E. x ( x = A /\ x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.
    eqriv.1 $e |- ( x e. A <-> x e. B ) $.
    $( Infer equality of classes from equivalence of membership.  (Contributed
       by NM, 5-Aug-1993.) $)
    eqriv $p |- A = B $=
      ( wceq cv wcel wb dfcleq mpgbir ) BCEAFZBGKCGHAABCIDJ $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdv.1 $e |- ( ph -> ( x e. A <-> x e. B ) ) $.
    $( Deduce equality of classes from equivalence of membership.  (Contributed
       by NM, 17-Mar-1996.) $)
    eqrdv $p |- ( ph -> A = B ) $=
      ( cv wcel wb wal wceq alrimiv dfcleq sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM
      $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdav.1 $e |- ( ( ph /\ x e. A ) -> x e. C ) $.
    eqrdav.2 $e |- ( ( ph /\ x e. B ) -> x e. C ) $.
    eqrdav.3 $e |- ( ( ph /\ x e. C ) -> ( x e. A <-> x e. B ) ) $.
    $( Deduce equality of classes from an equivalence of membership that
       depends on the membership variable.  (Contributed by NM, 7-Nov-2008.) $)
    eqrdav $p |- ( ph -> A = B ) $=
      ( cv wcel wa biimpd impancom mpd wi exbiri com23 imp impbida eqrdv ) ABCD
      ABIZCJZUADJZAUBKUAEJZUCFAUDUBUCAUDKUBUCHLMNAUCKUDUBGAUCUDUBOAUDUCUBAUDUBU
      CHPQRNST $.
  $}

  ${
    $d x A $.
    $( Law of identity (reflexivity of class equality).  Theorem 6.4 of [Quine]
       p. 41.

       This law is thought to have originated with Aristotle (_Metaphysics_,
       Zeta, 17, 1041 a, 10-20:  "Therefore, inquiring why a thing is itself,
       it's inquiring nothing; ... saying that the thing is itself constitutes
       the sole reasoning and the sole cause, in every case, to the question of
       why the man is man or the musician musician.").  (Thanks to Stefan Allan
       and Beno&icirc;t Jubin for this information.)  (Contributed by NM,
       5-Aug-1993.)  (Revised by Beno&icirc;t Jubin, 14-Oct-2017.) $)
    eqid $p |- A = A $=
      ( vx cv wcel biid eqriv ) BAABCADEF $.
  $}

  $( Class identity law with antecedent.  (Contributed by NM, 21-Aug-2008.) $)
  eqidd $p |- ( ph -> A = A ) $=
    ( wceq eqid a1i ) BBCABDE $.

  ${
    $d x A $.  $d x B $.
    $( Commutative law for class equality.  Theorem 6.5 of [Quine] p. 41.
       (Contributed by NM, 5-Aug-1993.) $)
    eqcom $p |- ( A = B <-> B = A ) $=
      ( vx cv wcel wb wal wceq bicom albii dfcleq 3bitr4i ) CDZAEZMBEZFZCGONFZC
      GABHBAHPQCNOIJCABKCBAKL $.
  $}

  ${
    eqcoms.1 $e |- ( A = B -> ph ) $.
    $( Inference applying commutative law for class equality to an antecedent.
       (Contributed by NM, 5-Aug-1993.) $)
    eqcoms $p |- ( B = A -> ph ) $=
      ( wceq eqcom sylbi ) CBEBCEACBFDG $.
  $}

  ${
    eqcomi.1 $e |- A = B $.
    $( Inference from commutative law for class equality.  (Contributed by NM,
       5-Aug-1993.) $)
    eqcomi $p |- B = A $=
      ( wceq eqcom mpbi ) ABDBADCABEF $.
  $}

  ${
    eqcomd.1 $e |- ( ph -> A = B ) $.
    $( Deduction from commutative law for class equality.  (Contributed by NM,
       15-Aug-1994.) $)
    eqcomd $p |- ( ph -> B = A ) $=
      ( wceq eqcom sylib ) ABCECBEDBCFG $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of equalities.  (Contributed by NM,
       5-Aug-1993.) $)
    eqeq1 $p |- ( A = B -> ( A = C <-> B = C ) ) $=
      ( vx wceq cv wcel wb wal dfcleq biimpi 19.21bi bibi1d albidv 3bitr4g ) AB
      EZDFZAGZQCGZHZDIQBGZSHZDIACEBCEPTUBDPRUASPRUAHZDPUCDIDABJKLMNDACJDBCJO $.
  $}

  ${
    eqeq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities.  (Contributed by
       NM, 5-Aug-1993.) $)
    eqeq1i $p |- ( A = C <-> B = C ) $=
      ( wceq wb eqeq1 ax-mp ) ABEACEBCEFDABCGH $.
  $}

  ${
    eqeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities.  (Contributed by
       NM, 27-Dec-1993.) $)
    eqeq1d $p |- ( ph -> ( A = C <-> B = C ) ) $=
      ( wceq wb eqeq1 syl ) ABCFBDFCDFGEBCDHI $.
  $}

  $( Equality implies equivalence of equalities.  (Contributed by NM,
     5-Aug-1993.) $)
  eqeq2 $p |- ( A = B -> ( C = A <-> C = B ) ) $=
    ( wceq eqeq1 eqcom 3bitr4g ) ABDACDBCDCADCBDABCECAFCBFG $.

  ${
    eqeq2i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities.  (Contributed by
       NM, 5-Aug-1993.) $)
    eqeq2i $p |- ( C = A <-> C = B ) $=
      ( wceq wb eqeq2 ax-mp ) ABECAECBEFDABCGH $.
  $}

  ${
    eqeq2d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities.  (Contributed by
       NM, 27-Dec-1993.) $)
    eqeq2d $p |- ( ph -> ( C = A <-> C = B ) ) $=
      ( wceq wb eqeq2 syl ) ABCFDBFDCFGEBCDHI $.
  $}

  $( Equality relationship among 4 classes.  (Contributed by NM,
     3-Aug-1994.) $)
  eqeq12 $p |- ( ( A = B /\ C = D ) -> ( A = C <-> B = D ) ) $=
    ( wceq eqeq1 eqeq2 sylan9bb ) ABEACEBCECDEBDEABCFCDBGH $.

  ${
    eqeq12i.1 $e |- A = B $.
    eqeq12i.2 $e |- C = D $.
    $( A useful inference for substituting definitions into an equality.
       (Contributed by NM, 5-Aug-1993.)  (Proof shortened by Andrew Salmon,
       25-May-2011.) $)
    eqeq12i $p |- ( A = C <-> B = D ) $=
      ( wceq wb eqeq12 mp2an ) ABGCDGACGBDGHEFABCDIJ $.

    $( Theorem eqeq12i is the congruence law for equality. $)
    $( $j congruence 'eqeq12i'; $)
  $}

  ${
    eqeq12d.1 $e |- ( ph -> A = B ) $.
    eqeq12d.2 $e |- ( ph -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.
       (Contributed by NM, 5-Aug-1993.)  (Proof shortened by Andrew Salmon,
       25-May-2011.) $)
    eqeq12d $p |- ( ph -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2anc ) ABCHDEHBDHCEHIFGBCDEJK $.
  $}

  ${
    eqeqan12d.1 $e |- ( ph -> A = B ) $.
    eqeqan12d.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.
       (Contributed by NM, 9-Aug-1994.)  (Proof shortened by Andrew Salmon,
       25-May-2011.) $)
    eqeqan12d $p |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2an ) ACDIEFICEIDFIJBGHCDEFKL $.
  $}

  ${
    eqeqan12rd.1 $e |- ( ph -> A = B ) $.
    eqeqan12rd.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.
       (Contributed by NM, 9-Aug-1994.) $)
    eqeqan12rd $p |- ( ( ps /\ ph ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeqan12d ancoms ) ABCEIDFIJABCDEFGHKL $.
  $}

  $( Transitive law for class equality.  Proposition 4.7(3) of [TakeutiZaring]
     p. 13.  (Contributed by NM, 25-Jan-2004.) $)
  eqtr $p |- ( ( A = B /\ B = C ) -> A = C ) $=
    ( wceq eqeq1 biimpar ) ABDACDBCDABCEF $.

  $( A transitive law for class equality.  (Contributed by NM, 20-May-2005.)
     (Proof shortened by Andrew Salmon, 25-May-2011.) $)
  eqtr2 $p |- ( ( A = B /\ A = C ) -> B = C ) $=
    ( wceq eqcom eqtr sylanb ) ABDBADACDBCDABEBACFG $.

  $( A transitive law for class equality.  (Contributed by NM, 20-May-2005.) $)
  eqtr3 $p |- ( ( A = C /\ B = C ) -> A = B ) $=
    ( wceq eqcom eqtr sylan2b ) BCDACDCBDABDBCEACBFG $.

  ${
    eqtri.1 $e |- A = B $.
    eqtri.2 $e |- B = C $.
    $( An equality transitivity inference.  (Contributed by NM, 5-Aug-1993.) $)
    eqtri $p |- A = C $=
      ( wceq eqeq2i mpbi ) ABFACFDBCAEGH $.
  $}

  ${
    eqtr2i.1 $e |- A = B $.
    eqtr2i.2 $e |- B = C $.
    $( An equality transitivity inference.  (Contributed by NM,
       21-Feb-1995.) $)
    eqtr2i $p |- C = A $=
      ( eqtri eqcomi ) ACABCDEFG $.
  $}

  ${
    eqtr3i.1 $e |- A = B $.
    eqtr3i.2 $e |- A = C $.
    $( An equality transitivity inference.  (Contributed by NM, 6-May-1994.) $)
    eqtr3i $p |- B = C $=
      ( eqcomi eqtri ) BACABDFEG $.
  $}

  ${
    eqtr4i.1 $e |- A = B $.
    eqtr4i.2 $e |- C = B $.
    $( An equality transitivity inference.  (Contributed by NM, 5-Aug-1993.) $)
    eqtr4i $p |- A = C $=
      ( eqcomi eqtri ) ABCDCBEFG $.
  $}

  $( Register '=' as an equality for its type (class). $)
  $( $j equality 'wceq' from 'eqid' 'eqcomi' 'eqtri'; $)

  ${
    3eqtri.1 $e |- A = B $.
    3eqtri.2 $e |- B = C $.
    3eqtri.3 $e |- C = D $.
    $( An inference from three chained equalities.  (Contributed by NM,
       29-Aug-1993.) $)
    3eqtri $p |- A = D $=
      ( eqtri ) ABDEBCDFGHH $.

    $( An inference from three chained equalities.  (Contributed by NM,
       3-Aug-2006.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtrri $p |- D = A $=
      ( eqtri eqtr2i ) ACDABCEFHGI $.
  $}

  ${
    3eqtr2i.1 $e |- A = B $.
    3eqtr2i.2 $e |- C = B $.
    3eqtr2i.3 $e |- C = D $.
    $( An inference from three chained equalities.  (Contributed by NM,
       3-Aug-2006.) $)
    3eqtr2i $p |- A = D $=
      ( eqtr4i eqtri ) ACDABCEFHGI $.

    $( An inference from three chained equalities.  (Contributed by NM,
       3-Aug-2006.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr2ri $p |- D = A $=
      ( eqtr4i eqtr2i ) ACDABCEFHGI $.
  $}

  ${
    3eqtr3i.1 $e |- A = B $.
    3eqtr3i.2 $e |- A = C $.
    3eqtr3i.3 $e |- B = D $.
    $( An inference from three chained equalities.  (Contributed by NM,
       6-May-1994.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr3i $p |- C = D $=
      ( eqtr3i ) BCDABCEFHGH $.

    $( An inference from three chained equalities.  (Contributed by NM,
       15-Aug-2004.) $)
    3eqtr3ri $p |- D = C $=
      ( eqtr3i ) BDCGABCEFHH $.
  $}

  ${
    3eqtr4i.1 $e |- A = B $.
    3eqtr4i.2 $e |- C = A $.
    3eqtr4i.3 $e |- D = B $.
    $( An inference from three chained equalities.  (Contributed by NM,
       5-Aug-1993.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr4i $p |- C = D $=
      ( eqtr4i ) CADFDBAGEHH $.

    $( An inference from three chained equalities.  (Contributed by NM,
       2-Sep-1995.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr4ri $p |- D = C $=
      ( eqtr4i ) DACDBAGEHFH $.
  $}

  ${
    eqtrd.1 $e |- ( ph -> A = B ) $.
    eqtrd.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM, 5-Aug-1993.) $)
    eqtrd $p |- ( ph -> A = C ) $=
      ( wceq eqeq2d mpbid ) ABCGBDGEACDBFHI $.
  $}

  ${
    eqtr2d.1 $e |- ( ph -> A = B ) $.
    eqtr2d.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM,
       18-Oct-1999.) $)
    eqtr2d $p |- ( ph -> C = A ) $=
      ( eqtrd eqcomd ) ABDABCDEFGH $.
  $}

  ${
    eqtr3d.1 $e |- ( ph -> A = B ) $.
    eqtr3d.2 $e |- ( ph -> A = C ) $.
    $( An equality transitivity equality deduction.  (Contributed by NM,
       18-Jul-1995.) $)
    eqtr3d $p |- ( ph -> B = C ) $=
      ( eqcomd eqtrd ) ACBDABCEGFH $.
  $}

  ${
    eqtr4d.1 $e |- ( ph -> A = B ) $.
    eqtr4d.2 $e |- ( ph -> C = B ) $.
    $( An equality transitivity equality deduction.  (Contributed by NM,
       18-Jul-1995.) $)
    eqtr4d $p |- ( ph -> A = C ) $=
      ( eqcomd eqtrd ) ABCDEADCFGH $.
  $}

  ${
    3eqtrd.1 $e |- ( ph -> A = B ) $.
    3eqtrd.2 $e |- ( ph -> B = C ) $.
    3eqtrd.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities.  (Contributed by NM,
       29-Oct-1995.) $)
    3eqtrd $p |- ( ph -> A = D ) $=
      ( eqtrd ) ABCEFACDEGHII $.

    $( A deduction from three chained equalities.  (Contributed by NM,
       4-Aug-2006.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtrrd $p |- ( ph -> D = A ) $=
      ( eqtrd eqtr2d ) ABDEABCDFGIHJ $.
  $}

  ${
    3eqtr2d.1 $e |- ( ph -> A = B ) $.
    3eqtr2d.2 $e |- ( ph -> C = B ) $.
    3eqtr2d.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities.  (Contributed by NM,
       4-Aug-2006.) $)
    3eqtr2d $p |- ( ph -> A = D ) $=
      ( eqtr4d eqtrd ) ABDEABCDFGIHJ $.

    $( A deduction from three chained equalities.  (Contributed by NM,
       4-Aug-2006.) $)
    3eqtr2rd $p |- ( ph -> D = A ) $=
      ( eqtr4d eqtr2d ) ABDEABCDFGIHJ $.
  $}

  ${
    3eqtr3d.1 $e |- ( ph -> A = B ) $.
    3eqtr3d.2 $e |- ( ph -> A = C ) $.
    3eqtr3d.3 $e |- ( ph -> B = D ) $.
    $( A deduction from three chained equalities.  (Contributed by NM,
       4-Aug-1995.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr3d $p |- ( ph -> C = D ) $=
      ( eqtr3d ) ACDEABCDFGIHI $.

    $( A deduction from three chained equalities.  (Contributed by NM,
       14-Jan-2006.) $)
    3eqtr3rd $p |- ( ph -> D = C ) $=
      ( eqtr3d ) ACEDHABCDFGII $.
  $}

  ${
    3eqtr4d.1 $e |- ( ph -> A = B ) $.
    3eqtr4d.2 $e |- ( ph -> C = A ) $.
    3eqtr4d.3 $e |- ( ph -> D = B ) $.
    $( A deduction from three chained equalities.  (Contributed by NM,
       4-Aug-1995.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr4d $p |- ( ph -> C = D ) $=
      ( eqtr4d ) ADBEGAECBHFII $.

    $( A deduction from three chained equalities.  (Contributed by NM,
       21-Sep-1995.) $)
    3eqtr4rd $p |- ( ph -> D = C ) $=
      ( eqtr4d ) AEBDAECBHFIGI $.
  $}

  ${
    syl5eq.1 $e |- A = B $.
    syl5eq.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM, 5-Aug-1993.) $)
    syl5eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDBCGAEHFI $.
  $}

  ${
    syl5req.1 $e |- A = B $.
    syl5req.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM,
       29-Mar-1998.) $)
    syl5req $p |- ( ph -> C = A ) $=
      ( syl5eq eqcomd ) ABDABCDEFGH $.
  $}

  ${
    syl5eqr.1 $e |- B = A $.
    syl5eqr.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM, 5-Aug-1993.) $)
    syl5eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl5eq ) ABCDCBEGFH $.
  $}

  ${
    syl5reqr.1 $e |- B = A $.
    syl5reqr.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM,
       29-Mar-1998.) $)
    syl5reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl5req ) ABCDCBEGFH $.
  $}

  ${
    syl6eq.1 $e |- ( ph -> A = B ) $.
    syl6eq.2 $e |- B = C $.
    $( An equality transitivity deduction.  (Contributed by NM, 5-Aug-1993.) $)
    syl6eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDECDGAFHI $.
  $}

  ${
    syl6req.1 $e |- ( ph -> A = B ) $.
    syl6req.2 $e |- B = C $.
    $( An equality transitivity deduction.  (Contributed by NM,
       29-Mar-1998.) $)
    syl6req $p |- ( ph -> C = A ) $=
      ( syl6eq eqcomd ) ABDABCDEFGH $.
  $}

  ${
    syl6eqr.1 $e |- ( ph -> A = B ) $.
    syl6eqr.2 $e |- C = B $.
    $( An equality transitivity deduction.  (Contributed by NM, 5-Aug-1993.) $)
    syl6eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl6eq ) ABCDEDCFGH $.
  $}

  ${
    syl6reqr.1 $e |- ( ph -> A = B ) $.
    syl6reqr.2 $e |- C = B $.
    $( An equality transitivity deduction.  (Contributed by NM,
       29-Mar-1998.) $)
    syl6reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl6req ) ABCDEDCFGH $.
  $}

  ${
    sylan9eq.1 $e |- ( ph -> A = B ) $.
    sylan9eq.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM, 8-May-1994.)
       (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    sylan9eq $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( wceq eqtr syl2an ) ACDHDEHCEHBFGCDEIJ $.
  $}

  ${
    sylan9req.1 $e |- ( ph -> B = A ) $.
    sylan9req.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM,
       23-Jun-2007.) $)
    sylan9req $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( eqcomd sylan9eq ) ABCDEADCFHGI $.
  $}

  ${
    sylan9eqr.1 $e |- ( ph -> A = B ) $.
    sylan9eqr.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction.  (Contributed by NM, 8-May-1994.) $)
    sylan9eqr $p |- ( ( ps /\ ph ) -> A = C ) $=
      ( wceq sylan9eq ancoms ) ABCEHABCDEFGIJ $.
  $}

  ${
    3eqtr3g.1 $e |- ( ph -> A = B ) $.
    3eqtr3g.2 $e |- A = C $.
    3eqtr3g.3 $e |- B = D $.
    $( A chained equality inference, useful for converting from definitions.
       (Contributed by NM, 15-Nov-1994.) $)
    3eqtr3g $p |- ( ph -> C = D ) $=
      ( syl5eqr syl6eq ) ADCEADBCGFIHJ $.
  $}

  ${
    3eqtr3a.1 $e |- A = B $.
    3eqtr3a.2 $e |- ( ph -> A = C ) $.
    3eqtr3a.3 $e |- ( ph -> B = D ) $.
    $( A chained equality inference, useful for converting from definitions.
       (Contributed by Mario Carneiro, 6-Nov-2015.) $)
    3eqtr3a $p |- ( ph -> C = D ) $=
      ( syl5eq eqtr3d ) ABDEGABCEFHIJ $.
  $}

  ${
    3eqtr4g.1 $e |- ( ph -> A = B ) $.
    3eqtr4g.2 $e |- C = A $.
    3eqtr4g.3 $e |- D = B $.
    $( A chained equality inference, useful for converting to definitions.
       (Contributed by NM, 5-Aug-1993.) $)
    3eqtr4g $p |- ( ph -> C = D ) $=
      ( syl5eq syl6eqr ) ADCEADBCGFIHJ $.
  $}

  ${
    3eqtr4a.1 $e |- A = B $.
    3eqtr4a.2 $e |- ( ph -> C = A ) $.
    3eqtr4a.3 $e |- ( ph -> D = B ) $.
    $( A chained equality inference, useful for converting to definitions.
       (Contributed by NM, 2-Feb-2007.)  (Proof shortened by Andrew Salmon,
       25-May-2011.) $)
    3eqtr4a $p |- ( ph -> C = D ) $=
      ( syl6eq eqtr4d ) ADCEADBCGFIHJ $.
  $}

  ${
    eq2tr.1 $e |- ( A = C -> D = F ) $.
    eq2tr.2 $e |- ( B = D -> C = G ) $.
    $( A compound transitive inference for class equality.  (Contributed by NM,
       22-Jan-2004.) $)
    eq2tri $p |- ( ( A = C /\ B = F ) <-> ( B = D /\ A = G ) ) $=
      ( wceq wa ancom eqeq2d pm5.32i 3bitr3i ) ACIZBDIZJPOJOBEIZJPAFIZJOPKOPQOD
      EBGLMPORPCFAHLMN $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of membership.  (Contributed by NM,
       5-Aug-1993.) $)
    eleq1 $p |- ( A = B -> ( A e. C <-> B e. C ) ) $=
      ( vx wceq cv wcel wa wex eqeq2 anbi1d exbidv df-clel 3bitr4g ) ABEZDFZAEZ
      PCGZHZDIPBEZRHZDIACGBCGOSUADOQTRABPJKLDACMDBCMN $.

    $( Equality implies equivalence of membership.  (Contributed by NM,
       5-Aug-1993.) $)
    eleq2 $p |- ( A = B -> ( C e. A <-> C e. B ) ) $=
      ( vx wceq cv wcel wa wex wal dfcleq biimpi 19.21bi anbi2d df-clel 3bitr4g
      wb exbidv ) ABEZDFZCEZTAGZHZDIUATBGZHZDICAGCBGSUCUEDSUBUDUASUBUDQZDSUFDJD
      ABKLMNRDCAODCBOP $.
  $}

  $( Equality implies equivalence of membership.  (Contributed by NM,
     31-May-1999.) $)
  eleq12 $p |- ( ( A = B /\ C = D ) -> ( A e. C <-> B e. D ) ) $=
    ( wceq wcel eleq1 eleq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.

  ${
    eleq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of membership.  (Contributed by
       NM, 5-Aug-1993.) $)
    eleq1i $p |- ( A e. C <-> B e. C ) $=
      ( wceq wcel wb eleq1 ax-mp ) ABEACFBCFGDABCHI $.

    $( Inference from equality to equivalence of membership.  (Contributed by
       NM, 5-Aug-1993.) $)
    eleq2i $p |- ( C e. A <-> C e. B ) $=
      ( wceq wcel wb eleq2 ax-mp ) ABECAFCBFGDABCHI $.

    ${
      eleq12i.2 $e |- C = D $.
      $( Inference from equality to equivalence of membership.  (Contributed by
         NM, 31-May-1994.) $)
      eleq12i $p |- ( A e. C <-> B e. D ) $=
        ( wcel eleq2i eleq1i bitri ) ACGADGBDGCDAFHABDEIJ $.

      $( Theorem eleq12i is the congruence law for elementhood. $)
      $( $j congruence 'eleq12i'; $)
    $}
  $}

  ${
    eleq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of membership.  (Contributed by
       NM, 5-Aug-1993.) $)
    eleq1d $p |- ( ph -> ( A e. C <-> B e. C ) ) $=
      ( wceq wcel wb eleq1 syl ) ABCFBDGCDGHEBCDIJ $.

    $( Deduction from equality to equivalence of membership.  (Contributed by
       NM, 27-Dec-1993.) $)
    eleq2d $p |- ( ph -> ( C e. A <-> C e. B ) ) $=
      ( wceq wcel wb eleq2 syl ) ABCFDBGDCGHEBCDIJ $.

    ${
      eleq12d.2 $e |- ( ph -> C = D ) $.
      $( Deduction from equality to equivalence of membership.  (Contributed by
         NM, 31-May-1994.) $)
      eleq12d $p |- ( ph -> ( A e. C <-> B e. D ) ) $=
        ( wcel eleq2d eleq1d bitrd ) ABDHBEHCEHADEBGIABCEFJK $.
    $}
  $}

  $( A transitive-type law relating membership and equality.  (Contributed by
     NM, 9-Apr-1994.) $)
  eleq1a $p |- ( A e. B -> ( C = A -> C e. B ) ) $=
    ( wceq wcel eleq1 biimprcd ) CADCBEABECABFG $.

  ${
    eqeltr.1 $e |- A = B $.
    eqeltr.2 $e |- B e. C $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       NM, 5-Aug-1993.) $)
    eqeltri $p |- A e. C $=
      ( wcel eleq1i mpbir ) ACFBCFEABCDGH $.
  $}

  ${
    eqeltrr.1 $e |- A = B $.
    eqeltrr.2 $e |- A e. C $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       NM, 5-Aug-1993.) $)
    eqeltrri $p |- B e. C $=
      ( eqcomi eqeltri ) BACABDFEG $.
  $}

  ${
    eleqtr.1 $e |- A e. B $.
    eleqtr.2 $e |- B = C $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       NM, 5-Aug-1993.) $)
    eleqtri $p |- A e. C $=
      ( wcel eleq2i mpbi ) ABFACFDBCAEGH $.
  $}

  ${
    eleqtrr.1 $e |- A e. B $.
    eleqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       NM, 5-Aug-1993.) $)
    eleqtrri $p |- A e. C $=
      ( eqcomi eleqtri ) ABCDCBEFG $.
  $}

  ${
    eqeltrd.1 $e |- ( ph -> A = B ) $.
    eqeltrd.2 $e |- ( ph -> B e. C ) $.
    $( Substitution of equal classes into membership relation, deduction form.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    eqeltrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq1d mpbird ) ABDGCDGFABCDEHI $.
  $}

  ${
    eqeltrrd.1 $e |- ( ph -> A = B ) $.
    eqeltrrd.2 $e |- ( ph -> A e. C ) $.
    $( Deduction that substitutes equal classes into membership.  (Contributed
       by NM, 14-Dec-2004.) $)
    eqeltrrd $p |- ( ph -> B e. C ) $=
      ( eqcomd eqeltrd ) ACBDABCEGFH $.
  $}

  ${
    eleqtrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrd.2 $e |- ( ph -> B = C ) $.
    $( Deduction that substitutes equal classes into membership.  (Contributed
       by NM, 14-Dec-2004.) $)
    eleqtrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq2d mpbid ) ABCGBDGEACDBFHI $.
  $}

  ${
    eleqtrrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Deduction that substitutes equal classes into membership.  (Contributed
       by NM, 14-Dec-2004.) $)
    eleqtrrd $p |- ( ph -> A e. C ) $=
      ( eqcomd eleqtrd ) ABCDEADCFGH $.
  $}

  ${
    3eltr3.1 $e |- A e. B $.
    3eltr3.2 $e |- A = C $.
    3eltr3.3 $e |- B = D $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       Mario Carneiro, 6-Jan-2017.) $)
    3eltr3i $p |- C e. D $=
      ( eleqtri eqeltrri ) ACDFABDEGHI $.
  $}

  ${
    3eltr4.1 $e |- A e. B $.
    3eltr4.2 $e |- C = A $.
    3eltr4.3 $e |- D = B $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       Mario Carneiro, 6-Jan-2017.) $)
    3eltr4i $p |- C e. D $=
      ( eleqtrri eqeltri ) CADFABDEGHI $.
  $}

  ${
    3eltr3d.1 $e |- ( ph -> A e. B ) $.
    3eltr3d.2 $e |- ( ph -> A = C ) $.
    3eltr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       Mario Carneiro, 6-Jan-2017.) $)
    3eltr3d $p |- ( ph -> C e. D ) $=
      ( eleqtrd eqeltrrd ) ABDEGABCEFHIJ $.
  $}

  ${
    3eltr4d.1 $e |- ( ph -> A e. B ) $.
    3eltr4d.2 $e |- ( ph -> C = A ) $.
    3eltr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       Mario Carneiro, 6-Jan-2017.) $)
    3eltr4d $p |- ( ph -> C e. D ) $=
      ( eleqtrrd eqeltrd ) ADBEGABCEFHIJ $.
  $}

  ${
    3eltr3g.1 $e |- ( ph -> A e. B ) $.
    3eltr3g.2 $e |- A = C $.
    3eltr3g.3 $e |- B = D $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       Mario Carneiro, 6-Jan-2017.) $)
    3eltr3g $p |- ( ph -> C e. D ) $=
      ( wcel eleq12i sylib ) ABCIDEIFBDCEGHJK $.
  $}

  ${
    3eltr4g.1 $e |- ( ph -> A e. B ) $.
    3eltr4g.2 $e |- C = A $.
    3eltr4g.3 $e |- D = B $.
    $( Substitution of equal classes into membership relation.  (Contributed by
       Mario Carneiro, 6-Jan-2017.) $)
    3eltr4g $p |- ( ph -> C e. D ) $=
      ( wcel eleq12i sylibr ) ABCIDEIFDBECGHJK $.
  $}

  ${
    syl5eqel.1 $e |- A = B $.
    syl5eqel.2 $e |- ( ph -> B e. C ) $.
    $( B membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl5eqel $p |- ( ph -> A e. C ) $=
      ( wceq a1i eqeltrd ) ABCDBCGAEHFI $.
  $}

  ${
    syl5eqelr.1 $e |- B = A $.
    syl5eqelr.2 $e |- ( ph -> B e. C ) $.
    $( B membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl5eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl5eqel ) ABCDCBEGFH $.
  $}

  ${
    syl5eleq.1 $e |- A e. B $.
    syl5eleq.2 $e |- ( ph -> B = C ) $.
    $( B membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl5eleq $p |- ( ph -> A e. C ) $=
      ( wcel a1i eleqtrd ) ABCDBCGAEHFI $.
  $}

  ${
    syl5eleqr.1 $e |- A e. B $.
    syl5eleqr.2 $e |- ( ph -> C = B ) $.
    $( B membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl5eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl5eleq ) ABCDEADCFGH $.
  $}

  ${
    syl6eqel.1 $e |- ( ph -> A = B ) $.
    syl6eqel.2 $e |- B e. C $.
    $( A membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl6eqel $p |- ( ph -> A e. C ) $=
      ( wcel a1i eqeltrd ) ABCDECDGAFHI $.
  $}

  ${
    syl6eqelr.1 $e |- ( ph -> B = A ) $.
    syl6eqelr.2 $e |- B e. C $.
    $( A membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl6eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl6eqel ) ABCDACBEGFH $.
  $}

  ${
    syl6eleq.1 $e |- ( ph -> A e. B ) $.
    syl6eleq.2 $e |- B = C $.
    $( A membership and equality inference.  (Contributed by NM,
       4-Jan-2006.) $)
    syl6eleq $p |- ( ph -> A e. C ) $=
      ( wceq a1i eleqtrd ) ABCDECDGAFHI $.
  $}

  ${
    syl6eleqr.1 $e |- ( ph -> A e. B ) $.
    syl6eleqr.2 $e |- C = B $.
    $( A membership and equality inference.  (Contributed by NM,
       24-Apr-2005.) $)
    syl6eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl6eleq ) ABCDEDCFGH $.
  $}

  ${
    eleq2s.1 $e |- ( A e. B -> ph ) $.
    eleq2s.2 $e |- C = B $.
    $( Substitution of equal classes into a membership antecedent.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    eleq2s $p |- ( A e. C -> ph ) $=
      ( wcel eleq2i sylbi ) BDGBCGADCBFHEI $.
  $}

  ${
    eqneltrd.1 $e |- ( ph -> A = B ) $.
    eqneltrd.2 $e |- ( ph -> -. B e. C ) $.
    $( If a class is not an element of another class, an equal class is also
       not an element.  Deduction form.  (Contributed by David Moews,
       1-May-2017.) $)
    eqneltrd $p |- ( ph -> -. A e. C ) $=
      ( wcel eleq1d mtbird ) ABDGCDGFABCDEHI $.
  $}

  ${
    eqneltrrd.1 $e |- ( ph -> A = B ) $.
    eqneltrrd.2 $e |- ( ph -> -. A e. C ) $.
    $( If a class is not an element of another class, an equal class is also
       not an element.  Deduction form.  (Contributed by David Moews,
       1-May-2017.) $)
    eqneltrrd $p |- ( ph -> -. B e. C ) $=
      ( wcel eleq1d mtbid ) ABDGCDGFABCDEHI $.
  $}

  ${
    neleqtrd.1 $e |- ( ph -> -. C e. A ) $.
    neleqtrd.2 $e |- ( ph -> A = B ) $.
    $( If a class is not an element of another class, it is also not an element
       of an equal class.  Deduction form.  (Contributed by David Moews,
       1-May-2017.) $)
    neleqtrd $p |- ( ph -> -. C e. B ) $=
      ( wcel eleq2d mtbid ) ADBGDCGEABCDFHI $.
  $}

  ${
    neleqtrrd.1 $e |- ( ph -> -. C e. B ) $.
    neleqtrrd.2 $e |- ( ph -> A = B ) $.
    $( If a class is not an element of another class, it is also not an element
       of an equal class.  Deduction form.  (Contributed by David Moews,
       1-May-2017.) $)
    neleqtrrd $p |- ( ph -> -. C e. A ) $=
      ( wcel eleq2d mtbird ) ADBGDCGEABCDFHI $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    cleqh.1 $e |- ( y e. A -> A. x y e. A ) $.
    cleqh.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Establish equality between classes, using bound-variable hypotheses
       instead of distinct variable conditions.  (Contributed by NM,
       5-Aug-1993.) $)
    cleqh $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( wceq cv wcel wb wal dfcleq ax-17 wi wa dfbi2 hbim weq eleq1 cbv3h hban
      hbxfrbi bibi12d biimpd equcoms biimprd impbii bitr4i ) CDGBHZCIZUIDIZJZBK
      ZAHZCIZUNDIZJZAKZBCDLURUMUQULABUQBMZULUJUKNZUKUJNZOAUJUKPUTVAAUJUKAEFQUKU
      JAFEQUAUBZABRZUQULVCUOUJUPUKUNUICSUNUIDSUCZUDTULUQBAVBUSBARUQULUQULJABVDU
      EUFTUGUH $.
  $}

  $( A way of showing two classes are not equal.  (Contributed by NM,
     1-Apr-1997.) $)
  nelneq $p |- ( ( A e. C /\ -. B e. C ) -> -. A = B ) $=
    ( wcel wceq eleq1 biimpcd con3and ) ACDZABEZBCDZJIKABCFGH $.

  $( A way of showing two classes are not equal.  (Contributed by NM,
     12-Jan-2002.) $)
  nelneq2 $p |- ( ( A e. B /\ -. A e. C ) -> -. B = C ) $=
    ( wcel wceq eleq2 biimpcd con3and ) ABDZBCEZACDZJIKBCAFGH $.

  ${
    $d x y $.  $d y A $.
    $( Lemma for ~ eqsb3 .  (Contributed by Rodolfo Medina, 28-Apr-2010.)
       (Proof shortened by Andrew Salmon, 14-Jun-2011.) $)
    eqsb3lem $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( cv wceq nfv eqeq1 sbie ) BDZCEADZCEZBAKBFIJCGH $.
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d x w $.
    $( Substitution applied to an atomic wff (class version of ~ equsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.) $)
    eqsb3 $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( vw cv wceq wsb eqsb3lem sbbii nfv sbco2 3bitr3i ) BECFZBDGZDAGDECFZDAGM
      BAGAECFNODADBCHIMBADMDJKADCHL $.
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d w x $.
    $( Substitution applied to an atomic wff (class version of ~ elsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.)  (Proof shortened by
       Andrew Salmon, 14-Jun-2011.) $)
    clelsb3 $p |- ( [ x / y ] y e. A <-> x e. A ) $=
      ( vw cv wcel wsb nfv sbco2 eleq1 sbie sbbii 3bitr3i ) DEZCFZDBGZBAGODAGBE
      ZCFZBAGAEZCFZODABOBHIPRBAORDBRDHNQCJKLOTDATDHNSCJKM $.
  $}

  ${
    hbxfr.1 $e |- A = B $.
    hbxfr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( A utility lemma to transfer a bound-variable hypothesis builder into a
       definition.  See ~ hbxfrbi for equivalence version.  (Contributed by NM,
       21-Aug-2007.) $)
    hbxfreq $p |- ( y e. A -> A. x y e. A ) $=
      ( cv wcel eleq2i hbxfrbi ) BGZCHKDHACDKEIFJ $.
  $}

  ${
    $d w y A $.  $d w x z $.
    hblem.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Change the free variable of a hypothesis builder.  Lemma for ~ nfcrii .
       (Contributed by NM, 5-Aug-1993.)  (Revised by Andrew Salmon,
       11-Jul-2011.) $)
    hblem $p |- ( z e. A -> A. x z e. A ) $=
      ( cv wcel wsb wal hbsb clelsb3 albii 3imtr3i ) BFDGZBCHZOAICFDGZPAINBCAEJ
      CBDKZOPAQLM $.
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction (also called a
       class builder).  Theorem 5.1 of [Quine] p. 34.  This theorem shows the
       relationship between expressions with class abstractions and expressions
       with class variables.  Note that ~ abbi and its relatives are among
       those useful for converting theorems with class variables to equivalent
       theorems with wff variables, by first substituting a class abstraction
       for each class variable.

       Class variables can always be eliminated from a theorem to result in an
       equivalent theorem with wff variables, and vice-versa.  The idea is
       roughly as follows.  To convert a theorem with a wff variable ` ph `
       (that has a free variable ` x ` ) to a theorem with a class variable
       ` A ` , we substitute ` x e. A ` for ` ph ` throughout and simplify,
       where ` A ` is a new class variable not already in the wff.  An example
       is the conversion of ~ zfauscl to ~ inex1 (look at the instance of
       ~ zfauscl that occurs in the proof of ~ inex1 ).  Conversely, to convert
       a theorem with a class variable ` A ` to one with ` ph ` , we substitute
       ` { x | ph } ` for ` A ` throughout and simplify, where ` x ` and ` ph `
       are new set and wff variables not already in the wff.  An example is
       ~ cp , which derives a formula containing wff variables from
       substitution instances of the class variables in its equivalent
       formulation ~ cplem2 .  For more information on class variables, see
       Quine pp. 15-21 and/or Takeuti and Zaring pp. 10-13.  (Contributed by
       NM, 5-Aug-1993.) $)
    abeq2 $p |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) $=
      ( vy cab wceq cv wcel wb wal ax-17 hbab1 cleqh abid bibi2i albii bitri )
      CABEZFBGZCHZSRHZIZBJTAIZBJBDCRDGCHBKABDLMUBUCBUAATABNOPQ $.
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction.  (Contributed by
       NM, 20-Aug-1993.) $)
    abeq1 $p |- ( { x | ph } = A <-> A. x ( ph <-> x e. A ) ) $=
      ( cab wceq cv wcel wb wal abeq2 eqcom bicom albii 3bitr4i ) CABDZEBFCGZAH
      ZBIOCEAPHZBIABCJOCKRQBAPLMN $.
  $}

  ${
    abeqi.1 $e |- A = { x | ph } $.
    $( Equality of a class variable and a class abstraction (inference rule).
       (Contributed by NM, 3-Apr-1996.) $)
    abeq2i $p |- ( x e. A <-> ph ) $=
      ( cv wcel cab eleq2i abid bitri ) BEZCFKABGZFACLKDHABIJ $.
  $}

  ${
    abeqri.1 $e |- { x | ph } = A $.
    $( Equality of a class variable and a class abstraction (inference rule).
       (Contributed by NM, 31-Jul-1994.) $)
    abeq1i $p |- ( ph <-> x e. A ) $=
      ( cv cab wcel abid eleq2i bitr3i ) ABEZABFZGKCGABHLCKDIJ $.
  $}

  ${
    abeqd.1 $e |- ( ph -> A = { x | ps } ) $.
    $( Equality of a class variable and a class abstraction (deduction).
       (Contributed by NM, 16-Nov-1995.) $)
    abeq2d $p |- ( ph -> ( x e. A <-> ps ) ) $=
      ( cv wcel cab eleq2d abid syl6bb ) ACFZDGLBCHZGBADMLEIBCJK $.
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Equivalent wff's correspond to equal class abstractions.  (Contributed
       by NM, 25-Nov-2013.)  (Revised by Mario Carneiro, 11-Aug-2016.) $)
    abbi $p |- ( A. x ( ph <-> ps ) <-> { x | ph } = { x | ps } ) $=
      ( vy cab wceq wcel wal dfcleq nfsab1 nfbi nfv wsb df-clab sbequ12r syl5bb
      cv wb bibi12d cbval bitr2i ) ACEZBCEZFDQZUBGZUDUCGZRZDHABRZCHDUBUCIUGUHDC
      UEUFCACDJBCDJKUHDLUDCQFZUEAUFBUEACDMUIAADCNADCOPUFBCDMUIBBDCNBDCOPSTUA $.
  $}

  ${
    $d x A $.
    abbiri.1 $e |- ( x e. A <-> ph ) $.
    $( Equality of a class variable and a class abstraction (inference rule).
       (Contributed by NM, 5-Aug-1993.) $)
    abbi2i $p |- A = { x | ph } $=
      ( cab wceq cv wcel wb abeq2 mpgbir ) CABEFBGCHAIBABCJDK $.
  $}

  ${
    abbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions (inference rule).
       (Contributed by NM, 5-Aug-1993.) $)
    abbii $p |- { x | ph } = { x | ps } $=
      ( wb cab wceq abbi mpgbi ) ABEACFBCFGCABCHDI $.

    $( Theorem abbii is the congruence law for class abstraction. $)
    $( $j congruence 'abbii'; $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.  $d ch y $.  $( ` y ` is a dummy var. $)
    abbid.1 $e |- F/ x ph $.
    abbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule).
       (Contributed by NM, 5-Aug-1993.)  (Revised by Mario Carneiro,
       7-Oct-2016.) $)
    abbid $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( wb wal cab wceq alrimi abbi sylib ) ABCGZDHBDICDIJANDEFKBCDLM $.
  $}

  ${
    $d x ph $.
    abbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule).
       (Contributed by NM, 10-Aug-1993.) $)
    abbidv $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( nfv abbid ) ABCDADFEG $.
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbirdv.1 $e |- ( ph -> ( x e. A <-> ps ) ) $.
    $( Deduction from a wff to a class abstraction.  (Contributed by NM,
       9-Jul-1994.) $)
    abbi2dv $p |- ( ph -> A = { x | ps } ) $=
      ( cv wcel wb wal cab wceq alrimiv abeq2 sylibr ) ACFDGBHZCIDBCJKAOCELBCDM
      N $.
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbildv.1 $e |- ( ph -> ( ps <-> x e. A ) ) $.
    $( Deduction from a wff to a class abstraction.  (Contributed by NM,
       9-Jul-1994.) $)
    abbi1dv $p |- ( ph -> { x | ps } = A ) $=
      ( cv wcel wb wal cab wceq alrimiv abeq1 sylibr ) ABCFDGHZCIBCJDKAOCELBCDM
      N $.
  $}

  ${
    $d x A $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35.
       (Contributed by NM, 26-Dec-1993.) $)
    abid2 $p |- { x | x e. A } = A $=
      ( cv wcel cab biid abbi2i eqcomi ) BACBDZAEIABIFGH $.
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    cbvab.1 $e |- F/ y ph $.
    cbvab.2 $e |- F/ x ps $.
    cbvab.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by Andrew Salmon, 11-Jul-2011.) $)
    cbvab $p |- { x | ph } = { y | ps } $=
      ( vz cab wsb cv wcel nfsb wceq wb equcoms bicomd sbie sbequ df-clab eqriv
      syl5bbr 3bitr4i ) HACIZBDIZACHJBDHJZHKZUDLUGUELAUFCHBDHCFMABDCJCKZUGNUFBA
      DCEDKUHNABABOCDGPQRBCHDSUBRAHCTBHDTUCUA $.
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by NM, 26-May-1999.) $)
    cbvabv $p |- { x | ph } = { y | ps } $=
      ( nfv cbvab ) ABCDADFBCFEG $.
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership of a class variable in a class abstraction.  (Contributed by
       NM, 23-Dec-1993.) $)
    clelab $p |- ( A e. { x | ph } <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq cab wcel wex wsb df-clab anbi2i exbii df-clel nfv nfs1v nfan
      wa eqeq1 sbequ12 anbi12d cbvex 3bitr4i ) DEZCFZUDABGZHZRZDIUEABDJZRZDICUF
      HBEZCFZARZBIUHUJDUGUIUEADBKLMDCUFNUMUJBDUMDOUEUIBUEBOABDPQUKUDFULUEAUIUKU
      DCSABDTUAUBUC $.
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( Membership of a class abstraction in another class.  (Contributed by NM,
       17-Jan-2006.) $)
    clabel $p |- ( { x | ph } e. A <->
                 E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) $=
      ( cab wcel cv wceq wa wex wb wal df-clel abeq2 anbi2ci exbii bitri ) ABEZ
      DFCGZRHZSDFZIZCJUABGSFAKBLZIZCJCRDMUBUDCTUCUAABSNOPQ $.
  $}

  ${
    $d z A $.  $d z x $.  $d z y $.
    $( The right-hand side of the second equality is a way of representing
       proper substitution of ` y ` for ` x ` into a class variable.
       (Contributed by NM, 14-Sep-2003.) $)
    sbab $p |- ( x = y -> A = { z | [ y / x ] z e. A } ) $=
      ( cv wceq wcel wsb sbequ12 abbi2dv ) AEBEFCEDGZABHCDKABIJ $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Class form not-free predicate
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c F/_ $.  $( Underlined not-free symbol. $)

  $( Extend wff definition to include the not-free predicate for classes. $)
  wnfc $a wff F/_ x A $.

  ${
    $d x y z $.  $d y z A $.
    $( Justification theorem for ~ df-nfc .  (Contributed by Mario Carneiro,
       13-Oct-2016.) $)
    nfcjust $p |- ( A. y F/ x y e. A <-> A. z F/ x z e. A ) $=
      ( cv wcel wnf wceq nfv eleq1 nfbidf cbvalv ) BEZDFZAGCEZDFZAGBCMOHZNPAQAI
      MODJKL $.
  $}

  ${
    $d x y $.  $d y A $.
    $( Define the not-free predicate for classes.  This is read " ` x ` is not
       free in ` A ` ".  Not-free means that the value of ` x ` cannot affect
       the value of ` A ` , e.g., any occurrence of ` x ` in ` A ` is
       effectively bound by a "for all" or something that expands to one (such
       as "there exists").  It is defined in terms of the not-free predicate
       ~ df-nf for wffs; see that definition for more information.
       (Contributed by Mario Carneiro, 11-Aug-2016.) $)
    df-nfc $a |- ( F/_ x A <-> A. y F/ x y e. A ) $.

    ${
      nfci.1 $e |- F/ x y e. A $.
      $( Deduce that a class ` A ` does not have ` x ` free in it.
         (Contributed by Mario Carneiro, 11-Aug-2016.) $)
      nfci $p |- F/_ x A $=
        ( wnfc cv wcel wnf df-nfc mpgbir ) ACEBFCGAHBABCIDJ $.
    $}

    ${
      nfcii.1 $e |- ( y e. A -> A. x y e. A ) $.
      $( Deduce that a class ` A ` does not have ` x ` free in it.
         (Contributed by Mario Carneiro, 11-Aug-2016.) $)
      nfcii $p |- F/_ x A $=
        ( cv wcel nfi nfci ) ABCBECFADGH $.
    $}

    $( Consequence of the not-free predicate.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfcr $p |- ( F/_ x A -> F/ x y e. A ) $=
      ( wnfc cv wcel wnf wal df-nfc sp sylbi ) ACDBECFAGZBHLABCILBJK $.
  $}

  ${
    $d x y z $.  $d z A $.
    nfcri.1 $e |- F/_ x A $.
    $( Consequence of the not-free predicate.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfcrii $p |- ( y e. A -> A. x y e. A ) $=
      ( vz cv wcel wnfc wnf nfcr ax-mp nfri hblem ) AEBCEFCGZAACHNAIDAECJKLM $.

    $( Consequence of the not-free predicate.  (Note that unlike ~ nfcr , this
       does not require ` y ` and ` A ` to be disjoint.)  (Contributed by Mario
       Carneiro, 11-Aug-2016.) $)
    nfcri $p |- F/ x y e. A $=
      ( cv wcel nfcrii nfi ) BECFAABCDGH $.
  $}

  ${
    $d x y $.  $d y A $.
    nfcd.1 $e |- F/ y ph $.
    nfcd.2 $e |- ( ph -> F/ x y e. A ) $.
    $( Deduce that a class ` A ` does not have ` x ` free in it.  (Contributed
       by Mario Carneiro, 11-Aug-2016.) $)
    nfcd $p |- ( ph -> F/_ x A ) $=
      ( cv wcel wnf wal wnfc alrimi df-nfc sylibr ) ACGDHBIZCJBDKAOCEFLBCDMN $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    nfceqi.1 $e |- A = B $.
    $( Equality theorem for class not-free.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfceqi $p |- ( F/_ x A <-> F/_ x B ) $=
      ( vy cv wcel wnf wal wnfc eleq2i nfbii albii df-nfc 3bitr4i ) EFZBGZAHZEI
      PCGZAHZEIABJACJRTEQSABCPDKLMAEBNAECNO $.

    ${
      nfcxfr.2 $e |- F/_ x B $.
      $( A utility lemma to transfer a bound-variable hypothesis builder into a
         definition.  (Contributed by Mario Carneiro, 11-Aug-2016.) $)
      nfcxfr $p |- F/_ x A $=
        ( wnfc nfceqi mpbir ) ABFACFEABCDGH $.
    $}

    ${
      nfcxfrd.2 $e |- ( ph -> F/_ x B ) $.
      $( A utility lemma to transfer a bound-variable hypothesis builder into a
         definition.  (Contributed by Mario Carneiro, 11-Aug-2016.) $)
      nfcxfrd $p |- ( ph -> F/_ x A ) $=
        ( wnfc nfceqi sylibr ) ABDGBCGFBCDEHI $.
    $}
  $}

  ${
    $d x y $.  $d A y $.  $d B y $.  $d ph y $.
    nfceqdf.1 $e |- F/ x ph $.
    nfceqdf.2 $e |- ( ph -> A = B ) $.
    $( An equality theorem for effectively not free.  (Contributed by Mario
       Carneiro, 14-Oct-2016.) $)
    nfceqdf $p |- ( ph -> ( F/_ x A <-> F/_ x B ) ) $=
      ( vy cv wcel wnf wal wnfc eleq2d nfbidf albidv df-nfc 3bitr4g ) AGHZCIZBJ
      ZGKRDIZBJZGKBCLBDLATUBGASUABEACDRFMNOBGCPBGDPQ $.
  $}

  ${
    $d x y A $.
    $( If ` x ` is disjoint from ` A ` , then ` x ` is not free in ` A ` .
       (Contributed by Mario Carneiro, 11-Aug-2016.) $)
    nfcv $p |- F/_ x A $=
      ( vy cv wcel nfv nfci ) ACBCDBEAFG $.

    $( If ` x ` is disjoint from ` A ` , then ` x ` is not free in ` A ` .
       (Contributed by Mario Carneiro, 7-Oct-2016.) $)
    nfcvd $p |- ( ph -> F/_ x A ) $=
      ( wnfc nfcv a1i ) BCDABCEF $.
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 11-Aug-2016.) $)
    nfab1 $p |- F/_ x { x | ph } $=
      ( vy cab nfsab1 nfci ) BCABDABCEF $.

    $( ` x ` is bound in ` F/_ x A ` .  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfnfc1 $p |- F/ x F/_ x A $=
      ( vy wnfc cv wcel wnf wal df-nfc nfnf1 nfal nfxfr ) ABDCEBFZAGZCHAACBINAC
      MAJKL $.
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    nfab.1 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 11-Aug-2016.) $)
    nfab $p |- F/_ x { y | ph } $=
      ( vz cab nfsab nfci ) BEACFABCEDGH $.
  $}

  ${
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 14-Oct-2016.) $)
    nfaba1 $p |- F/_ x { y | A. x ph } $=
      ( wal nfa1 nfab ) ABDBCABEF $.
  $}

  ${
    $d x z $.  $d y z $.  $d z A $.  $d z B $.
    nfnfc.1 $e |- F/_ x A $.
    $( Hypothesis builder for ` F/_ y A ` .  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfnfc $p |- F/ x F/_ y A $=
      ( vz wnfc cv wcel wnf wal df-nfc nfcri nfnf nfal nfxfr ) BCFEGCHZBIZEJABE
      CKQAEPABAECDLMNO $.

    nfeq.2 $e |- F/_ x B $.
    $( Hypothesis builder for equality.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfeq $p |- F/ x A = B $=
      ( vz wceq cv wcel wb wal dfcleq nfcri nfbi nfal nfxfr ) BCGFHZBIZQCIZJZFK
      AFBCLTAFRSAAFBDMAFCEMNOP $.

    $( Hypothesis builder for elementhood.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfel $p |- F/ x A e. B $=
      ( vz wcel cv wceq wa wex df-clel nfcv nfeq nfcri nfan nfex nfxfr ) BCGFHZ
      BIZSCGZJZFKAFBCLUBAFTUAAASBASMDNAFCEOPQR $.
  $}

  ${
    $d x B $.
    nfeq1.1 $e |- F/_ x A $.
    $( Hypothesis builder for equality, special case.  (Contributed by Mario
       Carneiro, 10-Oct-2016.) $)
    nfeq1 $p |- F/ x A = B $=
      ( nfcv nfeq ) ABCDACEF $.

    $( Hypothesis builder for elementhood, special case.  (Contributed by Mario
       Carneiro, 10-Oct-2016.) $)
    nfel1 $p |- F/ x A e. B $=
      ( nfcv nfel ) ABCDACEF $.
  $}

  ${
    $d x A $.
    nfeq2.1 $e |- F/_ x B $.
    $( Hypothesis builder for equality, special case.  (Contributed by Mario
       Carneiro, 10-Oct-2016.) $)
    nfeq2 $p |- F/ x A = B $=
      ( nfcv nfeq ) ABCABEDF $.

    $( Hypothesis builder for elementhood, special case.  (Contributed by Mario
       Carneiro, 10-Oct-2016.) $)
    nfel2 $p |- F/ x A e. B $=
      ( nfcv nfel ) ABCABEDF $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    nfeqd.1 $e |- ( ph -> F/_ x A ) $.
    $( Consequence of the not-free predicate.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfcrd $p |- ( ph -> F/ x y e. A ) $=
      ( wnfc cv wcel wnf nfcr syl ) ABDFCGDHBIEBCDJK $.

    $d y ph $.
    nfeqd.2 $e |- ( ph -> F/_ x B ) $.
    $( Hypothesis builder for equality.  (Contributed by Mario Carneiro,
       7-Oct-2016.) $)
    nfeqd $p |- ( ph -> F/ x A = B ) $=
      ( vy wceq cv wcel wb wal dfcleq nfv nfcrd nfbid nfald nfxfrd ) CDHGIZCJZS
      DJZKZGLABGCDMAUBBGAGNATUABABGCEOABGDFOPQR $.

    $( Hypothesis builder for elementhood.  (Contributed by Mario Carneiro,
       7-Oct-2016.) $)
    nfeld $p |- ( ph -> F/ x A e. B ) $=
      ( vy wcel cv wceq wa wex df-clel nfv nfcvd nfeqd nfcrd nfand nfexd nfxfrd
      ) CDHGIZCJZUADHZKZGLABGCDMAUDBGAGNAUBUCBABUACABUAOEPABGDFQRST $.
  $}

  ${
    $d w x $.  $d w y $.  $d w z $.  $d w A $.  $d w B $.
    drnfc1.1 $e |- ( A. x x = y -> A = B ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       (Contributed by Mario Carneiro, 8-Oct-2016.) $)
    drnfc1 $p |- ( A. x x = y -> ( F/_ x A <-> F/_ y B ) ) $=
      ( vw cv wceq wal wcel wnf wnfc eleq2d drnf1 dral2 df-nfc 3bitr4g ) AGBGHA
      IZFGZCJZAKZFISDJZBKZFIACLBDLUAUCABFTUBABRCDSEMNOAFCPBFDPQ $.

    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       (Contributed by Mario Carneiro, 8-Oct-2016.) $)
    drnfc2 $p |- ( A. x x = y -> ( F/_ z A <-> F/_ z B ) ) $=
      ( vw cv wceq wal wcel wnf wnfc eleq2d drnf2 dral2 df-nfc 3bitr4g ) AHBHIA
      JZGHZDKZCLZGJTEKZCLZGJCDMCEMUBUDABGUAUCABCSDETFNOPCGDQCGEQR $.
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.
    nfabd2.1 $e |- F/ y ph $.
    nfabd2.2 $e |- ( ( ph /\ -. A. x x = y ) -> F/ x ps ) $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 8-Oct-2016.) $)
    nfabd2 $p |- ( ph -> F/_ x { y | ps } ) $=
      ( vz cv wceq wal cab wnfc wn wa nfv wcel wsb df-clab nfnae nfan nfxfrd ex
      nfsbd nfcd nfab1 eqidd drnfc1 mpbiri pm2.61d2 ) ACHDHICJZCBDKZLZAUJMZULAU
      MNZCGUKUNGOGHUKPBDGQUNCBGDRUNBDGCAUMDECDDSTFUCUAUDUBUJULDUKLBDUECDUKUKUJU
      KUFUGUHUI $.
  $}

  ${
    nfabd.1 $e |- F/ y ph $.
    nfabd.2 $e |- ( ph -> F/ x ps ) $.
    $( Bound-variable hypothesis builder for a class abstraction.  (Contributed
       by Mario Carneiro, 8-Oct-2016.) $)
    nfabd $p |- ( ph -> F/_ x { y | ps } ) $=
      ( wnf cv wceq wal wn adantr nfabd2 ) ABCDEABCGCHDHICJKFLM $.
  $}

  ${
    $d w x $.  $d w y $.  $d w z $.  $d w A $.  $d w B $.  $d w ph $.
    dvelimdc.1 $e |- F/ x ph $.
    dvelimdc.2 $e |- F/ z ph $.
    dvelimdc.3 $e |- ( ph -> F/_ x A ) $.
    dvelimdc.4 $e |- ( ph -> F/_ z B ) $.
    dvelimdc.5 $e |- ( ph -> ( z = y -> A = B ) ) $.
    $( Deduction form of ~ dvelimc .  (Contributed by Mario Carneiro,
       8-Oct-2016.) $)
    dvelimdc $p |- ( ph -> ( -. A. x x = y -> F/_ x B ) ) $=
      ( vw cv wceq wal wn wnfc wa wcel nfcrd nfv wnf wb eleq2 syl6 dvelimdf imp
      nfcd ex ) ABMCMZNBOPZBFQAUKRZBLFULLUAAUKLMZFSZBUBAUMESZUNBCDGHABLEITADLFJ
      TADMUJNEFNUOUNUCKEFUMUDUEUFUGUHUI $.
  $}

  ${
    dvelimc.1 $e |- F/_ x A $.
    dvelimc.2 $e |- F/_ z B $.
    dvelimc.3 $e |- ( z = y -> A = B ) $.
    $( Version of ~ dvelim for classes.  (Contributed by Mario Carneiro,
       8-Oct-2016.) $)
    dvelimc $p |- ( -. A. x x = y -> F/_ x B ) $=
      ( cv wceq wal wn wnfc wi wtru nftru a1i dvelimdc trud ) AIBIZJAKLAEMNOABC
      DEAPCPADMOFQCEMOGQCITJDEJNOHQRS $.
  $}

  ${
    $d x z $.  $d y z $.
    $( If ` x ` and ` y ` are distinct, then ` x ` is not free in ` y ` .
       (Contributed by Mario Carneiro, 8-Oct-2016.) $)
    nfcvf $p |- ( -. A. x x = y -> F/_ x y ) $=
      ( vz cv nfcv wceq id dvelimc ) ABCCDZBDZAIECJEIJFGH $.

    $( If ` x ` and ` y ` are distinct, then ` y ` is not free in ` x ` .
       (Contributed by Mario Carneiro, 5-Dec-2016.) $)
    nfcvf2 $p |- ( -. A. x x = y -> F/_ y x ) $=
      ( cv wnfc nfcvf naecoms ) BACDBABAEF $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    cleqf.1 $e |- F/_ x A $.
    cleqf.2 $e |- F/_ x B $.
    $( Establish equality between classes, using bound-variable hypotheses
       instead of distinct variable conditions.  (Contributed by NM,
       5-Aug-1993.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
    cleqf $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( vy wceq cv wcel wb wal dfcleq nfv nfcri nfbi eleq1 bibi12d cbval bitr4i
      ) BCGFHZBIZTCIZJZFKAHZBIZUDCIZJZAKFBCLUGUCAFUGFMUAUBAAFBDNAFCENOUDTGUEUAU
      FUBUDTBPUDTCPQRS $.
  $}

  ${
    $d y A $.  $d x y $.
    abid2f.1 $e |- F/_ x A $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35.
       (Contributed by NM, 5-Sep-2011.)  (Revised by Mario Carneiro,
       7-Oct-2016.) $)
    abid2f $p |- { x | x e. A } = A $=
      ( cv wcel cab wceq wb wal nfab1 cleqf abid bibi2i albii bitri biid mpgbir
      eqcomi ) BADZBEZAFZBUAGZTTHZAUBTSUAEZHZAIUCAIABUACTAJKUEUCAUDTTTALMNOTPQR
      $.
  $}

  ${
    $d v A w $.  $d x z v u $.  $d y z v u $.  $d v ph $.
    sbabel.1 $e |- F/_ x A $.
    $( Theorem to move a substitution in and out of a class abstraction.
       (Contributed by NM, 27-Sep-2003.)  (Revised by Mario Carneiro,
       7-Oct-2016.) $)
    sbabel $p |- ( [ y / x ] { z | ph } e. A <-> { z | [ y / x ] ph } e. A ) $=
      ( vv cv cab wceq wcel wa wex wsb wb wal sbf abeq2 sbbii 3bitr4i sbex sban
      nfv sbrbis sbalv nfcri anbi12i bitri exbii df-clel ) GHZADIZJZUKEKZLZGMZB
      CNZUKABCNZDIZJZUNLZGMZULEKZBCNUSEKUQUOBCNZGMVBUOGBCUAVDVAGVDUMBCNZUNBCNZL
      VAUMUNBCUBVEUTVFUNDHUKKZAOZDPZBCNVGUROZDPVEUTVHVJBCDVGVGABCVGBCVGBUCQUDUE
      UMVIBCADUKRSURDUKRTUNBCBGEFUFQUGUHUIUHVCUPBCGULEUJSGUSEUJT $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Negated equality and membership
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new connectives. $)
  $c =/= $. $( Not equal to (equal sign with slash through it). $)
  $c e/ $. $( Not an element of (epsilon with slash through it). $)

  $( Extend wff notation to include inequality. $)
  wne $a wff A =/= B $.

  $( Extend wff notation to include negated membership. $)
  wnel $a wff A e/ B $.

  $( Define inequality.  (Contributed by NM, 5-Aug-1993.) $)
  df-ne $a |- ( A =/= B <-> -. A = B ) $.

  $( Define negated membership.  (Contributed by NM, 7-Aug-1994.) $)
  df-nel $a |- ( A e/ B <-> -. A e. B ) $.

  $( Negation of inequality.  (Contributed by NM, 9-Jun-2006.) $)
  nne $p |- ( -. A =/= B <-> A = B ) $=
    ( wceq wne wn df-ne con2bii bicomi ) ABCZABDZEJIABFGH $.

  $( No class is unequal to itself.  (Contributed by Stefan O'Rear,
     1-Jan-2015.) $)
  neirr $p |- -. A =/= A $=
    ( wne wn wceq eqid nne mpbir ) AABCAADAEAAFG $.

  $( Excluded middle with equality and inequality.  (Contributed by NM,
     3-Feb-2012.) $)
  exmidne $p |- ( A = B \/ A =/= B ) $=
    ( wceq wne wo wn exmid df-ne orbi2i mpbir ) ABCZABDZEKKFZEKGLMKABHIJ $.

  $( Law of noncontradiction with equality and inequality.  (Contributed by NM,
     3-Feb-2012.) $)
  nonconne $p |- -. ( A = B /\ A =/= B ) $=
    ( wceq wne wa wn pm3.24 df-ne anbi2i mtbir ) ABCZABDZEKKFZEKGLMKABHIJ $.

  $( Equality theorem for inequality.  (Contributed by NM, 19-Nov-1994.) $)
  neeq1 $p |- ( A = B -> ( A =/= C <-> B =/= C ) ) $=
    ( wceq wn wne eqeq1 notbid df-ne 3bitr4g ) ABDZACDZEBCDZEACFBCFKLMABCGHACIB
    CIJ $.

  $( Equality theorem for inequality.  (Contributed by NM, 19-Nov-1994.) $)
  neeq2 $p |- ( A = B -> ( C =/= A <-> C =/= B ) ) $=
    ( wceq wn wne eqeq2 notbid df-ne 3bitr4g ) ABDZCADZECBDZECAFCBFKLMABCGHCAIC
    BIJ $.

  ${
    neeq1i.1 $e |- A = B $.
    $( Inference for inequality.  (Contributed by NM, 29-Apr-2005.) $)
    neeq1i $p |- ( A =/= C <-> B =/= C ) $=
      ( wceq wne wb neeq1 ax-mp ) ABEACFBCFGDABCHI $.

    $( Inference for inequality.  (Contributed by NM, 29-Apr-2005.) $)
    neeq2i $p |- ( C =/= A <-> C =/= B ) $=
      ( wceq wne wb neeq2 ax-mp ) ABECAFCBFGDABCHI $.

    neeq12i.2 $e |- C = D $.
    $( Inference for inequality.  (Contributed by NM, 24-Jul-2012.) $)
    neeq12i $p |- ( A =/= C <-> B =/= D ) $=
      ( wne neeq2i neeq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
  $}

  ${
    neeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction for inequality.  (Contributed by NM, 25-Oct-1999.) $)
    neeq1d $p |- ( ph -> ( A =/= C <-> B =/= C ) ) $=
      ( wceq wne wb neeq1 syl ) ABCFBDGCDGHEBCDIJ $.

    $( Deduction for inequality.  (Contributed by NM, 25-Oct-1999.) $)
    neeq2d $p |- ( ph -> ( C =/= A <-> C =/= B ) ) $=
      ( wceq wne wb neeq2 syl ) ABCFDBGDCGHEBCDIJ $.

    neeq12d.2 $e |- ( ph -> C = D ) $.
    $( Deduction for inequality.  (Contributed by NM, 24-Jul-2012.) $)
    neeq12d $p |- ( ph -> ( A =/= C <-> B =/= D ) ) $=
      ( wne neeq1d neeq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
  $}

  ${
    neneqd.1 $e |- ( ph -> A =/= B ) $.
    $( Deduction eliminating inequality definition.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    neneqd $p |- ( ph -> -. A = B ) $=
      ( wne wceq wn df-ne sylib ) ABCEBCFGDBCHI $.
  $}

  ${
    eqnetr.1 $e |- A = B $.
    eqnetr.2 $e |- B =/= C $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    eqnetri $p |- A =/= C $=
      ( wne neeq1i mpbir ) ACFBCFEABCDGH $.
  $}

  ${
    eqnetrd.1 $e |- ( ph -> A = B ) $.
    eqnetrd.2 $e |- ( ph -> B =/= C ) $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    eqnetrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq1d mpbird ) ABDGCDGFABCDEHI $.
  $}

  ${
    eqnetrr.1 $e |- A = B $.
    eqnetrr.2 $e |- A =/= C $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    eqnetrri $p |- B =/= C $=
      ( eqcomi eqnetri ) BACABDFEG $.
  $}

  ${
    eqnetrrd.1 $e |- ( ph -> A = B ) $.
    eqnetrrd.2 $e |- ( ph -> A =/= C ) $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    eqnetrrd $p |- ( ph -> B =/= C ) $=
      ( eqcomd eqnetrd ) ACBDABCEGFH $.
  $}

  ${
    neeqtr.1 $e |- A =/= B $.
    neeqtr.2 $e |- B = C $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    neeqtri $p |- A =/= C $=
      ( wne neeq2i mpbi ) ABFACFDBCAEGH $.
  $}

  ${
    neeqtrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    neeqtrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq2d mpbid ) ABCGBDGEACDBFHI $.
  $}

  ${
    neeqtrr.1 $e |- A =/= B $.
    neeqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    neeqtrri $p |- A =/= C $=
      ( eqcomi neeqtri ) ABCDCBEFG $.
  $}

  ${
    neeqtrrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into an inequality.  (Contributed by NM,
       4-Jul-2012.) $)
    neeqtrrd $p |- ( ph -> A =/= C ) $=
      ( eqcomd neeqtrd ) ABCDEADCFGH $.
  $}

  ${
    syl5eqner.1 $e |- B = A $.
    syl5eqner.2 $e |- ( ph -> B =/= C ) $.
    $( B chained equality inference for inequality.  (Contributed by NM,
       6-Jun-2012.) $)
    syl5eqner $p |- ( ph -> A =/= C ) $=
      ( wne neeq1i sylib ) ACDGBDGFCBDEHI $.
  $}

  ${
    3netr3d.1 $e |- ( ph -> A =/= B ) $.
    3netr3d.2 $e |- ( ph -> A = C ) $.
    3netr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of an inequality.  (Contributed
       by NM, 24-Jul-2012.) $)
    3netr3d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbid ) ABCIDEIFABDCEGHJK $.
  $}

  ${
    3netr4d.1 $e |- ( ph -> A =/= B ) $.
    3netr4d.2 $e |- ( ph -> C = A ) $.
    3netr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of an inequality.  (Contributed
       by NM, 24-Jul-2012.) $)
    3netr4d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbird ) ADEIBCIFADBECGHJK $.
  $}

  ${
    3netr3g.1 $e |- ( ph -> A =/= B ) $.
    3netr3g.2 $e |- A = C $.
    3netr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of an inequality.  (Contributed
       by NM, 24-Jul-2012.) $)
    3netr3g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylib ) ABCIDEIFBDCEGHJK $.
  $}

  ${
    3netr4g.1 $e |- ( ph -> A =/= B ) $.
    3netr4g.2 $e |- C = A $.
    3netr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of an inequality.  (Contributed
       by NM, 14-Jun-2012.) $)
    3netr4g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylibr ) ABCIDEIFDBECGHJK $.
  $}

  ${
    necon3abii.1 $e |- ( A = B <-> ph ) $.
    $( Deduction from equality to inequality.  (Contributed by NM,
       9-Nov-2007.) $)
    necon3abii $p |- ( A =/= B <-> -. ph ) $=
      ( wne wceq df-ne xchbinx ) BCEBCFABCGDH $.
  $}

  ${
    necon3bbii.1 $e |- ( ph <-> A = B ) $.
    $( Deduction from equality to inequality.  (Contributed by NM,
       13-Apr-2007.) $)
    necon3bbii $p |- ( -. ph <-> A =/= B ) $=
      ( wne wn wceq bicomi necon3abii ) BCEAFABCABCGDHIH $.
  $}

  ${
    necon3bii.1 $e |- ( A = B <-> C = D ) $.
    $( Inference from equality to inequality.  (Contributed by NM,
       23-Feb-2005.) $)
    necon3bii $p |- ( A =/= B <-> C =/= D ) $=
      ( wne wceq wn necon3abii df-ne bitr4i ) ABFCDGZHCDFLABEICDJK $.
  $}

  ${
    necon3abid.1 $e |- ( ph -> ( A = B <-> ps ) ) $.
    $( Deduction from equality to inequality.  (Contributed by NM,
       21-Mar-2007.) $)
    necon3abid $p |- ( ph -> ( A =/= B <-> -. ps ) ) $=
      ( wne wceq wn df-ne notbid syl5bb ) CDFCDGZHABHCDIALBEJK $.
  $}

  ${
    necon3bbid.1 $e |- ( ph -> ( ps <-> A = B ) ) $.
    $( Deduction from equality to inequality.  (Contributed by NM,
       2-Jun-2007.) $)
    necon3bbid $p |- ( ph -> ( -. ps <-> A =/= B ) ) $=
      ( wne wn wceq bicomd necon3abid ) ACDFBGABCDABCDHEIJI $.
  $}

  ${
    necon3bid.1 $e |- ( ph -> ( A = B <-> C = D ) ) $.
    $( Deduction from equality to inequality.  (Contributed by NM,
       23-Feb-2005.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon3bid $p |- ( ph -> ( A =/= B <-> C =/= D ) ) $=
      ( wne wceq wn df-ne necon3bbid syl5bb ) BCGBCHZIADEGBCJAMDEFKL $.
  $}

  ${
    necon3ad.1 $e |- ( ph -> ( ps -> A = B ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       2-Apr-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon3ad $p |- ( ph -> ( A =/= B -> -. ps ) ) $=
      ( wne wceq wn nne syl6ibr con2d ) ABCDFZABCDGLHECDIJK $.
  $}

  ${
    necon3bd.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       2-Apr-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon3bd $p |- ( ph -> ( -. ps -> A =/= B ) ) $=
      ( wne wn wceq nne syl5bi con1d ) ACDFZBLGCDHABCDIEJK $.
  $}

  ${
    necon3d.1 $e |- ( ph -> ( A = B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       10-Jun-2006.) $)
    necon3d $p |- ( ph -> ( C =/= D -> A =/= B ) ) $=
      ( wne wceq wn necon3ad df-ne syl6ibr ) ADEGBCHZIBCGAMDEFJBCKL $.
  $}

  ${
    necon3i.1 $e |- ( A = B -> C = D ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       9-Aug-2006.) $)
    necon3i $p |- ( C =/= D -> A =/= B ) $=
      ( wceq wi wne id necon3d ax-mp ) ABFCDFGZCDHABHGELABCDLIJK $.
  $}

  ${
    necon3ai.1 $e |- ( ph -> A = B ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       23-May-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon3ai $p |- ( A =/= B -> -. ph ) $=
      ( wne wceq wn nne sylibr con2i ) ABCEZABCFKGDBCHIJ $.
  $}

  ${
    necon3bi.1 $e |- ( A = B -> ph ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       1-Jun-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon3bi $p |- ( -. ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con1i ) BCEZAKFBCGABCHDIJ $.
  $}

  ${
    necon1ai.1 $e |- ( -. ph -> A = B ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       12-Feb-2007.) $)
    necon1ai $p |- ( A =/= B -> ph ) $=
      ( wne wceq wn df-ne con1i sylbi ) BCEBCFZGABCHAKDIJ $.
  $}

  ${
    necon1bi.1 $e |- ( A =/= B -> ph ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       18-Mar-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon1bi $p |- ( -. ph -> A = B ) $=
      ( wn wne wceq con3i nne sylib ) AEBCFZEBCGKADHBCIJ $.
  $}

  ${
    necon1i.1 $e |- ( A =/= B -> C = D ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       18-Mar-2007.) $)
    necon1i $p |- ( C =/= D -> A = B ) $=
      ( wceq wn wne df-ne sylbir necon1ai ) ABFZCDLGABHCDFABIEJK $.
  $}

  ${
    necon2ai.1 $e |- ( A = B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       16-Jan-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon2ai $p |- ( ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con4i ) BCEZAKFBCGAFBCHDIJ $.
  $}

  ${
    necon2bi.1 $e |- ( ph -> A =/= B ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       1-Apr-2007.) $)
    necon2bi $p |- ( A = B -> -. ph ) $=
      ( wceq neneqd con2i ) ABCEABCDFG $.
  $}

  ${
    necon2i.1 $e |- ( A = B -> C =/= D ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       18-Mar-2007.) $)
    necon2i $p |- ( C = D -> A =/= B ) $=
      ( wceq neneqd necon2ai ) CDFABABFCDEGH $.
  $}

  ${
    necon2ad.1 $e |- ( ph -> ( A = B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       19-Apr-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon2ad $p |- ( ph -> ( ps -> A =/= B ) ) $=
      ( wne wn wceq nne syl5bi con4d ) ACDFZBLGCDHABGCDIEJK $.
  $}

  ${
    necon2bd.1 $e |- ( ph -> ( ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       13-Apr-2007.) $)
    necon2bd $p |- ( ph -> ( A = B -> -. ps ) ) $=
      ( wceq wne wn df-ne syl6ib con2d ) ABCDFZABCDGLHECDIJK $.
  $}

  ${
    necon2d.1 $e |- ( ph -> ( A = B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       28-Dec-2008.) $)
    necon2d $p |- ( ph -> ( C = D -> A =/= B ) ) $=
      ( wceq wne wn df-ne syl6ib necon2ad ) ADEGZBCABCGDEHMIFDEJKL $.
  $}

  ${
    necon1abii.1 $e |- ( -. ph <-> A = B ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       17-Mar-2007.) $)
    necon1abii $p |- ( A =/= B <-> ph ) $=
      ( wne wceq wn df-ne con1bii bitri ) BCEBCFZGABCHAKDIJ $.
  $}

  ${
    necon1bbii.1 $e |- ( A =/= B <-> ph ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       17-Mar-2007.) $)
    necon1bbii $p |- ( -. ph <-> A = B ) $=
      ( wceq wn wne df-ne bitr3i con1bii ) BCEZAKFBCGABCHDIJ $.
  $}

  ${
    necon1abid.1 $e |- ( ph -> ( -. ps <-> A = B ) ) $.
    $( Contrapositive deduction for inequality.  (Contributed by NM,
       21-Aug-2007.) $)
    necon1abid $p |- ( ph -> ( A =/= B <-> ps ) ) $=
      ( wne wceq wn df-ne con1bid syl5bb ) CDFCDGZHABCDIABLEJK $.
  $}

  ${
    necon1bbid.1 $e |- ( ph -> ( A =/= B <-> ps ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       31-Jan-2008.) $)
    necon1bbid $p |- ( ph -> ( -. ps <-> A = B ) ) $=
      ( wceq wn wne df-ne syl5bbr con1bid ) ACDFZBLGCDHABCDIEJK $.
  $}

  ${
    necon2abii.1 $e |- ( A = B <-> -. ph ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       2-Mar-2007.) $)
    necon2abii $p |- ( ph <-> A =/= B ) $=
      ( wne wceq wn bicomi necon1abii ) BCEAABCBCFAGDHIH $.
  $}

  ${
    necon2bbii.1 $e |- ( ph <-> A =/= B ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       13-Apr-2007.) $)
    necon2bbii $p |- ( A = B <-> -. ph ) $=
      ( wn wceq wne bicomi necon1bbii ) AEBCFABCABCGDHIH $.
  $}

  ${
    necon2abid.1 $e |- ( ph -> ( A = B <-> -. ps ) ) $.
    $( Contrapositive deduction for inequality.  (Contributed by NM,
       18-Jul-2007.) $)
    necon2abid $p |- ( ph -> ( ps <-> A =/= B ) ) $=
      ( wceq wn wne con2bid df-ne syl6bbr ) ABCDFZGCDHALBEICDJK $.
  $}

  ${
    necon2bbid.1 $e |- ( ph -> ( ps <-> A =/= B ) ) $.
    $( Contrapositive deduction for inequality.  (Contributed by NM,
       13-Apr-2007.) $)
    necon2bbid $p |- ( ph -> ( A = B <-> -. ps ) ) $=
      ( wceq wne wn df-ne syl6bb con2bid ) ABCDFZABCDGLHECDIJK $.
  $}

  ${
    necon4ai.1 $e |- ( A =/= B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       16-Jan-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon4ai $p |- ( ph -> A = B ) $=
      ( wne wn wceq con2i nne sylib ) ABCEZFBCGKADHBCIJ $.
  $}

  ${
    necon4i.1 $e |- ( A =/= B -> C =/= D ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       17-Mar-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon4i $p |- ( C = D -> A = B ) $=
      ( wceq wne wn necon2bi nne sylib ) CDFABGZHABFLCDEIABJK $.
  $}

  ${
    necon4ad.1 $e |- ( ph -> ( A =/= B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       2-Apr-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon4ad $p |- ( ph -> ( ps -> A = B ) ) $=
      ( wne wn wceq con2d nne syl6ib ) ABCDFZGCDHALBEICDJK $.
  $}

  ${
    necon4bd.1 $e |- ( ph -> ( -. ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       1-Jun-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon4bd $p |- ( ph -> ( A = B -> ps ) ) $=
      ( wceq wne wn nne con1d syl5bir ) CDFCDGZHABCDIABLEJK $.
  $}

  ${
    necon4d.1 $e |- ( ph -> ( A =/= B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality.  (Contributed by NM,
       2-Apr-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon4d $p |- ( ph -> ( C = D -> A = B ) ) $=
      ( wceq wne wn necon2bd nne syl6ib ) ADEGBCHZIBCGAMDEFJBCKL $.
  $}

  ${
    necon4abid.1 $e |- ( ph -> ( A =/= B <-> -. ps ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       11-Jan-2008.) $)
    necon4abid $p |- ( ph -> ( A = B <-> ps ) ) $=
      ( wceq wn wne df-ne syl5bbr con4bid ) ACDFZBLGCDHABGCDIEJK $.
  $}

  ${
    necon4bbid.1 $e |- ( ph -> ( -. ps <-> A =/= B ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       9-May-2012.) $)
    necon4bbid $p |- ( ph -> ( ps <-> A = B ) ) $=
      ( wceq wn wne bicomd necon4abid ) ACDFBABCDABGCDHEIJI $.
  $}

  ${
    necon4bid.1 $e |- ( ph -> ( A =/= B <-> C =/= D ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       29-Jun-2007.) $)
    necon4bid $p |- ( ph -> ( A = B <-> C = D ) ) $=
      ( wceq wne wn necon2bbid nne syl6rbb ) ADEGBCHZIBCGAMDEFJBCKL $.
  $}

  ${
    necon1ad.1 $e |- ( ph -> ( -. ps -> A = B ) ) $.
    $( Contrapositive deduction for inequality.  (Contributed by NM,
       2-Apr-2007.) $)
    necon1ad $p |- ( ph -> ( A =/= B -> ps ) ) $=
      ( wne wceq wn df-ne con1d syl5bi ) CDFCDGZHABCDIABLEJK $.
  $}

  ${
    necon1bd.1 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Contrapositive deduction for inequality.  (Contributed by NM,
       21-Mar-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon1bd $p |- ( ph -> ( -. ps -> A = B ) ) $=
      ( wn wne wceq con3d nne syl6ib ) ABFCDGZFCDHALBEICDJK $.
  $}

  ${
    necon1d.1 $e |- ( ph -> ( A =/= B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality.  (Contributed by NM,
       28-Dec-2008.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    necon1d $p |- ( ph -> ( C =/= D -> A = B ) ) $=
      ( wne wceq wn nne syl6ibr necon4ad ) ADEGZBCABCGDEHMIFDEJKL $.
  $}

  ${
    neneqad.1 $e |- ( ph -> -. A = B ) $.
    $( If it is not the case that two classes are equal, they are unequal.
       Converse of ~ neneqd .  One-way deduction form of ~ df-ne .
       (Contributed by David Moews, 28-Feb-2017.) $)
    neneqad $p |- ( ph -> A =/= B ) $=
      ( wceq con2i necon2ai ) ABCABCEDFG $.
  $}

  $( Contraposition law for inequality.  (Contributed by NM, 28-Dec-2008.) $)
  nebi $p |- ( ( A = B <-> C = D ) <-> ( A =/= B <-> C =/= D ) ) $=
    ( wceq wb wne id necon3bid necon4bid impbii ) ABECDEFZABGCDGFZLABCDLHIMABCD
    MHJK $.

  $( Theorem *13.18 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.18 $p |- ( ( A = B /\ A =/= C ) -> B =/= C ) $=
    ( wceq wne eqeq1 biimprd necon3d imp ) ABDZACEBCEJBCACJACDBCDABCFGHI $.

  $( Theorem *13.181 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.181 $p |- ( ( A = B /\ B =/= C ) -> A =/= C ) $=
    ( wceq wne eqcom pm13.18 sylanb ) ABDBADBCEACEABFBACGH $.

  ${
    pm2.21ddne.1 $e |- ( ph -> A = B ) $.
    pm2.21ddne.2 $e |- ( ph -> A =/= B ) $.
    $( A contradiction implies anything.  Equality/inequality deduction form.
       (Contributed by David Moews, 28-Feb-2017.) $)
    pm2.21ddne $p |- ( ph -> ps ) $=
      ( wceq neneqd pm2.21dd ) ACDGBEACDFHI $.
  $}

  ${
    pm2.61ne.1 $e |- ( A = B -> ( ps <-> ch ) ) $.
    pm2.61ne.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    pm2.61ne.3 $e |- ( ph -> ch ) $.
    $( Deduction eliminating an inequality in an antecedent.  (Contributed by
       NM, 24-May-2006.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ne $p |- ( ph -> ps ) $=
      ( wne wi expcom wn wceq nne syl5ibr sylbi pm2.61i ) DEIZABJZARBGKRLDEMZSD
      ENABTCHFOPQ $.
  $}

  ${
    pm2.61ine.1 $e |- ( A = B -> ph ) $.
    pm2.61ine.2 $e |- ( A =/= B -> ph ) $.
    $( Inference eliminating an inequality in an antecedent.  (Contributed by
       NM, 16-Jan-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ine $p |- ph $=
      ( wne wn wceq nne sylbi pm2.61i ) BCFZAELGBCHABCIDJK $.
  $}

  ${
    pm2.61dne.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    pm2.61dne.2 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Deduction eliminating an inequality in an antecedent.  (Contributed by
       NM, 1-Jun-2007.)  (Proof shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61dne $p |- ( ph -> ps ) $=
      ( wne wn wceq nne syl5bi pm2.61d ) ACDGZBFMHCDIABCDJEKL $.
  $}

  ${
    pm2.61dane.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61dane.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    $( Deduction eliminating an inequality in an antecedent.  (Contributed by
       NM, 30-Nov-2011.) $)
    pm2.61dane $p |- ( ph -> ps ) $=
      ( wceq ex wne pm2.61dne ) ABCDACDGBEHACDIBFHJ $.
  $}

  ${
    pm2.61da2ne.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61da2ne.2 $e |- ( ( ph /\ C = D ) -> ps ) $.
    pm2.61da2ne.3 $e |- ( ( ph /\ ( A =/= B /\ C =/= D ) ) -> ps ) $.
    $( Deduction eliminating two inequalities in an antecedent.  (Contributed
       by NM, 29-May-2013.) $)
    pm2.61da2ne $p |- ( ph -> ps ) $=
      ( wne wa wceq adantlr anassrs pm2.61dane ) ABCDGACDJZKBEFAEFLBPHMAPEFJBIN
      OO $.
  $}

  ${
    pm2.61da3ne.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61da3ne.2 $e |- ( ( ph /\ C = D ) -> ps ) $.
    pm2.61da3ne.3 $e |- ( ( ph /\ E = F ) -> ps ) $.
    pm2.61da3ne.4 $e |- ( ( ph /\ ( A =/= B /\ C =/= D /\ E =/= F ) )
          -> ps ) $.
    $( Deduction eliminating three inequalities in an antecedent.  (Contributed
       by NM, 15-Jun-2013.) $)
    pm2.61da3ne $p |- ( ph -> ps ) $=
      ( wne wa wceq adantlr simpll simplrl simplrr simpr pm2.61dane pm2.61da2ne
      syl13anc ) ABCDEFIJACDMZEFMZNZNZBGHAGHOBUFKPUGGHMZNAUDUEUHBAUFUHQAUDUEUHR
      AUDUEUHSUGUHTLUCUAUB $.
  $}

  $( Commutation of inequality.  (Contributed by NM, 14-May-1999.) $)
  necom $p |- ( A =/= B <-> B =/= A ) $=
    ( eqcom necon3bii ) ABBAABCD $.

  ${
    necomi.1 $e |- A =/= B $.
    $( Inference from commutative law for inequality.  (Contributed by NM,
       17-Oct-2012.) $)
    necomi $p |- B =/= A $=
      ( wne necom mpbi ) ABDBADCABEF $.
  $}

  ${
    necomd.1 $e |- ( ph -> A =/= B ) $.
    $( Deduction from commutative law for inequality.  (Contributed by NM,
       12-Feb-2008.) $)
    necomd $p |- ( ph -> B =/= A ) $=
      ( wne necom sylib ) ABCECBEDBCFG $.
  $}

  $( Logical OR with an equality.  (Contributed by NM, 29-Apr-2007.) $)
  neor $p |- ( ( A = B \/ ps ) <-> ( A =/= B -> ps ) ) $=
    ( wceq wo wn wi wne df-or df-ne imbi1i bitr4i ) BCDZAEMFZAGBCHZAGMAIONABCJK
    L $.

  $( A De Morgan's law for inequality.  (Contributed by NM, 18-May-2007.) $)
  neanior $p |- ( ( A =/= B /\ C =/= D ) <-> -. ( A = B \/ C = D ) ) $=
    ( wne wa wceq wn wo df-ne anbi12i pm4.56 bitri ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.

  $( A De Morgan's law for inequality.  (Contributed by NM, 30-Sep-2013.) $)
  ne3anior $p |- ( ( A =/= B /\ C =/= D /\ E =/= F )
        <-> -. ( A = B \/ C = D \/ E = F ) ) $=
    ( wne w3a wn w3o wceq 3anor nne 3orbi123i xchbinx ) ABGZCDGZEFGZHPIZQIZRIZJ
    ABKZCDKZEFKZJPQRLSUBTUCUAUDABMCDMEFMNO $.

  $( A De Morgan's law for inequality.  (Contributed by NM, 18-May-2007.) $)
  neorian $p |- ( ( A =/= B \/ C =/= D ) <-> -. ( A = B /\ C = D ) ) $=
    ( wne wo wceq wn wa df-ne orbi12i ianor bitr4i ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.

  ${
    nemtbir.1 $e |- A =/= B $.
    nemtbir.2 $e |- ( ph <-> A = B ) $.
    $( An inference from an inequality, related to modus tollens.  (Contributed
       by NM, 13-Apr-2007.) $)
    nemtbir $p |- -. ph $=
      ( wceq wne wn df-ne mpbi mtbir ) ABCFZBCGLHDBCIJEK $.
  $}

  $( Two classes are different if they don't contain the same element.
     (Contributed by NM, 3-Feb-2012.) $)
  nelne1 $p |- ( ( A e. B /\ -. A e. C ) -> B =/= C ) $=
    ( wcel wn wne wceq eleq2 biimpcd necon3bd imp ) ABDZACDZEBCFLMBCBCGLMBCAHIJ
    K $.

  $( Two classes are different if they don't belong to the same class.
     (Contributed by NM, 25-Jun-2012.) $)
  nelne2 $p |- ( ( A e. C /\ -. B e. C ) -> A =/= B ) $=
    ( wcel wn wne wceq eleq1 biimpcd necon3bd imp ) ACDZBCDZEABFLMABABGLMABCHIJ
    K $.

  $( Equality theorem for negated membership.  (Contributed by NM,
     20-Nov-1994.) $)
  neleq1 $p |- ( A = B -> ( A e/ C <-> B e/ C ) ) $=
    ( wceq wcel wn wnel eleq1 notbid df-nel 3bitr4g ) ABDZACEZFBCEZFACGBCGLMNAB
    CHIACJBCJK $.

  $( Equality theorem for negated membership.  (Contributed by NM,
     20-Nov-1994.) $)
  neleq2 $p |- ( A = B -> ( C e/ A <-> C e/ B ) ) $=
    ( wceq wcel wn wnel eleq2 notbid df-nel 3bitr4g ) ABDZCAEZFCBEZFCAGCBGLMNAB
    CHICAJCBJK $.

  ${
    neleq12d.1 $e |- ( ph -> A = B ) $.
    neleq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality theorem for negated membership.  (Contributed by FL,
       10-Aug-2016.) $)
    neleq12d $p |- ( ph -> ( A e/ C <-> B e/ D ) ) $=
      ( wnel wceq wb neleq1 syl neleq2 bitrd ) ABDHZCDHZCEHZABCIOPJFBCDKLADEIPQ
      JGDECMLN $.
  $}

  ${
    $d y A $.  $d y B $.
    nfne.1 $e |- F/_ x A $.
    nfne.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by NM,
       10-Nov-2007.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
    nfne $p |- F/ x A =/= B $=
      ( wne wceq wn df-ne nfeq nfn nfxfr ) BCFBCGZHABCIMAABCDEJKL $.
  $}

  ${
    $d y A $.  $d z B $.
    nfnel.1 $e |- F/_ x A $.
    nfnel.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by David
       Abernethy, 26-Jun-2011.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
    nfnel $p |- F/ x A e/ B $=
      ( wnel wcel wn df-nel nfel nfn nfxfr ) BCFBCGZHABCIMAABCDEJKL $.
  $}

  ${
    $d y A $.  $d y B $.
    nfned.1 $e |- ( ph -> F/_ x A ) $.
    nfned.2 $e |- ( ph -> F/_ x B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by NM,
       10-Nov-2007.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
    nfned $p |- ( ph -> F/ x A =/= B ) $=
      ( wne wceq wn df-ne nfeqd nfnd nfxfrd ) CDGCDHZIABCDJANBABCDEFKLM $.
  $}

  ${
    $d y A $.  $d z B $.
    nfneld.1 $e |- ( ph -> F/_ x A ) $.
    nfneld.2 $e |- ( ph -> F/_ x B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by David
       Abernethy, 26-Jun-2011.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
    nfneld $p |- ( ph -> F/ x A e/ B ) $=
      ( wnel wcel wn df-nel nfeld nfnd nfxfrd ) CDGCDHZIABCDJANBABCDEFKLM $.
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Restricted quantification
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include restricted universal quantification. $)
  wral $a wff A. x e. A ph $.

  $( Extend wff notation to include restricted existential quantification. $)
  wrex $a wff E. x e. A ph $.

  $( Extend wff notation to include restricted existential uniqueness. $)
  wreu $a wff E! x e. A ph $.

  $( Extend wff notation to include restricted "at most one." $)
  wrmo $a wff E* x e. A ph $.

  $( Extend class notation to include the restricted class abstraction (class
     builder). $)
  crab $a class { x e. A | ph } $.

  $( Define restricted universal quantification.  Special case of Definition
     4.15(3) of [TakeutiZaring] p. 22.  (Contributed by NM, 19-Aug-1993.) $)
  df-ral $a |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) $.

  $( Define restricted existential quantification.  Special case of Definition
     4.15(4) of [TakeutiZaring] p. 22.  (Contributed by NM, 30-Aug-1993.) $)
  df-rex $a |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) $.

  $( Define restricted existential uniqueness.  (Contributed by NM,
     22-Nov-1994.) $)
  df-reu $a |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) $.

  $( Define restricted "at most one".  (Contributed by NM, 16-Jun-2017.) $)
  df-rmo $a |- ( E* x e. A ph <-> E* x ( x e. A /\ ph ) ) $.

  $( Define a restricted class abstraction (class builder), which is the class
     of all ` x ` in ` A ` such that ` ph ` is true.  Definition of
     [TakeutiZaring] p. 20.  (Contributed by NM, 22-Nov-1994.) $)
  df-rab $a |- { x e. A | ph } = { x | ( x e. A /\ ph ) } $.

  $( Relationship between restricted universal and existential quantifiers.
     (Contributed by NM, 21-Jan-1997.) $)
  ralnex $p |- ( A. x e. A -. ph <-> -. E. x e. A ph ) $=
    ( wn wral cv wcel wi wal wrex df-ral wa wex alinexa df-rex xchbinxr bitri )
    ADZBCEBFCGZRHBIZABCJZDRBCKTSALBMUASABNABCOPQ $.

  $( Relationship between restricted universal and existential quantifiers.
     (Contributed by NM, 21-Jan-1997.) $)
  rexnal $p |- ( E. x e. A -. ph <-> -. A. x e. A ph ) $=
    ( wn wrex cv wcel wa wex wral df-rex wi wal exanali df-ral xchbinxr bitri )
    ADZBCEBFCGZRHBIZABCJZDRBCKTSALBMUASABNABCOPQ $.

  $( Relationship between restricted universal and existential quantifiers.
     (Contributed by NM, 21-Jan-1997.) $)
  dfral2 $p |- ( A. x e. A ph <-> -. E. x e. A -. ph ) $=
    ( wn wrex wral rexnal con2bii ) ADBCEABCFABCGH $.

  $( Relationship between restricted universal and existential quantifiers.
     (Contributed by NM, 21-Jan-1997.) $)
  dfrex2 $p |- ( E. x e. A ph <-> -. A. x e. A -. ph ) $=
    ( wn wral wrex ralnex con2bii ) ADBCEABCFABCGH $.

  ${
    ralbida.1 $e |- F/ x ph $.
    ralbida.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule).  (Contributed by NM, 6-Oct-2003.) $)
    ralbida $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral pm5.74da albid df-ral 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.

    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 6-Oct-2003.) $)
    rexbida $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( cv wcel wa wex wrex pm5.32da exbid df-rex 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
  $}

  ${
    $d x ph $.
    ralbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule).  (Contributed by NM, 4-Mar-1997.) $)
    ralbidva $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( nfv ralbida ) ABCDEADGFH $.

    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 9-Mar-1997.) $)
    rexbidva $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( nfv rexbida ) ABCDEADGFH $.
  $}

  ${
    ralbid.1 $e |- F/ x ph $.
    ralbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule).  (Contributed by NM, 27-Jun-1998.) $)
    ralbid $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( wb cv wcel adantr ralbida ) ABCDEFABCHDIEJGKL $.

    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 27-Jun-1998.) $)
    rexbid $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( wb cv wcel adantr rexbida ) ABCDEFABCHDIEJGKL $.
  $}

  ${
    $d x ph $.
    ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule).  (Contributed by NM, 20-Nov-1994.) $)
    ralbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( nfv ralbid ) ABCDEADGFH $.

    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 20-Nov-1994.) $)
    rexbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( nfv rexbid ) ABCDEADGFH $.
  $}

  ${
    $d x ph $.
    ralbidv2.1 $e |- ( ph -> ( ( x e. A -> ps ) <-> ( x e. B -> ch ) ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule).  (Contributed by NM, 6-Apr-1997.) $)
    ralbidv2 $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral albidv df-ral 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
  $}

  ${
    $d x ph $.
    rexbidv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. B /\ ch ) ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 22-May-1999.) $)
    rexbidv2 $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex exbidv df-rex 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
  $}

  ${
    ralbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence.  (Contributed by NM, 23-Nov-1994.)  (Revised by Mario
       Carneiro, 17-Oct-2016.) $)
    ralbii $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( wral wb wtru a1i ralbidv trud ) ACDFBCDFGHABCDABGHEIJK $.

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence.  (Contributed by NM, 23-Nov-1994.)  (Revised by Mario
       Carneiro, 17-Oct-2016.) $)
    rexbii $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( wrex wb wtru a1i rexbidv trud ) ACDFBCDFGHABCDABGHEIJK $.

    $( Inference adding two restricted universal quantifiers to both sides of
       an equivalence.  (Contributed by NM, 1-Aug-2004.) $)
    2ralbii $p |- ( A. x e. A A. y e. B ph <-> A. x e. A A. y e. B ps ) $=
      ( wral ralbii ) ADFHBDFHCEABDFGII $.

    $( Inference adding two restricted existential quantifiers to both sides of
       an equivalence.  (Contributed by NM, 11-Nov-1995.) $)
    2rexbii $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex rexbii ) ADFHBDFHCEABDFGII $.
  $}

  ${
    ralbii2.1 $e |- ( ( x e. A -> ph ) <-> ( x e. B -> ps ) ) $.
    $( Inference adding different restricted universal quantifiers to each side
       of an equivalence.  (Contributed by NM, 15-Aug-2005.) $)
    ralbii2 $p |- ( A. x e. A ph <-> A. x e. B ps ) $=
      ( cv wcel wi wal wral albii df-ral 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
  $}

  ${
    rexbii2.1 $e |- ( ( x e. A /\ ph ) <-> ( x e. B /\ ps ) ) $.
    $( Inference adding different restricted existential quantifiers to each
       side of an equivalence.  (Contributed by NM, 4-Feb-2004.) $)
    rexbii2 $p |- ( E. x e. A ph <-> E. x e. B ps ) $=
      ( cv wcel wa wex wrex exbii df-rex 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
  $}

  ${
    raleqbii.1 $e |- A = B $.
    raleqbii.2 $e |- ( ps <-> ch ) $.
    $( Equality deduction for restricted universal quantifier, changing both
       formula and quantifier domain.  Inference form.  (Contributed by David
       Moews, 1-May-2017.) $)
    raleqbii $p |- ( A. x e. A ps <-> A. x e. B ch ) $=
      ( cv wcel eleq2i imbi12i ralbii2 ) ABCDECHZDIMEIABDEMFJGKL $.

    $( Equality deduction for restricted existential quantifier, changing both
       formula and quantifier domain.  Inference form.  (Contributed by David
       Moews, 1-May-2017.) $)
    rexeqbii $p |- ( E. x e. A ps <-> E. x e. B ch ) $=
      ( cv wcel eleq2i anbi12i rexbii2 ) ABCDECHZDIMEIABDEMFJGKL $.
  $}

  ${
    ralbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence.  (Contributed by NM, 26-Nov-2000.) $)
    ralbiia $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( cv wcel pm5.74i ralbii2 ) ABCDDCFDGABEHI $.

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence.  (Contributed by NM, 26-Oct-1999.) $)
    rexbiia $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( cv wcel pm5.32i rexbii2 ) ABCDDCFDGABEHI $.
  $}

  ${
    $d x y $.  $d y A $.
    2rexbiia.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph <-> ps ) ) $.
    $( Inference adding two restricted existential quantifiers to both sides of
       an equivalence.  (Contributed by NM, 1-Aug-2004.) $)
    2rexbiia $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex cv wcel rexbidva rexbiia ) ADFHBDFHCECIEJABDFGKL $.
  $}

  ${
    $d x y $.
    r2alf.1 $e |- F/_ y A $.
    $( Double restricted universal quantification.  (Contributed by Mario
       Carneiro, 14-Oct-2016.) $)
    r2alf $p |- ( A. x e. A A. y e. B ph <->
               A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) $=
      ( wral cv wi wal wa df-ral nfcri 19.21 impexp albii imbi2i 3bitr4i bitr4i
      wcel ) ACEGZBDGBHDTZUAIZBJUBCHETZKAIZCJZBJUABDLUFUCBUBUDAIZIZCJUBUGCJZIUF
      UCUBUGCCBDFMNUEUHCUBUDAOPUAUIUBACELQRPS $.

    $( Double restricted existential quantification.  (Contributed by Mario
       Carneiro, 14-Oct-2016.) $)
    r2exf $p |- ( E. x e. A E. y e. B ph <->
               E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) $=
      ( wrex cv wcel wex df-rex nfcri 19.42 anass exbii anbi2i 3bitr4i bitr4i
      wa ) ACEGZBDGBHDIZTSZBJUACHEIZSASZCJZBJTBDKUEUBBUAUCASZSZCJUAUFCJZSUEUBUA
      UFCCBDFLMUDUGCUAUCANOTUHUAACEKPQOR $.
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted universal quantification.  (Contributed by NM,
       19-Nov-1995.) $)
    r2al $p |- ( A. x e. A A. y e. B ph <->
               A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) $=
      ( nfcv r2alf ) ABCDECDFG $.

    $( Double restricted existential quantification.  (Contributed by NM,
       11-Nov-1995.) $)
    r2ex $p |- ( E. x e. A E. y e. B ph <->
               E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) $=
      ( nfcv r2exf ) ABCDECDFG $.
  $}

  ${
    $d x y $.  $d y A $.
    2ralbida.1 $e |- F/ x ph $.
    2ralbida.2 $e |- F/ y ph $.
    2ralbida.3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule).  (Contributed by NM, 24-Feb-2004.) $)
    2ralbida $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral cv wcel wa nfv nfan wb anassrs ralbida ) ABEGKCEGKDFHADLFMZNBCEGAT
      EITEOPATELGMBCQJRSS $.
  $}

  ${
    $d x y ph $.  $d y A $.
    2ralbidva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule).  (Contributed by NM, 4-Mar-1997.) $)
    2ralbidva $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( nfv 2ralbida ) ABCDEFGADIAEIHJ $.

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule).  (Contributed by NM, 15-Dec-2004.) $)
    2rexbidva $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex cv wcel wa wb anassrs rexbidva ) ABEGICEGIDFADJFKZLBCEGAPEJGKBCMHN
      OO $.
  $}

  ${
    $d x ph $.  $d y ph $.
    2ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule).  (Contributed by NM, 28-Jan-2006.)  (Revised by Szymon
       Jaroszewicz, 16-Mar-2007.) $)
    2ralbidv $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv ) ABEGICEGIDFABCEGHJJ $.

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule).  (Contributed by NM, 28-Jan-2006.) $)
    2rexbidv $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex rexbidv ) ABEGICEGIDFABCEGHJJ $.

    $( Formula-building rule for restricted quantifiers (deduction rule).
       (Contributed by NM, 28-Jan-2006.) $)
    rexralbidv $p |- ( ph ->
                    ( E. x e. A A. y e. B ps <-> E. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv rexbidv ) ABEGICEGIDFABCEGHJK $.
  $}

  $( A transformation of restricted quantifiers and logical connectives.
     (Contributed by NM, 4-Sep-2005.) $)
  ralinexa $p |- ( A. x e. A ( ph -> -. ps ) <-> -. E. x e. A ( ph /\ ps ) ) $=
    ( wn wi wral wa wrex imnan ralbii ralnex bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.

  $( A transformation of restricted quantifiers and logical connectives.
     (Contributed by NM, 4-Sep-2005.) $)
  rexanali $p |- ( E. x e. A ( ph /\ -. ps ) <-> -. A. x e. A ( ph -> ps ) ) $=
    ( wn wa wrex wi wral annim rexbii rexnal bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.

  ${
    $d x A $.  $d x B $.
    $( Two ways to say " ` A ` belongs to ` B ` ."  (Contributed by NM,
       22-Nov-1994.) $)
    risset $p |- ( A e. B <-> E. x e. B x = A ) $=
      ( cv wcel wceq wa wex wrex exancom df-rex df-clel 3bitr4ri ) ADZCEZNBFZGA
      HPOGAHPACIBCEOPAJPACKABCLM $.
  $}

  ${
    hbral.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbral.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Contributed by NM, 1-Sep-1999.)  (Revised by David Abernethy,
       13-Dec-2009.) $)
    hbral $p |- ( A. y e. A ph -> A. x A. y e. A ph ) $=
      ( wral cv wcel wi wal df-ral hbim hbal hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
  $}

  $( ` x ` is not free in ` A. x e. A ph ` .  (Contributed by NM,
     18-Oct-1996.) $)
  hbra1 $p |- ( A. x e. A ph -> A. x A. x e. A ph ) $=
    ( wral cv wcel wi wal df-ral hba1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.

  $( ` x ` is not free in ` A. x e. A ph ` .  (Contributed by NM,
     18-Oct-1996.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
  nfra1 $p |- F/ x A. x e. A ph $=
    ( wral cv wcel wi wal df-ral nfa1 nfxfr ) ABCDBECFAGZBHBABCILBJK $.

  ${
    nfrald.2 $e |- F/ y ph $.
    nfrald.3 $e |- ( ph -> F/_ x A ) $.
    nfrald.4 $e |- ( ph -> F/ x ps ) $.
    $( Deduction version of ~ nfral .  (Contributed by NM, 15-Feb-2013.)
       (Revised by Mario Carneiro, 7-Oct-2016.) $)
    nfrald $p |- ( ph -> F/ x A. y e. A ps ) $=
      ( wral cv wcel wi wal df-ral wceq wn wa wnfc nfcvf adantr nfeld wnf nfimd
      adantl nfald2 nfxfrd ) BDEIDJZEKZBLZDMACBDENAUICDFACJUGOCMPZQZUHBCUKCUGEU
      JCUGRACDSUDACERUJGTUAABCUBUJHTUCUEUF $.

    $( Deduction version of ~ nfrex .  (Contributed by Mario Carneiro,
       14-Oct-2016.) $)
    nfrexd $p |- ( ph -> F/ x E. y e. A ps ) $=
      ( wrex wn wral dfrex2 nfnd nfrald nfxfrd ) BDEIBJZDEKZJACBDELAQCAPCDEFGAB
      CHMNMO $.
  $}

  ${
    nfral.1 $e |- F/_ x A $.
    nfral.2 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Contributed by NM, 1-Sep-1999.)  (Revised by Mario Carneiro,
       7-Oct-2016.) $)
    nfral $p |- F/ x A. y e. A ph $=
      ( wral wnf wtru nftru wnfc a1i nfrald trud ) ACDGBHIABCDCJBDKIELABHIFLMN
      $.
  $}

  ${
    $d A y $.
    $( Similar to Lemma 24 of [Monk2] p. 114, except the quantification of the
       antecedent is restricted.  Derived automatically from ~ hbra2VD .
       Contributed by Alan Sare 31-Dec-2011.  (Contributed by NM,
       31-Dec-2011.) $)
    nfra2 $p |- F/ y A. x e. A A. y e. B ph $=
      ( wral nfcv nfra1 nfral ) ACEFCBDCDGACEHI $.
  $}

  ${
    nfrex.1 $e |- F/_ x A $.
    nfrex.2 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Contributed by NM, 1-Sep-1999.)  (Revised by Mario Carneiro,
       7-Oct-2016.) $)
    nfrex $p |- F/ x E. y e. A ph $=
      ( wrex wn wral dfrex2 nfn nfral nfxfr ) ACDGAHZCDIZHBACDJOBNBCDEABFKLKM
      $.
  $}

  $( ` x ` is not free in ` E. x e. A ph ` .  (Contributed by NM,
     19-Mar-1997.)  (Revised by Mario Carneiro, 7-Oct-2016.) $)
  nfre1 $p |- F/ x E. x e. A ph $=
    ( wrex cv wcel wa wex df-rex nfe1 nfxfr ) ABCDBECFAGZBHBABCILBJK $.

  ${
    $d x y z $.  $d y z A $.  $d z B $.
    $( Triple restricted universal quantification.  (Contributed by NM,
       19-Nov-1995.) $)
    r3al $p |- ( A. x e. A A. y e. B A. z e. C ph <->
               A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ) $=
      ( cv wcel wa wi wal wral w3a df-ral r2al ralbii bitri albii 19.21v 3anass
      imbi1i impexp 3bitr4i ) CHFIZDHGIZJZAKZDLZCLZBEMBHEIZUJKZBLADGMCFMZBEMUKU
      EUFNZAKZDLZCLZBLUJBEOUMUJBEACDFGPQUQULBUQUKUIKZCLULUPURCUPUKUHKZDLURUOUSD
      UOUKUGJZAKUSUNUTAUKUEUFUAUBUKUGAUCRSUKUHDTRSUKUICTRSUD $.
  $}

  $( Universal quantification implies restricted quantification.  (Contributed
     by NM, 20-Oct-2006.) $)
  alral $p |- ( A. x ph -> A. x e. A ph ) $=
    ( wal cv wcel wi wral ax-1 alimi df-ral sylibr ) ABDBECFZAGZBDABCHANBAMIJAB
    CKL $.

  $( Restricted existence implies existence.  (Contributed by NM,
     11-Nov-1995.) $)
  rexex $p |- ( E. x e. A ph -> E. x ph ) $=
    ( wrex cv wcel wa wex df-rex simpr eximi sylbi ) ABCDBECFZAGZBHABHABCINABMA
    JKL $.

  $( Restricted specialization.  (Contributed by NM, 17-Oct-1996.) $)
  rsp $p |- ( A. x e. A ph -> ( x e. A -> ph ) ) $=
    ( wral cv wcel wi wal df-ral sp sylbi ) ABCDBECFAGZBHLABCILBJK $.

  $( Restricted specialization.  (Contributed by NM, 12-Oct-1999.) $)
  rspe $p |- ( ( x e. A /\ ph ) -> E. x e. A ph ) $=
    ( cv wcel wa wex wrex 19.8a df-rex sylibr ) BDCEAFZLBGABCHLBIABCJK $.

  $( Restricted specialization.  (Contributed by NM, 11-Feb-1997.) $)
  rsp2 $p |- ( A. x e. A A. y e. B ph -> ( ( x e. A /\ y e. B ) -> ph ) ) $=
    ( wral cv wcel wi rsp syl6 imp3a ) ACEFZBDFZBGDHZCGEHZANOMPAIMBDJACEJKL $.

  $( Restricted specialization.  (Contributed by FL, 4-Jun-2012.) $)
  rsp2e $p |- ( ( x e. A /\ y e. B /\ ph ) -> E. x e. A E. y e. B ph ) $=
    ( cv wcel w3a wrex wa wex simp1 rspe 3adant1 19.8a syl2anc df-rex sylibr )
    BFDGZCFEGZAHZSACEIZJZBKZUBBDIUASUBUDSTALTAUBSACEMNUCBOPUBBDQR $.

  ${
    rspec.1 $e |- A. x e. A ph $.
    $( Specialization rule for restricted quantification.  (Contributed by NM,
       19-Nov-1994.) $)
    rspec $p |- ( x e. A -> ph ) $=
      ( wral cv wcel wi rsp ax-mp ) ABCEBFCGAHDABCIJ $.
  $}

  ${
    rgen.1 $e |- ( x e. A -> ph ) $.
    $( Generalization rule for restricted quantification.  (Contributed by NM,
       19-Nov-1994.) $)
    rgen $p |- A. x e. A ph $=
      ( wral cv wcel wi df-ral mpgbir ) ABCEBFCGAHBABCIDJ $.
  $}

  ${
    $d y z A $.  $d x z $.
    rgen2a.1 $e |- ( ( x e. A /\ y e. A ) -> ph ) $.
    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct (and illustrates the use of ~ dvelim ).
       (Contributed by NM, 23-Nov-1994.)  (Proof shortened by Andrew Salmon,
       25-May-2011.)  (Proof modification is discouraged. $)
    rgen2a $p |- A. x e. A A. y e. A ph $=
      ( vz wral cv wcel wi wal wceq eleq1 ex syl6bi pm2.43d alimi a1d dvelimv
      wn syl6 pm2.61i df-ral sylibr rgen ) ACDGZBDBHZDIZCHZDIZAJZCKZUFUIUGLZCKZ
      UHULJUNULUHUMUKCUMUJAUMUJUHUKUIUGDMUHUJAENZOPQRUNTUHUHCKULFHZDIUHCBFUPUGD
      MSUHUKCUOQUAUBACDUCUDUE $.
  $}

  ${
    rgenw.1 $e |- ph $.
    $( Generalization rule for restricted quantification.  (Contributed by NM,
       18-Jun-2014.) $)
    rgenw $p |- A. x e. A ph $=
      ( cv wcel a1i rgen ) ABCABECFDGH $.

    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct.  (Contributed by NM, 18-Jun-2014.) $)
    rgen2w $p |- A. x e. A A. y e. B ph $=
      ( wral rgenw ) ACEGBDACEFHH $.
  $}

  ${
    mprg.1 $e |- ( A. x e. A ph -> ps ) $.
    mprg.2 $e |- ( x e. A -> ph ) $.
    $( Modus ponens combined with restricted generalization.  (Contributed by
       NM, 10-Aug-2004.) $)
    mprg $p |- ps $=
      ( wral rgen ax-mp ) ACDGBACDFHEI $.
  $}

  ${
    mprgbir.1 $e |- ( ph <-> A. x e. A ps ) $.
    mprgbir.2 $e |- ( x e. A -> ps ) $.
    $( Modus ponens on biconditional combined with restricted generalization.
       (Contributed by NM, 21-Mar-2004.) $)
    mprgbir $p |- ph $=
      ( wral rgen mpbir ) ABCDGBCDFHEI $.
  $}

  $( Distribution of restricted quantification over implication.  (Contributed
     by NM, 9-Feb-1997.) $)
  ralim $p |- ( A. x e. A ( ph -> ps ) ->
               ( A. x e. A ph -> A. x e. A ps ) ) $=
    ( wi wral cv wcel wal df-ral ax-2 al2imi sylbi 3imtr4g ) ABEZCDFZCGDHZAEZCI
    ZQBEZCIZACDFBCDFPQOEZCISUAEOCDJUBRTCQABKLMACDJBCDJN $.

  ${
    ralimi2.1 $e |- ( ( x e. A -> ph ) -> ( x e. B -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent.  (Contributed by
       NM, 22-Feb-2004.) $)
    ralimi2 $p |- ( A. x e. A ph -> A. x e. B ps ) $=
      ( cv wcel wi wal wral alimi df-ral 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
  $}

  ${
    ralimia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent.  (Contributed by
       NM, 19-Jul-1996.) $)
    ralimia $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel a2i ralimi2 ) ABCDDCFDGABEHI $.
  $}

  ${
    ralimiaa.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference quantifying both antecedent and consequent.  (Contributed by
       NM, 4-Aug-2007.) $)
    ralimiaa $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel ex ralimia ) ABCDCFDGABEHI $.
  $}

  ${
    ralimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent, with strong
       hypothesis.  (Contributed by NM, 4-Mar-1997.) $)
    ralimi $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( wi cv wcel a1i ralimia ) ABCDABFCGDHEIJ $.
  $}

  ${
    ral2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent,
       with a strong hypothesis.  (Contributed by NM, 19-Dec-2006.) $)
    ral2imi $p |- ( A. x e. A ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wral wi ralimi ralim syl ) ADEGBCHZDEGBDEGCDEGHALDEFIBCDEJK $.
  $}

  ${
    ralimdaa.1 $e |- F/ x ph $.
    ralimdaa.2 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90.  (Contributed by NM, 22-Sep-2003.) $)
    ralimdaa $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral ex a2d alimd df-ral 3imtr4g ) ADHEIZBJZDKRCJZDKBDEL
      CDELASTDFARBCARBCJGMNOBDEPCDEPQ $.
  $}

  ${
    $d x ph $.
    ralimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90.  (Contributed by NM, 22-May-1999.) $)
    ralimdva $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( nfv ralimdaa ) ABCDEADGFH $.
  $}

  ${
    $d x ph $.
    ralimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90.  (Contributed by NM, 8-Oct-2003.) $)
    ralimdv $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wi cv wcel adantr ralimdva ) ABCDEABCGDHEIFJK $.
  $}

  ${
    $d x ph $.
    ralimdv2.1 $e |- ( ph -> ( ( x e. A -> ps ) -> ( x e. B -> ch ) ) ) $.
    $( Inference quantifying both antecedent and consequent.  (Contributed by
       NM, 1-Feb-2005.) $)
    ralimdv2 $p |- ( ph -> ( A. x e. A ps -> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral alimdv df-ral 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
  $}

  ${
    ralrimi.1 $e |- F/ x ph $.
    ralrimi.2 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 10-Oct-1999.) $)
    ralrimi $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel wi wal wral alrimi df-ral sylibr ) ACGDHBIZCJBCDKAOCEFLBCDMN $.
  $}

  ${
    $d x ph $.
    ralrimiv.1 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 22-Nov-1994.) $)
    ralrimiv $p |- ( ph -> A. x e. A ps ) $=
      ( nfv ralrimi ) ABCDACFEG $.
  $}

  ${
    $d x ph $.
    ralrimiva.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 2-Jan-2006.) $)
    ralrimiva $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel ex ralrimiv ) ABCDACFDGBEHI $.
  $}

  ${
    $d x ph $.
    ralrimivw.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 18-Jun-2014.) $)
    ralrimivw $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel a1d ralrimiv ) ABCDABCFDGEHI $.
  $}

  ${
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers (closed
       theorem version).  (Contributed by NM, 1-Mar-2008.) $)
    r19.21t $p |- ( F/ x ph ->
             ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) $=
      ( wnf cv wcel wal wral bi2.04 albii 19.21t syl5bb df-ral imbi2i 3bitr4g
      wi ) ACEZCFDGZABQZQZCHZASBQZCHZQZTCDIABCDIZQUBAUCQZCHRUEUAUGCSABJKAUCCLMT
      CDNUFUDABCDNOP $.
  $}

  ${
    r19.21.1 $e |- F/ x ph $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by Scott Fenton, 30-Mar-2011.) $)
    r19.21 $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( wnf wi wral wb r19.21t ax-mp ) ACFABGCDHABCDHGIEABCDJK $.
  $}

  ${
    $d x ph $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by NM, 15-Oct-2003.)  (Proof shortened by Andrew Salmon,
       30-May-2011.) $)
    r19.21v $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( nfv r19.21 ) ABCDACEF $.
  $}

  ${
    ralrimd.1 $e |- F/ x ph $.
    ralrimd.2 $e |- F/ x ps $.
    ralrimd.3 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 16-Feb-2004.) $)
    ralrimd $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral alrimd df-ral syl6ibr ) ABDIEJCKZDLCDEMABQDFGHNCDEO
      P $.
  $}

  ${
    $d x ph $.  $d x ps $.
    ralrimdv.1 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 27-May-1998.) $)
    ralrimdv $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( nfv ralrimd ) ABCDEADGBDGFH $.
  $}

  ${
    $d x ph $.  $d x ps $.
    ralrimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 2-Feb-2008.) $)
    ralrimdva $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi ex com23 ralrimdv ) ABCDEADGEHZBCAMBCIFJKL $.
  $}

  ${
    $d x y ph $.  $d y A $.
    ralrimivv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by NM,
       24-Jul-2004.) $)
    ralrimivv $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( wral cv wcel exp3a ralrimdv ralrimiv ) ABDFHCEACIEJZBDFANDIFJBGKLM $.
  $}

  ${
    $d ph x y $.  $d A y $.
    ralrimivva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    ralrimivva $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( cv wcel wa ex ralrimivv ) ABCDEFACHEIDHFIJBGKL $.
  $}

  ${
    $d ph x y z $.  $d A y z $.  $d B z $.
    ralrimivvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B /\ z e. C ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with triple quantification.)  (Contributed by Mario
       Carneiro, 9-Jul-2014.) $)
    ralrimivvva $p |- ( ph -> A. x e. A A. y e. B A. z e. C ps ) $=
      ( wral cv wcel wa 3exp2 imp41 ralrimiva ) ABEHJZDGJCFACKFLZMZQDGSDKGLZMBE
      HARTEKHLZBARTUABINOPPP $.
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    ralrimdvv.1 $e |- ( ph -> ( ps -> ( ( x e. A /\ y e. B ) -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by NM,
       1-Jun-2005.) $)
    ralrimdvv $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( wral wa cv wcel wi imp ralrimivv ex ) ABCEGIDFIABJCDEFGABDKFLEKGLJCMHNO
      P $.
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    ralrimdvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by NM,
       2-Feb-2008.) $)
    ralrimdvva $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( cv wcel wa wi ex com23 ralrimdvv ) ABCDEFGADIFJEIGJKZBCAPBCLHMNO $.
  $}

  ${
    $d x y $.  $d y A $.
    rgen2.1 $e |- ( ( x e. A /\ y e. B ) -> ph ) $.
    $( Generalization rule for restricted quantification.  (Contributed by NM,
       30-May-1999.) $)
    rgen2 $p |- A. x e. A A. y e. B ph $=
      ( wral cv wcel ralrimiva rgen ) ACEGBDBHDIACEFJK $.
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    rgen3.1 $e |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $.
    $( Generalization rule for restricted quantification.  (Contributed by NM,
       12-Jan-2008.) $)
    rgen3 $p |- A. x e. A A. y e. B A. z e. C ph $=
      ( wral cv wcel wa 3expa ralrimiva rgen2 ) ADGIBCEFBJEKZCJFKZLADGPQDJGKAHM
      NO $.
  $}

  ${
    r19.21bi.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 20-Nov-1994.) $)
    r19.21bi $p |- ( ( ph /\ x e. A ) -> ps ) $=
      ( cv wcel wi wral wal df-ral sylib 19.21bi imp ) ACFDGZBAOBHZCABCDIPCJEBC
      DKLMN $.
  $}

  ${
    rspec2.1 $e |- A. x e. A A. y e. B ph $.
    $( Specialization rule for restricted quantification.  (Contributed by NM,
       20-Nov-1994.) $)
    rspec2 $p |- ( ( x e. A /\ y e. B ) -> ph ) $=
      ( cv wcel wral rspec r19.21bi ) BGDHACEACEIBDFJK $.
  $}

  ${
    rspec3.1 $e |- A. x e. A A. y e. B A. z e. C ph $.
    $( Specialization rule for restricted quantification.  (Contributed by NM,
       20-Nov-1994.) $)
    rspec3 $p |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $=
      ( cv wcel wa wral rspec2 r19.21bi 3impa ) BIEJZCIFJZDIGJAPQKADGADGLBCEFHM
      NO $.
  $}

  ${
    r19.21be.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 21-Nov-1994.) $)
    r19.21be $p |- A. x e. A ( ph -> ps ) $=
      ( wi cv wcel r19.21bi expcom rgen ) ABFCDACGDHBABCDEIJK $.
  $}

  ${
    nrex.1 $e |- ( x e. A -> -. ps ) $.
    $( Inference adding restricted existential quantifier to negated wff.
       (Contributed by NM, 16-Oct-2003.) $)
    nrex $p |- -. E. x e. A ps $=
      ( wn wral wrex rgen ralnex mpbi ) AEZBCFABCGEKBCDHABCIJ $.
  $}

  ${
    $d x ph $.
    nrexdv.1 $e |- ( ( ph /\ x e. A ) -> -. ps ) $.
    $( Deduction adding restricted existential quantifier to negated wff.
       (Contributed by NM, 16-Oct-2003.) $)
    nrexdv $p |- ( ph -> -. E. x e. A ps ) $=
      ( wn wral wrex ralrimiva ralnex sylib ) ABFZCDGBCDHFALCDEIBCDJK $.
  $}

  $( Theorem 19.22 of [Margaris] p. 90.  (Restricted quantifier version.)
     (Contributed by NM, 22-Nov-1994.)  (Proof shortened by Andrew Salmon,
     30-May-2011.) $)
  rexim $p |- ( A. x e. A ( ph -> ps ) ->
               ( E. x e. A ph -> E. x e. A ps ) ) $=
    ( wi wral wn wrex con3 ral2imi con3d dfrex2 3imtr4g ) ABEZCDFZAGZCDFZGBGZCD
    FZGACDHBCDHOSQNRPCDABIJKACDLBCDLM $.

  ${
    reximia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent.  (Contributed by
       NM, 10-Feb-1997.) $)
    reximia $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi wrex rexim mprg ) ABFACDGBCDGFCDABCDHEI $.
  $}

  ${
    reximi2.1 $e |- ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) $.
    $( Inference quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90.  (Contributed by NM, 8-Nov-2004.) $)
    reximi2 $p |- ( E. x e. A ph -> E. x e. B ps ) $=
      ( cv wcel wa wex wrex eximi df-rex 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
  $}

  ${
    reximi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent.  (Contributed by
       NM, 18-Oct-1996.) $)
    reximi $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi cv wcel a1i reximia ) ABCDABFCGDHEIJ $.
  $}

  ${
    reximdai.1 $e |- F/ x ph $.
    reximdai.2 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 31-Aug-1999.) $)
    reximdai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi wral wrex ralrimi rexim syl ) ABCHZDEIBDEJCDEJHANDEFGKBCDELM $.
  $}

  ${
    $d x ph $.
    reximdv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) -> ( x e. B /\ ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90.  (Contributed by NM, 17-Sep-2003.) $)
    reximdv2 $p |- ( ph -> ( E. x e. A ps -> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex eximdv df-rex 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
  $}

  ${
    $d x ph $.
    reximdvai.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90.  (Contributed by NM, 14-Nov-2002.) $)
    reximdvai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( nfv reximdai ) ABCDEADGFH $.
  $}

  ${
    $d x ph $.
    reximdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version with strong hypothesis.)  (Contributed by NM,
       24-Jun-1998.) $)
    reximdv $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi cv wcel a1d reximdvai ) ABCDEABCGDHEIFJK $.
  $}

  ${
    $d x ph $.
    reximdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90.  (Contributed by NM, 22-May-1999.) $)
    reximdva $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( cv wcel wi ex reximdvai ) ABCDEADGEHBCIFJK $.
  $}

  ${
    $d x y $.  $d y A $.  $d x B $.
    $( Theorem 19.12 of [Margaris] p. 89 with restricted quantifiers.
       (Contributed by NM, 15-Oct-2003.)  (Proof shortened by Andrew Salmon,
       30-May-2011.) $)
    r19.12 $p |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) $=
      ( wral wrex nfcv nfra1 nfrex cv wcel ax-1 ralrimi rsp reximdv ralimia syl
      com12 ) ACEFZBDGZUACEFABDGZCEFUAUACETCBDCDHACEIJUACKELZMNUAUBCEUCTABDTUCA
      ACEOSPQR $.
  $}

  $( Closed theorem form of ~ r19.23 .  (Contributed by NM, 4-Mar-2013.)
     (Revised by Mario Carneiro, 8-Oct-2016.) $)
  r19.23t $p |- ( F/ x ps ->
    ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ) $=
    ( wnf cv wcel wa wal wex wral wrex 19.23t df-ral impexp albii bitr4i df-rex
    wi imbi1i 3bitr4g ) BCECFDGZAHZBSZCIZUCCJZBSABSZCDKZACDLZBSUCBCMUHUBUGSZCIU
    EUGCDNUDUJCUBABOPQUIUFBACDRTUA $.

  ${
    r19.23.1 $e |- F/ x ps $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by NM, 22-Oct-2010.)  (Proof shortened by Mario Carneiro,
       8-Oct-2016.) $)
    r19.23 $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( wnf wi wral wrex wb r19.23t ax-mp ) BCFABGCDHACDIBGJEABCDKL $.
  $}

  ${
    $d x ps $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by NM, 31-Aug-1999.) $)
    r19.23v $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( nfv r19.23 ) ABCDBCEF $.
  $}

  ${
    rexlimi.1 $e |- F/ x ps $.
    rexlimi.2 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 30-Nov-2003.)  (Proof
       shortened by Andrew Salmon, 30-May-2011.) $)
    rexlimi $p |- ( E. x e. A ph -> ps ) $=
      ( wi wral wrex rgen r19.23 mpbi ) ABGZCDHACDIBGMCDFJABCDEKL $.
  $}

  ${
    $d x ps $.
    rexlimiv.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 20-Nov-1994.) $)
    rexlimiv $p |- ( E. x e. A ph -> ps ) $=
      ( nfv rexlimi ) ABCDBCFEG $.
  $}

  ${
    $d x ps $.
    rexlimiva.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 18-Dec-2006.) $)
    rexlimiva $p |- ( E. x e. A ph -> ps ) $=
      ( cv wcel ex rexlimiv ) ABCDCFDGABEHI $.
  $}

  ${
    $d ps x $.
    rexlimivw.1 $e |- ( ph -> ps ) $.
    $( Weaker version of ~ rexlimiv .  (Contributed by FL, 19-Sep-2011.) $)
    rexlimivw $p |- ( E. x e. A ph -> ps ) $=
      ( wi cv wcel a1i rexlimiv ) ABCDABFCGDHEIJ $.
  $}

  ${
    rexlimd.1 $e |- F/ x ph $.
    rexlimd.2 $e |- F/ x ch $.
    rexlimd.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 27-May-1998.)  (Proof shortened by Andrew
       Salmon, 30-May-2011.) $)
    rexlimd $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex ralrimi r19.23 sylib ) ABCIZDEJBDEKCIAODEFHLBCDEGMN $.
  $}

  ${
    rexlimd2.1 $e |- F/ x ph $.
    rexlimd2.2 $e |- ( ph -> F/ x ch ) $.
    rexlimd2.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Version of ~ rexlimd with deduction version of second hypothesis.
       (Contributed by NM, 21-Jul-2013.)  (Revised by Mario Carneiro,
       8-Oct-2016.) $)
    rexlimd2 $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex ralrimi wnf wb r19.23t syl mpbid ) ABCIZDEJZBDEKCIZARDEFHL
      ACDMSTNGBCDEOPQ $.
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdv.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 14-Nov-2002.)  (Proof shortened by Eric
       Schmidt, 22-Dec-2006.) $)
    rexlimdv $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( nfv rexlimd ) ABCDEADGCDGFH $.
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 20-Jan-2007.) $)
    rexlimdva $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel wi ex rexlimdv ) ABCDEADGEHBCIFJK $.
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdvaa.1 $e |- ( ( ph /\ ( x e. A /\ ps ) ) -> ch ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by Mario Carneiro, 15-Jun-2016.) $)
    rexlimdvaa $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel expr rexlimdva ) ABCDEADGEHBCFIJ $.
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdv3a.1 $e |- ( ( ph /\ x e. A /\ ps ) -> ch ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  Frequently-used variant of ~ rexlimdv .  (Contributed by NM,
       7-Jun-2015.) $)
    rexlimdv3a $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel 3exp rexlimdv ) ABCDEADGEHBCFIJ $.
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdvw.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 18-Jun-2014.) $)
    rexlimdvw $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi cv wcel a1d rexlimdv ) ABCDEABCGDHEIFJK $.
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimddv.1 $e |- ( ph -> E. x e. A ps ) $.
    rexlimddv.2 $e |- ( ( ph /\ ( x e. A /\ ps ) ) -> ch ) $.
    $( Restricted existential elimination rule of natural deduction.
       (Contributed by Mario Carneiro, 15-Jun-2016.) $)
    rexlimddv $p |- ( ph -> ch ) $=
      ( wrex rexlimdvaa mpd ) ABDEHCFABCDEGIJ $.
  $}

  ${
    $d x y ps $.  $d y A $.
    rexlimivv.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (Contributed by NM, 17-Feb-2004.) $)
    rexlimivv $p |- ( E. x e. A E. y e. B ph -> ps ) $=
      ( wrex cv wcel rexlimdva rexlimiv ) ADFHBCECIEJABDFGKL $.
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    rexlimdvv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 22-Jul-2004.) $)
    rexlimdvv $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( wrex cv wcel wa wi expdimp rexlimdv rexlimdva ) ABEGICDFADJFKZLBCEGAQEJ
      GKBCMHNOP $.
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    rexlimdvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (Contributed by NM, 18-Jun-2014.) $)
    rexlimdvva $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( cv wcel wa wi ex rexlimdvv ) ABCDEFGADIFJEIGJKBCLHMN $.
  $}

  $( Theorem 19.26 of [Margaris] p. 90 with restricted quantifiers.
     (Contributed by NM, 28-Jan-1997.)  (Proof shortened by Andrew Salmon,
     30-May-2011.) $)
  r19.26 $p |- ( A. x e. A ( ph /\ ps ) <->
               ( A. x e. A ph /\ A. x e. A ps ) ) $=
    ( wa wral simpl ralimi simpr jca pm3.2 ral2imi imp impbii ) ABEZCDFZACDFZBC
    DFZEPQROACDABGHOBCDABIHJQRPABOCDABKLMN $.

  $( Theorem 19.26 of [Margaris] p. 90 with 2 restricted quantifiers.
     (Contributed by NM, 10-Aug-2004.) $)
  r19.26-2 $p |- ( A. x e. A A. y e. B ( ph /\ ps ) <->
               ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) $=
    ( wa wral r19.26 ralbii bitri ) ABGDFHZCEHADFHZBDFHZGZCEHMCEHNCEHGLOCEABDFI
    JMNCEIK $.

  $( Theorem 19.26 of [Margaris] p. 90 with 3 restricted quantifiers.
     (Contributed by FL, 22-Nov-2010.) $)
  r19.26-3 $p |- ( A. x e. A ( ph /\ ps /\ ch ) <->
               ( A. x e. A ph /\ A. x e. A ps /\ A. x e. A ch ) ) $=
    ( w3a wral wa df-3an ralbii r19.26 anbi1i bitr4i 3bitri ) ABCFZDEGABHZCHZDE
    GPDEGZCDEGZHZADEGZBDEGZSFZOQDEABCIJPCDEKTUAUBHZSHUCRUDSABDEKLUAUBSIMN $.

  $( Theorem 19.26 of [Margaris] p. 90 with mixed quantifiers.  (Contributed by
     NM, 22-Feb-2004.) $)
  r19.26m $p |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <->
               ( A. x e. A ph /\ A. x e. B ps ) ) $=
    ( cv wcel wi wa wal wral 19.26 df-ral anbi12i bitr4i ) CFZDGAHZPEGBHZICJQCJ
    ZRCJZIACDKZBCEKZIQRCLUASUBTACDMBCEMNO $.

  $( Distribute a restricted universal quantifier over a biconditional.
     Theorem 19.15 of [Margaris] p. 90 with restricted quantification.
     (Contributed by NM, 6-Oct-2003.) $)
  ralbi $p |- ( A. x e. A ( ph <-> ps ) ->
               ( A. x e. A ph <-> A. x e. A ps ) ) $=
    ( wb wral nfra1 cv wcel rsp imp ralbida ) ABEZCDFZABCDMCDGNCHDIMMCDJKL $.

  $( Split a biconditional and distribute quantifier.  (Contributed by NM,
     3-Jun-2012.) $)
  ralbiim $p |- ( A. x e. A ( ph <-> ps ) <->
             ( A. x e. A ( ph -> ps ) /\ A. x e. A ( ps -> ph ) ) ) $=
    ( wb wral wi wa dfbi2 ralbii r19.26 bitri ) ABEZCDFABGZBAGZHZCDFNCDFOCDFHMP
    CDABIJNOCDKL $.

  ${
    $d x ps $.
    $( Restricted version of one direction of Theorem 19.27 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)
       (Contributed by NM, 3-Jun-2004.)  (Proof shortened by Andrew Salmon,
       30-May-2011.) $)
    r19.27av $p |- ( ( A. x e. A ph /\ ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa cv wcel ax-1 ralrimiv anim2i r19.26 sylibr ) ACDEZBFNBCDEZFABFC
      DEBONBBCDBCGDHIJKABCDLM $.
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.28 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)
       (Contributed by NM, 2-Apr-2004.) $)
    r19.28av $p |- ( ( ph /\ A. x e. A ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa r19.27av ancom ralbii 3imtr4i ) BCDEZAFBAFZCDEAKFABFZCDEBACDGAK
      HMLCDABHIJ $.
  $}

  $( Theorem 19.29 of [Margaris] p. 90 with restricted quantifiers.
     (Contributed by NM, 31-Aug-1999.)  (Proof shortened by Andrew Salmon,
     30-May-2011.) $)
  r19.29 $p |- ( ( A. x e. A ph /\ E. x e. A ps ) ->
               E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa wi pm3.2 ralimi rexim syl imp ) ACDEZBCDFZABGZCDFZNBPHZCDEOQ
    HARCDABIJBPCDKLM $.

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with restricted
     quantifiers.  (Contributed by NM, 31-Aug-1999.) $)
  r19.29r $p |- ( ( E. x e. A ph /\ A. x e. A ps ) ->
                E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa r19.29 ancom rexbii 3imtr4i ) BCDEZACDFZGBAGZCDFMLGABGZCDFBA
    CDHMLIONCDABIJK $.

  $( Theorem 19.30 of [Margaris] p. 90 with restricted quantifiers.
     (Contributed by Scott Fenton, 25-Feb-2011.) $)
  r19.30 $p |- ( A. x e. A ( ph \/ ps ) ->
                 ( A. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wral wrex ralim orcom df-or bitri ralbii dfrex2 orbi2i imor 3bitr4i
    wo 3imtr4i ) BEZAFZCDGTCDGZACDGZFZABRZCDGUCBCDHZRZTACDIUEUACDUEBARUAABJBAKL
    MUCUBEZRUHUCRUGUDUCUHJUFUHUCBCDNOUBUCPQS $.

  ${
    $d x ph $.
    $( Theorem 19.32 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by NM, 25-Nov-2003.) $)
    r19.32v $p |- ( A. x e. A ( ph \/ ps ) <-> ( ph \/ A. x e. A ps ) ) $=
      ( wn wi wral wo r19.21v df-or ralbii 3bitr4i ) AEZBFZCDGMBCDGZFABHZCDGAOH
      MBCDIPNCDABJKAOJL $.
  $}

  $( Restricted quantifier version of Theorem 19.35 of [Margaris] p. 90.
     (Contributed by NM, 20-Sep-2003.) $)
  r19.35 $p |- ( E. x e. A ( ph -> ps ) <->
               ( A. x e. A ph -> E. x e. A ps ) ) $=
    ( wral wn wi wrex r19.26 annim ralbii df-an 3bitr3i con2bii dfrex2 3bitr4ri
    wa imbi2i ) ACDEZBFZCDEZFZGZABGZFZCDEZFSBCDHZGUDCDHUFUCATQZCDESUAQUFUCFATCD
    IUHUECDABJKSUALMNUGUBSBCDORUDCDOP $.

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.36 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty.  (Contributed by NM, 22-Oct-2003.) $)
    r19.36av $p |- ( E. x e. A ( ph -> ps ) -> ( A. x e. A ph -> ps ) ) $=
      ( wi wrex wral r19.35 cv wcel idd rexlimiv imim2i sylbi ) ABECDFACDGZBCDF
      ZEOBEABCDHPBOBBCDCIDJBKLMN $.
  $}

  ${
    r19.37.1 $e |- F/ x ph $.
    $( Restricted version of one direction of Theorem 19.37 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)
       (Contributed by FL, 13-May-2012.)  (Revised by Mario Carneiro,
       11-Dec-2016.) $)
    r19.37 $p |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) $=
      ( wi wrex wral r19.35 cv wcel ax-1 ralrimi imim1i sylbi ) ABFCDGACDHZBCDG
      ZFAQFABCDIAPQAACDEACJDKLMNO $.
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.37 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)
       (Contributed by NM, 2-Apr-2004.) $)
    r19.37av $p |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) $=
      ( nfv r19.37 ) ABCDACEF $.
  $}

  $( Restricted quantifier version of Theorem 19.40 of [Margaris] p. 90.
     (Contributed by NM, 2-Apr-2004.) $)
  r19.40 $p |- ( E. x e. A ( ph /\ ps ) ->
               ( E. x e. A ph /\ E. x e. A ps ) ) $=
    ( wa wrex simpl reximi simpr jca ) ABEZCDFACDFBCDFKACDABGHKBCDABIHJ $.

  ${
    r19.41.1 $e |- F/ x ps $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90.
       (Contributed by NM, 1-Nov-2010.) $)
    r19.41 $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( cv wcel wa wex wrex anass exbii 19.41 bitr3i df-rex anbi1i 3bitr4i ) CF
      DGZABHZHZCIZRAHZCIZBHZSCDJACDJZBHUAUBBHZCIUDUFTCRABKLUBBCEMNSCDOUEUCBACDO
      PQ $.
  $}

  ${
    $d x ps $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90.
       (Contributed by NM, 17-Dec-2003.) $)
    r19.41v $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( nfv r19.41 ) ABCDBCEF $.
  $}

  ${
    $d x ph $.
    $( Restricted version of Theorem 19.42 of [Margaris] p. 90.  (Contributed
       by NM, 27-May-1998.) $)
    r19.42v $p |- ( E. x e. A ( ph /\ ps ) <-> ( ph /\ E. x e. A ps ) ) $=
      ( wa wrex r19.41v ancom rexbii 3bitr4i ) BAEZCDFBCDFZAEABEZCDFALEBACDGMKC
      DABHIALHJ $.
  $}

  $( Restricted version of Theorem 19.43 of [Margaris] p. 90.  (Contributed by
     NM, 27-May-1998.)  (Proof shortened by Andrew Salmon, 30-May-2011.) $)
  r19.43 $p |- ( E. x e. A ( ph \/ ps ) <->
               ( E. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wrex wral wo r19.35 df-or rexbii ralnex imbi1i bitr4i 3bitr4i ) AEZ
    BFZCDGQCDHZBCDGZFZABIZCDGACDGZTIZQBCDJUBRCDABKLUDUCEZTFUAUCTKSUETACDMNOP $.

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.44 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty.  (Contributed by NM, 2-Apr-2004.) $)
    r19.44av $p |- ( E. x e. A ( ph \/ ps ) -> ( E. x e. A ph \/ ps ) ) $=
      ( wo wrex r19.43 cv wcel idd rexlimiv orim2i sylbi ) ABECDFACDFZBCDFZENBE
      ABCDGOBNBBCDCHDIBJKLM $.
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.45 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)
       (Contributed by NM, 2-Apr-2004.) $)
    r19.45av $p |- ( E. x e. A ( ph \/ ps ) -> ( ph \/ E. x e. A ps ) ) $=
      ( wo wrex r19.43 cv wcel idd rexlimiv orim1i sylbi ) ABECDFACDFZBCDFZEAOE
      ABCDGNAOAACDCHDIAJKLM $.
  $}

  ${
    $d x y $.
    ralcomf.1 $e |- F/_ y A $.
    ralcomf.2 $e |- F/_ x B $.
    $( Commutation of restricted quantifiers.  (Contributed by Mario Carneiro,
       14-Oct-2016.) $)
    ralcomf $p |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) $=
      ( cv wcel wa wi wal wral ancomsimp 2albii alcom bitri r2alf 3bitr4i ) BHD
      IZCHEIZJAKZCLBLZUATJAKZBLCLZACEMBDMABDMCEMUCUDCLBLUEUBUDBCTUAANOUDBCPQABC
      DEFRACBEDGRS $.

    $( Commutation of restricted quantifiers.  (Contributed by Mario Carneiro,
       14-Oct-2016.) $)
    rexcomf $p |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) $=
      ( cv wcel wa wex wrex ancom anbi1i 2exbii excom bitri r2exf 3bitr4i ) BHD
      IZCHEIZJZAJZCKBKZUATJZAJZBKCKZACELBDLABDLCELUDUFCKBKUGUCUFBCUBUEATUAMNOUF
      BCPQABCDEFRACBEDGRS $.
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers.  (Contributed by NM,
       13-Oct-1999.)  (Revised by Mario Carneiro, 14-Oct-2016.) $)
    ralcom $p |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) $=
      ( nfcv ralcomf ) ABCDECDFBEFG $.

    $( Commutation of restricted quantifiers.  (Contributed by NM,
       19-Nov-1995.)  (Revised by Mario Carneiro, 14-Oct-2016.) $)
    rexcom $p |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) $=
      ( nfcv rexcomf ) ABCDECDFBEFG $.
  $}

  ${
    $d y z A $.  $d x z B $.  $d x y C $.
    $( Swap 1st and 3rd restricted existential quantifiers.  (Contributed by
       NM, 8-Apr-2015.) $)
    rexcom13 $p |- ( E. x e. A E. y e. B E. z e. C ph
         <-> E. z e. C E. y e. B E. x e. A ph ) $=
      ( wrex rexcom rexbii 3bitri ) ADGHZCFHBEHLBEHZCFHABEHZDGHZCFHNCFHDGHLBCEF
      IMOCFABDEGIJNCDFGIK $.
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x y C $.  $d x y z D $.
    $( Rotate existential restricted quantifiers twice.  (Contributed by NM,
       8-Apr-2015.) $)
    rexrot4 $p |- ( E. x e. A E. y e. B E. z e. C E. w e. D ph
        <-> E. z e. C E. w e. D E. x e. A E. y e. B ph ) $=
      ( wrex rexcom13 rexbii bitri ) AEIJDHJCGJZBFJACGJZDHJEIJZBFJOBFJEIJDHJNPB
      FACDEGHIKLOBEDFIHKM $.
  $}

  ${
    $d y z A $.  $d x z A $.
    $( Commutation of restricted quantifiers.  Note that ` x ` and ` y `
       needn't be distinct (this makes the proof longer).  (Contributed by NM,
       24-Nov-1994.)  (Proof shortened by Mario Carneiro, 17-Oct-2016.) $)
    ralcom2 $p |- ( A. x e. A A. y e. A ph -> A. y e. A A. x e. A ph ) $=
      ( cv wceq wal wral wi wcel wb eleq1 dral1 df-ral 3bitr4g wa nfnae ralrimi
      nfan ex sps imbi1d bicomd imbi12d biimpd wn nfra2 nfra1 wnfc nfcvf adantr
      nfcvd nfeld nfan1 rsp2 ancomsd expdimp adantll pm2.61i ) BEZCEZFZBGZACDHZ
      BDHZABDHZCDHZIVCVEVGVCUTDJZVDIZBGVADJZVFIZCGVEVGVIVKBCVCVHVJVDVFVBVHVJKBU
      TVADLUAZVCVJAIZCGZVHAIZBGZVDVFVCVPVNVOVMBCVCVHVJAVLUBMUCACDNABDNOUDMVDBDN
      VFCDNOUEVCUFZVEVGVQVEPZVFCDVQVECBCCQABCDDUGSVRVJVFVRVJPABDVRVJBVQVEBBCBQV
      DBDUHSVRBVADVQBVAUIVEBCUJUKVRBDULUMUNVEVJVOVQVEVJVHAVEVHVJAABCDDUOUPUQURR
      TRTUS $.
  $}

  ${
    $( A commutative law for restricted quantifiers that swaps the domain of
       the restriction.  (Contributed by NM, 22-Feb-2004.) $)
    ralcom3 $p |- ( A. x e. A ( x e. B -> ph ) <->
                    A. x e. B ( x e. A -> ph ) ) $=
      ( cv wcel wi wral pm2.04 ralimi2 impbii ) BEZDFZAGZBCHLCFZAGZBDHNPBCDOMAI
      JPNBDCMOAIJK $.
  $}

  ${
    $d y A $.  $d x B $.  $d x y $.
    reean.1 $e |- F/ y ph $.
    reean.2 $e |- F/ x ps $.
    $( Rearrange existential quantifiers.  (Contributed by NM, 27-Oct-2010.)
       (Proof shortened by Andrew Salmon, 30-May-2011.) $)
    reean $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( cv wcel wa wex wrex an4 2exbii nfv nfan eean bitri df-rex r2ex anbi12i
      3bitr4i ) CIEJZDIFJZKABKZKZDLCLZUDAKZCLZUEBKZDLZKZUFDFMCEMACEMZBDFMZKUHUI
      UKKZDLCLUMUGUPCDUDUEABNOUIUKCDUDADUDDPGQUEBCUECPHQRSUFCDEFUAUNUJUOULACETB
      DFTUBUC $.
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y $.  $d y A $.  $d x B $.
    $( Rearrange existential quantifiers.  (Contributed by NM, 9-May-1999.) $)
    reeanv $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( nfv reean ) ABCDEFADGBCGH $.
  $}

  ${
    $d ph y z $.  $d ps x z $.  $d ch x y $.  $d A y $.  $d B x z $.
    $d C x y $.
    $( Rearrange three existential quantifiers.  (Contributed by Jeff Madsen,
       11-Jun-2010.) $)
    3reeanv $p |- ( E. x e. A E. y e. B E. z e. C ( ph /\ ps /\ ch )
                      <-> ( E. x e. A ph /\ E. y e. B ps /\ E. z e. C ch ) ) $=
      ( wa wrex w3a r19.41v reeanv anbi1i bitri df-3an 2rexbii rexbii 3bitr4i )
      ABJZEHKZCFIKZJZDGKZADGKZBEHKZJZUCJZABCLZFIKEHKZDGKUFUGUCLUEUBDGKZUCJUIUBU
      CDGMULUHUCABDEGHNOPUKUDDGUKUACJZFIKEHKUDUJUMEFHIABCQRUACEFHINPSUFUGUCQT
      $.
  $}

  ${
    $d ph y $.  $d ps x $.  $d A y $.  $d B x $.  $d x y $.
    $( Distribute quantification over "or".  (Contributed by Jeff Madsen,
       19-Jun-2010.) $)
    2ralor $p |- ( A. x e. A A. y e. B ( ph \/ ps ) <->
                  ( A. x e. A ph \/ A. y e. B ps ) ) $=
      ( wo wral wn wrex wa rexnal anbi12i rexbii bitr3i reeanv 3bitr3ri 3bitr4i
      ioran con4bii ) ABGZDFHZCEHZACEHZBDFHZGZAIZCEJZBIZDFJZKZUDIZUEIZKUCIZUFIU
      HULUJUMACELBDFLMUGUIKZDFJZCEJUBIZCEJUKUNUPUQCEUPUAIZDFJUQURUODFABSNUADFLO
      NUGUICDEFPUBCELQUDUESRT $.
  $}

  $( ` x ` is not free in ` E! x e. A ph ` .  (Contributed by NM,
     19-Mar-1997.) $)
  nfreu1 $p |- F/ x E! x e. A ph $=
    ( wreu cv wcel wa weu df-reu nfeu1 nfxfr ) ABCDBECFAGZBHBABCILBJK $.

  $( ` x ` is not free in ` E* x e. A ph ` .  (Contributed by NM,
     16-Jun-2017.) $)
  nfrmo1 $p |- F/ x E* x e. A ph $=
    ( wrmo cv wcel wa wmo df-rmo nfmo1 nfxfr ) ABCDBECFAGZBHBABCILBJK $.

  ${
    $d x z $.  $d y z $.  $d A z $.  $d ph z $.
    nfreud.1 $e |- F/ y ph $.
    nfreud.2 $e |- ( ph -> F/_ x A ) $.
    nfreud.3 $e |- ( ph -> F/ x ps ) $.
    $( Deduction version of ~ nfreu .  (Contributed by NM, 15-Feb-2013.)
       (Revised by Mario Carneiro, 8-Oct-2016.) $)
    nfreud $p |- ( ph -> F/ x E! y e. A ps ) $=
      ( wreu cv wcel wa weu df-reu wceq wal wn wnfc nfcvf adantr adantl nfeud2
      nfeld wnf nfand nfxfrd ) BDEIDJZEKZBLZDMACBDENAUICDFACJUGOCPQZLZUHBCUKCUG
      EUJCUGRACDSUAACERUJGTUCABCUDUJHTUEUBUF $.

    $( Deduction version of ~ nfrmo .  (Contributed by NM, 17-Jun-2017.) $)
    nfrmod $p |- ( ph -> F/ x E* y e. A ps ) $=
      ( wrmo cv wcel wa wmo df-rmo weq wal wn wnfc nfcvf adantr nfeld wnf nfand
      adantl nfmod2 nfxfrd ) BDEIDJZEKZBLZDMACBDENAUICDFACDOCPQZLZUHBCUKCUGEUJC
      UGRACDSUDACERUJGTUAABCUBUJHTUCUEUF $.
  $}

  ${
    nfreu.1 $e |- F/_ x A $.
    nfreu.2 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for restricted uniqueness.
       (Contributed by NM, 30-Oct-2010.)  (Revised by Mario Carneiro,
       8-Oct-2016.) $)
    nfreu $p |- F/ x E! y e. A ph $=
      ( wreu wnf wtru nftru wnfc a1i nfreud trud ) ACDGBHIABCDCJBDKIELABHIFLMN
      $.

    $( Bound-variable hypothesis builder for restricted uniqueness.
       (Contributed by NM, 16-Jun-2017.) $)
    nfrmo $p |- F/ x E* y e. A ph $=
      ( wrmo cv wcel wa wmo df-rmo wnf wtru nftru weq wal wn nfcvf a1i adantl
      wnfc nfeld nfand nfmod2 trud nfxfr ) ACDGCHZDIZAJZCKZBACDLUKBMNUJBCCOBCPB
      QRZUJBMNULUIABULBUHDBCSBDUBULETUCABMULFTUDUAUEUFUG $.
  $}

  $( An "identity" law of concretion for restricted abstraction.  Special case
     of Definition 2.1 of [Quine] p. 16.  (Contributed by NM, 9-Oct-2003.) $)
  rabid $p |- ( x e. { x e. A | ph } <-> ( x e. A /\ ph ) ) $=
    ( cv wcel wa crab df-rab abeq2i ) BDCEAFBABCGABCHI $.

  ${
    $d x A $.
    $( An "identity" law for restricted class abstraction.  (Contributed by NM,
       9-Oct-2003.)  (Proof shortened by Andrew Salmon, 30-May-2011.) $)
    rabid2 $p |- ( A = { x e. A | ph } <-> A. x e. A ph ) $=
      ( cv wcel wa cab wceq wi wal crab abeq2 pm4.71 albii bitr4i df-rab eqeq2i
      wral wb df-ral 3bitr4i ) CBDCEZAFZBGZHZUBAIZBJZCABCKZHABCRUEUBUCSZBJUGUCB
      CLUFUIBUBAMNOUHUDCABCPQABCTUA $.
  $}

  ${
    $( Equivalent wff's correspond to equal restricted class abstractions.
       Closed theorem form of ~ rabbidva .  (Contributed by NM,
       25-Nov-2013.) $)
    rabbi $p |- ( A. x e. A ( ps <-> ch )
         <-> { x e. A | ps } = { x e. A | ch } ) $=
      ( cv wcel wa wb wal cab wceq wral crab abbi wi df-ral pm5.32 albii df-rab
      bitri eqeq12i 3bitr4i ) CEDFZAGZUCBGZHZCIZUDCJZUECJZKABHZCDLZACDMZBCDMZKU
      DUECNUKUCUJOZCIUGUJCDPUNUFCUCABQRTULUHUMUIACDSBCDSUAUB $.
  $}

  $( Swap with a membership relation in a restricted class abstraction.
     (Contributed by NM, 4-Jul-2005.) $)
  rabswap $p |- { x e. A | x e. B } = { x e. B | x e. A } $=
    ( cv wcel wa cab crab ancom abbii df-rab 3eqtr4i ) ADZBEZMCEZFZAGONFZAGOABH
    NACHPQANOIJOABKNACKL $.

  ${
    $d x y $.
    $( The abstraction variable in a restricted class abstraction isn't free.
       (Contributed by NM, 19-Mar-1997.) $)
    nfrab1 $p |- F/_ x { x e. A | ph } $=
      ( crab cv wcel wa cab df-rab nfab1 nfcxfr ) BABCDBECFAGZBHABCILBJK $.
  $}

  ${
    $d x z $.  $d y z $.  $d z A $.
    nfrab.1 $e |- F/ x ph $.
    nfrab.2 $e |- F/_ x A $.
    $( A variable not free in a wff remains so in a restricted class
       abstraction.  (Contributed by NM, 13-Oct-2003.)  (Revised by Mario
       Carneiro, 9-Oct-2016.) $)
    nfrab $p |- F/_ x { y e. A | ph } $=
      ( vz crab cv wcel wa cab df-rab wnfc wtru nftru wceq wal wn wnf nfcri a1i
      eleq1 dvelimnf nfand adantl nfabd2 trud nfcxfr ) BACDHCIZDJZAKZCLZACDMBUM
      NOULBCCPBIUJQBRSZULBTOUNUKABGIZDJUKBCGBGDFUAUOUJDUCUDABTUNEUBUEUFUGUHUI
      $.
  $}

  ${
    reubida.1 $e |- F/ x ph $.
    reubida.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by Mario Carneiro, 19-Nov-2016.) $)
    reubida $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( cv wcel wa weu wreu pm5.32da eubid df-reu 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
  $}

  ${
    $d x ph $.
    reubidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 13-Nov-2004.) $)
    reubidva $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( nfv reubida ) ABCDEADGFH $.
  $}

  ${
    $d x ph $.
    reubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 17-Oct-1996.) $)
    reubidv $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( wb cv wcel adantr reubidva ) ABCDEABCGDHEIFJK $.
  $}

  ${
    reubiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule).  (Contributed by NM, 14-Nov-2004.) $)
    reubiia $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( cv wcel wa weu wreu pm5.32i eubii df-reu 3bitr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
  $}

  ${
    reubii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule).  (Contributed by NM, 22-Oct-1999.) $)
    reubii $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( wb cv wcel a1i reubiia ) ABCDABFCGDHEIJ $.
  $}

  ${
    rmobida.1 $e |- F/ x ph $.
    rmobida.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 16-Jun-2017.) $)
    rmobida $p |- ( ph -> ( E* x e. A ps <-> E* x e. A ch ) ) $=
      ( cv wcel wa wmo wrmo pm5.32da mobid df-rmo 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
  $}

  ${
    $d x ph $.
    rmobidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 16-Jun-2017.) $)
    rmobidva $p |- ( ph -> ( E* x e. A ps <-> E* x e. A ch ) ) $=
      ( nfv rmobida ) ABCDEADGFH $.
  $}

  ${
    $d x ph $.
    rmobidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule).  (Contributed by NM, 16-Jun-2017.) $)
    rmobidv $p |- ( ph -> ( E* x e. A ps <-> E* x e. A ch ) ) $=
      ( wb cv wcel adantr rmobidva ) ABCDEABCGDHEIFJK $.
  $}

  ${
    rmobiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule).  (Contributed by NM, 16-Jun-2017.) $)
    rmobiia $p |- ( E* x e. A ph <-> E* x e. A ps ) $=
      ( cv wcel wa wmo wrmo pm5.32i mobii df-rmo 3bitr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
  $}

  ${
    rmobii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule).  (Contributed by NM, 16-Jun-2017.) $)
    rmobii $p |- ( E* x e. A ph <-> E* x e. A ps ) $=
      ( wb cv wcel a1i rmobiia ) ABCDABFCGDHEIJ $.
  $}

  ${
    $d y A $.  $d y B $.
    raleq1f.1 $e |- F/_ x A $.
    raleq1f.2 $e |- F/_ x B $.
    $( Equality theorem for restricted universal quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Contributed by NM, 7-Mar-2004.)  (Revised by Andrew Salmon,
       11-Jul-2011.) $)
    raleqf $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( wceq cv wcel wi wal wral nfeq eleq2 imbi1d albid df-ral 3bitr4g ) CDGZB
      HZCIZAJZBKTDIZAJZBKABCLABDLSUBUDBBCDEFMSUAUCACDTNOPABCQABDQR $.

    $( Equality theorem for restricted existential quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Contributed by NM, 9-Oct-2003.)  (Revised by Andrew Salmon,
       11-Jul-2011.) $)
    rexeqf $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( wceq cv wcel wa wex wrex nfeq eleq2 anbi1d exbid df-rex 3bitr4g ) CDGZB
      HZCIZAJZBKTDIZAJZBKABCLABDLSUBUDBBCDEFMSUAUCACDTNOPABCQABDQR $.

    $( Equality theorem for restricted uniqueness quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Contributed by NM, 5-Apr-2004.)  (Revised by Andrew Salmon,
       11-Jul-2011.) $)
    reueq1f $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( wceq cv wcel wa weu wreu nfeq eleq2 anbi1d eubid df-reu 3bitr4g ) CDGZB
      HZCIZAJZBKTDIZAJZBKABCLABDLSUBUDBBCDEFMSUAUCACDTNOPABCQABDQR $.

    $( Equality theorem for restricted uniqueness quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Contributed by Alexander van der Vekens, 17-Jun-2017.) $)
    rmoeq1f $p |- ( A = B -> ( E* x e. A ph <-> E* x e. B ph ) ) $=
      ( wceq cv wcel wa wmo wrmo nfeq eleq2 anbi1d mobid df-rmo 3bitr4g ) CDGZB
      HZCIZAJZBKTDIZAJZBKABCLABDLSUBUDBBCDEFMSUAUCACDTNOPABCQABDQR $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted universal quantifier.  (Contributed by
       NM, 16-Nov-1995.) $)
    raleq $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( nfcv raleqf ) ABCDBCEBDEF $.

    $( Equality theorem for restricted existential quantifier.  (Contributed by
       NM, 29-Oct-1995.) $)
    rexeq $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( nfcv rexeqf ) ABCDBCEBDEF $.

    $( Equality theorem for restricted uniqueness quantifier.  (Contributed by
       NM, 5-Apr-2004.) $)
    reueq1 $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( nfcv reueq1f ) ABCDBCEBDEF $.

    $( Equality theorem for restricted uniqueness quantifier.  (Contributed by
       Alexander van der Vekens, 17-Jun-2017.) $)
    rmoeq1 $p |- ( A = B -> ( E* x e. A ph <-> E* x e. B ph ) ) $=
      ( nfcv rmoeq1f ) ABCDBCEBDEF $.
  $}

  ${
    $d A x $.  $d B x $.
    raleq1i.1 $e |- A = B $.
    $( Equality inference for restricted universal qualifier.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    raleqi $p |- ( A. x e. A ph <-> A. x e. B ph ) $=
      ( wceq wral wb raleq ax-mp ) CDFABCGABDGHEABCDIJ $.

    $( Equality inference for restricted existential qualifier.  (Contributed
       by Mario Carneiro, 23-Apr-2015.) $)
    rexeqi $p |- ( E. x e. A ph <-> E. x e. B ph ) $=
      ( wceq wrex wb rexeq ax-mp ) CDFABCGABDGHEABCDIJ $.
  $}

  ${
    $d x A $.  $d x B $.
    raleq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restricted universal quantifier.  (Contributed by
       NM, 13-Nov-2005.) $)
    raleqdv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) $=
      ( wceq wral wb raleq syl ) ADEGBCDHBCEHIFBCDEJK $.

    $( Equality deduction for restricted existential quantifier.  (Contributed
       by NM, 14-Jan-2007.) $)
    rexeqdv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) $=
      ( wceq wrex wb rexeq syl ) ADEGBCDHBCEHIFBCDEJK $.
  $}

  ${
    $d x A $.  $d x B $.
    raleqd.1 $e |- ( A = B -> ( ph <-> ps ) ) $.
    $( Equality deduction for restricted universal quantifier.  (Contributed by
       NM, 16-Nov-1995.) $)
    raleqbi1dv $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ps ) ) $=
      ( wceq wral raleq ralbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.

    $( Equality deduction for restricted existential quantifier.  (Contributed
       by NM, 18-Mar-1997.) $)
    rexeqbi1dv $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ps ) ) $=
      ( wceq wrex rexeq rexbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.

    $( Equality deduction for restricted uniqueness quantifier.  (Contributed
       by NM, 5-Apr-2004.) $)
    reueqd $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ps ) ) $=
      ( wceq wreu reueq1 reubidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.

    $( Equality deduction for restricted uniqueness quantifier.  (Contributed
       by Alexander van der Vekens, 17-Jun-2017.) $)
    rmoeqd $p |- ( A = B -> ( E* x e. A ph <-> E* x e. B ps ) ) $=
      ( wceq wrmo rmoeq1 rmobidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    raleqbidv.1 $e |- ( ph -> A = B ) $.
    raleqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality deduction for restricted universal quantifier.  (Contributed by
       NM, 6-Nov-2007.) $)
    raleqbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( wral raleqdv ralbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.

    $( Equality deduction for restricted universal quantifier.  (Contributed by
       NM, 6-Nov-2007.) $)
    rexeqbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( wrex rexeqdv rexbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    raleqbidva.1 $e |- ( ph -> A = B ) $.
    raleqbidva.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equality deduction for restricted universal quantifier.  (Contributed by
       Mario Carneiro, 5-Jan-2017.) $)
    raleqbidva $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( wral ralbidva raleqdv bitrd ) ABDEICDEICDFIABCDEHJACDEFGKL $.

    $( Equality deduction for restricted universal quantifier.  (Contributed by
       Mario Carneiro, 5-Jan-2017.) $)
    rexeqbidva $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( wrex rexbidva rexeqdv bitrd ) ABDEICDEICDFIABCDEHJACDEFGKL $.
  $}

  $( Unrestricted "at most one" implies restricted "at most one".  (Contributed
     by NM, 16-Jun-2017.) $)
  mormo $p |- ( E* x ph -> E* x e. A ph ) $=
    ( wmo cv wcel wa wrmo moan df-rmo sylibr ) ABDBECFZAGBDABCHALBIABCJK $.

  $( Restricted uniqueness in terms of "at most one."  (Contributed by NM,
     23-May-1999.)  (Revised by NM, 16-Jun-2017.) $)
  reu5 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x e. A ph ) ) $=
    ( cv wcel wa weu wex wmo wreu wrex eu5 df-reu df-rex df-rmo anbi12i 3bitr4i
    wrmo ) BDCEAFZBGSBHZSBIZFABCJABCKZABCRZFSBLABCMUBTUCUAABCNABCOPQ $.

  $( Restricted unique existence implies restricted existence.  (Contributed by
     NM, 19-Aug-1999.) $)
  reurex $p |- ( E! x e. A ph -> E. x e. A ph ) $=
    ( wreu wrex wrmo reu5 simplbi ) ABCDABCEABCFABCGH $.

  $( Restricted existential uniqueness implies restricted "at most one."
     (Contributed by NM, 16-Jun-2017.) $)
  reurmo $p |- ( E! x e. A ph -> E* x e. A ph ) $=
    ( wreu wrex wrmo reu5 simprbi ) ABCDABCEABCFABCGH $.

  $( Restricted "at most one" in term of uniqueness.  (Contributed by NM,
     16-Jun-2017.) $)
  rmo5 $p |- ( E* x e. A ph <-> ( E. x e. A ph -> E! x e. A ph ) ) $=
    ( cv wcel wa wmo wex weu wrmo wrex wreu df-mo df-rmo df-rex imbi12i 3bitr4i
    wi df-reu ) BDCEAFZBGTBHZTBIZRABCJABCKZABCLZRTBMABCNUCUAUDUBABCOABCSPQ $.

  $( Nonexistence implies restricted "at most one".  (Contributed by NM,
     17-Jun-2017.) $)
  nrexrmo $p |- ( -. E. x e. A ph -> E* x e. A ph ) $=
    ( wrex wn wreu wi wrmo pm2.21 rmo5 sylibr ) ABCDZELABCFZGABCHLMIABCJK $.

  ${
    $d x z $.  $d y z $.  $d z A $.  $d z ps $.  $d z ph $.
    cbvralf.1 $e |- F/_ x A $.
    cbvralf.2 $e |- F/_ y A $.
    cbvralf.3 $e |- F/ y ph $.
    cbvralf.4 $e |- F/ x ps $.
    cbvralf.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by NM, 7-Mar-2004.)  (Revised by Mario Carneiro,
       9-Oct-2016.) $)
    cbvralf $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vz cv wcel wi wal wral wsb nfv nfcri nfim nfs1v wceq eleq1 sbequ12 nfsb
      imbi12d cbval sbequ sbie syl6bb bitri df-ral 3bitr4i ) CLZEMZANZCOZDLZEMZ
      BNZDOZACEPBDEPUQKLZEMZACKQZNZKOVAUPVECKUPKRVCVDCCKEFSACKUATUNVBUBUOVCAVDU
      NVBEUCACKUDUFUGVEUTKDVCVDDDKEGSACKDHUETUTKRVBURUBZVCUSVDBVBUREUCVFVDACDQB
      AKDCUHABCDIJUIUJUFUGUKACEULBDEULUM $.

    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by FL, 27-Apr-2008.)  (Revised by Mario Carneiro,
       9-Oct-2016.) $)
    cbvrexf $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( wn wral wrex nfn cv wceq notbid cbvralf notbii dfrex2 3bitr4i ) AKZCELZ
      KBKZDELZKACEMBDEMUCUEUBUDCDEFGADHNBCINCODOPABJQRSACETBDETUA $.
  $}

  ${
    $d x z A $.  $d y z A $.  $d z ph $.  $d z ps $.
    cbvral.1 $e |- F/ y ph $.
    cbvral.2 $e |- F/ x ps $.
    cbvral.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by NM, 31-Jul-2003.) $)
    cbvral $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( nfcv cbvralf ) ABCDECEIDEIFGHJ $.

    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by NM, 31-Jul-2003.)  (Proof shortened by Andrew Salmon,
       8-Jun-2011.) $)
    cbvrex $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( nfcv cbvrexf ) ABCDECEIDEIFGHJ $.

    $( Change the bound variable of a restricted uniqueness quantifier using
       implicit substitution.  (Contributed by Mario Carneiro, 15-Oct-2016.) $)
    cbvreu $p |- ( E! x e. A ph <-> E! y e. A ps ) $=
      ( vz cv wcel wa weu wreu wsb nfv sb8eu sban eubii df-reu anbi1i nfsb nfan
      clelsb3 wceq eleq1 sbequ sbie syl6bb anbi12d cbveu bitri 3bitri 3bitr4i )
      CJEKZALZCMZDJZEKZBLZDMZACENBDENUQUPCIOZIMUOCIOZACIOZLZIMZVAUPCIUPIPQVBVEI
      UOACIRSVFIJZEKZVDLZIMVAVEVIIVCVHVDICEUDUASVIUTIDVHVDDVHDPACIDFUBUCUTIPVGU
      RUEZVHUSVDBVGUREUFVJVDACDOBAIDCUGABCDGHUHUIUJUKULUMACETBDETUN $.

    $( Change the bound variable of restricted "at most one" using implicit
       substitution.  (Contributed by NM, 16-Jun-2017.) $)
    cbvrmo $p |- ( E* x e. A ph <-> E* y e. A ps ) $=
      ( wrex wreu wi wrmo cbvrex cbvreu imbi12i rmo5 3bitr4i ) ACEIZACEJZKBDEIZ
      BDEJZKACELBDELRTSUAABCDEFGHMABCDEFGHNOACEPBDEPQ $.
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.  $d z x ps $.
    cbvralv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a restricted universal quantifier using
       implicit substitution.  (Contributed by NM, 28-Jan-1997.) $)
    cbvralv $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( nfv cbvral ) ABCDEADGBCGFH $.

    $( Change the bound variable of a restricted existential quantifier using
       implicit substitution.  (Contributed by NM, 2-Jun-1998.) $)
    cbvrexv $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( nfv cbvrex ) ABCDEADGBCGFH $.

    $( Change the bound variable of a restricted uniqueness quantifier using
       implicit substitution.  (Contributed by NM, 5-Apr-2004.)  (Revised by
       Mario Carneiro, 15-Oct-2016.) $)
    cbvreuv $p |- ( E! x e. A ph <-> E! y e. A ps ) $=
      ( nfv cbvreu ) ABCDEADGBCGFH $.

    $( Change the bound variable of a restricted uniqueness quantifier using
       implicit substitution.  (Contributed by Alexander van der Vekens,
       17-Jun-2017.) $)
    cbvrmov $p |- ( E* x e. A ph <-> E* y e. A ps ) $=
      ( nfv cbvrmo ) ABCDEADGBCGFH $.
  $}

  ${
    $d A y $.  $d ps y $.  $d B x $.  $d ch x $.  $d x ph y $.
    cbvraldva2.1 $e |- ( ( ph /\ x = y ) -> ( ps <-> ch ) ) $.
    cbvraldva2.2 $e |- ( ( ph /\ x = y ) -> A = B ) $.
    $( Rule used to change the bound variable in a restricted universal
       quantifier with implicit substitution which also changes the quantifier
       domain.  Deduction form.  (Contributed by David Moews, 1-May-2017.) $)
    cbvraldva2 $p |- ( ph -> ( A. x e. A ps <-> A. y e. B ch ) ) $=
      ( cv wcel wi wal wral weq wa simpr eleq12d imbi12d df-ral cbvaldva
      3bitr4g ) ADJZFKZBLZDMEJZGKZCLZEMBDFNCEGNAUEUHDEADEOZPZUDUGBCUJUCUFFGAUIQ
      IRHSUABDFTCEGTUB $.

    $( Rule used to change the bound variable in a restricted existential
       quantifier with implicit substitution which also changes the quantifier
       domain.  Deduction form.  (Contributed by David Moews, 1-May-2017.) $)
    cbvrexdva2 $p |- ( ph -> ( E. x e. A ps <-> E. y e. B ch ) ) $=
      ( cv wcel wa wex wrex weq simpr eleq12d anbi12d cbvexdva df-rex 3bitr4g )
      ADJZFKZBLZDMEJZGKZCLZEMBDFNCEGNAUDUGDEADEOZLZUCUFBCUIUBUEFGAUHPIQHRSBDFTC
      EGTUA $.
  $}

  ${
    $d ps y $.  $d ch x $.  $d A x y $.  $d x ph y $.
    cbvraldva.1 $e |- ( ( ph /\ x = y ) -> ( ps <-> ch ) ) $.
    $( Rule used to change the bound variable in a restricted universal
       quantifier with implicit substitution.  Deduction form.  (Contributed by
       David Moews, 1-May-2017.) $)
    cbvraldva $p |- ( ph -> ( A. x e. A ps <-> A. y e. A ch ) ) $=
      ( weq wa eqidd cbvraldva2 ) ABCDEFFGADEHIFJK $.

    $( Rule used to change the bound variable in a restricted existential
       quantifier with implicit substitution.  Deduction form.  (Contributed by
       David Moews, 1-May-2017.) $)
    cbvrexdva $p |- ( ph -> ( E. x e. A ps <-> E. y e. A ch ) ) $=
      ( weq wa eqidd cbvrexdva2 ) ABCDEFFGADEHIFJK $.
  $}

  ${
    $d x A $.  $d z A $.  $d x y B $.  $d z y B $.  $d w B $.  $d z ph $.
    $d y ps $.  $d x ch $.  $d w ch $.
    cbvral2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvral2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution.  (Contributed by NM, 10-Aug-2004.) $)
    cbvral2v $p |- ( A. x e. A A. y e. B ph <-> A. z e. A A. w e. B ps ) $=
      ( wral cv wceq ralbidv cbvralv ralbii bitri ) AEILZDHLCEILZFHLBGILZFHLSTD
      FHDMFMNACEIJOPTUAFHCBEGIKPQR $.
  $}

  ${
    $d A x $.  $d A z $.  $d B w $.  $d B x y $.  $d B z y $.  $d ch w $.
    $d ch x $.  $d ph z $.  $d ps y $.
    cbvrex2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvrex2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution.  (Contributed by FL, 2-Jul-2012.) $)
    cbvrex2v $p |- ( E. x e. A E. y e. B ph <-> E. z e. A E. w e. B ps ) $=
      ( wrex weq rexbidv cbvrexv rexbii bitri ) AEILZDHLCEILZFHLBGILZFHLRSDFHDF
      MACEIJNOSTFHCBEGIKOPQ $.
  $}

  ${
    $d w ph $.  $d z ps $.  $d x ch $.  $d v ch $.  $d y u th $.  $d x A $.
    $d w A $.  $d x y B $.  $d w y B $.  $d v B $.  $d x y z C $.
    $d w y z C $.  $d v z C $.  $d z y C $.  $d z C $.  $d u C $.
    cbvral3v.1 $e |- ( x = w -> ( ph <-> ch ) ) $.
    cbvral3v.2 $e |- ( y = v -> ( ch <-> th ) ) $.
    cbvral3v.3 $e |- ( z = u -> ( th <-> ps ) ) $.
    $( Change bound variables of triple restricted universal quantification,
       using implicit substitution.  (Contributed by NM, 10-May-2005.) $)
    cbvral3v $p |- ( A. x e. A A. y e. B A. z e. C ph <->
                     A. w e. A A. v e. B A. u e. C ps ) $=
      ( wral cv wceq 2ralbidv cbvralv cbvral2v ralbii bitri ) AGMQFLQZEKQCGMQFL
      QZHKQBJMQILQZHKQUEUFEHKERHRSACFGLMNTUAUFUGHKCBDFGIJLMOPUBUCUD $.
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.
    $( Change bound variable by using a substitution.  (Contributed by NM,
       20-Nov-2005.)  (Revised by Andrew Salmon, 11-Jul-2011.) $)
    cbvralsv $p |- ( A. x e. A ph <-> A. y e. A [ y / x ] ph ) $=
      ( vz wral wsb nfv nfs1v sbequ12 cbvral nfsb sbequ bitri ) ABDFABEGZEDFABC
      GZCDFAOBEDAEHABEIABEJKOPECDABECACHLPEHAECBMKN $.
  $}

  ${
    $d z x A $.  $d y z ph $.  $d y A $.
    $( Change bound variable by using a substitution.  (Contributed by NM,
       2-Mar-2008.)  (Revised by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexsv $p |- ( E. x e. A ph <-> E. y e. A [ y / x ] ph ) $=
      ( vz wrex wsb nfv nfs1v sbequ12 cbvrex nfsb sbequ bitri ) ABDFABEGZEDFABC
      GZCDFAOBEDAEHABEIABEJKOPECDABECACHLPEHAECBMKN $.
  $}

  ${
    $d x y z $.  $d y z ph $.  $d x z ps $.
    sbralie.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Implicit to explicit substitution that swaps variables in a quantified
       expression.  (Contributed by NM, 5-Sep-2004.) $)
    sbralie $p |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) $=
      ( vz cv wral wsb cbvralsv sbbii nfv raleq sbie bitri sbco2 ralbii ) ACDGZ
      HZDCIZACFIZFCGZHZBDUBHZTUAFRHZDCIUCSUEDCACFRJKUEUCDCUCDLUAFRUBMNOUCUAFDIZ
      DUBHUDUAFDUBJUFBDUBUFACDIBACDFAFLPABCDBCLENOQOO $.
  $}

  ${
    rabbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (inference
       rule).  (Contributed by NM, 22-May-1999.) $)
    rabbiia $p |- { x e. A | ph } = { x e. A | ps } $=
      ( cv wcel wa cab crab pm5.32i abbii df-rab 3eqtr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
  $}

  ${
    $d x ph $.
    rabbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule).  (Contributed by NM, 28-Nov-2003.) $)
    rabbidva $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb wral crab wceq ralrimiva rabbi sylib ) ABCGZDEHBDEICDEIJANDEFKBCDELM
      $.
  $}

  ${
    $d x ph $.
    rabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule).  (Contributed by NM, 10-Feb-1995.) $)
    rabbidv $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb cv wcel adantr rabbidva ) ABCDEABCGDHEIFJK $.
  $}

  ${
    $d y A $.  $d y B $.
    rabeqf.1 $e |- F/_ x A $.
    rabeqf.2 $e |- F/_ x B $.
    $( Equality theorem for restricted class abstractions, with bound-variable
       hypotheses instead of distinct variable restrictions.  (Contributed by
       NM, 7-Mar-2004.) $)
    rabeqf $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( wceq cv wcel wa cab crab nfeq eleq2 anbi1d abbid df-rab 3eqtr4g ) CDGZB
      HZCIZAJZBKTDIZAJZBKABCLABDLSUBUDBBCDEFMSUAUCACDTNOPABCQABDQR $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted class abstractions.  (Contributed by NM,
       15-Oct-2003.) $)
    rabeq $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( nfcv rabeqf ) ABCDBCEBDEF $.
  $}

  ${
    $d A x $.  $d B x $.  $d ph x $.
    rabeqbidv.1 $e |- ( ph -> A = B ) $.
    rabeqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality of restricted class abstractions.  (Contributed by Jeff Madsen,
       1-Dec-2009.) $)
    rabeqbidv $p |- ( ph -> { x e. A | ps } = { x e. B | ch } ) $=
      ( crab wceq rabeq syl rabbidv eqtrd ) ABDEIZBDFIZCDFIAEFJOPJGBDEFKLABCDFH
      MN $.
  $}

  ${
    $d A x $.  $d B x $.  $d ph x $.
    rabeqbidva.1 $e |- ( ph -> A = B ) $.
    rabeqbidva.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equality of restricted class abstractions.  (Contributed by Mario
       Carneiro, 26-Jan-2017.) $)
    rabeqbidva $p |- ( ph -> { x e. A | ps } = { x e. B | ch } ) $=
      ( crab rabbidva wceq rabeq syl eqtrd ) ABDEICDEIZCDFIZABCDEHJAEFKOPKGCDEF
      LMN $.
  $}

  ${
    rabeqi.1 $e |- A = { x e. B | ph } $.
    $( Inference rule from equality of a class variable and a restricted class
       abstraction.  (Contributed by NM, 16-Feb-2004.) $)
    rabeq2i $p |- ( x e. A <-> ( x e. B /\ ph ) ) $=
      ( cv wcel crab wa eleq2i rabid bitri ) BFZCGMABDHZGMDGAICNMEJABDKL $.
  $}

  ${
    $d x z $.  $d y z $.  $d A z $.  $d ph z $.  $d ps z $.
    cbvrab.1 $e |- F/_ x A $.
    cbvrab.2 $e |- F/_ y A $.
    cbvrab.3 $e |- F/ y ph $.
    cbvrab.4 $e |- F/ x ps $.
    cbvrab.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution.  This version has bound-variable hypotheses
       in place of distinct variable conditions.  (Contributed by Andrew
       Salmon, 11-Jul-2011.)  (Revised by Mario Carneiro, 9-Oct-2016.) $)
    cbvrab $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vz cv wcel wa cab crab wsb nfv nfcri nfan nfs1v wceq eleq1 sbequ12 nfsb
      anbi12d cbvab sbequ sbie syl6bb eqtri df-rab 3eqtr4i ) CLZEMZANZCOZDLZEMZ
      BNZDOZACEPBDEPUQKLZEMZACKQZNZKOVAUPVECKUPKRVCVDCCKEFSACKUATUNVBUBUOVCAVDU
      NVBEUCACKUDUFUGVEUTKDVCVDDDKEGSACKDHUETUTKRVBURUBZVCUSVDBVBUREUCVFVDACDQB
      AKDCUHABCDIJUIUJUFUGUKACEULBDEULUM $.
  $}

  ${
    $d x y z A $.  $d y ph $.  $d x ps $.
    cbvrabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution.  (Contributed by NM, 26-May-1999.) $)
    cbvrabv $p |- { x e. A | ph } = { y e. A | ps } $=
      ( nfcv nfv cbvrab ) ABCDECEGDEGADHBCHFI $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The universal class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the universal class. $)
  $c _V $. $( Letter V (for the universal class) $)

  $( Extend class notation to include the universal class symbol. $)
  cvv $a class _V $.

  ${
    $d z x $.  $d z y $.
    $( Soundness justification theorem for ~ df-v .  (Contributed by Rodolfo
       Medina, 27-Apr-2010.) $)
    vjust $p |- { x | x = x } = { y | y = y } $=
      ( vz cv wceq cab wsb wcel equid sbt 2th df-clab 3bitr4i eqriv ) CADZOEZAF
      ZBDZREZBFZPACGZSBCGZCDZQHUCTHUAUBPACAIJSBCBIJKPCALSCBLMN $.
  $}

  $( Define the universal class.  Definition 5.20 of [TakeutiZaring] p. 21.
     Also Definition 2.9 of [Quine] p. 19.  (Contributed by NM, 5-Aug-1993.) $)
  df-v $a |- _V = { x | x = x } $.

  $( All set variables are sets (see ~ isset ).  Theorem 6.8 of [Quine] p. 43.
     (Contributed by NM, 5-Aug-1993.) $)
  vex $p |- x e. _V $=
    ( cv cvv wcel wceq eqid df-v abeq2i mpbir ) ABZCDJJEZJFKACAGHI $.

  ${
    $d x A $.
    $( Two ways to say " ` A ` is a set":  A class ` A ` is a member of the
       universal class ` _V ` (see ~ df-v ) if and only if the class ` A `
       exists (i.e. there exists some set ` x ` equal to class ` A ` ).
       Theorem 6.9 of [Quine] p. 43. _Notational convention_:  We will use the
       notational device " ` A e. _V ` " to mean " ` A ` is a set" very
       frequently, for example in ~ uniex .  Note the when ` A ` is not a set,
       it is called a proper class.  In some theorems, such as ~ uniexg , in
       order to shorten certain proofs we use the more general antecedent
       ` A e. V ` instead of ` A e. _V ` to mean " ` A ` is a set."

       Note that a constant is implicitly considered distinct from all
       variables.  This is why ` _V ` is not included in the distinct variable
       list, even though ~ df-clel requires that the expression substituted for
       ` B ` not contain ` x ` .  (Also, the Metamath spec does not allow
       constants in the distinct variable list.)  (Contributed by NM,
       5-Aug-1993.) $)
    isset $p |- ( A e. _V <-> E. x x = A ) $=
      ( cvv wcel cv wceq wa wex df-clel vex biantru exbii bitr4i ) BCDAEZBFZNCD
      ZGZAHOAHABCIOQAPOAJKLM $.
  $}

  ${
    $d A y $.  $d x y $.
    issetf.1 $e |- F/_ x A $.
    $( A version of isset that does not require x and A to be distinct.
       (Contributed by Andrew Salmon, 6-Jun-2011.)  (Revised by Mario Carneiro,
       10-Oct-2016.) $)
    issetf $p |- ( A e. _V <-> E. x x = A ) $=
      ( vy cvv wcel cv wceq wex isset nfeq2 nfv eqeq1 cbvex bitri ) BEFDGZBHZDI
      AGZBHZAIDBJQSDAAPBCKSDLPRBMNO $.
  $}

  ${
    $d x A $.
    isseti.1 $e |- A e. _V $.
    $( A way to say " ` A ` is a set" (inference rule).  (Contributed by NM,
       5-Aug-1993.) $)
    isseti $p |- E. x x = A $=
      ( cvv wcel cv wceq wex isset mpbi ) BDEAFBGAHCABIJ $.
  $}

  ${
    $d x A $.
    issetri.1 $e |- E. x x = A $.
    $( A way to say " ` A ` is a set" (inference rule).  (Contributed by NM,
       5-Aug-1993.) $)
    issetri $p |- A e. _V $=
      ( cvv wcel cv wceq wex isset mpbir ) BDEAFBGAHCABIJ $.
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class is a member of another class, it is a set.  Theorem 6.12 of
       [Quine] p. 44.  (Contributed by NM, 5-Aug-1993.)  (Proof shortened by
       Andrew Salmon, 8-Jun-2011.) $)
    elex $p |- ( A e. B -> A e. _V ) $=
      ( vx cv wceq wcel wa wex cvv exsimpl df-clel isset 3imtr4i ) CDZAEZNBFZGC
      HOCHABFAIFOPCJCABKCALM $.
  $}

  ${
    elisseti.1 $e |- A e. B $.
    $( If a class is a member of another class, it is a set.  (Contributed by
       NM, 11-Jun-1994.) $)
    elexi $p |- A e. _V $=
      ( wcel cvv elex ax-mp ) ABDAEDCABFG $.
  $}

  ${
    $d x A $.
    $( An element of a class exists.  (Contributed by NM, 1-May-1995.) $)
    elisset $p |- ( A e. V -> E. x x = A ) $=
      ( wcel cvv cv wceq wex elex isset sylib ) BCDBEDAFBGAHBCIABJK $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( If two classes each contain another class, then both contain some set.
       (Contributed by Alan Sare, 24-Oct-2011.) $)
    elex22 $p |- ( ( A e. B /\ A e. C ) -> E. x ( x e. B /\ x e. C ) ) $=
      ( wcel wa cv wceq wi wal eleq1a anim12ii alrimiv elisset adantr exim sylc
      wex ) BCEZBDEZFZAGZBHZUBCEZUBDEZFZIZAJUCARZUFARUAUGASUCUDTUEBCUBKBDUBKLMS
      UHTABCNOUCUFAPQ $.
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class contains another class, then it contains some set.
       (Contributed by Alan Sare, 25-Sep-2011.) $)
    elex2 $p |- ( A e. B -> E. x x e. B ) $=
      ( wcel cv wceq wi wal wex eleq1a alrimiv elisset exim sylc ) BCDZAEZBFZPC
      DZGZAHQAIRAIOSABCPJKABCLQRAMN $.
  $}

  $( A universal quantifier restricted to the universe is unrestricted.
     (Contributed by NM, 26-Mar-2004.) $)
  ralv $p |- ( A. x e. _V ph <-> A. x ph ) $=
    ( cvv wral cv wcel wi wal df-ral vex a1bi albii bitr4i ) ABCDBECFZAGZBHABHA
    BCIAOBNABJKLM $.

  $( An existential quantifier restricted to the universe is unrestricted.
     (Contributed by NM, 26-Mar-2004.) $)
  rexv $p |- ( E. x e. _V ph <-> E. x ph ) $=
    ( cvv wrex cv wcel wa wex df-rex vex biantrur exbii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.

  $( A uniqueness quantifier restricted to the universe is unrestricted.
     (Contributed by NM, 1-Nov-2010.) $)
  reuv $p |- ( E! x e. _V ph <-> E! x ph ) $=
    ( cvv wreu cv wcel wa weu df-reu vex biantrur eubii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.

  $( A uniqueness quantifier restricted to the universe is unrestricted.
     (Contributed by Alexander van der Vekens, 17-Jun-2017.) $)
  rmov $p |- ( E* x e. _V ph <-> E* x ph ) $=
    ( cvv wrmo cv wcel wa wmo df-rmo vex biantrur mobii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.

  $( A class abstraction restricted to the universe is unrestricted.
     (Contributed by NM, 27-Dec-2004.)  (Proof shortened by Andrew Salmon,
     8-Jun-2011.) $)
  rabab $p |- { x e. _V | ph } = { x | ph } $=
    ( cvv crab cv wcel wa cab df-rab vex biantrur abbii eqtr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.

  ${
    $d x y $.  $d y A $.
    $( Commutation of restricted and unrestricted universal quantifiers.
       (Contributed by NM, 26-Mar-2004.)  (Proof shortened by Andrew Salmon,
       8-Jun-2011.) $)
    ralcom4 $p |- ( A. x e. A A. y ph <-> A. y A. x e. A ph ) $=
      ( cvv wral wal ralcom ralv ralbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.

    $( Commutation of restricted and unrestricted existential quantifiers.
       (Contributed by NM, 12-Apr-2004.)  (Proof shortened by Andrew Salmon,
       8-Jun-2011.) $)
    rexcom4 $p |- ( E. x e. A E. y ph <-> E. y E. x e. A ph ) $=
      ( cvv wrex wex rexcom rexv rexbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
  $}

  ${
    $d A x $.  $d x y $.  $d ph x $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4a $p |- ( E. x E. y e. A ( ph /\ ps )
                          <-> E. y e. A ( ph /\ E. x ps ) ) $=
      ( wa wrex wex rexcom4 19.42v rexbii bitr3i ) ABFZDEGCHMCHZDEGABCHFZDEGMDC
      EINODEABCJKL $.

    $d B x $.
    rexcom4b.1 $e |- B e. _V $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4b $p |- ( E. x E. y e. A ( ph /\ x = B ) <-> E. y e. A ph ) $=
      ( cv wceq wa wrex wex rexcom4a isseti biantru rexbii bitr4i ) ABGEHZICDJB
      KAQBKZIZCDJACDJAQBCDLASCDRABEFMNOP $.
  $}

  ${
    $d x A $.
    $( Closed theorem version of ~ ceqsalg .  (Contributed by NM,
       28-Feb-2013.)  (Revised by Mario Carneiro, 10-Oct-2016.) $)
    ceqsalt $p |- ( ( F/ x ps /\ A. x ( x = A -> ( ph <-> ps ) ) /\ A e. V )
         -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wnf cv wceq wb wi wal wcel w3a wex elisset 3ad2ant3 bi1 imim3i 3ad2ant2
      3ad2ant1 al2imi 19.23t sylibd mpid imim2i com23 alimi 19.21t mpbid impbid
      bi2 ) BCFZCGDHZABIZJZCKZDELZMZUMAJZCKZBURUTUMCNZBUQULVAUPCDEOPURUTUMBJZCK
      ZVABJZUPULUTVCJUQUOUSVBCUNABUMABQRUASULUPVCVDIUQUMBCUBTUCUDURBUSJZCKZBUTJ
      ZUPULVFUQUOVECUOUMBAUNBAJUMABUKUEUFUGSULUPVFVGIUQBUSCUHTUIUJ $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Restricted quantifier version of ~ ceqsalt .  (Contributed by NM,
       28-Feb-2013.)  (Revised by Mario Carneiro, 10-Oct-2016.) $)
    ceqsralt $p |- ( ( F/ x ps
              /\ A. x ( x = A -> ( ph <-> ps ) ) /\ A e. B )
         -> ( A. x e. B ( x = A -> ph ) <-> ps ) ) $=
      ( wnf cv wceq wb wi wal wcel w3a wral df-ral eleq1 pm5.32ri imbi1i impexp
      wa 3bitr3i albii a1i syl5bb 19.21v syl6bb biimt 3ad2ant3 ceqsalt 3bitr2d
      ) BCFZCGZDHZABIJCKZDELZMZUMAJZCENZUOUQCKZJZUSBUPURUOUQJZCKZUTURULELZUQJZC
      KZUPVBUQCEOVEVBIUPVDVACVCUMTZAJUOUMTZAJVDVAVFVGAUMVCUOULDEPQRVCUMASUOUMAS
      UAUBUCUDUOUQCUEUFUOUKUSUTIUNUOUSUGUHABCDEUIUJ $.
  $}

  ${
    $d x A $.
    ceqsalg.1 $e |- F/ x ps $.
    ceqsalg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (Contributed by NM,
       29-Oct-2003.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    ceqsalg $p |- ( A e. V -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wcel cv wceq wi wal wex elisset nfa1 biimpd a2i sps exlimd syl5com
      biimprcd alrimi impbid1 ) DEHZCIDJZAKZCLZBUDUECMUGBCDENUGUEBCUFCOFUFUEBKC
      UEABUEABGPQRSTBUFCFUEABGUAUBUC $.
  $}

  ${
    $d x A $.
    ceqsal.1 $e |- F/ x ps $.
    ceqsal.2 $e |- A e. _V $.
    ceqsal.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (Contributed by NM,
       18-Aug-1993.) $)
    ceqsal $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( cvv wcel cv wceq wi wal wb ceqsalg ax-mp ) DHICJDKALCMBNFABCDHEGOP $.
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsalv.1 $e |- A e. _V $.
    ceqsalv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (Contributed by NM,
       18-Aug-1993.) $)
    ceqsalv $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( nfv ceqsal ) ABCDBCGEFH $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsralv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted quantifier version of ~ ceqsalv .  (Contributed by NM,
       21-Jun-2013.) $)
    ceqsralv $p |- ( A e. B -> ( A. x e. B ( x = A -> ph ) <-> ps ) ) $=
      ( wnf cv wceq wb wi wal wcel wral nfv ax-gen ceqsralt mp3an12 ) BCGCHDIZA
      BJKZCLDEMSAKCENBJBCOTCFPABCDEQR $.
  $}

  ${
    $d x ps $.
    gencl.1 $e |- ( th <-> E. x ( ch /\ A = B ) ) $.
    gencl.2 $e |- ( A = B -> ( ph <-> ps ) ) $.
    gencl.3 $e |- ( ch -> ph ) $.
    $( Implicit substitution for class with embedded variable.  (Contributed by
       NM, 17-May-1996.) $)
    gencl $p |- ( th -> ps ) $=
      ( wceq wa wex syl5ib impcom exlimiv sylbi ) DCFGKZLZEMBHSBERCBCARBJINOPQ
      $.
  $}

  ${
    $d x y $.  $d x R $.  $d x ps $.  $d y C $.  $d y S $.  $d y ch $.
    2gencl.1 $e |- ( C e. S <-> E. x e. R A = C ) $.
    2gencl.2 $e |- ( D e. S <-> E. y e. R B = D ) $.
    2gencl.3 $e |- ( A = C -> ( ph <-> ps ) ) $.
    2gencl.4 $e |- ( B = D -> ( ps <-> ch ) ) $.
    2gencl.5 $e |- ( ( x e. R /\ y e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable.  (Contributed by
       NM, 17-May-1996.) $)
    2gencl $p |- ( ( C e. S /\ D e. S ) -> ch ) $=
      ( wcel wi cv wceq wrex wa wex df-rex bitri imbi2d ex gencl com12 impcom )
      IKQZHKQZCULBRULCRESJQZUKEGIUKGITZEJUAUMUNUBEUCMUNEJUDUEUNBCULOUFULUMBUMAR
      UMBRDSJQZULDFHULFHTZDJUAUOUPUBDUCLUPDJUDUEUPABUMNUFUOUMAPUGUHUIUHUJ $.
  $}

  ${
    $d x y z $.  $d y z D $.  $d z F $.  $d x y R $.  $d y z S $.  $d x ps $.
    $d y ch $.  $d z th $.
    3gencl.1 $e |- ( D e. S <-> E. x e. R A = D ) $.
    3gencl.2 $e |- ( F e. S <-> E. y e. R B = F ) $.
    3gencl.3 $e |- ( G e. S <-> E. z e. R C = G ) $.
    3gencl.4 $e |- ( A = D -> ( ph <-> ps ) ) $.
    3gencl.5 $e |- ( B = F -> ( ps <-> ch ) ) $.
    3gencl.6 $e |- ( C = G -> ( ch <-> th ) ) $.
    3gencl.7 $e |- ( ( x e. R /\ y e. R /\ z e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable.  (Contributed by
       NM, 17-May-1996.) $)
    3gencl $p |- ( ( D e. S /\ F e. S /\ G e. S ) -> th ) $=
      ( wcel wa wi wceq wrex wex df-rex bitri imbi2d 3expia 2gencl com12 3impia
      cv gencl ) KMUCZNMUCZOMUCZDUTURUSUDZDVACUEVADUEGUPLUCZUTGJOUTJOUFZGLUGVBV
      CUDGUHRVCGLUIUJVCCDVAUAUKVAVBCVBAUEVBBUEVBCUEEFHIKNLMPQHKUFABVBSUKINUFBCV
      BTUKEUPLUCFUPLUCVBAUBULUMUNUQUNUO $.
  $}

  ${
    $d x A $.  $d x ps $.
    cgsexg.1 $e |- ( x = A -> ch ) $.
    cgsexg.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes.  (Contributed by
       NM, 26-Aug-2007.) $)
    cgsexg $p |- ( A e. V ->
                     ( E. x ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa exlimiv cv wceq elisset eximi syl biimprcd ancld
      eximdv syl5com impbid2 ) EFIZCAJZDKZBUEBDCABHLMUDCDKZBUFUDDNEOZDKUGDEFPUH
      CDGQRBCUEDBCACABHSTUAUBUC $.
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    cgsex2g.1 $e |- ( ( x = A /\ y = B ) -> ch ) $.
    cgsex2g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes.  (Contributed by
       NM, 26-Jul-1995.) $)
    cgsex2g $p |- ( ( A e. V /\ B e. W ) ->
                     ( E. x E. y ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa exlimivv cv wceq elisset anim12i eeanv sylibr 2eximi
      syl biimprcd ancld 2eximdv syl5com impbid2 ) FHLZGILZMZCAMZENDNZBUMBDECAB
      KOPULCENDNZBUNULDQFRZEQGRZMZENDNZUOULUPDNZUQENZMUSUJUTUKVADFHSEGISTUPUQDE
      UAUBURCDEJUCUDBCUMDEBCACABKUEUFUGUHUI $.
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.
    cgsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> ch ) $.
    cgsex4g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 4 general classes.  (Contributed
       by NM, 5-Aug-1995.) $)
    cgsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                    ( E. x E. y E. z E. w ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex cv wceq biimpa exlimivv elisset anim12i eeanv sylibr ee4anv
      2eximi syl biimprcd ancld 2eximdv syl5com impbid2 ) HLPZIMPZQZJLPZKMPZQZQ
      ZCAQZGRFRZERDRZBVCBDEVBBFGCABOUAUBUBVACGRFRZERDRZBVDVADSHTZESITZQZFSJTZGS
      KTZQZQZGRFRZERDRZVFVAVIERDRZVLGRFRZQVOUQVPUTVQUQVGDRZVHERZQVPUOVRUPVSDHLU
      CEIMUCUDVGVHDEUEUFUTVJFRZVKGRZQVQURVTUSWAFJLUCGKMUCUDVJVKFGUEUFUDVIVLDEFG
      UGUFVNVEDEVMCFGNUHUHUIBVEVCDEBCVBFGBCACABOUJUKULULUMUN $.
  $}

  ${
    $d x A $.
    ceqsex.1 $e |- F/ x ps $.
    ceqsex.2 $e |- A e. _V $.
    ceqsex.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit substitution.
       (Contributed by NM, 2-Mar-1995.)  (Revised by Mario Carneiro,
       10-Oct-2016.) $)
    ceqsex $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( cv wceq wa wex biimpa exlimi wi wal biimprcd alrimi isseti exintr ee10
      impbii ) CHDIZAJZCKZBUCBCEUBABGLMBUBANZCOUBCKUDBUECEUBABGPQCDFRUBACSTUA
      $.
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsexv.1 $e |- A e. _V $.
    ceqsexv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit substitution.
       (Contributed by NM, 2-Mar-1995.) $)
    ceqsexv $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( nfv ceqsex ) ABCDBCGEFH $.
  $}

  ${
    $d x y A $.  $d x y B $.
    ceqsex2.1 $e |- F/ x ps $.
    ceqsex2.2 $e |- F/ y ch $.
    ceqsex2.3 $e |- A e. _V $.
    ceqsex2.4 $e |- B e. _V $.
    ceqsex2.5 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2.6 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2 $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( cv wceq w3a wex wa exbii ceqsex 3anass 19.42v nfan anbi2d exbidv 3bitri
      bitri nfv nfex ) DNFOZENGOZAPZEQZDQUJUKARZEQZRZDQUKBRZEQZCUMUPDUMUJUNRZEQ
      UPULUSEUJUKAUASUJUNEUBUGSUOURDFUQDEUKBDUKDUHHUCUIJUJUNUQEUJABUKLUDUETBCEG
      IKMTUF $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.  $d y ch $.
    ceqsex2v.1 $e |- A e. _V $.
    ceqsex2v.2 $e |- B e. _V $.
    ceqsex2v.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2v.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2v $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( nfv ceqsex2 ) ABCDEFGBDLCELHIJKM $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x ps $.  $d y ch $.
    $d z th $.
    ceqsex3v.1 $e |- A e. _V $.
    ceqsex3v.2 $e |- B e. _V $.
    ceqsex3v.3 $e |- C e. _V $.
    ceqsex3v.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex3v.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex3v.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( Elimination of three existential quantifiers, using implicit
       substitution.  (Contributed by NM, 16-Aug-2011.) $)
    ceqsex3v $p |- ( E. x E. y E. z ( ( x = A /\ y = B /\ z = C ) /\ ph )
                 <-> th ) $=
      ( cv wceq wa wex anass 3anass anbi1i df-3an anbi2i 3bitr4i 2exbii 19.42vv
      w3a bitri exbii 3anbi3d 2exbidv ceqsexv ceqsex2v ) EQHRZFQIRZGQJRZUIZASZG
      TFTZETUPUQURAUIZGTFTZSZETZDVAVDEVAUPVBSZGTFTVDUTVFFGUPUQURSZSZASUPVGASZSU
      TVFUPVGAUAUSVHAUPUQURUBUCVBVIUPUQURAUDUEUFUGUPVBFGUHUJUKVEUQURBUIZGTFTZDV
      CVKEHKUPVBVJFGUPABUQURNULUMUNBCDFGIJLMOPUOUJUJ $.
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x ps $.  $d y ch $.  $d z th $.  $d w ta $.
    ceqsex4v.1 $e |- A e. _V $.
    ceqsex4v.2 $e |- B e. _V $.
    ceqsex4v.3 $e |- C e. _V $.
    ceqsex4v.4 $e |- D e. _V $.
    ceqsex4v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex4v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex4v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex4v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    $( Elimination of four existential quantifiers, using implicit
       substitution.  (Contributed by NM, 23-Sep-2011.) $)
    ceqsex4v $p |- ( E. x E. y E. z E. w
          ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) /\ ph ) <-> ta ) $=
      ( wceq w3a wex 19.42vv 3anass df-3an anbi2i bitr4i 2exbii 3bitr4i 3anbi3d
      cv wa 2exbidv ceqsex2v 3bitri ) FUMJUBZGUMKUBZUNZHUMLUBZIUMMUBZUNZAUCZIUD
      HUDZGUDFUDURUSVAVBAUCZIUDHUDZUCZGUDFUDVAVBCUCZIUDHUDZEVEVHFGUTVFUNZIUDHUD
      UTVGUNVEVHUTVFHIUEVDVKHIVDUTVCAUNZUNVKUTVCAUFVFVLUTVAVBAUGUHUIUJURUSVGUGU
      KUJVGVAVBBUCZIUDHUDVJFGJKNOURVFVMHIURABVAVBRULUOUSVMVIHIUSBCVAVBSULUOUPCD
      EHILMPQTUAUPUQ $.
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u E $.  $d x y z w v u F $.  $d x ps $.
    $d y ch $.  $d z th $.  $d w ta $.  $d v et $.  $d u ze $.
    ceqsex6v.1 $e |- A e. _V $.
    ceqsex6v.2 $e |- B e. _V $.
    ceqsex6v.3 $e |- C e. _V $.
    ceqsex6v.4 $e |- D e. _V $.
    ceqsex6v.5 $e |- E e. _V $.
    ceqsex6v.6 $e |- F e. _V $.
    ceqsex6v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex6v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex6v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex6v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex6v.11 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex6v.12 $e |- ( u = F -> ( et <-> ze ) ) $.
    $( Elimination of six existential quantifiers, using implicit
       substitution.  (Contributed by NM, 21-Sep-2011.) $)
    ceqsex6v $p |- ( E. x E. y E. z E. w E. v E. u
          ( ( x = A /\ y = B /\ z = C ) /\ ( w = D /\ v = E /\ u = F ) /\ ph )
                 <-> ze ) $=
      ( cv wceq w3a wex wa 3anass 3exbii 19.42vvv bitri anbi2d 3exbidv ceqsex3v
      ) HULNUMZIULOUMZJULPUMZUNZKULQUMLULRUMMULSUMUNZAUNZMUOLUOKUOZJUOIUOHUOVGV
      HAUPZMUOLUOKUOZUPZJUOIUOHUOZGVJVMHIJVJVGVKUPZMUOLUOKUOVMVIVOKLMVGVHAUQURV
      GVKKLMUSUTURVNVHDUPZMUOLUOKUOZGVLVHBUPZMUOLUOKUOVHCUPZMUOLUOKUOVQHIJNOPTU
      AUBVDVKVRKLMVDABVHUFVAVBVEVRVSKLMVEBCVHUGVAVBVFVSVPKLMVFCDVHUHVAVBVCDEFGK
      LMQRSUCUDUEUIUJUKVCUTUT $.
  $}

  ${
    $d x y z w v u t s A $.  $d x y z w v u t s B $.  $d x y z w v u t s C $.
    $d x y z w v u t s D $.  $d x y z w v u t s E $.  $d x y z w v u t s F $.
    $d x y z w v u t s G $.  $d x y z w v u t s H $.  $d x ps $.  $d y ch $.
    $d z th $.  $d w ta $.  $d v et $.  $d u ze $.  $d t si $.  $d s rh $.
    ceqsex8v.1 $e |- A e. _V $.
    ceqsex8v.2 $e |- B e. _V $.
    ceqsex8v.3 $e |- C e. _V $.
    ceqsex8v.4 $e |- D e. _V $.
    ceqsex8v.5 $e |- E e. _V $.
    ceqsex8v.6 $e |- F e. _V $.
    ceqsex8v.7 $e |- G e. _V $.
    ceqsex8v.8 $e |- H e. _V $.
    ceqsex8v.9 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex8v.10 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex8v.11 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex8v.12 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex8v.13 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex8v.14 $e |- ( u = F -> ( et <-> ze ) ) $.
    ceqsex8v.15 $e |- ( t = G -> ( ze <-> si ) ) $.
    ceqsex8v.16 $e |- ( s = H -> ( si <-> rh ) ) $.
    $( Elimination of eight existential quantifiers, using implicit
       substitution.  (Contributed by NM, 23-Sep-2011.) $)
    ceqsex8v $p |- ( E. x E. y E. z E. w E. v E. u E. t E. s
              ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) )
         /\ ( ( v = E /\ u = F ) /\ ( t = G /\ s = H ) ) /\ ph ) <-> rh ) $=
      ( cv wceq wa w3a 19.42vv 2exbii bitri 3anass df-3an anbi2i bitr4i 3bitr4i
      wex 3anbi3d 4exbidv ceqsex4v ) JVBQVCZKVBRVCZVDZLVBSVCZMVBTVCZVDZVDZNVBUA
      VCOVBUBVCVDZPVBUCVCUEVBUDVCVDZVDZAVEZUEVNPVNZOVNNVNZMVNLVNZKVNJVNVTWCWEWF
      AVEZUEVNPVNZOVNNVNZVEZMVNLVNZKVNJVNZIWKWPJKWJWOLMWDWLVDZUEVNPVNZOVNNVNZWD
      WNVDZWJWOWTWDWMVDZOVNNVNXAWSXBNOWDWLPUEVFVGWDWMNOVFVHWIWSNOWHWRPUEWHWDWGA
      VDZVDWRWDWGAVIWLXCWDWEWFAVJVKVLVGVGVTWCWNVJVMVGVGWQWEWFEVEZUEVNPVNOVNNVNZ
      IWNWEWFBVEZUEVNPVNOVNNVNWEWFCVEZUEVNPVNOVNNVNWEWFDVEZUEVNPVNOVNNVNXEJKLMQ
      RSTUFUGUHUIVRWLXFNOPUEVRABWEWFUNVOVPVSXFXGNOPUEVSBCWEWFUOVOVPWAXGXHNOPUEW
      ACDWEWFUPVOVPWBXHXDNOPUEWBDEWEWFUQVOVPVQEFGHINOPUEUAUBUCUDUJUKULUMURUSUTV
      AVQVHVH $.
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex.1 $e |- A e. _V $.
    gencbvex.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution.  (Contributed by
       NM, 17-May-1996.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    gencbvex $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex excom wb anbi12d bicomd exbii eqcoms ceqsexv simpr eqcom
      19.41v biimpi adantl eximi sylbi adantr ancri impbii bitri 3bitr3i ) FLZG
      MZDBNZNZFOZEOUREOZFOCANZEOUQFOUREFPUSVAEUQVAFGHUQVAQGUOGUOMZVAUQVBCDABJIR
      SUAUBTUTUQFUTUPEOZUQNZUQUPUQEUEVDUQVCUQUCUQVCDVCBDCVBNZEOVCKVEUPEVBUPCVBU
      PGUOUDUFUGUHUIUJUKULUMTUN $.
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex2.1 $e |- A e. _V $.
    gencbvex2.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex2.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex2.4 $e |- ( th -> E. x ( ch /\ A = y ) ) $.
    $( Restatement of ~ gencbvex with weaker hypotheses.  (Contributed by
       Jeffrey Hankins, 6-Dec-2006.) $)
    gencbvex2 $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex biimpac exlimiv impbii gencbvex ) ABCDEFGHIJDCGFLMZNZEOK
      UADETCDJPQRS $.
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbval.1 $e |- A e. _V $.
    gencbval.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbval.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbval.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution.  (Contributed by
       NM, 17-May-1996.) $)
    gencbval $p |- ( A. x ( ch -> ph ) <-> A. y ( th -> ps ) ) $=
      ( wi wal wn wa wex cv wceq notbid exanali gencbvex 3bitr3i con4bii ) CALE
      MZDBLFMZCANZOEPDBNZOFPUDNUENUFUGCDEFGHGFQRABISJKUACAETDBFTUBUC $.
  $}

  ${
    $d A x $.  $d x y $.
    sbhypf.1 $e |- F/ x ps $.
    sbhypf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See also ~ csbhypf .  (Contributed by Raph Levien,
       10-Apr-2004.) $)
    sbhypf $p |- ( y = A -> ( [ y / x ] ph <-> ps ) ) $=
      ( cv wceq wa wex wsb wb vex eqeq1 ceqsexv nfs1v nfbi sbequ12 bicomd
      sylan9bb exlimi sylbir ) DHZEIZCHZUDIZUFEIZJZCKACDLZBMZUHUECUDDNUFUDEOPUI
      UKCUJBCACDQFRUGUJAUHBUGAUJACDSTGUAUBUC $.
  $}

  ${
    $d y z A $.  $d x z $.  $d y z $.
    $( Closed theorem form of ~ vtoclgf .  (Contributed by NM, 17-Feb-2013.)
       (Revised by Mario Carneiro, 12-Oct-2016.) $)
    vtoclgft $p |- ( ( ( F/_ x A /\ F/ x ps )
                  /\ ( A. x ( x = A -> ( ph <-> ps ) )
                     /\ A. x ph ) /\ A e. V ) -> ps ) $=
      ( vz wcel wnfc wnf wa cv wceq wb wi wal cvv elex w3a wex mpbid elisset id
      3ad2ant3 nfnfc1 nfcvd nfeqd eqeq1 a1i cbvexd 3adant3 bi1 imim2i com23 imp
      ad2antrr alanimi 3ad2ant2 simp1r 19.23t syl mpd syl3an3 ) DEGCDHZBCIZJZCK
      ZDLZABMZNZCOACOJZDPGZBDEQVEVJVKRZVGCSZBVLFKZDLZFSZVMVKVEVPVJFDPUAUCVEVJVP
      VMMZVKVCVQVDVJVCVOVGFCCDUDVCCVNDVCCVNUEVCUBUFVNVFLVOVGMNVCVNVFDUGUHUIUOUJ
      TVLVGBNZCOZVMBNZVJVEVSVKVIAVRCVIAVRVIVGABVHABNVGABUKULUMUNUPUQVLVDVSVTMVC
      VDVJVKURVGBCUSUTTVAVB $.
  $}

  ${
    vtocld.1 $e |- ( ph -> A e. V ) $.
    vtocld.2 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    vtocld.3 $e |- ( ph -> ps ) $.
    ${
      vtocldf.4 $e |- F/ x ph $.
      vtocldf.5 $e |- ( ph -> F/_ x A ) $.
      vtocldf.6 $e |- ( ph -> F/ x ch ) $.
      $( Implicit substitution of a class for a set variable.  (Contributed by
         Mario Carneiro, 15-Oct-2016.) $)
      vtocldf $p |- ( ph -> ch ) $=
        ( wnfc wnf cv wceq wb wi wal alrimi wcel ex vtoclgft syl221anc ) ADEMCD
        NDOEPZBCQZRZDSBDSEFUACKLAUGDJAUEUFHUBTABDJITGBCDEFUCUD $.
    $}

    $d x A $.  $d x ph $.  $d x ch $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       Mario Carneiro, 15-Oct-2016.) $)
    vtocld $p |- ( ph -> ch ) $=
      ( nfv nfcvd nfvd vtocldf ) ABCDEFGHIADJADEKACDLM $.
  $}

  ${
    $d x A $.
    vtoclf.1 $e |- F/ x ps $.
    vtoclf.2 $e |- A e. _V $.
    vtoclf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  This is a
       generalization of ~ chvar .  (Contributed by NM, 30-Aug-1993.) $)
    vtoclf $p |- ps $=
      ( cv wceq wex wi isseti biimpd eximi ax-mp 19.36i mpg ) ABCABCECIDJZCKABL
      ZCKCDFMSTCSABGNOPQHR $.
  $}

  ${
    $d x A $.  $d x ps $.
    vtocl.1 $e |- A e. _V $.
    vtocl.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl.3 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 30-Aug-1993.) $)
    vtocl $p |- ps $=
      ( nfv vtoclf ) ABCDBCHEFGI $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    vtocl2.1 $e |- A e. _V $.
    vtocl2.2 $e |- B e. _V $.
    vtocl2.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    vtocl2.4 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (Contributed by NM,
       26-Jul-1995.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl2 $p |- ps $=
      ( wal wi wex cv wceq isseti wa eeanv biimpd 2eximi sylbir 19.36v 19.36aiv
      mp2an exbii mpbi ax-gen mpg ) ADKZBCUIBCABLZDMZCMZUIBLZCMCNEOZCMZDNFOZDMZ
      ULCEGPDFHPUOUQQUNUPQZDMCMULUNUPCDRURUJCDURABISTUAUDUKUMCABDUBUEUFUCADJUGU
      H $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    vtocl3.1 $e |- A e. _V $.
    vtocl3.2 $e |- B e. _V $.
    vtocl3.3 $e |- C e. _V $.
    vtocl3.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    vtocl3.5 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (Contributed by NM,
       3-Jun-1995.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl3 $p |- ps $=
      ( wal wi wex cv wceq isseti w3a eeeanv biimpd 2eximi sylbir 19.36v 2exbii
      eximi mp3an mpbi exbii 19.36aiv gen2 mpg ) AENZDNZBCUOBCUNBOZDPZCPZUOBOZC
      PABOZEPZDPCPZURCQFRZCPZDQGRZDPZEQHRZEPZVBCFISDGJSEHKSVDVFVHTVCVEVGTZEPZDP
      CPVBVCVEVGCDEUAVJVACDVIUTEVIABLUBUGUCUDUHVAUPCDABEUEUFUIUQUSCUNBDUEUJUIUK
      ADEMULUM $.
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclb.1 $e |- A e. _V $.
    vtoclb.2 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclb.3 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclb.4 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 23-Dec-1993.) $)
    vtoclb $p |- ( ch <-> th ) $=
      ( wb cv wceq bibi12d vtocl ) ABKCDKEFGELFMACBDHINJO $.
  $}

  ${
    vtoclgf.1 $e |- F/_ x A $.
    vtoclgf.2 $e |- F/ x ps $.
    vtoclgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable, with bound-variable
       hypotheses in place of distinct variable restrictions.  (Contributed by
       NM, 21-Sep-2003.)  (Proof shortened by Mario Carneiro, 10-Oct-2016.) $)
    vtoclgf $p |- ( A e. V -> ps ) $=
      ( wcel cvv elex cv wceq wex issetf mpbii exlimi sylbi syl ) DEJDKJZBDELUA
      CMDNZCOBCDFPUBBCGUBABIHQRST $.
  $}

  ${
    $d x A $.  $d x ps $.
    vtoclg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclg.2 $e |- ph $.
    $( Implicit substitution of a class expression for a set variable.
       (Contributed by NM, 17-Apr-1995.) $)
    vtoclg $p |- ( A e. V -> ps ) $=
      ( nfcv nfv vtoclgf ) ABCDECDHBCIFGJ $.
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclbg.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclbg.2 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclbg.3 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 29-Apr-1994.) $)
    vtoclbg $p |- ( A e. V -> ( ch <-> th ) ) $=
      ( wb cv wceq bibi12d vtoclg ) ABKCDKEFGELFMACBDHINJO $.
  $}

  ${
    vtocl2gf.1 $e |- F/_ x A $.
    vtocl2gf.2 $e |- F/_ y A $.
    vtocl2gf.3 $e |- F/_ y B $.
    vtocl2gf.4 $e |- F/ x ps $.
    vtocl2gf.5 $e |- F/ y ch $.
    vtocl2gf.6 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gf.7 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gf.8 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 25-Apr-1995.) $)
    vtocl2gf $p |- ( ( A e. V /\ B e. W ) -> ch ) $=
      ( wcel cvv wi elex nfel1 nfim cv wceq imbi2d vtoclgf mpan9 ) FHRFSRZGIRCF
      HUAUIBTUICTEGILUICEEFSKUBNUCEUDGUEBCUIPUFABDFSJMOQUGUGUH $.
  $}

  ${
    $d w A $.  $d w B $.  $d w C $.  $d w y $.  $d w z $.
    vtocl3gf.a $e |- F/_ x A $.
    vtocl3gf.b $e |- F/_ y A $.
    vtocl3gf.c $e |- F/_ z A $.
    vtocl3gf.d $e |- F/_ y B $.
    vtocl3gf.e $e |- F/_ z B $.
    vtocl3gf.f $e |- F/_ z C $.
    vtocl3gf.1 $e |- F/ x ps $.
    vtocl3gf.2 $e |- F/ y ch $.
    vtocl3gf.3 $e |- F/ z th $.
    vtocl3gf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3gf.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3gf.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3gf.7 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 10-Aug-2013.)  (Revised by Mario Carneiro, 10-Oct-2016.) $)
    vtocl3gf $p |- ( ( A e. V /\ B e. W /\ C e. X ) -> th ) $=
      ( wcel cvv wa elex wi nfel1 nfim wceq imbi2d vtoclgf vtocl2gf mpan9 3impb
      cv ) HKUGZILUGZJMUGZDVAHUHUGZVBVCUIDHKUJVDBUKVDCUKVDDUKFGIJLMQRSVDCFFHUHO
      ULUAUMVDDGGHUHPULUBUMFUTIUNBCVDUDUOGUTJUNCDVDUEUOABEHUHNTUCUFUPUQURUS $.
  $}

  ${
    $d w x A $.  $d y A $.  $d w y B $.  $d x ps $.  $d y ch $.
    vtocl2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2g.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2g.3 $e |- ph $.
    $( Implicit substitution of 2 classes for 2 set variables.  (Contributed by
       NM, 25-Apr-1995.) $)
    vtocl2g $p |- ( ( A e. V /\ B e. W ) -> ch ) $=
      ( nfcv nfv vtocl2gf ) ABCDEFGHIDFMEFMEGMBDNCENJKLO $.
  $}

  ${
    $d y A $.  $d x B z $.
    vtoclgaf.1 $e |- F/_ x A $.
    vtoclgaf.2 $e |- F/ x ps $.
    vtoclgaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgaf.4 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 17-Feb-2006.)  (Revised by Mario Carneiro, 10-Oct-2016.) $)
    vtoclgaf $p |- ( A e. B -> ps ) $=
      ( wcel cv wi nfel1 nfim wceq eleq1 imbi12d vtoclgf pm2.43i ) DEJZBCKZEJZA
      LTBLCDEFTBCCDEFMGNUADOUBTABUADEPHQIRS $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.
    vtoclga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclga.2 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 20-Aug-1995.) $)
    vtoclga $p |- ( A e. B -> ps ) $=
      ( nfcv nfv vtoclgaf ) ABCDECDHBCIFGJ $.
  $}

  ${
    $d x y C $.  $d x y D $.
    vtocl2gaf.a $e |- F/_ x A $.
    vtocl2gaf.b $e |- F/_ y A $.
    vtocl2gaf.c $e |- F/_ y B $.
    vtocl2gaf.1 $e |- F/ x ps $.
    vtocl2gaf.2 $e |- F/ y ch $.
    vtocl2gaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gaf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gaf.5 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables.  (Contributed by
       NM, 10-Aug-2013.) $)
    vtocl2gaf $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( wcel wa wi cv nfel1 nfan nfim wceq eleq1 anbi1d imbi12d anbi2d vtocl2gf
      nfv pm2.43i ) FHRZGIRZSZCDUAZHRZEUAZIRZSZATUMUSSZBTUOCTDEFGHIJKLVABDUMUSD
      DFHJUBUSDUKUCMUDUOCEUMUNEEFHKUBEGILUBUCNUDUPFUEZUTVAABVBUQUMUSUPFHUFUGOUH
      URGUEZVAUOBCVCUSUNUMURGIUFUIPUHQUJUL $.
  $}

  ${
    $d w x y A $.  $d w y B $.  $d w x y C $.  $d w x y D $.  $d x ps $.
    $d y ch $.
    vtocl2ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2ga.3 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables.  (Contributed by
       NM, 20-Aug-1995.) $)
    vtocl2ga $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( nfcv nfv vtocl2gaf ) ABCDEFGHIDFMEFMEGMBDNCENJKLO $.
  $}

  ${
    $d w A $.  $d w B $.  $d w C $.  $d w x y z R $.  $d w x y z S $.
    $d w x y z T $.
    vtocl3gaf.a $e |- F/_ x A $.
    vtocl3gaf.b $e |- F/_ y A $.
    vtocl3gaf.c $e |- F/_ z A $.
    vtocl3gaf.d $e |- F/_ y B $.
    vtocl3gaf.e $e |- F/_ z B $.
    vtocl3gaf.f $e |- F/_ z C $.
    vtocl3gaf.1 $e |- F/ x ps $.
    vtocl3gaf.2 $e |- F/ y ch $.
    vtocl3gaf.3 $e |- F/ z th $.
    vtocl3gaf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3gaf.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3gaf.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3gaf.7 $e |- ( ( x e. R /\ y e. S /\ z e. T ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables.  (Contributed by
       NM, 10-Aug-2013.)  (Revised by Mario Carneiro, 11-Oct-2016.) $)
    vtocl3gaf $p |- ( ( A e. R /\ B e. S /\ C e. T ) -> th ) $=
      ( wcel w3a cv nfel1 nf3an nfim wceq eleq1 3anbi1d imbi12d 3anbi2d 3anbi3d
      wi nfv vtocl3gf pm2.43i ) HKUGZILUGZJMUGZUHZDEUIZKUGZFUIZLUGZGUIZMUGZUHZA
      USVCVJVLUHZBUSVCVDVLUHZCUSVFDUSEFGHIJKLMNOPQRSVNBEVCVJVLEEHKNUJVJEUTVLEUT
      UKTULVOCFVCVDVLFFHKOUJFILQUJVLFUTUKUAULVFDGVCVDVEGGHKPUJGILRUJGJMSUJUKUBU
      LVGHUMZVMVNABVPVHVCVJVLVGHKUNUOUCUPVIIUMZVNVOBCVQVJVDVCVLVIILUNUQUDUPVKJU
      MZVOVFCDVRVLVEVCVDVKJMUNURUEUPUFVAVB $.
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d w z C $.  $d w x y z D $.
    $d w x y z R $.  $d w x y z S $.  $d x ps $.  $d y ch $.  $d z th $.
    vtocl3ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3ga.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3ga.4 $e |- ( ( x e. D /\ y e. R /\ z e. S ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables.  (Contributed by
       NM, 20-Aug-1995.) $)
    vtocl3ga $p |- ( ( A e. D /\ B e. R /\ C e. S ) -> th ) $=
      ( nfcv nfv vtocl3gaf ) ABCDEFGHIJKLMEHRFHRGHRFIRGIRGJRBESCFSDGSNOPQT $.
  $}

  ${
    $d x A $.  $d x ph $.
    vtocleg.1 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 10-Jan-2004.) $)
    vtocleg $p |- ( A e. V -> ph ) $=
      ( wcel cv wceq wex elisset exlimiv syl ) CDFBGCHZBIABCDJMABEKL $.
  $}

  ${
    $d x A $.
    $( Implicit substitution of a class for a set variable.  (Closed theorem
       version of ~ vtoclef .)  (Contributed by NM, 7-Nov-2005.)  (Revised by
       Mario Carneiro, 11-Oct-2016.) $)
    vtoclegft $p |- ( ( A e. B /\ F/ x ph /\
                   A. x ( x = A -> ph ) ) -> ph ) $=
      ( wcel wnf cv wceq wi wal w3a wex elisset mpan9 3adant2 wb 19.9t 3ad2ant2
      exim mpbid ) CDEZABFZBGCHZAIBJZKABLZAUAUDUEUBUAUCBLUDUEBCDMUCABSNOUBUAUEA
      PUDABQRT $.
  $}

  ${
    $d x A $.
    vtoclef.1 $e |- F/ x ph $.
    vtoclef.2 $e |- A e. _V $.
    vtoclef.3 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 18-Aug-1993.) $)
    vtoclef $p |- ph $=
      ( cv wceq wex isseti exlimi ax-mp ) BGCHZBIABCEJMABDFKL $.
  $}

  ${
    $d x A $.  $d x ph $.
    vtocle.1 $e |- A e. _V $.
    vtocle.2 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 9-Sep-1993.) $)
    vtocle $p |- ph $=
      ( cvv wcel vtocleg ax-mp ) CFGADABCFEHI $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    vtoclri.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclri.2 $e |- A. x e. B ph $.
    $( Implicit substitution of a class for a set variable.  (Contributed by
       NM, 21-Nov-1994.) $)
    vtoclri $p |- ( A e. B -> ps ) $=
      ( rspec vtoclga ) ABCDEFACEGHI $.
  $}

  ${
    $d x y $.  $d y A $.
    spcimgft.1 $e |- F/ x ps $.
    spcimgft.2 $e |- F/_ x A $.
    $( A closed version of ~ spcimgf .  (Contributed by Mario Carneiro,
       4-Jan-2017.) $)
    spcimgft $p |- ( A. x ( x = A -> ( ph -> ps ) ) -> ( A e. B ->
                      ( A. x ph -> ps ) ) ) $=
      ( wcel cvv cv wceq wi wal elex wex issetf exim syl5bi 19.36 syl6ib syl5 )
      DEHDIHZCJDKZABLZLCMZACMBLZDENUEUBUDCOZUFUBUCCOUEUGCDGPUCUDCQRABCFSTUA $.

    $( A closed version of ~ spcgf .  (Contributed by Andrew Salmon,
       6-Jun-2011.)  (Revised by Mario Carneiro, 4-Jan-2017.) $)
    spcgft $p |- ( A. x ( x = A -> ( ph <-> ps ) ) -> ( A e. B ->
                      ( A. x ph -> ps ) ) ) $=
      ( cv wceq wb wi wal wcel bi1 imim2i alimi spcimgft syl ) CHDIZABJZKZCLSAB
      KZKZCLDEMACLBKKUAUCCTUBSABNOPABCDEFGQR $.
  $}

  ${
    spcimgf.1 $e |- F/_ x A $.
    spcimgf.2 $e |- F/ x ps $.
    ${
      spcimgf.3 $e |- ( x = A -> ( ph -> ps ) ) $.
      $( Rule of specialization, using implicit substitution.  Compare Theorem
         7.3 of [Quine] p. 44.  (Contributed by Mario Carneiro, 4-Jan-2017.) $)
      spcimgf $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
        ( cv wceq wi wcel wal spcimgft mpg ) CIDJABKKDELACMBKKCABCDEGFNHO $.
    $}

    spcimegf.3 $e |- ( x = A -> ( ps -> ph ) ) $.
    $( Existential specialization, using implicit substitution.  (Contributed
       by Mario Carneiro, 4-Jan-2017.) $)
    spcimegf $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( wcel wn wal wex nfn cv wceq con3d spcimgf con2d df-ex syl6ibr ) DEIZBAJ
      ZCKZJACLUAUCBUBBJCDEFBCGMCNDOBAHPQRACST $.
  $}

  ${
    $d y A z $.  $d x z $.
    spcgf.1 $e |- F/_ x A $.
    spcgf.2 $e |- F/ x ps $.
    spcgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitution.  Compare Theorem
       7.3 of [Quine] p. 44.  (Contributed by NM, 2-Feb-1997.)  (Revised by
       Andrew Salmon, 12-Aug-2011.) $)
    spcgf $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
      ( cv wceq wb wi wcel wal spcgft mpg ) CIDJABKLDEMACNBLLCABCDEGFOHP $.

    $( Existential specialization, using implicit substitution.  (Contributed
       by NM, 2-Feb-1997.) $)
    spcegf $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( wcel wn wal wex nfn cv wceq notbid spcgf con2d df-ex syl6ibr ) DEIZBAJZ
      CKZJACLUAUCBUBBJCDEFBCGMCNDOABHPQRACST $.
  $}

  ${
    $d x A $.  $d x ph $.  $d x ch $.
    spcimdv.1 $e |- ( ph -> A e. B ) $.
    ${
      spcimdv.2 $e |- ( ( ph /\ x = A ) -> ( ps -> ch ) ) $.
      $( Restricted specialization, using implicit substitution.  (Contributed
         by Mario Carneiro, 4-Jan-2017.) $)
      spcimdv $p |- ( ph -> ( A. x ps -> ch ) ) $=
        ( cv wceq wi wal wcel ex alrimiv nfv nfcv spcimgft sylc ) ADIEJZBCKZKZD
        LEFMBDLCKAUBDATUAHNOGBCDEFCDPDEQRS $.
    $}

    ${
      spcdv.2 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
      $( Rule of specialization, using implicit substitution.  Analogous to
         ~ rspcdv .  (Contributed by David Moews, 1-May-2017.) $)
      spcdv $p |- ( ph -> ( A. x ps -> ch ) ) $=
        ( cv wceq wa biimpd spcimdv ) ABCDEFGADIEJKBCHLM $.
    $}

    spcimedv.2 $e |- ( ( ph /\ x = A ) -> ( ch -> ps ) ) $.
    $( Restricted existential specialization, using implicit substitution.
       (Contributed by Mario Carneiro, 4-Jan-2017.) $)
    spcimedv $p |- ( ph -> ( ch -> E. x ps ) ) $=
      ( wn wal wex cv wceq wa con3d spcimdv con2d df-ex syl6ibr ) ACBIZDJZIBDKA
      UACATCIDEFGADLEMNCBHOPQBDRS $.
  $}

  ${
    $d x ps $.  $d x y A $.
    spcgv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitution.  Compare Theorem
       7.3 of [Quine] p. 44.  (Contributed by NM, 22-Jun-1994.) $)
    spcgv $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
      ( nfcv nfv spcgf ) ABCDECDGBCHFI $.

    $( Existential specialization, using implicit substitution.  (Contributed
       by NM, 14-Aug-1994.) $)
    spcegv $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( nfcv nfv spcegf ) ABCDECDGBCHFI $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    spc2egv.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 2 quantifiers, using implicit
       substitution.  (Contributed by NM, 3-Aug-1995.) $)
    spc2egv $p |- ( ( A e. V /\ B e. W ) -> ( ps -> E. x E. y ph ) ) $=
      ( wcel wa cv wceq wex elisset anim12i eeanv sylibr biimprcd 2eximdv
      syl5com ) EGJZFHJZKZCLEMZDLFMZKZDNCNZBADNCNUDUECNZUFDNZKUHUBUIUCUJCEGODFH
      OPUEUFCDQRBUGACDUGABISTUA $.

    $( Specialization with 2 quantifiers, using implicit substitution.
       (Contributed by NM, 27-Apr-2004.) $)
    spc2gv $p |- ( ( A e. V /\ B e. W ) -> ( A. x A. y ph -> ps ) ) $=
      ( wcel wa wal wn wex cv wceq notbid spc2egv 2nalexn syl6ibr con4d ) EGJFH
      JKZBADLCLZUBBMZAMZDNCNUCMUEUDCDEFGHCOEPDOFPKABIQRACDSTUA $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    spc3egv.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 3 quantifiers, using implicit
       substitution.  (Contributed by NM, 12-May-2008.) $)
    spc3egv $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
               ( ps -> E. x E. y E. z ph ) ) $=
      ( wcel w3a cv wceq wex elisset 3anim123i eeeanv biimprcd 2eximdv syl5com
      sylibr eximdv ) FIMZGJMZHKMZNZCOFPZDOGPZEOHPZNZEQZDQCQZBAEQZDQCQUIUJCQZUK
      DQZULEQZNUOUFUQUGURUHUSCFIRDGJREHKRSUJUKULCDETUDBUNUPCDBUMAEUMABLUAUEUBUC
      $.

    $( Specialization with 3 quantifiers, using implicit substitution.
       (Contributed by NM, 12-May-2008.) $)
    spc3gv $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
               ( A. x A. y A. z ph -> ps ) ) $=
      ( wcel w3a wal wn wex cv wceq exnal notbid spc3egv exbii bitr2i syl6ibr
      bitri con4d ) FIMGJMHKMNZBAEOZDOZCOZUHBPZAPZEQZDQZCQZUKPZUMULCDEFGHIJKCRF
      SDRGSERHSNABLUAUBUPUJPZCQUQUOURCUOUIPZDQURUNUSDAETUCUIDTUFUCUJCTUDUEUG $.
  $}

  ${
    $d x A $.  $d x ps $.
    spcv.1 $e |- A e. _V $.
    spcv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitution.  (Contributed by
       NM, 22-Jun-1994.) $)
    spcv $p |- ( A. x ph -> ps ) $=
      ( cvv wcel wal wi spcgv ax-mp ) DGHACIBJEABCDGFKL $.

    $( Existential specialization, using implicit substitution.  (Contributed
       by NM, 31-Dec-1993.)  (Proof shortened by Eric Schmidt, 22-Dec-2006.) $)
    spcev $p |- ( ps -> E. x ph ) $=
      ( cvv wcel wex wi spcegv ax-mp ) DGHBACIJEABCDGFKL $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    spc2ev.1 $e |- A e. _V $.
    spc2ev.2 $e |- B e. _V $.
    spc2ev.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization, using implicit substitution.  (Contributed
       by NM, 3-Aug-1995.) $)
    spc2ev $p |- ( ps -> E. x E. y ph ) $=
      ( cvv wcel wex wi spc2egv mp2an ) EJKFJKBADLCLMGHABCDEFJJINO $.
  $}

  ${
    $d x A $.  $d x B $.
    rspct.1 $e |- F/ x ps $.
    $( A closed version of ~ rspc .  (Contributed by Andrew Salmon,
       6-Jun-2011.) $)
    rspct $p |- ( A. x ( x = A -> ( ph <-> ps ) ) -> ( A e. B ->
                   ( A. x e. B ph -> ps ) ) ) $=
      ( cv wceq wb wi wal wcel wral df-ral wa eleq1 adantr simpr imbi12d ex a2i
      alimi nfv nfim nfcv spcgft syl syl7bi com34 pm2.43d ) CGZDHZABIZJZCKZDELZ
      ACEMZBJUOUPUQUPBUQUKELZAJZCKZUOUPUPBJZACENUOULUSVAIZJZCKUPUTVAJJUNVCCULUM
      VBULUMVBULUMOURUPABULURUPIUMUKDEPQULUMRSTUAUBUSVACDEUPBCUPCUCFUDCDUEUFUGU
      HUIUJ $.
  $}

  ${
    $d x y A $.  $d x B $.
    rspc.1 $e |- F/ x ps $.
    rspc.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitution.  (Contributed by
       NM, 19-Apr-2005.)  (Revised by Mario Carneiro, 11-Oct-2016.) $)
    rspc $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( wral cv wcel wi wal df-ral nfcv nfv nfim wceq eleq1 imbi12d spcgf
      pm2.43a syl5bi ) ACEHCIZEJZAKZCLZDEJZBACEMUFUGBUEUGBKCDECDNUGBCUGCOFPUCDQ
      UDUGABUCDERGSTUAUB $.

    $( Restricted existential specialization, using implicit substitution.
       (Contributed by NM, 26-May-1998.)  (Revised by Mario Carneiro,
       11-Oct-2016.) $)
    rspce $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( wcel wa cv wex wrex nfcv nfv nfan wceq eleq1 anbi12d spcegf anabsi5
      df-rex sylibr ) DEHZBIZCJZEHZAIZCKZACELUCBUHUGUDCDECDMUCBCUCCNFOUEDPUFUCA
      BUEDEQGRSTACEUAUB $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rspcv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitution.  (Contributed by
       NM, 26-May-1998.) $)
    rspcv $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( nfv rspc ) ABCDEBCGFH $.

    $( Restricted specialization, using implicit substitution.  (Contributed by
       NM, 2-Feb-2006.) $)
    rspccv $p |- ( A. x e. B ph -> ( A e. B -> ps ) ) $=
      ( wcel wral rspcv com12 ) DEGACEHBABCDEFIJ $.

    $( Restricted specialization, using implicit substitution.  (Contributed by
       NM, 13-Sep-2005.) $)
    rspcva $p |- ( ( A e. B /\ A. x e. B ph ) -> ps ) $=
      ( wcel wral rspcv imp ) DEGACEHBABCDEFIJ $.

    $( Restricted specialization, using implicit substitution.  (Contributed by
       NM, 26-Jul-2006.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    rspccva $p |- ( ( A. x e. B ph /\ A e. B ) -> ps ) $=
      ( wcel wral rspcv impcom ) DEGACEHBABCDEFIJ $.

    $( Restricted existential specialization, using implicit substitution.
       (Contributed by NM, 26-May-1998.) $)
    rspcev $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( nfv rspce ) ABCDEBCGFH $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.  $d x ch $.
    rspcimdv.1 $e |- ( ph -> A e. B ) $.
    ${
      rspcimdv.2 $e |- ( ( ph /\ x = A ) -> ( ps -> ch ) ) $.
      $( Restricted specialization, using implicit substitution.  (Contributed
         by Mario Carneiro, 4-Jan-2017.) $)
      rspcimdv $p |- ( ph -> ( A. x e. B ps -> ch ) ) $=
        ( wral cv wcel wi wal df-ral wceq wa simpr eleq1d biimprd imim12d mpid
        spcimdv syl5bi ) BDFIDJZFKZBLZDMZACBDFNAUGEFKZCGAUFUHCLDEFGAUDEOZPZUHUE
        BCUJUEUHUJUDEFAUIQRSHTUBUAUC $.
    $}

    rspcimedv.2 $e |- ( ( ph /\ x = A ) -> ( ch -> ps ) ) $.
    $( Restricted existential specialization, using implicit substitution.
       (Contributed by Mario Carneiro, 4-Jan-2017.) $)
    rspcimedv $p |- ( ph -> ( ch -> E. x e. B ps ) ) $=
      ( wn wral wrex cv wceq wa con3d rspcimdv con2d dfrex2 syl6ibr ) ACBIZDFJZ
      IBDFKAUACATCIDEFGADLEMNCBHOPQBDFRS $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.  $d x ch $.
    rspcdv.1 $e |- ( ph -> A e. B ) $.
    rspcdv.2 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Restricted specialization, using implicit substitution.  (Contributed by
       NM, 17-Feb-2007.)  (Revised by Mario Carneiro, 4-Jan-2017.) $)
    rspcdv $p |- ( ph -> ( A. x e. B ps -> ch ) ) $=
      ( cv wceq wa biimpd rspcimdv ) ABCDEFGADIEJKBCHLM $.

    $( Restricted existential specialization, using implicit substitution.
       (Contributed by FL, 17-Apr-2007.)  (Revised by Mario Carneiro,
       4-Jan-2017.) $)
    rspcedv $p |- ( ph -> ( ch -> E. x e. B ps ) ) $=
      ( cv wceq wa biimprd rspcimedv ) ABCDEFGADIEJKBCHLM $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.
    rspc2.1 $e |- F/ x ch $.
    rspc2.2 $e |- F/ y ps $.
    rspc2.3 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rspc2.4 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitution.
       (Contributed by NM, 9-Nov-2012.) $)
    rspc2 $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( wcel wral nfcv nfral cv wceq rspc ralbidv sylan9 ) FHNAEIOZDHOCEIOZGINB
      UCUDDFHCDEIDIPJQDRFSACEILUATCBEGIKMTUB $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.  $d x ch $.  $d y ps $.
    rspc2v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rspc2v.2 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitution.
       (Contributed by NM, 13-Sep-1999.) $)
    rspc2v $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( nfv rspc2 ) ABCDEFGHICDLBELJKM $.

    $( 2-variable restricted specialization, using implicit substitution.
       (Contributed by NM, 18-Jun-2014.) $)
    rspc2va $p |- ( ( ( A e. C /\ B e. D ) /\ A. x e. C A. y e. D ph ) ->
                  ps ) $=
      ( wcel wa wral rspc2v imp ) FHLGILMAEINDHNBABCDEFGHIJKOP $.

    $( 2-variable restricted existential specialization, using implicit
       substitution.  (Contributed by NM, 16-Oct-1999.) $)
    rspc2ev $p |- ( ( A e. C /\ B e. D /\ ps ) -> E. x e. C E. y e. D ph ) $=
      ( wcel w3a wrex wa rspcev anim2i 3impb cv wceq rexbidv syl ) FHLZGILZBMUC
      CEINZOZAEINZDHNUCUDBUFUDBOUEUCCBEGIKPQRUGUEDFHDSFTACEIJUAPUB $.
  $}

  ${
    $d z ps $.  $d x ch $.  $d y th $.  $d x y z A $.  $d y z B $.  $d z C $.
    $d x R $.  $d x y S $.  $d x y z T $.
    rspc3v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rspc3v.2 $e |- ( y = B -> ( ch <-> th ) ) $.
    rspc3v.3 $e |- ( z = C -> ( th <-> ps ) ) $.
    $( 3-variable restricted specialization, using implicit substitution.
       (Contributed by NM, 10-May-2005.) $)
    rspc3v $p |- ( ( A e. R /\ B e. S /\ C e. T ) ->
                  ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) $=
      ( wcel wral cv wceq wi wa ralbidv rspc2v rspcv sylan9 3impa ) HKQZILQZJMQ
      ZAGMRZFLREKRZBUAUHUIUBULDGMRZUJBUKUMCGMREFHIKLESHTACGMNUCFSITCDGMOUCUDDBG
      JMPUEUFUG $.

    $( 3-variable restricted existentional specialization, using implicit
       substitution.  (Contributed by NM, 25-Jul-2012.) $)
    rspc3ev $p |- ( ( ( A e. R /\ B e. S /\ C e. T ) /\ ps ) ->
                  E. x e. R E. y e. S E. z e. T ph ) $=
      ( wcel wrex cv wceq w3a wa simpl1 simpl2 rspcev 3ad2antl3 rexbidv rspc2ev
      syl3anc ) HKQZILQZJMQZUABUBUJUKDGMRZAGMRZFLREKRUJUKULBUCUJUKULBUDULUJBUMU
      KDBGJMPUEUFUNUMCGMREFHIKLESHTACGMNUGFSITCDGMOUGUHUI $.
  $}

  ${
    $d x A y z $.  $d x B y z $.
    eqvinc.1 $e |- A e. _V $.
    $( A variable introduction law for class equality.  (Contributed by NM,
       14-Apr-1995.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    eqvinc $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex wi isseti ax-1 eqtr jca eximi pm3.43 mp2b 19.37aiv eqtr2
      ex exlimiv impbii ) BCEZAFZBEZUCCEZGZAHUBUFAUDAHUBUDIZUBUEIZGZAHUBUFIZAHA
      BDJUDUIAUDUGUHUDUBKUDUBUEUCBCLSMNUIUJAUBUDUEONPQUFUBAUCBCRTUA $.
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    eqvincf.1 $e |- F/_ x A $.
    eqvincf.2 $e |- F/_ x B $.
    eqvincf.3 $e |- A e. _V $.
    $( A variable introduction law for class equality, using bound-variable
       hypotheses instead of distinct variable conditions.  (Contributed by NM,
       14-Sep-2003.) $)
    eqvincf $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( vy wceq cv wa wex eqvinc nfeq2 nfan nfv eqeq1 anbi12d cbvex bitri ) BCH
      GIZBHZTCHZJZGKAIZBHZUDCHZJZAKGBCFLUCUGGAUAUBAATBDMATCEMNUGGOTUDHUAUEUBUFT
      UDBPTUDCPQRS $.
  $}

  ${
    $d x A y $.  $d ph y $.
    alexeq.1 $e |- A e. _V $.
    $( Two ways to express substitution of ` A ` for ` x ` in ` ph ` .
       (Contributed by NM, 2-Mar-1995.) $)
    alexeq $p |- ( A. x ( x = A -> ph ) <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq wa wex wi wal anbi1d exbidv imbi1d albidv sb56 vtoclb bicomi
      eqeq2 ) BFZCGZAHZBIZUAAJZBKZTEFZGZAHZBIUGAJZBKUCUEECDUFCGZUHUBBUJUGUAAUFC
      TSZLMUJUIUDBUJUGUAAUKNOABEPQR $.
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality implies equivalence with substitution.  (Contributed by NM,
       2-Mar-1995.) $)
    ceqex $p |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cvv wcel cv wceq wa wex wb 19.8a isset sylibr wi eqeq2 anbi1d exbidv
      bibi2d imbi12d ex wal vex alexeq sp com12 syl5bir impbid vtoclg mpcom ) C
      EFZBGZCHZAUMAIZBJZKZUMUMBJUKUMBLBCMNULDGZHZAURAIZBJZKZOUMUPODCEUQCHZURUMV
      AUPUQCULPZVBUTUOAVBUSUNBVBURUMAVCQRSTURAUTURAUTUSBLUAUTURAOZBUBZURAABUQDU
      CUDVEURAVDBUEUFUGUHUIUJ $.
  $}

  ${
    $d x y A $.
    ceqsexg.1 $e |- F/ x ps $.
    ceqsexg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (Contributed by NM,
       11-Oct-2004.) $)
    ceqsexg $p |- ( A e. V -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( wb cv wceq wa wex nfcv nfe1 nfbi ceqex bibi12d biid vtoclgf ) AAHCIDJZA
      KZCLZBHCDECDMUBBCUACNFOTAUBABACDPGQARS $.
  $}

  ${
    $d x y A $.  $d x ps $.
    ceqsexgv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit substitution.
       (Contributed by NM, 29-Dec-1996.) $)
    ceqsexgv $p |- ( A e. V -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( nfv ceqsexg ) ABCDEBCGFH $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsrexv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution.  (Contributed by NM, 30-Apr-2004.) $)
    ceqsrexv $p |- ( A e. B -> ( E. x e. B ( x = A /\ ph ) <-> ps ) ) $=
      ( cv wceq wa wrex wcel wex df-rex an12 exbii bitr4i eleq1 anbi12d bianabs
      ceqsexgv syl5bb ) CGZDHZAIZCEJZUCUBEKZAIZIZCLZDEKZBUEUFUDIZCLUIUDCEMUHUKC
      UCUFANOPUJUIBUGUJBICDEUCUFUJABUBDEQFRTSUA $.

    $( Elimination of a restricted existential quantifier, using implicit
       substitution.  (Contributed by Mario Carneiro, 14-Mar-2014.) $)
    ceqsrexbv $p |- ( E. x e. B ( x = A /\ ph ) <-> ( A e. B /\ ps ) ) $=
      ( wcel cv wceq wa wrex r19.42v eleq1 adantr pm5.32ri bicomi baib ceqsrexv
      wb rexbiia pm5.32i 3bitr3i ) DEGZCHZDIZAJZJZCEKUCUFCEKZJUHUCBJUCUFCELUGUF
      CEUGUDEGZUFUIUFJUGUFUIUCUEUIUCSAUDDEMNOPQTUCUHBABCDEFRUAUB $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x C $.  $d x y D $.  $d x ps $.  $d y ch $.
    ceqsrex2v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsrex2v.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution.  (Contributed by NM, 29-Oct-2005.) $)
    ceqsrex2v $p |- ( ( A e. C /\ B e. D ) ->
      ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ) $=
      ( wcel cv wceq wa wrex anass rexbii r19.42v ceqsrexv bitri anbi2d rexbidv
      syl5bb sylan9bb ) FHLZDMFNZEMGNZOAOZEIPZDHPZUHBOZEIPZGILCUKUGUHAOZEIPZOZD
      HPUFUMUJUPDHUJUGUNOZEIPUPUIUQEIUGUHAQRUGUNEISUARUOUMDFHUGUNULEIUGABUHJUBU
      CTUDBCEGIKTUE $.
  $}

  ${
    $d x A $.  $d x B $.
    clel2.1 $e |- A e. _V $.
    $( An alternate definition of class membership when the class is a set.
       (Contributed by NM, 18-Aug-1993.) $)
    clel2 $p |- ( A e. B <-> A. x ( x = A -> x e. B ) ) $=
      ( cv wceq wcel wi wal eleq1 ceqsalv bicomi ) AEZBFMCGZHAIBCGZNOABDMBCJKL
      $.
  $}

  ${
    $d x A $.  $d x B $.
    $( An alternate definition of class membership when the class is a set.
       (Contributed by NM, 13-Aug-2005.) $)
    clel3g $p |- ( B e. V -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) $=
      ( wcel cv wceq wa wex eleq2 ceqsexgv bicomd ) CDEAFZCGBMEZHAIBCEZNOACDMCB
      JKL $.
  $}

  ${
    $d x A $.  $d x B $.
    clel3.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set.
       (Contributed by NM, 18-Aug-1993.) $)
    clel3 $p |- ( A e. B <-> E. x ( x = B /\ A e. x ) ) $=
      ( cvv wcel cv wceq wa wex wb clel3g ax-mp ) CEFBCFAGZCHBNFIAJKDABCELM $.
  $}

  ${
    $d x A $.  $d x B $.
    clel4.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set.
       (Contributed by NM, 18-Aug-1993.) $)
    clel4 $p |- ( A e. B <-> A. x ( x = B -> A e. x ) ) $=
      ( cv wceq wcel wi wal eleq2 ceqsalv bicomi ) AEZCFBMGZHAIBCGZNOACDMCBJKL
      $.
  $}

  ${
    $d y A z $.  $d y B z $.
    $( Compare theorem *13.183 in [WhiteheadRussell] p. 178.  Only ` A ` is
       required to be a set.  (Contributed by Andrew Salmon, 3-Jun-2011.) $)
    pm13.183 $p |- ( A e. V -> ( A = B <-> A. z ( z = A <-> z = B ) ) ) $=
      ( vy cv wceq wal eqeq1 eqeq2 bibi1d albidv alrimiv wsb stdpc4 sbbi bibi2i
      wb eqsb3 sylbi equsb1 bi1 mpi syl impbii vtoclbg ) EFZCGZAFZUGGZUICGZRZAH
      ZBCGUIBGZUKRZAHEBDUGBCIUGBGZULUOAUPUJUNUKUGBUIJKLUHUMUHULAUGCUIJMUMULAENZ
      UHULAEOUQUJAENZUKAENZRZUHUJUKAEPUTURUHRZUHUSUHUREACSQVAURUHAEUAURUHUBUCTT
      UDUEUF $.
  $}

  ${
    $d y A $.  $d x y $.  $d y ph $.
    $( Restricted quantifier version of Theorem 19.3 of [Margaris] p. 89.  We
       don't need the non-empty class condition of ~ r19.3rzv when there is an
       outer quantifier.  (Contributed by NM, 25-Oct-2012.) $)
    rr19.3v $p |- ( A. x e. A A. y e. A ph <-> A. x e. A ph ) $=
      ( wral cv wceq biidd rspcv ralimia wcel ax-1 ralrimiv ralimi impbii ) ACD
      EZBDEABDEPABDAACBFZDCFZQGAHIJAPBDAACDARDKLMNO $.

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  We
       don't need the non-empty class condition of ~ r19.28zv when there is an
       outer quantifier.  (Contributed by NM, 29-Oct-2012.) $)
    rr19.28v $p |- ( A. x e. A A. y e. A ( ph /\ ps )
                      <-> A. x e. A ( ph /\ A. y e. A ps ) ) $=
      ( wa wral cv wcel simpl ralimi wceq biidd rspcv syl5 wi simpr a1i ralimia
      jcad r19.28av impbii ) ABFZDEGZCEGABDEGZFZCEGUDUFCECHZEIZUDAUEUDADEGUHAUC
      ADEABJKAADUGEDHUGLAMNOUDUEPUHUCBDEABQKRTSUFUDCEABDEUAKUB $.
  $}

  ${
    $d x y A $.  $d y ph $.  $d x ps $.
    $( Membership in a class abstraction, using implicit substitution.  (Closed
       theorem version of ~ elabg .)  (Contributed by NM, 7-Nov-2005.)  (Proof
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    elabgt $p |- ( ( A e. B /\ A. x ( x = A -> ( ph <-> ps ) ) ) ->
                 ( A e. { x | ph } <-> ps ) ) $=
      ( cv wceq wb wal wcel cab abid eleq1 syl5bbr bibi1d biimpd a2i alimi nfcv
      wi nfab1 nfel2 nfv nfbi pm5.5 spcgf imp sylan2 ) CFZDGZABHZTZCIDEJZUJDACK
      ZJZBHZTZCIZUPULUQCUJUKUPUJUKUPUJAUOBAUIUNJUJUOACLUIDUNMNOPQRUMURUPUQUPCDE
      CDSUOBCCDUNACUAUBBCUCUDUJUPUEUFUGUH $.
  $}

  ${
    elabgf.1 $e |- F/_ x A $.
    elabgf.2 $e |- F/ x ps $.
    elabgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitution.  Compare
       Theorem 6.13 of [Quine] p. 44.  This version has bound-variable
       hypotheses in place of distinct variable restrictions.  (Contributed by
       NM, 21-Sep-2003.)  (Revised by Mario Carneiro, 12-Oct-2016.) $)
    elabgf $p |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) $=
      ( cv cab wcel wb nfab1 nfel nfbi wceq eleq1 bibi12d abid vtoclgf ) CIZACJ
      ZKZALDUBKZBLCDEFUDBCCDUBFACMNGOUADPUCUDABUADUBQHRACST $.
  $}

  ${
    $d ps y $.  $d x A y $.  $d y ph $.
    elabf.1 $e |- F/ x ps $.
    elabf.2 $e |- A e. _V $.
    elabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitution.
       (Contributed by NM, 1-Aug-1994.)  (Revised by Mario Carneiro,
       12-Oct-2016.) $)
    elabf $p |- ( A e. { x | ph } <-> ps ) $=
      ( cvv wcel cab wb nfcv elabgf ax-mp ) DHIDACJIBKFABCDHCDLEGMN $.
  $}

  ${
    $d x ps $.  $d x A $.
    elab.1 $e |- A e. _V $.
    elab.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitution.  Compare
       Theorem 6.13 of [Quine] p. 44.  (Contributed by NM, 1-Aug-1994.) $)
    elab $p |- ( A e. { x | ph } <-> ps ) $=
      ( nfv elabf ) ABCDBCGEFH $.
  $}

  ${
    $d x ps $.  $d x y A $.
    elabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitution.  Compare
       Theorem 6.13 of [Quine] p. 44.  (Contributed by NM, 14-Apr-1995.) $)
    elabg $p |- ( A e. V -> ( A e. { x | ph } <-> ps ) ) $=
      ( nfcv nfv elabgf ) ABCDECDGBCHFI $.
  $}

  ${
    $d x ps $.  $d x A $.
    elab2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution.
       (Contributed by NM, 13-Sep-1995.) $)
    elab2g $p |- ( A e. V -> ( A e. B <-> ps ) ) $=
      ( wcel cab eleq2i elabg syl5bb ) DEIDACJZIDFIBENDHKABCDFGLM $.
  $}

  ${
    $d x ps $.  $d x A $.
    elab2.1 $e |- A e. _V $.
    elab2.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2.3 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution.
       (Contributed by NM, 13-Sep-1995.) $)
    elab2 $p |- ( A e. B <-> ps ) $=
      ( cvv wcel wb elab2g ax-mp ) DIJDEJBKFABCDEIGHLM $.
  $}

  ${
    $d x ps $.  $d x A $.
    elab4g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab4g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution.
       (Contributed by NM, 17-Oct-2012.) $)
    elab4g $p |- ( A e. B <-> ( A e. _V /\ ps ) ) $=
      ( wcel cvv elex elab2g biadan2 ) DEHDIHBDEJABCDEIFGKL $.
  $}

  ${
    $d y A $.
    elab3gf.1 $e |- F/_ x A $.
    elab3gf.2 $e |- F/ x ps $.
    elab3gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabgf .  (Contributed by NM, 6-Sep-2011.) $)
    elab3gf $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( wcel cab wb wn elabgf ibi pm2.21 impbid2 ja ) BDEIDACJZIZBKBLSBSBABCDRF
      GHMNBSOPABCDEFGHMQ $.
  $}

  ${
    $d x ps $.  $d x y A $.
    elab3g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabg .  (Contributed by NM, 29-Aug-2006.) $)
    elab3g $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( nfcv nfv elab3gf ) ABCDECDGBCHFI $.
  $}

  ${
    $d x ps $.  $d x A $.
    elab3.1 $e |- ( ps -> A e. _V ) $.
    elab3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction using implicit substitution.
       (Contributed by NM, 10-Nov-2000.) $)
    elab3 $p |- ( A e. { x | ph } <-> ps ) $=
      ( cvv wcel wi cab wb elab3g ax-mp ) BDGHIDACJHBKEABCDGFLM $.
  $}

  ${
    elrabf.1 $e |- F/_ x A $.
    elrabf.2 $e |- F/_ x B $.
    elrabf.3 $e |- F/ x ps $.
    elrabf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution.  This version has bound-variable hypotheses in place of
       distinct variable restrictions.  (Contributed by NM, 21-Sep-2003.) $)
    elrabf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( crab wcel cvv wa elex adantr cv cab df-rab eleq2i nfel nfan wceq elabgf
      eleq1 anbi12d syl5bb pm5.21nii ) DACEJZKZDLKZDEKZBMZDUHNUKUJBDENOUIDCPZEK
      ZAMZCQZKUJULUHUPDACERSUOULCDLFUKBCCDEFGTHUAUMDUBUNUKABUMDEUDIUEUCUFUG $.
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution.  (Contributed by NM, 21-May-1999.) $)
    elrab $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( nfcv nfv elrabf ) ABCDECDGCEGBCHFI $.

    $( Membership in a restricted class abstraction, using implicit
       substitution.  (Contributed by NM, 5-Oct-2006.) $)
    elrab3 $p |- ( A e. B -> ( A e. { x e. B | ph } <-> ps ) ) $=
      ( crab wcel elrab baib ) DACEGHDEHBABCDEFIJ $.
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elrab2.2 $e |- C = { x e. B | ph } $.
    $( Membership in a class abstraction, using implicit substitution.
       (Contributed by NM, 2-Nov-2006.) $)
    elrab2 $p |- ( A e. C <-> ( A e. B /\ ps ) ) $=
      ( wcel crab wa eleq2i elrab bitri ) DFIDACEJZIDEIBKFODHLABCDEGMN $.
  $}

  ${
    $d x y $.  $d y A $.  $d y ps $.
    ralab.1 $e |- ( y = x -> ( ph <-> ps ) ) $.
    $( Universal quantification over a class abstraction.  (Contributed by Jeff
       Madsen, 10-Jun-2010.) $)
    ralab $p |- ( A. x e. { y | ph } ch <-> A. x ( ps -> ch ) ) $=
      ( cab wral cv wcel wi wal df-ral vex elab imbi1i albii bitri ) CDAEGZHDIZ
      SJZCKZDLBCKZDLCDSMUBUCDUABCABETDNFOPQR $.

    $( Universal quantification over a restricted class abstraction.
       (Contributed by Jeff Madsen, 10-Jun-2010.) $)
    ralrab $p |- ( A. x e. { y e. A | ph } ch <-> A. x e. A ( ps -> ch ) ) $=
      ( wi crab cv wcel wa elrab imbi1i impexp bitri ralbii2 ) CBCHZDAEFIZFDJZS
      KZCHTFKZBLZCHUBRHUAUCCABETFGMNUBBCOPQ $.

    $( Existential quantification over a class abstraction.  (Contributed by
       Mario Carneiro, 23-Jan-2014.)  (Revised by Mario Carneiro,
       3-Sep-2015.) $)
    rexab $p |- ( E. x e. { y | ph } ch <-> E. x ( ps /\ ch ) ) $=
      ( cab wrex cv wcel wa wex df-rex vex elab anbi1i exbii bitri ) CDAEGZHDIZ
      SJZCKZDLBCKZDLCDSMUBUCDUABCABETDNFOPQR $.

    $( Existential quantification over a class abstraction.  (Contributed by
       Jeff Madsen, 17-Jun-2011.)  (Revised by Mario Carneiro, 3-Sep-2015.) $)
    rexrab $p |- ( E. x e. { y e. A | ph } ch <-> E. x e. A ( ps /\ ch ) ) $=
      ( wa crab cv wcel elrab anbi1i anass bitri rexbii2 ) CBCHZDAEFIZFDJZRKZCH
      SFKZBHZCHUAQHTUBCABESFGLMUABCNOP $.
  $}

  ${
    $d x y $.  $d x A $.  $d x ch $.  $d x ph $.  $d y ps $.
    ralab2.1 $e |- ( x = y -> ( ps <-> ch ) ) $.
    $( Universal quantification over a class abstraction.  (Contributed by
       Mario Carneiro, 3-Sep-2015.) $)
    ralab2 $p |- ( A. x e. { y | ph } ps <-> A. y ( ph -> ch ) ) $=
      ( cab wral cv wcel wi wal df-ral nfsab1 nfv nfim wceq eleq1 abid syl6bb
      imbi12d cbval bitri ) BDAEGZHDIZUDJZBKZDLACKZELBDUDMUGUHDEUFBEAEDNBEOPUHD
      OUEEIZQZUFABCUJUFUIUDJAUEUIUDRAESTFUAUBUC $.

    $( Universal quantification over a restricted class abstraction.
       (Contributed by Mario Carneiro, 3-Sep-2015.) $)
    ralrab2 $p |- ( A. x e. { y e. A | ph } ps <-> A. y e. A ( ph -> ch ) ) $=
      ( crab wral cv wcel wa cab wi wal df-rab raleqi ralab2 impexp albii
      df-ral bitr4i 3bitri ) BDAEFHZIBDEJFKZALZEMZIUFCNZEOZACNZEFIZBDUDUGAEFPQU
      FBCDEGRUIUEUJNZEOUKUHULEUEACSTUJEFUAUBUC $.

    $( Existential quantification over a class abstraction.  (Contributed by
       Mario Carneiro, 3-Sep-2015.) $)
    rexab2 $p |- ( E. x e. { y | ph } ps <-> E. y ( ph /\ ch ) ) $=
      ( cab wrex cv wcel wa wex df-rex nfsab1 nfv nfan wceq eleq1 abid syl6bb
      anbi12d cbvex bitri ) BDAEGZHDIZUDJZBKZDLACKZELBDUDMUGUHDEUFBEAEDNBEOPUHD
      OUEEIZQZUFABCUJUFUIUDJAUEUIUDRAESTFUAUBUC $.

    $( Existential quantification over a class abstraction.  (Contributed by
       Mario Carneiro, 3-Sep-2015.) $)
    rexrab2 $p |- ( E. x e. { y e. A | ph } ps <-> E. y e. A ( ph /\ ch ) ) $=
      ( crab wrex cv wcel wa cab wex df-rab rexeqi rexab2 anass exbii df-rex
      bitr4i 3bitri ) BDAEFHZIBDEJFKZALZEMZIUECLZENZACLZEFIZBDUCUFAEFOPUEBCDEGQ
      UHUDUILZENUJUGUKEUDACRSUIEFTUAUB $.
  $}

  ${
    $d w y A $.  $d w x z $.  $d x y $.  $d A z $.
    $( Identity used to create closed-form versions of bound-variable
       hypothesis builders for class expressions.  (Contributed by NM,
       10-Nov-2005.)  (Proof shortened by Mario Carneiro, 12-Oct-2016.) $)
    abidnf $p |- ( F/_ x A -> { z | A. x z e. A } = A ) $=
      ( wnfc cv wcel wal sp nfcr nfrd impbid2 abbi1dv ) ACDZBECFZAGZBCMONNAHMNA
      ABCIJKL $.
  $}

  ${
    $d y A $.  $d x z $.  $d x y $.  $d z A $.
    dedhb.1 $e |- ( A = { z | A. x z e. A } -> ( ph <-> ps ) ) $.
    dedhb.2 $e |- ps $.
    $( A deduction theorem for converting the inference ` |- F/_ x A ` =>
       ` |- ph ` into a closed theorem.  Use ~ nfa1 and ~ nfab to eliminate the
       hypothesis of the substitution instance ` ps ` of the inference.  For
       converting the inference form into a deduction form, ~ abidnf is
       useful.  (Contributed by NM, 8-Dec-2006.) $)
    dedhb $p |- ( F/_ x A -> ph ) $=
      ( wnfc cv wcel wal cab wceq wb abidnf eqcomd syl mpbiri ) CEHZABGSEDIEJCK
      DLZMABNSTECDEOPFQR $.
  $}

  ${
    $d y ph $.  $d x y ps $.  $d x y A $.
    eqeu.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A condition which implies existential uniqueness.  (Contributed by Jeff
       Hankins, 8-Sep-2009.) $)
    eqeu $p |- ( ( A e. B /\ ps /\ A. x ( ph -> x = A ) ) -> E! x ph ) $=
      ( vy wcel cv wceq wi wal w3a wex weu spcegv imp 3adant3 eqeq2 imbi2d nfv
      albidv 3adant2 eu3 sylanbrc ) DEHZBACIZDJZKZCLZMACNZAUGGIZJZKZCLZGNZACOUF
      BUKUJUFBUKABCDEFPQRUFUJUPBUFUJUPUOUJGDEULDJZUNUICUQUMUHAULDUGSTUBPQUCACGA
      GUAUDUE $.
  $}

  ${
    $d x y A $.
    $( Equality has existential uniqueness.  (Contributed by NM,
       25-Nov-1994.) $)
    eueq $p |- ( A e. _V <-> E! x x = A ) $=
      ( vy cv wceq wex wa wi wal cvv wcel weu eqtr3 biantru isset eqeq1 3bitr4i
      gen2 eu4 ) ADZBEZAFZUBUACDZBEZGTUCEHZCIAIZGBJKUAALUFUBUEACTUCBMRNABOUAUDA
      CTUCBPSQ $.
  $}

  ${
    $d x A $.
    eueq1.1 $e |- A e. _V $.
    $( Equality has existential uniqueness.  (Contributed by NM,
       5-Apr-1995.) $)
    eueq1 $p |- E! x x = A $=
      ( cvv wcel cv wceq weu eueq mpbi ) BDEAFBGAHCABIJ $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    eueq2.1 $e |- A e. _V $.
    eueq2.2 $e |- B e. _V $.
    $( Equality has existential uniqueness (split into 2 cases).  (Contributed
       by NM, 5-Apr-1995.) $)
    eueq2 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) $=
      ( cv wceq wa wn weu eueq1 euanv biimpri mpan2 euorv bianfd eubidv mpbid
      wo notnot1 syl2anc orcom orbi2d syl5bb mpdan id orbi1d pm2.61i ) AABGZCHZ
      IZAJZUJDHZIZTZBKZAUMULTZBKZUQAUMJULBKZUSAUAZAUKBKZUTBCELUTAVBIAUKBMNOUMUL
      BPUBAURUPBURULUMTAUPUMULUCAUMUOULAUMUNVAQUDUERSUMAUOTZBKZUQUMUOBKZVDUMUNB
      KZVEBDFLVEUMVFIUMUNBMNOAUOBPUFUMVCUPBUMAULUOUMAUKUMUGQUHRSUI $.
  $}

  ${
    $d x ph $.  $d x ps $.  $d x A $.  $d x B $.  $d x C $.
    eueq3.1 $e |- A e. _V $.
    eueq3.2 $e |- B e. _V $.
    eueq3.3 $e |- C e. _V $.
    eueq3.4 $e |- -. ( ph /\ ps ) $.
    $( Equality has existential uniqueness (split into 3 cases).  (Contributed
       by NM, 5-Apr-1995.)  (Proof shortened by Mario Carneiro,
       28-Sep-2015.) $)
    eueq3 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( wceq wa wo wn w3o weu eueq1 ibar wb con2i cv pm2.45 imnani jaoi orbi12d
      bianfd mtbid biorf bitrd 3orrot df-3or bitri syl6bbr eubidv adantr pm2.46
      syl mpbii simpl orim12i con3i 3orcomb ecase3 ) ABACUAZDKZLZABMZNZVDEKZLZB
      VDFKZLZOZCPZAVECPVNCDGQAVEVMCAVEVJVLMZVFMZVMAVEVFVPAVERAVONVFVPSAVHBMZVOV
      QAVHANBABUBZABABJUCZTUDTAVHVJBVLAVHVIVHAVRTUFABVKVSUFUEUGVOVFUHUQUIVMVJVL
      VFOVPVFVJVLUJVJVLVFUKULUMUNURBVKCPVNCFIQBVKVMCBVKVFVJMZVLMZVMBVKVLWABVKRB
      VTNVLWASVTBVFBNZVJAWBVEVSUOVHWBVIABUPUOUDTVTVLUHUQUIVFVJVLUKUMUNURVHVICPV
      NCEHQVHVIVMCVHVIVFVLMZVJMZVMVHVIVJWDVHVIRVHWCNVJWDSWCVGVFAVLBAVEUSBVKUSUT
      VAWCVJUHUQUIVMVFVLVJOWDVFVJVLVBVFVLVJUKULUMUNURVC $.
  $}

  ${
    $d x A $.
    $( There is at most one set equal to a class.  (Contributed by NM,
       8-Mar-1995.) $)
    moeq $p |- E* x x = A $=
      ( cv wceq wmo wex weu wi cvv wcel isset eueq bitr3i biimpi df-mo mpbir )
      ACBDZAEQAFZQAGZHRSRBIJSABKABLMNQAOP $.
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d x y A $.  $d x y B $.  $d x y C $.
    moeq3.1 $e |- B e. _V $.
    moeq3.2 $e |- C e. _V $.
    moeq3.3 $e |- -. ( ph /\ ps ) $.
    $( "At most one" property of equality (split into 3 cases).  (The first 2
       hypotheses could be eliminated with longer proof.)  (Contributed by NM,
       23-Apr-1995.) $)
    moeq3 $p |- E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( vy cvv wcel cv wceq wa wo wn w3o weu biidd eqeq2 anbi2d 3orbi123d eueq3
      wmo eubidv vex vtoclg eumo syl wi eleq1 mpbii pm2.21 anim2d orim1d 3orass
      wal syl5 3imtr4g alrimiv euimmo ee10 pm2.61i ) DKLZACMZDNZOZABPQVFENOZBVF
      FNOZRZCUEZVEVKCSZVLAVFJMZNZOZVIVJRZCSZVMJDKVNDNZVQVKCVSVPVHVIVIVJVJVSVOVG
      AVNDVFUAUBVSVITVSVJTUCUFABCVNEFJUGGHIUDZUHVKCUIUJVEQZVKVQUKZCURVRVLWAWBCW
      AVHVIVJPZPVPWCPVKVQWAVHVPWCWAVGVOAVGVEWAVOVGVFKLVECUGVFDKULUMVEVOUNUSUOUP
      VHVIVJUQVPVIVJUQUTVAVTVKVQCVBVCVD $.
  $}

  ${
    $d x y A $.
    mosub.1 $e |- E* x ph $.
    $( "At most one" remains true after substitution.  (Contributed by NM,
       9-Mar-1995.) $)
    mosub $p |- E* x E. y ( y = A /\ ph ) $=
      ( cv wceq wmo wal wa wex moeq ax-gen moexexv mp2an ) CFDGZCHABHZCIPAJCKBH
      CDLQCEMPACBNO $.
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Theorem for inferring "at most one."  (Contributed by NM,
       17-Oct-1996.) $)
    mo2icl $p |- ( A. x ( ph -> x = A ) -> E* x ph ) $=
      ( vy cvv wcel cv wceq wi wal wmo eqeq2 imbi2d albidv imbi1d wex 19.8a nfv
      mo2 wn sylibr vtoclg vex eleq1 mpbii imim2i con3rr3 alimdv alnex exmo ori
      sylbi syl6 pm2.61i ) CEFZABGZCHZIZBJZABKZIZAUPDGZHZIZBJZUTIVADCEVBCHZVEUS
      UTVFVDURBVFVCUQAVBCUPLMNOVEVEDPUTVEDQABDADRSUAUBUOTZUSATZBJZUTVGURVHBURAU
      OUQUOAUQUPEFUOBUCUPCEUDUEUFUGUHVIABPZTUTABUIVJUTABUJUKULUMUN $.
  $}

  ${
    $d x y A $.  $d y ph $.  $d x y ps $.
    moi2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Consequence of "at most one."  (Contributed by NM, 2-Jan-2015.) $)
    mob2 $p |- ( ( A e. B /\ E* x ph /\ ph ) -> ( x = A <-> ps ) ) $=
      ( vy wcel wmo w3a cv wceq simp3 syl5ibcom wi wa wsb wal nfs1v sbequ12 nfv
      mo4f sylbi sbhypf anbi2d eqeq2 imbi12d spcgv syl5 imp exp3a 3impia impbid
      sp ) DEHZACIZAJZCKZDLZBUQAUSBUOUPAMFNUOUPABUSOUOUPPABUSUOUPABPZUSOZUPAACG
      QZPZURGKZLZOZGRZUOVAUPVGCRVGAVBCGACGSACGTUBVGCUNUCVFVAGDEVDDLZVCUTVEUSVHV
      BBAABCGDBCUAFUDUEVDDURUFUGUHUIUJUKULUM $.

    $( Consequence of "at most one."  (Contributed by NM, 29-Jun-2008.) $)
    moi2 $p |- ( ( ( A e. B /\ E* x ph ) /\ ( ph /\ ps ) ) -> x = A ) $=
      ( wcel wmo wa cv wceq wb mob2 3expa biimprd impr ) DEGZACHZIZABCJDKZSAITB
      QRATBLABCDEFMNOP $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.  $d y ph $.  $d x y ps $.
    moi.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    moi.2 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( Equality implied by "at most one."  (Contributed by NM, 18-Feb-2006.) $)
    mob $p |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ps ) ->
                ( A = B <-> ch ) ) $=
      ( wcel wa wmo wceq wb wi cvv elex w3a nfv cv nfcv nfmo1 nf3an nfim bibi1d
      3anbi3d eqeq1 imbi12d mob2 vtoclgf com12 3expib syl com3r imp 3impib ) EG
      KZFHKZLADMZBEFNZCOZURUSUTBLZVBPUSVCURVBUSFQKZVCURVBPZPFHRVDUTBVEURVDUTBSZ
      VBVDUTASZDUAZFNZCOZPVFVBPDEGDEUBVFVBDVDUTBDVDDTADUCBDTUDVBDTUEVHENZVGVFVJ
      VBVKABVDUTIUGVKVIVACVHEFUHUFUIACDFQJUJUKULUMUNUOUPUQ $.

    $( Equality implied by "at most one."  (Contributed by NM, 18-Feb-2006.) $)
    moi $p |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ( ps /\ ch ) ) ->
              A = B ) $=
      ( wcel wa wmo wceq wi w3a mob biimprd 3expia imp3a 3impia ) EGKFHKLZADMZB
      CLEFNZUBUCLBCUDUBUCBCUDOUBUCBPUDCABCDEFGHIJQRSTUA $.
  $}

  ${
    $d B x y $.  $d A x y $.  $d ph y $.  $d ps x y $.
    morex.1 $e |- B e. _V $.
    morex.2 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Derive membership from uniqueness.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    morex $p |- ( ( E. x e. A ph /\ E* x ph ) -> ( ps -> B e. A ) ) $=
      ( wmo wrex wcel wi cv wa wex df-rex exancom bitri wal nfmo1 nfe1 nfan syl
      mopick alrimi wceq eleq1 imbi12d spcv sylan2b ancoms ) ACHZACDIZBEDJZKZUL
      UKACLZDJZMZCNZUNULUPAMCNURACDOUPACPQUKURMZAUPKZCRUNUSUTCUKURCACSUQCTUAAUP
      CUCUDUTUNCEFUOEUEABUPUMGUOEDUFUGUHUBUIUJ $.
  $}

  ${
    $d x ph $.  $d x A $.
    euxfr2.1 $e |- A e. _V $.
    euxfr2.2 $e |- E* y x = A $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  (Contributed by NM,
       14-Nov-2004.) $)
    euxfr2 $p |- ( E! x E. y ( x = A /\ ph ) <-> E! y ph ) $=
      ( cv wceq wa wex weu wmo wi 2euswap moani ancom mobii mpbi mpg moeq biidd
      impbii ceqsexv eubii bitri ) BGDHZAIZCJBKZUGBJZCKZACKUHUJUGCLZUHUJMBUGBCN
      AUFIZCLUKUFACFOULUGCAUFPZQRSUGBLZUJUHMCUGCBNULBLUNUFABBDTOULUGBUMQRSUBUIA
      CAABDEUFAUAUCUDUE $.
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.
    euxfr.1 $e |- A e. _V $.
    euxfr.2 $e |- E! y x = A $.
    euxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  (Contributed by NM,
       14-Nov-2004.) $)
    euxfr $p |- ( E! x ph <-> E! y ps ) $=
      ( weu cv wceq wa wex euex ax-mp biantrur 19.41v pm5.32i exbii 3bitr2i
      eubii eumoi euxfr2 bitri ) ACICJEKZBLZDMZCIBDIAUGCAUEDMZALUEALZDMUGUHAUED
      IUHGUEDNOPUEADQUIUFDUEABHRSTUABCDEFUEDGUBUCUD $.
  $}

  ${
    $d y z w ph $.  $d x z ps $.  $d y z w A $.  $d x z B $.  $d x y w $.
    euind.1 $e |- B e. _V $.
    euind.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    euind.3 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality.  (Contributed by NM,
       11-Oct-2010.) $)
    euind $p |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph )
                 -> E! z A. x ( ph -> z = A ) ) $=
      ( vw wa wceq wi wal wex cv exbii bitri imim2i cbvexv isseti 19.41v bitr3i
      weu biantrur excom wb eqeq2 bi2 imbi1i impexp 3bitr3i sylib 2alimi 19.23v
      an31 syl albii 19.21v eximdv syl5bi imp pm4.24 biimpi eqtr3 syl56 alanimi
      prth com12 syl5 alrimivv adantl eqeq1 imbi2d albidv eu4 sylanbrc ) ABLZFG
      MZNZDOCOZACPZLAEQZFMZNZCOZEPZWGAKQZFMZNZCOZLZWDWIMZNZKOEOZWGEUEWBWCWHWCWD
      GMZBLZDPZEPZWBWHWCBDPZWTABCDIUAXAWQEPZBLZDPZWTBXCDXBBEGHUBUFRXDWREPZDPWTX
      EXCDWQBEUCRWRDEUGUDSSWBWSWGEWBWRWFNZDOZCOZWSWGNZWAXFCDWAVSWEWQUHZNZXFVTXJ
      VSFGWDUITXKVSWQWENZNZXFXJXLVSWEWQUJTVSWQLZWENWRALZWENXMXFXNXOWEABWQUQUKVS
      WQWEULWRAWEULUMUNURUOXHWSWFNZCOXIXGXPCWRWFDUPUSWSWFCUTSUNVAVBVCWCWPWBWCWO
      EKWMAWNNZCOZWCWNWFWKXQCAAALZWFWKLWEWJLWNAXSAVDVEAWEAWJVIWDWIFVFVGVHXRWCWN
      XRWCWNNAWNCUPVEVJVKVLVMWGWLEKWNWFWKCWNWEWJAWDWIFVNVOVPVQVR $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.  $d x ps $.
    $( A way to express restricted uniqueness.  (Contributed by NM,
       22-Nov-1994.) $)
    reu2 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( cv wcel wa weu wex wsb wceq wi wal wreu nfv df-ral impexp albii 3bitr4i
      wral wrex eu2 df-reu df-rex 19.21v nfs1v nfan sbequ12 anbi12d sbie anbi2i
      eleq1 an4 bitri imbi1i 3bitri imbi2i bitr4i anbi12i ) BEZDFZAGZBHVBBIZVBV
      BBCJZGZUTCEZKZLZCMZBMZGABDNABDUAZAABCJZGZVGLZCDTZBDTZGVBBCVBCOUBABDUCVKVC
      VPVJABDUDVPVAVOLZBMVJVOBDPVIVQBVAVFDFZVNLZLZCMVAVSCMZLVIVQVAVSCUEVHVTCVHV
      AVRGZVMGZVGLWBVNLVTVEWCVGVEVBVRVLGZGWCVDWDVBVBWDBCVRVLBVRBOABCUFUGVGVAVRA
      VLUTVFDULABCUHUIUJUKVAAVRVLUMUNUOWBVMVGQVAVRVNQUPRVOWAVAVNCDPUQSRURUSS $.

    $( A way to express restricted uniqueness.  (Contributed by NM,
       20-Oct-2006.) $)
    reu6 $p |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) $=
      ( cv wcel wa wceq wb wal wex wi bi1 bi2 adantr impbid imim2i imp 3bitr4i
      ex wreu weu wral wrex df-reu wsb eleq1 sbequ12 anbi12d eqeq1 bibi12d eqid
      19.28v tbt simpl sylbir syl6bi spimv expdimp simpr syl6 sps jca a5i imp3a
      adantl eleq1a com23 adantll alimi impbii df-ral anbi2i exbii df-eu df-rex
      jcai bitri ) ABDUABEZDFZAGZBUBZAVSCEZHZIZBDUCZCDUDZABDUEWAWDIZBJZCKWCDFZW
      FGZCKWBWGWIWKCWJVTWELZGZBJZWJWLBJZGWIWKWJWLBUMWIWNWHWMBWIWJWLWHWJBCWDWHWJ
      ABCUFZGZWCWCHZIZWJWDWAWQWDWRWDVTWJAWPVSWCDUGABCUHUIVSWCWCUJUKWSWQWJWRWQWC
      ULUNWJWPUOUPUQURWHWLBWHVTWEWHVTGAWDWHVTAWDWAWDMUSWHWDALZVTWHWDWAAWAWDNVTA
      UTVAOPTVBVCVDWMWHBWMWAWDWLWAWDLWJWLVTAWDWEAWDLVTAWDMQVEVFWMWDWAWMWDGVTAWM
      WDVTWJWDVTLWLWCDVSVGORWLWDVTALZWJWLWDXAWLVTWDAWEWTVTAWDNQVHRVIVQTPVJVKWFW
      OWJWEBDVLVMSVNWABCVOWFCDVPSVR $.

    $( A way to express restricted uniqueness.  (Contributed by NM,
       24-Oct-2006.) $)
    reu3 $p |- ( E! x e. A ph <->
               ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) $=
      ( wreu wrex cv wceq wi wral wa reurex wb reu6 bi1 ralimi reximi sylbi wex
      wal jca rexex anim2i weu nfv eu3 df-reu df-rex df-ral impexp albii bitr4i
      wcel exbii anbi12i 3bitr4i sylibr impbii ) ABDEZABDFZABGZCGHZIZBDJZCDFZKZ
      USUTVEABDLUSAVBMZBDJZCDFVEABCDNVHVDCDVGVCBDAVBOPQRUAVFUTVDCSZKZUSVEVIUTVD
      CDUBUCVADUMZAKZBUDVLBSZVLVBIZBTZCSZKUSVJVLBCVLCUEUFABDUGUTVMVIVPABDUHVDVO
      CVDVKVCIZBTVOVCBDUIVNVQBVKAVBUJUKULUNUOUPUQUR $.

    $( A condition which implies existential uniqueness.  (Contributed by Mario
       Carneiro, 2-Oct-2015.) $)
    reu6i $p |- ( ( B e. A /\ A. x e. A ( ph <-> x = B ) ) -> E! x e. A ph ) $=
      ( vy wcel cv wceq wb wral wa wrex wreu eqeq2 bibi2d ralbidv rspcev sylibr
      reu6 ) DCFABGZDHZIZBCJZKATEGZHZIZBCJZECLABCMUGUCEDCUDDHZUFUBBCUHUEUAAUDDT
      NOPQABECSR $.

    eqreu.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( A condition which implies existential uniqueness.  (Contributed by Mario
       Carneiro, 2-Oct-2015.) $)
    eqreu $p |- ( ( B e. A /\ ps /\ A. x e. A ( ph -> x = B ) ) ->
      E! x e. A ph ) $=
      ( wcel cv wceq wi wral wreu wa wb ralbiim ceqsralv anbi2d syl5bb reu6i ex
      sylbird 3impib 3com23 ) EDGZACHEIZJCDKZBACDLZUDUFBUGUDUFBMZAUENCDKZUGUIUF
      UEAJCDKZMUDUHAUECDOUDUJBUFABCEDFPQRUDUIUGACDESTUAUBUC $.
  $}

  ${
    $d x y z A $.  $d y z ph $.  $d x z ps $.
    rmo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Restricted "at most one" using implicit substitution.  (Contributed by
       NM, 24-Oct-2006.)  (Revised by NM, 16-Jun-2017.) $)
    rmo4 $p |- ( E* x e. A ph <->
               A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) $=
      ( wrmo cv wcel wa wmo weq wi wral df-rmo wal bitri impexp albii df-ral
      an4 ancom anbi1i imbi1i 3bitri r19.21v 3bitr2i eleq1 anbi12d mo4 3bitr4i
      ) ACEGCHZEIZAJZCKZABJZCDLZMZDENZCENZACEOUNDHZEIZBJZJZUQMZDPZCPUMUSMZCPUOU
      TVFVGCVFVBUMURMZMZDPVHDENVGVEVIDVEVBUMJZUPJZUQMVJURMVIVDVKUQVDUMVBJZUPJVK
      UMAVBBUAVLVJUPUMVBUBUCQUDVJUPUQRVBUMURRUESVHDETUMURDEUFUGSUNVCCDUQUMVBABU
      LVAEUHFUIUJUSCETUKQ $.

    $( Restricted uniqueness using implicit substitution.  (Contributed by NM,
       23-Nov-1994.) $)
    reu4 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( wreu wrex wrmo wa weq wi wral reu5 rmo4 anbi2i bitri ) ACEGACEHZACEIZJR
      ABJCDKLDEMCEMZJACENSTRABCDEFOPQ $.

    $( Restricted uniqueness using implicit substitution.  (Contributed by NM,
       24-Oct-2006.) $)
    reu7 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             E. x e. A A. y e. A ( ps -> x = y ) ) ) $=
      ( vz wreu wrex cv wceq wi wral wa reu3 eqeq1 eqcom syl6bb imbi12d bitri
      cbvralv rexbii imbi2d ralbidv cbvrexv anbi2i ) ACEHACEIZACJZGJZKZLZCEMZGE
      IZNUGBUHDJZKZLZDEMZCEIZNACGEOUMURUGUMBUIUNKZLZDEMZGEIURULVAGEUKUTCDEUOABU
      JUSFUOUJUNUIKUSUHUNUIPUNUIQRSUAUBVAUQGCEUIUHKZUTUPDEVBUSUOBUIUHUNPUCUDUET
      UFT $.

    $( Restricted uniqueness using implicit substitution.  (Contributed by NM,
       24-Oct-2006.) $)
    reu8 $p |- ( E! x e. A ph <-> E. x e. A ( ph /\
                A. y e. A ( ps -> x = y ) ) ) $=
      ( wreu cv wceq wb wral wrex wi wa cbvreuv reu6 wcel ralbii wal syl5bb a1i
      dfbi2 ancom equcom imbi2i biimt df-ral bi2.04 albii eleq1 imbi12d equcoms
      vex bicomd ceqsalv 3bitrri syl6bb anbi12d r19.26 syl6rbbr rexbiia 3bitri
      ) ACEGBDEGBDHZCHZIZJZDEKZCELABVDVCIZMZDEKZNZCELABCDEFOBDCEPVGVKCEVGBVEMZV
      EBMZNZDEKZVDEQZVKVFVNDEBVEUBRVPVKVLDEKZVMDEKZNZVOVKVJANVPVSAVJUCVPVJVQAVR
      VJVQJVPVIVLDEVHVEBCDUDUERUAVPAVPAMZVRVPAUFVRVCEQZVMMZDSVEWABMZMZDSVTVMDEU
      GWBWDDWAVEBUHUIWCVTDVDCUMWCVTJCDVHVTWCVHVPWAABVDVCEUJFUKUNULUOUPUQURTVLVM
      DEUSUTTVAVB $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Equality has existential uniqueness.  (Contributed by Mario Carneiro,
       1-Sep-2015.) $)
    reueq $p |- ( B e. A <-> E! x e. A x = B ) $=
      ( wcel cv wceq wrex wreu risset wrmo wmo moeq mormo ax-mp mpbiran2 bitr4i
      reu5 ) CBDAECFZABGZRABHZACBITSRABJZRAKUAACLRABMNRABQOP $.
  $}

  $( Restricted "at most one" still holds when a conjunct is added.
     (Contributed by NM, 16-Jun-2017.) $)
  rmoan $p |- ( E* x e. A ph -> E* x e. A ( ps /\ ph ) ) $=
    ( cv wcel wa wmo wrmo moan an12 mobii sylib df-rmo 3imtr4i ) CEDFZAGZCHZPBA
    GZGZCHZACDISCDIRBQGZCHUAQBCJUBTCBPAKLMACDNSCDNO $.

  $( Restricted "at most one" is preserved through implication (note wff
     reversal).  (Contributed by Alexander van der Vekens, 17-Jun-2017.) $)
  rmoim $p |- ( A. x e. A ( ph -> ps )
        -> ( E* x e. A ps -> E* x e. A ph ) ) $=
    ( wi wral cv wcel wa wal wrmo df-ral imdistan albii wmo moim df-rmo 3imtr4g
    bitri sylbi ) ABEZCDFZCGDHZAIZUCBIZEZCJZBCDKZACDKZEUBUCUAEZCJUGUACDLUJUFCUC
    ABMNSUGUECOUDCOUHUIUDUECPBCDQACDQRT $.

  ${
    rmoimia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Restricted "at most one" is preserved through implication (note wff
       reversal).  (Contributed by Alexander van der Vekens, 17-Jun-2017.) $)
    rmoimia $p |- ( E* x e. A ps -> E* x e. A ph ) $=
      ( wi wrmo rmoim mprg ) ABFBCDGACDGFCDABCDHEI $.
  $}

  ${
    rmoimi2.1 $e |- A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) $.
    $( Restricted "at most one" is preserved through implication (note wff
       reversal).  (Contributed by Alexander van der Vekens, 17-Jun-2017.) $)
    rmoimi2 $p |- ( E* x e. B ps -> E* x e. A ph ) $=
      ( cv wcel wa wmo wrmo wi wal moim ax-mp df-rmo 3imtr4i ) CGZEHBIZCJZRDHAI
      ZCJZBCEKACDKUASLCMTUBLFUASCNOBCEPACDPQ $.
  $}

  ${
    $d x y A $.  $d x B $.
    $( A condition allowing swap of uniqueness and existential quantifiers.
       (Contributed by Thierry Arnoux, 7-Apr-2017.)  (Revised by NM,
       16-Jun-2017.) $)
    2reuswap $p |- ( A. x e. A E* y e. B ph ->
                   ( E! x e. A E. y e. B ph -> E! y e. B E. x e. A ph ) ) $=
      ( wral cv wcel wa wmo wrex wreu wal wex weu df-reu r19.42v df-rex bitri
      wi wrmo df-rmo ralbii df-ral moanimv albii bitr4i bitr3i an12 exbii eubii
      2euswap 3imtr4g sylbi ) ACEUAZBDFCGEHZAIZCJZBDFZACEKZBDLZABDKZCELZTZUOURB
      DACEUBUCUSBGDHZUQIZCJZBMZVDUSVEURTZBMVHURBDUDVGVIBVEUQCUEUFUGVHVFCNZBOZVF
      BNZCOZVAVCVFBCULVAVEUTIZBOVKUTBDPVNVJBVNUPVEAIZIZCNZVJVNVOCEKVQVEACEQVOCE
      RUHVPVFCUPVEAUIUJSUKSVCUPVBIZCOVMVBCEPVRVLCVRUQBDKVLUPABDQUQBDRUHUKSUMUNU
      N $.
  $}

  ${
    $d w y z A $.  $d x z B $.  $d w x y z C $.  $d w y z ph $.  $d x z ps $.
    reuind.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    reuind.2 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality.  (Contributed by NM,
       16-Oct-2010.) $)
    reuind $p |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) )
         -> A = B ) /\ E. x ( A e. C /\ ph ) )
                 -> E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) $=
      ( vw wcel wa wceq wi wal wex cv wrex bitri wral wreu eleq1d anbi12d exbii
      cbvexv r19.41v rexcom4 risset anbi1i 3bitr4ri wb eqeq2 imim2i an31 imbi1i
      bi2 impexp 3bitr3i sylib 2alimi 19.23v an12 adantr pm5.32ri bitr4i 19.42v
      syl eleq1 albii 19.21v exp3a reximdvai syl5bi imp pm4.24 prth eqtr3 syl56
      biimpi alanimi com12 syl5 a1d ralrimivv adantl eqeq1 imbi2d reu4 sylanbrc
      albidv ) FHLZAMZGHLZBMZMZFGNZOZDPCPZWMCQZMWMERZFNZOZCPZEHSZXDWMKRZFNZOZCP
      ZMZXAXFNZOZKHUAEHUAZXDEHUBWSWTXEWTXAGNZBMZDQZEHSZWSXEWTWODQZXQWMWOCDCRDRN
      ZWLWNABXSFGHJUCIUDUFXOEHSZDQXNEHSZBMZDQXQXRXTYBDXNBEHUGUEXOEDHUHWOYBDWNYA
      BEGHUIUJUEUKTWSXPXDEHWSXAHLZXPXDWSXNWOMZXCOZDPZCPZYCXPMZXDOZWRYECDWRWPXBX
      NULZOZYEWQYJWPFGXAUMUNYKWPXNXBOZOZYEYJYLWPXBXNUQUNWPXNMZXBOYDWMMZXBOYMYEY
      NYOXBWMWOXNUOUPWPXNXBURYDWMXBURUSUTVHVAYGYHXCOZCPYIYFYPCYFYDDQZXCOYPYDXCD
      VBYQYHXCYQYCXOMZDQYHYDYRDYDWNXOMYRXNWNBVCXOYCWNXNYCWNULBXAGHVIVDVEVFUEYCX
      ODVGTUPTVJYHXCCVKTUTVLVMVNVOWTXMWSWTXLEKHHWTXLYCXFHLMXJWMXKOZCPZWTXKXCXHY
      SCWMWMWMMZXCXHMXBXGMXKWMUUAWMVPVTWMXBWMXGVQXAXFFVRVSWAYTWTXKYTWTXKOWMXKCV
      BVTWBWCWDWEWFXDXIEKHXKXCXHCXKXBXGWMXAXFFWGWHWKWIWJ $.
  $}

  ${
    $d y A $.  $d x B $.  $d x y $.
    $( Double restricted quantification with "at most one," analogous to
       ~ 2moex .  (Contributed by Alexander van der Vekens, 17-Jun-2017.) $)
    2rmorex $p |- ( E* x e. A E. y e. B ph -> A. y e. B E* x e. A ph ) $=
      ( wrex wrmo nfcv nfre1 nfrmo cv wcel wi wral ex ralrimivw rmoim syl com12
      rspe ralrimi ) ACEFZBDGZABDGZCEUBCBDCDHACEIJCKELZUCUDUEAUBMZBDNUCUDMUEUFB
      DUEAUBACETOPAUBBDQRSUA $.

    $( Lemma for ~ 2reu5 .  Note that ` E! x e. A E! y e. B ph ` does not mean
       "there is exactly one ` x ` in ` A ` and exactly one ` y ` in ` B ` such
       that ` ph ` holds;" see comment for ~ 2eu5 .  (Contributed by Alexander
       van der Vekens, 17-Jun-2017.) $)
    2reu5lem1 $p |- ( E! x e. A E! y e. B ph <->
                   E! x E! y ( x e. A /\ y e. B /\ ph ) ) $=
      ( wreu cv wcel wa weu w3a df-reu reubii euanv bicomi 3anass eubii bitri )
      ACEFZBDFCGEHZAIZCJZBDFZBGDHZTAKZCJZBJZSUBBDACELMUCUDUBIZBJUGUBBDLUHUFBUHU
      DUAIZCJZUFUJUHUDUACNOUIUECUEUIUDTAPOQRQRR $.

    $( Lemma for ~ 2reu5 .  (Contributed by Alexander van der Vekens,
       17-Jun-2017.) $)
    2reu5lem2 $p |- ( A. x e. A E* y e. B ph <->
                   A. x E* y ( x e. A /\ y e. B /\ ph ) ) $=
      ( wrmo wral cv wcel wa wmo w3a wal df-rmo ralbii wi df-ral moanimv bicomi
      bitri 3anass mobii albii ) ACEFZBDGCHEIZAJZCKZBDGZBHDIZUEALZCKZBMZUDUGBDA
      CENOUHUIUGPZBMULUGBDQUMUKBUMUIUFJZCKZUKUOUMUIUFCRSUNUJCUJUNUIUEAUASUBTUCT
      T $.
  $}

  ${
    $d w y z A $.  $d w x z B $.  $d x y $.  $d ph w $.  $d ph z $.
    $( Lemma for ~ 2reu5 .  This lemma is interesting in its own right, showing
       that existential restriction in the last conjunct (the "at most one"
       part) is optional; compare ~ rmo2 .  (Contributed by Alexander van der
       Vekens, 17-Jun-2017.) $)
    2reu5lem3 $p |- ( ( E! x e. A E! y e. B ph /\ A. x e. A E* y e. B ph )
                   <-> ( E. x e. A E. y e. B ph
                         /\ E. z E. w A. x e. A A. y e. B
                            ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( wreu wral wa cv wcel weu wal wex weq wi wrex exbii 3bitri w3a 2reu5lem1
      wrmo wmo 2reu5lem2 anbi12i 2eu5 3anass 19.42v df-rex bicomi anbi2i bitr4i
      3anan12 imbi1i impexp imbi2i albii df-ral r19.21v 3bitr2i ) ACGHBFHZACGUC
      BFIZJBKFLZCKGLZAUAZCMBMZVFCUDBNZJVFCOZBOZVFBDPCEPJZQZCNZBNZEOZDOZJACGRZBF
      RZAVKQZCGIZBFIZEOZDOZJVBVGVCVHABCFGUBABCFGUEUFVFBCDEUGVJVRVPWCVJVDVQJZBOV
      RVIWDBVIVDVEAJZJZCOVDWECOZJWDVFWFCVDVEAUHSVDWECUIWGVQVDVQWGACGUJUKULTSVQB
      FUJUMVOWBDVNWAEVNVDVTQZBNWAVMWHBVMVEVDVSQZQZCNWICGIWHVLWJCVLVEVDAJZJZVKQV
      EWKVKQZQWJVFWLVKVDVEAUNUOVEWKVKUPWMWIVEVDAVKUPUQTURWICGUSVDVSCGUTVAURVTBF
      USUMSSUFT $.

    $d x A $.  $d y B $.
    $( Double restricted existential uniqueness in terms of restricted
       existential quantification and restricted universal quantification,
       analogous to ~ 2eu5 and ~ reu3 .  (Contributed by Alexander van der
       Vekens, 17-Jun-2017.) $)
    2reu5 $p |- ( ( E! x e. A E! y e. B ph /\ A. x e. A E* y e. B ph )
                  <-> ( E. x e. A E. y e. B ph
                        /\ E. z e. A E. w e. B A. x e. A A. y e. B
                           ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( wrex weq wa wral wex cv wcel wreu r19.29r reximi eleq1 ex df-rex pm3.35
      wi wrmo bi2anan9 biimpac ancomd rexlimivv syl 3syl pm4.71rd anass 2exbidv
      syl6bb pm5.32i 2reu5lem3 r19.42v bitr3i exbii bitri anbi2i 3bitr4i ) ACGH
      ZBFHZABDIZCEIZJZUBZCGKZBFKZELDLZJVCEMZGNZDMZFNZVIJZJZELZDLZJACGOBFOACGUCB
      FKJVCVIEGHZDFHZJVCVJVRVCVIVPDEVCVIVLVNJZVIJVPVCVIWAVCVIWAVCVIJVBVHJZBFHAV
      GJZCGHZBFHZWAVBVHBFPWBWDBFAVGCGPQWEVFCGHZBFHWAWDWFBFWCVFCGAVFUAQQVFWABCFG
      BMZFNZCMZGNZJZVFWAWKVFJVNVLVFWKVNVLJVDWHVNVEWJVLWGVMFRWIVKGRUDUEUFSUGUHUI
      SUJVLVNVIUKUMULUNABCDEFGUOVTVRVCVTVNVSJZDLVRVSDFTWLVQDWLVOEGHVQVNVIEGUPVO
      EGTUQURUSUTVA $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Conditional equality (experimental)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  This is a very useless definition, which "abbreviates" ` ( x = y -> ph ) ` as
  ` CondEq ( x = y -> ph ) ` . What this display hides, though, is that the
  first expression, even though it has a shorter constant string, is actually
  much more complicated in its parse tree: it is parsed as
  (wi (wceq (cv vx) (cv vy)) wph), while the ` CondEq ` version is parsed as
  (wcdeq vx vy wph).  It also allows us to give a name to the specific 3-ary
  operation ` ( x = y -> ph ) ` .

  This is all used as part of a metatheorem: we want to say that
  ` |- ( x = y -> ( ph ( x ) <-> ph ( y ) ) ) ` and
  ` |- ( x = y -> A ( x ) = A ( y ) ) ` are provable, for any expressions
  ` ph ( x ) ` or ` A ( x ) ` in the language.  The proof is by induction, so
  the base case is each of the primitives, which is why you will see a theorem
  for each of the set.mm primitive operations.

  The metatheorem comes with a disjoint variables assumption: every variable in
  ` ph ( x ) ` is assumed disjoint from ` x ` except ` x ` itself.  For such a
  proof by induction, we must consider each of the possible forms of
  ` ph ( x ) ` .  If it is a variable other than ` x ` , then we have
  ` CondEq ( x = y -> A = A ) ` or ` CondEq ( x = y -> ( ph <-> ph ) ) ` ,
  which is provable by ~ cdeqth and reflexivity.  Since we are only working
  with class and wff expressions, it can't be ` x ` itself in set.mm, but if it
  was we'd have to also prove ` CondEq ( x = y -> x = y ) ` (where _set_
  equality is being used on the right).

  Otherwise, it is a primitive operation applied to smaller expressions.  In
  these cases, for each set variable parameter to the operation, we must
  consider if it is equal to ` x ` or not, which yields 2^n proof obligations.
  Luckily, all primitive operations in set.mm have either zero or one set
  variable, so we only need to prove one statement for the non-set constructors
  (like implication) and two for the constructors taking a set (the forall and
  the class builder).

  In each of the primitive proofs, we are allowed to assume that ` y ` is
  disjoint from ` ph ( x ) ` and vice versa, because this is maintained through
  the induction.  This is how we satisfy the DV assumptions of ~ cdeqab1 and
  ~ cdeqab .

$)

  $c CondEq $. $( conditional equality $)

  $( Extend wff notation to include conditional equality.  This is a technical
     device used in the proof that ` F/ ` is the not-free predicate, and that
     definitions are conservative as a result. $)
  wcdeq $a wff CondEq ( x = y -> ph ) $.

  $( Define conditional equality.  All the notation to the left of the ` <-> `
     is fake; the parentheses and arrows are all part of the notation, which
     could equally well be written ` CondEq x y ph ` .  On the right side is
     the actual implication arrow.  The reason for this definition is to
     "flatten" the structure on the right side (whose tree structure is
     something like (wi (wceq (cv vx) (cv vy)) wph) ) into just (wcdeq vx vy
     wph).  (Contributed by Mario Carneiro, 11-Aug-2016.) $)
  df-cdeq $a |- ( CondEq ( x = y -> ph ) <-> ( x = y -> ph ) ) $.

  ${
    cdeqi.1 $e |- ( x = y -> ph ) $.
    $( Deduce conditional equality.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    cdeqi $p |- CondEq ( x = y -> ph ) $=
      ( wcdeq cv wceq wi df-cdeq mpbir ) ABCEBFCFGAHDABCIJ $.
  $}

  ${
    cdeqri.1 $e |- CondEq ( x = y -> ph ) $.
    $( Property of conditional equality.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    cdeqri $p |- ( x = y -> ph ) $=
      ( wcdeq cv wceq wi df-cdeq mpbi ) ABCEBFCFGAHDABCIJ $.
  $}

  ${
    cdeqth.1 $e |- ph $.
    $( Deduce conditional equality from a theorem.  (Contributed by Mario
       Carneiro, 11-Aug-2016.) $)
    cdeqth $p |- CondEq ( x = y -> ph ) $=
      ( cv wceq a1i cdeqi ) ABCABECEFDGH $.
  $}

  ${
    cdeqnot.1 $e |- CondEq ( x = y -> ( ph <-> ps ) ) $.
    $( Distribute conditional equality over negation.  (Contributed by Mario
       Carneiro, 11-Aug-2016.) $)
    cdeqnot $p |- CondEq ( x = y -> ( -. ph <-> -. ps ) ) $=
      ( wn wb cv wceq cdeqri notbid cdeqi ) AFBFGCDCHDHIABABGCDEJKL $.

    ${
      $d x z $.  $d y z $.
      $( Distribute conditional equality over quantification.  (Contributed by
         Mario Carneiro, 11-Aug-2016.) $)
      cdeqal $p |- CondEq ( x = y -> ( A. z ph <-> A. z ps ) ) $=
        ( wal wb cv wceq cdeqri albidv cdeqi ) AEGBEGHCDCIDIJABEABHCDFKLM $.

      $( Distribute conditional equality over abstraction.  (Contributed by
         Mario Carneiro, 11-Aug-2016.) $)
      cdeqab $p |- CondEq ( x = y -> { z | ph } = { z | ps } ) $=
        ( cab wceq cv wb cdeqri abbidv cdeqi ) AEGBEGHCDCIDIHABEABJCDFKLM $.
    $}

    ${
      $d x ps $.  $d y ph $.
      $( Distribute conditional equality over quantification.  (Contributed by
         Mario Carneiro, 11-Aug-2016.) $)
      cdeqal1 $p |- CondEq ( x = y -> ( A. x ph <-> A. y ps ) ) $=
        ( wal wb cv wceq cdeqri cbvalv a1i cdeqi ) ACFBDFGZCDNCHDHIABCDABGCDEJK
        LM $.

      $( Distribute conditional equality over abstraction.  (Contributed by
         Mario Carneiro, 11-Aug-2016.) $)
      cdeqab1 $p |- CondEq ( x = y -> { x | ph } = { y | ps } ) $=
        ( cab wceq cv wb cdeqri cbvabv a1i cdeqi ) ACFBDFGZCDNCHDHGABCDABICDEJK
        LM $.
    $}

    cdeqim.1 $e |- CondEq ( x = y -> ( ch <-> th ) ) $.
    $( Distribute conditional equality over implication.  (Contributed by Mario
       Carneiro, 11-Aug-2016.) $)
    cdeqim $p |- CondEq ( x = y -> ( ( ph -> ch ) <-> ( ps -> th ) ) ) $=
      ( wi wb cv wceq cdeqri imbi12d cdeqi ) ACIBDIJEFEKFKLABCDABJEFGMCDJEFHMNO
      $.
  $}

  $( Conditional equality for set-to-class promotion.  (Contributed by Mario
     Carneiro, 11-Aug-2016.) $)
  cdeqcv $p |- CondEq ( x = y -> x = y ) $=
    ( cv wceq id cdeqi ) ACBCDZABGEF $.

  ${
    cdeqeq.1 $e |- CondEq ( x = y -> A = B ) $.
    cdeqeq.2 $e |- CondEq ( x = y -> C = D ) $.
    $( Distribute conditional equality over equality.  (Contributed by Mario
       Carneiro, 11-Aug-2016.) $)
    cdeqeq $p |- CondEq ( x = y -> ( A = C <-> B = D ) ) $=
      ( wceq wb cv cdeqri eqeq12d cdeqi ) CEIDFIJABAKBKICDEFCDIABGLEFIABHLMN $.

    $( Distribute conditional equality over elementhood.  (Contributed by Mario
       Carneiro, 11-Aug-2016.) $)
    cdeqel $p |- CondEq ( x = y -> ( A e. C <-> B e. D ) ) $=
      ( wcel wb cv wceq cdeqri eleq12d cdeqi ) CEIDFIJABAKBKLCDEFCDLABGMEFLABHM
      NO $.
  $}

  ${
    $d x ps $.  $d y ph $.
    nfcdeq.1 $e |- F/ x ph $.
    nfcdeq.2 $e |- CondEq ( x = y -> ( ph <-> ps ) ) $.
    $( If we have a conditional equality proof, where ` ph ` is ` ph ( x ) `
       and ` ps ` is ` ph ( y ) ` , and ` ph ( x ) ` in fact does not have
       ` x ` free in it according to ` F/ ` , then ` ph ( x ) <-> ph ( y ) `
       unconditionally.  This proves that ` F/ x ph ` is actually a not-free
       predicate.  (Contributed by Mario Carneiro, 11-Aug-2016.) $)
    nfcdeq $p |- ( ph <-> ps ) $=
      ( wsb sbf nfv wb cdeqri sbie bitr3i ) AACDGBACDEHABCDBCIABJCDFKLM $.
  $}

  ${
    $d x z B $.  $d y z A $.
    nfccdeq.1 $e |- F/_ x A $.
    nfccdeq.2 $e |- CondEq ( x = y -> A = B ) $.
    $( Variation of ~ nfcdeq for classes.  (Contributed by Mario Carneiro,
       11-Aug-2016.) $)
    nfccdeq $p |- A = B $=
      ( vz cv wcel nfcri wceq equid cdeqth cdeqel nfcdeq eqriv ) GCDGHZCIQDIABA
      GCEJABQQCDQQKABGLMFNOP $.
  $}

  $( Let the computer know the theorems to look for to prove the metatheorem $)
  $( $j
    condequality 'wcdeq' from 'cdeqth';
    condcongruence 'cdeqnot' 'cdeqim' 'cdeqal1' 'cdeqal' 'cdeqcv' 'cdeqeq'
      'cdeqel' 'cdeqab1' 'cdeqab';
    notfree 'wnf' from 'nfcdeq';
    notfree 'wnfc' from 'nfccdeq';
  $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Russell's Paradox
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( Russell's Paradox.  Proposition 4.14 of [TakeutiZaring] p. 14.

       In the late 1800s, Frege's Axiom of (unrestricted) Comprehension,
       expressed in our notation as ` A e. _V ` , asserted that any collection
       of sets ` A ` is a set i.e. belongs to the universe ` _V ` of all sets.
       In particular, by substituting ` { x | x e/ x } ` (the "Russell class")
       for ` A ` , it asserted ` { x | x e/ x } e. _V ` , meaning that the
       "collection of all sets which are not members of themselves" is a set.
       However, here we prove ` { x | x e/ x } e/ _V ` .  This contradiction
       was discovered by Russell in 1901 (published in 1903), invalidating the
       Comprehension Axiom and leading to the collapse of Frege's system.

       In 1908, Zermelo rectified this fatal flaw by replacing Comprehension
       with a weaker Subset (or Separation) Axiom ~ ssex asserting that ` A `
       is a set only when it is smaller than some other set ` B ` .  However,
       Zermelo was then faced with a "chicken and egg" problem of how to show
       ` B ` is a set, leading him to introduce the set-building axioms of Null
       Set ~ 0ex , Pairing ~ prex , Union ~ uniex , Power Set ~ pwex , and
       Infinity ~ omex to give him some starting sets to work with (all of
       which, before Russell's Paradox, were immediate consequences of Frege's
       Comprehension).  In 1922 Fraenkel strengthened the Subset Axiom with our
       present Replacement Axiom ~ funimaex (whose modern formalization is due
       to Skolem, also in 1922).  Thus, in a very real sense Russell's Paradox
       spawned the invention of ZF set theory and completely revised the
       foundations of mathematics!

       Another mainstream formalization of set theory, devised by von Neumann,
       Bernays, and Goedel, uses class variables rather than set variables as
       its primitives.  The axiom system NBG in [Mendelson] p. 225 is suitable
       for a Metamath encoding.  NBG is a conservative extension of ZF in that
       it proves exactly the same theorems as ZF that are expressible in the
       language of ZF. An advantage of NBG is that it is finitely axiomatizable
       - the Axiom of Replacement can be broken down into a finite set of
       formulas that eliminate its wff metavariable.  Finite axiomatizability
       is required by some proof languages (although not by Metamath).  There
       is a stronger version of NBG called Morse-Kelley (axiom system MK in
       [Mendelson] p. 287).

       Russell himself continued in a different direction, avoiding the paradox
       with his "theory of types."  Quine extended Russell's ideas to formulate
       his New Foundations set theory (axiom system NF of [Quine] p. 331).  In
       NF, the collection of all sets is a set, contradicting ZF and NBG set
       theories, and it has other bizarre consequences: when sets become too
       huge (beyond the size of those used in standard mathematics), the Axiom
       of Choice ~ ac4 and Cantor's Theorem ~ canth are provably false!  (See
       ~ ncanth for some intuition behind the latter.)  Recent results (as of
       2014) seem to show that NF is equiconsistent to Z (ZF in which ~ ax-sep
       replaces ~ ax-rep ) with ~ ax-sep restricted to only bounded
       quantifiers.  NF is finitely axiomatizable and can be encoded in
       Metamath using the axioms from T. Hailperin, "A set of axioms for
       logic," _J. Symb.  Logic_ 9:1-19 (1944).

       Under our ZF set theory, every set is a member of the Russell class by
       ~ elirrv (derived from the Axiom of Regularity), so for us the Russell
       class equals the universe ` _V ` (theorem ~ ruv ).  See ~ ruALT for an
       alternate proof of ~ ru derived from that fact.  (Contributed by NM,
       7-Aug-1994.) $)
    ru $p |- { x | x e/ x } e/ _V $=
      ( vy cv wnel cab cvv wcel wn wceq wex wb wal pm5.19 df-nel eleq12d notbid
      eleq1 id syl5bb mtbir bibi12d spv mto abeq2 nex isset mpbir ) ACZUHDZAEZF
      DUJFGZHUKBCZUJIZBJUMBUMUHULGZUIKZALZUPULULGZUQHZKZUQMUOUSABUHULIZUNUQUIUR
      UHULULQUIUHUHGZHUTURUHUHNUTVAUQUTUHULUHULUTRZVBOPSUAUBUCUIAULUDTUEBUJUFTU
      JFNUG $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [. $.
  $c ]. $.

  $( Extend wff notation to include the proper substitution of a class for a
     set.  Read this notation as "the proper substitution of class ` A ` for
     set variable ` x ` in wff ` ph ` ." $)
  wsbc $a wff [. A / x ]. ph $.

  $( Define the proper substitution of a class for a set.

     When ` A ` is a proper class, our definition evaluates to false.  This is
     somewhat arbitrary: we could have, instead, chosen the conclusion of
     ~ sbc6 for our definition, which always evaluates to true for proper
     classes.

     Our definition also does not produce the same results as discussed in the
     proof of Theorem 6.6 of [Quine] p. 42 (although Theorem 6.6 itself does
     hold, as shown by ~ dfsbcq below).  For example, if ` A ` is a proper
     class, Quine's substitution of ` A ` for ` y ` in ` 0 e. y ` evaluates to
     ` 0 e. A ` rather than our falsehood.  (This can be seen by substituting
     ` A ` , ` y ` , and ` 0 ` for alpha, beta, and gamma in Subcase 1 of
     Quine's discussion on p. 42.)  Unfortunately, Quine's definition requires
     a recursive syntactical breakdown of ` ph ` , and it does not seem
     possible to express it with a single closed formula.

     If we did not want to commit to any specific proper class behavior, we
     could use this definition _only_ to prove theorem ~ dfsbcq , which holds
     for both our definition and Quine's, and from which we can derive a weaker
     version of ~ df-sbc in the form of ~ sbc8g .  However, the behavior of
     Quine's definition at proper classes is similarly arbitrary, and for
     practical reasons (to avoid having to prove sethood of ` A ` in every use
     of this definition) we allow direct reference to ~ df-sbc and assert that
     ` [. A / x ]. ph ` is always false when ` A ` is a proper class.

     The theorem ~ sbc2or shows the apparently "strongest" statement we can
     make regarding behavior at proper classes if we start from ~ dfsbcq .

     The related definition ~ df-csb defines proper substitution into a class
     variable (as opposed to a wff variable).  (Contributed by NM,
     14-Apr-1995.)  (Revised by NM, 25-Dec-2016.) $)
  df-sbc $a |- ( [. A / x ]. ph <-> A e. { x | ph } ) $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff notation to include the proper substitution of a class for a
     set.  This definition "overloads" the previously defined variable
     substitution ~ wsb (where the first argument is a set variable rather
     than a class variable).  We take care to ensure that this new definition
     is a conservative extension.  Read this notation as "the proper
     substitution of class ` A ` for set variable ` x ` in wff ` ph ` ." @)
  wsbcSBC @a wff [ A / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42 and holds
     under both our definition and Quine's, provides us with a weak definition
     of the proper substitution of a class for a set.  Since our ~ df-sbc does
     not result in the same behavior as Quine's for proper classes, if we
     wished to avoid conflict with Quine's definition we could start with this
     theorem and ~ dfsbcq2 instead of ~ df-sbc .  ( ~ dfsbcq2 is needed because
     unlike Quine we do not overload the ~ df-sb syntax.)  As a consequence of
     these theorems, we can derive ~ sbc8g , which is a weaker version of
     ~ df-sbc that leaves substitution undefined when ` A ` is a proper class.

     However, it is often a nuisance to have to prove the sethood hypothesis of
     ~ sbc8g , so we will allow direct use of ~ df-sbc after theorem ~ sbc2or
     below.  Proper substiution with a proper class is rarely needed, and when
     it is, we can simply use the expansion of Quine's definition.
     (Contributed by NM, 14-Apr-1995.) $)
  dfsbcq $p |- ( A = B -> ( [. A / x ]. ph <-> [. B / x ]. ph ) ) $=
    ( wceq cab wcel wsbc eleq1 df-sbc 3bitr4g ) CDECABFZGDLGABCHABDHCDLIABCJABD
    JK $.

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42 and holds
     under both our definition and Quine's, relates logic substitution ~ df-sb
     and substitution for class variables ~ df-sbc .  Unlike Quine, we use a
     different syntax for each in order to avoid overloading it.  See remarks
     in ~ dfsbcq .  (Contributed by NM, 31-Dec-2016.) $)
  dfsbcq2 $p |- ( y = A -> ( [ y / x ] ph <-> [. A / x ]. ph ) ) $=
    ( cv wceq cab wcel wsb wsbc eleq1 df-clab df-sbc bicomi 3bitr3g ) CEZDFPABG
    ZHDQHZABCIABDJZPDQKACBLSRABDMNO $.

  $( Show that ~ df-sb and ~ df-sbc are equivalent when the class term ` A ` in
     ~ df-sbc is a set variable.  This theorem lets us reuse theorems based on
     ~ df-sb for proofs involving ~ df-sbc .  (Contributed by NM,
     31-Dec-2016.)  (Proof modification is discouraged.) $)
  sbsbc $p |- ( [ y / x ] ph <-> [. y / x ]. ph ) $=
    ( weq wsb cv wsbc wb eqid dfsbcq2 ax-mp ) CCDABCEABCFZGHLIABCLJK $.

  ${
    sbceq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for class substitution.  (Contributed by Mario
       Carneiro, 9-Feb-2017.) $)
    sbceq1d $p |- ( ph -> ( [. A / x ]. ph <-> [. B / x ]. ph ) ) $=
      ( wceq wsbc wb dfsbcq syl ) ACDFABCGABDGHEABCDIJ $.

    sbceq1dd.2 $e |- ( ph -> [. A / x ]. ph ) $.
    $( Equality theorem for class substitution.  (Contributed by Mario
       Carneiro, 9-Feb-2017.) $)
    sbceq1dd $p |- ( ph -> [. B / x ]. ph ) $=
      ( wsbc sbceq1d mpbid ) AABCGABDGFABCDEHI $.
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( This is the closest we can get to ~ df-sbc if we start from ~ dfsbcq
       (see its comments) and ~ dfsbcq2 .  (Contributed by NM, 18-Nov-2008.)
       (Proof shortened by Andrew Salmon, 29-Jun-2011.)
       (Proof modification is discouraged.) $)
    sbc8g $p |- ( A e. V -> ( [. A / x ]. ph <-> A e. { x | ph } ) ) $=
      ( vy cv wsbc cab wcel dfsbcq eleq1 wsb df-clab weq wb equid dfsbcq2 ax-mp
      bitr2i vtoclbg ) ABEFZGZUAABHZIZABCGCUCIECDABUACJUACUCKUDABELZUBAEBMEENUE
      UBOEPABEUAQRST $.
  $}

  ${
    $d x y A $.  $d y ph $.
    $( The disjunction of two equivalences for class substitution does not
       require a class existence hypothesis.  This theorem tells us that there
       are only 2 possibilities for ` [ A / x ] ph ` behavior at proper
       classes, matching the ~ sbc5 (false) and ~ sbc6 (true) conclusions.
       This is interesting since ~ dfsbcq and ~ dfsbcq2 (from which it is
       derived) do not appear to say anything obvious about proper class
       behavior.  Note that this theorem doesn't tell us that it is always one
       or the other at proper classes; it could "flip" between false (the first
       disjunct) and true (the second disjunct) as a function of some other
       variable ` y ` that ` ph ` or ` A ` may contain.  (Contributed by NM,
       11-Oct-2004.)  (Proof modification is discouraged.) $)
    sbc2or $p |- ( ( [. A / x ]. ph <-> E. x ( x = A /\ ph ) ) \/
                  ( [. A / x ]. ph <-> A. x ( x = A -> ph ) ) ) $=
      ( vy cvv wcel wsbc cv wceq wa wex wb wi wal wo wsb weq wn mpbii con3i sb5
      dfsbcq2 eqeq2 anbi1d exbidv vtoclbg pm5.15 vex eleq1 adantr nexdv pm2.21d
      orcd alrimiv 2thd bibi2d orbi2d pm2.61i ) CEFZABCGZBHZCIZAJZBKZLZUTVBAMZB
      NZLZOZUSVEVHABDPBDQZAJZBKUTVDDCEABDCUBDHZCIZVKVCBVMVJVBAVLCVAUCUDUEABDUAU
      FUMUSRZVEUTVDRZLZOVIUTVDUGVNVPVHVEVNVOVGUTVNVOVGVNVCBVCUSVBUSAVBVAEFUSBUH
      VACEUISZUJTUKVNVFBVNVBAVBUSVQTULUNUOUPUQSUR $.
  $}

  $( By our definition of proper substitution, it can only be true if the
     substituted expression is a set.  (Contributed by Mario Carneiro,
     13-Oct-2016.) $)
  sbcex $p |- ( [. A / x ]. ph -> A e. _V ) $=
    ( wsbc cab wcel cvv df-sbc elex sylbi ) ABCDCABEZFCGFABCHCKIJ $.

  $( Equality theorem for class substitution.  Class version of ~ sbequ12 .
     (Contributed by NM, 26-Sep-2003.) $)
  sbceq1a $p |- ( x = A -> ( ph <-> [. A / x ]. ph ) ) $=
    ( wsb cv wceq wsbc sbid dfsbcq2 syl5bbr ) AABBDBECFABCGABHABBCIJ $.

  $( Equality theorem for class substitution.  Class version of ~ sbequ12r .
     (Contributed by NM, 4-Jan-2017.) $)
  sbceq2a $p |- ( A = x -> ( [. A / x ]. ph <-> ph ) ) $=
    ( cv wceq wsbc wb sbceq1a eqcoms bicomd ) CBDZEAABCFZALGKCABCHIJ $.

  ${
    $d ph y $.  $d A y $.  $d x y $.
    $( Specialization: if a formula is true for all sets, it is true for any
       class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44.  See
       also ~ stdpc4 and ~ rspsbc .  (Contributed by NM, 16-Jan-2004.) $)
    spsbc $p |- ( A e. V -> ( A. x ph -> [. A / x ]. ph ) ) $=
      ( vy wal wsbc wi cv wceq wsb stdpc4 sbsbc sylib dfsbcq syl5ib vtocleg ) A
      BFZABCGZHECDRABEIZGZTCJSRABEKUAABELABEMNABTCOPQ $.

    spsbcd.1 $e |- ( ph -> A e. V ) $.
    spsbcd.2 $e |- ( ph -> A. x ps ) $.
    $( Specialization: if a formula is true for all sets, it is true for any
       class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44.  See
       also ~ stdpc4 and ~ rspsbc .  (Contributed by Mario Carneiro,
       9-Feb-2017.) $)
    spsbcd $p |- ( ph -> [. A / x ]. ps ) $=
      ( wcel wal wsbc spsbc sylc ) ADEHBCIBCDJFGBCDEKL $.
  $}

  ${
    sbcth.1 $e |- ph $.
    $( A substitution into a theorem remains true (when ` A ` is a set).
       (Contributed by NM, 5-Nov-2005.) $)
    sbcth $p |- ( A e. V -> [. A / x ]. ph ) $=
      ( wcel wal wsbc ax-gen spsbc mpi ) CDFABGABCHABEIABCDJK $.
  $}

  ${
    $d x ph $.
    sbcthdv.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ sbcth .  (Contributed by NM, 30-Nov-2005.)
       (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbcthdv $p |- ( ( ph /\ A e. V ) -> [. A / x ]. ps ) $=
      ( wal wcel wsbc alrimiv spsbc mpan9 ) ABCGDEHBCDIABCFJBCDEKL $.
  $}

  $( An identity theorem for substitution.  See ~ sbid .  (Contributed by Mario
     Carneiro, 18-Feb-2017.) $)
  sbcid $p |- ( [. x / x ]. ph <-> ph )
    $=
    ( cv wsbc wsb sbsbc sbid bitr3i ) ABBCDABBEAABBFABGH $.

  ${
    nfsbc1d.2 $e |- ( ph -> F/_ x A ) $.
    $( Deduction version of ~ nfsbc1 .  (Contributed by NM, 23-May-2006.)
       (Revised by Mario Carneiro, 12-Oct-2016.) $)
    nfsbc1d $p |- ( ph -> F/ x [. A / x ]. ps ) $=
      ( wsbc cab wcel df-sbc wnfc nfab1 a1i nfeld nfxfrd ) BCDFDBCGZHACBCDIACDO
      ECOJABCKLMN $.
  $}

  ${
    nfsbc1.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for class substitution.  (Contributed
       by Mario Carneiro, 12-Oct-2016.) $)
    nfsbc1 $p |- F/ x [. A / x ]. ph $=
      ( wsbc wnf wtru wnfc a1i nfsbc1d trud ) ABCEBFGABCBCHGDIJK $.
  $}

  ${
    $d x A $.
    $( Bound-variable hypothesis builder for class substitution.  (Contributed
       by Mario Carneiro, 12-Oct-2016.) $)
    nfsbc1v $p |- F/ x [. A / x ]. ph $=
      ( nfcv nfsbc1 ) ABCBCDE $.
  $}

  ${
    nfsbcd.1 $e |- F/ y ph $.
    nfsbcd.2 $e |- ( ph -> F/_ x A ) $.
    nfsbcd.3 $e |- ( ph -> F/ x ps ) $.
    $( Deduction version of ~ nfsbc .  (Contributed by NM, 23-Nov-2005.)
       (Revised by Mario Carneiro, 12-Oct-2016.) $)
    nfsbcd $p |- ( ph -> F/ x [. A / y ]. ps ) $=
      ( wsbc cab wcel df-sbc nfabd nfeld nfxfrd ) BDEIEBDJZKACBDELACEPGABCDFHMN
      O $.
  $}

  ${
    nfsbc.1 $e |- F/_ x A $.
    nfsbc.2 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for class substitution.  (Contributed
       by NM, 7-Sep-2014.)  (Revised by Mario Carneiro, 12-Oct-2016.) $)
    nfsbc $p |- F/ x [. A / y ]. ph $=
      ( wsbc wnf wtru nftru wnfc a1i nfsbcd trud ) ACDGBHIABCDCJBDKIELABHIFLMN
      $.
  $}

  ${
    $d x z $.  $d z A $.  $d y z ph $.
    $( A composition law for class substitution.  (Contributed by NM,
       26-Sep-2003.)  (Revised by Mario Carneiro, 13-Oct-2016.) $)
    sbcco $p |- ( [. A / y ]. [. y / x ]. ph <-> [. A / x ]. ph ) $=
      ( vz cv wsbc cvv wcel sbcex dfsbcq wsb sbsbc sbbii sbco2 3bitr3ri vtoclbg
      nfv bitri pm5.21nii ) ABCFGZCDGZDHIABDGZUACDJABDJUACEFZGZABUDGZUBUCEDHUAC
      UDDKABUDDKUEABELZUFABCLZCELUACELUGUEUHUACEABCMNABECACROUACEMPABEMSQT $.
  $}

  ${
    $d x y $.  $d y ph $.  $d A y $.
    sbcco2.1 $e |- ( x = y -> A = B ) $.
    $( A composition law for class substitution.  Importantly, ` x ` may occur
       free in the class expression substituted for ` A ` .  (Contributed by
       NM, 5-Sep-2004.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbcco2 $p |- ( [. x / y ]. [. B / x ]. ph <-> [. A / x ]. ph ) $=
      ( wsbc cv wsb sbsbc nfv weq wceq wb eqcoms dfsbcq bicomd syl sbie bitr3i
      ) ABEGZCBHZGUACBIABDGZUACBJUAUCCBUCCKCBLDEMZUAUCNUDUBCHFOUDUCUAABDEPQRST
      $.
  $}

  ${
    $d x y A $.  $d y ph $.
    $( An equivalence for class substitution.  (Contributed by NM,
       23-Aug-1993.)  (Revised by Mario Carneiro, 12-Oct-2016.) $)
    sbc5 $p |- ( [. A / x ]. ph <-> E. x ( x = A /\ ph ) ) $=
      ( vy wsbc cvv wcel cv wceq wex sbcex exsimpl isset sylibr wsb weq dfsbcq2
      wa eqeq2 anbi1d exbidv sb5 vtoclbg pm5.21nii ) ABCEZCFGZBHZCIZARZBJZABCKU
      JUHBJUFUHABLBCMNABDOBDPZARZBJUEUJDCFABDCQDHZCIZULUIBUNUKUHAUMCUGSTUAABDUB
      UCUD $.
  $}

  ${
    $d x y A $.
    $( An equivalence for class substitution.  (Contributed by NM,
       11-Oct-2004.)  (Proof shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbc6g $p |- ( A e. V -> ( [. A / x ]. ph <-> A. x ( x = A -> ph ) ) ) $=
      ( wcel cv wceq wi wal wa wex wsbc nfe1 ceqex ceqsalg sbc5 syl6rbbr ) CDEB
      FCGZAHBIRAJZBKZABCLATBCDSBMABCNOABCPQ $.
  $}

  ${
    $d x A $.
    sbc6.1 $e |- A e. _V $.
    $( An equivalence for class substitution.  (Contributed by NM,
       23-Aug-1993.)  (Proof shortened by Eric Schmidt, 17-Jan-2007.) $)
    sbc6 $p |- ( [. A / x ]. ph <-> A. x ( x = A -> ph ) ) $=
      ( cvv wcel wsbc cv wceq wi wal wb sbc6g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( An equivalence for class substitution in the spirit of ~ df-clab .  Note
       that ` x ` and ` A ` don't have to be distinct.  (Contributed by NM,
       18-Nov-2008.)  (Revised by Mario Carneiro, 13-Oct-2016.) $)
    sbc7 $p |- ( [. A / x ]. ph <-> E. y ( y = A /\ [. y / x ]. ph ) ) $=
      ( wsbc cv wceq wa wex sbcco sbc5 bitr3i ) ABDEABCFZEZCDEMDGNHCIABCDJNCDKL
      $.
  $}

  ${
    cbvsbc.1 $e |- F/ y ph $.
    cbvsbc.2 $e |- F/ x ps $.
    cbvsbc.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change bound variables in a wff substitution.  (Contributed by Jeff
       Hankins, 19-Sep-2009.)  (Proof shortened by Andrew Salmon,
       8-Jun-2011.) $)
    cbvsbc $p |- ( [. A / x ]. ph <-> [. A / y ]. ps ) $=
      ( cab wcel wsbc cbvab eleq2i df-sbc 3bitr4i ) EACIZJEBDIZJACEKBDEKPQEABCD
      FGHLMACENBDENO $.
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvsbcv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a class substitution using implicit
       substitution.  (Contributed by NM, 30-Sep-2008.)  (Revised by Mario
       Carneiro, 13-Oct-2016.) $)
    cbvsbcv $p |- ( [. A / x ]. ph <-> [. A / y ]. ps ) $=
      ( nfv cbvsbc ) ABCDEADGBCGFH $.
  $}

  ${
    $d x y A $.  $d y ps $.
    $( Conversion of implicit substitution to explicit class substitution,
       using a bound-variable hypothesis instead of distinct variables.
       (Closed theorem version of ~ sbciegf .)  (Contributed by NM,
       10-Nov-2005.)  (Revised by Mario Carneiro, 13-Oct-2016.) $)
    sbciegft $p |- ( ( A e. V /\ F/ x ps /\
            A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [. A / x ]. ph <-> ps ) ) $=
      ( wcel wnf cv wceq wb wi wal w3a wsbc imim2i alimi biimpa sylan2 3adant1
      wa wex sbc5 bi1 imp3a 19.23t syl5bi bi2 com23 19.21t sbc6g sylibrd impbid
      3ad2ant1 ) DEFZBCGZCHDIZABJZKZCLZMZACDNZBVAUPATZCUAZUTBACDUBUOUSVCBKZUNUS
      UOVBBKZCLZVDURVECURUPABUQABKUPABUCOUDPUOVFVDVBBCUEQRSUFUTBUPAKZCLZVAUOUSB
      VHKZUNUSUOBVGKZCLZVIURVJCURUPBAUQBAKUPABUGOUHPUOVKVIBVGCUIQRSUNUOVAVHJUSA
      CDEUJUMUKUL $.
  $}

  ${
    $d x A $.
    sbciegf.1 $e |- F/ x ps $.
    sbciegf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by NM, 14-Dec-2005.)  (Revised by Mario Carneiro,
       13-Oct-2016.) $)
    sbciegf $p |- ( A e. V -> ( [. A / x ]. ph <-> ps ) ) $=
      ( wcel wnf cv wceq wb wi wal wsbc ax-gen sbciegft mp3an23 ) DEHBCICJDKABL
      MZCNACDOBLFSCGPABCDEQR $.
  $}

  ${
    $d x A $.  $d x ps $.
    sbcieg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by NM, 10-Nov-2005.) $)
    sbcieg $p |- ( A e. V -> ( [. A / x ]. ph <-> ps ) ) $=
      ( wcel cvv wsbc wb elex nfv sbciegf syl ) DEGDHGACDIBJDEKABCDHBCLFMN $.
  $}

  ${
    $d x y $.  $d A y $.  $d ch y $.  $d ph y $.  $d ps x $.
    sbcie2g.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    sbcie2g.2 $e |- ( y = A -> ( ps <-> ch ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       This version of ~ sbcie avoids a disjointness condition on ` x , A ` by
       substituting twice.  (Contributed by Mario Carneiro, 15-Oct-2016.) $)
    sbcie2g $p |- ( A e. V -> ( [. A / x ]. ph <-> ch ) ) $=
      ( cv wsbc dfsbcq wsb sbsbc nfv sbie bitr3i vtoclbg ) ADEJZKZBADFKCEFGADSF
      LITADEMBADENABDEBDOHPQR $.
  $}

  ${
    $d x A $.  $d x ps $.
    sbcie.1 $e |- A e. _V $.
    sbcie.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by NM, 4-Sep-2004.) $)
    sbcie $p |- ( [. A / x ]. ph <-> ps ) $=
      ( cvv wcel wsbc wb sbcieg ax-mp ) DGHACDIBJEABCDGFKL $.
  $}

  ${
    $d x A $.
    sbcied.1 $e |- ( ph -> A e. V ) $.
    sbcied.2 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    ${
      sbciedf.3 $e |- F/ x ph $.
      sbciedf.4 $e |- ( ph -> F/ x ch ) $.
      $( Conversion of implicit substitution to explicit class substitution,
         deduction form.  (Contributed by NM, 29-Dec-2014.) $)
      sbciedf $p |- ( ph -> ( [. A / x ]. ps <-> ch ) ) $=
        ( wcel wnf cv wceq wb wi wal wsbc ex alrimi sbciegft syl3anc ) AEFKCDLD
        MENZBCOZPZDQBDERCOGJAUEDIAUCUDHSTBCDEFUAUB $.
    $}

    $d x ph $.  $d x ch $.
    $( Conversion of implicit substitution to explicit class substitution,
       deduction form.  (Contributed by NM, 13-Dec-2014.) $)
    sbcied $p |- ( ph -> ( [. A / x ]. ps <-> ch ) ) $=
      ( nfv nfvd sbciedf ) ABCDEFGHADIACDJK $.
  $}

  ${
    $d x A $.  $d x ph $.  $d x ch $.
    sbcied2.1 $e |- ( ph -> A e. V ) $.
    sbcied2.2 $e |- ( ph -> A = B ) $.
    sbcied2.3 $e |- ( ( ph /\ x = B ) -> ( ps <-> ch ) ) $.
    $( Conversion of implicit substitution to explicit class substitution,
       deduction form.  (Contributed by NM, 13-Dec-2014.) $)
    sbcied2 $p |- ( ph -> ( [. A / x ]. ps <-> ch ) ) $=
      ( cv wceq wb id sylan9eqr syldan sbcied ) ABCDEGHADKZELZRFLBCMSAREFSNIOJP
      Q $.
  $}

  ${
    $d y A $.  $d y B $.  $d y ph $.  $d x y $.
    elrabsf.1 $e |- F/_ x B $.
    $( Membership in a restricted class abstraction, expressed with explicit
       class substitution.  (The variation ~ elrabf has implicit
       substitution).  The hypothesis specifies that ` x ` must not be a free
       variable in ` B ` .  (Contributed by NM, 30-Sep-2003.)  (Proof shortened
       by Mario Carneiro, 13-Oct-2016.) $)
    elrabsf $p |- ( A e. { x e. B | ph }
          <-> ( A e. B /\ [. A / x ]. ph ) ) $=
      ( vy cv wsbc crab dfsbcq nfcv nfv nfsbc1v sbceq1a cbvrab elrab2 ) ABFGZHZ
      ABCHFCDABDIABQCJARBFDEFDKAFLABQMABQNOP $.
  $}

  ${
    $d x y B $.  $d y A $.
    $( Substitution applied to an atomic wff.  Set theory version of ~ eqsb3 .
       (Contributed by Andrew Salmon, 29-Jun-2011.) $)
    eqsbc3 $p |- ( A e. V -> ( [. A / x ]. x = B <-> A = B ) ) $=
      ( vy cv wceq wsbc dfsbcq eqeq1 wsb sbsbc eqsb3 bitr3i vtoclbg ) AFCGZAEFZ
      HZQCGZPABHBCGEBDPAQBIQBCJRPAEKSPAELEACMNO $.
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.  $d y ps $.
    $( Move negation in and out of class substitution.  (Contributed by NM,
       16-Jan-2004.) $)
    sbcng $p |- ( A e. V -> ( [. A / x ]. -. ph <-> -. [. A / x ]. ph ) ) $=
      ( vy wn wsb wsbc dfsbcq2 cv wceq notbid sbn vtoclbg ) AFZBEGABEGZFOBCHABC
      HZFECDOBECIEJCKPQABECILABEMN $.

    $( Distribution of class substitution over implication.  (Contributed by
       NM, 16-Jan-2004.) $)
    sbcimg $p |- ( A e. V ->
     ( [. A / x ]. ( ph -> ps ) <-> ( [. A / x ]. ph -> [. A / x ]. ps ) ) ) $=
      ( vy wi wsb wsbc dfsbcq2 cv wceq imbi12d sbim vtoclbg ) ABGZCFHACFHZBCFHZ
      GPCDIACDIZBCDIZGFDEPCFDJFKDLQSRTACFDJBCFDJMABCFNO $.

    $( Distribution of class substitution over conjunction.  (Contributed by
       NM, 31-Dec-2016.) $)
    sbcan $p |- ( [. A / x ]. ( ph /\ ps )
        <-> ( [. A / x ]. ph /\ [. A / x ]. ps ) ) $=
      ( vy wa wsbc cvv wcel sbcex adantl dfsbcq2 cv wceq anbi12d sban pm5.21nii
      wsb vtoclbg ) ABFZCDGZDHIZACDGZBCDGZFZTCDJUDUBUCBCDJKTCERACERZBCERZFUAUEE
      DHTCEDLEMDNUFUCUGUDACEDLBCEDLOABCEPSQ $.

    $( Distribution of class substitution over conjunction.  (Contributed by
       NM, 21-May-2004.) $)
    sbcang $p |- ( A e. V ->
     ( [. A / x ]. ( ph /\ ps ) <-> ( [. A / x ]. ph /\ [. A / x ]. ps ) ) ) $=
      ( vy wa wsb wsbc dfsbcq2 cv wceq anbi12d sban vtoclbg ) ABGZCFHACFHZBCFHZ
      GPCDIACDIZBCDIZGFDEPCFDJFKDLQSRTACFDJBCFDJMABCFNO $.

    $( Distribution of class substitution over disjunction.  (Contributed by
       NM, 31-Dec-2016.) $)
    sbcor $p |- ( [. A / x ]. ( ph \/ ps )
         <-> ( [. A / x ]. ph \/ [. A / x ]. ps ) ) $=
      ( vy wo wsbc cvv wcel sbcex jaoi wsb dfsbcq2 cv wceq orbi12d sbor vtoclbg
      pm5.21nii ) ABFZCDGZDHIZACDGZBCDGZFZTCDJUCUBUDACDJBCDJKTCELACELZBCELZFUAU
      EEDHTCEDMENDOUFUCUGUDACEDMBCEDMPABCEQRS $.

    $( Distribution of class substitution over disjunction.  (Contributed by
       NM, 21-May-2004.) $)
    sbcorg $p |- ( A e. V ->
     ( [. A / x ]. ( ph \/ ps ) <-> ( [. A / x ]. ph \/ [. A / x ]. ps ) ) ) $=
      ( vy wo wsb wsbc dfsbcq2 cv wceq orbi12d sbor vtoclbg ) ABGZCFHACFHZBCFHZ
      GPCDIACDIZBCDIZGFDEPCFDJFKDLQSRTACFDJBCFDJMABCFNO $.

    $( Distribution of class substitution over biconditional.  (Contributed by
       Raph Levien, 10-Apr-2004.) $)
    sbcbig $p |- ( A e. V ->
   ( [. A / x ]. ( ph <-> ps ) <-> ( [. A / x ]. ph <-> [. A / x ]. ps ) ) ) $=
      ( vy wb wsb wsbc dfsbcq2 cv wceq bibi12d sbbi vtoclbg ) ABGZCFHACFHZBCFHZ
      GPCDIACDIZBCDIZGFDEPCFDJFKDLQSRTACFDJBCFDJMABCFNO $.
  $}

  ${
    $d x z A $.  $d x y z $.  $d z ph $.
    $( Move universal quantifier in and out of class substitution.
       (Contributed by NM, 31-Dec-2016.) $)
    sbcal $p |- ( [. A / y ]. A. x ph <-> A. x [. A / y ]. ph ) $=
      ( vz wal wsbc cvv wcel sbcex sps dfsbcq2 cv wceq albidv vtoclbg pm5.21nii
      wsb sbal ) ABFZCDGZDHIZACDGZBFZTCDJUCUBBACDJKTCERACERZBFUAUDEDHTCEDLEMDNU
      EUCBACEDLOABCESPQ $.

    $( Move universal quantifier in and out of class substitution.
       (Contributed by NM, 16-Jan-2004.) $)
    sbcalg $p |- ( A e. V
        -> ( [. A / y ]. A. x ph <-> A. x [. A / y ]. ph ) ) $=
      ( vz wal wsb wsbc dfsbcq2 cv wceq albidv sbal vtoclbg ) ABGZCFHACFHZBGPCD
      IACDIZBGFDEPCFDJFKDLQRBACFDJMABCFNO $.

    $( Move existential quantifier in and out of class substitution.
       (Contributed by NM, 21-May-2004.) $)
    sbcex2 $p |- ( [. A / y ]. E. x ph <-> E. x [. A / y ]. ph ) $=
      ( vz wex wsbc cvv wcel sbcex exlimiv wsb dfsbcq2 wceq exbidv sbex vtoclbg
      cv pm5.21nii ) ABFZCDGZDHIZACDGZBFZTCDJUCUBBACDJKTCELACELZBFUAUDEDHTCEDME
      RDNUEUCBACEDMOABCEPQS $.

    $( Move existential quantifier in and out of class substitution.
       (Contributed by NM, 21-May-2004.) $)
    sbcexg $p |- ( A e. V
         -> ( [. A / y ]. E. x ph <-> E. x [. A / y ]. ph ) ) $=
      ( vz wex wsb wsbc dfsbcq2 cv wceq exbidv sbex vtoclbg ) ABGZCFHACFHZBGPCD
      IACDIZBGFDEPCFDJFKDLQRBACFDJMABCFNO $.
  $}

  ${
    $d x B $.  $d x A $.
    $( Set theory version of ~ sbeqal1 .  (Contributed by Andrew Salmon,
       28-Jun-2011.) $)
    sbceqal $p |- ( A e. V -> ( A. x ( x = A -> x = B ) -> A = B ) ) $=
      ( wcel cv wceq wi wal wsbc spsbc sbcimg wb eqsbc3 mpbiri pm5.5 syl 3bitrd
      eqid sylibd ) BDEZAFZBGZUBCGZHZAIUEABJZBCGZUEABDKUAUFUCABJZUDABJZHZUIUGUC
      UDABDLUAUHUJUIMUAUHBBGBSABBDNOUHUIPQABCDNRT $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Theorem *14.121 in [WhiteheadRussell] p. 185.  (Contributed by Andrew
       Salmon, 28-Jun-2011.)  (Proof shortened by Wolf Lammen, 9-May-2013.) $)
    sbeqalb $p |- ( A e. V -> ( ( A. x ( ph <-> x = A ) /\ A. x ( ph <->
      x = B ) ) -> A = B ) ) $=
      ( cv wceq wb wal wa wi wcel bibi1 biimpa biimpd alanimi sbceqal syl5 ) AB
      FZCGZHZBIASDGZHZBIJTUBKZBICELCDGUAUCUDBUAUCJTUBUAUCTUBHATUBMNOPBCDEQR $.
  $}

  ${
    sbcbid.1 $e |- F/ x ph $.
    sbcbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution.  (Contributed by
       NM, 29-Dec-2014.) $)
    sbcbid $p |- ( ph -> ( [. A / x ]. ps <-> [. A / x ]. ch ) ) $=
      ( cab wcel wsbc abbid eleq2d df-sbc 3bitr4g ) AEBDHZIECDHZIBDEJCDEJAOPEAB
      CDFGKLBDEMCDEMN $.
  $}

  ${
    $d x ph $.
    sbcbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution.  (Contributed by
       NM, 29-Dec-2014.) $)
    sbcbidv $p |- ( ph -> ( [. A / x ]. ps <-> [. A / x ]. ch ) ) $=
      ( nfv sbcbid ) ABCDEADGFH $.
  $}

  ${
    sbcbii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building inference rule for class substitution.  (Contributed by
       NM, 11-Nov-2005.) $)
    sbcbii $p |- ( [. A / x ]. ph <-> [. A / x ]. ps ) $=
      ( wsbc wb wtru a1i sbcbidv trud ) ACDFBCDFGHABCDABGHEIJK $.

    $( Formula-building inference rule for class substitution.  (Contributed by
       NM, 11-Nov-2005.)  (New usage is discouraged.) $)
    sbcbiiOLD $p |- ( A e. V -> ( [. A / x ]. ph <-> [. A / x ]. ps ) ) $=
      ( wsbc wb wcel sbcbii a1i ) ACDGBCDGHDEIABCDFJK $.
  $}

  ${
    $d x C $.  $d x A $.
    $( ~ eqsbc3 with set variable on right side of equals sign.  This proof was
       automatically generated from the virtual deduction proof ~ eqsbc3rVD
       using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    eqsbc3r $p |- ( A e. B -> ( [. A / x ]. C = x <-> C = A ) ) $=
      ( wcel wceq wsbc eqcom sbcbii biimpi eqsbc3 syl5ib syl6ib syl6ibr sylibrd
      cv idd impbid ) BCEZDAPZFZABGZDBFZSUBBDFZUCUBTDFZABGZSUDUBUFUAUEABDTHIZJA
      BDCKZLBDHZMSUCUFUBSUCUDUFSUCUCUDSUCQUINUHOUGNR $.
  $}

  ${
    $d y ch $.  $d y ps $.  $d y ph $.  $d y A $.  $d x y $.
    $( Distribution of class substitution over triple conjunction.
       (Contributed by NM, 14-Dec-2006.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbc3ang $p |- ( A e. V -> ( [. A / x ]. ( ph /\ ps /\ ch ) <->
                ( [. A / x ]. ph /\ [. A / x ]. ps /\ [. A / x ]. ch ) ) ) $=
      ( vy w3a wsb wsbc dfsbcq2 cv wceq 3anbi123d sb3an vtoclbg ) ABCHZDGIADGIZ
      BDGIZCDGIZHQDEJADEJZBDEJZCDEJZHGEFQDGEKGLEMRUASUBTUCADGEKBDGEKCDGEKNABCDG
      OP $.
  $}

  ${
    $d y z A $.  $d x y B $.
    $( Class substitution into a membership relation.  (Contributed by NM,
       17-Nov-2006.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcel1gv $p |- ( A e. V -> ( [. A / x ]. x e. B <-> A e. B ) ) $=
      ( vy cv wcel wsb wsbc dfsbcq2 eleq1 clelsb3 vtoclbg ) AFCGZAEHEFZCGNABIBC
      GEBDNAEBJOBCKEACLM $.
  $}

  ${
    $d y z B $.  $d x y A $.
    $( Class substitution into a membership relation.  (Contributed by NM,
       17-Nov-2006.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcel2gv $p |- ( B e. V -> ( [. B / x ]. A e. x <-> A e. B ) ) $=
      ( vy cv wcel wsb wsbc dfsbcq2 eleq2 nfv sbie vtoclbg ) BAFZGZAEHBEFZGZPAC
      IBCGECDPAECJQCBKPRAERALOQBKMN $.
  $}

  ${
    $d x ph $.
    sbcimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Substitution analog of Theorem 19.20 of [Margaris] p. 90.  (Contributed
       by NM, 11-Nov-2005.) $)
    sbcimdv $p |- ( ( ph /\ A e. V ) ->
          ( [. A / x ]. ps -> [. A / x ]. ch ) ) $=
      ( wcel wsbc wi wal alrimiv spsbc syl5 sbcimg sylibd impcom ) EFHZABDEICDE
      IJZRABCJZDEIZSATDKRUAATDGLTDEFMNBCDEFOPQ $.
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.
    $( Substitution for a variable not free in a wff does not affect it.
       (Contributed by Mario Carneiro, 14-Oct-2016.) $)
    sbctt $p |- ( ( A e. V /\ F/ x ph ) -> ( [. A / x ]. ph <-> ph ) ) $=
      ( vy wcel wnf wsbc wb wsb wi wceq dfsbcq2 bibi1d imbi2d sbft vtoclg imp
      cv ) CDFABGZABCHZAIZTABEJZAIZKTUBKECDESCLZUDUBTUEUCUAAABECMNOABEPQR $.
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    sbcgf.1 $e |- F/ x ph $.
    $( Substitution for a variable not free in a wff does not affect it.
       (Contributed by NM, 11-Oct-2004.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbcgf $p |- ( A e. V -> ( [. A / x ]. ph <-> ph ) ) $=
      ( wcel wnf wsbc wb sbctt mpan2 ) CDFABGABCHAIEABCDJK $.

    $( Substitution for a variable not free in antecedent affects only the
       consequent.  (Contributed by NM, 11-Oct-2004.) $)
    sbc19.21g $p |- ( A e. V ->
            ( [. A / x ]. ( ph -> ps ) <-> ( ph -> [. A / x ]. ps ) ) ) $=
      ( wcel wi wsbc sbcimg sbcgf imbi1d bitrd ) DEGZABHCDIACDIZBCDIZHAPHABCDEJ
      NOAPACDEFKLM $.
  $}

  ${
    $d x ph $.
    $( Substitution for a variable not occurring in a wff does not affect it.
       Distinct variable form of ~ sbcgf .  (Contributed by Alan Sare,
       10-Nov-2012.) $)
    sbcg $p |- ( A e. V -> ( [. A / x ]. ph <-> ph ) ) $=
      ( nfv sbcgf ) ABCDABEF $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x V $.  $d y W $.
    sbc2iegf.1 $e |- F/ x ps $.
    sbc2iegf.2 $e |- F/ y ps $.
    sbc2iegf.3 $e |- F/ x B e. W $.
    sbc2iegf.4 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    sbc2iegf $p |- ( ( A e. V /\ B e. W ) ->
            ( [. A / x ]. [. B / y ]. ph <-> ps ) ) $=
      ( wcel wa simpl cv wceq wb adantll nfv wsbc wnf a1i sbciedf nfan ) EGMZFH
      MZNZADFUAZBCEGUFUGOUGCPEQZUIBRUFUGUJNZABDFHUGUJOUJDPFQABRUGLSUKDTBDUBUKJU
      CUDSUFUGCUFCTKUEBCUBUHIUCUD $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ps $.
    sbc2ie.1 $e |- A e. _V $.
    sbc2ie.2 $e |- B e. _V $.
    sbc2ie.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by NM, 16-Dec-2008.)  (Revised by Mario Carneiro,
       19-Dec-2013.) $)
    sbc2ie $p |- ( [. A / x ]. [. B / y ]. ph <-> ps ) $=
      ( cvv wcel wsbc wb nfv nfth sbc2iegf mp2an ) EJKFJKZADFLCELBMGHABCDEFJJBC
      NBDNRCHOIPQ $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ph $.  $d x y ch $.
    sbc2iedv.1 $e |- A e. _V $.
    sbc2iedv.2 $e |- B e. _V $.
    sbc2iedv.3 $e |- ( ph -> ( ( x = A /\ y = B ) -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by NM, 16-Dec-2008.)  (Proof shortened by Mario Carneiro,
       18-Oct-2016.) $)
    sbc2iedv $p |- ( ph -> ( [. A / x ]. [. B / y ]. ps <-> ch ) ) $=
      ( wsbc cvv wcel a1i cv wceq wa wb impl sbcied ) ABEGKCDFLFLMAHNADOFPZQZBC
      EGLGLMUBINAUAEOGPBCRJSTT $.
  $}

  ${
    $d x y z A $.  $d y z B $.  $d z C $.  $d x y z ps $.
    sbc3ie.1 $e |- A e. _V $.
    sbc3ie.2 $e |- B e. _V $.
    sbc3ie.3 $e |- C e. _V $.
    sbc3ie.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by Mario Carneiro, 19-Jun-2014.)  (Revised by Mario
       Carneiro, 29-Dec-2014.) $)
    sbc3ie $p |- ( [. A / x ]. [. B / y ]. [. C / z ]. ph <-> ps ) $=
      ( wsbc cv wceq wa cvv wcel a1i wb 3expa sbcied sbc2ie ) AEHMBCDFGIJCNFOZD
      NGOZPZABEHQHQRUFKSUDUEENHOABTLUAUBUC $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y V $.  $d x W $.
    $( Lemma for ~ sbccom .  (Contributed by NM, 14-Nov-2005.)  (Revised by
       Mario Carneiro, 18-Oct-2016.) $)
    sbccomlem $p |- ( [. A / x ]. [. B / y ]. ph
         <-> [. B / y ]. [. A / x ]. ph ) $=
      ( cv wceq wa wex wsbc excom exdistr an12 exbii bitri 3bitr3i sbc5 3bitr4i
      19.42v sbcbii ) CFEGZAHZCIZBDJZBFDGZAHZBIZCEJZACEJZBDJABDJZCEJUEUCHBIZUAU
      GHZCIZUDUHUEUBHZCIBIUNBIZCIUKUMUNBCKUEUBBCLUOULCUOUAUFHZBIULUNUPBUEUAAMNU
      AUFBSONPUCBDQUGCEQRUIUCBDACEQTUJUGCEABDQTR $.
  $}

  ${
    $d w y z A $.  $d w x z B $.  $d w z ph $.  $d x y $.
    $( Commutative law for double class substitution.  (Contributed by NM,
       15-Nov-2005.)  (Proof shortened by Mario Carneiro, 18-Oct-2016.) $)
    sbccom $p |- ( [. A / x ]. [. B / y ]. ph
          <-> [. B / y ]. [. A / x ]. ph ) $=
      ( vw vz cv wsbc sbccomlem sbcbii bitri 3bitr3i sbcco ) ACFHZIZFEIZBDIZABG
      HZIZGDIZCEIZACEIZBDIABDIZCEIQBSIZGDIZUACOIZFEIZRUBTCOIZFEIZGDIUIGDIZFEIUF
      UHUIGFDEJUJUEGDUJPBSIZFEIUEUIULFEACBOSJKPFBESJLKUKUGFETGCDOJKMQBGDNUACFEN
      MQUCBDACFENKUAUDCEABGDNKM $.
  $}

  ${
    $d x y z $.  $d A z $.  $d B x z $.  $d V z $.  $d ph z $.
    $( Interchange class substitution and restricted quantifier.  (Contributed
       by NM, 1-Mar-2008.)  (Revised by David Abernethy, 22-Feb-2010.) $)
    sbcralt $p |- ( ( A e. V /\ F/_ y A ) ->
           ( [. A / x ]. A. y e. B ph <-> A. y e. B [. A / x ]. ph ) ) $=
      ( vz wral wsbc cv wcel wnfc wa sbcco simpl wsb wceq sbsbc nfcv wb sbequ12
      nfs1v nfral weq ralbidv bitr3i nfnfc1 nfcvd id nfeqd nfan1 dfsbcq2 adantl
      sbie ralbid adantll syl5bb sbcied syl5bbr ) ACEHZBDIUTBGJZIZGDIDFKZCDLZMZ
      ABDIZCEHZUTBGDNVEVBVGGDFVCVDOVBABGPZCEHZVEVADQZMVGVBUTBGPVIUTBGRUTVIBGVHB
      CEBESABGUBUCBGUDAVHCEABGUAUEUNUFVDVJVIVGTVCVDVJMVHVFCEVDVJCCDUGVDCVADVDCV
      AUHVDUIUJUKVJVHVFTVDABGDULUMUOUPUQURUS $.

    $( Interchange class substitution and restricted existential quantifier.
       (Contributed by NM, 1-Mar-2008.)  (Proof shortened by Mario Carneiro,
       13-Oct-2016.) $)
    sbcrext $p |- ( ( A e. V /\ F/_ y A ) ->
          ( [. A / x ]. E. y e. B ph <-> E. y e. B [. A / x ]. ph ) ) $=
      ( wcel cvv wnfc wrex wsbc wb elex wa wn wral sbcng adantr bitrd dfrex2 id
      sbcralt nfnfc1 nfcvd nfeld nfan1 adantl ralbid ancoms notbid sbcbii sylan
      3bitr4g ) DFGDHGZCDIZACEJZBDKZABDKZCEJZLDFMUNUONZAOZCEPZOZBDKZUROZCEPZOZU
      QUSUTVDVBBDKZOZVGUNVDVILUOVBBDHQRUTVHVFUTVHVABDKZCEPZVFVABCDEHUBUOUNVKVFL
      UOUNNVJVECEUOUNCCDUCUOCDHUOUAUOCHUDUEUFUNVJVELUOABDHQUGUHUISUJSUPVCBDACET
      UKURCETUMUL $.
  $}

  ${
    $d y z A $.  $d x B $.  $d x y z $.  $d ph z $.  $d B z $.
    $( Interchange class substitution and restricted quantifier.  (Contributed
       by NM, 15-Nov-2005.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbcralg $p |- ( A e. V ->
                 ( [. A / x ]. A. y e. B ph <-> A. y e. B [. A / x ]. ph ) ) $=
      ( vz wral wsb wsbc dfsbcq2 wceq ralbidv nfcv nfs1v nfral weq sbequ12 sbie
      cv vtoclbg ) ACEHZBGIABGIZCEHZUBBDJABDJZCEHGDFUBBGDKGTDLUCUECEABGDKMUBUDB
      GUCBCEBENABGOPBGQAUCCEABGRMSUA $.

    $( Interchange class substitution and restricted existential quantifier.
       (Contributed by NM, 15-Nov-2005.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbcrexg $p |- ( A e. V ->
                 ( [. A / x ]. E. y e. B ph <-> E. y e. B [. A / x ]. ph ) ) $=
      ( vz wrex wsb wsbc dfsbcq2 wceq rexbidv nfcv nfs1v nfrex weq sbequ12 sbie
      cv vtoclbg ) ACEHZBGIABGIZCEHZUBBDJABDJZCEHGDFUBBGDKGTDLUCUECEABGDKMUBUDB
      GUCBCEBENABGOPBGQAUCCEABGRMSUA $.

    $( Interchange class substitution and restricted uniqueness quantifier.
       (Contributed by NM, 24-Feb-2013.) $)
    sbcreug $p |- ( A e. V ->
                 ( [. A / x ]. E! y e. B ph <-> E! y e. B [. A / x ]. ph ) ) $=
      ( vz wreu wsb wsbc dfsbcq2 wceq reubidv nfcv nfs1v nfreu weq sbequ12 sbie
      cv vtoclbg ) ACEHZBGIABGIZCEHZUBBDJABDJZCEHGDFUBBGDKGTDLUCUECEABGDKMUBUDB
      GUCBCEBENABGOPBGQAUCCEABGRMSUA $.
  $}

  ${
    $d y w A $.  $d w z B $.  $d w ph $.  $d x y $.  $d w x z $.
    sbcabel.1 $e |- F/_ x B $.
    $( Interchange class substitution and class abstraction.  (Contributed by
       NM, 5-Nov-2005.) $)
    sbcabel $p |- ( A e. V -> ( [. A / x ]. { y | ph } e. B <->
                  { y | [. A / x ]. ph } e. B ) ) $=
      ( vw wcel cvv cab wsbc wb cv wceq wa wex wal abeq2 bitrd elex sbcexg sbcg
      sbcang sbcbii sbcalg sbcbig bibi1d albidv syl6bbr anbi12d df-clel 3bitr4g
      syl5bb nfcri sbcgf exbidv syl ) DFIDJIZACKZEIZBDLZABDLZCKZEIZMDFUAUSHNZUT
      OZVFEIZPZHQZBDLZVFVDOZVHPZHQZVBVEUSVKVIBDLZHQVNVIHBDJUBUSVOVMHUSVOVGBDLZV
      HBDLZPVMVGVHBDJUDUSVPVLVQVHUSVPCNVFIZVCMZCRZVLVPVRAMZCRZBDLZUSVTVGWBBDACV
      FSUEUSWCWABDLZCRVTWACBDJUFUSWDVSCUSWDVRBDLZVCMVSVRABDJUGUSWEVRVCVRBDJUCUH
      TUITUNVCCVFSUJVHBDJBHEGUOUPUKTUQTVAVJBDHUTEULUEHVDEULUMUR $.
  $}

  ${
    $d y A $.  $d x y B $.  $d y ph $.
    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69.  This
       provides an axiom for a predicate calculus for a restricted domain.
       This theorem generalizes the unrestricted ~ stdpc4 and ~ spsbc .  See
       also ~ rspsbca and ~ rspcsbela .  (Contributed by NM, 17-Nov-2006.)
       (Proof shortened by Mario Carneiro, 13-Oct-2016.) $)
    rspsbc $p |- ( A e. B -> ( A. x e. B ph -> [. A / x ]. ph ) ) $=
      ( vy wral wsb wcel wsbc cbvralsv dfsbcq2 rspcv syl5bi ) ABDFABEGZEDFCDHAB
      CIZABEDJNOECDABECKLM $.

    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69.
       (Contributed by NM, 14-Dec-2005.) $)
    rspsbca $p |- ( ( A e. B /\ A. x e. B ph ) -> [. A / x ]. ph ) $=
      ( wcel wral wsbc rspsbc imp ) CDEABDFABCGABCDHI $.

    $( Existence form of ~ rspsbca .  (Contributed by NM, 29-Feb-2008.)  (Proof
       shortened by Mario Carneiro, 13-Oct-2016.) $)
    rspesbca $p |- ( ( A e. B /\ [. A / x ]. ph ) -> E. x e. B ph ) $=
      ( vy wcel wsbc wa wsb wrex dfsbcq2 rspcev cbvrexsv sylibr ) CDFABCGZHABEI
      ZEDJABDJPOECDABECKLABEDMN $.

    $( Existence form of ~ spsbc .  (Contributed by Mario Carneiro,
       18-Nov-2016.) $)
    spesbc $p |- ( [. A / x ]. ph -> E. x ph ) $=
      ( wsbc cvv wrex wex wcel sbcex rspesbca mpancom rexv sylib ) ABCDZABEFZAB
      GCEHNOABCIABCEJKABLM $.

    spesbcd.1 $e |- ( ph -> [. A / x ]. ps ) $.
    $( form of ~ spsbc .  (Contributed by Mario Carneiro, 9-Feb-2017.) $)
    spesbcd $p |- ( ph -> E. x ps ) $=
      ( wsbc wex spesbc syl ) ABCDFBCGEBCDHI $.
  $}

  ${
    $d x B $.
    sbcth2.1 $e |- ( x e. B -> ph ) $.
    $( A substitution into a theorem.  (Contributed by NM, 1-Mar-2008.)  (Proof
       shortened by Mario Carneiro, 13-Oct-2016.) $)
    sbcth2 $p |- ( A e. B -> [. A / x ]. ph ) $=
      ( wcel wral wsbc rgen rspsbc mpi ) CDFABDGABCHABDEIABCDJK $.
  $}

  ${
    ra5.1 $e |- F/ x ph $.
    $( Restricted quantifier version of Axiom 5 of [Mendelson] p. 69.  This is
       an axiom of a predicate calculus for a restricted domain.  Compare the
       unrestricted ~ stdpc5 .  (Contributed by NM, 16-Jan-2004.) $)
    ra5 $p |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) $=
      ( wi wral cv wcel wal df-ral bi2.04 albii bitri stdpc5 sylbi syl6ibr ) AB
      FZCDGZACHDIZBFZCJZBCDGSAUAFZCJZAUBFSTRFZCJUDRCDKUEUCCTABLMNAUACEOPBCDKQ
      $.
  $}

  ${
    $d x y A $.
    rmo2.1 $e |- F/ y ph $.
    $( Alternate definition of restricted "at most one."  Note that
       ` E* x e. A ph ` is not equivalent to
       ` E. y e. A A. x e. A ( ph -> x = y ) ` (in analogy to ~ reu6 ); to see
       this, let ` A ` be the empty set.  However, one direction of this
       pattern holds; see ~ rmo2i .  (Contributed by NM, 17-Jun-2017.) $)
    rmo2 $p |- ( E* x e. A ph <-> E. y A. x e. A ( ph -> x = y ) ) $=
      ( wrmo cv wcel wa wmo weq wi wal wex wral df-rmo nfv nfan mo2 impexp
      albii df-ral bitr4i exbii 3bitri ) ABDFBGDHZAIZBJUGBCKZLZBMZCNAUHLZBDOZCN
      ABDPUGBCUFACUFCQERSUJULCUJUFUKLZBMULUIUMBUFAUHTUAUKBDUBUCUDUE $.

    $( Condition implying restricted "at most one."  (Contributed by NM,
       17-Jun-2017.) $)
    rmo2i $p |- ( E. y e. A A. x e. A ( ph -> x = y ) -> E* x e. A ph ) $=
      ( weq wi wral wrex wex wrmo rexex rmo2 sylibr ) ABCFGBDHZCDIOCJABDKOCDLAB
      CDEMN $.

    $( Restricted "at most one" using explicit substitution.  (Contributed by
       NM, 4-Nov-2012.)  (Revised by NM, 16-Jun-2017.) $)
    rmo3 $p |- ( E* x e. A ph <->
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( wrmo cv wcel wa wmo wsb wi wral anbi1i bitri 3bitri impexp albii df-ral
      wal weq df-rmo sban clelsb3 anbi2i an4 ancom r19.21v 3bitr2i nfv nfan mo3
      imbi1i 3bitr4i ) ABDFBGDHZAIZBJZAABCKZIZBCUAZLZCDMZBDMZABDUBUPUPBCKZIZUTL
      ZCTZBTUOVBLZBTUQVCVGVHBVGCGDHZUOVALZLZCTVJCDMVHVFVKCVFVIUOIZUSIZUTLVLVALV
      KVEVMUTVEUPVIURIZIUOVIIZUSIVMVDVNUPVDUOBCKZURIVNUOABCUCVPVIURCBDUDNOUEUOA
      VIURUFVOVLUSUOVIUGNPUMVLUSUTQVIUOVAQPRVJCDSUOVACDUHUIRUPBCUOACUOCUJEUKULV
      BBDSUNO $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d y ph $.  $d x y ps $.  $d x ch $.
    rmoi.b $e |- ( x = B -> ( ph <-> ps ) ) $.
    rmoi.c $e |- ( x = C -> ( ph <-> ch ) ) $.
    $( Consequence of "at most one", using implicit substitution.  (Contributed
       by NM, 2-Jan-2015.)  (Revised by NM, 16-Jun-2017.) $)
    rmob $p |- ( ( E* x e. A ph /\ ( B e. A /\ ps ) ) ->
        ( B = C <-> ( C e. A /\ ch ) ) ) $=
      ( wrmo cv wcel wa wmo wceq wb df-rmo simprl eleq1 anbi12d syl5ibcom simpl
      wi a1i simplrl simpr simpll simplrr mob syl212anc ex pm5.21ndd sylanb ) A
      DEJDKZELZAMZDNZFELZBMZFGOZGELZCMZPZADEQUQUSMZVAUTVBVDURUTVAUQURBRFGESUAVB
      VAUCVDVACUBUDVDVAVCVDVAMURVAUQURBVCUQURBVAUEZVDVAUFUQUSVAUGVEUQURBVAUHUPU
      SVBDFGEEUNFOUOURABUNFESHTUNGOUOVAACUNGESITUIUJUKULUM $.

    $( Consequence of "at most one", using implicit substitution.  (Contributed
       by NM, 4-Nov-2012.)  (Revised by NM, 16-Jun-2017.) $)
    rmoi $p |- ( ( E* x e. A ph
          /\ ( B e. A /\ ps ) /\ ( C e. A /\ ch ) ) -> B = C ) $=
      ( wrmo wcel wa wceq rmob biimp3ar ) ADEJFEKBLFGMGEKCLABCDEFGHINO $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets into classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [_ $.  $( Underlined left bracket $)
  $c ]_ $.  $( Underlined right bracket $)

  $( Extend class notation to include the proper substitution of a class for a
     set into another class. $)
  csb $a class [_ A / x ]_ B $.

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Define the proper substitution of a class for a set into another class.
       The underlined brackets distinguish it from the substitution into a wff,
       ~ wsbc , to prevent ambiguity.  Theorem ~ sbcel1g shows an example of
       how ambiguity could arise if we didn't use distinguished brackets.
       Theorem ~ sbccsbg recreates substitution into a wff from this
       definition.  (Contributed by NM, 10-Nov-2005.) $)
    df-csb $a |- [_ A / x ]_ B = { y | [. A / x ]. y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y $.
    $( Alternate expression for the proper substitution into a class, without
       referencing substitution into a wff.  Note that ` x ` can be free in
       ` B ` but cannot occur in ` A ` .  (Contributed by NM, 2-Dec-2013.) $)
    csb2 $p |- [_ A / x ]_ B = { y | E. x ( x = A /\ y e. B ) } $=
      ( csb cv wcel wsbc cab wceq wa wex df-csb sbc5 abbii eqtri ) ACDEBFDGZACH
      ZBIAFCJQKALZBIABCDMRSBQACNOP $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Analog of ~ dfsbcq for proper substitution into a class.  (Contributed
       by NM, 10-Nov-2005.) $)
    csbeq1 $p |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( vy wceq cv wcel wsbc cab csb dfsbcq abbidv df-csb 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
  $}

  ${
    $d x z $.  $d y z $.  $d z A $.  $d z C $.  $d z D $.
    cbvcsb.1 $e |- F/_ y C $.
    cbvcsb.2 $e |- F/_ x D $.
    cbvcsb.3 $e |- ( x = y -> C = D ) $.
    $( Change bound variables in a class substitution.  Interestingly, this
       does not require any bound variable conditions on ` A ` .  (Contributed
       by Jeff Hankins, 13-Sep-2009.)  (Revised by Mario Carneiro,
       11-Dec-2016.) $)
    cbvcsb $p |- [_ A / x ]_ C = [_ A / y ]_ D $=
      ( vz cv wcel wsbc cab csb nfcri wceq eleq2d cbvsbc abbii df-csb 3eqtr4i )
      IJZDKZACLZIMUBEKZBCLZIMACDNBCENUDUFIUCUEABCBIDFOAIEGOAJBJPDEUBHQRSAICDTBI
      CETUA $.
  $}

  ${
    $d x y $.  $d z A $.  $d y z B $.  $d x z C $.
    cbvcsbv.1 $e |- ( x = y -> B = C ) $.
    $( Change the bound variable of a proper substitution into a class using
       implicit substitution.  (Contributed by NM, 30-Sep-2008.)  (Revised by
       Mario Carneiro, 13-Oct-2016.) $)
    cbvcsbv $p |- [_ A / x ]_ B = [_ A / y ]_ C $=
      ( nfcv cbvcsb ) ABCDEBDGAEGFH $.
  $}

  ${
    csbeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for proper substitution into a class.  (Contributed
       by NM, 3-Dec-2005.) $)
    csbeq1d $p |- ( ph -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( wceq csb csbeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
  $}

  ${
    $d x y $.  $d y A $.
    $( Analog of ~ sbid for proper substitution into a class.  (Contributed by
       NM, 10-Nov-2005.) $)
    csbid $p |- [_ x / x ]_ A = A $=
      ( vy cv csb wcel wsbc cab df-csb wsb sbsbc sbid bitr3i abbii abid2 3eqtri
      ) AADZBECDBFZAQGZCHRCHBACQBISRCSRAAJRRAAKRALMNCBOP $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Equality theorem for proper substitution into a class.  (Contributed by
       NM, 10-Nov-2005.) $)
    csbeq1a $p |- ( x = A -> B = [_ A / x ]_ B ) $=
      ( cv wceq csb csbid csbeq1 syl5eqr ) ADZBECAJCFABCFACGAJBCHI $.
  $}

  ${
    $d z A $.  $d y z B $.  $d z V $.  $d x z $.
    $( Composition law for chained substitutions into a class.  (Contributed by
       NM, 10-Nov-2005.) $)
    csbco $p |- [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B $=
      ( vz cv csb wcel wsbc cab df-csb abeq2i sbcbii sbcco bitri abbii 3eqtr4i
      ) EFZABFZDGZHZBCIZEJRDHZACIZEJBCTGACDGUBUDEUBUCASIZBCIUDUAUEBCUEETAESDKLM
      UCABCNOPBECTKAECDKQ $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( The existence of proper substitution into a class.  (Contributed by NM,
       10-Nov-2005.) $)
    csbexg $p |- ( ( A e. V /\ A. x B e. W ) -> [_ A / x ]_ B e. _V ) $=
      ( vy wcel wal wa csb wsbc cab cvv df-csb abid2 elex syl5eqel alimi spsbc
      cv syl5 imp wb nfcv sbcabel adantr mpbid ) BDGZCEGZAHZIZABCJFTCGZABKFLZMA
      FBCNUKULFLZMGZABKZUMMGZUHUJUPUJUOAHUHUPUIUOAUIUNCMFCOCEPQRUOABDSUAUBUHUPU
      QUCUJULAFBMDAMUDUEUFUGQ $.
  $}

  ${
    csbex.1 $e |- A e. _V $.
    csbex.2 $e |- B e. _V $.
    $( The existence of proper substitution into a class.  (Contributed by NM,
       7-Aug-2007.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    csbex $p |- [_ A / x ]_ B e. _V $=
      ( cvv wcel csb wal csbexg mpan mpg ) CFGZABCHFGZABFGMAINDABCFFJKEL $.
  $}

  ${
    $d y A $.  $d y B $.  $d y V $.  $d x y $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free).  (Contributed by Mario Carneiro, 14-Oct-2016.) $)
    csbtt $p |- ( ( A e. V /\ F/_ x B ) -> [_ A / x ]_ B = B ) $=
      ( vy wcel wnfc wa csb cv wsbc cab df-csb wnf wb nfcr sbctt sylan2 abbi1dv
      syl5eq ) BDFZACGZHZABCIEJCFZABKZELCAEBCMUCUEECUBUAUDANUEUDOAECPUDABDQRST
      $.
  $}

  ${
    csbconstgf.1 $e |- F/_ x B $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free).  (Contributed by NM, 10-Nov-2005.) $)
    csbconstgf $p |- ( A e. V -> [_ A / x ]_ B = B ) $=
      ( wcel wnfc csb wceq csbtt mpan2 ) BDFACGABCHCIEABCDJK $.
  $}

  ${
    $d A y $.  $d B x y $.  $d V y $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). ~ csbconstgf with distinct variable requirement.  (Contributed by
       Alan Sare, 22-Jul-2012.) $)
    csbconstg $p |- ( A e. V -> [_ A / x ]_ B = B ) $=
      ( nfcv csbconstgf ) ABCDACEF $.
  $}

  ${
    $d w x y z $.  $d w y z A $.  $d w y z B $.  $d w y z C $.
    $( Distribute proper substitution through a membership relation.
       (Contributed by NM, 10-Nov-2005.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbcel12g $p |- ( A e. V -> ( [. A / x ]. B e. C <->
                   [_ A / x ]_ B e. [_ A / x ]_ C ) ) $=
      ( vy vz wcel wsbc cv cab csb wsb dfsbcq2 abbidv eleq12d nfs1v nfab df-csb
      sbab wceq nfel weq sbie vtoclbg eleq12i syl6bbr ) BEHCDHZABIZFJZCHZABIZFK
      ZUJDHZABIZFKZHZABCLZABDLZHUHAGMUKAGMZFKZUNAGMZFKZHZUIUQGBEUHAGBNGJBUAZVAU
      MVCUPVEUTULFUKAGBNOVEVBUOFUNAGBNOPUHVDAGAVAVCUTAFUKAGQRVBAFUNAGQRUBAGUCCV
      ADVCAGFCTAGFDTPUDUEURUMUSUPAFBCSAFBDSUFUG $.

    $( Distribute proper substitution through an equality relation.
       (Contributed by NM, 10-Nov-2005.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbceqg $p |- ( A e. V -> ( [. A / x ]. B = C <->
                   [_ A / x ]_ B = [_ A / x ]_ C ) ) $=
      ( vy vz wcel wceq wsbc cab csb wsb dfsbcq2 abbidv eqeq12d nfs1v nfab sbab
      cv nfeq weq sbie vtoclbg df-csb eqeq12i syl6bbr ) BEHCDIZABJZFTZCHZABJZFK
      ZUJDHZABJZFKZIZABCLZABDLZIUHAGMUKAGMZFKZUNAGMZFKZIZUIUQGBEUHAGBNGTBIZVAUM
      VCUPVEUTULFUKAGBNOVEVBUOFUNAGBNOPUHVDAGAVAVCUTAFUKAGQRVBAFUNAGQRUAAGUBCVA
      DVCAGFCSAGFDSPUCUDURUMUSUPAFBCUEAFBDUEUFUG $.
  $}

  $( Distribute proper substitution through negated membership.  (Contributed
     by Andrew Salmon, 18-Jun-2011.) $)
  sbcnel12g $p |- ( A e. V -> ( [. A / x ]. B e/ C <-> [_ A / x ]_ B e/
                    [_ A / x ]_ C ) ) $=
    ( wcel wnel wsbc wn csb wb df-nel sbcbii a1i sbcel12g notbid syl6bbr 3bitrd
    sbcng ) BEFZCDGZABHZCDFZIZABHZUCABHZIZABCJZABDJZGZUBUEKTUAUDABCDLMNUCABESTU
    GUHUIFZIUJTUFUKABCDEOPUHUILQR $.

  $( Distribute proper substitution through an inequality.  (Contributed by
     Andrew Salmon, 18-Jun-2011.) $)
  sbcne12g $p |- ( A e. V -> ( [. A / x ]. B =/= C <-> [_ A / x ]_ B =/=
                   [_ A / x ]_ C ) ) $=
    ( wcel wne wsbc csb wn wceq wb nne sbcbii a1i sbcng syl6bbr 3bitr3d con4bid
    sbceqg ) BEFZCDGZABHZABCIZABDIZGZUAUBJZABHZCDKZABHZUCJUFJZUHUJLUAUGUIABCDMN
    OUBABEPUAUJUDUEKUKABCDETUDUEMQRS $.

  ${
    $d y A $.  $d x y C $.  $d y V $.
    $( Move proper substitution in and out of a membership relation.  Note that
       the scope of ` [. A / x ]. ` is the wff ` B e. C ` , whereas the scope
       of ` [_ A / x ]_ ` is the class ` B ` .  (Contributed by NM,
       10-Nov-2005.) $)
    sbcel1g $p |- ( A e. V -> ( [. A / x ]. B e. C <->
                    [_ A / x ]_ B e. C ) ) $=
      ( wcel wsbc csb sbcel12g csbconstg eleq2d bitrd ) BEFZCDFABGABCHZABDHZFND
      FABCDEIMODNABDEJKL $.

    $( Move proper substitution to first argument of an equality.  (Contributed
       by NM, 30-Nov-2005.) $)
    sbceq1g $p |- ( A e. V -> ( [. A / x ]. B = C <->
                    [_ A / x ]_ B = C ) ) $=
      ( wcel wceq wsbc csb sbceqg csbconstg eqeq2d bitrd ) BEFZCDGABHABCIZABDIZ
      GODGABCDEJNPDOABDEKLM $.
  $}

  ${
    $d y A $.  $d x y B $.  $d y V $.
    $( Move proper substitution in and out of a membership relation.
       (Contributed by NM, 14-Nov-2005.) $)
    sbcel2g $p |- ( A e. V -> ( [. A / x ]. B e. C <->
                    B e. [_ A / x ]_ C ) ) $=
      ( wcel wsbc csb sbcel12g csbconstg eleq1d bitrd ) BEFZCDFABGABCHZABDHZFCO
      FABCDEIMNCOABCEJKL $.

    $( Move proper substitution to second argument of an equality.
       (Contributed by NM, 30-Nov-2005.) $)
    sbceq2g $p |- ( A e. V -> ( [. A / x ]. B = C <->
                    B = [_ A / x ]_ C ) ) $=
      ( wcel wceq wsbc csb sbceqg csbconstg eqeq1d bitrd ) BEFZCDGABHABCIZABDIZ
      GCPGABCDEJNOCPABCEKLM $.
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutative law for double substitution into a class.  (Contributed by
       NM, 14-Nov-2005.) $)
    csbcomg $p |- ( ( A e. V /\ B e. W ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) $=
      ( vz wcel cvv csb wceq elex wsbc wb sbcel2g sbcbidv adantl adantr 3bitr3d
      wa cv sbccom a1i eqrdv syl2an ) CFICJIZDJIZACBDEKZKZBDACEKZKZLDGICFMDGMUG
      UHUAZHUJULUMHUBZUIIZACNZUNUKIZBDNZUNUJIZUNULIZUMUNEIZBDNZACNZVAACNZBDNZUP
      URVCVEOUMVAABCDUCUDUHVCUPOUGUHVBUOACBDUNEJPQRUGVEUROUHUGVDUQBDACUNEJPQSTU
      GUPUSOUHACUNUIJPSUHURUTOUGBDUNUKJPRTUEUF $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.  $d y ph $.
    csbeq2d.1 $e |- F/ x ph $.
    csbeq2d.2 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution.  (Contributed by
       NM, 22-Nov-2005.)  (Revised by Mario Carneiro, 1-Sep-2015.) $)
    csbeq2d $p |- ( ph -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( vy cv wcel wsbc cab csb eleq2d sbcbid abbidv df-csb 3eqtr4g ) AHIZDJZBC
      KZHLSEJZBCKZHLBCDMBCEMAUAUCHATUBBCFADESGNOPBHCDQBHCEQR $.
  $}

  ${
    $d x ph $.
    csbeq2dv.1 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution.  (Contributed by
       NM, 10-Nov-2005.)  (Revised by Mario Carneiro, 1-Sep-2015.) $)
    csbeq2dv $p |- ( ph -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( nfv csbeq2d ) ABCDEABGFH $.
  $}

  ${
    csbeq2i.1 $e |- B = C $.
    $( Formula-building inference rule for class substitution.  (Contributed by
       NM, 10-Nov-2005.)  (Revised by Mario Carneiro, 1-Sep-2015.) $)
    csbeq2i $p |- [_ A / x ]_ B = [_ A / x ]_ C $=
      ( csb wceq wtru a1i csbeq2dv trud ) ABCFABDFGHABCDCDGHEIJK $.
  $}

  ${
    $d y z A $.  $d x y z $.
    $( The proper substitution of a class for set variable results in the class
       (if the class exists).  (Contributed by NM, 10-Nov-2005.) $)
    csbvarg $p |- ( A e. V -> [_ A / x ]_ x = A ) $=
      ( vz vy wcel cvv cv csb wceq elex wsbc cab df-csb sbcel2gv abbi1dv syl5eq
      vex ax-mp csbeq2i csbco 3eqtr3i syl ) BCFBGFZABAHZIZBJBCKUDUFDHZEHZFEBLZD
      MZBEBAUHUEIZIEBUHIUFUJEBUKUHUHGFZUKUHJERULUKUGUEFAUHLZDMUHADUHUENULUMDUHA
      UGUHGOPQSTAEBUEUAEDBUHNUBUDUIDBEUGBGOPQUC $.
  $}

  ${
    $d x y $.
    $( Substitution into a wff expressed in terms of substitution into a
       class.  (Contributed by NM, 15-Aug-2007.) $)
    sbccsbg $p |- ( A e. V ->
                 ( [. A / x ]. ph <-> y e. [_ A / x ]_ { y | ph } ) ) $=
      ( wsbc cv cab wcel csb abid sbcbii sbcel2g syl5bbr ) ABDFCGZACHZIZBDFDEIO
      BDPJIQABDACKLBDOPEMN $.
  $}

  $( Substitution into a wff expressed in using substitution into a class.
     (Contributed by NM, 27-Nov-2005.) $)
  sbccsb2g $p |- ( A e. V ->
               ( [. A / x ]. ph <-> A e. [_ A / x ]_ { x | ph } ) ) $=
    ( wsbc cv cab wcel csb abid sbcbii sbcel12g csbvarg eleq1d bitrd syl5bbr )
    ABCEBFZABGZHZBCEZCDHZCBCRIZHZSABCABJKUATBCQIZUBHUCBCQRDLUAUDCUBBCDMNOP $.

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y ph $.
    nfcsb1d.1 $e |- ( ph -> F/_ x A ) $.
    $( Bound-variable hypothesis builder for substitution into a class.
       (Contributed by Mario Carneiro, 12-Oct-2016.) $)
    nfcsb1d $p |- ( ph -> F/_ x [_ A / x ]_ B ) $=
      ( vy csb cv wcel wsbc cab df-csb nfv nfsbc1d nfabd nfcxfrd ) ABBCDGFHDIZB
      CJZFKBFCDLARBFAFMAQBCENOP $.
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    nfcsb1.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for substitution into a class.
       (Contributed by Mario Carneiro, 12-Oct-2016.) $)
    nfcsb1 $p |- F/_ x [_ A / x ]_ B $=
      ( csb wnfc wtru a1i nfcsb1d trud ) AABCEFGABCABFGDHIJ $.
  $}

  ${
    $d x y A $.
    $( Bound-variable hypothesis builder for substitution into a class.
       (Contributed by NM, 17-Aug-2006.)  (Revised by Mario Carneiro,
       12-Oct-2016.) $)
    nfcsb1v $p |- F/_ x [_ A / x ]_ B $=
      ( nfcv nfcsb1 ) ABCABDE $.
  $}

  ${
    $d x z $.  $d y z $.  $d z A $.  $d z B $.  $d z ph $.
    nfcsbd.1 $e |- F/ y ph $.
    nfcsbd.2 $e |- ( ph -> F/_ x A ) $.
    nfcsbd.3 $e |- ( ph -> F/_ x B ) $.
    $( Deduction version of ~ nfcsb .  (Contributed by NM, 21-Nov-2005.)
       (Revised by Mario Carneiro, 12-Oct-2016.) $)
    nfcsbd $p |- ( ph -> F/_ x [_ A / y ]_ B ) $=
      ( vz csb cv wcel wsbc cab df-csb nfv nfcrd nfsbcd nfabd nfcxfrd ) ABCDEJI
      KELZCDMZINCIDEOAUBBIAIPAUABCDFGABIEHQRST $.
  $}

  ${
    nfcsb.1 $e |- F/_ x A $.
    nfcsb.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for substitution into a class.
       (Contributed by Mario Carneiro, 12-Oct-2016.) $)
    nfcsb $p |- F/_ x [_ A / y ]_ B $=
      ( csb wnfc wtru nftru a1i nfcsbd trud ) ABCDGHIABCDBJACHIEKADHIFKLM $.
  $}

  ${
    $d x y $.
    csbhypf.1 $e |- F/_ x A $.
    csbhypf.2 $e |- F/_ x C $.
    csbhypf.3 $e |- ( x = A -> B = C ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See ~ sbhypf for class substitution version.  (Contributed
       by NM, 19-Dec-2008.) $)
    csbhypf $p |- ( y = A -> [_ y / x ]_ B = C ) $=
      ( cv wceq wi csb nfeq2 nfcsb1v nfeq nfim eqeq1 csbeq1a eqeq1d imbi12d
      chvar ) AIZCJZDEJZKBIZCJZAUEDLZEJZKABUFUHAAUECFMAUGEAUEDNGOPUBUEJZUCUFUDU
      HUBUECQUIDUGEAUEDRSTHUA $.
  $}

  ${
    $d x A $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Closed theorem version of ~ csbiegf .)  (Contributed by NM,
       11-Nov-2005.) $)
    csbiebt $p |- ( ( A e. V /\ F/_ x C ) ->
                 ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ) $=
      ( wcel cvv wnfc cv wceq wi wal csb wb elex wa wsbc adantl a1i nfeqd spsbc
      adantr simpl biimt csbeq1a eqeq1d bitr3d nfv nfnfc1 nfcsb1v simpr sbciedf
      nfan sylibd id nfan1 biimprcd alrimi ex impbid sylan ) BEFBGFZADHZAIBJZCD
      JZKZALZABCMZDJZNBEOVBVCPZVGVIVJVGVFABQZVIVBVGVKKVCVFABGUAUBVJVFVIABGVBVCU
      CVDVFVINVJVDVEVFVIVDVEUDVDCVHDABCUEUFZUGRVBVCAVBAUHADUIZUMVJAVHDAVHHZVJAB
      CUJZSVBVCUKTULUNVCVIVGKVBVCVIVGVCVIPVFAVCVIAVMVCAVHDVNVCVOSVCUOTUPVIVFVCV
      DVEVIVLUQRURUSRUTVA $.

    csbiedf.1 $e |- F/ x ph $.
    csbiedf.2 $e |- ( ph -> F/_ x C ) $.
    csbiedf.3 $e |- ( ph -> A e. V ) $.
    csbiedf.4 $e |- ( ( ph /\ x = A ) -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Contributed by Mario Carneiro, 13-Oct-2016.) $)
    csbiedf $p |- ( ph -> [_ A / x ]_ B = C ) $=
      ( cv wceq wi wal csb ex alrimi wcel wnfc wb csbiebt syl2anc mpbid ) ABKCL
      ZDELZMZBNZBCDOELZAUFBGAUDUEJPQACFRBESUGUHTIHBCDEFUAUBUC $.
  $}

  ${
    $d x z A $.  $d z B $.  $d y C $.  $d x y $.
    csbieb.1 $e |- A e. _V $.
    csbieb.2 $e |- F/_ x C $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution equivalent.
       (Contributed by NM, 2-Mar-2008.) $)
    csbieb $p |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) $=
      ( cvv wcel wnfc cv wceq wi wal csb wb csbiebt mp2an ) BGHADIAJBKCDKLAMABC
      NDKOEFABCDGPQ $.
  $}

  ${
    $d a x A $.  $d a B $.  $d a y C $.  $d x y $.
    csbiebg.2 $e |- F/_ x C $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution equivalent.
       (Contributed by NM, 24-Mar-2013.)  (Revised by Mario Carneiro,
       11-Dec-2016.) $)
    csbiebg $p |- ( A e. V ->
          ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ) $=
      ( va cv wceq wal csb eqeq2 imbi1d albidv csbeq1 eqeq1d vex csbieb vtoclbg
      wi ) AHZGHZIZCDIZTZAJAUBCKZDIUABIZUDTZAJABCKZDIGBEUBBIZUEUHAUJUCUGUDUBBUA
      LMNUJUFUIDAUBBCOPAUBCDGQFRS $.
  $}

  ${
    $d x y A $.  $d y C $.  $d x y V $.
    csbiegf.1 $e |- ( A e. V -> F/_ x C ) $.
    csbiegf.2 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Contributed by NM, 11-Nov-2005.)  (Revised by Mario Carneiro,
       13-Oct-2016.) $)
    csbiegf $p |- ( A e. V -> [_ A / x ]_ B = C ) $=
      ( wcel cv wceq wi wal csb ax-gen wnfc wb csbiebt mpdan mpbii ) BEHZAIBJCD
      JKZALZABCMDJZUAAGNTADOUBUCPFABCDEQRS $.
  $}

  ${
    $d x A $.  $d y C $.  $d x y $.
    csbief.1 $e |- A e. _V $.
    csbief.2 $e |- F/_ x C $.
    csbief.3 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Contributed by NM, 26-Nov-2005.)  (Revised by Mario Carneiro,
       13-Oct-2016.) $)
    csbief $p |- [_ A / x ]_ B = C $=
      ( cvv wcel csb wceq wnfc a1i csbiegf ax-mp ) BHIZABCJDKEABCDHADLPFMGNO $.
  $}

  ${
    $d x A $.  $d x y C $.  $d x y ph $.
    csbied.1 $e |- ( ph -> A e. V ) $.
    csbied.2 $e |- ( ( ph /\ x = A ) -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Contributed by Mario Carneiro, 2-Dec-2014.)  (Revised by Mario
       Carneiro, 13-Oct-2016.) $)
    csbied $p |- ( ph -> [_ A / x ]_ B = C ) $=
      ( nfv nfcvd csbiedf ) ABCDEFABIABEJGHK $.
  $}

  ${
    $d x A $.  $d x ph $.  $d x D $.
    csbied2.1 $e |- ( ph -> A e. V ) $.
    csbied2.2 $e |- ( ph -> A = B ) $.
    csbied2.3 $e |- ( ( ph /\ x = B ) -> C = D ) $.
    $( Conversion of implicit substitution to explicit class substitution,
       deduction form.  (Contributed by Mario Carneiro, 2-Jan-2017.) $)
    csbied2 $p |- ( ph -> [_ A / x ]_ C = D ) $=
      ( cv wceq id sylan9eqr syldan csbied ) ABCEFGHABKZCLZQDLEFLRAQCDRMINJOP
      $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.  $d x y z D $.
    csbie2t.1 $e |- A e. _V $.
    csbie2t.2 $e |- B e. _V $.
    $( Conversion of implicit substitution to explicit substitution into a
       class (closed form of ~ csbie2 ).  (Contributed by NM, 3-Sep-2007.)
       (Revised by Mario Carneiro, 13-Oct-2016.) $)
    csbie2t $p |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) ->
                  [_ A / x ]_ [_ B / y ]_ C = D ) $=
      ( cv wceq wa wi wal csb cvv nfa1 nfcvd wcel a1i csbiedf nfa2 nfv nfan sps
      sp impl ) AICJZBIDJZKEFJZLZBMZAMZACBDENFOUKAPULAFQCORULGSULUGKZBDEFOULUGB
      UJBAUAUGBUBUCUMBFQDORUMHSULUGUHUIUKUJAUJBUEUDUFTT $.

    csbie2.3 $e |- ( ( x = A /\ y = B ) -> C = D ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Contributed by NM, 27-Aug-2007.) $)
    csbie2 $p |- [_ A / x ]_ [_ B / y ]_ C = D $=
      ( cv wceq wa wi wal csb gen2 csbie2t ax-mp ) AJCKBJDKLEFKMZBNANACBDEOOFKS
      ABIPABCDEFGHQR $.
  $}

  ${
    $d x y z $.  $d A y z $.  $d B y z $.  $d C x $.  $d D y z $.  $d V z $.
    csbie2g.1 $e |- ( x = y -> B = C ) $.
    csbie2g.2 $e |- ( y = A -> C = D ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       This version of ~ sbcie avoids a disjointness condition on ` x , A ` by
       substituting twice.  (Contributed by Mario Carneiro, 11-Nov-2016.) $)
    csbie2g $p |- ( A e. V -> [_ A / x ]_ B = D ) $=
      ( vz wcel csb cv wsbc cab df-csb wceq eleq2d sbcie2g abbi1dv syl5eq ) CGK
      ZACDLJMZDKZACNZJOFAJCDPUBUEJFUDUCEKUCFKABCGAMBMZQDEUCHRUFCQEFUCIRSTUA $.
  $}

  ${
    $d x z $.  $d y z $.  $d z A $.  $d z B $.  $d z C $.  $d z ph $.
    $( Nest the composition of two substitutions.  (Contributed by Mario
       Carneiro, 11-Nov-2016.) $)
    sbcnestgf $p |- ( ( A e. V /\ A. y F/ x ph ) ->
         ( [. A / x ]. [. B / y ]. ph <-> [. [_ A / x ]_ B / y ]. ph ) ) $=
      ( vz wcel wnf wal wsbc csb wb cv wi wceq dfsbcq syl cvv a1i csbeq1 imbi2d
      bibi12d vex csbeq1a adantl nfnf1 nfal nfa1 wnfc nfcsb1v sp nfsbcd sbciedf
      vtoclg imp ) DFHABIZCJZACEKZBDKZACBDELZKZMZURUSBGNZKZACBVDELZKZMZOURVCOGD
      FVDDPZVHVCURVIVEUTVGVBUSBVDDQVIVFVAPVGVBMBVDDEUAACVFVAQRUCUBURUSVGBVDSVDS
      HURGUDTBNVDPZUSVGMZURVJEVFPVKBVDEUEACEVFQRUFUQBCABUGUHURABCVFUQCUIBVFUJUR
      BVDEUKTUQCULUMUNUOUP $.

    $( Nest the composition of two substitutions.  (Contributed by NM,
       23-Nov-2005.)  (Proof shortened by Mario Carneiro, 10-Nov-2016.) $)
    csbnestgf $p |- ( ( A e. V /\ A. y F/_ x C ) ->
         [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz wcel wnfc wal wa cv csb wsbc cab cvv wceq elex df-csb abeq2i wb nfcr
      sbcbii wnf alimi sbcnestgf sylan2 syl5bb abbidv sylan 3eqtr4g ) CFHZAEIZB
      JZKGLZBDEMZHZACNZGOZUOEHZBACDMZNZGOZACUPMBVAEMULCPHZUNUSVCQCFRVDUNKZURVBG
      URUTBDNZACNZVEVBUQVFACVFGUPBGDESTUCUNVDUTAUDZBJVGVBUAUMVHBAGEUBUEUTABCDPU
      FUGUHUIUJAGCUPSBGVAESUK $.

    $d x ph $.
    $( Nest the composition of two substitutions.  (Contributed by NM,
       27-Nov-2005.)  (Proof shortened by Mario Carneiro, 11-Nov-2016.) $)
    sbcnestg $p |- ( A e. V ->
          ( [. A / x ]. [. B / y ]. ph <-> [. [_ A / x ]_ B / y ]. ph ) ) $=
      ( wcel wnf wal wsbc csb wb nfv ax-gen sbcnestgf mpan2 ) DFGABHZCIACEJBDJA
      CBDEKJLQCABMNABCDEFOP $.

    $d x C $.
    $( Nest the composition of two substitutions.  (Contributed by NM,
       23-Nov-2005.)  (Proof shortened by Mario Carneiro, 10-Nov-2016.) $)
    csbnestg $p |- ( A e. V ->
          [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( wcel wnfc wal csb wceq nfcv ax-gen csbnestgf mpan2 ) CFGAEHZBIACBDEJJBA
      CDJEJKPBAELMABCDEFNO $.
  $}

  ${
    $d x C $.
    $( Nest the composition of two substitutions.  (New usage is discouraged.)
       (Contributed by NM, 23-Nov-2005.) $)
    csbnestgOLD $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( wcel csb wceq wal csbnestg adantr ) CFHACBDEIIBACDIEIJDGHAKABCDEFLM $.
  $}

  ${
    $d x y $.  $d y C $.
    $( Nest the composition of two substitutions.  (Contributed by NM,
       23-May-2006.)  (Proof shortened by Mario Carneiro, 11-Nov-2016.) $)
    csbnest1g $p |- ( A e. V ->
         [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) $=
      ( vy wcel cv csb wnfc wceq nfcsb1v ax-gen csbnestgf mpan2 csbeq2i 3eqtr3g
      wal csbco ) BEGZABFCAFHZDIZIZIZFABCIZUBIZABACDIZIAUEDITAUBJZFRUDUFKUHFAUA
      DLMAFBCUBENOABUCUGAFCDSPAFUEDSQ $.
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.  $d y W $.
    $( Nest the composition of two substitutions.  Obsolete as of 11-Nov-2016.
       (Contributed by NM, 23-May-2006.)  (New usage is discouraged.) $)
    csbnest1gOLD $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) $=
      ( wcel csb wceq wal csbnest1g adantr ) BEGABACDHHAABCHDHICFGAJABCDEKL $.
  $}

  ${
    $d x A $.
    $( Idempotent law for class substitutions.  (Contributed by NM,
       1-Mar-2008.) $)
    csbidmg $p |- ( A e. V -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) $=
      ( wcel cvv csb wceq elex csbnest1g csbconstg csbeq1d eqtrd syl ) BDEBFEZA
      BABCGZGZPHBDIOQAABBGZCGPABBCFJOARBCABBFKLMN $.
  $}

  ${
    $d x A $.  $d x ph $.  $d x C $.  $d x D $.
    sbcco3g.1 $e |- ( x = A -> B = C ) $.
    $( Composition of two substitutions.  (Contributed by NM, 27-Nov-2005.)
       (Revised by Mario Carneiro, 11-Nov-2016.) $)
    sbcco3g $p |- ( A e. V ->
         ( [. A / x ]. [. B / y ]. ph <-> [. C / y ]. ph ) ) $=
      ( wcel wsbc csb sbcnestg cvv wceq wb elex nfcvd csbiegf dfsbcq 3syl bitrd
      ) DGIZACEJBDJACBDEKZJZACFJZABCDEGLUBDMIZUCFNUDUEODGPBDEFMUFBFQHRACUCFSTUA
      $.

    $( Composition of two substitutions.  (Contributed by NM, 27-Nov-2005.)
       (New usage is discouraged.) $)
    sbcco3gOLD $p |- ( ( A e. V /\ A. x B e. W ) ->
                ( [. A / x ]. [. B / y ]. ph <-> [. C / y ]. ph ) ) $=
      ( wcel wsbc wb wal sbcco3g adantr ) DGJACEKBDKACFKLEHJBMABCDEFGINO $.

    $( Composition of two class substitutions.  (Contributed by NM,
       27-Nov-2005.)  (Revised by Mario Carneiro, 11-Nov-2016.) $)
    csbco3g $p |- ( A e. V ->
                 [_ A / x ]_ [_ B / y ]_ D = [_ C / y ]_ D ) $=
      ( wcel csb csbnestg cvv wceq elex nfcvd csbiegf syl csbeq1d eqtrd ) CGIZA
      CBDFJJBACDJZFJBEFJABCDFGKTBUAEFTCLIZUAEMCGNACDELUBAEOHPQRS $.
  $}

  ${
    $d x A $.  $d x C $.  $d x z D $.  $d x y $.
    csbco3g.1 $e |- ( x = A -> B = D ) $.
    $( Composition of two class substitutions.  Obsolete as of 11-Nov-2016.
       (Contributed by NM, 27-Nov-2005.)  (New usage is discouraged.) $)
    csbco3gOLD $p |- ( ( A e. V /\ A. x B e. W ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ D / y ]_ C ) $=
      ( wcel csb wceq wal csbco3g adantr ) CGJACBDEKKBFEKLDHJAMABCDFEGINO $.
  $}

  ${
    $d x B $.  $d x D $.
    $( Special case related to ~ rspsbc .  (Contributed by NM, 10-Dec-2005.)
       (Proof shortened by Eric Schmidt, 17-Jan-2007.) $)
    rspcsbela $p |- ( ( A e. B /\ A. x e. B C e. D ) -> [_ A / x ]_ C e. D ) $=
      ( wcel wral csb wsbc rspsbc sbcel1g sylibd imp ) BCFZDEFZACGZABDHEFZNPOAB
      IQOABCJABDECKLM $.
  $}

  ${
    $d w x y z $.  $d w y z A $.
    $( Two ways of expressing " ` x ` is (effectively) not free in ` A ` ."
       (Contributed by Mario Carneiro, 14-Oct-2016.) $)
    sbnfc2 $p |- ( F/_ x A <-> A. y A. z [_ y / x ]_ A = [_ z / x ]_ A ) $=
      ( vw cv csb wceq wal cvv wcel vex csbtt mpan wsb wsbc sbsbc sbcel2g ax-mp
      wb eqtr4d alrimivv nfv wnf eleq2 bitri 3bitr4g 2alimi sbnf2 sylibr impbii
      wnfc nfcd ) ADULZABFZDGZACFZDGZHZCIBIZUNUSBCUNUPDURUOJKZUNUPDHBLZAUODJMNU
      QJKZUNURDHCLZAUQDJMNUAUBUTAEDUTEUCUTEFZDKZABOZVFACOZTZCIBIVFAUDUSVIBCUSVE
      UPKZVEURKZVGVHUPURVEUEVGVFAUOPZVJVFABQVAVLVJTVBAUOVEDJRSUFVHVFAUQPZVKVFAC
      QVCVMVKTVDAUQVEDJRSUFUGUHVFABCUIUJUMUK $.
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.  $d V z $.
    $( Move substitution into a class abstraction.  (Contributed by NM,
       13-Dec-2005.)  (Proof shortened by Andrew Salmon, 9-Jul-2011.) $)
    csbabg $p |- ( A e. V ->
                 [_ A / x ]_ { y | ph } = { y | [. A / x ]. ph } ) $=
      ( vz wcel cab csb wsbc cv sbccom wsb df-clab sbsbc sbcbii 3bitr4i sbcel2g
      bitri syl5rbb eqrdv ) DEGZFBDACHZIZABDJZCHZFKZUFGZUGUCGZBDJZUBUGUDGUECUGJ
      ZACUGJZBDJUHUJACBUGDLUHUECFMUKUEFCNUECFOSUIULBDUIACFMULAFCNACFOSPQBDUGUCE
      RTUA $.
  $}

  ${
    $d x v z $.  $d y v z $.  $d A w v z $.  $d B w v z $.  $d ph v z $.
    $d ps v z $.
    cbvralcsf.1 $e |- F/_ y A $.
    cbvralcsf.2 $e |- F/_ x B $.
    cbvralcsf.3 $e |- F/ y ph $.
    cbvralcsf.4 $e |- F/ x ps $.
    cbvralcsf.5 $e |- ( x = y -> A = B ) $.
    cbvralcsf.6 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A more general version of ~ cbvralf that doesn't require ` A ` and ` B `
       to be distinct from ` x ` or ` y ` .  Changes bound variables using
       implicit substitution.  (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvralcsf $p |- ( A. x e. A ph <-> A. y e. B ps ) $=
      ( vz vv cv wcel wi wal wsbc nfcri wral csb nfv nfcsb1v nfsbc1v id csbeq1a
      nfim wceq eleq12d sbceq1a imbi12d cbval nfcsb nfsbc csbeq1 cab df-csb wsb
      nfcv eleq2d sbsbc bitr3i abbi2i eqtr4i syl6eq dfsbcq syl6bb bitri 3bitr4i
      weq sbie df-ral ) COZEPZAQZCRZDOZFPZBQZDRZACEUABDFUAVQMOZCWBEUBZPZACWBSZQ
      ZMRWAVPWFCMVPMUCWDWECCMWCCWBEUDTACWBUEUHVNWBUIZVOWDAWEWGVNWBEWCWGUFCWBEUG
      UJACWBUKULUMWFVTMDWDWEDDMWCDCWBEDWBUTZGUNTADCWBWHIUOUHVTMUCWBVRUIZWDVSWEB
      WIWBVRWCFWIUFWIWCCVREUBZFCWBVREUPWJNOZEPZCVRSZNUQFCNVREURWMNFWKFPZWLCDUSW
      MWLWNCDCNFHTCDVKEFWKKVAVLWLCDVBVCVDVEVFUJWIWEACVRSZBACWBVRVGWOACDUSBACDVB
      ABCDJLVLVCVHULUMVIACEVMBDFVMVJ $.

    $( A more general version of ~ cbvrexf that has no distinct variable
       restrictions.  Changes bound variables using implicit substitution.
       (Contributed by Andrew Salmon, 13-Jul-2011.)  (Proof shortened by Mario
       Carneiro, 7-Dec-2014.) $)
    cbvrexcsf $p |- ( E. x e. A ph <-> E. y e. B ps ) $=
      ( wn wral wrex nfn cv wceq notbid dfrex2 cbvralcsf notbii 3bitr4i ) AMZCE
      NZMBMZDFNZMACEOBDFOUEUGUDUFCDEFGHADIPBCJPKCQDQRABLSUAUBACETBDFTUC $.

    $( A more general version of ~ cbvreuv that has no distinct variable
       rextrictions.  Changes bound variables using implicit substitution.
       (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvreucsf $p |- ( E! x e. A ph <-> E! y e. B ps ) $=
      ( vz vv cv wcel wa weu wsb nfcri wreu csb nfcsb1v nfs1v nfan wceq csbeq1a
      nfv eleq12d sbequ12 anbi12d cbveu nfcv nfcsb nfsb csbeq1 wsbc sbsbc abbii
      cab eleq2d bicomi abbi2i df-csb 3eqtr4ri syl6eq sbequ syl6bb bitri df-reu
      id sbie 3bitr4i ) COZEPZAQZCRZDOZFPZBQZDRZACEUABDFUAVQMOZCWBEUBZPZACMSZQZ
      MRWAVPWFCMVPMUHWDWECCMWCCWBEUCTACMUDUEVNWBUFZVOWDAWEWGVNWBEWCWGVKCWBEUGUI
      ACMUJUKULWFVTMDWDWEDDMWCDCWBEDWBUMGUNTACMDIUOUEVTMUHWBVRUFZWDVSWEBWHWBVRW
      CFWHVKWHWCCVREUBZFCWBVREUPNOZEPZCDSZNUTWKCVRUQZNUTFWIWLWMNWKCDURUSWLNFWLW
      JFPZWKWNCDCNFHTVNVRUFEFWJKVAVLVBVCCNVREVDVEVFUIWHWEACDSBAMDCVGABCDJLVLVHU
      KULVIACEVJBDFVJVM $.

    $( A more general version of ~ cbvrab with no distinct variable
       restrictions.  (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvrabcsf $p |- { x e. A | ph } = { y e. B | ps } $=
      ( vz vv cv wcel wa cab wsb nfcri crab csb nfcsb1v nfs1v nfan wceq csbeq1a
      nfv id eleq12d sbequ12 anbi12d cbvab nfcv nfcsb nfsb csbeq1 df-csb eleq2d
      wsbc weq sbie sbsbc bitr3i abbi2i eqtr4i syl6eq sbequ syl6bb eqtri df-rab
      3eqtr4i ) COZEPZAQZCRZDOZFPZBQZDRZACEUABDFUAVPMOZCWAEUBZPZACMSZQZMRVTVOWE
      CMVOMUHWCWDCCMWBCWAEUCTACMUDUEVMWAUFZVNWCAWDWFVMWAEWBWFUICWAEUGUJACMUKULU
      MWEVSMDWCWDDDMWBDCWAEDWAUNGUOTACMDIUPUEVSMUHWAVQUFZWCVRWDBWGWAVQWBFWGUIWG
      WBCVQEUBZFCWAVQEUQWHNOZEPZCVQUTZNRFCNVQEURWKNFWIFPZWJCDSWKWJWLCDCNFHTCDVA
      EFWIKUSVBWJCDVCVDVEVFVGUJWGWDACDSBAMDCVHABCDJLVBVIULUMVJACEVKBDFVKVL $.
  $}

  ${
    $d A y $.  $d ps y $.  $d B x $.  $d ch x $.
    cbvralv2.1 $e |- ( x = y -> ( ps <-> ch ) ) $.
    cbvralv2.2 $e |- ( x = y -> A = B ) $.
    $( Rule used to change the bound variable in a restricted universal
       quantifier with implicit substitution which also changes the quantifier
       domain.  (Contributed by David Moews, 1-May-2017.) $)
    cbvralv2 $p |- ( A. x e. A ps <-> A. y e. B ch ) $=
      ( nfcv nfv cbvralcsf ) ABCDEFDEICFIADJBCJHGK $.

    $( Rule used to change the bound variable in a restricted existential
       quantifier with implicit substitution which also changes the quantifier
       domain.  (Contributed by David Moews, 1-May-2017.) $)
    cbvrexv2 $p |- ( E. x e. A ps <-> E. y e. B ch ) $=
      ( nfcv nfv cbvrexcsf ) ABCDEFDEICFIADJBCJHGK $.
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Define boolean set operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols. $)
  $c -i^i $. $( Lined cap (anti-intersection) $)
  $c ~ $. $( Tilde (complement) $)
  $c \ $. $( Backslash (difference) $)
  $c u. $. $( Cup (union) $)
  $c i^i $. $( Cap (intersection) $)
  $c (+) $. $( Circled plus (symmetric difference) $)


  $( Extend class notation to include anti-intersection (read:  "the
     anti-intersection of ` A ` and ` B ` "). $)
  cnin $a class ( A -i^i B ) $.

  $( Extend class notation to include complement.  (read:  "the complement of
     ` A ` " ). $)
  ccompl $a class ~ A $.

  $( Extend class notation to include class difference (read:  " ` A ` minus
     ` B ` "). $)
  cdif $a class ( A \ B ) $.

  $( Extend class notation to include union of two classes (read:  " ` A `
     union ` B ` "). $)
  cun $a class ( A u. B ) $.

  $( Extend class notation to include the intersection of two classes
     (read:  " ` A ` intersect ` B ` "). $)
  cin $a class ( A i^i B ) $.

  $( Extend class notation to include the symmetric difference of two
     classes. $)
  csymdif $a class ( A (+) B ) $.

  ${
    $d A x y $.  $d B x y $.
    $( Soundness theorem for ~ df-nin .  (Contributed by SF, 10-Jan-2015.) $)
    ninjust $p |- { x | ( x e. A -/\ x e. B ) } =
             { y | ( y e. A -/\ y e. B ) } $=
      ( cv wcel wnan weq eleq1 nanbi12d cbvabv ) AEZCFZLDFZGBEZCFZODFZGABABHMP
      NQLOCILODIJK $.
      $( [10-Jan-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.

    $( Define the anti-intersection of two classes.  This operation is used
       implicitly after Axiom P1 of [Hailperin] p. 6, though there does not
       seem to be any notation for it in the literature. $)
    df-nin $a |- ( A -i^i B ) = { x | ( x e. A -/\ x e. B ) } $.
  $}

  $( Define the complement of a class.  Compare ~ nic-dfneg . $)
  df-compl $a |- ~ A = ( A -i^i A ) $.

  $( Define the intersection of two classes.  See ~ elin for membership. $)
  df-in $a |- ( A i^i B ) = ~ ( A -i^i B ) $.

  $( Define the union of two classes.  See ~ elun for membership. $)
  df-un $a |- ( A u. B ) = ( ~ A -i^i ~ B ) $.

  $( Define the difference of two classes.  See ~ eldif for membership. $)
  df-dif $a |- ( A \ B ) = ( A i^i ~ B ) $.

  $( Define the symmetric difference of two classes.  Definition IX.9.10,
     [Rosser] p. 238. $)
  df-symdif $a |- ( A (+) B ) = ( ( A \ B ) u. ( B \ A ) ) $.

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Membership in anti-intersection.  (Contributed by SF, 10-Jan-2015.) $)
    elning $p |- ( A e. V ->
            ( A e. ( B -i^i C ) <-> ( A e. B -/\ A e. C ) ) ) $=
      ( vx cv wcel wnan cnin wceq eleq1 nanbi12d df-nin elab2g ) EFZBGZOCGZHAB
      GZACGZHEABCIDOAJPRQSOABKOACKLEBCMN $.
      $( [10-Jan-2015] $)
  $}

  $( Membership in class complement.  (Contributed by SF, 10-Jan-2015.) $)
  elcomplg $p |- ( A e. V -> ( A e. ~ B <-> -. A e. B ) ) $=
    ( ccompl wcel cnin wn df-compl eleq2i wnan elning wa df-nan xchbinx syl6bb
    anidm syl5bb ) ABDZEABBFZEZACEZABEZGZRSABHIUATUBUBJZUCABBCKUDUBUBLUBUBUBMUB
    PNOQ $.
    $( [10-Jan-2015] $)

  $( Membership in intersection.  (Contributed by SF, 10-Jan-2015.) $)
  elin $p |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) $=
    ( cin wcel cvv wa elex adantr cnin ccompl wnan elcomplg elning notbid bitrd
    wn df-in eleq2i df-nan con2bii 3bitr4g pm5.21nii ) ABCDZEZAFEZABEZACEZGZAU
    DHUGUFUHABHIUFABCJZKZEZUGUHLZQZUEUIUFULAUJEZQUNAUJFMUFUOUMABCFNOPUDUKABCRSU
    MUIUGUHTUAUBUC $.
    $( [10-Jan-2015] $)

  $( Membership in union.  (Contributed by SF, 10-Jan-2015.) $)
  elun $p |- ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) $=
    ( cun wcel wo elex jaoi ccompl cnin wn wnan elning elcomplg nanbi12d bitrd
    cvv df-un eleq2i wa oran df-nan bitr4i 3bitr4g pm5.21nii ) ABCDZEZAQEZABEZ
    ACEZFZAUFGUIUHUJABGACGHUHABIZCIZJZEZUIKZUJKZLZUGUKUHUOAULEZAUMEZLURAULUMQMU
    HUSUPUTUQABQNACQNOPUFUNABCRSUKUPUQTKURUIUJUAUPUQUBUCUDUE $.
    $( [10-Jan-2015] $)

  $( Membership in difference.  (Contributed by SF, 10-Jan-2015.) $)
  eldif $p |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) $=
    ( cdif wcel ccompl cin wa wn df-dif eleq2i elin elcomplg pm5.32i 3bitri ) A
    BCDZEABCFZGZEABEZAQEZHSACEIZHPRABCJKABQLSTUAACBMNO $.
    $( [10-Jan-2015] $)

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of class difference.  (Contributed by NM,
       25-Mar-2004.) $)
    dfdif2 $p |- ( A \ B ) = { x e. A | -. x e. B } $=
      ( cdif cv wcel wn wa cab crab eldif abbi2i df-rab eqtr4i ) BCDZAEZBFPCFGZ
      HZAIQABJRAOPBCKLQABMN $.
  $}

  $( Membership in symmetric difference.  (Contributed by SF, 10-Jan-2015.) $)
  elsymdif $p |- ( A e. ( B (+) C ) <-> -. ( A e. B <-> A e. C ) ) $=
    ( cdif cun wcel wn wa wo csymdif wb elun eldif orbi12i df-symdif eleq2i xor
    bitri 3bitr4i ) ABCDZCBDZEZFZABFZACFZGHZUEUDGHZIZABCJZFUDUEKGUCATFZAUAFZIUH
    ATUALUJUFUKUGABCMACBMNRUIUBABCOPUDUEQS $.
    $( [10-Jan-2015] $)

  ${
    elbool.1 $e |- A e. _V $.
    $( Membership in anti-intersection.  (Contributed by SF, 10-Jan-2015.) $)
    elnin $p |- ( A e. ( B -i^i C ) <-> ( A e. B -/\ A e. C ) ) $=
      ( cvv wcel cnin wnan wb elning ax-mp ) AEFABCGFABFACFHIDABCEJK $.
      $( [10-Jan-2015] $)

    $( Membership in complement.  (Contributed by SF, 10-Jan-2015.) $)
    elcompl $p |- ( A e. ~ B <-> -. A e. B ) $=
      ( cvv wcel ccompl wn wb elcomplg ax-mp ) ADEABFEABEGHCABDIJ $.
      $( [10-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Anti-intersection commutes.  (Contributed by SF, 10-Jan-2015.) $)
    nincom $p |- ( A -i^i B ) = ( B -i^i A ) $=
      ( vx cnin cv wcel wnan nancom vex elnin 3bitr4i eqriv ) CABDZBADZCEZAFZO
      BFZGQPGOMFONFPQHOABCIZJOBARJKL $.
      $( [10-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( Double complement law.  (Contributed by SF, 10-Jan-2015.) $)
    dblcompl $p |- ~ ~ A = A $=
      ( vx ccompl cv wcel wn vex elcompl con2bii bitr4i eqriv ) BACZCZABDZMENLE
      ZFNAEZNLBGZHOPNAQHIJK $.
      $( [10-Jan-2015] $)
  $}


  ${
    $d x y $.  $d A y $.  $d B y $.
    nfnin.1 $e |- F/_ x A $.
    nfnin.2 $e |- F/_ x B $.
    $( Hypothesis builder for anti-intersection.  (Contributed by SF,
       2-Jan-2018.) $)
    nfnin $p |- F/_ x ( A -i^i B ) $=
      ( vy cnin cv wcel wnan cab df-nin nfel2 nfnan nfab nfcxfr ) ABCGFHZBIZQCI
      ZJZFKFBCLTAFRSAAQBDMAQCEMNOP $.
  $}

  ${
    nfbool.1 $e |- F/_ x A $.
    $( Hypothesis builder for complement.  (Contributed by SF, 2-Jan-2018.) $)
    nfcompl $p |- F/_ x ~ A $=
      ( ccompl cnin df-compl nfnin nfcxfr ) ABDBBEBFABBCCGH $.

    nfbool.2 $e |- F/_ x B $.
    $( Hypothesis builder for intersection.  (Contributed by SF,
       2-Jan-2018.) $)
    nfin $p |- F/_ x ( A i^i B ) $=
      ( cin cnin ccompl df-in nfnin nfcompl nfcxfr ) ABCFBCGZHBCIAMABCDEJKL $.

    $( Hypothesis builder for union.  (Contributed by SF, 2-Jan-2018.) $)
    nfun $p |- F/_ x ( A u. B ) $=
      ( cun ccompl cnin df-un nfcompl nfnin nfcxfr ) ABCFBGZCGZHBCIAMNABDJACEJK
      L $.

    $( Hypothesis builder for difference.  (Contributed by SF, 2-Jan-2018.) $)
    nfdif $p |- F/_ x ( A \ B ) $=
      ( cdif ccompl cin df-dif nfcompl nfin nfcxfr ) ABCFBCGZHBCIABMDACEJKL $.

    $( Hypothesis builder for symmetric difference.  (Contributed by SF,
       2-Jan-2018.) $)
    nfsymdif $p |- F/_ x ( A (+) B ) $=
      ( csymdif cdif cun df-symdif nfdif nfun nfcxfr ) ABCFBCGZCBGZHBCIAMNABCDE
      JACBEDJKL $.
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Equality law for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq1 $p |- ( A = B -> ( A -i^i C ) = ( B -i^i C ) ) $=
      ( vx wceq cv wcel wnan cab cnin eleq2 nanbi1d abbidv df-nin 3eqtr4g ) AB
      EZDFZAGZQCGZHZDIQBGZSHZDIACJBCJPTUBDPRUASABQKLMDACNDBCNO $.
      $( [11-Jan-2015] $)
  $}

  $( Equality law for anti-intersection.  (Contributed by SF, 11-Jan-2015.) $)
  nineq2 $p |- ( A = B -> ( C -i^i A ) = ( C -i^i B ) ) $=
    ( wceq cnin nineq1 nincom 3eqtr3g ) ABDACEBCECAECBEABCFACGBCGH $.
    $( [11-Jan-2015] $)

  $( Equality law for anti-intersection.  (Contributed by SF, 11-Jan-2015.) $)
  nineq12 $p |- ( ( A = B /\ C = D ) -> ( A -i^i C ) = ( B -i^i D ) ) $=
    ( wceq cnin nineq1 nineq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [11-Jan-2015] $)

  ${
    nineqi.1 $e |- A = B $.
    $( Equality inference for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq1i $p |- ( A -i^i C ) = ( B -i^i C ) $=
      ( wceq cnin nineq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [11-Jan-2015] $)

    $( Equality inference for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq2i $p |- ( C -i^i A ) = ( C -i^i B ) $=
      ( wceq cnin nineq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [11-Jan-2015] $)

    nineq12i.2 $e |- C = D $.
    $( Equality inference for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq12i $p |- ( A -i^i C ) = ( B -i^i D ) $=
      ( wceq cnin nineq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [11-Jan-2015] $)
  $}

  ${
    nineqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq1d $p |- ( ph -> ( A -i^i C ) = ( B -i^i C ) ) $=
      ( wceq cnin nineq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [11-Jan-2015] $)

    $( Equality deduction for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq2d $p |- ( ph -> ( C -i^i A ) = ( C -i^i B ) ) $=
      ( wceq cnin nineq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [11-Jan-2015] $)

    nineq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality inference for anti-intersection.  (Contributed by SF,
       11-Jan-2015.) $)
    nineq12d $p |- ( ph -> ( A -i^i C ) = ( B -i^i D ) ) $=
      ( wceq cnin nineq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [11-Jan-2015] $)
  $}

  $( Equality law for complement.  (Contributed by SF, 11-Jan-2015.) $)
  compleq $p |- ( A = B -> ~ A = ~ B ) $=
    ( wceq cnin ccompl nineq12 anidms df-compl 3eqtr4g ) ABCZAADZBBDZAEBEJKLCAB
    ABFGAHBHI $.
    $( [11-Jan-2015] $)

  ${
    compleqi.1 $e |- A = B $.
    $( Equality inference for complement.  (Contributed by SF, 11-Jan-2015.) $)
    compleqi $p |- ~ A = ~ B $=
      ( wceq ccompl compleq ax-mp ) ABDAEBEDCABFG $.
      $( [11-Jan-2015] $)
  $}

  ${
    compleqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for complement.  (Contributed by SF, 11-Jan-2015.) $)
    compleqd $p |- ( ph -> ~ A = ~ B ) $=
      ( wceq ccompl compleq syl ) ABCEBFCFEDBCGH $.
      $( [11-Jan-2015] $)
  $}


  $( Equality theorem for class difference.  (Contributed by NM, 10-Feb-1997.)
     (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  difeq1 $p |- ( A = B -> ( A \ C ) = ( B \ C ) ) $=
    ( wceq ccompl cnin cdif nineq1 compleqd cin df-dif df-in eqtri 3eqtr4g ) AB
    DZACEZFZEZBPFZEZACGZBCGZOQSABPHIUAAPJRACKAPLMUBBPJTBCKBPLMN $.

  $( Equality theorem for class difference.  (Contributed by NM, 10-Feb-1997.)
     (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  difeq2 $p |- ( A = B -> ( C \ A ) = ( C \ B ) ) $=
    ( wceq ccompl cnin cdif compleq nineq2d compleqd df-dif df-in eqtri 3eqtr4g
    cin ) ABDZCAEZFZEZCBEZFZEZCAGZCBGZPRUAPQTCABHIJUCCQOSCAKCQLMUDCTOUBCBKCTLMN
    $.


  $( Equality law for intersection.  (Contributed by ?who?, 11-Jan-2015.) $)
  symdifeq1 $p |- ( A = B -> ( A (+) C ) = ( B (+) C ) ) $=
    ( wceq cdif ccompl cnin difeq1 compleqd difeq2 nineq12d cun df-symdif df-un
    csymdif eqtri 3eqtr4g ) ABDZACEZFZCAEZFZGZBCEZFZCBEZFZGZACOZBCOZRTUEUBUGRSU
    DABCHIRUAUFABCJIKUISUALUCACMSUANPUJUDUFLUHBCMUDUFNPQ $.
    $( [11-Jan-2015] $)

  $( Equality law for intersection.  (Contributed by ?who?, 11-Jan-2015.) $)
  symdifeq2 $p |- ( A = B -> ( C (+) A ) = ( C (+) B ) ) $=
    ( wceq cdif ccompl cnin difeq2 compleqd difeq1 nineq12d cun df-symdif df-un
    csymdif eqtri 3eqtr4g ) ABDZCAEZFZACEZFZGZCBEZFZBCEZFZGZCAOZCBOZRTUEUBUGRSU
    DABCHIRUAUFABCJIKUISUALUCCAMSUANPUJUDUFLUHCBMUDUFNPQ $.
    $( [11-Jan-2015] $)

  $( Equality law for intersection.  (Contributed by ?who?, 11-Jan-2015.) $)
  symdifeq12 $p |- ( ( A = B /\ C = D ) -> ( A (+) C ) = ( B (+) D ) ) $=
    ( wceq csymdif symdifeq1 symdifeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [11-Jan-2015] $)

  ${
    symdifeqi.1 $e |- A = B $.
    $( Equality inference for symmetric difference.  (Contributed by SF,
       11-Jan-2015.) $)
    symdifeq1i $p |- ( A (+) C ) = ( B (+) C ) $=
      ( wceq csymdif symdifeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [11-Jan-2015] $)

    $( Equality inference for symmetric difference.  (Contributed by SF,
       11-Jan-2015.) $)
    symdifeq2i $p |- ( C (+) A ) = ( C (+) B ) $=
      ( wceq csymdif symdifeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [11-Jan-2015] $)

    symdifeq12i.2 $e |- C = D $.
    $( Equality inference for symmetric difference.  (Contributed by SF,
       11-Jan-2015.) $)
    symdifeq12i $p |- ( A (+) C ) = ( B (+) D ) $=
      ( wceq csymdif symdifeq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [11-Jan-2015] $)
  $}

  ${
    symdifeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for symmetric difference.  (Contributed by SF,
       11-Jan-2015.) $)
    symdifeq1d $p |- ( ph -> ( A (+) C ) = ( B (+) C ) ) $=
      ( wceq csymdif symdifeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [11-Jan-2015] $)

    $( Equality deduction for symmetric difference.  (Contributed by SF,
       11-Jan-2015.) $)
    symdifeq2d $p |- ( ph -> ( C (+) A ) = ( C (+) B ) ) $=
      ( wceq csymdif symdifeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [11-Jan-2015] $)

    symdifeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality inference for symmetric difference.  (Contributed by SF,
       11-Jan-2015.) $)
    symdifeq12d $p |- ( ph -> ( A (+) C ) = ( B (+) D ) ) $=
      ( wceq csymdif symdifeq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [11-Jan-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Subclasses and subsets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c C_ $. $( Subclass or subset symbol $)
  $c C. $. $( Proper subclass or subset symbol $)

  $( Extend wff notation to include the subclass relation.  This is
     read " ` A ` is a subclass of ` B ` " or " ` B ` includes ` A ` ."  When
     ` A ` exists as a set, it is also read " ` A ` is a subset of ` B ` ." $)
  wss $a wff A C_ B $.

  $( Extend wff notation with proper subclass relation. $)
  wpss $a wff A C. B $.


  $( Define the subclass relationship.  Exercise 9 of [TakeutiZaring] p. 18.
     For example, ` { 1 , 2 } C_ { 1 , 2 , 3 } ` ( ~ ex-ss ).  Note that
     ` A C_ A ` (proved in ~ ssid ).  Contrast this relationship with the
     relationship ` A C. B ` (as will be defined in ~ df-pss ).  For a more
     traditional definition, but requiring a dummy variable, see ~ dfss2 .
     Other possible definitions are given by ~ dfss3 , ~ dfss4 , ~ sspss ,
     ~ ssequn1 , ~ ssequn2 , ~ sseqin2 , and ~ ssdif0 .  (Contributed by NM,
     27-Apr-1994.) $)
  df-ss $a |- ( A C_ B <-> ( A i^i B ) = A ) $.

  $( Variant of subclass definition ~ df-ss .  (Contributed by NM,
     3-Sep-2004.) $)
  dfss $p |- ( A C_ B <-> A = ( A i^i B ) ) $=
    ( wss cin wceq df-ss eqcom bitri ) ABCABDZAEAIEABFIAGH $.

  $( Define proper subclass relationship between two classes.  Definition 5.9
     of [TakeutiZaring] p. 17.  For example, ` { 1 , 2 } C. { 1 , 2 , 3 } `
     ( ~ ex-pss ).  Note that ` -. A C. A ` (proved in ~ pssirr ).  Contrast
     this relationship with the relationship ` A C_ B ` (as defined in
     ~ df-ss ).  Other possible definitions are given by ~ dfpss2 and
     ~ dfpss3 .  (Contributed by NM, 7-Feb-1996.) $)
  df-pss $a |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) $.

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of the subclass relationship between two classes.
       Definition 5.9 of [TakeutiZaring] p. 17.  (Contributed by NM,
       8-Jan-2002.) $)
    dfss2 $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( wss cv wcel wa wb wal wi cin wceq dfss dfcleq bibi2i albii bitri pm4.71
      elin bitr4i ) BCDZAEZBFZUCUBCFZGZHZAIZUCUDJZAIUABBCKZLZUGBCMUJUCUBUIFZHZA
      IUGABUINULUFAUKUEUCUBBCSOPQQUHUFAUCUDRPT $.

    $( Alternate definition of subclass relationship.  (Contributed by NM,
       14-Oct-1999.) $)
    dfss3 $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2 df-ral bitr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
  $}

  ${
    $d z y A $.  $d z y B $.  $d x z $.
    dfss2f.1 $e |- F/_ x A $.
    dfss2f.2 $e |- F/_ x B $.
    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions.  (Contributed by NM,
       3-Jul-1994.)  (Revised by Andrew Salmon, 27-Aug-2011.) $)
    dfss2f $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( vz wss cv wcel wal dfss2 nfcri nfim nfv wceq eleq1 imbi12d cbval bitri
      wi ) BCGFHZBIZUACIZTZFJAHZBIZUECIZTZAJFBCKUDUHFAUBUCAAFBDLAFCELMUHFNUAUEO
      UBUFUCUGUAUEBPUAUECPQRS $.

    $d y A $.  $d y B $.
    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions.  (Contributed by NM,
       20-Mar-2004.) $)
    dfss3f $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2f df-ral bitr4i ) BCFAGZBHOCHZIAJPABKABCDE
      LPABMN $.

    $( If ` x ` is not free in ` A ` and ` B ` , it is not free in
       ` A C_ B ` .  (Contributed by NM, 27-Dec-1996.) $)
    nfss $p |- F/ x A C_ B $=
      ( wss cv wcel wral dfss3f nfra1 nfxfr ) BCFAGCHZABIAABCDEJMABKL $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership relationships follow from a subclass relationship.
       (Contributed by NM, 5-Aug-1993.) $)
    ssel $p |- ( A C_ B -> ( C e. A -> C e. B ) ) $=
      ( vx wss cv wceq wa wex wi wal dfss2 biimpi 19.21bi anim2d eximdv df-clel
      wcel 3imtr4g ) ABEZDFZCGZUAARZHZDIUBUABRZHZDICARCBRTUDUFDTUCUEUBTUCUEJZDT
      UGDKDABLMNOPDCAQDCBQS $.
  $}

  $( Membership relationships follow from a subclass relationship.
     (Contributed by NM, 7-Jun-2004.) $)
  ssel2 $p |- ( ( A C_ B /\ C e. A ) -> C e. B ) $=
    ( wss wcel ssel imp ) ABDCAECBEABCFG $.

  ${
    sseli.1 $e |- A C_ B $.
    $( Membership inference from subclass relationship.  (Contributed by NM,
       5-Aug-1993.) $)
    sseli $p |- ( C e. A -> C e. B ) $=
      ( wss wcel wi ssel ax-mp ) ABECAFCBFGDABCHI $.

    ${
      sselii.2 $e |- C e. A $.
      $( Membership inference from subclass relationship.  (Contributed by NM,
         31-May-1999.) $)
      sselii $p |- C e. B $=
        ( wcel sseli ax-mp ) CAFCBFEABCDGH $.
    $}

    ${
      sseldi.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship.  (Contributed by NM,
         25-Jun-2014.) $)
      sseldi $p |- ( ph -> C e. B ) $=
        ( wcel sseli syl ) ADBGDCGFBCDEHI $.
    $}
  $}

  ${
    sseld.1 $e |- ( ph -> A C_ B ) $.
    $( Membership deduction from subclass relationship.  (Contributed by NM,
       15-Nov-1995.) $)
    sseld $p |- ( ph -> ( C e. A -> C e. B ) ) $=
      ( wss wcel wi ssel syl ) ABCFDBGDCGHEBCDIJ $.

    $( Membership deduction from subclass relationship.  (Contributed by NM,
       26-Jun-2014.) $)
    sselda $p |- ( ( ph /\ C e. A ) -> C e. B ) $=
      ( wcel sseld imp ) ADBFDCFABCDEGH $.

    ${
      sseldd.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship.  (Contributed by NM,
         14-Dec-2004.) $)
      sseldd $p |- ( ph -> C e. B ) $=
        ( wcel sseld mpd ) ADBGDCGFABCDEHI $.
    $}
  $}

  ${
    ssneld.1 $e |- ( ph -> A C_ B ) $.
    $( If a class is not in another class, it is also not in a subclass of that
       class.  Deduction form.  (Contributed by David Moews, 1-May-2017.) $)
    ssneld $p |- ( ph -> ( -. C e. B -> -. C e. A ) ) $=
      ( wcel sseld con3d ) ADBFDCFABCDEGH $.

    ssneldd.2 $e |- ( ph -> -. C e. B ) $.
    $( If an element is not in a class, it is also not in a subclass of that
       class.  Deduction form.  (Contributed by David Moews, 1-May-2017.) $)
    ssneldd $p |- ( ph -> -. C e. A ) $=
      ( wcel wn ssneld mpd ) ADCGHDBGHFABCDEIJ $.
  $}

  ${
    $d x A $.  $d x B $.
    ssriv.1 $e |- ( x e. A -> x e. B ) $.
    $( Inference rule based on subclass definition.  (Contributed by NM,
       5-Aug-1993.) $)
    ssriv $p |- A C_ B $=
      ( wss cv wcel wi dfss2 mpgbir ) BCEAFZBGKCGHAABCIDJ $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrdv.1 $e |- ( ph -> ( x e. A -> x e. B ) ) $.
    $( Deduction rule based on subclass definition.  (Contributed by NM,
       15-Nov-1995.) $)
    ssrdv $p |- ( ph -> A C_ B ) $=
      ( cv wcel wi wal wss alrimiv dfss2 sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Transitivity of subclasses.  Exercise 5 of [TakeutiZaring] p. 17.
       (Contributed by NM, 5-Aug-1993.)  (Proof shortened by Andrew Salmon,
       14-Jun-2011.) $)
    sstr2 $p |- ( A C_ B -> ( B C_ C -> A C_ C ) ) $=
      ( vx wss cv wcel wi wal ssel imim1d alimdv dfss2 3imtr4g ) ABEZDFZBGZPCGZ
      HZDIPAGZRHZDIBCEACEOSUADOTQRABPJKLDBCMDACMN $.
  $}

  $( Transitivity of subclasses.  Theorem 6 of [Suppes] p. 23.  (Contributed by
     NM, 5-Sep-2003.) $)
  sstr $p |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) $=
    ( wss sstr2 imp ) ABDBCDACDABCEF $.

  ${
    sstri.1 $e |- A C_ B $.
    sstri.2 $e |- B C_ C $.
    $( Subclass transitivity inference.  (Contributed by NM, 5-May-2000.) $)
    sstri $p |- A C_ C $=
      ( wss sstr2 mp2 ) ABFBCFACFDEABCGH $.
  $}

  ${
    sstrd.1 $e |- ( ph -> A C_ B ) $.
    sstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction.  (Contributed by NM, 2-Jun-2004.) $)
    sstrd $p |- ( ph -> A C_ C ) $=
      ( wss sstr syl2anc ) ABCGCDGBDGEFBCDHI $.
  $}

  ${
    syl5ss.1 $e |- A C_ B $.
    syl5ss.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction.  (Contributed by NM, 6-Feb-2014.) $)
    syl5ss $p |- ( ph -> A C_ C ) $=
      ( wss a1i sstrd ) ABCDBCGAEHFI $.
  $}

  ${
    syl6ss.1 $e |- ( ph -> A C_ B ) $.
    syl6ss.2 $e |- B C_ C $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl6ss $p |- ( ph -> A C_ C ) $=
      ( wss a1i sstrd ) ABCDECDGAFHI $.
  $}

  ${
    sylan9ss.1 $e |- ( ph -> A C_ B ) $.
    sylan9ss.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction.  (Contributed by NM, 27-Sep-2004.)
       (Proof shortened by Andrew Salmon, 14-Jun-2011.) $)
    sylan9ss $p |- ( ( ph /\ ps ) -> A C_ C ) $=
      ( wss sstr syl2an ) ACDHDEHCEHBFGCDEIJ $.
  $}

  ${
    sylan9ssr.1 $e |- ( ph -> A C_ B ) $.
    sylan9ssr.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction.  (Contributed by NM, 27-Sep-2004.) $)
    sylan9ssr $p |- ( ( ps /\ ph ) -> A C_ C ) $=
      ( wss sylan9ss ancoms ) ABCEHABCDEFGIJ $.
  $}

  ${
    $d x A $.  $d x B $.
    $( The subclass relationship is antisymmetric.  Compare Theorem 4 of
       [Suppes] p. 22.  (Contributed by NM, 5-Aug-1993.) $)
    eqss $p |- ( A = B <-> ( A C_ B /\ B C_ A ) ) $=
      ( vx cv wcel wb wal wi wa wceq wss albiim dfcleq dfss2 anbi12i 3bitr4i )
      CDZAEZQBEZFCGRSHCGZSRHCGZIABJABKZBAKZIRSCLCABMUBTUCUACABNCBANOP $.
  $}

  ${
    eqssi.1 $e |- A C_ B $.
    eqssi.2 $e |- B C_ A $.
    $( Infer equality from two subclass relationships.  Compare Theorem 4 of
       [Suppes] p. 22.  (Contributed by NM, 9-Sep-1993.) $)
    eqssi $p |- A = B $=
      ( wceq wss eqss mpbir2an ) ABEABFBAFCDABGH $.
  $}

  ${
    eqssd.1 $e |- ( ph -> A C_ B ) $.
    eqssd.2 $e |- ( ph -> B C_ A ) $.
    $( Equality deduction from two subclass relationships.  Compare Theorem 4
       of [Suppes] p. 22.  (Contributed by NM, 27-Jun-2004.) $)
    eqssd $p |- ( ph -> A = B ) $=
      ( wss wceq eqss sylanbrc ) ABCFCBFBCGDEBCHI $.
  $}

  ${
    $d A x $.
    $( Any class is a subclass of itself.  Exercise 10 of [TakeutiZaring]
       p. 18.  (Contributed by NM, 5-Aug-1993.)  (Proof shortened by Andrew
       Salmon, 14-Jun-2011.) $)
    ssid $p |- A C_ A $=
      ( vx cv wcel id ssriv ) BAABCADEF $.
  $}

  ${
    $d A x $.
    $( Any class is a subclass of the universal class.  (Contributed by NM,
       31-Oct-1995.) $)
    ssv $p |- A C_ _V $=
      ( vx cvv cv elex ssriv ) BACBDAEF $.
  $}

  $( Equality theorem for subclasses.  (Contributed by NM, 5-Aug-1993.)  (Proof
     shortened by Andrew Salmon, 21-Jun-2011.) $)
  sseq1 $p |- ( A = B -> ( A C_ C <-> B C_ C ) ) $=
    ( wceq wss wa wb eqss wi sstr2 adantl adantr impbid sylbi ) ABDABEZBAEZFZAC
    EZBCEZGABHQRSPRSIOBACJKOSRIPABCJLMN $.

  $( Equality theorem for the subclass relationship.  (Contributed by NM,
     25-Jun-1998.) $)
  sseq2 $p |- ( A = B -> ( C C_ A <-> C C_ B ) ) $=
    ( wss wa wi wceq wb sstr2 com12 anim12i eqss dfbi2 3imtr4i ) ABDZBADZECADZC
    BDZFZRQFZEABGQRHOSPTQORCABIJRPQCBAIJKABLQRMN $.

  $( Equality theorem for the subclass relationship.  (Contributed by NM,
     31-May-1999.) $)
  sseq12 $p |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) $=
    ( wceq wss sseq1 sseq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.

  ${
    sseq1i.1 $e |- A = B $.
    $( An equality inference for the subclass relationship.  (Contributed by
       NM, 18-Aug-1993.) $)
    sseq1i $p |- ( A C_ C <-> B C_ C ) $=
      ( wceq wss wb sseq1 ax-mp ) ABEACFBCFGDABCHI $.

    $( An equality inference for the subclass relationship.  (Contributed by
       NM, 30-Aug-1993.) $)
    sseq2i $p |- ( C C_ A <-> C C_ B ) $=
      ( wceq wss wb sseq2 ax-mp ) ABECAFCBFGDABCHI $.

    ${
      sseq12i.2 $e |- C = D $.
      $( An equality inference for the subclass relationship.  (Contributed by
         NM, 31-May-1999.)  (Proof shortened by Eric Schmidt, 26-Jan-2007.) $)
      sseq12i $p |- ( A C_ C <-> B C_ D ) $=
        ( wceq wss wb sseq12 mp2an ) ABGCDGACHBDHIEFABCDJK $.
    $}
  $}

  ${
    sseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the subclass relationship.  (Contributed by
       NM, 14-Aug-1994.) $)
    sseq1d $p |- ( ph -> ( A C_ C <-> B C_ C ) ) $=
      ( wceq wss wb sseq1 syl ) ABCFBDGCDGHEBCDIJ $.

    $( An equality deduction for the subclass relationship.  (Contributed by
       NM, 14-Aug-1994.) $)
    sseq2d $p |- ( ph -> ( C C_ A <-> C C_ B ) ) $=
      ( wceq wss wb sseq2 syl ) ABCFDBGDCGHEBCDIJ $.

    ${
      sseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the subclass relationship.  (Contributed by
         NM, 31-May-1999.) $)
      sseq12d $p |- ( ph -> ( A C_ C <-> B C_ D ) ) $=
        ( wss sseq1d sseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
    $}
  $}

  ${
    eqsstr.1 $e |- A = B $.
    eqsstr.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 16-Jul-1995.) $)
    eqsstri $p |- A C_ C $=
      ( wss sseq1i mpbir ) ACFBCFEABCDGH $.
  $}

  ${
    eqsstr3.1 $e |- B = A $.
    eqsstr3.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 19-Oct-1999.) $)
    eqsstr3i $p |- A C_ C $=
      ( eqcomi eqsstri ) ABCBADFEG $.
  $}

  ${
    sseqtr.1 $e |- A C_ B $.
    sseqtr.2 $e |- B = C $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 28-Jul-1995.) $)
    sseqtri $p |- A C_ C $=
      ( wss sseq2i mpbi ) ABFACFDBCAEGH $.
  $}

  ${
    sseqtr4.1 $e |- A C_ B $.
    sseqtr4.2 $e |- C = B $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 4-Apr-1995.) $)
    sseqtr4i $p |- A C_ C $=
      ( eqcomi sseqtri ) ABCDCBEFG $.
  $}

  ${
    eqsstrd.1 $e |- ( ph -> A = B ) $.
    eqsstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 25-Apr-2004.) $)
    eqsstrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq1d mpbird ) ABDGCDGFABCDEHI $.
  $}

  ${
    eqsstr3d.1 $e |- ( ph -> B = A ) $.
    eqsstr3d.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 25-Apr-2004.) $)
    eqsstr3d $p |- ( ph -> A C_ C ) $=
      ( eqcomd eqsstrd ) ABCDACBEGFH $.
  $}

  ${
    sseqtrd.1 $e |- ( ph -> A C_ B ) $.
    sseqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 25-Apr-2004.) $)
    sseqtrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq2d mpbid ) ABCGBDGEACDBFHI $.
  $}

  ${
    sseqtr4d.1 $e |- ( ph -> A C_ B ) $.
    sseqtr4d.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equality into a subclass relationship.  (Contributed by
       NM, 25-Apr-2004.) $)
    sseqtr4d $p |- ( ph -> A C_ C ) $=
      ( eqcomd sseqtrd ) ABCDEADCFGH $.
  $}

  ${
    3sstr3.1 $e |- A C_ B $.
    3sstr3.2 $e |- A = C $.
    3sstr3.3 $e |- B = D $.
    $( Substitution of equality in both sides of a subclass relationship.
       (Contributed by NM, 13-Jan-1996.)  (Proof shortened by Eric Schmidt,
       26-Jan-2007.) $)
    3sstr3i $p |- C C_ D $=
      ( wss sseq12i mpbi ) ABHCDHEACBDFGIJ $.
  $}

  ${
    3sstr4.1 $e |- A C_ B $.
    3sstr4.2 $e |- C = A $.
    3sstr4.3 $e |- D = B $.
    $( Substitution of equality in both sides of a subclass relationship.
       (Contributed by NM, 13-Jan-1996.)  (Proof shortened by Eric Schmidt,
       26-Jan-2007.) $)
    3sstr4i $p |- C C_ D $=
      ( wss sseq12i mpbir ) CDHABHECADBFGIJ $.
  $}

  ${
    3sstr3g.1 $e |- ( ph -> A C_ B ) $.
    3sstr3g.2 $e |- A = C $.
    3sstr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a subclass relationship.
       (Contributed by NM, 1-Oct-2000.) $)
    3sstr3g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylib ) ABCIDEIFBDCEGHJK $.
  $}

  ${
    3sstr4g.1 $e |- ( ph -> A C_ B ) $.
    3sstr4g.2 $e |- C = A $.
    3sstr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a subclass relationship.
       (Contributed by NM, 16-Aug-1994.)  (Proof shortened by Eric Schmidt,
       26-Jan-2007.) $)
    3sstr4g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylibr ) ABCIDEIFDBECGHJK $.
  $}

  ${
    3sstr3d.1 $e |- ( ph -> A C_ B ) $.
    3sstr3d.2 $e |- ( ph -> A = C ) $.
    3sstr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a subclass relationship.
       (Contributed by NM, 1-Oct-2000.) $)
    3sstr3d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbid ) ABCIDEIFABDCEGHJK $.
  $}

  ${
    3sstr4d.1 $e |- ( ph -> A C_ B ) $.
    3sstr4d.2 $e |- ( ph -> C = A ) $.
    3sstr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a subclass relationship.
       (Contributed by NM, 30-Nov-1995.)  (Proof shortened by Eric Schmidt,
       26-Jan-2007.) $)
    3sstr4d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbird ) ADEIBCIFADBECGHJK $.
  $}

  ${
    syl5eqss.1 $e |- A = B $.
    syl5eqss.2 $e |- ( ph -> B C_ C ) $.
    $( B chained subclass and equality deduction.  (Contributed by NM,
       25-Apr-2004.) $)
    syl5eqss $p |- ( ph -> A C_ C ) $=
      ( wss sseq1i sylibr ) ACDGBDGFBCDEHI $.
  $}

  ${
    syl5eqssr.1 $e |- B = A $.
    syl5eqssr.2 $e |- ( ph -> B C_ C ) $.
    $( B chained subclass and equality deduction.  (Contributed by NM,
       25-Apr-2004.) $)
    syl5eqssr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl5eqss ) ABCDCBEGFH $.
  $}

  ${
    syl6sseq.1 $e |- ( ph -> A C_ B ) $.
    syl6sseq.2 $e |- B = C $.
    $( A chained subclass and equality deduction.  (Contributed by NM,
       25-Apr-2004.) $)
    syl6sseq $p |- ( ph -> A C_ C ) $=
      ( wss sseq2i sylib ) ABCGBDGECDBFHI $.
  $}

  ${
    syl6ssr.1 $e |- ( ph -> A C_ B ) $.
    syl6ssr.2 $e |- C = B $.
    $( A chained subclass and equality deduction.  (Contributed by NM,
       25-Apr-2004.) $)
    syl6sseqr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl6sseq ) ABCDEDCFGH $.
  $}

  ${
    syl5sseq.1 $e |- B C_ A $.
    syl5sseq.2 $e |- ( ph -> A = C ) $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl5sseq $p |- ( ph -> B C_ C ) $=
      ( wceq wss sseq2 biimpa sylancl ) ABDGZCBHZCDHZFELMNBDCIJK $.
  $}

  ${
    syl5sseqr.1 $e |- B C_ A $.
    syl5sseqr.2 $e |- ( ph -> C = A ) $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl5sseqr $p |- ( ph -> B C_ C ) $=
      ( wss a1i sseqtr4d ) ACBDCBGAEHFI $.
  $}

  ${
    syl6eqss.1 $e |- ( ph -> A = B ) $.
    syl6eqss.2 $e |- B C_ C $.
    $( A chained subclass and equality deduction.  (Contributed by Mario
       Carneiro, 2-Jan-2017.) $)
    syl6eqss $p |- ( ph -> A C_ C ) $=
      ( wss a1i eqsstrd ) ABCDECDGAFHI $.
  $}

  ${
    syl6eqssr.1 $e |- ( ph -> B = A ) $.
    syl6eqssr.2 $e |- B C_ C $.
    $( A chained subclass and equality deduction.  (Contributed by Mario
       Carneiro, 2-Jan-2017.) $)
    syl6eqssr $p |- ( ph -> A C_ C ) $=
      ( eqcomd syl6eqss ) ABCDACBEGFH $.
  $}

  $( Equality implies the subclass relation.  (Contributed by NM, 5-Aug-1993.)
     (Proof shortened by Andrew Salmon, 21-Jun-2011.) $)
  eqimss $p |- ( A = B -> A C_ B ) $=
    ( wceq wss eqss simplbi ) ABCABDBADABEF $.

  $( Equality implies the subclass relation.  (Contributed by NM,
     23-Nov-2003.) $)
  eqimss2 $p |- ( B = A -> A C_ B ) $=
    ( wss eqimss eqcoms ) ABCABABDE $.

  ${
    eqimssi.1 $e |- A = B $.
    $( Infer subclass relationship from equality.  (Contributed by NM,
       6-Jan-2007.) $)
    eqimssi $p |- A C_ B $=
      ( ssid sseqtri ) AABADCE $.

    $( Infer subclass relationship from equality.  (Contributed by NM,
       7-Jan-2007.) $)
    eqimss2i $p |- B C_ A $=
      ( ssid sseqtr4i ) BBABDCE $.
  $}

  $( Two classes are different if they don't include the same class.
     (Contributed by NM, 23-Apr-2015.) $)
  nssne1 $p |- ( ( A C_ B /\ -. A C_ C ) -> B =/= C ) $=
    ( wss wn wne wceq sseq2 biimpcd necon3bd imp ) ABDZACDZEBCFLMBCBCGLMBCAHIJK
    $.

  $( Two classes are different if they are not subclasses of the same class.
     (Contributed by NM, 23-Apr-2015.) $)
  nssne2 $p |- ( ( A C_ C /\ -. B C_ C ) -> A =/= B ) $=
    ( wss wn wne wceq sseq1 biimpcd necon3bd imp ) ACDZBCDZEABFLMABABGLMABCHIJK
    $.

  ${
    $d x A $.  $d x B $.
    $( Negation of subclass relationship.  Exercise 13 of [TakeutiZaring]
       p. 18.  (Contributed by NM, 25-Feb-1996.)  (Proof shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    nss $p |- ( -. A C_ B <-> E. x ( x e. A /\ -. x e. B ) ) $=
      ( cv wcel wn wa wex wss wi wal exanali dfss2 xchbinxr bicomi ) ADZBEZPCEZ
      FGAHZBCIZFSQRJAKTQRALABCMNO $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Quantification restricted to a subclass.  (Contributed by NM,
       11-Mar-2006.) $)
    ssralv $p |- ( A C_ B -> ( A. x e. B ph -> A. x e. A ph ) ) $=
      ( wss cv wcel ssel imim1d ralimdv2 ) CDEZAABDCKBFZCGLDGACDLHIJ $.

    $( Existential quantification restricted to a subclass.  (Contributed by
       NM, 11-Jan-2007.) $)
    ssrexv $p |- ( A C_ B -> ( E. x e. A ph -> E. x e. B ph ) ) $=
      ( wss cv wcel ssel anim1d reximdv2 ) CDEZAABCDKBFZCGLDGACDLHIJ $.
  $}

  ${
    $d A x $.  $d B x $.
    $( Restricted universal quantification on a subset in terms of superset.
       (Contributed by Stefan O'Rear, 3-Apr-2015.) $)
    ralss $p |- ( A C_ B -> ( A. x e. A ph <->
          A. x e. B ( x e. A -> ph ) ) ) $=
      ( wss cv wcel wi wa ssel pm4.71rd imbi1d impexp syl6bb ralbidv2 ) CDEZABF
      ZCGZAHZBCDPSQDGZRIZAHTSHPRUAAPRTCDQJKLTRAMNO $.

    $( Restricted existential quantification on a subset in terms of superset.
       (Contributed by Stefan O'Rear, 3-Apr-2015.) $)
    rexss $p |- ( A C_ B -> ( E. x e. A ph <->
          E. x e. B ( x e. A /\ ph ) ) ) $=
      ( wss cv wcel wa ssel pm4.71rd anbi1d anass syl6bb rexbidv2 ) CDEZABFZCGZ
      AHZBCDORPDGZQHZAHSRHOQTAOQSCDPIJKSQALMN $.
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Class abstractions in a subclass relationship.  (Contributed by NM,
       3-Jul-1994.) $)
    ss2ab $p |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) $=
      ( cab wss cv wcel wi wal nfab1 dfss2f abid imbi12i albii bitri ) ACDZBCDZ
      ECFZPGZRQGZHZCIABHZCICPQACJBCJKUAUBCSATBACLBCLMNO $.
  $}

  ${
    $d x A $.
    $( Class abstraction in a subclass relationship.  (Contributed by NM,
       16-Aug-2006.) $)
    abss $p |- ( { x | ph } C_ A <-> A. x ( ph -> x e. A ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq2i ss2ab bitr3i ) ABDZCENBFCGZBDZEAOHB
      IPCNBCJKAOBLM $.

    $( Subclass of a class abstraction.  (Contributed by NM, 16-Aug-2006.) $)
    ssab $p |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq1i ss2ab bitr3i ) CABDZEBFCGZBDZNEOAHB
      IPCNBCJKOABLM $.

    $( The relation for a subclass of a class abstraction is equivalent to
       restricted quantification.  (Contributed by NM, 6-Sep-2006.) $)
    ssabral $p |- ( A C_ { x | ph } <-> A. x e. A ph ) $=
      ( cab wss cv wcel wi wal wral ssab df-ral bitr4i ) CABDEBFCGAHBIABCJABCKA
      BCLM $.
  $}

  ${
    ss2abi.1 $e |- ( ph -> ps ) $.
    $( Inference of abstraction subclass from implication.  (Contributed by NM,
       31-Mar-1995.) $)
    ss2abi $p |- { x | ph } C_ { x | ps } $=
      ( cab wss wi ss2ab mpgbir ) ACEBCEFABGCABCHDI $.
  $}

  ${
    $d x ph $.
    ss2abdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction of abstraction subclass from implication.  (Contributed by NM,
       29-Jul-2011.) $)
    ss2abdv $p |- ( ph -> { x | ps } C_ { x | ch } ) $=
      ( wi wal cab wss alrimiv ss2ab sylibr ) ABCFZDGBDHCDHIAMDEJBCDKL $.
  $}

  ${
    $d x ph $.  $d x A $.
    abssdv.1 $e |- ( ph -> ( ps -> x e. A ) ) $.
    $( Deduction of abstraction subclass from implication.  (Contributed by NM,
       20-Jan-2006.) $)
    abssdv $p |- ( ph -> { x | ps } C_ A ) $=
      ( cv wcel wi wal cab wss alrimiv abss sylibr ) ABCFDGHZCIBCJDKAOCELBCDMN
      $.
  $}

  ${
    $d x A $.
    abssi.1 $e |- ( ph -> x e. A ) $.
    $( Inference of abstraction subclass from implication.  (Contributed by NM,
       20-Jan-2006.) $)
    abssi $p |- { x | ph } C_ A $=
      ( cab cv wcel ss2abi abid2 sseqtri ) ABEBFCGZBECAKBDHBCIJ $.
  $}

  $( Restricted abstraction classes in a subclass relationship.  (Contributed
     by NM, 30-May-1999.) $)
  ss2rab $p |- ( { x e. A | ph } C_ { x e. A | ps } <->
               A. x e. A ( ph -> ps ) ) $=
    ( crab wss cv wcel wa cab wi wal df-rab sseq12i ss2ab df-ral imdistan albii
    wral bitr2i 3bitri ) ACDEZBCDEZFCGDHZAIZCJZUDBIZCJZFUEUGKZCLZABKZCDSZUBUFUC
    UHACDMBCDMNUEUGCOULUDUKKZCLUJUKCDPUMUICUDABQRTUA $.

  ${
    $d x B $.
    $( Restricted class abstraction in a subclass relationship.  (Contributed
       by NM, 16-Aug-2006.) $)
    rabss $p |- ( { x e. A | ph } C_ B <-> A. x e. A ( ph -> x e. B ) ) $=
      ( crab wss cv wcel wa cab wal wral df-rab sseq1i abss impexp albii df-ral
      wi bitr4i 3bitri ) ABCEZDFBGZCHZAIZBJZDFUEUCDHZSZBKZAUGSZBCLZUBUFDABCMNUE
      BDOUIUDUJSZBKUKUHULBUDAUGPQUJBCRTUA $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass of a restricted class abstraction.  (Contributed by NM,
       16-Aug-2006.) $)
    ssrab $p |- ( B C_ { x e. A | ph } <-> ( B C_ A /\ A. x e. B ph ) ) $=
      ( crab wss cv wcel wa cab wal wral df-rab sseq2i ssab dfss3 anbi1i r19.26
      wi df-ral 3bitr2ri 3bitri ) DABCEZFDBGZCHZAIZBJZFUDDHUFSBKZDCFZABDLZIZUCU
      GDABCMNUFBDOUKUEBDLZUJIUFBDLUHUIULUJBDCPQUEABDRUFBDTUAUB $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrabdv.1 $e |- ( ph -> B C_ A ) $.
    ssrabdv.2 $e |- ( ( ph /\ x e. B ) -> ps ) $.
    $( Subclass of a restricted class abstraction (deduction rule).
       (Contributed by NM, 31-Aug-2006.) $)
    ssrabdv $p |- ( ph -> B C_ { x e. A | ps } ) $=
      ( wss wral crab ralrimiva ssrab sylanbrc ) AEDHBCEIEBCDJHFABCEGKBCDELM $.
  $}

  ${
    $d x B $.  $d x ph $.
    rabssdv.1 $e |- ( ( ph /\ x e. A /\ ps ) -> x e. B ) $.
    $( Subclass of a restricted class abstraction (deduction rule).
       (Contributed by NM, 2-Feb-2015.) $)
    rabssdv $p |- ( ph -> { x e. A | ps } C_ B ) $=
      ( cv wcel wi wral crab wss 3exp ralrimiv rabss sylibr ) ABCGZEHZIZCDJBCDK
      ELASCDAQDHBRFMNBCDEOP $.
  $}

  ${
    $d x ph $.
    ss2rabdv.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction of restricted abstraction subclass from implication.
       (Contributed by NM, 30-May-2006.) $)
    ss2rabdv $p |- ( ph -> { x e. A | ps } C_ { x e. A | ch } ) $=
      ( wi wral crab wss ralrimiva ss2rab sylibr ) ABCGZDEHBDEICDEIJANDEFKBCDEL
      M $.
  $}

  ${
    ss2rabi.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference of restricted abstraction subclass from implication.
       (Contributed by NM, 14-Oct-1999.) $)
    ss2rabi $p |- { x e. A | ph } C_ { x e. A | ps } $=
      ( crab wss wi ss2rab mprgbir ) ACDFBCDFGABHCDABCDIEJ $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass law for restricted abstraction.  (Contributed by NM,
       18-Dec-2004.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    rabss2 $p |- ( A C_ B -> { x e. A | ph } C_ { x e. B | ph } ) $=
      ( wss cv wcel wa cab crab wi wal pm3.45 alimi dfss2 ss2ab 3imtr4i 3sstr4g
      df-rab ) CDEZBFZCGZAHZBIZUADGZAHZBIZABCJABDJUBUEKZBLUCUFKZBLTUDUGEUHUIBUB
      UEAMNBCDOUCUFBPQABCSABDSR $.

    $( Subclass relation for the restriction of a class abstraction.
       (Contributed by NM, 31-Mar-1995.) $)
    ssab2 $p |- { x | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa simpl abssi ) BDCEZAFBCIAGH $.

    $( Subclass relation for a restricted class.  (Contributed by NM,
       19-Mar-1997.) $)
    ssrab2 $p |- { x e. A | ph } C_ A $=
      ( crab cv wcel wa cab df-rab ssab2 eqsstri ) ABCDBECFAGBHCABCIABCJK $.
  $}

  $( A restricted class is a subclass of the corresponding unrestricted class.
     (Contributed by Mario Carneiro, 23-Dec-2016.) $)
  rabssab $p |- { x e. A | ph } C_ { x | ph } $=
    ( crab cv wcel wa cab df-rab simpr ss2abi eqsstri ) ABCDBECFZAGZBHABHABCINA
    BMAJKL $.

  ${
    $d x y $.  $d y z A $.  $d y z B $.  $d x z C $.
    $( A subset relationship useful for converting union to indexed union using
       ~ dfiun2 or ~ dfiun2g and intersection to indexed intersection using
       ~ dfiin2 .  (Contributed by NM, 5-Oct-2006.)  (Proof shortened by Mario
       Carneiro, 26-Sep-2015.) $)
    uniiunlem $p |- ( A. x e. A B e. D ->
                     ( A. x e. A B e. C <-> { y | E. x e. A y = B } C_ C ) ) $=
      ( vz cv wceq wrex cab wss wcel wi wal wral eqeq1 rexbidv cbvabv wb sseq1i
      r19.23v albii ralcom4 abss 3bitr4i bitr4i nfv eleq1 ceqsalg ralbi syl5rbb
      ralimi syl ) BHZDIZACJZBKZELZGHZDIZUTEMZNZGOZACPZDFMZACPZDEMZACPZUSVAACJZ
      GKZELZVEURVKEUQVJBGUOUTIUPVAACUOUTDQRSUAVCACPZGOVJVBNZGOVEVLVMVNGVAVBACUB
      UCVCAGCUDVJGEUEUFUGVGVDVHTZACPVEVITVFVOACVBVHGDFVHGUHUTDEUIUJUMVDVHACUKUN
      UL $.
  $}

  $( Alternate definition of proper subclass.  (Contributed by NM,
     7-Feb-1996.) $)
  dfpss2 $p |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) $=
    ( wpss wss wne wa wceq wn df-pss df-ne anbi2i bitri ) ABCABDZABEZFMABGHZFAB
    INOMABJKL $.

  $( Alternate definition of proper subclass.  (Contributed by NM,
     7-Feb-1996.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  dfpss3 $p |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) $=
    ( wpss wss wceq wn wa dfpss2 eqss baib notbid pm5.32i bitri ) ABCABDZABEZFZ
    GNBADZFZGABHNPRNOQONQABIJKLM $.

  $( Equality theorem for proper subclass.  (Contributed by NM, 7-Feb-1996.) $)
  psseq1 $p |- ( A = B -> ( A C. C <-> B C. C ) ) $=
    ( wceq wss wne wa wpss sseq1 neeq1 anbi12d df-pss 3bitr4g ) ABDZACEZACFZGBC
    EZBCFZGACHBCHNOQPRABCIABCJKACLBCLM $.

  $( Equality theorem for proper subclass.  (Contributed by NM, 7-Feb-1996.) $)
  psseq2 $p |- ( A = B -> ( C C. A <-> C C. B ) ) $=
    ( wceq wss wne wa wpss sseq2 neeq2 anbi12d df-pss 3bitr4g ) ABDZCAEZCAFZGCB
    EZCBFZGCAHCBHNOQPRABCIABCJKCALCBLM $.

  ${
    psseq1i.1 $e |- A = B $.
    $( An equality inference for the proper subclass relationship.
       (Contributed by NM, 9-Jun-2004.) $)
    psseq1i $p |- ( A C. C <-> B C. C ) $=
      ( wceq wpss wb psseq1 ax-mp ) ABEACFBCFGDABCHI $.

    $( An equality inference for the proper subclass relationship.
       (Contributed by NM, 9-Jun-2004.) $)
    psseq2i $p |- ( C C. A <-> C C. B ) $=
      ( wceq wpss wb psseq2 ax-mp ) ABECAFCBFGDABCHI $.

    ${
      psseq12i.2 $e |- C = D $.
      $( An equality inference for the proper subclass relationship.
         (Contributed by NM, 9-Jun-2004.) $)
      psseq12i $p |- ( A C. C <-> B C. D ) $=
        ( wpss psseq1i psseq2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
    $}
  $}

  ${
    psseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the proper subclass relationship.
       (Contributed by NM, 9-Jun-2004.) $)
    psseq1d $p |- ( ph -> ( A C. C <-> B C. C ) ) $=
      ( wceq wpss wb psseq1 syl ) ABCFBDGCDGHEBCDIJ $.

    $( An equality deduction for the proper subclass relationship.
       (Contributed by NM, 9-Jun-2004.) $)
    psseq2d $p |- ( ph -> ( C C. A <-> C C. B ) ) $=
      ( wceq wpss wb psseq2 syl ) ABCFDBGDCGHEBCDIJ $.

    ${
      psseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the proper subclass relationship.
         (Contributed by NM, 9-Jun-2004.) $)
      psseq12d $p |- ( ph -> ( A C. C <-> B C. D ) ) $=
        ( wpss psseq1d psseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
    $}
  $}

  $( A proper subclass is a subclass.  Theorem 10 of [Suppes] p. 23.
     (Contributed by NM, 7-Feb-1996.) $)
  pssss $p |- ( A C. B -> A C_ B ) $=
    ( wpss wss wne df-pss simplbi ) ABCABDABEABFG $.

  $( Two classes in a proper subclass relationship are not equal.  (Contributed
     by NM, 16-Feb-2015.) $)
  pssne $p |- ( A C. B -> A =/= B ) $=
    ( wpss wss wne df-pss simprbi ) ABCABDABEABFG $.

  ${
    pssssd.1 $e |- ( ph -> A C. B ) $.
    $( Deduce subclass from proper subclass.  (Contributed by NM,
       29-Feb-1996.) $)
    pssssd $p |- ( ph -> A C_ B ) $=
      ( wpss wss pssss syl ) ABCEBCFDBCGH $.

    $( Proper subclasses are unequal.  Deduction form of ~ pssne .
       (Contributed by David Moews, 1-May-2017.) $)
    pssned $p |- ( ph -> A =/= B ) $=
      ( wpss wne pssne syl ) ABCEBCFDBCGH $.
  $}

  $( Subclass in terms of proper subclass.  (Contributed by NM,
     25-Feb-1996.) $)
  sspss $p |- ( A C_ B <-> ( A C. B \/ A = B ) ) $=
    ( wss wpss wceq wo wn dfpss2 simplbi2 con1d orrd pssss eqimss jaoi impbii )
    ABCZABDZABEZFPQRPRQQPRGABHIJKQPRABLABMNO $.

  $( Proper subclass is irreflexive.  Theorem 7 of [Suppes] p. 23.
     (Contributed by NM, 7-Feb-1996.) $)
  pssirr $p |- -. A C. A $=
    ( wpss wss wn wa pm3.24 dfpss3 mtbir ) AABAACZIDEIFAAGH $.

  $( Proper subclass has no 2-cycle loops.  Compare Theorem 8 of [Suppes]
     p. 23.  (Contributed by NM, 7-Feb-1996.)  (Proof shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  pssn2lp $p |- -. ( A C. B /\ B C. A ) $=
    ( wpss wn wi wa wss dfpss3 simprbi pssss nsyl imnan mpbi ) ABCZBACZDENOFDNB
    AGZONABGPDABHIBAJKNOLM $.

  $( Two ways of stating trichotomy with respect to inclusion.  (Contributed by
     NM, 12-Aug-2004.) $)
  sspsstri $p |- ( ( A C_ B \/ B C_ A ) <-> ( A C. B \/ A = B \/ B C. A ) ) $=
    ( wpss wo wceq wss w3o or32 sspss eqcom orbi2i bitri orbi12i orordir bitr4i
    df-3or 3bitr4i ) ABCZBACZDABEZDZRTDZSDABFZBAFZDZRTSGRSTHUEUBSTDZDUAUCUBUDUF
    ABIUDSBAEZDUFBAIUGTSBAJKLMRSTNORTSPQ $.

  $( Partial trichotomy law for subclasses.  (Contributed by NM, 16-May-1996.)
     (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  ssnpss $p |- ( A C_ B -> -. B C. A ) $=
    ( wpss wss wn dfpss3 simprbi con2i ) BACZABDZIBADJEBAFGH $.

  $( Transitive law for proper subclass.  Theorem 9 of [Suppes] p. 23.
     (Contributed by NM, 7-Feb-1996.) $)
  psstr $p |- ( ( A C. B /\ B C. C ) -> A C. C ) $=
    ( wpss wa wss wceq pssss sylan9ss pssn2lp psseq1 anbi1d mtbiri con2i dfpss2
    wn sylanbrc ) ABDZBCDZEZACFACGZPACDRSABCABHBCHIUATUATCBDZSECBJUARUBSACBKLMN
    ACOQ $.

  $( Transitive law for subclass and proper subclass.  (Contributed by NM,
     3-Apr-1996.) $)
  sspsstr $p |- ( ( A C_ B /\ B C. C ) -> A C. C ) $=
    ( wss wpss wceq wo sspss wi psstr ex psseq1 biimprd jaoi imp sylanb ) ABDAB
    EZABFZGZBCEZACEZABHSTUAQTUAIRQTUAABCJKRUATABCLMNOP $.

  $( Transitive law for subclass and proper subclass.  (Contributed by NM,
     3-Apr-1996.) $)
  psssstr $p |- ( ( A C. B /\ B C_ C ) -> A C. C ) $=
    ( wss wpss wceq wo sspss psstr ex psseq2 biimpcd jaod imp sylan2b ) BCDABEZ
    BCEZBCFZGZACEZBCHPSTPQTRPQTABCIJRPTBCAKLMNO $.

  ${
    psstrd.1 $e |- ( ph -> A C. B ) $.
    psstrd.2 $e |- ( ph -> B C. C ) $.
    $( Proper subclass inclusion is transitive.  Deduction form of ~ psstr .
       (Contributed by David Moews, 1-May-2017.) $)
    psstrd $p |- ( ph -> A C. C ) $=
      ( wpss psstr syl2anc ) ABCGCDGBDGEFBCDHI $.
  $}

  ${
    sspsstrd.1 $e |- ( ph -> A C_ B ) $.
    sspsstrd.2 $e |- ( ph -> B C. C ) $.
    $( Transitivity involving subclass and proper subclass inclusion.
       Deduction form of ~ sspsstr .  (Contributed by David Moews,
       1-May-2017.) $)
    sspsstrd $p |- ( ph -> A C. C ) $=
      ( wss wpss sspsstr syl2anc ) ABCGCDHBDHEFBCDIJ $.
  $}

  ${
    psssstrd.1 $e |- ( ph -> A C. B ) $.
    psssstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Transitivity involving subclass and proper subclass inclusion.
       Deduction form of ~ psssstr .  (Contributed by David Moews,
       1-May-2017.) $)
    psssstrd $p |- ( ph -> A C. C ) $=
      ( wpss wss psssstr syl2anc ) ABCGCDHBDGEFBCDIJ $.
  $}

  $( A class is not a proper subclass of another iff it satisfies a
     one-directional form of ~ eqss .  (Contributed by Mario Carneiro,
     15-May-2015.) $)
  npss $p |- ( -. A C. B <-> ( A C_ B -> A = B ) ) $=
    ( wss wceq wi wpss wn wa pm4.61 dfpss2 bitr4i con1bii ) ABCZABDZEZABFZOGMNG
    HPMNIABJKL $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The difference, union, and intersection of two classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Equality theorem for class difference.  (Contributed by FL,
     31-Aug-2009.) $)
  difeq12 $p |- ( ( A = B /\ C = D ) -> ( A \ C ) = ( B \ D ) ) $=
    ( wceq cdif difeq1 difeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.

  ${
    difeq1i.1 $e |- A = B $.
    $( Inference adding difference to the right in a class equality.
       (Contributed by NM, 15-Nov-2002.) $)
    difeq1i $p |- ( A \ C ) = ( B \ C ) $=
      ( wceq cdif difeq1 ax-mp ) ABEACFBCFEDABCGH $.

    $( Inference adding difference to the left in a class equality.
       (Contributed by NM, 15-Nov-2002.) $)
    difeq2i $p |- ( C \ A ) = ( C \ B ) $=
      ( wceq cdif difeq2 ax-mp ) ABECAFCBFEDABCGH $.

    ${
      difeq12i.2 $e |- C = D $.
      $( Equality inference for class difference.  (Contributed by NM,
         29-Aug-2004.) $)
      difeq12i $p |- ( A \ C ) = ( B \ D ) $=
        ( cdif difeq1i difeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
    $}
  $}

  ${
    difeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding difference to the right in a class equality.
       (Contributed by NM, 15-Nov-2002.) $)
    difeq1d $p |- ( ph -> ( A \ C ) = ( B \ C ) ) $=
      ( wceq cdif difeq1 syl ) ABCFBDGCDGFEBCDHI $.

    $( Deduction adding difference to the left in a class equality.
       (Contributed by NM, 15-Nov-2002.) $)
    difeq2d $p |- ( ph -> ( C \ A ) = ( C \ B ) ) $=
      ( wceq cdif difeq2 syl ) ABCFDBGDCGFEBCDHI $.
  $}

  ${
    difeq12d.1 $e |- ( ph -> A = B ) $.
    difeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for class difference.  (Contributed by FL,
       29-May-2014.) $)
    difeq12d $p |- ( ph -> ( A \ C ) = ( B \ D ) ) $=
      ( cdif difeq1d difeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    difeqri.1 $e |- ( ( x e. A /\ -. x e. B ) <-> x e. C ) $.
    $( Inference from membership to difference.  (Contributed by NM,
       17-May-1998.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    difeqri $p |- ( A \ B ) = C $=
      ( cdif cv wcel wn wa eldif bitri eqriv ) ABCFZDAGZNHOBHOCHIJODHOBCKELM $.
  $}

  $( Implication of membership in a class difference.  (Contributed by NM,
     29-Apr-1994.) $)
  eldifi $p |- ( A e. ( B \ C ) -> A e. B ) $=
    ( cdif wcel wn eldif simplbi ) ABCDEABEACEFABCGH $.

  $( Implication of membership in a class difference.  (Contributed by NM,
     3-May-1994.) $)
  eldifn $p |- ( A e. ( B \ C ) -> -. A e. C ) $=
    ( cdif wcel wn eldif simprbi ) ABCDEABEACEFABCGH $.

  $( A set does not belong to a class excluding it.  (Contributed by NM,
     27-Jun-1994.) $)
  elndif $p |- ( A e. B -> -. A e. ( C \ B ) ) $=
    ( cdif wcel eldifn con2i ) ACBDEABEACBFG $.

  $( Implication of membership in a class difference.  (Contributed by NM,
     28-Jun-1994.) $)
  neldif $p |- ( ( A e. B /\ -. A e. ( B \ C ) ) -> A e. C ) $=
    ( wcel cdif wn eldif simplbi2 con1d imp ) ABDZABCEDZFACDZKMLLKMFABCGHIJ $.

  ${
    $d x A $.  $d x B $.
    $( Double class difference.  Exercise 11 of [TakeutiZaring] p. 22.
       (Contributed by NM, 17-May-1998.) $)
    difdif $p |- ( A \ ( B \ A ) ) = A $=
      ( vx cdif cv wcel wi wa wn pm4.45im eldif xchbinxr anbi2i bitr2i difeqri
      iman ) CABADZACEZAFZSRBFZSGZHSRQFZIZHSTJUAUCSUATSIHUBTSPRBAKLMNO $.

    $( Subclass relationship for class difference.  Exercise 14 of
       [TakeutiZaring] p. 22.  (Contributed by NM, 29-Apr-1994.) $)
    difss $p |- ( A \ B ) C_ A $=
      ( vx cdif cv eldifi ssriv ) CABDACEABFG $.
  $}

  $( A difference of two classes is contained in the minuend.  Deduction form
     of ~ difss .  (Contributed by David Moews, 1-May-2017.) $)
  difssd $p |- ( ph -> ( A \ B ) C_ A ) $=
    ( cdif wss difss a1i ) BCDBEABCFG $.

  $( If a class is contained in a difference, it is contained in the minuend.
     (Contributed by David Moews, 1-May-2017.) $)
  difss2 $p |- ( A C_ ( B \ C ) -> A C_ B ) $=
    ( cdif wss id difss syl6ss ) ABCDZEZAIBJFBCGH $.

  ${
    difss2d.1 $e |- ( ph -> A C_ ( B \ C ) ) $.
    $( If a class is contained in a difference, it is contained in the
       minuend.  Deduction form of ~ difss2 .  (Contributed by David Moews,
       1-May-2017.) $)
    difss2d $p |- ( ph -> A C_ B ) $=
      ( cdif wss difss2 syl ) ABCDFGBCGEBCDHI $.
  $}

  $( Preservation of a subclass relationship by class difference.  (Contributed
     by NM, 15-Feb-2007.) $)
  ssdifss $p |- ( A C_ B -> ( A \ C ) C_ B ) $=
    ( cdif wss difss sstr mpan ) ACDZAEABEIBEACFIABGH $.

  ${
    $d x A $.
    $( Double complement under universal class.  Exercise 4.10(s) of
       [Mendelson] p. 231.  (Contributed by NM, 8-Jan-2002.) $)
    ddif $p |- ( _V \ ( _V \ A ) ) = A $=
      ( vx cvv cdif cv wcel wn wa eldif mpbiran con2bii biantrur bitr2i difeqri
      vex ) BCCADZABEZAFZQPFZGZQCFZTHSRSUARGBOZQCAIJKUATUBLMN $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Contraposition law for subsets.  (Contributed by NM, 22-Mar-1998.) $)
    ssconb $p |- ( ( A C_ C /\ B C_ C ) ->
                  ( A C_ ( C \ B ) <-> B C_ ( C \ A ) ) ) $=
      ( vx wss wa cv wcel cdif wi wal wn wb ssel pm5.1 jcab 3bitr4g eldif dfss2
      imbi2i syl2an con2b a1i anbi12d albidv ) ACEZBCEZFZDGZAHZUICBIZHZJZDKUIBH
      ZUICAIZHZJZDKAUKEBUOEUHUMUQDUHUJUICHZUNLZFZJZUNURUJLZFZJZUMUQUHUJURJZUJUS
      JZFUNURJZUNVBJZFVAVDUHVEVGVFVHUFVEVGVEVGMUGACUINBCUINVEVGOUAVFVHMUHUJUNUB
      UCUDUJURUSPUNURVBPQULUTUJUICBRTUPVCUNUICARTQUEDAUKSDBUOSQ $.

    $( Contraposition law for subsets.  Exercise 15 of [TakeutiZaring] p. 22.
       (Contributed by NM, 22-Mar-1998.) $)
    sscon $p |- ( A C_ B -> ( C \ B ) C_ ( C \ A ) ) $=
      ( vx wss cdif cv wcel wn wa ssel con3d anim2d eldif 3imtr4g ssrdv ) ABEZD
      CBFZCAFZQDGZCHZTBHZIZJUATAHZIZJTRHTSHQUCUEUAQUDUBABTKLMTCBNTCANOP $.

    $( Difference law for subsets.  (Contributed by NM, 28-May-1998.) $)
    ssdif $p |- ( A C_ B -> ( A \ C ) C_ ( B \ C ) ) $=
      ( vx wss cdif cv wcel wn wa ssel anim1d eldif 3imtr4g ssrdv ) ABEZDACFZBC
      FZPDGZAHZSCHIZJSBHZUAJSQHSRHPTUBUAABSKLSACMSBCMNO $.
  $}

  ${
    ssdifd.1 $e |- ( ph -> A C_ B ) $.
    $( If ` A ` is contained in ` B ` , then ` ( A \ C ) ` is contained in
       ` ( B \ C ) ` .  Deduction form of ~ ssdif .  (Contributed by David
       Moews, 1-May-2017.) $)
    ssdifd $p |- ( ph -> ( A \ C ) C_ ( B \ C ) ) $=
      ( wss cdif ssdif syl ) ABCFBDGCDGFEBCDHI $.

    $( If ` A ` is contained in ` B ` , then ` ( C \ B ) ` is contained in
       ` ( C \ A ) ` .  Deduction form of ~ sscon .  (Contributed by David
       Moews, 1-May-2017.) $)
    sscond $p |- ( ph -> ( C \ B ) C_ ( C \ A ) ) $=
      ( wss cdif sscon syl ) ABCFDCGDBGFEBCDHI $.

    $( If ` A ` is contained in ` B ` , then ` ( A \ C ) ` is also contained in
       ` B ` .  Deduction form of ~ ssdifss .  (Contributed by David Moews,
       1-May-2017.) $)
    ssdifssd $p |- ( ph -> ( A \ C ) C_ B ) $=
      ( wss cdif ssdifss syl ) ABCFBDGCFEBCDHI $.

    ssdif2d.2 $e |- ( ph -> C C_ D ) $.
    $( If ` A ` is contained in ` B ` and ` C ` is contained in ` D ` , then
       ` ( A \ D ) ` is contained in ` ( B \ C ) ` .  Deduction form.
       (Contributed by David Moews, 1-May-2017.) $)
    ssdif2d $p |- ( ph -> ( A \ D ) C_ ( B \ C ) ) $=
      ( cdif sscond ssdifd sstrd ) ABEHBDHCDHADEBGIABCDFJK $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    uneqri.1 $e |- ( ( x e. A \/ x e. B ) <-> x e. C ) $.
    $( Inference from membership to union.  (Contributed by NM, 5-Aug-1993.) $)
    uneqri $p |- ( A u. B ) = C $=
      ( cun cv wcel wo elun bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
  $}

  ${
    $d x A $.
    $( Idempotent law for union of classes.  Theorem 23 of [Suppes] p. 27.
       (Contributed by NM, 5-Aug-1993.) $)
    unidm $p |- ( A u. A ) = A $=
      ( vx cv wcel oridm uneqri ) BAAABCADEF $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Commutative law for union of classes.  Exercise 6 of [TakeutiZaring]
       p. 17.  (Contributed by NM, 25-Jun-1998.)  (Proof shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    uncom $p |- ( A u. B ) = ( B u. A ) $=
      ( vx cun cv wcel wo orcom elun bitr4i uneqri ) CABBADZCEZAFZMBFZGONGMLFNO
      HMBAIJK $.
  $}

  ${
    $( If a class equals the union of two other classes, then it equals the
       union of those two classes commuted. ~ equncom was automatically derived
       from ~ equncomVD using the tools program
       translate_without_overwriting.cmd and minimizing.  (Contributed by Alan
       Sare, 18-Feb-2012.) $)
    equncom $p |- ( A = ( B u. C ) <-> A = ( C u. B ) ) $=
      ( cun uncom eqeq2i ) BCDCBDABCEF $.
  $}

  ${
    equncomi.1 $e |- A = ( B u. C ) $.
    $( Inference form of ~ equncom . ~ equncomi was automatically derived from
       ~ equncomiVD using the tools program translate_without_overwriting.cmd
       and minimizing.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    equncomi $p |- A = ( C u. B ) $=
      ( cun wceq equncom mpbi ) ABCEFACBEFDABCGH $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for union of two classes.  (Contributed by NM,
       5-Aug-1993.) $)
    uneq1 $p |- ( A = B -> ( A u. C ) = ( B u. C ) ) $=
      ( vx wceq cun cv wcel wo eleq2 orbi1d elun 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
  $}

  $( Equality theorem for the union of two classes.  (Contributed by NM,
     5-Aug-1993.) $)
  uneq2 $p |- ( A = B -> ( C u. A ) = ( C u. B ) ) $=
    ( wceq cun uneq1 uncom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.

  $( Equality theorem for union of two classes.  (Contributed by NM,
     29-Mar-1998.) $)
  uneq12 $p |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) $=
    ( wceq cun uneq1 uneq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.

  ${
    uneq1i.1 $e |- A = B $.
    $( Inference adding union to the right in a class equality.  (Contributed
       by NM, 30-Aug-1993.) $)
    uneq1i $p |- ( A u. C ) = ( B u. C ) $=
      ( wceq cun uneq1 ax-mp ) ABEACFBCFEDABCGH $.

    $( Inference adding union to the left in a class equality.  (Contributed by
       NM, 30-Aug-1993.) $)
    uneq2i $p |- ( C u. A ) = ( C u. B ) $=
      ( wceq cun uneq2 ax-mp ) ABECAFCBFEDABCGH $.

    ${
      uneq12i.2 $e |- C = D $.
      $( Equality inference for union of two classes.  (Contributed by NM,
         12-Aug-2004.)  (Proof shortened by Eric Schmidt, 26-Jan-2007.) $)
      uneq12i $p |- ( A u. C ) = ( B u. D ) $=
        ( wceq cun uneq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
    $}
  $}

  ${
    uneq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding union to the right in a class equality.  (Contributed
       by NM, 29-Mar-1998.) $)
    uneq1d $p |- ( ph -> ( A u. C ) = ( B u. C ) ) $=
      ( wceq cun uneq1 syl ) ABCFBDGCDGFEBCDHI $.

    $( Deduction adding union to the left in a class equality.  (Contributed by
       NM, 29-Mar-1998.) $)
    uneq2d $p |- ( ph -> ( C u. A ) = ( C u. B ) ) $=
      ( wceq cun uneq2 syl ) ABCFDBGDCGFEBCDHI $.

    ${
      uneq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for union of two classes.  (Contributed by NM,
         29-Sep-2004.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
      uneq12d $p |- ( ph -> ( A u. C ) = ( B u. D ) ) $=
        ( wceq cun uneq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
    $}
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for union of classes.  Exercise 8 of [TakeutiZaring]
       p. 17.  (Contributed by NM, 3-May-1994.)  (Proof shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unass $p |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) $=
      ( vx cun cv wcel wo elun orbi2i orbi1i orass bitr2i 3bitrri uneqri ) DABE
      ZCABCEZEZDFZRGSAGZSQGZHTSBGZSCGZHZHZSPGZUCHZSAQIUAUDTSBCIJUGTUBHZUCHUEUFU
      HUCSABIKTUBUCLMNO $.
  $}

  $( A rearrangement of union.  (Contributed by NM, 12-Aug-2004.) $)
  un12 $p |- ( A u. ( B u. C ) ) = ( B u. ( A u. C ) ) $=
    ( cun uncom uneq1i unass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH
    $.

  $( A rearrangement of union.  (Contributed by NM, 12-Aug-2004.)  (Proof
     shortened by Andrew Salmon, 26-Jun-2011.) $)
  un23 $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. B ) $=
    ( cun unass un12 uncom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.

  $( A rearrangement of the union of 4 classes.  (Contributed by NM,
     12-Aug-2004.) $)
  un4 $p |- ( ( A u. B ) u. ( C u. D ) ) =
            ( ( A u. C ) u. ( B u. D ) ) $=
    ( cun un12 uneq2i unass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.

  $( Union distributes over itself.  (Contributed by NM, 17-Aug-2004.) $)
  unundi $p |- ( A u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) $=
    ( cun unidm uneq1i un4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.

  $( Union distributes over itself.  (Contributed by NM, 17-Aug-2004.) $)
  unundir $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. ( B u. C ) ) $=
    ( cun unidm uneq2i un4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for union of classes.  Theorem 25 of [Suppes]
       p. 27.  (Contributed by NM, 5-Aug-1993.) $)
    ssun1 $p |- A C_ ( A u. B ) $=
      ( vx cun cv wcel wo orc elun sylibr ssriv ) CAABDZCEZAFZNMBFZGMLFNOHMABIJ
      K $.
  $}

  $( Subclass relationship for union of classes.  (Contributed by NM,
     30-Aug-1993.) $)
  ssun2 $p |- A C_ ( B u. A ) $=
    ( cun ssun1 uncom sseqtri ) AABCBACABDABEF $.

  $( Subclass law for union of classes.  (Contributed by NM, 5-Aug-1993.) $)
  ssun3 $p |- ( A C_ B -> A C_ ( B u. C ) ) $=
    ( wss cun ssun1 sstr2 mpi ) ABDBBCEZDAIDBCFABIGH $.

  $( Subclass law for union of classes.  (Contributed by NM, 14-Aug-1994.) $)
  ssun4 $p |- ( A C_ B -> A C_ ( C u. B ) ) $=
    ( wss cun ssun2 sstr2 mpi ) ABDBCBEZDAIDBCFABIGH $.

  $( Membership law for union of classes.  (Contributed by NM, 5-Aug-1993.) $)
  elun1 $p |- ( A e. B -> A e. ( B u. C ) ) $=
    ( cun ssun1 sseli ) BBCDABCEF $.

  $( Membership law for union of classes.  (Contributed by NM, 30-Aug-1993.) $)
  elun2 $p |- ( A e. B -> A e. ( C u. B ) ) $=
    ( cun ssun2 sseli ) BCBDABCEF $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass law for union of classes.  (Contributed by NM, 14-Oct-1999.)
       (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    unss1 $p |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) $=
      ( vx wss cun cv wcel wo ssel orim1d elun 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.

    $( A relationship between subclass and union.  Theorem 26 of [Suppes]
       p. 27.  (Contributed by NM, 30-Aug-1993.)  (Proof shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    ssequn1 $p |- ( A C_ B <-> ( A u. B ) = B ) $=
      ( vx cv wcel wi wal cun wb wceq wo bicom pm4.72 elun bibi1i 3bitr4i albii
      wss dfss2 dfcleq ) CDZAEZUABEZFZCGUAABHZEZUCIZCGABRUEBJUDUGCUCUBUCKZIUHUC
      IUDUGUCUHLUBUCMUFUHUCUAABNOPQCABSCUEBTP $.
  $}

  $( Subclass law for union of classes.  Exercise 7 of [TakeutiZaring] p. 18.
     (Contributed by NM, 14-Oct-1999.) $)
  unss2 $p |- ( A C_ B -> ( C u. A ) C_ ( C u. B ) ) $=
    ( wss cun unss1 uncom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.

  $( Subclass law for union of classes.  (Contributed by NM, 2-Jun-2004.) $)
  unss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A u. C ) C_ ( B u. D ) ) $=
    ( wss cun unss1 unss2 sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.

  $( A relationship between subclass and union.  (Contributed by NM,
     13-Jun-1994.) $)
  ssequn2 $p |- ( A C_ B <-> ( B u. A ) = B ) $=
    ( wss cun wceq ssequn1 uncom eqeq1i bitri ) ABCABDZBEBADZBEABFJKBABGHI $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( The union of two subclasses is a subclass.  Theorem 27 of [Suppes] p. 27
       and its converse.  (Contributed by NM, 11-Jun-2004.) $)
    unss $p |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) $=
      ( vx cun wss cv wcel wi wal wa dfss2 19.26 elun imbi1i jaob bitri anbi12i
      wo albii 3bitr4i bitr2i ) ABEZCFDGZUCHZUDCHZIZDJZACFZBCFZKZDUCCLUDAHZUFIZ
      UDBHZUFIZKZDJUMDJZUODJZKUHUKUMUODMUGUPDUGULUNSZUFIUPUEUSUFUDABNOULUFUNPQT
      UIUQUJURDACLDBCLRUAUB $.
  $}

  ${
    unssi.1 $e |- A C_ C $.
    unssi.2 $e |- B C_ C $.
    $( An inference showing the union of two subclasses is a subclass.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    unssi $p |- ( A u. B ) C_ C $=
      ( wss wa cun pm3.2i unss mpbi ) ACFZBCFZGABHCFLMDEIABCJK $.
  $}

  ${
    unssd.1 $e |- ( ph -> A C_ C ) $.
    unssd.2 $e |- ( ph -> B C_ C ) $.
    $( A deduction showing the union of two subclasses is a subclass.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    unssd $p |- ( ph -> ( A u. B ) C_ C ) $=
      ( wss cun wa unss biimpi syl2anc ) ABDGZCDGZBCHDGZEFMNIOBCDJKL $.
  $}

  ${
    unssad.1 $e |- ( ph -> ( A u. B ) C_ C ) $.
    $( If ` ( A u. B ) ` is contained in ` C ` , so is ` A ` .  One-way
       deduction form of ~ unss .  Partial converse of ~ unssd .  (Contributed
       by David Moews, 1-May-2017.) $)
    unssad $p |- ( ph -> A C_ C ) $=
      ( wss cun wa unss sylibr simpld ) ABDFZCDFZABCGDFLMHEBCDIJK $.

    $( If ` ( A u. B ) ` is contained in ` C ` , so is ` B ` .  One-way
       deduction form of ~ unss .  Partial converse of ~ unssd .  (Contributed
       by David Moews, 1-May-2017.) $)
    unssbd $p |- ( ph -> B C_ C ) $=
      ( wss cun wa unss sylibr simprd ) ABDFZCDFZABCGDFLMHEBCDIJK $.
  $}

  $( A condition that implies inclusion in the union of two classes.
     (Contributed by NM, 23-Nov-2003.) $)
  ssun $p |- ( ( A C_ B \/ A C_ C ) -> A C_ ( B u. C ) ) $=
    ( wss cun ssun3 ssun4 jaoi ) ABDABCEDACDABCFACBGH $.

  $( Restricted existential quantification over union.  (Contributed by Jeff
     Madsen, 5-Jan-2011.) $)
  rexun $p |- ( E. x e. ( A u. B ) ph <->
                          ( E. x e. A ph \/ E. x e. B ph ) ) $=
    ( cun wrex cv wcel wa wo df-rex 19.43 elun anbi1i andir bitri exbii orbi12i
    wex 3bitr4i ) ABCDEZFBGZUAHZAIZBSZABCFZABDFZJZABUAKUBCHZAIZUBDHZAIZJZBSUJBS
    ZULBSZJUEUHUJULBLUDUMBUDUIUKJZAIUMUCUPAUBCDMNUIUKAOPQUFUNUGUOABCKABDKRTP $.

  $( Restricted quantification over a union.  (Contributed by Scott Fenton,
     12-Apr-2011.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
  ralunb $p |- ( A. x e. ( A u. B ) ph <->
                 ( A. x e. A ph /\ A. x e. B ph ) ) $=
    ( cv cun wcel wi wal wa wral wo elun imbi1i jaob bitri albii df-ral anbi12i
    19.26 3bitr4i ) BEZCDFZGZAHZBIZUBCGZAHZBIZUBDGZAHZBIZJZABUCKABCKZABDKZJUFUH
    UKJZBIUMUEUPBUEUGUJLZAHUPUDUQAUBCDMNUGAUJOPQUHUKBTPABUCRUNUIUOULABCRABDRSUA
    $.

  $( Restricted quantification over union.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  ralun $p |- ( ( A. x e. A ph /\ A. x e. B ph ) -> A. x e. ( A u. B ) ph ) $=
    ( cun wral wa ralunb biimpri ) ABCDEFABCFABDFGABCDHI $.

  ${
    elin2.x $e |- X = ( B i^i C ) $.
    $( Membership in a class defined as an intersection.  (Contributed by
       Stefan O'Rear, 29-Mar-2015.) $)
    elin2 $p |- ( A e. X <-> ( A e. B /\ A e. C ) ) $=
      ( wcel cin wa eleq2i elin bitri ) ADFABCGZFABFACFHDLAEIABCJK $.
  $}

  ${
    elin3.x $e |- X = ( ( B i^i C ) i^i D ) $.
    $( Membership in a class defined as a ternary intersection.  (Contributed
       by Stefan O'Rear, 29-Mar-2015.) $)
    elin3 $p |- ( A e. X <-> ( A e. B /\ A e. C /\ A e. D ) ) $=
      ( cin wcel wa w3a elin anbi1i elin2 df-3an 3bitr4i ) ABCGZHZADHZIABHZACHZ
      IZRIAEHSTRJQUARABCKLAPDEFMSTRNO $.
  $}

  ${
    $d A x $.  $d B x $.
    $( Commutative law for intersection of classes.  Exercise 7 of
       [TakeutiZaring] p. 17.  (Contributed by NM, 5-Aug-1993.) $)
    incom $p |- ( A i^i B ) = ( B i^i A ) $=
      ( vx cin cv wcel wa ancom elin 3bitr4i eqriv ) CABDZBADZCEZAFZNBFZGPOGNLF
      NMFOPHNABINBAIJK $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    ineqri.1 $e |- ( ( x e. A /\ x e. B ) <-> x e. C ) $.
    $( Inference from membership to intersection.  (Contributed by NM,
       5-Aug-1993.) $)
    ineqri $p |- ( A i^i B ) = C $=
      ( cin cv wcel wa elin bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for intersection of two classes.  (Contributed by NM,
       14-Dec-1993.) $)
    ineq1 $p |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) $=
      ( vx wceq cin cv wcel wa eleq2 anbi1d elin 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
  $}

  $( Equality theorem for intersection of two classes.  (Contributed by NM,
     26-Dec-1993.) $)
  ineq2 $p |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) $=
    ( wceq cin ineq1 incom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.

  $( Equality theorem for intersection of two classes.  (Contributed by NM,
     8-May-1994.) $)
  ineq12 $p |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) $=
    ( wceq cin ineq1 ineq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.

  ${
    ineq1i.1 $e |- A = B $.
    $( Equality inference for intersection of two classes.  (Contributed by NM,
       26-Dec-1993.) $)
    ineq1i $p |- ( A i^i C ) = ( B i^i C ) $=
      ( wceq cin ineq1 ax-mp ) ABEACFBCFEDABCGH $.

    $( Equality inference for intersection of two classes.  (Contributed by NM,
       26-Dec-1993.) $)
    ineq2i $p |- ( C i^i A ) = ( C i^i B ) $=
      ( wceq cin ineq2 ax-mp ) ABECAFCBFEDABCGH $.

    ${
      ineq12i.2 $e |- C = D $.
      $( Equality inference for intersection of two classes.  (Contributed by
         NM, 24-Jun-2004.)  (Proof shortened by Eric Schmidt, 26-Jan-2007.) $)
      ineq12i $p |- ( A i^i C ) = ( B i^i D ) $=
        ( wceq cin ineq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
    $}
  $}

  ${
    ineq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for intersection of two classes.  (Contributed by NM,
       10-Apr-1994.) $)
    ineq1d $p |- ( ph -> ( A i^i C ) = ( B i^i C ) ) $=
      ( wceq cin ineq1 syl ) ABCFBDGCDGFEBCDHI $.

    $( Equality deduction for intersection of two classes.  (Contributed by NM,
       10-Apr-1994.) $)
    ineq2d $p |- ( ph -> ( C i^i A ) = ( C i^i B ) ) $=
      ( wceq cin ineq2 syl ) ABCFDBGDCGFEBCDHI $.

    ${
      ineq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for intersection of two classes.  (Contributed by
         NM, 24-Jun-2004.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
      ineq12d $p |- ( ph -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
    $}

    ${
      ineqan12d.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for intersection of two classes.  (Contributed by
         NM, 7-Feb-2007.) $)
      ineqan12d $p |- ( ( ph /\ ps ) -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2an ) ACDIEFICEJDFJIBGHCDEFKL $.
    $}
  $}

  $( A frequently-used variant of subclass definition ~ df-ss .  (Contributed
     by NM, 10-Jan-2015.) $)
  dfss1 $p |- ( A C_ B <-> ( B i^i A ) = A ) $=
    ( wss cin wceq df-ss incom eqeq1i bitri ) ABCABDZAEBADZAEABFJKAABGHI $.

  $( Another definition of subclasshood.  Similar to ~ df-ss , ~ dfss , and
     ~ dfss1 .  (Contributed by David Moews, 1-May-2017.) $)
  dfss5 $p |- ( A C_ B <-> A = ( B i^i A ) ) $=
    ( wss cin wceq dfss1 eqcom bitri ) ABCBADZAEAIEABFIAGH $.

  ${
    $d A y $.  $d C y z $.  $d D y z $.  $d x y z $.
    $( Distribute proper substitution through an intersection relation.
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    csbing $p |- ( A e. B -> [_ A / x ]_ ( C i^i D ) =
                  ( [_ A / x ]_ C i^i [_ A / x ]_ D ) ) $=
      ( vy cv cin csb wceq csbeq1 ineq12d eqeq12d nfcsb1v csbeq1a csbief vtoclg
      vex nfin ) AFGZDEHZIZATDIZATEIZHZJABUAIZABDIZABEIZHZJFBCTBJZUBUFUEUIATBUA
      KUJUCUGUDUHATBDKATBEKLMATUAUEFRAUCUDATDNATENSAGTJDUCEUDATDOATEOLPQ $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    rabbi2dva.1 $e |- ( ( ph /\ x e. A ) -> ( x e. B <-> ps ) ) $.
    $( Deduction from a wff to a restricted class abstraction.  (Contributed by
       NM, 14-Jan-2014.) $)
    rabbi2dva $p |- ( ph -> ( A i^i B ) = { x e. A | ps } ) $=
      ( cin cv wcel crab wa cab elin abbi2i df-rab eqtr4i rabbidva syl5eq ) ADE
      GZCHZEIZCDJZBCDJSTDIUAKZCLUBUCCSTDEMNUACDOPAUABCDFQR $.
  $}

  ${
    $d x A $.
    $( Idempotent law for intersection of classes.  Theorem 15 of [Suppes]
       p. 26.  (Contributed by NM, 5-Aug-1993.) $)
    inidm $p |- ( A i^i A ) = A $=
      ( vx cv wcel anidm ineqri ) BAAABCADEF $.
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for intersection of classes.  Exercise 9 of
       [TakeutiZaring] p. 17.  (Contributed by NM, 3-May-1994.) $)
    inass $p |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) $=
      ( vx cin cv wcel wa anass elin anbi2i bitr4i anbi1i 3bitr4i ineqri ) DABE
      ZCABCEZEZDFZAGZSBGZHZSCGZHZTSQGZHZSPGZUCHSRGUDTUAUCHZHUFTUAUCIUEUHTSBCJKL
      UGUBUCSABJMSAQJNO $.
  $}


  $( A rearrangement of intersection.  (Contributed by NM, 21-Apr-2001.) $)
  in12 $p |- ( A i^i ( B i^i C ) ) = ( B i^i ( A i^i C ) ) $=
    ( cin incom ineq1i inass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH
    $.

  $( A rearrangement of intersection.  (Contributed by NM, 21-Apr-2001.)
     (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  in32 $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i B ) $=
    ( cin inass in12 incom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.

  $( A rearrangement of intersection.  (Contributed by NM, 27-Aug-2012.) $)
  in13 $p |- ( A i^i ( B i^i C ) ) = ( C i^i ( B i^i A ) ) $=
    ( cin in32 incom 3eqtr4i ) BCDZADBADZCDAHDCIDBCAEAHFCIFG $.

  $( A rearrangement of intersection.  (Contributed by NM, 27-Aug-2012.) $)
  in31 $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i B ) i^i A ) $=
    ( cin in12 incom 3eqtr4i ) CABDZDACBDZDHCDIADCABEHCFIAFG $.

  $( Rotate the intersection of 3 classes.  (Contributed by NM,
     27-Aug-2012.) $)
  inrot $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i A ) i^i B ) $=
    ( cin in31 in32 eqtri ) ABDCDCBDADCADBDABCECBAFG $.

  $( Rearrangement of intersection of 4 classes.  (Contributed by NM,
     21-Apr-2001.) $)
  in4 $p |- ( ( A i^i B ) i^i ( C i^i D ) ) =
            ( ( A i^i C ) i^i ( B i^i D ) ) $=
    ( cin in12 ineq2i inass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.

  $( Intersection distributes over itself.  (Contributed by NM, 6-May-1994.) $)
  inindi $p |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) $=
    ( cin inidm ineq1i in4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.

  $( Intersection distributes over itself.  (Contributed by NM,
     17-Aug-2004.) $)
  inindir $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i ( B i^i C ) ) $=
    ( cin inidm ineq2i in4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.

  $( A relationship between subclass and intersection.  Similar to Exercise 9
     of [TakeutiZaring] p. 18.  (Contributed by NM, 17-May-1994.) $)
  sseqin2 $p |- ( A C_ B <-> ( B i^i A ) = A ) $=
    ( dfss1 ) ABC $.

  ${
    $d x A $.  $d x B $.
    $( The intersection of two classes is a subset of one of them.  Part of
       Exercise 12 of [TakeutiZaring] p. 18.  (Contributed by NM,
       27-Apr-1994.) $)
    inss1 $p |- ( A i^i B ) C_ A $=
      ( vx cin cv wcel elin simplbi ssriv ) CABDZACEZJFKAFKBFKABGHI $.
  $}

  $( The intersection of two classes is a subset of one of them.  Part of
     Exercise 12 of [TakeutiZaring] p. 18.  (Contributed by NM,
     27-Apr-1994.) $)
  inss2 $p |- ( A i^i B ) C_ B $=
    ( cin incom inss1 eqsstr3i ) ABCBACBBADBAEF $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass of intersection.  Theorem 2.8(vii) of [Monk1] p. 26.
       (Contributed by NM, 15-Jun-2004.)  (Proof shortened by Andrew Salmon,
       26-Jun-2011.) $)
    ssin $p |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) $=
      ( vx cv wcel wi wal wa cin wss elin imbi2i albii jcab 19.26 3bitrri dfss2
      anbi12i 3bitr4i ) DEZAFZUABFZGZDHZUBUACFZGZDHZIZUBUABCJZFZGZDHZABKZACKZIA
      UJKUMUBUCUFIZGZDHUDUGIZDHUIULUQDUKUPUBUABCLMNUQURDUBUCUFONUDUGDPQUNUEUOUH
      DABRDACRSDAUJRT $.
  $}

  ${
    ssini.1 $e |- A C_ B $.
    ssini.2 $e |- A C_ C $.
    $( An inference showing that a subclass of two classes is a subclass of
       their intersection.  (Contributed by NM, 24-Nov-2003.) $)
    ssini $p |- A C_ ( B i^i C ) $=
      ( wss wa cin pm3.2i ssin mpbi ) ABFZACFZGABCHFLMDEIABCJK $.
  $}

  ${
    ssind.1 $e |- ( ph -> A C_ B ) $.
    ssind.2 $e |- ( ph -> A C_ C ) $.
    $( A deduction showing that a subclass of two classes is a subclass of
       their intersection.  (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    ssind $p |- ( ph -> A C_ ( B i^i C ) ) $=
      ( wss cin wa ssin biimpi syl2anc ) ABCGZBDGZBCDHGZEFMNIOBCDJKL $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Add right intersection to subclass relation.  (Contributed by NM,
       16-Aug-1994.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssrin $p |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) $=
      ( vx wss cin cv wcel wa ssel anim1d elin 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.

    $( Add left intersection to subclass relation.  (Contributed by NM,
       19-Oct-1999.) $)
    sslin $p |- ( A C_ B -> ( C i^i A ) C_ ( C i^i B ) ) $=
      ( wss cin ssrin incom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
  $}

  $( Intersection of subclasses.  (Contributed by NM, 5-May-2000.) $)
  ss2in $p |- ( ( A C_ B /\ C C_ D ) -> ( A i^i C ) C_ ( B i^i D ) ) $=
    ( wss cin ssrin sslin sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.

  $( Intersection preserves subclass relationship.  (Contributed by NM,
     14-Sep-1999.) $)
  ssinss1 $p |- ( A C_ C -> ( A i^i B ) C_ C ) $=
    ( cin wss wi inss1 sstr2 ax-mp ) ABDZAEACEJCEFABGJACHI $.

  $( Inclusion of an intersection of two classes.  (Contributed by NM,
     30-Oct-2014.) $)
  inss $p |- ( ( A C_ C \/ B C_ C ) -> ( A i^i B ) C_ C ) $=
    ( wss cin ssinss1 incom syl5eqss jaoi ) ACDABEZCDBCDZABCFKJBAECABGBACFHI $.

  $( Absorption law for union.  (Contributed by NM, 16-Apr-2006.) $)
  unabs $p |- ( A u. ( A i^i B ) ) = A $=
    ( cin wss cun wceq inss1 ssequn2 mpbi ) ABCZADAJEAFABGJAHI $.

  $( Absorption law for intersection.  (Contributed by NM, 16-Apr-2006.) $)
  inabs $p |- ( A i^i ( A u. B ) ) = A $=
    ( cun wss cin wceq ssun1 df-ss mpbi ) AABCZDAJEAFABGAJHI $.

  $( Negation of subclass expressed in terms of intersection and proper
     subclass.  (Contributed by NM, 30-Jun-2004.)  (Proof shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  nssinpss $p |- ( -. A C_ B <-> ( A i^i B ) C. A ) $=
    ( cin wne wss wa wn wpss inss1 biantrur df-ss necon3bbii df-pss 3bitr4i ) A
    BCZADZOAEZPFABEZGOAHQPABIJROAABKLOAMN $.

  $( Negation of subclass expressed in terms of proper subclass and union.
     (Contributed by NM, 15-Sep-2004.) $)
  nsspssun $p |- ( -. A C_ B <-> B C. ( A u. B ) ) $=
    ( wss wn cun wa wpss ssun2 biantrur ssid biantru unss bitri xchnxbir dfpss3
    bitr4i ) ABCZDBABEZCZRBCZDZFZBRGTUBQSUABAHIQQBBCZFTUCQBJKABBLMNBROP $.

  ${
    $d x A $.  $d x B $.
    $( Subclass defined in terms of class difference.  See comments under
       ~ dfun2 .  (Contributed by NM, 22-Mar-1998.)  (Proof shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    dfss4 $p |- ( A C_ B <-> ( B \ ( B \ A ) ) = A ) $=
      ( vx wss wceq cdif sseqin2 cv wcel wn wa eldif notbii anbi2i wi elin abai
      cin iman bitr4i 3bitri difeqri eqeq1i ) ABDBARZAEBBAFZFZAEABGUFUDACBUEUDC
      HZBIZUGUEIZJZKUHUHUGAIZJKZJZKZUGUDIZUJUMUHUIULUGBALMNUOUHUKKUHUHUKOZKUNUG
      BAPUHUKQUPUMUHUHUKSNUATUBUCT $.

    $( An alternate definition of the union of two classes in terms of class
       difference, requiring no dummy variables.  Along with ~ dfin2 and
       ~ dfss4 it shows we can express union, intersection, and subset directly
       in terms of the single "primitive" operation ` \ ` (class difference).
       (Contributed by NM, 10-Jun-2004.) $)
    dfun2 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) $=
      ( vx cvv cdif cv wcel wo wn wa eldif mpbiran anbi1i ioran 3bitr4i con2bii
      vex bitr4i uneqri ) CABDDAEZBEZEZCFZAGZUCBGZHZUCUAGZIZUCUBGZUGUFUCTGZUEIZ
      JUDIZUKJUGUFIUJULUKUJUCDGZULCQZUCDAKLMUCTBKUDUENOPUIUMUHUNUCDUAKLRS $.

    $( An alternate definition of the intersection of two classes in terms of
       class difference, requiring no dummy variables.  See comments under
       ~ dfun2 .  Another version is given by ~ dfin4 .  (Contributed by NM,
       10-Jun-2004.) $)
    dfin2 $p |- ( A i^i B ) = ( A \ ( _V \ B ) ) $=
      ( vx cvv cdif cv wcel wa vex eldif mpbiran con2bii anbi2i bitr4i ineqri
      wn ) CABADBEZEZCFZAGZSBGZHTSQGZPZHSRGUAUCTUBUAUBSDGUAPCISDBJKLMSAQJNO $.

    $( Difference with intersection.  Theorem 33 of [Suppes] p. 29.
       (Contributed by NM, 31-Mar-1998.)  (Proof shortened by Andrew Salmon,
       26-Jun-2011.) $)
    difin $p |- ( A \ ( A i^i B ) ) = ( A \ B ) $=
      ( vx cin cdif cv wcel wi wn pm4.61 anclb elin imbi2i iman 3bitr2i con2bii
      wa eldif 3bitr4i difeqri ) CAABDZABEZCFZAGZUCBGZHZIUDUEIQUDUCUAGZIQZUCUBG
      UDUEJUFUHUFUDUDUEQZHUDUGHUHIUDUEKUGUIUDUCABLMUDUGNOPUCABRST $.
  $}

  $( Union defined in terms of intersection (De Morgan's law).  Definition of
     union in [Mendelson] p. 231.  (Contributed by NM, 8-Jan-2002.) $)
  dfun3 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) $=
    ( cun cvv cdif cin dfun2 dfin2 ddif difeq2i eqtr2i eqtri ) ABCDDAEZBEZEDMDB
    EZFZEABGNPDPMDOEZENMOHQBMBIJKJL $.

  $( Intersection defined in terms of union (De Morgan's law.  Similar to
     Exercise 4.10(n) of [Mendelson] p. 231.  (Contributed by NM,
     8-Jan-2002.) $)
  dfin3 $p |- ( A i^i B ) = ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) $=
    ( cvv cdif cun cin ddif dfun2 difeq1i difeq2i eqtri dfin2 3eqtr4ri ) CCACBD
    ZDZDZDOCCADZNEZDABFOGRPCRCCQDZNDZDPQNHTOCSANAGIJKJABLM $.

  $( Alternate definition of the intersection of two classes.  Exercise 4.10(q)
     of [Mendelson] p. 231.  (Contributed by NM, 25-Nov-2003.) $)
  dfin4 $p |- ( A i^i B ) = ( A \ ( A \ B ) ) $=
    ( cin cdif wss wceq inss1 dfss4 mpbi difin difeq2i eqtr3i ) AAABCZDZDZMAABD
    ZDMAEOMFABGMAHINPAABJKL $.

  $( Intersection with universal complement.  Remark in [Stoll] p. 20.
     (Contributed by NM, 17-Aug-2004.) $)
  invdif $p |- ( A i^i ( _V \ B ) ) = ( A \ B ) $=
    ( cvv cdif cin dfin2 ddif difeq2i eqtri ) ACBDZEACJDZDABDAJFKBABGHI $.

  $( Intersection with class difference.  Theorem 34 of [Suppes] p. 29.
     (Contributed by NM, 17-Aug-2004.) $)
  indif $p |- ( A i^i ( A \ B ) ) = ( A \ B ) $=
    ( cdif cin dfin4 difeq2i difin 3eqtr2i ) AABCZDAAICZCAABDZCIAIEKJAABEFABGH
    $.

  $( Bring an intersection in and out of a class difference.  (Contributed by
     Jeff Hankins, 15-Jul-2009.) $)
  indif2 $p |- ( A i^i ( B \ C ) ) = ( ( A i^i B ) \ C ) $=
    ( cin cvv cdif inass invdif ineq2i 3eqtr3ri ) ABDZECFZDABLDZDKCFABCFZDABLGK
    CHMNABCHIJ $.

  $( Bring an intersection in and out of a class difference.  (Contributed by
     Mario Carneiro, 15-May-2015.) $)
  indif1 $p |- ( ( A \ C ) i^i B ) = ( ( A i^i B ) \ C ) $=
    ( cdif cin indif2 incom difeq1i 3eqtr3i ) BACDZEBAEZCDJBEABEZCDBACFBJGKLCBA
    GHI $.

  $( Commutation law for intersection and difference.  (Contributed by Scott
     Fenton, 18-Feb-2013.) $)
  indifcom $p |- ( A i^i ( B \ C ) ) = ( B i^i ( A \ C ) ) $=
    ( cin cdif incom difeq1i indif2 3eqtr4i ) ABDZCEBADZCEABCEDBACEDJKCABFGABCH
    BACHI $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distributive law for intersection over union.  Exercise 10 of
       [TakeutiZaring] p. 17.  (Contributed by NM, 30-Sep-2002.)  (Proof
       shortened by Andrew Salmon, 26-Jun-2011.) $)
    indi $p |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) $=
      ( vx cun cin cv wcel wo wa andi elin orbi12i bitr4i anbi2i 3bitr4i ineqri
      elun ) DABCEZABFZACFZEZDGZAHZUCBHZUCCHZIZJZUCTHZUCUAHZIZUDUCSHZJUCUBHUHUD
      UEJZUDUFJZIUKUDUEUFKUIUMUJUNUCABLUCACLMNULUGUDUCBCROUCTUARPQ $.

    $( Distributive law for union over intersection.  Exercise 11 of
       [TakeutiZaring] p. 17.  (Contributed by NM, 30-Sep-2002.)  (Proof
       shortened by Andrew Salmon, 26-Jun-2011.) $)
    undi $p |- ( A u. ( B i^i C ) ) = ( ( A u. B ) i^i ( A u. C ) ) $=
      ( vx cin cv wcel wo wa elin orbi2i ordi elun anbi12i bitr2i 3bitri uneqri
      cun ) DABCEZABRZACRZEZDFZAGZUCSGZHUDUCBGZUCCGZIZHUDUFHZUDUGHZIZUCUBGZUEUH
      UDUCBCJKUDUFUGLULUCTGZUCUAGZIUKUCTUAJUMUIUNUJUCABMUCACMNOPQ $.
  $}

  $( Distributive law for intersection over union.  Theorem 28 of [Suppes]
     p. 27.  (Contributed by NM, 30-Sep-2002.) $)
  indir $p |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) $=
    ( cun cin indi incom uneq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.

  $( Distributive law for union over intersection.  Theorem 29 of [Suppes]
     p. 27.  (Contributed by NM, 30-Sep-2002.) $)
  undir $p |- ( ( A i^i B ) u. C ) = ( ( A u. C ) i^i ( B u. C ) ) $=
    ( cin cun undi uncom ineq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Infer equality from equalities of union and intersection.  Exercise 20
       of [Enderton] p. 32 and its converse.  (Contributed by NM,
       10-Aug-2004.) $)
    unineq $p |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) )
                 <-> A = B ) $=
      ( vx cun wceq cin wa wcel wb eleq2 elin 3bitr3g iba bibi12d syl5ibr uncom
      wo elun biorf cv wi adantld eqeq12i sylbi adantrd pm2.61i eqrdv uneq1 jca
      wn ineq1 impbii ) ACEZBCEZFZACGZBCGZFZHZABFZUTDABDUAZCIZUTVBAIZVBBIZJZUBV
      CUSVFUPUSVFVCVDVCHZVEVCHZJUSVBUQIVBURIVGVHUQURVBKVBACLVBBCLMVCVDVGVEVHVCV
      DNVCVENOPUCVCUKZUPVFUSUPVFVIVCVDRZVCVERZJUPVBCAEZIZVBCBEZIZVJVKUPVLVNFVMV
      OJUNVLUOVNACQBCQUDVLVNVBKUEVBCASVBCBSMVIVDVJVEVKVCVDTVCVETOPUFUGUHVAUPUSA
      BCUIABCULUJUM $.
  $}

  $( Equality of union and intersection implies equality of their arguments.
     (Contributed by NM, 16-Apr-2006.)  (Proof shortened by Andrew Salmon,
     26-Jun-2011.) $)
  uneqin $p |- ( ( A u. B ) = ( A i^i B ) <-> A = B ) $=
    ( cun cin wceq wss wa eqimss unss ssin sstr sylbir simpl anim12i syl sylibr
    eqss unidm inidm eqtr4i uneq2 ineq2 3eqtr3a impbii ) ABCZABDZEZABEZUGABFZBA
    FZGZUHUGUEUFFZUKUEUFHULAUFFZBUFFZGUKABUFIUMUIUNUJUMAAFUIGUIAABJAABKLUNUJBBF
    ZGUJBABJUJUOMLNLOABQPUHAACZAADZUEUFUPAUQARASTABAUAABAUBUCUD $.

  $( Distributive law for class difference.  Theorem 39 of [Suppes] p. 29.
     (Contributed by NM, 17-Aug-2004.) $)
  difundi $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) i^i ( A \ C ) ) $=
    ( cun cdif cvv cin dfun3 difeq2i inindi dfin2 invdif ineq12i 3eqtr3i eqtri
    ) ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASGAQGZARGZGUAUDAQRJASKUEUBUFUCABL
    ACLMNO $.

  $( Distributive law for class difference.  (Contributed by NM,
     17-Aug-2004.) $)
  difundir $p |- ( ( A u. B ) \ C ) = ( ( A \ C ) u. ( B \ C ) ) $=
    ( cun cvv cdif cin indir invdif uneq12i 3eqtr3i ) ABDZECFZGAMGZBMGZDLCFACFZ
    BCFZDABMHLCINPOQACIBCIJK $.

  $( Distributive law for class difference.  Theorem 40 of [Suppes] p. 29.
     (Contributed by NM, 17-Aug-2004.) $)
  difindi $p |- ( A \ ( B i^i C ) ) = ( ( A \ B ) u. ( A \ C ) ) $=
    ( cin cdif cvv cun dfin3 difeq2i indi dfin2 invdif uneq12i 3eqtr3i eqtri )
    ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASDAQDZARDZGUAUDAQRJASKUEUBUFUCABLAC
    LMNO $.

  $( Distributive law for class difference.  (Contributed by NM,
     17-Aug-2004.) $)
  difindir $p |- ( ( A i^i B ) \ C ) = ( ( A \ C ) i^i ( B \ C ) ) $=
    ( cin cvv cdif inindir invdif ineq12i 3eqtr3i ) ABDZECFZDALDZBLDZDKCFACFZBC
    FZDABLGKCHMONPACHBCHIJ $.

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Distribute intersection over difference.  (Contributed by Scott Fenton,
       14-Apr-2011.) $)
    indifdir $p |- ( ( A \ B ) i^i C ) = ( ( A i^i C ) \ ( B i^i C ) ) $=
      ( vx cdif cin cv wcel wn wa pm3.24 intnan anass mtbir biorfi 3bitr4i elin
      wo eldif bitri an32 andi ianor anbi2i bitr4i anbi1i notbii anbi12i eqriv
      ) DABEZCFZACFZBCFZEZDGZAHZUOBHZIZJZUOCHZJZUPUTJZUQUTJZIZJZUOUKHZUOUNHZVAV
      BURUTIZRZJZVEVBURJZVKVBVHJZRVAVJVLVKVLUPUTVHJZJVMUPUTKLUPUTVHMNOUPURUTUAV
      BURVHUBPVDVIVBUQUTUCUDUEVFUOUJHZUTJVAUOUJCQVNUSUTUOABSUFTVGUOULHZUOUMHZIZ
      JVEUOULUMSVOVBVQVDUOACQVPVCUOBCQUGUHTPUI $.
  $}

  $( De Morgan's law for union.  Theorem 5.2(13) of [Stoll] p. 19.
     (Contributed by NM, 18-Aug-2004.) $)
  undm $p |- ( _V \ ( A u. B ) ) = ( ( _V \ A ) i^i ( _V \ B ) ) $=
    ( cvv difundi ) CABD $.

  $( De Morgan's law for intersection.  Theorem 5.2(13') of [Stoll] p. 19.
     (Contributed by NM, 18-Aug-2004.) $)
  indm $p |- ( _V \ ( A i^i B ) ) = ( ( _V \ A ) u. ( _V \ B ) ) $=
    ( cvv difindi ) CABD $.

  $( A relationship involving double difference and union.  (Contributed by NM,
     29-Aug-2004.) $)
  difun1 $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) $=
    ( cvv cdif cin cun inass invdif eqtr3i undm ineq2i difeq1i ) ADBEZFZCEZABCG
    ZEZABEZCEANDCEZFZFZPROTFUBPANTHOCIJADQEZFUBRUCUAABCKLAQIJJOSCABIMJ $.

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( An equality involving class union and class difference.  The first
       equality of Exercise 13 of [TakeutiZaring] p. 22.  (Contributed by Alan
       Sare, 17-Apr-2012.) $)
    undif3 $p |- ( A u. ( B \ C ) ) = ( ( A u. B ) \ ( C \ A ) ) $=
      ( vx cdif cun cv wcel wn wa elun pm4.53 eldif xchnxbir anbi12i orbi2i orc
      wo olc jca anim12i simpl adantr adantl ccase impbii 3bitri 3bitr4ri eqriv
      jaoi orcd ) DABCEZFZABFZCAEZEZDGZUNHZUQUOHZIZJUQAHZUQBHZRZUQCHZIZVARZJZUQ
      UPHUQUMHZURVCUTVFUQABKVDVAIJVFUSVDVALUQCAMNOUQUNUOMVHVAUQULHZRVAVBVEJZRZV
      GUQAULKVIVJVAUQBCMPVKVGVAVGVJVAVCVFVAVBQVAVESTVBVCVEVFVBVASVEVAQUAUJVAVEV
      BVAVKVAVEJVAVJVAVEUBUKVJVASVAVKVAVAVJQZUCVAVKVBVLUDUEUFUGUHUI $.

    $( Represent a set difference as an intersection with a larger difference.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    difin2 $p |- ( A C_ C -> ( A \ B ) = ( ( C \ B ) i^i A ) ) $=
      ( vx wss cdif cin cv wcel wn ssel pm4.71d anbi1d eldif anbi1i ancom anass
      wa elin bitr4i 3bitri 3bitr4g eqrdv ) ACEZDABFZCBFZAGZUDDHZAIZUHBIJZRUIUH
      CIZRZUJRZUHUEIUHUGIZUDUIULUJUDUIUKACUHKLMUHABNUNUHUFIZUIRUKUJRZUIRZUMUHUF
      ASUOUPUIUHCBNOUQUIUPRUMUPUIPUIUKUJQTUAUBUC $.
  $}

  $( Swap second and third argument of double difference.  (Contributed by NM,
     18-Aug-2004.) $)
  dif32 $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) $=
    ( cun cdif uncom difeq2i difun1 3eqtr3i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.

  $( Absorption-like law for class difference: you can remove a class only
     once.  (Contributed by FL, 2-Aug-2009.) $)
  difabs $p |- ( ( A \ B ) \ B ) = ( A \ B ) $=
    ( cun cdif difun1 unidm difeq2i eqtr3i ) ABBCZDABDZBDJABBEIBABFGH $.

  $( Two ways to express symmetric difference.  This theorem shows the
     equivalence of the definition of symmetric difference in [Stoll] p. 13 and
     the restated definition in Example 4.1 of [Stoll] p. 262.  (Contributed by
     NM, 17-Aug-2004.) $)
  symdif1 $p |- ( ( A \ B ) u. ( B \ A ) ) = ( ( A u. B ) \ ( A i^i B ) ) $=
    ( cun cin cdif difundir difin incom difeq2i eqtri uneq12i eqtr2i ) ABCABDZE
    AMEZBMEZCABEZBAEZCABMFNPOQABGOBBADZEQMRBABHIBAGJKL $.

  ${
    $d x A $.  $d x B $.
    $( Two ways to express symmetric difference.  (Contributed by NM,
       17-Aug-2004.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    symdif2 $p |- ( ( A \ B ) u. ( B \ A ) ) =
                  { x | -. ( x e. A <-> x e. B ) } $=
      ( cv wcel wb wn cdif cun wo wa eldif orbi12i elun xor 3bitr4i abbi2i ) AD
      ZBEZRCEZFGZABCHZCBHZIZRUBEZRUCEZJSTGKZTSGKZJRUDEUAUEUGUFUHRBCLRCBLMRUBUCN
      STOPQ $.
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.
    $( Union of two class abstractions.  (Contributed by NM, 29-Sep-2002.)
       (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    unab $p |- ( { x | ph } u. { x | ps } ) = { x | ( ph \/ ps ) } $=
      ( vy cab wo wsb cv wcel sbor df-clab orbi12i 3bitr4ri uneqri ) DACEZBCEZA
      BFZCEZQCDGACDGZBCDGZFDHZRIUAOIZUAPIZFABCDJQDCKUBSUCTADCKBDCKLMN $.

    $( Intersection of two class abstractions.  (Contributed by NM,
       29-Sep-2002.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    inab $p |- ( { x | ph } i^i { x | ps } ) = { x | ( ph /\ ps ) } $=
      ( vy cab wa wsb cv wcel sban df-clab anbi12i 3bitr4ri ineqri ) DACEZBCEZA
      BFZCEZQCDGACDGZBCDGZFDHZRIUAOIZUAPIZFABCDJQDCKUBSUCTADCKBDCKLMN $.

    $( Difference of two class abstractions.  (Contributed by NM,
       23-Oct-2004.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    difab $p |- ( { x | ph } \ { x | ps } ) = { x | ( ph /\ -. ps ) } $=
      ( vy cab wn wcel wsb df-clab sban bicomi xchbinxr anbi12i 3bitrri difeqri
      wa cv sbn ) DACEZBCEZABFZPZCEZDQZUCGUBCDHACDHZUACDHZPUDSGZUDTGZFZPUBDCIAU
      ACDJUEUGUFUIUGUEADCIKUFBCDHUHBCDRBDCILMNO $.

    $( Complement of a class abstraction.  (Contributed by SF, 12-Jan-2015.) $)
    complab $p |- ~ { x | ph } = { x | -. ph } $=
      ( vy cab ccompl wn wcel wsb df-clab notbii sbn bitr4i vex elcompl 3bitr4i
      cv eqriv ) CABDZEZAFZBDZCPZRGZFZTBCHZUBSGUBUAGUDABCHZFUEUCUFACBIJABCKLUBR
      CMNTCBIOQ $.


  $}

  $( A class builder defined by a negation.  (Contributed by FL,
     18-Sep-2010.) $)
  notab $p |- { x | -. ph } = ( _V \ { x | ph } ) $=
    ( cv cvv wcel wn wa cab cdif crab df-rab rabab eqtr3i difab abid2 difeq1i )
    BCDEZAFZGBHZRBHZDABHZIZRBDJSTRBDKRBLMQBHZUAISUBQABNUCDUABDOPMM $.

  $( Union of two restricted class abstractions.  (Contributed by NM,
     25-Mar-2004.) $)
  unrab $p |- ( { x e. A | ph } u. { x e. A | ps } ) =
              { x e. A | ( ph \/ ps ) } $=
    ( crab cun cv wcel wa cab wo df-rab uneq12i unab andi abbii eqtr4i ) ACDEZB
    CDEZFCGDHZAIZCJZTBIZCJZFZABKZCDEZRUBSUDACDLBCDLMUGTUFIZCJZUEUFCDLUEUAUCKZCJ
    UIUAUCCNUHUJCTABOPQQQ $.

  $( Intersection of two restricted class abstractions.  (Contributed by NM,
     1-Sep-2006.) $)
  inrab $p |- ( { x e. A | ph } i^i { x e. A | ps } ) =
              { x e. A | ( ph /\ ps ) } $=
    ( crab cin cv wcel wa cab df-rab ineq12i inab anandi abbii eqtr4i ) ACDEZBC
    DEZFCGDHZAIZCJZSBIZCJZFZABIZCDEZQUARUCACDKBCDKLUFSUEIZCJZUDUECDKUDTUBIZCJUH
    TUBCMUGUICSABNOPPP $.

  ${
    $d x B $.
    $( Intersection with a restricted class abstraction.  (Contributed by NM,
       19-Nov-2007.) $)
    inrab2 $p |- ( { x e. A | ph } i^i B ) = { x e. ( A i^i B ) | ph } $=
      ( crab cin cv wcel cab df-rab abid2 eqcomi ineq12i inab elin anbi1i bitri
      wa an32 eqtr4i abbii ) ABCEZDFBGZCHZARZBIZUCDHZBIZFZABCDFZEZUBUFDUHABCJUH
      DBDKLMUKUCUJHZARZBIZUIABUJJUIUEUGRZBIUNUEUGBNUMUOBUMUDUGRZARUOULUPAUCCDOP
      UDUGASQUATTT $.
  $}

  $( Difference of two restricted class abstractions.  (Contributed by NM,
     23-Oct-2004.) $)
  difrab $p |- ( { x e. A | ph } \ { x e. A | ps } ) =
              { x e. A | ( ph /\ -. ps ) } $=
    ( crab cdif cv wcel wa wn df-rab difeq12i difab anass simpr con3i anim2i wi
    cab eqtr4i pm3.2 adantr con3d imdistani impbii bitr3i abbii ) ACDEZBCDEZFCG
    DHZAIZCSZUJBIZCSZFZABJZIZCDEZUHULUIUNACDKBCDKLURUJUQIZCSZUOUQCDKUOUKUMJZIZC
    SUTUKUMCMUSVBCUSUKUPIZVBUJAUPNVCVBUPVAUKUMBUJBOPQUKVAUPUKBUMUJBUMRAUJBUAUBU
    CUDUEUFUGTTT $.

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of restricted class abstraction.  (Contributed by
       NM, 20-Sep-2003.) $)
    dfrab2 $p |- { x e. A | ph } = ( { x | ph } i^i A ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i eqtr3i incom 3eqtri )
      ABCDBECFZAGBHZCABHZIZSCIABCJQBHZSIRTQABKUACSBCLMNCSOP $.

    $( Alternate definition of restricted class abstraction.  (Contributed by
       Mario Carneiro, 8-Sep-2013.) $)
    dfrab3 $p |- { x e. A | ph } = ( A i^i { x | ph } ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i 3eqtr2i ) ABCDBECFZAGB
      HOBHZABHZICQIABCJOABKPCQBCLMN $.

    $( Complementation of restricted class abstractions.  (Contributed by Mario
       Carneiro, 3-Sep-2015.) $)
    notrab $p |- ( A \ { x e. A | ph } ) = { x e. A | -. ph } $=
      ( cv wcel cab cdif wn crab difab cin difin dfrab3 difeq2i difeq1i 3eqtr4i
      wa abid2 df-rab ) BDCEZBFZABFZGZTAHZQBFCABCIZGZUDBCITABJCCUBKZGCUBGUFUCCU
      BLUEUGCABCMNUACUBBCROPUDBCSP $.

    $( Restricted class abstraction with a common superset.  (Contributed by
       Stefan O'Rear, 12-Sep-2015.)  (Proof shortened by Mario Carneiro,
       8-Nov-2015.) $)
    dfrab3ss $p |- ( A C_ B -> { x e. A | ph } = ( A i^i { x e. B | ph } ) ) $=
      ( wss cab crab wceq df-ss ineq1 eqcomd sylbi dfrab3 ineq2i eqtr4i 3eqtr4g
      cin inass ) CDEZCABFZQZCDQZTQZABCGCABDGZQZSUBCHZUAUCHCDIUFUCUAUBCTJKLABCM
      UECDTQZQUCUDUGCABDMNCDTROP $.
  $}

  $( Abstraction restricted to a union.  (Contributed by Stefan O'Rear,
     5-Feb-2015.) $)
  rabun2 $p |- { x e. ( A u. B ) | ph } =
      ( { x e. A | ph } u. { x e. B | ph } ) $=
    ( cun crab cv wcel wa cab df-rab uneq12i elun anbi1i andir bitri abbii unab
    wo eqtr4i ) ABCDEZFBGZUAHZAIZBJZABCFZABDFZEZABUAKUHUBCHZAIZBJZUBDHZAIZBJZEZ
    UEUFUKUGUNABCKABDKLUEUJUMSZBJUOUDUPBUDUIULSZAIUPUCUQAUBCDMNUIULAOPQUJUMBRTT
    T $.

  ${
    $d x A $.  $d x B $.
    $( Transfer uniqueness to a smaller subclass.  (Contributed by NM,
       20-Oct-2005.) $)
    reuss2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\
                 ( E. x e. A ph /\ E! x e. B ps ) ) -> E! x e. A ph ) $=
      ( wrex wreu wa wss wi wral wcel wex weu df-rex df-reu anbi12i wal sylan2b
      cv wmo df-ral ssel prth sylan exp4b com23 a2d imp4a alimdv imp euimmo syl
      eu5 simplbi2 syl9 imp32 sylibr ) ACDFZBCEGZHDEIZABJZCDKZHZCTZDLZAHZCMZVEE
      LZBHZCNZHZACDGZUSVHUTVKACDOBCEPQVDVLHVGCNZVMVDVHVKVNVDVKVGCUAZVHVNVDVGVJJ
      ZCRZVKVOJVCVAVFVBJZCRZVQVBCDUBVAVSVQVAVRVPCVAVRVFAVJVAVFVBAVJJZVAVBVFVTVA
      VBVFAVJVAVFVIJVBVPDEVEUCVFVIABUDUEUFUGUHUIUJUKSVGVJCULUMVNVHVOVGCUNUOUPUQ
      ACDPURS $.

    $( Transfer uniqueness to a smaller subclass.  (Contributed by NM,
       21-Aug-1999.) $)
    reuss $p |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) ->
                E! x e. A ph ) $=
      ( wss wrex wreu wi wral wa cv wcel idd rgen reuss2 mpanl2 3impb ) CDEZABC
      FZABDGZABCGZRAAHZBCISTJUAUBBCBKCLAMNAABCDOPQ $.

    $( Transfer uniqueness to a smaller class.  (Contributed by NM,
       21-Oct-2005.) $)
    reuun1 $p |- ( ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) )
                 -> E! x e. A ph ) $=
      ( cun wss wo wi wral wrex wreu wa ssun1 orc rgenw reuss2 mpanl12 ) DDEFZG
      AABHZIZCDJACDKTCSLMACDLDENUACDABOPATCDSQR $.

    $( Transfer uniqueness to a smaller or larger class.  (Contributed by NM,
       21-Oct-2005.) $)
    reuun2 $p |- ( -. E. x e. B ph ->
             ( E! x e. ( A u. B ) ph <-> E! x e. A ph ) ) $=
      ( wrex wn cv wcel wa wo weu cun wreu wex df-rex euor2 sylnbi df-reu bitri
      wb elun anbi1i andir orcom eubii 3bitr4g ) ABDEZFBGZDHZAIZUHCHZAIZJZBKZUL
      BKZABCDLZMZABCMUGUJBNUNUOTABDOUJULBPQUQUHUPHZAIZBKUNABUPRUSUMBUSUKUIJZAIZ
      UMURUTAUHCDUAUBVAULUJJUMUKUIAUCULUJUDSSUESABCRUF $.

    $( Restricted uniqueness "picks" a member of a subclass.  (Contributed by
       NM, 21-Aug-1999.) $)
    reupick $p |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) ->
                  ( x e. A <-> x e. B ) ) $=
      ( wss wrex wreu wa cv wcel wi ssel ad2antrr wex weu df-rex df-reu anbi12i
      ancrd anim1d an32 syl6ib eximdv eupick ex syl9 com23 imp32 exp3acom23 imp
      sylan2b impbid ) CDEZABCFZABDGZHZHZAHBIZCJZURDJZUMUSUTKUPACDURLZMUQAUTUSK
      UQUTAUSUPUMUSAHZBNZUTAHZBOZHVDUSKZUNVCUOVEABCPABDQRUMVCVEVFUMVEVCVFUMVCVD
      USHZBNZVEVFUMVBVGBUMVBUTUSHZAHVGUMUSVIAUMUSUTVASTUTUSAUAUBUCVEVHVFVDUSBUD
      UEUFUGUHUKUIUJUL $.

    $( Restricted uniqueness "picks" a member of a subclass.  (Contributed by
       Mario Carneiro, 19-Nov-2016.) $)
    reupick3 $p  |- ( ( E! x e. A ph /\ E. x e. A ( ph /\ ps ) /\ x e. A ) ->
       ( ph -> ps ) ) $=
      ( wreu wa wrex cv wcel wi weu wex df-reu df-rex anass exbii bitr4i eupick
      syl2anb exp3a 3impia ) ACDEZABFZCDGZCHDIZABJUBUDFUEABUBUEAFZCKUFBFZCLZUFB
      JUDACDMUDUEUCFZCLUHUCCDNUGUICUEABOPQUFBCRSTUA $.

    $( Restricted uniqueness "picks" a member of a subclass.  (Contributed by
       Mario Carneiro, 15-Dec-2013.)  (Proof shortened by Mario Carneiro,
       19-Nov-2016.) $)
    reupick2 $p |- ( ( ( A. x e. A ( ps -> ph ) /\ E. x e. A ps /\
                       E! x e. A ph ) /\ x e. A ) -> ( ph <-> ps ) ) $=
      ( wi wral wrex wreu w3a cv wcel ancr ralimi rexim syl reupick3 3exp com12
      wa syl6 3imp1 rsp 3ad2ant1 imp impbid ) BAEZCDFZBCDGZACDHZIZCJDKZSABUGUHU
      IUKABEZUGUHABSZCDGZUIUKULEZEUGBUMEZCDFUHUNEUFUPCDBALMBUMCDNOUIUNUOUIUNUKU
      LABCDPQRTUAUJUKUFUGUHUKUFEUIUFCDUBUCUDUE $.
  $}


  $( Symmetric difference commutes.  (Contributed by SF, 11-Jan-2015.) $)
  symdifcom $p |- ( A (+) B ) = ( B (+) A ) $=
    ( cdif cun csymdif uncom df-symdif 3eqtr4i ) ABCZBACZDJIDABEBAEIJFABGBAGH
    $.
    $( [11-Jan-2015] $)

  $( Two classes are equal iff their complements are equal.  (Contributed by
     SF, 11-Jan-2015.) $)
  compleqb $p |- ( A = B <-> ~ A = ~ B ) $=
    ( wceq ccompl compleq dblcompl 3eqtr3g impbii ) ABCADZBDZCZABEKIDJDABIJEAFB
    FGH $.
    $( [11-Jan-2015] $)


  $( Definition of intersection in terms of union.  (Contributed by ?who?,
     12-Jan-2015.) $)
  dfin5 $p |- ( A i^i B ) = ~ ( ~ A u. ~ B ) $=
    ( ccompl cnin cun cin dblcompl nineq12i compleqi df-un df-in 3eqtr4ri ) ACZ
    CZBCZCZDZCABDZCMOEZCABFQRNAPBAGBGHISQMOJIABKL $.
    $( [12-Jan-2015] $)

  $( Definition of union in terms of intersection.  (Contributed by ?who?,
     12-Jan-2015.) $)
  dfun4 $p |- ( A u. B ) = ~ ( ~ A i^i ~ B ) $=
    ( ccompl cin cun dfin5 compleqi dblcompl uneq12i 3eqtrri ) ACZBCZDZCKCZLCZE
    ZCZCPABEMQKLFGPHNAOBAHBHIJ $.
    $( [12-Jan-2015] $)

  $( Intersection of two complements is equal to the complement of a union.
     (Contributed by ?who?, 12-Jan-2015.) $)
  iunin $p |- ~ ( A u. B ) = ( ~ A i^i ~ B ) $=
    ( ccompl cin cun dfin5 dblcompl uneq12i compleqi eqtr2i ) ACZBCZDKCZLCZEZCA
    BEZCKLFOPMANBAGBGHIJ $.
    $( [12-Jan-2015] $)

  $( Complement of intersection is equal to union of complements.  (Contributed
     by ?who?, 12-Jan-2015.) $)
  iinun $p |- ~ ( A i^i B ) = ( ~ A u. ~ B ) $=
    ( ccompl cun cin dfun4 dblcompl ineq12i compleqi eqtr2i ) ACZBCZDKCZLCZEZCA
    BEZCKLFOPMANBAGBGHIJ $.
    $( [12-Jan-2015] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           The empty set
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the empty or null set. $)
  $c (/) $. $( null set $)

  $( Extend class notation to include the empty set. $)
  c0 $a class (/) $.

  $( Define the empty set.  Special case of Exercise 4.10(o) of [Mendelson]
     p. 231.  For a more traditional definition, but requiring a dummy
     variable, see ~ dfnul2 .  (Contributed by NM, 5-Aug-1993.) $)
  df-nul $a |- (/) = ( _V \ _V ) $.

  $( Alternate definition of the empty set.  Definition 5.14 of [TakeutiZaring]
     p. 20.  (Contributed by NM, 26-Dec-1996.) $)
  dfnul2 $p |- (/) = { x | -. x = x } $=
    ( cv wceq wn c0 wcel cvv cdif wa df-nul eleq2i eldif eqid pm3.24 2th 3bitri
    con2bii abbi2i ) ABZSCZDZAESEFSGGHZFSGFZUCDIZUAEUBSJKSGGLTUDTUDDSMUCNOQPR
    $.

  $( Alternate definition of the empty set.  (Contributed by NM,
     25-Mar-2004.) $)
  dfnul3 $p |- (/) = { x e. A | -. x e. A } $=
    ( cv wceq wn cab wcel wa crab pm3.24 eqid 2th con1bii dfnul2 df-rab 3eqtr4i
    c0 abbii ) ACZSDZEZAFSBGZUBEZHZAFQUCABIUAUDAUDTUDETUBJSKLMRANUCABOP $.

  $( The empty set has no elements.  Theorem 6.14 of [Quine] p. 44.
     (Contributed by NM, 5-Aug-1993.)  (Proof shortened by Mario Carneiro,
     1-Sep-2015.) $)
  noel $p |- -. A e. (/) $=
    ( c0 wcel cvv cdif eldifi eldifn pm2.65i df-nul eleq2i mtbir ) ABCADDEZCZMA
    DCADDFADDGHBLAIJK $.

  $( If a set has elements, it is not empty.  (Contributed by NM,
     31-Dec-1993.) $)
  n0i $p |- ( B e. A -> -. A = (/) ) $=
    ( c0 wceq wcel noel eleq2 mtbiri con2i ) ACDZBAEZJKBCEBFACBGHI $.

  $( If a set has elements, it is not empty.  (Contributed by NM,
     31-Dec-1993.) $)
  ne0i $p |- ( B e. A -> A =/= (/) ) $=
    ( wcel c0 wceq wn wne n0i df-ne sylibr ) BACADEFADGABHADIJ $.

  $( The universal class is not equal to the empty set.  (Contributed by NM,
     11-Sep-2008.) $)
  vn0 $p |- _V =/= (/) $=
    ( vx cv cvv wcel c0 wne vex ne0i ax-mp ) ABZCDCEFAGCJHI $.

  ${
    $d x y $.  $d y A $.
    n0f.1 $e |- F/_ x A $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20.  This version of ~ n0 requires only that ` x `
       not be free in, rather than not occur in, ` A ` .  (Contributed by NM,
       17-Oct-2003.) $)
    n0f $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( c0 wne cv wcel wn wal wex wceq wb nfcv cleqf noel nbn bitr4i necon3abii
      albii df-ex ) BDEAFZBGZHZAIZHUBAJUDBDBDKUBUADGZLZAIUDABDCADMNUCUFAUEUBUAO
      PSQRUBATQ $.
  $}

  ${
    $d x y A $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20.  (Contributed by NM, 29-Sep-2006.) $)
    n0 $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( nfcv n0f ) ABABCD $.

    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20.  (Contributed by NM, 5-Aug-1993.) $)
    neq0 $p |- ( -. A = (/) <-> E. x x e. A ) $=
      ( c0 wceq wn wne cv wcel wex df-ne n0 bitr3i ) BCDEBCFAGBHAIBCJABKL $.
  $}

  ${
    $d x A $.  $d x ph $.
    reximdva0.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Restricted existence deduced from non-empty class.  (Contributed by NM,
       1-Feb-2012.) $)
    reximdva0 $p |- ( ( ph /\ A =/= (/) ) -> E. x e. A ps ) $=
      ( c0 wne wa cv wcel wex wrex n0 ex ancld eximdv imp sylan2b df-rex sylibr
      ) ADFGZHCIDJZBHZCKZBCDLUAAUBCKZUDCDMAUEUDAUBUCCAUBBAUBBENOPQRBCDST $.
  $}

  ${
    $d A x $.
    $( A case of equivalence of "at most one" and "only one".  (Contributed by
       FL, 6-Dec-2010.) $)
    n0moeu $p |- ( A =/= (/) -> ( E* x x e. A <-> E! x x e. A ) ) $=
      ( c0 wne cv wcel wmo wex wa weu n0 biimpi biantrurd eu5 syl6bbr ) BCDZAEB
      FZAGZQAHZRIQAJPSRPSABKLMQANO $.
  $}

  $( Vacuous existential quantification is false.  (Contributed by NM,
     15-Oct-2003.) $)
  rex0 $p |- -. E. x e. (/) ph $=
    ( c0 cv wcel wn noel pm2.21i nrex ) ABCBDZCEAFJGHI $.

  ${
    $d x A $.
    $( The empty set has no elements.  Theorem 2 of [Suppes] p. 22.
       (Contributed by NM, 29-Aug-1993.) $)
    eq0 $p |- ( A = (/) <-> A. x -. x e. A ) $=
      ( c0 wceq cv wcel wn wal wex neq0 df-ex bitri con4bii ) BCDZAEBFZGAHZNGOA
      IPGABJOAKLM $.

    $( The universe contains every set.  (Contributed by NM, 11-Sep-2006.) $)
    eqv $p |- ( A = _V <-> A. x x e. A ) $=
      ( cvv wceq cv wcel wb wal dfcleq vex tbt albii bitr4i ) BCDAEZBFZNCFZGZAH
      OAHABCIOQAPOAJKLM $.
  $}

  ${
    $d x A $.  $d x y $.
    $( Membership of the empty set in another class.  (Contributed by NM,
       29-Jun-2004.) $)
    0el $p |- ( (/) e. A <-> E. x e. A A. y -. y e. x ) $=
      ( c0 wcel cv wceq wrex wn wal risset eq0 rexbii bitri ) DCEAFZDGZACHBFOEI
      BJZACHADCKPQACBOLMN $.
  $}

  ${
    $d x ph $.
    $( The class builder of a wff not containing the abstraction variable is
       either the universal class or the empty set.  (Contributed by Mario
       Carneiro, 29-Aug-2013.) $)
    abvor0 $p |- ( { x | ph } = _V \/ { x | ph } = (/) ) $=
      ( cab cvv wceq c0 wn cv wcel vex a1i 2thd abbi1dv con3i noel 2falsed orri
      id syl ) ABCZDEZTFEZUAGAGZUBAUAAABDAABHZDIZARUEABJKLMNUCABFUCAUDFIZUCRUFG
      UCUDOKPMSQ $.
  $}

  ${
    $d x y $.  $d y ph $.
    $( Nonempty class abstraction.  (Contributed by NM, 26-Dec-1996.)  (Proof
       shortened by Mario Carneiro, 11-Nov-2016.) $)
    abn0 $p |- ( { x | ph } =/= (/) <-> E. x ph ) $=
      ( cab c0 wne cv wcel wex nfab1 n0f abid exbii bitri ) ABCZDEBFNGZBHABHBNA
      BIJOABABKLM $.
  $}

  $( Empty class abstraction.  (Contributed by SF, 5-Jan-2018.) $)
  ab0 $p |- ( { x | ph } = (/) <-> A. x -. ph ) $=
    ( cab c0 wceq wn wal wne wex abn0 df-ne df-ex 3bitr3i con4bii ) ABCZDEZAFBG
    ZODHABIPFQFABJODKABLMN $.

  $( Non-empty restricted class abstraction.  (Contributed by NM,
     29-Aug-1999.) $)
  rabn0 $p |- ( { x e. A | ph } =/= (/) <-> E. x e. A ph ) $=
    ( cv wcel wa cab c0 wne wex crab wrex abn0 df-rab neeq1i df-rex 3bitr4i ) B
    DCEAFZBGZHIRBJABCKZHIABCLRBMTSHABCNOABCPQ $.

  $( Any restricted class abstraction restricted to the empty set is empty.
     (Contributed by NM, 15-Oct-2003.)  (Proof shortened by Andrew Salmon,
     26-Jun-2011.) $)
  rab0 $p |- { x e. (/) | ph } = (/) $=
    ( cv c0 wcel wa cab wceq wn crab equid noel intnanr 2th abbii df-rab dfnul2
    con2bii 3eqtr4i ) BCZDEZAFZBGTTHZIZBGABDJDUBUDBUCUBUCUBIBKUAATLMNROABDPBQS
    $.

  $( Condition for a restricted class abstraction to be empty.  (Contributed by
     Jeff Madsen, 7-Jun-2010.) $)
  rabeq0 $p |- ( { x e. A | ph } = (/) <-> A. x e. A -. ph ) $=
    ( wn wral wrex crab c0 wceq ralnex rabn0 necon1bbii bitr2i ) ADBCEABCFZDABC
    GZHIABCJNOHABCKLM $.

  ${
    $d A x $.
    $( Law of excluded middle, in terms of restricted class abstractions.
       (Contributed by Jeff Madsen, 20-Jun-2011.) $)
    rabxm $p |- A = ( { x e. A | ph } u. { x e. A | -. ph } ) $=
      ( wn wo crab cun wceq rabid2 cv wcel exmid a1i mprgbir unrab eqtr4i ) CAA
      DZEZBCFZABCFQBCFGCSHRBCRBCIRBJCKALMNAQBCOP $.

    $( Law of noncontradiction, in terms of restricted class abstractions.
       (Contributed by Jeff Madsen, 20-Jun-2011.) $)
    rabnc $p |- ( { x e. A | ph } i^i { x e. A | -. ph } ) = (/) $=
      ( crab wn cin wa c0 inrab wceq rabeq0 cv wcel pm3.24 a1i mprgbir eqtri )
      ABCDAEZBCDFARGZBCDZHARBCITHJSEZBCSBCKUABLCMANOPQ $.
  $}

  ${
    $d x A $.
    $( The union of a class with the empty set is itself.  Theorem 24 of
       [Suppes] p. 27.  (Contributed by NM, 5-Aug-1993.) $)
    un0 $p |- ( A u. (/) ) = A $=
      ( vx c0 cv wcel wo noel biorfi bicomi uneqri ) BACABDZAEZLKCEZFMLKGHIJ $.

    $( The intersection of a class with the empty set is the empty set.
       Theorem 16 of [Suppes] p. 26.  (Contributed by NM, 5-Aug-1993.) $)
    in0 $p |- ( A i^i (/) ) = (/) $=
      ( vx c0 cv wcel wa noel bianfi bicomi ineqri ) BACCBDZCEZKAEZLFLMKGHIJ $.
  $}

  $( The intersection of a class with the universal class is itself.  Exercise
     4.10(k) of [Mendelson] p. 231.  (Contributed by NM, 17-May-1998.) $)
  inv1 $p |- ( A i^i _V ) = A $=
    ( cvv cin inss1 ssid ssv ssini eqssi ) ABCAABDAABAEAFGH $.

  $( The union of a class with the universal class is the universal class.
     Exercise 4.10(l) of [Mendelson] p. 231.  (Contributed by NM,
     17-May-1998.) $)
  unv $p |- ( A u. _V ) = _V $=
    ( cvv cun ssv ssun2 eqssi ) ABCZBGDBAEF $.

  ${
    $d A x $.
    $( The null set is a subset of any class.  Part of Exercise 1 of
       [TakeutiZaring] p. 22.  (Contributed by NM, 5-Aug-1993.) $)
    0ss $p |- (/) C_ A $=
      ( vx c0 cv wcel noel pm2.21i ssriv ) BCABDZCEIAEIFGH $.
  $}

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23 and its
     converse.  (Contributed by NM, 17-Sep-2003.) $)
  ss0b $p |- ( A C_ (/) <-> A = (/) ) $=
    ( c0 wceq wss 0ss eqss mpbiran2 bicomi ) ABCZABDZIJBADAEABFGH $.

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23.
     (Contributed by NM, 13-Aug-1994.) $)
  ss0 $p |- ( A C_ (/) -> A = (/) ) $=
    ( c0 wss wceq ss0b biimpi ) ABCABDAEF $.

  $( A subclass of an empty class is empty.  (Contributed by NM, 7-Mar-2007.)
     (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  sseq0 $p |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) $=
    ( c0 wceq wss sseq2 ss0 syl6bi impcom ) BCDZABEZACDZJKACELBCAFAGHI $.

  $( A class with a nonempty subclass is nonempty.  (Contributed by NM,
     17-Feb-2007.) $)
  ssn0 $p |- ( ( A C_ B /\ A =/= (/) ) -> B =/= (/) ) $=
    ( wss c0 wne wceq sseq0 ex necon3d imp ) ABCZADEBDEKBDADKBDFADFABGHIJ $.

  ${
    abf.1 $e |- -. ph $.
    $( A class builder with a false argument is empty.  (Contributed by NM,
       20-Jan-2012.) $)
    abf $p |- { x | ph } = (/) $=
      ( cab c0 wss wceq cv wcel pm2.21i abssi ss0 ax-mp ) ABDZEFNEGABEABHEICJKN
      LM $.
  $}

  ${
    $d x A $.  $d x ph $.
    eq0rdv.1 $e |- ( ph -> -. x e. A ) $.
    $( Deduction rule for equality to the empty set.  (Contributed by NM,
       11-Jul-2014.) $)
    eq0rdv $p |- ( ph -> A = (/) ) $=
      ( c0 wss wceq cv wcel pm2.21d ssrdv ss0 syl ) ACEFCEGABCEABHZCINEIDJKCLM
      $.
  $}

  $( Two classes are empty iff their union is empty.  (Contributed by NM,
     11-Aug-2004.) $)
  un00 $p |- ( ( A = (/) /\ B = (/) ) <-> ( A u. B ) = (/) ) $=
    ( c0 wceq wa cun uneq12 un0 syl6eq wss ssun1 sseq2 mpbii sylib ssun2 impbii
    ss0b jca ) ACDZBCDZEZABFZCDZUAUBCCFCACBCGCHIUCSTUCACJZSUCAUBJUDABKUBCALMAQN
    UCBCJZTUCBUBJUEBAOUBCBLMBQNRP $.

  $( Only the universal class has the universal class as a subclass.
     (Contributed by NM, 17-Sep-2003.)  (Proof shortened by Andrew Salmon,
     26-Jun-2011.) $)
  vss $p |- ( _V C_ A <-> A = _V ) $=
    ( cvv wss wa wceq ssv biantrur eqss bitr4i ) BACZABCZJDABEKJAFGABHI $.

  $( The null set is a proper subset of any non-empty set.  (Contributed by NM,
     27-Feb-1996.) $)
  0pss $p |- ( (/) C. A <-> A =/= (/) ) $=
    ( c0 wpss wne wss 0ss df-pss mpbiran necom bitri ) BACZBADZABDKBAELAFBAGHBA
    IJ $.

  $( No set is a proper subset of the empty set.  (Contributed by NM,
     17-Jun-1998.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  npss0 $p |- -. A C. (/) $=
    ( c0 wpss wss wn wa wi 0ss a1i iman mpbi dfpss3 mtbir ) ABCABDZBADZEFZNOGPE
    ONAHINOJKABLM $.

  $( Any non-universal class is a proper subclass of the universal class.
     (Contributed by NM, 17-May-1998.) $)
  pssv $p |- ( A C. _V <-> -. A = _V ) $=
    ( cvv wpss wss wceq wn ssv dfpss2 mpbiran ) ABCABDABEFAGABHI $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Two ways of saying that two classes are disjoint (have no members in
       common).  (Contributed by NM, 17-Feb-2004.) $)
    disj $p |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) $=
      ( cv cin wcel wn wal wi c0 wceq wral wa df-an bitr2i con1bii albii df-ral
      elin eq0 3bitr4i ) ADZBCEZFZGZAHUBBFZUBCFZGZIZAHUCJKUHABLUEUIAUIUDUDUFUGM
      UIGUBBCSUFUGNOPQAUCTUHABRUA $.

    $( Two ways of saying that two classes are disjoint.  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    disjr $p |- ( ( A i^i B ) = (/) <-> A. x e. B -. x e. A ) $=
      ( cin c0 wceq cv wcel wn wral incom eqeq1i disj bitri ) BCDZEFCBDZEFAGBHI
      ACJOPEBCKLACBMN $.

    $( Two ways of saying that two classes are disjoint (have no members in
       common).  (Contributed by NM, 19-Aug-1993.) $)
    disj1 $p |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) $=
      ( cin c0 wceq cv wcel wn wral wi wal disj df-ral bitri ) BCDEFAGZCHIZABJP
      BHQKALABCMQABNO $.

    $( Two ways of saying that two classes are disjoint, using the complement
       of ` B ` relative to a universe ` C ` .  (Contributed by NM,
       15-Feb-2007.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    reldisj $p |- ( A C_ C -> ( ( A i^i B ) = (/) <-> A C_ ( C \ B ) ) ) $=
      ( vx wss cv wcel wn wi wal cdif cin c0 wceq wb dfss2 pm5.44 eldif imbi2i
      wa syl6bbr sps sylbi albidv disj1 3bitr4g ) ACEZDFZAGZUHBGHZIZDJUIUHCBKZG
      ZIZDJABLMNAULEUGUKUNDUGUIUHCGZIZDJUKUNOZDACPUPUQDUPUKUIUOUJTZIUNUIUOUJQUM
      URUIUHCBRSUAUBUCUDDABUEDAULPUF $.

    $( Two ways of saying that two classes are disjoint.  (Contributed by NM,
       19-May-1998.) $)
    disj3 $p |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) $=
      ( vx cv wcel wn wi wal cdif wb cin c0 wa pm4.71 eldif bibi2i bitr4i albii
      wceq disj1 dfcleq 3bitr4i ) CDZAEZUCBEFZGZCHUDUCABIZEZJZCHABKLSAUGSUFUICU
      FUDUDUEMZJUIUDUENUHUJUDUCABOPQRCABTCAUGUAUB $.

    $( Members of disjoint sets are not equal.  (Contributed by NM,
       28-Mar-2007.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    disjne $p |- ( ( ( A i^i B ) = (/) /\ C e. A /\ D e. B ) -> C =/= D ) $=
      ( vx cin c0 wceq wcel wne cv wn wral wi disj eleq1 notbid rspccva eleq1a
      wa necon3bd syl5com sylanb 3impia ) ABFGHZCAIZDBIZCDJZUEEKZBIZLZEAMZUFUGU
      HNEABOULUFTCBIZLZUGUHUKUNECAUICHUJUMUICBPQRUGUMCDDBCSUAUBUCUD $.
  $}

  $( A set can't belong to both members of disjoint classes.  (Contributed by
     NM, 28-Feb-2015.) $)
  disjel $p |- ( ( ( A i^i B ) = (/) /\ C e. A ) -> -. C e. B ) $=
    ( cin c0 wceq wcel wn cdif wi disj3 eleq2 eldifn syl6bi sylbi imp ) ABDEFZC
    AGZCBGHZQAABIZFZRSJABKUARCTGSATCLCABMNOP $.

  $( Two ways of saying that two classes are disjoint.  (Contributed by NM,
     17-May-1998.) $)
  disj2 $p |- ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) $=
    ( cvv wss cin c0 wceq cdif wb ssv reldisj ax-mp ) ACDABEFGACBHDIAJABCKL $.

  $( Two ways of saying that two classes are disjoint.  (Contributed by NM,
     21-Mar-2004.) $)
  disj4 $p |- ( ( A i^i B ) = (/) <-> -. ( A \ B ) C. A ) $=
    ( cin c0 wceq cdif wpss disj3 eqcom wss difss dfpss2 mpbiran con2bii 3bitri
    wn ) ABCDEAABFZEQAEZQAGZPABHAQISRSQAJRPABKQALMNO $.

  $( Intersection with a subclass of a disjoint class.  (Contributed by FL,
     24-Jan-2007.) $)
  ssdisj $p |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) = (/) ) $=
    ( wss cin c0 wceq wa ss0b wi ssrin sstr2 syl syl5bir imp ss0 ) ABDZBCEZFGZH
    ACEZFDZTFGQSUASRFDZQUARIQTRDUBUAJABCKTRFLMNOTPM $.

  $( A class is a proper subset of its union with a disjoint nonempty class.
     (Contributed by NM, 15-Sep-2004.) $)
  disjpss $p |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> A C. ( A u. B ) ) $=
    ( cin c0 wceq wne wa wss wn cun wpss ssid biantru bitri sseq2 syl5bb syl6bi
    ssin ss0 necon3ad imp nsspssun uncom psseq2i sylib ) ABCZDEZBDFZGBAHZIZAABJ
    ZKZUGUHUJUGUIBDUGUIBDHZBDEUIBUFHZUGUMUIUIBBHZGUNUOUIBLMBABRNUFDBOPBSQTUAUJA
    BAJZKULBAUBUPUKABAUCUDNUE $.

  $( The union of disjoint classes is disjoint.  (Contributed by NM,
     26-Sep-2004.) $)
  undisj1 $p |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <->
               ( ( A u. B ) i^i C ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indir eqeq1i bitr4i ) ACDZEFBCDZEFGMNHZEFABHCDZEF
    MNIPOEABCJKL $.

  $( The union of disjoint classes is disjoint.  (Contributed by NM,
     13-Sep-2004.) $)
  undisj2 $p |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <->
               ( A i^i ( B u. C ) ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indi eqeq1i bitr4i ) ABDZEFACDZEFGMNHZEFABCHDZEFM
    NIPOEABCJKL $.

  $( Subclass expressed in terms of intersection with difference from the
     universal class.  (Contributed by NM, 17-Sep-2003.) $)
  ssindif0 $p |- ( A C_ B <-> ( A i^i ( _V \ B ) ) = (/) ) $=
    ( cvv cdif cin c0 wceq wss disj2 ddif sseq2i bitr2i ) ACBDZEFGACMDZHABHAMIN
    BABJKL $.

  $( The intersection of classes with a common member is nonempty.
     (Contributed by NM, 7-Apr-1994.) $)
  inelcm $p |- ( ( A e. B /\ A e. C ) -> ( B i^i C ) =/= (/) ) $=
    ( wcel wa cin c0 wne elin ne0i sylbir ) ABDACDEABCFZDLGHABCILAJK $.

  $( A minimum element of a class has no elements in common with the class.
     (Contributed by NM, 22-Jun-1994.) $)
  minel $p |- ( ( A e. B /\ ( C i^i B ) = (/) ) -> -. A e. C ) $=
    ( cin c0 wceq wcel wn wa wi inelcm necon2bi imnan sylibr con2d impcom ) CBD
    ZEFZABGZACGZHRTSRTSIZHTSHJUAQEACBKLTSMNOP $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distribute union over difference.  (Contributed by NM, 17-May-1998.)
       (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    undif4 $p |- ( ( A i^i C ) = (/) ->
                 ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) ) $=
      ( vx cv wcel wn wi wal cdif cun wb cin c0 wceq wo wa eldif elun 3bitr4g
      pm2.621 olc impbid1 anbi2d orbi2i bitri anbi1i alimi disj1 dfcleq 3imtr4i
      ordi ) DEZAFZUMCFGZHZDIUMABCJZKZFZUMABKZCJZFZLZDIACMNOURVAOUPVCDUPUNUMUQF
      ZPZUMUTFZUOQZUSVBUPUNUMBFZPZUNUOPZQZVIUOQVEVGUPVJUOVIUPVJUOUNUOUAUOUNUBUC
      UDVEUNVHUOQZPVKVDVLUNUMBCRUEUNVHUOULUFVFVIUOUMABSUGTUMAUQSUMUTCRTUHDACUID
      URVAUJUK $.

    $( Subset relation for disjoint classes.  (Contributed by NM,
       25-Oct-2005.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    disjssun $p |- ( ( A i^i B ) = (/) -> ( A C_ ( B u. C ) <-> A C_ C ) ) $=
      ( cin c0 wceq cun wss indi equncomi uneq2 un0 syl6eq syl5eq df-ss 3bitr4g
      eqeq1d ) ABDZEFZABCGZDZAFACDZAFATHACHSUAUBASUAUBRGZUBUARUBABCIJSUCUBEGUBR
      EUBKUBLMNQATOACOP $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass expressed in terms of difference.  Exercise 7 of
       [TakeutiZaring] p. 22.  (Contributed by NM, 29-Apr-1994.) $)
    ssdif0 $p |- ( A C_ B <-> ( A \ B ) = (/) ) $=
      ( vx cv wcel wi wal cdif wn wss c0 wceq wa eldif xchbinxr albii dfss2 eq0
      iman 3bitr4i ) CDZAEZUABEZFZCGUAABHZEZIZCGABJUEKLUDUGCUDUBUCIMUFUBUCSUAAB
      NOPCABQCUERT $.
  $}

  $( Universal class equality in terms of empty difference.  (Contributed by
     NM, 17-Sep-2003.) $)
  vdif0 $p |- ( A = _V <-> ( _V \ A ) = (/) ) $=
    ( cvv wceq wss cdif c0 vss ssdif0 bitr3i ) ABCBADBAEFCAGBAHI $.

  $( A proper subclass has a nonempty difference.  (Contributed by NM,
     3-May-1994.) $)
  pssdifn0 $p |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) $=
    ( wss wne cdif c0 wceq ssdif0 eqss simplbi2 syl5bir necon3d imp ) ABCZABDBA
    EZFDNOFABOFGBACZNABGZBAHQNPABIJKLM $.

  $( A proper subclass has a nonempty difference.  (Contributed by Mario
     Carneiro, 27-Apr-2016.) $)
  pssdif $p |- ( A C. B -> ( B \ A ) =/= (/) ) $=
    ( wpss wss wne wa cdif c0 df-pss pssdifn0 sylbi ) ABCABDABEFBAGHEABIABJK $.

  $( A subclass missing a member is a proper subclass.  (Contributed by NM,
     12-Jan-2002.) $)
  ssnelpss $p |- ( A C_ B -> ( ( C e. B /\ -. C e. A ) -> A C. B ) ) $=
    ( wcel wn wa wceq wss wpss nelneq2 eqcom sylnib dfpss2 baibr syl5ib ) CBDCA
    DEFZABGZEZABHZABIZPBAGQCBAJBAKLTSRABMNO $.

  ${
    ssnelpssd.1 $e |- ( ph -> A C_ B ) $.
    ssnelpssd.2 $e |- ( ph -> C e. B ) $.
    ssnelpssd.3 $e |- ( ph -> -. C e. A ) $.
    $( Subclass inclusion with one element of the superclass missing is proper
       subclass inclusion.  Deduction form of ~ ssnelpss .  (Contributed by
       David Moews, 1-May-2017.) $)
    ssnelpssd $p |- ( ph -> A C. B ) $=
      ( wcel wn wpss wss wa wi ssnelpss syl mp2and ) ADCHZDBHIZBCJZFGABCKQRLSME
      BCDNOP $.
  $}

  ${
    $d x A $.  $d x B $.
    $( A proper subclass has a member in one argument that's not in both.
       (Contributed by NM, 29-Feb-1996.) $)
    pssnel $p |- ( A C. B -> E. x ( x e. B /\ -. x e. A ) ) $=
      ( wpss cv cdif wcel wex wn wa c0 wne pssdif n0 sylib eldif exbii ) BCDZAE
      ZCBFZGZAHZSCGSBGIJZAHRTKLUBBCMATNOUAUCASCBPQO $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Difference, intersection, and subclass relationship.  (Contributed by
       NM, 30-Apr-1994.)  (Proof shortened by Wolf Lammen, 30-Sep-2014.) $)
    difin0ss $p |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) $=
      ( vx cdif cin c0 wceq cv wcel wn wal wss wi eq0 wa iman elin eldif dfss2
      anbi1i bitri ancom annim anbi2i 3bitr2i xchbinxr ax-2 sylbir al2imi sylbi
      3imtr4g ) ABEZCFZGHDIZUNJZKZDLZCAMZCBMZNDUNOURUOCJZUOAJZNZDLVAUOBJZNZDLUS
      UTUQVCVEDUQVAVBVDNZNZVCVENVGVAVFKZPZUPVAVFQUPVBVDKPZVAPZVAVJPVIUPUOUMJZVA
      PVKUOUMCRVLVJVAUOABSUAUBVAVJUCVJVHVAVBVDUDUEUFUGVAVBVDUHUIUJDCATDCBTULUK
      $.

    $( Intersection, subclass, and difference relationship.  (Contributed by
       NM, 27-Oct-1996.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.)
       (Proof shortened by Wolf Lammen, 30-Sep-2014.) $)
    inssdif0 $p |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) $=
      ( vx cv cin wcel wi wal cdif wn wss c0 wceq elin imbi1i iman bitri eldif
      wa anbi2i anass 3bitr4ri xchbinx albii dfss2 eq0 3bitr4i ) DEZABFZGZUICGZ
      HZDIUIABCJZFZGZKZDIUJCLUOMNUMUQDUMUIAGZUIBGZTZULKZTZUPUMUTULHVBKUKUTULUIA
      BOPUTULQRURUIUNGZTURUSVATZTUPVBVCVDURUIBCSUAUIAUNOURUSVAUBUCUDUEDUJCUFDUO
      UGUH $.
  $}

  $( The difference between a class and itself is the empty set.  Proposition
     5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28.
     (Contributed by NM, 22-Apr-2004.) $)
  difid $p |- ( A \ A ) = (/) $=
    ( wss cdif c0 wceq ssid ssdif0 mpbi ) AABAACDEAFAAGH $.

  ${
    $d x A $.
    $( The difference between a class and itself is the empty set.  Proposition
       5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28.
       Alternate proof of ~ difid .  (Contributed by David Abernethy,
       17-Jun-2012.)  (Proof modification is discouraged.)
       (New usage is discouraged.) $)
    difidALT $p |- ( A \ A ) = (/) $=
      ( vx cdif cv wcel wn crab c0 dfdif2 dfnul3 eqtr4i ) AACBDAEFBAGHBAAIBAJK
      $.
  $}

  $( The difference between a class and the empty set.  Part of Exercise 4.4 of
     [Stoll] p. 16.  (Contributed by NM, 17-Aug-2004.) $)
  dif0 $p |- ( A \ (/) ) = A $=
    ( cdif c0 difid difeq2i difdif eqtr3i ) AAABZBACBAHCAADEAAFG $.

  $( The difference between the empty set and a class.  Part of Exercise 4.4 of
     [Stoll] p. 16.  (Contributed by NM, 17-Aug-2004.) $)
  0dif $p |- ( (/) \ A ) = (/) $=
    ( c0 cdif wss wceq difss ss0 ax-mp ) BACZBDIBEBAFIGH $.

  $( A class and its relative complement are disjoint.  Theorem 38 of [Suppes]
     p. 29.  (Contributed by NM, 24-Mar-1998.) $)
  disjdif $p |- ( A i^i ( B \ A ) ) = (/) $=
    ( cin wss cdif c0 wceq inss1 inssdif0 mpbi ) ABCADABAECFGABHABAIJ $.

  $( The difference of a class from its intersection is empty.  Theorem 37 of
     [Suppes] p. 29.  (Contributed by NM, 17-Aug-2004.)  (Proof shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  difin0 $p |- ( ( A i^i B ) \ B ) = (/) $=
    ( cin wss cdif c0 wceq inss2 ssdif0 mpbi ) ABCZBDKBEFGABHKBIJ $.

  $( The union of a class and its complement is the universe.  Theorem 5.1(5)
     of [Stoll] p. 17.  (Contributed by NM, 17-Aug-2004.) $)
  undifv $p |- ( A u. ( _V \ A ) ) = _V $=
    ( cvv cdif cun cin c0 dfun3 disjdif difeq2i dif0 3eqtri ) ABACZDBLBLCEZCBFC
    BALGMFBLBHIBJK $.

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ disjdif ).  Theorem 35 of [Suppes] p. 29.
     (Contributed by NM, 19-May-1998.) $)
  undif1 $p |- ( ( A \ B ) u. B ) = ( A u. B ) $=
    ( cvv cdif cin undir invdif uneq1i uncom undifv eqtri ineq2i inv1 3eqtr3i
    cun ) ACBDZEZBOABOZPBOZEZABDZBORAPBFQUABABGHTRCERSCRSBPOCPBIBJKLRMKN $.

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ disjdif ).  Part of proof of Corollary 6K of
     [Enderton] p. 144.  (Contributed by NM, 19-May-1998.) $)
  undif2 $p |- ( A u. ( B \ A ) ) = ( A u. B ) $=
    ( cdif cun uncom undif1 3eqtri ) ABACZDHADBADABDAHEBAFBAEG $.

  $( Absorption of difference by union.  (Contributed by NM, 18-Aug-2013.) $)
  undifabs $p |- ( A u. ( A \ B ) ) = A $=
    ( cdif cun undif3 unidm difeq1i difdif 3eqtri ) AABCDAADZBACZCAKCAAABEJAKAF
    GABHI $.

  ${
    $d x A $.  $d x B $.
    $( The intersection and class difference of a class with another class
       unite to give the original class.  (Contributed by Paul Chapman,
       5-Jun-2009.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    inundif $p |- ( ( A i^i B ) u. ( A \ B ) ) = A $=
      ( vx cin cdif cv wcel wo wa wn elin eldif orbi12i pm4.42 bitr4i uneqri )
      CABDZABEZACFZQGZSRGZHSAGZSBGZIZUBUCJIZHUBTUDUAUESABKSABLMUBUCNOP $.
  $}

  $( Absorption of union by difference.  Theorem 36 of [Suppes] p. 29.
     (Contributed by NM, 19-May-1998.) $)
  difun2 $p |- ( ( A u. B ) \ B ) = ( A \ B ) $=
    ( cun cdif c0 difundir difid uneq2i un0 3eqtri ) ABCBDABDZBBDZCKECKABBFLEKB
    GHKIJ $.

  $( Union of complementary parts into whole.  (Contributed by NM,
     22-Mar-1998.) $)
  undif $p |- ( A C_ B <-> ( A u. ( B \ A ) ) = B ) $=
    ( wss cun wceq cdif ssequn1 undif2 eqeq1i bitr4i ) ABCABDZBEABAFDZBEABGLKBA
    BHIJ $.

  $( A subset of a difference does not intersect the subtrahend.  (Contributed
     by Jeff Hankins, 1-Sep-2013.)  (Proof shortened by Mario Carneiro,
     24-Aug-2015.) $)
  ssdifin0 $p |- ( A C_ ( B \ C ) -> ( A i^i C ) = (/) ) $=
    ( cdif wss cin c0 wceq ssrin incom disjdif eqtri sseq0 sylancl ) ABCDZEACFZ
    OCFZEQGHPGHAOCIQCOFGOCJCBKLPQMN $.

  $( A class is a subclass of itself subtracted from another iff it is the
     empty set.  (Contributed by Steve Rodriguez, 20-Nov-2015.) $)
  ssdifeq0 $p |- ( A C_ ( B \ A ) <-> A = (/) ) $=
    ( cdif wss wceq cin inidm ssdifin0 syl5eqr 0ss difeq2 sseq12d mpbiri impbii
    c0 id ) ABACZDZAOEZRAAAFOAGABAHISROBOCZDTJSAOQTSPAOBKLMN $.

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A condition equivalent to inclusion in the union of two classes.
       (Contributed by NM, 26-Mar-2007.) $)
    ssundif $p |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) $=
      ( vx cv wcel cun wi wal cdif wss wn wa wo pm5.6 eldif imbi1i imbi2i dfss2
      elun 3bitr4ri albii 3bitr4i ) DEZAFZUDBCGZFZHZDIUDABJZFZUDCFZHZDIAUFKUICK
      UHULDUEUDBFZLMZUKHUEUMUKNZHULUHUEUMUKOUJUNUKUDABPQUGUOUEUDBCTRUAUBDAUFSDU
      ICSUC $.
  $}

  $( Swap the arguments of a class difference.  (Contributed by NM,
     29-Mar-2007.) $)
  difcom $p |- ( ( A \ B ) C_ C <-> ( A \ C ) C_ B ) $=
    ( cun wss cdif uncom sseq2i ssundif 3bitr3i ) ABCDZEACBDZEABFCEACFBEKLABCGH
    ABCIACBIJ $.

  $( Two ways to express overlapping subsets.  (Contributed by Stefan O'Rear,
     31-Oct-2014.) $)
  pssdifcom1 $p |- ( ( A C_ C /\ B C_ C ) ->
    ( ( C \ A ) C. B <-> ( C \ B ) C. A ) ) $=
    ( wss wa cdif wn wpss wb difcom ssconb ancoms notbid anbi12d dfpss3 3bitr4g
    a1i ) ACDZBCDZEZCAFZBDZBUADZGZECBFZADZAUEDZGZEUABHUEAHTUBUFUDUHUBUFITCABJQT
    UCUGSRUCUGIBACKLMNUABOUEAOP $.

  $( Two ways to express non-covering pairs of subsets.  (Contributed by Stefan
     O'Rear, 31-Oct-2014.) $)
  pssdifcom2 $p |- ( ( A C_ C /\ B C_ C ) ->
    ( B C. ( C \ A ) <-> A C. ( C \ B ) ) ) $=
    ( wss wa cdif wn wpss wb ssconb ancoms difcom notbid anbi12d dfpss3 3bitr4g
    a1i ) ACDZBCDZEZBCAFZDZUABDZGZEACBFZDZUEADZGZEBUAHAUEHTUBUFUDUHSRUBUFIBACJK
    TUCUGUCUGITCABLQMNBUAOAUEOP $.

  $( Distributive law for class difference.  Exercise 4.8 of [Stoll] p. 16.
     (Contributed by NM, 18-Aug-2004.) $)
  difdifdir $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ ( B \ C ) ) $=
    ( cdif cvv cun cin dif32 invdif eqtr4i un0 indi disjdif incom eqtr3i uneq2i
    c0 ddif indm difeq2i ineq2i 3eqtri ) ABDCDZACDZEBDZCFZGZUDEBCDZDZGUDUHDUCUD
    UEGZQFZUGUCUJUKUCUDBDUJABCHUDBIJUJKJUGUJUDCGZFUKUDUECLQULUJCUDGQULCAMCUDNOP
    JJUFUIUDUEEECDZDZFZUFUIUNCUECRPEBUMGZDUOUIBUMSUPUHEBCITOOUAUDUHIUB $.

  $( Two ways to say that ` A ` and ` B ` partition ` C ` (when ` A ` and ` B `
     don't overlap and ` A ` is a part of ` C ` ).  (Contributed by FL,
     17-Nov-2008.) $)
  uneqdifeq $p |- ( ( A C_ C /\ ( A i^i B ) = (/) )
     -> ( ( A u. B ) = C <-> ( C \ A ) = B ) ) $=
    ( wss cin c0 wceq wa cun cdif uncom eqcomd difeq1 difun2 incom expcom com12
    wi eqtr adantl eqeq1i disj3 bitri eqcoms sylbi syl5com syl mpan difss sseq1
    sylancl biimpi syl6bi mpi adantr imp eqimss ssundif sylibr adantlr eqssd ex
    unss impbid ) ACDZABEZFGZHZABIZCGZCAJZBGZVGVJVLRVEVJVGVLBAIZVIGZVJVGVLRZBAK
    VNVJHZCVMGZVOVPVMCVMVICSLVQVKVMAJZGZVRBAJZGZVOCVMAMBANVSWAHVKVTGZVGVLVKVRVT
    SVGBVTGZWBVLRZVGBAEZFGWCVFWEFABOUABAUBUCWDVTBWBVTBGVLVKVTBSPUDUEUFUKUGUHQTV
    HVLVJVHVLHVICVHVLVICDZVEVLWFRVGVLVEWFVLVKCDZVEWFRZCAUIVLWGBCDZWHVKBCUJVEWIW
    FVEWIHWFABCVCULPUMUNQUOUPVEVLCVIDZVGVEVLHVKBDZWJVLWKVEVKBUQTCABURUSUTVAVBVD
    $.

  ${
    $d x A $.
    $( Theorem 19.2 of [Margaris] p. 89 with restricted quantifiers (compare
       ~ 19.2 ).  The restricted version is valid only when the domain of
       quantification is not empty.  (Contributed by NM, 15-Nov-2003.) $)
    r19.2z $p |- ( ( A =/= (/) /\ A. x e. A ph ) -> E. x e. A ph ) $=
      ( wral c0 wne wrex cv wex wa wi wal df-ral exintr sylbi n0 df-rex 3imtr4g
      wcel impcom ) ABCDZCEFZABCGZUABHCSZBIZUDAJBIZUBUCUAUDAKBLUEUFKABCMUDABNOB
      CPABCQRT $.

    $( A response to the notion that the condition ` A =/= (/) ` can be removed
       in ~ r19.2z .  Interestingly enough, ` ph ` does not figure in the
       left-hand side.  (Contributed by Jeff Hankins, 24-Aug-2009.) $)
    r19.2zb $p |- ( A =/= (/) <-> ( A. x e. A ph -> E. x e. A ph ) ) $=
      ( c0 wral wrex wi r19.2z ex wceq cv wcel noel pm2.21i rgen raleq necon3bi
      wne mpbiri wex wa exsimpl df-rex n0 3imtr4i ja impbii ) CDRZABCEZABCFZGUH
      UIUJABCHIUIUJUHUICDCDJUIABDEABDBKZDLAUKMNOABCDPSQUKCLZAUABTULBTUJUHULABUB
      ABCUCBCUDUEUFUG $.
  $}

  ${
    $d x A $.
    r19.3rz.1 $e |- F/ x ph $.
    $( Restricted quantification of wff not containing quantified variable.
       (Contributed by FL, 3-Jan-2008.) $)
    r19.3rz $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wral wb n0 biimt sylbi df-ral 19.23 bitri syl6bbr
      wal ) CEFZABGCHZBIZAJZABCKZUAUCAUDLBCMUCANOUEUBAJBTUDABCPUBABDQRS $.

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by NM, 26-Oct-2010.) $)
    r19.28z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi1d r19.26 syl6rbbr ) DFGZABCDHZIACDHZOIABICD
      HNAPOACDEJKABCDLM $.
  $}

  ${
    $d x A $.  $d x ph $.
    $( Restricted quantification of wff not containing quantified variable.
       (Contributed by NM, 10-Mar-1997.) $)
    r19.3rzv $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wb n0 biimt sylbi wal df-ral 19.23v bitri syl6bbr
      wral ) CDEZABFCGZBHZAIZABCSZTUBAUCJBCKUBALMUDUAAIBNUCABCOUAABPQR $.

    $( Restricted quantification of wff not containing quantified variable.
       (Contributed by NM, 27-May-1998.) $)
    r19.9rzv $p |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) $=
      ( c0 wne wn wral wrex r19.3rzv bicomd con2bid dfrex2 syl6bbr ) CDEZAAFZBC
      GZFABCHNPANOPOBCIJKABCLM $.

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by NM, 19-Aug-2004.) $)
    r19.28zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi1d r19.26 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.

    $( Restricted quantifier version of Theorem 19.37 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by Paul Chapman, 8-Oct-2007.) $)
    r19.37zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( ph -> E. x e. A ps ) ) ) $=
      ( c0 wne wrex wi wral r19.3rzv imbi1d r19.35 syl6rbbr ) DEFZABCDGZHACDIZO
      HABHCDGNAPOACDJKABCDLM $.

    $( Restricted version of Theorem 19.45 of [Margaris] p. 90.  (Contributed
       by NM, 27-May-1998.) $)
    r19.45zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph \/ ps ) <-> ( ph \/ E. x e. A ps ) ) ) $=
      ( c0 wne wrex wo r19.9rzv orbi1d r19.43 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
  $}

  ${
    $d x A $.
    r19.27z.1 $e |- F/ x ps $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by NM, 26-Oct-2010.) $)
    r19.27z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi2d r19.26 syl6rbbr ) DFGZACDHZBIOBCDHZIABICD
      HNBPOBCDEJKABCDLM $.
  $}

  ${
    $d x A $.  $d x ps $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by NM, 19-Aug-2004.) $)
    r19.27zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi2d r19.26 syl6rbbr ) DEFZACDGZBHNBCDGZHABHC
      DGMBONBCDIJABCDKL $.

    $( Restricted quantifier version of Theorem 19.36 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by NM, 20-Sep-2003.) $)
    r19.36zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> ps ) ) ) $=
      ( c0 wne wral wi wrex r19.9rzv imbi2d r19.35 syl6rbbr ) DEFZACDGZBHOBCDIZ
      HABHCDINBPOBCDJKABCDLM $.
  $}

  ${
    $d x A $.
    $( Vacuous quantification is always true.  (Contributed by NM,
       11-Mar-1997.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
    rzal $p |- ( A = (/) -> A. x e. A ph ) $=
      ( c0 wceq cv wcel ne0i necon2bi pm2.21d ralrimiv ) CDEZABCLBFZCGZANCDCMHI
      JK $.

    $( Restricted existential quantification implies its restriction is
       nonempty.  (Contributed by Szymon Jaroszewicz, 3-Apr-2007.) $)
    rexn0 $p |- ( E. x e. A ph -> A =/= (/) ) $=
      ( c0 wne cv wcel ne0i a1d rexlimiv ) ACDEZBCBFZCGKACLHIJ $.

    $( Idempotent law for restricted quantifier.  (Contributed by NM,
       28-Mar-1997.) $)
    ralidm $p |- ( A. x e. A A. x e. A ph <-> A. x e. A ph ) $=
      ( c0 wceq wral wb rzal 2thd wn cv wcel wex neq0 wi biimt wal df-ral nfra1
      19.23 bitri syl6rbbr sylbi pm2.61i ) CDEZABCFZBCFZUFGZUEUGUFUFBCHABCHIUEJ
      BKCLZBMZUHBCNUJUFUJUFOZUGUJUFPUGUIUFOBQUKUFBCRUIUFBABCSTUAUBUCUD $.
  $}

  $( Vacuous universal quantification is always true.  (Contributed by NM,
     20-Oct-2005.) $)
  ral0 $p |- A. x e. (/) ph $=
    ( c0 cv wcel noel pm2.21i rgen ) ABCBDZCEAIFGH $.

  ${
    $d x A $.
    rgenz.1 $e |- ( ( A =/= (/) /\ x e. A ) -> ph ) $.
    $( Generalization rule that eliminates a non-zero class requirement.
       (Contributed by NM, 8-Dec-2012.) $)
    rgenz $p |- A. x e. A ph $=
      ( wral c0 rzal wne ralrimiva pm2.61ine ) ABCECFABCGCFHABCDIJ $.
  $}

  ${
    $d x A $.
    ralf0.1 $e |- -. ph $.
    $( The quantification of a falsehood is vacuous when true.  (Contributed by
       NM, 26-Nov-2005.) $)
    ralf0 $p |- ( A. x e. A ph <-> A = (/) ) $=
      ( wral c0 wceq cv wcel wi wal wn con3 mpi alimi df-ral eq0 3imtr4i impbii
      rzal ) ABCEZCFGZBHCIZAJZBKUCLZBKUAUBUDUEBUDALUEDUCAMNOABCPBCQRABCTS $.
  $}

  $( TODO - shorten r19.3zv, r19.27zv, r19.28zv, raaanv w/ non-v $)
  ${
    $d x y A $.
    raaan.1 $e |- F/ y ph $.
    raaan.2 $e |- F/ x ps $.
    $( Rearrange restricted quantifiers.  (Contributed by NM, 26-Oct-2010.) $)
    raaan $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb c0 wceq rzal pm5.1 syl12anc wne r19.28z ralbidv nfcv nfral
      r19.27z bitrd pm2.61ine ) ABHDEIZCEIZACEIZBDEIZHZJZEKEKLUEUFUGUIUDCEMACEM
      BDEMUEUHNOEKPZUEAUGHZCEIUHUJUDUKCEABDEFQRAUGCEBCDECESGTUAUBUC $.
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y A $.
    $( Rearrange restricted quantifiers.  (Contributed by NM, 11-Mar-1997.) $)
    raaanv $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb wceq rzal pm5.1 syl12anc wne r19.28zv ralbidv r19.27zv bitrd
      c0 pm2.61ine ) ABFDEGZCEGZACEGZBDEGZFZHZERERIUAUBUCUETCEJACEJBDEJUAUDKLER
      MZUAAUCFZCEGUDUFTUGCEABDENOAUCCEPQS $.
  $}

  ${
    $d z y $.  $d z x A $.
    $( Set substitution into the first argument of a subset relation.
       (Contributed by Rodolfo Medina, 7-Jul-2010.)  (Proof shortened by Mario
       Carneiro, 14-Nov-2016.) $)
    sbss $p |- ( [ y / x ] x C_ A <-> y C_ A ) $=
      ( vz cv wss wsb vex sbequ sseq1 nfv sbie vtoclb ) AEZCFZADGDEZCFZOABGBEZC
      FDRBHODBAIPRCJOQADQAKNPCJLM $.
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.  $d D y $.  $d x y $.
    $( Distribute proper substitution through a subclass relation.
       (Contributed by Alan Sare, 22-Jul-2012.)  (Proof shortened by Alexander
       van der Vekens, 23-Jul-2017.) $)
    sbcss $p |- ( A e. B -> ( [. A / x ]. C C_ D <->
      [_ A / x ]_ C C_ [_ A / x ]_ D ) ) $=
      ( vy wcel cv wi wal wsbc csb wss sbcalg sbcimg sbcel2g bitrd albidv dfss2
      imbi12d sbcbii 3bitr4g ) BCGZFHZDGZUDEGZIZFJZABKZUDABDLZGZUDABELZGZIZFJZD
      EMZABKUJULMUCUIUGABKZFJUOUGFABCNUCUQUNFUCUQUEABKZUFABKZIUNUEUFABCOUCURUKU
      SUMABUDDCPABUDECPTQRQUPUHABFDESUAFUJULSUB $.

  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           "Weak deduction theorem" for set theory
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  In a Hilbert system of logic (which consists of a set of axioms, modus
  ponens, and the generalization rule), converting a deduction to a proof using
  the Deduction Theorem (taught in introductory logic books) involves an
  exponential increase of the number of steps as hypotheses are successively
  eliminated.  Here is a trick that is not as general as the Deduction Theorem
  but requires only a linear increase in the number of steps.

  The general problem:  We want to convert a deduction
    P |- Q
  into a proof of the theorem
    |- P -> Q
  i.e. we want to eliminate the hypothesis P.  Normally this is done using the
  Deduction (meta)Theorem, which looks at the microscopic steps of the
  deduction and usually doubles or triples the number of these microscopic
  steps for each hypothesis that is eliminated.  We will look at a special case
  of this problem, without appealing to the Deduction Theorem.

  We assume ZF with class notation.  A and B are arbitrary (possibly
  proper) classes.  P, Q, R, S and T are wffs.

  We define the conditional operator, if(P,A,B), as follows:
    if(P,A,B) =def= { x | (x \in A & P) v (x \in B & -. P) }
  (where x does not occur in A, B, or P).

  Lemma 1.
    A = if(P,A,B) -> (P <-> R), B = if(P,A,B) -> (S <-> R), S |- R
  Proof:  Logic and Axiom of Extensionality.

  Lemma 2.
    A = if(P,A,B) -> (Q <-> T), T |- P -> Q
  Proof:  Logic and Axiom of Extensionality.

  Here's a simple example that illustrates how it works.  Suppose we have
  a deduction
    Ord A |- Tr A
  which means, "Assume A is an ordinal class.  Then A is a transitive class."
  Note that A is a class variable that may be substituted with any class
  expression, so this is really a deduction scheme.

  We want to convert this to a proof of the theorem (scheme)
    |- Ord A -> Tr A.

  The catch is that we must be able to prove "Ord A" for at least one
  object A (and this is what makes it weaker than the ordinary Deduction
  Theorem).  However, it is easy to prove |- Ord 0 (the empty set is
  ordinal).  (For a typical textbook "theorem," i.e. deduction, there is
  usually at least one object satisfying each hypothesis, otherwise the
  theorem would not be very useful.  We can always go back to the standard
  Deduction Theorem for those hypotheses where this is not the case.)
  Continuing with the example:

  Equality axioms (and Extensionality) yield
    |- A = if(Ord A, A, 0) -> (Ord A <-> Ord if(Ord A, A, 0))  (1)
    |- 0 = if(Ord A, A, 0) -> (Ord 0 <-> Ord if(Ord A, A, 0))  (2)
  From (1), (2) and |- Ord 0, Lemma 1 yields
    |- Ord if(Ord A, A, 0)                                       (3)
  From (3) and substituting if(Ord A, A, 0) for
  A in the original deduction,
    |- Tr if(Ord A, A, 0)                                        (4)
  Equality axioms (and Extensionality) yield
    |- A = if(Ord A, A, 0) -> (Tr A <-> Tr if(Ord A, A, 0))    (5)
  From (4) and (5), Lemma 2 yields
    |- Ord A -> Tr A                                               (Q.E.D.)

$)

  $( These lemmas are used to convert hypotheses into antecedents,
     when there is at least one class making the hypothesis true. $)

  $( Declare new constant symbols. $)
  $c if $.  $( Conditional operator (was "ded" for "deduction class"). $)

  $( Extend class notation to include the conditional operator.  See ~ df-if
     for a description.  (In older databases this was denoted "ded".) $)
  cif $a class if ( ph , A , B ) $.

  ${
    $d x ph $.  $d x A $.  $d x B $.
    $( Define the conditional operator.  Read ` if ( ph , A , B ) ` as "if
       ` ph ` then ` A ` else ` B ` ."  See ~ iftrue and ~ iffalse for its
       values.  In mathematical literature, this operator is rarely defined
       formally but is implicit in informal definitions such as "let f(x)=0 if
       x=0 and 1/x otherwise."  (In older versions of this database, this
       operator was denoted "ded" and called the "deduction class.")

       An important use for us is in conjunction with the weak deduction
       theorem, which converts a hypothesis into an antecedent.  In that role,
       ` A ` is a class variable in the hypothesis and ` B ` is a class
       (usually a constant) that makes the hypothesis true when it is
       substituted for ` A ` .  See ~ dedth for the main part of the weak
       deduction theorem, ~ elimhyp to eliminate a hypothesis, and ~ keephyp to
       keep a hypothesis.  See the Deduction Theorem link on the Metamath Proof
       Explorer Home Page for a description of the weak deduction theorem.
       (Contributed by NM, 15-May-1999.) $)
    df-if $a |- if ( ph , A , B ) =
                 { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.  $d x C $.
    $( An alternate definition of the conditional operator ~ df-if with one
       fewer connectives (but probably less intuitive to understand).
       (Contributed by NM, 30-Jan-2006.) $)
    dfif2 $p |- if ( ph , A , B ) =
                 { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } $=
      ( cif cv wcel wa wn wo cab wi df-if df-or orcom iman imbi1i 3bitr4i abbii
      eqtri ) ACDEBFZCGAHZUADGZAIHZJZBKUCALZUBLZBKABCDMUEUGBUDUBJUDIZUBLUEUGUDU
      BNUBUDOUFUHUBUCAPQRST $.

    $( An alternate definition of the conditional operator ~ df-if as a simple
       class abstraction.  (Contributed by Mario Carneiro, 8-Sep-2013.) $)
    dfif6 $p |- if ( ph , A , B ) =
                 ( { x e. A | ph } u. { x e. B | -. ph } ) $=
      ( cv wcel wa cab wn cun wo crab cif unab df-rab uneq12i df-if 3eqtr4ri )
      BEZCFAGZBHZSDFAIZGZBHZJTUCKBHABCLZUBBDLZJACDMTUCBNUEUAUFUDABCOUBBDOPABCDQ
      R $.

    $( Equality theorem for conditional operator.  (Contributed by NM,
       1-Sep-2004.)  (Revised by Mario Carneiro, 8-Sep-2013.) $)
    ifeq1 $p |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) $=
      ( vx wceq crab wn cun cif rabeq uneq1d dfif6 3eqtr4g ) BCFZAEBGZAHEDGZIAE
      CGZQIABDJACDJOPRQAEBCKLAEBDMAECDMN $.

    $( Equality theorem for conditional operator.  (Contributed by NM,
       1-Sep-2004.)  (Revised by Mario Carneiro, 8-Sep-2013.) $)
    ifeq2 $p |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) $=
      ( vx wceq crab wn cun cif rabeq uneq2d dfif6 3eqtr4g ) BCFZAEDGZAHZEBGZIP
      QECGZIADBJADCJORSPQEBCKLAEDBMAEDCMN $.

    $( Value of the conditional operator when its first argument is true.
       (Contributed by NM, 15-May-1999.)  (Proof shortened by Andrew Salmon,
       26-Jun-2011.) $)
    iftrue $p |- ( ph -> if ( ph , A , B ) = A ) $=
      ( vx cv wcel wi wa cab cif dedlem0a abbi2dv dfif2 syl6reqr ) ABDEZCFZAGOB
      FZAHGZDIABCJARDBAQPKLADBCMN $.

    $( Value of the conditional operator when its first argument is false.
       (Contributed by NM, 14-Aug-1999.) $)
    iffalse $p |- ( -. ph -> if ( ph , A , B ) = B ) $=
      ( vx wn cv wcel wa wo cab cif dedlemb abbi2dv df-if syl6reqr ) AEZCDFZBGZ
      AHQCGZPHIZDJABCKPTDCARSLMADBCNO $.
  $}

  $( When values are unequal, but an "if" condition checks if they are equal,
     then the "false" branch results.  This is a simple utility to provide a
     slight shortening and simplification of proofs vs. applying ~ iffalse
     directly in this case.  It happens, e.g., in ~ oevn0 .  (Contributed by
     David A. Wheeler, 15-May-2015.) $)
  ifnefalse $p |- ( A =/= B -> if ( A = B , C , D ) = D ) $=
    ( wne wceq wn cif df-ne iffalse sylbi ) ABEABFZGLCDHDFABILCDJK $.

  ${
    $d A x y $.  $d B x y $.  $d C y $.
    ifsb.1 $e |- ( if ( ph , A , B ) = A -> C = D ) $.
    ifsb.2 $e |- ( if ( ph , A , B ) = B -> C = E ) $.
    $( Distribute a function over an if-clause.  (Contributed by Mario
       Carneiro, 14-Aug-2013.) $)
    ifsb $p |- C = if ( ph , D , E ) $=
      ( cif wceq iftrue syl eqtr4d wn iffalse pm2.61i ) ADAEFIZJADEQAABCIZBJDEJ
      ABCKGLAEFKMANZDFQSRCJDFJABCOHLAEFOMP $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y ph $.
    dfif3.1 $e |- C = { x | ph } $.
    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false.
       (Contributed by NM, 25-Aug-2013.)  (Revised by Mario Carneiro,
       8-Sep-2013.) $)
    dfif3 $p |- if ( ph , A , B )
                  = ( ( A i^i C ) u. ( B i^i ( _V \ C ) ) ) $=
      ( vy cif crab wn cun cin cvv cdif dfif6 cab cv ineq2i dfrab3 eqtr4i biidd
      wceq cbvabv eqtri notab difeq2i eqtr2i uneq12i ) ACDHAGCIZAJZGDIZKCELZDME
      NZLZKAGCDOULUIUNUKULCAGPZLUIEUOCEABPUOFAABGBQGQUBAUAUCUDZRAGCSTUKDUJGPZLU
      NUJGDSUQUMDUQMUONUMAGUEEUOMUPUFTRUGUHT $.

    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false.
       (Contributed by NM, 25-Aug-2013.) $)
    dfif4 $p |- if ( ph , A , B )
        = ( ( A u. B ) i^i ( ( A u. ( _V \ C ) ) i^i ( B u. C ) ) ) $=
      ( cif cin cvv cdif cun dfif3 undir undi uncom undifv ineq12i 3eqtri inass
      inv1 eqtri ) ACDGCEHDIEJZHZKCUCKZEUCKZHZCDKZCUBKZDEKZHHZABCDEFLCEUCMUFUGU
      HHZUIHUJUDUKUEUICDUBNUEEDKZEUBKZHUIIHUIEDUBNULUIUMIEDOEPQUITRQUGUHUISUAR
      $.

    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false (see also
       ~ abvor0 ).  (Contributed by G&eacute;rard Lang, 18-Aug-2013.) $)
    dfif5 $p |- if ( ph , A , B ) = ( ( A i^i B )
          u. ( ( ( A \ B ) i^i C ) u. ( ( B \ A ) i^i ( _V \ C ) ) ) ) $=
      ( cun cdif cin undir unidm unass undi 3eqtr3ri ineq1i inabs eqtri 3eqtr4i
      undifabs eqtr4i cvv cif inindi dfif4 uneq1i undif2 uneq12i unundi 3eqtrri
      uncom uneq2i ineq2i ineq12i ) CDGZCUAEHZGZDEGZIIUNUPIZUNUQIZIZACDUBCDICDH
      ZEIZDCHZUOIZGZGZUNUPUQUCABCDEFUDVFCVEGZDVEGZIUTCDVEJURVGUSVHURCVBGZCVDGZG
      ZVGURCCDUOIZGZGZVKCCGZVLGVMVNURVOCVLCKUECCVLLCDUOMZNVICVJVMVICVAGZCEGZIZC
      CVAEMVSCVRICVQCVRCDSOCEPQQCVCGZUPIURVJVMVTUNUPCDUFOCVCUOMVPRUGTCVBVDUHTCE
      IZDGZDVBGZDVDGZGZUSVHWBDGWADDGZGWEWBWADDLWBWCDWDWBDVAGZUQIZWCDWAGDCGZUQIW
      BWHDCEMWADUJWGWIUQDCUFORDVAEMTWDDVCGZDUOGZIDWKIDDVCUOMWJDWKDCSODUOPUIUGWF
      DWADKUKNUSUNEDGZIWBUQWLUNDEUJULCEDJTDVBVDUHRUMTR $.
  $}

  $( Equality theorem for conditional operators.  (Contributed by NM,
     1-Sep-2004.) $)
  ifeq12 $p |- ( ( A = B /\ C = D ) ->
                if ( ph , A , C ) = if ( ph , B , D ) ) $=
    ( wceq cif ifeq1 ifeq2 sylan9eq ) BCFDEFABDGACDGACEGABCDHADECIJ $.

  ${
    ifeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for conditional operator.  (Contributed by NM,
       16-Feb-2005.) $)
    ifeq1d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( wceq cif ifeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.

    $( Equality deduction for conditional operator.  (Contributed by NM,
       16-Feb-2005.) $)
    ifeq2d $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( wceq cif ifeq2 syl ) ACDGBECHBEDHGFBCDEIJ $.

    ifeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for conditional operator.  (Contributed by NM,
       24-Mar-2015.) $)
    ifeq12d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , D ) ) $=
      ( cif ifeq1d ifeq2d eqtrd ) ABCEIBDEIBDFIABCDEGJABEFDHKL $.
  $}

  $( Equivalence theorem for conditional operators.  (Contributed by Raph
     Levien, 15-Jan-2004.) $)
  ifbi $p |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) $=
    ( wb wa wn wo cif wceq dfbi3 iftrue eqcomd sylan9eq iffalse jaoi sylbi ) AB
    EABFZAGZBGZFZHACDIZBCDIZJZABKRUDUAABUBCUCACDLBUCCBCDLMNSTUBDUCACDOTUCDBCDOM
    NPQ $.

  ${
    ifbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalence deduction for conditional operators.  (Contributed by NM,
       18-Apr-2005.) $)
    ifbid $p |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) $=
      ( wb cif wceq ifbi syl ) ABCGBDEHCDEHIFBCDEJK $.
  $}

  ${
    ifbieq2i.1 $e |- ( ph <-> ps ) $.
    ifbieq2i.2 $e |- A = B $.
    $( Equivalence/equality inference for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2i $p |- if ( ph , C , A ) = if ( ps , C , B ) $=
      ( cif wb wceq ifbi ax-mp ifeq2 eqtri ) AECHZBECHZBEDHZABIOPJFABECKLCDJPQJ
      GBCDEMLN $.
  $}

  ${
    ifbieq2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq2d.2 $e |- ( ph -> A = B ) $.
    $( Equivalence/equality deduction for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2d $p |- ( ph -> if ( ps , C , A ) = if ( ch , C , B ) ) $=
      ( cif ifbid ifeq2d eqtrd ) ABFDICFDICFEIABCFDGJACDEFHKL $.
  $}

  ${
    ifbieq12i.1 $e |- ( ph <-> ps ) $.
    ifbieq12i.2 $e |- A = C $.
    ifbieq12i.3 $e |- B = D $.
    $( Equivalence deduction for conditional operators.  (Contributed by NM,
       18-Mar-2013.) $)
    ifbieq12i $p |- if ( ph , A , B ) = if ( ps , C , D ) $=
      ( cif wceq ifeq1 ax-mp ifbieq2i eqtri ) ACDJZAEDJZBEFJCEKPQKHACEDLMABDFEG
      INO $.
  $}

  ${
    ifbieq12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq12d.2 $e |- ( ph -> A = C ) $.
    ifbieq12d.3 $e |- ( ph -> B = D ) $.
    $( Equivalence deduction for conditional operators.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    ifbieq12d $p |- ( ph -> if ( ps , A , B ) = if ( ch , C , D ) ) $=
      ( cif ifbid ifeq12d eqtrd ) ABDEKCDEKCFGKABCDEHLACDFEGIJMN $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y ph $.  $d y ps $.
    nfifd.2 $e |- ( ph -> F/ x ps ) $.
    nfifd.3 $e |- ( ph -> F/_ x A ) $.
    nfifd.4 $e |- ( ph -> F/_ x B ) $.
    $( Deduction version of ~ nfif .  (Contributed by NM, 15-Feb-2013.)
       (Revised by Mario Carneiro, 13-Oct-2016.) $)
    nfifd $p |- ( ph -> F/_ x if ( ps , A , B ) ) $=
      ( vy cif cv wcel wi wa cab dfif2 nfv nfcrd nfimd nfand nfabd nfcxfrd ) AC
      BDEJIKZELZBMZUCDLZBNZMZIOBIDEPAUHCIAIQAUEUGCAUDBCACIEHRFSAUFBCACIDGRFTSUA
      UB $.
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d z ph $.
    nfif.1 $e |- F/ x ph $.
    nfif.2 $e |- F/_ x A $.
    nfif.3 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for a conditional operator.
       (Contributed by NM, 16-Feb-2005.)  (Proof shortened by Andrew Salmon,
       26-Jun-2011.) $)
    nfif $p |- F/_ x if ( ph , A , B ) $=
      ( cif wnfc wtru wnf a1i nfifd trud ) BACDHIJABCDABKJELBCIJFLBDIJGLMN $.
  $}

  ${
    ifeq1da.1 $e |- ( ( ph /\ ps ) -> A = B ) $.
    $( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifeq1da $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( cif wceq wa ifeq1d wn iffalse eqtr4d adantl pm2.61dan ) ABBCEGZBDEGZHZA
      BIBCDEFJBKZRASPEQBCELBDELMNO $.
  $}

  ${
    ifeq2da.1 $e |- ( ( ph /\ -. ps ) -> A = B ) $.
    $( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifeq2da $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( cif wceq iftrue eqtr4d adantl wn wa ifeq2d pm2.61dan ) ABBECGZBEDGZHZBR
      ABPEQBECIBEDIJKABLMBCDEFNO $.
  $}

  ${
    ifclda.1 $e |- ( ( ph /\ ps ) -> A e. C ) $.
    ifclda.2 $e |- ( ( ph /\ -. ps ) -> B e. C ) $.
    $( Conditional closure.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifclda $p |- ( ph -> if ( ps , A , B ) e. C ) $=
      ( cif wcel wa wceq iftrue adantl eqeltrd wn iffalse pm2.61dan ) ABBCDHZEI
      ABJRCEBRCKABCDLMFNABOZJRDESRDKABCDPMGNQ $.
  $}

  ${
    $d y A $.  $d y z B $.  $d y z C $.  $d y z ph $.  $d x y z $.
    $( Distribute proper substitution through the conditional operator.
       (Contributed by NM, 24-Feb-2013.)  (Revised by Mario Carneiro,
       14-Nov-2016.) $)
    csbifg $p |- ( A e. V -> [_ A / x ]_ if ( ph , B , C )
          = if ( [. A / x ]. ph , [_ A / x ]_ B , [_ A / x ]_ C ) ) $=
      ( vy cv cif csb wsb wceq csbeq1 dfsbcq2 ifbieq12d eqeq12d nfcsb1v csbeq1a
      wsbc vex nfs1v nfif weq sbequ12 csbief vtoclg ) BGHZADEIZJZABGKZBUGDJZBUG
      EJZIZLBCUHJZABCSZBCDJZBCEJZIZLGCFUGCLZUIUNUMURBUGCUHMUSUJUOUKULUPUQABGCNB
      UGCDMBUGCEMOPBUGUHUMGTUJBUKULABGUABUGDQBUGEQUBBGUCAUJDEUKULABGUDBUGDRBUGE
      ROUEUF $.
  $}

  ${
    elimif.1 $e |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) $.
    elimif.2 $e |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) $.
    $( Elimination of a conditional operator contained in a wff ` ps ` .
       (Contributed by NM, 15-Feb-2005.) $)
    elimif $p |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) $=
      ( wn wo wa exmid biantrur andir cif wceq wb iftrue syl pm5.32i iffalse
      orbi12i 3bitri ) BAAIZJZBKABKZUDBKZJACKZUDDKZJUEBALMAUDBNUFUHUGUIABCAAEFO
      ZEPBCQAEFRGSTUDBDUDUJFPBDQAEFUAHSTUBUC $.
  $}

  ${
    ifboth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    ifboth.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    ${
      ifbothda.3 $e |- ( ( et /\ ph ) -> ps ) $.
      ifbothda.4 $e |- ( ( et /\ -. ph ) -> ch ) $.
      $( A wff ` th ` containing a conditional operator is true when both of
         its cases are true.  (Contributed by NM, 15-Feb-2015.) $)
      ifbothda $p |- ( et -> th ) $=
        ( wa wb cif wceq iftrue eqcomd syl adantl mpbid wn iffalse pm2.61dan )
        EADEALBDJABDMZEAFAFGNZOUDAUEFAFGPQHRSTEAUAZLCDKUFCDMZEUFGUEOUGUFUEGAFGU
        BQIRSTUC $.
    $}

    $( A wff ` th ` containing a conditional operator is true when both of its
       cases are true.  (Contributed by NM, 3-Sep-2006.)  (Revised by Mario
       Carneiro, 15-Feb-2015.) $)
    ifboth $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa simpll wn simplr ifbothda ) ABCDBCIEFGHBCAJBCAKLM $.
  $}

  $( Identical true and false arguments in the conditional operator.
     (Contributed by NM, 18-Apr-2005.) $)
  ifid $p |- if ( ph , A , A ) = A $=
    ( cif wceq iftrue iffalse pm2.61i ) AABBCBDABBEABBFG $.

  $( Expansion of an equality with a conditional operator.  (Contributed by NM,
     14-Feb-2005.) $)
  eqif $p |- ( A = if ( ph , B , C ) <->
             ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) $=
    ( cif wceq eqeq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.

  $( Membership in a conditional operator.  (Contributed by NM,
     14-Feb-2005.) $)
  elif $p |- ( A e. if ( ph , B , C ) <->
             ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) $=
    ( cif wcel eleq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.

  $( Membership of a conditional operator.  (Contributed by NM,
     10-Sep-2005.) $)
  ifel $p |- ( if ( ph , A , B ) e. C <->
             ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) $=
    ( cif wcel eleq1 elimif ) AABCEZDFBDFCDFBCIBDGICDGH $.

  $( Membership (closure) of a conditional operator.  (Contributed by NM,
     4-Apr-2005.) $)
  ifcl $p |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) $=
    ( wcel cif eleq1 ifboth ) ABDECDEABCFZDEBCBIDGCIDGH $.

  $( The possible values of a conditional operator.  (Contributed by NM,
     17-Jun-2007.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
  ifeqor $p |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) $=
    ( cif wceq wn iftrue con3i iffalse syl orri ) ABCDZBEZLCEZMFAFNAMABCGHABCIJ
    K $.

  $( Negating the first argument swaps the last two arguments of a conditional
     operator.  (Contributed by NM, 21-Jun-2007.) $)
  ifnot $p |- if ( -. ph , A , B ) = if ( ph , B , A ) $=
    ( wn cif wceq notnot1 iffalse syl iftrue eqtr4d pm2.61i ) AADZBCEZACBEZFANC
    OAMDNCFAGMBCHIACBJKMNBOMBCJACBHKL $.

  $( Rewrite a conjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
  ifan $p |- if ( ( ph /\ ps ) , A , B ) = if ( ph , if ( ps , A , B ) , B ) $=
    ( wa cif wceq iftrue ifbid eqtr2d wn simpl con3i iffalse syl eqtr4d pm2.61i
    ibar ) AABEZCDFZABCDFZDFZGAUBUATAUADHABSCDABRIJAKZTDUBUCSKTDGSAABLMSCDNOAUA
    DNPQ $.

  $( Rewrite a disjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
  ifor $p |- if ( ( ph \/ ps ) , A , B ) = if ( ph , A , if ( ps , A , B ) ) $=
    ( wo cif wceq iftrue orcs eqtr4d wn iffalse biorf ifbid eqtr2d pm2.61i ) AA
    BEZCDFZACBCDFZFZGARCTABRCGQCDHIACSHJAKZTSRACSLUABQCDABMNOP $.

  ${
    $d x A $.  $d x B $.  $d x ph $.
    dedth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    dedth.2 $e |- ch $.
    $( Weak deduction theorem that eliminates a hypothesis ` ph ` , making it
       become an antecedent.  We assume that a proof exists for ` ph ` when the
       class variable ` A ` is replaced with a specific class ` B ` .  The
       hypothesis ` ch ` should be assigned to the inference, and the
       inference's hypothesis eliminated with ~ elimhyp .  If the inference has
       other hypotheses with class variable ` A ` , these can be kept by
       assigning ~ keephyp to them.  For more information, see the Deduction
       Theorem ~ http://us.metamath.org/mpeuni/mmdeduction.html .  (Contributed
       by NM, 15-May-1999.) $)
    dedth $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl mpbiri ) ABCGADADEHZIBCJAODADEKLFMN $.
  $}

  ${
    dedth2h.1 $e |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) $.
    dedth2h.2 $e |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) $.
    dedth2h.3 $e |- ta $.
    $( Weak deduction theorem eliminating two hypotheses.  This theorem is
       simpler to use than ~ dedth2v but requires that each hypothesis has
       exactly one class variable.  See also comments in ~ dedth .
       (Contributed by NM, 15-May-1999.) $)
    dedth2h $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wi cif wceq imbi2d dedth imp ) ABCABCMBDMFHFAFHNOCDBJPBDEGIKLQQR $.
  $}

  ${
    dedth3h.1 $e |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) $.
    dedth3h.2 $e |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) $.
    dedth3h.3 $e |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) $.
    dedth3h.4 $e |- ze $.
    $( Weak deduction theorem eliminating three hypotheses.  See comments in
       ~ dedth2h .  (Contributed by NM, 15-May-1999.) $)
    dedth3h $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa wi cif wceq imbi2d dedth2h dedth 3impib ) ABCDABCRZDSUFESHKHAHKTUADE
      UFNUBBCEFGIJLMOPQUCUDUE $.
  $}

  ${
    dedth4h.1 $e |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) $.
    dedth4h.2 $e |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) $.
    dedth4h.3 $e |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) $.
    dedth4h.4 $e |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) $.
    dedth4h.5 $e |- rh $.
    $( Weak deduction theorem eliminating four hypotheses.  See comments in
       ~ dedth2h .  (Contributed by NM, 16-May-1999.) $)
    dedth4h $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa wi cif wceq imbi2d dedth2h imp ) ABUCCDUCZEABUJEUDUJFUDUJGUDJKNOJAJN
      UEUFEFUJRUGKBKOUEUFFGUJSUGCDGHILMPQTUAUBUHUHUI $.
  $}

  ${
    dedth2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    dedth2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    dedth2v.3 $e |- th $.
    $( Weak deduction theorem for eliminating a hypothesis with 2 class
       variables.  Note: if the hypothesis can be separated into two
       hypotheses, each with one class variable, then ~ dedth2h is simpler to
       use.  See also comments in ~ dedth .  (Contributed by NM, 13-Aug-1999.)
       (Proof shortened by Eric Schmidt, 28-Jul-2009.) $)
    dedth2v $p |- ( ph -> ps ) $=
      ( dedth2h anidms ) ABAABCDEFGHIJKLM $.
  $}

  ${
    dedth3v.1 $e |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) $.
    dedth3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    dedth3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    dedth3v.4 $e |- ta $.
    $( Weak deduction theorem for eliminating a hypothesis with 3 class
       variables.  See comments in ~ dedth2v .  (Contributed by NM,
       13-Aug-1999.)  (Proof shortened by Eric Schmidt, 28-Jul-2009.) $)
    dedth3v $p |- ( ph -> ps ) $=
      ( dedth3h 3anidm12 anidms ) ABAABAAABCDEFGHIJKLMNOPQR $.
  $}

  ${
    dedth4v.1 $e |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) $.
    dedth4v.2 $e |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) $.
    dedth4v.3 $e |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) $.
    dedth4v.4 $e |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) $.
    dedth4v.5 $e |- et $.
    $( Weak deduction theorem for eliminating a hypothesis with 4 class
       variables.  See comments in ~ dedth2v .  (Contributed by NM,
       21-Apr-2007.)  (Proof shortened by Eric Schmidt, 28-Jul-2009.) $)
    dedth4v $p |- ( ph -> ps ) $=
      ( anidms wa dedth4h ) ABAAUABAAAABCDEFGHIJKLMNOPQRSUBTT $.
  $}

  ${
    elimhyp.1 $e |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) $.
    elimhyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) $.
    elimhyp.3 $e |- ch $.
    $( Eliminate a hypothesis containing class variable ` A ` when it is known
       for a specific class ` B ` .  For more information, see comments in
       ~ dedth .  (Contributed by NM, 15-May-1999.) $)
    elimhyp $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl ibi wn iffalse mpbii pm2.61i ) ABABADADEI
      ZJABKATDADELMFNOAPZCBHUAETJCBKUATEADEQMGNRS $.
  $}

  ${
    elimhyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) $.
    elimhyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    elimhyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    elimhyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    elimhyp2v.5 $e |- ta $.
    $( Eliminate a hypothesis containing 2 class variables.  (Contributed by
       NM, 14-Aug-1999.) $)
    elimhyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd ibi wn iffalse mpbii pm2.61i ) ACAC
      AABCAFAFHOZPABQAUGFAFHRSJTAGAGIOZPBCQAUHGAGIRSKTUAUBAUCZDCNUIDECUIHUGPDEQ
      UIUGHAFHUDSLTUIIUHPECQUIUHIAGIUDSMTUAUEUF $.
  $}

  ${
    elimhyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    elimhyp3v.7 $e |- et $.
    $( Eliminate a hypothesis containing 3 class variables.  (Contributed by
       NM, 14-Aug-1999.) $)
    elimhyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd ibi wn iffalse mpbii pm2.61i ) ADA
      DAABCDAHAHKUAZUBABUCAUMHAHKUDUENUFAIAILUAZUBBCUCAUNIAILUDUEOUFAJAJMUAZUBC
      DUCAUOJAJMUDUEPUFUGUHAUIZEDTUPEFGDUPKUMUBEFUCUPUMKAHKUJUEQUFUPLUNUBFGUCUP
      UNLAILUJUERUFUPMUOUBGDUCUPUOMAJMUJUESUFUGUKUL $.
  $}

  ${
    elimhyp4v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp4v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp4v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp4v.4 $e |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) $.
    elimhyp4v.5 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp4v.6 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp4v.7 $e |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) $.
    elimhyp4v.8 $e |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) $.
    elimhyp4v.9 $e |- et $.
    $( Eliminate a hypothesis containing 4 class variables (for use with the
       weak deduction theorem ~ dedth ).  (Contributed by NM, 16-Apr-2005.) $)
    elimhyp4v $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl bitrd 3bitrd ibi wn iffalse mpbii pm2.61i
      ) ABABAADEBAACDAJAJMUGZUHACUIAUTJAJMUJUKRULAKAKNUGZUHCDUIAVAKAKNUJUKSULUM
      ALALOUGZUHDEUIAVBLALOUJUKTULAPAPQUGZUHEBUIAVCPAPQUJUKUAULUNUOAUPZFBUFVDFH
      IBVDFGHVDMUTUHFGUIVDUTMAJMUQUKUBULVDNVAUHGHUIVDVANAKNUQUKUCULUMVDOVBUHHIU
      IVDVBOALOUQUKUDULVDQVCUHIBUIVDVCQAPQUQUKUEULUNURUS $.
  $}

  ${
    elimel.1 $e |- B e. C $.
    $( Eliminate a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable.  (Contributed by NM,
       15-May-1999.) $)
    elimel $p |- if ( A e. C , A , B ) e. C $=
      ( wcel cif eleq1 elimhyp ) ACEZIABFZCEBCEABAJCGBJCGDH $.
  $}

  ${
    elimdhyp.1 $e |- ( ph -> ps ) $.
    elimdhyp.2 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    elimdhyp.3 $e |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) $.
    elimdhyp.4 $e |- th $.
    $( Version of ~ elimhyp where the hypothesis is deduced from the final
       antecedent.  See ~ ghomgrplem for an example of its use.  (Contributed
       by Paul Chapman, 25-Mar-2008.) $)
    elimdhyp $p |- ch $=
      ( cif wceq wb iftrue eqcomd syl mpbid wn iffalse mpbii pm2.61i ) ACABCGAE
      AEFKZLBCMAUBEAEFNOHPQARZDCJUCFUBLDCMUCUBFAEFSOIPTUA $.
  $}

  ${
    keephyp.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    keephyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    keephyp.3 $e |- ps $.
    keephyp.4 $e |- ch $.
    $( Transform a hypothesis ` ps ` that we want to keep (but contains the
       same class variable ` A ` used in the eliminated hypothesis) for use
       with the weak deduction theorem.  (Contributed by NM, 15-May-1999.) $)
    keephyp $p |- th $=
      ( ifboth mp2an ) BCDIJABCDEFGHKL $.
  $}

  ${
    keephyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    keephyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    keephyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    keephyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    keephyp2v.5 $e |- ps $.
    keephyp2v.6 $e |- ta $.
    $( Keep a hypothesis containing 2 class variables (for use with the weak
       deduction theorem ~ dedth ).  (Contributed by NM, 16-Apr-2005.) $)
    keephyp2v $p |- th $=
      ( wceq wb eqcomd syl cif iftrue bitrd mpbii wn iffalse pm2.61i ) ADABDOAB
      CDAGAGIUAZQBCRAUHGAGIUBSKTAHAHJUAZQCDRAUIHAHJUBSLTUCUDAUEZEDPUJEFDUJIUHQE
      FRUJUHIAGIUFSMTUJJUIQFDRUJUIJAHJUFSNTUCUDUG $.
  $}

  ${
    keephyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) $.
    keephyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    keephyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    keephyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    keephyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    keephyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    keephyp3v.7 $e |- rh $.
    keephyp3v.8 $e |- et $.
    $( Keep a hypothesis containing 3 class variables.  (Contributed by NM,
       27-Sep-1999.) $)
    keephyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd mpbii wn iffalse pm2.61i ) ADAHDUA
      AHBCDAIAILUCZUDHBUEAUNIAILUFUGOUHAJAJMUCZUDBCUEAUOJAJMUFUGPUHAKAKNUCZUDCD
      UEAUPKAKNUFUGQUHUIUJAUKZEDUBUQEFGDUQLUNUDEFUEUQUNLAILULUGRUHUQMUOUDFGUEUQ
      UOMAJMULUGSUHUQNUPUDGDUEUQUPNAKNULUGTUHUIUJUM $.
  $}

  ${
    keepel.1 $e |- A e. C $.
    keepel.2 $e |- B e. C $.
    $( Keep a membership hypothesis for weak deduction theorem, when special
       case ` B e. C ` is provable.  (Contributed by NM, 14-Aug-1999.) $)
    keepel $p |- if ( ph , A , B ) e. C $=
      ( wcel cif eleq1 keephyp ) ABDGCDGABCHZDGBCBKDICKDIEFJ $.
  $}

  ${
    dedex.1 $e |- A e. _V $.
    dedex.2 $e |- B e. _V $.
    $( Conditional operator existence.  (Contributed by NM, 2-Sep-2004.) $)
    ifex $p |- if ( ph , A , B ) e. _V $=
      ( cvv keepel ) ABCFDEG $.
  $}

  ${
    $d A x y $.  $d B y $.  $d ph x y $.
    $( Conditional operator existence.  (Contributed by NM, 21-Mar-2011.) $)
    ifexg $p |- ( ( A e. V /\ B e. W ) -> if ( ph , A , B ) e. _V ) $=
      ( vx vy cv cif cvv wcel wceq ifeq1 eleq1d ifeq2 vex ifex vtocl2g ) AFHZGH
      ZIZJKABTIZJKABCIZJKFGBCDESBLUAUBJASBTMNTCLUBUCJATCBONASTFPGPQR $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Power classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for power class. $)
  $c ~P $.  $( Calligraphic P $)

  $( Extend class notation to include power class.  (The tilde in the Metamath
     token is meant to suggest the calligraphic font of the P.) $)
  cpw $a class ~P A $.

  ${
    $d x A $.  $d y A $.  $d w x $.  $d w y $.  $d w A $.  $d w z $.  $d z x $.
    $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-pw .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    pwjust $p |- { x | x C_ A } = { y | y C_ A } $=
      ( vz cv wss cab sseq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINPD
      BMOCHIJ $.
  $}

  ${
    $d x A $.
    $( Define power class.  Definition 5.10 of [TakeutiZaring] p. 17, but we
       also let it apply to proper classes, i.e. those that are not members of
       ` _V ` .  When applied to a set, this produces its power set.  A power
       set of S is the set of all subsets of S, including the empty set and S
       itself.  For example, if ` A = { 3 , 5 , 7 } ` , then
       ` ~P A = { (/) , { 3 } , { 5 } , { 7 } , { 3 , 5 } , `
       ` { 3 , 7 } , { 5 , 7 } , { 3 , 5 , 7 } } ` ( ~ ex-pw ).  We will later
       introduce the Axiom of Power Sets ~ ax-pow , which can be expressed in
       class notation per ~ pwexg .  Still later we will prove, in ~ hashpw ,
       that the size of the power set of a finite set is 2 raised to the power
       of the size of the set.  (Contributed by NM, 5-Aug-1993.) $)
    df-pw $a |- ~P A = { x | x C_ A } $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for power class.  (Contributed by NM, 5-Aug-1993.) $)
    pweq $p |- ( A = B -> ~P A = ~P B ) $=
      ( vx wceq cv wss cab cpw sseq2 abbidv df-pw 3eqtr4g ) ABDZCEZAFZCGNBFZCGA
      HBHMOPCABNIJCAKCBKL $.
  $}

  ${
    pweqi.1 $e |- A = B $.
    $( Equality inference for power class.  (Contributed by NM,
       27-Nov-2013.) $)
    pweqi $p |- ~P A = ~P B $=
      ( wceq cpw pweq ax-mp ) ABDAEBEDCABFG $.
  $}

  ${
    pweqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for power class.  (Contributed by NM,
       27-Nov-2013.) $)
    pweqd $p |- ( ph -> ~P A = ~P B ) $=
      ( wceq cpw pweq syl ) ABCEBFCFEDBCGH $.
  $}

  ${
    $d A x $.  $d B x $.
    ${
      elpw.1 $e |- A e. _V $.
      $( Membership in a power class.  Theorem 86 of [Suppes] p. 47.
         (Contributed by NM, 31-Dec-1993.) $)
      elpw $p |- ( A e. ~P B <-> A C_ B ) $=
        ( vx cv wss cpw sseq1 df-pw elab2 ) DEZBFABFDABGCKABHDBIJ $.
    $}

    $( Membership in a power class.  Theorem 86 of [Suppes] p. 47.  See also
       ~ elpw2g .  (Contributed by NM, 6-Aug-2000.) $)
    elpwg $p |- ( A e. V -> ( A e. ~P B <-> A C_ B ) ) $=
      ( vx cv cpw wcel wss eleq1 sseq1 vex elpw vtoclbg ) DEZBFZGNBHAOGABHDACNA
      OINABJNBDKLM $.
  $}

  $( Subset relation implied by membership in a power class.  (Contributed by
     NM, 17-Feb-2007.) $)
  elpwi $p |- ( A e. ~P B -> A C_ B ) $=
    ( cpw wcel wss elpwg ibi ) ABCZDABEABHFG $.

  ${
    elpwid.1 $e |- ( ph -> A e. ~P B ) $.
    $( An element of a power class is a subclass.  Deduction form of ~ elpwi .
       (Contributed by David Moews, 1-May-2017.) $)
    elpwid $p |- ( ph -> A C_ B ) $=
      ( cpw wcel wss elpwi syl ) ABCEFBCGDBCHI $.
  $}

  $( If ` A ` belongs to a part of ` C ` then ` A ` belongs to ` C ` .
     (Contributed by FL, 3-Aug-2009.) $)
  elelpwi $p |- ( ( A e. B /\ B e. ~P C ) -> A e. C ) $=
    ( cpw wcel elpwi sseld impcom ) BCDEZABEACEIBCABCFGH $.

  ${
    $d y z A $.  $d x y z $.
    nfpw.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for power class.  (Contributed by NM,
       28-Oct-2003.)  (Revised by Mario Carneiro, 13-Oct-2016.) $)
    nfpw $p |- F/_ x ~P A $=
      ( vy cpw cv wss cab df-pw nfcv nfss nfab nfcxfr ) ABEDFZBGZDHDBIOADANBANJ
      CKLM $.
  $}

  $( Membership of the original in a power set.  (Contributed by Stefan O'Rear,
     1-Feb-2015.) $)
  pwidg $p |- ( A e. V -> A e. ~P A ) $=
    ( wcel cpw wss ssid elpwg mpbiri ) ABCAADCAAEAFAABGH $.

  ${
    pwid.1 $e |- A e. _V $.
    $( A set is a member of its power class.  Theorem 87 of [Suppes] p. 47.
       (Contributed by NM, 5-Aug-1993.) $)
    pwid $p |- A e. ~P A $=
      ( cvv wcel cpw pwidg ax-mp ) ACDAAEDBACFG $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class.  (Contributed by NM,
       21-Jun-2009.) $)
    pwss $p |- ( ~P A C_ B <-> A. x ( x C_ A -> x e. B ) ) $=
      ( cpw wss cv wcel wi wal dfss2 df-pw abeq2i imbi1i albii bitri ) BDZCEAFZ
      PGZQCGZHZAIQBEZSHZAIAPCJTUBARUASUAAPABKLMNO $.
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Unordered and ordered pairs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include singleton. $)
  csn $a class { A } $.
  $( Extend class notation to include unordered pair. $)
  cpr $a class { A , B } $.
  $( Extend class notation to include unordered triplet. $)
  ctp $a class { A , B , C } $.

  ${
    $d x A $.  $d y A $.  $d z x $.  $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-sn .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    snjust $p |- { x | x = A } = { y | y = A } $=
      ( vz cv wceq cab eqeq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINP
      DBMOCHIJ $.
  $}

  ${
    $d x A $.
    $( Define the singleton of a class.  Definition 7.1 of [Quine] p. 48.  For
       convenience, it is well-defined for proper classes, i.e., those that are
       not elements of ` _V ` , although it is not very meaningful in this
       case.  For an alternate definition see ~ dfsn2 .  (Contributed by NM,
       5-Aug-1993.) $)
    df-sn $a |- { A } = { x | x = A } $.
  $}

  $( Define unordered pair of classes.  Definition 7.1 of [Quine] p. 48.  For
     example, ` A e. { 1 , -u 1 } -> ( A ^ 2 ) = 1 ` ( ~ ex-pr ).  They are
     unordered, so ` { A , B } = { B , A } ` as proven by ~ prcom .  For a more
     traditional definition, but requiring a dummy variable, see ~ dfpr2 .
     (Contributed by NM, 5-Aug-1993.) $)
  df-pr $a |- { A , B } = ( { A } u. { B } ) $.

  $( Define unordered triple of classes.  Definition of [Enderton] p. 19.
     (Contributed by NM, 9-Apr-1994.) $)
  df-tp $a |- { A , B , C } = ( { A , B } u. { C } ) $.

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for singletons.  Part of Exercise 4 of [TakeutiZaring]
       p. 15.  (Contributed by NM, 5-Aug-1993.) $)
    sneq $p |- ( A = B -> { A } = { B } ) $=
      ( vx wceq cv cab csn eqeq2 abbidv df-sn 3eqtr4g ) ABDZCEZADZCFMBDZCFAGBGL
      NOCABMHICAJCBJK $.
  $}

  ${
    sneqi.1 $e |- A = B $.
    $( Equality inference for singletons.  (Contributed by NM, 22-Jan-2004.) $)
    sneqi $p |- { A } = { B } $=
      ( wceq csn sneq ax-mp ) ABDAEBEDCABFG $.
  $}

  ${
    sneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for singletons.  (Contributed by NM, 22-Jan-2004.) $)
    sneqd $p |- ( ph -> { A } = { B } ) $=
      ( wceq csn sneq syl ) ABCEBFCFEDBCGH $.
  $}

  $( Alternate definition of singleton.  Definition 5.1 of [TakeutiZaring]
     p. 15.  (Contributed by NM, 24-Apr-1994.) $)
  dfsn2 $p |- { A } = { A , A } $=
    ( cpr csn cun df-pr unidm eqtr2i ) AABACZHDHAAEHFG $.

  ${
    $d x A $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15.  (Contributed by NM, 5-Aug-1993.) $)
    elsn $p |- ( x e. { A } <-> x = A ) $=
      ( cv wceq csn df-sn abeq2i ) ACBDABEABFG $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of unordered pair.  Definition 5.1 of
       [TakeutiZaring] p. 15.  (Contributed by NM, 24-Apr-1994.) $)
    dfpr2 $p |- { A , B } = { x | ( x = A \/ x = B ) } $=
      ( cpr csn cun cv wceq cab df-pr wcel elun elsn orbi12i bitri abbi2i eqtri
      wo ) BCDBEZCEZFZAGZBHZUBCHZRZAIBCJUEAUAUBUAKUBSKZUBTKZRUEUBSTLUFUCUGUDABM
      ACMNOPQ $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15, generalized.  (Contributed by NM,
       13-Sep-1995.) $)
    elprg $p |- ( A e. V -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) $=
      ( vx cv wceq wo cpr eqeq1 orbi12d dfpr2 elab2g ) EFZBGZNCGZHABGZACGZHEABC
      IDNAGOQPRNABJNACJKEBCLM $.
  $}

  ${
    elpr.1 $e |- A e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15.  (Contributed by NM,
       13-Sep-1995.) $)
    elpr $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cvv wcel cpr wceq wo wb elprg ax-mp ) AEFABCGFABHACHIJDABCEKL $.
  $}

  ${
    elpr2.1 $e |- B e. _V $.
    elpr2.2 $e |- C e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15.  (Contributed by NM,
       14-Oct-2005.) $)
    elpr2 $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cpr wcel wceq wo elprg ibi cvv wb eleq1 mpbiri jaoi syl ibir impbii ) A
      BCFZGZABHZACHZIZUAUDABCTJKUDUAUDALGZUAUDMUBUEUCUBUEBLGDABLNOUCUECLGEACLNO
      PABCLJQRS $.
  $}

  $( If a class is an element of a pair, then it is one of the two paired
     elements.  (Contributed by Scott Fenton, 1-Apr-2011.) $)
  elpri $p |- ( A e. { B , C } -> ( A = B \/ A = C ) ) $=
    ( cpr wcel wceq wo elprg ibi ) ABCDZEABFACFGABCJHI $.

  ${
    nelpri.1 $e |- A =/= B $.
    nelpri.2 $e |- A =/= C $.
    $( If an element doesn't match the items in an unordered pair, it is not in
       the unordered pair.  (Contributed by David A. Wheeler, 10-May-2015.) $)
    nelpri $p |- -. A e. { B , C } $=
      ( wne cpr wcel wn wa wceq wo neanior elpri con3i sylbi mp2an ) ABFZACFZAB
      CGHZIZDERSJABKACKLZIUAABACMTUBABCNOPQ $.
  $}

  ${
    $d A x $.  $d B x $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15 (generalized).  (Contributed by NM, 13-Sep-1995.)  (Proof
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    elsncg $p |- ( A e. V -> ( A e. { B } <-> A = B ) ) $=
      ( vx cv wceq csn eqeq1 df-sn elab2g ) DEZBFABFDABGCKABHDBIJ $.
  $}

  ${
    elsnc.1 $e |- A e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15.  (Contributed by NM, 13-Sep-1995.) $)
    elsnc $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsncg ax-mp ) ADEABFEABGHCABDIJ $.
  $}

  $( There is only one element in a singleton.  (Contributed by NM,
     5-Jun-1994.) $)
  elsni $p |- ( A e. { B } -> A = B ) $=
    ( csn wcel wceq elsncg ibi ) ABCZDABEABHFG $.

  $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
     p. 49.  (Contributed by NM, 28-Oct-2003.) $)
  snidg $p |- ( A e. V -> A e. { A } ) $=
    ( wcel csn wceq eqid elsncg mpbiri ) ABCAADCAAEAFAABGH $.

  $( A class is a set iff it is a member of its singleton.  (Contributed by NM,
     5-Apr-2004.) $)
  snidb $p |- ( A e. _V <-> A e. { A } ) $=
    ( cvv wcel csn snidg elex impbii ) ABCAADZCABEAHFG $.

  ${
    snid.1 $e |- A e. _V $.
    $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
       p. 49.  (Contributed by NM, 31-Dec-1993.) $)
    snid $p |- A e. { A } $=
      ( cvv wcel csn snidb mpbi ) ACDAAEDBAFG $.
  $}

  $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
     p. 15.  This variation requires only that ` B ` , rather than ` A ` , be a
     set.  (Contributed by NM, 28-Oct-2003.) $)
  elsnc2g $p |- ( B e. V -> ( A e. { B } <-> A = B ) ) $=
    ( wcel csn wceq elsni snidg eleq1 syl5ibrcom impbid2 ) BCDZABEZDZABFZABGLNO
    BMDBCHABMIJK $.

  ${
    elsnc2.1 $e |- B e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15.  This variation requires only that ` B ` , rather than ` A ` , be
       a set.  (Contributed by NM, 12-Jun-1994.) $)
    elsnc2 $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsnc2g ax-mp ) BDEABFEABGHCABDIJ $.
  $}

  ${
    $d A x $.  $d ps x $.
    $( Substitution expressed in terms of quantification over a singleton.
       (Contributed by Mario Carneiro, 23-Apr-2015.) $)
    ralsns $p |- ( A e. V -> ( A. x e. { A } ph <-> [. A / x ]. ph ) ) $=
      ( wcel wsbc cv wceq wal csn wral sbc6g df-ral imbi1i albii bitri syl6rbbr
      wi elsn ) CDEABCFBGZCHZARZBIZABCJZKZABCDLUETUDEZARZBIUCABUDMUGUBBUFUAABCS
      NOPQ $.

    $( Restricted existential quantification over a singleton.  (Contributed by
       Mario Carneiro, 23-Apr-2015.) $)
    rexsns $p |- ( A e. V -> ( E. x e. { A } ph <-> [. A / x ]. ph ) ) $=
      ( wcel wsbc cv wceq wa wex csn wrex wb sbc5 a1i df-rex anbi1i exbii bitri
      elsn syl6rbbr ) CDEZABCFZBGZCHZAIZBJZABCKZLZUCUGMUBABCNOUIUDUHEZAIZBJUGAB
      UHPUKUFBUJUEABCTQRSUA $.

    ralsng.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Substitution expressed in terms of quantification over a singleton.
       (Contributed by NM, 14-Dec-2005.)  (Revised by Mario Carneiro,
       23-Apr-2015.) $)
    ralsng $p |- ( A e. V -> ( A. x e. { A } ph <-> ps ) ) $=
      ( wcel csn wral wsbc ralsns sbcieg bitrd ) DEGACDHIACDJBACDEKABCDEFLM $.

    $( Restricted existential quantification over a singleton.  (Contributed by
       NM, 29-Jan-2012.) $)
    rexsng $p |- ( A e. V -> ( E. x e. { A } ph <-> ps ) ) $=
      ( wcel csn wrex wsbc rexsns sbcieg bitrd ) DEGACDHIACDJBACDEKABCDEFLM $.
  $}

  ${
    $d A x $.  $d ps x $.
    ralsn.1 $e |- A e. _V $.
    ralsn.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Convert a quantification over a singleton to a substitution.
       (Contributed by NM, 27-Apr-2009.) $)
    ralsn $p |- ( A. x e. { A } ph <-> ps ) $=
      ( cvv wcel csn wral wb ralsng ax-mp ) DGHACDIJBKEABCDGFLM $.

    $( Restricted existential quantification over a singleton.  (Contributed by
       Jeff Madsen, 5-Jan-2011.) $)
    rexsn $p |- ( E. x e. { A } ph <-> ps ) $=
      ( cvv wcel csn wrex wb rexsng ax-mp ) DGHACDIJBKEABCDGFLM $.
  $}

  ${
    $( Members of an unordered triple of classes.  (Contributed by FL,
       2-Feb-2014.)  (Proof shortened by Mario Carneiro, 11-Feb-2015.) $)
    eltpg $p |- ( A e. V -> ( A e. { B , C , D } <->
       ( A = B \/ A = C \/ A = D ) ) ) $=
      ( wcel cpr csn wo wceq ctp w3o elprg elsncg orbi12d cun df-tp eleq2i elun
      bitri df-3or 3bitr4g ) AEFZABCGZFZADHZFZIZABJZACJZIZADJZIABCDKZFZUIUJULLU
      CUEUKUGULABCEMADENOUNAUDUFPZFUHUMUOABCDQRAUDUFSTUIUJULUAUB $.
  $}

  ${
    $( A member of an unordered triple of classes is one of them.  (Contributed
       by Mario Carneiro, 11-Feb-2015.) $)
    eltpi $p |- ( A e. { B , C , D } -> ( A = B \/ A = C \/ A = D ) ) $=
      ( ctp wcel wceq w3o eltpg ibi ) ABCDEZFABGACGADGHABCDKIJ $.
  $}

  ${
    eltp.1 $e |- A e. _V $.
    $( A member of an unordered triple of classes is one of them.  Special case
       of Exercise 1 of [TakeutiZaring] p. 17.  (Contributed by NM,
       8-Apr-1994.)  (Revised by Mario Carneiro, 11-Feb-2015.) $)
    eltp $p |- ( A e. { B , C , D } <-> ( A = B \/ A = C \/ A = D ) ) $=
      ( cvv wcel ctp wceq w3o wb eltpg ax-mp ) AFGABCDHGABIACIADIJKEABCDFLM $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Alternate definition of unordered triple of classes.  Special case of
       Definition 5.3 of [TakeutiZaring] p. 16.  (Contributed by NM,
       8-Apr-1994.) $)
    dftp2 $p |- { A , B , C } = { x | ( x = A \/ x = B \/ x = C ) } $=
      ( cv wceq w3o ctp vex eltp abbi2i ) AEZBFLCFLDFGABCDHLBCDAIJK $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    nfpr.1 $e |- F/_ x A $.
    nfpr.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for unordered pairs.  (Contributed by
       NM, 14-Nov-1995.) $)
    nfpr $p |- F/_ x { A , B } $=
      ( vy cpr cv wceq wo cab dfpr2 nfeq2 nfor nfab nfcxfr ) ABCGFHZBIZQCIZJZFK
      FBCLTAFRSAAQBDMAQCEMNOP $.
  $}

  $( Membership of a conditional operator in an unordered pair.  (Contributed
     by NM, 17-Jun-2007.) $)
  ifpr $p |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. { A , B } ) $=
    ( wcel cvv cif cpr elex wa ifcl wceq wo ifeqor elprg mpbiri syl syl2an ) BD
    FBGFZCGFZABCHZBCIFZCEFBDJCEJTUAKUBGFZUCABCGLUDUCUBBMUBCMNABCOUBBCGPQRS $.

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x ps $.  $d x ch $.  $d x th $.
    ralprg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ralprg.2 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( Convert a quantification over a pair to a conjunction.  (Contributed by
       NM, 17-Sep-2011.)  (Revised by Mario Carneiro, 23-Apr-2015.) $)
    ralprg $p |- ( ( A e. V /\ B e. W ) ->
      ( A. x e. { A , B } ph <-> ( ps /\ ch ) ) ) $=
      ( cpr wral csn wa wcel cun df-pr raleqi ralunb ralsng bi2anan9 syl5bb
      bitri ) ADEFKZLZADEMZLZADFMZLZNZEGOZFHOZNBCNUEADUFUHPZLUJADUDUMEFQRADUFUH
      SUCUKUGBULUICABDEGITACDFHJTUAUB $.

    $( Convert a quantification over a pair to a disjunction.  (Contributed by
       NM, 17-Sep-2011.)  (Revised by Mario Carneiro, 23-Apr-2015.) $)
    rexprg $p |- ( ( A e. V /\ B e. W ) ->
      ( E. x e. { A , B } ph <-> ( ps \/ ch ) ) ) $=
      ( cpr wrex csn wo wcel wa cun df-pr rexeqi rexsng orbi1d orbi2d sylan9bb
      rexun bitri syl5bb ) ADEFKZLZADEMZLZADFMZLZNZEGOZFHOZPBCNZUHADUIUKQZLUMAD
      UGUQEFRSADUIUKUDUEUNUMBULNUOUPUNUJBULABDEGITUAUOULCBACDFHJTUBUCUF $.

    raltpg.3 $e |- ( x = C -> ( ph <-> th ) ) $.
    $( Convert a quantification over a triple to a conjunction.  (Contributed
       by NM, 17-Sep-2011.)  (Revised by Mario Carneiro, 23-Apr-2015.) $)
    raltpg $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
      ( A. x e. { A , B , C } ph <-> ( ps /\ ch /\ th ) ) ) $=
      ( wcel w3a cpr wral csn wa ctp wb ralprg ralsng bi2anan9 3impa cun raleqi
      df-tp ralunb bitri df-3an 3bitr4g ) FIOZGJOZHKOZPAEFGQZRZAEHSZRZTZBCTZDTZ
      AEFGHUAZRZBCDPUNUOUPVAVCUBUNUOTURVBUPUTDABCEFGIJLMUCADEHKNUDUEUFVEAEUQUSU
      GZRVAAEVDVFFGHUIUHAEUQUSUJUKBCDULUM $.

    $( Convert a quantification over a triple to a disjunction.  (Contributed
       by Mario Carneiro, 23-Apr-2015.) $)
    rextpg $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
      ( E. x e. { A , B , C } ph <-> ( ps \/ ch \/ th ) ) ) $=
      ( wcel w3a cpr wrex csn wo ctp wb wa rexprg orbi1d rexsng orbi2d sylan9bb
      w3o 3impa cun df-tp rexeqi rexun bitri df-3or 3bitr4g ) FIOZGJOZHKOZPAEFG
      QZRZAEHSZRZTZBCTZDTZAEFGHUAZRZBCDUIURUSUTVEVGUBURUSUCZVEVFVDTUTVGVJVBVFVD
      ABCEFGIJLMUDUEUTVDDVFADEHKNUFUGUHUJVIAEVAVCUKZRVEAEVHVKFGHULUMAEVAVCUNUOB
      CDUPUQ $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.  $d x ch $.
    ralpr.1 $e |- A e. _V $.
    ralpr.2 $e |- B e. _V $.
    ralpr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ralpr.4 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( Convert a quantification over a pair to a conjunction.  (Contributed by
       NM, 3-Jun-2007.)  (Revised by Mario Carneiro, 23-Apr-2015.) $)
    ralpr $p |- ( A. x e. { A , B } ph <-> ( ps /\ ch ) ) $=
      ( cvv wcel cpr wral wa wb ralprg mp2an ) EKLFKLADEFMNBCOPGHABCDEFKKIJQR
      $.

    $( Convert an existential quantification over a pair to a disjunction.
       (Contributed by NM, 3-Jun-2007.)  (Revised by Mario Carneiro,
       23-Apr-2015.) $)
    rexpr $p |- ( E. x e. { A , B } ph <-> ( ps \/ ch ) ) $=
      ( cvv wcel cpr wrex wo wb rexprg mp2an ) EKLFKLADEFMNBCOPGHABCDEFKKIJQR
      $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x ps $.  $d x ch $.  $d x th $.
    raltp.1 $e |- A e. _V $.
    raltp.2 $e |- B e. _V $.
    raltp.3 $e |- C e. _V $.
    raltp.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    raltp.5 $e |- ( x = B -> ( ph <-> ch ) ) $.
    raltp.6 $e |- ( x = C -> ( ph <-> th ) ) $.
    $( Convert a quantification over a triple to a conjunction.  (Contributed
       by NM, 13-Sep-2011.)  (Revised by Mario Carneiro, 23-Apr-2015.) $)
    raltp $p |- ( A. x e. { A , B , C } ph <-> ( ps /\ ch /\ th ) ) $=
      ( cvv wcel ctp wral w3a wb raltpg mp3an ) FOPGOPHOPAEFGHQRBCDSTIJKABCDEFG
      HOOOLMNUAUB $.

    $( Convert a quantification over a triple to a disjunction.  (Contributed
       by Mario Carneiro, 23-Apr-2015.) $)
    rextp $p |- ( E. x e. { A , B , C } ph <-> ( ps \/ ch \/ th ) ) $=
      ( cvv wcel ctp wrex w3o wb rextpg mp3an ) FOPGOPHOPAEFGHQRBCDSTIJKABCDEFG
      HOOOLMNUAUB $.
  $}

  ${
    $d x y A $.  $d y ph $.
    $( TODO - make obsolete; use ralsnsSBC instead - also,
       shorten posn w/ ralsn or ralsng $)
    $( Substitution expressed in terms of quantification over a singleton.
       (Contributed by NM, 14-Dec-2005.)  (Revised by Mario Carneiro,
       23-Apr-2015.) $)
    sbcsng $p |- ( A e. V -> ( [. A / x ]. ph <-> A. x e. { A } ph ) ) $=
      ( wcel csn wral wsbc ralsns bicomd ) CDEABCFGABCHABCDIJ $.
  $}

  ${
    nfsn.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for singletons.  (Contributed by NM,
       14-Nov-1995.) $)
    nfsn $p |- F/_ x { A } $=
      ( csn cpr dfsn2 nfpr nfcxfr ) ABDBBEBFABBCCGH $.
  $}

  ${
    $d A y $.  $d B y $.  $d V y $.  $d x y $.
    $( Distribute proper substitution through the singleton of a class.
       ~ csbsng is derived from the virtual deduction proof ~ csbsngVD .
       (Contributed by Alan Sare, 10-Nov-2012.) $)
    csbsng $p |- ( A e. V -> [_ A / x ]_ { B } = { [_ A / x ]_ B } ) $=
      ( vy wcel wceq cab csb csn wsbc csbabg sbceq2g abbidv eqtrd df-sn csbeq2i
      cv 3eqtr4g ) BDFZABERZCGZEHZIZUAABCIZGZEHZABCJZIUEJTUDUBABKZEHUGUBAEBDLTU
      IUFEABUACDMNOABUHUCECPQEUEPS $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Intersection with the singleton of a non-member is disjoint.
       (Contributed by NM, 22-May-1998.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.)  (Proof shortened by Wolf Lammen, 30-Sep-2014.) $)
    disjsn $p |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) $=
      ( vx csn cin c0 wceq cv wcel wn wi wal wa disj1 con2b imbi1i imnan 3bitri
      elsn albii wex alnex df-clel xchbinxr ) ABDZEFGCHZAIZUFUEIZJKZCLUFBGZUGMZ
      JZCLZBAIZJCAUENUIULCUIUHUGJZKUJUOKULUGUHOUHUJUOCBSPUJUGQRTUMUKCUAUNUKCUBC
      BAUCUDR $.
  $}

  $( Intersection of distinct singletons is disjoint.  (Contributed by NM,
     25-May-1998.) $)
  disjsn2 $p |- ( A =/= B -> ( { A } i^i { B } ) = (/) ) $=
    ( wne csn wcel wn cin c0 wceq elsni eqcomd necon3ai disjsn sylibr ) ABCBADZ
    EZFOBDGHIPABPBABAJKLOBMN $.

  ${
    $d x A $.
    $( The singleton of a proper class (one that doesn't exist) is the empty
       set.  Theorem 7.2 of [Quine] p. 48.  (Contributed by NM, 5-Aug-1993.) $)
    snprc $p |- ( -. A e. _V <-> { A } = (/) ) $=
      ( vx csn c0 wceq cvv wcel cv wex wn elsn exbii neq0 isset 3bitr4i con1bii
      ) ACZDEZAFGZBHZQGZBITAEZBIRJSUAUBBBAKLBQMBANOP $.
  $}

  ${
    $d x y A $.  $d x B $.
    r19.12sn.1 $e |- A e. _V $.
    $( Special case of ~ r19.12 where its converse holds.  (Contributed by NM,
       19-May-2008.)  (Revised by Mario Carneiro, 23-Apr-2015.) $)
    r19.12sn $p |- ( E. x e. { A } A. y e. B ph
                <-> A. y e. B E. x e. { A } ph ) $=
      ( cvv wcel wral csn wrex wb wsbc sbcralg rexsns ralbidv 3bitr4d ax-mp ) D
      GHZACEIZBDJZKZABUAKZCEIZLFSTBDMABDMZCEIUBUDABCDEGNTBDGOSUCUECEABDGOPQR $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Condition where a restricted class abstraction is a singleton.
       (Contributed by NM, 28-May-2006.) $)
    rabsn $p |- ( B e. A -> { x e. A | x = B } = { B } ) $=
      ( wcel cv wceq wa cab crab csn eleq1 pm5.32ri abbidv df-rab df-sn 3eqtr4g
      baib ) CBDZAEZBDZSCFZGZAHUAAHUAABICJRUBUAAUBRUAUATRSCBKLQMUAABNACOP $.
  $}

  ${
    $d x y $.  $d y ph $.  $d y A $.
    $( Another way to express existential uniqueness of a wff: its class
       abstraction is a singleton.  (Contributed by Mario Carneiro,
       14-Nov-2016.) $)
    euabsn2 $p |- ( E! x ph <-> E. y { x | ph } = { y } ) $=
      ( weu cv wceq wb wal wex cab csn df-eu wcel abeq1 elsn bibi2i albii bitri
      exbii bitr4i ) ABDABEZCEZFZGZBHZCIABJUBKZFZCIABCLUGUECUGAUAUFMZGZBHUEABUF
      NUIUDBUHUCABUBOPQRST $.

    $( Another way to express existential uniqueness of a wff: its class
       abstraction is a singleton.  (Contributed by NM, 22-Feb-2004.) $)
    euabsn $p |- ( E! x ph <-> E. x { x | ph } = { x } ) $=
      ( vy weu cab cv csn wceq wex euabsn2 nfab1 nfeq1 sneq eqeq2d cbvex bitr4i
      nfv ) ABDABEZCFZGZHZCIRBFZGZHZBIABCJUDUABCUDCQBRTABKLUBSHUCTRUBSMNOP $.

    $( A way to express restricted existential uniqueness of a wff: its
       restricted class abstraction is a singleton.  (Contributed by NM,
       30-May-2006.)  (Proof shortened by Mario Carneiro, 14-Nov-2016.) $)
    reusn $p |- ( E! x e. A ph <-> E. y { x e. A | ph } = { y } ) $=
      ( cv wcel wa weu cab csn wceq wex wreu euabsn2 df-reu df-rab eqeq1i exbii
      crab 3bitr4i ) BEDFAGZBHUABIZCEJZKZCLABDMABDSZUCKZCLUABCNABDOUFUDCUEUBUCA
      BDPQRT $.

    $( Restricted existential uniqueness determined by a singleton.
       (Contributed by NM, 29-May-2006.) $)
    absneu $p |- ( ( A e. V /\ { x | ph } = { A } ) -> E! x ph ) $=
      ( vy wcel cab csn wceq wa wex weu sneq eqeq2d spcegv imp euabsn2 sylibr
      cv ) CDFZABGZCHZIZJUAESZHZIZEKZABLTUCUGUFUCECDUDCIUEUBUAUDCMNOPABEQR $.

    $( Restricted existential uniqueness determined by a singleton.
       (Contributed by NM, 29-May-2006.)  (Revised by Mario Carneiro,
       23-Dec-2016.) $)
    rabsneu $p |- ( ( A e. V /\ { x e. B | ph } = { A } ) -> E! x e. B ph ) $=
      ( wcel crab csn wceq wa cv weu df-rab eqeq1i absneu sylan2b df-reu sylibr
      wreu cab ) CEFZABDGZCHZIZJBKDFAJZBLZABDSUDUAUEBTZUCIUFUBUGUCABDMNUEBCEOPA
      BDQR $.
  $}

  ${
    $d x A $.
    $( Two ways to express " ` A ` is a singleton."  (Contributed by NM,
       30-Oct-2010.) $)
    eusn $p |- ( E! x x e. A <-> E. x A = { x } ) $=
      ( cv wcel weu cab csn wceq wex euabsn abid2 eqeq1i exbii bitri ) ACZBDZAE
      PAFZOGZHZAIBRHZAIPAJSTAQBRABKLMN $.
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rabsnt.1 $e |- B e. _V $.
    rabsnt.2 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Truth implied by equality of a restricted class abstraction and a
       singleton.  (Contributed by NM, 29-May-2006.)  (Proof shortened by Mario
       Carneiro, 23-Dec-2016.) $)
    rabsnt $p |- ( { x e. A | ph } = { B } -> ps ) $=
      ( crab csn wceq wcel snid id syl5eleqr elrab simprbi syl ) ACDHZEIZJZERKZ
      BTESREFLTMNUAEDKBABCEDGOPQ $.
  $}

  $( Commutative law for unordered pairs.  (Contributed by NM, 5-Aug-1993.) $)
  prcom $p |- { A , B } = { B , A } $=
    ( csn cun cpr uncom df-pr 3eqtr4i ) ACZBCZDJIDABEBAEIJFABGBAGH $.

  $( Equality theorem for unordered pairs.  (Contributed by NM,
     29-Mar-1998.) $)
  preq1 $p |- ( A = B -> { A , C } = { B , C } ) $=
    ( wceq csn cun cpr sneq uneq1d df-pr 3eqtr4g ) ABDZAEZCEZFBEZNFACGBCGLMONAB
    HIACJBCJK $.

  $( Equality theorem for unordered pairs.  (Contributed by NM, 5-Aug-1993.) $)
  preq2 $p |- ( A = B -> { C , A } = { C , B } ) $=
    ( wceq cpr preq1 prcom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.

  $( Equality theorem for unordered pairs.  (Contributed by NM,
     19-Oct-2012.) $)
  preq12 $p |- ( ( A = C /\ B = D ) -> { A , B } = { C , D } ) $=
    ( wceq cpr preq1 preq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.

  ${
    preq1i.1 $e |- A = B $.
    $( Equality inference for unordered pairs.  (Contributed by NM,
       19-Oct-2012.) $)
    preq1i $p |- { A , C } = { B , C } $=
      ( wceq cpr preq1 ax-mp ) ABEACFBCFEDABCGH $.

    $( Equality inference for unordered pairs.  (Contributed by NM,
       19-Oct-2012.) $)
    preq2i $p |- { C , A } = { C , B } $=
      ( wceq cpr preq2 ax-mp ) ABECAFCBFEDABCGH $.

    ${
      preq12i.2 $e |- C = D $.
      $( Equality inference for unordered pairs.  (Contributed by NM,
         19-Oct-2012.) $)
      preq12i $p |- { A , C } = { B , D } $=
        ( wceq cpr preq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
    $}
  $}

  ${
    preq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for unordered pairs.  (Contributed by NM,
       19-Oct-2012.) $)
    preq1d $p |- ( ph -> { A , C } = { B , C } ) $=
      ( wceq cpr preq1 syl ) ABCFBDGCDGFEBCDHI $.

    $( Equality deduction for unordered pairs.  (Contributed by NM,
       19-Oct-2012.) $)
    preq2d $p |- ( ph -> { C , A } = { C , B } ) $=
      ( wceq cpr preq2 syl ) ABCFDBGDCGFEBCDHI $.

    preq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for unordered pairs.  (Contributed by NM,
       19-Oct-2012.) $)
    preq12d $p |- ( ph -> { A , C } = { B , D } ) $=
      ( wceq cpr preq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
  $}

  $( Equality theorem for unordered triples.  (Contributed by NM,
     13-Sep-2011.) $)
  tpeq1 $p |- ( A = B -> { A , C , D } = { B , C , D } ) $=
    ( wceq cpr csn cun ctp preq1 uneq1d df-tp 3eqtr4g ) ABEZACFZDGZHBCFZPHACDIB
    CDINOQPABCJKACDLBCDLM $.

  $( Equality theorem for unordered triples.  (Contributed by NM,
     13-Sep-2011.) $)
  tpeq2 $p |- ( A = B -> { C , A , D } = { C , B , D } ) $=
    ( wceq cpr csn cun ctp preq2 uneq1d df-tp 3eqtr4g ) ABEZCAFZDGZHCBFZPHCADIC
    BDINOQPABCJKCADLCBDLM $.

  $( Equality theorem for unordered triples.  (Contributed by NM,
     13-Sep-2011.) $)
  tpeq3 $p |- ( A = B -> { C , D , A } = { C , D , B } ) $=
    ( wceq cpr csn cun ctp sneq uneq2d df-tp 3eqtr4g ) ABEZCDFZAGZHOBGZHCDAICDB
    INPQOABJKCDALCDBLM $.

  ${
    tpeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for unordered triples.  (Contributed by NM,
       22-Jun-2014.) $)
    tpeq1d $p |- ( ph -> { A , C , D } = { B , C , D } ) $=
      ( wceq ctp tpeq1 syl ) ABCGBDEHCDEHGFBCDEIJ $.

    $( Equality theorem for unordered triples.  (Contributed by NM,
       22-Jun-2014.) $)
    tpeq2d $p |- ( ph -> { C , A , D } = { C , B , D } ) $=
      ( wceq ctp tpeq2 syl ) ABCGDBEHDCEHGFBCDEIJ $.

    $( Equality theorem for unordered triples.  (Contributed by NM,
       22-Jun-2014.) $)
    tpeq3d $p |- ( ph -> { C , D , A } = { C , D , B } ) $=
      ( wceq ctp tpeq3 syl ) ABCGDEBHDECHGFBCDEIJ $.

    tpeq123d.2 $e |- ( ph -> C = D ) $.
    tpeq123d.3 $e |- ( ph -> E = F ) $.
    $( Equality theorem for unordered triples.  (Contributed by NM,
       22-Jun-2014.) $)
    tpeq123d $p |- ( ph -> { A , C , E } = { B , D , F } ) $=
      ( ctp tpeq1d tpeq2d tpeq3d 3eqtrd ) ABDFKCDFKCEFKCEGKABCDFHLADECFIMAFGCEJ
      NO $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Rotation of the elements of an unordered triple.  (Contributed by Alan
       Sare, 24-Oct-2011.) $)
    tprot $p |- { A , B , C } = { B , C , A } $=
      ( vx cv wceq w3o cab ctp 3orrot abbii dftp2 3eqtr4i ) DEZAFZNBFZNCFZGZDHP
      QOGZDHABCIBCAIRSDOPQJKDABCLDBCALM $.
  $}

  $( Swap 1st and 2nd members of an undordered triple.  (Contributed by NM,
     22-May-2015.) $)
  tpcoma $p |- { A , B , C } = { B , A , C } $=
    ( cpr csn cun ctp prcom uneq1i df-tp 3eqtr4i ) ABDZCEZFBADZMFABCGBACGLNMABH
    IABCJBACJK $.

  $( Swap 2nd and 3rd members of an undordered triple.  (Contributed by NM,
     22-May-2015.) $)
  tpcomb $p |- { A , B , C } = { A , C , B } $=
    ( ctp tpcoma tprot 3eqtr4i ) BCADCBADABCDACBDBCAEABCFACBFG $.

  $( Split off the first element of an unordered triple.  (Contributed by Mario
     Carneiro, 5-Jan-2016.) $)
  tpass $p |- { A , B , C } = ( { A } u. { B , C } ) $=
    ( ctp cpr csn cun df-tp tprot uncom 3eqtr4i ) BCADBCEZAFZGABCDMLGBCAHABCIML
    JK $.

  $( Two ways to write an unordered quadruple.  (Contributed by Mario Carneiro,
     5-Jan-2016.) $)
  qdass $p |- ( { A , B } u. { C , D } ) = ( { A , B , C } u. { D } ) $=
    ( cpr csn cun ctp unass df-tp uneq1i df-pr uneq2i 3eqtr4ri ) ABEZCFZGZDFZGO
    PRGZGABCHZRGOCDEZGOPRITQRABCJKUASOCDLMN $.

  $( Two ways to write an unordered quadruple.  (Contributed by Mario Carneiro,
     5-Jan-2016.) $)
  qdassr $p |- ( { A , B } u. { C , D } ) = ( { A } u. { B , C , D } ) $=
    ( csn cun cpr ctp unass df-pr uneq1i tpass uneq2i 3eqtr4i ) AEZBEZFZCDGZFOP
    RFZFABGZRFOBCDHZFOPRITQRABJKUASOBCDLMN $.

  $( Unordered triple ` { A , A , B } ` is just an overlong way to write
     ` { A , B } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm12 $p |- { A , A , B } = { A , B } $=
    ( csn cun cpr ctp dfsn2 uneq1i df-pr df-tp 3eqtr4ri ) ACZBCZDAAEZMDABEAABFL
    NMAGHABIAABJK $.

  $( Unordered triple ` { A , B , A } ` is just an overlong way to write
     ` { A , B } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm13 $p |- { A , B , A } = { A , B } $=
    ( ctp cpr tprot tpidm12 eqtr3i ) AABCABACABDAABEABFG $.

  $( Unordered triple ` { A , B , B } ` is just an overlong way to write
     ` { A , B } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm23 $p |- { A , B , B } = { A , B } $=
    ( ctp cpr tprot tpidm12 prcom 3eqtri ) ABBCBBACBADABDABBEBAFBAGH $.

  $( Unordered triple ` { A , A , A } ` is just an overlong way to write
     ` { A } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm $p |- { A , A , A } = { A } $=
    ( ctp cpr csn tpidm12 dfsn2 eqtr4i ) AAABAACADAAEAFG $.

  $( An unordered pair contains its first member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid1g $p |- ( A e. V -> A e. { A , B } ) $=
    ( wcel cpr wceq wo eqid orci elprg mpbiri ) ACDAABEDAAFZABFZGLMAHIAABCJK $.

  $( An unordered pair contains its second member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid2g $p |- ( B e. V -> B e. { A , B } ) $=
    ( wcel cpr prid1g prcom syl6eleq ) BCDBBAEABEBACFBAGH $.

  ${
    prid1.1 $e |- A e. _V $.
    $( An unordered pair contains its first member.  Part of Theorem 7.6 of
       [Quine] p. 49.  (Contributed by NM, 5-Aug-1993.) $)
    prid1 $p |- A e. { A , B } $=
      ( cvv wcel cpr prid1g ax-mp ) ADEAABFECABDGH $.
  $}

  ${
    prid2.1 $e |- B e. _V $.
    $( An unordered pair contains its second member.  Part of Theorem 7.6 of
       [Quine] p. 49.  (Contributed by NM, 5-Aug-1993.) $)
    prid2 $p |- B e. { A , B } $=
      ( cpr prid1 prcom eleqtri ) BBADABDBACEBAFG $.
  $}

  ${
    tpid1.1 $e |- A e. _V $.
    $( One of the three elements of an unordered triple.  (Contributed by NM,
       7-Apr-1994.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid1 $p |- A e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix1i eltp mpbir ) AABCEFAAGZABGZACGZHMNOAIJAAB
      CDKL $.
  $}

  ${
    tpid2.1 $e |- B e. _V $.
    $( One of the three elements of an unordered triple.  (Contributed by NM,
       7-Apr-1994.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid2 $p |- B e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix2i eltp mpbir ) BABCEFBAGZBBGZBCGZHNMOBIJBAB
      CDKL $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.  $d x ps $.
    $( Closed theorem form of ~ tpid3 .  This proof was automatically generated
       from the virtual deduction proof ~ tpid3gVD using a translation
       program.  (Contributed by Alan Sare, 24-Oct-2011.) $)
    tpid3g $p |- ( A e. B -> A e. { C , D , A } ) $=
      ( vx wcel cv wceq wex ctp elisset w3o cab wi 3mix3 a1i abid syl6ibr dftp2
      eleq2i eleq1 mpbidi exlimdv mpd ) ABFZEGZAHZEIACDAJZFZEABKUEUGUIEUGUFUHFZ
      UIUEUEUGUFUFCHZUFDHZUGLZEMZFZUJUEUGUMUOUGUMNUEUGUKULOPUMEQRUHUNUFECDASTRU
      FAUHUAUBUCUD $.
  $}

  ${
    tpid3.1 $e |- C e. _V $.
    $( One of the three elements of an unordered triple.  (Contributed by NM,
       7-Apr-1994.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid3 $p |- C e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix3i eltp mpbir ) CABCEFCAGZCBGZCCGZHOMNCIJCAB
      CDKL $.
  $}

  $( The singleton of a set is not empty.  (Contributed by NM, 14-Dec-2008.) $)
  snnzg $p |- ( A e. V -> { A } =/= (/) ) $=
    ( wcel csn c0 wne snidg ne0i syl ) ABCAADZCJEFABGJAHI $.

  ${
    snnz.1 $e |- A e. _V $.
    $( The singleton of a set is not empty.  (Contributed by NM,
       10-Apr-1994.) $)
    snnz $p |- { A } =/= (/) $=
      ( cvv wcel csn c0 wne snnzg ax-mp ) ACDAEFGBACHI $.
  $}

  ${
    prnz.1 $e |- A e. _V $.
    $( A pair containing a set is not empty.  (Contributed by NM,
       9-Apr-1994.) $)
    prnz $p |- { A , B } =/= (/) $=
      ( cpr wcel c0 wne prid1 ne0i ax-mp ) AABDZEKFGABCHKAIJ $.
  $}

  ${
    $d x A $.  $d x B $.
    $( A pair containing a set is not empty.  (Contributed by FL,
       19-Sep-2011.) $)
    prnzg $p |- ( A e. V -> { A , B } =/= (/) ) $=
      ( vx cv cpr c0 wne wceq preq1 neeq1d vex prnz vtoclg ) DEZBFZGHABFZGHDACO
      AIPQGOABJKOBDLMN $.
  $}

  ${
    tpnz.1 $e |- A e. _V $.
    $( A triplet containing a set is not empty.  (Contributed by NM,
       10-Apr-1994.) $)
    tpnz $p |- { A , B , C } =/= (/) $=
      ( ctp wcel c0 wne tpid1 ne0i ax-mp ) AABCEZFLGHABCDILAJK $.
  $}

  ${
    $d A x $.  $d B x $.
    snss.1 $e |- A e. _V $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49.  (Contributed by NM, 5-Aug-1993.) $)
    snss $p |- ( A e. B <-> { A } C_ B ) $=
      ( vx cv csn wcel wi wal wceq wss elsn imbi1i albii dfss2 clel2 3bitr4ri )
      DEZAFZGZRBGZHZDIRAJZUAHZDISBKABGUBUDDTUCUADALMNDSBODABCPQ $.
  $}

  $( Membership in a set with an element removed.  (Contributed by NM,
     10-Oct-2007.) $)
  eldifsn $p |- ( A e. ( B \ { C } ) <-> ( A e. B /\ A =/= C ) ) $=
    ( csn cdif wcel wn wa wne eldif elsncg necon3bbid pm5.32i bitri ) ABCDZEFAB
    FZAOFZGZHPACIZHABOJPRSPQACACBKLMN $.

  $( Membership in a set with an element removed.  (Contributed by NM,
     10-Mar-2015.) $)
  eldifsni $p |- ( A e. ( B \ { C } ) -> A =/= C ) $=
    ( csn cdif wcel wne eldifsn simprbi ) ABCDEFABFACGABCHI $.

  $( ` A ` is not in ` ( B \ { A } ) ` .  (Contributed by David Moews,
     1-May-2017.) $)
  neldifsn $p |- -. A e. ( B \ { A } ) $=
    ( csn cdif wcel wne neirr eldifsni mto ) ABACDEAAFAGABAHI $.

  $( ` A ` is not in ` ( B \ { A } ) ` .  Deduction form.  (Contributed by
     David Moews, 1-May-2017.) $)
  neldifsnd $p |- ( ph -> -. A e. ( B \ { A } ) ) $=
    ( csn cdif wcel wn neldifsn a1i ) BCBDEFGABCHI $.

  $( Restricted existential quantification over a set with an element removed.
     (Contributed by NM, 4-Feb-2015.) $)
  rexdifsn $p |- ( E. x e. ( A \ { B } ) ph
      <-> E. x e. A ( x =/= B /\ ph ) ) $=
    ( cv wne wa csn cdif wcel eldifsn anbi1i anass bitri rexbii2 ) ABEZDFZAGZBC
    DHIZCPSJZAGPCJZQGZAGUARGTUBAPCDKLUAQAMNO $.

  ${
    $d A x $.  $d B x $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49.  (Contributed by NM, 22-Jul-2001.) $)
    snssg $p |- ( A e. V -> ( A e. B <-> { A } C_ B ) ) $=
      ( vx cv wcel csn wss eleq1 wceq sneq sseq1d vex snss vtoclbg ) DEZBFPGZBH
      ABFAGZBHDACPABIPAJQRBPAKLPBDMNO $.

    $( An element not in a set can be removed without affecting the set.
       (Contributed by NM, 16-Mar-2006.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    difsn $p |- ( -. A e. B -> ( B \ { A } ) = B ) $=
      ( vx wcel wn csn cdif cv wne wa eldifsn simpl wceq eleq1 biimpcd necon3bd
      com12 ancld impbid2 syl5bb eqrdv ) ABDZEZCBAFGZBCHZUDDUEBDZUEAIZJZUCUFUEB
      AKUCUHUFUFUGLUCUFUGUFUCUGUFUBUEAUEAMUFUBUEABNOPQRSTUA $.

    $( Removal of a singleton from an unordered pair.  (Contributed by NM,
       16-Mar-2006.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    difprsnss $p |- ( { A , B } \ { A } ) C_ { B } $=
      ( vx cpr csn cdif cv wcel wn wa wceq wo elpr elsn notbii biimparc syl2anb
      vex biorf eldif 3imtr4i ssriv ) CABDZAEZFZBEZCGZUCHZUGUDHZIZJUGBKZUGUEHUG
      UFHUHUGAKZUKLZULIZUKUJUGABCRMUIULCANOUNUKUMULUKSPQUGUCUDTCBNUAUB $.
  $}

  $( Removal of a singleton from an unordered pair.  (Contributed by Thierry
     Arnoux, 4-Feb-2017.) $)
  difprsn1 $p |- ( A =/= B -> ( { A , B } \ { A } ) = { B } ) $=
    ( wne cpr csn cdif wceq necom cin c0 disjsn2 disj3 sylib cun df-pr equncomi
    difeq1i difun2 eqtri syl6reqr sylbir ) ABCBACZABDZAEZFZBEZGBAHUBUFUFUDFZUEU
    BUFUDIJGUFUGGBAKUFUDLMUEUFUDNZUDFUGUCUHUDUCUDUFABOPQUFUDRSTUA $.

  $( Removal of a singleton from an unordered pair.  (Contributed by Alexander
     van der Vekens, 5-Oct-2017.) $)
  difprsn2 $p |- ( A =/= B -> ( { A , B } \ { B } ) = { A } ) $=
    ( wne cpr csn cdif prcom difeq1i wceq necom difprsn1 sylbi syl5eq ) ABCZABD
    ZBEZFBADZPFZAEZOQPABGHNBACRSIABJBAKLM $.

  $( Removal of a singleton from an unordered triple.  (Contributed by
     Alexander van der Vekens, 5-Oct-2017.) $)
  diftpsn3 $p |- ( ( A =/= C /\ B =/= C )
                    -> ( { A , B , C } \ { C } ) = { A , B } ) $=
    ( wne wa ctp csn cdif cpr cun a1i c0 cin necom disjsn2 sylbi uneq12d syl6eq
    wceq 3eqtrd df-tp difeq1d df-pr ineq1d incom indi eqtri adantr adantl unidm
    difundir disj3 sylib eqcomd difid un0 ) ACDZBCDZEZABCFZCGZHABIZVAJZVAHZVBVA
    HZVAVAHZJZVBUSUTVCVAUTVCSUSABCUAKUBVDVGSUSVBVAVAUKKUSVGVBLJVBUSVEVBVFLUSVBV
    EUSVBVAMZLSVBVESUSVHAGZBGZJZVAMZVAVIMZVAVJMZJZLUSVBVKVAVBVKSUSABUCKUDVLVOSU
    SVLVAVKMVOVKVAUEVAVIVJUFUGKUSVOLLJLUSVMLVNLUQVMLSZURUQCADVPACNCAOPUHURVNLSZ
    UQURCBDVQBCNCBOPUIQLUJRTVBVAULUMUNVFLSUSVAUOKQVBUPRT $.

  $( ` ( B \ { A } ) ` equals ` B ` if and only if ` A ` is not a member of
     ` B ` .  Generalization of ~ difsn .  (Contributed by David Moews,
     1-May-2017.) $)
  difsnb $p |- ( -. A e. B <-> ( B \ { A } ) = B ) $=
    ( wcel wn csn cdif wceq difsn neldifsnd nelne1 mpdan necomd necon2bi impbii
    wne ) ABCZDBAEFZBGABHPQBPBQPAQCDBQOPABIABQJKLMN $.

  $( ` ( B \ { A } ) ` is a proper subclass of ` B ` if and only if ` A ` is a
     member of ` B ` .  (Contributed by David Moews, 1-May-2017.) $)
  difsnpss $p |- ( A e. B <-> ( B \ { A } ) C. B ) $=
    ( wcel wn csn cdif wpss notnot wne wss wa biantrur difsnb necon3bbii df-pss
    difss 3bitr4i bitri ) ABCZSDZDZBAEZFZBGZSHUCBIZUCBJZUEKUAUDUFUEBUBPLTUCBABM
    NUCBOQR $.

  $( The singleton of an element of a class is a subset of the class.
     (Contributed by NM, 6-Jun-1994.) $)
  snssi $p |- ( A e. B -> { A } C_ B ) $=
    ( wcel csn wss snssg ibi ) ABCADBEABBFG $.

  ${
    snssd.1 $e |- ( ph -> A e. B ) $.
    $( The singleton of an element of a class is a subset of the class
       (deduction rule).  (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    snssd $p |- ( ph -> { A } C_ B ) $=
      ( wcel csn wss wb snssg syl mpbid ) ABCEZBFCGZDALLMHDBCCIJK $.
  $}

  $( If we remove a single element from a class then put it back in, we end up
     with the original class.  (Contributed by NM, 2-Oct-2006.) $)
  difsnid $p |- ( B e. A -> ( ( A \ { B } ) u. { B } ) = A ) $=
    ( wcel csn cdif cun uncom wss wceq snssi undif sylib syl5eq ) BACZABDZEZOFO
    PFZAPOGNOAHQAIBAJOAKLM $.

  ${
    $d x y $.
    $( Compute the power set of the power set of the empty set.  (See ~ pw0 for
       the power set of the empty set.)  Theorem 90 of [Suppes] p. 48.
       Although this theorem is a special case of ~ pwsn , we have chosen to
       show a direct elementary proof.  (Contributed by NM, 7-Aug-1994.) $)
    pwpw0 $p |- ~P { (/) } = { (/) , { (/) } } $=
      ( vx vy cv c0 csn wss cab wceq wo cpw cpr wn wa wcel wal dfss2 elsn sylbi
      wi wex imbi2i albii bitri neq0 exintr syl5bi exancom df-clel bitr4i snssi
      syl6 anc2li eqss syl6ibr orrd sseq1 mpbiri eqimss jaoi impbii abbii df-pw
      0ss dfpr2 3eqtr4i ) ACZDEZFZAGVFDHZVFVGHZIZAGVGJDVGKVHVKAVHVKVHVIVJVHVILZ
      VHVGVFFZMVJVHVLVMVHBCZVFNZVNDHZSZBOZVLVMSVHVOVNVGNZSZBOVRBVFVGPVTVQBVSVPV
      OBDQUAUBUCVRVLVOVPMBTZVMVLVOBTVRWABVFUDVOVPBUEUFWADVFNZVMWAVPVOMBTWBVOVPB
      UGBDVFUHUIDVFUJRUKRULVFVGUMUNUOVIVHVJVIVHDVGFVGVCVFDVGUPUQVFVGURUSUTVAAVG
      VBADVGVDVE $.
  $}

  $( A singleton is a subset of an unordered pair containing its member.
     (Contributed by NM, 27-Aug-2004.) $)
  snsspr1 $p |- { A } C_ { A , B } $=
    ( csn cun cpr ssun1 df-pr sseqtr4i ) ACZIBCZDABEIJFABGH $.

  $( A singleton is a subset of an unordered pair containing its member.
     (Contributed by NM, 2-May-2009.) $)
  snsspr2 $p |- { B } C_ { A , B } $=
    ( csn cun cpr ssun2 df-pr sseqtr4i ) BCZACZIDABEIJFABGH $.

  $( A singleton is a subset of an unordered triple containing its member.
     (Contributed by NM, 9-Oct-2013.) $)
  snsstp1 $p |- { A } C_ { A , B , C } $=
    ( csn cpr cun ctp snsspr1 ssun1 sstri df-tp sseqtr4i ) ADZABEZCDZFZABCGMNPA
    BHNOIJABCKL $.

  $( A singleton is a subset of an unordered triple containing its member.
     (Contributed by NM, 9-Oct-2013.) $)
  snsstp2 $p |- { B } C_ { A , B , C } $=
    ( csn cpr cun ctp snsspr2 ssun1 sstri df-tp sseqtr4i ) BDZABEZCDZFZABCGMNPA
    BHNOIJABCKL $.

  $( A singleton is a subset of an unordered triple containing its member.
     (Contributed by NM, 9-Oct-2013.) $)
  snsstp3 $p |- { C } C_ { A , B , C } $=
    ( csn cpr cun ctp ssun2 df-tp sseqtr4i ) CDZABEZKFABCGKLHABCIJ $.

  ${
    $d A x $.  $d B x $.  $d C x $.
    prss.1 $e |- A e. _V $.
    prss.2 $e |- B e. _V $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (Contributed by NM, 30-May-1994.)  (Proof shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    prss $p |- ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) $=
      ( csn wss wa cun wcel cpr unss snss anbi12i df-pr sseq1i 3bitr4i ) AFZCGZ
      BFZCGZHRTIZCGACJZBCJZHABKZCGRTCLUCSUDUAACDMBCEMNUEUBCABOPQ $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (Contributed by NM, 22-Mar-2006.)  (Proof shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    prssg $p |- ( ( A e. V /\ B e. W ) ->
                ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) $=
      ( wcel wa csn wss cpr snssg bi2anan9 cun unss df-pr sseq1i bitr4i syl6bb
      ) ADFZBEFZGACFZBCFZGAHZCIZBHZCIZGZABJZCIZSUAUDTUBUFACDKBCEKLUGUCUEMZCIUIU
      CUECNUHUJCABOPQR $.
  $}

  $( A pair of elements of a class is a subset of the class.  (Contributed by
     NM, 16-Jan-2015.) $)
  prssi $p |- ( ( A e. C /\ B e. C ) -> { A , B } C_ C ) $=
    ( wcel wa cpr wss prssg ibi ) ACDBCDEABFCGABCCCHI $.

  ${
    $d x A $.  $d x B $.
    $( The subsets of a singleton.  (Contributed by NM, 24-Apr-2004.) $)
    sssn $p |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) $=
      ( vx csn wss c0 wceq wo wn wa wcel cv wex neq0 ssel elsni syl6 eleq1 ibd
      wb exlimdv syl5bi snssi anc2li eqss syl6ibr orrd sseq1 mpbiri eqimss jaoi
      0ss impbii ) ABDZEZAFGZAUNGZHUOUPUQUOUPIZUOUNAEZJUQUOURUSUOURBAKZUSURCLZA
      KZCMUOUTCANUOVBUTCUOVBUTUOVBVABGZVBUTTUOVBVAUNKVCAUNVAOVABPQVABARQSUAUBBA
      UCQUDAUNUEUFUGUPUOUQUPUOFUNEUNULAFUNUHUIAUNUJUKUM $.

    $( The property of being sandwiched between two sets naturally splits under
       union with a singleton.  This is the induction hypothesis for the
       determination of large powersets such as ~ pwtp .  (Contributed by Mario
       Carneiro, 2-Jul-2016.) $)
    ssunsn2 $p |- ( ( B C_ A /\ A C_ ( C u. { D } ) ) <->
                    ( ( B C_ A /\ A C_ C ) \/
                      ( ( B u. { D } ) C_ A /\ A C_ ( C u. { D } ) ) ) ) $=
      ( wcel wss csn cun wa wo wb syl wi anim12d pm4.72 sylib bitrd wceq bitr3i
      a1i snssi unss bicomi rbaibr anbi1d biimpi expcom ssun3 wn cdif c0 disjsn
      cin disj3 sseq1 sylbi uncom sseq2i ssundif syl6rbbr anbi2d simplbi biimpd
      orcom syl6bb pm2.61i ) DAEZBAFZACDGZHZFZIZVHACFZIZBVIHAFZVKIZJZKVGVLVPVQV
      GVHVOVKVGVIAFZVHVOKDAUAZVOVHVRVHVRIZVOBVIAUBZUCZUDLUEVGVNVPMVPVQKVGVHVOVM
      VKVGVRVHVOMVSVHVRVOVTVOWAUFUGLVMVKMVGACVIUHTNVNVPOPQVGUIZVLVNVQWCVKVMVHWC
      VMAVIUJZCFZVKWCAWDRZVMWEKWCAVIUMUKRWFADULAVIUNSAWDCUOUPVKAVICHZFWEWGVJAVI
      CUQURAVICUSSUTZVAWCVNVPVNJZVQWCVPVNMVNWIKWCVOVHVKVMVOVHMWCVOVHVRWBVBTWCVK
      VMWHVCNVPVNOPVPVNVDVEQVF $.

    $( Possible values for a set sandwiched between another set and it plus a
       singleton.  (Contributed by Mario Carneiro, 2-Jul-2016.) $)
    ssunsn $p |- ( ( B C_ A /\ A C_ ( B u. { C } ) ) <->
      ( A = B \/ A = ( B u. { C } ) ) ) $=
      ( wss csn cun wa wo wceq ssunsn2 ancom eqss bitr4i orbi12i bitri ) BADZAB
      CEFZDZGPABDZGZQADZRGZHABIZAQIZHABBCJTUCUBUDTSPGUCPSKABLMUBRUAGUDUARKAQLMN
      O $.

    $( Two ways to express that a nonempty set equals a singleton.
       (Contributed by NM, 15-Dec-2007.) $)
    eqsn $p |- ( A =/= (/) -> ( A = { B } <-> A. x e. A x = B ) ) $=
      ( c0 wne csn wceq wss cv wral eqimss wn df-ne wo sssn biimpi syl5bi com12
      ord impbid2 wcel dfss3 elsn ralbii bitri syl6bb ) BDEZBCFZGZBUHHZAIZCGZAB
      JZUGUIUJBUHKUJUGUIUGBDGZLUJUIBDMUJUNUIUJUNUINBCOPSQRTUJUKUHUAZABJUMABUHUB
      UOULABACUCUDUEUF $.
  $}

  ${
    $( Possible values for a set sandwiched between another set and it plus a
       singleton.  (Contributed by Mario Carneiro, 2-Jul-2016.) $)
    ssunpr $p |- ( ( B C_ A /\ A C_ ( B u. { C , D } ) ) <->
      ( ( A = B \/ A = ( B u. { C } ) ) \/
        ( A = ( B u. { D } ) \/ A = ( B u. { C , D } ) ) ) ) $=
      ( wss cpr cun wa csn wceq df-pr uneq2i unass eqtr4i sseq2i anbi2i ssunsn2
      wo ssunsn 3bitri un23 eqtr2i eqeq2i orbi2i orbi12i ) BAEZABCDFZGZEZHUFABC
      IZGZDIZGZEZHUFAUKEHZBULGZAEZUNHZRABJAUKJRZAUPJZAUHJZRZRUIUNUFUHUMAUHBUJUL
      GZGUMUGVCBCDKLBUJULMNZOPABUKDQUOUSURVBABCSURUQAUPUJGZEZHUTAVEJZRVBUNVFUQU
      MVEABUJULUAZOPAUPCSVGVAUTVEUHAUHUMVEVDVHUBUCUDTUET $.

    $( The subsets of a pair.  (Contributed by NM, 16-Mar-2006.)  (Proof
       shortened by Mario Carneiro, 2-Jul-2016.) $)
    sspr $p |- ( A C_ { B , C } <->
     ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) $=
      ( cpr wss c0 cun wa wceq csn wo uncom eqtri sseq2i biantrur bitr3i eqeq2i
      un0 0ss orbi12i ssunpr orbi2i 3bitri ) ABCDZEZFAEZAFUDGZEZHZAFIZAFBJZGZIZ
      KZAFCJZGZIZAUGIZKZKUJAUKIZKZAUOIZAUDIZKZKUEUHUIUGUDAUGUDFGUDFUDLUDRMZNUFU
      HASOPAFBCUAUNVAUSVDUMUTUJULUKAULUKFGUKFUKLUKRMQUBUQVBURVCUPUOAUPUOFGUOFUO
      LUORMQUGUDAVEQTTUC $.

    $( The subsets of a triple.  (Contributed by Mario Carneiro,
       2-Jul-2016.) $)
    sstp $p |- ( A C_ { B , C , D } <->
      ( ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) \/
        ( ( A = { D } \/ A = { B , D } ) \/
          ( A = { C , D } \/ A = { B , C , D } ) ) ) ) $=
      ( wss cpr csn cun c0 wa wceq wo sseq2i biantrur uncom df-pr eqtr4i eqeq2i
      orbi12i 3bitri ctp df-tp 0ss ssunsn2 sspr bitr3i un0 eqtri sseq1i anbi12i
      ssunpr orbi2i eqtr2i bitri ) ABCDUAZEABCFZDGZHZEZIAEZUSJZAIKABGZKLACGZKAU
      PKLLZAUQKZABDFZKZLZACDFZKZAUOKZLZLZLZUOURABCDUBZMUTUSAUCZNVAUTAUPEZJZIUQH
      ZAEZUSJZLVNAIUPDUDVRVDWAVMVRVQVDUTVQVPNABCUEUFWAUQAEZAUQUPHZEZJVEAUQVBHZK
      ZLZAUQVCHZKZAWCKZLZLVMVTWBUSWDVSUQAVSUQIHUQIUQOUQUGUHUIURWCAUPUQOZMUJAUQB
      CUKWGVHWKVLWFVGVEWEVFAWEVBUQHVFUQVBOBDPQRULWIVJWJVKWHVIAWHVCUQHVIUQVCOCDP
      QRWCUOAUOURWCVOWLUMRSSTSUNT $.
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.  $d D x $.
    tpss.1 $e |- A e. _V $.
    tpss.2 $e |- B e. _V $.
    tpss.3 $e |- C e. _V $.
    $( A triplet of elements of a class is a subset of the class.  (Contributed
       by NM, 9-Apr-1994.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpss $p |- ( ( A e. D /\ B e. D /\ C e. D ) <-> { A , B , C } C_ D ) $=
      ( cpr wss csn wa cun wcel w3a ctp unss df-3an prss snss anbi12i 3bitr4i
      bitri df-tp sseq1i ) ABHZDIZCJZDIZKZUEUGLZDIADMZBDMZCDMZNZABCOZDIUEUGDPUN
      UKULKZUMKUIUKULUMQUPUFUMUHABDEFRCDGSTUBUOUJDABCUCUDUA $.
  $}

  ${
    sneqr.1 $e |- A e. _V $.
    $( If the singletons of two sets are equal, the two sets are equal.  Part
       of Exercise 4 of [TakeutiZaring] p. 15.  (Contributed by NM,
       27-Aug-1993.) $)
    sneqr $p |- ( { A } = { B } -> A = B ) $=
      ( csn wceq wcel snid eleq2 mpbii elsnc sylib ) ADZBDZEZAMFZABENALFOACGLMA
      HIABCJK $.

    $( If a singleton is a subset of another, their members are equal.
       (Contributed by NM, 28-May-2006.) $)
    snsssn $p |- ( { A } C_ { B } -> A = B ) $=
      ( csn wss c0 wceq wo sssn wne wn snnz df-ne mpbi pm2.21i sneqr jaoi sylbi
      ) ADZBDZESFGZSTGZHABGZSBIUAUCUBUAUCSFJUAKACLSFMNOABCPQR $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Closed form of ~ sneqr .  (Contributed by Scott Fenton, 1-Apr-2011.) $)
    sneqrg $p |- ( A e. V -> ( { A } = { B } -> A = B ) ) $=
      ( vx cv csn wceq wi sneq eqeq1d eqeq1 imbi12d vex sneqr vtoclg ) DEZFZBFZ
      GZPBGZHAFZRGZABGZHDACPAGZSUBTUCUDQUARPAIJPABKLPBDMNO $.

  $}

  $( Two singletons of sets are equal iff their elements are equal.
     (Contributed by Scott Fenton, 16-Apr-2012.) $)
  sneqbg $p |- ( A e. V -> ( { A } = { B } <-> A = B ) ) $=
    ( wcel csn wceq sneqrg sneq impbid1 ) ACDAEBEFABFABCGABHI $.

  ${
    sneqb.1 $e |- A e. _V $.
    $( Biconditional equality for singletons.  (Contributed by SF,
       14-Jan-2015.) $)
    sneqb $p |- ( { A } = { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb sneqbg ax-mp ) ADEAFBFGABGHCABDIJ $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d x A $.
    $( The singleton of a class is a subset of its power class.  (Contributed
       by NM, 5-Aug-1993.) $)
    snsspw $p |- { A } C_ ~P A $=
      ( vx csn cpw cv wceq wss wcel eqimss elsn df-pw abeq2i 3imtr4i ssriv ) BA
      CZADZBEZAFQAGZQOHQPHQAIBAJRBPBAKLMN $.
  $}


  ${
    $d x A $.  $d x B $.  $d x C $.
    prsspw.1 $e |- A e. _V $.
    prsspw.2 $e |- B e. _V $.
    $( An unordered pair belongs to the power class of a class iff each member
       belongs to the class.  (Contributed by NM, 10-Dec-2003.)  (Proof
       shortened by Andrew Salmon, 26-Jun-2011.) $)
    prsspw $p |- ( { A , B } C_ ~P C <-> ( A C_ C /\ B C_ C ) ) $=
      ( cpr cpw wss wcel wa prss elpw anbi12i bitr3i ) ABFCGZHAOIZBOIZJACHZBCHZ
      JABODEKPRQSACDLBCELMN $.
  $}

  ${
    $d B x $.  $d ps x $.
    ralunsn.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Restricted quantification over the union of a set and a singleton, using
       implicit substitution.  (Contributed by Paul Chapman, 17-Nov-2012.)
       (Revised by Mario Carneiro, 23-Apr-2015.) $)
    ralunsn $p |- ( B e. C -> ( A. x e. ( A u. { B } ) ph <->
                                ( A. x e. A ph /\ ps ) ) ) $=
      ( csn cun wral wa wcel ralunb ralsng anbi2d syl5bb ) ACDEHZIJACDJZACQJZKE
      FLZRBKACDQMTSBRABCEFGNOP $.
  $}

  ${
    $d A x $.  $d B x y $.  $d C x $.  $d ch x $.  $d ps y $.  $d th x $.
    2ralunsn.1 $e |- ( x = B -> ( ph <-> ch ) ) $.
    2ralunsn.2 $e |- ( y = B -> ( ph <-> ps ) ) $.
    2ralunsn.3 $e |- ( x = B -> ( ps <-> th ) ) $.
    $( Double restricted quantification over the union of a set and a
       singleton, using implicit substitution.  (Contributed by Paul Chapman,
       17-Nov-2012.) $)
    2ralunsn $p |- ( B e. C ->
                     ( A. x e. ( A u. { B } ) A. y e. ( A u. { B } ) ph <->
                       ( ( A. x e. A A. y e. A ph /\ A. x e. A ps ) /\
                         ( A. y e. A ch /\ th ) ) ) ) $=
      ( wcel csn cun wral wa ralunsn ralbidv cv wceq r19.26 anbi1i syl6bb bitrd
      anbi12d ) HIMZAFGHNOZPZEUHPAFGPZBQZEUHPZUJEGPBEGPQZCFGPZDQZQZUGUIUKEUHABF
      GHIKRSUGULUKEGPZUOQUPUKUOEGHIETHUAZUJUNBDURACFGJSLUFRUQUMUOUJBEGUBUCUDUE
      $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( The power set of a singleton.  (Contributed by NM, 5-Jun-2006.) $)
    pwsn $p |- ~P { A } = { (/) , { A } } $=
      ( vx cv csn wss cab c0 wceq wo cpw cpr sssn abbii df-pw dfpr2 3eqtr4i ) B
      CZADZEZBFQGHQRHIZBFRJGRKSTBQALMBRNBGROP $.

    $d x y $.  $d y A $.
    $( The power set of a singleton (direct proof).  TO DO - should we keep
       this?  (Contributed by NM, 5-Jun-2006.)
       (Proof modification is discouraged.)  (New usage is discouraged.) $)
    pwsnALT $p |- ~P { A } = { (/) , { A } } $=
      ( vx vy cv csn wss cab c0 wceq wo cpw cpr wn wa wcel wal dfss2 wex sylbi
      wi elsn imbi2i albii bitri neq0 exintr syl5bi df-clel exancom bitr2i syl6
      snssi anc2li eqss syl6ibr orrd 0ss sseq1 mpbiri eqimss impbii abbii df-pw
      jaoi dfpr2 3eqtr4i ) BDZAEZFZBGVGHIZVGVHIZJZBGVHKHVHLVIVLBVIVLVIVJVKVIVJM
      ZVIVHVGFZNVKVIVMVNVICDZVGOZVOAIZTZCPZVMVNTVIVPVOVHOZTZCPVSCVGVHQWAVRCVTVQ
      VPCAUAUBUCUDVSVMVPVQNCRZVNVMVPCRVSWBCVGUEVPVQCUFUGWBAVGOZVNWCVQVPNCRWBCAV
      GUHVQVPCUIUJAVGULSUKSUMVGVHUNUOUPVJVIVKVJVIHVHFVHUQVGHVHURUSVGVHUTVDVAVBB
      VHVCBHVHVEVF $.

    $( The power set of an unordered pair.  (Contributed by NM, 1-May-2009.) $)
    pwpr $p |- ~P { A , B } = ( { (/) , { A } } u. { { B } , { A , B } } ) $=
      ( vx cpr cpw c0 csn cun cv wss wcel wo wceq sspr elpr orbi12i bitr4i elpw
      vex elun 3bitr4i eqriv ) CABDZEZFAGZDZBGZUCDZHZCIZUCJZUJUFKZUJUHKZLZUJUDK
      UJUIKUKUJFMUJUEMLZUJUGMUJUCMLZLUNUJABNULUOUMUPUJFUECSZOUJUGUCUQOPQUJUCUQR
      UJUFUHTUAUB $.

    $( The power set of an unordered triple.  (Contributed by Mario Carneiro,
       2-Jul-2016.) $)
    pwtp $p |- ~P { A , B , C } =
      ( ( { (/) , { A } } u. { { B } , { A , B } } ) u.
        ( { { C } , { A , C } } u. { { B , C } , { A , B , C } } ) ) $=
      ( vx ctp cpw c0 csn cpr cun cv wcel wss vex wceq elun elpr orbi12i bitri
      wo elpw sstp 3bitr4ri eqriv ) DABCEZFZGAHZIZBHZABIZIZJZCHZACIZIZBCIZUEIZJ
      ZJZDKZUFLUTUEMZUTUSLZUTUEDNZUAUTULLZUTURLZTUTGOUTUGOTZUTUIOUTUJOTZTZUTUMO
      UTUNOTZUTUPOUTUEOTZTZTVBVAVDVHVEVKVDUTUHLZUTUKLZTVHUTUHUKPVLVFVMVGUTGUGVC
      QUTUIUJVCQRSVEUTUOLZUTUQLZTVKUTUOUQPVNVIVOVJUTUMUNVCQUTUPUEVCQRSRUTULURPU
      TABCUBUCSUD $.
  $}

  ${
    $d x y $.
    $( Compute the power set of the power set of the power set of the empty
       set.  (See also ~ pw0 and ~ pwpw0 .)  (Contributed by NM,
       2-May-2009.) $)
    pwpwpw0 $p |- ~P { (/) , { (/) } } =
                ( { (/) , { (/) } } u. { { { (/) } } , { (/) , { (/) } } } ) $=
      ( c0 csn pwpr ) AABC $.
  $}

  ${

    $( The power class of the universe is the universe.  Exercise 4.12(d) of
       [Mendelson] p. 235.  (Contributed by NM, 14-Sep-2003.) $)
    pwv $p |- ~P _V = _V $=
      ( vx cvv cpw cv wcel wss ssv vex elpw mpbir 2th eqriv ) ABCZBADZMEZNBEONB
      FNGNBAHZIJPKL $.
  $}


  ${
    unsneqsn.1 $e |- B e. _V $.
    $( If union with a singleton yields a singleton, then the first argument is
       either also the singleton or is the empty set.  (Contributed by SF,
       15-Jan-2015.) $)
    unsneqsn $p |- ( ( A u. { B } ) = { C } -> ( A = (/) \/ A = { B } ) ) $=
      ( csn cun wceq wss c0 wcel ssun2 snid sselii eleq2 mpbii elsni syl eqeq2d
      wo sneq biimprd mpcom ssequn1 sylibr sssn sylib ) ABEZFZCEZGZAUGHZAIGAUGG
      SUJUHUGGZUKBCGZUJULUJBUIJZUMUJBUHJUNUGUHBUGAKBDLMUHUIBNOBCPQUMULUJUMUGUIU
      HBCTRUAUBAUGUCUDABUEUF $.
      $( [15-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Alternate definition of proper subset.  Theorem IX.4.21 of [Rosser]
       p. 236.  (Contributed by SF, 19-Jan-2015.) $)
    dfpss4 $p |- ( A C. B <-> ( A C_ B /\ E. x e. B -. x e. A ) ) $=
      ( wpss wss wn wa wcel wrex dfpss3 wral dfss3 dfral2 bitr2i con1bii anbi2i
      cv bitri ) BCDBCEZCBEZFZGSAQBHZFACIZGBCJUAUCSUCTTUBACKUCFACBLUBACMNOPR $.
      $( [19-Jan-2015] $)
  $}


  ${
    $( Adjoining a new element is one-to-one.  (Contributed by SF,
       29-Jan-2015.) $)
    adj11 $p |- ( ( -. C e. A /\ -. C e. B ) ->
       ( ( A u. { C } ) = ( B u. { C } ) <-> A = B ) ) $=
      ( wcel wn wa csn cun wceq cdif difeq1 difun2 difsn eqeqan12d syl5ib uneq1
      3eqtr3g impbid1 ) CADEZCBDEZFZACGZHZBUBHZIZABIZUEAUBJZBUBJZIUAUFUEUCUBJUD
      UBJUGUHUCUDUBKAUBLBUBLQSTUGAUHBCAMCBMNOABUBPR $.
      $( [29-Jan-2015] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                       The union of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class union symbol. $)
  $c U. $. $( Big cup $)

  $( Extend class notation to include the union of a class (read:  'union
     ` A ` ') $)
  cuni $a class U. A $.

  ${
    $d x y A $.
    $( Define the union of a class i.e. the collection of all members of the
       members of the class.  Definition 5.5 of [TakeutiZaring] p. 16.  For
       example, ` U. { { 1 , 3 } , { 1 , 8 } } = { 1 , 3 , 8 } ` ( ~ ex-uni ).
       This is similar to the union of two classes ~ df-un .  (Contributed by
       NM, 23-Aug-1993.) $)
    df-uni $a |- U. A = { x | E. y ( x e. y /\ y e. A ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class union.  (Contributed by NM,
       28-Jun-1998.) $)
    dfuni2 $p |- U. A = { x | E. y e. A x e. y } $=
      ( cuni cv wcel wa wex cab wrex df-uni exancom df-rex bitr4i abbii eqtri )
      CDAEBEZFZQCFZGBHZAIRBCJZAIABCKTUAATSRGBHUARSBLRBCMNOP $.
  $}

  ${
    $d x A y $.  $d x B y $.
    $( Membership in class union.  (Contributed by NM, 22-May-1994.) $)
    eluni $p |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) $=
      ( vy cuni wcel cvv cv wa wex elex adantr exlimiv wceq eleq1 anbi1d exbidv
      df-uni elab2g pm5.21nii ) BCEZFBGFZBAHZFZUCCFZIZAJZBUAKUFUBAUDUBUEBUCKLMD
      HZUCFZUEIZAJUGDBUAGUHBNZUJUFAUKUIUDUEUHBUCOPQDACRST $.

    $( Membership in class union.  Restricted quantifier version.  (Contributed
       by NM, 31-Aug-1999.) $)
    eluni2 $p |- ( A e. U. B <-> E. x e. B A e. x ) $=
      ( cv wcel wa wex cuni wrex exancom eluni df-rex 3bitr4i ) BADZEZNCEZFAGPO
      FAGBCHEOACIOPAJABCKOACLM $.
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in class union.  (Contributed by NM, 24-Mar-1995.) $)
    elunii $p |- ( ( A e. B /\ B e. C ) -> A e. U. C ) $=
      ( vx wcel wa cv cuni wceq eleq2 eleq1 anbi12d spcegv anabsi7 eluni sylibr
      wex ) ABEZBCEZFZADGZEZUACEZFZDQZACHERSUEUDTDBCUABIUBRUCSUABAJUABCKLMNDACO
      P $.
  $}

  ${
    $d y z A $.  $d x y z $.
    nfuni.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for union.  (Contributed by NM,
       30-Dec-1996.)  (Proof shortened by Andrew Salmon, 27-Aug-2011.) $)
    nfuni $p |- F/_ x U. A $=
      ( vy vz cuni cv wcel wrex cab dfuni2 nfv nfrex nfab nfcxfr ) ABFDGEGHZEBI
      ZDJDEBKQADPAEBCPALMNO $.
  $}

  ${
    $d y z A $.  $d x y z $.  $d y z ph $.
    nfunid.3 $e |- ( ph -> F/_ x A ) $.
    $( Deduction version of ~ nfuni .  (Contributed by NM, 18-Feb-2013.) $)
    nfunid $p |- ( ph -> F/_ x U. A ) $=
      ( vy vz cuni cv wcel wrex cab dfuni2 nfv nfvd nfrexd nfabd nfcxfrd ) ABCG
      EHFHIZFCJZEKEFCLASBEAEMARBFCAFMDARBNOPQ $.
  $}

  ${
    $d A y z $.  $d B y z $.  $d V y z $.  $d x y z $.
    $( Distribute proper substitution through the union of a class.
       (Contributed by Alan Sare, 10-Nov-2012.) $)
    csbunig $p |- ( A e. V -> [_ A / x ]_ U. B = U. [_ A / x ]_ B ) $=
      ( vz vy wcel cv wa wex cab csb cuni wsbc csbabg sbcexg sbcang sbcg df-uni
      bitrd sbcel2g anbi12d exbidv abbidv eqtrd csbeq2i 3eqtr4g ) BDGZABEHFHZGZ
      UICGZIZFJZEKZLZUJUIABCLZGZIZFJZEKZABCMZLUPMUHUOUMABNZEKUTUMAEBDOUHVBUSEUH
      VBULABNZFJUSULFABDPUHVCURFUHVCUJABNZUKABNZIURUJUKABDQUHVDUJVEUQUJABDRABUI
      CDUAUBTUCTUDUEABVAUNEFCSUFEFUPSUG $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for class union.  Exercise 15 of [TakeutiZaring]
       p. 18.  (Contributed by NM, 10-Aug-1993.)  (Proof shortened by Andrew
       Salmon, 29-Jun-2011.) $)
    unieq $p |- ( A = B -> U. A = U. B ) $=
      ( vy vx wceq cv wcel wrex cab cuni rexeq abbidv dfuni2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
  $}

  ${
    unieqi.1 $e |- A = B $.
    $( Inference of equality of two class unions.  (Contributed by NM,
       30-Aug-1993.) $)
    unieqi $p |- U. A = U. B $=
      ( wceq cuni unieq ax-mp ) ABDAEBEDCABFG $.
  $}

  ${
    unieqd.1 $e |- ( ph -> A = B ) $.
    $( Deduction of equality of two class unions.  (Contributed by NM,
       21-Apr-1995.) $)
    unieqd $p |- ( ph -> U. A = U. B ) $=
      ( wceq cuni unieq syl ) ABCEBFCFEDBCGH $.
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership in union of a class abstraction.  (Contributed by NM,
       11-Aug-1994.)  (Revised by Mario Carneiro, 14-Nov-2016.) $)
    eluniab $p |- ( A e. U. { x | ph } <-> E. x ( A e. x /\ ph ) ) $=
      ( vy cab cuni wcel cv wa wex eluni nfv nfsab1 nfan wceq eleq2 abid syl6bb
      eleq1 anbi12d cbvex bitri ) CABEZFGCDHZGZUDUCGZIZDJCBHZGZAIZBJDCUCKUGUJDB
      UEUFBUEBLABDMNUJDLUDUHOZUEUIUFAUDUHCPUKUFUHUCGAUDUHUCSABQRTUAUB $.

    $( Membership in union of a class abstraction.  (Contributed by NM,
       4-Oct-2006.) $)
    elunirab $p |- ( A e. U. { x e. B | ph } <->
                   E. x e. B ( A e. x /\ ph ) ) $=
      ( cv wcel cab cuni wex crab wrex eluniab df-rab unieqi eleq2i df-rex an12
      wa exbii bitri 3bitr4i ) CBEZDFZARZBGZHZFCUBFZUDRZBIZCABDJZHZFUGARZBDKZUD
      BCLUKUFCUJUEABDMNOUMUCULRZBIUIULBDPUNUHBUCUGAQSTUA $.
  $}

  ${
    $d x y A $.  $d x y B $.
    unipr.1 $e |- A e. _V $.
    unipr.2 $e |- B e. _V $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16.  (Contributed by NM, 23-Aug-1993.) $)
    unipr $p |- U. { A , B } = ( A u. B ) $=
      ( vx vy cpr cuni cun wel cv wcel wa wex wceq wo vex bitri clel3 exancom
      elpr anbi2i andi exbii 19.43 eluni elun orbi12i 3bitr4i eqriv ) EABGZHZAB
      IZEFJZFKZUKLZMZFNZUNUOAOZMZFNZUNUOBOZMZFNZPZEKZULLVFUMLZURUTVCPZFNVEUQVHF
      UQUNUSVBPZMVHUPVIUNUOABFQUAUBUNUSVBUCRUDUTVCFUERFVFUKUFVGVFALZVFBLZPVEVFA
      BUGVJVAVKVDVJUSUNMFNVAFVFACSUSUNFTRVKVBUNMFNVDFVFBDSVBUNFTRUHRUIUJ $.
  $}

  ${
    $d x y A $.  $d y B $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16.  (Contributed by NM, 25-Aug-2006.) $)
    uniprg $p |- ( ( A e. V /\ B e. W ) -> U. { A , B } = ( A u. B ) ) $=
      ( vx vy cv cpr cuni cun wceq preq1 unieqd uneq1 eqeq12d preq2 uneq2 unipr
      vex vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAAKZUDUGUEU
      HULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBESFSRT $.
  $}

  ${
    unisn.1 $e |- A e. _V $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine] p. 53.
       (Contributed by NM, 30-Aug-1993.) $)
    unisn $p |- U. { A } = A $=
      ( csn cuni cpr cun dfsn2 unieqi unipr unidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
  $}

  ${
    $d x A $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine] p. 53.
       (Contributed by NM, 13-Aug-2002.) $)
    unisng $p |- ( A e. V -> U. { A } = A ) $=
      ( vx cv csn cuni wceq sneq unieqd id eqeq12d vex unisn vtoclg ) CDZEZFZOG
      AEZFZAGCABOAGZQSOATPROAHITJKOCLMN $.
  $}

  ${
    $d x y $.  $d y A $.
    $( An alternative statement of the effective freeness of a class ` A ` ,
       when it is a set.  (Contributed by Mario Carneiro, 14-Oct-2016.) $)
    dfnfc2 $p |- ( A. x A e. V -> ( F/_ x A <-> A. y F/ x y = A ) ) $=
      ( wcel wal wnfc cv wceq wnf nfcvd id nfeqd alrimiv wa csn cuni simpr elsn
      df-nfc nfbii albii bitri sylibr nfunid nfa1 nfnf1 nfal nfan unisng adantr
      sps nfceqdf mpbid ex impbid2 ) CDEZAFZACGZBHZCIZAJZBFZUSVBBUSAUTCUSAUTKUS
      LMNURVCUSURVCOZACPZQZGUSVDAVEVDVCAVEGZURVCRVGUTVEEZAJZBFVCABVETVIVBBVHVAA
      BCSUAUBUCUDUEVDAVFCURVCAUQAUFVBABVAAUGUHUIURVFCIZVCUQVJACDUJULUKUMUNUOUP
      $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The class union of the union of two classes.  Theorem 8.3 of [Quine]
       p. 53.  (Contributed by NM, 20-Aug-1993.) $)
    uniun $p |- U. ( A u. B ) = ( U. A u. U. B ) $=
      ( vx vy cun cuni cv wcel wa wo 19.43 elun anbi2i andi bitri exbii orbi12i
      wex eluni 3bitr4i eqriv ) CABEZFZAFZBFZEZCGZDGZHZUHUBHZIZDRZUGUDHZUGUEHZJ
      ZUGUCHUGUFHUIUHAHZIZUIUHBHZIZJZDRUQDRZUSDRZJULUOUQUSDKUKUTDUKUIUPURJZIUTU
      JVCUIUHABLMUIUPURNOPUMVAUNVBDUGASDUGBSQTDUGUBSUGUDUELTUA $.

    $( The class union of the intersection of two classes.  Exercise 4.12(n) of
       [Mendelson] p. 235.  See ~ uniinqs for a condition where equality
       holds.  (Contributed by NM, 4-Dec-2003.)  (Proof shortened by Andrew
       Salmon, 29-Jun-2011.) $)
    uniin $p |- U. ( A i^i B ) C_ ( U. A i^i U. B ) $=
      ( vx vy cin cuni cv wcel wex 19.40 elin anbi2i anandi bitri exbii anbi12i
      wa eluni 3imtr4i ssriv ) CABEZFZAFZBFZEZCGZDGZHZUGUAHZQZDIZUFUCHZUFUDHZQZ
      UFUBHUFUEHUHUGAHZQZUHUGBHZQZQZDIUPDIZURDIZQUKUNUPURDJUJUSDUJUHUOUQQZQUSUI
      VBUHUGABKLUHUOUQMNOULUTUMVADUFARDUFBRPSDUFUARUFUCUDKST $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subclass relationship for class union.  Theorem 61 of [Suppes] p. 39.
       (Contributed by NM, 22-Mar-1998.)  (Proof shortened by Andrew Salmon,
       29-Jun-2011.) $)
    uniss $p |- ( A C_ B -> U. A C_ U. B ) $=
      ( vx vy wss cuni cv wcel wa wex ssel anim2d eximdv eluni 3imtr4g ssrdv )
      ABEZCAFZBFZQCGZDGZHZUAAHZIZDJUBUABHZIZDJTRHTSHQUDUFDQUCUEUBABUAKLMDTANDTB
      NOP $.

    $( Subclass relationship for class union.  (Contributed by NM,
       24-May-1994.)  (Proof shortened by Andrew Salmon, 29-Jun-2011.) $)
    ssuni $p |- ( ( A C_ B /\ B e. C ) -> A C_ U. C ) $=
      ( vy vx wcel wss cuni cv wi wal eleq2 imbi1d elunii expcom vtoclga imim2d
      wceq alimdv dfss2 3imtr4g impcom ) BCFZABGZACHZGZUCDIZAFZUGBFZJZDKUHUGUEF
      ZJZDKUDUFUCUJULDUCUIUKUHUGEIZFZUKJUIUKJEBCUMBRUNUIUKUMBUGLMUNUMCFUKUGUMCN
      OPQSDABTDAUETUAUB $.
  $}

  ${
    unissi.1 $e |- A C_ B $.
    $( Subclass relationship for subclass union.  Inference form of ~ uniss .
       (Contributed by David Moews, 1-May-2017.) $)
    unissi $p |- U. A C_ U. B $=
      ( wss cuni uniss ax-mp ) ABDAEBEDCABFG $.
  $}

  ${
    unissd.1 $e |- ( ph -> A C_ B ) $.
    $( Subclass relationship for subclass union.  Deduction form of ~ uniss .
       (Contributed by David Moews, 1-May-2017.) $)
    unissd $p |- ( ph -> U. A C_ U. B ) $=
      ( wss cuni uniss syl ) ABCEBFCFEDBCGH $.
  $}

  ${
    $d x y A $.
    $( The union of a set is empty iff the set is included in the singleton of
       the empty set.  (Contributed by NM, 12-Sep-2004.) $)
    uni0b $p |- ( U. A = (/) <-> A C_ { (/) } ) $=
      ( vx vy cv c0 csn wcel wral wceq wss cuni elsn ralbii dfss3 wex wrex neq0
      wn rexcom4 3bitr4ri rexbii eluni2 exbii rexnal 3bitri con4bii ) BDZEFZGZB
      AHUGEIZBAHZAUHJAKZEIZUIUJBABELMBAUHNUMUKUMRCDZULGZCOZUJRZBAPZUKRCULQUNUGG
      ZCOZBAPUSBAPZCOURUPUSBCASUQUTBACUGQUAUOVACBUNAUBUCTUJBAUDUEUFT $.

    $( The union of a set is empty iff all of its members are empty.
       (Contributed by NM, 16-Aug-2006.) $)
    uni0c $p |- ( U. A = (/) <-> A. x e. A x = (/) ) $=
      ( cuni c0 wceq csn wss cv wcel wral uni0b dfss3 elsn ralbii 3bitri ) BCDE
      BDFZGAHZPIZABJQDEZABJBKABPLRSABADMNO $.
  $}

  $( The union of the empty set is the empty set.  Theorem 8.7 of [Quine]
     p. 54.  (Reproved without relying on ~ ax-nul by Eric Schmidt.)
     (Contributed by NM, 16-Sep-1993.)  (Revised by Eric Schmidt,
     4-Apr-2007.) $)
  uni0 $p |- U. (/) = (/) $=
    ( c0 cuni wceq csn wss 0ss uni0b mpbir ) ABACAADZEIFAGH $.

  $( An element of a class is a subclass of its union.  Theorem 8.6 of [Quine]
     p. 54.  Also the basis for Proposition 7.20 of [TakeutiZaring] p. 40.
     (Contributed by NM, 6-Jun-1994.) $)
  elssuni $p |- ( A e. B -> A C_ U. B ) $=
    ( wss wcel cuni ssid ssuni mpan ) AACABDABECAFAABGH $.

  $( Condition turning a subclass relationship for union into an equality.
     (Contributed by NM, 18-Jul-2006.) $)
  unissel $p |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) $=
    ( cuni wss wcel wa simpl elssuni adantl eqssd ) ACZBDZBAEZFKBLMGMBKDLBAHIJ
    $.

  ${
    $d x y A $.  $d x y B $.
    $( Relationship involving membership, subset, and union.  Exercise 5 of
       [Enderton] p. 26 and its converse.  (Contributed by NM, 20-Sep-2003.) $)
    unissb $p |- ( U. A C_ B <-> A. x e. A x C_ B ) $=
      ( vy cv cuni wcel wi wal wss wa wex eluni imbi1i 19.23v albii bitri dfss2
      wral 3bitr4i bitr4i alcom 19.21v impexp bi2.04 imbi2i df-ral ) DEZBFZGZUH
      CGZHZDIZAEZBGZUNCJZHZAIZUICJUPABSUMUHUNGZUOKZUKHZAIZDIZURULVBDULUTALZUKHV
      BUJVDUKAUHBMNUTUKAOUAPVCVADIZAIURVADAUBVEUQAUOUSUKHZHZDIUOVFDIZHVEUQUOVFD
      UCVAVGDVAUSUOUKHHVGUSUOUKUDUSUOUKUEQPUPVHUODUNCRUFTPQQDUICRUPABUGT $.
  $}

  ${
    $d x A $.  $d x y B $.
    $( A subclass condition on the members of two classes that implies a
       subclass relation on their unions.  Proposition 8.6 of [TakeutiZaring]
       p. 59.  See ~ iunss2 for a generalization to indexed unions.
       (Contributed by NM, 22-Mar-2004.) $)
    uniss2 $p |- ( A. x e. A E. y e. B x C_ y -> U. A C_ U. B ) $=
      ( cv wss wrex wral cuni wcel ssuni expcom rexlimiv ralimi unissb sylibr )
      AEZBEZFZBDGZACHQDIZFZACHCIUAFTUBACSUBBDSRDJUBQRDKLMNACUAOP $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( If the difference ` A \ B ` contains the largest members of ` A ` , then
       the union of the difference is the union of ` A ` .  (Contributed by NM,
       22-Mar-2004.) $)
    unidif $p |- ( A. x e. A E. y e. ( A \ B ) x C_ y ->
               U. ( A \ B ) = U. A ) $=
      ( cv wss cdif wrex wral cuni wa wceq uniss2 difss uniss ax-mp eqss sylibr
      jctil ) AEBEFBCDGZHACIZTJZCJZFZUCUBFZKUBUCLUAUEUDABCTMTCFUDCDNTCOPSUBUCQR
      $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Relationship implying union.  (Contributed by NM, 10-Nov-1999.) $)
    ssunieq $p |- ( ( A e. B /\ A. x e. B x C_ A ) -> A = U. B ) $=
      ( wcel cv wss wral cuni wceq elssuni unissb biimpri anim12i eqss sylibr
      wa ) BCDZAEBFACGZPBCHZFZSBFZPBSIQTRUABCJUARACBKLMBSNO $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Any member of a class is the largest of those members that it includes.
       (Contributed by NM, 13-Aug-2002.) $)
    unimax $p |- ( A e. B -> U. { x e. B | x C_ A } = A ) $=
      ( vy wcel cv wss crab wral cuni wceq ssid sseq1 elrab3 elrab simprbi rgen
      mpbiri wa ssunieq eqcomd sylancl ) BCEZBAFZBGZACHZEZDFZBGZDUFIZUFJZBKUCUG
      BBGZBLUEULABCUDBBMNRUIDUFUHUFEUHCEUIUEUIAUHCUDUHBMOPQUGUJSBUKDBUFTUAUB $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The intersection of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class intersection symbol. $)
  $c |^| $. $( Big cap $)

  $( Extend class notation to include the intersection of a class (read:
     'intersect ` A ` '). $)
  cint $a class |^| A $.

  ${
    $d x y A $.
    $( Define the intersection of a class.  Definition 7.35 of [TakeutiZaring]
       p. 44.  For example, ` |^| { { 1 , 3 } , { 1 , 8 } } = { 1 } ` .
       Compare this with the intersection of two classes, ~ df-in .
       (Contributed by NM, 18-Aug-1993.) $)
    df-int $a |- |^| A = { x | A. y ( y e. A -> x e. y ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class intersection.  (Contributed by NM,
       28-Jun-1998.) $)
    dfint2 $p |- |^| A = { x | A. y e. A x e. y } $=
      ( cint cv wcel wi wal cab wral df-int df-ral abbii eqtr4i ) CDBEZCFAEOFZG
      BHZAIPBCJZAIABCKRQAPBCLMN $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality law for intersection.  (Contributed by NM, 13-Sep-1999.) $)
    inteq $p |- ( A = B -> |^| A = |^| B ) $=
      ( vx vy wceq cv wcel wral cab cint raleq abbidv dfint2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
  $}

  ${
    inteqi.1 $e |- A = B $.
    $( Equality inference for class intersection.  (Contributed by NM,
       2-Sep-2003.) $)
    inteqi $p |- |^| A = |^| B $=
      ( wceq cint inteq ax-mp ) ABDAEBEDCABFG $.
  $}

  ${
    inteqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for class intersection.  (Contributed by NM,
       2-Sep-2003.) $)
    inteqd $p |- ( ph -> |^| A = |^| B ) $=
      ( wceq cint inteq syl ) ABCEBFCFEDBCGH $.
  $}

  ${
    $d x A y $.  $d x B y $.
    elint.1 $e |- A e. _V $.
    $( Membership in class intersection.  (Contributed by NM, 21-May-1994.) $)
    elint $p |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) $=
      ( vy cv wcel wi wal cint wceq eleq1 imbi2d albidv df-int elab2 ) AFZCGZEF
      ZQGZHZAIRBQGZHZAIEBCJDSBKZUAUCAUDTUBRSBQLMNEACOP $.
  $}

  ${
    $d x A $.  $d x B $.
    elint2.1 $e |- A e. _V $.
    $( Membership in class intersection.  (Contributed by NM, 14-Oct-1999.) $)
    elint2 $p |- ( A e. |^| B <-> A. x e. B A e. x ) $=
      ( cint wcel cv wi wal wral elint df-ral bitr4i ) BCEFAGZCFBNFZHAIOACJABCD
      KOACLM $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Membership in class intersection, with the sethood requirement expressed
       as an antecedent.  (Contributed by NM, 20-Nov-2003.) $)
    elintg $p |- ( A e. V -> ( A e. |^| B <-> A. x e. B A e. x ) ) $=
      ( vy cv cint wcel wral eleq1 wceq ralbidv vex elint2 vtoclbg ) EFZCGZHPAF
      ZHZACIBQHBRHZACIEBDPBQJPBKSTACPBRJLAPCEMNO $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in class intersection.  (Contributed by NM, 14-Oct-1999.)
       (Proof shortened by Andrew Salmon, 9-Jul-2011.) $)
    elinti $p |- ( A e. |^| B -> ( C e. B -> A e. C ) ) $=
      ( vx cint wcel wi cv wral elintg eleq2 rspccv syl6bi pm2.43i ) ABEZFZCBFA
      CFZGZPPADHZFZDBIRDABOJTQDCBSCAKLMN $.
  $}

  ${
    $d y z A $.  $d x y z $.
    nfint.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for intersection.  (Contributed by NM,
       2-Feb-1997.)  (Proof shortened by Andrew Salmon, 12-Aug-2011.) $)
    nfint $p |- F/_ x |^| A $=
      ( vy vz cint cv wcel wral cab dfint2 nfv nfral nfab nfcxfr ) ABFDGEGHZEBI
      ZDJDEBKQADPAEBCPALMNO $.
  $}

  ${
    $d A x y $.  $d ph y $.
    inteqab.1 $e |- A e. _V $.
    $( Membership in the intersection of a class abstraction.  (Contributed by
       NM, 30-Aug-1993.) $)
    elintab $p |- ( A e. |^| { x | ph } <-> A. x ( ph -> A e. x ) ) $=
      ( vy cab cint wcel cv wi wal elint nfsab1 nfv nfim wceq eleq1 abid syl6bb
      eleq2 imbi12d cbval bitri ) CABFZGHEIZUDHZCUEHZJZEKACBIZHZJZBKECUDDLUHUKE
      BUFUGBABEMUGBNOUKENUEUIPZUFAUGUJULUFUIUDHAUEUIUDQABRSUEUICTUAUBUC $.

    $( Membership in the intersection of a class abstraction.  (Contributed by
       NM, 17-Oct-1999.) $)
    elintrab $p |- ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) $=
      ( cv wcel wa cab cint wi wal crab wral elintab impexp albii df-rab inteqi
      bitri eleq2i df-ral 3bitr4i ) CBFZDGZAHZBIZJZGZUEACUDGZKZKZBLZCABDMZJZGUK
      BDNUIUFUJKZBLUMUFBCEOUPULBUEAUJPQTUOUHCUNUGABDRSUAUKBDUBUC $.
  $}

  ${
    $d x y A $.  $d y B $.  $d y ph $.
    $( Membership in the intersection of a class abstraction.  (Contributed by
       NM, 17-Feb-2007.) $)
    elintrabg $p |- ( A e. V -> ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) ) $=
      ( vy cv crab cint wcel wi wral eleq1 wceq imbi2d ralbidv elintrab vtoclbg
      vex ) FGZABDHIZJATBGZJZKZBDLCUAJACUBJZKZBDLFCETCUAMTCNZUDUFBDUGUCUEATCUBM
      OPABTDFSQR $.

    $( The intersection of the empty set is the universal class.  Exercise 2 of
       [TakeutiZaring] p. 44.  (Contributed by NM, 18-Aug-1993.) $)
    int0 $p |- |^| (/) = _V $=
      ( vy vx cv c0 wcel wi wal cab wceq cint cvv noel pm2.21i ax-gen 2th abbii
      eqid df-int df-v 3eqtr4i ) ACZDEZBCZUAEZFZAGZBHUCUCIZBHDJKUFUGBUFUGUEAUBU
      DUALMNUCQOPBADRBST $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.
    $( An element of a class includes the intersection of the class.  Exercise
       4 of [TakeutiZaring] p. 44 (with correction), generalized to classes.
       (Contributed by NM, 18-Nov-1995.) $)
    intss1 $p |- ( A e. B -> |^| B C_ A ) $=
      ( vx vy wcel cint cv wal vex elint wceq eleq1 eleq2 imbi12d spcgv pm2.43a
      wi syl5bi ssrdv ) ABEZCBFZACGZUAEDGZBEZUBUCEZQZDHZTUBAEZDUBBCIJUGTUHUFTUH
      QDABUCAKUDTUEUHUCABLUCAUBMNOPRS $.

    $( Subclass of a class intersection.  Theorem 5.11(viii) of [Monk1] p. 52
       and its converse.  (Contributed by NM, 14-Oct-1999.) $)
    ssint $p |- ( A C_ |^| B <-> A. x e. B A C_ x ) $=
      ( vy cint wss cv wcel wral dfss3 vex elint2 ralbii ralcom bitr4i 3bitri )
      BCEZFDGZQHZDBIRAGZHZACIZDBIZBTFZACIZDBQJSUBDBARCDKLMUCUADBIZACIUEUADABCNU
      DUFACDBTJMOP $.

    $( Subclass of the intersection of a class abstraction.  (Contributed by
       NM, 31-Jul-2006.)  (Proof shortened by Andrew Salmon, 9-Jul-2011.) $)
    ssintab $p |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) $=
      ( vy cab cint wss cv wral wi wal ssint sseq2 ralab2 bitri ) CABEZFGCDHZGZ
      DPIACBHZGZJBKDCPLARTDBQSCMNO $.

    $( Subclass of the least upper bound.  (Contributed by NM, 8-Aug-2000.) $)
    ssintub $p |- A C_ |^| { x e. B | A C_ x } $=
      ( vy cv wss crab cint ssint wcel sseq2 elrab simprbi mprgbir ) BBAEZFZACG
      ZHFBDEZFZDQDBQIRQJRCJSPSARCORBKLMN $.

    $( Subclass of the minimum value of class of supersets.  (Contributed by
       NM, 10-Aug-2006.) $)
    ssmin $p |- A C_ |^| { x | ( A C_ x /\ ph ) } $=
      ( cv wss wa cab cint wi ssintab simpl mpgbir ) CCBDEZAFZBGHENMIBNBCJMAKL
      $.

    $( Any member of a class is the smallest of those members that include it.
       (Contributed by NM, 13-Aug-2002.)  (Proof shortened by Andrew Salmon,
       9-Jul-2011.) $)
    intmin $p |- ( A e. B -> |^| { x e. B | A C_ x } = A ) $=
      ( vy wcel cv wss crab cint wi wral elintrab ssid wceq sseq2 eleq2 imbi12d
      vex rspcv mpii syl5bi ssrdv ssintub a1i eqssd ) BCEZBAFZGZACHIZBUFDUIBDFZ
      UIEUHUJUGEZJZACKZUFUJBEZUHAUJCDRLUFUMBBGZUNBMULUOUNJABCUGBNUHUOUKUNUGBBOU
      GBUJPQSTUAUBBUIGUFABCUCUDUE $.

    $( Intersection of subclasses.  (Contributed by NM, 14-Oct-1999.) $)
    intss $p |- ( A C_ B -> |^| B C_ |^| A ) $=
      ( vy vx cv wcel wal cint wss imim1 al2imi vex elint 3imtr4g alrimiv dfss2
      wi 3imtr4i ) CEZAFZSBFZQZCGZDEZBHZFZUDAHZFZQZDGABIUEUGIUCUIDUCUAUDSFZQZCG
      TUJQZCGUFUHUBUKULCTUAUJJKCUDBDLZMCUDAUMMNOCABPDUEUGPR $.

    $( The intersection of a nonempty set is a subclass of its union.
       (Contributed by NM, 29-Jul-2006.) $)
    intssuni $p |- ( A =/= (/) -> |^| A C_ U. A ) $=
      ( vx vy c0 wne cint cuni cv wcel wral r19.2z ex vex elint2 eluni2 3imtr4g
      wrex ssrdv ) ADEZBAFZAGZSBHZCHIZCAJZUCCAQZUBTIUBUAISUDUEUCCAKLCUBABMNCUBA
      OPR $.
  $}

  ${
    $d x A $.
    $( Subclass of the intersection of a restricted class builder.
       (Contributed by NM, 30-Jan-2015.) $)
    ssintrab $p |- ( A C_ |^| { x e. B | ph }
           <-> A. x e. B ( ph -> A C_ x ) ) $=
      ( crab cint wss cv wcel wa cab wral df-rab inteqi sseq2i wal impexp albii
      wi ssintab df-ral 3bitr4i bitri ) CABDEZFZGCBHZDIZAJZBKZFZGZACUFGZSZBDLZU
      EUJCUDUIABDMNOUHULSZBPUGUMSZBPUKUNUOUPBUGAULQRUHBCTUMBDUAUBUC $.
  $}

  $( If the union of a class is included in its intersection, the class is
     either the empty set or a singleton ( ~ uniintsn ).  (Contributed by NM,
     30-Oct-2010.)  (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
  unissint $p |- ( U. A C_ |^| A <-> ( A = (/) \/ U. A = |^| A ) ) $=
    ( cuni cint wss c0 wo wn wa simpl wne df-ne intssuni sylbir adantl eqssd ex
    wceq orrd cvv ssv int0 sseqtr4i inteq syl5sseqr eqimss jaoi impbii ) ABZACZ
    DZAEQZUHUIQZFUJUKULUJUKGZULUJUMHUHUIUJUMIUMUIUHDZUJUMAEJUNAEKALMNOPRUKUJULU
    KECZUHUIUHSUOUHTUAUBAEUCUDUHUIUEUFUG $.

  $( Subclass relationship for intersection and union.  (Contributed by NM,
     29-Jul-2006.) $)
  intssuni2 $p |- ( ( A C_ B /\ A =/= (/) ) -> |^| A C_ U. B ) $=
    ( c0 wne wss cint cuni intssuni uniss sylan9ssr ) ACDABEAFAGBGAHABIJ $.

  ${
    $d x A $.  $d x B $.  $d x ps $.
    intminss.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Under subset ordering, the intersection of a restricted class
       abstraction is less than or equal to any of its members.  (Contributed
       by NM, 7-Sep-2013.) $)
    intminss $p |- ( ( A e. B /\ ps ) -> |^| { x e. B | ph } C_ A ) $=
      ( wcel wa crab cint wss elrab intss1 sylbir ) DEGBHDACEIZGOJDKABCDEFLDOMN
      $.
  $}

  ${
    $d x A $.
    intmin2.1 $e |- A e. _V $.
    $( Any set is the smallest of all sets that include it.  (Contributed by
       NM, 20-Sep-2003.) $)
    intmin2 $p |- |^| { x | A C_ x } = A $=
      ( cv wss cvv crab cint cab rabab inteqi wcel wceq intmin ax-mp eqtr3i ) B
      ADEZAFGZHZQAIZHBRTQAJKBFLSBMCABFNOP $.
  $}

  ${
    $d x A $.  $d x ps $.
    intmin3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    intmin3.3 $e |- ps $.
    $( Under subset ordering, the intersection of a class abstraction is less
       than or equal to any of its members.  (Contributed by NM,
       3-Jul-2005.) $)
    intmin3 $p |- ( A e. V -> |^| { x | ph } C_ A ) $=
      ( wcel cab cint wss elabg mpbiri intss1 syl ) DEHZDACIZHZQJDKPRBGABCDEFLM
      DQNO $.
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Elimination of a conjunct in a class intersection.  (Contributed by NM,
       31-Jul-2006.) $)
    intmin4 $p |- ( A C_ |^| { x | ph } ->
                  |^| { x | ( A C_ x /\ ph ) } = |^| { x | ph } ) $=
      ( vy cab cint wss cv wa wcel wi wal wb ssintab simpr impbid2 imbi1d alimi
      ancr elintab albi syl sylbi vex 3bitr4g eqrdv ) CABEFZGZDCBHZGZAIZBEFZUGU
      HUKDHZUIJZKZBLZAUNKZBLZUMULJUMUGJUHAUJKZBLZUPURMZABCNUTUOUQMZBLVAUSVBBUSU
      KAUNUSUKAUJAOAUJSPQRUOUQBUAUBUCUKBUMDUDZTABUMVCTUEUF $.
  $}

  ${
    $d x z A $.  $d x z ph $.  $d x y z $.
    intab.1 $e |- A e. _V $.
    intab.2 $e |- { x | E. y ( ph /\ x = A ) } e. _V $.
    $( The intersection of a special case of a class abstraction. ` y ` may be
       free in ` ph ` and ` A ` , which can be thought of a ` ph ( y ) ` and
       ` A ( y ) ` .  Typically, ~ abrexex2 or ~ abexssex can be used to
       satisfy the second hypothesis.  (Contributed by NM, 28-Jul-2006.)
       (Proof shortened by Mario Carneiro, 14-Nov-2016.) $)
    intab $p |- |^| { x | A. y ( ph -> A e. x ) } =
                { x | E. y ( ph /\ x = A ) } $=
      ( vz cv wcel wi wal cab cint wceq wa wex wss ex alrimiv sylibr cvv anbi2d
      eqeq1 exbidv cbvabv eqeltri nfe1 nfab nfeq2 eleq2 imbi2d albid elab 19.8a
      wsbc sbc6 df-sbc sylib mpgbir intss1 19.29r simplr pm3.35 adantlr eqeltrd
      ax-mp exlimiv syl vex elintab abssi eqssi eqtri ) ADBHZIZJZCKZBLZMZAGHZDN
      ZOZCPZGLZAVNDNZOZCPZBLZVSWDWDVRIZVSWDQWIADWDIZJZCVQWKCKBWDWDWHUAWCWGGBVTV
      NNZWBWFCWLWAWEAVTVNDUCUBUDUEZFUFVNWDNZVPWKCCVNWDWCCGWBCUGUHUIWNVOWJAVNWDD
      UJUKULUMAWCGDUOZWJAWAWCJZGKWOAWPGAWAWCWBCUNRSWCGDEUPTWCGDUQURUSWDVRUTVFWC
      GVSWCVQVTVNIZJZBKVTVSIWCWRBWCVQWQWCVQOWBVPOZCPWQWBVPCVAWSWQCWSVTDVNAWAVPV
      BAVPVOWAAVOVCVDVEVGVHRSVQBVTGVIVJTVKVLWMVM $.
  $}

  $( The intersection of a class containing the empty set is empty.
     (Contributed by NM, 24-Apr-2004.) $)
  int0el $p |- ( (/) e. A -> |^| A = (/) ) $=
    ( c0 wcel cint intss1 wss 0ss a1i eqssd ) BACZADZBBAEBKFJKGHI $.

  ${
    $d x y A $.  $d x y B $.
    $( The class intersection of the union of two classes.  Theorem 78 of
       [Suppes] p. 42.  (Contributed by NM, 22-Sep-2002.) $)
    intun $p |- |^| ( A u. B ) = ( |^| A i^i |^| B ) $=
      ( vx vy cun cint cin cv wcel wi wal wa 19.26 elun imbi1i jaob bitri elint
      wo 3bitr4i albii vex anbi12i elin eqriv ) CABEZFZAFZBFZGZDHZUFIZCHZUKIZJZ
      DKZUMUHIZUMUIIZLZUMUGIUMUJIUKAIZUNJZUKBIZUNJZLZDKVADKZVCDKZLUPUSVAVCDMUOV
      DDUOUTVBSZUNJVDULVGUNUKABNOUTUNVBPQUAUQVEURVFDUMACUBZRDUMBVHRUCTDUMUFVHRU
      MUHUIUDTUE $.
  $}

  ${
    $d x y A $.  $d x y B $.
    intpr.1 $e |- A e. _V $.
    intpr.2 $e |- B e. _V $.
    $( The intersection of a pair is the intersection of its members.  Theorem
       71 of [Suppes] p. 42.  (Contributed by NM, 14-Oct-1999.) $)
    intpr $p |- |^| { A , B } = ( A i^i B ) $=
      ( vx vy cpr cint cin cv wcel wi wal wa wceq 19.26 wo vex clel4 3bitr4i
      elpr imbi1i jaob bitri albii anbi12i elint elin eqriv ) EABGZHZABIZFJZUJK
      ZEJZUMKZLZFMZUOAKZUOBKZNZUOUKKUOULKUMAOZUPLZUMBOZUPLZNZFMVCFMZVEFMZNURVAV
      CVEFPUQVFFUQVBVDQZUPLVFUNVIUPUMABFRUAUBVBUPVDUCUDUEUSVGUTVHFUOACSFUOBDSUF
      TFUOUJERUGUOABUHTUI $.
  $}

  ${
    $d x y A $.  $d y B $.
    $( The intersection of a pair is the intersection of its members.  Closed
       form of ~ intpr .  Theorem 71 of [Suppes] p. 42.  (Contributed by FL,
       27-Apr-2008.) $)
    intprg $p |- ( ( A e. V /\ B e. W ) -> |^| { A , B } = ( A i^i B ) ) $=
      ( vx vy cv cpr cint cin wceq preq1 inteqd ineq1 eqeq12d preq2 ineq2 intpr
      vex vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAAKZUDUGUEU
      HULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBESFSRT $.
  $}

  $( Intersection of a singleton.  (Contributed by Stefan O'Rear,
     22-Feb-2015.) $)
  intsng $p |- ( A e. V -> |^| { A } = A ) $=
    ( wcel csn cint cpr dfsn2 inteqi cin wceq intprg anidms inidm syl6eq syl5eq
    ) ABCZADZEAAFZEZAQRAGHPSAAIZAPSTJAABBKLAMNO $.

  ${
    intsn.1 $e |- A e. _V $.
    $( The intersection of a singleton is its member.  Theorem 70 of [Suppes]
       p. 41.  (Contributed by NM, 29-Sep-2002.) $)
    intsn $p |- |^| { A } = A $=
      ( cvv wcel csn cint wceq intsng ax-mp ) ACDAEFAGBACHI $.
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Two ways to express " ` A ` is a singleton."  See also ~ en1 , ~ en1b ,
       ~ card1 , and ~ eusn .  (Contributed by NM, 2-Aug-2010.) $)
    uniintsn $p |- ( U. A = |^| A <-> E. x A = { x } ) $=
      ( vy cuni cint wceq cv wex wcel wa wal c0 inteq syl6eq adantl unieq sylib
      wne cvv wss csn wi vn0 int0 eqeq1 syl5ib imp eqtr3d ex necon3d mpi n0 cpr
      uni0 vex prss cun cin uniss simpl sseqtrd intss sstrd unipr intpr 3sstr3g
      inss1 ssun1 sstri jctir eqss uneqin bitr3i syl5bi alrimivv jca weu euabsn
      cab eleq1 abid2 eqeq1i exbii 3bitr3i unisn intsn 3eqtr4a exlimiv impbii
      eu4 ) BDZBEZFZBAGZUAZFZAHZWMWNBIZAHZWRCGZBIZJZWNWTFZUBZCKAKZJZWQWMWSXEWMB
      LRZWSWMSLRXGUCWMBLSLWMBLFZSLFWMXHJWLSLXHWLSFWMXHWLLESBLMUDNOWMXHWLLFZXHWK
      LFWMXIXHWKLDLBLPUNNWKWLLUEUFUGUHUIUJUKABULQWMXDACXBWNWTUMZBTZWMXCWNWTBAUO
      ZCUOZUPWMXKXCWMXKJZWNWTUQZWNWTURZTZXPXOTZJZXCXNXQXRXNXJDZXJEZXOXPXNXTWLYA
      XNXTWKWLXKXTWKTWMXJBUSOWMXKUTVAXKWLYATWMXJBVBOVCWNWTXLXMVDWNWTXLXMVEVFXPW
      NXOWNWTVGWNWTVHVIVJXSXOXPFXCXOXPVKWNWTVLVMQUIVNVOVPWRAVQWRAVSZWOFZAHXFWQW
      RAVRWRXAACWNWTBVTWJYCWPAYBBWOABWAWBWCWDQWPWMAWPWODWNWKWLWNXLWEBWOPWPWLWOE
      WNBWOMWNXLWFNWGWHWI $.

    $( The union and the intersection of a class abstraction are equal exactly
       when there is a unique satisfying value of ` ph ( x ) ` .  (Contributed
       by Mario Carneiro, 24-Dec-2016.) $)
    uniintab $p |- ( E! x ph <-> U. { x | ph } = |^| { x | ph } ) $=
      ( vy weu cab cv csn wceq wex cuni cint euabsn2 uniintsn bitr4i ) ABDABEZC
      FGHCIOJOKHABCLCOMN $.
  $}

  ${
    intunsn.1 $e |- B e. _V $.
    $( Theorem joining a singleton to an intersection.  (Contributed by NM,
       29-Sep-2002.) $)
    intunsn $p |- |^| ( A u. { B } ) = ( |^| A i^i B ) $=
      ( csn cun cint cin intun intsn ineq2i eqtri ) ABDZEFAFZLFZGMBGALHNBMBCIJK
      $.
  $}

  $( Relative intersection of an empty set.  (Contributed by Stefan O'Rear,
     3-Apr-2015.) $)
  rint0 $p |- ( X = (/) -> ( A i^i |^| X ) = A ) $=
    ( c0 wceq cint cin inteq ineq2d cvv int0 ineq2i inv1 eqtri syl6eq ) BCDZABE
    ZFACEZFZAOPQABCGHRAIFAQIAJKALMN $.

  ${
    $d B y $.  $d X y $.
    $( Membership in a restricted intersection.  (Contributed by Stefan O'Rear,
       3-Apr-2015.) $)
    elrint $p |- ( X e. ( A i^i |^| B ) <-> ( X e. A /\ A. y e. B X e. y ) ) $=
      ( cint cin wcel wa cv wral elin elintg pm5.32i bitri ) DBCEZFGDBGZDOGZHPD
      AIGACJZHDBOKPQRADCBLMN $.

    $( Membership in a restricted intersection.  (Contributed by Stefan O'Rear,
       3-Apr-2015.) $)
    elrint2 $p |- ( X e. A -> ( X e. ( A i^i |^| B ) <->
          A. y e. B X e. y ) ) $=
      ( cint cin wcel cv wral elrint baib ) DBCEFGDBGDAHGACIABCDJK $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Indexed union and intersection
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c U_ $. $( Underlined big cup. $)
  $c |^|_ $. $( Underlined big cap. $)

  $( Extend class notation to include indexed union.  Note:  Historically
     (prior to 21-Oct-2005), set.mm used the notation ` U. x e. A B ` , with
     the same union symbol as ~ cuni .  While that syntax was unambiguous, it
     did not allow for LALR parsing of the syntax constructions in set.mm.  The
     new syntax uses as distinguished symbol ` U_ ` instead of ` U. ` and does
     allow LALR parsing.  Thanks to Peter Backes for suggesting this change. $)
  ciun $a class U_ x e. A B $.

  $( Extend class notation to include indexed intersection.  Note:
     Historically (prior to 21-Oct-2005), set.mm used the notation
     ` |^| x e. A B ` , with the same intersection symbol as ~ cint .  Although
     that syntax was unambiguous, it did not allow for LALR parsing of the
     syntax constructions in set.mm.  The new syntax uses a distinguished
     symbol ` |^|_ ` instead of ` |^| ` and does allow LALR parsing.  Thanks to
     Peter Backes for suggesting this change. $)
  ciin $a class |^|_ x e. A B $.

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Define indexed union.  Definition indexed union in [Stoll] p. 45.  In
       most applications, ` A ` is independent of ` x ` (although this is not
       required by the definition), and ` B ` depends on ` x ` i.e. can be read
       informally as ` B ( x ) ` .  We call ` x ` the index, ` A ` the index
       set, and ` B ` the indexed set.  In most books, ` x e. A ` is written as
       a subscript or underneath a union symbol ` U. ` .  We use a special
       union symbol ` U_ ` to make it easier to distinguish from plain class
       union.  In many theorems, you will see that ` x ` and ` A ` are in the
       same distinct variable group (meaning ` A ` cannot depend on ` x ` ) and
       that ` B ` and ` x ` do not share a distinct variable group (meaning
       that can be thought of as ` B ( x ) ` i.e. can be substituted with a
       class expression containing ` x ` ).  An alternate definition tying
       indexed union to ordinary union is ~ dfiun2 .  Theorem ~ uniiun provides
       a definition of ordinary union in terms of indexed union.  Theorems
       ~ fniunfv and ~ funiunfv are useful when ` B ` is a function.
       (Contributed by NM, 27-Jun-1998.) $)
    df-iun $a |- U_ x e. A B = { y | E. x e. A y e. B } $.

    $( Define indexed intersection.  Definition of [Stoll] p. 45.  See the
       remarks for its sibling operation of indexed union ~ df-iun .  An
       alternate definition tying indexed intersection to ordinary intersection
       is ~ dfiin2 .  Theorem ~ intiin provides a definition of ordinary
       intersection in terms of indexed intersection.  (Contributed by NM,
       27-Jun-1998.) $)
    df-iin $a |- |^|_ x e. A B = { y | A. x e. A y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.
    $( Membership in indexed union.  (Contributed by NM, 3-Sep-2003.) $)
    eliun $p |- ( A e. U_ x e. B C <-> E. x e. B A e. C ) $=
      ( vy ciun wcel wrex elex rexlimivw cv wceq eleq1 rexbidv df-iun pm5.21nii
      cvv elab2g ) BACDFZGBQGZBDGZACHZBSIUATACBDIJEKZDGZACHUBEBSQUCBLUDUAACUCBD
      MNAECDORP $.

    $( Membership in indexed intersection.  (Contributed by NM, 3-Sep-2003.) $)
    eliin $p |- ( A e. V -> ( A e. |^|_ x e. B C <-> A. x e. B A e. C ) ) $=
      ( vy cv wcel wral ciin wceq eleq1 ralbidv df-iin elab2g ) FGZDHZACIBDHZAC
      IFBACDJEPBKQRACPBDLMAFCDNO $.
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutation of indexed unions.  (Contributed by NM, 18-Dec-2008.) $)
    iuncom $p |- U_ x e. A U_ y e. B C = U_ y e. B U_ x e. A C $=
      ( vz ciun cv wcel wrex rexcom eliun rexbii 3bitr4i eqriv ) FACBDEGZGZBDAC
      EGZGZFHZPIZACJZTRIZBDJZTQITSITEIZBDJZACJUEACJZBDJUBUDUEABCDKUAUFACBTDELMU
      CUGBDATCELMNATCPLBTDRLNO $.
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    $( Commutation of union with indexed union.  (Contributed by Mario
       Carneiro, 18-Jan-2014.) $)
    iuncom4 $p |- U_ x e. A U. B = U. U_ x e. A B $=
      ( vy vz cuni ciun cv wcel wa wex df-rex rexbii rexcom4 bitri exbii eluni2
      wrex eliun 3bitr4i r19.41v anbi1i eqriv ) DABCFZGZABCGZFZDHZUDIZABRZUHEHZ
      IZEUFRZUHUEIUHUGIULECRZABRZUKCIZABRZULJZEKZUJUMUOUPULJZABRZEKZUSUOUTEKZAB
      RVBUNVCABULECLMUTAEBNOVAUREUPULABUAPOUIUNABEUHCQMUMUKUFIZULJZEKUSULEUFLVE
      UREVDUQULAUKBCSUBPOTAUHBUDSEUHUFQTUC $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Indexed union of a constant class, i.e. where ` B ` does not depend on
       ` x ` .  (Contributed by NM, 5-Sep-2004.)  (Proof shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunconst $p |- ( A =/= (/) -> U_ x e. A B = B ) $=
      ( vy c0 wne ciun cv wcel wrex r19.9rzv eliun syl6rbbr eqrdv ) BEFZDABCGZC
      ODHZCIZRABJQPIRABKAQBCLMN $.

    $( Indexed intersection of a constant class, i.e. where ` B ` does not
       depend on ` x ` .  (Contributed by Mario Carneiro, 6-Feb-2015.) $)
    iinconst $p |- ( A =/= (/) -> |^|_ x e. A B = B ) $=
      ( vy c0 wne ciin cv wcel wral r19.3rzv cvv vex eliin ax-mp syl6rbbr eqrdv
      wb ) BEFZDABCGZCSDHZCIZUBABJZUATIZUBABKUALIUDUCRDMAUABCLNOPQ $.
  $}

  ${
    $d x y $.  $d y z A $.  $d x z B $.  $d z C $.
    $( Law combining indexed union with indexed intersection.  Eq. 14 in
       [KuratowskiMostowski] p. 109.  This theorem also appears as the last
       example at ~ http://en.wikipedia.org/wiki/Union%5F%28set%5Ftheory%29 .
       (Contributed by NM, 17-Aug-2004.)  (Proof shortened by Andrew Salmon,
       25-Jul-2011.) $)
    iuniin $p |- U_ x e. A |^|_ y e. B C C_ |^|_ y e. B U_ x e. A C $=
      ( vz ciin ciun cv wcel wrex wral r19.12 cvv vex eliin ax-mp eliun 3imtr4i
      wb rexbii ralbii ssriv ) FACBDEGZHZBDACEHZGZFIZUDJZACKZUHUFJZBDLZUHUEJUHU
      GJZUHEJZBDLZACKUNACKZBDLUJULUNABCDMUIUOACUHNJZUIUOTFOZBUHDENPQUAUKUPBDAUH
      CERUBSAUHCUDRUQUMULTURBUHDUFNPQSUC $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (Contributed by NM, 10-Dec-2004.)
       (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    iunss1 $p |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) $=
      ( vy wss ciun cv wcel wrex ssrexv eliun 3imtr4g ssrdv ) BCFZEABDGZACDGZOE
      HZDIZABJSACJRPIRQISABCKARBDLARCDLMN $.

    $( Subclass theorem for indexed union.  (Contributed by NM,
       24-Jan-2012.) $)
    iinss1 $p |- ( A C_ B -> |^|_ x e. B C C_ |^|_ x e. A C ) $=
      ( vy wss ciin cv wcel wral ssralv cvv wb vex eliin ax-mp 3imtr4g ssrdv )
      BCFZEACDGZABDGZSEHZDIZACJZUCABJZUBTIZUBUAIZUCABCKUBLIZUFUDMENZAUBCDLOPUHU
      GUEMUIAUBBDLOPQR $.

    $( Equality theorem for indexed union.  (Contributed by NM,
       27-Jun-1998.) $)
    iuneq1 $p |- ( A = B -> U_ x e. A C = U_ x e. B C ) $=
      ( wss wa ciun wceq iunss1 anim12i eqss 3imtr4i ) BCEZCBEZFABDGZACDGZEZPOE
      ZFBCHOPHMQNRABCDIACBDIJBCKOPKL $.

    $( Equality theorem for restricted existential quantifier.  (Contributed by
       NM, 27-Jun-1998.) $)
    iineq1 $p |- ( A = B -> |^|_ x e. A C = |^|_ x e. B C ) $=
      ( vy wceq cv wcel wral cab ciin raleq abbidv df-iin 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (Contributed by NM, 26-Nov-2003.)
       (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    ss2iun $p |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) $=
      ( vy wss wral ciun cv wcel wrex ssel ralimi rexim syl eliun 3imtr4g ssrdv
      wi ) CDFZABGZEABCHZABDHZUAEIZCJZABKZUDDJZABKZUDUBJUDUCJUAUEUGSZABGUFUHSTU
      IABCDUDLMUEUGABNOAUDBCPAUDBDPQR $.

    $( Equality theorem for indexed union.  (Contributed by NM,
       22-Oct-2003.) $)
    iuneq2 $p |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) $=
      ( wss wral wa ciun wceq ss2iun anim12i eqss ralbii r19.26 bitri 3imtr4i )
      CDEZABFZDCEZABFZGZABCHZABDHZEZUCUBEZGCDIZABFZUBUCIRUDTUEABCDJABDCJKUGQSGZ
      ABFUAUFUHABCDLMQSABNOUBUCLP $.

    $( Equality theorem for indexed intersection.  (Contributed by NM,
       22-Oct-2003.)  (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    iineq2 $p |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( vy wceq wral cv wcel cab ciin wb eleq2 ralimi syl abbidv df-iin 3eqtr4g
      ralbi ) CDFZABGZEHZCIZABGZEJUBDIZABGZEJABCKABDKUAUDUFEUAUCUELZABGUDUFLTUG
      ABCDUBMNUCUEABSOPAEBCQAEBDQR $.
  $}

  ${
    iuneq2i.1 $e |- ( x e. A -> B = C ) $.
    $( Equality inference for indexed union.  (Contributed by NM,
       22-Oct-2003.) $)
    iuneq2i $p |- U_ x e. A B = U_ x e. A C $=
      ( wceq ciun iuneq2 mprg ) CDFABCGABDGFABABCDHEI $.

    $( Equality inference for indexed intersection.  (Contributed by NM,
       22-Oct-2003.) $)
    iineq2i $p |- |^|_ x e. A B = |^|_ x e. A C $=
      ( wceq ciin iineq2 mprg ) CDFABCGABDGFABABCDHEI $.
  $}

  ${
    iineq2d.1 $e |- F/ x ph $.
    iineq2d.2 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed intersection.  (Contributed by NM,
       7-Dec-2011.) $)
    iineq2d $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( wceq wral ciin cv wcel ex ralrimi iineq2 syl ) ADEHZBCIBCDJBCEJHAQBCFAB
      KCLQGMNBCDEOP $.
  $}

  ${
    $d x ph $.
    iuneq2dv.1 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed union.  (Contributed by NM,
       3-Aug-2004.) $)
    iuneq2dv $p |- ( ph -> U_ x e. A B = U_ x e. A C ) $=
      ( wceq wral ciun ralrimiva iuneq2 syl ) ADEGZBCHBCDIBCEIGAMBCFJBCDEKL $.

    $( Equality deduction for indexed intersection.  (Contributed by NM,
       3-Aug-2004.) $)
    iineq2dv $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( nfv iineq2d ) ABCDEABGFH $.
  $}

  ${
    $d x A $.  $d x B $.
    iuneq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for indexed union, deduction version.  (Contributed by
       Drahflow, 22-Oct-2015.) $)
    iuneq1d $p |- ( ph -> U_ x e. A C = U_ x e. B C ) $=
      ( wceq ciun iuneq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.

    ${
      $d x ph $.
      iuneq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for indexed union, deduction version.  (Contributed
         by Drahflow, 22-Oct-2015.) $)
      iuneq12d $p |- ( ph -> U_ x e. A C = U_ x e. B D ) $=
        ( ciun iuneq1d wceq cv wcel adantr iuneq2dv eqtrd ) ABCEIBDEIBDFIABCDEG
        JABDEFAEFKBLDMHNOP $.
    $}
  $}

  ${
    $d x ph $.  $d x A $.
    iuneq2d.2 $e |- ( ph -> B = C ) $.
    $( Equality deduction for indexed union.  (Contributed by Drahflow,
       22-Oct-2015.) $)
    iuneq2d $p |- ( ph -> U_ x e. A B = U_ x e. A C ) $=
      ( wceq cv wcel adantr iuneq2dv ) ABCDEADEGBHCIFJK $.
  $}

  ${
    $d z A $.  $d z B $.  $d x z $.  $d y z $.
    nfiun.1 $e |- F/_ y A $.
    nfiun.2 $e |- F/_ y B $.
    $( Bound-variable hypothesis builder for indexed union.  (Contributed by
       Mario Carneiro, 25-Jan-2014.) $)
    nfiun $p |- F/_ y U_ x e. A B $=
      ( vz ciun cv wcel wrex cab df-iun nfcri nfrex nfab nfcxfr ) BACDHGIDJZACK
      ZGLAGCDMSBGRBACEBGDFNOPQ $.

    $( Bound-variable hypothesis builder for indexed intersection.
       (Contributed by Mario Carneiro, 25-Jan-2014.) $)
    nfiin $p |- F/_ y |^|_ x e. A B $=
      ( vz ciin cv wcel wral cab df-iin nfcri nfral nfab nfcxfr ) BACDHGIDJZACK
      ZGLAGCDMSBGRBACEBGDFNOPQ $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Bound-variable hypothesis builder for indexed union.  (Contributed by
       NM, 12-Oct-2003.) $)
    nfiu1 $p |- F/_ x U_ x e. A B $=
      ( vy ciun cv wcel wrex cab df-iun nfre1 nfab nfcxfr ) AABCEDFCGZABHZDIADB
      CJOADNABKLM $.

    $( Bound-variable hypothesis builder for indexed intersection.
       (Contributed by NM, 15-Oct-2003.) $)
    nfii1 $p |- F/_ x |^|_ x e. A B $=
      ( vy ciin cv wcel wral cab df-iin nfra1 nfab nfcxfr ) AABCEDFCGZABHZDIADB
      CJOADNABKLM $.
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C z $.  $d w x y z $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (Contributed by NM, 23-Mar-2006.)  (Proof
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    dfiun2g $p |- ( A. x e. A B e. C ->
                  U_ x e. A B = U. { y | E. x e. A y = B } ) $=
      ( vz wcel wral ciun cv wceq wrex cab cuni wa wex nfra1 wb rsp syl6bb syl6
      clel3g rexbida rexcom4 r19.41v exbii exancom bitri eliun eluniab 3bitr4g
      imp eqrdv ) DEGZACHZFACDIZBJZDKZACLZBMNZUOFJZDGZACLZVAUQGZUSOBPZVAUPGVAUT
      GUOVCURVDOZACLZBPZVEUOVCVFBPZACLVHUOVBVIACUNACQUOAJCGZVBVIRZUOVJUNVKUNACS
      BVADEUBUAULUCVFABCUDTVHUSVDOZBPVEVGVLBURVDACUEUFUSVDBUGUHTAVACDUIUSBVAUJU
      KUM $.

    $( Alternate definition of indexed intersection when ` B ` is a set.
       (Contributed by Jeff Hankins, 27-Aug-2009.) $)
    dfiin2g $p |- ( A. x e. A B e. C
               -> |^|_ x e. A B = |^| { y | E. x e. A y = B } ) $=
      ( vw vz wcel wral cv cab wceq wrex wi wal df-ral wb eqeq1 albii bitr4i
      ciin cint eleq2 biimprcd alrimiv eqid imbi12d mpii impbid2 imim2i pm5.74d
      spcgv alimi albi syl sylbi alcom r19.23v vex rexbidv elab imbi1i 3bitr3ri
      19.21v syl6bb syl5bb abbidv df-iin df-int 3eqtr4g ) DEHZACIZFJZDHZACIZFKG
      JZBJZDLZACMZBKZHZVMVPHZNZGOZFKACDUAVTUBVLVOWDFVOAJCHZVNNZAOZVLWDVNACPVLWG
      WEVPDLZWBNZGOZNZAOZWDVLWEVKNZAOZWGWLQZVKACPWNWFWKQZAOWOWMWPAWMWEVNWJVKVNW
      JQWEVKVNWJVNWIGWHWBVNVPDVMUCZUDUEVKWJDDLZVNDUFWIWRVNNGDEWHWHWRWBVNVPDDRWQ
      UGULUHUIUJUKUMWFWKAUNUOUPWIACIZGOZWEWINZGOZAOZWDWLWTXAAOZGOXCWSXDGWIACPSX
      AAGUQTWSWCGWSWHACMZWBNWCWHWBACURWAXEWBVSXEBVPGUSVQVPLVRWHACVQVPDRUTVAVBTS
      XBWKAWEWIGVDSVCVEVFVGAFCDVHFGVTVIVJ $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    dfiun2.1 $e |- B e. _V $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (Contributed by NM, 27-Jun-1998.)  (Revised by
       David Abernethy, 19-Jun-2012.) $)
    dfiun2 $p |- U_ x e. A B = U. { y | E. x e. A y = B } $=
      ( cvv wcel ciun cv wceq wrex cab cuni dfiun2g a1i mprg ) DFGZACDHBIDJACKB
      LMJACABCDFNQAICGEOP $.

    $( Alternate definition of indexed intersection when ` B ` is a set.
       Definition 15(b) of [Suppes] p. 44.  (Contributed by NM, 28-Jun-1998.)
       (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    dfiin2 $p |- |^|_ x e. A B = |^| { y | E. x e. A y = B } $=
      ( cvv wcel ciin cv wceq wrex cab cint dfiin2g a1i mprg ) DFGZACDHBIDJACKB
      LMJACABCDFNQAICGEOP $.
  $}

  ${
    $d z y A $.  $d z x A $.  $d z B $.  $d z C $.
    cbviun.1 $e |- F/_ y B $.
    cbviun.2 $e |- F/_ x C $.
    cbviun.3 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis.  (Contributed by
       NM, 26-Mar-2006.)  (Revised by Andrew Salmon, 25-Jul-2011.) $)
    cbviun $p |- U_ x e. A B = U_ y e. A C $=
      ( vz cv wcel wrex cab ciun nfcri wceq eleq2d cbvrex abbii df-iun 3eqtr4i
      ) IJZDKZACLZIMUBEKZBCLZIMACDNBCENUDUFIUCUEABCBIDFOAIEGOAJBJPDEUBHQRSAICDT
      BICETUA $.

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.)  (Revised by Mario Carneiro, 14-Oct-2016.) $)
    cbviin $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vz cv wcel wral cab ciin nfcri wceq eleq2d cbvral abbii df-iin 3eqtr4i
      ) IJZDKZACLZIMUBEKZBCLZIMACDNBCENUDUFIUCUEABCBIDFOAIEGOAJBJPDEUBHQRSAICDT
      BICETUA $.
  $}

  ${
    $d x A $.  $d y A $.  $d y z B $.  $d x z C $.
    cbviunv.1 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis.  (Contributed by
       NM, 15-Sep-2003.) $)
    cbviunv $p |- U_ x e. A B = U_ y e. A C $=
      ( nfcv cbviun ) ABCDEBDGAEGFH $.

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviinv $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( nfcv cbviin ) ABCDEBDGAEGFH $.
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed union.  (Contributed by NM, 13-Sep-2003.)
       (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    iunss $p |- ( U_ x e. A B C_ C <-> A. x e. A B C_ C ) $=
      ( vy ciun wss cv wcel wrex cab wal wral df-iun sseq1i abss ralbii ralcom4
      wi dfss2 r19.23v albii 3bitrri 3bitri ) ABCFZDGEHZCIZABJZEKZDGUHUFDIZSZEL
      ZCDGZABMZUEUIDAEBCNOUHEDPUNUGUJSZELZABMUOABMZELULUMUPABECDTQUOAEBRUQUKEUG
      UJABUAUBUCUD $.
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed union.  (Contributed by NM,
       3-Sep-2003.)  (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    ssiun $p |- ( E. x e. A C C_ B -> C C_ U_ x e. A B ) $=
      ( vy wss wrex ciun cv wcel ssel reximi r19.37av syl eliun syl6ibr ssrdv
      wi ) DCFZABGZEDABCHZTEIZDJZUBCJZABGZUBUAJTUCUDRZABGUCUERSUFABDCUBKLUCUDAB
      MNAUBBCOPQ $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Identity law for subset of an indexed union.  (Contributed by NM,
       12-Oct-2003.)  (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    ssiun2 $p |- ( x e. A -> B C_ U_ x e. A B ) $=
      ( vy cv wcel ciun wrex rspe ex eliun syl6ibr ssrdv ) AEBFZDCABCGZNDEZCFZQ
      ABHZPOFNQRQABIJAPBCKLM $.
  $}

  ${
    $d x A $.  $d x C $.  $d x D $.
    ssiun2s.1 $e |- ( x = C -> B = D ) $.
    $( Subset relationship for an indexed union.  (Contributed by NM,
       26-Oct-2003.) $)
    ssiun2s $p |- ( C e. A -> D C_ U_ x e. A B ) $=
      ( ciun wss nfcv nfiu1 nfss cv wceq sseq1d ssiun2 vtoclgaf ) CABCGZHEQHADB
      ADIAEQAEIABCJKALDMCEQFNABCOP $.
  $}

  ${
    $d x y $.  $d x B $.  $d y C $.  $d x D $.
    $( A subclass condition on the members of two indexed classes ` C ( x ) `
       and ` D ( y ) ` that implies a subclass relation on their indexed
       unions.  Generalization of Proposition 8.6 of [TakeutiZaring] p. 59.
       Compare ~ uniss2 .  (Contributed by NM, 9-Dec-2004.) $)
    iunss2 $p |- ( A. x e. A E. y e. B C C_ D ->
                 U_ x e. A C C_ U_ y e. B D ) $=
      ( wss wrex wral ciun ssiun ralimi iunss sylibr ) EFGBDHZACIEBDFJZGZACIACE
      JPGOQACBDFEKLACEPMN $.
  $}

  ${
    $d y A $.  $d x y $.  $d x B $.
    $( The indexed union of a class abstraction.  (Contributed by NM,
       27-Dec-2004.) $)
    iunab $p |- U_ x e. A { y | ph } = { y | E. x e. A ph } $=
      ( cab ciun wrex wceq cv wcel wb nfcv nfab1 nfiun cleqf abid eliun 3bitr4i
      rexbii mpgbir ) BDACEZFZABDGZCEZHCIZUBJZUEUDJZKCCUBUDBCDUACDLACMNUCCMOUEU
      AJZBDGUCUFUGUHABDACPSBUEDUAQUCCPRT $.

    $( The indexed union of a restricted class abstraction.  (Contributed by
       NM, 3-Jan-2004.)  (Proof shortened by Mario Carneiro, 14-Nov-2016.) $)
    iunrab $p |- U_ x e. A { y e. B | ph } = { y e. B | E. x e. A ph } $=
      ( cv wcel cab ciun wrex crab iunab wceq df-rab a1i iuneq2i r19.42v eqtr4i
      wa abbii 3eqtr4i ) BDCFEGZASZCHZIUCBDJZCHZBDACEKZIABDJZCEKZUCBCDLBDUGUDUG
      UDMBFDGACENOPUIUBUHSZCHUFUHCENUEUJCUBABDQTRUA $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    iunxdif2.1 $e |- ( x = y -> C = D ) $.
    $( Indexed union with a class difference as its index.  (Contributed by NM,
       10-Dec-2004.) $)
    iunxdif2 $p |- ( A. x e. A E. y e. ( A \ B ) C C_ D ->
                 U_ y e. ( A \ B ) D = U_ x e. A C ) $=
      ( wss cdif wrex wral ciun wceq iunss2 difss iunss1 ax-mp cbviunv sseqtr4i
      wa jctil eqss sylibr ) EFHBCDIZJACKZBUDFLZACELZHZUGUFHZTUFUGMUEUIUHABCUDE
      FNUFBCFLZUGUDCHUFUJHCDOBUDCFPQABCEFGRSUAUFUGUBUC $.
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d x y z $.
    ssiinf.1 $e |- F/_ x C $.
    $( Subset theorem for an indexed intersection.  (Contributed by FL,
       15-Oct-2012.)  (Proof shortened by Mario Carneiro, 14-Oct-2016.) $)
    ssiinf $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( vy cv ciin wcel wral wss cvv vex eliin ax-mp ralbii nfcv ralcomf dfss3
      wb bitri 3bitr4i ) FGZABCHZIZFDJZUCCIZFDJZABJZDUDKDCKZABJUFUGABJZFDJUIUEU
      KFDUCLIUEUKTFMAUCBCLNOPUGFADBEFBQRUAFDUDSUJUHABFDCSPUB $.
  $}

  ${
    $d x C $.
    $( Subset theorem for an indexed intersection.  (Contributed by NM,
       15-Oct-2003.) $)
    ssiin $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( nfcv ssiinf ) ABCDADEF $.
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed intersection.  (Contributed by NM,
       15-Oct-2003.)  (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    iinss $p |- ( E. x e. A B C_ C -> |^|_ x e. A B C_ C ) $=
      ( vy wss wrex ciin cv wcel wral cvv wb vex eliin ax-mp wi reximi r19.36av
      ssel syl syl5bi ssrdv ) CDFZABGZEABCHZDEIZUFJZUGCJZABKZUEUGDJZUGLJUHUJMEN
      AUGBCLOPUEUIUKQZABGUJUKQUDULABCDUGTRUIUKABSUAUBUC $.
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    $( An indexed intersection is included in any of its members.  (Contributed
       by FL, 15-Oct-2012.) $)
    iinss2 $p |- ( x e. A -> |^|_ x e. A B C_ B ) $=
      ( vy cv wcel ciin wral wi cvv wb vex eliin ax-mp rsp sylbi com12 ssrdv )
      AEBFZDABCGZCDEZTFZSUACFZUBUCABHZSUCIUAJFUBUDKDLAUABCJMNUCABOPQR $.
  $}

  ${
    $d x y A $.
    $( Class union in terms of indexed union.  Definition in [Stoll] p. 43.
       (Contributed by NM, 28-Jun-1998.) $)
    uniiun $p |- U. A = U_ x e. A x $=
      ( vy cuni cv wcel wrex cab ciun dfuni2 df-iun eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.

    $( Class intersection in terms of indexed intersection.  Definition in
       [Stoll] p. 44.  (Contributed by NM, 28-Jun-1998.) $)
    intiin $p |- |^| A = |^|_ x e. A x $=
      ( vy cint cv wcel wral cab ciin dfint2 df-iin eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.

    $( An indexed union of singletons recovers the index set.  (Contributed by
       NM, 6-Sep-2005.) $)
    iunid $p |- U_ x e. A { x } = A $=
      ( vy cv csn ciun wceq cab wcel df-sn equcom abbii eqtri a1i iuneq2i iunab
      wrex risset abid2 3eqtr2i ) ABADZEZFABUACDZGZCHZFZBABUBUEUBUEGUABIUBUCUAG
      ZCHUECUAJUGUDCCAKLMNOUFUDABQZCHUCBIZCHBUDACBPUIUHCAUCBRLCBSTM $.
  $}

  ${
    $d x y $.  $d y A $.
    $( An indexed union of the empty set is empty.  (Contributed by NM,
       26-Mar-2003.)  (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    iun0 $p |- U_ x e. A (/) = (/) $=
      ( vy c0 ciun cv wcel wrex wn noel a1i nrex eliun mtbir 2false eqriv ) CAB
      DEZDCFZQGZRDGZSTABHTABTIAFBGRJZKLARBDMNUAOP $.

    $( An empty indexed union is empty.  (Contributed by NM, 4-Dec-2004.)
       (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    0iun $p |- U_ x e. (/) A = (/) $=
      ( vy c0 ciun cv wcel wrex rex0 eliun mtbir noel 2false eqriv ) CADBEZDCFZ
      OGZPDGQPBGZADHRAIAPDBJKPLMN $.

    $( An empty indexed intersection is the universal class.  (Contributed by
       NM, 20-Oct-2005.) $)
    0iin $p |- |^|_ x e. (/) A = _V $=
      ( vy c0 ciin cv wcel wral cab cvv df-iin vex ral0 2th abbi2i eqtr4i ) ADB
      ECFZBGZADHZCIJACDBKSCJQJGSCLRAMNOP $.

    $( Indexed intersection with a universal index class.  When ` A ` doesn't
       depend on ` x ` , this evaluates to ` A ` by ~ 19.3 and ~ abid2 .  When
       ` A = x ` , this evaluates to ` (/) ` by ~ intiin and ~ intv .
       (Contributed by NM, 11-Sep-2008.) $)
    viin $p |- |^|_ x e. _V A = { y | A. x y e. A } $=
      ( cvv ciin cv wcel wral cab wal df-iin ralv abbii eqtri ) ADCEBFCGZADHZBI
      OAJZBIABDCKPQBOALMN $.
  $}

  ${
    $d x y A $.  $d y B $.
    $( There is a non-empty class in an indexed collection ` B ( x ) ` iff the
       indexed union of them is non-empty.  (Contributed by NM, 15-Oct-2003.)
       (Proof shortened by Andrew Salmon, 25-Jul-2011.) $)
    iunn0 $p |- ( E. x e. A B =/= (/) <-> U_ x e. A B =/= (/) ) $=
      ( vy cv wcel wex wrex c0 wne rexcom4 eliun exbii bitr4i n0 rexbii 3bitr4i
      ciun ) DEZCFZDGZABHZSABCRZFZDGZCIJZABHUCIJUBTABHZDGUETADBKUDUGDASBCLMNUFU
      AABDCOPDUCOQ $.
  $}

  ${
    $d y A $.  $d x y $.
    $( Indexed intersection of a class builder.  (Contributed by NM,
       6-Dec-2011.) $)
    iinab $p |- |^|_ x e. A { y | ph } = { y | A. x e. A ph } $=
      ( cab ciin wral wceq cv wcel nfcv nfab1 nfiin cleqf abid ralbii cvv eliin
      wb vex ax-mp 3bitr4i mpgbir ) BDACEZFZABDGZCEZHCIZUEJZUHUGJZSCCUEUGBCDUDC
      DKACLMUFCLNUHUDJZBDGZUFUIUJUKABDACOPUHQJUIULSCTBUHDUDQRUAUFCOUBUC $.

    $d x A $.  $d x B $.
    $( Indexed intersection of a restricted class builder.  (Contributed by NM,
       6-Dec-2011.) $)
    iinrab $p |- ( A =/= (/)
          -> |^|_ x e. A { y e. B | ph } = { y e. B | A. x e. A ph } ) $=
      ( c0 wne cv wcel wa wral cab crab ciin r19.28zv abbidv df-rab a1i iineq2i
      wceq iinab eqtri 3eqtr4g ) DFGZCHEIZAJZBDKZCLZUEABDKZJZCLBDACEMZNZUICEMUD
      UGUJCUEABDOPULBDUFCLZNUHBDUKUMUKUMTBHDIACEQRSUFBCDUAUBUICEQUC $.

    $d y B $.
    $( Indexed intersection of a restricted class builder.  (Contributed by NM,
       6-Dec-2011.) $)
    iinrab2 $p |- ( |^|_ x e. A { y e. B | ph } i^i B )
                      = { y e. B | A. x e. A ph } $=
      ( crab ciin cin wral wceq c0 cvv iineq1 0iin syl6eq incom inv1 eqtri rzal
      ineq1d rabid2 ralcom bitr2i sylib wne iinrab wss ssrab2 dfss mpbi syl6eqr
      eqtrd pm2.61ine ) BDACEFZGZEHZABDIZCEFZJDKDKJZUPEURUSUPLEHZEUSUOLEUSUOBKU
      NGLBDKUNMBUNNOTUTELHELEPEQROUSACEIZBDIZEURJZVABDSVCUQCEIVBUQCEUAACBEDUBUC
      UDULDKUEZUPUREHZURVDUOUREABCDEUFTUREUGURVEJUQCEUHUREUIUJUKUM $.
  $}

  ${
    $d y A $.  $d x y B $.  $d y C $.
    $( Indexed union of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ uniiun to recover
       Enderton's theorem.  (Contributed by NM, 26-Mar-2004.) $)
    iunin2 $p |- U_ x e. A ( B i^i C ) = ( B i^i U_ x e. A C ) $=
      ( vy cin ciun cv wcel wrex r19.42v elin rexbii eliun anbi2i 3bitr4i eqriv
      wa ) EABCDFZGZCABDGZFZEHZSIZABJZUCCIZUCUAIZRZUCTIUCUBIUFUCDIZRZABJUFUIABJ
      ZRUEUHUFUIABKUDUJABUCCDLMUGUKUFAUCBDNOPAUCBSNUCCUALPQ $.

    $( Indexed union of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ uniiun to recover
       Enderton's theorem.  (Contributed by Mario Carneiro, 30-Aug-2015.) $)
    iunin1 $p |- U_ x e. A ( C i^i B ) = ( U_ x e. A C i^i B ) $=
      ( cin ciun iunin2 wceq cv wcel incom a1i iuneq2i 3eqtr4i ) ABCDEZFCABDFZE
      ABDCEZFPCEABCDGABQOQOHAIBJDCKLMPCKN $.

    $( Indexed intersection of union.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem.  (Contributed by NM, 19-Aug-2004.) $)
    iinun2 $p |- |^|_ x e. A ( B u. C ) = ( B u. |^|_ x e. A C ) $=
      ( vy cun ciin cv wcel wral wo r19.32v elun ralbii cvv eliin ax-mp 3bitr4i
      wb vex orbi2i eqriv ) EABCDFZGZCABDGZFZEHZUCIZABJZUGCIZUGUEIZKZUGUDIZUGUF
      IUJUGDIZKZABJUJUNABJZKUIULUJUNABLUHUOABUGCDMNUKUPUJUGOIZUKUPSETZAUGBDOPQU
      ARUQUMUISURAUGBUCOPQUGCUEMRUB $.

    $( Indexed union of class difference.  Generalization of half of theorem
       "De Morgan's laws" in [Enderton] p. 31.  Use ~ intiin to recover
       Enderton's theorem.  (Contributed by NM, 19-Aug-2004.) $)
    iundif2 $p |- U_ x e. A ( B \ C ) = ( B \ |^|_ x e. A C ) $=
      ( vy cdif ciun ciin cv wcel wrex wn wa eldif rexbii r19.42v rexnal cvv wb
      wral vex eliin ax-mp xchbinxr anbi2i 3bitri eliun 3bitr4i eqriv ) EABCDFZ
      GZCABDHZFZEIZUJJZABKZUNCJZUNULJZLZMZUNUKJUNUMJUPUQUNDJZLZMZABKUQVBABKZMUT
      UOVCABUNCDNOUQVBABPVDUSUQVDVAABTZURVAABQUNRJURVESEUAAUNBDRUBUCUDUEUFAUNBU
      JUGUNCULNUHUI $.
  $}

  ${
    $d x B $.  $d y C $.  $d x D $.  $d x y $.
    $( Rearrange indexed unions over intersection.  (Contributed by NM,
       18-Dec-2008.) $)
    2iunin $p |- U_ x e. A U_ y e. B ( C i^i D )
        = ( U_ x e. A C i^i U_ y e. B D ) $=
      ( cin ciun wceq cv wcel iunin2 a1i iuneq2i iunin1 eqtri ) ACBDEFGHZHACEBD
      FHZGZHACEHRGACQSQSIAJCKBDEFLMNACREOP $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Indexed intersection of class difference.  Generalization of half of
       theorem "De Morgan's laws" in [Enderton] p. 31.  Use ~ uniiun to recover
       Enderton's theorem.  (Contributed by NM, 5-Oct-2006.) $)
    iindif2 $p |- ( A =/= (/) ->
                 |^|_ x e. A ( B \ C ) = ( B \ U_ x e. A C ) ) $=
      ( vy c0 wne cdif ciin ciun cv wcel wn wa r19.28zv eldif bicomi ralbii cvv
      wral wrex ralnex eliun xchbinxr anbi2i 3bitr3g wb vex eliin ax-mp 3bitr4g
      eqrdv ) BFGZEABCDHZIZCABDJZHZUMEKZUNLZABTZURCLZURUPLZMZNZURUOLZURUQLUMVAU
      RDLZMZNZABTVAVGABTZNUTVDVAVGABOVHUSABUSVHURCDPQRVIVCVAVIVFABUAVBVFABUBAUR
      BDUCUDUEUFURSLVEUTUGEUHAURBUNSUIUJURCUPPUKUL $.

    $( Indexed intersection of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem.  (Contributed by Mario Carneiro, 19-Mar-2015.) $)
    iinin2 $p |- ( A =/= (/) ->
      |^|_ x e. A ( B i^i C ) = ( B i^i |^|_ x e. A C ) ) $=
      ( vy c0 wne cin ciin cv wcel wral wa r19.28zv elin wb eliin ax-mp 3bitr4g
      cvv ralbii vex anbi2i eqrdv ) BFGZEABCDHZIZCABDIZHZUEEJZUFKZABLZUJCKZUJUH
      KZMZUJUGKZUJUIKUEUMUJDKZMZABLUMUQABLZMULUOUMUQABNUKURABUJCDOUAUNUSUMUJTKZ
      UNUSPEUBZAUJBDTQRUCSUTUPULPVAAUJBUFTQRUJCUHOSUD $.

    $( Indexed intersection of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem.  (Contributed by Mario Carneiro, 19-Mar-2015.) $)
    iinin1 $p |- ( A =/= (/) ->
      |^|_ x e. A ( C i^i B ) = ( |^|_ x e. A C i^i B ) ) $=
      ( c0 wne cin ciin iinin2 wceq cv wcel incom a1i iineq2i 3eqtr4g ) BEFABCD
      GZHCABDHZGABDCGZHRCGABCDIABSQSQJAKBLDCMNORCMP $.
  $}

  ${
    $d A x y $.  $d X x y $.  $d B x $.
    $( Elementhood in a relative intersection.  (Contributed by Mario Carneiro,
       30-Dec-2016.) $)
    elriin $p |- ( B e. ( A i^i |^|_ x e. X S ) <->
      ( B e. A /\ A. x e. X B e. S ) ) $=
      ( ciin cin wcel wa wral elin eliin pm5.32i bitri ) CBAEDFZGHCBHZCOHZIPCDH
      AEJZICBOKPQRACEDBLMN $.

    $( Relative intersection of an empty family.  (Contributed by Stefan
       O'Rear, 3-Apr-2015.) $)
    riin0 $p |- ( X = (/) -> ( A i^i |^|_ x e. X S ) = A ) $=
      ( c0 wceq ciin cin iineq1 ineq2d cvv 0iin ineq2i inv1 eqtri syl6eq ) DEFZ
      BADCGZHBAECGZHZBQRSBADECIJTBKHBSKBACLMBNOP $.

    $( Relative intersection of a nonempty family.  (Contributed by Stefan
       O'Rear, 3-Apr-2015.) $)
    riinn0 $p |- ( ( A. x e. X S C_ A /\ X =/= (/) ) ->
        ( A i^i |^|_ x e. X S ) = |^|_ x e. X S ) $=
      ( wss wral c0 wne wa ciin incom wceq wrex r19.2z ancoms iinss df-ss sylib
      cin syl syl5eq ) CBEZADFZDGHZIZBADCJZSUFBSZUFBUFKUEUFBEZUGUFLUEUBADMZUHUD
      UCUIUBADNOADCBPTUFBQRUA $.

    $( Relative intersection of a relative abstraction.  (Contributed by Stefan
       O'Rear, 3-Apr-2015.) $)
    riinrab $p |- ( A i^i |^|_ x e. X { y e. A | ph } ) =
        { y e. A | A. x e. X ph } $=
      ( crab ciin cin wral wceq c0 riin0 rzal ralrimivw rabid2 sylibr eqtrd wne
      wss ssrab2 rgenw riinn0 mpan iinrab pm2.61ine ) DBEACDFZGZHZABEIZCDFZJEKE
      KJZUHDUJBDUFELUKUICDIDUJJUKUICDABEMNUICDOPQEKRZUHUGUJUFDSZBEIULUHUGJUMBEA
      CDTUABDUFEUBUCABCEDUDQUE $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d y V $.
    iinxsng.1 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed intersection's
       argument.  (Contributed by NM, 15-Jan-2012.)  (Proof shortened by Mario
       Carneiro, 17-Nov-2016.) $)
    iinxsng $p |- ( A e. V -> |^|_ x e. { A } B = C ) $=
      ( vy wcel csn ciin cv wral cab df-iin wceq eleq2d ralsng abbi1dv syl5eq )
      BEHZABIZCJGKZCHZAUALZGMDAGUACNTUDGDUCUBDHABEAKBOCDUBFPQRS $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x y D $.  $d x y E $.  $d y V $.
    $d y W $.
    iinxprg.1 $e |- ( x = A -> C = D ) $.
    iinxprg.2 $e |- ( x = B -> C = E ) $.
    $( Indexed intersection with an unordered pair index.  (Contributed by NM,
       25-Jan-2012.) $)
    iinxprg $p |- ( ( A e. V /\ B e. W )
        -> |^|_ x e. { A , B } C = ( D i^i E ) ) $=
      ( vy wcel wa cpr ciin cin cv wceq eleq2d cvv wral ralprg eliin ax-mp elin
      wb vex 3bitr4g eqrdv ) BGLCHLMZKABCNZDOZEFPZUJKQZDLZAUKUAZUNELZUNFLZMUNUL
      LZUNUMLUOUQURABCGHAQZBRDEUNISUTCRDFUNJSUBUNTLUSUPUFKUGAUNUKDTUCUDUNEFUEUH
      UI $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d y V $.
    iunxsng.1 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed union's argument.
       (Contributed by Mario Carneiro, 25-Jun-2016.) $)
    iunxsng $p |- ( A e. V -> U_ x e. { A } B = C ) $=
      ( vy wcel csn ciun cv wrex eliun wceq eleq2d rexsng syl5bb eqrdv ) BEHZGA
      BIZCJZDGKZUAHUBCHZATLSUBDHZAUBTCMUCUDABEAKBNCDUBFOPQR $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    iunxsn.1 $e |- A e. _V $.
    iunxsn.2 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed union's argument.
       (Contributed by NM, 26-Mar-2004.)  (Proof shortened by Mario Carneiro,
       25-Jun-2016.) $)
    iunxsn $p |- U_ x e. { A } B = C $=
      ( cvv wcel csn ciun wceq iunxsng ax-mp ) BGHABICJDKEABCDGFLM $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Separate a union in an indexed union.  (Contributed by NM,
       27-Dec-2004.)  (Proof shortened by Mario Carneiro, 17-Nov-2016.) $)
    iunun $p |- U_ x e. A ( B u. C ) = ( U_ x e. A B u. U_ x e. A C ) $=
      ( vy cun ciun cv wcel wrex r19.43 elun rexbii eliun orbi12i 3bitr4i eqriv
      wo ) EABCDFZGZABCGZABDGZFZEHZSIZABJZUDUAIZUDUBIZRZUDTIUDUCIUDCIZUDDIZRZAB
      JUJABJZUKABJZRUFUIUJUKABKUEULABUDCDLMUGUMUHUNAUDBCNAUDBDNOPAUDBSNUDUAUBLP
      Q $.

    $( Separate a union in the index of an indexed union.  (Contributed by NM,
       26-Mar-2004.)  (Proof shortened by Mario Carneiro, 17-Nov-2016.) $)
    iunxun $p |- U_ x e. ( A u. B ) C = ( U_ x e. A C u. U_ x e. B C ) $=
      ( vy cun ciun cv wcel wrex rexun eliun orbi12i bitr4i elun 3bitr4i eqriv
      wo ) EABCFZDGZABDGZACDGZFZEHZDIZASJZUDUAIZUDUBIZRZUDTIUDUCIUFUEABJZUEACJZ
      RUIUEABCKUGUJUHUKAUDBDLAUDCDLMNAUDSDLUDUAUBOPQ $.
  $}

  ${
    $d x y z $.  $d x z A $.  $d z B $.  $d y z C $.
    $( Separate an indexed union in the index of an indexed union.
       (Contributed by Mario Carneiro, 5-Dec-2016.) $)
    iunxiun $p |- U_ x e. U_ y e. A B C = U_ y e. A U_ x e. B C $=
      ( vz ciun cv wcel wa wex eliun anbi1i r19.41v bitr4i exbii rexcom4 df-rex
      wrex 3bitr4i bitri rexbii eqriv ) FABCDGZEGZBCADEGZGZFHZEIZAUDSZUHUFIZBCS
      ZUHUEIUHUGIAHZUDIZUIJZAKZUMDIZUIJZAKZBCSZUJULUPURBCSZAKUTUOVAAUOUQBCSZUIJ
      VAUNVBUIBUMCDLMUQUIBCNOPURBACQOUIAUDRUKUSBCUKUIADSUSAUHDELUIADRUAUBTAUHUD
      ELBUHCUFLTUC $.
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A relationship involving union and indexed intersection.  Exercise 23 of
       [Enderton] p. 33.  (Contributed by NM, 25-Nov-2003.)  (Proof shortened
       by Mario Carneiro, 17-Nov-2016.) $)
    iinuni $p |- ( A u. |^| B ) = |^|_ x e. B ( A u. x ) $=
      ( vy cint cun cv ciin wcel wral wel r19.32v elun ralbii vex elint2 orbi2i
      wo 3bitr4ri cvv wb eliin ax-mp 3bitr4i eqriv ) DBCEZFZACBAGZFZHZDGZBIZUKU
      FIZRZUKUIIZACJZUKUGIUKUJIZULDAKZRZACJULURACJZRUPUNULURACLUOUSACUKBUHMNUMU
      TULAUKCDOZPQSUKBUFMUKTIUQUPUAVAAUKCUITUBUCUDUE $.

    $( A relationship involving union and indexed union.  Exercise 25 of
       [Enderton] p. 33.  (Contributed by NM, 25-Nov-2003.)  (Proof shortened
       by Mario Carneiro, 17-Nov-2016.) $)
    iununi $p |- ( ( B = (/) -> A = (/) ) <->
                ( A u. U. B ) = U_ x e. B ( A u. x ) ) $=
      ( c0 wceq wi cuni cun cv ciun wn wne iunconst sylbir iun0 iuneq2d 3eqtr4a
      df-ne id syl6eq ja eqcomd uneq1d uniiun uneq2i iunun 3eqtr4g unieq uneq2d
      uni0 un0 iuneq1 0iun eqeq12d biimpcd impbii ) CDEZBDEZFZBCGZHZACBAIZHZJZE
      ZUSBACVBJZHACBJZVFHVAVDUSBVGVFUSVGBUQURVGBEZUQKCDLVHCDRACBMNURACDJDVGBACO
      URACBDURSZPVIQUAUBUCUTVFBACUDUEACBVBUFUGUQVEURUQVABVDDUQVABDHBUQUTDBUQUTD
      GDCDUHUJTUIBUKTUQVDADVCJDACDVCULAVCUMTUNUOUP $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class and union.  (Contributed by NM,
       18-Jul-2006.) $)
    sspwuni $p |- ( A C_ ~P B <-> U. A C_ B ) $=
      ( vx cv cpw wcel wral wss cuni vex elpw ralbii dfss3 unissb 3bitr4i ) CDZ
      BEZFZCAGPBHZCAGAQHAIBHRSCAPBCJKLCAQMCABNO $.

    $( Two ways to express a collection of subclasses.  (Contributed by NM,
       19-Jul-2006.) $)
    pwssb $p |- ( A C_ ~P B <-> A. x e. A x C_ B ) $=
      ( cpw wss cuni cv wral sspwuni unissb bitri ) BCDEBFCEAGCEABHBCIABCJK $.
  $}

  $( Relationship for power class and union.  (Contributed by NM,
     18-Jul-2006.) $)
  elpwuni $p |- ( B e. A -> ( A C_ ~P B <-> U. A = B ) ) $=
    ( cpw wss cuni wcel wceq sspwuni unissel expcom eqimss impbid1 syl5bb ) ABC
    DAEZBDZBAFZNBGZABHPOQOPQABIJNBKLM $.

  ${
    $d x y A $.
    $( The power class of an intersection in terms of indexed intersection.
       Exercise 24(a) of [Enderton] p. 33.  (Contributed by NM,
       29-Nov-2003.) $)
    iinpw $p |- ~P |^| A = |^|_ x e. A ~P x $=
      ( vy cint cpw cv ciin wss wcel wral ssint vex elpw ralbii bitr4i wb eliin
      cvv ax-mp 3bitr4i eqriv ) CBDZEZABAFZEZGZCFZUBHZUGUEIZABJZUGUCIUGUFIZUHUG
      UDHZABJUJAUGBKUIULABUGUDCLZMNOUGUBUMMUGRIUKUJPUMAUGBUERQSTUA $.

    $( Inclusion of an indexed union of a power class in the power class of the
       union of its index.  Part of Exercise 24(b) of [Enderton] p. 33.
       (Contributed by NM, 25-Nov-2003.) $)
    iunpwss $p |- U_ x e. A ~P x C_ ~P U. A $=
      ( vy cpw ciun cuni wss wrex wcel ssiun eliun vex elpw rexbii bitri uniiun
      cv sseq2i 3imtr4i ssriv ) CABAQZDZEZBFZDZCQZUAGZABHZUFABUAEZGZUFUCIZUFUEI
      ZABUAUFJUKUFUBIZABHUHAUFBUBKUMUGABUFUACLZMNOULUFUDGUJUFUDUNMUDUIUFABPROST
      $.
  $}

  $( Relative intersection of a nonempty set.  (Contributed by Stefan O'Rear,
     3-Apr-2015.)  (Revised by Mario Carneiro, 5-Jun-2015.) $)
  rintn0 $p |- ( ( X C_ ~P A /\ X =/= (/) ) -> ( A i^i |^| X ) = |^| X ) $=
    ( cpw wss c0 wne wa cint incom wceq cuni intssuni2 ssid sspwuni mpbi syl6ss
    cin df-ss sylib syl5eq ) BACZDBEFGZABHZQUCAQZUCAUCIUBUCADUDUCJUBUCUAKZABUAL
    UAUADUEADUAMUAANOPUCARST $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Disjointness
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c Disj_ $.

  $( Extend wff notation to include the statement that a family of classes
     ` B ( x ) ` , for ` x e. A ` , is a disjoint family. $)
  wdisj $a wff Disj_ x e. A B $.

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( A collection of classes ` B ( x ) ` is disjoint when for each element
       ` y ` , it is in ` B ( x ) ` for at most one ` x ` .  (Contributed by
       Mario Carneiro, 14-Nov-2016.)  (Revised by NM, 16-Jun-2017.) $)
    df-disj $a |- ( Disj_ x e. A B <-> A. y E* x e. A y e. B ) $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Alternate definition for disjoint classes.  (Contributed by NM,
       17-Jun-2017.) $)
    dfdisj2 $p |- ( Disj_ x e. A B <-> A. y E* x ( x e. A /\ y e. B ) ) $=
      ( wdisj cv wcel wrmo wal wa wmo df-disj df-rmo albii bitri ) ACDEBFDGZACH
      ZBIAFCGPJAKZBIABCDLQRBPACMNO $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( If each element of a collection is contained in a disjoint collection,
       the original collection is also disjoint.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    disjss2 $p |- ( A. x e. A B C_ C ->
      ( Disj_ x e. A C -> Disj_ x e. A B ) ) $=
      ( vy wss wral cv wcel wrmo wal wdisj ssel ralimi rmoim syl alimdv df-disj
      wi 3imtr4g ) CDFZABGZEHZDIZABJZEKUCCIZABJZEKABDLABCLUBUEUGEUBUFUDSZABGUEU
      GSUAUHABCDUCMNUFUDABOPQAEBDRAEBCRT $.
  $}

  $( Equality theorem for disjoint collection.  (Contributed by Mario Carneiro,
     14-Nov-2016.) $)
  disjeq2 $p |- ( A. x e. A B = C ->
    ( Disj_ x e. A B <-> Disj_ x e. A C ) ) $=
    ( wceq wral wdisj wss wi eqimss2 ralimi disjss2 syl eqimss impbid ) CDEZABF
    ZABCGZABDGZQDCHZABFRSIPTABDCJKABDCLMQCDHZABFSRIPUAABCDNKABCDLMO $.

  ${
    $d x ph $.
    disjeq2dv.1 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for disjoint collection.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    disjeq2dv $p |- ( ph -> ( Disj_ x e. A B <-> Disj_ x e. A C ) ) $=
      ( wceq wral wdisj wb ralrimiva disjeq2 syl ) ADEGZBCHBCDIBCEIJANBCFKBCDEL
      M $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( A subset of a disjoint collection is disjoint.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    disjss1 $p |- ( A C_ B -> ( Disj_ x e. B C -> Disj_ x e. A C ) ) $=
      ( vy wss cv wcel wa wmo wal wdisj wi ssel anim1d alrimiv moim syl dfdisj2
      alimdv 3imtr4g ) BCFZAGZCHZEGDHZIZAJZEKUCBHZUEIZAJZEKACDLABDLUBUGUJEUBUIU
      FMZAKUGUJMUBUKAUBUHUDUEBCUCNOPUIUFAQRTAECDSAEBDSUA $.

    $( Equality theorem for disjoint collection.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    disjeq1 $p |- ( A = B -> ( Disj_ x e. A C <-> Disj_ x e. B C ) ) $=
      ( wceq wdisj wss wi eqimss2 disjss1 syl eqimss impbid ) BCEZABDFZACDFZNCB
      GOPHCBIACBDJKNBCGPOHBCLABCDJKM $.

    disjeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for disjoint collection.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    disjeq1d $p |- ( ph -> ( Disj_ x e. A C <-> Disj_ x e. B C ) ) $=
      ( wceq wdisj wb disjeq1 syl ) ACDGBCEHBDEHIFBCDEJK $.

    $d x ph $.
    disjeq12d.1 $e |- ( ph -> C = D ) $.
    $( Equality theorem for disjoint collection.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    disjeq12d $p |- ( ph -> ( Disj_ x e. A C <-> Disj_ x e. B D ) ) $=
      ( wdisj disjeq1d wceq cv wcel adantr disjeq2dv bitrd ) ABCEIBDEIBDFIABCDE
      GJABDEFAEFKBLDMHNOP $.
  $}

  ${
    $d x y z A $.  $d z B $.  $d z C $.
    cbvdisj.1 $e |- F/_ y B $.
    cbvdisj.2 $e |- F/_ x C $.
    cbvdisj.3 $e |- ( x = y -> B = C ) $.
    $( Change bound variables in a disjoint collection.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    cbvdisj $p |- ( Disj_ x e. A B <-> Disj_ y e. A C ) $=
      ( vz cv wcel wrmo wal wdisj nfcri weq eleq2d cbvrmo albii df-disj 3bitr4i
      ) IJZDKZACLZIMUBEKZBCLZIMACDNBCENUDUFIUCUEABCBIDFOAIEGOABPDEUBHQRSAICDTBI
      CETUA $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.
    cbvdisjv.1 $e |- ( x = y -> B = C ) $.
    $( Change bound variables in a disjoint collection.  (Contributed by Mario
       Carneiro, 11-Dec-2016.) $)
    cbvdisjv $p |- ( Disj_ x e. A B <-> Disj_ y e. A C ) $=
      ( nfcv cbvdisj ) ABCDEBDGAEGFH $.
  $}

  ${
    $d z A $.  $d z B $.  $d x z $.  $d y z $.
    nfdisj.1 $e |- F/_ y A $.
    nfdisj.2 $e |- F/_ y B $.
    $( Bound-variable hypothesis builder for disjoint collection.  (Contributed
       by Mario Carneiro, 14-Nov-2016.) $)
    nfdisj $p |- F/ y Disj_ x e. A B $=
      ( vz wdisj cv wcel wa wmo wal wrmo df-disj df-rmo albii wnf wtru a1i wnfc
      bitri nftru weq wn nfcvf nfeld nfcri nfand adantl nfmod2 trud nfal nfxfr
      ) ACDHZAIZCJZGIDJZKZALZGMZBUOURACNZGMVAAGCDOVBUTGURACPQUBUTBGUTBRSUSBAAUC
      BAUDBMUEZUSBRSVCUQURBVCBUPCBAUFBCUAVCETUGURBRVCBGDFUHTUIUJUKULUMUN $.
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Bound-variable hypothesis builder for disjoint collection.  (Contributed
       by Mario Carneiro, 14-Nov-2016.) $)
    nfdisj1 $p |- F/ x Disj_ x e. A B $=
      ( vy wdisj cv wcel wrmo wal df-disj nfrmo1 nfal nfxfr ) ABCEDFCGZABHZDIAA
      DBCJOADNABKLM $.
  $}

  ${
    $d i j x A $.  $d j x B $.  $d i x C $.
    disjmo.1 $e |- ( i = j -> B = C ) $.
    $( Two ways to say that a collection ` B ( i ) ` for ` i e. A ` is
       disjoint.  (Contributed by Mario Carneiro, 26-Mar-2015.)  (Revised by
       Mario Carneiro, 14-Nov-2016.) $)
    disjor $p |- ( Disj_ i e. A B <->
      A. i e. A A. j e. A ( i = j \/ ( B i^i C ) = (/) ) ) $=
      ( vx wdisj cv wcel wrmo wal wo wral wi ralcom4 wex bitri bitr4i ralbii c0
      weq cin wceq df-disj wa orcom df-or neq0 elin imbi1i 19.23v 3bitri eleq2d
      wn exbii rmo4 albii 3bitr4i ) DABHGIZBJZDAKZGLZDEUBZBCUCZUAUDZMZEANZDANZD
      GABUEVAUTCJZUFZVDOZEANZGLZDANVMDANZGLVIVCVMDGAPVHVNDAVHVLGLZEANVNVGVPEAVG
      VFVDMVFUOZVDOZVPVDVFUGVFVDUHVRVKGQZVDOVPVQVSVDVQUTVEJZGQVSGVEUIVTVKGUTBCU
      JUPRUKVKVDGULSUMTVLEGAPRTVBVOGVAVJDEAVDBCUTFUNUQURUSS $.

    $( Two ways to say that a collection ` B ( i ) ` for ` i e. A ` is
       disjoint.  (Contributed by Mario Carneiro, 26-Mar-2015.)
       (New usage is discouraged.) $)
    disjmoOLD $p |- ( A. x E* i ( i e. A /\ x e. B ) <->
      A. i e. A A. j e. A ( i = j \/ ( B i^i C ) = (/) ) ) $=
      ( cv wcel wa wmo wal wdisj wceq cin c0 wo wral dfdisj2 disjor bitr3i ) EH
      ZBIAHCIJEKALEBCMUBFHNCDOPNQFBREBREABCSBCDEFGTUA $.
  $}

  ${
    $d i j x A $.  $d i j B $.
    $( Two ways to say that a collection ` B ( i ) ` for ` i e. A ` is
       disjoint.  (Contributed by Mario Carneiro, 14-Nov-2016.) $)
    disjors $p |- ( Disj_ x e. A B <-> A. i e. A A. j e. A
      ( i = j \/ ( [_ i / x ]_ B i^i [_ j / x ]_ B ) = (/) ) ) $=
      ( wdisj cv csb wceq c0 wo wral nfcv nfcsb1v csbeq1a cbvdisj csbeq1 disjor
      cin bitri ) ABCFDBADGZCHZFUAEGZIUBAUCCHZSJIKEBLDBLADBCUBDCMAUACNAUACOPBUB
      UDDEAUAUCCQRT $.
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x z D $.  $d x y z X $.
    $d x z Y $.
    disji.1 $e |- ( x = X -> B = C ) $.
    disji.2 $e |- ( x = Y -> B = D ) $.
    $( Property of a disjoint collection: if ` B ( X ) = C ` and
       ` B ( Y ) = D ` , and ` X =/= Y ` , then ` C ` and ` D ` are disjoint.
       (Contributed by Mario Carneiro, 14-Nov-2016.) $)
    disji2 $p |- ( ( Disj_ x e. A B /\ ( X e. A /\ Y e. A ) /\
      X =/= Y ) -> ( C i^i D ) = (/) ) $=
      ( vy vz wcel wa cin c0 wceq wo cv csb nfcv wdisj df-ne wral disjors eqeq1
      wn csbhypf ineq1d eqeq1d orbi12d eqeq2 ineq2d rspc2v syl5bi impcom 3impia
      wne ord ) ABCUAZFBLGBLMZFGUQZDENZOPZVAFGPZUFUSUTMZVCFGUBVEVDVCUTUSVDVCQZU
      SJRZKRZPZAVGCSZAVHCSZNZOPZQZKBUCJBUCUTVFABCJKUDVNVFFVHPZDVKNZOPZQJKFGBBVG
      FPZVIVOVMVQVGFVHUEVRVLVPOVRVJDVKAJFCDAFTADTHUGUHUIUJVHGPZVOVDVQVCVHGFUKVS
      VPVBOVSVKEDAKGCEAGTAETIUGULUIUJUMUNUOURUNUP $.

    $( Property of a disjoint collection: if ` B ( X ) = C ` and
       ` B ( Y ) = D ` have a common element ` Z ` , then ` X = Y ` .
       (Contributed by Mario Carneiro, 14-Nov-2016.) $)
    disji $p |- ( ( Disj_ x e. A B /\ ( X e. A /\ Y e. A ) /\
      ( Z e. C /\ Z e. D ) ) -> X = Y ) $=
      ( wcel wa wdisj cin c0 wne wceq inelcm disji2 3expia necon1d syl3an3
      3impia ) HDKHEKLABCMZFBKGBKLZDENZOPZFGQZHDERUDUEUGUHUDUELFGUFOUDUEFGPUFOQ
      ABCDEFGIJSTUAUCUB $.
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d x C $.
    $( If there is a function ` C ( y ) ` such that ` C ( y ) = x ` for all
       ` y e. B ( x ) ` , then the sets ` B ( x ) ` for distinct ` x e. A ` are
       disjoint.  (Contributed by Mario Carneiro, 10-Dec-2016.) $)
    invdisj $p |- ( A. x e. A A. y e. B C = x -> Disj_ x e. A B ) $=
      ( cv wceq wral wcel wa wmo wal wdisj nfra2 df-ral rsp eqcom syl6ib imim2i
      wi imp3a alimi sylbi mo2icl alrimi wrmo df-disj df-rmo albii bitri sylibr
      syl ) EAFZGZBDHZACHZUMCIZBFDIZJZAKZBLZACDMZUPUTBUNABCDNUPUSUMEGZTZALZUTUP
      UQUOTZALVEUOACOVFVDAVFUQURVCUOURVCTUQUOURUNVCUNBDPEUMQRSUAUBUCUSAEUDULUEV
      BURACUFZBLVAABCDUGVGUTBURACUHUIUJUK $.
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x y z D $.
    $( A disjoint collection yields disjoint indexed unions for disjoint index
       sets.  (Contributed by Mario Carneiro, 26-Mar-2015.)  (Revised by Mario
       Carneiro, 14-Nov-2016.) $)
    disjiun $p |- ( ( Disj_ x e. A B /\
      ( C C_ A /\ D C_ A /\ ( C i^i D ) = (/) ) ) ->
        ( U_ x e. C B i^i U_ x e. D B ) = (/) ) $=
      ( vy vz wss cin c0 wceq wa cv wcel wi wrex wral impcom syl syl5bi ciun wn
      wdisj w3a wal wrmo df-disj wne elin eliun anbi12i weq wex nfv rmo2 ssralv
      bitri an4 r19.29 id imp eleq1d biimpcd rexlimiv ex expimpd anim12d inelcm
      syl6 exlimiv exp3a sylbi necon2bd impancom 3impa alimdv eq0 sylibr ) ABCU
      CZDBHZEBHZDEIZJKZUDZLFMZADCUAZAECUAZIZNZUBZFUEZWHJKWDVSWKVSWECNZABUFZFUEW
      DWKAFBCUGWDWMWJFVTWAWCWMWJOVTWALZWMWCWJWNWMLZWIWBJWIWLADPZWLAEPZLZWOWBJUH
      ZWIWEWFNZWEWGNZLWRWEWFWGUIWTWPXAWQAWEDCUJAWEECUJUKUQWMWNWRWSOZWMWLAGULZOZ
      ABQZGUMZWNXBOWLAGBWLGUNUOXFWNWRWSWNWRLVTWPLZWAWQLZLZXFWSVTWAWPWQURXEXIWSO
      GXEXIGMZDNZXJENZLWSXEXGXKXHXLXEVTWPXKXEVTLXDADQZWPXKOVTXEXMXDADBUPRXMWPXK
      XMWPLXDWLLZADPXKXDWLADUSXNXKADXNAMZDNXKXNXOXJDXDWLXCXDUTVAZVBVCVDSVESVFXE
      WAWQXLXEWALXDAEQZWQXLOWAXEXQXDAEBUPRXQWQXLXQWQLXNAEPXLXDWLAEUSXNXLAEXNXOE
      NXLXNXOXJEXPVBVCVDSVESVFVGXJDEVHVIVJTVKVLRTVMVNVOVPTRFWHVQVR $.

    $( A disjoint collection yields disjoint indexed unions for disjoint index
       sets.  (Contributed by Mario Carneiro, 26-Mar-2015.)
       (New usage is discouraged.) $)
    disjiunOLD $p |- ( ( A. y E* x ( x e. A /\ y e. B ) /\
      ( C C_ A /\ D C_ A /\ ( C i^i D ) = (/) ) ) ->
        ( U_ x e. C B i^i U_ x e. D B ) = (/) ) $=
      ( cv wcel wa wmo wal wdisj wss cin c0 wceq w3a ciun dfdisj2 disjiun
      sylanbr ) AGCHBGDHIAJBKACDLECMFCMEFNOPQAEDRAFDRNOPABCDSACDEFTUA $.
  $}

  ${
    $d x y $.  $d y A $.
    $( Any collection of singletons is disjoint.  (Contributed by Mario
       Carneiro, 14-Nov-2016.) $)
    sndisj $p |- Disj_ x e. A { x } $=
      ( vy cv csn wdisj wcel wa dfdisj2 wceq moeq simpr elsn sylib eqcomd moimi
      wmo ax-mp mpgbir ) ABADZEZFTBGZCDZUAGZHZAQZCACBUAITUCJZAQUFAUCKUEUGAUEUCT
      UEUDUCTJUBUDLCTMNOPRS $.
  $}

  $( Any collection of empty sets is disjoint.  (Contributed by Mario Carneiro,
     14-Nov-2016.) $)
  0disj $p |- Disj_ x e. A (/) $=
    ( c0 cv csn wss wral wdisj 0ss rgenw sndisj disjss2 mp2 ) CADEZFZABGABNHABC
    HOABNIJABKABCNLM $.

  ${
    $d x y A $.  $d y B $.
    $( A singleton collection is disjoint.  (Contributed by Mario Carneiro,
       14-Nov-2016.) $)
    disjxsn $p |- Disj_ x e. { A } B $=
      ( vy csn wdisj cv wcel wa wmo dfdisj2 wceq moeq elsni adantr moimi mpgbir
      ax-mp ) ABEZCFAGZSHZDGCHZIZAJZDADSCKTBLZAJUDABMUCUEAUAUEUBTBNOPRQ $.

    $( An empty collection is disjoint.  (Contributed by Mario Carneiro,
       14-Nov-2016.) $)
    disjx0 $p |- Disj_ x e. (/) B $=
      ( c0 csn wss wdisj 0ss disjxsn disjss1 mp2 ) CCDZEAKBFACBFKGACBHACKBIJ $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d y z C $.  $d x y z D $.  $d x y z E $.
    disjprg.1 $e |- ( x = A -> C = D ) $.
    disjprg.2 $e |- ( x = B -> C = E ) $.
    $( A pair collection is disjoint iff the two sets in the family have empty
       intersection.  (Contributed by Mario Carneiro, 14-Nov-2016.) $)
    disjprg $p |- ( ( A e. V /\ B e. V /\ A =/= B ) ->
      ( Disj_ x e. { A , B } C <-> ( D i^i E ) = (/) ) ) $=
      ( vy vz wceq cin c0 wo wral wa wb nfcv wtru wcel wne w3a cv csb cpr wdisj
      eqeq1 csbhypf ineq1d eqeq1d orbi12d ralbidv ralprg 3adant3 id eqcomd orcd
      a1tru 2thd eqeq2 ineq2d simp3 neneqd biorf syl tru biantrur syl6bb bitr4d
      wn eqcom incom syl6eq biantru anbi12d bitrd disjors pm4.24 3bitr4g ) BGUA
      ZCGUAZBCUBZUCZJUDZKUDZLZAWEDUEZAWFDUEZMZNLZOZKBCUFZPZJWMPZEFMZNLZWQQZAWMD
      UGWQWDWOBWFLZEWIMZNLZOZKWMPZCWFLZFWIMZNLZOZKWMPZQZWRWAWBWOXIRWCWNXCXHJBCG
      GWEBLZWLXBKWMXJWGWSWKXAWEBWFUHXJWJWTNXJWHEWIAJBDEABSZAESZHUIUJUKULUMWECLZ
      WLXGKWMXMWGXDWKXFWECWFUHXMWJXENXMWHFWIAJCDFACSZAFSZIUIUJUKULUMUNUOWDXCWQX
      HWQWDXCTBCLZWQOZQZWQWAWBXCXRRWCXBTXQKBCGGWFBLZXBTXSWSXAXSWFBXSUPUQURXSUSU
      TWFCLZWSXPXAWQWFCBVAXTWTWPNXTWIFEAKCDFXNXOIUIVBUKULUNUOWDWQXQXRWDXPVKWQXQ
      RWDBCWAWBWCVCVDXPWQVEVFZTXQVGVHVIVJWDXHXQTQZWQWAWBXHYBRWCXGXQTKBCGGXSXDXP
      XFWQXSXDCBLXPWFBCVACBVLVIXSXEWPNXSXEFEMWPXSWIEFAKBDEXKXLHUIVBFEVMVNUKULXT
      XGTXTXDXFXTWFCXTUPUQURXTUSUTUNUOWDWQXQYBYATXQVGVOVIVJVPVQAWMDJKVRWQVSVT
      $.
  $}

  ${
    $d r s u v x y z A $.  $d r s u v x z B $.  $d r s u v y z C $.
    $( An indexed union of a disjoint collection of disjoint collections is
       disjoint if each component is disjoint, and the disjoint unions in the
       collection are also disjoint.  Note that ` B ( y ) ` and ` C ( x ) ` may
       have the displayed free variables.  (Contributed by Mario Carneiro,
       14-Nov-2016.) $)
    disjxiun $p |- ( Disj_ y e. A B -> ( Disj_ x e. U_ y e. A B C <->
      ( A. y e. A Disj_ x e. B C /\ Disj_ y e. A U_ x e. B C ) ) ) $=
      ( vu vv vr vs vz wdisj ciun wral wa nfcv cv wcel wss syl wceq nfiu1 com12
      wi nfdisj ssiun2 disjss1 ralrimi a1i csb cin c0 wo simplr simprll nfcsb1v
      csbeq1a cbviun syl6sseqr simprlr csbeq1 sseq1d vtoclga simpl sylib disjor
      wn cbvdisj rsp2 imp ord impr disjiun syl13anc expr orrd ralrimivva sylibr
      iuneq1d nfiun jcad wrex eleq2i eliun anbi12i reeanv bitr4i simplrr simprl
      ex bitri simplrl disjeq1d rspc sylc ad2antrr disjors simpld simprd adantl
      eleqtrrd jca mpd wne ss2in simprr simpr disji2 syl121anc sseq0 pm2.61dane
      syl2anc rexlimdvva syl5bi ralrimivv impbid ) BCDKZABCDLZEKZADEKZBCMZBCADE
      LZKZNZXPXRXTYBXRXTUCXPXRXSBCABXQEBCDUABEOZUDBPZCQZXRXSYFDXQRXRXSUCBCDUEAD
      XQEUFSUBUGUHXPXRYBXPXRNZFCABFPZDUIZELZKZYBYGYHGPZTZYJABYLDUIZELZUJZUKTZUL
      ZGCMFCMYKYGYRFGCCYGYHCQZYLCQZNZNZYMYQYGUUAYMVFZYQYGUUAUUCNZNZXRYIXQRZYNXQ
      RZYIYNUJUKTZYQXPXRUUDUMUUEYSUUFYGYSYTUUCUNYSYIFCYILZXQFCYIUEBFCDYIFDOZBYH
      DUOZBYHDUPZUQZURZSUUEYTUUGYGYSYTUUCUSUUFUUGFYLCYMYIYNXQBYHYLDUTZVAUUNVBSY
      GUUAUUCUUHUUBYMUUHYGUUAYMUUHULZYGUUPGCMFCMZUUAUUPUCYGFCYIKZUUQYGXPUURXPXR
      VCBFCDYIUUJUUKUULVGVDCYIYNFGUUOVEVDUUPFGCCVHSVIVJVKAXQEYIYNVLVMVNVOVPCYJY
      OFGYMAYIYNEUUOVRVEVQBFCYAYJFYAOABYIEUUKYDVSYEYHTZADYIEUULVRVGVQWIVTXPYCXR
      XPYCNZHPZIPZTZAUVAEUIZAUVBEUIZUJZUKTZULZIXQMHXQMXRUUTUVHHIXQXQUVAXQQZUVBX
      QQZNZUVAYIQZUVBYNQZNZGCWAFCWAZUUTUVHUVKUVLFCWAZUVMGCWAZNUVOUVIUVPUVJUVQUV
      IUVAUUIQUVPXQUUIUVAUUMWBFUVACYIWCWJUVJUVBGCYNLZQUVQXQUVRUVBBGCDYNGDOBYLDU
      OBYLDUPUQWBGUVBCYNWCWJWDUVLUVMFGCCWEWFUUTUVNUVHFGCCUUTUUANZUVNUVHUVSUVNNU
      VCUVGUVSUVNUVCVFZUVGUVSUVNUVTNZNZUVGYHYLUWBYMNZUVTUVGUVSUVNUVTYMWGUWCUVCU
      VGUWCUVHIYIMHYIMZUVLUVBYIQZNUVHUWCAYIEKZUWDUVSUWFUWAYMUVSYSXTUWFUUTYSYTWH
      ZXPXTYBUUAWKXSUWFBYHCABYIEUUKYDUDUUSADYIEUULWLWMWNWOAYIEHIWPVDUWCUVLUWEUW
      CUVLUVMUVSUVNUVTYMWKZWQUWCUVBYNYIUWCUVLUVMUWHWRYMYIYNTUWBUUOWSWTXAUVHHIYI
      YIVHWNVJXBUWBYHYLXCZNZUVFYPRZYQUVGUWJUVDYJRZUVEYORZUWKUWJUVLUWLUWJUVLUVMU
      VSUVNUVTUWIWKZWQUVLUVDHYIUVDLYJHYIUVDUEAHYIEUVDHEOAUVAEUOAUVAEUPUQURSUWJU
      VMUWMUWJUVLUVMUWNWRUVMUVEIYNUVELYOIYNUVEUEAIYNEUVEIEOAUVBEUOAUVBEUPUQURSU
      VDYJUVEYOXDXKUWJJCABJPZDUIZELZKZYSYTUWIYQUWJYBUWRUVSYBUWAUWIXPXTYBUUAWGWO
      BJCYAUWQJYAOABUWPEBUWODUOYDVSYEUWOTADUWPEBUWODUPVRVGVDUVSYSUWAUWIUWGWOUVS
      YTUWAUWIUUTYSYTXEWOUWBUWIXFJCUWQYJYOYHYLUWOYHTAUWPYIEBUWOYHDUTVRUWOYLTAUW
      PYNEBUWOYLDUTVRXGXHUVFYPXIXKXJVNVOWIXLXMXNAXQEHIWPVQWIXO $.
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w y z C $.  $d w x z D $.
    disjxun.1 $e |- ( x = y -> C = D ) $.
    $( The union of two disjoint collections.  (Contributed by Mario Carneiro,
       14-Nov-2016.) $)
    disjxun $p |- ( ( A i^i B ) = (/) -> ( Disj_ x e. ( A u. B ) C <->
      ( Disj_ x e. A C /\ Disj_ x e. B C /\
        A. x e. A A. y e. B ( C i^i D ) = (/) ) ) ) $=
      ( vz vw cin c0 wceq cv wo wral wa wdisj eqeq1d orbi12d bitri csb cun wcel
      w3a wn wb disjel eleq1 notbid syl5ibcom con2d impr biorf bicomd 2ralbidva
      syl anbi2d ralunb ralbii nfcv nfcsb1v nfin nfeq1 nfor nfral eqeq2 csbhypf
      ineq2d cbvralv eqeq1 csbeq1a ineq1d ralbidv syl5bbr cbvral r19.26 3bitr3i
      nfv disjor anbi1i 3bitr4g eqcom syl6bb incom syl6eq ralcom syl5bb disjors
      anbi1d anbi2ci anbi12d df-3an anandir ) CDJKLZHMZIMZLZAWOEUAZAWPEUAZJZKLZ
      NZICDUBZOZHCOZXDHDOZPZACEQZEFJZKLZBDOACOZPZADEQZXKPZPZAXCEQZXHXMXKUDZWNXE
      XLXFXNWNAMZBMZLZXJNZBCOZACOZYABDOZACOZPZYCXKPXEXLWNYEXKYCWNYAXJABCDWNXRCU
      CZXSDUCZPPZXJYAYIXTUEZXJYAUFWNYGYHYJWNYGPZXTYHYKXRDUCZUEXTYHUECDXRUGXTYLY
      HXRXSDUHUIUJUKULXTXJUMUPUNUOZUQYABXCOZACOYBYDPZACOXEYFYNYOACYABCDURUSYNXD
      AHCYNHVRXBAIXCAXCUTWQXAAWQAVRAWTKAWRWSAWOEVAAWPEVAVBVCVDZVEYNXRWPLZEWSJZK
      LZNZIXCOXRWOLZXDYTYAIBXCWPXSLZYQXTYSXJWPXSXRVFUUBYRXIKUUBWSFEAIXSEFAXSUTZ
      AFUTZGVGVHRSVIUUAYTXBIXCUUAYQWQYSXAXRWOWPVJUUAYRWTKUUAEWRWSAWOEVKVLRSVMVN
      VOYBYDACVPVQXHYCXKCEFABGVSVTWAWNXBICOZHDOZXBIDOZHDOZPZXKUUHPXFXNWNUUFXKUU
      HUUFYEWNXKUUFYAACOZBDOYEUUEUUJHBDUUEWOXRLZWREJZKLZNZACOWOXSLZUUJUUNXBAICU
      UNIVRYPYQUUKWQUUMXAXRWPWOVFYQUULWTKYQEWSWRAWPEVKVHRSVOUUOUUNYAACUUOUUKXTU
      UMXJUUOUUKXSXRLXTWOXSXRVJXSXRWBWCUUOUULXIKUUOUULFEJXIUUOWRFEAHXSEFUUCUUDG
      VGVLFEWDWERSVMVNVIYABADCWFTYMWGWIXFUUEUUGPZHDOUUIXDUUPHDXBICDURUSUUEUUGHD
      VPTXMUUHXKADEHIWHWJWAWKXPXDHXCOXGAXCEHIWHXDHCDURTXQXHXMPXKPXOXHXMXKWLXHXM
      XKWMTWA $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Expand a disjoint collection with any number of empty sets.
       (Contributed by Mario Carneiro, 15-Nov-2016.) $)
    disjss3 $p |- ( ( A C_ B /\ A. x e. ( B \ A ) C = (/) ) ->
      ( Disj_ x e. A C <-> Disj_ x e. B C ) ) $=
      ( vy wss c0 wceq cdif wa wdisj cv wcel wmo wal wi wn syl alimdv dfdisj2
      wral df-ral w3a simp3r n0i simp3l eldif simp2 syl5bir mpand mt3d jca 3exp
      syl5bi imp moim 3imtr4g disjss1 adantr impbid ) BCFZDGHZACBIZUAZJZABDKZAC
      DKZVEALZBMZELZDMZJZANZEOVHCMZVKJZANZEOVFVGVEVMVPEVEVOVLPZAOZVMVPPVAVDVRVD
      VHVCMZVBPZAOVAVRVBAVCUBVAVTVQAVAVTVOVLVAVTVOUCZVIVKWAVIVBWAVKVBQVAVTVNVKU
      DZDVJUERWAVNVIQZVBVAVTVNVKUFVNWCJVSWAVBVHCBUGVAVTVOUHUIUJUKWBULUMSUNUOVOV
      LAUPRSAEBDTAECDTUQVAVGVFPVDABCDURUSUT $.
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The Kuratowski ordered pair
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed. $)
  $c << $.  $( Double bracket $)
  $c >> $.  $( Double bracket $)

  $( Extend class notation to include Kuratowski ordered pair. $)
  copk $a class << A , B >> $.

  $( Define the Kuratowski ordered pair.  This ordered pair definition is
     standard for ZFC set theory, but we do not use it beyond establishing
     ~ df-op , since it is not type-level.  We state this definition since it
     is a simple definition that can be used by the set construction axioms
     that follow this section. $)
  df-opk $a |- << A , B >> = { { A } , { A , B } } $.


  $( Equality theorem for ordered pairs.  (Contributed by NM, 25-Jun-1998.) $)
  opkeq1 $p |- ( A = B -> << A , C >> = << B , C >> ) $=
    ( wceq csn cpr copk sneq preq1 preq12d df-opk 3eqtr4g ) ABDZAEZACFZFBEZBCFZ
    FACGBCGMNPOQABHABCIJACKBCKL $.
    $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs.  (Contributed by NM, 25-Jun-1998.) $)
  opkeq2 $p |- ( A = B -> << C , A >> = << C , B >> ) $=
    ( wceq csn cpr copk preq2 preq2d df-opk 3eqtr4g ) ABDZCEZCAFZFMCBFZFCAGCBGL
    NOMABCHICAJCBJK $.
    $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs.  (Contributed by NM, 28-May-1995.) $)
  opkeq12 $p |- ( ( A = C /\ B = D ) -> << A , B >> = << C , D >> ) $=
    ( wceq copk opkeq1 opkeq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [28-May-1995] $)

  ${
    opkeq1i.1 $e |- A = B $.
    $( Equality inference for ordered pairs.  (Contributed by NM,
       16-Dec-2006.) $)
    opkeq1i $p |- << A , C >> = << B , C >> $=
      ( wceq copk opkeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Dec-2006] $)

    $( Equality inference for ordered pairs.  (Contributed by NM,
       16-Dec-2006.) $)
    opkeq2i $p |- << C , A >> = << C , B >> $=
      ( wceq copk opkeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Dec-2006] $)

    ${
      opkeq12i.2 $e |- C = D $.
      $( Equality inference for ordered pairs.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.)  (Contributed by NM, 16-Dec-2006.) $)
      opkeq12i $p |- << A , C >> = << B , D >> $=
        ( wceq copk opkeq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [16-Dec-2006] $)
    $}
  $}

  ${
    opkeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for ordered pairs.  (Contributed by NM,
       16-Dec-2006.) $)
    opkeq1d $p |- ( ph -> << A , C >> = << B , C >> ) $=
      ( wceq copk opkeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Dec-2006] $)

    $( Equality deduction for ordered pairs.  (Contributed by NM,
       16-Dec-2006.) $)
    opkeq2d $p |- ( ph -> << C , A >> = << C , B >> ) $=
      ( wceq copk opkeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Dec-2006] $)

    ${
      opkeq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for ordered pairs.  (The proof was shortened by
         Andrew Salmon, 29-Jun-2011.)  (Contributed by NM, 16-Dec-2006.) $)
      opkeq12d $p |- ( ph -> << A , C >> = << B , D >> ) $=
        ( wceq copk opkeq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
        $( [29-Jun-2011] $) $( [16-Dec-2006] $)
    $}
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    nfopk.1 $e |- F/_ x A $.
    nfopk.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for ordered pairs.  (Contributed by
       NM, 14-Nov-1995.) $)
    nfopk $p |- F/_ x << A , B >> $=
      ( copk csn cpr df-opk nfsn nfpr nfcxfr ) ABCFBGZBCHZHBCIAMNABDJABCDEKKL
      $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        More Boolean set operations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Complement in terms of difference.  (Contributed by SF, 2-Jan-2018.) $)
  compldif $p |- ~ A = ( _V \ A ) $=
    ( cvv cdif ccompl cin df-dif incom inv1 3eqtrri ) BACBADZEJBEJBAFBJGJHI $.

  $( The complement of the universe is the empty set.  (Contributed by SF,
     2-Jan-2018.) $)
  complV $p |- ~ _V = (/) $=
    ( cvv ccompl cdif c0 compldif df-nul eqtr4i ) ABAACDAEFG $.

  $( The complement of the empty set is the universe.  (Contributed by SF,
     2-Jan-2018.) $)
  compl0 $p |- ~ (/) = _V $=
    ( cvv ccompl c0 complV compleqi dblcompl eqtr3i ) ABZBCBAHCDEAFG $.

  ${
    $d x A $.
    $( Anti-intersection with complement.  (Contributed by SF, 2-Jan-2018.) $)
    nincompl $p |- ( A -i^i ~ A ) = _V $=
      ( vx ccompl cnin cvv wceq cv wcel eqv wn wa pm3.24 wnan vex elnin elcompl
      nanbi2i df-nan 3bitri mpbir mpgbir ) AACZDZEFBGZUCHZBBUCIUEUDAHZUFJZKJZUF
      LUEUFUDUBHZMUFUGMUHUDAUBBNZOUIUGUFUDAUJPQUFUGRSTUA $.
  $}

  $( Intersection with complement.  (Contributed by SF, 2-Jan-2018.) $)
  incompl $p |- ( A i^i ~ A ) = (/) $=
    ( ccompl cin cnin cvv c0 df-in nincompl compleqi complV 3eqtri ) AABZCALDZB
    EBFALGMEAHIJK $.

  $( Union with complement.  (Contributed by SF, 2-Jan-2018.) $)
  uncompl $p |- ( A u. ~ A ) = _V $=
    ( ccompl cun cnin cvv df-un nincompl eqtri ) AABZCIIBDEAIFIGH $.


  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Condition for subset when ` A ` is already known to be a subset.
       (Contributed by SF, 13-Jan-2015.) $)
    ssofss $p |- ( A C_ C -> ( A C_ B <-> A. x e. C ( x e. A -> x e. B ) ) ) $=
      ( wss cv wcel wi wral ccompl wa vex elcompl ssel con3d syl5bi imp pm2.21d
      wn cvv ralrimiva biantrud cun wal ralv raleqi dfss2 3bitr4ri ralunb bitri
      uncompl syl6rbbr ) BDEZAFZBGZUNCGZHZADIZURUQADJZIZKZBCEZUMUTURUMUQAUSUMUN
      USGZKUOUPUMVCUOSZVCUNDGZSUMVDUNDALMUMUOVEBDUNNOPQRUAUBVBUQADUSUCZIZVAUQAT
      IUQAUDVGVBUQAUEUQAVFTDUKUFABCUGUHUQADUSUIUJUL $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( When ` A ` and ` B ` are subsets of ` C ` , equality depends only on the
       elements of ` C ` .  (Contributed by SF, 13-Jan-2015.) $)
    ssofeq $p |- ( ( A C_ C /\ B C_ C ) ->
        ( A = B <-> A. x e. C ( x e. A <-> x e. B ) ) ) $=
      ( wss wa cv wcel wi wral wceq wb ssofss bi2anan9 eqss ralbiim 3bitr4g ) B
      DEZCDEZFBCEZCBEZFAGZBHZUBCHZIADJZUDUCIADJZFBCKUCUDLADJRTUESUAUFABCDMACBDM
      NBCOUCUDADPQ $.
      $( [13-Jan-2015] $)
  $}


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             NF Set Theory - add the Set Construction Axioms
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce the set construction axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.
    $( State the axiom of anti-intersection.  Axiom P1 of [Hailperin] p. 6.
       This axiom sets up boolean operations on sets.

       Note on this and the following axioms: this axiom, ~ ax-xp , ~ ax-cnv ,
       ~ ax-1c , ~ ax-sset , ~ ax-si , ~ ax-ins2 , ~ ax-ins3 , and
       ~ ax-typlower are from Hailperin and are designed to implement the
       Stratification Axiom of Quine.

       A well-formed formula using only propositional symbols, predicate
       symbols, and ` e. ` is "stratified" iff you can make a (metalogical)
       mapping from the variables to the natural numbers such that any formulas
       of the form ` x = y ` have the same number, and any formulas of the form
       ` x e. y ` have ` x ` as one less than ` y ` .  Quine's stratification
       axiom states that there is a set corresponding to any stratified
       formula.

       Since we cannot state stratification from within the logic, we use
       Hailperin's axioms and prove existence of stratified sets using
       Hailperin's algorithm. $)
    ax-nin $a |- E. z A. w ( w e. z <-> ( w e. x -/\ w e. y ) ) $.
  $}

  ${
    $d x y z w t $.
    $( State the axiom of cross product.  This axiom guarantees the existence
       of the (Kuratowski) cross product of ` _V ` with ` x ` .  Axiom P5 of
       [Hailperin] p. 10. $)
    ax-xp $a |- E. y A. z ( z e. y <->
           E. w E. t ( z = << w , t >> /\ t e. x ) ) $.
  $}

  ${
    $d x y z w $.
    $( State the axiom of converse.  This axiom guarantees the existence of the
       Kuratowski converse of ` x ` .  Axiom P7 of [Hailperin] p. 10. $)
    ax-cnv $a |- E. y A. z A. w ( << z , w >> e. y <-> << w , z >> e. x ) $.
  $}

  ${
    $d x y z w $.
    $( State the axiom of cardinal one.  This axiom guarantees the existence of
       the set of all singletons, which will become cardinal one later in our
       development.  Axiom P8 of [Hailperin] p. 10. $)
    ax-1c $a |- E. x A. y ( y e. x <-> E. z A. w ( w e. y <-> w = z ) ) $.
  $}

  ${
    $d x y z w $.
    $( State the axiom of the subset relationship.  This axiom guarantees the
       existence of the Kuratowski relationship representing subset.  Slight
       generalization of axiom P9 of [Hailperin] p. 10. $)
    ax-sset $a |- E. x A. y A. z ( << y , z >> e. x <->
      A. w ( w e. y -> w e. z ) ) $.
  $}

  ${
    $d x y z w $.
    $( State the axiom of the singleton image.  This axiom guarantees that
       guarantees the existence of a set that raises the "type" of another set
       when considered as a relationship.  Axiom P2 of [Hailperin] p. 10. $)
    ax-si $a |- E. y A. z A. w ( << { z } , { w } >> e. y <->
          << z , w >> e. x ) $.
  $}

  ${
    $d x y z w t $.
    $( State the insertion two axiom.  This axiom sets up a set that inserts an
       extra variable at the second place of the relationship described by
       ` x ` .  Axiom P3 of [Hailperin] p. 10. $)
    ax-ins2 $a |- E. y A. z A. w A. t (
      << { { z } } , << w , t >> >> e. y <-> << z , t >> e. x ) $.

    $( State the insertion three axiom.  This axiom sets up a set that inserts
       an extra variable at the third place of the relationship described by
       ` x ` .  Axiom P4 of [Hailperin] p. 10. $)
    ax-ins3 $a |- E. y A. z A. w A. t (
      << { { z } } , << w , t >> >> e. y <-> << z , w >> e. x ) $.
  $}

  ${
    $d x y z w $.
    $( The type lowering axiom.  This axiom eventually sets up both the
       existence of the sum set and the existence of the range of a
       relationship.  Axiom P6 of [Hailperin] p. 10. $)
    ax-typlower $a |- E. y A. z ( z e. y <-> A. w << w , { z } >> e. x ) $.
  $}

  ${
    $d x y z $.
    $( The singleton axiom.  This axiom sets up the existence of a singleton
       set.  This appears to have been an oversight on Hailperin's part, as it
       is needed to prove the properties of Kuratowski ordered pairs. $)
    ax-sn $a |- E. y A. z ( z e. y <-> z = x ) $.
  $}
$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Primitive forms for some axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d a c $.  $d B c $.
    $( Lemma for the primitive axioms.  Primitive form of equality to a
       singleton.  (Contributed by SF, 25-Mar-2015.) $)
    axprimlem1 $p |- ( a = { B } <-> A. c ( c e. a <-> c = B ) ) $=
      ( cv csn wceq wel wcel wb wal dfcleq elsn bibi2i albii bitri ) BDZAEZFCBG
      ZCDZQHZIZCJRSAFZIZCJCPQKUAUCCTUBRCALMNO $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a d $.  $d B d $.  $d B e $.  $d B f $.  $d C d $.  $d C f $.  $d d e $.
    $d d f $.
    $( Lemma for the primitive axioms.  Primitive form of equality to a
       Kuratowski ordered pair.  (Contributed by SF, 25-Mar-2015.) $)
    axprimlem2 $p |- ( a = << B , C >> <-> A. d ( d e. a <-> ( A. e ( e e. d
        <-> e = B ) \/ A. f ( f e. d <-> ( f = B \/ f = C ) ) ) ) ) $=
      ( cv wceq cpr wel wb wal wo wcel dfcleq vex elpr bibi2i albii bitri copk
      csn df-opk eqeq2i axprimlem1 orbi12i ) EGZABUAZHUGAUBZABIZIZHZFEJZCFJCGAH
      KCLZDFJZDGZAHUPBHMZKZDLZMZKZFLZUHUKUGABUCUDULUMFGZUKNZKZFLVBFUGUKOVEVAFVD
      UTUMVDVCUIHZVCUJHZMUTVCUIUJFPQVFUNVGUSAFCUEVGUOUPUJNZKZDLUSDVCUJOVIURDVHU
      QUOUPABDPQRSTUFTRSTT $.
      $( [25-Mar-2015] $)
  $}


  ${
    $d a b $.  $d a c $.  $d a t $.  $d a w $.  $d a z $.  $d b w $.  $d c t $.
    $d c w $.  $d t w $.  $d t x $.  $d t y $.  $d t z $.  $d w x $.  $d w y $.
    $d w z $.  $d x y $.  $d x z $.  $d y z $.
    $( ~ ax-xp presented without any set theory definitions.  (Contributed by
       SF, 25-Mar-2015.) $)
    axxpprim $p |- E. y A. z ( z e. y <-> E. w E. t ( A. a ( a e. z <-> ( A. b
        ( b e. a <-> b = w ) \/ A. c ( c e. a <-> ( c = w \/ c = t ) ) ) ) /\ t
        e. x ) ) $=
      ( wel cv copk wceq wa wex wb wal weq wo ax-xp axprimlem2 albii exbii mpbi
      anbi1i 2exbii bibi2i ) CBIZCJDJZEJZKLZEAIZMZENDNZOZCPZBNUGFCIGFIGDQOGPHFI
      HDQHEQROHPROFPZUKMZENDNZOZCPZBNABCDESUOUTBUNUSCUMURUGULUQDEUJUPUKUHUIGHCF
      TUDUEUFUAUBUC $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a b $.  $d a w $.  $d a y $.  $d a z $.  $d b c $.  $d b d $.  $d b w $.
    $d b z $.  $d c z $.  $d d w $.  $d d z $.  $d e f $.  $d e w $.  $d e x $.
    $d e z $.  $d f g $.  $d f h $.  $d f w $.  $d f z $.  $d g w $.  $d h w $.
    $d h z $.  $d w x $.  $d w y $.  $d w z $.  $d x y $.  $d x z $.  $d y z $.
    $( ~ ax-cnv presented without any set theory definitions.  (Contributed by
       SF, 25-Mar-2015.) $)
    axcnvprim $p |- E. y A. z A. w ( E. a ( A. b ( b e. a <-> ( A. c ( c e. b
        <-> c = z ) \/ A. d ( d e. b <-> ( d = z \/ d = w ) ) ) ) /\ a e. y )
        <-> E. e ( A. f ( f e. e <-> ( A. g ( g e. f <-> g = w ) \/ A. h ( h e.
        f <-> ( h = w \/ h = z ) ) ) ) /\ e e. x ) ) $=
      ( cv wb wal wex wel weq wo wa copk ax-cnv df-clel axprimlem2 anbi1i exbii
      wcel wceq bitri bibi12i 2albii mpbi ) CMZDMZUAZBMZUGZUNUMUAZAMZUGZNZDOCOZ
      BPJIQKJQKCRNKOLJQLCRLDRSNLOSNJOZIBQZTZIPZFEQGFQGDRNGOHFQHDRHCRSNHOSNFOZEA
      QZTZEPZNZDOCOZBPABCDUBVBVLBVAVKCDUQVFUTVJUQIMUOUHZVDTZIPVFIUOUPUCVNVEIVMV
      CVDUMUNKLIJUDUEUFUIUTEMURUHZVHTZEPVJEURUSUCVPVIEVOVGVHUNUMGHEFUDUEUFUIUJU
      KUFUL $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a b $.  $d a x $.  $d a y $.  $d a z $.  $d b c $.  $d b d $.  $d b y $.
    $d b z $.  $d c y $.  $d d y $.  $d d z $.  $d e x $.  $d e y $.  $d e z $.
    $d x y $.  $d x z $.  $d y z $.
    $( ~ ax-sset presented without any set theory definitions.  (Contributed by
       SF, 25-Mar-2015.) $)
    axssetprim $p |- E. x A. y A. z ( E. a ( A. b ( b e. a <-> ( A. c ( c e. b
        <-> c = y ) \/ A. d ( d e. b <-> ( d = y \/ d = z ) ) ) ) /\ a e. x )
        <-> A. e ( e e. y -> e e. z ) ) $=
      ( cv copk wcel wel wi wal wb wex weq wo wa exbii ax-sset axprimlem2 bitri
      wceq df-clel anbi1i bibi1i 2albii mpbi ) BIZCIZJZAIZKZDBLDCLMDNZOZCNBNZAP
      FELGFLGBQOGNHFLHBQHCQROHNROFNZEALZSZEPZUOOZCNBNZAPABCDUAUQVCAUPVBBCUNVAUO
      UNEIULUDZUSSZEPVAEULUMUEVEUTEVDURUSUJUKGHEFUBUFTUCUGUHTUI $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a b $.  $d a w $.  $d a y $.  $d a z $.  $d b c $.  $d b e $.  $d b w $.
    $d b z $.  $d c d $.  $d c z $.  $d d z $.  $d e f $.  $d e g $.  $d e w $.
    $d e z $.  $d f z $.  $d g w $.  $d h i $.  $d h w $.  $d h x $.  $d h z $.
    $d i j $.  $d i k $.  $d i w $.  $d i z $.  $d j z $.  $d k w $.  $d k z $.
    $d w x $.  $d w y $.  $d w z $.  $d x y $.  $d x z $.  $d y z $.
    $( ~ ax-si presented without any set theory definitions.  (Contributed by
       SF, 25-Mar-2015.) $)
    axsiprim $p |- E. y A. z A. w ( E. a ( A. b ( b e. a <-> ( A. c ( c e. b
        <-> A. d ( d e. c <-> d = z ) ) \/ A. e ( e e. b <-> ( A. f ( f e. e
        <-> f = z ) \/ A. g ( g e. e <-> g = w ) ) ) ) ) /\ a e. y ) <-> E. h (
        A. i ( i e. h <-> ( A. j ( j e. i <-> j = z ) \/ A. k ( k e. i <-> ( k
        = z \/ k = w ) ) ) ) /\ h e. x ) ) $=
      ( cv wb wal wex wel csn copk wcel weq wo wa ax-si wceq df-clel axprimlem2
      axprimlem1 bibi2i albii orbi12i bitri anbi1i exbii bibi12i 2albii mpbi )
      CPZUAZDPZUAZUBZBPZUCZVAVCUBZAPZUCZQZDRCRZBSMLTZNMTZONTOCUDQORZQZNRZEMTZFE
      TFCUDQFRZGETGDUDQGRZUEZQZERZUEZQZMRZLBTZUFZLSZIHTJITJCUDQJRKITKCUDKDUDUEQ
      KRUEQIRZHATZUFZHSZQZDRCRZBSABCDUGVLWOBVKWNCDVGWIVJWMVGLPVEUHZWGUFZLSWILVE
      VFUIWQWHLWPWFWGWPVMVNNPVBUHZQZNRZVREPZVBUHZXAVDUHZUEZQZERZUEZQZMRWFVBVDNE
      LMUJXHWEMXGWDVMWTVQXFWCWSVPNWRVOVNVANOUKULUMXEWBEXDWAVRXBVSXCVTVAEFUKVCEG
      UKUNULUMUNULUMUOUPUQUOVJHPVHUHZWKUFZHSWMHVHVIUIXJWLHXIWJWKVAVCJKHIUJUPUQU
      OURUSUQUT $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a b $.  $d a w $.  $d a x $.  $d a z $.  $d b c $.  $d b d $.  $d b w $.
    $d b z $.  $d c w $.  $d d e $.  $d d w $.  $d d z $.  $d e z $.  $d w x $.
    $d w y $.  $d w z $.  $d x y $.  $d x z $.  $d y z $.
    $( ~ ax-typlower presented without any set theory definitions.
       (Contributed by SF, 25-Mar-2015.) $)
    axtyplowerprim $p |- E. y A. z ( z e. y <-> A. w E. a ( A. b ( b e. a <-> (
        A. c ( c e. b <-> c = w ) \/ A. d ( d e. b <-> ( d = w \/ A. e ( e e. d
        <-> e = z ) ) ) ) ) /\ a e. x ) ) $=
      ( wel cv wal wb wex weq wo wa wceq bibi2i albii csn copk wcel ax-typlower
      df-clel axprimlem2 axprimlem1 orbi2i bitri anbi1i exbii mpbi ) CBJZDKZCKZ
      UAZUBZAKZUCZDLZMZCLZBNUMGFJZHGJHDOMHLZIGJZIDOZEIJECOMELZPZMZILZPZMZGLZFAJ
      ZQZFNZDLZMZCLZBNABCDUDVBVSBVAVRCUTVQUMUSVPDUSFKUQRZVNQZFNVPFUQURUEWAVOFVT
      VMVNVTVCVDVEVFIKUPRZPZMZILZPZMZGLVMUNUPHIFGUFWGVLGWFVKVCWEVJVDWDVIIWCVHVE
      WBVGVFUOIEUGUHSTUHSTUIUJUKUITSTUKUL $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a b $.  $d a t $.  $d a w $.  $d a y $.  $d a z $.  $d b c $.  $d b f $.
    $d b t $.  $d b w $.  $d b z $.  $d c d $.  $d c z $.  $d d e $.  $d d z $.
    $d e g $.  $d e z $.  $d f g $.  $d f h $.  $d f t $.  $d f w $.  $d f z $.
    $d g z $.  $d h i $.  $d h j $.  $d h t $.  $d h w $.  $d i w $.  $d j t $.
    $d j w $.  $d k l $.  $d k t $.  $d k x $.  $d k z $.  $d l m $.  $d l n $.
    $d l t $.  $d l z $.  $d m z $.  $d n t $.  $d n z $.  $d t w $.  $d t x $.
    $d t y $.  $d t z $.  $d w x $.  $d w y $.  $d w z $.  $d x y $.  $d x z $.
    $d y z $.
    $( ~ ax-ins2 presented without any set theory definitions.  (Contributed by
       SF, 25-Mar-2015.) $)
    axins2prim $p |- E. y A. z A. w A. t ( E. a ( A. b ( b e. a <-> ( A. c ( c
        e. b <-> A. d ( d e. c <-> A. e ( e e. d <-> e = z ) ) ) \/ A. f ( f e.
        b <-> ( A. g ( g e. f <-> A. e ( e e. g <-> e = z ) ) \/ A. h ( h e. f
        <-> ( A. i ( i e. h <-> i = w ) \/ A. j ( j e. h <-> ( j = w \/ j = t )
        ) ) ) ) ) ) ) /\ a e. y ) <-> E. k ( A. l ( l e. k <-> ( A. m ( m e. l
        <-> m = z ) \/ A. n ( n e. l <-> ( n = z \/ n = t ) ) ) ) /\ k e. x ) )
        $=
      ( wal cv csn copk wcel wb wex wel weq wo wa ax-ins2 axprimlem2 axprimlem1
      wceq df-clel bibi2i albii bitri orbi12i anbi1i exbii bibi12i 2albii mpbi
      ) CUAZUBZUBZDUAZEUAZUCZUCZBUAZUDZVEVIUCZAUAZUDZUEZETZDTCTZBUFPOUGZQPUGZRQ
      UGZFRUGFCUHZUEFTZUEZRTZUEZQTZGPUGZHGUGZFHUGWCUEFTZUEZHTZIGUGJIUGJDUHUEJTK
      IUGKDUHKEUHUIUEKTUIUEITZUIZUEZGTZUIZUEZPTZOBUGZUJZOUFZSLUGMSUGMCUHUEMTNSU
      GNCUHNEUHUIUENTUIUESTZLAUGZUJZLUFZUEZETZDTCTZBUFABCDEUKVSXJBVRXICDVQXHEVM
      XCVPXGVMOUAVKUNZXAUJZOUFXCOVKVLUOXLXBOXKWTXAXKVTWAQUAVGUNZUEZQTZWIGUAZVGU
      NZXPVJUNZUIZUEZGTZUIZUEZPTWTVGVJQGOPULYCWSPYBWRVTXOWHYAWQXNWGQXMWFWAXMWBR
      UAVFUNZUEZRTWFVFQRUMYEWERYDWDWBVERFUMUPUQURUPUQXTWPGXSWOWIXQWMXRWNXQWJHUA
      VFUNZUEZHTWMVFGHUMYGWLHYFWKWJVEHFUMUPUQURVHVIJKGIULUSUPUQUSUPUQURUTVAURVP
      LUAVNUNZXEUJZLUFXGLVNVOUOYIXFLYHXDXEVEVIMNLSULUTVAURVBUQVCVAVD $.
      $( [25-Mar-2015] $)
  $}

  ${
    $d a b $.  $d a t $.  $d a w $.  $d a y $.  $d a z $.  $d b c $.  $d b f $.
    $d b t $.  $d b w $.  $d b z $.  $d c d $.  $d c z $.  $d d e $.  $d d z $.
    $d e g $.  $d e z $.  $d f g $.  $d f h $.  $d f t $.  $d f w $.  $d f z $.
    $d g z $.  $d h i $.  $d h j $.  $d h t $.  $d h w $.  $d i w $.  $d j t $.
    $d j w $.  $d k l $.  $d k w $.  $d k x $.  $d k z $.  $d l m $.  $d l n $.
    $d l w $.  $d l z $.  $d m z $.  $d n w $.  $d n z $.  $d t w $.  $d t x $.
    $d t y $.  $d t z $.  $d w x $.  $d w y $.  $d w z $.  $d x y $.  $d x z $.
    $d y z $.
    $( ~ ax-ins3 presented without any set theory definitions.  (Contributed by
       SF, 25-Mar-2015.) $)
    axins3prim $p |- E. y A. z A. w A. t ( E. a ( A. b ( b e. a <-> ( A. c ( c
        e. b <-> A. d ( d e. c <-> A. e ( e e. d <-> e = z ) ) ) \/ A. f ( f e.
        b <-> ( A. g ( g e. f <-> A. e ( e e. g <-> e = z ) ) \/ A. h ( h e. f
        <-> ( A. i ( i e. h <-> i = w ) \/ A. j ( j e. h <-> ( j = w \/ j = t )
        ) ) ) ) ) ) ) /\ a e. y ) <-> E. k ( A. l ( l e. k <-> ( A. m ( m e. l
        <-> m = z ) \/ A. n ( n e. l <-> ( n = z \/ n = w ) ) ) ) /\ k e. x ) )
        $=
      ( wal cv csn copk wcel wb wex wel weq wo wa ax-ins3 axprimlem2 axprimlem1
      wceq df-clel bibi2i albii bitri orbi12i anbi1i exbii bibi12i 2albii mpbi
      ) CUAZUBZUBZDUAZEUAZUCZUCZBUAZUDZVEVHUCZAUAZUDZUEZETZDTCTZBUFPOUGZQPUGZRQ
      UGZFRUGFCUHZUEFTZUEZRTZUEZQTZGPUGZHGUGZFHUGWCUEFTZUEZHTZIGUGJIUGJDUHUEJTK
      IUGKDUHKEUHUIUEKTUIUEITZUIZUEZGTZUIZUEZPTZOBUGZUJZOUFZSLUGMSUGMCUHUEMTNSU
      GNCUHNDUHUIUENTUIUESTZLAUGZUJZLUFZUEZETZDTCTZBUFABCDEUKVSXJBVRXICDVQXHEVM
      XCVPXGVMOUAVKUNZXAUJZOUFXCOVKVLUOXLXBOXKWTXAXKVTWAQUAVGUNZUEZQTZWIGUAZVGU
      NZXPVJUNZUIZUEZGTZUIZUEZPTWTVGVJQGOPULYCWSPYBWRVTXOWHYAWQXNWGQXMWFWAXMWBR
      UAVFUNZUEZRTWFVFQRUMYEWERYDWDWBVERFUMUPUQURUPUQXTWPGXSWOWIXQWMXRWNXQWJHUA
      VFUNZUEZHTWMVFGHUMYGWLHYFWKWJVEHFUMUPUQURVHVIJKGIULUSUPUQUSUPUQURUTVAURVP
      LUAVNUNZXEUJZLUFXGLVNVOUOYIXFLYHXDXEVEVHMNLSULUTVAURVBUQVCVAVD $.
      $( [25-Mar-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Initial existence theorems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d A x y z w $.  $d B x y z w $.
    $( The anti-intersection of two sets is a set.  (Contributed by SF,
       12-Jan-2015.) $)
    ninexg $p |- ( ( A e. V /\ B e. W ) -> ( A -i^i B ) e. _V ) $=
      ( vx vy vw vz cv cnin cvv wcel wceq nineq1 eleq1d wel wb wal wex bitri
      nineq2 wnan ax-nin isset dfcleq elnin bibi2i albii exbii mpbir vtocl2g
      vex ) EIZFIZJZKLZAUNJZKLABJZKLEFABCDUMAMUOUQKUMAUNNOUNBMUQURKUNBAUAOUPGHP
      ZGEPGFPUBZQZGRZHSZEFHGUCUPHIZUOMZHSVCHUOUDVEVBHVEUSGIZUOLZQZGRVBGVDUOUEVH
      VAGVGUTUSVFUMUNGULUFUGUHTUITUJUK $.
      $( [12-Jan-2015] $)
  $}

  ${
    ninex.1 $e |- A e. _V $.
    ninex.2 $e |- B e. _V $.
    $( The anti-intersection of two sets is a set.  (Contributed by SF,
       12-Jan-2015.) $)
    ninex $p |- ( A -i^i B ) e. _V $=
      ( cvv wcel cnin ninexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [12-Jan-2015] $)
  $}

  $( The complement of a set is a set.  (Contributed by SF, 12-Jan-2015.) $)
  complexg $p |- ( A e. V -> ~ A e. _V ) $=
    ( wcel ccompl cnin cvv df-compl ninexg anidms syl5eqel ) ABCZADAAEZFAGKLFCA
    ABBHIJ $.
    $( [12-Jan-2015] $)

  $( The intersection of two sets is a set.  (Contributed by SF,
     12-Jan-2015.) $)
  inexg $p |- ( ( A e. V /\ B e. W ) -> ( A i^i B ) e. _V ) $=
    ( wcel wa cin cnin ccompl cvv df-in ninexg complexg syl syl5eqel ) ACEBDEFZ
    ABGABHZIZJABKPQJERJEABCDLQJMNO $.
    $( [12-Jan-2015] $)

  $( The union of two sets is a set.  (Contributed by SF, 12-Jan-2015.) $)
  unexg $p |- ( ( A e. V /\ B e. W ) -> ( A u. B ) e. _V ) $=
    ( wcel wa cun ccompl cnin cvv df-un complexg ninexg syl2an syl5eqel ) ACEZB
    DEZFABGAHZBHZIZJABKPRJESJETJEQACLBDLRSJJMNO $.
    $( [12-Jan-2015] $)

  $( The difference of two sets is a set.  (Contributed by SF, 12-Jan-2015.) $)
  difexg $p |- ( ( A e. V /\ B e. W ) -> ( A \ B ) e. _V ) $=
    ( wcel wa cdif ccompl cin cvv df-dif complexg inexg sylan2 syl5eqel ) ACEZB
    DEZFABGABHZIZJABKQPRJESJEBDLARCJMNO $.
    $( [12-Jan-2015] $)

  $( The symmetric difference of two sets is a set.  (Contributed by SF,
     12-Jan-2015.) $)
  symdifexg $p |- ( ( A e. V /\ B e. W ) -> ( A (+) B ) e. _V ) $=
    ( wcel csymdif cdif cun cvv df-symdif difexg ancoms unexg syl2anc syl5eqel
    wa ) ACEZBDEZPZABFABGZBAGZHZIABJSTIEUAIEZUBIEABCDKRQUCBADCKLTUAIIMNO $.
    $( [12-Jan-2015] $)

  ${
    boolex.1 $e |- A e. _V $.
    $( The complement of a set is a set.  (Contributed by SF, 12-Jan-2015.) $)
    complex $p |- ~ A e. _V $=
      ( cvv wcel ccompl complexg ax-mp ) ACDAECDBACFG $.
      $( [12-Jan-2015] $)

    boolex.2 $e |- B e. _V $.
    $( The intersection of two sets is a set.  (Contributed by SF,
       12-Jan-2015.) $)
    inex $p |- ( A i^i B ) e. _V $=
      ( cvv wcel cin inexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [12-Jan-2015] $)

    $( The union of two sets is a set.  (Contributed by SF, 12-Jan-2015.) $)
    unex $p |- ( A u. B ) e. _V $=
      ( cvv wcel cun unexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [12-Jan-2015] $)

    $( The difference of two sets is a set.  (Contributed by SF,
       12-Jan-2015.) $)
    difex $p |- ( A \ B ) e. _V $=
      ( cvv wcel cdif difexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [12-Jan-2015] $)

    $( The symmetric difference of two sets is a set.  (Contributed by SF,
       12-Jan-2015.) $)
    symdifex $p |- ( A (+) B ) e. _V $=
      ( cvv wcel csymdif symdifexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [12-Jan-2015] $)
  $}

  $( The universal class exists.  This marks a major departure from ZFC set
     theory, where ` _V ` is a proper class.  (Contributed by SF,
     12-Jan-2015.) $)
  vvex $p |- _V e. _V $=
    ( vx cv ccompl cun cvv uncompl vex complex unex eqeltrri ) ABZKCZDEEKFKLAGZ
    KMHIJ $.
    $( [12-Jan-2015] $)

  $( The empty class exists.  (Contributed by SF, 12-Jan-2015.) $)
  0ex $p |- (/) e. _V $=
    ( cvv ccompl c0 complV vvex complex eqeltrri ) ABCADAEFG $.
    $( [12-Jan-2015] $)

  ${
    $d A x y z $.
    $( A singleton always exists.  (Contributed by SF, 12-Jan-2015.) $)
    snex $p |- { A } e. _V $=
     ( vx vz vy cvv wcel csn cv wceq sneq eleq1d wel weq wb wal wex axprimlem1
      ax-sn isset c0 exbii bitri mpbir vtoclg snprc biimpi 0ex syl6eqel pm2.61i
      wn ) AEFZAGZEFZBHZGZEFZUMBAEUNAIUOULEUNAJKUPCDLCBMNCOZDPZBDCRUPDHUOIZDPUR
      DUOSUSUQDUNDCQUAUBUCUDUKUJZULTEUTULTIAUEUFUGUHUI $.
  $}

  $( An unordered pair exists.  (Contributed by SF, 12-Jan-2015.) $)
  prex $p |- { A , B } e. _V $=
    ( cpr csn cun cvv df-pr snex unex eqeltri ) ABCADZBDZEFABGKLAHBHIJ $.
    $( [12-Jan-2015] $)

  $( A Kuratowski ordered pair exists.  (Contributed by SF, 12-Jan-2015.) $)
  opkex $p |- << A , B >> e. _V $=
    ( copk csn cpr cvv df-opk prex eqeltri ) ABCADZABEZEFABGJKHI $.
    $( [12-Jan-2015] $)


  $( A singleton of a set belongs to a power class of a set containing it.
     (Contributed by SF, 1-Feb-2015.) $)
  snelpwg $p |- ( A e. V -> ( { A } e. ~P B <-> A e. B ) ) $=
    ( wcel csn wss cpw snssg snex elpw syl6rbbr ) ACDABDAEZBFLBGDABCHLBAIJK $.
    $( [1-Feb-2015] $)

  ${
    snelpw.1 $e |- A e. _V $.
    $( A singleton of a set belongs to a power class of a set containing it.
       (Contributed by SF, 1-Feb-2015.) $)
    snelpw $p |- ( { A } e. ~P B <-> A e. B ) $=
      ( cvv wcel csn cpw wb snelpwg ax-mp ) ADEAFBGEABEHCABDIJ $.
      $( [1-Feb-2015] $)
  $}

  ${
    $( A singleton of a set belongs to the power class of a class containing
       the set.  (Contributed by Alan Sare, 25-Aug-2011.) $)
    snelpwi $p |- ( A e. B -> { A } e. ~P B ) $=
      ( wcel csn wss cpw snssi snex elpw sylibr ) ABCADZBEKBFCABGKBAHIJ $.
      $( [25-Aug-2011] $)
  $}

  ${
    $d A x y $.
    $( A class equals the union of its power class.  Exercise 6(a) of
       [Enderton] p. 38.  (The proof was shortened by Alan Sare, 28-Dec-2008.)
       (Contributed by SF, 14-Oct-1996.)  (Revised by SF, 29-Dec-2008.) $)
    unipw $p |- U. ~P A = A $=
      ( vx vy cpw cuni cv wcel wa wex eluni wss wi vex elpw ssel impcom exlimiv
      sylbi csn snid snelpwi elunii sylancr impbii eqriv ) BADZEZABFZUGGZUHAGZU
      IUHCFZGZUKUFGZHZCIUJCUHUFJUNUJCUMULUJUMUKAKULUJLUKACMNUKAUHORPQRUJUHUHSZG
      UOUFGUIUHBMTUHAUAUHUOUFUBUCUDUE $.
      $( [29-Dec-2008] $) $( [14-Oct-1996] $)
  $}


  ${
    $d A x $.  $d B x $.
    $( Classes are subclasses if and only if their power classes are
       subclasses.  Exercise 18 of [TakeutiZaring] p. 18.  (Contributed by SF,
       13-Oct-1996.) $)
    sspwb $p |- ( A C_ B <-> ~P A C_ ~P B ) $=
      ( vx wss cpw wcel sstr2 com12 vex elpw 3imtr4g ssrdv csn ssel snex bitr4i
      cv snss 3imtr3g impbii ) ABDZAEZBEZDZUACUBUCUACQZADZUEBDZUEUBFUEUCFUFUAUG
      UEABGHUEACIZJUEBUHJKLUDCABUDUEMZUBFZUIUCFZUEAFZUEBFZUBUCUINUJUIADULUIAUEO
      ZJUEAUHRPUKUIBDUMUIBUNJUEBUHRPSLT $.
      $( [13-Oct-1996] $)
  $}


  ${
    $d A a $.  $d a b $.  $d A b $.  $d A x $.  $d a z $.  $d A z $.  $d b z $.
    $d X a $.  $d X b $.  $d X x $.  $d x z $.  $d X z $.

    $( Compute the power class of an adjoinment.  (Contributed by SF,
       30-Jan-2015.) $)
    pwadjoin $p |- ~P ( A u. { X } ) =
       ( ~P A u. { a | E. b e. ~P A a = ( b u. { X } ) } ) $=
      ( vz vx cun cpw cv wceq wrex wss wo wcel wn wa bitri vex elpw com12 uncom
      csn cab cdif sseq2i ssundif biimpi adantr snex difex sylibr eqcomd adantl
      difsnid uneq1 eqeq2d rspcev syl2anc ex con3d wel wi ssel elun elsn orbi2i
      ax-1 eleq1 anbi1d pm2.21 impcom syl6bi jaoi sylbi exp3a syld imp3a orcomd
      ssrdv orrd ssun3 unss1 sseq1 syl5ibrcom rexlimiv impbii weq eqeq1 rexbidv
      elab orbi12i 3bitr4i eqriv ) EABUBZGZHZAHZCIZDIZWNGZJZDWQKZCUCZGZEIZWOLZX
      EALZXEWTJZDWQKZMZXEWPNXEXDNZXFXJXFXIXGXFXIXGXFXIOBXENZOZXGXFXLXIXFXLXIXFX
      LPZXEWNUDZWQNZXEXOWNGZJZXIXNXOALZXPXFXSXLXFXSXFXEWNAGZLXSWOXTXEAWNUAUEXEW
      NAUFQUGUHXOAXEWNERZBUIUJSUKXLXRXFXLXQXEXEBUNULUMXHXRDXOWQWSXOJWTXQXEWSXOW
      NUOUPUQURUSUTXFXMXGXFXMPZFXEAFEVAZYBFIZANZYCXFXMYEYCXFYDWONZXMYEVBZXFYCYF
      XEWOYDVCTYFYCYGYFYCXMYEYFYEYDBJZMZYCXMPZYEVBZYFYEYDWNNZMYIYDAWNVDYLYHYEFB
      VEVFQYEYKYHYEYJVGYHYJXLXMPYEYHYCXLXMYDBXEVHVIXMXLYEXLYEVJVKVLVMVNVOTVPVQT
      VSUSVPVTVRXGXFXIXEAWNWAXHXFDWQWSWQNZXFXHWTWOLZYMWSALYNWSADRSWSAWNWBVNXEWT
      WOWCWDWEVMWFXEWOYASXKXEWQNZXEXCNZMXJXEWQXCVDYOXGYPXIXEAYASXBXICXEYACEWGXA
      XHDWQWRXEWTWHWIWJWKQWLWM $.
      $( [30-Jan-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Singletons and pairs (continued)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A singleton is a subset of an unordered pair.  (Contributed by ?who?,
     12-Jan-2015.) $)
  snprss1 $p |- { A } C_ { A , B } $=
    ( csn cun cpr ssun1 df-pr sseqtr4i ) ACZIBCZDABEIJFABGH $.
    $( [12-Jan-2015] $)

  $( A singleton is a subset of an unordered pair.  (Contributed by ?who?,
     12-Jan-2015.) $)
  snprss2 $p |- { A } C_ { B , A } $=
    ( csn cpr snprss1 prcom sseqtri ) ACABDBADABEABFG $.
    $( [12-Jan-2015] $)


  $( An unordered pair of a proper class.  (Contributed by ?who?,
     12-Jan-2015.) $)
  prprc2 $p |- ( -. A e. _V -> { B , A } = { B } ) $=
    ( cvv wcel wn cpr csn cun df-pr wceq snprc biimpi uneq2d un0 syl6eq syl5eq
    c0 ) ACDEZBAFBGZAGZHZSBAIRUASQHSRTQSRTQJAKLMSNOP $.
    $( [12-Jan-2015] $)

  $( An unordered pair of a proper class.  (Contributed by ?who?,
     12-Jan-2015.) $)
  prprc1 $p |- ( -. A e. _V -> { A , B } = { B } ) $=
    ( cvv wcel wn cpr csn prcom prprc2 syl5eq ) ACDEABFBAFBGABHABIJ $.
    $( [12-Jan-2015] $)


  ${
    preqr1.1 $e |- A e. _V $.
    preqr1.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same second element, the first elements are equal.  (Contributed by
       ?who?, 18-Oct-1995.) $)
    preqr1 $p |- ( { A , C } = { B , C } -> A = B ) $=
      ( cpr wceq wcel wo prid1 eleq2 mpbii elpr sylib mpbiri eqcom eqeq2 oplem1
      ) ACFZBCFZGZABGZACGZBAGZBCGZUAATHZUBUCIUAASHUFACDJSTAKLABCDMNUABSHZUDUEIU
      AUGBTHBCEJSTBKOBACEMNABPACBQR $.
      $( [18-Oct-1995] $)
  $}

  ${
    preqr2.1 $e |- A e. _V $.
    preqr2.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same first element, the second elements are equal.  (Contributed by
       ?who?, 5-Aug-1993.) $)
    preqr2 $p |- ( { C , A } = { C , B } -> A = B ) $=
      ( cpr wceq prcom eqeq12i preqr1 sylbi ) CAFZCBFZGACFZBCFZGABGLNMOCAHCBHIA
      BCDEJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same first element, the second elements are equal.  (Contributed by
       ?who?, 12-Jan-2015.) $)
    preqr2g $p |- ( ( A e. V /\ B e. W ) ->
           ( { C , A } = { C , B } -> A = B ) ) $=
      ( vx vy cv cpr wceq weq wi preq2 eqeq1d eqeq1 imbi12d eqeq2d eqeq2 preqr2
      vex vtocl2g ) CFHZIZCGHZIZJZFGKZLCAIZUEJZAUDJZLUHCBIZJZABJZLFGABDEUBAJZUF
      UIUGUJUNUCUHUEUBACMNUBAUDOPUDBJZUIULUJUMUOUEUKUHUDBCMQUDBARPUBUDCFTGTSUA
      $.
      $( [12-Jan-2015] $)
  $}


  ${
    preq12b.1 $e |- A e. _V $.
    preq12b.2 $e |- B e. _V $.
    preq12b.3 $e |- C e. _V $.
    preq12b.4 $e |- D e. _V $.
    $( Equality relationship for two unordered pairs.  (Contributed by ?who?,
       17-Oct-1996.) $)
    preq12b $p |- ( { A , B } = { C , D } <->
                   ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) $=
      ( cpr wceq wa wo wcel preq1 eqeq1d preqr2 syl6bi com12 ancld prcom eqeq2i
      prid1 eleq2 mpbii elpr sylib wi sylbi orim12d preq12 syl6eq sylan9eq jaoi
      mpd impbii ) ABIZCDIZJZACJZBDJZKZADJZBCJZKZLZURUSVBLZVEURAUQMZVFURAUPMVGA
      BEUBUPUQAUCUDACDEUEUFURUSVAVBVDURUSUTUSURUTUSURCBIZUQJUTUSUPVHUQACBNOBDCF
      HPQRSURVBVCURUPDCIZJZVBVCUGUQVIUPCDTUAVBVJVCVBVJDBIZVIJVCVBUPVKVIADBNZOBC
      DFGPQRUHSUIUNVAURVDABCDUJVBVCUPBDIZUQVBUPVKVMVLDBTUKBCDNULUMUO $.
      $( [17-Oct-1996] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C x y z w $.  $d D x y z w $.
    $d V x y z w $.  $d W x y z w $.  $d X x y z w $.  $d Y x y z w $.
    $( Closed form of ~ preq12b .  (Contributed by Scott Fenton,
       28-Mar-2014.) $)
    preq12bg $p |- ( ( ( A e. V /\ B e. W ) /\ ( C e. X /\ D e. Y ) ) ->
       ( { A , B } = { C , D } <->
         ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ) $=
      ( vx vy vz vw wcel wa cpr wceq wo wb wi cv weq preq1 eqeq1d eqeq1 orbi12d
      anbi1d bibi12d imbi2d preq2 anbi2d eqeq2 w3a vex preq12b vtoclbg vtocl3ga
      eqeq2d a1i 3expa impr ) AEMZBFMZNCGMZDHMZABOZCDOZPZACPZBDPZNZADPZBCPZNZQZ
      RZVAVBVCVDVOSZVDITZJTZOZKTZDOZPZIKUAZVRDPZNZVQDPZJKUAZNZQZRZSZVDAVROZWAPZ
      AVTPZWDNZVKWGNZQZRZSVDVEWAPZWNVINZVKBVTPZNZQZRZSVPIJKABCEFGVQAPZWJWRVDXEW
      BWMWIWQXEVSWLWAVQAVRUBUCXEWEWOWHWPXEWCWNWDVQAVTUDUFXEWFVKWGVQADUDUFUEUGUH
      VRBPZWRXDVDXFWMWSWQXCXFWLVEWAVRBAUIUCXFWOWTWPXBXFWDVIWNVRBDUDUJXFWGXAVKVR
      BVTUDUJUEUGUHVTCPZXDVOVDXGWSVGXCVNXGWAVFVEVTCDUBUQXGWTVJXBVMXGWNVHVIVTCAU
      KUFXGXAVLVKVTCBUKUJUEUGUHWKVQEMVRFMVTGMULVSVTLTZOZPWCJLUAZNZILUAZWGNZQWBW
      ILDHXHDPZXIWAVSXHDVTUIUQXNXKWEXMWHXNXJWDWCXHDVRUKUJXNXLWFWGXHDVQUKUFUEVQV
      RVTXHIUMJUMKUMLUMUNUOURUPUSUT $.
      $( [19-Apr-2014] $) $( [28-Mar-2014] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Kuratowski ordered pairs (continued)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Membership in a Kuratowski ordered pair.  (Contributed by SF,
     12-Jan-2015.) $)
  elopk $p |- ( A e. << B , C >> <-> ( A = { B } \/ A = { B , C } ) ) $=
    ( copk wcel csn cpr wceq wo df-opk eleq2i snex prex elpr2 bitri ) ABCDZEABF
    ZBCGZGZEAQHARHIPSABCJKAQRBLBCMNO $.
    $( [12-Jan-2015] $)

  $( Equality of the first member of a Kuratowski ordered pair, which holds
     regardless of the sethood of the second members.  (Contributed by SF,
     12-Jan-2015.) $)
  opkth1g $p |- ( ( A e. V /\ << A , B >> = << C , D >> ) -> A = C ) $=
    ( wcel copk wceq wa csn cpr wo eqid orci elopk mpbir eleq2 snidg syl5ibrcom
    biimprd prid1g jaod syl5bi sylan9r mpi wb elsncg adantr mpbid ) AEFZABGZCDGZ
    HZIZACJZFZACHZUNUOULFZUPURUOUOHZUOCDKHZLUSUTUOMNUOCDOPUMURUOUKFZUJUPUMVAURU
    KULUOQTVAUOAJZHZUOABKZHZLUJUPUOABOUJVCUPVEUJUPVCAVBFAERUOVBAQSUJUPVEAVDFABE
    UAUOVDAQSUBUCUDUEUJUPUQUFUMACEUGUHUI $.
    $( [12-Jan-2015] $)

  $( Two Kuratowski ordered pairs are equal iff their components are equal.
     (Contributed by SF, 12-Jan-2015.) $)
  opkthg $p |- ( ( A e. V /\ B e. W /\ D e. T ) ->
    ( << A , B >> = << C , D >> <-> ( A = C /\ B = D ) ) ) $=
    ( wcel w3a copk wceq wa simp1 opkth1g sylan wi cpr df-opk prex syl5 jca csn
    simp2 simp3 opkeq1 eqeq1d biimpd impcom eqeq12i preqr2 sylbi exp3a imp jcai
    preqr2g ex opkeq12 impbid1 ) AFHZBGHZDEHZIZABJZCDJZKZACKZBDKZLZVBVEVHVBVELV
    FVGVBUSVEVFUSUTVAMABCDFNOVBUTVALZVEVFVGPZVBUTVAUSUTVAUCUSUTVAUDUAVIVEVJVIVE
    VFVGVEVFLCBJZVDKZVIVGVFVEVLVFVEVLVFVCVKVDACBUEUFUGUHVLCBQZCDQZKZVIVGVLCUBZV
    MQZVPVNQZKVOVKVQVDVRCBRCDRUIVMVNVPCBSCDSUJUKBDCGEUOTTULUMOUNUPABCDUQUR $.
    $( [12-Jan-2015] $)

  ${
    opkth.1 $e |- A e. _V $.
    opkth.2 $e |- B e. _V $.
    opkth.3 $e |- D e. _V $.
    $( Two Kuratowski ordered pairs are equal iff their components are equal.
       (Contributed by SF, 12-Jan-2015.) $)
    opkth $p |- ( << A , B >> = << C , D >> <-> ( A = C /\ B = D ) ) $=
      ( cvv wcel copk wceq wa wb opkthg mp3an ) AHIBHIDHIABJCDJKACKBDKLMEFGABCD
      HHHNO $.
      $( [12-Jan-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Cardinal one, unit unions, and unit power classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c 1c $. $( Cardinal one $)
  $c ~P1 $.  $( Unit power class: calligraphic P with subscript 1. $)
  $c U.1 $. $( Unitary union. $)

  $( Extend class notation to include the unit union of a class (read:  'unit
     union ` A ` ') $)
  cuni1 $a class U.1 A $.

  $( Extend the definition of a class to include cardinal one. $)
  c1c $a class 1c $.

  $( Extend class notation to include unit power class. $)
  cpw1 $a class ~P1 A $.

  ${
    $d x y $.
    $( Define cardinal one.  This is the set of all singletons, or the set of
       all sets of size one. $)
    df-1c $a |- 1c = { x | E. y x = { y } } $.
  $}

  $( Define unit power class.  Definition from [Rosser] p. 252. $)
  df-pw1 $a |- ~P1 A = ( ~P A i^i 1c ) $.


  $( Define the unit union of a class.  This operation is used implicitly in
     both Holmes and Hailperin to complete their stratification algorithms,
     although neither provide explicit notation for it.  See ~ eluni1 for
     membership condition. $)
  df-uni1 $a |- U.1 A = U. ( A i^i 1c ) $.


  ${
    $d A x y $.
    $( Membership in cardinal one.  (Contributed by SF, 12-Jan-2015.) $)
    el1c $p |- ( A e. 1c <-> E. x A = { x } ) $=
      ( vy c1c wcel cvv cv csn wceq elex snex eleq1 mpbiri exlimiv eqeq1 exbidv
      wex df-1c elab2g pm5.21nii ) BDEBFEZBAGZHZIZAQZBDJUDUAAUDUAUCFEUBKBUCFLMN
      CGZUCIZAQUECBDFUFBIUGUDAUFBUCOPCARST $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x $.
    snel1c.1 $e |- A e. _V $.
    $( A singleton is an element of cardinal one.  (Contributed by SF,
       13-Jan-2015.) $)
    snel1c $p |- { A } e. 1c $=
      ( vx csn c1c wcel cv wceq wex eqid sneq eqeq2d spcev ax-mp el1c mpbir )
      ADZEFQCGZDZHZCIZQQHZUAQJTUBCABRAHSQQRAKLMNCQOP $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( A singleton is an element of cardinal one.  (Contributed by SF,
       30-Jan-2015.) $)
    snel1cg $p |- ( A e. V -> { A } e. 1c ) $=
      ( vx cv csn c1c wcel wceq sneq eleq1d vex snel1c vtoclg ) CDZEZFGAEZFGCAB
      NAHOPFNAIJNCKLM $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d x y z w $.
    $( Cardinal one is a set.  (Contributed by SF, 12-Jan-2015.) $)
    1cex $p |- 1c e. _V $=
      ( vy vx vw vz c1c cvv wcel wel weq wb wal wex ax-1c cv isset bitri bibi2i
      wceq albii exbii csn cab df-1c eqeq2i abeq2 dfcleq df-sn abeq2i mpbir ) E
      FGZABHZCAHZCDIZJZCKZDLZJZAKZBLZBADCMUJBNZERZBLUSBEOVAURBVAUKANZDNZUAZRZDL
      ZJZAKZURVAUTVFAUBZRVHEVIUTADUCUDVFAUTUEPVGUQAVFUPUKVEUODVEULCNVDGZJZCKUOC
      VBVDUFVKUNCVJUMULUMCVDCVCUGUHQSPTQSPTPUI $.
      $( [12-Jan-2015] $)
  $}

  $( Equality theorem for unit power class.  (Contributed by SF,
     12-Jan-2015.) $)
  pw1eq $p |- ( A = B -> ~P1 A = ~P1 B ) $=
    ( wceq cpw c1c cin cpw1 pweq ineq1d df-pw1 3eqtr4g ) ABCZADZEFBDZEFAGBGLMNE
    ABHIAJBJK $.
    $( [12-Jan-2015] $)

  ${
    $d A x y z w $.  $d B x y z w $.
    $( Membership in a unit power class.  (Contributed by SF, 13-Jan-2015.) $)
    elpw1 $p |- ( A e. ~P1 B <-> E. x e. B A = { x } ) $=
      ( cpw1 wcel cpw c1c wa cv csn wceq wrex cin df-pw1 eleq2i elin bitri el1c
      wex bitr4i anbi2i 19.42v eleq1 wss snex elpw vex snss syl6bb exbii df-rex
      pm5.32ri ) BCDZEZBCFZEZBGEZHZBAIZJZKZACLZUNBUOGMZEURUMVCBCNOBUOGPQURUPVAH
      ZASZVBURUPVAASZHVEUQVFUPABRUAUPVAAUBTVEUSCEZVAHZASVBVDVHAVAUPVGVAUPUTUOEZ
      VGBUTUOUCVIUTCUDVGUTCUSUEUFUSCAUGUHTUIULUJVAACUKTQQ $.
      $( [13-Jan-2015] $)

    $( Membership in a unit power class applied twice.  (Contributed by SF,
       15-Jan-2015.) $)
    elpw12 $p |- ( A e. ~P1 ~P1 B <-> E. x e. B A = { { x } } ) $=
      ( vy cpw1 wcel cv csn wceq wrex wa wex elpw1 anbi1i r19.41v bitr4i df-rex
      exbii rexcom4 3bitr4i snex sneq eqeq2d ceqsexv rexbii 3bitri ) BCEZEFBDGZ
      HZIZDUGJZUHAGZHZIZUJKZDLZACJZBUMHZIZACJDBUGMUHUGFZUJKZDLUOACJZDLUKUQVAVBD
      VAUNACJZUJKVBUTVCUJAUHCMNUNUJACOPRUJDUGQUOADCSTUPUSACUJUSDUMULUAUNUIURBUH
      UMUBUCUDUEUF $.
      $( [15-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Membership of a singleton in a unit power class.  (Contributed by SF,
       13-Jan-2015.) $)
    snelpw1 $p |- ( { A } e. ~P1 B <-> A e. B ) $=
      ( vx csn cv wceq wrex cpw1 wcel eqcom vex sneqb bitri rexbii elpw1 risset
      3bitr4i ) ADZCEZDZFZCBGSAFZCBGRBHIABIUAUBCBUATRFUBRTJSACKLMNCRBOCABPQ $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y $.
    $( Membership in ` ~P1 1c ` (Contributed by SF, 13-Jan-2015.) $)
    elpw11c $p |- ( A e. ~P1 1c <-> E. x A = { { x } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wrex wex elpw1 df-rex anbi1i 19.41v bitr4i
      wa el1c exbii bitri excom snex sneq eqeq2d ceqsexv 3bitri ) BDEFBCGZHZIZC
      DJZUGAGZHZIZUIQZAKZCKZBULHZIZAKZCBDLUJUGDFZUIQZCKUPUICDMVAUOCVAUMAKZUIQUO
      UTVBUIAUGRNUMUIAOPSTUPUNCKZAKUSUNCAUAVCURAUIURCULUKUBUMUHUQBUGULUCUDUESTU
      F $.
      $( [13-Jan-2015] $)

    $( Membership in ` ~P1 ~P1 1c ` (Contributed by SF, 13-Jan-2015.) $)
    elpw121c $p |- ( A e. ~P1 ~P1 1c <-> E. x A = { { { x } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wrex elpw1 wa df-rex elpw11c anbi1i 19.41v
      wex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEZEFBCGZHZIZCUF
      JZBAGHZHZHZIZAQZCBUFKUJUGULIZUILZAQZCQZUOUJUGUFFZUILZCQUSUICUFMVAURCVAUPA
      QZUILURUTVBUIAUGNOUPUIAPRSTUSUQCQZAQUOUQCAUAVCUNAUIUNCULUKUBUPUHUMBUGULUC
      UDUESTTT $.
      $( [13-Jan-2015] $)


    $( Membership in ` ~P1 ~P1 ~P1 1c ` (Contributed by SF, 14-Jan-2015.) $)
    elpw131c $p |- ( A e. ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { x } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw121c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEZEFBCGZHZIZC
      UFQZBAGHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSUICUFMVAURCVA
      UPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUKUBUPUHUMBUGU
      LUCUDUESTTT $.
      $( [14-Jan-2015] $)


    $( Membership in ` ~P1 ~P1 ~P1 ~P1 1c ` (Contributed by SF,
       14-Jan-2015.) $)
    elpw141c $p |- ( A e. ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { x } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw131c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEZEFBCGZHZIZ
      CUFQZBAGHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSUICUFMVAURC
      VAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUKUBUPUHUMBU
      GULUCUDUESTTT $.
      $( [14-Jan-2015] $)

    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 1c ` (Contributed by SF,
       14-Jan-2015.) $)
    elpw151c $p |- ( A e. ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { x } } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw141c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEZEFBCGZHZI
      ZCUFQZBAGHHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSUICUFMVAU
      RCVAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUKUBUPUHUM
      BUGULUCUDUESTTT $.
      $( [14-Jan-2015] $)

    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c ` (Contributed by SF,
       14-Jan-2015.) $)
    elpw161c $p |- ( A e. ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { { x } } } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw151c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEEZEFBCGZHZ
      IZCUFQZBAGHHHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSUICUFMV
      AURCVAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUKUBUPUH
      UMBUGULUCUDUESTTT $.
      $( [14-Jan-2015] $)


    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c ` (Contributed by SF,
       15-Jan-2015.) $)
    elpw171c $p |- ( A e. ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { { { x } } } } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw161c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEEEZEFBCGZH
      ZIZCUFQZBAGHHHHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSUICUF
      MVAURCVAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUKUBUP
      UHUMBUGULUCUDUESTTT $.
      $( [15-Jan-2015] $)


    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c ` (Contributed by SF,
       15-Jan-2015.) $)
    elpw181c $p |- (
     A e. ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { { { { x } } } } } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw171c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEEEEZEFBCGZ
      HZIZCUFQZBAGHHHHHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSUIC
      UFMVAURCVAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUKUB
      UPUHUMBUGULUCUDUESTTT $.
      $( [15-Jan-2015] $)


    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c ` (Contributed by
       SF, 24-Jan-2015.) $)
    elpw191c $p |- (
     A e. ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { { { { { x } } } } } } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw181c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEEEEEZEFBCG
      ZHZIZCUFQZBAGHHHHHHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJUSU
      ICUFMVAURCVAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCULUK
      UBUPUHUMBUGULUCUDUESTTT $.
      $( [24-Jan-2015] $)

    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c `
       (Contributed by SF, 24-Jan-2015.) $)
    elpw1101c $p |- (
     A e. ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { { { { { { x } } } } } } } } } } } ) $=
      ( vy c1c cpw1 wcel cv csn wceq wex elpw1 wa df-rex elpw191c anbi1i 19.41v
      wrex bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEEEEEEZEFBC
      GZHZIZCUFQZBAGHHHHHHHHHZHZHZIZAJZCBUFKUJUGULIZUILZAJZCJZUOUJUGUFFZUILZCJU
      SUICUFMVAURCVAUPAJZUILURUTVBUIAUGNOUPUIAPRSTUSUQCJZAJUOUQCAUAVCUNAUIUNCUL
      UKUBUPUHUMBUGULUCUDUESTTT $.
      $( [24-Jan-2015] $)


    $( Membership in ` ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c `
       (Contributed by SF, 24-Jan-2015.) $)
    elpw1111c $p |- (
     A e. ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c <->
                E. x A = { { { { { { { { { { { { x } } } } } } } } } } } } ) $=
      ( vy c1c cpw1 wcel csn wceq wrex wex elpw1 df-rex elpw1101c anbi1i 19.41v
      cv wa bitr4i exbii bitri excom snex sneq eqeq2d ceqsexv ) BDEEEEEEEEEEZEF
      BCPZGZHZCUFIZBAPGGGGGGGGGGZGZGZHZAJZCBUFKUJUGULHZUIQZAJZCJZUOUJUGUFFZUIQZ
      CJUSUICUFLVAURCVAUPAJZUIQURUTVBUIAUGMNUPUIAORSTUSUQCJZAJUOUQCAUAVCUNAUIUN
      CULUKUBUPUHUMBUGULUCUDUESTTT $.
      $( [24-Jan-2015] $)
  $}


  $( A unit power class is a subset of ` 1c ` .  (Contributed by SF,
     22-Jan-2015.) $)
  pw1ss1c $p |- ~P1 A C_ 1c $=
    ( cpw1 cpw c1c cin df-pw1 inss2 eqsstri ) ABACZDEDAFIDGH $.
    $( [22-Jan-2015] $)

  $( The empty class is not a singleton.  (Contributed by SF, 22-Jan-2015.) $)
  0nel1c $p |- -. (/) e. 1c $=
    ( vx c0 c1c wcel cv csn wceq wex wn cvv vex snprc eqcom bitri con1bii mpbir
    nex el1c mtbir ) BCDBAEZFZGZAHUBAUBITJDZAKUCUBUCIUABGUBTLUABMNOPQABRS $.
    $( [22-Jan-2015] $)

  $( Note that ` x ` is a dummy variable in the proof below. $)
  $( Compute the power set of the empty set.  Theorem 89 of [Suppes] p. 47.
     (The proof was shortened by Andrew Salmon, 29-Jun-2011.)  (Contributed by
     SF, 5-Aug-1993.)  (Revised by SF, 29-Jun-2011.) $)
  pw0 $p |- ~P (/) = { (/) } $=
    ( vx cv c0 wss cab wceq cpw csn ss0b abbii df-pw df-sn 3eqtr4i ) ABZCDZAENC
    FZAECGCHOPANIJACKACLM $.
    $( [29-Jun-2011] $) $( [5-Aug-1993] $)

  $( Compute the unit power class of ` (/) ` (Contributed by SF,
     22-Jan-2015.) $)
  pw10 $p |- ~P1 (/) = (/) $=
    ( vx c0 cpw1 cpw c1c cin csn df-pw1 ineq1i wceq cv wcel wn disj 0nel1c elsn
    pw0 wb eleq1 sylbi mtbiri mprgbir 3eqtri ) BCBDZEFBGZEFZBBHUDUEEQIUFBJAKZEL
    ZMAUEAUEENUGUELZUHBELZOUIUGBJUHUJRABPUGBESTUAUBUC $.
    $( [22-Jan-2015] $)


  ${
    $d A x y $.  $d B x y $.
    $( A condition for equality to unit power class.  (Contributed by SF,
       21-Jan-2015.) $)
    eqpw1 $p |- ( A = ~P1 B <-> ( A C_ 1c /\ A. x ( { x } e. A <-> x e. B )
        ) ) $=
      ( vy cpw1 wceq c1c wss cv csn wcel wb pw1ss1c sseq1 wi bitr4i albii bitri
      wal eleq1 mpbiri wral ssofeq mpan2 df-ral wex imbi1i 19.23v alcom bibi12d
      el1c snex ceqsalv snelpw1 bibi2i syl6bb biadan2 ) BCEZFZBGHZAIZJZBKZVACKZ
      LZASZUSUTURGHZCMZBURGNUAUTUSDIZBKZVIURKZLZDGUBZVFUTVGUSVMLVHDBURGUCUDVMVI
      VBFZVLOZDSZASZVFVMVIGKZVLOZDSZVQVLDGUEVTVOASZDSVQVSWADVSVNAUFZVLOWAVRWBVL
      AVIUKUGVNVLAUHPQVOADUIPRVPVEAVPVCVBURKZLZVEVLWDDVBVAULVNVJVCVKWCVIVBBTVIV
      BURTUJUMWCVDVCVACUNUORQRUPUQ $.
      $( [21-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Unit power class distributes over union.  (Contributed by SF,
       22-Jan-2015.) $)
    pw1un $p |- ~P1 ( A u. B ) = ( ~P1 A u. ~P1 B ) $=
      ( vx vy cun cpw1 cv wceq wrex wcel rexun elpw1 elun orbi12i bitri 3bitr4i
      csn wo eqriv ) CABEZFZAFZBFZEZCGZDGQHZDTIUFDAIZUFDBIZRZUEUAJUEUDJZUFDABKD
      UETLUJUEUBJZUEUCJZRUIUEUBUCMUKUGULUHDUEALDUEBLNOPS $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Unit power class distributes over intersection.  (Contributed by SF,
       13-Feb-2015.) $)
    pw1in $p |- ~P1 ( A i^i B ) = ( ~P1 A i^i ~P1 B ) $=
      ( vx vy cin cpw1 cv csn wceq wrex wcel wa ancom eleq1 snelpw1 syl6bb elin
      anbi2d elpw1 3bitr4i syl6bbr pm5.32ri an12 3bitr3i rexbii2 anbi1i r19.41v
      eqriv ) CABEZFZAFZBFZEZCGZDGZHZIZDUIJUQUNULKZLZDAJZUNUJKUNUMKZUQUSDUIAUOA
      KZURLZUQLUQVCLUOUIKZUQLVBUSLVCUQMUQVCVDUQVCVBUOBKZLVDUQURVEVBUQURUPULKVEU
      NUPULNUOBOPRUOABQUAUBUQVBURUCUDUEDUNUISUNUKKZURLUQDAJZURLVAUTVFVGURDUNASU
      FUNUKULQUQURDAUGTTUH $.
      $( [13-Feb-2015] $)
  $}

  ${
    $d A x y $.
    pw1sn.1 $e |- A e. _V $.
    $( Compute the unit power class of a singleton.  (Contributed by SF,
       22-Jan-2015.) $)
    pw1sn $p |- ~P1 { A } = { { A } } $=
      ( vx vy cpw1 cv wceq wrex wcel sneq eqeq2d rexsn elpw1 elsn 3bitr4i eqriv
      csn ) CAQZEZRQZCFZDFZQZGZDRHUARGZUASIUATIUDUEDABUBAGUCRUAUBAJKLDUARMCRNOP
      $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( The unit power class of a class is empty iff the class itself is empty.
       (Contributed by SF, 22-Jan-2015.) $)
    pw10b $p |- ( ~P1 A = (/) <-> A = (/) ) $=
      ( vx cpw1 c0 wceq wne cv wcel wex csn snelpw1 ne0i sylbir exlimiv necon4i
      n0 sylbi pw1eq pw10 syl6eq impbii ) ACZDEADEZADUBDADFBGZAHZBIUBDFZBAPUEUF
      BUEUDJZUBHUFUDAKUBUGLMNQOUCUBDCDADRSTUA $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Two unit power classes are disjoint iff the classes themselves are
       disjoint.  (Contributed by SF, 26-Jan-2015.) $)
    pw1disj $p |- ( ( ~P1 A i^i ~P1 B ) = (/) <-> ( A i^i B ) = (/) ) $=
      ( vx vy cpw1 cin c0 wceq cv wcel wn wral csn wi disj eleq1 notbid snelpw1
      sylbi ralrimiv rspccv notbii 3imtr3g sylibr wrex elpw1 wa rsp imp syl6bb
      syl5ibrcom rexlimdva syl5bi impbii ) AEZBEZFGHZABFGHZUQCIZBJZKZCALURUQVAC
      AUQUSMZUOJZVBUPJZKZUSAJVAUQDIZUPJZKZDUOLVCVENDUOUPOVHVEDVBUOVFVBHVGVDVFVB
      UPPQUASUSARVDUTUSBRUBUCTCABOUDURUSUPJZKZCUOLUQURVJCUOUSUOJUSVFMZHZDAUEURV
      JDUSAUFURVLVJDAURVFAJZUGVJVLVFBJZKZURVMVOURVODALVMVONDABOVODAUHSUIVLVIVNV
      LVIVKUPJVNUSVKUPPVFBRUJQUKULUMTCUOUPOUDUN $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d x y $.
    $( Cardinal one is the unit power class of the universe.  (Contributed by
       SF, 29-Jan-2015.) $)
    df1c2 $p |- 1c = ~P1 _V $=
      ( vx vy c1c cvv cpw1 cv csn wceq wrex wcel rexv elpw1 el1c 3bitr4ri eqriv
      wex ) ACDEZAFZBFGHZBDISBPRQJRCJSBKBRDLBRMNO $.
      $( [29-Jan-2015] $)
  $}

  $( Unit power set preserves subset.  (Contributed by SF, 3-Feb-2015.) $)
  pw1ss $p |- ( A C_ B -> ~P1 A C_ ~P1 B ) $=
    ( wss cpw c1c cin cpw1 sspwb ssrin sylbi df-pw1 3sstr4g ) ABCZADZEFZBDZEFZA
    GBGMNPCOQCABHNPEIJAKBKL $.
    $( [3-Feb-2015] $)

  ${
    $d A t $.  $d A x $.  $d B t $.  $d B x $.  $d t x $.
    $( The unit power class operation is one-to-one.  (Contributed by SF,
       26-Feb-2015.) $)
    pw111 $p |- ( ~P1 A = ~P1 B <-> A = B ) $=
      ( vt vx cv csn wceq cpw1 wcel wb wi wal eleq1 snelpw1 bitri albii c1c wss
      snex pw1ss1c bibi12d ceqsalv bibi12i wral ssofeq mp2an df-ral el1c imbi1i
      wex 19.23v bitr4i alcom dfcleq 3bitr4i ) CEZDEZFZGZUPAHZIZUPBHZIZJZKZCLZD
      LZUQAIZUQBIZJZDLUTVBGZABGVFVJDVFURUTIZURVBIZJZVJVDVNCURUQSUSVAVLVCVMUPURU
      TMUPURVBMUAUBVLVHVMVIUQANUQBNUCOPVKVDCQUDZVGUTQRVBQRVKVOJATBTCUTVBQUEUFVO
      UPQIZVDKZCLZVGVDCQUGVRVEDLZCLVGVQVSCVQUSDUJZVDKVSVPVTVDDUPUHUIUSVDDUKULPV
      ECDUMOOODABUNUO $.
      $( [26-Feb-2015] $)
  $}

  $( A unit power class is a subset of a power class.  (Contributed by SF,
     10-Mar-2015.) $)
  pw1sspw $p |- ~P1 A C_ ~P A $=
    ( cpw1 cpw c1c cin df-pw1 inss1 eqsstri ) ABACZDEIAFIDGH $.
    $( [10-Mar-2015] $)

  ${
    $d A x y $.  $d B x y $.
    $( Membership in a unit union.  (Contributed by SF, 15-Mar-2015.) $)
    eluni1g $p |- ( A e. V -> ( A e. U.1 B <-> { A } e. B ) ) $=
      ( vy vx cuni1 wcel wceq csn wex c1c cin cuni df-uni1 anbi1i bitr4i 3bitri
      cv wa exbii eleq2i eluni elin ancom el1c 19.41v anbi2i 19.42v excom eleq2
      an12 snex vex elsnc2 syl6bb eleq1 anbi12d ceqsexv eqcom sneq eleq1d syl5bb
      ceqsexgv ) ABFZGZDRZAHZVFIZBGZSZDJZACGAIZBGZVEABKLZMZGAERZGZVPVNGZSZEJZVK
      VDVOABNUAEAVNUBVTVQVPVHHZVPBGZSZSZDJZEJWDEJZDJVKVSWEEVSVQWCDJZSWEVRWGVQVR
      WBVPKGZSWHWBSZWGVPBKUCWBWHUDWIWADJZWBSWGWHWJWBDVPUEOWAWBDUFPQUGVQWCDUHPTW
      DEDUIWFVJDWFWAVQWBSZSZEJAVFHZVISZVJWDWLEVQWAWBUKTWKWNEVHVFULWAVQWMWBVIWAV
      QAVHGWMVPVHAUJAVFDUMUNUOVPVHBUPUQURWMVGVIAVFUSOQTQQVIVMDACVGVHVLBVFAUTVAV
      CVB $.
      $( [15-Mar-2015] $)
  $}

  ${
    eluni1.1 $e |- A e. _V $.
    $( Membership in a unit union.  (Contributed by SF, 15-Mar-2015.) $)
    eluni1 $p |- ( A e. U.1 B <-> { A } e. B ) $=
      ( cvv wcel cuni1 csn wb eluni1g ax-mp ) ADEABFEAGBEHCABDIJ $.
      $( [15-Mar-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Kuratowski relationships
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c X._k $. $( Times symbol (cross product symbol) (read: 'cross') $)
  $c `'_k $. $( Small elevated smiley (converse operation) $)
  $c "_k $. $( Left quote (image symbol) $)
  $c o._k $. $( Small circle (composition symbol) $)
  $c Ins2_k $. $( Insert two operator. $)
  $c Ins3_k $. $( Insert three operator. $)
  $c P6 $. $( P6 operator $)
  $c SI_k $. $( Singleton image functor $)
  $c SSet_k $. $( Subset relationship $)
  $c Image_k $. $( Image functor $)
  $c _I_k $. $( Identity relationship $)

  $( Extend the definition of a class to include the Kuratowski cross
     product. $)
  cxpk $a class ( A X._k B ) $.

  $( Extend the definition of a class to include the Kuratowski converse of a
     class. $)
  ccnvk $a class `'_k A $.

  $( Extend the definition of a class to include the Kuratowski second
     insertion operator. $)
  cins2k $a class Ins2_k A $.

  $( Extend the definition of a class to include the Kuratowski third insertion
     operator. $)
  cins3k $a class Ins3_k A $.

  $( Extend the definition of a class to include the P6 operator (the set
     guaranteed by ~ ax-typlower ). $)
  cp6 $a class P6 A $.

  $( Extend the definition of a class to include the Kuratowski image of a
     class.  (Read:  The image of ` B ` under ` A ` .) $)
  cimak $a class ( A "_k B ) $.

  $( Extend the definition of a class to include the Kuratowski composition of
     two classes.  (Read:  The composition of ` A ` and ` B ` .) $)
  ccomk $a class ( A o._k B ) $.

  $( Extend the definition of a class to include the Kuratowski singleton
     image. $)
  csik $a class SI_k A $.

  $( Extend the definition of a class to include the Kuratowski image
     functor. $)
  cimagek $a class Image_k A $.

  $( Extend the definition of a class to include the Kuratowski subset
     relationship. $)
  cssetk $a class SSet_k $.

  $( Extend the definition of a class to include the Kuratowski identity
     relationship. $)
  cidk $a class _I_k $.

  ${
    $d A x y z w t u v $.  $d B x y z w t u v $.
    $( Define the Kuratowski cross product.  This definition through ~ df-idk
       set up the Kuratowski relationships.  These are used mainly to prove the
       properties of ~ df-op , and are not used thereafter. $)
    df-xpk $a |- ( A X._k B ) =
            { x | E. y E. z ( x = << y , z >> /\ ( y e. A /\ z e. B ) ) } $.

    $( Define the Kuratowski converse. $)
    df-cnvk $a |- `'_k A =
             { x | E. y E. z ( x = << y , z >> /\ << z , y >> e. A ) } $.

    $( Define the Kuratowski second insertion operator. $)
    df-ins2k $a |- Ins2_k A =
       { x | E. y E. z ( x = << y , z >> /\
         E. t E. u E. v ( y = { { t } } /\ z = << u , v >> /\
            << t , v >> e. A ) ) } $.

    $( Define the Kuratowski third insertion operator. $)
    df-ins3k $a |- Ins3_k A =
       { x | E. y E. z ( x = << y , z >> /\
         E. t E. u E. v ( y = { { t } } /\ z = << u , v >> /\
            << t , u >> e. A ) ) } $.

    $( Define the Kuratowski image operator. $)
    df-imak $a |- ( A "_k B ) = { x | E. y e. B << y , x >> e. A } $.

    $( Define the Kuratowski composition operator. $)
    df-cok $a |- ( A o._k B ) =
       ( ( Ins2_k A i^i Ins3_k `'_k B ) "_k _V ) $.

    $( Define the P6 operator.  This is the set guaranteed by
       ~ ax-typlower . $)
    df-p6 $a |- P6 A = { x | ( _V X._k { { x } } ) C_ A } $.

    $( Define the Kuratowski singleton image operation. $)
    df-sik $a |- SI_k A = { x |
       E. y E. z ( x = << y , z >> /\
          E. t E. u ( y = { t } /\ z = { u } /\ << t , u >> e. A ) ) } $.

    $( Define the Kuratowski subset relationship. $)
    df-ssetk $a |- SSet_k = { x | E. y E. z ( x = << y , z >> /\ y C_ z ) } $.

    $( Define the Kuratowski image function.  See ~ opkelimagek for
       membership. $)
    df-imagek $a |- Image_k A =
       ( ( _V X._k _V ) \
         ( ( Ins2_k SSet_k (+) Ins3_k ( SSet_k o._k `'_k SI_k A ) ) "_k
           ~P1 ~P1 1c ) ) $.

    $( Define the Kuratowski identity relationship. $)
    df-idk $a |- _I_k = { x | E. y E. z ( x = << y , z >> /\ y = z ) } $.
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C x y z w $.

    $( Membership in a Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    elxpk $p |- ( A e. ( B X._k C ) <-> E. x E. y ( A = << x , y >> /\
               ( x e. B /\ y e. C ) ) ) $=
      ( vw cxpk wcel cvv cv copk wceq wa wex opkex eleq1 mpbiri adantr exlimivv
      elex eqeq1 anbi1d 2exbidv df-xpk elab2g pm5.21nii ) CDEGZHCIHZCAJZBJZKZLZ
      UIDHUJEHMZMZBNANZCUGTUNUHABULUHUMULUHUKIHUIUJOCUKIPQRSFJZUKLZUMMZBNANUOFC
      UGIUPCLZURUNABUSUQULUMUPCUKUAUBUCFABDEUDUEUF $.
      $( [12-Jan-2015] $)


    $( Membership in a cross product.  (Contributed by SF, 12-Jan-2015.) $)
    elxpk2 $p |- ( A e. ( B X._k C ) <->
           E. x e. B E. y e. C A = << x , y >> ) $=
      ( cv wcel wa copk wceq wex wrex cxpk ancom 2exbii r2ex elxpk 3bitr4ri ) A
      FZDGBFZEGHZCSTIJZHZBKAKUBUAHZBKAKUBBELADLCDEMGUCUDABUAUBNOUBABDEPABCDEQR
      $.
      $( [12-Jan-2015] $)


    $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq1 $p |- ( A = B -> ( A X._k C ) = ( B X._k C ) ) $=
      ( vx vy vz wceq cxpk cv copk wrex wcel rexeq elxpk2 3bitr4g eqrdv ) ABGZD
      ACHZBCHZQDIZEIFIJGFCKZEAKUAEBKTRLTSLUAEABMEFTACNEFTBCNOP $.
      $( [12-Jan-2015] $)

    $( Equality theorem for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq2 $p |- ( A = B -> ( C X._k A ) = ( C X._k B ) ) $=
      ( vx vy vz wceq cxpk cv copk wrex wcel rexeq rexbidv elxpk2 3bitr4g eqrdv
      ) ABGZDCAHZCBHZRDIZEIFIJGZFAKZECKUBFBKZECKUASLUATLRUCUDECUBFABMNEFUACAOEF
      UACBOPQ $.
      $( [12-Jan-2015] $)
  $}

  $( Equality theorem for Kuratowski cross product.  (Contributed by SF,
     12-Jan-2015.) $)
  xpkeq12 $p |- ( ( A = B /\ C = D ) -> ( A X._k C ) = ( B X._k D ) ) $=
    ( wceq cxpk xpkeq1 xpkeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [12-Jan-2015] $)

  ${
    xpkeq1i.1 $e |- A = B $.
    $( Equality inference for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq1i $p |- ( A X._k C ) = ( B X._k C ) $=
      ( wceq cxpk xpkeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [12-Jan-2015] $)

    $( Equality inference for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq2i $p |- ( C X._k A ) = ( C X._k B ) $=
      ( wceq cxpk xpkeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [12-Jan-2015] $)
  $}

  ${
    xpkeq12i.1 $e |- A = B $.
    xpkeq12i.2 $e |- C = D $.
    $( Equality inference for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq12i $p |- ( A X._k C ) = ( B X._k D ) $=
      ( wceq cxpk xpkeq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [12-Jan-2015] $)
  $}

  ${
    xpkeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq1d $p |- ( ph -> ( A X._k C ) = ( B X._k C ) ) $=
      ( wceq cxpk xpkeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Jan-2015] $)

    $( Equality deduction for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq2d $p |- ( ph -> ( C X._k A ) = ( C X._k B ) ) $=
      ( wceq cxpk xpkeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Jan-2015] $)

    xpkeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for Kuratowski cross product.  (Contributed by SF,
       12-Jan-2015.) $)
    xpkeq12d $p |- ( ph -> ( A X._k C ) = ( B X._k D ) ) $=
      ( wceq cxpk xpkeq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y $.
    $( Membership in ` ( _V X._k _V ) ` (Contributed by SF, 13-Jan-2015.) $)
    elvvk $p |- ( A e. ( _V X._k _V ) <-> E. x E. y A = << x , y >> ) $=
      ( cvv cxpk wcel cv copk wceq wex elxpk vex pm3.2i biantru 2exbii bitr4i
      wa ) CDDEFCAGZBGZHIZRDFZSDFZQZQZBJAJTBJAJABCDDKTUDABUCTUAUBALBLMNOP $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d t w $.  $d t y $.  $d t z $.  $d w y $.  $d w z $.  $d x y $.  $d x z $.
    $( Any Kuratowski ordered pair abstraction is a subset of
       ` ( _V X._k _V ) ` .  (Contributed by SF, 13-Jan-2015.) $)
    opkabssvvk $p |- { x | E. y E. z ( x = << y , z >> /\ ph ) } C_
       ( _V X._k _V ) $=
      ( vw vt cv copk wceq wa wex cvv cxpk wcel eqid vex opkeq12 eqeq2d spc2ev
      weq ax-mp elvvk mpbir eleq1 mpbiri adantr exlimivv abssi ) BGZCGZDGZHZIZA
      JZDKCKBLLMZUNUIUONZCDUMUPAUMUPULUONZUQULEGZFGZHZIZFKEKZULULIZVBULOVAVCEFU
      JUKCPDPECTFDTJUTULULURUSUJUKQRSUAEFULUBUCUIULUOUDUEUFUGUH $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d x y $.  $d x z $.
    opkabssvvki.1 $e |- A = { x | E. y E. z ( x = << y , z >> /\ ph ) } $.
    $( Any Kuratowski ordered pair abstraction is a subset of
       ` ( _V X._k _V ) ` .  (Contributed by SF, 13-Jan-2015.) $)
    opkabssvvki $p |- A C_ ( _V X._k _V ) $=
      ( cv copk wceq wa wex cab cvv cxpk opkabssvvk eqsstri ) EBGCGDGHIAJDKCKBL
      MMNFABCDOP $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Any Kuratowski cross product is a subset of ` ( _V X._k _V ) ` .
       (Contributed by SF, 13-Jan-2015.) $)
    xpkssvvk $p |- ( A X._k B ) C_ ( _V X._k _V ) $=
      ( vy vz vx cv wcel wa cxpk df-xpk opkabssvvki ) CFAGDFBGHECDABIECDABJK $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Subset for Kuratowski relationships.  (Contributed by SF,
       13-Jan-2015.) $)
    ssrelk $p |- ( A C_ ( _V X._k _V ) ->
       ( A C_ B <-> A. x A. y ( << x , y >> e. A -> << x , y >> e. B ) ) ) $=
      ( vz cvv cxpk wss cv wcel wi wral copk wal ssofss wceq df-ral bitri eleq1
      wex elvvk imbi1i 19.23vv bitr4i albii alrot3 opkex imbi12d ceqsalv 2albii
      syl6bb ) CFFGZHCDHEIZCJZUMDJZKZEULLZAIZBIZMZCJZUTDJZKZBNANZECDULOUQUMUTPZ
      UPKZENZBNANZVDUQUMULJZUPKZENZVHUPEULQVKVFBNANZENVHVJVLEVJVEBTATZUPKVLVIVM
      UPABUMUAUBVEUPABUCUDUEVFEABUFRRVGVCABUPVCEUTURUSUGVEUNVAUOVBUMUTCSUMUTDSU
      HUIUJRUK $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Equality for two Kuratowski relationships.  (Contributed by SF,
       13-Jan-2015.) $)
    eqrelk $p |- ( ( A C_ ( _V X._k _V ) /\ B C_ ( _V X._k _V ) ) ->
      ( A = B <-> A. x A. y ( << x , y >> e. A <-> << x , y >> e. B ) ) ) $=
      ( vz cvv cxpk wss wa wceq cv wcel wb wral copk wal ssofeq wi wex eleq1
      df-ral elvvk imbi1i 19.23vv bitr4i albii alrot3 bitri opkex 2albii 3bitri
      bibi12d ceqsalv syl6bb ) CFFGZHDUOHICDJEKZCLZUPDLZMZEUONZAKZBKZOZCLZVCDLZ
      MZBPAPZECDUOQUTUPUOLZUSRZEPZUPVCJZUSRZEPZBPAPZVGUSEUOUAVJVLBPAPZEPVNVIVOE
      VIVKBSASZUSRVOVHVPUSABUPUBUCVKUSABUDUEUFVLEABUGUHVMVFABUSVFEVCVAVBUIVKUQV
      DURVEUPVCCTUPVCDTULUMUJUKUN $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    eqrelkriiv.1 $e |- A C_ ( _V X._k _V ) $.
    eqrelkriiv.2 $e |- B C_ ( _V X._k _V ) $.
    ${
      eqrelkriiv.3 $e |- ( << x , y >> e. A <-> << x , y >> e. B ) $.
      $( Equality for two Kuratowski relationships.  (Contributed by SF,
         13-Jan-2015.) $)
      eqrelkriiv $p |- A = B $=
        ( wceq cv copk wcel wb wal gen2 cvv cxpk wss eqrelk mp2an mpbir ) CDHZA
        IBIJZCKUBDKLZBMAMZUCABGNCOOPZQDUEQUAUDLEFABCDRST $.
        $( [13-Jan-2015] $)
    $}

    ${
      $d ph x y $.
      eqrelkrdv.3 $e |- ( ph -> ( << x , y >> e. A <-> << x , y >> e. B ) ) $.
      $( Equality for two Kuratowski relationships.  (Contributed by SF,
         13-Jan-2015.) $)
      eqrelkrdv $p |- ( ph -> A = B ) $=
        ( cv copk wcel wb wal wceq alrimivv cvv cxpk wss eqrelk mp2an sylibr )
        ABICIJZDKUBEKLZCMBMZDENZAUCBCHODPPQZREUFRUEUDLFGBCDESTUA $.
        $( [13-Jan-2015] $)
    $}
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Equality theorem for Kuratowski converse.  (Contributed by SF,
       12-Jan-2015.) $)
    cnvkeq $p |- ( A = B -> `'_k A = `'_k B ) $=
      ( vx vy vz wceq cv copk wcel wa wex cab ccnvk eleq2 anbi2d 2exbidv abbidv
      df-cnvk 3eqtr4g ) ABFZCGDGZEGZHFZUBUAHZAIZJZEKDKZCLUCUDBIZJZEKDKZCLAMBMTU
      GUJCTUFUIDETUEUHUCABUDNOPQCDEARCDEBRS $.
      $( [12-Jan-2015] $)
  $}


  ${
    cnvkeqi.1 $e |- A = B $.
    $( Equality inference for Kuratowski converse.  (Contributed by SF,
       12-Jan-2015.) $)
    cnvkeqi $p |- `'_k A = `'_k B $=
      ( wceq ccnvk cnvkeq ax-mp ) ABDAEBEDCABFG $.
      $( [12-Jan-2015] $)
  $}

  ${
    cnvkeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for Kuratowski converse.  (Contributed by SF,
       12-Jan-2015.) $)
    cnvkeqd $p |- ( ph -> `'_k A = `'_k B ) $=
      ( wceq ccnvk cnvkeq syl ) ABCEBFCFEDBCGH $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y z w t u $.  $d B x y z w t u $.
    $( Equality theorem for the Kuratowski insert two operator.  (Contributed
       by SF, 12-Jan-2015.) $)
    ins2keq $p |- ( A = B -> Ins2_k A = Ins2_k B ) $=
      ( vx vy vz vw vt vu wceq cv copk csn w3a wex wa cab cins2k eleq2 df-ins2k
      wcel 3anbi3d 3exbidv anbi2d 2exbidv abbidv 3eqtr4g ) ABIZCJDJZEJZKIZUHFJZ
      LLIZUIGJHJZKIZUKUMKZATZMZHNGNFNZOZENDNZCPUJULUNUOBTZMZHNGNFNZOZENDNZCPAQB
      QUGUTVECUGUSVDDEUGURVCUJUGUQVBFGHUGUPVAULUNABUORUAUBUCUDUECDEHGFASCDEHGFB
      SUF $.
      $( [12-Jan-2015] $)

    $( Equality theorem for the Kuratowski insert three operator.  (Contributed
       by SF, 12-Jan-2015.) $)
    ins3keq $p |- ( A = B -> Ins3_k A = Ins3_k B ) $=
      ( vx vy vz vw vt vu wceq cv copk csn w3a wex wa cab cins3k eleq2 df-ins3k
      wcel 3anbi3d 3exbidv anbi2d 2exbidv abbidv 3eqtr4g ) ABIZCJDJZEJZKIZUHFJZ
      LLIZUIGJZHJKIZUKUMKZATZMZHNGNFNZOZENDNZCPUJULUNUOBTZMZHNGNFNZOZENDNZCPAQB
      QUGUTVECUGUSVDDEUGURVCUJUGUQVBFGHUGUPVAULUNABUORUAUBUCUDUECDEHGFASCDEHGFB
      SUF $.
      $( [12-Jan-2015] $)
  $}

  ${
    inskeqi.1 $e |- A = B $.
    $( Equality inference for Kuratowski insert two operator.  (Contributed by
       SF, 12-Jan-2015.) $)
    ins2keqi $p |- Ins2_k A = Ins2_k B $=
      ( wceq cins2k ins2keq ax-mp ) ABDAEBEDCABFG $.
      $( [12-Jan-2015] $)

    $( Equality inference for Kuratowski insert three operator.  (Contributed
       by SF, 12-Jan-2015.) $)
    ins3keqi $p |- Ins3_k A = Ins3_k B $=
      ( wceq cins3k ins3keq ax-mp ) ABDAEBEDCABFG $.
      $( [12-Jan-2015] $)
  $}

  ${
    inskeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for Kuratowski insert two operator.  (Contributed by
       SF, 12-Jan-2015.) $)
    ins2keqd $p |- ( ph -> Ins2_k A = Ins2_k B ) $=
      ( wceq cins2k ins2keq syl ) ABCEBFCFEDBCGH $.
      $( [12-Jan-2015] $)

    $( Equality deduction for Kuratowski insert three operator.  (Contributed
       by SF, 12-Jan-2015.) $)
    ins3keqd $p |- ( ph -> Ins3_k A = Ins3_k B ) $=
      ( wceq cins3k ins3keq syl ) ABCEBFCFEDBCGH $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    $( Equality theorem for Kuratowski image.  (Contributed by SF,
       12-Jan-2015.) $)
    imakeq1 $p |- ( A = B -> ( A "_k C ) = ( B "_k C ) ) $=
      ( vy vx wceq cv copk wcel wrex cimak eleq2 rexbidv abbidv df-imak 3eqtr4g
      cab ) ABFZDGEGHZAIZDCJZEQSBIZDCJZEQACKBCKRUAUCERTUBDCABSLMNEDACOEDBCOP $.
      $( [12-Jan-2015] $)

    $( Equality theorem for Kuratowski image.  (Contributed by SF,
       12-Jan-2015.) $)
    imakeq2 $p |- ( A = B -> ( C "_k A ) = ( C "_k B ) ) $=
      ( vy vx wceq cv copk wcel wrex cab cimak rexeq abbidv df-imak 3eqtr4g ) A
      BFZDGEGHCIZDAJZEKRDBJZEKCALCBLQSTERDABMNEDCAOEDCBOP $.
      $( [12-Jan-2015] $)
  $}


  ${
    imakeq1i.1 $e |- A = B $.
    $( Equality theorem for image.  (Contributed by SF, 12-Jan-2015.) $)
    imakeq1i $p |- ( A "_k C ) = ( B "_k C ) $=
      ( wceq cimak imakeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [12-Jan-2015] $)

    $( Equality theorem for Kuratowski image.  (Contributed by SF,
       12-Jan-2015.) $)
    imakeq2i $p |- ( C "_k A ) = ( C "_k B ) $=
      ( wceq cimak imakeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [12-Jan-2015] $)
  $}

  ${
    imakeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for Kuratowski image.  (Contributed by SF,
       12-Jan-2015.) $)
    imakeq1d $p |- ( ph -> ( A "_k C ) = ( B "_k C ) ) $=
      ( wceq cimak imakeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Jan-2015] $)

    $( Equality theorem for Kuratowski image.  (Contributed by SF,
       12-Jan-2015.) $)
    imakeq2d $p |- ( ph -> ( C "_k A ) = ( C "_k B ) ) $=
      ( wceq cimak imakeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Jan-2015] $)
  $}

  $( Equality theorem for Kuratowski composition of two classes.  (Contributed
     by SF, 12-Jan-2015.) $)
  cokeq1 $p |- ( A = B -> ( A o._k C ) = ( B o._k C ) ) $=
    ( wceq cins2k ccnvk cins3k cin cimak ins2keq ineq1d imakeq1d df-cok 3eqtr4g
    cvv ccomk ) ABDZAEZCFGZHZOIBEZSHZOIACPBCPQTUBOQRUASABJKLACMBCMN $.
    $( [12-Jan-2015] $)

  $( Equality theorem for Kuratowski composition of two classes.  (Contributed
     by SF, 12-Jan-2015.) $)
  cokeq2 $p |- ( A = B -> ( C o._k A ) = ( C o._k B ) ) $=
    ( wceq cins2k ccnvk cins3k cin cimak cnvkeq ins3keqd ineq2d imakeq1d df-cok
    cvv ccomk 3eqtr4g ) ABDZCEZAFZGZHZOISBFZGZHZOICAPCBPRUBUEORUAUDSRTUCABJKLMC
    ANCBNQ $.
    $( [12-Jan-2015] $)

  ${
    cokeq1i.1 $e |- A = B $.
    $( Equality inference for Kuratowski composition of two classes.
       (Contributed by SF, 12-Jan-2015.) $)
    cokeq1i $p |- ( A o._k C ) = ( B o._k C ) $=
      ( wceq ccomk cokeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [12-Jan-2015] $)

    $( Equality inference for Kuratowski composition of two classes.
       (Contributed by SF, 12-Jan-2015.) $)
    cokeq2i $p |- ( C o._k A ) = ( C o._k B ) $=
      ( wceq ccomk cokeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [12-Jan-2015] $)
  $}

  ${
    cokeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for Kuratowski composition of two classes.
       (Contributed by SF, 12-Jan-2015.) $)
    cokeq1d $p |- ( ph -> ( A o._k C ) = ( B o._k C ) ) $=
      ( wceq ccomk cokeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Jan-2015] $)

    $( Equality deduction for Kuratowski composition of two classes.
       (Contributed by SF, 12-Jan-2015.) $)
    cokeq2d $p |- ( ph -> ( C o._k A ) = ( C o._k B ) ) $=
      ( wceq ccomk cokeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Jan-2015] $)
  $}

  ${
    cokeq12i.1 $e |- A = B $.
    cokeq12i.2 $e |- C = D $.
    $( Equality inference for Kuratowski composition of two classes.
       (Contributed by SF, 12-Jan-2015.) $)
    cokeq12i $p |- ( A o._k C ) = ( B o._k D ) $=
      ( ccomk cokeq1i cokeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [12-Jan-2015] $)
  $}

  ${
    cokeq12d.1 $e |- ( ph -> A = B ) $.
    cokeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for Kuratowski composition of two classes.
       (Contributed by SF, 12-Jan-2015.) $)
    cokeq12d $p |- ( ph -> ( A o._k C ) = ( B o._k D ) ) $=
      ( ccomk cokeq1d cokeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Equality theorem for P6 operation.  (Contributed by SF, 12-Jan-2015.) $)
    p6eq $p |- ( A = B -> P6 A = P6 B ) $=
      ( vx wceq cvv cv csn cxpk wss cab cp6 sseq2 abbidv df-p6 3eqtr4g ) ABDZEC
      FGGHZAIZCJQBIZCJAKBKPRSCABQLMCANCBNO $.
      $( [12-Jan-2015] $)
  $}

  ${
    p6eqi.1 $e |- A = B $.
    $( Equality inference for the P6 operation.  (Contributed by SF,
       12-Jan-2015.) $)
    p6eqi $p |- P6 A = P6 B $=
      ( wceq cp6 p6eq ax-mp ) ABDAEBEDCABFG $.
      $( [12-Jan-2015] $)
  $}

  ${
    p6eqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for the P6 operation.  (Contributed by SF,
       12-Jan-2015.) $)
    p6eqd $p |- ( ph -> P6 A = P6 B ) $=
      ( wceq cp6 p6eq syl ) ABCEBFCFEDBCGH $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y z w t u $.  $d B x y z w t u $.
    $( Equality theorem for Kuratowski singleton image.  (Contributed by SF,
       12-Jan-2015.) $)
    sikeq $p |- ( A = B -> SI_k A = SI_k B ) $=
      ( vx vy vz vw vt wceq cv copk csn wcel w3a wex wa cab csik 2exbidv df-sik
      eleq2 3anbi3d anbi2d abbidv 3eqtr4g ) ABHZCIDIZEIZJHZUFFIZKHZUGGIZKHZUIUK
      JZALZMZGNFNZOZENDNZCPUHUJULUMBLZMZGNFNZOZENDNZCPAQBQUEURVCCUEUQVBDEUEUPVA
      UHUEUOUTFGUEUNUSUJULABUMTUARUBRUCCDEGFASCDEGFBSUD $.
      $( [12-Jan-2015] $)
  $}

  ${
    sikeqi.1 $e |- A = B $.
    $( Equality inference for Kuratowski singleton image.  (Contributed by SF,
       12-Jan-2015.) $)
    sikeqi $p |- SI_k A = SI_k B $=
      ( wceq csik sikeq ax-mp ) ABDAEBEDCABFG $.
      $( [12-Jan-2015] $)
  $}

  ${
    sikeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for Kuratowski singleton image.  (Contributed by SF,
       12-Jan-2015.) $)
    sikeqd $p |- ( ph -> SI_k A = SI_k B ) $=
      ( wceq csik sikeq syl ) ABCEBFCFEDBCGH $.
      $( [12-Jan-2015] $)
  $}

  $( Equality theorem for image operation.  (Contributed by SF,
     12-Jan-2015.) $)
  imagekeq $p |- ( A = B -> Image_k A = Image_k B ) $=
    ( wceq cvv cxpk cssetk cins2k csik ccnvk ccomk cins3k csymdif c1c cpw1 cdif
    cimak cimagek sikeq cnvkeqd df-imagek cokeq2d ins3keqd symdifeq2d imakeq1d
    difeq2d 3eqtr4g ) ABCZDDEZFGZFAHZIZJZKZLZMNNZPZOUHUIFBHZIZJZKZLZUOPZOAQBQUG
    UPVBUHUGUNVAUOUGUMUTUIUGULUSUGUKURFUGUJUQABRSUAUBUCUDUEATBTUF $.
    $( [12-Jan-2015] $)

  ${
    $d A y z $.  $d B x $.  $d B y $.  $d B z $.  $d C x $.  $d C y $.
    $d C z $.  $d ch z $.  $d ph x $.  $d ps y $.  $d x y z $.
    opkelopkabg.1 $e |- A = { x | E. y E. z ( x = << y , z >> /\ ph ) } $.
    opkelopkabg.2 $e |- ( y = B -> ( ph <-> ps ) ) $.
    opkelopkabg.3 $e |- ( z = C -> ( ps <-> ch ) ) $.
    $( Kuratowski ordered pair membership in an abstraction of Kuratowski
       ordered pairs.  (Contributed by SF, 12-Jan-2015.) $)
    opkelopkabg $p |- ( ( B e. V /\ C e. W ) ->
                 ( << B , C >> e. A <-> ch ) ) $=
      ( wcel wceq wa wex cvv wb copk cv opkex eqeq1 eqcom syl6bb anbi1d 2exbidv
      elab2 elex vex opkthg mp3an12 adantl exbidv 19.42v anbi2d ceqsexgv adantr
      anass 3bitrd syl2an syl5bb ) HIUAZGOEUBZFUBZUAZVDPZAQZFRZERZHJOZIKOZQCDUB
      ZVGPZAQZFRERVKDVDGHIUCVNVDPZVPVIEFVQVOVHAVQVOVDVGPVHVNVDVGUDVDVGUEUFUGUHL
      UIVLHSOZISOZVKCTVMHJUJIKUJVRVSQZVKVEHPZVFIPZAQZFRZQZERZWBBQZFRZCVTVJWEEVT
      VJWAWCQZFRWEVTVIWIFVTVIWAWBQZAQWIVTVHWJAVSVHWJTZVRVESOVFSOVSWKEUKFUKVEVFH
      ISSSULUMUNUGWAWBAUTUFUOWAWCFUPUFUOVRWFWHTVSWDWHEHSWAWCWGFWAABWBMUQUOURUSV
      SWHCTVRBCFISNURUNVAVBVC $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A y $.  $d A z $.  $d B x $.  $d B y $.  $d B z $.  $d C x $.  $d C y $.
    $d C z $.  $d ch z $.  $d ph x $.  $d ps y $.  $d x y $.  $d x z $.
    $d y z $.
    opkelopkab.1 $e |- A = { x | E. y E. z ( x = << y , z >> /\ ph ) } $.
    opkelopkab.2 $e |- ( y = B -> ( ph <-> ps ) ) $.
    opkelopkab.3 $e |- ( z = C -> ( ps <-> ch ) ) $.
    opkelopkab.4 $e |- B e. _V $.
    opkelopkab.5 $e |- C e. _V $.
    $( Kuratowski ordered pair membership in an abstraction of Kuratowski
       ordered pairs.  (Contributed by SF, 12-Jan-2015.) $)
    opkelopkab $p |- ( << B , C >> e. A <-> ch ) $=
      ( cvv wcel copk wb opkelopkabg mp2an ) HOPIOPHIQGPCRMNABCDEFGHIOOJKLST $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.  $d D x y z $.
    $( Kuratowski ordered pair membership in a Kuratowski cross product.
       (Contributed by SF, 12-Jan-2015.) $)
    opkelxpkg $p |- ( ( A e. V /\ B e. W ) ->
       ( << A , B >> e. ( C X._k D ) <-> ( A e. C /\ B e. D ) ) ) $=
      ( vx vy vz cv wcel wa cxpk df-xpk wceq eleq1 anbi1d anbi2d opkelopkabg )
      GJZCKZHJZDKZLACKZUCLUDBDKZLIGHCDMABEFIGHCDNTAOUAUDUCTACPQUBBOUCUEUDUBBDPR
      S $.
      $( [12-Jan-2015] $)
  $}

  ${
    opkelxpk.1 $e |- A e. _V $.
    opkelxpk.2 $e |- B e. _V $.
    $( Kuratowski ordered pair membership in a Kuratowski cross product.
       (Contributed by SF, 13-Jan-2015.) $)
    opkelxpk $p |- ( << A , B >> e. ( C X._k D ) <-> ( A e. C /\ B e. D ) ) $=
      ( cvv wcel copk cxpk wa wb opkelxpkg mp2an ) AGHBGHABICDJHACHBDHKLEFABCDG
      GMN $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.
    $( Kuratowski ordered pair membership in a Kuratowski converse.
       (Contributed by SF, 12-Jan-2015.) $)
    opkelcnvkg $p |- ( ( A e. V /\ B e. W ) ->
                ( << A , B >> e. `'_k C <-> << B , A >> e. C ) ) $=
      ( vy vx vz copk wcel ccnvk df-cnvk wceq opkeq2 eleq1d opkeq1 opkelopkabg
      cv ) FRZGRZIZCJSAIZCJBAIZCJHGFCKABDEHGFCLTAMUAUBCTASNOSBMUBUCCSBAPOQ $.
      $( [12-Jan-2015] $)
  $}

  ${
    opkelcnvk.1 $e |- A e. _V $.
    opkelcnvk.2 $e |- B e. _V $.
    $( Kuratowski ordered pair membership in a Kuratowski converse.
       (Contributed by SF, 14-Jan-2015.) $)
    opkelcnvk $p |- ( << A , B >> e. `'_k C <-> << B , A >> e. C ) $=
      ( cvv wcel copk ccnvk wb opkelcnvkg mp2an ) AFGBFGABHCIGBAHCGJDEABCFFKL
      $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z w t u $.  $d B x y z w t u $.  $d C x y z w t u $.
    $( Kuratowski ordered pair membership in Kuratowski insertion operator.
       (Contributed by SF, 12-Jan-2015.) $)
    opkelins2kg $p |- ( ( A e. V /\ B e. W ) ->
       ( << A , B >> e. Ins2_k C <->
         E. x E. y E. z ( A = { { x } } /\ B = << y , z >> /\
              << x , z >> e. C ) ) ) $=
      ( vw vu vt cv csn wceq copk wcel w3a wex eqeq1 3exbidv cins2k opkelopkabg
      df-ins2k 3anbi1d 3anbi2d ) ILZALZMMZNZJLZBLCLZOZNZUGUKOFPZQZCRBRARDUHNZUM
      UNQZCRBRARUPEULNZUNQZCRBRARKIJFUADEGHKIJCBAFUCUFDNZUOUQABCUTUIUPUMUNUFDUH
      SUDTUJENZUQUSABCVAUMURUPUNUJEULSUETUB $.
      $( [12-Jan-2015] $)

    $( Kuratowski ordered pair membership in Kuratowski insertion operator.
       (Contributed by SF, 12-Jan-2015.) $)
    opkelins3kg $p |- ( ( A e. V /\ B e. W ) ->
       ( << A , B >> e. Ins3_k C <->
         E. x E. y E. z ( A = { { x } } /\ B = << y , z >> /\
              << x , y >> e. C ) ) ) $=
      ( vw vu vt cv csn wceq copk wcel w3a wex eqeq1 3exbidv cins3k opkelopkabg
      df-ins3k 3anbi1d 3anbi2d ) ILZALZMMZNZJLZBLZCLOZNZUGUKOFPZQZCRBRARDUHNZUM
      UNQZCRBRARUPEULNZUNQZCRBRARKIJFUADEGHKIJCBAFUCUFDNZUOUQABCUTUIUPUMUNUFDUH
      SUDTUJENZUQUSABCVAUMURUPUNUJEULSUETUB $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.  $d D x y z $.  $d T x y z $.
    $( Kuratowski ordered triple membership in Kuratowski insertion operator.
       (Contributed by SF, 12-Jan-2015.) $)
    otkelins2kg $p |- ( ( A e. V /\ B e. W /\ C e. T ) ->
      ( << { { A } } , << B , C >> >> e. Ins2_k D <->
        << A , C >> e. D ) ) $=
      ( vx vy vz csn copk wcel cv wceq wa wex cvv wb bitri w3a snex opkelins2kg
      cins2k opkex mp2an 3anass eqcom sneqb anbi1i 2exbii 19.42vv opkeq1 eleq1d
      exbii anbi2d 2exbidv ceqsexgv 3ad2ant1 opkthg mp3an12 syl5bb anbi1d anass
      vex 19.42v syl6bb adantl biidd opkeq2 sylan9bb bitrd 3adant1 ) AKZKZBCLZL
      DUDMZHNZAOZVPINZJNZLZOZVRWALZDMZPZJQIQZPZHQZAFMZBGMZCEMZUAZACLZDMZVQVOVRK
      ZKZOZWCWEUAZJQIQZHQZWIVORMVPRMVQXASVNUBBCUEHIJVOVPDRRUCUFWTWHHWTVSWFPZJQI
      QWHWSXBIJWSWRWFPXBWRWCWEUGWRVSWFWRWQVOOZVSVOWQUHXCWPVNOVSWPVNVRUBUIVRAHVE
      UITTUJTUKVSWFIJULTUOTWMWIWCAWALZDMZPZJQIQZWOWJWKWIXGSWLWGXGHAFVSWFXFIJVSW
      EXEWCVSWDXDDVRAWAUMUNUPUQURUSWKWLXGWOSWJWKWLPXGVTBOZWACOZXEPZJQZPZIQZWOWL
      XGXMSWKWLXGXHXIPZXEPZJQZIQXMWLXFXOIJWLWCXNXEWCWBVPOZWLXNVPWBUHVTRMWARMWLX
      QXNSIVEJVEVTWABCERRUTVAVBVCUQXPXLIXPXHXJPZJQXLXOXRJXHXIXEVDUOXHXJJVFTUOVG
      VHWKXMXKWLWOXKXKIBGXHXKVIURXEWOJCEXIXDWNDWACAVJUNURVKVLVMVLVB $.
      $( [12-Jan-2015] $)

    $( Kuratowski ordered triple membership in Kuratowski insertion operator.
       (Contributed by SF, 12-Jan-2015.) $)
    otkelins3kg $p |- ( ( A e. V /\ B e. W /\ C e. T ) ->
      ( << { { A } } , << B , C >> >> e. Ins3_k D <->
        << A , B >> e. D ) ) $=
      ( vx vy vz csn copk wcel cv wceq wex cvv wb wa bitri w3a snex opkelins3kg
      cins3k opkex mp2an 3anass eqcom sneqb anbi1i 2exbii 19.42vv opkeq1 eleq1d
      exbii anbi2d 2exbidv ceqsexgv syl5bb 3ad2ant1 opkthg mp3an12 anbi1d anass
      vex syl6bb exdistr adantl opkeq2 exbidv biidd sylan9bb bitrd 3adant1 ) AK
      ZKZBCLZLDUDMZVPHNZKZKZOZVQINZJNZLZOZVSWCLZDMZUAZJPIPZHPZAFMZBGMZCEMZUAZAB
      LZDMZVPQMVQQMVRWKRVOUBBCUEHIJVPVQDQQUCUFWOWKWFAWCLZDMZSZJPIPZWQWLWMWKXARW
      NWKVSAOZWFWHSZJPIPZSZHPWLXAWJXEHWJXBXCSZJPIPXEWIXFIJWIWBXCSXFWBWFWHUGWBXB
      XCWBWAVPOZXBVPWAUHXGVTVOOXBVTVOVSUBUIVSAHVEUITTUJTUKXBXCIJULTUOXDXAHAFXBX
      CWTIJXBWHWSWFXBWGWRDVSAWCUMUNUPUQURUSUTWMWNXAWQRWLWMWNSXAWCBOZWDCOZWSSZJP
      ZSIPZWQWNXAXLRWMWNXAXHXJSZJPIPXLWNWTXMIJWNWTXHXISZWSSXMWNWFXNWSWFWEVQOZWN
      XNVQWEUHWCQMWDQMWNXOXNRIVEJVEWCWDBCEQQVAVBUSVCXHXIWSVDVFUQXHXJIJVGVFVHWMX
      LXIWQSZJPZWNWQXKXQIBGXHXJXPJXHWSWQXIXHWRWPDWCBAVIUNUPVJURWQWQJCEXIWQVKURV
      LVMVNVMUS $.
      $( [12-Jan-2015] $)
  $}

  ${
    otkelinsk.1 $e |- A e. _V $.
    otkelinsk.2 $e |- B e. _V $.
    otkelinsk.3 $e |- C e. _V $.
    $( Kuratowski ordered triple membership in Kuratowski insertion operator.
       (Contributed by SF, 12-Jan-2015.) $)
    otkelins2k $p |- ( << { { A } } , << B , C >> >> e. Ins2_k D <->
        << A , C >> e. D ) $=
      ( cvv wcel csn copk cins2k wb otkelins2kg mp3an ) AHIBHICHIAJJBCKKDLIACKD
      IMEFGABCDHHHNO $.
      $( [12-Jan-2015] $)

    $( Kuratowski ordered triple membership in Kuratowski insertion operator.
       (Contributed by SF, 12-Jan-2015.) $)
    otkelins3k $p |- ( << { { A } } , << B , C >> >> e. Ins3_k D <->
        << A , B >> e. D ) $=
      ( cvv wcel csn copk cins3k wb otkelins3kg mp3an ) AHIBHICHIAJJBCKKDLIABKD
      IMEFGABCDHHHNO $.
      $( [12-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    $( Membership in a Kuratowski image.  (Contributed by SF, 13-Jan-2015.) $)
    elimakg $p |- ( C e. V ->
             ( C e. ( A "_k B ) <-> E. y e. B << y , C >> e. A ) ) $=
      ( vx cv copk wcel wrex cimak wceq opkeq2 eleq1d rexbidv df-imak elab2g )
      AGZFGZHZBIZACJRDHZBIZACJFDBCKESDLZUAUCACUDTUBBSDRMNOFABCPQ $.
      $( [13-Jan-2015] $)

    $( Membership in a Kuratowski image under ` _V ` .  (Contributed by SF,
       13-Jan-2015.) $)
    elimakvg $p |- ( C e. V ->
             ( C e. ( A "_k _V ) <-> E. y << y , C >> e. A ) ) $=
      ( wcel cvv cimak cv copk wrex wex elimakg rexv syl6bb ) CDECBFGEAHCIBEZAF
      JOAKABFCDLOAMN $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A y $.  $d B y $.  $d C y $.
    elimak.1 $e |- C e. _V $.
    $( Membership in a Kuratowski image.  (Contributed by SF, 13-Jan-2015.) $)
    elimak $p |- ( C e. ( A "_k B ) <-> E. y e. B << y , C >> e. A ) $=
      ( cvv wcel cimak cv copk wrex wb elimakg ax-mp ) DFGDBCHGAIDJBGACKLEABCDF
      MN $.
      $( [13-Jan-2015] $)

    $( Membership in a Kuratowski image under ` _V ` .  (Contributed by SF,
       13-Jan-2015.) $)
    elimakv $p |- ( C e. ( A "_k _V ) <-> E. y << y , C >> e. A ) $=
      ( cvv wcel cimak cv copk wex wb elimakvg ax-mp ) CEFCBEGFAHCIBFAJKDABCELM
      $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C x y z w $.  $d D x y z w $.
    $( Membership in a Kuratowski composition.  (Contributed by SF,
       13-Jan-2015.) $)
    opkelcokg $p |- ( ( A e. V /\ B e. W ) ->
       ( << A , B >> e. ( C o._k D ) <->
         E. x ( << A , x >> e. D /\ << x , B >> e. C ) ) ) $=
      ( vz vw vy wcel cvv copk cv wa wex wb wceq vex exbii ccomk elex csn ccnvk
      cins3k cins2k cin cimak df-cok eleq2i opkex elimakv w3a opkelins2kg mp2an
      3anass 2exbii 19.42vv bitri anbi1i elin 19.41v 3bitr4i excom anass opkeq1
      snex eleq1d anbi2d 3bitri ancom otkelins3kg mp3an1 opkelcnvkg mpan adantr
      ceqsexv bitrd eqcom opkthg mp3an12 anbi1d syl6bb 2exbidv adantl biantrurd
      syl5bb elisset bicomd opkeq2 ceqsexgv sylan9bb anbi12d exbidv syl2an
      eeanv ) BFKBLKZCLKZBCMZDEUAZKZBANZMEKZXBCMZDKZOZAPZQCGKBFUBCGUBXAWSHNZINZ
      MZRZXBXIMZDKZOZIPHPZXBUCZUCZWSMZEUDZUEZKZOZAPZWQWROZXGXAWSDUFZXTUGZLUHZKJ
      NZWSMZYFKZJPZYCWTYGWSDEUIUJJYFWSBCUKZULYKYHXQRZXOOZYIXTKZOZAPZJPYPJPZAPYC
      YJYQJYIYEKZYOOYNAPZYOOYJYQYSYTYOYSYMXKXMUMZIPHPZAPZYTYHLKWSLKYSUUCQJSYLAH
      IYHWSDLLUNUOUUBYNAUUBYMXNOZIPHPYNUUAUUDHIYMXKXMUPUQYMXNHIURUSTUSUTYIYEXTV
      AYNYOAVBVCTYPJAVDYRYBAYRYMXOYOOZOZJPYBYPUUFJYMXOYOVETUUEYBJXQXPVGYMYOYAXO
      YMYIXRXTYHXQWSVFVHVIVQUSTVJVJYDYBXFAYBYAXOOYDXFXOYAVKYDYAXCXOXEYDYAXBBMXS
      KZXCXBLKZWQWRYAUUGQASZXBBCXSLLLVLVMWQUUGXCQZWRUUHWQUUJUUIXBBELLVNVOVPVRYD
      XOXHBRZHPZXICRZXMOZIPZOZXEXOXJWSRZXMOZIPHPZYDUUPXNUURHIXKUUQXMWSXJVSUTUQY
      DUUSUUKUUNOZIPHPZUUPWRUUSUVAQWQWRUURUUTHIWRUURUUKUUMOZXMOUUTWRUUQUVBXMXHL
      KXILKWRUUQUVBQHSISXHXIBCLLLVTWAWBUUKUUMXMVEWCWDWEUUKUUNHIWPWCWGWQUUPUUOWR
      XEWQUUOUUPWQUULUUOHBLWHWFWIXMXEICLUUMXLXDDXICXBWJVHWKWLVRWMWGWNWGWO $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.  $d D x $.
    opkelcok.1 $e |- A e. _V $.
    opkelcok.2 $e |- B e. _V $.
    $( Membership in a Kuratowski composition.  (Contributed by SF,
       13-Jan-2015.) $)
    opkelcok $p |- ( << A , B >> e. ( C o._k D ) <->
         E. x ( << A , x >> e. D /\ << x , B >> e. C ) ) $=
      ( cvv wcel copk ccomk cv wa wex wb opkelcokg mp2an ) BHICHIBCJDEKIBALZJEI
      RCJDIMANOFGABCDEHHPQ $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Membership in the P6 operator.  (Contributed by SF, 13-Jan-2015.) $)
    elp6 $p |- ( A e. V -> ( A e. P6 B <-> A. x << x , { A } >> e. B ) ) $=
      ( vy wcel cp6 cvv csn cxpk wss cv copk wal wceq sneq wi vex albii bitri
      sneqd xpkeq2d sseq1d df-p6 elab2g xpkssvvk ssrelk ax-mp opkelxpk biantrur
      wb wa df-sn abeq2i 3bitr2i imbi1i snex opkeq2 eleq1d ceqsalv syl6bb ) BDF
      BCGZFHBIZIZJZCKZALZVCMZCFZANZHELZIZIZJZCKVFEBVBDVKBOZVNVECVOVMVDHVOVLVCVK
      BPUAUBUCECUDUEVFVGVKMZVEFZVPCFZQZENZANZVJVEHHJKVFWAUKHVDUFAEVECUGUHVTVIAV
      TVKVCOZVRQZENVIVSWCEVQWBVRVQVGHFZVKVDFZULWEWBVGVKHVDARZERUIWDWEWFUJWBEVDE
      VCUMUNUOUPSVRVIEVCBUQWBVPVHCVKVCVGURUSUTTSTVA $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z t u $.  $d B x y z t u $.  $d C x y z t u $.
    $( Membership in Kuratowski singleton image.  (Contributed by SF,
       13-Jan-2015.) $)
    opkelsikg $p |- ( ( A e. V /\ B e. W ) ->
       ( << A , B >> e. SI_k C <->
         E. x E. y ( A = { x } /\ B = { y } /\ << x , y >> e. C ) ) ) $=
      ( vt vu vz cv csn wceq copk wcel w3a wex csik eqeq1 2exbidv opkelopkabg
      df-sik 3anbi1d 3anbi2d ) HKZAKZLZMZIKZBKZLZMZUFUJNEOZPZBQAQCUGMZULUMPZBQA
      QUODUKMZUMPZBQAQJHIERCDFGJHIBAEUBUECMZUNUPABUSUHUOULUMUECUGSUCTUIDMZUPURA
      BUTULUQUOUMUIDUKSUDTUA $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    opksnelsik.1 $e |- A e. _V $.
    opksnelsik.2 $e |- B e. _V $.
    $( Membership of an ordered pair of singletons in a Kuratowski singleton
       image.  (Contributed by SF, 13-Jan-2015.) $)
    opksnelsik $p |- ( << { A } , { B } >> e. SI_k C <-> << A , B >> e. C ) $=
      ( vx vy csn copk wcel cv wceq w3a wex cvv snex eqcom vex sneqb bitri csik
      wb opkelsikg mp2an biid 3anbi123i 2exbii opkeq1 eleq1d opkeq2 ceqsex2v )
      AHZBHZICUAJZULFKZHZLZUMGKZHZLZUOURIZCJZMZGNFNZABIZCJZULOJUMOJUNVDUBAPBPFG
      ULUMCOOUCUDVDUOALZURBLZVBMZGNFNVFVCVIFGUQVGUTVHVBVBUQUPULLVGULUPQUOAFRSTU
      TUSUMLVHUMUSQURBGRSTVBUEUFUGVBAURIZCJVFFGABDEVGVAVJCUOAURUHUIVHVJVECURBAU
      JUIUKTT $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z t u $.
    $( A Kuratowski singleton image is a Kuratowski relationship.  (Contributed
       by SF, 13-Jan-2015.) $)
    sikssvvk $p |- SI_k A C_ ( _V X._k _V ) $=
      ( vy vt vz vu vx cv csn wceq copk wcel w3a wex csik df-sik opkabssvvki )
      BGCGZHIDGEGZHIQRJAKLEMCMFBDANFBDECAOP $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z w t a b $.
    $( A Kuratowski singleton image is a subset of ` ( 1c X._k 1c ) ` .
       (Contributed by SF, 13-Jan-2015.) $)
    sikss1c1c $p |- SI_k A C_ ( 1c X._k 1c ) $=
      ( vx vy va vb vz vw vt c1c cxpk wss cv copk wcel wal csn wceq w3a wex vex
      csik wi df-sik eqeq1 3anbi1d 2exbidv 3anbi2d opkelopkab wa opkeq12 snel1c
      wb opkelxpkg mp2an mpbir2an syl6eqel 3adant3 exlimivv sylbi gen2 sikssvvk
      weq cvv ssrelk ax-mp mpbir ) AUAZIIJZKZBLZCLZMZVGNZVLVHNZUBZCOBOZVOBCVMVJ
      DLZPZQZVKELZPZQZVQVTMANZRZESDSZVNFLZVRQZGLZWAQZWCRZESDSVSWIWCRZESDSWEHFGV
      GVJVKHFGEDAUCFBVBZWJWKDEWLWGVSWIWCWFVJVRUDUEUFGCVBZWKWDDEWMWIWBVSWCWHVKWA
      UDUGUFBTCTUHWDVNDEVSWBVNWCVSWBUIVLVRWAMZVHVJVKVRWAUJWNVHNZVRINZWAINZVQDTU
      KZVTETUKZWPWQWOWPWQUIULWRWSVRWAIIIIUMUNUOUPUQURUSUTVGVCVCJKVIVPULAVABCVGV
      HVDVEVF $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Membership in the Kuratowski subset relationship.  (Contributed by SF,
       13-Jan-2015.) $)
    opkelssetkg $p |- ( ( A e. V /\ B e. W ) ->
      ( << A , B >> e. SSet_k <-> A C_ B ) ) $=
      ( vy vz vx cv wss cssetk df-ssetk sseq1 sseq2 opkelopkabg ) EHZFHZIAPIABI
      GEFJABCDGEFKOAPLPBAMN $.
      $( [13-Jan-2015] $)
  $}

  $( Membership via the Kuratowski subset relationship.  (Contributed by SF,
     13-Jan-2015.) $)
  elssetkg $p |- ( ( A e. V /\ B e. W ) ->
       ( << { A } , B >> e. SSet_k <-> A e. B ) ) $=
    ( wcel csn copk cssetk wss cvv snex opkelssetkg mpan snssg bicomd sylan9bbr
    wb ) BDEZAFZBGHEZSBIZACEZABEZSJERTUAQAKSBJDLMUBUCUAABCNOP $.
    $( [13-Jan-2015] $)

  ${
    elssetk.1 $e |- A e. _V $.
    elssetk.2 $e |- B e. _V $.
    $( Membership via the Kuratowski subset relationship.  (Contributed by SF,
       13-Jan-2015.) $)
    elssetk $p |- ( << { A } , B >> e. SSet_k <-> A e. B ) $=
      ( cvv wcel csn copk cssetk wb elssetkg mp2an ) AEFBEFAGBHIFABFJCDABEEKL
      $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y $.  $d C x y z $.
    $( Membership in the Kuratowski image functor.  (Contributed by SF,
       13-Jan-2015.) $)
    opkelimagekg $p |- ( ( A e. V /\ B e. W ) ->
      ( << A , B >> e. Image_k C <-> B = ( C "_k A ) ) ) $=
      ( vx vy vz wcel cvv copk wb wa cssetk c1c wn wex csn exbii bitri cimak cv
      cimagek wceq elex cxpk cins2k csik ccnvk ccomk csymdif cpw1 wal opkelxpkg
      cins3k ibir biantrurd exnal wrex opkex elimak df-rex anbi1i 19.41v bitr4i
      elpw121c excom snex opkeq1 eleq1d ceqsexv 3bitri elsymdif otkelins2kg vex
      mp3an1 elssetkg mpan adantl otkelins3kg opkelcokg anbi1d exbidv opkelcnvk
      bitrd sikss1c1c sseli opkelxpk el1c biimpi adantr sylbi syl anass anbi12d
      pm4.71ri opksnelsik anbi2i syl6bb 3bitr4g syl6bbr bibi12d syl5rbb syl5bbr
      ancom notbid syl5bb con1bid bitr3d df-imagek eleq2i eldif dfcleq syl2an
      cdif ) ADIAJIZBJIZABKZCUCZIZBCAUAZUDZLBEIADUEBEUEXPXQMZXRJJUFZIZXRNUGZNCU
      HZUIZUJZUOZUKZOULULZUAZIZPZMZFUBZBIZYQYAIZLZFUMZXTYBYCYOYPUUAYCYEYOYCYEAB
      JJJJUNUPUQYCUUAYNUUAPYTPZFQZYCYNYTFURYNYQRZRZRZXRKZYKIZFQZYCUUCYNGUBZXRKZ
      YKIZGYLUSUUJYLIZUULMZGQZUUIGYKYLXRABUTVAUULGYLVBUUOUUJUUFUDZUULMZFQZGQUUQ
      GQZFQUUIUUNUURGUUNUUPFQZUULMUURUUMUUTUULFUUJVFVCUUPUULFVDVESUUQGFVGUUSUUH
      FUULUUHGUUFUUEVHUUPUUKUUGYKUUJUUFXRVIVJVKSVLVLYCUUHUUBFUUHUUGYFIZUUGYJIZL
      ZPYCUUBUUGYFYJVMYCUVCYTYCUVAYRUVBYSYCUVAUUDBKNIZYRUUDJIZXPXQUVAUVDLYQVHZU
      UDABNJJJVNVPXQUVDYRLZXPYQJIXQUVGFVOZYQBJJVQVRVSWEYCUVBUUDAKYIIZYSUVEXPXQU
      VBUVILUVFUUDABYIJJJVTVPXPUVIYSLXQXPUVIUUJYQKCIZGAUSZYSXPUVIUUDHUBZKYHIZUV
      LAKZNIZMZHQZUVKUVEXPUVIUVQLUVFHUUDANYHJJWAVRXPUUJRZAKZNIZUVJMZGQZUUJAIZUV
      JMZGQUVQUVKXPUWAUWDGXPUVTUWCUVJUUJJIXPUVTUWCLGVOZUUJAJJVQVRWBWCUVQUVLUVRU
      DZUVLUUDKZYGIZUVOMZMZGQZHQUWJHQZGQUWBUVPUWKHUVPUWFGQZUWHMZUVOMZUWKUVMUWNU
      VOUVMUWHUWNUUDUVLYGUVFHVOZWDUWHUWMUWHUWGOOUFZIZUWMYGUWQUWGCWFWGUWRUVLOIZU
      UDOIZMUWMUVLUUDOOUWPUVFWHUWSUWMUWTUWSUWMGUVLWIWJWKWLWMWPTVCUWOUWMUWIMUWKU
      WMUWHUVOWNUWFUWIGVDVETSUWJHGVGUWLUWAGUWIUWAHUVRUUJVHUWFUWIUVRUUDKZYGIZUVT
      MZUWAUWFUWHUXBUVOUVTUWFUWGUXAYGUVLUVRUUDVIVJUWFUVNUVSNUVLUVRAVIVJWOUXCUVT
      UXBMUWAUXBUVTXEUXBUVJUVTUUJYQCUWEUVHWQWRTWSVKSVLUVJGAVBWTWEGCAYQUVHVAXAWK
      WEXBXFXGWCXCXDXHXIXTXRYDYMXOZIYPXSUXDXRCXJXKXRYDYMXLTFBYAXMWTXN $.
      $( [13-Jan-2015] $)
  $}

  ${
    opkelimagek.1 $e |- A e. _V $.
    opkelimagek.2 $e |- B e. _V $.
    $( Membership in the Kuratowski image functor.  (Contributed by SF,
       20-Jan-2015.) $)
    opkelimagek $p |- ( << A , B >> e. Image_k C <-> B = ( C "_k A ) ) $=
      ( cvv wcel copk cimagek cimak wceq wb opkelimagekg mp2an ) AFGBFGABHCIGBC
      AJKLDEABCFFMN $.
      $( [20-Jan-2015] $)
  $}


  $( The Kuratowski image functor is a relationship.  (Contributed by SF,
     14-Jan-2015.) $)
  imagekrelk $p |- Image_k A C_ ( _V X._k _V ) $=
    ( cimagek cvv cxpk cssetk cins2k csik ccnvk ccomk cins3k csymdif cpw1 cimak
    c1c cdif df-imagek difss eqsstri ) ABCCDZEFEAGHIJKNLLMZOSAPSTQR $.
    $( [14-Jan-2015] $)

  ${
    $d A x y z $.  $d B x y z $.
    $( Membership in the Kuratowski identity relationship.  (Contributed by SF,
       13-Jan-2015.) $)
    opkelidkg $p |- ( ( A e. V /\ B e. W ) ->
              ( << A , B >> e. _I_k <-> A = B ) ) $=
      ( vx vy vz weq cv wceq cidk df-idk eqeq1 eqeq2 opkelopkabg ) EFHAFIZJABJG
      EFKABCDGEFLEIAPMPBANO $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z $.
    $( A Kuratowski converse is a Kuratowski relationship.  (Contributed by SF,
       13-Jan-2015.) $)
    cnvkssvvk $p |- `'_k A C_ ( _V X._k _V ) $=
      ( vz vy vx cv copk wcel ccnvk df-cnvk opkabssvvki ) BECEFAGDCBAHDCBAIJ $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( The converse of a Kuratowski cross product.  (Contributed by SF,
       13-Jan-2015.) $)
    cnvkxpk $p |- `'_k ( A X._k B ) = ( B X._k A ) $=
      ( vx vy cxpk ccnvk cnvkssvvk xpkssvvk cv wcel wa copk ancom vex opkelcnvk
      opkelxpk bitri 3bitr4i eqrelkriiv ) CDABEZFZBAEZTGBAHDIZAJZCIZBJZKZUFUDKU
      EUCLZUAJZUHUBJUDUFMUIUCUELTJUGUEUCTCNZDNZOUCUEABUKUJPQUEUCBAUJUKPRS $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.  $d D x y $.
    $( The intersection of two Kuratowski cross products.  (Contributed by SF,
       13-Jan-2015.) $)
    inxpk $p |- ( ( A X._k B ) i^i ( C X._k D ) ) =
           ( ( A i^i C ) X._k ( B i^i D ) ) $=
      ( vx vy cxpk cin cvv inss1 xpkssvvk sstri cv wcel wa vex opkelxpk anbi12i
      elin bitri copk an4 3bitr4i eqrelkriiv ) EFABGZCDGZHZACHZBDHZGZUGUEIIGUEU
      FJABKLUHUIKEMZANZFMZBNZOZUKCNZUMDNZOZOZULUPOZUNUQOZOZUKUMUAZUGNZVCUJNZULU
      NUPUQUBVDVCUENZVCUFNZOUSVCUEUFSVFUOVGURUKUMABEPZFPZQUKUMCDVHVIQRTVEUKUHNZ
      UMUINZOVBUKUMUHUIVHVIQVJUTVKVAUKACSUMBDSRTUCUD $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d x y z w $.
    $( The Kuratowski subset relationship is a Kuratowski relationship.
       (Contributed by SF, 13-Jan-2015.) $)
    ssetkssvvk $p |- SSet_k C_ ( _V X._k _V ) $=
      ( vy vz vx cv wss cssetk df-ssetk opkabssvvki ) ADBDECABFCABGH $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z t u w $.
    $( Subset law for ` Ins2_k A ` .  (Contributed by SF, 14-Jan-2015.) $)
    ins2kss $p |- Ins2_k A C_ ( ~P1 1c X._k ( _V X._k _V ) ) $=
      ( vy vz vw vt vu vx c1c cvv cxpk wss copk wcel wal csn wceq w3a wex vex
      cv cins2k cpw1 wi wb opkelins2kg mp2an wa opkeq12 snel1c snelpw1 opkelxpk
      mpbir mpbir2an snex opkex syl6eqel 3adant3 exlimiv exlimivv gen2 df-ins2k
      sylbi opkabssvvki ssrelk ax-mp ) AUAZHUBZIIJZJZKZBTZCTZLZVFMZVMVIMZUCZCNB
      NZVPBCVNVKDTZOZOZPZVLETZFTZLZPZVRWCLAMZQZFRZERDRZVOVKIMVLIMVNWIUDBSCSDEFV
      KVLAIIUEUFWHVODEWGVOFWAWEVOWFWAWEUGVMVTWDLZVIVKVLVTWDUHWJVIMVTVGMZWDVHMZW
      KVSHMVRDSUIVSHUJULWLWBIMWCIMESZFSZWBWCIIWMWNUKUMVTWDVGVHVSUNWBWCUOUKUMUPU
      QURUSVBUTVFVHKVJVQUDVKWBOOPVLWCVRLPWBVRLAMQDRFRERGBCVFGBCDFEAVAVCBCVFVIVD
      VEUL $.
      $( [14-Jan-2015] $)

    $( Subset law for ` Ins3_k A ` .  (Contributed by SF, 14-Jan-2015.) $)
    ins3kss $p |- Ins3_k A C_ ( ~P1 1c X._k ( _V X._k _V ) ) $=
      ( vy vz vt vu vw vx c1c cvv cxpk wss cv copk wcel wal csn wceq wex wb vex
      cins3k cpw1 wi opkelins3kg mp2an wa opkeq12 snel1c snelpw1 mpbir opkelxpk
      mpbir2an snex opkex syl6eqel 3adant3 exlimiv exlimivv sylbi gen2 df-ins3k
      w3a opkabssvvki ssrelk ax-mp ) AUAZHUBZIIJZJZKZBLZCLZMZVFNZVMVINZUCZCOBOZ
      VPBCVNVKDLZPZPZQZVLELZFLZMZQZVRWBMANZVBZFRZERDRZVOVKINVLINVNWISBTCTDEFVKV
      LAIIUDUEWHVODEWGVOFWAWEVOWFWAWEUFVMVTWDMZVIVKVLVTWDUGWJVINVTVGNZWDVHNZWKV
      SHNVRDTUHVSHUIUJWLWBINWCINETZFTZWBWCIIWMWNUKULVTWDVGVHVSUMWBWCUNUKULUOUPU
      QURUSUTVFVHKVJVQSWIGBCVFGBCFEDAVAVCBCVFVIVDVEUJ $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d x y z $.
    $( The Kuratowski identity relationship is a Kuratowski relationship.
       (Contributed by SF, 14-Jan-2015.) $)
    idkssvvk $p |- _I_k C_ ( _V X._k _V ) $=
      ( vy vz vx weq cidk df-idk opkabssvvki ) ABDCABECABFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z a b c $.  $d B x y z a b c $.  $d C x y z a b c $.
    $( Image under a composition.  (Contributed by SF, 4-Feb-2015.) $)
    imacok $p |- ( ( A o._k B ) "_k C ) = ( A "_k ( B "_k C ) ) $=
      ( vz vx vy ccomk cimak cv copk wcel wrex wa wex vex rexbii rexcom4 df-rex
      opkelcok elimak anbi1i r19.41v bitr4i exbii bitr2i 3bitri 3bitr4i eqriv )
      DABGZCHZABCHZHZEIZDIZJUIKZECLZFIZUNJAKZFUKLZUNUJKUNULKUPUMUQJBKZURMZFNZEC
      LVAECLZFNZUSUOVBECFUMUNABEODOZSPVAEFCQUSUQUKKZURMZFNVDURFUKRVGVCFVGUTECLZ
      URMVCVFVHUREBCUQFOTUAUTURECUBUCUDUEUFEUICUNVETFAUKUNVETUGUH $.
      $( [4-Feb-2015] $)
  $}


  ${
    $d x A $.  $d x B $.  $d x C $.
    elimaksn.1 $e |- B e. _V $.
    elimaksn.2 $e |- C e. _V $.
    $( Membership in a Kuratowski image of a singleton.  (Contributed by SF,
       4-Feb-2015.) $)
    elimaksn $p |- ( C e. ( A "_k { B } ) <-> << B , C >> e. A ) $=
      ( vx csn cimak wcel cv copk wrex elimak wceq opkeq1 eleq1d rexsn bitri )
      CABGZHIFJZCKZAIZFSLBCKZAIZFASCEMUBUDFBDTBNUAUCATBCOPQR $.
      $( [4-Feb-2015] $)
  $}

  ${
    $d A x y z a b c $.  $d B x y z a b c $.
    $( A Kuratowski composition is a Kuratowski relationship.  (Contributed by
       SF, 4-Feb-2015.) $)
    cokrelk $p |- ( A o._k B ) C_ ( _V X._k _V ) $=
      ( vx vy va vb vc ccomk cvv cxpk wcel copk cins2k wex vex csn wceq exlimiv
      cv sylbi ccnvk cins3k cimak df-cok eleq2i elimakv bitri inss1 opkelins2kg
      cin sseli wb mp2an opkelxpk mpbir2an eleq1 mpbiri 3ad2ant2 exlimivv ssriv
      w3a syl ) CABHZIIJZCSZVCKZDSZVELZAMZBUAUBZUJZKZDNZVEVDKZVFVEVKIUCZKVMVCVO
      VEABUDUEDVKVECOZUFUGVLVNDVLVHVIKZVNVKVIVHVIVJUHUKVQVGESZPPQZVEFSZGSZLZQZV
      RWALAKZVAZGNZFNENZVNVGIKVEIKVQWGULDOVPEFGVGVEAIIUIUMWFVNEFWEVNGWCVSVNWDWC
      VNWBVDKZWHVTIKWAIKFOZGOZVTWAIIWIWJUNUOVEWBVDUPUQURRUSTVBRTUT $.
      $( [4-Feb-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Kuratowski existence theorems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d A a b x y z $.
    $( The Kuratowski cross product of ` _V ` with a set is a set.
       (Contributed by SF, 13-Jan-2015.) $)
    xpkvexg $p |- ( A e. V -> ( _V X._k A ) e. _V ) $=
      ( vx vz vy va vb cvv cv cxpk wcel wceq xpkeq2 eleq1d wel wa wex wal bitri
      wb copk ax-xp isset dfcleq elxpk vex biantrur anbi2i 2exbii bitr4i bibi2i
      albii exbii mpbir vtoclg ) HCIZJZHKZHAJZHKCABUPALUQUSHUPAHMNURDEOZDIZFIZG
      IUALZGCOZPZGQFQZTZDRZEQZCEDFGUBUREIZUQLZEQVIEUQUCVKVHEVKUTVAUQKZTZDRVHDVJ
      UQUDVMVGDVLVFUTVLVCVBHKZVDPZPZGQFQVFFGVAHUPUEVEVPFGVDVOVCVNVDFUFUGUHUIUJU
      KULSUMSUNUO $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z w $.
    $( The Kuratowski converse of a set is a set.  (Contributed by SF,
       13-Jan-2015.) $)
    cnvkexg $p |- ( A e. V -> `'_k A e. _V ) $=
      ( vx vz vw vy cv ccnvk cvv wcel wceq cnvkeq eleq1d copk wal wex wss ax-mp
      wb vex ax-cnv cxpk inss1 cnvkssvvk eqrelk mp2an opkelxpk mpbir2an mpbiran
      cin elin opkelcnvk bibi12i 2albii bitri biimpri vvex xpkvexg inex exlimiv
      syl6eqelr vtoclg ) CGZHZIJZAHZIJCABVCAKVDVFIVCALMDGZEGZNZFGZJZVHVGNVCJZSZ
      EODOZFPVECFDEUAVNVEFVNVDIIUBZVJUJZIVPVDKZVNVQVIVPJZVIVDJZSZEODOZVNVPVOQVD
      VOQVQWASVOVJUCVCUDDEVPVDUEUFVTVMDEVRVKVSVLVRVIVOJZVKWBVGIJVHIJDTZETZVGVHI
      IWCWDUGUHVIVOVJUKUIVGVHVCWCWDULUMUNUOUPVOVJIIJVOIJUQIIURRFTUSVAUTRVB $.
      $( [13-Jan-2015] $)
  $}

  ${
    cnvkex.1 $e |- A e. _V $.
    $( The Kuratowski converse of a set is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    cnvkex $p |- `'_k A e. _V $=
      ( cvv wcel ccnvk cnvkexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  $( The Kuratowski cross product of two sets is a set.  (Contributed by SF,
     13-Jan-2015.) $)
  xpkexg $p |- ( ( A e. V /\ B e. W ) -> ( A X._k B ) e. _V ) $=
    ( wcel cvv cxpk ccnvk cnvkxpk xpkvexg cnvkexg syl syl5eqelr cin inxpk incom
    wa inv1 eqtri xpkeq12i inexg syl2an ) ACEZAFGZFEZFBGZFEZABGZFEBDEUCUDFAGZHZ
    FFAIUCUIFEUJFEACJUIFKLMBDJUEUGQUHUDUFNZFUKAFNZFBNZGUHAFFBOULAUMBARUMBFNBFBP
    BRSTSUDUFFFUAMUB $.
    $( [13-Jan-2015] $)

  ${
    xpkex.1 $e |- A e. _V $.
    xpkex.2 $e |- B e. _V $.
    $( The Kuratowski cross product of two sets is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    xpkex $p |- ( A X._k B ) e. _V $=
      ( cvv wcel cxpk xpkexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z w $.
    $( The P6 operator applied to a set yields a set.  (Contributed by SF,
       13-Jan-2015.) $)
    p6exg $p |- ( A e. V -> P6 A e. _V ) $=
      ( vx vz vy vw cv cp6 cvv wcel wceq p6eq eleq1d wel csn copk wal vex ax-mp
      wb ax-typlower dfcleq bibi2i albii bitri biimpri syl6eqelr exlimiv vtoclg
      wex elp6 ) CGZHZIJZAHZIJCABULAKUMUOIULALMDENZFGDGZOPULJFQZTZDQZEUJUNCEDFU
      AUTUNEUTUMEGZIVAUMKZUTVBUPUQUMJZTZDQUTDVAUMUBVDUSDVCURUPUQIJVCURTDRFUQULI
      UKSUCUDUEUFERUGUHSUI $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x $.  $d A z $.  $d x z $.
    $( Alternate definition of unit union.  (Contributed by SF,
       15-Mar-2015.) $)
    dfuni12 $p |- U.1 A = P6 ( _V X._k A ) $=
      ( vx vz cuni1 cvv cxpk cp6 cv csn wcel copk wal 19.27v vex opkelxpk albii
      wa snex ax-gen biantrur 3bitr4ri eluni1 wb elp6 ax-mp 3bitr4i eqriv ) BAD
      ZEAFZGZBHZIZAJZCHZULKUIJZCLZUKUHJUKUJJZUNEJZUMQZCLURCLZUMQUPUMURUMCMUOUSC
      UNULEACNZUKROPUTUMURCVASTUAUKABNZUBUKEJUQUPUCVBCUKUIEUDUEUFUG $.
      $( [15-Mar-2015] $)
  $}

  $( The unit union operator preserves sethood.  (Contributed by SF,
     13-Jan-2015.) $)
  uni1exg $p |- ( A e. V -> U.1 A e. _V ) $=
    ( wcel cuni1 cvv cxpk cp6 dfuni12 vvex xpkexg mpan p6exg syl syl5eqel ) ABC
    ZADEAFZGZEAHOPECZQECEECORIEAEBJKPELMN $.
    $( [13-Jan-2015] $)

  ${
    uni1ex.1 $e |- A e. _V $.
    $( The unit union operator preserves sethood.  (Contributed by SF,
       14-Jan-2015.) $)
    uni1ex $p |- U.1 A e. _V $=
      ( cvv wcel cuni1 uni1exg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d x y z w $.
    $( The Kuratowski subset relationship is a set.  (Contributed by SF,
       13-Jan-2015.) $)
    ssetkex $p |- SSet_k e. _V $=
      ( vy vz vx vw cv copk wcel wel wi wal wb wex cssetk cvv ax-sset wss mp2an
      vex bitri ax-mp cxpk cin wceq ssetkssvvk eqrelk opkelxpk mpbir2an mpbiran
      inss1 elin opkelssetkg bibi12i 2albii biimpri vvex xpkvexg inex syl6eqelr
      dfss2 exlimiv ) AEZBEZFZCEZGZDAHDBHIDJZKZBJAJZCLMNGZCABDOVHVICVHMNNUAZVDU
      BZNVKMUCZVHVLVCVKGZVCMGZKZBJAJZVHVKVJPMVJPVLVPKVJVDUIUDABVKMUEQVOVGABVMVE
      VNVFVMVCVJGZVEVQVANGZVBNGZARZBRZVAVBNNVTWAUFUGVCVJVDUJUHVNVAVBPZVFVRVSVNW
      BKVTWAVAVBNNUKQDVAVBUSSULUMSUNVJVDNNGVJNGUONNUPTCRUQURUTT $.
      $( [13-Jan-2015] $)
  $}

  ${
    $d A x y z w t $.  $d B x y z w t $.
    sikexlem.1 $e |- A C_ ( 1c X._k 1c ) $.
    sikexlem.2 $e |- B C_ ( 1c X._k 1c ) $.
    $( Lemma for ~ sikexg .  Equality for two subsets of ` 1c ` squared .
       (Contributed by SF, 14-Jan-2015.) $)
    sikexlem $p |- ( A = B <->
              A. x A. y ( << { x } , { y } >> e. A <->
                          << { x } , { y } >> e. B ) ) $=
      ( vz vw vt wceq cv wcel wb c1c copk wal wex wa bitr4i bitri cxpk wral csn
      wss ssofeq mp2an df-ral w3a elxpk el1c anbi12i eeanv anbi2i df-3an 2exbii
      wi ancom 19.42vv exrot4 snex opkeq1 eqeq2d opkeq2 ceqsex2v 3bitri 19.23vv
      imbi1i albii alrot3 opkex eleq1 bibi12d ceqsalv 2albii ) CDJZGKZCLZVPDLZM
      ZGNNUAZUBZAKZUCZBKZUCZOZCLZWFDLZMZBPAPZCVTUDDVTUDVOWAMEFGCDVTUEUFWAVPVTLZ
      VSUPZGPZVPWFJZVSUPZGPZBPAPZWJVSGVTUGWMWOBPAPZGPWQWLWRGWLWNBQAQZVSUPWRWKWS
      VSWKVPHKZIKZOZJZWTNLZXANLZRZRZIQHQZWTWCJZXAWEJZXCUHZIQHQZBQAQZWSHIVPNNUIX
      HXKBQAQZIQHQXMXGXNHIXGXCXIXJRZBQAQZRZXNXFXPXCXFXIAQZXJBQZRXPXDXRXEXSAWTUJ
      BXAUJUKXIXJABULSUMXNXCXORZBQAQXQXKXTABXKXOXCRXTXIXJXCUNXOXCUQTUOXCXOABURT
      SUOXKABHIUSSXLWNABXCVPWCXAOZJWNHIWCWEWBUTWDUTXIXBYAVPWTWCXAVAVBXJYAWFVPXA
      WEWCVCVBVDUOVEVGWNVSABVFSVHWOGABVITWPWIABVSWIGWFWCWEVJWNVQWGVRWHVPWFCVKVP
      WFDVKVLVMVNVET $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z w $.
    $( The Kuratowski singleton image of a set is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    sikexg $p |- ( A e. V -> SI_k A e. _V ) $=
      ( vx vz vw vy cv csik cvv wcel wceq csn copk wal c1c vex snel1c snex 1cex
      wb sikeq eleq1d wex ax-si cxpk inss1 sikss1c1c sikexlem opkelxpk mpbir2an
      elin mpbiran opksnelsik bibi12i 2albii bitri biimpri xpkex inex syl6eqelr
      cin exlimiv ax-mp vtoclg ) CGZHZIJZAHZIJCABVEAKVFVHIVEAUAUBDGZLZEGZLZMZFG
      ZJZVIVKMVEJZTZENDNZFUCVGCFDEUDVRVGFVRVFOOUEZVNVAZIVTVFKZVRWAVMVTJZVMVFJZT
      ZENDNVRDEVTVFVSVNUFVEUGUHWDVQDEWBVOWCVPWBVMVSJZVOWEVJOJVLOJVIDPZQVKEPZQVJ
      VLOOVIRVKRUIUJVMVSVNUKULVIVKVEWFWGUMUNUOUPUQVSVNOOSSURFPUSUTVBVCVD $.
      $( [14-Jan-2015] $)
  $}

  ${
    sikex.1 $e |- A e. _V $.
    $( The Kuratowski singleton image of a set is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    sikex $p |- SI_k A e. _V $=
      ( cvv wcel csik sikexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.
    $( Alternate definition of Kuratowski image.  This is the first of a series
       of definitions throughout the file designed to prove existence of
       various operations.  (Contributed by SF, 14-Jan-2015.) $)
    dfimak2 $p |- ( A "_k B ) =
       ~ P6 ( ~ ( 1c X._k _V ) u. SI_k ~ ( A i^i ( B X._k _V ) ) ) $=
      ( vx vy vz c1c cvv cxpk ccompl cv copk wcel wn wex csn vex elcompl 3bitri
      wa bitri cimak cin csik cun cp6 wrex df-rex exancom wceq wb elp6 ax-mp wo
      elun opkex snex opkelxpk mpbiran2 xchbinx orbi1i wi iman imor el1c anbi1i
      19.41v bitr4i notbii 3bitr3i albii opkeq1 eleq1d opksnelsik syl6bb notbid
      alnex excom ceqsexv elin notnot anbi2i exbii con2bii elimak 3bitr4i eqriv
      wal ) CABUAZFGHZIZABGHZUBZIZUCZUDZUEZIZDJZCJZKZALZDBUFZWSWPLZMZWSWHLWSWQL
      XBWRBLZXASDNXAXESZDNZXDXADBUGXEXADUHXCXGXCEJZWSOZKZWOLZEWGZXHWROZUIZXJWNL
      ZMZSZDNZMZEWGZXGMWSGLZXCXLUJCPZEWSWOGUKULXKXSEXKXJWJLZXOUMXHFLZMZXOUMZXSX
      JWJWNUNYCYEXOYCXJWILZYDXJWIXHXIUOQYGYDXIGLWSUPZXHXIFGEPYHUQURUSUTYDXOVAYD
      XPSZMYFXSYDXOVBYDXOVCYIXRYIXNDNZXPSXRYDYJXPDXHVDVEXNXPDVFVGVHVIRVJXTXRENZ
      XGXREVPYKXQENZDNXGXQEDVQYLXFDYLWTWLLZMZMZXFXPYOEXMWRUPXNXOYNXNXOXMXIKZWNL
      ZYNXNXJYPWNXHXMXIVKVLYQWTWMLYNWRWSWMDPZYBVMWTWLWRWSUOQTVNVOVRYMXAWTWKLZSY
      OXFWTAWKVSYMVTYSXEXAYSXEYAYBWRWSBGYRYBUQURWAVITWBTUSRWCRDABWSYBWDWSWPYBQW
      EWF $.
      $( [14-Jan-2015] $)
  $}

  $( The image of a set under a set is a set.  (Contributed by SF,
     14-Jan-2015.) $)
  imakexg $p |- ( ( A e. V /\ B e. W ) -> ( A "_k B ) e. _V ) $=
    ( wcel wa cimak c1c cvv cxpk ccompl cin csik cun dfimak2 1cex vvex complexg
    cp6 3syl xpkex complex xpkexg mpan2 inexg sylan2 sikexg unexg sylancr p6exg
    syl5eqel ) ACEZBDEZFZABGHIJZKZABIJZLZKZMZNZSZKZIABOUNVAIEZVBIEVCIEUNUPIEUTI
    EZVDUOHIPQUAUBUNURIEZUSIEVEUMULUQIEZVFUMIIEVGQBIDIUCUDAUQCIUEUFURIRUSIUGTUP
    UTIIUHUIVAIUJVBIRTUK $.
    $( [14-Jan-2015] $)

  ${
    imakex.1 $e |- A e. _V $.
    imakex.2 $e |- B e. _V $.
    $( The image of a set under a set is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    imakex $p |- ( A "_k B ) e. _V $=
      ( cvv wcel cimak imakexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Jan-2015] $)
  $}


  ${
    $d A x y z w $.
    $( Alternate expression for unit power classes.  (Contributed by SF,
       26-Jan-2015.) $)
    dfpw12 $p |- ~P1 A = ( SI_k ( A X._k A ) "_k _V ) $=
      ( vx vy vz vw cpw1 cvv cv wcel csn wceq wex vex wb exbii bitr4i wa 3bitri
      copk weq cxpk csik cimak wrex elpw1 elimakv opkelsikg mp2an exrot3 df-3an
      w3a opkelxpk anbi2i an4 2exbii 19.41vv eqeq12 sylan2 eleq1 adantl anbi12d
      sneq spc2ev pm4.71ri ancom bitr3i df-rex eqriv ) BAFZAAUAZUBZGUCZBHZVIIV
      MCHZJZKZCAUDZVMVLIZCVMAUEVRDHZVMSVKIZDLZVSEHZJZKZVPWBVNSVJIZUKZELDLZCLZVQ
      DVKVMBMZUFWAWFCLELZDLWHVTWJDVSGIVMGIVTWJNDMWIECVSVMVJGGUGUHOWFCDEUIPWHVNA
      IZVPQZCLVQWGWLCWGWDWBAIZQZVPWKQZQZELDLWNELDLZWOQZWLWFWPDEWFWDVPQZWEQWSWMW
      KQZQWPWDVPWEUJWEWTWSWBVNAAEMCMZULUMWDVPWMWKUNRUOWNWODEUPWRWOWLWOWQWNWODEV
      MVNWIXADBTZECTZQWDVPWMWKXCXBWCVOKWDVPNWBVNVBVSVMWCVOUQURXCWMWKNXBWBVNAUSU
      TVAVCVDVPWKVEVFROVPCAVGPRPVH $.
      $( [26-Jan-2015] $)
  $}

  $( The unit power class preserves sethood.  (Contributed by SF,
     14-Jan-2015.) $)
  pw1exg $p |- ( A e. V -> ~P1 A e. _V ) $=
    ( wcel cpw1 cxpk csik cvv cimak dfpw12 xpkexg anidms sikexg imakexg sylancl
    syl vvex syl5eqel ) ABCZADAAEZFZGHZGAIRTGCZGGCUAGCRSGCZUBRUCAABBJKSGLOPTGGG
    MNQ $.
    $( [14-Jan-2015] $)

  ${
    pw1ex.1 $e |- A e. _V $.
    $( The unit power class preserves sethood.  (Contributed by SF,
       14-Jan-2015.) $)
    pw1ex $p |- ~P1 A e. _V $=
      ( cvv wcel cpw1 pw1exg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z w t u $.  $d B x y z w t u $.
    insklem.1 $e |- A C_ ( ~P1 1c X._k ( _V X._k _V ) ) $.
    insklem.2 $e |- B C_ ( ~P1 1c X._k ( _V X._k _V ) ) $.
    $( Lemma for ~ ins2kexg and ~ ins3kexg .  Equality for subsets of
       ` ( ~P1 1c X._k ( _V X._k _V ) ) ` .  (Contributed by SF,
       14-Jan-2015.) $)
    insklem $p |- ( A = B <->
      A. x A. y A. z ( << { { x } } , << y , z >> >> e. A <->
                       << { { x } } , << y , z >> >> e. B ) ) $=
      ( vw vt vu wceq cv wcel copk wal wi wex albii wa bitri c1c cpw1 cxpk wral
      wb cvv csn wss ssofeq mp2an 19.23v 19.23vv 19.42vv anbi2i 3bitr4ri 2exbii
      elvvk elxpk exrot3 exancom elpw11c anbi1i 19.41v bitr4i exbii ancom opkex
      an12 opkeq2 eqeq2d anbi1d ceqsexv snex opkeq1 excom bitr3i exrot4 3bitr4i
      imbi1i df-ral alcom alrot3 eleq1 bibi12d ceqsalv 2albii 3bitrri ) DEKZHLZ
      DMZWIEMZUEZHUAUBZUFUFUCZUCZUDZALUGZUGZBLZCLZNZNZDMZXBEMZUEZCOZBOAOZDWOUHE
      WOUHWHWPUEFGHDEWOUIUJWIWOMZWLPZHOWIXBKZWLPZCOBOZAOZHOZWPXGXIXMHXJCQBQZWLP
      ZAOXOAQZWLPXMXIXOWLAUKXLXPAXJWLBCULRXHXQWLWIILZJLZNZKZXRWMMZXSWNMZSZSZJQI
      QYAYBXSXAKZSZSZCQBQZJQIQZXHXQYEYIIJYAYGCQBQZSYAYBYFCQBQZSZSYIYEYKYMYAYBYF
      BCUMUNYAYGBCUMYDYMYAYCYLYBBCXSUQUNUNUOUPIJWIWMWNURXQXJAQZCQBQZYJXJABCUSYO
      YHJQIQZCQBQYJYNYPBCWIXRXANZKZYBSZIQZXRWRKZYRSZAQZIQZYPYNYTYBYRSZIQUUDYRYB
      IUTUUEUUCIUUEUUAAQZYRSUUCYBUUFYRAXRVAVBUUAYRAVCVDVETYPYFYAYBSZSZJQZIQYTYH
      UUHIJYHYAYFYBSZSUUHYGUUJYAYBYFVFUNYAYFYBVHTUPUUIYSIUUGYSJXAWSWTVGYFYAYRYB
      YFXTYQWIXSXAXRVIVJVKVLVETYNUUBIQZAQUUDUUKXJAYRXJIWRWQVMUUAYQXBWIXRWRXAVNV
      JVLVEUUBAIVOVPUOUPYHBCIJVQTTVRVSUORWLHWOVTXNXLHOZAOXKHOZCOZBOZAOXGXLHAWAU
      ULUUOAXKHBCWBRUUNXFABUUMXECWLXEHXBWRXAVGXJWJXCWKXDWIXBDWCWIXBEWCWDWERWFWG
      VRT $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z w t $.
    $( ` Ins2_k ` preserves sethood.  (Contributed by SF, 14-Jan-2015.) $)
    ins2kexg $p |- ( A e. V -> Ins2_k A e. _V ) $=
      ( vx vz vw vt vy cv cins2k cvv wcel wceq csn copk wb wal c1c vex opkelxpk
      cxpk ins2keq eleq1d wex ax-ins2 cpw1 inss1 ins2kss insklem snel1c snelpw1
      cin mpbir mpbir2an snex opkex elin mpbiran otkelins2k bibi12i albii bitri
      2albii biimpri 1cex pw1ex vvex xpkex inex syl6eqelr exlimiv ax-mp vtoclg
      ) CHZIZJKZAIZJKCABVMALVNVPJVMAUAUBDHZMZMZEHZFHZNZNZGHZKZVQWANVMKZOZFPZEPD
      PZGUCVOCGDEFUDWIVOGWIVNQUEZJJTZTZWDUKZJWMVNLZWIWNWCWMKZWCVNKZOZFPZEPDPWID
      EFWMVNWLWDUFVMUGUHWRWHDEWQWGFWOWEWPWFWOWCWLKZWEWSVSWJKZWBWKKZWTVRQKVQDRZU
      IVRQUJULXAVTJKWAJKERZFRZVTWAJJXCXDSUMVSWBWJWKVRUNVTWAUOSUMWCWLWDUPUQVQVTW
      AVMXBXCXDURUSUTVBVAVCWLWDWJWKQVDVEJJVFVFVGVGGRVHVIVJVKVL $.
      $( [14-Jan-2015] $)

    $( ` Ins3_k ` preserves sethood.  (Contributed by SF, 14-Jan-2015.) $)
    ins3kexg $p |- ( A e. V -> Ins3_k A e. _V ) $=
      ( vx vz vw vt vy cv cins3k cvv wcel wceq csn copk wb wal c1c vex opkelxpk
      cxpk ins3keq eleq1d wex ax-ins3 cpw1 inss1 ins3kss insklem snel1c snelpw1
      cin mpbir mpbir2an snex opkex elin mpbiran otkelins3k bibi12i albii bitri
      2albii biimpri 1cex pw1ex vvex xpkex inex syl6eqelr exlimiv ax-mp vtoclg
      ) CHZIZJKZAIZJKCABVMALVNVPJVMAUAUBDHZMZMZEHZFHZNZNZGHZKZVQVTNVMKZOZFPEPZD
      PZGUCVOCGDEFUDWIVOGWIVNQUEZJJTZTZWDUKZJWMVNLZWIWNWCWMKZWCVNKZOZFPEPZDPWID
      EFWMVNWLWDUFVMUGUHWRWHDWQWGEFWOWEWPWFWOWCWLKZWEWSVSWJKZWBWKKZWTVRQKVQDRZU
      IVRQUJULXAVTJKWAJKERZFRZVTWAJJXCXDSUMVSWBWJWKVRUNVTWAUOSUMWCWLWDUPUQVQVTW
      AVMXBXCXDURUSVBUTVAVCWLWDWJWKQVDVEJJVFVFVGVGGRVHVIVJVKVL $.
      $( [14-Jan-2015] $)
  $}

  ${
    inskex.1 $e |- A e. _V $.
    $( ` Ins2_k ` preserves sethood.  (Contributed by SF, 14-Jan-2015.) $)
    ins2kex $p |- Ins2_k A e. _V $=
      ( cvv wcel cins2k ins2kexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)

    $( ` Ins3_k ` preserves sethood.  (Contributed by SF, 14-Jan-2015.) $)
    ins3kex $p |- Ins3_k A e. _V $=
      ( cvv wcel cins3k ins3kexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  $( The Kuratowski composition of two sets is a set.  (Contributed by SF,
     14-Jan-2015.) $)
  cokexg $p |- ( ( A e. V /\ B e. W ) -> ( A o._k B ) e. _V ) $=
    ( wcel wa ccomk cins2k ccnvk cins3k cin cvv cimak ins2kexg cnvkexg ins3kexg
    df-cok syl inexg syl2an vvex imakexg sylancl syl5eqel ) ACEZBDEZFZABGAHZBIZ
    JZKZLMZLABQUGUKLEZLLEULLEUEUHLEUJLEZUMUFACNUFUILEUNBDOUILPRUHUJLLSTUAUKLLLU
    BUCUD $.
    $( [14-Jan-2015] $)

  ${
    cokex.1 $e |- A e. _V $.
    cokex.2 $e |- B e. _V $.
    $( The Kuratowski composition of two sets is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    cokex $p |- ( A o._k B ) e. _V $=
      ( cvv wcel ccomk cokexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Jan-2015] $)
  $}

  $( The Kuratowski image functor preserves sethood.  (Contributed by SF,
     14-Jan-2015.) $)
  imagekexg $p |- ( A e. V -> Image_k A e. _V ) $=
    ( wcel cimagek cvv cxpk cssetk cins2k csik ccnvk ccomk csymdif c1c cpw1 syl
    cins3k ssetkex mpan pw1ex vvex cimak cdif df-imagek sikexg cnvkexg ins3kexg
    cokexg ins2kex symdifexg 1cex imakexg mpan2 xpkex difexg syl5eqel ) ABCZADE
    EFZGHZGAIZJZKZPZLZMNZNZUAZUBZEAUCUPVFECZVGECZUPVCECZVHUPVBECZVJUPVAECZVKUPU
    TECZVLUPUSECVMABUDUSEUEOGECVMVLQGUTEEUGROVAEUFOURECVKVJGQUHURVBEEUIROVJVEEC
    VHVDMUJSSVCVEEEUKULOUQECVHVIEETTUMUQVFEEUNROUO $.
    $( [14-Jan-2015] $)

  ${
    imagekex.1 $e |- A e. _V $.
    $( The Kuratowski image functor preserves sethood.  (Contributed by SF,
       14-Jan-2015.) $)
    imagekex $p |- Image_k A e. _V $=
      ( cvv wcel cimagek imagekexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d x y $.
    $( Definition of ` _I_k ` in terms of ` SSet_k ` .  (Contributed by SF,
       14-Jan-2015.) $)
    dfidk2 $p |- _I_k = ( SSet_k i^i `'_k SSet_k ) $=
      ( vx vy cidk cssetk ccnvk cin idkssvvk cvv cxpk inss1 cv wss wa copk wcel
      wb vex mp2an opkelssetkg bitri ssetkssvvk weq eqss opkelidkg elin anbi12i
      sstri opkelcnvk 3bitr4i eqrelkriiv ) ABCDDEZFZGULDHHIDUKJUAUGABUBZAKZBKZL
      ZUOUNLZMZUNUONZCOZUSULOZUNUOUCUNHOZUOHOZUTUMPAQZBQZUNUOHHUDRVAUSDOZUSUKOZ
      MURUSDUKUEVFUPVGUQVBVCVFUPPVDVEUNUOHHSRVGUOUNNDOZUQUNUODVDVEUHVCVBVHUQPVE
      VDUOUNHHSRTUFTUIUJ $.
      $( [14-Jan-2015] $)
  $}

  $( The Kuratowski identity relationship is a set.  (Contributed by SF,
     14-Jan-2015.) $)
  idkex $p |- _I_k e. _V $=
    ( cidk cssetk ccnvk cin cvv dfidk2 ssetkex cnvkex inex eqeltri ) ABBCZDEFBK
    GBGHIJ $.
    $( [14-Jan-2015] $)

  ${
    $d A x y $.
    $( Alternate definition of class union for existence proof.  (Contributed
       by SF, 14-Jan-2015.) $)
    dfuni3 $p |- U. A = U.1 ( `'_k SSet_k "_k A ) $=
      ( vx vy cuni cssetk ccnvk cimak cuni1 cv csn copk wcel wrex wel opkelcnvk
      vex snex elssetk bitri rexbii eluni1 elimak eluni2 3bitr4ri eqriv ) BADZE
      FZAGZHZCIZBIZJZKUGLZCAMZBCNZCAMUKUILZUKUFLUMUOCAUMULUJKELUOUJULECPZUKQZOU
      KUJBPZUQRSTUPULUHLUNUKUHUSUACUGAULURUBSCUKAUCUDUE $.
      $( [14-Jan-2015] $)
  $}

  $( The sum class of a set is a set.  (Contributed by SF, 14-Jan-2015.) $)
  uniexg $p |- ( A e. V -> U. A e. _V ) $=
    ( wcel cuni cssetk ccnvk cimak cuni1 cvv dfuni3 ssetkex cnvkex imakexg mpan
    uni1exg syl syl5eqel ) ABCZADEFZAGZHZIAJRTICZUAICSICRUBEKLSAIBMNTIOPQ $.
    $( [14-Jan-2015] $)

  ${
    uniex.1 $e |- A e. _V $.
    $( The sum class of a set is a set.  (Contributed by SF, 14-Jan-2015.) $)
    uniex $p |- U. A e. _V $=
      ( cvv wcel cuni uniexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y z $.
    $( Alternate definition of class intersection for the existence proof.
       (Contributed by SF, 14-Jan-2015.) $)
    dfint3 $p |- |^| A = ~ U.1 ( `'_k ~ SSet_k "_k A ) $=
      ( vx vy cint cssetk ccompl ccnvk cimak cuni1 wel wral cv wcel wn csn copk
      wrex vex elcompl 3bitri eluni1 snex elimak bitri opkelcnvk elssetk notbii
      opkex rexbii rexnal con2bii elint2 3bitr4i eqriv ) BADZEFZGZAHZIZFZBCJZCA
      KZBLZUSMZNVCUOMVCUTMVDVBVDCLZVCOZPUQMZCAQZVANZCAQVBNVDVFURMVHVCURBRZUACUQ
      AVFVCUBZUCUDVGVICAVGVFVEPZUPMVLEMZNVIVEVFUPCRZVKUEVLEVFVEUHSVMVAVCVEVJVNU
      FUGTUIVACAUJTUKCVCAVJULVCUSVJSUMUN $.
      $( [14-Jan-2015] $)
  $}

  $( The intersection of a set is a set.  (Contributed by SF, 14-Jan-2015.) $)
  intexg $p |- ( A e. V -> |^| A e. _V ) $=
    ( wcel cint cssetk ccompl ccnvk cimak dfint3 ssetkex complex cnvkex imakexg
    cuni1 cvv mpan uni1exg complexg 3syl syl5eqel ) ABCZADEFZGZAHZNZFZOAIUAUDOC
    ZUEOCUFOCUCOCUAUGUBEJKLUCAOBMPUDOQUEORST $.
    $( [14-Jan-2015] $)

  ${
    intex.1 $e |- A e. _V $.
    $( The intersection of a set is a set.  (Contributed by SF,
       14-Jan-2015.) $)
    intex $p |- |^| A e. _V $=
      ( cvv wcel cint intexg ax-mp ) ACDAECDBACFG $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x y $.
    $( Two ways to express the class of all sets that contain ` A ` .
       (Contributed by SF, 14-Jan-2015.) $)
    setswith $p |- { x | A e. x } =
                if ( A e. _V , ( SSet_k "_k { { A } } ) , (/) ) $=
      ( vy cvv wcel cv cab cssetk csn cimak c0 cif wceq copk wrex opkeq1 eleq1d
      snex eqtr4d wn rexsn wb vex elssetkg mpan2 syl5rbb abbidv df-imak syl6eqr
      iftrue wal elex con3i alrimiv ab0 sylibr iffalse pm2.61i ) BDEZBAFZEZAGZU
      SHBIZIZJZKLZMUSVBVEVFUSVBCFZUTNZHEZCVDOZAGVEUSVAVJAVJVCUTNZHEZUSVAVIVLCVC
      BRVGVCMVHVKHVGVCUTPQUAUSUTDEVLVAUBAUCBUTDDUDUEUFUGACHVDUHUIUSVEKUJSUSTZVB
      KVFVMVATZAUKVBKMVMVNAVAUSBUTULUMUNVAAUOUPUSVEKUQSUR $.
      $( [14-Jan-2015] $)

    $( The class of all sets that contain ` A ` exist.  (Contributed by SF,
       14-Jan-2015.) $)
    setswithex $p |- { x | A e. x } e. _V $=
      ( wcel cab cvv cssetk csn cimak cif setswith ssetkex snex imakex 0ex ifex
      cv c0 eqeltri ) BAPCADBECZFBGZGZHZQIEABJSUBQFUAKTLMNOR $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x t $.  $d B x t $.
    ndisjrelk.1 $e |- A e. _V $.
    ndisjrelk.2 $e |- B e. _V $.
    $( Membership in a particular Kuratowski relationship is equivalent to
       non-disjointedness.  (Contributed by SF, 15-Jan-2015.) $)
    ndisjrelk $p |- (
      << A , B >> e. ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c )
      <-> ( A i^i B ) =/= (/) ) $=
      ( vt vx cv csn copk cssetk cin wcel wa cpw1 snex elin elssetk bitri exbii
      wex wceq cins3k cins2k c1c cimak wne opkeq1 eleq1d ceqsexv otkelins3k vex
      otkelins2k anbi12i wrex opkex elimak elpw121c anbi1i 19.41v bitr4i df-rex
      c0 excom 3bitr4i n0 ) EGZFGZHZHZHZUAZVFABIZIZJUBZJUCZKZLZMZETZFTZVGALZVGB
      LZMZFTZVLVPUDNNZUELZABKZVBUFZVSWCFVSVJVLIZVPLZWCVQWJEVJVIOVKVMWIVPVFVJVLU
      GUHUIWJWIVNLZWIVOLZMWCWIVNVOPWKWAWLWBWKVHAIJLWAVHABJVGOZCDUJVGAFUKZCQRWLV
      HBIJLWBVHABJWMCDULVGBWNDQRUMRRSWFVQEWEUNZVTEVPWEVLABUOUPVFWELZVQMZETVRFTZ
      ETWOVTWQWREWQVKFTZVQMWRWPWSVQFVFUQURVKVQFUSUTSVQEWEVAVRFEVCVDRWHVGWGLZFTW
      DFWGVEWTWCFVGABPSRVD $.
      $( [15-Jan-2015] $)
  $}

  ${
    $d ph x $.
    $( When ` x ` does not occur in ` ph ` , ` { x | ph } ` is a set.
       (Contributed by SF, 17-Jan-2015.) $)
    abexv $p |- { x | ph } e. _V $=
      ( cab cvv wceq c0 wo wcel abvor0 vvex eleq1 mpbiri 0ex jaoi ax-mp ) ABCZD
      EZPFEZGPDHZABIQSRQSDDHJPDDKLRSFDHMPFDKLNO $.
      $( [17-Jan-2015] $)
  $}

  ${
    $d A x y z $.
    $( The union of a unit power class is the original set.  (Contributed by
       SF, 20-Jan-2015.) $)
    unipw1 $p |- U. ~P1 A = A $=
      ( vx vy vz cpw1 cuni cv wcel wel wa wex csn wceq eluni elpw1 anbi1i ancom
      wrex weq 3bitri r19.41v 3bitr4i exbii risset ceqsexv abeq2i equcom rexbii
      snex eleq2 df-sn rexcom4 3bitr2ri eqriv ) BAEZFZABGZUPHBCIZCGZUOHZJZCKUSD
      GZLZMZURJZDARZCKZUQAHZCUQUONVAVFCUTURJVDDARZURJVAVFUTVIURDUSAOPURUTQVDURD
      AUAUBUCVHDBSZDARVECKZDARVGDUQAUDVKVJDAVKUQVCHZBDSZVJURVLCVCVBUIUSVCUQUJUE
      VMBVCBVBUKUFBDUGTUHVEDCAULUMTUN $.
      $( [20-Jan-2015] $)
  $}

  $( Biconditional existence for unit power class.  (Contributed by SF,
     20-Jan-2015.) $)
  pw1exb $p |- ( ~P1 A e. _V <-> A e. _V ) $=
    ( cpw1 cvv wcel cuni unipw1 uniexg syl5eqelr pw1exg impbii ) ABZCDZACDLAKEC
    AFKCGHACIJ $.
    $( [20-Jan-2015] $)

  ${
    $d A x y t $.
    $( Definition of power set for existence proof.  (Contributed by SF,
       21-Jan-2015.) $)
    dfpw2 $p |- ~P A = ~ ( ( SSet_k \ ( ~P1 A X._k _V ) ) "_k 1c ) $=
      ( vx vy vt cpw cssetk cpw1 cvv c1c cv wcel wn copk wa wex vex exbii bitri
      3bitr4i 3bitri cxpk cdif cimak ccompl wel wal csn wceq wrex elimak anbi1i
      el1c 19.41v bitr4i df-rex excom snex opkeq1 eleq1d ceqsexv eldif opkelxpk
      wi elssetk mpbiran2 snelpw1 notbii anbi12i annim exnal con2bii elpw dfss2
      wss elcompl eqriv ) BAEZFAGZHUAZUBZIUCZUDZCBUEZCJZAKZVCZCUFZBJZWAKZLWHVQK
      ZWHWBKWIWGWIDJZWDUGZUHZWKWHMZVTKZNZDOZCOZWFLZCOWGLWIWODIUIZWRDVTIWHBPZUJW
      KIKZWONZDOWPCOZDOWTWRXCXDDXCWMCOZWONXDXBXEWOCWKULUKWMWOCUMUNQWODIUOWPCDUP
      SRWQWSCWQWLWHMZVTKZWSWOXGDWLWDUQZWMWNXFVTWKWLWHURUSUTXGXFFKZXFVSKZLZNWCWE
      LZNWSXFFVSVAXIWCXKXLWDWHCPXAVDXJWEXJWLVRKZWEXJXMWHHKXAWLWHVRHXHXAVBVEWDAV
      FRVGVHWCWEVITRQWFCVJTVKWJWHAVNWGWHAXAVLCWHAVMRWHWAXAVOSVP $.
      $( [21-Jan-2015] $)
  $}

  $( The power class of a set is a set.  (Contributed by SF, 21-Jan-2015.) $)
  pwexg $p |- ( A e. V -> ~P A e. _V ) $=
    ( wcel cpw cssetk cpw1 cvv cxpk cdif cimak ccompl dfpw2 ssetkex pw1exg vvex
    c1c xpkexg sylancl difexg sylancr 1cex imakexg complexg syl syl5eqel ) ABCZ
    ADEAFZGHZIZPJZKZGALUFUJGCZUKGCUFUIGCZPGCULUFEGCUHGCZUMMUFUGGCGGCUNABNOUGGGG
    QREUHGGSTUAUIPGGUBRUJGUCUDUE $.
    $( [21-Jan-2015] $)

  ${
    pwex.1 $e |- A e. _V $.
    $( The power class of a set is a set.  (Contributed by SF, 21-Jan-2015.) $)
    pwex $p |- ~P A e. _V $=
      ( cvv wcel cpw pwexg ax-mp ) ACDAECDBACFG $.
      $( [21-Jan-2015] $)
  $}

  ${
    $d A x y z $.
    $( A class of singletons is equal to the unit power class of its union.
       (Contributed by SF, 26-Jan-2015.) $)
    eqpw1uni $p |- ( A C_ 1c -> A = ~P1 U. A ) $=
      ( vx vy vz c1c wss cuni cpw1 cv wcel ssel wi csn wceq wb el1c eleq2 sylbi
      wex eleq1 pw1ss1c sseli a1i wel wrex vex snid rspcev weq elsn sneq eleq1d
      mpan2 biimprcd imbi1d imbi12d mpbiri exlimiv syli rexlimdv impbid2 eluni2
      syl6bbr snelpw1 syl6bb bibi12d syl5ibrcom exlimdv syl5bi pm5.21ndd eqrdv
      ) AEFZBAAGZHZVLBIZEJZVOAJZVOVNJZAEVOKZVRVPLVLVNEVOVMUAUBUCVPVOCIZMZNZCSVL
      VQVROZCVOPVLWBWCCVLWCWBWAAJZVTVMJZOVLWDCBUDZBAUEZWEVLWDWGWDVTWAJZWGVTCUFU
      GWFWHBWAAVOWAVTQUHUMVLWFWDBAVQVLVPWFWDLZVSVPVODIZMZNZDSVQWILZDVOPWLWMDWLW
      MWKAJZVTWKJZWDLZLWOWDWNWOCDUIZWDWNOCWJUJWQWAWKAVTWJUKULRUNWLVQWNWIWPVOWKA
      TWLWFWOWDVOWKVTQUOUPUQURRUSUTVABVTAVBVCWBVQWDVRWEVOWAATWBVRWAVNJWEVOWAVNT
      VTVMVDVEVFVGVHVIVJVK $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d A x $.  $d A y $.  $d B x $.  $d B y $.  $d C x $.  $d C y $.  $d x y $.
    pw1equn.1 $e |- A e. _V $.
    pw1equn.2 $e |- B e. _V $.
    $( A condition for a unit power class to equal a union.  (Contributed by
       SF, 26-Jan-2015.) $)
    pw1equn $p |- ( ~P1 C = ( A u. B ) <->
        E. x E. y ( C = ( x u. y ) /\ A = ~P1 x /\ B = ~P1 y ) ) $=
      ( cpw1 cun wceq cv w3a wex cuni c1c wss mpbiri eqeq2d wb pw1eq unipw1 syl
      unieq syl5eqr ssun1 sseq2 pw1ss1c syl6ss eqpw1uni ssun2 wa uneq12 syl6eqr
      uniex uniun adantr adantl 3anbi123d spc2ev syl3anc pw1un eqeqan12d 3impb
      exlimivv impbii ) EHZCDIZJZEAKZBKZIZJZCVIHZJZDVJHZJZLZBMAMZVHEVGNZJZCCNZH
      ZJZDDNZHZJZVRVHEVFNVSEUAVFVGUCUDVHCOPWCVHCVFOVHCVFPCVGPCDUEVFVGCUFQEUGZUH
      CUIUBVHDOPWFVHDVFOVHDVFPDVGPDCUJVFVGDUFQWGUHDUIUBVQVTWCWFLABWAWDCFUNDGUNV
      IWAJZVJWDJZUKZVLVTVNWCVPWFWJVKVSEWJVKWAWDIVSVIWAVJWDULCDUOUMRWHVNWCSWIWHV
      MWBCVIWATRUPWIVPWFSWHWIVOWEDVJWDTRUQURUSUTVQVHABVQVHVKHZVMVOIZJZVIVJVAVLV
      NVPVHWMSVLVNVPUKVFWKVGWLEVKTCVMDVOULVBVCQVDVE $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d A x y c $.  $d B x y c $.  $d C x y c $.
    pw1eqadj.1 $e |- A e. _V $.
    pw1eqadj.2 $e |- B e. _V $.
    $( A condition for a unit power class to work out to an adjunction.
       (Contributed by SF, 26-Jan-2015.) $)
    pw1eqadj $p |- ( ~P1 C = ( A u. { B } ) <->
       E. x E. y ( C = ( x u. { y } ) /\ A = ~P1 x /\ B = { y } ) ) $=
      ( cpw1 csn cun wceq cv wex cuni c1c wcel mpbiri wss eqeq2d wb unieq uniun
      w3a unipw1 3eqtr3g unisn pw1ss1c ssun2 snid sselii eleq2 sseldi vex sneqi
      eqcomi id sneqd 3eqtr4a exlimiv sylbi syl syl5eq uneq2d eqtrd ssun1 sseq2
      el1c syl6ss eqpw1uni uniex wa uneq12 sylan2 pw1eq adantr adantl 3anbi123d
      spc2ev syl3anc pw1un pw1sn uneq2i eqtri eqeqan12d 3impb exlimivv impbii
      sneq ) EHZCDIZJZKZEALZBLZIZJZKZCWMHZKZDWOKZUCZBMAMZWLECNZDNZIZJZKZCXCHZKZ
      DXEKZXBWLEXCWJNZJZXFWLWINWKNEXLWIWKUAEUDCWJUBUEWLXKXEXCWLXKDXEDGUFWLDOPZX
      JWLWIODEUGZWLDWIPDWKPWJWKDWJCUHDGUIUJWIWKDUKQULXMDWMIZKZAMXJADVGXPXJAXPXO
      XONZIZDXEXRXOXQWMWMAUMUFUNUOXPUPXPXDXQDXOUAUQURUSUTVAZVBVCVDWLCORXIWLCWIO
      WLCWIRCWKRCWJVEWIWKCVFQXNVHCVIVAXSXAXGXIXJUCABXCXDCFVJDGVJWMXCKZWNXDKZVKZ
      WQXGWSXIWTXJYBWPXFEYAXTWOXEKWPXFKWNXDWHZWMXCWOXEVLVMSXTWSXITYAXTWRXHCWMXC
      VNSVOYAWTXJTXTYAWOXEDYCSVPVQVRVSXAWLABXAWLWPHZWRWOIZJZKZYDWRWOHZJYFWMWOVT
      YHYEWRWNBUMWAWBWCWQWSWTWLYGTWQWSWTVKWIYDWKYFEWPVNWTWSWJYEKWKYFKDWOWHCWRWJ
      YEVLVMWDWEQWFWG $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Alternate definition of existential uniqueness in terms of abstraction.
       (Contributed by SF, 29-Jan-2015.) $)
    dfeu2 $p |- ( E! x ph <-> { x | ph } e. 1c ) $=
      ( vy weq wb wal wex cab cv csn wceq weu c1c wcel abbi df-sn eqeq2i bitr4i
      exbii df-eu el1c 3bitr4i ) ABCDZEBFZCGABHZCIZJZKZCGABLUEMNUDUHCUDUEUCBHZK
      UHAUCBOUGUIUEBUFPQRSABCTCUEUAUB $.
      $( [29-Jan-2015] $)
  $}


  ${
    $d x y $.  $d ph y $.
    $( If there is a unique object satisfying a property ` ph ` , then the set
       of all elements that satisfy ` ph ` exists.  (Contributed by SF,
       16-Jan-2015.) $)
    euabex $p |- ( E! x ph -> { x | ph } e. _V ) $=
      ( weu cab c1c wcel cvv dfeu2 elex sylbi ) ABCABDZEFKGFABHKEIJ $.
      $( [16-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    sspw1.1 $e |- A e. _V $.
    $( A condition for being a subclass of a unit power class.  Corollary 2 of
       theorem IX.6.14 of [Rosser] p. 255.  (Contributed by SF, 3-Feb-2015.) $)
    sspw1 $p |- ( A C_ ~P1 B <-> E. x ( x C_ B /\ A = ~P1 x ) ) $=
      ( cpw1 wss cv wceq wa wex cuni uniss unipw1 syl6sseq c1c pw1ss1c eqpw1uni
      sstr mpan2 sseq1 uniex pw1eq eqeq2d anbi12d spcev syl2anc syl5ibr impcom
      syl pw1ss exlimiv impbii ) BCEZFZAGZCFZBUOEZHZIZAJZUNBKZCFZBVAEZHZUTUNVAU
      MKCBUMLCMNUNBOFZVDUNUMOFVECPBUMORSBQUIUSVBVDIAVABDUAUOVAHZUPVBURVDUOVACTV
      FUQVCBUOVAUBUCUDUEUFUSUNAURUPUNUPUNURUQUMFUOCUJBUQUMTUGUHUKUL $.
      $( [3-Feb-2015] $)
  $}


  ${
    $d A x $.
    sspw12.1 $e |- A e. _V $.
    $( A set is a subset of cardinal one iff it is the unit power class of some
       other set.  (Contributed by SF, 17-Mar-2015.) $)
    sspw12 $p |- ( A C_ 1c <-> E. x A = ~P1 x ) $=
      ( c1c wss cv cpw1 wceq wex eqpw1uni uniex pw1eq eqeq2d spcev syl pw1ss1c
      cuni sseq1 mpbiri exlimiv impbii ) BDEZBAFZGZHZAIZUBBBQZGZHZUFBJUEUIAUGBC
      KUCUGHUDUHBUCUGLMNOUEUBAUEUBUDDEUCPBUDDRSTUA $.
      $( [17-Mar-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Definite description binder (inverted iota)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c iota $.
  $( Extend class notation with Russell's definition description binder
     (inverted iota). $)
  cio $a class ( iota x ph ) $.

  ${
    $d w x z $.  $d ph w z $.  $d ph w y $.  $d x y $.
    $( Soundness justification theorem for ~ df-iota .  (Contributed by Andrew
       Salmon, 29-Jun-2011.) $)
    iotajust $p |- U. { y | { x | ph } = { y } } =
       U. { z | { x | ph } = { z } } $=
      ( vw cab cv csn wceq sneq eqeq2d cbvabv eqtri unieqi ) ABFZCGZHZIZCFZODGZ
      HZIZDFZSOEGZHZIZEFUCRUFCEPUDIQUEOPUDJKLUFUBEDUDTIUEUAOUDTJKLMN $.
      $( [12-Jul-2011] $) $( [29-Jun-2011] $)
  $}

  ${
    $d y x $.  $d y ph $.
    $( Define Russell's definition description binder, which can be read as
       "the unique ` x ` such that ` ph ` ," where ` ph ` ordinarily contains
       ` x ` as a free variable.  Our definition is meaningful only when there
       is exactly one ` x ` such that ` ph ` is true (see ~ iotaval );
       otherwise, it evaluates to the empty set (see ~ iotanul ).  Russell used
       the inverted iota symbol ` iota ` to represent the binder. $)
    df-iota $a |- ( iota x ph ) = U. { y | { x | ph } = { y } } $.
  $}

  ${
    $d y x $.  $d y ph $.
    $( Alternate definition for descriptions.  Definition 8.18 in [Quine]
       p. 56.  (Contributed by Andrew Salmon, 30-Jun-2011.) $)
    dfiota2 $p |- ( iota x ph ) = U. { y | A. x ( ph <-> x = y ) } $=
      ( cio cab cv csn wceq cuni wb wal df-iota df-sn eqeq2i abbi bitr4i unieqi
      abbii eqtri ) ABDABEZCFZGZHZCEZIABFUAHZJBKZCEZIABCLUDUGUCUFCUCTUEBEZHUFUB
      UHTBUAMNAUEBOPRQS $.
      $( [12-Jul-2011] $) $( [30-Jun-2011] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Bound-variable hypothesis builder for the ` iota ` class.  (Contributed
       by Andrew Salmon, 11-Jul-2011.)  (Revised by Mario Carneiro,
       15-Oct-2016.) $)
    nfiota1 $p |- F/_ x ( iota x ph ) $=
      ( vy cio cv wceq wb wal cab cuni dfiota2 nfaba1 nfuni nfcxfr ) BABDABECEF
      GZBHCIZJABCKBPOBCLMN $.
  $}

  ${
    $d z ps $.  $d z ph $.  $d x z $.  $d y z $.
    nfiotad.1 $e |- F/ y ph $.
    nfiotad.2 $e |- ( ph -> F/ x ps ) $.
    $( Deduction version of ~ nfiota .  (Contributed by NM, 18-Feb-2013.) $)
    nfiotad $p |- ( ph -> F/_ x ( iota y ps ) ) $=
      ( vz cio cv wceq wb wal cab cuni dfiota2 nfv wn wa wnf adantr wnfc adantl
      nfcvf nfcvd nfeqd nfbid nfald2 nfabd nfunid nfcxfrd ) ACBDHBDIZGIZJZKZDLZ
      GMZNBDGOACUPAUOCGAGPAUNCDEACIUKJCLQZRZBUMCABCSUQFTURCUKULUQCUKUAACDUCUBUR
      CULUDUEUFUGUHUIUJ $.
  $}

  ${
    $d w z ph $.  $d w x z $.  $d w y z $.
    nfiota.1 $e |- F/ x ph $.
    $( Bound-variable hypothesis builder for the ` iota ` class.  (Contributed
       by NM, 23-Aug-2011.) $)
    nfiota $p |- F/_ x ( iota y ph ) $=
      ( cio wnfc wtru nftru wnf a1i nfiotad trud ) BACEFGABCCHABIGDJKL $.
  $}

  ${
    $d z w x $.  $d z w y $.  $d z w ph $.  $d z w ps $.
    cbviota.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    cbviota.2 $e |- F/ y ph $.
    cbviota.3 $e |- F/ x ps $.
    $( Change bound variables in a description binder.  (Contributed by Andrew
       Salmon, 1-Aug-2011.) $)
    cbviota $p |- ( iota x ph ) = ( iota y ps ) $=
      ( vw vz cv wceq wb wal cab cuni cio wsb nfv nfbi equequ1 nfs1v cbval nfsb
      sbequ12 bibi12d sbequ sbie syl6bb bitri abbii unieqi dfiota2 3eqtr4i ) AC
      JZHJZKZLZCMZHNZOBDJZUOKZLZDMZHNZOACPBDPUSVDURVCHURACIQZIJZUOKZLZIMVCUQVHC
      IUQIRVEVGCACIUAVGCRSUNVFKAVEUPVGACIUDCIHTUEUBVHVBIDVEVGDACIDFUCVGDRSVBIRV
      FUTKZVEBVGVAVIVEACDQBAIDCUFABCDGEUGUHIDHTUEUBUIUJUKACHULBDHULUM $.
  $}

  ${
    $d ph y $.  $d ps x $.
    cbviotav.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change bound variables in a description binder.  (Contributed by Andrew
       Salmon, 1-Aug-2011.) $)
    cbviotav $p |- ( iota x ph ) = ( iota y ps ) $=
      ( nfv cbviota ) ABCDEADFBCFG $.
      $( [1-Aug-2011] $)
  $}

  ${
    $d w z ph $.  $d w z x $.  $d w z y $.
    sb8iota.1 $e |- F/ y ph $.
    $( Variable substitution in description binder.  Compare ~ sb8eu .
       (Contributed by NM, 18-Mar-2013.) $)
    sb8iota $p |- ( iota x ph ) = ( iota y [ y / x ] ph ) $=
      ( vz vw cv wceq wb wal cab cuni wsb cio nfv sb8 sbbi nfsb nfxfr dfiota2
      eqsb3 nfbi sbequ cbval equsb3 sblbis albii 3bitri abbii unieqi 3eqtr4i )
      ABGEGZHZIZBJZEKZLABCMZCGULHZIZCJZEKZLABNUQCNUPVAUOUTEUOUNBFMZFJUNBCMZCJUT
      UNBFUNFOPVBVCFCVBABFMZUMBFMZICAUMBFQVDVECABFCDRVEFGULHZCFBULUAVFCOSUBSVCF
      OUNFCBUCUDVCUSCUMURABCCBEUEUFUGUHUIUJABETUQCETUK $.
  $}

  ${
    $d y z $.  $d x z $.  $d ph z $.
    $( Equality theorem for descriptions.  (Contributed by Andrew Salmon,
       30-Jun-2011.) $)
    iotaeq $p |- ( A. x x = y -> ( iota x ph ) = ( iota y ph ) ) $=
      ( vz cv wceq wal cab csn cuni cio wcel drsb1 df-clab 3bitr4g eqrdv eqeq1d
      wsb abbidv df-iota unieqd 3eqtr4g ) BECEFBGZABHZDEZIZFZDHZJACHZUFFZDHZJAB
      KACKUCUHUKUCUGUJDUCUDUIUFUCDUDUIUCABDRACDRUEUDLUEUILABCDMADBNADCNOPQSUAAB
      DTACDTUB $.
  $}

  ${
    $d ph z $.  $d ps z $.  $d x y z $.
    $( Equivalence theorem for descriptions.  (Contributed by Andrew Salmon,
       30-Jun-2011.) $)
    iotabi $p |- ( A. x ( ph <-> ps ) -> ( iota x ph ) = ( iota x ps ) ) $=
      ( vz wb wal cab cv csn wceq cuni abbi biimpi eqeq1d abbidv unieqd df-iota
      cio 3eqtr4g ) ABECFZACGZDHIZJZDGZKBCGZUBJZDGZKACRBCRTUDUGTUCUFDTUAUEUBTUA
      UEJABCLMNOPACDQBCDQS $.

    $( Part of Theorem 8.17 in [Quine] p. 56.  This theorem serves as a lemma
       for the fundamental property of iota.  (Contributed by Andrew Salmon,
       11-Jul-2011.) $)
    uniabio $p |- ( A. x ( ph <-> x = y ) -> U. { x | ph } = y ) $=
      ( cv wceq wb wal cab cuni csn abbi biimpi df-sn syl6eqr unieqd vex syl6eq
      unisn ) ABDCDZEZFBGZABHZISJZISUAUBUCUAUBTBHZUCUAUBUDEATBKLBSMNOSCPRQ $.

    $( Theorem 8.19 in [Quine] p. 57.  This theorem is the fundamental property
       of iota.  (Contributed by Andrew Salmon, 11-Jul-2011.) $)
    iotaval $p |- ( A. x ( ph <-> x = y ) -> ( iota x ph ) = y ) $=
      ( vz cv wceq wb wal cio cab cuni dfiota2 cvv wcel wa sbeqalb equcomi syl6
      wi vex ax-mp ex equequ2 eqcoms bibi2d biimpd alimdv com12 alrimiv uniabio
      impbid syl syl5eq ) ABEZCEZFZGZBHZABIAUNDEZFZGZBHZDJKZUOABDLURVBUSUOFZGZD
      HVCUOFURVEDURVBVDURVBVDUOMNZURVBOZVDSCTVFVGUOUSFVDABUOUSMPCDQRUAUBVDURVBV
      DUQVABVDUQVAVDUPUTAUPUTGUOUSCDBUCUDUEUFUGUHUKUIVBDCUJULUM $.

    $( Equivalence between two different forms of ` iota ` .  (Contributed by
       Andrew Salmon, 12-Jul-2011.) $)
    iotauni $p |- ( E! x ph -> ( iota x ph ) = U. { x | ph } ) $=
      ( vz weu cv wceq wb wal wex cio cuni df-eu iotaval uniabio eqtr4d exlimiv
      cab sylbi ) ABDABECEZFGBHZCIABJZABQKZFZABCLTUCCTUASUBABCMABCNOPR $.

    $( Equivalence between two different forms of ` iota ` .  (Contributed by
       Mario Carneiro, 24-Dec-2016.) $)
    iotaint $p |- ( E! x ph -> ( iota x ph ) = |^| { x | ph } ) $=
      ( weu cio cab cuni cint iotauni wceq uniintab biimpi eqtrd ) ABCZABDABEZF
      ZNGZABHMOPIABJKL $.

    $( Property of iota.  (Contributed by NM, 23-Aug-2011.)  (Revised by Mario
       Carneiro, 23-Dec-2016.) $)
    iota1 $p |- ( E! x ph -> ( ph <-> ( iota x ph ) = x ) ) $=
      ( vz weu cv wceq wb wal wex cio df-eu iotaval eqeq2d bitr4d eqcom exlimiv
      sp syl6bb sylbi ) ABDABEZCEZFZGZBHZCIAABJZTFZGZABCKUDUGCUDATUEFZUFUDAUBUH
      UCBQUDUEUATABCLMNTUEORPS $.


    $( Theorem 8.22 in [Quine] p. 57.  This theorem is the result if there
       isn't exactly one ` x ` that satisfies ` ph ` .  (Contributed by Andrew
       Salmon, 11-Jul-2011.) $)
    iotanul $p |- ( -. E! x ph -> ( iota x ph ) = (/) ) $=
      ( vz weu cv wceq wb wal wex cio c0 df-eu wn cuni dfiota2 alnex ax-1 eqidd
      cab impbid1 con2bid alimi abbi dfnul2 syl6eqr sylbir unieqd syl6eq syl5eq
      sylib uni0 sylnbi ) ABDABECEZFGBHZCIZABJZKFABCLUOMZUPUNCSZNZKABCOUQUSKNKU
      QURKUQUNMZCHZURKFUNCPVAURUMUMFZMZCSZKVAUNVCGZCHURVDFUTVECUTVBUNUTVBUTUTVB
      QUTUMRTUAUBUNVCCUCUJCUDUEUFUGUKUHUIUL $.

    $( The ` iota ` class is a subset of the union of all elements satisfying
       ` ph ` .  (Contributed by Mario Carneiro, 24-Dec-2016.) $)
    iotassuni $p |- ( iota x ph ) C_ U. { x | ph } $=
      ( weu cio cab cuni wss iotauni eqimss syl wn c0 0ss iotanul sseq1d mpbiri
      wceq pm2.61i ) ABCZABDZABEFZGZSTUAQUBABHTUAIJSKZUBLUAGUAMUCTLUAABNOPR $.

    $( Theorem 8.23 in [Quine] p. 58.  This theorem proves the existence of the
       ` iota ` class under our definition.  (Contributed by Andrew Salmon,
       11-Jul-2011.) $)
    iotaex $p |- ( iota x ph ) e. _V $=
      ( vz weu cio cvv wcel cv wceq wb wal wex iotaval eqcomd eximi df-eu isset
      3imtr4i wn c0 iotanul 0ex syl6eqel pm2.61i ) ABDZABEZFGZABHCHZIJBKZCLUHUF
      IZCLUEUGUIUJCUIUFUHABCMNOABCPCUFQRUESUFTFABUAUBUCUD $.

    $( Theorem *14.22 in [WhiteheadRussell] p. 190.  (Contributed by Andrew
       Salmon, 12-Jul-2011.) $)
    iota4 $p |- ( E! x ph -> [. ( iota x ph ) / x ]. ph ) $=
      ( vz weu weq wb wal wex cio wsbc df-eu wsb bi2 alimi sb2 syl wceq iotaval
      wi cv eqcomd dfsbcq2 mpbid exlimiv sylbi ) ABDABCEZFZBGZCHABABIZJZABCKUHU
      JCUHABCLZUJUHUFASZBGUKUGULBAUFMNABCOPUHCTZUIQUKUJFUHUIUMABCRUAABCUIUBPUCU
      DUE $.
  $}

  $( Theorem *14.23 in [WhiteheadRussell] p. 191.  (Contributed by Andrew
     Salmon, 12-Jul-2011.) $)
  iota4an $p |- ( E! x ( ph /\ ps )
            -> [. ( iota x ( ph /\ ps ) ) / x ]. ph ) $=
    ( wa weu cio wsbc iota4 wi cvv wcel iotaex simpl sbcth ax-mp wb sbcimg mpbi
    syl ) ABDZCETCTCFZGZACUAGZTCHTAIZCUAGZUBUCIZUAJKZUETCLZUDCUAJABMNOUGUEUFPUH
    TACUAJQORS $.

  ${
    $d x y A $.  $d x V $.  $d x ph $.  $d y ps $.
    iota5.1 $e |- ( ( ph /\ A e. V ) -> ( ps <-> x = A ) ) $.
    $( A method for computing iota.  (Contributed by NM, 17-Sep-2013.) $)
    iota5 $p |- ( ( ph /\ A e. V ) -> ( iota x ps ) = A ) $=
      ( vy wcel wa cv wceq wb wal cio alrimiv wi eqeq2 bibi2d albidv imbi12d
      iotaval vtoclg adantl mpd ) ADEHZIZBCJZDKZLZCMZBCNZDKZUFUICFOUEUJULPZABUG
      GJZKZLZCMZUKUNKZPUMGDEUNDKZUQUJURULUSUPUICUSUOUHBUNDUGQRSUNDUKQTBCGUAUBUC
      UD $.
  $}

  ${
    $d x ph $.
    iotabidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for iota.  (Contributed by NM,
       20-Aug-2011.) $)
    iotabidv $p |- ( ph -> ( iota x ps ) = ( iota x ch ) ) $=
      ( wb wal cio wceq alrimiv iotabi syl ) ABCFZDGBDHCDHIAMDEJBCDKL $.
  $}

  ${
    iotabii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building deduction rule for iota.  (Contributed by Mario
       Carneiro, 2-Oct-2015.) $)
    iotabii $p |- ( iota x ph ) = ( iota x ps ) $=
      ( wb cio wceq iotabi mpg ) ABEACFBCFGCABCHDI $.
  $}

  $( Membership law for descriptions.

     This can useful for expanding an unbounded iota-based definition (see
     ~ df-iota ).  If you have a bounded iota-based definition, ~ riotacl2 may
     be useful.

     (Contributed by Andrew Salmon, 1-Aug-2011.) $)
  iotacl $p |- ( E! x ph -> ( iota x ph ) e. { x | ph } ) $=
    ( weu cio wsbc cab wcel iota4 df-sbc sylib ) ABCABABDZEKABFGABHABKIJ $.


  $( Membership law for descriptions.  (Contributed by ?who?, 21-Aug-2011.) $)
  reiotacl2 $p |- ( E! x e. A ph
                  -> ( iota x ( x e. A /\ ph ) ) e. { x e. A | ph } ) $=
    ( wreu cv wcel wa cio cab crab weu df-reu iotacl sylbi df-rab syl6eleqr ) A
    BCDZBECFAGZBHZRBIZABCJQRBKSTFABCLRBMNABCOP $.
    $( [21-Aug-2011] $)

  ${
    $d x A $.
    $( Membership law for descriptions.  (Contributed by ?who?,
       21-Aug-2011.) $)
    reiotacl $p |- ( E! x e. A ph
                    -> ( iota x ( x e. A /\ ph ) ) e. A ) $=
      ( wreu crab cv wcel wa cio wss ssrab2 a1i reiotacl2 sseldd ) ABCDZABCEZCB
      FCGAHBIPCJOABCKLABCMN $.
      $( [21-Aug-2011] $)
  $}


  ${
    $d x y $.  $d y B $.  $d y ps $.
    iota2df.1 $e |- ( ph -> B e. V ) $.
    iota2df.2 $e |- ( ph -> E! x ps ) $.
    iota2df.3 $e |- ( ( ph /\ x = B ) -> ( ps <-> ch ) ) $.
    ${
      iota2df.4 $e |- F/ x ph $.
      iota2df.5 $e |- ( ph -> F/ x ch ) $.
      iota2df.6 $e |- ( ph -> F/_ x B ) $.
      $( A condition that allows us to represent "the unique element such that
         ` ph ` " with a class expression ` A ` .  (Contributed by NM,
         30-Dec-2014.) $)
      iota2df $p |- ( ph -> ( ch <-> ( iota x ps ) = B ) ) $=
        ( wnfc cio wceq wb wnf cv wal alrimi wi wcel nfiota1 a1i nfeqd nfbid wa
        simpr eqeq2d bibi12d ex weu iota1 syl vtoclgft syl221anc ) ADEMCBDNZEOZ
        PZDQDRZEOZBUQUTOZPZUSPZUAZDSVCDSEFUBUSLACURDKADUQEDUQMABDUCUDLUEUFAVEDJ
        AVAVDAVAUGZBCVBURIVFUTEUQAVAUHUIUJUKTAVCDJABDULVCHBDUMUNTGVCUSDEFUOUP
        $.
    $}

    $d x B $.  $d x ph $.  $d x ch $.
    $( A condition that allows us to represent "the unique element such that
       ` ph ` " with a class expression ` A ` .  (Contributed by NM,
       30-Dec-2014.) $)
    iota2d $p |- ( ph -> ( ch <-> ( iota x ps ) = B ) ) $=
      ( nfv nfvd nfcvd iota2df ) ABCDEFGHIADJACDKADELM $.
  $}

  ${
    $d A x $.  $d ps x $.
    iota2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( The unique element such that ` ph ` .  (Contributed by Jeff Madsen,
       1-Jun-2011.)  (Revised by Mario Carneiro, 23-Dec-2016.) $)
    iota2 $p |- ( ( A e. B /\ E! x ph ) -> ( ps <-> ( iota x ph ) = A ) ) $=
      ( wcel cvv weu cio wceq wb elex wa simpl simpr cv adantl nfv nfeu1 nfcvd
      nfan nfvd iota2df sylan ) DEGDHGZACIZBACJDKLDEMUFUGNZABCDHUFUGOUFUGPCQDKA
      BLUHFRUFUGCUFCSACTUBUHBCUCUHCDUAUDUE $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    reiota2.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( A condition allowing us to represent "the unique element in ` A ` such
       that ` ph ` " with a class expression ` B ` .  (Contributed by Scott
       Fenton, 7-Jan-2018.) $)
    reiota2 $p |- ( ( B e. A /\ E! x e. A ph ) ->
      ( ps <-> ( iota x ( x e. A /\ ph ) ) = B ) ) $=
      ( wcel wreu wa cv cio wceq simpl biantrurd weu df-reu eleq1 anbi12d iota2
      wb sylan2b bitrd ) EDGZACDHZIZBUCBIZCJZDGZAIZCKELZUEUCBUCUDMNUDUCUICOUFUJ
      TACDPUIUFCEDUGELUHUCABUGEDQFRSUAUB $.
  $}

  $( A class abstraction with a unique member can be expressed as a singleton.
     (Contributed by Mario Carneiro, 23-Dec-2016.) $)
  sniota $p |- ( E! x ph -> { x | ph } = { ( iota x ph ) } ) $=
    ( weu cv cab wcel cio csn wb wal wceq nfeu1 iota1 eqcom syl6bb abid 3bitr4g
    vex elsnc alrimi nfab1 nfiota1 nfsn cleqf sylibr ) ABCZBDZABEZFZUGABGZHZFZI
    ZBJUHUKKUFUMBABLUFAUGUJKZUIULUFAUJUGKUNABMUJUGNOABPUGUJBRSQTBUHUKABUABUJABU
    BUCUDUE $.

  ${
    $( The ` iota ` operation using the ` if ` operator.  (Contributed by Scott
       Fenton, 6-Oct-2017.) $)
    dfiota3 $p |- ( iota x ph ) = if ( E! x ph , U. { x | ph } , (/) ) $=
      ( weu cio cab cuni cif wceq iotauni iftrue eqtr4d iotanul iffalse pm2.61i
      c0 wn ) ABCZABDZQABEFZOGZHQRSTABIQSOJKQPROTABLQSOMKN $.
  $}

  ${
    $d A y z $.  $d x y z $.  $d ph z $.
    $( Class substitution within a description binder.  (Contributed by Scott
       Fenton, 6-Oct-2017.) $)
    csbiotag $p |- ( A e. V ->
        [_ A / x ]_ ( iota y ph ) = ( iota y [. A / x ]. ph ) ) $=
      ( vz cv cio csb wsb wceq csbeq1 dfsbcq2 iotabidv eqeq12d vex nfs1v nfiota
      wsbc weq sbequ12 csbief vtoclg ) BFGZACHZIZABFJZCHZKBDUEIZABDSZCHZKFDEUDD
      KZUFUIUHUKBUDDUELULUGUJCABFDMNOBUDUEUHFPUGBCABFQRBFTAUGCABFUANUBUC $.
  $}

  ${
    $( Alternate definition of iota in terms of ` 1c ` .  (Contributed by SF,
       29-Jan-2015.) $)
    dfiota4 $p |- ( iota x ph ) = U. U. ( 1c i^i { { x | ph } } ) $=
      ( weu cio c1c cab csn cin cuni wceq iotauni wss wcel unieqd cvv eqtr4d wn
      dfeu2 c0 uni0 snssi sylbi df-ss incom eqeq1i bitri sylib euabex syl eqtrd
      unisng iotanul notbii disjsn bitr4i biimpi unieqi eqtri syl6eq pm2.61i )
      ABCZABDZEABFZGZHZIZIZJVAVBVCIVGABKVAVFVCVAVFVDIZVCVAVEVDVAVDELZVEVDJZVAVC
      EMZVIABRZVCEUAUBVIVDEHZVDJVJVDEUCVMVEVDVDEUDUEUFUGNVAVCOMVHVCJABUHVCOUKUI
      UJNPVAQZVBSVGABULVNVGSIZIZSVNVFVOVNVESVNVESJZVNVKQVQVAVKVLUMEVCUNUOUPNNVP
      VOSVOSTUQTURUSPUT $.
      $( [29-Jan-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Finite cardinals
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c Nn $. $( Natural cardinals $)
  $c 0c $. $( Cardinal zero $)
  $c +c $. $( Cardinal addition. $)
  $c Fin $. $( Finite sets. $)

  $( Extend the definition of a class to include the set of finite
     cardinals. $)
  cnnc $a class Nn $.

  $( Extend the definition of a class to include cardinal zero. $)
  c0c $a class 0c $.

  $( Extend the definition of a class to include cardinal addition. $)
  cplc $a class ( A +c B ) $.

  $( Extend the definition of a class to include the set of all finite sets. $)
  cfin $a class Fin $.

  $( Define cardinal zero. $)
  df-0c $a |- 0c = { (/) } $.

  ${
    $d A x y z $.  $d B x y z $.
    $( Define cardinal addition.  Definition from [Rosser] p. 275. $)
    df-addc $a |- ( A +c B ) =
      { x | E. y e. A E. z e. B ( ( y i^i z ) = (/) /\ x = ( y u. z ) ) } $.
  $}

  ${
    $d b y $.
    $( Define the finite cardinals.  Definition from [Rosser] p. 275. $)
    df-nnc $a |- Nn = |^| { b | ( 0c e. b /\ A. y e. b ( y +c 1c ) e. b ) } $.
  $}

  $( Define the set of all finite sets.  Definition from [Rosser], p. 417. $)
  df-fin $a |- Fin = U. Nn $.

  ${
    $d A x y z t w $.  $d B x y z t w $.
    $( Alternate definition of cardinal addition to establish stratification.
       (Contributed by SF, 15-Jan-2015.) $)
    dfaddc2 $p |- ( A +c B ) =
( ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 B ) "_k A ) $=
      ( vy vz vx vt vw cv wceq wa wrex cssetk cpw1 wcel copk csn wn snex 3bitri
      wex cplc cin c0 cun cab cins3k cins2k c1c cimak csik csymdif cdif df-addc
      ccompl vex elimak opkex elpw12 anbi1i r19.41v bitr4i exbii df-rex rexcom4
      3bitr4i opkeq1 eleq1d ceqsexv eldif ndisjrelk necon2bbii otkelins3k incom
      elcompl eqeq1i wel wb wal dfcleq elpw141c 19.41v excom otkelins2k elssetk
      elsymdif wo opksnelsik bitri orbi12i bibi12i notbii exnal con2bii anbi12i
      elun bitr2i rexbii abbi2i eqtr4i ) ABUACHZDHZUBZUCIZEHZWTXAUDZIZJZDBKZCAK
      ZEUELUFZLUGZUBUHMMZUIZUNZUFZXKUGZXJUGZLUJZUJZUFZUDZUKZXLMMZUIZULZBMMZUIZA
      UIZECDABUMXIEYHXDYHNWTXDOZYGNZCAKXICYGAXDEUOZUPYJXHCAYJFHZYIOZYENZFYFKZYL
      XAPZPZIZYNJZFTZDBKZXHFYEYFYIWTXDUQZUPYLYFNZYNJZFTYSDBKZFTYOUUAUUDUUEFUUDY
      RDBKZYNJUUEUUCUUFYNDYLBURUSYRYNDBUTVAVBYNFYFVCYSDFBVDVEYTXGDBYTYQYIOZYENZ
      UUGXONZUUGYDNZQZJXGYNUUHFYQYPRZYRYMUUGYEYLYQYIVFVGVHUUGXOYDVIUUIXCUUKXFXA
      WTOZXNNZXAWTUBZUCIZUUIXCUUNUUMXMNZQUUPUUMXMXAWTUQVNUUQUUOUCXAWTDUOZCUOZVJ
      VKVAXAWTXDXNUURUUSYKVLXBUUOUCWTXAVMVOVEXFGEVPZGHZXENZVQZGVRZUUKGXDXEVSUUJ
      UVDUUJYLUVAPZPZPZPZPZIZYLUUGOZYBNZJZFTZGTZUVCQZGTUVDQUUJUVLFYCKYLYCNZUVLJ
      ZFTZUVOFYBYCUUGYQYIUQUPUVLFYCVCUVSUVMGTZFTUVOUVRUVTFUVRUVJGTZUVLJUVTUVQUW
      AUVLGYLVTUSUVJUVLGWAVAVBUVMGFWBVASUVNUVPGUVNUVIUUGOZYBNZUWBXPNZUWBYANZVQZ
      QUVPUVLUWCFUVIUVHRUVJUVKUWBYBYLUVIUUGVFVGVHUWBXPYAWEUWFUVCUWDUUTUWEUVBUWD
      UVGYIOZXKNUVEXDOLNUUTUVGYQYIXKUVFRZUULUUBWCUVEWTXDLUVARZUUSYKWCUVAXDGUOZY
      KWDSUWBXQNZUWBXTNZWFGCVPZGDVPZWFUWEUVBUWKUWMUWLUWNUWKUWGXJNUVEWTOLNUWMUVG
      YQYIXJUWHUULUUBWCUVEWTXDLUWIUUSYKVLUVAWTUWJUUSWDSUWLUVGYQOXSNUVFYPOXRNZUW
      NUVGYQYIXSUWHUULUUBVLUVFYPXRUVERXARWGUWOUVEXAOLNUWNUVEXALUWIUURWGUVAXAUWJ
      UURWDWHSWIUWBXQXTWOUVAWTXAWOVEWJWKSVBUVCGWLSWMWPWNSWQSWQWHWRWS $.
      $( [15-Jan-2015] $)
  $}

  $( The expression at the heart of ~ dfaddc2 is a set.  (Contributed by SF,
     17-Jan-2015.) $)
  addcexlem $p |- ( Ins3_k
            ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) ) e. _V $=
    ( cssetk cins3k cins2k cin c1c cpw1 ccompl csik cun csymdif ssetkex ins3kex
    cimak ins2kex inex 1cex pw1ex imakex complex sikex unex symdifex difex ) AB
    ZACZDZEFZFZMZGZBUECZUDCZAHZHZBZIZJZUHFZFZMUJUIUFUHUDUEAKLZAKNZOUGEPQQZRSLUQ
    USUKUPUEVANULUOUDUTNUNUMAKTTLUAUBURUHVBQQRUC $.
    $( [17-Jan-2015] $)

  $( Equality law for cardinal addition.  (Contributed by SF, 15-Jan-2015.) $)
  addceq1 $p |- ( A = B -> ( A +c C ) = ( B +c C ) ) $=
    ( wceq cssetk cins3k cins2k cin c1c cpw1 cimak ccompl csik cun csymdif cdif
    cplc imakeq2 dfaddc2 3eqtr4g ) ABDEFZEGZHIJJZKLFUBGUAGEMMFNOUCJJKPCJJKZAKUD
    BKACQBCQABUDRACSBCST $.
    $( [15-Jan-2015] $)

  $( Equality law for cardinal addition.  (Contributed by SF, 15-Jan-2015.) $)
  addceq2 $p |- ( A = B -> ( C +c A ) = ( C +c B ) ) $=
    ( wceq cssetk cins3k cins2k cin c1c cpw1 cimak ccompl csik cun csymdif cdif
    cplc pw1eq syl dfaddc2 imakeq2d imakeq1d 3eqtr4g ) ABDZEFZEGZHIJJZKLFUFGUEG
    EMMFNOUGJJKPZAJZJZKZCKUHBJZJZKZCKCAQCBQUDUKUNCUDUJUMUHUDUIULDUJUMDABRUIULRS
    UAUBCATCBTUC $.
    $( [15-Jan-2015] $)

  $( Equality law for cardinal addition.  (Contributed by SF, 15-Jan-2015.) $)
  addceq12 $p |- ( ( A = C /\ B = D ) -> ( A +c B ) = ( C +c D ) ) $=
    ( wceq cplc addceq1 addceq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [15-Jan-2015] $)

  ${
    addceqi.1 $e |- A = B $.
    $( Equality inference for cardinal addition.  (Contributed by SF,
       3-Feb-2015.) $)
    addceq1i $p |- ( A +c C ) = ( B +c C ) $=
      ( wceq cplc addceq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [3-Feb-2015] $)

    $( Equality inference for cardinal addition.  (Contributed by SF,
       3-Feb-2015.) $)
    addceq2i $p |- ( C +c A ) = ( C +c B ) $=
      ( wceq cplc addceq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [3-Feb-2015] $)

    addceqi.2 $e |- C = D $.
    $( Equality inference for cardinal addition.  (Contributed by SF,
       3-Feb-2015.) $)
    addceq12i $p |- ( A +c C ) = ( B +c D ) $=
      ( wceq cplc addceq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
      $( [3-Feb-2015] $)
  $}

  ${
    addceqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for cardinal addition.  (Contributed by SF,
       3-Feb-2015.) $)
    addceq1d $p |- ( ph -> ( A +c C ) = ( B +c C ) ) $=
      ( wceq cplc addceq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [3-Feb-2015] $)

    $( Equality deduction for cardinal addition.  (Contributed by SF,
       3-Feb-2015.) $)
    addceq2d $p |- ( ph -> ( C +c A ) = ( C +c B ) ) $=
      ( wceq cplc addceq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [3-Feb-2015] $)

    addceqd.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for cardinal addition.  (Contributed by SF,
       3-Feb-2015.) $)
    addceq12d $p |- ( ph -> ( A +c C ) = ( B +c D ) ) $=
      ( wceq cplc addceq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
      $( [3-Feb-2015] $)
  $}

  $( Cardinal zero is a set.  (Contributed by SF, 14-Jan-2015.) $)
  0cex $p |- 0c e. _V $=
    ( c0c c0 csn cvv df-0c snex eqeltri ) ABCDEBFG $.
    $( [14-Jan-2015] $)

  $( The cardinal sum of two sets is a set.  (Contributed by SF,
     15-Jan-2015.) $)
  addcexg $p |- ( ( A e. V /\ B e. W ) -> ( A +c B ) e. _V ) $=
    ( wcel wa cplc cssetk cins3k cins2k cin c1c cpw1 ccompl csik cun cvv pw1exg
    cimak imakexg csymdif cdif dfaddc2 addcexlem mpan sylan ancoms syl5eqel
    3syl ) ACEZBDEZFABGHIZHJZKLMMZSNIUMJULJHOOIPUAUNMMSUBZBMZMZSZASZQABUCUKUJUS
    QEZUKURQEZUJUTUKUPQEUQQEZVABDRUPQRUOQEVBVAUDUOUQQQTUEUIURAQCTUFUGUH $.
    $( [15-Jan-2015] $)

  ${
    addcex.1 $e |- A e. _V $.
    addcex.2 $e |- B e. _V $.
    $( The cardinal sum of two sets is a set.  (Contributed by SF,
       25-Jan-2015.) $)
    addcex $p |- ( A +c B ) e. _V $=
      ( cvv wcel cplc addcexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [25-Jan-2015] $)
  $}

  ${
    $d x y z w t $.
    $( Definition of the finite cardinals for existence theorem.  (Contributed
       by SF, 14-Jan-2015.) $)
    dfnnc2 $p |- Nn =
     |^| ( { x | 0c e. x } \
           ( ( SSet_k \ ( SSet_k o._k SI_k
Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k
            ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) ) ) "_k 1c ) ) $=
      ( vy vz vt vw cv wcel c1c wa cssetk cpw1 cimak wn vex wceq copk wex bitri
      cvv exbii cnnc c0c cplc wral cab cint cins3k cins2k cin csik csymdif cdif
      ccompl cun cimagek ccomk df-nnc eldif eleq2 elab wrex csn wel snex opkeq1
      eleq1d ceqsexv elssetk opkeq2 opksnelsik syl6bb opkelimagekg mp2an eqeq2i
      anbi12d dfaddc2 bitr4i anbi12i opkelcok el1c anbi1i 19.41v cxpk sikss1c1c
      wb sseli opkelxpk simprbi syl pm4.71ri anass excom 3bitr4i df-clel notbii
      elimak df-rex rexnal bitr2i con1bii abbi2i inteqi eqtr4i ) UAUBBFZGZCFZHU
      CZXDGZCXDUDZIZBUEZUFUBAFZGZAUEZJJJUGZJUHZUIHKKZLUMUGXPUHXOUHJUJUJUGUNUKXQ
      KKLULXQLZUOZUJZUPZULZHLZULZUFCBUQYDXKXJBYDXDYDGXDXNGZXDYCGZMZIXJXDXNYCURY
      EXEYGXIXMXEAXDBNZXLXDUBUSUTXIYFYFXHMZCXDVAZXIMDFZXFVBZOZYKXDPZYBGZIZDQZCQ
      ZCBVCZYIIZCQYFYJYQYTCYQYLXDPZYBGZYTYOUUBDYLXFVDZYMYNUUAYBYKYLXDVEVFVGUUBU
      UAJGZUUAYAGZMZIYTUUAJYAURUUDYSUUFYIXFXDCNZYHVHUUEXHYKEFZVBZOZYLYKPZXTGZYN
      JGZIZIZDQZEQZUUHXGOZEBVCZIZEQUUEXHUUPUUTEUUPXFUUHPXSGZUUIXDPZJGZIZUUTUUNU
      VDDUUIUUHVDUUJUULUVAUUMUVCUUJUULYLUUIPZXTGUVAUUJUUKUVEXTYKUUIYLVIVFXFUUHX
      SUUGENZVJVKUUJYNUVBJYKUUIXDVEVFVOVGUVAUURUVCUUSUVAUUHXRXFLZOZUURXFSGUUHSG
      UVAUVHWEUUGUVFXFUUHXRSSVLVMXGUVGUUHXFHVPVNVQUUHXDUVFYHVHVRRTUUEUUNDQZUUQD
      YLXDJXTUUCYHVSYKHGZUUNIZDQUUOEQZDQUVIUUQUVKUVLDUVKUUJEQZUUNIUVLUVJUVMUUNE
      YKVTWAUUJUUNEWBVQTUUNUVKDUUNUVJUULIZUUMIUVKUULUVNUUMUULUVJUULUUKHHWCZGZUV
      JXTUVOUUKXSWDWFUVPYLHGUVJYLYKHHUUCDNWGWHWIWJWAUVJUULUUMWKRTUUOEDWLWMREXGX
      DWNWMWOVRRRTYFYODHVAZYRDYBHXDYHWPUVJYOIZDQYPCQZDQUVQYRUVRUVSDUVRYMCQZYOIU
      VSUVJUVTYOCYKVTWAYMYOCWBVQTYODHWQYPCDWLWMRYICXDWQWMXHCXDWRWSWTVRRXAXBXC
      $.
      $( [14-Jan-2015] $)
  $}

  $( The class of all finite cardinals is a set.  (Contributed by SF,
     14-Jan-2015.) $)
  nncex $p |- Nn e. _V $=
    ( vx cnnc c0c cv wcel cab cssetk cins3k cins2k cin c1c cpw1 cimak csik cdif
    ssetkex 1cex pw1ex imakex difex ccompl cun csymdif cimagek ccomk cvv dfnnc2
    cint setswithex addcexlem imagekex sikex cokex intex eqeltri ) BCADEAFZGGGH
    ZGIZJKLZLZMUAHURIUQIGNNHUBUCUTLLMOZUTMZUDZNZUEZOZKMZOZUHUFAUGVHUPVGACUIVFKG
    VEPGVDPVCVBVAUTUJUSKQRRSUKULUMTQSTUNUO $.
    $( [14-Jan-2015] $)

  $( The class of all finite sets is a set.  (Contributed by SF,
     19-Jan-2015.) $)
  finex $p |- Fin e. _V $=
    ( cfin cnnc cuni cvv df-fin nncex uniex eqeltri ) ABCDEBFGH $.
    $( [19-Jan-2015] $)

  ${
    $d A a $.  $d a b $.  $d A b $.  $d a c $.  $d A c $.  $d b c $.  $d M a $.
    $d M b $.  $d M c $.  $d N a $.  $d N b $.  $d N c $.

    $( Membership in cardinal addition.  Theorem X.1.1 of [Rosser] p. 275.
       (Contributed by SF, 16-Jan-2015.) $)
    eladdc $p |- ( A e. ( M +c N ) <->
        E. b e. M E. c e. N ( ( b i^i c ) = (/) /\ A = ( b u. c ) ) ) $=
      ( va cplc wcel cvv cv cin c0 wceq cun wa wrex elex id vex rexlimivw eqeq1
      unex syl6eqel adantl anbi2d 2rexbidv df-addc elab2g pm5.21nii ) ABCGZHAIH
      ZDJZEJZKLMZAULUMNZMZOZECPZDBPZAUJQURUKDBUQUKECUPUKUNUPAUOIUPRULUMDSESUBUC
      UDTTUNFJZUOMZOZECPDBPUSFAUJIUTAMZVBUQDEBCVCVAUPUNUTAUOUAUEUFFDEBCUGUHUI
      $.
      $( [16-Jan-2015] $)
  $}

  ${
    $d A a b $.  $d B a b $.  $d M a b $.  $d N a b $.
    $( Inference form of membership in cardinal addition.  (Contributed by SF,
       26-Jan-2015.) $)
    eladdci $p |- ( ( A e. M /\ B e. N /\ ( A i^i B ) = (/) ) ->
       ( A u. B ) e. ( M +c N ) ) $=
      ( va vb wcel cin c0 wceq w3a cv cun wrex cplc eqid eqeq1d eqeq2d anbi12d
      wa ineq1 uneq1 ineq2 uneq2 rspc2ev 3expa mpanr2 3impa eladdc sylibr ) AC
      GZBDGZABHZIJZKELZFLZHZIJZABMZUOUPMZJZTZFDNECNZUSCDOGUKULUNVCUKULTUNUSUSJZ
      VCUSPUKULUNVDTZVCVBVEAUPHZIJZUSAUPMZJZTEFABCDUOAJZURVGVAVIVJUQVFIUOAUPUAQ
      VJUTVHUSUOAUPUBRSUPBJZVGUNVIVDVKVFUMIUPBAUCQVKVHUSUSUPBAUDRSUEUFUGUHUSCDE
      FUIUJ $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d A n m $.
    $( The empty class is not a member of a successor.  (Contributed by SF,
       14-Jan-2015.) $)
    0nelsuc $p |- -. (/) e. ( A +c 1c ) $=
      ( vn vm c0 c1c cplc wcel cv cin wceq cun wa wrex csn el1c simpr nsyl nrex
      wn wex vex snid ax-mp eqeq1 mtbiri exlimiv sylbi eqcom bitri notbii sylib
      n0i un00 a1i eladdc mtbir ) DAEFGBHZCHZIDJZDUQURKZJZLZCEMZBAMVCBAVCSUQAGV
      BCEUREGZVAVBVDUQDJZURDJZLZSVASVDVFVGVDURUQNZJZBTVFSZBUROVIVJBVIVFVHDJZUQV
      HGVKSUQBUAUBVHUQULUCURVHDUDUEUFUGVEVFPQVGVAVGUTDJVAUQURUMUTDUHUIUJUKUSVAP
      QRUNRDAEBCUOUP $.
      $( [14-Jan-2015] $)
  $}

  $( Cardinal zero is not a successor.  Compare Theorem X.1.2 of [Rosser]
     p. 275.  (Contributed by SF, 14-Jan-2015.) $)
  0cnsuc $p |- ( A +c 1c ) =/= 0c $=
    ( c1c cplc c0c wne wceq wn wcel 0nelsuc csn 0ex df-0c eleqtrri eleq2 mpbiri
    c0 snid mto df-ne mpbir ) ABCZDEUADFZGUBPUAHZAIUBUCPDHPPJDPKQLMUADPNORUADST
    $.
    $( [14-Jan-2015] $)

  ${
    $d x y $.
    $( Cardinal zero is a finite cardinal.  Theorem X.1.4 of [Rosser] p. 276.
       (Contributed by SF, 14-Jan-2015.) $)
    peano1 $p |- 0c e. Nn $=
      ( vx vy c0c cnnc wcel cv c1c cplc wral wa cab cint wal df-nnc eleq2i 0cex
      wi elintab bitri simpl mpgbir ) CDEZCAFZEZBFGHUCEBUCIZJZUDQZAUBCUFAKLZEUG
      AMDUHCBANOUFACPRSUDUETUA $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A a x y $.
    $( The finite cardinals are closed under addition of one.  Theorem X.1.5 of
       [Rosser] p. 276.  (Contributed by SF, 14-Jan-2015.) $)
    peano2 $p |- ( A e. Nn -> ( A +c 1c ) e. Nn ) $=
      ( va vx vy cv c1c cplc cnnc wcel wceq addceq1 eleq1d c0c wa wi wal eleq2i
      wral elintab bitri wel weq rspccv adantl a2i alimi cab df-nnc vex addcex
      cint 1cex 3imtr4i vtoclga ) BEZFGZHIZAFGZHIBAHUOAJUPURHUOAFKLMCEZIZDEZFGZ
      USIZDUSRZNZBCUAZOZCPZVEUPUSIZOZCPZUOHIZUQVGVJCVEVFVIVDVFVIOUTVCVIDUOUSDBU
      BVBUPUSVAUOFKLUCUDUEUFVLUOVECUGUKZIVHHVMUODCUHZQVECUOBUIZSTUQUPVMIVKHVMUP
      VNQVECUPUOFVOULUJSTUMUN $.
      $( [14-Jan-2015] $)
  $}

  $( The successor of a finite cardinal is not zero.  (Contributed by SF,
     14-Jan-2015.) $)
  peano3 $p |- ( A e. Nn -> ( A +c 1c ) =/= 0c ) $=
    ( c1c cplc c0c wne cnnc wcel 0cnsuc a1i ) ABCDEAFGAHI $.
    $( [14-Jan-2015] $)


  ${
    $d A x y z $.
    $( Cardinal zero is a fixed point for cardinal addition.  Theorem X.1.8 of
       [Rosser] p. 276.  (Contributed by SF, 16-Jan-2015.) $)
    addcid1 $p |- ( A +c 0c ) = A $=
      ( vx vy vz c0c cplc c0 csn df-0c addceq2i cv cin wceq cun wa wrex weq 0ex
      wcel ineq2 eqeq1d uneq2 eqeq2d anbi12d in0 biantrur syl6bbr eqeq2i equcom
      rexsn un0 3bitri rexbii eladdc risset 3bitr4i eqriv eqtri ) AEFAGHZFZAEUS
      AIJBUTACKZDKZLZGMZBKZVAVBNZMZOZDUSPZCAPCBQZCAPVEUTSVEASVIVJCAVIVEVAGNZMZB
      CQVJVHVLDGRVBGMZVHVAGLZGMZVLOVLVMVDVOVGVLVMVCVNGVBGVATUAVMVFVKVEVBGVAUBUC
      UDVOVLVAUEUFUGUJVKVAVEVAUKUHBCUIULUMVEAUSCDUNCVEAUOUPUQUR $.
      $( [16-Jan-2015] $)
  $}


  ${
    $d A x y z $.  $d B x y z $.
    $( Cardinal sum commutes.  Theorem X.1.9 of [Rosser] p. 276.  (Contributed
       by SF, 15-Jan-2015.) $)
    addccom $p |- ( A +c B ) = ( B +c A ) $=
      ( vy vz vx cv cin c0 wceq cun wa wrex cab cplc incom eqeq1i uncom anbi12i
      eqeq2i df-addc 2rexbii rexcom bitri abbii 3eqtr4i ) CFZDFZGZHIZEFZUFUGJZI
      ZKZDBLCALZEMUGUFGZHIZUJUGUFJZIZKZCALDBLZEMABNBANUNUTEUNUSDBLCALUTUMUSCDAB
      UIUPULURUHUOHUFUGOPUKUQUJUFUGQSRUAUSCDABUBUCUDECDABTEDCBATUE $.
      $( [15-Jan-2015] $)
  $}

  $( Cardinal zero is a fixed point for cardinal addition.  Theorem X.1.8 of
     [Rosser] p. 276.  (Contributed by SF, 16-Jan-2015.) $)
  addcid2 $p |- ( 0c +c A ) = A $=
    ( c0c cplc addccom addcid1 eqtri ) BACABCABADAEF $.
    $( [16-Jan-2015] $)


  ${
    $( Cardinal one is a finite cardinal.  Theorem X.1.12 of [Rosser] p. 277.
       (Contributed by SF, 16-Jan-2015.) $)
    1cnnc $p |- 1c e. Nn $=
      ( c1c cplc cnnc addcid1 addccom eqtr3i wcel peano1 peano2 ax-mp eqeltri
      c0c ) ALABZCALBAMADALEFLCGMCGHLIJK $.
      $( [16-Jan-2015] $)
  $}

  ${
    $d A a x y $.
    $( The principle of mathematical induction: a set containing cardinal zero
       and closed under the successor operator is a superset of the finite
       cardinals.  Theorem X.1.6 of [Rosser] p. 276.  (Contributed by SF,
       14-Jan-2015.) $)
    peano5 $p |- ( ( A e. V /\ 0c e. A /\
                      A. x e. Nn ( x e. A -> ( x +c 1c ) e. A ) ) ->
            Nn C_ A ) $=
      ( vy wcel cnnc cin cvv c0c cv c1c wi wral wss mpan elin biimpri syl eleq2
      wa cplc nncex inexg peano1 imbi1i impexp bitri inss1 sseli peano2 a1i a2i
      mpand sylbir ralimi2 w3a cab cint df-nnc raleqbi1dv anbi12d elabg biimprd
      wceq 3impib intss1 syl5eqss inss2 syl6ss syl3an ) BCEZFBGZHEZIBEZIVLEZAJZ
      BEZVPKUAZBEZLZAFMVRVLEZAVLMZFBNFHEVKVMUBFBHCUCOIFEZVNVOUDVOWCVNTIFBPQOVTW
      AAFVLVPFEZVTLZVPVLEZVSLZWFWALWGWDVQTZVSLWEWFWHVSVPFBPUEWDVQVSUFUGWFVSWAWF
      VRFEZVSWAWFWDWIVLFVPFBUHUIVPUJRWIVSTZWALWFWAWJVRFBPQUKUMULUNUOVMVOWBUPZFV
      LBWKFIDJZEZVRWLEZAWLMZTZDUQZURZVLADUSWKVLWQEZWRVLNVMVOWBWSVMWSVOWBTZWPWTD
      VLHWLVLVDWMVOWOWBWLVLISWNWAAWLVLWLVLVRSUTVAVBVCVEVLWQVFRVGFBVHVIVJ $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x $.  $d ch x $.  $d ph y $.  $d ps x $.  $d ta x $.  $d th x $.
    $d x y $.
    finds.1 $e |- { x | ph } e. _V $.
    finds.2 $e |- ( x = 0c -> ( ph <-> ps ) ) $.
    finds.3 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds.4 $e |- ( x = ( y +c 1c ) -> ( ph <-> th ) ) $.
    finds.5 $e |- ( x = A -> ( ph <-> ta ) ) $.
    finds.6 $e |- ps $.
    finds.7 $e |- ( y e. Nn -> ( ch -> th ) ) $.
    $( Principle of finite induction over the finite cardinals, using implicit
       substitutions.  The first hypothesis ensures stratification of ` ph ` ,
       the next four set up the substitutions, and the last two set up the base
       case and induction hypothesis.  Compare Theorem X.1.13 of [Rosser]
       p. 277.  (Contributed by SF, 14-Jan-2015.) $)
    finds $p |- ( A e. Nn -> ta ) $=
      ( cnnc wcel cvv c0c elab cab cv c1c cplc wi wral wss 0cex vex 1cex addcex
      mpbir 3imtr4g rgen peano5 mp3an sseli elabg mpbid ) HPQHAFUAZQEPUTHUTRQSU
      TQZGUBZUTQZVBUCUDZUTQZUEZGPUFPUTUGIVABNABFSUHJTULVFGPVBPQCDVCVEOACFVBGUIZ
      KTADFVDVBUCVGUJUKLTUMUNGUTRUOUPUQAEFHPMURUS $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A x n m $.
    $( All naturals are either zero or a successor.  Theorem X.1.7 of [Rosser]
       p. 276.  (Contributed by SF, 14-Jan-2015.) $)
    nnc0suc $p |- ( A e. Nn <->
             ( A = 0c \/ E. x e. Nn A = ( x +c 1c ) ) ) $=
      ( vn vm cnnc wcel c0c wceq cv c1c wrex cssetk cins3k cpw1 cimak cvv eqeq1
      wo rexbidv orbi12d cplc csn cins2k cin ccompl csik cun csymdif cdif df-sn
      cimagek cab vex elimak wb opkelimagekg mp2an dfaddc2 eqeq2i bitr4i rexbii
      copk bitri abbi2i uneq12i unab eqtri snex addcexlem pw1ex imakex imagekex
      1cex nncex unex eqeltrri weq eqid orci addceq1 eqeq2d rspcev mpan2 finds
      olcd a1d peano1 eleq1 mpbiri peano2 syl5ibrcom rexlimiv jaoi impbii ) BEF
      ZBGHZBAIZJUAZHZAEKZRZCIZGHZXBWRHZAEKZRZGGHZGWRHZAEKZRDIZGHZXJWRHZAEKZRZXJ
      JUAZGHZXOWRHZAEKZRZXACDBGUBZLMZLUCZUDJNZNZOUEMYBUCYAUCLUFUFMUGUHYDNNOUIZY
      DOZUKZEOZUGZXFCULZPYIXCCULZXECULZUGYJXTYKYHYLCGUJXECYHXBYHFWQXBVBYGFZAEKX
      EAYGEXBCUMZUNYMXDAEYMXBYFWQOZHZXDWQPFXBPFYMYPUOAUMYNWQXBYFPPUPUQWRYOXBWQJ
      URUSUTVAVCVDVEXCXECVFVGXTYHGVHYGEYFYEYDVIYCJVMVJVJVKVLVNVKVOVPXCXCXGXEXIX
      BGGQXCXDXHAEXBGWRQSTCDVQZXCXKXEXMXBXJGQYQXDXLAEXBXJWRQSTXBXOHZXCXPXEXRXBX
      OGQYRXDXQAEXBXOWRQSTXBBHZXCWPXEWTXBBGQYSXDWSAEXBBWRQSTXGXIGVRVSXJEFZXSXNY
      TXRXPYTXOXOHZXRXOVRXQUUAAXJEADVQWRXOXOWQXJJVTWAWBWCWEWFWDWPWOWTWPWOGEFWGB
      GEWHWIWSWOAEWQEFWOWSWREFWQWJBWREWHWKWLWMWN $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d A b $.  $d A x $.  $d A y $.  $d b x $.  $d b y $.  $d M b $.  $d M y $.
    $d x y $.
    $( Membership in a successor.  Theorem X.1.16 of [Rosser] p. 279.
       (Contributed by SF, 16-Jan-2015.) $)
    elsuc $p |- ( A e. ( M +c 1c ) <->
       E. b e. M E. x e. ~ b A = ( b u. { x } ) ) $=
      ( vy c1c wcel cv cin c0 wceq cun wa wrex bitr4i anbi1i bitri exbii df-rex
      wex cplc csn ccompl eladdc snex ineq2 eqeq1d uneq2 eqeq2d anbi12d ceqsexv
      wel wn disjsn vex elcompl el1c 19.41v excom 3bitr4i rexbii ) BCFUAGDHZEHZ
      IZJKZBVBVCLZKZMZEFNZDCNBVBAHZUBZLZKZAVBUCZNZDCNBCFDEUDVIVODCVCVKKZVHMZETZ
      ATZVJVNGZVMMZATVIVOVRWAAVRVBVKIZJKZVMMZWAVHWDEVKVJUEVPVEWCVGVMVPVDWBJVCVK
      VBUFUGVPVFVLBVCVKVBUHUIUJUKWCVTVMWCADULUMVTVBVJUNVJVBAUOUPOPQRVIVCFGZVHMZ
      ETZVSVHEFSWGVQATZETVSWFWHEWFVPATZVHMWHWEWIVHAVCUQPVPVHAURORVQEAUSQQVMAVNS
      UTVAQ $.
      $( [16-Jan-2015] $)
  $}


  ${
    $d N a x $.  $d A a x $.  $d X a x $.
    elsuci.1 $e |- X e. _V $.
    $( Lemma for ~ ncfinraise .  Take a natural and a disjoint union and
       compute membership in the successor natural.  (Contributed by SF,
       22-Jan-2015.) $)
    elsuci $p |- ( ( A e. N /\ -. X e. A ) ->
       ( A u. { X } ) e. ( N +c 1c ) ) $=
      ( va vx wcel wn wa csn cun cv wceq ccompl wrex c1c elcompl eqeq2d rspcev
      cplc eqid uneq2d mpan2 sylbir compleq uneq1 rexeqbidv sylan2 elsuc sylibr
      sneq ) ABGZCAGHZIACJZKZELZFLZJZKZMZFUPNZOZEBOZUOBPTGUMULUOAURKZMZFANZOZVC
      UMCVFGZVGCADQVHUOUOMZVGUOUAVEVIFCVFUQCMZVDUOUOVJURUNAUQCUKUBRSUCUDVBVGEAB
      UPAMZUTVEFVAVFUPAUEVKUSVDUOUPAURUFRUGSUHFUOBEUIUJ $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A a $.  $d a b $.  $d A b $.  $d a c $.  $d A c $.  $d a d $.  $d A d $.
    $d a e $.  $d A e $.  $d a x $.  $d A x $.  $d B a $.  $d B b $.  $d b c $.
    $d B c $.  $d b d $.  $d B d $.  $d b e $.  $d B e $.  $d b x $.  $d B x $.
    $d C a $.  $d C b $.  $d C c $.  $d c d $.  $d C d $.  $d c e $.  $d C e $.
    $d c x $.  $d C x $.  $d d x $.  $d e x $.

    $( Cardinal addition is associative.  Theorem X.1.11, corollary 1 of
       [Rosser] p. 277.  (Contributed by SF, 17-Jan-2015.) $)
    addcass $p |- ( ( A +c B ) +c C ) = ( A +c ( B +c C ) ) $=
      ( va vb vd vc ve cv cin c0 wceq cun wex wrex bitri exbii rexbii rexcom4
      wa vx cplc wcel ancom anbi2i an12 indir eqeq1i un00 bitr4i 3bitr4i eqeq2i
      indi unass anbi12i anass 3bitr3i ineq1 eqeq1d uneq1 eqeq2d anbi12d anbi2d
      vex unex ceqsexv ineq2 uneq2 2rexbii eladdc df-rex r19.42v r19.41v anbi1i
      3bitr4ri eqriv ) UAABUBZCUBZABCUBZUBZDIZEIZJZKLZFIZWAWBMZLZTZWEGIZJZKLZUA
      IZWEWIMZLZTZTZFNZGCOZEBOZDAOZWBWIJZKLZHIZWBWIMZLZTZWAXCJZKLZWLWAXCMZLZTZT
      ZHNZGCOZEBOZDAOZWLVRUCZWLVTUCZWRXNDEABWQXMGCWDWFWIJZKLZWLWFWIMZLZTZTZXBWA
      XDJZKLZWLWAXDMZLZTZTZWQXMWDXTTZYBTXBYFTZYHTYDYJYKYLYBYHWDWAWIJZKLZXBTZTZX
      BWDYNTZTZYKYLYPWDXBYNTZTYRYOYSWDYNXBUDUEWDXBYNUFPXTYOWDXTYMXAMZKLYOXSYTKW
      AWBWIUGUHYMXAUIUJUEYFYQXBYFWCYMMZKLYQYEUUAKWAWBWIUMUHWCYMUIUJUEUKYAYGWLWA
      WBWIUNULUOWDXTYBUPXBYFYHUPUQWQWGWDWOTZTZFNYDWPUUCFWPWDWGWOTTUUCWDWGWOUPWD
      WGWOUFPQUUBYDFWFWAWBDVDEVDZVEWGWOYCWDWGWKXTWNYBWGWJXSKWEWFWIURUSWGWMYAWLW
      EWFWIUTVAVBVCVFPXMXEXBXKTZTZHNYJXLUUFHXLXBXEXKTTUUFXBXEXKUPXBXEXKUFPQUUEY
      JHXDWBWIUUDGVDVEXEXKYIXBXEXHYFXJYHXEXGYEKXCXDWAVGUSXEXIYGWLXCXDWAVHVAVBVC
      VFPUKRVIXQWOGCOZFVQOZWTWLVQCFGVJUUHWEVQUCZUUGTZFNZWTUUGFVQVKWHUUGTZEBOZFN
      ZDAOUUMDAOZFNWTUUKUUMDFASWSUUNDAWSUULFNZEBOUUNWRUUPEBWRWPGCOZFNUUPWPGFCSU
      UQUULFWHWOGCVLQPRUULEFBSPRUUJUUOFWHEBOZUUGTZDAOUURDAOZUUGTUUOUUJUURUUGDAV
      MUUMUUSDAWHUUGEBVMRUUIUUTUUGWEABDEVJVNVOQVOPPXRXKHVSOZDAOXPWLAVSDHVJUVAXO
      DAUVAXCVSUCZXKTZHNZXOXKHVSVKXLGCOZHNZEBOUVEEBOZHNXOUVDUVEEHBSXNUVFEBXLGHC
      SRUVCUVGHXFGCOZXKTZEBOUVHEBOZXKTUVGUVCUVHXKEBVMUVEUVIEBXFXKGCVMRUVBUVJXKX
      CBCEGVJVNVOQVOPRPUKVP $.
      $( [17-Jan-2015] $)
  $}

  $( Swap arguments two and three in cardinal addition.  (Contributed by SF,
     22-Jan-2015.) $)
  addc32 $p |- ( ( A +c B ) +c C ) = ( ( A +c C ) +c B ) $=
    ( cplc addccom addceq2i addcass 3eqtr4i ) ABCDZDACBDZDABDCDACDBDIJABCEFABCG
    ACBGH $.
    $( [22-Jan-2015] $)

  $( Swap arguments two and three in quadruple cardinal addition.  (Contributed
     by SF, 25-Jan-2015.) $)
  addc4 $p |- ( ( A +c B ) +c ( C +c D ) ) = ( ( A +c C ) +c ( B +c D ) ) $=
    ( cplc addc32 addceq1i addcass 3eqtr3i ) ABEZCEZDEACEZBEZDEJCDEELBDEEKMDABC
    FGJCDHLBDHI $.
    $( [25-Jan-2015] $)

  $( Rearrange cardinal summation of six arguments.  (Contributed by SF,
     13-Mar-2015.) $)
  addc6 $p |- ( ( ( A +c B ) +c ( C +c D ) ) +c ( E +c F ) ) =
     ( ( ( A +c C ) +c E ) +c ( ( B +c D ) +c F ) ) $=
    ( cplc addc4 addceq1i addc32 eqtri addcass 3eqtr3i ) ABGCDGGZEGZFGACGZEGZBD
    GZGZFGNEFGGQRFGGOSFOPRGZEGSNTEABCDHIPREJKINEFLQRFLM $.
    $( [13-Mar-2015] $)

  ${
    $d A a b c x $.  $d B a b c x $.
    $( The finite cardinals are closed under addition.  Theorem X.1.14 of
       [Rosser] p. 278.  (Contributed by SF, 17-Jan-2015.) $)
    nncaddccl $p |- ( ( A e. Nn /\ B e. Nn ) -> ( A +c B ) e. Nn ) $=
      ( va vb vc vx cnnc wcel cplc cv wceq eleq1d imbi2d c1c cab cpw1 cimak cvv
      wi addceq2 addceq1 c0c wn cssetk cins3k cins2k cin ccompl csymdif cimagek
      csik cun cdif ccnvk wo unab copk wrex wb vex opkelimagekg mp2an opkelcnvk
      addccom dfaddc2 eqeq2i 3bitr4i rexbii elimak risset abbi2i uneq2i 3eqtr4i
      eqtri imor abbii abexv addcexlem pw1ex imakex imagekex nncex eqeltrri weq
      cnvkex unex addcid1 id syl5eqel addcass peano2 syl5eqelr imim2i a1i finds
      com12 vtoclga imp ) AGHBGHZABIZGHZWSCJZBIZGHZSWSXASCAGXBAKZXDXAWSXEXCWTGX
      BABUALMWSXBGHZXDXFXBDJZIZGHZSZXFXBUBIZGHZSXFXBEJZIZGHZSZXFXBXMNIZIZGHZSZX
      FXDSDEBXFUCZDOZUDUEZUDUFZUGNPPZQUHUEYDUFYCUFUDUKUKUEULUIYEPPQUMZXBPZPZQZU
      JZUNZGQZULZXJDOZRYBXIDOZULYAXIUOZDOYMYNYAXIDUPYLYOYBXIDYLFJZXGUQYKHZFGURY
      QXHKZFGURXGYLHXIYRYSFGXGYQUQYJHZYQYIXGQZKZYRYSXGRHYQRHYTUUBUSDUTZFUTZXGYQ
      YIRRVAVBYQXGYJUUDUUCVCXHUUAYQXHXGXBIUUAXBXGVDXGXBVEVNVFVGVHFYKGXGUUCVIFXH
      GVJVGVKVLXJYPDXFXIVOVPVMYBYLYADVQYKGYJYIYFYHVRYGXBCUTVSVSVTWAWEWBVTWFWCXG
      UBKZXIXLXFUUEXHXKGXGUBXBTLMDEWDZXIXOXFUUFXHXNGXGXMXBTLMXGXQKZXIXSXFUUGXHX
      RGXGXQXBTLMXGBKZXIXDXFUUHXHXCGXGBXBTLMXFXKXBGXBWGXFWHWIXPXTSXMGHXOXSXFXOX
      RXNNIGXBXMNWJXNWKWLWMWNWOWPWQWR $.
      $( [17-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( Membership in the set of finite sets.  (Contributed by SF,
       19-Jan-2015.) $)
    elfin $p |- ( A e. Fin <-> E. x e. Nn A e. x ) $=
      ( cfin wcel cnnc cuni cv wrex df-fin eleq2i eluni2 bitri ) BCDBEFZDBAGDAE
      HCMBIJABEKL $.
      $( [19-Jan-2015] $)
  $}

  $( Membership in cardinal zero.  (Contributed by SF, 22-Jan-2015.) $)
  el0c $p |- ( A e. 0c <-> A = (/) ) $=
    ( c0c wcel c0 csn wceq df-0c eleq2i 0ex elsnc2 bitri ) ABCADEZCADFBLAGHADIJK
    $.
    $( [22-Jan-2015] $)

  $( The empty set is a member of cardinal zero.  (Contributed by SF,
     13-Feb-2015.) $)
  nulel0c $p |- (/) e. 0c $=
    ( c0 c0c wcel wceq eqid el0c mpbir ) ABCAADAEAFG $.
    $( [13-Feb-2015] $)

  $( The empty set is finite.  (Contributed by SF, 19-Jan-2015.) $)
  0fin $p |- (/) e. Fin $=
    ( vn c0 cfin wcel cv cnnc wrex c0c wceq eqid el0c mpbir eleq2 rspcev mp2an
    peano1 elfin ) BCDBAEZDZAFGZHFDBHDZTPUABBIBJBKLSUAAHFRHBMNOABQL $.
    $( [19-Jan-2015] $)


  ${
    $d a e $.  $d a m $.  $d a t $.  $d a w $.  $d a x $.  $d e m $.  $d e t $.
    $d e w $.  $d e x $.  $d m t $.  $d m w $.  $d m x $.  $d t w $.  $d t x $.
    $d w x $.
    $( Lemma for ~ nnsucelr .  Establish stratification for the inductive
       hypothesis.  (Contributed by SF, 15-Jan-2015.) $)
    nnsucelrlem1 $p |- { m |
     A. a A. x ( ( -. x e. a /\ ( a u. { x } ) e. ( m +c 1c ) ) -> a e. m ) }
     e. _V $=
      ( vt vw ve cssetk c1c cvv wn csn wcel wa wex wceq copk bitr4i exbii bitri
      snex csik cins3k cins2k cidk cun csymdif cpw1 cimak ccompl cin cdif ccnvk
      cimagek ccomk cxpk wel cv cplc wal cab wrex vex elimak df-rex el1c anbi1i
      19.41v excom opkeq1 eleq1d ceqsexv opkex elpw131c eldif elpw141c elpw171c
      wi elin wb elsymdif otkelins3k opksnelsik elssetk otkelins2k wo weq sneqb
      opkelidkg mp2an elsnc 3bitr4i orbi12i elun bibi12i notbii dfcleq opkelcnvk
      elcompl alex ancom opkelimagekg dfaddc2 eqeq2i bicomi anbi12i 1cex addcex
      opkelcok clel3 df-clel opkelxpk mpbiran annim exnal ssetkex sikex ins3kex
      abbi2i ins2kex idkex unex symdifex pw1ex imakex addcexlem imagekex cnvkex
      complex cokex inex difex vvex xpkex eqeltrri ) GUAZUAZUAZUAZUAZUBZYOUBZUC
      ZUDUBZUEZUCZUFZHUGZUGZUGZUGZUGZUGZUGZUHZUIZGUBZGUCZUJUUHUHUIUBUUQUCUUPUCY
      PUBUEUFUUJUHUKZUUHUHZUMZULZGUNZUCZUCZUJZUUJUHZUUAUKZIGUOZUKZUUIUHZHUHZUIZ
      ACUPZJZCUQZAUQZKZUEZBUQZHURZLZMZCBUPZVQZAUSZCUSZBUTIUWFBUVLUVSUVKLZJUWEJZ
      CNZJUVSUVLLUWFUWGUWIUWGDUQZUVOKZOZUWJUVSPZUVJLZMZDNZCNZUWIUWGUWNDHVAZUWQD
      UVJHUVSBVBZVCUWRUWJHLZUWNMZDNZUWQUWNDHVDUXBUWOCNZDNUWQUXAUXCDUXAUWLCNZUWN
      MUXCUWTUXDUWNCUWJVEVFUWLUWNCVGQRUWOCDVHQSSUWPUWHCUWPUWKUVSPZUVJLZUWHUWNUX
      FDUWKUVOTZUWLUWMUXEUVJUWJUWKUVSVIVJVKUXFUWDJZANZUWHUXFUWJUVQKZKZKZOZUWJUX
      EPZUVILZMZDNZANZUXIUXFUXODUUIVAZUXRDUVIUUIUXEUWKUVSVLZVCUXSUWJUUILZUXOMZD
      NZUXRUXODUUIVDUYCUXPANZDNUXRUYBUYDDUYBUXMANZUXOMUYDUYAUYEUXOAUWJVMVFUXMUX
      OAVGQRUXPADVHQSSUXQUXHAUXQUXLUXEPZUVILZUXHUXOUYGDUXLUXKTZUXMUXNUYFUVIUWJU
      XLUXEVIVJVKUYGUWBUWCJZMZUXHUYGUYFUVGLZUYFUVHLZJZMUYJUYFUVGUVHVNUYKUWBUYMU
      YIUYKUWAUVNMZUWBUYKUYFUVFLZUYFUUALZJZMUYNUYFUVFUUAVNUYOUWAUYQUVNUYOEUQZUV
      ROZUYRUVTLZMZENZUWAUYOUWJUYFPZUVELZDUUJVAZVUBDUVEUUJUYFUXLUXEVLZVCVUEUWJU
      YRKZKZKZKZKZOZVUDMZDNZENZVUBVUEUWJUUJLZVUDMZDNZVUOVUDDUUJVDVURVUMENZDNVUO
      VUQVUSDVUQVULENZVUDMVUSVUPVUTVUDEUWJVOVFVULVUDEVGQRVUMEDVHQSVUNVUAEVUNVUK
      UYFPZUVELZVUAVUDVVBDVUKVUJTZVULVUCVVAUVEUWJVUKUYFVIVJVKVVBVVAUUOLZVVAUVDL
      ZMVUAVVAUUOUVDVRVVDUYSVVEUYTVVAUUNLZJFEUPZFUQZUVRLZVSZJZFNZJZVVDUYSVVFVVL
      VVFUWJVVHKZKZKZKZKZKZKZKZOZUWJVVAPZUUFLZMZDNZFNZVVLVVFVWDDUUMVAZVWGDUUFUU
      MVVAVUKUYFVLZVCVWHUWJUUMLZVWDMZDNZVWGVWDDUUMVDVWLVWEFNZDNVWGVWKVWMDVWKVWB
      FNZVWDMVWMVWJVWNVWDFUWJVPVFVWBVWDFVGQRVWEFDVHQSSVWFVVKFVWFVWAVVAPZUUFLZVV
      KVWDVWPDVWAVVTTVWBVWCVWOUUFUWJVWAVVAVIVJVKVWPVWOYTLZVWOUUELZVSZJVVKVWOYTU
      UEVTVWSVVJVWQVVGVWRVVIVWQVVSVUKPYSLZVVGVVSVUKUYFYSVVRTZVVCVUFWAVWTVVRVUJP
      YRLZVVGVVRVUJYRVVQTVUITWBVXBVVQVUIPYQLZVVGVVQVUIYQVVPTZVUHTZWBVXCVVPVUHPY
      PLZVVGVVPVUHYPVVOTZVUGTWBVXFVVOVUGPYOLZVVGVVOVUGYOVVNTZUYRTZWBVXHVVNUYRPG
      LVVGVVNUYRGVVHTZEVBZWBVVHUYRFVBZVXLWCSSSSSSVWRVVSUYFPZUUDLZVVIVVSVUKUYFUU
      DVXAVVCVUFWDVXNUUBLZVXNUUCLZWEFCUPZVVHUVQLZWEVXOVVIVXPVXRVXQVXSVXPVVQUXEP
      UUALZVXRVVQUXLUXEUUAVXDUYHUXTWDVXTVVOUWKPYOLZVXRVVOUWKUVSYOVXIUXGUWSWAVYA
      VVNUVOPGLVXRVVNUVOGVXKCVBZWBVVHUVOVXMVYBWCSSSVXQVVQUXLPUDLZVXSVVQUXLUXEUD
      VXDUYHUXTWAVVQUXLOZFAWFZVYCVXSVYDVVPUXKOZVYEVVPUXKVXGWGVYFVVOUXJOZVYEVVOU
      XJVXIWGVYGVVNUVQOVYEVVNUVQVXKWGVVHUVPVXMWGSSSVVQILUXLILZVYCVYDVSVXDUYHVVQ
      UXLIIWHWIVVHUVPVXMWJWKSWLVXNUUBUUCWMVVHUVOUVQWMWKSWNWOSSRSWOVVAUUNVWIWRUY
      SVVJFUSVVMFUYRUVRWPVVJFWSSWKVVEVUIUXEPUVCLZUYTVUIUXLUXEUVCVXEUYHUXTWDVYIV
      UGUVSPUVBLZUYTVUGUWKUVSUVBVXJUXGUWSWDVUGUWJPGLZUWMUVALZMZDNUWJUVTOZEDUPZM
      ZDNVYJUYTVYMVYPDVYMVYLVYKMVYPVYKVYLWTVYLVYNVYKVYOVYLUVSUWJPUUTLZVYNUWJUVS
      UUTDVBZUWSWQVYQUWJUUSUVSUHZOZVYNUVSILUWJILVYQVYTVSUWSVYRUVSUWJUUSIIXAWIVY
      NVYTUVTVYSUWJUVSHXBXCXDSSUYRUWJVXLVYRWCXESRDVUGUVSUVAGVXJUWSXHDUYRUVTUVSH
      UWSXFXGXIWKSSXESSRSSEUVRUVTXJQUYPUVMUYPUXJUWKPYOLZUVMUXJUWKUVSYOUVQTUXGUW
      SWAWUAUVQUVOPGLUVMUVQUVOGUVPTVYBWBUVPUVOAVBVYBWCSSWOXESUWAUVNWTSUYLUWCUYL
      UXEGLZUWCUYLVYHWUBUYHUXLUXEIGUYHUXTXKXLUVOUVSVYBUWSWCSWOXESUWBUWCXMSSRSUW
      DAXNSSRSWOUVSUVKUWSWRUWECWSWKXRUVKUVJHUVIUUIUVGUVHUVFUUAUVEUUJUUOUVDUUNUU
      FUUMYTUUEYSYRYQYPYOGXOXPZXPXPXPXPXQUUDUUBUUCUUAYOWUCXQZXSUDXTXQYAXSYBUULU
      UKUUJUUIUUHUUGHXFYCYCZYCZYCZYCYCYCYDYHUVCUVBUVAGUUTUUSUURUUHYEWUEYDYFYGXO
      YIXSXSYJWUGYDWUDYKIGYLXOYMYKWUFYDXFYDYHYN $.
      $( [15-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Lemma for ~ nnsucelr .  Subtracting a non-element from a set adjoined
       with the non-element retrieves the original set.  (Contributed by SF,
       15-Jan-2015.) $)
    nnsucelrlem2 $p |- ( -. B e. A -> ( ( A u. { B } ) \ { B } ) = A ) $=
      ( vx wcel wn csn cun cdif cv wceq wa wne wo eldifsn elun elsn bitri df-ne
      orbi2i anbi12i pm5.61 3bitri ancom eleq1 biimpcd con3d com12 bicomd eqrdv
      pm4.71rd syl5bb ) BADZEZCABFZGZUNHZACIZUPDZUQBJZEZUQADZKZUMVAURVAUTKZVBUR
      UQUODZUQBLZKVAUSMZUTKVCUQUOBNVDVFVEUTVDVAUQUNDZMVFUQAUNOVGUSVACBPSQUQBRTV
      AUSUAUBVAUTUCQUMVAVBUMVAUTVAUMUTVAUSULUSVAULUQBAUDUEUFUGUJUHUKUI $.
      $( [15-Jan-2015] $)
  $}

  ${
    nnsucelrlem3.1 $e |- X e. _V $.
    $( Lemma for ~ nnsucelr .  Rearrange union and difference for a particular
       group of classes.  (Contributed by SF, 15-Jan-2015.) $)
    nnsucelrlem3 $p |-
       ( ( X =/= Y /\ ( A u. { X } ) = ( B u. { Y } ) /\
           -. Y e. B ) -> B = ( ( A \ { Y } ) u. { X } ) ) $=
      ( wne csn cun wceq wcel wn w3a ccompl cin cdif indir df-dif eqtri sylib
      c0 eqcomi incompl uneq12i un0 difsn 3ad2ant3 syl5req simp2 df-ne 3ad2ant1
      wss biimpi elcompl elsnc xchbinx snss bitr3i ssequn2 ineq12d eqtr4d uneq1i
      undir syl6eqr ) CDFZACGZHZBDGZHZIZDBJKZLZBVFVGMZVEHZNZAVGOZVEHZVKBVHVLNZV
      NVKVQBVGOZBVQBVLNZVGVLNZHZVRBVGVLPWAVRTHVRVSVRVTTVRVSBVGQUAVGUBUCVRUDRRVJ
      VDVRBIVIDBUEUFUGVKVFVHVMVLVDVIVJUHVKVEVLUKZVMVLIVKCDIZKZWBVDVIWDVJVDWDCDU
      IULUJWDCVLJZWBWECVGJWCCVGEUMCDEUNUOCVLEUPUQSVEVLURSUSUTVPAVLNZVEHVNVOWFVE
      AVGQVAAVLVEVBRVC $.
      $( [15-Jan-2015] $)
  $}

  ${
    $( Lemma for ~ nnsucelr .  Remove and re-adjoin an element to a set.
       (Contributed by SF, 15-Jan-2015.) $)
    nnsucelrlem4 $p |- ( A e. B -> ( ( B \ { A } ) u. { A } ) = B ) $=
      ( wcel csn cdif cun undif1 wss wceq snssi ssequn2 sylib syl5eq ) ABCZBADZ
      EOFBOFZBBOGNOBHPBIABJOBKLM $.
      $( [15-Jan-2015] $)
  $}

  ${
    $d A a $.  $d a c $.  $d a m $.  $d a n $.  $d a x $.  $d a y $.  $d a z $.
    $d c m $.  $d c n $.  $d c x $.  $d c z $.  $d M a $.  $d M m $.  $d m n $.
    $d m x $.  $d M x $.  $d m y $.  $d m z $.  $d n x $.  $d n z $.  $d X a $.
    $d X x $.  $d x y $.  $d x z $.  $d a b $.  $d b c $.  $d b n $.  $d b x $.
    $d b y $.  $d b z $.  $d c y $.  $d n y $.  $d y z $.  $d a d $.  $d a w $.
    $d d n $.  $d d w $.  $d d y $.  $d w y $.
    nnsucelr.1 $e |- A e. _V $.
    nnsucelr.2 $e |- X e. _V $.
    $( Transfer membership in the successor of a natural into membership of the
       natural itself.  Theorem X.1.17 of [Rosser] p. 525.  (Contributed by SF,
       14-Jan-2015.) $)
    nnsucelr $p |- ( ( M e. Nn /\
              ( -. X e. A /\ ( A u. { X } ) e. ( M +c 1c ) ) ) ->
              A e. M ) $=
      ( vx va vy vz vc vw wcel wn cun c1c wa cv wi wal wceq vm vn cnnc csn cplc
      vb vd wel wex c0 nnsucelrlem1 addceq1 addcid2 syl6eq eleq2d syl6bb anbi2d
      c0c el1c eleq2 df-0c eleq2i vex elsnc imbi12d 2albidv weq wb eleq12 ancoms
      bitri notbid sneq uneq12 sylan2 eleq1d anbi12d eleq1 cbval2v unsneqsn ord
      adantr snid mpbiri syl6 con1d exlimiv impcom gen2 ccompl wrex elcompl w3a
      anbi2i cdif simprrl difeq12d simprrr nnsucelrlem2 simprlr 3eqtr3d simprll
      elsuc syl eqeltrd 3adantr1 wne simpl simpr3l simpr2r nnsucelrlem3 syl3anc
      ex simp22r uneq1d eqeq2d biimpcd 3ad2ant3 simp23l wss snss ssequn2 bitr2i
      difsn biimpi eqcoms syl6bi syld mt3d nnsucelrlem4 simpl3r difss sseli cvv
      nsyl mp2an uneq2d rspcev uneq1 spcv simp2l biimpd simpl1 spc2gv mp2and
      mpan9 snex difex 3adant1 eldif simprbi mt2 mpbir compleq rexeqbidv sylibr
      eqid sylancl eqeltrrd mpd3an3 3expa exp32 sylan2b rexlimdvva syl5bi com23
      pm2.61ine imp3a alrimivv a1i finds imbi1d alimi 3syl imp ) BUCLZCALZMZACU
      DZNZBOUEZLZPZABLZUVPFGUHZMZGQZFQZUDZNZUWALZPZUWGBLZRZFSZGSZCUWGLZMZUWGUVS
      NZUWALZPZUWMRZGSUWCUWDRZUWFUWJUAQZOUEZLZPZGUAUHZRZFSGSZUWFUWJHQZUDZTZHUIZ
      PZUWGUJTZRZFSGSIJUHZMZJQZIQZUDZNZUBQZOUEZLZPZJUBUHZRZISJSZUWFUWJUYEOUEZLZ
      PZUWGUYELZRZFSGSZUWPUAUBBFUAGUKUXDURTZUXIUXQGFUYQUXGUXOUXHUXPUYQUXFUXNUWF
      UYQUXFUWJOLUXNUYQUXEOUWJUYQUXEUROUEOUXDUROULOUMUNUOHUWJUSUPUQUYQUXHUWGURL
      ZUXPUXDURUWGUTUYRUWGUJUDZLUXPURUYSUWGVAVBUWGUJGVCZVDVKUPVEVFUAUBVGZUXJUWF
      UWJUYELZPZGUBUHZRZFSGSUYJVUAUXIVUEGFVUAUXGVUCUXHVUDVUAUXFVUBUWFVUAUXEUYEU
      WJUXDUYDOULUOUQUXDUYDUWGUTVEVFVUEUYIGFJIGJVGZFIVGZPZVUCUYGVUDUYHVUHUWFUXS
      VUBUYFVUHUWEUXRVUGVUFUWEUXRVHUWHUYAUWGUXTVIVJVLVUHUWJUYCUYEVUGVUFUWIUYBTU
      WJUYCTUWHUYAVMUWGUXTUWIUYBVNVOVPVQVUFVUDUYHVHVUGUWGUXTUYDVRWBVEVSUPUXDUYE
      TZUXIUYOGFVUIUXGUYMUXHUYNVUIUXFUYLUWFVUIUXEUYKUWJUXDUYEOULUOUQUXDUYEUWGUT
      VEVFUXDBTZUXIUWNGFVUJUXGUWLUXHUWMVUJUXFUWKUWFVUJUXEUWAUWJUXDBOULUOUQUXDBU
      WGUTVEVFUXQGFUXNUWFUXPUXMUWFUXPRHUXMUXPUWEUXMUXPMUWGUWITZUWEUXMUXPVUKUWGU
      WHUXKFVCZVTWAVUKUWEUWHUWILUWHVULWCUWGUWIUWHUTWDWEWFWGWHWIUYJUYPRUYDUCLUYJ
      UYOGFUYJUWFUYLUYNUYJUYLUWFUYNUYLUWJUFQZUXLNZTZHVUMWJZWKUFUYEWKUYJUWFUYNRZ
      HUWJUYEUFXCUYJVUOVUQUFHUYEVUPVUMUYELZUXKVUPLZPUYJVURHUFUHZMZPZVUOVUQRVUSV
      VAVURUXKVUMHVCZWLWNUYJVVBPVUOUWFUYNUYJVVBVUOUWFPZUYNUYJVVBVVDWMZUYNRUWHUX
      KFHVGZVVEUYNVVFVVBVVDUYNUYJVVFVVBVVDPZPZUWGVUMUYEVVHUWJUWIWOZVUNUXLWOZUWG
      VUMVVHUWJVUNUWIUXLVVFVVBVUOUWFWPVVFUWIUXLTVVGUWHUXKVMWBWQVVHUWFVVIUWGTVVF
      VVBVUOUWFWRUWGUWHWSXDVVHVVAVVJVUMTVVFVURVVAVVDWTVUMUXKWSXDXAVVFVURVVAVVDX
      BXEXFXMUWHUXKXGZVVEUYNVVKVVEVUMUWGUXLWOZUWINZTZUYNVVKVVEPVVKVUOVVAVVNVVKV
      VEXHVUOUWFUYJVVBVVKXIVURVVAUYJVVDVVKXJUWGVUMUWHUXKVULXKXLVVKVVEVVNWMZVVLU
      XLNZUWGUYEVVOHGUHZVVPUWGTVVOVVQVUTVURVVAUYJVVDVVKVVNXNVVOVVQMZVUMUWJTZVUT
      VVNVVKVVRVVSRVVEVVRVVNVVSVVRVVMUWJVUMVVRVVLUWGUWIUXKUWGYDXOXPXQXRVVOVVSVU
      MVUNTVUTVVOUWJVUNVUMVUOUWFUYJVVBVVKVVNXSXPVUTVUNVUMVUNVUMTZVUTVUTUXLVUMXT
      VVTUXKVUMVVCYAUXLVUMYBYCYEYFYGYHYIUXKUWGYJXDVVOVVLUYDLZVVPVVLKQZUDZNZTZKV
      VLWJZWKZVVPUYELZVVEVVNVWAVVKVVEVVNPZUWHVVLLZMZVVMUYELZVWAVWIUWEVWJVUOUWFU
      YJVVBVVNYKVVLUWGUWHUWGUXLYLYMYOVVEVURVVNVWLUYJVURVVAVVDUUAVVNVURVWLVUMVVM
      UYEVRUUBUUFVWIUYJVWKVWLPZVWARZUYJVVBVVDVVNUUCVVLYNLUWHYNLUYJVWNRUWGUXLUYT
      UXKUUGUUHVULUYIVWNJIVVLUWHYNYNUXTVVLTZIFVGZPZUYGVWMUYHVWAVWQUXSVWKUYFVWLV
      WQUXRVWJVWPVWOUXRVWJVHUYAUWHUXTVVLVIVJVLVWQUYCVVMUYEVWPVWOUYBUWITUYCVVMTU
      YAUWHVMUXTVVLUYBUWIVNVOVPVQVWOUYHVWAVHVWPUXTVVLUYDVRWBVEUUDYPXDUUEUUIUXKV
      WFLZVVPVVPTZVWGVWRUXKVVLLZMVWTUXKUXLLZUXKVVCWCVWTVVQVXAMUXKUWGUXLUUJUUKUU
      LUXKVVLVVCWLUUMVVPUUQVWEVWSKUXKVWFKHVGZVWDVVPVVPVXBVWCUXLVVLVWBUXKVMYQXPY
      RYPVWAVWGPVVPUGQZVWCNZTZKVXCWJZWKZUGUYDWKVWHVXGVWGUGVVLUYDVXCVVLTZVXEVWEK
      VXFVWFVXCVVLUUNVXHVXDVWDVVPVXCVVLVWCYSXPUUOYRKVVPUYDUGXCUUPUURUUSUUTXMUVG
      UVAUVBUVCUVDUVEUVFUVHUVIUVJUVKUWOUXBGUWNUXBFCEUWHCTZUWLUXAUWMVXIUWFUWRUWK
      UWTVXIUWEUWQUWHCUWGVRVLVXIUWJUWSUWAVXIUWIUVSUWGUWHCVMYQVPVQUVLYTUVMUXBUXC
      GADUWGATZUXAUWCUWMUWDVXJUWRUVRUWTUWBVXJUWQUVQUWGACUTVLVXJUWSUVTUWAUWGAUVS
      YSVPVQUWGABVRVEYTUVNUVO $.
      $( [14-Jan-2015] $)
  $}

  ${
    $d a b $.  $d a m $.  $d a n $.  $d a q $.  $d a x $.  $d b m $.  $d b n $.
    $d b q $.  $d b x $.  $d m n $.  $d M n $.  $d m p $.  $d M p $.  $d m q $.
    $d m x $.  $d N n $.  $d n p $.  $d n q $.  $d n x $.  $d p q $.  $d q x $.
    $d b p $.  $d p x $.

    $( Either two naturals are disjoint or they are the same natural.  Theorem
       X.1.18 of [Rosser] p. 526.  (Contributed by SF, 17-Jan-2015.) $)
    nndisjeq $p |- ( ( M e. Nn /\ N e. Nn ) -> ( ( M i^i N ) = (/) \/ M = N ) )
        $=
      ( vn vp vm vq vb cnnc wcel cin c0 wceq wo cv wi weq wn c0c eqeq1d wa wral
      va vx c1c cplc cssetk cins3k cins2k cpw1 cimak ccompl cun cab cvv elcompl
      cidk vex copk wrex elimak opkex elun wne ndisjrelk notbii con2bii 3bitr4i
      df-ne wb opkelidkg mp2an orbi12i incom eqeq1i eqcom 3bitri xchbinx rexbii
      rexnal bitr4i abbi2i ssetkex ins3kex ins2kex inex 1cex pw1ex imakex idkex
      complex nncex eqeltrri csn df-0c eqeq2i biimpi ineq1d disjsn bitri syl6bb
      eqeq1 orbi12d ralbidv ineq1 ineq2 equequ2 cbvralv nnc0suc 0nelsuc biimpcd
      unex eleq2 mtoi adantr orel2 syl com12 sylbi imor sylib rgen wex neq0 wel
      nrexdv elin elsuc anbi2i w3a simp1r n0i rspccv syl6 com23 imp syld com3l
      ex eqeq2 syl5bi ssun2 snid sselii ax-mp eleq2i mtbir adantl orel1 simpr3r
      snex elsnc simpll simpr nnsucelr syl12anc sylbir pm2.53 syl5 exp3a adantrr
      3adant1 impcom addceq1 anbi2d imbi2d imbi12d mpbiri rexlimdv 3expa imbi1d
      mpid eleq1 syl5ibrcom sylan2b rexlimdvva imp3a orrd exp31 ralrimdv finds
      exlimdv ) AHIZBHIZABJZKLZABLZMZUWBACNZJZKLZAUWHLZMZCHUAZUWCUWGODNZUWHJZKL
      ZDCPZMZCHUAZKUWHIZQZUWHRLZMZCHUAENZFNZJZKLZEFPZMZFHUAZUXDUDUEZUWHJZKLZUXK
      UWHLZMZCHUAUWMDEAUFUGZUFUHZJZUDUIZUIZUJZUKZUPULZUKZHUJZUKZUWSDUMUNUWSDUYF
      UWNUYFIUWNUYEIZQUWSUWNUYEDUQZUOUYGUWSUYGUWHUWNURZUYDIZCHUSUWRQZCHUSUWSQCU
      YDHUWNUYHUTUYJUYKCHUYJUYIUYCIZUWRUYIUYCUWHUWNVAZUOUYLUYIUYBIZUYIUPIZMUWHU
      WNJZKLZCDPZMUWRUYIUYBUPVBUYNUYQUYOUYRUYIUYAIZQUYPKVCZQUYNUYQUYSUYTUWHUWNC
      UQZUYHVDVEUYIUYAUYMUOUYTUYQUYPKVHVFVGUWHUNIUWNUNIUYOUYRVIVUAUYHUWHUWNUNUN
      VJVKVLUYQUWPUYRUWQUYPUWOKUWHUWNVMVNUWHUWNVOVLVPVQVRUWRCHVSVPVFVTWAUYEUYDH
      UYCUYBUPUYAUXRUXTUXPUXQUFWBWCUFWBWDWEUXSUDWFWGWGWHWJWIXKWJWKWHWJWLUWNRLZU
      WRUXCCHVUBUWPUXAUWQUXBVUBUWPKWMZUWHJZKLZUXAVUBUWOVUDKVUBUWNVUCUWHVUBUWNVU
      CLRVUCUWNWNWOWPWQSVUEUWHVUCJZKLUXAVUDVUFKVUCUWHVMVNUWHKWRWSWTVUBUWQRUWHLU
      XBUWNRUWHXARUWHVOWTXBXCDEPZUWSUXDUWHJZKLZECPZMZCHUAUXJVUGUWRVUKCHVUGUWPVU
      IUWQVUJVUGUWOVUHKUWNUXDUWHXDSUWNUXDUWHXAXBXCVUKUXICFHCFPZVUIUXGVUJUXHVULV
      UHUXFKUWHUXEUXDXESCFEXFXBXGWTUWNUXKLZUWRUXOCHVUMUWPUXMUWQUXNVUMUWOUXLKUWN
      UXKUWHXDSUWNUXKUWHXAXBXCUWNALZUWRUWLCHVUNUWPUWJUWQUWKVUNUWOUWIKUWNAUWHXDS
      UWNAUWHXAXBXCUXCCHUWHHIZUWTUXBOZUXCVUOUXBUWHUXKLZEHUSZMZVUPEUWHXHUWTVUSUX
      BUWTVURQVUSUXBOUWTVUQEHUWTVUQQUXDHIZUWTVUQKUXKIZUXDXIVUQUWTVVAUWHUXKKXLXJ
      XMXNYEVURUXBXOXPXQXRUWTUXBXSXTYAVUTUXJUXOCHVUTVUOUXJUXOVUTVUOUXJUXOVUTVUO
      TZUXJTZUXMUXNUXMQUBNZUXLIZUBYBVVCUXNUBUXLYCVVCVVEUXNUBVVEVVDUXKIZUBCYDZTV
      VCUXNVVDUXKUWHYFVVCVVFVVGUXNVVFVVDGNZUCNZWMZULZLZUCVVHUKZUSGUXDUSVVCVVGUX
      NOZUCVVDUXDGYGVVCVVLVVNGUCUXDVVMGEYDZVVIVVMIZTVVCVVOUCGYDQZTZVVLVVNOVVPVV
      QVVOVVIVVHUCUQZUOYHVVCVVRTVVNVVLVVKUWHIZUXNOZVVBUXJVVRVWAVVBUXJVVRYIZVVTU
      XBUWHUWNUDUEZLZDHUSZMZUXNVWBVUOVWFVUTVUOUXJVVRYJDUWHXHXTVWBVVTVWFUXNOVWBV
      VTTZVWFVWEUXNVWGUXBQZVWFVWEOVVTVWHVWBVVTUXBVVKRIZVWIVVKKLZVVIVVKIVWJQVVJV
      VKVVIVVJVVHUUAVVIVVSUUBUUCVVKVVIYKUUDVWIVVKVUCIVWJRVUCVVKWNUUEVVKKVVHVVJG
      UQZVVIUUJXKUUKWSUUFUXBVVTVWIUWHRVVKXLXJXMUUGUXBVWEUUHXPVWGVWDUXNDHVWDVWGU
      WNHIZUXNVWDVWGVWLUXNOZOVWBVVKVWCIZTZVWLUXKVWCLZOZOVWOVWLEDPZVWPVWBVWNVWLV
      WROVWLVWBVWNVWRVWLVWBVWNVWROVWLVWBTZVWNGDYDZVWRVWSVWNVWTVWSVWNTVWLVVQVWNV
      WTVWLVWBVWNUULVWSVVQVWNVVOVVQVVBUXJVWLUUIXNVWSVWNUUMVVHUWNVVIVWKVVSUUNUUO
      YRVWBVWLVWTVWROZUXJVVRVWLVXAOZVVBUXJVVOVXBVVQUXJVVOVXBUXJVWLVVOVXAUXJVWLU
      XDUWNJZKLZVWRMZVVOVXAOUXIVXEFUWNHFDPZUXGVXDUXHVWRVXFUXFVXCKUXEUWNUXDXESFD
      EXFXBYLVXEVVOVWTVWRVVOVWTTZVXDQZVXEVWRVXGVVHVXCIVXHVVHUXDUWNYFVXCVVHYKUUP
      VXDVWRUUQUURUUSYMYNYOUUTUVAUVBYPYRYQYOUXDUWNUDUVCYMVWDVWGVWOVWMVWQVWDVVTV
      WNVWBUWHVWCVVKXLUVDVWDUXNVWPVWLUWHVWCUXKYSUVEUVFUVGYQUVHYPYRUVKUVIVVLVVGV
      VTUXNVVDVVKUWHUVLUVJUVMUVNUVOYTUVPYTUWAYTUVQUVRYNUVSUVTUWLUWGCBHUWHBLZUWJ
      UWEUWKUWFVXIUWIUWDKUWHBAXESUWHBAYSXBYLXPYO $.
      $( [17-Jan-2015] $)
  $}

  $( If two naturals have an element in common, then they are equal.
     (Contributed by SF, 13-Feb-2015.) $)
  nnceleq $p |- ( ( ( M e. Nn /\ N e. Nn ) /\ ( A e. M /\ A e. N ) ) ->
    M = N ) $=
    ( cnnc wcel wa cin c0 wceq wn wo elin n0i sylbir adantl nndisjeq orel1 sylc
    adantr ) BDECDEFZABEACEFZFBCGZHIZJZUCBCIZKZUEUAUDTUAAUBEUDABCLUBAMNOTUFUABC
    PSUCUEQR $.
    $( [13-Feb-2015] $)

  ${
    $d A x $.
    $( A singleton is finite.  (Contributed by SF, 23-Feb-2015.) $)
    snfi $p |- { A } e. Fin $=
      ( vx cvv wcel csn cfin cv cnnc wrex c1c 1cnnc snel1cg eleq2 rspcev elfin
      sylancr sylibr wn c0 wceq snprc 0fin eleq1 mpbiri sylbi pm2.61i ) ACDZAEZ
      FDZUGUHBGZDZBHIZUIUGJHDUHJDZULKACLUKUMBJHUJJUHMNPBUHOQUGRUHSTZUIAUAUNUISF
      DUBUHSFUCUDUEUF $.
      $( [23-Feb-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Deriving infinity
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c <_[fin] $.
  $c <[fin] $.
  $c Nc[fin] $.
  $c _T[fin] $.
  $c Even[fin] $.
  $c Odd[fin] $.
  $c _S[fin] $.
  $c Sp[fin] $.

  $( Extend class notation to include the less than or equal to relationship
     for finite cardinals. $)
  clefin $a class <_[fin] $.

  $( Extend class notation to include the less than relationship for finite
     cardinals. $)
  cltfin $a class <[fin] $.

  $( Extend class notation to include the finite cardinal function. $)
  cncfin $a class Nc[fin] A $.

  $( Extend class notation to include the finite T operation. $)
  ctfin $a class _T[fin] A $.

  $( Extend class notation to include the (temporary) set of all even
     numbers. $)
  cevenfin $a class Even[fin] $.

  $( Extend class notation to include the (temporary) set of all odd
     numbers. $)
  coddfin $a class Odd[fin] $.

  $( Extend wff notation to include the finite S relationship. $)
  wsfin $a wff _S[fin] ( A , B ) $.

  $( Extend class notation to include the finite Sp set. $)
  cspfin $a class Sp[fin] $.

  ${
    $d x y z w $.
    $( Define the less than or equal to relationship for finite cardinals.
       Definition from Ex.  X.1.4 of [Rosser] p. 279. $)
    df-lefin $a |- <_[fin] = { x | E. y E. z ( x = << y , z >> /\
        E. w e. Nn z = ( y +c w ) ) } $.
  $}

  ${
    $d m n p x y z w $.
    $( Define the less than relationship for finite cardinals.  Definition from
       [Rosser] p. 527. $)
    df-ltfin $a |- <[fin] = { x | E. m E. n ( x = << m , n >> /\
        ( m =/= (/) /\ E. p e. Nn n = ( ( m +c p ) +c 1c ) ) ) } $.
  $}

  ${
    $d A x $.
    $( Define the finite cardinal function.  Definition from [Rosser]
       p. 527. $)
    df-ncfin $a |- Nc[fin] A = ( iota x ( x e. Nn /\ A e. x ) ) $.
  $}

  ${
    $d M n a $.
    $( Define the finite T operator.  Definition from [Rosser] p. 528. $)
    df-tfin $a |- _T[fin] M = if ( M = (/) , (/) ,
       ( iota n ( n e. Nn /\ E. a e. M ~P1 a e. n ) ) ) $.
  $}

  ${
    $d x n $.
    $( Define the temporary set of all even numbers.  This differs from the
       final definition due to the non-null condition.  Definition from
       [Rosser] p. 529. $)
    df-evenfin $a |- Even[fin] = { x |
                ( E. n e. Nn x = ( n +c n ) /\ x =/= (/) ) } $.
  $}

  ${
    $d x n $.
    $( Define the temporary set of all odd numbers.  This differs from the
       final definition due to the non-null condition.  Definition from
       [Rosser] p. 529. $)
    df-oddfin $a |- Odd[fin] = { x |
                ( E. n e. Nn x = ( ( n +c n ) +c 1c ) /\
                            x =/= (/) ) } $.
  $}

  ${
    $d M a $.  $d N a $.
    $( Define the finite S relationship.  This relationship encapsulates the
       idea of ` M ` being a "smaller" number than ` N ` .  Definition from
       [Rosser] p. 530. $)
    df-sfin $a |- ( _S[fin] ( M , N ) <-> ( M e. Nn /\ N e. Nn /\
             E. a ( ~P1 a e. M /\ ~P a e. N ) ) ) $.
  $}

  ${
    $d a x z $.
    $( Define the finite Sp set.  Definition from [Rosser] p. 533. $)
    df-spfin $a |- Sp[fin] =
       |^| { a | ( Nc[fin] _V e. a /\
             A. x e. a A. z ( _S[fin] ( z , x ) -> z e. a ) ) } $.
  $}


  ${
    $d A x y z w $.  $d B x y z w $.
    $( Kuratowski ordered pair membership in finite less than or equal to.
       (Contributed by SF, 18-Jan-2015.) $)
    opklefing $p |- ( ( A e. V /\ B e. W ) ->
       ( << A , B >> e. <_[fin] <-> E. x e. Nn B = ( A +c x ) ) ) $=
      ( vz vy vw cv cplc wceq cnnc clefin df-lefin addceq1 eqeq2d rexbidv eqeq1
      wrex opkelopkabg ) FIZGIZAIZJZKZALSUABUCJZKZALSCUFKZALSHGFMBCDEHGFANUBBKZ
      UEUGALUIUDUFUAUBBUCOPQUACKUGUHALUACUFRQT $.
      $( [18-Jan-2015] $)
  $}

  ${
    $d A w $.  $d A x $.  $d A y $.  $d A z $.  $d B w $.  $d B x $.  $d B y $.
    $d B z $.  $d w x $.  $d w y $.  $d w z $.  $d x y $.  $d x z $.  $d y z $.

    $( Kuratowski ordered pair membership in finite less than.  (Contributed by
       SF, 27-Jan-2015.) $)
    opkltfing $p |- ( ( A e. V /\ B e. W ) ->
      ( << A , B >> e. <[fin] <->
        ( A =/= (/) /\ E. x e. Nn B = ( ( A +c x ) +c 1c ) ) ) ) $=
      ( vz vw vy cv c0 wne cplc c1c wceq cnnc wrex wa cltfin df-ltfin rexbidv
      neeq1 addceq1 addceq1d eqeq2d anbi12d eqeq1 anbi2d opkelopkabg ) FIZJKZGI
      ZUIAIZLZMLZNZAOPZQBJKZUKBULLZMLZNZAOPZQUQCUSNZAOPZQHFGRBCDEHFGASUIBNZUJUQ
      UPVAUIBJUAVDUOUTAOVDUNUSUKVDUMURMUIBULUBUCUDTUEUKCNZVAVCUQVEUTVBAOUKCUSUF
      TUGUH $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d A n $.  $d N n $.
    $( Cardinal sum always yields a larger set.  (Contributed by SF,
       27-Jan-2015.) $)
    lefinaddc $p |- ( ( A e. V /\ N e. Nn ) ->
               << A , ( A +c N ) >> e. <_[fin] ) $=
      ( vn wcel cnnc wa cplc copk clefin cv wceq wrex eqid addceq2 eqeq2d mpan2
      rspcev adantl cvv wb addcexg opklefing syldan mpbird ) ACEZBFEZGAABHZIJE
      ZUHADKZHZLZDFMZUGUMUFUGUHUHLZUMUHNULUNDBFUJBLUKUHUHUJBAOPRQSUFUGUHTEUIUMU
      AABCFUBDAUHCTUCUDUE $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d M a b x $.  $d N a b x $.
    $( Assuming a non-null successor, cardinal successor is one-to-one.
       Theorem X.1.19 of [Rosser] p. 526.  (Contributed by SF, 18-Jan-2015.) $)
    prepeano4 $p |- ( ( ( M e. Nn /\ N e. Nn ) /\
     ( ( M +c 1c ) = ( N +c 1c ) /\ ( M +c 1c ) =/= (/) ) ) -> M = N ) $=
      ( va vb vx cnnc wcel wa c1c cplc wceq c0 wne cv wex csn wrex vex syl5bi
      n0 cun ccompl elsuc simplll simpllr simprl wn simprr elcompl sylib elsuci
      wel sylan2b adantl eleqtrd nnsucelr syl12anc nnceleq syl22anc a1d exlimdv
      simplr rexlimdvva impr ) AFGZBFGZHZAIJZBIJZKZVHLMZABKZVKCNZVHGZCOVGVJHZVL
      CVHTVOVNVLCVNVMDNZENZPUAZKZEVPUBZQDAQVOVLEVMADUCVOVSVLDEAVTVOVPAGZVQVTGZH
      ZHZVLVSWDVEVFWAVPBGZVLVEVFVJWCUDVEVFVJWCUEZVOWAWBUFWDVFEDULUGZVRVIGWEWFWD
      WBWGVOWAWBUHVQVPERZUIZUJWDVRVHVIWCVRVHGZVOWBWAWGWJWIVPAVQWHUKUMUNVGVJWCVB
      UOVPBVQDRWHUPUQVPABURUSUTVCSVASVD $.
      $( [18-Jan-2015] $)
  $}

  ${
    $d A a b c $.
    $( Cardinal addition with the empty set.  Theorem X.1.20, corollary 1 of
       [Rosser] p. 526.  (Contributed by SF, 18-Jan-2015.) $)
    addcnul1 $p |- ( A +c (/) ) = (/) $=
      ( va vb vc c0 cplc wceq cv wcel wn eq0 cin cun wrex rex0 a1i eladdc mtbir
      wa nrex mpgbir ) AEFZEGBHZUBIZJBBUBKUDCHZDHZLEGUCUEUFMGSZDENZCANUHCAUHJUE
      AIUGDOPTUCAECDQRUA $.
      $( [18-Jan-2015] $)
  $}

  $( If cardinal addition is non-empty, then both addends are non-empty.
     Theorem X.1.20 of [Rosser] p. 526.  (Contributed by SF, 18-Jan-2015.) $)
  addcnnul $p |- ( ( A +c B ) =/= (/) -> ( A =/= (/) /\ B =/= (/) ) ) $=
    ( cplc wne wceq addceq1 addccom addcnul1 eqtri syl6eq necon3i addceq2 jca
    c0 ) ABCZNDANDBNDANONANEONBCZNANBFPBNCNNBGBHIJKBNONBNEOANCNBNALAHJKM $.
    $( [18-Jan-2015] $)

  ${
    $d m n p x t $.
    $( Lemma for ~ preaddccan1 .  Establish stratification for induction.
       (Contributed by SF, 24-Jan-2015.) $)
    preaddccan1lem1 $p |- { p | ( ( m e. Nn /\ n e. Nn ) -> ( ( (
           m +c p ) =/= (/) /\ ( m +c p ) = ( n +c p ) ) -> m = n ) ) } e. _V
        $=
      ( vt vx cv wcel wa wn cab cpw1 cimak ccompl wceq copk bitri eqtri 3bitr4i
      cun c0 cnnc cssetk cins3k cin c1c csik csymdif cdif cimagek ccnvk csn cvv
      cins2k weq cplc wne wi wo elin wrex vex elimak 0ex opkeq1 rexsn opkelcnvk
      eleq1d eqcom opkelimagek addccom dfaddc2 eqeq1i notbii elcompl wex eqeq2i
      df-ne anbi12i elimakv addcex eqvinc abbi2i compleqi complab uneq1i uneq2i
      exbii unab imor orbi2i bitr2i abbii abexv addcexlem pw1ex imakex imagekex
      cnvkex snex complex inex vvex unex eqeltrri ) AFZUAGBFZUAGHZIZCJZUBUCZUBU
      MZUDUEKKZLMUCXKUMXJUMUBUFUFUCSUGXLKKLUHZXEKZKZLZUIZUJZTUKZLZMZXRXMXFKZKZL
      ZUIZUJZUDZULLZUDZMZABUNZCJZSZSZXGXECFZUOZTUPZYPXFYOUOZNZHZYKUQZUQZCJZULYN
      XHYTIZYKURZURZCJZUUCYNXIUUECJZSUUGYMUUHXIYMUUDCJZYLSUUHYJUUIYLYJYTCJZMUUI
      YIUUJYTCYIYOYIGYOYAGZYOYHGZHYTYOYAYHUSUUKYQUULYSYOXTGZIYPTNZIUUKYQUUMUUNU
      UMTYOOZXRGZUUNUUMDFZYOOZXRGZDXSUTUUPDXRXSYOCVAZVBUUSUUPDTVCUUQTNUURUUOXRU
      UQTYOVDVGVEPUUPYOTOXQGZUUNTYOXQVCUUTVFTXPYOLZNUVBTNUVAUUNTUVBVHYOTXPUUTVC
      VIYPUVBTYPYOXEUOUVBXEYOVJYOXEVKQZVLRPPVMYOXTUUTVNYPTVQREFZYOOZYGGZEVOUVDY
      PNZUVDYRNZHZEVOUULYSUVFUVIEUVFUVEXRGZUVEYFGZHUVIUVEXRYFUSUVJUVGUVKUVHYOUV
      DOZXQGUVDUVBNUVJUVGYOUVDXPUUTEVAZVIUVDYOXQUVMUUTVFYPUVBUVDUVCVPRUVLYEGUVD
      YDYOLZNUVKUVHYOUVDYDUUTUVMVIUVDYOYEUVMUUTVFYRUVNUVDYRYOXFUOUVNXFYOVJYOXFV
      KQVPRVRPWGEYGYOUUTVSEYPYRXEYOAVAZUUTVTWARVRPWBWCYTCWDQWEUUDYKCWHQWFXHUUEC
      WHQUUFUUBCUUBXHUUAURUUFXGUUAWIUUAUUEXHYTYKWIWJWKWLQXIYMXHCWMYJYLYIYAYHXTX
      RXSXQXPXMXOWNXNXEUVOWOWOWPWQWRZTWSWPWTYGULXRYFUVPYEYDXMYCWNYBXFBVAWOWOWPW
      QWRXAXBWPXAWTYKCWMXCXCXD $.
      $( [24-Jan-2015] $)
  $}

  ${
    $d k m $.  $d k n $.  $d k p $.  $d M m $.  $d m n $.  $d m p $.  $d N m $.
    $d N n $.  $d n p $.  $d P m $.  $d P n $.  $d P p $.
    $( Cancellation law for natural addition with a non-null condition.
       (Contributed by SF, 24-Jan-2015.) $)
    preaddccan1 $p |- ( ( ( M e. Nn /\ N e. Nn /\ P e. Nn ) /\
    ( M +c P ) =/= (/) ) -> ( ( M +c P ) = ( N +c P ) <-> M = N ) ) $=
      ( vm vn vp cnnc wcel cplc c0 wne wa wceq wi neeq1d imbi2d c0c c1c addceq2
      cv vk w3a addceq1 eqeq1d eqeq1 imbi12d weq eqeq2d preaddccan1lem1 addcid1
      eqeq2 syl6eq eqeq12d anbi12d imbi1d addcass syl6eqr impexp simpr addcnnul
      syl6bb a1i simpld simpl2 simpl1 nncaddccl syl2anc simpl3 simprr prepeano4
      ad2antrl simprl syl22anc jca ex imim1d 3expib finds com12 vtoclga impbid1
      a2d 3imp1 ) BGHZCGHZAGHZUBBAIZJKZLWGCAIZMZBCMZWDWEWFWHWJWKNZWEWFDTZAIZJKZ
      WNWIMZWMCMZNZNZNZNWEWFWHWLNZNZNDBGWMBMZWTXBWEXCWSXAWFXCWOWHWRWLXCWNWGJWMB
      AUCZOXCWPWJWQWKXCWNWGWIXDUDWMBCUEUFUFPPWEWMGHZWTXEWFWOWNETZAIZMZDEUGZNZNZ
      NZNXEWTNECGXFCMZXLWTXEXMXKWSWFXMXJWRWOXMXHWPXIWQXMXGWIWNXFCAUCUHXFCWMUKUF
      PPPXEXFGHZXLXEXNXLWFXEXNLZXKXOWMFTZIZJKZXQXFXPIZMZLZXINZNXOWMQIZJKZXILZXI
      NZNXOWMUATZIZJKZYHXFYGIZMZLZXINZNXOYHRIZJKZYNYJRIZMZLZXINZNXOXKNFUAADEFUI
      XPQMZYBYFXOYTYAYEXIYTXRYDXTXIYTXQYCJXPQWMSZOYTXQWMXSXFYTXQYCWMUUAWMUJULYT
      XSXFQIXFXPQXFSXFUJULUMUNUOPFUAUGZYBYMXOUUBYAYLXIUUBXRYIXTYKUUBXQYHJXPYGWM
      SZOUUBXQYHXSYJUUCXPYGXFSUMUNUOPXPYGRIZMZYBYSXOUUEYAYRXIUUEXRYOXTYQUUEXQYN
      JUUEXQWMUUDIYNXPUUDWMSWMYGRUPUQZOUUEXQYNXSYPUUFUUEXSXFUUDIYPXPUUDXFSXFYGR
      UPUQUMUNUOPXPAMZYBXKXOUUGYBWOXHLZXINXKUUGYAUUHXIUUGXRWOXTXHUUGXQWNJXPAWMS
      ZOUUGXQWNXSXGUUIXPAXFSUMUNUOWOXHXIURVAPYFXOYDXIUSVBYGGHZXOYMYSUUJXEXNYMYS
      NUUJXEXNUBZYRYLXIUUKYRYLUUKYRLZYIYKYOYIUUKYQYOYIRJKYHRUTVCVKUULYHGHZYJGHZ
      YQYOYKUULXEUUJUUMUUJXEXNYRVDUUJXEXNYRVEZWMYGVFVGUULXNUUJUUNUUJXEXNYRVHUUO
      XFYGVFVGUUKYOYQVIUUKYOYQVLYHYJVJVMVNVOVPVQWBVRVSVOVSVTVSVTWCBCAUCWA $.
      $( [24-Jan-2015] $)
  $}

  $( Cancellation law for natural addition with a non-null condition.
     (Contributed by SF, 29-Jan-2015.) $)
  preaddccan2 $p |- ( ( ( M e. Nn /\ N e. Nn /\ P e. Nn ) /\
  ( M +c N ) =/= (/) ) -> ( ( M +c N ) = ( M +c P ) <-> N = P ) ) $=
    ( cplc wceq cnnc w3a c0 wne wa addccom eqeq12i wb 3anrot neeq1i preaddccan1
    wcel syl2anb syl5bb ) BCDZBADZECBDZABDZEZBFQZCFQZAFQZGZTHIZJCAEZTUBUAUCBCKZ
    BAKLUHUFUGUEGUBHIUDUJMUIUEUFUGNTUBHUKOBCAPRS $.
    $( [29-Jan-2015] $)

  ${
    $d A x $.
    $( If the empty set is a finite cardinal, then it is a maximal element.
       (Contributed by SF, 19-Jan-2015.) $)
    nulge $p |- ( ( (/) e. Nn /\ A e. V ) -> << A , (/) >> e. <_[fin] ) $=
      ( vx c0 cnnc wcel wa copk clefin cv cplc wceq wrex addcnul1 eqcomi eqeq2d
      addceq2 rspcev mpan2 adantr wb opklefing ancoms mpbird ) DEFZABFZGADHIFZ
      DACJZKZLZCEMZUEUKUFUEDADKZLZUKULDANOUJUMCDEUHDLUIULDUHDAQPRSTUFUEUGUKUACA
      DBEUBUCUD $.
      $( [19-Jan-2015] $)
  $}


  ${
    $d A x $.
    $( Irreflexive law for finite less than.  (Contributed by SF,
       29-Jan-2015.) $)
    ltfinirr $p |- ( A e. Nn -> -. << A , A >> e. <[fin] ) $=
      ( vx cnnc wcel copk cltfin c0 wne cv cplc c1c wceq wa wn wi 0cnsuc necomi
      wrex c0c wb df-ne addcid1 eqcomi addcass eqeq12i simpll peano1 a1i peano2
      mpbi adantl neeq1i biimpri ad2antlr preaddccan2 syl31anc syl5bb mtbiri ex
      nrexdv imnan sylib opkltfing anidms mtbird ) ACDZAAEFDZAGHZAABIZJKJZLZBCR
      ZMZVFVHVLNZOVMNVFVHVNVFVHMZVKBCVOVICDZMZVKSVIKJZLZSVRHVSNVRSVIPQSVRUAUJVK
      ASJZAVRJZLZVQVSAVTVJWAVTAAUBZUCAVIKUDUEVQVFSCDZVRCDZVTGHZWBVSTVFVHVPUFWDV
      QUGUHVPWEVOVIUIUKVHWFVFVPWFVHVTAGWCULUMUNVRASUOUPUQURUTUSVHVLVAVBVFVGVMTB
      AACCVCVDVE $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.
    $( Transitivity law for finite less than and less than or equal.
       (Contributed by SF, 2-Feb-2015.) $)
    leltfintr $p |- ( ( A e. Nn /\ B e. Nn /\ C e. Nn ) ->
       ( ( << A , B >> e. <_[fin] /\ << B , C >> e. <[fin] ) ->
         << A , C >> e. <[fin] ) ) $=
      ( vx vy vz cnnc wcel copk cltfin cv cplc wceq wrex wi wb wa c0 wne c1c
      w3a clefin opklefing 3adant3 simpld a1i nncaddccl 3adant1 addcass addceq1
      addcnnul ax-mp addceq2 syl rspcev syl2anc eqeq1 rexbidv syl5ibrcom 3expa
      eqeq2d adantllr rexlimdva anim12d addcexg adantlr simplr opkltfing adantr
      cvv 3imtr4d opkeq1 eleq1d imbi1d 3adant2 sylbid imp3a ) AGHZBGHZCGHZUAZAB
      IUBHZBCIZJHZACIJHZWAWBBADKZLZMZDGNZWDWEOZVRVSWBWIPVTDABGGUCUDVRVTWIWJOVSV
      RVTQZWHWJDGWKWFGHZQZWJWHWGCIZJHZWEOWMWGRSZCWGEKZLZTLZMZEGNZQZARSZCAFKZLZT
      LZMZFGNZQZWOWEWMWPXCXAXHWPXCOWMWPXCWFRSAWFUKUEUFWMWTXHEGVRWLWQGHZWTXHOZVT
      VRWLXJXKVRWLXJUAZXHWTWSXFMZFGNZXLWFWQLZGHZWSAXOLZTLZMZXNWLXJXPVRWFWQUGUHX
      SXLWRXQMXSAWFWQUIWRXQTUJULUFXMXSFXOGXDXOMZXFXRWSXTXEXQMXFXRMXDXOAUMXEXQTU
      JUNVAUOUPWTXGXMFGCWSXFUQURUSUTVBVCVDWMWGVJHZVTWOXBPVRWLYAVTAWFGGVEVFVRVTW
      LVGEWGCVJGVHUPWKWEXIPWLFACGGVHVIVKWHWDWOWEWHWCWNJBWGCVLVMVNUSVCVOVPVQ $.
      $( [2-Feb-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.
    $( Transitivity law for finite less than.  (Contributed by SF,
       29-Jan-2015.) $)
    ltfintr $p |- ( ( A e. Nn /\ B e. Nn /\ C e. Nn ) ->
       ( ( << A , B >> e. <[fin] /\ << B , C >> e. <[fin] ) ->
         << A , C >> e. <[fin] ) ) $=
      ( vx vy vz cnnc wcel c0 cv cplc c1c wceq wrex wa cltfin addceq1 opkltfing
      copk wb w3a wne an4 wi simpl a1i reeanv addccom peano2 syl5eqel nncaddccl
      sylan2 adantl syl eqeq2d biimpa addceq2 addcass syl6eqr rspcev ex syl2im
      rexlimdvva syl5bir anim12d syl5bi 3adant3 3adant1 anbi12d 3adant2 3imtr4d
      eqtri ) AGHZBGHZCGHZUAZAIUBZBADJZKZLKZMZDGNZOZBIUBZCBEJZKZLKZMZEGNZOZOZVQ
      CAFJZKZLKZMZFGNZOZABSPHZBCSPHZOACSPHZWKVQWDOZWBWIOZOVPWQVQWBWDWIUCVPXAVQX
      BWPXAVQUDVPVQWDUEUFXBWAWHOZEGNDGNVPWPWAWHDEGGUGVPXCWPDEGGVPVRGHZWEGHZOZOV
      RLWEKZKZGHZXCCVTWEKZLKZMZWPXFXIVPXEXDXGGHXIXEXGWELKGLWEUHWEUIUJVRXGUKULUM
      WAWHXLWAWGXKCWAWFXJMWGXKMBVTWEQWFXJLQUNUOUPXIXLWPWOXLFXHGWLXHMZWNXKCXMWMX
      JMWNXKMXMWMAXHKZXJWLXHAUQXJVSXGKXNVSLWEURAVRXGURVLUSWMXJLQUNUOUTVAVBVCVDV
      EVFVPWRWCWSWJVMVNWRWCTVODABGGRVGVNVOWSWJTVMEBCGGRVHVIVMVOWTWQTVNFACGGRVJV
      K $.
      $( [29-Jan-2015] $)
  $}

  $( Asymmetry law for finite less than.  (Contributed by SF, 29-Jan-2015.) $)
  ltfinasym $p |- ( ( A e. Nn /\ B e. Nn ) ->
   ( << A , B >> e. <[fin] -> -. << B , A >> e. <[fin] ) ) $=
    ( cnnc wcel wa copk cltfin wn ltfinirr ad2antrr wi ltfintr 3anidm13 expdimp
    mtod ex ) ACDZBCDZEZABFGDZBAFGDZHSTEUAAAFGDZQUBHRTAIJSTUAUBQRTUAEUBKABALMNO
    P $.
    $( [29-Jan-2015] $)

  $( Cardinal zero is a minimal element for finite less than or equal.
     (Contributed by SF, 29-Jan-2015.) $)
  0cminle $p |- ( A e. Nn -> << 0c , A >> e. <_[fin] ) $=
    ( cnnc wcel c0c copk cplc clefin addcid2 opkeq2i peano1 lefinaddc syl5eqelr
    mpan ) ABCZDAEDDAFZEZGOADAHIDBCNPGCJDABKML $.
    $( [29-Jan-2015] $)

  ${
    $d A x $.
    $( One plus a finite cardinal is strictly greater.  (Contributed by SF,
       29-Jan-2015.) $)
    ltfinp1 $p |- ( ( A e. V /\ A =/= (/) ) ->
       << A , ( A +c 1c ) >> e. <[fin] ) $=
      ( vx wcel c0 wne wa c1c cplc copk cltfin wceq cnnc wrex simpr c0c addcid1
      cv peano1 cvv addceq1i eqcomi addceq2 addceq1d eqeq2d rspcev mp2an jctir
      wb 1cex addcexg mpan2 opkltfing mpdan adantr mpbird ) ABDZAEFZGZAAHIZJKDZ
      URUTACRZIZHIZLZCMNZGZUSURVFUQUROPMDUTAPIZHIZLZVFSVIUTVHAHAQUAUBVEVJCPMVBP
      LZVDVIUTVKVCVHHVBPAUCUDUEUFUGUHUQVAVGUIZURUQUTTDZVLUQHTDVMUJAHBTUKULCAUTB
      TUMUNUOUP $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Transfer from less than or equal to less than.  (Contributed by SF,
       29-Jan-2015.) $)
    lefinlteq $p |- ( ( A e. V /\ B e. W /\ A =/= (/) ) ->
       ( << A , B >> e. <_[fin] <-> ( << A , B >> e. <[fin] \/ A = B ) ) ) $=
      ( vx vy wcel cv cplc wceq cnnc wrex c1c wo wb c0c addceq2 eqeq1 rexbidv
      wa c0 wne w3a copk clefin nnc0suc addcid1 syl6req addcass syl6eqr orim12i
      cltfin reximi sylbi orcomd eqeq2 syl5ibrcom rexlimiv eqeq2i peano2 eqeq2d
      orbi12d rspcev sylan rexlimiva peano1 eqcomi mp2an mpbii jaoi impbii a1i
      sylan2b opklefing 3adant3 adantr ibar adantl bitr4d orbi1d 3impa 3bitr4d
      opkltfing ) ACGZBDGZAUAUBZUCZBAEHZIZJZEKLZBAFHZIMIZJZFKLZABJZNZABUDZUEGZW
      RULGZWPNZWKWQOWGWKWQWJWQEKWHKGZWQWJWIWMJZFKLZAWIJZNXBXEXDXBWHPJZWHWLMIZJZ
      FKLZNXEXDNFWHUFXFXEXIXDXFWIAPIZAWHPAQZAUGZUHXHXCFKXHWIAXGIZWMWHXGAQZAWLMU
      IZUJUMUKUNUOWJWOXDWPXEWJWNXCFKBWIWMRSBWIAUPVBUQURWOWKWPWNWKFKWNWLKGZBXMJZ
      WKWMXMBXOUSXPXGKGXQWKWLUTWJXQEXGKXHWIXMBXNVAVCVDVMVEWPXEEKLZWKPKGAXJJZXRV
      FXJAXLVGXEXSEPKXFWIXJAXKVAVCVHWPXEWJEKABWIRSVIVJVKVLWDWEWSWKOWFEABCDVNVOW
      DWEWFXAWQOWDWETZWFTZWTWOWPYAWTWFWOTZWOXTWTYBOWFFABCDWCVPWFWOYBOXTWFWOVQVR
      VSVTWAWB $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d a b $.  $d a c $.  $d a d $.  $d a t $.  $d a w $.  $d a y $.  $d a z $.
    $d b c $.  $d b d $.  $d b t $.  $d b w $.  $d b y $.  $d b z $.  $d c d $.
    $d c t $.  $d c w $.  $d c x $.  $d c y $.  $d c z $.  $d d t $.  $d d w $.
    $d d y $.  $d d z $.  $d t w $.  $d t x $.  $d t y $.  $d t z $.  $d w x $.
    $d w y $.  $d w z $.  $d x y $.  $d x z $.  $d y z $.

    $( Finite less than is stratified.  (Contributed by SF, 29-Jan-2015.) $)
    ltfinex $p |- <[fin] e. _V $=
      ( vx vt vc va vb vd cssetk csik cpw1 csn copk wceq wrex wa wex opksnelsik
      wcel snex 3bitri sikex vy vz cltfin cvv cxpk cins3k cins2k cin c1c ccompl
      vw cimak cun csymdif cdif cimagek cnnc c0 cv wne cplc df-ltfin elin elvvk
      cab anbi1i 19.41vv eleq1 opkex elimak elpw12 r19.41v bitr4i exbii rexcom4
      wn df-rex 3bitr4i opkeq1 eleq1d ceqsexv elpw131c 19.41v excom wb elpw161c
      wel elsymdif otkelins3k vex elssetk otkelins2k elpw181c ndisjrelk elcompl
      bitri notbii df-ne con2bii elpw1111c orbi12i elun bibi12i wal dfcleq alex
      wo anbi12i rexcom df-addc eqeq2i abeq2 opkelimagek dfaddc2 addcex addceq1
      eqeq2d rexbii opkelxpk mpbiran2 eldif anbi2i syl6bb pm5.32i 2exbii bitr3i
      elsnc ancom abbi2i eqtr4i vvex xpkex ssetkex ins3kex ins2kex pw1ex complex
      inex imakex symdifex 1cex unex addcexlem imagekex nncex difex eqeltri ) U
      CUDUDUEZGHZHZHZHZUFZUUJUFZUGZGUFZUGZUGZUGZUUPGUGZUHZUIIZIZULZUJZHZHZHZHZH
      ZHZHZUFZUULHZUFZUGZUGZUVNHZHZHZHZUFZUVSUFZUGZUMZUNZUVCIZIZIZIZIZIZIZIZIZU
      LZUJZUHZUHZUWLULZUHZUWJULZUGZUNZUWJULZUJZUVEUFUUTUGUUQUUNUMUNUWHULUOZUVCU
      LZUPZUGZUGZUHZUWGULZUQIZIZULZURJZUDUEZUOZUHZUDUCAUSZUAUSZUBUSZKZLZUYBURUT
      ZUYCUYBUKUSZVAZUIVAZLZUKUQMZNZNZUBOUAOZAVEUXTAUAUBUKVBUYNAUXTUYAUXTQUYAUU
      HQZUYAUXSQZNUYEUBOUAOZUYPNZUYNUYAUUHUXSVCUYOUYQUYPUAUBUYAVDVFUYRUYEUYPNZU
      BOUAOUYNUYEUYPUAUBVGUYSUYMUAUBUYEUYPUYLUYEUYPUYDUXSQZUYLUYAUYDUXSVHUYDUXP
      QZUYDUXRQZVPZNUYKUYBURLZVPZNZUYTUYLVUAUYKVUCVUEVUABUSZUYDKZUXMQZBUXOMZVUG
      UYGJZJZLZVUINZBOZUKUQMZUYKBUXMUXOUYDUYBUYCVIZVJVUGUXOQZVUINZBOVUNUKUQMZBO
      VUJVUPVUSVUTBVUSVUMUKUQMZVUINVUTVURVVAVUIUKVUGUQVKVFVUMVUIUKUQVLVMVNVUIBU
      XOVQVUNUKBUQVOVRVUOUYJUKUQVUOVULUYDKZUXMQZUYAUYHLZUYCUYAUIVAZLZNZAOZUYJVU
      IVVCBVULVUKRZVUMVUHVVBUXMVUGVULUYDVSVTWAVVCVUGVVBKZUXLQZBUWGMZVUGUYAJZJZJ
      ZJZLZVVKNZBOZAOZVVHBUXLUWGVVBVULUYDVIZVJVUGUWGQZVVKNZBOVVRAOZBOVVLVVTVWCV
      WDBVWCVVQAOZVVKNVWDVWBVWEVVKAVUGWBVFVVQVVKAWCVMVNVVKBUWGVQVVRABWDVRVVSVVG
      AVVSVVPVVBKZUXLQZVWFUXFQZVWFUXKQZNVVGVVKVWGBVVPVVORZVVQVVJVWFUXLVUGVVPVVB
      VSVTWAVWFUXFUXKVCVWHVVDVWIVVFVWFUXEQZVPCAWGZDUSZEUSZUHZURLZCUSZVWMVWNUMZL
      ZNZEUYGMDUYBMZWEZVPZCOZVPZVWHVVDVWKVXDVWKVUGVWFKZUXDQZBUWJMZVUGVWQJZJZJZJ
      ZJZJZJZLZVXGNZBOZCOZVXDBUXDUWJVWFVVPVVBVIZVJVUGUWJQZVXGNZBOVXQCOZBOVXHVXS
      VYBVYCBVYBVXPCOZVXGNVYCVYAVYDVXGCVUGWFVFVXPVXGCWCVMVNVXGBUWJVQVXQCBWDVRVX
      RVXCCVXRVXOVWFKZUXDQZVYEUUMQZVYEUXCQZWEZVPVXCVXGVYFBVXOVXNRVXPVXFVYEUXDVU
      GVXOVWFVSVTWAVYEUUMUXCWHVYIVXBVYGVWLVYHVXAVYGVXMVVPKUULQVXLVVOKUUKQZVWLVX
      MVVPVVBUULVXLRZVWJVWAWIVXLVVOUUKVXKRZVVNRPVYJVXKVVNKUUJQVXJVVMKUUIQZVWLVX
      KVVNUUJVXJRZVVMRZPVXJVVMUUIVXIRZUYARPVYMVXIUYAKGQVWLVXIUYAGVWQRZAWJZPVWQU
      YACWJZVYRWKWPSSVXMVVBKZUXBQZEUKWGZVWTDUYBMZNZEOZVYHVXAWUAVUGVYTKZUXAQZBUW
      JMZVUGVWNJZJZJZJZJZJZJZLZWUGNZBOZEOZWUEBUXAUWJVYTVXMVVBVIZVJVYAWUGNZBOWUQ
      EOZBOWUHWUSWVAWVBBWVAWUPEOZWUGNWVBVYAWVCWUGEVUGWFVFWUPWUGEWCVMVNWUGBUWJVQ
      WUQEBWDVRWURWUDEWURWUOVYTKZUXAQZWVDUUOQZWVDUWTQZNWUDWUGWVEBWUOWUNRZWUPWUF
      WVDUXAVUGWUOVYTVSVTWAWVDUUOUWTVCWVFWUBWVGWUCWVFWUMVVBKUUNQWUKVULKUUJQZWUB
      WUMVXMVVBUUNWULRZVYKVWAWLWUKVULUYDUUJWUJRZVVIVUQWIWVIWUJVUKKUUIQWUIUYGKGQ
      WUBWUJVUKUUIWUIRZUYGRPWUIUYGGVWNRZUKWJZPVWNUYGEWJZWVNWKSSWVGDUAWGZVWTNZDO
      ZWUCWVGVUGWVDKZUWSQZBUWLMZVUGVWMJZJZJZJZJZJZJZJZJZLZWVTNZBOZDOZWVRBUWSUWL
      WVDWUOVYTVIZVJVUGUWLQZWVTNZBOWWLDOZBOWWAWWNWWQWWRBWWQWWKDOZWVTNWWRWWPWWSW
      VTDVUGWMVFWWKWVTDWCVMVNWVTBUWLVQWWLDBWDVRWWMWVQDWWMWWJWVDKZUWSQZWWTUUSQZW
      WTUWRQZNWVQWVTWXABWWJWWIRZWWKWVSWWTUWSVUGWWJWVDVSVTWAWWTUUSUWRVCWXBWVPWXC
      VWTWXBWWHVYTKUURQWWFVVBKUUQQZWVPWWHWUOVYTUURWWGRZWVHWUTWLWWFVXMVVBUUQWWER
      ZVYKVWAWLWXEWWDUYDKUUPQWWBUYBKGQWVPWWDVULUYDUUPWWCRZVVIVUQWLWWBUYBUYCGVWM
      RZUAWJZUBWJZWIVWMUYBDWJZWXJWKSSWXCWWTUVMQZWWTUWQQZNVWTWWTUVMUWQVCWXMVWPWX
      NVWSWXMWWHWUOKUVLQWWGWUNKUVKQZVWPWWHWUOVYTUVLWXFWVHWUTWIWWGWUNUVKWWFRZWUM
      RZPWXOWWFWUMKUVJQWWEWULKUVIQZVWPWWFWUMUVJWXGWVJPWWEWULUVIWWDRZWUKRZPWXRWW
      DWUKKUVHQWWCWUJKUVGQZVWPWWDWUKUVHWXHWVKPWWCWUJUVGWWBRZWVLPWYAWWBWUIKUVFQV
      WMVWNKZUVEQZVWPWWBWUIUVFWXIWVMPVWMVWNUVEWXLWVOPWYCUVDQZVPVWOURUTZVPWYDVWP
      WYEWYFVWMVWNWXLWVOWNWQWYCUVDVWMVWNVIWOWYFVWPVWOURWRWSVRSSSSWWTUWPQZVPFCWG
      ZFUSZVWRQZWEZVPZFOZVPZWXNVWSWYGWYMWYGVUGWWTKZUWFQZBUWOMZVUGWYIJZJZJZJZJZJ
      ZJZJZJZJZJZJZLZWYPNZBOZFOZWYMBUWFUWOWWTWWJWVDVIZVJVUGUWOQZWYPNZBOXUKFOZBO
      WYQXUMXUPXUQBXUPXUJFOZWYPNXUQXUOXURWYPFVUGWTVFXUJWYPFWCVMVNWYPBUWOVQXUKFB
      WDVRXULWYLFXULXUIWWTKZUWFQZXUSUVQQZXUSUWEQZWEZVPWYLWYPXUTBXUIXUHRXUJWYOXU
      SUWFVUGXUIWWTVSVTWAXUSUVQUWEWHXVCWYKXVAWYHXVBWYJXVAXUGWVDKZUVPQXUEVYTKUVO
      QZWYHXUGWWJWVDUVPXUFRZWXDWWOWLXUEWUOVYTUVOXUDRZWVHWUTWLXVEXUCVXMKUVNQXUBV
      XLKUULQZWYHXUCVXMVVBUVNXUBRZVYKVWAWIXUBVXLUULXUARZVYLPXVHXUAVXKKUUKQWYTVX
      JKUUJQZWYHXUAVXKUUKWYTRZVYNPWYTVXJUUJWYSRZVYPPXVKWYSVXIKUUIQWYRVWQKGQWYHW
      YSVXIUUIWYRRZVYQPWYRVWQGWYIRZVYSPWYIVWQFWJZVYSWKSSSSXUSUWBQZXUSUWDQZXGFDW
      GZFEWGZXGXVBWYJXVQXVSXVRXVTXVQXUGWWJKUWAQXUFWWIKUVTQZXVSXUGWWJWVDUWAXVFWX
      DWWOWIXUFWWIUVTXUERWWHRPXWAXUEWWHKUVSQXUDWWGKUVRQZXVSXUEWWHUVSXVGWXFPXUDW
      WGUVRXUCRZWXPPXWBXUCWWFKUVNQXUBWWEKUULQZXVSXUCWWFUVNXVIWXGPXUBWWEUULXVJWX
      SPXWDXUAWWDKUUKQWYTWWCKUUJQZXVSXUAWWDUUKXVLWXHPWYTWWCUUJXVMWYBPXWEWYSWWBK
      UUIQWYRVWMKGQXVSWYSWWBUUIXVNWXIPWYRVWMGXVOWXLPWYIVWMXVPWXLWKSSSSSXVRXVDUW
      CQXUEWUOKUVSQZXVTXUGWWJWVDUWCXVFWXDWWOWLXUEWUOVYTUVSXVGWVHWUTWIXWFXUDWUNK
      UVRQXUCWUMKUVNQZXVTXUDWUNUVRXWCWXQPXUCWUMUVNXVIWVJPXWGXUBWULKUULQXUAWUKKU
      UKQZXVTXUBWULUULXVJWXTPXUAWUKUUKXVLWVKPXWHWYTWUJKUUJQWYSWUIKUUIQZXVTWYTWU
      JUUJXVMWVLPWYSWUIUUIXVNWVMPXWIWYRVWNKGQXVTWYRVWNGXVOWVOPWYIVWNXVPWVOWKWPS
      SSSXAXUSUWBUWDXBWYIVWMVWNXBVRXCWQSVNSWQWWTUWPXUNWOVWSWYKFXDWYNFVWQVWRXEWY
      KFXFWPVRXHWPXHSVNSVWTDUYBVQVMXHSVNSVXMVVPVVBUXBVYKVWJVWAWLVXAWUCEUYGMWUEV
      WTDEUYBUYGXIWUCEUYGVQWPVRXCWQSVNSWQVWFUXEVXTWOVVDUYAVXACVEZLVXBCXDVXEUYHX
      WJUYACDEUYBUYGXJXKVXACUYAXLVXBCXFSVRVWIVVNUYDKUXJQUYAUYCKUXIQZVVFVVNVULUY
      DUXJVYOVVIVUQWLUYAUYBUYCUXIVYRWXJWXKWLXWKUYCUXHUYAULZLVVFUYAUYCUXHVYRWXKX
      MVVEXWLUYCUYAUIXNXKVMSXHSVNSVVFUYJAUYHUYBUYGWXJWVNXOVVDVVEUYIUYCUYAUYHUIX
      PXQWASXRSVUBVUDVUBUYBUXQQZVUDVUBXWMUYCUDQWXKUYBUYCUXQUDWXJWXKXSXTUYBURWXJ
      YGWPWQXHUYDUXPUXRYAUYLUYKUYFNVUFUYFUYKYHUYFVUEUYKUYBURWRYBWPVRYCYDYEYFSYI
      YJUUHUXSUDUDYKYKYLUXPUXRUXMUXOUXLUWGUXFUXKUXEUXDUWJUUMUXCUULUUKUUJUUIGYMT
      TZTTZYNUXBUXAUWJUUOUWTUUNUUJXWNYNYOUWSUWLUUSUWRUURUUQUUPGYMYNZYOYOYOUVMUW
      QUVLUVKUVJUVIUVHUVGUVFUVEUVDUVAUVCUUPUUTXWPGYMYOYRUVBUIUUAYPYPZYSYQTTTTTT
      TYNUWPUWFUWOUVQUWEUVPUVOUVNUULXWOTZYNYOYOUWBUWDUWAUVTUVSUVRUVNXWRTTZTTYNU
      WCUVSXWSYNYOUUBYTUWNUWMUWLUWKUWJUWIUWHUWGUVCXWQYPZYPYPYPZYPYPZYPYPYPYSYQY
      RYRXXBYSYRXXAYSYOYTXXAYSYQUXJUXIUXHUXGUVCUUCXWQYSUUDYOYOYRXWTYSUXNUQUUEYP
      YPYSUXQUDURRYKYLUUFYRUUG $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d m n t $.
    $( Lemma for ~ ltfintri .  Establish stratification for induction.
       (Contributed by SF, 29-Jan-2015.) $)
    ltfintrilem1 $p |- { m | ( n e. Nn -> ( m =/= (/) ->
     ( << m , n >> e. <[fin] \/ m = n \/ << n , m >> e. <[fin] ) )
                                                      ) } e. _V $=
      ( vt cv wcel wn cab c0 csn cltfin cimak cun copk weq wi wo unab elun unex
      bitri cnnc ccnvk wne w3o cvv wceq wrex vex elimak opkeq1 eleq1d opkelcnvk
      df-sn rexsn elsnc orbi12i df-3or 3bitr4i abbi2i uneq12i eqtri uneq2i df-ne
      imor imbi1i df-or bitr4i orbi2i abbii 3eqtr4i abexv ltfinex cnvkex imakex
      snex eqeltrri ) BDZUAEZFZAGZHIZJUBZVQIZKZWCLZJWCKZLZLZLZVRADZHUCZWJVQMJEZ
      ABNZVQWJMZJEZUDZOZOZAGZUEVTWJHUFZWPPZAGZLVSXAPZAGWIWSVSXAAQWHXBVTWHWTAGZW
      PAGZLXBWAXDWGXEAHUMWPAWGWJWEEZWJWFEZPWLWMPZWOPWJWGEWPXFXHXGWOXFWJWDEZWJWC
      EZPXHWJWDWCRXIWLXJWMXIWNWBEZWLXICDZWJMZWBEZCWCUGXKCWBWCWJAUHZUIXNXKCVQBUH
      ZCBNZXMWNWBXLVQWJUJZUKUNTVQWJJXPXOULTWJVQXOUOUPTXGXMJEZCWCUGWOCJWCWJXOUIX
      SWOCVQXPXQXMWNJXRUKUNTUPWJWEWFRWLWMWOUQURUSUTWTWPAQVAVBWRXCAWRVSWQPXCVRWQ
      VDWQXAVSWQWTFZWPOXAWKXTWPWJHVCVEWTWPVFVGVHTVIVJVTWHVSAVKWAWGHVOWEWFWDWCWB
      WCJVLVMVQVOZVNYASJWCVLYAVNSSSVP $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d M m n k p $.  $d N m n k p $.
    $( Trichotomy law for finite less than.  (Contributed by SF,
       29-Jan-2015.) $)
    ltfintri $p |- ( ( M e. Nn /\ N e. Nn /\
              M =/= (/) ) ->
       ( << M , N >> e. <[fin] \/ M = N \/ << N , M >> e. <[fin] ) ) $=
      ( vn vk cnnc wcel wne copk cltfin wceq w3o opkeq2 eleq1d opkeq1 3orbi123d
      vp c0 wi imbi2d c0c vm cv eqeq2 weq cplc ltfintrilem1 neeq1 eqeq1 imbi12d
      c1c wa wo clefin 0cminle adantr cvv wb 0cex lefinlteq mp3an1 orcom syl6bb
      mpbid 3mix2 3mix1 jaoi syl ex addcnnul simpld 3ad2ant3 wrex addc32 eqeq2i
      w3a rexbii biimpi adantl a1i opkltfing 3adant3 simp1 peano2 simp2 syl2anc
      opklefing 3imtr4d syl3an1 sylibd ltfinp1 sylan2 3adant2 syl5ibcom ltfintr
      syl6 3mix3 syl3anc mpan2d 3jaod embantd 3expia com23 a2d finds com12 3imp
      vtoclga ) AEFZBEFZAQGZABHZIFZABJZBAHZIFZKZXIXHXJXPRZXHXJACUBZHZIFZAXRJZXR
      AHZIFZKZRZRXHXQRCBEXRBJZYEXQXHYFYDXPXJYFXTXLYAXMYCXOYFXSXKIXRBALMXRBAUCYF
      YBXNIXRBANMOSSXHXREFZYEYGDUBZQGZYHXRHZIFZDCUDZXRYHHZIFZKZRZRYGTQGZTXRHZIF
      ZTXRJZXRTHZIFZKZRZRYGUAUBZQGZUUEXRHZIFZUACUDZXRUUEHZIFZKZRZRYGUUEUJUEZQGZ
      UUNXRHZIFZUUNXRJZXRUUNHZIFZKZRZRYGYERDUAADCUFYHTJZYPUUDYGUVCYIYQYOUUCYHTQ
      UGUVCYKYSYLYTYNUUBUVCYJYRIYHTXRNMYHTXRUHUVCYMUUAIYHTXRLMOUISDUAUDZYPUUMYG
      UVDYIUUFYOUULYHUUEQUGUVDYKUUHYLUUIYNUUKUVDYJUUGIYHUUEXRNMYHUUEXRUHUVDYMUU
      JIYHUUEXRLMOUISYHUUNJZYPUVBYGUVEYIUUOYOUVAYHUUNQUGUVEYKUUQYLUURYNUUTUVEYJ
      UUPIYHUUNXRNMYHUUNXRUHUVEYMUUSIYHUUNXRLMOUISYHAJZYPYEYGUVFYIXJYOYDYHAQUGU
      VFYKXTYLYAYNYCUVFYJXSIYHAXRNMYHAXRUHUVFYMYBIYHAXRLMOUISYGYQUUCYGYQUKZYTYS
      ULZUUCUVGYRUMFZUVHYGUVIYQXRUNUOUVGUVIYSYTULZUVHTUPFYGYQUVIUVJUQURTXRUPEUS
      UTYSYTVAVBVCYTUUCYSYTYSUUBVDYSYTUUBVEVFVGVHUUEEFZYGUUMUVBUVKYGUUMUVBRUVKY
      GUKUUOUUMUVAUVKYGUUOUUMUVARUVKYGUUOVOZUUFUULUVAUUOUVKUUFYGUUOUUFUJQGUUEUJ
      VIVJZVKUVLUUHUVAUUIUUKUVLUUHUUQUURULZUVAUVLUUHUUPUMFZUVNUVLUUFXRUUEPUBZUE
      UJUEZJZPEVLZUKZXRUUNUVPUEZJZPEVLZUUHUVOUVTUWCRUVLUVSUWCUUFUVSUWCUVRUWBPEU
      VQUWAXRUUEUVPUJVMVNVPVQVRVSUVKYGUUHUVTUQUUOPUUEXREEVTWAUVLUUNEFZYGUVOUWCU
      QUVLUVKUWDUVKYGUUOWBZUUEWCZVGZUVKYGUUOWDZPUUNXREEWFWEWGUVKUWDYGUUOUVOUVNU
      QUWFUUNXREEUSWHWIUUQUVAUURUUQUURUUTVEUURUUQUUTVDVFWOUVLUUIUUTUVAUVLUUEUUN
      HZIFZUUIUUTUVKUUOUWJYGUUOUVKUUFUWJUVMUUEEWJWKWLZUUIUWIUUSIUUEXRUUNNMWMUUT
      UUQUURWPZWOUVLUUKUUTUVAUVLUUKUWJUUTUWKUVLYGUVKUWDUUKUWJUKUUTRUWHUWEUWGXRU
      UEUUNWNWQWRUWLWOWSWTXAXBVHXCXDXEXGXEXF $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( Less than or equal to is reflexive.  (Contributed by SF, 2-Feb-2015.) $)
    lefinrflx $p |- ( A e. V -> << A , A >> e. <_[fin] ) $=
      ( vx wcel copk clefin cv cplc wceq cnnc c0c peano1 addcid1 eqcomi addceq2
      wrex eqeq2d rspcev mp2an wb opklefing anidms mpbiri ) ABDZAAEFDZAACGZHZI
      ZCJPZKJDAAKHZIZUILUJAAMNUHUKCKJUFKIUGUJAUFKAOQRSUDUEUITCAABBUAUBUC $.
      $( [2-Feb-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Less than implies less than or equal.  (Contributed by SF,
       2-Feb-2015.) $)
    ltlefin $p |- ( ( A e. V /\ B e. W ) ->
             ( << A , B >> e. <[fin] -> << A , B >> e. <_[fin] ) ) $=
      ( vx vy wcel wa c0 wne cv cplc c1c wceq cnnc wrex copk cltfin clefin wi
      addcass eqeq2i peano2 addceq2 eqeq2d rspcev sylan2b rexlimiva adantl a1i
      sylan opkltfing opklefing 3imtr4d ) ACGBDGHZAIJZBAEKZLMLZNZEOPZHZBAFKZLZN
      ZFOPZABQZRGVFSGVAVETUOUTVEUPUSVEEOUSUQOGZBAUQMLZLZNZVEURVIBAUQMUAUBVGVHOG
      VJVEUQUCVDVJFVHOVBVHNVCVIBVBVHAUDUEUFUKUGUHUIUJEABCDULFABCDUMUN $.
      $( [2-Feb-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Less than or equal is the same as negated less than.  (Contributed by
       SF, 2-Feb-2015.) $)
    lenltfin $p |- ( ( A e. Nn /\ B e. Nn ) ->
       ( << A , B >> e. <_[fin] <-> -. << B , A >> e. <[fin] ) ) $=
      ( cnnc wcel wa copk clefin cltfin wn ltfinirr adantr wi leltfintr expdimp
      3anidm13 c0 wceq opkeq2 eleq1d wo mtod nulge ancoms anbi2d imbi12d mpbiri
      ex eleq1 a1dd wne w3o simplr simpll simpr ltfintri 3orass sylib lefinrflx
      syl3anc ord syl5ibrcom ltlefin jaod syld expcom pm2.61ine impbid ) ACDZBC
      DZEZABFZGDZBAFHDZIZVJVLVNVJVLEVMAAFZHDZVJVPIZVLVHVQVIAJKKVJVLVMVPVHVIVLVM
      EVPLABAMONUAUGVJVNVLLZLBPBPQZVJVLVNVSVJVLLVHPCDZEZAPFZGDZLVTVHWCACUBUCVSV
      JWAVLWCVSVIVTVHBPCUHUDVSVKWBGBPARSUEUFUIVJBPUJZVRVJWDEZVNBAQZVKHDZTZVLWEV
      MWHWEVMWFWGUKZVMWHTWEVIVHWDWIVHVIWDULVHVIWDUMVJWDUNBAUOUSVMWFWGUPUQUTWEWF
      VLWGVJWFVLLWDVJVLWFVOGDZVHWJVIACURKWFVKVOGBAARSVAKVJWGVLLWDABCCVBKVCVDVEV
      FVG $.
      $( [2-Feb-2015] $)
  $}

  ${
    $d A a $.  $d a b $.  $d a c $.  $d a d $.  $d a k $.  $d a m $.  $d a n $.
    $d a x $.  $d B a $.  $d B b $.  $d b c $.  $d b d $.  $d b k $.  $d b m $.
    $d b n $.  $d b t $.  $d b x $.  $d c d $.  $d c k $.  $d c m $.  $d c x $.
    $d d k $.  $d d m $.  $d d x $.  $d k m $.  $d k x $.  $d m n $.  $d m t $.
    $( A subset of a finite set is itself finite.  Theorem X.1.21 of [Rosser]
       p. 527.  (Contributed by SF, 19-Jan-2015.) $)
    ssfin $p |- ( ( A e. V /\ B e. Fin /\ A C_ B ) -> A e. Fin ) $=
      ( va vb vn vm vt vx wcel cfin wss cv wi wceq wa wal cssetk cvv wex imbi2d
      vd vk vc sseq1 eleq1 imbi12d sseq2 imbi1d wel cnnc wrex elfin c0 c1c cplc
      ccompl cimak cpw1 cxpk cin cab wn elcompl alcom impexp albii 19.21v bitri
      vex copk elimak csn df-rex anbi1i 19.41v bitr4i exbii excom opkeq1 eleq1d
      el1c ceqsexv elssetk opkelxpk mpbiran2 snelpw1 ancom wb opkelssetkg mp2an
      snex elin anbi12i exanali 3bitri con2bii abbi2i ssetkex finex imakex vvex
      complex pw1ex xpkex inex 1cex eqeltrri c0c eleq2 df-0c eleq2i elsnc syl6bb
      anbi1d 2albidv weq elequ2 adantl sseq12 anbi12d adantr cbval2v ss0b sylib
      biimpa 0fin syl6eqel wo w3a cun 3ad2ant2 syl5eq df-dif df-ss sylibr com23
      cdif imp3a ex gen2 wpss sspss dfpss4 orbi1i simp1 snid simprbi mt2 undif1
      eldif snssi ssequn2 simp3r eqeltrd difex nnsucelr syl12anc inass 3eqtr4ri
      a1i ineq2i 3ad2ant3 difeq1d difsn eqtrd jca 3adant1r spc2gv 3ad2ant1 mpd
      biimpi 3exp rexlimdv peano2 rspcev syl biimprd syl9 jaod syl5bi alrimivv
      exp5c finds 19.21bbi exp3a rexlimiv sylbi vtoclga vtoclg 3imp ) ACJBKJZAB
      LZAKJZUWLDMZBLZUWOKJZNZNUWLUWMUWNNZNDACUWOAOZUWRUWSUWLUWTUWPUWMUWQUWNUWOA
      BUEUWOAKUFUGUAUWOEMZLZUWQNZUWREBKUXABOUXBUWPUWQUXABUWOUHUIUXAKJZEFUJZFUKU
      LUXCFUXAUMUXEUXCFUKFMZUKJZUXEUXBUWQUXGUXEUXBPZUWQNZDEEGUJZUXBPZUWQNZEQDQZ
      UXAUNOZUXBPZUWQNZEQDQUBUCUJZUDMZUBMZLZPZUXRKJZNZUBQUDQZUXAUCMZUOUPZJZUXBP
      ZUWQNZEQDQZUXIEQDQGUCUXFRRKUQZURZUSZSUTZVAZUOURZUQZUXMGVBSUXMGUYQGMZUYQJU
      YRUYPJZVCZUXMUYRUYPGVJZVDUXMUXLDQZEQUXJUXCDQZNZEQZUYTUXLDEVEVUBVUDEVUBUXJ
      UXCNZDQVUDUXLVUFDUXJUXBUWQVFVGUXJUXCDVHVIVGUYSVUEUYSHMZUYRVKZUYOJZHUOULZU
      XJVUCVCZPZETZVUEVCHUYOUOUYRVUAVLVUJVUGUOJZVUIPZHTZVUGUXAVMZOZVUIPZHTZETZV
      UMVUIHUOVNVUPVUSETZHTVVAVUOVVBHVUOVURETZVUIPVVBVUNVVCVUIEVUGWBVOVURVUIEVP
      VQVRVUSEHVSVQVUTVULEVUTVUQUYRVKZUYOJZVVDRJZVVDUYNJZPVULVUIVVEHVUQUXAWLZVU
      RVUHVVDUYOVUGVUQUYRVTWAWCVVDRUYNWMVVFUXJVVGVUKUXAUYREVJZVUAWDVVGVUQUYMJZU
      XAUYLJZVUKVVGVVJUYRSJVUAVUQUYRUYMSVVHVUAWEWFUXAUYLWGVVKUWOUXAVKRJZDUYKULZ
      UXBUWQVCZPZDTZVUKDRUYKUXAVVIVLVVMUWOUYKJZVVLPZDTVVPVVLDUYKVNVVRVVODVVRVVL
      VVQPVVOVVQVVLWHVVLUXBVVQVVNUWOSJZUXASJVVLUXBWIDVJZVVIUWOUXASSWJWKUWOKVVTV
      DWNVIVRVIUXBUWQDWOWPWPWNWPVRWPUXJVUCEWOWPWQWPVQWRUYPUYOUORUYNWSUYMSUYLRUY
      KWSKWTXCXAXDXBXEXFXGXAXCXHUYRXIOZUXLUXPDEVWAUXKUXOUWQVWAUXJUXNUXBVWAUXJUX
      AXIJZUXNUYRXIUXAXJVWBUXAUNVMZJUXNXIVWCUXAXKXLUXAUNVVIXMVIXNXOUIXPGUCXQZUX
      MEUCUJZUXBPZUWQNZEQDQUYDVWDUXLVWGDEVWDUXKVWFUWQVWDUXJVWEUXBGUCEXRXOUIXPVW
      GUYCDEUDUBDUDXQZEUBXQZPZVWFUYAUWQUYBVWJVWEUXQUXBUXTVWIVWEUXQWIVWHUXAUXSUY
      EUFXSUWOUXRUXAUXSXTYAVWHUWQUYBWIVWIUWOUXRKUFYBUGYCXNUYRUYFOZUXLUYIDEVWKUX
      KUYHUWQVWKUXJUYGUXBUYRUYFUXAXJXOUIXPGFXQZUXLUXIDEVWLUXKUXHUWQVWLUXJUXEUXB
      GFEXRXOUIXPUXPDEUXOUWOUNKUXOUWOUNLZUWOUNOUXNUXBVWMUXAUNUWOUHYFUWOYDYEYGYH
      UUAUYEUKJZUYDUYJVWNUYDPZUYIDEVWOUYGUXBUWQVWOUXBUYGUWQUXBUXBIDUJVCZIUXAULZ
      PZDEXQZYIZVWOUYGUWQNZUXBUWOUXAUUBZVWSYIVWTUWOUXAUUCVXBVWRVWSIUWOUXAUUDUUE
      VIVWOVWRVXAVWSVWOUXBVWQVXAVWOVWQUXBVXAVWOVWPUXBVXANIUXAVWOIEUJZVWPUXBUYGU
      WQVWOVXCVWPPZUXBUYGPZUWQVWOVXDVXEYJUXAIMZVMZYRZUYEJZUWOVXHLZPZUWQVWNVXDVX
      EVXKUYDVWNVXDVXEYJZVXIVXJVXLVWNVXFVXHJZVCZVXHVXGYKZUYFJVXIVWNVXDVXEUUFVXN
      VXLVXMVXFVXGJZVXFIVJZUUGVXMVXCVXPVCVXFUXAVXGUUKUUHUUIUVAVXLVXOUXAUYFVXLVX
      OUXAVXGYKZUXAUXAVXGUUJVXDVWNVXRUXAOZVXEVXCVXSVWPVXCVXGUXALVXSVXFUXAUULVXG
      UXAUUMYEYBYLYMVWNVXDUXBUYGUUNUUOVXHUYEVXFUXAVXGVVIVXFWLUUPZVXQUUQUURVXLUW
      OVXHVAZUWOOVXJVXLVYAUWOUXAVAZVXGYRZUWOVYBVXGUQZVAUWOUXAVYDVAZVAVYCVYAUWOU
      XAVYDUUSVYBVXGYNVXHVYEUWOUXAVXGYNUVBUUTVXLVYCUWOVXGYRZUWOVXLVYBUWOVXGVXEV
      WNVYBUWOOZVXDUXBVYGUYGUXBVYGUWOUXAYOUVLYBUVCUVDVXDVWNVYFUWOOZVXEVWPVYHVXC
      VXFUWOUVEXSYLUVFYMUWOVXHYOYPUVGUVHVWOVXDVXKUWQNZVXEUYDVYIVWNVVSVXHSJUYDVY
      INVVTVXTUYCVYIUDUBUWOVXHSSUDDXQZUXSVXHOZPZUYAVXKUYBUWQVYLUXQVXIUXTVXJVYKU
      XQVXIWIVYJUXSVXHUYEUFXSUXRUWOUXSVXHXTYAVYJUYBUWQWIVYKUXRUWOKUFYBUGUVIWKXS
      UVJUVKUVMUWCUVNYQYSVWNVWSVXANUYDVWNUYGUXDVWSUWQVWNUYFUKJZUYGUXDNUYEUVOVYM
      UYGUXDVYMUYGPEIUJZIUKULUXDVYNUYGIUYFUKVXFUYFUXAXJUVPIUXAUMYPYTUVQVWSUWQUX
      DUWOUXAKUFUVRUVSYBUVTUWAYQYSUWBYTUWDUWEUWFUWGUWHUWIUWJUWK $.
      $( [19-Jan-2015] $)
  $}

  ${
    $d A x y $.
    $( If the universe is finite, then there is a unique natural containing any
       set.  Theorem X.1.22 of [Rosser] p. 527.  (Contributed by SF,
       19-Jan-2015.) $)
    vfinnc $p |- ( ( A e. V /\ _V e. Fin ) -> E! x e. Nn A e. x ) $=
      ( vy wcel cvv cfin wa cv cnnc wrex weq wi wral wss ssv ssfin mp3an3 elfin
      wreu sylib nnceleq ex rgen2a a1i eleq2 reu4 sylanbrc ) BCEZFGEZHZBAIZEZAJ
      KZUMBDIZEZHZADLZMZDJNAJNZUMAJTUKBGEZUNUIUJBFOVABPBFCQRABSUAUTUKUSADJULJEU
      OJEHUQURBULUOUBUCUDUEUMUPADJULUOBUFUGUH $.
      $( [19-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( The finite cardinality of a set exists.  (Contributed by SF,
       27-Jan-2015.) $)
    ncfinex $p |- Nc[fin] A e. _V $=
      ( vx cncfin cv cnnc wcel wa cio cvv df-ncfin iotaex eqeltri ) ACBDZEFAMFG
      ZBHIBAJNBKL $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Equality theorem for finite cardinality.  (Contributed by SF,
       20-Jan-2015.) $)
    ncfineq $p |- ( A = B -> Nc[fin] A = Nc[fin] B ) $=
      ( vx wceq cv cnnc wcel cio cncfin eleq1 anbi2d iotabidv df-ncfin 3eqtr4g
      wa ) ABDZCEZFGZAQGZOZCHRBQGZOZCHAIBIPTUBCPSUARABQJKLCAMCBMN $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( Properties of finite cardinal number.  Theorem X.1.23 of [Rosser] p. 527
       (Contributed by SF, 20-Jan-2015.) $)
    ncfinprop $p |- ( ( _V e. Fin /\ A e. V ) ->
               ( Nc[fin] A e. Nn /\ A e. Nc[fin] A ) ) $=
      ( vx wcel cvv cfin cncfin cnnc cio df-ncfin wreu vfinnc reiotacl syl5eqel
      wa cv syl wceq eqcomi wb eleq2 reiota2 syl2anc mpbiri jca ancoms ) ABDZEF
      DZAGZHDZAUIDZOUGUHOZUJUKULUICPZHDAUMDZOCIZHCAJZULUNCHKZUOHDCABLZUNCHMQNZU
      LUKUOUIRZUIUOUPSULUJUQUKUTTUSURUNUKCHUIUMUIAUAUBUCUDUEUF $.
      $( [20-Jan-2015] $)
  $}

  ${
    $( Distribution law for finite cardinality.  (Contributed by SF,
       30-Jan-2015.) $)
    ncfindi $p |- ( ( ( _V e. Fin /\ A e. V ) /\ B e. W /\ ( A i^i B ) = (/) )
       -> Nc[fin] ( A u. B ) = ( Nc[fin] A +c Nc[fin] B ) ) $=
      ( cvv cfin wcel wa cin c0 wceq w3a cun cncfin cnnc cplc syl2anc ncfinprop
      simpld simprd simp1l simp1r simp2 unexg nncaddccl eladdci syl3anc nnceleq
      simp3 syl22anc ) EFGZACGZHZBDGZABIJKZLZABMZNZOGZANZBNZPZOGZUQURGZUQVBGZUR
      VBKUPUSVDUPUKUQEGZUSVDHUKULUNUOUAZUPULUNVFUKULUNUOUBZUMUNUOUCZABCDUDQUQER
      QZSUPUTOGZVAOGZVCUPVKAUTGZUPUKULVKVMHVGVHACRQZSUPVLBVAGZUPUKUNVLVOHVGVIBD
      RQZSUTVAUEQUPUSVDVJTUPVMVOUOVEUPVKVMVNTUPVLVOVPTUMUNUOUIABUTVAUFUGUQURVBU
      HUJ $.
      $( [30-Jan-2015] $)
  $}

  ${
    $( If the universe is finite, then the cardinality of a singleton is
       ` 1c ` .  (Contributed by SF, 30-Jan-2015.) $)
    ncfinsn $p |- ( ( _V e. Fin /\ A e. V ) -> Nc[fin] { A } = 1c ) $=
      ( cvv cfin wcel wa csn cncfin cnnc c1c wceq ncfinprop mpan2 adantr simpld
      snex 1cnnc a1i simprd snel1cg adantl nnceleq syl22anc ) CDEZABEZFZAGZHZIE
      ZJIEZUGUHEZUGJEZUHJKUFUIUKUDUIUKFZUEUDUGCEUMAPUGCLMNZOUJUFQRUFUIUKUNSUEUL
      UDABTUAUGUHJUBUC $.
      $( [30-Jan-2015] $)
  $}

  ${
    $( Equality law for finite cardinality.  Theorem X.1.24 of [Rosser]
       p. 527.  (Contributed by SF, 20-Jan-2015.) $)
    ncfineleq $p |- ( ( _V e. Fin /\ A e. V /\ B e. W ) ->
       ( A e. Nc[fin] B <-> Nc[fin] A = Nc[fin] B ) ) $=
      ( cvv cfin wcel w3a cncfin wceq cnnc simpl ncfinprop 3adant3 3syl 3adant2
      wa simpld adantr simprd simpr nnceleq syl22anc ex eleq2 syl5ibcom impbid
      ) EFGZACGZBDGZHZABIZGZAIZULJZUKUMUOUKUMQZUNKGZULKGZAUNGZUMUOUPUKUQUSQZUQU
      KUMLUHUIUTUJACMNZUQUSLOUKURUMUKURBULGZUHUJURVBQUIBDMPRSUKUSUMUKUQUSVATZSU
      KUMUAAUNULUBUCUDUKUSUOUMVCUNULAUEUFUG $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d A x t $.  $d B x t $.
    eqpwrelk.1 $e |- A e. _V $.
    eqpwrelk.2 $e |- B e. _V $.
    $( Represent equality to power class via a Kuratowski relationship.
       (Contributed by SF, 26-Jan-2015.) $)
    eqpwrelk $p |- ( << { A } , B >> e.
              ~ ( ( Ins2_k SSet_k (+) Ins3_k SI_k SSet_k ) "_k
                  ~P1 ~P1 1c ) <-> B = ~P A ) $=
      ( vx vt csn copk cssetk cpw1 wcel wn cv wb wex wceq wa snex cvv 3bitri
      cins2k csik cins3k csymdif c1c cimak wss ccompl cpw opkex elimak elpw121c
      anbi1i 19.41v bitr4i exbii df-rex excom 3bitr4i opkeq1 ceqsexv otkelins2k
      eleq1d elsymdif vex elssetk bitri otkelins3k opksnelsik opkelssetkg mp2an
      wrex bibi12i notbii elcompl cab wal df-pw eqeq2i abeq2 alex ) AGZBHZIUAZI
      UBZUCZUDZUEJJZUFZKZLEMZBKZWKAUGZNZLZEOZLZWCWIUHKBAUIZPZWJWPWJFMZWCHZWGKZF
      WHVLZWTWKGZGZGZPZXBQZFOZEOZWPFWGWHWCWBBUJZUKWTWHKZXBQZFOXHEOZFOXCXJXMXNFX
      MXGEOZXBQXNXLXOXBEWTULUMXGXBEUNUOUPXBFWHUQXHEFURUSXIWOEXIXFWCHZWGKZXPWDKZ
      XPWFKZNZLWOXBXQFXFXERXGXAXPWGWTXFWCUTVCVAXPWDWFVDXTWNXRWLXSWMXRXDBHIKWLXD
      WBBIWKRZARZDVBWKBEVEZDVFVGXSXDWBHWEKWKAHIKZWMXDWBBWEYAYBDVHWKAIYCCVIWKSKA
      SKYDWMNYCCWKASSVJVKTVMVNTUPTVNWCWIXKVOWSBWMEVPZPWNEVQWQWRYEBEAVRVSWMEBVTW
      NEWATUS $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d A x t $.  $d B x t $.
    eqpw1relk.1 $e |- A e. _V $.
    eqpw1relk.2 $e |- B e. _V $.
    $( Represent equality to unit power class via a Kuratowski relationship.
       (Contributed by SF, 21-Jan-2015.) $)
    eqpw1relk $p |- ( << A , { B } >> e. ( ( ~P 1c X._k _V ) \
  ( ( Ins3_k SSet_k (+) Ins2_k SI_k SSet_k )
    "_k ~P1 ~P1 ~P1 1c ) ) <-> A = ~P1 B ) $=
      ( vx vt csn copk c1c cvv wcel cssetk cpw1 wn wa cv wb snex bitri wex cxpk
      cpw cins3k csik cins2k csymdif cimak wss cdif wceq opkelxpk mpbiran2 elpw
      wal opkex elimak elpw131c anbi1i 19.41v bitr4i exbii df-rex excom 3bitr4i
      wrex opkeq1 ceqsexv elsymdif otkelins3k elssetk otkelins2k opksnelsik vex
      eleq1d bibi12i xchbinx exnal 3bitrri con1bii anbi12i eldif eqpw1 ) ABGZHZ
      IUBZJUAZKZWDLUCZLUDZUEZUFZIMMMZUGZKZNZOAIUHZEPZGZAKZWQBKZQZEUNZOWDWFWMUIK
      ABMUJWGWPWOXBWGAWEKZWPWGXCWCJKBRZAWCWEJCXDUKULAICUMSXBWNWNFPZWRGZGZGZUJZX
      EWDHZWKKZOZFTZETZXANZETXBNWNXKFWLVEZXNFWKWLWDAWCUOUPXEWLKZXKOZFTXLETZFTXP
      XNXRXSFXRXIETZXKOXSXQXTXKEXEUQURXIXKEUSUTVAXKFWLVBXLEFVCVDSXMXOEXMXHWDHZW
      KKZXOXKYBFXHXGRXIXJYAWKXEXHWDVFVNVGYBYAWHKZYAWJKZQXAYAWHWJVHYCWSYDWTYCXFA
      HLKWSXFAWCLWRRZCXDVIWRAWQRZCVJSYDXFWCHWIKZWTXFAWCWIYECXDVKYGWRBHLKWTWRBLY
      FDVLWQBEVMDVJSSVOVPSVAXAEVQVRVSVTWDWFWMWAEABWBVD $.
      $( [21-Jan-2015] $)
  $}

  ${
    $d a b $.  $d a m $.  $d a n $.  $d a t $.  $d a x $.  $d b m $.  $d b n $.
    $d b t $.  $d b x $.  $d m t $.  $d n t $.  $d n x $.  $d t x $.

    $( Lemma for ~ ncfinraise .  Show stratification for induction.
       (Contributed by SF, 22-Jan-2015.) $)
    ncfinraiselem2 $p |- { m | A. a e. m A. b e. m E. n e. Nn
       ( ~P1 a e. n /\ ~P1 b e. n ) } e. _V $=
      ( vt vx cssetk cpw1 cvv wcel wa wrex snex copk bitr4i exbii df-rex 3bitri
      csn wex csik cins2k cnnc cxpk c1c cpw cins3k csymdif cimak cdif cin cuni1
      ccompl cv wral wn elcompl wceq elimak elpw11c anbi1i 19.41v excom 3bitr4i
      cab wel opkeq1 eleq1d ceqsexv vex opksnelsik elssetk bitri opkex elpw131c
      elin eldif otkelins2k opkelxpk mpbiran2 snelpw1 eqpw1relk anbi12i df-clel
      elpw121c notbii rexnal xchbinx eluni1 dfral2 abbi2i ssetkex sikex ins2kex
      otkelins3k nncex pw1ex vvex xpkex 1cex pwex ins3kex symdifex imakex difex
      inex complex uni1ex eqeltrri ) GUAZXJUBZUCHZHZIUDZUEUFZIUDZGUGZXKUHZUEHZH
      ZHZUIZUJZUAZUBZXQUKZXTUIZUBZYGUGZUKZUKZXSUIZUGZUJZYAUIZUKZXSUIZUMZULZCUNZ
      HZBUNZJZDUNZHZUUBJZKZBUCLZDAUNZUOZCUUIUOZAVEIUUKAYSUUISZYRJZUUJUPZCUUILZU
      PUUIYSJUUKUUMUULYQJZUUOUULYQUUIMZUQUUPEUNZUULNZYPJZEXSLZUURYTSZSZURZUUTKZ
      ETZCTZUUOEYPXSUULUUQUSUURXSJZUUTKZETUVECTZETUVAUVGUVIUVJEUVIUVDCTZUUTKUVJ
      UVHUVKUUTCUURUTVAUVDUUTCVBOPUUTEXSQUVECEVCVDUVGCAVFZUUNKZCTUUOUVFUVMCUVFU
      VCUULNZYPJZUVNXJJZUVNYOJZKUVMUUTUVOEUVCUVBMZUVDUUSUVNYPUURUVCUULVGVHVIUVN
      XJYOVPUVPUVLUVQUUNUVPUVBUUINGJUVLUVBUUIGYTMZAVJZVKYTUUICVJZUVTVLVMUVQUURU
      UDSZSZSZSZURZUURUVNNZYNJZKZETZDTZUUHUPZDUUILZUUNUVQUWHEYALUURYAJZUWHKZETZ
      UWKEYNYAUVNUVCUULVNUSUWHEYAQUWPUWIDTZETUWKUWOUWQEUWOUWFDTZUWHKUWQUWNUWRUW
      HDUURVOVAUWFUWHDVBOPUWIDEVCORUWKDAVFZUWLKZDTUWMUWJUWTDUWJUWEUVNNZYNJZUXAX
      KJZUXAYMJZUPZKUWTUWHUXBEUWEUWDMUWFUWGUXAYNUURUWEUVNVGVHVIUXAXKYMVQUXCUWSU
      XEUWLUXCUWCUULNXJJUWBUUINGJUWSUWCUVCUULXJUWBMZUVRUUQVRUWBUUIGUUDMZUVTVKUU
      DUUIDVJZUVTVLRUXDUUHUXDUWCUVCNZYLJZUURUUBSZSZURZUURUXINZYKJZKZETZBTZUUHUW
      CUVCUULYLUXFUVRUUQWOUXOEXSLZUXPBTZETZUXJUXRUXSUVHUXOKZETUYAUXOEXSQUYBUXTE
      UYBUXMBTZUXOKUXTUVHUYCUXOBUURUTVAUXMUXOBVBOPVMEYKXSUXIUWCUVCVNZUSUXPBEVCV
      DUXRUUBUCJZUUGKZBTUUHUXQUYFBUXQUXLUXINZYKJZUYGXNJZUYGYJJZKUYFUXOUYHEUXLUX
      KMZUXMUXNUYGYKUURUXLUXIVGVHVIUYGXNYJVPUYIUYEUYJUUGUYIUXLXMJZUXKXLJUYEUYIU
      YLUXIIJUYDUXLUXIXMIUYKUYDVSVTUXKXLWAUUBUCWARUYJUYGYHJZUYGYIJZKUUGUYGYHYIV
      PUYMUUCUYNUUFUYMUUBUVCNZYGJZUURFUNZSZSZSZURZUURUYONZYFJZKZETZFTZUUCUUBUWC
      UVCYGBVJZUXFUVRVRUYPVUCEXTLUURXTJZVUCKZETZVUFEYFXTUYOUUBUVCVNUSVUCEXTQVUJ
      VUDFTZETVUFVUIVUKEVUIVUAFTZVUCKVUKVUHVULVUCFUURWEZVAVUAVUCFVBOPVUDFEVCORV
      UFUYQUUAURZFBVFZKZFTUUCVUEVUPFVUEUYTUYONZYFJZVUQYEJZVUQXQJZKVUPVUCVUREUYT
      UYSMZVUAVUBVUQYFUURUYTUYOVGVHVIVUQYEXQVPVUSVUNVUTVUOVUSUYRUVCNYDJUYQUVBNY
      CJVUNUYRUUBUVCYDUYQMZVUGUVRVRUYQUVBYCFVJZUVSVKUYQYTVVCUWAWBRVUTUYRUUBNGJZ
      VUOUYRUUBUVCGVVBVUGUVRWOUYQUUBVVCVUGVLZVMWCRPFUUAUUBWDORUUBUWCNZYGJZUYQUU
      EURZVUOKZFTZUYNUUFVVGUURVVFNZYFJZEXTLZVUAVVLKZETZFTZVVJEYFXTVVFUUBUWCVNUS
      VUHVVLKZETVVNFTZETVVMVVPVVQVVREVVQVULVVLKVVRVUHVULVVLVUMVAVUAVVLFVBOPVVLE
      XTQVVNFEVCVDVVOVVIFVVOUYTVVFNZYFJZVVSYEJZVVSXQJZKVVIVVLVVTEUYTVVAVUAVVKVV
      SYFUURUYTVVFVGVHVIVVSYEXQVPVWAVVHVWBVUOVWAUYRUWCNYDJUYQUWBNYCJVVHUYRUUBUW
      CYDVVBVUGUXFVRUYQUWBYCVVCUXGVKUYQUUDVVCUXHWBRVWBVVDVUOUYRUUBUWCGVVBVUGUXF
      WOVVEVMWCRPRUUBUWCUVCYGVUGUXFUVRWOFUUEUUBWDVDWCVMWCRPUUGBUCQORWFWCRPUWLDU
      UIQOUUHDUUIWGRWCRPUUNCUUIQORWHUUIYRUVTWIUUJCUUIWJVDWKYRYQYPXSXJYOGWLWMZYN
      YAXKYMXJVWCWNZYLYKXSXNYJXMIXLUCWPWQWQWRWSYHYIYGYFXTYEXQYDYCXPYBXOIUEWTXAW
      RWSXRYAXQXKGWLXBZVWDXCXTXSUEWTWQZWQZWQZXDXEWMWNVWEXFVWGXDZWNYGVWIXBXFXFVW
      FXDXBXEVWHXDXFVWFXDXGXHXI $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A a $.  $d a b $.  $d A b $.  $d a m $.  $d a n $.  $d A n $.  $d a t $.
    $d B b $.  $d b m $.  $d b n $.  $d B n $.  $d b t $.  $d M a $.  $d M b $.
    $d n t $.  $d a c $.  $d a d $.  $d a k $.  $d a x $.  $d a y $.  $d b c $.
    $d b d $.  $d b k $.  $d b x $.  $d b y $.  $d c d $.  $d c k $.  $d c x $.
    $d c y $.  $d d k $.  $d d x $.  $d d y $.  $d k m $.  $d k n $.  $d M m $.
    $d m n $.  $d x y $.  $d c n $.  $d d n $.  $d k x $.  $d k y $.  $d n x $.
    $d n y $.  $d c m $.  $d d m $.  $d m x $.  $d m y $.


    $( If two sets are in a particular finite cardinal, then their unit power
       sets are in the same natural.  Theorem X.1.25 of [Rosser] p. 527.
       (Contributed by SF, 21-Jan-2015.) $)
    ncfinraise $p |- ( ( M e. Nn /\ A e. M /\ B e. M ) ->
       E. n e. Nn ( ~P1 A e. n /\ ~P1 B e. n ) ) $=
      ( va vb vc vx vd vy cnnc wcel cpw1 cv wa wrex wral c0c c0 wceq vm vk cplc
      ncfinraiselem2 raleq raleqbi1dv el0c peano1 nulel0c pm3.2i anbi12d rspcev
      c1c eleq2 mp2an pw10 syl6eq eleq1d bi2anan9 rexbidv mpbiri syl2anb rgen2a
      pw1eq nfv nfra1 nfan nfra2 csn cun ccompl reeanv 2rexbii anbi12i 3bitr4ri
      elsuc wel wi weq anbi1d anbi2d rspc2v vex elcompl anbi2i peano2 ad3antrrr
      com12 simplrl adantr simprrl snelpw1 sylnibr snex syl2anc simplrr simprrr
      wn elsuci syl12anc rexlimiva cbvrexv syl8ib imp31 pw1un uneq2i syl5ibrcom
      ex pw1sn eqtri sylan2b expr anasss rexlimdvv exp32 sylan9r pm2.43d syl5bi
      exp3a ralrimd ralrimi finds syl5com 3impib ) DKLZADLZBDLZAMZCNZLZBMZYILZO
      ZCKPZYEENZMZYILZFNZMZYILZOZCKPZFDQZEDQZYFYGOYNUUBFUANZQZEUUEQUUBFRQZERQUU
      BFUBNZQZEUUHQZUUBFUUHUMUCZQZEUUKQZUUDUAUBDUACEFUDUUFUUGEUUERUUBFUUERUEUFU
      UFUUIEUUEUUHUUBFUUEUUHUEUFUUFUULEUUEUUKUUBFUUEUUKUEUFUUFUUCEUUEDUUBFUUEDU
      EUFUUBEFRYORLYOSTZYRSTZUUBYRRLYOUGYRUGUUNUUOOZUUBSYILZUUQOZCKPZRKLSRLZUUT
      OZUUSUHUUTUUTUIUIUJUURUVACRKYIRTUUQUUTUUQUUTYIRSUNZUVBUKULUOUUPUUAUURCKUU
      NYQUUQUUOYTUUQUUNYPSYIUUNYPSMZSYOSVDUPUQURUUOYSSYIUUOYSUVCSYRSVDUPUQURUSU
      TVAVBVCUUHKLZUUJUUMUVDUUJOZUULEUUKUVDUUJEUVDEVEUUIEUUHVFVGUVEYOUUKLZUUBFU
      UKUVDUUJFUVDFVEUUBEFUUHUUHVHVGUVFFVEUVEUVFYRUUKLZUUBUVFUVGOZYOGNZHNZVIZVJ
      ZTZYRINZJNZVIZVJZTZOZJUVNVKZPHUVIVKZPZIUUHPGUUHPZUVEUUBUVMHUWAPZUVRJUVTPZ
      OZIUUHPGUUHPUWDGUUHPZUWEIUUHPZOUWCUVHUWDUWEGIUUHUUHVLUWBUWFGIUUHUUHUVMUVR
      HJUWAUVTVLVMUVFUWGUVGUWHHYOUUHGVPJYRUUHIVPVNVOUVEUWBUUBGIUUHUUHUVEGUBVQIU
      BVQOZUWBUUBVRZUUJUWIUVIMZYILZUVNMZYILZOZCKPZUVDUWIUWJVRUWIUUJUWPUUBUWPUWL
      YTOZCKPEFUVIUVNUUHUUHEGVSZUUAUWQCKUWRYQUWLYTUWRYPUWKYIYOUVIVDURVTUTFIVSZU
      WQUWOCKUWSYTUWNUWLUWSYSUWMYIYRUVNVDURWAUTWBWHUVDUWPUWIUWJUVDUWPUWIOOUVSUU
      BHJUWAUVTUVDUWPUWIUVJUWALZUVOUVTLZOZUVSUUBVRZVRUVDUWPOZUWIUXBUXCUWIUXBOUX
      DUWIHGVQZWRZJIVQZWRZOZOZUXCUXBUXIUWIUWTUXFUXAUXHUVJUVIHWCZWDUVOUVNJWCZWDV
      NWEUXDUXJOUUBUVSUWKUVKVIZVJZYILZUWMUVPVIZVJZYILZOZCKPZUVDUWPUXJUXTUWPUVDU
      XJUXTVRUWPUVDUXJUXNUUELZUXQUUELZOZUAKPZUXTUWOUVDUXJUYDVRZVRCKYIKLZUWOOZUV
      DUYEUYGUVDOZUXJUYDUYHUXJOZYIUMUCZKLZUXNUYJLZUXQUYJLZUYDUYFUYKUWOUVDUXJYIW
      FWGUYIUWLUVKUWKLZWRUYLUYHUWLUXJUYFUWLUWNUVDWIWJUYIUXEUYNUYHUWIUXFUXHWKUVJ
      UVIWLWMUWKYIUVKUVJWNWSWOUYIUWNUVPUWMLZWRUYMUYHUWNUXJUYFUWLUWNUVDWPWJUYIUX
      GUYOUYHUWIUXFUXHWQUVOUVNWLWMUWMYIUVPUVOWNWSWOUYCUYLUYMOUAUYJKUUEUYJTUYAUY
      LUYBUYMUUEUYJUXNUNUUEUYJUXQUNUKULWTXHXHXAUYCUXSUACKUACVSUYAUXOUYBUXRUUEYI
      UXNUNUUEYIUXQUNUKXBXCWHXDUVSUUAUXSCKUVMYQUXOUVRYTUXRUVMYPUXNYIUVMYPUVLMZU
      XNYOUVLVDUYPUWKUVKMZVJUXNUVIUVKXEUYQUXMUWKUVJUXKXIXFXJUQURUVRYSUXQYIUVRYS
      UVQMZUXQYRUVQVDUYRUWMUVPMZVJUXQUVNUVPXEUYSUXPUWMUVOUXLXIXFXJUQURUSUTXGXKX
      LXMXNXOXPXQXNXRXSXTYAXHYBUUBYNYJYTOZCKPEFABDDYOATZUUAUYTCKVUAYQYJYTVUAYPY
      HYIYOAVDURVTUTYRBTZUYTYMCKVUBYTYLYJVUBYSYKYIYRBVDURWAUTWBYCYD $.
      $( [21-Jan-2015] $)
  $}

  ${
    $d m n a b t x $.
    $( Lemma for ~ ncfinlower .  Set up stratification for induction.
       (Contributed by SF, 22-Jan-2015.) $)
    ncfinlowerlem1 $p |- { m | A. a A. b ( ( ~P1 a e. m /\ ~P1 b
             e. m ) -> E. n e. Nn ( a e. n /\ b e. n ) ) } e. _V $=
      ( vt vx cvv cssetk cpw1 cnnc wcel wa wrex wex copk csn exbii 3bitr4i snex
      3bitri c1c cpw cxpk cins3k csik cins2k csymdif cimak cdif ccnvk ccompl cv
      cin wel wi wal cab wn wceq vex elimak elpw11c anbi1i 19.41v bitr4i df-rex
      excom opkeq1 eleq1d ceqsexv opkex elpw131c eldif elin elpw121c otkelins3k
      opksnelsik eqpw1relk elssetk bitri anbi12i mpbiran df-clel elpw12 r19.41v
      opkelxpk rexcom4 opkelcnvk rexbii notbii exanali elcompl alex abbi2i vvex
      otkelins2k 1cex xpkex ssetkex ins3kex sikex ins2kex symdifex pw1ex imakex
      pwex difex inex cnvkex nncex complex eqeltrri ) GUAUBZGUCZHUDZHUEZUFZUGZU
      AIZIZIZUHZUIZUEZUDZHUFZUMZXTUHZUCZYHUFZUMZHUJZUFZYLUDZUMZJIZIZUHZUEZUDZUI
      ZYAUHZXSUHZUKZCULZIZAULZKZDULZIZUUGKZLZCBUNZDBUNZLZBJMZUODUPZCUPZAUQGUURA
      UUDUUGUUCKZURUUQURZCNZURUUGUUDKUURUUSUVAUUSEULZUUGOZUUBKZEXSMZUVBUUEPZPZU
      SZUVDLZENZCNZUVAEUUBXSUUGAUTZVAUVBXSKZUVDLZENUVICNZENUVEUVKUVNUVOEUVNUVHC
      NZUVDLUVOUVMUVPUVDCUVBVBVCUVHUVDCVDVEQUVDEXSVFUVICEVGRUVJUUTCUVJUVGUUGOZU
      UBKZUULUUPURZLZDNZUUTUVDUVREUVGUVFSZUVHUVCUVQUUBUVBUVGUUGVHVIVJUVRUVBUVQO
      ZUUAKZEYAMZUVBUUIPZPZPZPZUSZUWDLZENZDNZUWAEUUAYAUVQUVGUUGVKZVAUVBYAKZUWDL
      ZENUWKDNZENUWEUWMUWPUWQEUWPUWJDNZUWDLUWQUWOUWRUWDDUVBVLVCUWJUWDDVDVEQUWDE
      YAVFUWKDEVGRUWLUVTDUWLUWIUVQOZUUAKZUWSYKKZUWSYTKZURZLUVTUWDUWTEUWIUWHSZUW
      JUWCUWSUUAUVBUWIUVQVHVIVJUWSYKYTVMUXAUULUXCUVSUXAUWSYIKZUWSYJKZLUULUWSYIY
      JVNUXEUUHUXFUUKUVQYHKZFULZUUFUSZFAUNZLZFNZUXEUUHUXGUWCYGKZEXTMZUVBUXHPZPZ
      PZUSZUXMLZENZFNZUXLEYGXTUVQUWNVAUVBXTKZUXMLZENUXSFNZENUXNUYAUYCUYDEUYCUXR
      FNZUXMLUYDUYBUYEUXMFUVBVOZVCUXRUXMFVDVEQUXMEXTVFUXSFEVGRUXTUXKFUXTUXQUVQO
      ZYGKZUYGYEKZUYGYFKZLUXKUXMUYHEUXQUXPSZUXRUWCUYGYGUVBUXQUVQVHVIVJUYGYEYFVN
      UYIUXIUYJUXJUYIUXOUVGOYDKUXHUVFOYCKUXIUXOUVGUUGYDUXHSZUWBUVLVPUXHUVFYCFUT
      ZUUESZVQUXHUUEUYMCUTZVRTUYJUXOUUGOHKZUXJUXOUVGUUGHUYLUWBUVLWPUXHUUGUYMUVL
      VSZVTWATQTUXEUWIGKUXGUXDUWIUVQGYHUXDUWNWFWBFUUFUUGWCRUWGUUGOZYHKZUXHUUJUS
      ZUXJLZFNZUXFUUKUYSUVBUYROZYGKZEXTMZUXRVUDLZENZFNZVUBEYGXTUYRUWGUUGVKVAUYB
      VUDLZENVUFFNZENVUEVUHVUIVUJEVUIUYEVUDLVUJUYBUYEVUDUYFVCUXRVUDFVDVEQVUDEXT
      VFVUFFEVGRVUGVUAFVUGUXQUYROZYGKZVUKYEKZVUKYFKZLVUAVUDVULEUXQUYKUXRVUCVUKY
      GUVBUXQUYRVHVIVJVUKYEYFVNVUMUYTVUNUXJVUMUXOUWGOYDKUXHUWFOYCKUYTUXOUWGUUGY
      DUYLUWFSZUVLVPUXHUWFYCUYMUUISZVQUXHUUIUYMDUTZVRTVUNUYPUXJUXOUWGUUGHUYLVUO
      UVLWPUYQVTWATQTUWGUVGUUGYHVUOUWBUVLWPFUUJUUGWCRWAVTUXBUUPUXBUWGUVGOYSKUWF
      UVFOZYRKZUUPUWGUVGUUGYSVUOUWBUVLVPUWFUVFYRVUPUYNVQVUSUVBVUROZYOKZEYQMZUVB
      BULZPZPZUSZVVALZENZBJMZUUPEYOYQVURUWFUVFVKVAUVBYQKZVVALZENVVGBJMZENVVBVVI
      VVKVVLEVVKVVFBJMZVVALVVLVVJVVMVVABUVBJWDVCVVFVVABJWEVEQVVAEYQVFVVGBEJWGRV
      VHUUOBJVVHVVEVUROZYOKZVVNYMKZVVNYNKZLUUOVVAVVOEVVEVVDSVVFVUTVVNYOUVBVVEVU
      RVHVIVJVVNYMYNVNVVPUUMVVQUUNVVPVVCUVFOYLKUVFVVCOHKUUMVVCUWFUVFYLBUTZVUPUY
      NWPVVCUVFHVVRUYNWHUUEVVCUYOVVRVSTVVQVVCUWFOYLKUWFVVCOHKUUNVVCUWFUVFYLVVRV
      UPUYNVPVVCUWFHVVRVUPWHUUIVVCVUQVVRVSTWATWITTWJWATQTUULUUPDWKTQTWJUUGUUCUV
      LWLUUQCWMRWNUUCUUBXSUUAYAYKYTYIYJGYHWOYGXTYEYFYDYCXNYBXMGUAWQXFWOWRXRYAXO
      XQHWSWTXPHWSXAXBXCXTXSUAWQXDZXDZXDZXEXGXAWTHWSXBXHVVTXEZWRYHVWBXBXHYSYRYO
      YQYMYNYLHWSXIZXBYLVWCWTXHYPJXJXDXDXEXAWTXGVWAXEVVSXEXKXL $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A a $.  $d a b $.  $d A b $.  $d a m $.  $d a n $.  $d A n $.  $d B a $.
    $d B b $.  $d b m $.  $d b n $.  $d B n $.  $d M a $.  $d M b $.  $d a k $.
    $d b k $.  $d k m $.  $d k n $.  $d M m $.  $d m n $.  $d a c $.  $d a d $.
    $d a x $.  $d a y $.  $d b c $.  $d b d $.  $d b x $.  $d b y $.  $d c d $.
    $d c k $.  $d c x $.  $d c y $.  $d d k $.  $d d x $.  $d d y $.  $d x y $.
    $d a e $.  $d a f $.  $d a w $.  $d a z $.  $d b e $.  $d b f $.  $d b w $.
    $d b z $.  $d c e $.  $d c f $.  $d c n $.  $d c w $.  $d c z $.  $d d e $.
    $d d f $.  $d d n $.  $d d w $.  $d d z $.  $d e f $.  $d e w $.  $d e x $.
    $d e y $.  $d e z $.  $d f w $.  $d f x $.  $d f y $.  $d f z $.  $d k x $.
    $d k y $.  $d n x $.  $d n y $.  $d w x $.  $d w y $.  $d w z $.  $d x z $.
    $d y z $.  $d e k $.  $d e m $.  $d e n $.  $d f k $.  $d f m $.  $d f n $.
    $d k w $.  $d k z $.  $d m w $.  $d m z $.  $d n w $.  $d n z $.  $d c m $.
    $d d m $.  $d m x $.  $d m y $.
    $( If the unit power classes of two sets are in the same natural, then so
       are the sets themselves.  Theorem X.1.26 of [Rosser] p. 527.
       (Contributed by SF, 22-Jan-2015.) $)
    ncfinlower $p |- ( ( M e. Nn /\ ~P1 A e. M /\ ~P1 B e. M ) ->
       E. n e. Nn ( A e. n /\ B e. n ) ) $=
      ( va vb vm vc vd ve vf cnnc wcel cv wa wrex wel wi wceq eleq2 vk vx vy vz
      vw cpw1 wal c0c c1c cplc ncfinlowerlem1 anbi12d imbi1d 2albidv el0c pw10b
      weq bitri peano1 nulel0c rspcev mp2an eleq1 bi2anan9 anidm syl6bb rexbidv
      c0 mpbiri syl2anb gen2 nfv nfa1 nfan nfa2 csn ccompl reeanv 2rexbii elsuc
      cun anbi12i 3bitr4ri w3a wex wn cvv vex pw1eq eleq1d elequ1 imbi12d com12
      spc2gv ad2antrl peano2 simprrl adantr syl2anc simprrr expr rexlimdva syld
      elsuci syl12anc imp an32s wb 3ad2ant2 compleq eleq12 snex elcompl snelpw1
      sylan2 xchbinx ancoms 3adant1 anbi2d 3ad2ant1 eeanv 2exbii elequ2 cbvrexv
      exlimdvv pw1eqadj 3imtr4g rexlimdvv rexlimdvva syl5bi alrimi finds pw1exb
      ex elex sylib syl2an pm2.43b syl 3impib ) DLMZAUFZDMZBUFZDMZACNZMZBUUFMZO
      ZCLPZUUAENZUFZDMZFNZUFZDMZOZECQZFCQZOZCLPZRZFUGEUGZUUCUUEOZUUJRZUULGNZMZU
      UOUVFMZOZUVARZFUGEUGUULUHMZUUOUHMZOZUVARZFUGEUGUULUANZMZUUOUVOMZOZUVARZFU
      GZEUGZUULUVOUIUJZMZUUOUWBMZOZUVARZFUGZEUGZUVCGUADGCEFUKUVFUHSZUVJUVNEFUWI
      UVIUVMUVAUWIUVGUVKUVHUVLUVFUHUULTUVFUHUUOTULUMUNGUAUQZUVJUVSEFUWJUVIUVRUV
      AUWJUVGUVPUVHUVQUVFUVOUULTUVFUVOUUOTULUMUNUVFUWBSZUVJUWFEFUWKUVIUWEUVAUWK
      UVGUWCUVHUWDUVFUWBUULTUVFUWBUUOTULUMUNUVFDSZUVJUVBEFUWLUVIUUQUVAUWLUVGUUM
      UVHUUPUVFDUULTUVFDUUOTULUMUNUVNEFUVKUUKVHSZUUNVHSZUVAUVLUVKUULVHSUWMUULUO
      UUKUPURUVLUUOVHSUWNUUOUOUUNUPURUWMUWNOZUVAVHUUFMZCLPZUHLMVHUHMZUWQUSUTUWP
      UWRCUHLUUFUHVHTVAVBUWOUUTUWPCLUWOUUTUWPUWPOUWPUWMUURUWPUWNUUSUWPUUKVHUUFV
      CUUNVHUUFVCVDUWPVEVFVGVIVJVKUVOLMZUWAUWHUWSUWAOZUWGEUWSUWAEUWSEVLUVTEVMVN
      UWTUWFFUWSUWAFUWSFVLUVSFEVOVNUWEUULHNZUBNZVPWASZUUOINZUCNZVPWASZOZUCUXDVQ
      ZPUBUXAVQZPZIUVOPHUVOPZUWTUVAUXCUBUXIPZUXFUCUXHPZOZIUVOPHUVOPUXLHUVOPZUXM
      IUVOPZOUXKUWEUXLUXMHIUVOUVOVRUXJUXNHIUVOUVOUXCUXFUBUCUXIUXHVRVSUWCUXOUWDU
      XPUBUULUVOHVTUCUUOUVOIVTWBWCUWTUXJUVAHIUVOUVOUWTHUAQZIUAQZOZOUXGUVAUBUCUX
      IUXHUWTUXSUXBUXIMZUXEUXHMZOZUXGUVARUWTUXSUYBOZOZUUKJNZUDNZVPZWAZSZUXAUYEU
      FZSZUXBUYGSZWDZUUNKNZUENZVPZWAZSZUXDUYNUFZSZUXEUYPSZWDZOZUEWEUDWEZKWEJWEZ
      EGQZFGQZOZGLPZUXGUVAUYDVUDVUIJKUYDVUCVUIUDUEVUCUYDVUIVUCUYDVUIRUWTUYJUVOM
      ZUYSUVOMZOZUDJQZWFZUEKQZWFZOZOZOZUYHUVFMZUYQUVFMZOZGLPZRUWSVURUWAVVCUWSVU
      ROZUWAVVCVVDUWAJCQZKCQZOZCLPZVVCVULUWAVVHRUWSVUQUWAVULVVHUYEWGMUYNWGMUWAV
      ULVVHRZRJWHKWHUVSVVIEFUYEUYNWGWGEJUQZFKUQZOZUVRVULUVAVVHVVJUVPVUJVVKUVQVU
      KVVJUULUYJUVOUUKUYEWIWJVVKUUOUYSUVOUUNUYNWIWJVDVVLUUTVVGCLVVJUURVVEVVKUUS
      VVFEJCWKFKCWKVDVGWLWNVBWMWOVVDVVGVVCCLVVDUUFLMZVVGVVCVVDVVMVVGOZOZUUFUIUJ
      ZLMZUYHVVPMZUYQVVPMZVVCVVMVVQVVDVVGUUFWPWOVVOVVEVUNVVRVVDVVMVVEVVFWQVVDVU
      NVVNUWSVULVUNVUPWQWRUYEUUFUYFUDWHXDWSVVOVVFVUPVVSVVDVVMVVEVVFWTVVDVUPVVNU
      WSVULVUNVUPWTWRUYNUUFUYOUEWHXDWSVVBVVRVVSOGVVPLUVFVVPSVUTVVRVVAVVSUVFVVPU
      YHTUVFVVPUYQTULVAXEXAXBXCXFXGVUCUYDVUSVUIVVCVUCUYCVURUWTVUCUXSVULUYBVUQUY
      MUXQVUJVUBUXRVUKUYKUYIUXQVUJXHUYLUXAUYJUVOVCXIUYTUYRUXRVUKXHVUAUXDUYSUVOV
      CXIVDUYMUXTVUNVUBUYAVUPUYKUYLUXTVUNXHZUYIUYLUYKVVTUYLUYKOUXTUYGUYJVQZMZVU
      NUYKUYLUXIVWASUXTVWBXHUXAUYJXJUXBUYGUXIVWAXKXOVWBUYGUYJMVUMUYGUYJUYFXLXMU
      YFUYEXNXPVFXQXRUYTVUAUYAVUPXHZUYRVUAUYTVWCVUAUYTOUYAUYPUYSVQZMZVUPUYTVUAU
      XHVWDSUYAVWEXHUXDUYSXJUXEUYPUXHVWDXKXOVWEUYPUYSMVUOUYPUYSUYOXLXMUYOUYNXNX
      PVFXQXRVDULXSVUCVUHVVBGLUYMVUFVUTVUBVUGVVAUYIUYKVUFVUTXHUYLUUKUYHUVFVCXTU
      YRUYTVUGVVAXHVUAUUNUYQUVFVCXTVDVGWLVIWMYEYEUYMUDWEZVUBUEWEZOZKWEJWEVWFJWE
      ZVWGKWEZOVUEUXGVWFVWGJKYAVUDVWHJKUYMVUBUDUEYAYBUXCVWIUXFVWJJUDUXAUXBUUKHW
      HUBWHYFKUEUXDUXEUUNIWHUCWHYFWBWCUUTVUHCGLCGUQUURVUFUUSVUGCGEYCCGFYCULYDYG
      XAYHYIYJYKYKYNYLUVCUVDUUJUUCAWGMZBWGMZUVCUVERUUEUUCUUBWGMVWKUUBDYOAYMYPUU
      EUUDWGMVWLUUDDYOBYMYPUVBUVEEFABWGWGUUKASZUUNBSZOZUUQUVDUVAUUJVWMUUMUUCVWN
      UUPUUEVWMUULUUBDUUKAWIWJVWNUUOUUDDUUNBWIWJVDVWOUUTUUICLVWMUURUUGVWNUUSUUH
      UUKAUUFVCUUNBUUFVCVDVGWLWNYQYRYSYT $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d a b $.  $d a n $.  $d a p $.  $d b n $.  $d b p $.  $d M a $.  $d M b $.
    $d M n $.  $d M p $.  $d n p $.  $d a m $.  $d b m $.  $d m n $.  $d m p $.
    $d a q $.  $d b q $.  $d M q $.  $d n q $.  $d p q $.
    $( For any non-empty finite cardinal, there is a unique natural containing
       a unit power class of one of its elements.  Theorem X.1.27 of [Rosser]
       p. 528.  (Contributed by SF, 22-Jan-2015.) $)
    nnpw1ex $p |- ( ( M e. Nn /\ M =/= (/) ) ->
      E! n e. Nn E. a e. M ~P1 a e. n ) $=
      ( vp vb vq cnnc wcel cpw1 wrex weq wral wex w3a ncfinraise anbi2i nnceleq
      wa cv syl22anc c0 wne wi wreu anidm rexbii sylib 3anidm23 ex ancld eximdv
      n0 rexcom df-rex bitri 3imtr4i pw1eq eleq1d cbvrexv reeanv bitr4i simplll
      imp simprll simprlr syl3anc simp1rl simp3l simp2rl simp3rl simp1rr eqtr4d
      simp2rr simp3rr 3expa exp32 mpd rexlimdvv syl5bi ralrimivva eleq2 rexbidv
      rexlimdv reu4 sylanbrc ) BGHZBUAUBZRZCSZIZASZHZCBJZAGJZWMWJDSZHZCBJZRZADK
      ZUCZDGLAGLWMAGUDWFWIBHZCMZRXAWLAGJZRZCMZWHWNWFXBXEWFXAXDCWFXAXCWFXAXCWFXA
      XCWFXAXANWLWLRZAGJXCWIWIABOXFWLAGWLUEUFUGUHUIUJUKVCWGXBWFCBULPWNXCCBJXEWL
      ACGBUMXCCBUNUOUPWHWTADGGWRWLESZIZWOHZRZEBJCBJZWHWKGHZWOGHZRZRZWSWRWMXIEBJ
      ZRXKWQXPWMWPXICEBCEKWJXHWOWIXGUQURUSPWLXICEBBUTVAXOXJWSCEBBXOXAXGBHZRZXJW
      SXOXRXJRZRZWJFSZHZXHYAHZRZFGJZWSXTWFXAXQYEWFWGXNXSVBXOXAXQXJVDXOXAXQXJVEW
      IXGFBOVFXTYDWSFGXTYAGHZYDWSXOXSYFYDRZWSXOXSYGNZWKYAWOYHXLYFWLYBAFKXLXMWHX
      SYGVGXOXSYFYDVHZWLXIXRXOYGVIYBYCYFXOXSVJWJWKYAQTYHXMYFXIYCDFKXLXMWHXSYGVK
      YIWLXIXRXOYGVMYBYCYFXOXSVNXHWOYAQTVLVOVPWCVQVPVRVSVTWMWQADGWSWLWPCBWKWOWJ
      WAWBWDWE $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A x y $.
    $( The finite T operator is always a set.  (Contributed by SF,
       26-Jan-2015.) $)
    tfinex $p |- _T[fin] A e. _V $=
      ( vx vy ctfin c0 wceq cv cnnc wcel cpw1 wa cio cif cvv df-tfin 0ex iotaex
      wrex ifex eqeltri ) ADAEFZEBGZHICGJUBICARKZBLZMNBACOUAEUDPUCBQST $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d M n $.  $d M t $.  $d M w $.  $d M y $.  $d M z $.  $d n t $.  $d n w $.
    $d n x $.  $d n y $.  $d n z $.  $d t w $.  $d t x $.  $d t y $.  $d t z $.
    $d w y $.  $d w z $.  $d X t $.  $d x y $.  $d X z $.  $d y z $.  $d a n $.
    $d a t $.  $d a x $.  $d a y $.  $d a z $.  $d M a $.
    eqtfinrelk.1 $e |- M e. _V $.
    eqtfinrelk.2 $e |- X e. _V $.
    $( Equality to a T raising expressed via a Kuratowski relationship.
       (Contributed by SF, 29-Jan-2015.) $)
    eqtfinrelk $p |- ( << { M } , X >> e. ( ( { { (/) } } X._k { (/) } ) u.
  ( ~ ( ( Ins2_k SSet_k (+)
      Ins3_k
( ( Ins3_k `'_k SSet_k \
    Ins2_k
( ( Ins2_k ( ( Nn X._k _V ) i^i
     ( ( Ins2_k SI_k SSet_k i^i
         Ins3_k
           ( ( Ins3_k SI_k ( ( ~P 1c X._k _V ) \
  ( ( Ins3_k SSet_k (+) Ins2_k SI_k SSet_k )
    "_k ~P1 ~P1 ~P1 1c ) ) i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) )
       "_k ~P1 ~P1 ~P1 1c ) ) (+)
    Ins3_k _I_k ) "_k ~P1 1c ) ) "_k ~P1 1c ) )
      "_k ~P1 ~P1 1c )
    \ ( { { (/) } } X._k _V ) ) ) <-> X = _T[fin] M ) $=
      ( vy va vz vt vn vx csn copk c0 cssetk cvv wcel wceq wa snex wex cxpk c1c
      cins2k ccnvk cins3k cnnc csik cpw csymdif cpw1 cimak cdif cin cidk ccompl
      cun cv wrex cio cif ctfin wb snid opkelxpk mpbiran elsnc bitri orbi1i elun
      wo wn mpbir2an notnoti intnan eldif mtbir biorfi 3bitr4i a1i sneq opkeq1d
      eleq1d iftrue eqeq2d 3bitr4d iffalse elimak elpw121c anbi1i 19.41v bitr4i
      opkex exbii df-rex opkeq1 ceqsexv elsymdif otkelins2k vex elssetk wel weq
      excom wal otkelins3k opkelcnvk elpw11c elin mpbiran2 opksnelsik eqpw1relk
      3bitri anbi12i df-clel elpw131c opkelidkg bibi12i xchbinx 3bitrri con1bii
      mp2an exnal cab cuni dfiota2 eleq2i eluniab notbii elcompl dfcleq biantru
      alex sneqb 3bitr2i biimpi con3i biantrud simpl biorf syl6bbr syl 3bitr2rd
      bitrd orbi12i pm2.61i df-tfin eqeq2i ) AKZBLZMKZKZUUJUAZNUCZNUDZUEZUFOUAZ
      NUGZUCZUBUHOUANUEUURUIUBUJZUJZUJZUKULZUGZUEZUUMUMZUUTUKZUEZUMZUVAUKZUMZUC
      ZUNUEZUIZUUSUKZUCZULZUUSUKZUEZUIZUUTUKZUOZUUKOUAZULZUPZPZBAMQZMEUQZUFPZFU
      QZUJZUWGPZFAURZRZEUSZUTZQZBAVAZQUWFUWEUWPVBUWFUUJBLZUWDPZBMQZUWEUWPUWSUWT
      VBUWFUWRUULPZUWRUWCPZVJUWTUXBVJUWSUWTUXAUWTUXBUXABUUJPZUWTUXAUUJUUKPZUXCU
      UJMSZVCZUUJBUUKUUJUXEDVDVEBMDVFZVGVHUWRUULUWCVIUXBUWTUXBUWRUWAPZUWRUWBPZV
      KZRUXJUXHUXIUXIUXDBOPZUXFDUUJBUUKOUXEDVDVLVMVNUWRUWAUWBVOVPVQVRVSUWFUUIUW
      RUWDUWFUUHUUJBAMVTWAWBUWFUWOMBUWFMUWNWCWDWEUWFVKZUWPBUWNQZUUIUWAPZUWEUXLU
      WOUWNBUWFMUWNWFWDUXNUXMVBUXLUUIUVTPZVKGUQZBPZUXPUWNPZVBZVKZGTZVKZUXNUXMUX
      OUYAUXOHUQZUUILZUVSPZHUUTURZUYCUXPKZKZKZQZUYERZHTZGTZUYAHUVSUUTUUIUUHBWLZ
      WGUYCUUTPZUYERZHTUYKGTZHTUYFUYMUYPUYQHUYPUYJGTZUYERUYQUYOUYRUYEGUYCWHWIUY
      JUYEGWJWKWMUYEHUUTWNUYKGHXCVRUYLUXTGUYLUYIUUILZUVSPZUXTUYEUYTHUYIUYHSUYJU
      YDUYSUVSUYCUYIUUIWOWBWPUYTUYSUUMPZUYSUVRPZVBUXSUYSUUMUVRWQVUAUXQVUBUXRVUA
      UYGBLNPUXQUYGUUHBNUXPSZASZDWRUXPBGWSZDWTVGUYCIUQZKZKZQZUYCUYGUUHLZLZUVPPZ
      RZHTZITZGIXAZUWMEIXBZVBZEXDZRZITZVUBUXRVUNVUTIVUNVUHVUJLZUVPPZVVBUUOPZVVB
      UVOPZVKZRVUTVULVVCHVUHVUGSVUIVUKVVBUVPUYCVUHVUJWOWBWPVVBUUOUVOVOVVDVUPVVF
      VUSVVDVUFUYGLUUNPUYGVUFLNPVUPVUFUYGUUHUUNIWSZVUCVUDXEVUFUYGNVVGVUCXFUXPVU
      FVUEVVGWTXLVUSVVEVVEVUFUUHLZUVNPZVURVKZETZVUSVKVUFUYGUUHUVNVVGVUCVUDWRVVI
      UYCVVHLZUVMPZHUUSURZUYCUWGKZKZQZVVMRZHTZETZVVKHUVMUUSVVHVUFUUHWLWGUYCUUSP
      ZVVMRZHTVVRETZHTVVNVVTVWBVWCHVWBVVQETZVVMRVWCVWAVWDVVMEUYCXGWIVVQVVMEWJWK
      WMVVMHUUSWNVVREHXCVRVVSVVJEVVSVVPVVHLZUVMPZVVJVVMVWFHVVPVVOSVVQVVLVWEUVMU
      YCVVPVVHWOWBWPVWFVWEUVKPZVWEUVLPZVBVURVWEUVKUVLWQVWGUWMVWHVUQVWGUWGUUHLZU
      VJPVWIUUPPZVWIUVIPZRUWMUWGVUFUUHUVJEWSZVVGVUDWRVWIUUPUVIXHVWJUWHVWKUWLVWJ
      UWHUUHOPVUDUWGUUHUFOVWLVUDVDXIUYCUWIKZKZKZKZQZUYCVWILZUVHPZRZHTZFTZUWIAPZ
      UWKRZFTVWKUWLVXAVXDFVXAVWPVWILZUVHPZVXEUURPZVXEUVGPZRVXDVWSVXFHVWPVWOSVWQ
      VWRVXEUVHUYCVWPVWIWOWBWPVXEUURUVGXHVXGVXCVXHUWKVXGVWNUUHLUUQPVWMALNPVXCVW
      NUWGUUHUUQVWMSZVWLVUDWRVWMANUWISZCXJUWIAFWSZCWTXLVWNUWGLZUVFPZJUQZUWJQZJE
      XAZRZJTZVXHUWKVXMUYCVXLLZUVEPZHUUTURZUYCVXNKZKZKZQZVXTRZHTZJTZVXRHUVEUUTV
      XLVWNUWGWLWGUYOVXTRZHTVYFJTZHTVYAVYHVYIVYJHVYIVYEJTZVXTRVYJUYOVYKVXTJUYCW
      HWIVYEVXTJWJWKWMVXTHUUTWNVYFJHXCVRVYGVXQJVYGVYDVXLLZUVEPZVYLUVDPZVYLUUMPZ
      RVXQVXTVYMHVYDVYCSVYEVXSVYLUVEUYCVYDVXLWOWBWPVYLUVDUUMXHVYNVXOVYOVXPVYNVY
      BVWNLUVCPVXNVWMLUVBPVXOVYBVWNUWGUVCVXNSZVXIVWLXEVXNVWMUVBJWSZVXJXJVXNUWIV
      YQVXKXKXLVYOVYBUWGLNPVXPVYBVWNUWGNVYPVXIVWLWRVXNUWGVYQVWLWTVGXMXLWMXLVWNU
      WGUUHUVFVXIVWLVUDXEJUWJUWGXNVRXMXLWMVWSHUVAURZVWTFTZHTZVWKVXBVYRUYCUVAPZV
      WSRZHTVYTVWSHUVAWNWUBVYSHWUBVWQFTZVWSRVYSWUAWUCVWSFUYCXOWIVWQVWSFWJWKWMVG
      HUVHUVAVWIUWGUUHWLWGVWTFHXCVRUWKFAWNVRXMXLVWHUWGVUFLUNPZVUQUWGVUFUUHUNVWL
      VVGVUDXEUWGOPVUFOPWUDVUQVBVWLVVGUWGVUFOOXPYAVGXQXRVGWMXLVUREYBXSXTXMXLWMV
      UBVUJUVQPVULHUUSURZVUOUYGUUHBUVQVUCVUDDXEHUVPUUSVUJUYGUUHWLWGVWAVULRZHTVU
      MITZHTWUEVUOWUFWUGHWUFVUIITZVULRWUGVWAWUHVULIUYCXGWIVUIVULIWJWKWMVULHUUSW
      NVUMIHXCVRXLUXRUXPVUSIYCYDZPVVAUWNWUIUXPUWMEIYEYFVUSIUXPYGVGVRXQXRVGWMXLY
      HUUIUVTUYNYIUXMUXSGXDUYBGBUWNYJUXSGYLVGVRVSUXLUXNUUIUULPZUUIUWCPZVJZUWEUX
      LUXNUWFUWTRZUXNUUIUWBPZVKZRZVJZWULUXLUXNWUPWUQUXLWUOUXNWUNUWFWUNUWFWUNUUH
      UUKPZUXKRWURUWFUUHBUUKOVUDDVDUXKWURDYKWURUUHUUJQUWFUUHUUJVUDVFAMCYMVGZYNY
      OYPYQUXLWUMVKWUPWUQVBWUMUWFUWFUWTYRYPWUMWUPYSUUAUUCWUJWUMWUKWUPWUJWURUXCR
      WUMUUHBUUKUUJVUDDVDWURUWFUXCUWTWUSUXGXMVGUUIUWAUWBVOUUDYTUUIUULUWCVIYTUUB
      UUEUWQUWOBEAFUUFUUGWK $.
      $( [29-Jan-2015] $)
  $}

  $( The expression at the core of ~ eqtfinrelk exists.  (Contributed by SF,
     30-Jan-2015.) $)
  tfinrelkex $p |- ( ( { { (/) } } X._k { (/) } ) u.
  ( ~ ( ( Ins2_k SSet_k (+)
      Ins3_k
( ( Ins3_k `'_k SSet_k \
    Ins2_k
( ( Ins2_k ( ( Nn X._k _V ) i^i
     ( ( Ins2_k SI_k SSet_k i^i
         Ins3_k
           ( ( Ins3_k SI_k ( ( ~P 1c X._k _V ) \
  ( ( Ins3_k SSet_k (+) Ins2_k SI_k SSet_k )
    "_k ~P1 ~P1 ~P1 1c ) ) i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) )
       "_k ~P1 ~P1 ~P1 1c ) ) (+)
    Ins3_k _I_k ) "_k ~P1 1c ) ) "_k ~P1 1c ) )
      "_k ~P1 ~P1 1c )
    \ ( { { (/) } } X._k _V ) ) ) e. _V $=
    ( cxpk cssetk cins2k cins3k cvv c1c csymdif cpw1 cimak cdif ssetkex ins2kex
    cin xpkex ins3kex vvex symdifex pw1ex imakex difex csn ccnvk cnnc csik cidk
    c0 cpw ccompl snex cnvkex nncex sikex 1cex pwex inex idkex complex unex ) U
    FUAZUAZUSABCZBUBZDZUCEAZBUDZCZFUGZEAZBDZVFGZFHZHZHZIZJZUDZDZVAMZVLIZDZMZVMI
    ZMZCZUEDZGZVKIZCZJZVKIZDZGZVLIZUHZUTEAZJUTUSUSUIZUFUINWNWOWMWLVLVAWKBKLZWJW
    IVKVCWHVBBKUJOWGWFVKWDWEWCVDWBUCEUKPNWAVMVFVTVEBKULLZVSVRVLVQVAVPVOVHVNVGEF
    UMUNPNVJVMVIVFBKOWRQVLVKFUMRZRZRZSTULOWQUOWTSOUOXASUOLUEUPOQWSSLTWSSOQWTSUQ
    UTEWPPNTUR $.
    $( [30-Jan-2015] $)

  ${
    $d A x y $.  $d B x y $.
    $( Equality theorem for the finite T operator.  (Contributed by SF,
       24-Jan-2015.) $)
    tfineq $p |- ( A = B -> _T[fin] A = _T[fin] B ) $=
      ( vx vy wceq c0 cv cnnc wcel cpw1 wrex cio cif ctfin eqeq1 rexeq iotabidv
      wa anbi2d df-tfin ifbieq2d 3eqtr4g ) ABEZAFEZFCGZHIZDGJUEIZDAKZRZCLZMBFEZ
      FUFUGDBKZRZCLZMANBNUCUDUKUJUNFABFOUCUIUMCUCUHULUFUGDABPSQUACADTCBDTUB $.
      $( [24-Jan-2015] $)
  $}

  ${
    $d a n $.  $d a z $.  $d M a $.  $d M n $.  $d M z $.  $d n z $.

    $( Properties of the finite T operator for a non-empty natural.  Theorem
       X.1.28 of [Rosser] p. 528.  (Contributed by SF, 22-Jan-2015.) $)
    tfinprop $p |- ( ( M e. Nn /\ M =/= (/) ) ->
      ( _T[fin] M e. Nn /\ E. a e. M ~P1 a e. _T[fin] M ) ) $=
      ( vn cnnc wcel c0 wne wa ctfin cv cpw1 wrex wceq cio cif df-tfin wn df-ne
      syl jca iffalse sylbi adantl nnpw1ex reiotacl eqeltrd syl5eqel syl5req wb
      wreu eleq2 rexbidv reiota2 mpbird ) ADEZAFGZHZAIZDEZBJKZUREZBALZUQURAFMZF
      CJZDEUTVDEZBALZHCNZOZDCABPZUQVHVGDUPVHVGMZUOUPVCQVJAFRVCFVGUAUBUCZUQVFCDU
      JZVGDECABUDZVFCDUESUFUGZUQVBVGURMZUQURVHVGVIVKUHUQUSVLHVBVOUIUQUSVLVNVMTV
      FVBCDURVDURMVEVABAVDURUTUKULUMSUNT $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d M x $.
    $( If ` M ` is a non-empty natural, then ` _T[fin] M ` is also non-empty.
       Corollary 1 of Theorem X.1.28 of [Rosser] p. 528.  (Contributed by SF,
       23-Jan-2015.) $)
    tfinnnul $p |- ( ( M e. Nn /\ M =/= (/) ) -> _T[fin] M =/= (/) ) $=
      ( vx cnnc wcel c0 wne wa ctfin cv cpw1 wrex tfinprop rexlimivw adantl syl
      ne0i ) ACDAEFGAHZCDZBIJZQDZBAKZGQEFZABLUAUBRTUBBAQSPMNO $.
      $( [23-Jan-2015] $)
  $}

  ${
    $d x y $.
    $( The finite T operator applied to the empty set is empty.  Theorem X.1.29
       of [Rosser] p. 528.  (Contributed by SF, 22-Jan-2015.) $)
    tfinnul $p |- _T[fin] (/) = (/) $=
      ( vx vy c0 ctfin wceq cv cnnc wcel cpw1 wrex cio cif df-tfin iftrue ax-mp
      wa eqid eqtri ) CDCCEZCAFZGHBFITHBCJPAKZLZCACBMSUBCECQSCUANOR $.
      $( [22-Jan-2015] $)
  $}


  ${
    $d N a $.
    $( Closure law for finite T operation.  (Contributed by SF, 2-Feb-2015.) $)
    tfincl $p |- ( N e. Nn -> _T[fin] N e. Nn ) $=
      ( va cnnc wcel ctfin wi c0 wceq tfinnul tfineq 3eqtr4a eleq1d biimprd wne
      id wa cv cpw1 wrex tfinprop simpld expcom pm2.61ine ) ACDZAEZCDZFAGAGHZUF
      UDUGUEACUGGEGUEAIAGJUGOKLMUDAGNZUFUDUHPUFBQRUEDBASABTUAUBUC $.
      $( [2-Feb-2015] $)
  $}

  ${
    $d a b $.  $d a p $.  $d b p $.  $d M a $.  $d M b $.  $d M p $.  $d N a $.
    $d N b $.  $d N p $.

    $( The finite T operator is one-to-one over the naturals.  Theorem X.1.30
       of [Rosser] p. 528.  (Contributed by SF, 24-Jan-2015.) $)
    tfin11 $p |- ( ( M e. Nn /\ N e. Nn /\ _T[fin] M = _T[fin] N ) ->
            M = N ) $=
      ( va vb vp cnnc wcel ctfin wceq w3a wi c0 wa tfinnnul ex necon4d 3ad2ant1
      wne cv wrex impcom eqeq1 adantl adantr sylbid 3adant1 eqtr4d neeq1 biimpd
      wb ancld tfineq tfinnul syl6eq necon3i anim12i 3ad2ant3 tfinprop 3ad2ant2
      syl6 reeanv wel simp31 tfincl syl simp2l simp2r simp33 ncfinlower syl3anc
      eleqtrrd simpl31 simpl1l simprrl nnceleq syl22anc simpl32 simpl1r simprrr
      cpw1 simprl expr rexlimdva mpd 3exp rexlimivv ad2ant2l com12 syl2and syld
      sylbir pm2.61ine ) AFGZBFGZAHZBHZIZJZABIZKZWOLWOLIZWRWSXAWRMALBWRXAALIZWM
      WNXAXBKWQWMALWOLWMALRZWOLRZANOPQUAWRXABLIZWNWQXAXEKWMWNWQMXAWPLIZXEWQXAXF
      UJWNWOWPLUBUCWNXFXEKWQWNBLWPLWNBLRZWPLRZBNOPUDUEUFUAUGOWRXDWSWRXDXCXGMZWS
      WQWMXDXIKWNWQXDXDXHMXIWQXDXHWQXDXHWOWPLUHUIUKXDXCXHXGALWOLXBWOLHZLALULUMU
      NUOBLWPLXEWPXJLBLULUMUNUOUPUTUQWRXCWOFGZCSZVTWOGZCATZMZXGWPFGZDSZVTZWPGZD
      BTZMZWSWMWNXCXOKWQWMXCXOACUROQWNWMXGYAKWQWNXGYABDUROUSXOYAMWRWSXNXTWTXKXP
      XNXTMXMXSMZDBTCATWTXMXSCDABVAYBWTCDABXLAGZXQBGZMZYBWRWSYEYBWRJZCEVBZDEVBZ
      MZEFTZWSYFXKXMXRWOGYJYFWMXKYEYBWMWNWQVCAVDVEYEXMXSWRVFYFXRWPWOYEXMXSWRVGY
      EYBWMWNWQVHVKXLXQEWOVIVJYFYIWSEFYFESZFGZYIWSYFYLYIMZMZAYKBYNWMYLYCYGAYKIW
      MWNWQYEYBYMVLYFYLYIWAZYCYDYBWRYMVMYFYLYGYHVNXLAYKVOVPYNWNYLYDYHBYKIWMWNWQ
      YEYBYMVQYOYCYDYBWRYMVRYFYLYGYHVSXQBYKVOVPUGWBWCWDWEWFWKWGWHWIWJWHWL $.
      $( [24-Jan-2015] $)
  $}

  ${
    $d A b $.  $d A n $.  $d b n $.  $d M b $.  $d M n $.
    $( The finite T operator on a natural contains the unit power class of any
       element of the natural.  Theorem X.1.31 of [Rosser] p. 528.
       (Contributed by SF, 24-Jan-2015.) $)
    tfinpw1 $p |- ( ( M e. Nn /\ A e. M ) -> ~P1 A e. _T[fin] M ) $=
      ( vb vn cnnc wcel wa ctfin cv cpw1 wrex c0 wne ne0i tfinprop sylan2 3expa
      expr rexlimdva mpd ncfinraise adantrr w3a simp3rl wceq simp3l syl simp3rr
      simp1l tfincl simp2r nnceleq syl22anc eleqtrd adantld ) BEFZABFZGZBHZEFZC
      IZJZUSFZCBKZGZAJZUSFZUQUPBLMVEBANBCOPURVDVGUTURVCVGCBURVABFZVCVGURVHVCGZG
      ZVFDIZFZVBVKFZGZDEKZVGURVHVOVCUPUQVHVOAVADBUAQUBVJVNVGDEVJVKEFZVNVGURVIVP
      VNGZVGURVIVQUCZVFVKUSVLVMVPURVIUDVRVPUTVMVCVKUSUEURVIVPVNUFVRUPUTUPUQVIVQ
      UIBUJUGVLVMVPURVIUHURVHVCVQUKVBVKUSULUMUNQRSTRSUOT $.
      $( [24-Jan-2015] $)
  $}

  ${
    $d A x $.
    $( Relationship between finite T operator and finite Nc operation in a
       finite universe.  Corollary of Theorem X.1.31 of [Rosser] p. 529.
       (Contributed by SF, 24-Jan-2015.) $)
    ncfintfin $p |- ( ( _V e. Fin /\ A e. V ) ->
               _T[fin] Nc[fin] A = Nc[fin] ~P1 A ) $=
      ( cfin wcel wa cncfin ctfin cnnc cpw1 wceq ncfinprop simpld tfincl pw1exg
      cvv syl sylan2 tfinpw1 simprd nnceleq syl22anc ) OCDZABDZEZAFZGZHDZAIZFZH
      DZUHUFDZUHUIDZUFUIJUDUEHDZUGUDUMAUEDZABKZLUEMPUDUJULUCUBUHODUJULEABNUHOKQ
      ZLUDUMUNEUKUOAUERPUDUJULUPSUHUFUITUA $.
      $( [24-Jan-2015] $)
  $}

  ${
    $d M a b c t $.  $d N a b c t $.
    $( The finite T operation distributes over non-empty cardinal sum.  Theorem
       X.1.32 of [Rosser] p. 529.  (Contributed by SF, 26-Jan-2015.) $)
    tfindi $p |- ( ( M e. Nn /\ N e. Nn /\ ( M +c N ) =/= (/) ) ->
       _T[fin] ( M +c N ) = ( _T[fin] M +c _T[fin] N ) ) $=
      ( va vb vc cnnc wcel cplc c0 ctfin wceq cv cpw1 nncaddccl 3adant3 tfinpw1
      wa tfincl syl2anc cin wne wex n0 w3a syl syl2an simp3 wrex eladdc simplll
      cun simplrl simpllr simplrr pw1eq pw1in pw10 3eqtr3g adantl eladdci pw1un
      syl3anc syl6eq eleq1d syl5ibrcom expimpd rexlimdvva syl5bi 3impia nnceleq
      syl22anc 3expia exlimdv ) AFGZBFGZABHZIUAZVPJZAJZBJZHZKZVQCLZVPGZCUBVNVOQ
      ZWBCVPUCWEWDWBCVNVOWDWBVNVOWDUDZVRFGZWAFGZWCMZVRGZWIWAGZWBVNVOWGWDWEVPFGZ
      WGABNZVPRUEOVNVOWHWDVNVSFGVTFGWHVOARBRVSVTNUFOWFWLWDWJVNVOWLWDWMOVNVOWDUG
      WCVPPSVNVOWDWKWDDLZELZTZIKZWCWNWOUKZKZQZEBUHDAUHWEWKWCABDEUIWEWTWKDEABWEW
      NAGZWOBGZQZQZWQWSWKXDWQQZWKWSWNMZWOMZUKZWAGZXEXFVSGZXGVTGZXFXGTZIKZXIXEVN
      XAXJVNVOXCWQUJWEXAXBWQULWNAPSXEVOXBXKVNVOXCWQUMWEXAXBWQUNWOBPSWQXMXDWQWPM
      IMXLIWPIUOWNWOUPUQURUSXFXGVSVTUTVBWSWIXHWAWSWIWRMXHWCWRUOWNWOVAVCVDVEVFVG
      VHVIWIVRWAVJVKVLVMVHVI $.
      $( [26-Jan-2015] $)
  $}


  ${
    $( The finite T operator is fixed at ` 0c ` .  (Contributed by SF,
       29-Jan-2015.) $)
    tfin0c $p |- _T[fin] 0c = 0c $=
      ( c0c ctfin cnnc wcel c0 wceq peano1 tfincl ax-mp cpw1 pw10 nulel0c mp2an
      tfinpw1 eqeltrri nnceleq mp4an ) ABZCDZACDZERDEADZRAFTSGAHIGEJZERKTUAUBRD
      GLEANMOLERAPQ $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d A a b x $.
    $( The finite T operator over a successor.  (Contributed by SF,
       30-Jan-2015.) $)
    tfinsuc $p |- ( ( A e. Nn /\ ( A +c 1c ) =/= (/) ) ->
       _T[fin] ( A +c 1c ) = ( _T[fin] A +c 1c ) ) $=
      ( va vb vx cnnc wcel c1c cplc ctfin wceq cv cpw1 peano2 tfincl syl adantr
      wa tfinpw1 csn cun c0 wne wex sylan ccompl wrex elsuc adantrr wel elcompl
      n0 wn vex snelpw1 xchbinxr biimpi ad2antll snex syl2anc pw1eq pw1un pw1sn
      elsuci uneq2i syl6eq eleq1d syl5ibrcom rexlimdvva syl5bi nnceleq syl22anc
      eqtri imp ex exlimdv ) AEFZAGHZUAUBZVQIZAIZGHZJZVRBKZVQFZBUCVPWBBVQUKVPWD
      WBBVPWDWBVPWDQVSEFZWAEFZWCLZVSFZWGWAFZWBVPWEWDVPVQEFZWEAMZVQNOPVPWFWDVPVT
      EFWFANVTMOPVPWJWDWHWKWCVQRUDVPWDWIWDWCCKZDKZSZTZJZDWLUEZUFCAUFVPWIDWCACUG
      VPWPWICDAWQVPWLAFZWMWQFZQQZWIWPWLLZWNSZTZWAFZWTXAVTFZWNXAFZULZXDVPWRXEWSW
      LARUHWSXGVPWRWSXGWSDCUIXFWMWLDUMZUJWMWLUNUOUPUQXAVTWNWMURVCUSWPWGXCWAWPWG
      WOLZXCWCWOUTXIXAWNLZTXCWLWNVAXJXBXAWMXHVBVDVLVEVFVGVHVIVMWGVSWAVJVKVNVOVI
      VM $.
      $( [30-Jan-2015] $)
  $}

  $( The finite T operator is idempotent over ` 1c ` .  Theorem X.1.34(a) of
     [Rosser] p. 529.  (Contributed by SF, 30-Jan-2015.) $)
  tfin1c $p |- _T[fin] 1c = 1c $=
    ( c0c c1c cplc ctfin cnnc wcel wne wceq peano1 addcid2 csn 1cex snel1c ne0i
    c0 ax-mp eqnetri tfinsuc mp2an tfineq tfin0c addceq1i eqtri 3eqtr3i ) ABCZD
    ZADZBCZBDZBAEFUEOGUFUHHIUEBOBJZBKZBFBOGBLMBUKNPQARSUEBHUFUIHUJUEBTPUHUEBUGA
    BUAUBUJUCUD $.
    $( [30-Jan-2015] $)

  ${
    $d M x y $.  $d N x y $.
    $( Lemma for ~ tfinltfin .  Prove the forward direction of the theorem.
       (Contributed by SF, 2-Feb-2015.) $)
    tfinltfinlem1 $p |- ( ( M e. Nn /\ N e. Nn ) ->
    ( << M , N >> e. <[fin] ->
      << _T[fin] M , _T[fin] N >> e. <[fin] ) ) $=
      ( vx vy cnnc wcel wa c0 wne cv cplc wceq wrex ctfin copk addceq1d syl2anc
      c1c wi cvv cltfin tfinnnul adantrd adantr addcnul1 addccom eqtr3i addceq2
      ex syl6eq eqeq2d rspcev mpan2 eleq1 tfineq tfinnul eqeq1d rexbidv mpbiri
      imbi12d adantld a1dd simp2r simp3r simp3l eqnetrrd addcnnul simpld simprd
      w3a cpw1 tfinprop adantl 3ad2ant3 simp1l nncaddccl tfinsuc tfindi syl3anc
      syl eqtrd 3expa exp32 com12 pm2.61ine expr rexlimdv jcad opkltfing tfinex
      imp3a wb mp2an a1i 3imtr4d ) AEFZBEFZGZAHIZBACJZKZRKZLZCEMZGZANZHIZBNZXFD
      JZKZRKZLZDEMZGZABOUAFXFXHOUAFZWRXEXGXMWPXEXGSWQWPWSXGXDWPWSXGAUBUIUCUDWRW
      SXDXMWRWSXDXMSWRWSGXCXMCEWRWSWTEFZXCXMSZWRWSXPGZGZXQSBHBHLZXSXMXCXTWRXMXR
      XTWQXMWPXTWQXMSHEFZHXKLZDEMZSYAHHRKZLZYCRHKHYDRUERHUFUGYBYEDHEXIHLZXKYDHY
      FXJHRYFXJXFHKHXIHXFUHXFUEUJPUKULUMXTWQYAXMYCBHEUNXTXLYBDEXTXHHXKXTXHHNHBH
      UOUPUJUQURUTUSVAUCVBXSBHIZXQXSYGXCXMWRXRYGXCGZXMWRXRYHVJZWTNZEFZXHXFYJKZR
      KZLZXMYIXPWTHIZYKWRWSXPYHVCZYIWSYOYIXAHIZWSYOGYIYQRHIZYIXBHIZYQYRGYIBXBHW
      RXRYGXCVDWRXRYGXCVEVFZXARVGVTVHZAWTVGVTVIXPYOGYKXIVKYJFDWTMWTDVLVHQYIXHXA
      NZRKZYMYIXHXBNZUUCYHWRXHUUDLZXRXCUUEYGBXBUOVMVNYIXAEFZYSUUDUUCLYIWPXPUUFW
      PWQXRYHVOZYPAWTVPQYTXAVQQWAYIUUBYLRYIWPXPYQUUBYLLUUGYPUUAAWTVRVSPWAXLYNDY
      JEXIYJLZXKYMXHUUHXJYLRXIYJXFUHPUKULQWBWCWDWEWFWGUIWKWHCABEEWIXOXNWLZWRXFT
      FXHTFUUIAWJBWJDXFXHTTWIWMWNWO $.
      $( [2-Feb-2015] $)
  $}


  ${
    $d M x y $.  $d N x y $.
    $( Ordering rule for the finite T operation.  Corollary to theorem X.1.33
       of [Rosser] p. 529.  (Contributed by SF, 1-Feb-2015.) $)
    tfinltfin $p |- ( ( M e. Nn /\ N e. Nn ) ->
    ( << M , N >> e. <[fin] <->
      << _T[fin] M , _T[fin] N >> e. <[fin] ) ) $=
      ( vx vy cnnc wcel wa copk cltfin ctfin tfinltfinlem1 wi c0 wceq cplc wrex
      wne wn cvv jca cv c1c tfineq tfinnul syl6eq df-ne con2bii intnanrd tfinex
      sylib wb opkltfing mp2an sylnibr pm2.21d a1d w3a tfinprop simpld ltfinirr
      cpw1 syl 3adant2 opkeq2 eleq1d notbid syl5ibcom con2d nsyl simpl1 syl2anc
      imp simpl3 simpl2 simprr simprl ltfinasym sylc expr imnan ancoms simprbda
      3adant3 adantrl mtod w3o ltfintri adantr ecase23d expcom pm2.61ine impbid
      ex 3expa ) AEFZBEFZGZABHIFZAJZBJZHZIFZABKWQXBWRLZLAMAMNZXCWQXDXBWRXDWSMQZ
      WTWSCUAOUBONCEPZGZXBXDXEXFXDWSMNZXERXDWSMJMAMUCUDUEXEXHWSMUFUGUJUHWSSFWTS
      FXBXGUKAUIBUICWSWTSSULUMUNUOUPWQAMQZXCWOWPXIXCWOWPXIUQZXBWRXJXBGZWRABNZBA
      HIFZXKWSWTNZXLXJXBXNRXJXNXBXJWSWSHZIFZRZXNXBRWOXIXQWPWOXIGZWSEFZXQXRXSDUA
      ZVAZWSFDAPADURUSZWSUTVBVCXNXPXBXNXOXAIWSWTWSVDVEVFVGVHVLABUCVIXKXMBMQZWTW
      SHIFZGZXKYCYDRZLYERXJXBYCYFXJXBYCGZGZXSWTEFZGXBYFYHXSYIYHWOXIXSWOWPXIYGVJ
      WOWPXIYGVMYBVKYHWPYCYIWOWPXIYGVNXJXBYCVOWPYCGYIYAWTFDBPBDURUSVKTXJXBYCVPW
      SWTVQVRVSYCYDVTUJXJXBXMYEXJXBXMGZGZYCYDXJXMYCXBXJXMYCABXTOUBONDEPZWOWPXMY
      CYLGUKZXIWPWOYMDBAEEULWAWCWBWDYKWPWOGXMYDYKWPWOWOWPXIYJVNWOWPXIYJVJTXJXBX
      MVOBAKVRTVSWEXJWRXLXMWFXBABWGWHWIWMWNWJWKWL $.
      $( [1-Feb-2015] $)
  $}

  $( Ordering rule for the finite T operation.  Theorem X.1.33 of [Rosser]
     p. 529.  (Contributed by SF, 2-Feb-2015.) $)
  tfinlefin $p |- ( ( M e. Nn /\ N e. Nn ) ->
    ( << M , N >> e. <_[fin] <->
      << _T[fin] M , _T[fin] N >> e. <_[fin] ) ) $=
    ( cnnc wcel wa copk cltfin wn ctfin clefin tfinltfin ancoms notbid lenltfin
    wb tfincl syl2an 3bitr4d ) ACDZBCDZEZBAFGDZHBIZAIZFGDZHZABFJDUDUCFJDZUAUBUE
    TSUBUEOBAKLMABNSUDCDUCCDUGUFOTAPBPUDUCNQR $.
    $( [2-Feb-2015] $)

  ${
    $d a b $.  $d a c $.  $d a n $.  $d a t $.  $d a x $.  $d b c $.  $d b n $.
    $d b t $.  $d b x $.  $d c n $.  $d c t $.  $d c x $.  $d n x $.  $d n t $.
    $d t x $.

    $( The set of all even naturals exists.  (Contributed by SF,
       20-Jan-2015.) $)
    evenfinex $p |- Even[fin] e. _V $=
      ( vx vn va vt vc vb cssetk csik csn wrex wa wcel copk wn exbii snex bitri
      wex 3bitri opksnelsik cevenfin cins2k cvv cxpk cin cins3k c1c cpw1 ccompl
      cimak cun csymdif cnnc c0 cdif cv cplc wceq wne df-evenfin eldifsn elimak
      cab vex wb opkex elpw121c anbi1i 19.41v bitr4i df-rex excom opkeq1 eleq1d
      3bitr4i ceqsexv elsymdif otkelins2k elssetk otkelins3k r2ex elpw141c elin
      eladdc opkelxpk mpbiran anbi12i ndisjrelk notbii elcompl con2bii elpw171c
      wel df-ne wo orbi12i elun bibi12i wal dfcleq rexbii abbi2i eqtr4i ssetkex
      alex ins2kex vvex xpkex inex ins3kex 1cex pw1ex imakex complex sikex unex
      symdifex nncex difex eqeltri ) UAGUBZYAUBZUCYAUDZUEZGUFZYAUEZUGUHZUHZUJZU
      IZHZHZHZUFZGHZUFZUBZUBZYOHZHZHZHZUFZYTUFZUBZUKZULZYHUHZUHZUHZUHZUHZUJZUIZ
      UEZUEZUUIUJZYHUJZUFZULZYHUJZUIZUMUJZUNIZUOZUCUAAUPZBUPZUVGUQZURZBUMJZUVFU
      NUSZKZAVCUVEABUTUVLAUVEUVFUVELUVFUVCLZUVKKUVLUVFUVCUNVAUVMUVJUVKUVMUVGUVF
      MZUVBLZBUMJUVJBUVBUMUVFAVDZVBUVOUVIBUMUVNUVALZNCAWMZCUPZUVHLZVEZNZCRZNZUV
      OUVIUVQUWCUVQDUPZUVNMZUUTLZDYHJZUWEUVSIZIZIZURZUWGKZDRZCRZUWCDUUTYHUVNUVG
      UVFVFZVBUWEYHLZUWGKZDRUWMCRZDRUWHUWOUWRUWSDUWRUWLCRZUWGKUWSUWQUWTUWGCUWEV
      GVHUWLUWGCVIVJOUWGDYHVKUWMCDVLVOUWNUWBCUWNUWKUVNMZUUTLZUXAYALZUXAUUSLZVEZ
      NUWBUWGUXBDUWKUWJPUWLUWFUXAUUTUWEUWKUVNVMVNVPUXAYAUUSVQUXEUWAUXCUVRUXDUVT
      UXCUWIUVFMGLUVRUWIUVGUVFGUVSPZBVDZUVPVRUVSUVFCVDZUVPVSQUWIUVGMZUURLZUWEEU
      PZIZIZIZURZUWEUXIMZUUQLZKZDRZERZUXDUVTUXJUXQDYHJUWQUXQKZDRZUXTDUUQYHUXIUW
      IUVGVFZVBUXQDYHVKUYBUXRERZDRUXTUYAUYDDUYAUXOERZUXQKUYDUWQUYEUXQEUWEVGVHUX
      OUXQEVIVJOUXREDVLVJSUWIUVGUVFUURUXFUXGUVPVTUVTFUPZUXKUEZUNURZUVSUYFUXKUKZ
      URZKZEUVGJFUVGJFBWMZEBWMZKZUYKKZERFRZUXTUVSUVGUVGFEWDUYKFEUVGUVGWAUYPUYOF
      RZERUXTUYOFEVLUXSUYQEUXSUXNUXIMZUUQLZUWEUYFIZIZIZIZIZURZUWEUYRMZUUPLZKZDR
      ZFRZUYQUXQUYSDUXNUXMPZUXOUXPUYRUUQUWEUXNUXIVMVNVPUYSVUGDUUIJUWEUUILZVUGKZ
      DRZVUJDUUPUUIUYRUXNUXIVFZVBVUGDUUIVKVUNVUHFRZDRVUJVUMVUPDVUMVUEFRZVUGKVUP
      VULVUQVUGFUWEWBVHVUEVUGFVIVJOVUHFDVLVJSVUIUYOFVUIVUDUYRMZUUPLZVURYDLZVURU
      UOLZKUYOVUGVUSDVUDVUCPZVUEVUFVURUUPUWEVUDUYRVMVNVPVURYDUUOWCVUTUYNVVAUYKV
      UTVURYBLZVURYCLZKUYNVURYBYCWCVVCUYLVVDUYMVVCVUBUXIMYALUYTUVGMGLUYLVUBUXNU
      XIYAVUAPZVUKUYCVRUYTUWIUVGGUYFPZUXFUXGVRUYFUVGFVDZUXGVSSVVDUYRYALZUXLUVGM
      GLUYMVVDVUDUCLVVHVVBVUDUYRUCYAVVBVUOWEWFUXLUWIUVGGUXKPZUXFUXGVRUXKUVGEVDZ
      UXGVSSWGQVVAVURYNLZVURUUNLZKUYKVURYNUUNWCVVKUYHVVLUYJVVKVUBUXNMYMLVUAUXMM
      YLLZUYHVUBUXNUXIYMVVEVUKUYCVTVUAUXMYLUYTPZUXLPZTVVMUYTUXLMYKLUYFUXKMZYJLZ
      UYHUYTUXLYKVVFVVITUYFUXKYJVVGVVJTVVPYILZNUYGUNUSZNVVQUYHVVRVVSUYFUXKVVGVV
      JWHWIVVPYIUYFUXKVFWJVVSUYHUYGUNWNWKVOSSVURUUMLZNACWMZUVFUYILZVEZNZARZNZVV
      LUYJVVTVWEVVTUWEVURMZUUGLZDUULJZUWEUVFIZIZIZIZIZIZIZIZURZVWHKZDRZARZVWEDU
      UGUULVURVUDUYRVFZVBUWEUULLZVWHKZDRVWSARZDRVWIVXAVXDVXEDVXDVWRARZVWHKVXEVX
      CVXFVWHAUWEWLVHVWRVWHAVIVJOVWHDUULVKVWSADVLVOVWTVWDAVWTVWQVURMZUUGLZVXGYR
      LZVXGUUFLZVEZNVWDVWHVXHDVWQVWPPVWRVWGVXGUUGUWEVWQVURVMVNVPVXGYRUUFVQVXKVW
      CVXIVWAVXJVWBVXIVWOUYRMZYQLVWMUXIMYPLZVWAVWOVUDUYRYQVWNPZVVBVUOVRVWMUXNUX
      IYPVWLPZVUKUYCVRVXMVWKUWIMYOLVWJUVSMGLVWAVWKUWIUVGYOVWJPZUXFUXGVTVWJUVSGU
      VFPZUXHTUVFUVSUVPUXHVSSSVXGUUCLZVXGUUELZWOAFWMZAEWMZWOVXJVWBVXRVXTVXSVYAV
      XRVWOVUDMUUBLVWNVUCMUUALZVXTVWOVUDUYRUUBVXNVVBVUOVTVWNVUCUUAVWMPVUBPTVYBV
      WMVUBMYTLVWLVUAMYSLZVXTVWMVUBYTVXOVVETVWLVUAYSVWKPZVVNTVYCVWKUYTMYOLVWJUY
      FMGLVXTVWKUYTYOVXPVVFTVWJUYFGVXQVVGTUVFUYFUVPVVGVSSSSVXSVXLUUDLVWMUXNMYTL
      ZVYAVWOVUDUYRUUDVXNVVBVUOVRVWMUXNUXIYTVXOVUKUYCVTVYEVWLUXMMYSLVWKUXLMYOLZ
      VYAVWLUXMYSVYDVVOTVWKUXLYOVXPVVITVYFVWJUXKMGLVYAVWJUXKGVXQVVJTUVFUXKUVPVV
      JVSQSSWPVXGUUCUUEWQUVFUYFUXKWQVOWRWISOSWIVURUUMVXBWJUYJVWCAWSVWFAUVSUYIWT
      VWCAXEQVOWGQWGSOSOVJSVOWRWISOSWIUVNUVAUWPWJUVIUWACWSUWDCUVFUVHWTUWACXEQVO
      XAQVHQXBXCUVCUVDUVBUMUVAUUTYHYAUUSGXDXFZUURUUQYHUUPUUIYDUUOYBYCYAVYGXFUCY
      AXGVYGXHXIYNUUNYMYLYKYJYIYFYHYEYAGXDXJVYGXIYGUGXKXLXLZXMXNXOXOXOXJUUMUUGU
      ULYRUUFYQYPYOGXDXOZXJXFXFUUCUUEUUBUUAYTYSYOVYIXOXOZXOXOXJUUDYTVYJXJXFXPXQ
      UUKUUJUUIUUHYHVYHXLXLZXLXLXLXMXNXIXIVYKXMVYHXMXJXQVYHXMXNXRXMUNPXSXT $.
      $( [20-Jan-2015] $)

    $d a y $.  $d b y $.  $d n y $.  $d t y $.  $d x y $.

    $( The set of all odd naturals exists.  (Contributed by SF,
       20-Jan-2015.) $)
    oddfinex $p |- Odd[fin] e. _V $=
      ( vx va vt vb vc vy cssetk csn wceq wrex wa wcel copk wn wex 3bitr4i snex
      exbii 3bitri opksnelsik coddfin cins2k cvv cxpk cin cins3k c1c cpw1 cimak
      vn ccompl csik cun csymdif ccnvk cidk cnnc c0 cdif cplc wne cab df-oddfin
      cv eldifsn vex elimak wb opkex elpw121c anbi1i 19.41v bitr4i df-rex excom
      opkeq1 eleq1d ceqsexv elsymdif otkelins2k elssetk bitri elpw131c elpw141c
      elin opkelxpk mpbiran anbi12i otkelins3k ndisjrelk notbii elcompl con2bii
      wel df-ne elpw171c wo orbi12i elun bibi12i wal dfcleq alex r2ex opkelcnvk
      eladdc weq sneqb opkelidkg mp2an elsnc elsuc rexbii abbi2i ssetkex ins2kex
      eqtr4i vvex xpkex inex ins3kex pw1ex imakex complex sikex symdifex cnvkex
      1cex unex idkex nncex difex eqeltri ) UAGUBZYNUBZUCYNUDZUEZGUFZYNUEZUGUHZ
      UHZUIZUKZULZULZULZUFZGULZUFZUBZUBZUUHULZULZULZULZUFZUUMUFZUBZUMZUNZUUAUHZ
      UHZUHZUHZUHZUIZUKZUEZUEZUVBUIZUUAUIZUBZUBZGUKZULZULZULZUOZUFZUEZUUKUUPUPU
      FZUBZUMZUNZUVEUIZUKZUEZUVBUIZUVAUIZUFZUNZUUAUIZUKZUQUIZURHZUSZUCUAAVDZUJV
      DZUWRUTZUGUTZIZUJUQJZUWQURVAZKZAVBUWPAUJVCUXDAUWPUWQUWPLUWQUWNLZUXCKUXDUW
      QUWNURVEUXEUXBUXCUXEUWRUWQMZUWMLZUJUQJUXBUJUWMUQUWQAVFZVGUXGUXAUJUQUXFUWL
      LZNBAWNZBVDZUWTLZVHZNZBOZNZUXGUXAUXIUXOUXICVDZUXFMZUWKLZCUUAJZUXQUXKHZHZH
      ZIZUXSKZCOZBOZUXOCUWKUUAUXFUWRUWQVIZVGUXQUUALZUXSKZCOUYEBOZCOUXTUYGUYJUYK
      CUYJUYDBOZUXSKUYKUYIUYLUXSBUXQVJVKUYDUXSBVLVMRUXSCUUAVNUYEBCVOPUYFUXNBUYF
      UYCUXFMZUWKLZUYMYNLZUYMUWJLZVHZNUXNUXSUYNCUYCUYBQZUYDUXRUYMUWKUXQUYCUXFVP
      VQVRUYMYNUWJVSUYQUXMUYOUXJUYPUXLUYOUYAUWQMGLUXJUYAUWRUWQGUXKQZUJVFZUXHVTU
      XKUWQBVFZUXHWAWBUYAUWRMZUWILZDVDZUWSLZUWQVUDUKZLZKZUXKVUDUWQHZUMZIZKZDOZA
      OZUYPUXLVUCUXQVUBMZUWHLZCUVAJZUXQVUIHZHZHZIZVUPKZCOZAOZVUNCUWHUVAVUBUYAUW
      RVIZVGVUQUXQUVALZVUPKZCOVVBAOZCOVVDVUPCUVAVNVVGVVHCVVGVVAAOZVUPKVVHVVFVVI
      VUPAUXQWCVKVVAVUPAVLVMRVVBCAVOSVVCVUMAVVCVUTVUBMZUWHLZUXQVUDHZHZHZHZHZIZU
      XQVVJMZUWGLZKZCOZDOZVUMVUPVVKCVUTVUSQZVVAVUOVVJUWHUXQVUTVUBVPVQVRVVKVVSCU
      VBJUXQUVBLZVVSKZCOZVWBCUWGUVBVVJVUTVUBVIZVGVVSCUVBVNVWFVVTDOZCOVWBVWEVWHC
      VWEVVQDOZVVSKVWHVWDVWIVVSDUXQWDVKVVQVVSDVLVMRVVTDCVOVMSVWAVULDVWAVVPVVJMZ
      UWGLZVWJUVTLZVWJUWFLZKVULVVSVWKCVVPVVOQZVVQVVRVWJUWGUXQVVPVVJVPVQVRVWJUVT
      UWFWEVWLVUHVWMVUKVWLVWJUVMLZVWJUVSLZKVUHVWJUVMUVSWEVWOVUEVWPVUGVWOVVNVUBM
      UVLLVVLUWRMZUVKLZVUEVVNVUTVUBUVLVVMQZVWCVVEVTVVLUYAUWRUVKVUDQZUYSUYTVTVWR
      BUJWNZEUJWNZKZUXKEVDZUEZURIZVUDUXKVXDUMZIZKZKZBOZEOZVUEVWRUXQVWQMZUVJLZCU
      UAJZUXQVXDHZHZHZIZVXNKZCOZEOZVXLCUVJUUAVWQVVLUWRVIZVGUYIVXNKZCOVXTEOZCOVX
      OVYBVYDVYECVYDVXSEOZVXNKVYEUYIVYFVXNEUXQVJVKVXSVXNEVLVMRVXNCUUAVNVXTECVOP
      VYAVXKEVYAVXRVWQMZUVJLZUXQUYCHZHZIZUXQVYGMZUVILZKZCOZBOZVXKVXNVYHCVXRVXQQ
      ZVXSVXMVYGUVJUXQVXRVWQVPVQVRVYHVYMCUVBJVWDVYMKZCOZVYPCUVIUVBVYGVXRVWQVIZV
      GVYMCUVBVNVYSVYNBOZCOVYPVYRWUACVYRVYKBOZVYMKWUAVWDWUBVYMBUXQWDVKVYKVYMBVL
      VMRVYNBCVOVMSVYOVXJBVYOVYJVYGMZUVILZWUCYQLZWUCUVHLZKVXJVYMWUDCVYJVYIQZVYK
      VYLWUCUVIUXQVYJVYGVPVQVRWUCYQUVHWEWUEVXCWUFVXIWUEWUCYOLZWUCYPLZKVXCWUCYOY
      PWEWUHVXAWUIVXBWUHUYCVWQMYNLVUBGLVXAUYCVXRVWQYNUYRVYQVYCVTUYAVVLUWRGUYSVW
      TUYTVTUXKUWRVUAUYTWASWUIVYGYNLZVXPUWRMGLVXBWUIVYJUCLWUJWUGVYJVYGUCYNWUGVY
      TWFWGVXPVVLUWRGVXDQZVWTUYTVTVXDUWREVFZUYTWASWHWBWUFWUCUUGLZWUCUVGLZKVXIWU
      CUUGUVGWEWUMVXFWUNVXHWUMUYCVXRMUUFLUYBVXQMUUELZVXFUYCVXRVWQUUFUYRVYQVYCWI
      UYBVXQUUEUYAQZVXPQZTWUOUYAVXPMUUDLUXKVXDMZUUCLZVXFUYAVXPUUDUYSWUKTUXKVXDU
      UCVUAWULTWURUUBLZNVXEURVAZNWUSVXFWUTWVAUXKVXDVUAWULWJWKWURUUBUXKVXDVIWLWV
      AVXFVXEURWOWMPSSWUCUVFLZNADWNZUWQVXGLZVHZNZAOZNZWUNVXHWVBWVGWVBUXQWUCMZUU
      TLZCUVEJZUXQVUTHZHZHZHZIZWVJKZCOZAOZWVGCUUTUVEWUCVYJVYGVIZVGUXQUVELZWVJKZ
      COWVQAOZCOWVKWVSWWBWWCCWWBWVPAOZWVJKWWCWWAWWDWVJAUXQWPVKWVPWVJAVLVMRWVJCU
      VEVNWVQACVOPWVRWVFAWVRWVOWUCMZUUTLZWWEUUKLZWWEUUSLZVHZNWVFWVJWWFCWVOWVNQW
      VPWVIWWEUUTUXQWVOWUCVPVQVRWWEUUKUUSVSWWIWVEWWGWVCWWHWVDWWGWVMVYGMZUUJLVUT
      VWQMUUILZWVCWVMVYJVYGUUJWVLQZWUGVYTVTVUTVXRVWQUUIVWCVYQVYCVTWWKVURVVLMZUU
      HLVUIVUDMZGLZWVCVURVVLUWRUUHVUIQZVWTUYTWIVUIVUDGUWQQZDVFZTUWQVUDUXHWWRWAZ
      SSWWEUUPLZWWEUURLZWQABWNZAEWNZWQWWHWVDWWTWXBWXAWXCWWTWVMVYJMUUOLWVLVYIMUU
      NLZWXBWVMVYJVYGUUOWWLWUGVYTWIWVLVYIUUNVUTQUYCQTWXDVUTUYCMUUMLVUSUYBMUULLZ
      WXBVUTUYCUUMVWCUYRTVUSUYBUULVURQZWUPTWXEVURUYAMUUHLVUIUXKMGLWXBVURUYAUUHW
      WPUYSTVUIUXKGWWQVUATUWQUXKUXHVUAWASSSWXAWWJUUQLVUTVXRMUUMLZWXCWVMVYJVYGUU
      QWWLWUGVYTVTVUTVXRVWQUUMVWCVYQVYCWIWXGVUSVXQMUULLVURVXPMUUHLZWXCVUSVXQUUL
      WXFWUQTVURVXPUUHWWPWUKTWXHVUIVXDMGLWXCVUIVXDGWWQWULTUWQVXDUXHWULWAWBSSWRW
      WEUUPUURWSUWQUXKVXDWSPWTWKSRSWKWUCUVFWVTWLVXHWVEAXAWVHAVUDVXGXBWVEAXCWBPW
      HWBWHSRSRSVUEVXIEUWRJBUWRJVXJEOBOVXLVUDUWRUWRBEXFVXIBEUWRUWRXDVXJBEVOSVMS
      VWPVVNVUTMUVRLVUTVVNMUVQLZVUGVVNVUTVUBUVRVWSVWCVVEWIVVNVUTUVQVWSVWCXEWXIV
      USVVMMUVPLWWMUVOLZVUGVUSVVMUVPWXFVVLQZTVURVVLUVOWWPVWTTWXJWWNUVNLZVUGVUIV
      UDUVNWWQWWRTWWONWVCNWXLVUGWWOWVCWWSWKWWNGVUIVUDVIWLUWQVUDUXHWLPWBSSWHWBVW
      JUWELZNFBWNZFVDZVUJLZVHZNZFOZNZVWMVUKWXMWXSWXMUXQVWJMZUWDLZCUVEJZUXQWXOHZ
      HZHZHZHZHZHZHZIZWYBKZCOZFOZWXSCUWDUVEVWJVVPVVJVIZVGWWAWYBKZCOWYMFOZCOWYCW
      YOWYQWYRCWYQWYLFOZWYBKWYRWWAWYSWYBFUXQWPVKWYLWYBFVLVMRWYBCUVEVNWYMFCVOPWY
      NWXRFWYNWYKVWJMZUWDLZWYTUUKLZWYTUWCLZVHZNWXRWYBXUACWYKWYJQWYLWYAWYTUWDUXQ
      WYKVWJVPVQVRWYTUUKUWCVSXUDWXQXUBWXNXUCWXPXUBWYIVVJMZUUJLWYGVUBMUUILZWXNWY
      IVVPVVJUUJWYHQZVWNVWGVTWYGVUTVUBUUIWYFQZVWCVVEVTXUFWYEUYAMUUHLWYDUXKMGLWX
      NWYEUYAUWRUUHWYDQZUYSUYTWIWYDUXKGWXOQZVUATWXOUXKFVFZVUAWASSWYTUUPLZWYTUWB
      LZWQFDWNZWXOVUILZWQXUCWXPXULXUNXUMXUOXULWYIVVPMUUOLWYHVVOMUUNLZXUNWYIVVPV
      VJUUOXUGVWNVWGWIWYHVVOUUNWYGQVVNQTXUPWYGVVNMUUMLWYFVVMMUULLZXUNWYGVVNUUMX
      UHVWSTWYFVVMUULWYEQZWXKTXUQWYEVVLMUUHLWYDVUDMGLXUNWYEVVLUUHXUIVWTTWYDVUDG
      XUJWWRTWXOVUDXUKWWRWASSSXUMXUEUWALWYGVUTMUPLZXUOWYIVVPVVJUWAXUGVWNVWGVTWY
      GVUTVUBUPXUHVWCVVEWIWYGVUTIZFAXGZXUSXUOXUTWYFVUSIWYEVURIZXVAWYFVUSXURXHWY
      EVURXUIXHXVBWYDVUIIXVAWYDVUIXUJXHWXOUWQXUKXHWBSWYGUCLVUTUCLXUSXUTVHXUHVWC
      WYGVUTUCUCXIXJWXOUWQXUKXKPSWRWYTUUPUWBWSWXOVUDVUIWSPWTWKSRSWKVWJUWEWYPWLV
      UKWXQFXAWXTFUXKVUJXBWXQFXCWBPWHSRSRSUYAUWRUWQUWIUYSUYTUXHWIUXLVUKAVUFJDUW
      SJVULAODOVUNAUXKUWSDXLVUKDAUWSVUFXDVULDAVOSPWTWKSRSWKUXFUWLUYHWLUXAUXMBXA
      UXPBUWQUWTXBUXMBXCWBPXMWBVKWBXNXQUWNUWOUWMUQUWLUWKUUAYNUWJGXOXPZUWIUWHUVA
      UWGUVBUVTUWFUVMUVSUVLUVKUVJUUAUVIUVBYQUVHYOYPYNXVCXPUCYNXRXVCXSXTUUGUVGUU
      FUUEUUDUUCUUBYSUUAYRYNGXOYAXVCXTYTUGYHYBYBZYCYDYEYEYEYAUVFUUTUVEUUKUUSUUJ
      UUIUUHGXOYEZYAXPXPZUUPUURUUOUUNUUMUULUUHXVEYEYEZYEYEYAZUUQUUMXVGYAXPYIYFU
      VDUVCUVBUVAUUAXVDYBZYBZYBYBYBZYCYDXTXTXVJYCXVDYCXPXPUVRUVQUVPUVOUVNGXOYDY
      EYEYEYGYAXTUWEUWDUVEUUKUWCXVFUUPUWBXVHUWAUPYJYAXPYIYFXVKYCYDXTXVJYCXVIYCY
      AYFXVDYCYDYKYCURQYLYM $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d n x $.
    $( Cardinal zero is even.  (Contributed by SF, 20-Jan-2015.) $)
    0ceven $p |- 0c e. Even[fin] $=
      ( vn vx c0c cevenfin wcel cv cplc wceq cnnc wrex c0 peano1 addcid2 eqcomi
      wne addceq12 anidms eqeq2d rspcev wa mp2an csn snid df-0c eleqtrri ax-mp
      0ex ne0i 0cex eqeq1 rexbidv neeq1 anbi12d df-evenfin elab2 mpbir2an ) CDE
      CAFZUQGZHZAIJZCKOZCIECCCGZHZUTLVBCCMNUSVCACIUQCHZURVBCVDURVBHUQUQCCPQRSUA
      KCEVAKKUBCKUGUCUDUECKUHUFBFZURHZAIJZVEKOZTUTVATBCDUIVECHZVGUTVHVAVIVFUSAI
      VECURUJUKVECKULUMBAUNUOUP $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d A n x $.
    $( An even finite cardinal is a finite cardinal.  (Contributed by SF,
       20-Jan-2015.) $)
    evennn $p |- ( A e. Even[fin] -> A e. Nn ) $=
      ( vn vx cevenfin wcel cv cplc wceq cnnc wrex c0 wne eqeq1 rexbidv anbi12d
      wa neeq1 df-evenfin elab2g syl wi nncaddccl anidms eleq1a rexlimiv adantr
      ibi ) ADEZABFZUIGZHZBIJZAKLZPZAIEZUHUNCFZUJHZBIJZUPKLZPUNCADDUPAHZURULUSU
      MUTUQUKBIUPAUJMNUPAKQOCBRSUGULUOUMUKUOBIUIIEZUJIEZUKUOUAVAVBUIUIUBUCUJIAU
      DTUEUFT $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d A n x $.
    $( An odd finite cardinal is a finite cardinal.  (Contributed by SF,
       20-Jan-2015.) $)
    oddnn $p |- ( A e. Odd[fin] -> A e. Nn ) $=
      ( vn vx coddfin wcel cv cplc c1c wceq cnnc wrex c0 wa eqeq1 rexbidv neeq1
      wne anbi12d df-oddfin elab2g ibi wi nncaddccl anidms peano2 3syl rexlimiv
      eleq1a adantr syl ) ADEZABFZULGZHGZIZBJKZALQZMZAJEZUKURCFZUNIZBJKZUTLQZMU
      RCADDUTAIZVBUPVCUQVDVAUOBJUTAUNNOUTALPRCBSTUAUPUSUQUOUSBJULJEZUMJEZUNJEUO
      USUBVEVFULULUCUDUMUEUNJAUHUFUGUIUJ $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d A n x $.
    $( An even number is non-empty.  (Contributed by SF, 22-Jan-2015.) $)
    evennnul $p |- ( A e. Even[fin] -> A =/= (/) ) $=
      ( vn vx cevenfin wcel cv cplc wceq cnnc wrex c0 wne eqeq1 rexbidv anbi12d
      wa neeq1 df-evenfin elab2g ibi simprd ) ADEZABFZUCGZHZBIJZAKLZUBUFUGPZCFZ
      UDHZBIJZUIKLZPUHCADDUIAHZUKUFULUGUMUJUEBIUIAUDMNUIAKQOCBRSTUA $.
      $( [22-Jan-2015] $)

    $( An odd number is non-empty.  (Contributed by SF, 22-Jan-2015.) $)
    oddnnul $p |- ( A e. Odd[fin] -> A =/= (/) ) $=
      ( vn vx coddfin wcel cv cplc c1c wceq cnnc wrex c0 wa eqeq1 rexbidv neeq1
      wne anbi12d df-oddfin elab2g ibi simprd ) ADEZABFZUDGHGZIZBJKZALQZUCUGUHM
      ZCFZUEIZBJKZUJLQZMUICADDUJAIZULUGUMUHUNUKUFBJUJAUENOUJALPRCBSTUAUB $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d A m n x $.
    $( The successor of an even natural is odd.  (Contributed by SF,
       20-Jan-2015.) $)
    sucevenodd $p |- ( ( A e. Even[fin] /\ ( A +c 1c ) =/= (/) ) ->
               ( A +c 1c ) e. Odd[fin] ) $=
      ( vm vx cevenfin wcel c1c cplc c0 wa coddfin wceq cnnc wrex eqeq1 rexbidv
      wne cv neeq1 anbi12d cvv df-evenfin elab2g ibi addceq1 reximi adantr 1cex
      syl anim1i wb addcexg mpan2 df-oddfin mpbird ) ADEZAFGZHPZIUPJEZUPBQZUSGZ
      FGZKZBLMZUQIZUOVCUQUOAUTKZBLMZAHPZIZVCUOVHCQZUTKZBLMZVIHPZIVHCADDVIAKZVKV
      FVLVGVMVJVEBLVIAUTNOVIAHRSCBUAUBUCVFVCVGVEVBBLAUTFUDUEUFUHUIUOURVDUJZUQUO
      UPTEZVNUOFTEVOUGAFDTUKULVIVAKZBLMZVLIVDCUPJTVIUPKZVQVCVLUQVRVPVBBLVIUPVAN
      OVIUPHRSCBUMUBUHUFUN $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d A m n x $.
    $( The successor of an odd natural is even.  (Contributed by SF,
       22-Jan-2015.) $)
    sucoddeven $p |- ( ( A e. Odd[fin] /\ ( A +c 1c ) =/= (/) ) ->
               ( A +c 1c ) e. Even[fin] ) $=
      ( vm vn vx coddfin wcel c1c cplc c0 wa cevenfin cv wceq cnnc wrex rexbidv
      wne eqeq1 syl cvv neeq1 anbi12d df-oddfin elab2g wi peano2 addc32 addcass
      addceq1i eqtri addceq12 anidms eqeq2d rspcev mpan2 addceq1 biimprd com12
      ibi eqeq1d rexlimiv adantr anim1i wb 1cex addcexg df-evenfin mpbird ) AEF
      ZAGHZIQZJVJKFZVJBLZVMHZMZBNOZVKJZVIVPVKVIACLZVRHGHZMZCNOZAIQZJZVPVIWCDLZV
      SMZCNOZWDIQZJWCDAEEWDAMZWFWAWGWBWHWEVTCNWDAVSRPWDAIUAUBDCUCUDUSWAVPWBVTVP
      CNVRNFZVSGHZVNMZBNOZVTVPUEWIVRGHZNFZWLVRUFWNWJWMWMHZMZWLWJWMVRHZGHWOVSWQG
      VRVRGUGUIWMVRGUHUJWKWPBWMNVMWMMZVNWOWJWRVNWOMVMVMWMWMUKULUMUNUOSVTWLVPVTV
      PWLVTVOWKBNVTVJWJVNAVSGUPUTPUQURSVAVBSVCVIVLVQVDZVKVIVJTFZWSVIGTFWTVEAGET
      VFUOWDVNMZBNOZWGJVQDVJKTWDVJMZXBVPWGVKXCXAVOBNWDVJVNRPWDVJIUAUBDBVGUDSVBV
      H $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d x n $.
    $( Alternate definition of even number.  (Contributed by SF,
       25-Jan-2015.) $)
    dfevenfin2 $p |- Even[fin] =
       { x | E. n e. Nn ( x = ( n +c n ) /\ ( n +c n ) =/= (/) ) } $=
      ( cevenfin cv cplc wceq cnnc wrex c0 wne df-evenfin r19.41v neeq1 pm5.32i
      wa cab rexbii bitr3i abbii eqtri ) CADZBDZUBEZFZBGHUAIJZOZAPUDUCIJZOZBGHZ
      APABKUFUIAUFUDUEOZBGHUIUDUEBGLUJUHBGUDUEUGUAUCIMNQRST $.
      $( [25-Jan-2015] $)

    $( Alternate definition of odd number.  (Contributed by SF,
       25-Jan-2015.) $)
    dfoddfin2 $p |- Odd[fin] =
       { x | E. n e. Nn ( x = ( ( n +c n ) +c 1c ) /\
             ( ( n +c n ) +c 1c ) =/= (/) ) } $=
      ( coddfin cv cplc c1c wceq cnnc wrex c0 wne cab df-oddfin r19.41v pm5.32i
      wa neeq1 rexbii bitr3i abbii eqtri ) CADZBDZUCEFEZGZBHIUBJKZPZALUEUDJKZPZ
      BHIZALABMUGUJAUGUEUFPZBHIUJUEUFBHNUKUIBHUEUFUHUBUDJQORSTUA $.
      $( [25-Jan-2015] $)
  $}

  ${
    $d x y k n m $.
    $( Every non-empty finite cardinal is either even or odd.  Theorem X.1.35
       of [Rosser] p. 529.  (Contributed by SF, 20-Jan-2015.) $)
    evenoddnnnul $p |- ( Even[fin] u. Odd[fin] ) = ( Nn \ { (/) } ) $=
      ( vx vn vm vk cevenfin coddfin cnnc c0 wss cv wcel wne ssriv wi c0c neeq1
      c1c wo eleq1 imbi12d cun cdif wa evennn evennnul eldifsn sylanbrc oddnnul
      csn oddnn pm3.2i unss mpbi cplc cab cvv wceq vex elsnc df-ne con2bii bitri
      orbi1i elun imor 3bitr4i abbi2i snex evenfinex oddfinex unex eqeltrri weq
      wn 0ceven sselii a1i addcnnul simpld sucevenodd expcom sucoddeven orim12d
      ssun1 orcom 3imtr4g embantd com12 finds imp sylbi eqssi ) EFUAZGHUIZUBZEW
      OIZFWOIZUCWMWOIWPWQAEWOAJZEKWRGKZWRHLZWRWOKZWRUDWRUEWRGHUFZUGMAFWOWRFKWSW
      TXAWRUJWRUHXBUGMUKEFWOULUMBWOWMBJZWOKXCGKZXCHLZUCXCWMKZXCGHUFXDXEXFCJZHLZ
      XGWMKZNZOHLZOWMKZNDJZHLZXMWMKZNZXMQUNZHLZXQWMKZNZXEXFNCDXCWNWMUAZXJCUOUPX
      JCYAXGWNKZXIRXHVNZXIRXGYAKXJYBYCXIYBXGHUQZYCXGHCURUSXHYDXGHUTVAVBVCXGWNWM
      VDXHXIVEVFVGWNWMHVHEFVIVJVKVKVLXGOUQXHXKXIXLXGOHPXGOWMSTCDVMXHXNXIXOXGXMH
      PXGXMWMSTXGXQUQXHXRXIXSXGXQHPXGXQWMSTCBVMXHXEXIXFXGXCHPXGXCWMSTXLXKEWMOEF
      WDVOVPVQXPXTNXMGKXRXPXSXRXNXOXSXRXNQHLXMQVRVSXRXMEKZXMFKZRXQFKZXQEKZRZXOX
      SXRYEYGYFYHYEXRYGXMVTWAYFXRYHXMWBWAWCXMEFVDXSYHYGRYIXQEFVDYHYGWEVBWFWGWHV
      QWIWJWKMWL $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d j n x a b y t $.
    $( Lemma for ~ evenodddisj .  Establish stratification for induction.
       (Contributed by SF, 25-Jan-2015.) $)
    evenodddisjlem1 $p |- { j | ( ( j +c j ) =/= (/) -> A.
n e. Nn ( ( ( n +c n ) +c 1c ) =/= (/) -> ( j +c j ) =/= ( ( n +c n ) +c 1c ) )
                                 ) } e. _V $=
      ( vx vy va vb vt cssetk csn wceq wn wcel copk wex wrex exbii 3bitr4i snex
      wa 3bitri cins3k cins2k cin c1c cpw1 cimak ccompl csik csymdif ccnvk cdif
      cun c0 cimagek cidk cvv cxpk cnnc cv cplc wne wi cab wo df-or vex elimakv
      wral elin wel wal opkex elimak elpw121c anbi1i 19.41v bitr4i df-rex excom
      wb opkeq1 ceqsexv elsymdif otkelins3k elssetk bitri otkelins2k opksnelsik
      eleq1d elpw141c ndisjrelk notbii elcompl con2bii elpw171c orbi12i bibi12i
      df-ne elun dfcleq alex anbi12i rexcom eqeq2i abeq2 opkelxpk mpbiran2 elsnc
      df-addc elpw11c opkelcnvk opkelimagek dfaddc2 addcex addceq1 eqeq2d eldif
      weq opkelidkg mp2an equcom 1cex eqeq2 eqeq1 notbid anbi12d rexbii ssetkex
      annim ins3kex ins2kex inex pw1ex imakex complex sikex unex symdifex xpkex
      vvex imbi12i con34b ralbii dfral2 imbi2d ralbidv orbi12d imbi1i addcexlem
      neeq1 abbi2i cnvkex imagekex idkex difex nncex eqeltrri ) HUAZHUBZUUSUBZU
      URUUSUCZUDUEZUEZUFZUGZUHZUHZUHZUAZHUHZUAZUBZUBZUVJUHZUHZUHZUHZUAZUVOUAZUB
      ZULZUIZUVCUEZUEZUEZUEZUEZUFZUGZUCZUCZUWDUFZUCZUVCUFZUBZUIZUVCUFZUGZUMIZUU
      RUUSUUTUVDUHZUHZUHZUJZUAZUGZUVMUVTUVRULZUIZUWGUFZUGZUCZUCZUWDUFZUCZUVCUFZ
      UBZUIZUVCUFZUGZUBZUVEUAUUTUURUBUVNUAULUIUWDUFUKZUVCUFZUNZUAZUCZUVBUFZUAZU
      OUWSUPUQZUKZUBZUCZUVBUFZURUFZUGZULZUPUQZUCZUPUFZAUSZUYRUTZUMVAZBUSZVUAUTZ
      UDUTZUMVAZUYSVUCVAZVBZBURVHZVBZAVCUPVUHAUYQUYSUMJZVUGVDZVUIKZVUGVBUYRUYQL
      ZVUHVUIVUGVEVULCUSZUYRMZUYPLZCNVUMUYSJZVUMUMJZVUDVUMVUCVAZVBZBURVHZVDZSZC
      NVUJCUYPUYRAVFZVGVUOVVBCVUOVUNUWRLZVUNUYOLZSVVBVUNUWRUYOVIVVDVUPVVEVVAVVD
      DCVJZEUSZFUSZUCZUMJZDUSZVVGVVHULZJZSZFUYROEUYROZVTZDVKZVUPVUNUWQLZKVVPKZD
      NZKVVDVVQVVRVVTVVRGUSZVUNMZUWPLZGUVCOZVWAVVKIZIZIZJZVWCSZGNZDNZVVTGUWPUVC
      VUNVUMUYRVLZVMVWAUVCLZVWCSZGNVWIDNZGNVWDVWKVWNVWOGVWNVWHDNZVWCSVWOVWMVWPV
      WCDVWAVNZVOVWHVWCDVPVQPVWCGUVCVRVWIDGVSQVWJVVSDVWJVWGVUNMZUWPLZVWRUURLZVW
      RUWOLZVTZKVVSVWCVWSGVWGVWFRZVWHVWBVWRUWPVWAVWGVUNWAWIWBVWRUURUWOWCVXBVVPV
      WTVVFVXAVVOVWTVWEVUMMHLZVVFVWEVUMUYRHVVKRZCVFZVVCWDVVKVUMDVFZVXFWEZWFVXAV
      WEUYRMZUWNLZVVNEUYROZFUYROZVVOVWEVUMUYRUWNVXEVXFVVCWGVXJFAVJZVXKSZFNZVXLV
      XJVWAVXIMZUWMLZGUVCOZVWAVVHIZIZIZJZVXQSZGNZFNZVXOGUWMUVCVXIVWEUYRVLZVMVWM
      VXQSZGNVYCFNZGNVXRVYEVYGVYHGVYGVYBFNZVXQSVYHVWMVYIVXQFVWAVNVOVYBVXQFVPVQP
      VXQGUVCVRVYCFGVSQVYDVXNFVYDVYAVXIMZUWMLZVYJUUSLZVYJUWLLZSVXNVXQVYKGVYAVXT
      RZVYBVXPVYJUWMVWAVYAVXIWAWIWBVYJUUSUWLVIVYLVXMVYMVXKVYLVXSUYRMHLVXMVXSVWE
      UYRHVVHRZVXEVVCWGVVHUYRFVFZVVCWEWFVYMEAVJZVVNSZENZVXKVYMVWAVYJMZUWKLZGUWD
      OZVWAVVGIZIZIZIZIZJZWUASZGNZENZVYSGUWKUWDVYJVYAVXIVLZVMVWAUWDLZWUASZGNWUI
      ENZGNWUBWUKWUNWUOGWUNWUHENZWUASWUOWUMWUPWUAEVWAWJVOWUHWUAEVPVQPWUAGUWDVRW
      UIEGVSQWUJVYREWUJWUGVYJMZUWKLZWUQUUTLZWUQUWJLZSVYRWUAWURGWUGWUFRZWUHVYTWU
      QUWKVWAWUGVYJWAWIWBWUQUUTUWJVIWUSVYQWUTVVNWUSWUEVXIMUUSLWUCUYRMHLVYQWUEVY
      AVXIUUSWUDRZVYNVYFWGWUCVWEUYRHVVGRZVXEVVCWGVVGUYREVFZVVCWETWUTWUQUVILZWUQ
      UWILZSVVNWUQUVIUWIVIWVEVVJWVFVVMWVEWUEVYAMZUVHLWUDVXTMZUVGLZVVJWUEVYAVXIU
      VHWVBVYNVYFWDWUDVXTUVGWUCRZVXSRZWHWVIWUCVXSMZUVFLVVGVVHMZUVELZVVJWUCVXSUV
      FWVCVYOWHVVGVVHUVEWVDVYPWHWVMUVDLZKVVIUMVAZKZWVNVVJWVOWVPVVGVVHWVDVYPWKZW
      LWVMUVDVVGVVHVLWMWVPVVJVVIUMWRWNZQTTWUQUWHLZKCDVJZVUMVVLLZVTZKZCNZKZWVFVV
      MWVTWWEWVTVWAWUQMZUWBLZGUWGOZVWAVUMIZIZIZIZIZIZIZIZJZWWHSZGNZCNZWWEGUWBUW
      GWUQWUGVYJVLZVMVWAUWGLZWWHSZGNWWSCNZGNWWIWXAWXDWXEGWXDWWRCNZWWHSWXEWXCWXF
      WWHCVWAWOZVOWWRWWHCVPVQPWWHGUWGVRWWSCGVSQWWTWWDCWWTWWQWUQMZUWBLZWXHUVMLZW
      XHUWALZVTZKWWDWWHWXIGWWQWWPRZWWRWWGWXHUWBVWAWWQWUQWAWIWBWXHUVMUWAWCWXLWWC
      WXJWWAWXKWWBWXJWWOVYJMZUVLLWWMVXIMUVKLZWWAWWOWUGVYJUVLWWNRZWVAWULWGWWMVYA
      VXIUVKWWLRZVYNVYFWGWXOWWKVWEMUVJLZWWJVVKMHLZWWAWWKVWEUYRUVJWWJRZVXEVVCWDW
      WJVVKHVUMRZVXGWHZVUMVVKVXFVXGWEZTTWXHUVRLZWXHUVTLZVDCEVJZCFVJZVDZWXKWWBWY
      DWYFWYEWYGWYDWWOWUGMUVQLWWNWUFMUVPLZWYFWWOWUGVYJUVQWXPWVAWULWDWWNWUFUVPWW
      MRZWUERWHWYIWWMWUEMUVOLZWWLWUDMUVNLZWYFWWMWUEUVOWXQWVBWHWWLWUDUVNWWKRZWVJ
      WHZWYLWWKWUCMUVJLZWWJVVGMHLZWYFWWKWUCUVJWXTWVCWHZWWJVVGHWYAWVDWHZVUMVVGVX
      FWVDWEZTTTWYEWXNUVSLWWMVYAMUVOLZWYGWWOWUGVYJUVSWXPWVAWULWGWWMVYAVXIUVOWXQ
      VYNVYFWDWYTWWLVXTMUVNLZWWKVXSMUVJLZWYGWWLVXTUVNWYMWVKWHZWWKVXSUVJWXTVYOWH
      ZXUBWWJVVHMHLZWYGWWJVVHHWYAVYPWHZVUMVVHVXFVYPWEZWFTTWPWXHUVRUVTWSVUMVVGVV
      HWSZQWQWLTPTWLWUQUWHWXBWMVVMWWCCVKWWFCVVKVVLWTWWCCXAWFZQXBWFXBTPTVVNEUYRV
      RVQXBTPTVXKFUYRVRVQVVNFEUYRUYRXCTWQWLTPTWLVUNUWQVWLWMVVPDXAQVUPVUMVVODVCZ
      JVVQUYSXUJVUMDEFUYRUYRXIXDVVODVUMXEWFVQVVEVUMUYNLZVUMUWSLZVUMUYMLZVDVVAVV
      EXUKUYRUPLVVCVUMUYRUYNUPVXFVVCXFXGVUMUWSUYMWSXULVUQXUMVUTVUMUMVXFXHVUMUYL
      LZKVUMVUCJZVUCUMJZVBZKZBUROZKZXUMVUTXUNXUSXUNVUAVUMMZUYKLZBUROXUSBUYKURVU
      MVXFVMXVBXURBURXVBVVKVUCJZCDXRZVVKUMJZKZSZSZDNZXUOXUPKZSZXURXVBVWAXVAMZUY
      JLZGUVBOZVWAVWFJZXVMSZGNZDNZXVIGUYJUVBXVAVUAVUMVLVMVWAUVBLZXVMSZGNXVPDNZG
      NXVNXVRXVTXWAGXVTXVODNZXVMSXWAXVSXWBXVMDVWAXJVOXVOXVMDVPVQPXVMGUVBVRXVPDG
      VSQXVQXVHDXVQVWFXVAMZUYJLZXWCUYFLZXWCUYILZSXVHXVMXWDGVWFVWERXVOXVLXWCUYJV
      WAVWFXVAWAWIWBXWCUYFUYIVIXWEXVCXWFXVGXWEVVKVUAMZUYELZVUMVUBJZVVKVUMUDUTZJ
      ZSZCNZXVCVVKVUAVUMUYEVXGBVFZVXFWDXWHVWAXWGMZUYDLZGUVBOZVWAWWKJZXWPSZGNZCN
      ZXWMGUYDUVBXWGVVKVUAVLVMXVSXWPSZGNXWSCNZGNXWQXXAXXBXXCGXXBXWRCNZXWPSXXCXV
      SXXDXWPCVWAXJVOXWRXWPCVPVQPXWPGUVBVRXWSCGVSQXWTXWLCXWTWWKXWGMZUYDLZXXEUXS
      LZXXEUYCLZSXWLXWPXXFGWWKWXTXWRXWOXXEUYDVWAWWKXWGWAWIWBXXEUXSUYCVIXXGXWIXX
      HXWKVUMVUAMZUXRLZVVFVVNFVUAOZEVUAOZVTZDVKZXXGXWIXXIUXQLZKXXMKZDNZKXXJXXNX
      XOXXQXXOVWAXXIMZUXPLZGUVCOZVWHXXSSZGNZDNZXXQGUXPUVCXXIVUMVUAVLZVMVWMXXSSZ
      GNXYADNZGNXXTXYCXYEXYFGXYEVWPXXSSXYFVWMVWPXXSVWQVOVWHXXSDVPVQPXXSGUVCVRXY
      ADGVSQXYBXXPDXYBVWGXXIMZUXPLZXYGUURLZXYGUXOLZVTZKXXPXXSXYHGVWGVXCVWHXXRXY
      GUXPVWAVWGXXIWAWIWBXYGUURUXOWCXYKXXMXYIVVFXYJXXLXYIVXDVVFVWEVUMVUAHVXEVXF
      XWNWDVXHWFVWEVUAMZUXNLZEBVJZXXKSZENZXYJXXLXYMVWAXYLMZUXMLZGUVCOZVWAWUEJZX
      YRSZGNZENZXYPGUXMUVCXYLVWEVUAVLZVMVWMXYRSZGNYUAENZGNXYSYUCYUEYUFGYUEXYTEN
      ZXYRSYUFVWMYUGXYREVWAVNVOXYTXYREVPVQPXYRGUVCVRYUAEGVSQYUBXYOEYUBWUEXYLMZU
      XMLZYUHUUSLZYUHUXLLZSXYOXYRYUIGWUEWVBXYTXYQYUHUXMVWAWUEXYLWAWIWBYUHUUSUXL
      VIYUJXYNYUKXXKYUJWUCVUAMHLXYNWUCVWEVUAHWVCVXEXWNWGVVGVUAWVDXWNWEWFYUKFBVJ
      ZVVNSZFNZXXKYUKVWAYUHMZUXKLZGUWDOZVWAVYAIZIZJZYUPSZGNZFNZYUNGUXKUWDYUHWUE
      XYLVLZVMWUMYUPSZGNYVAFNZGNYUQYVCYVEYVFGYVEYUTFNZYUPSYVFWUMYVGYUPFVWAWJVOY
      UTYUPFVPVQPYUPGUWDVRYVAFGVSQYVBYUMFYVBYUSYUHMZUXKLZYVHUUTLZYVHUXJLZSYUMYU
      PYVIGYUSYURRZYUTYUOYVHUXKVWAYUSYUHWAWIWBYVHUUTUXJVIYVJYULYVKVVNYVJVYAXYLM
      UUSLVXSVUAMHLYULVYAWUEXYLUUSVYNWVBYUDWGVXSVWEVUAHVYOVXEXWNWGVVHVUAVYPXWNW
      ETYVKYVHUXELZYVHUXILZSVVNYVHUXEUXIVIYVMVVJYVNVVMYVHUXDLZKWVQYVMVVJYVOWVPY
      VOVYAWUEMUXCLWVGUXBLZWVPVYAWUEXYLUXCVYNWVBYUDWDVYAWUEUXBVYNWVBXKYVPWVHUXA
      LWVLUWTLZWVPWUDVXTUXAWVJWVKWHWUCVXSUWTWVCVYOWHYVQWVOWVPVVGVVHUVDWVDVYPWHW
      VRWFTTWLYVHUXDYUSYUHVLZWMWVSQYVHUXHLZKWWFYVNVVMYVSWWEYVSVWAYVHMZUXGLZGUWG
      OZWWRYWASZGNZCNZWWEGUXGUWGYVHYVRVMWXCYWASZGNYWCCNZGNYWBYWEYWFYWGGYWFWXFYW
      ASYWGWXCWXFYWAWXGVOWWRYWACVPVQPYWAGUWGVRYWCCGVSQYWDWWDCYWDWWQYVHMZUXGLZYW
      HUVMLZYWHUXFLZVTZKWWDYWAYWIGWWQWXMWWRYVTYWHUXGVWAWWQYVHWAWIWBYWHUVMUXFWCY
      WLWWCYWJWWAYWKWWBYWJWWOYUHMZUVLLWWMXYLMUVKLZWWAWWOYUSYUHUVLWXPYVLYVDWGWWM
      WUEXYLUVKWXQWVBYUDWGYWNWXRWXSWWAWWKVWEVUAUVJWXTVXEXWNWDWYBWYCTTYWHUVTLZYW
      HUVRLZVDWYHYWKWWBYWOWYFYWPWYGYWOYWMUVSLWYKWYFWWOYUSYUHUVSWXPYVLYVDWGWWMWU
      EXYLUVOWXQWVBYUDWDWYKWYLWYOWYFWYNWYQWYOWYPWYFWYRWYSWFTTYWPWWOYUSMUVQLWWNY
      URMUVPLZWYGWWOYUSYUHUVQWXPYVLYVDWDWWNYURUVPWYJVYARWHYWQWYTXUAWYGWWMVYAUVO
      WXQVYNWHXUCXUAXUBXUEWYGXUDXUFXUGTTTWPYWHUVTUVRWSXUHQWQWLTPTWLYVHUXHYVRWMX
      UIQXBWFXBTPTVVNFVUAVRVQXBTPTVWEVUMVUAUXNVXEVXFXWNWGXXKEVUAVRQWQWLTPTWLXXI
      UXQXYDWMXXMDXAQVUMVVKVUAUXRVXFVXGXWNWGXWIVUMXXLDVCZJXXNVUBYWRVUMDEFVUAVUA
      XIXDXXLDVUMXEWFQVUMVVKMUYBLVVKUYAVUMUFZJXXHXWKVUMVVKUYAVXFVXGXLVUMVVKVUAU
      YBVXFVXGXWNWDXWJYWSVVKVUMUDXMXDQXBTPTXWKXVCCVUBVUAVUAXWNXWNXNZXWIXWJVUCVV
      KVUMVUBUDXOXPWBTXWFVVKVUMMZUYHLYXAUOLZYXAUYGLZKZSXVGVVKVUAVUMUYHVXGXWNVXF
      WGYXAUOUYGXQYXBXVDYXDXVFYXBDCXRZXVDVVKUPLVUMUPLZYXBYXEVTVXGVXFVVKVUMUPUPX
      SXTDCYAWFYXCXVEYXCVVKUWSLZXVEYXCYXGYXFVXFVVKVUMUWSUPVXGVXFXFXGVVKUMVXGXHW
      FWLXBTXBTPTXVGXVKDVUCVUBUDYWTYBXNXVCXVDXUOXVFXVJVVKVUCVUMYCXVCXVEXUPVVKVU
      CUMYDYEYFWBXUOXUPYITYGWFWLVUMUYLVXFWMVUTXUQBURVHXUTVUSXUQBURVUSXVJXUOKZVB
      XUQVUDXVJVURYXHVUCUMWRVUMVUCWRUUAXUOXUPUUBVQUUCXUQBURUUDWFQWPTXBWFPVVAVUJ
      CUYSUYRUYRVVCVVCXNVUPVUQVUIVUTVUGVUMUYSUMYDVUPVUSVUFBURVUPVURVUEVUDVUMUYS
      VUCUUJUUEUUFUUGWBTUYTVUKVUGUYSUMWRUUHQUUKUYPUPUWRUYOUWQUWPUVCUURUWOHYHYJZ
      UWNUWMUVCUUSUWLHYHYKZUWKUWDUUTUWJUUSYXJYKZUVIUWIUVHUVGUVFUVEUVDUVAUVCUURU
      USYXIYXJYLUVBUDYBYMZYMZYNZYOYPYPYPYJUWHUWBUWGUVMUWAUVLUVKUVJHYHYPZYJYKYKZ
      UVRUVTUVQUVPUVOUVNUVJYXOYPYPZYPYPYJZUVSUVOYXQYJYKZYQYRUWFUWEUWDUWCUVCYXMY
      MYMZYMYMYMZYNYOYLYLYXTYNYLYXMYNYKYRYXMYNYOUYNUPUWSUYMUMRZUYLUYKURUYJUVBUY
      FUYIUYEUYDUVBUXSUYCUXRUXQUXPUVCUURUXOYXIUXNUXMUVCUUSUXLYXJUXKUWDUUTUXJYXK
      UXEUXIUXDUXCUXBUXAUWTUVDYXNYPYPYPUULYJYOUXHUXGUWGUVMUXFYXPUVTUVRYXSYXRYQY
      RYYAYNYOYLYLYXTYNYLYXMYNYKYRYXMYNYOYKUYBUYAUXTUVCUUIYXMYNUUMYJYLYXLYNYJUY
      HUOUYGUUNUWSUPYYBYTYSUUOYKYLYXLYNUUPYNYOYQYTYSYLYTYNUUQ $.
      $( [25-Jan-2015] $)
  $}

  ${
    $d m n $.  $d m x $.  $d n x $.  $d k n $.  $d k m $.  $d k p $.  $d k q $.
    $d n p $.  $d n q $.  $d p q $.  $d j k $.  $d j m $.  $d j n $.  $d j p $.
    $d k x $.  $d m p $.  $d m q $.


    $( The even finite cardinals and the odd ones are disjoint.  Theorem X.1.36
       of [Rosser] p. 529.  (Contributed by SF, 22-Jan-2015.) $)
    evenodddisj $p |- ( Even[fin] i^i Odd[fin] ) = (/) $=
      ( vx vn vp cv cplc wceq c0 wne wa cnnc c1c wn wi wcel c0c addceq12 anidms
      wral neeq1d imbi12d vk vj vm vq cevenfin coddfin cin dfevenfin2 dfoddfin2
      wrex cab ineq12i inab eqtri evenodddisjlem1 addcid2 syl6eq imbi2d ralbidv
      addceq1d neeq2d cbvralv syl6bb addc32 addceq1i eqtr3i 0cnsuc necomi rgenw
      weq addcass a1i neeq1i addcnnul simpld sylbi adantl simprl nnc0suc mpbiri
      sylib simpr rspcv syl addc4 adantr eqeq2i simplll nncaddccl simplrr 3syl
      wo peano2 simpllr prepeano4 syl22anc ex syl5bir necon3d embantd syld expr
      com23 imp31 anbi2d syl5ibrcom rexlimiv adantrl jaod mpd simplrl ralrimiva
      com12 finds df-ne imbi2i con2b ralbii ralnex syl6ib anbi1d rexbidv notbid
      bitri imnan eqeq1 imp3a mpbi abf ) UEUFUGZADZUADZYLEZFZYMGHZIZUAJUJZYKBDZ
      YREZKEZFZYTGHZIZBJUJZIZAUKZGYJYQAUKZUUDAUKZUGUUFUEUUGUFUUHAUAUHABUIULYQUU
      DAUMUNUUEAYQUUDLZMUUELYPUUIUAJYLJNZYNYOUUIUUJYOUUIMYNYOYMYTFZUUBIZBJUJZLZ
      MUUJYOUUBYMYTHZMZBJRZUUNUBDZUUREZGHZUUBUUSYTHZMZBJRZMOGHZUUBOYTHZMZBJRZMU
      CDZUVHEZGHZCDZUVKEZKEZGHZUVIUVMHZMZCJRZMZUVIKEZKEZGHZUUBUVTYTHZMZBJRZMYOU
      UQMUBUCYLUBBUOUUROFZUUTUVDUVCUVGUWEUUSOGUWEUUSOOEZOUWEUUSUWFFUURUUROOPQOU
      PZUQZSUWEUVBUVFBJUWEUVAUVEUUBUWEUUSOYTUWHSURUSTUBUCVJZUUTUVJUVCUVQUWIUUSU
      VIGUWIUUSUVIFUURUURUVHUVHPQZSUWIUVCUUBUVIYTHZMZBJRUVQUWIUVBUWLBJUWIUVAUWK
      UUBUWIUUSUVIYTUWJSURUSUWLUVPBCJBCVJZUUBUVNUWKUVOUWMYTUVMGUWMYSUVLKUWMYSUV
      LFYRYRUVKUVKPQUTZSUWMYTUVMUVIUWNVATVBVCTUURUVHKEZFZUUTUWAUVCUWDUWPUUSUVTG
      UWPUUSUWOUWOEZUVTUWPUUSUWQFUURUURUWOUWOPQUWOUVHEZKEUWQUVTUWOUVHKVKUWRUVSK
      UVHKUVHVDVEVFUQZSUWPUVBUWCBJUWPUVAUWBUUBUWPUUSUVTYTUWSSURUSTUBUAVJZUUTYOU
      VCUUQUWTUUSYMGUWTUUSYMFUURUURYLYLPQZSUWTUVBUUPBJUWTUVAUUOUUBUWTUUSYMYTUXA
      SURUSTUVGUVDUVFBJUVEUUBYTOYSVGVHVLVIVLUVHJNZUWAUVRUWDUXBUWAUVRUWDMUXBUWAI
      ZUVJUVQUWDUWAUVJUXBUWAUVIKKEZEZGHZUVJUVTUXEGUVIKKVKVMUXFUVJUXDGHZUVIUXDVN
      VOVPVQUXCUVQUWDUXCUVQIZUWCBJUXHYRJNZUUBUWBUXHUXIUUBIZIZUVSYSHZUWBUXKYROFZ
      YRUDDZKEZFZUDJUJZWLZUXLUXKUXIUXRUXHUXIUUBVRUDYRVSWAUXKUXMUXLUXQUXMUXLMUXK
      UXMUXLUVSOHUVIVGUXMYSOUVSUXMYSUWFOUXMYSUWFFYRYROOPQUWGUQVAVTVLUXHUUBUXQUX
      LMUXIUXQUXHUUBIZUXLUXPUXSUXLMZUDJUXNJNZUXTUXPUXHUXOUXOEZKEZGHZIZUVSUYBHZM
      UYEUYAUYFUXCUVQUYDUYAUYFMZUXCUYDUVQUYGUXCUYDUVQUYGMUXCUYDIUYAUVQUYFUXCUYD
      UYAUVQUYFMUXCUYDUYAIZIZUVQUXNUXNEZKEZGHZUVIUYKHZMZUYFUYIUYAUVQUYNMUYHUYAU
      XCUYDUYAWBVQUVPUYNCUXNJCUDVJZUVNUYLUVOUYMUYOUVMUYKGUYOUVLUYJKUYOUVLUYJFUV
      KUVKUXNUXNPQUTZSUYOUVMUYKUVIUYPVATWCWDUYIUYLUYMUYFUYHUYLUXCUYDUYLUYAUYDUY
      KUXDEZGHZUYLUYCUYQGUYCUYJUXDEZKEUYQUYBUYSKUXNKUXNKWEVEUYJUXDKVDUNVMUYRUYL
      UXGUYKUXDVNVOVPWFVQUYIUVSUYBUVIUYKUVSUYBFUVSUYKKEZFZUYIUVIUYKFZUYTUYBUVSU
      YTUXOUXNEZKEUYBUYKVUCKUXNUXNKVDVEUXOUXNKVKUNWGUYIVUAVUBUYIVUAIZUVIJNZUYKJ
      NZVUAUVSGHZVUBVUDUXBVUEUXBUWAUYHVUAWHUXBVUEUVHUVHWIQZWDVUDUYAUYJJNZVUFUXC
      UYDUYAVUAWJUYAVUIUXNUXNWIQUYJWMWKUYIVUAWBVUDUWAVUGUXBUWAUYHVUAWNUWAVUGKGH
      UVSKVNVOWDUVIUYKWOWPWQWRWSWTXAXBXCWQXCXDXMUXPUXSUYEUXLUYFUXPUUBUYDUXHUXPY
      TUYCGUXPYSUYBKUXPYSUYBFYRYRUXOUXOPQZUTSXEUXPYSUYBUVSVUJVATXFXGXMXHXIXJUXK
      UVTYTUVSYSUXKUVTYTFZUVSYSFZUXKVUKIZUVSJNZYSJNZVUKUWAVULVUMUXBVUEVUNUXKUXB
      VUKUXBUWAUVQUXJWHWFVUHUVIWMWKVUMUXIVUOUXHUXIUUBVUKXKUXIVUOYRYRWIQWDUXKVUK
      WBUXKUWAVUKUXBUWAUVQUXJWNWFUVSYSWOWPWQWSXJXBXLWQWTWQXCXNUUQUULLZBJRUUNUUP
      VUPBJUUPUUKUUBLMZVUPUUPUUBUUKLZMVUQUUOVURUUBYMYTXOXPUUBUUKXQYDUUKUUBYEYDX
      RUULBJXSYDXTYNUUIUUNYOYNUUDUUMYNUUCUULBJYNUUAUUKUUBYKYMYTYFYAYBYCURXFYGXG
      YQUUDYEYHYIUN $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d M m n x $.
    $( If ` M ` is even , then so is ` _T[fin] M ` .  Theorem X.1.37 of
       [Rosser] p. 530.  (Contributed by SF, 26-Jan-2015.) $)
    eventfin $p |- ( M e. Even[fin] -> _T[fin] M e. Even[fin] ) $=
      ( vn vx vm cevenfin wcel cv cplc wceq cnnc wrex c0 wa ctfin eqeq1 rexbidv
      wne neeq1 anbi12d wi df-evenfin elab2g ibi addceq2 addcnul1 cpw1 tfinprop
      syl6eq necon3i simpld sylan2 3anidm12 addceq12 rspcev nncaddccl tfinnnul
      tfindi anidms eqeq2d syl2anc sylan jca tfinex elab2 sylibr tfineq imbi12d
      ex eleq1d biimprd com12 syl rexlimiv imp ) AEFZABGZVPHZIZBJKZALQZMZANZEFZ
      VOWACGZVQIZBJKZWDLQZMWACAEEWDAIZWFVSWGVTWHWEVRBJWDAVQOPWDALRSCBUAUBUCVSVT
      WCVRVTWCTZBJVPJFZVQLQZVQNZEFZTZVRWITWJWKWMWJWKMZWLDGZWPHZIZDJKZWLLQZMZWMW
      OWSWTWOVPNZJFZWLXBXBHZIZWSWKWJVPLQZXCVPLVQLVPLIVQVPLHLVPLVPUDVPUEUHUIWJXF
      MXCWDUFXBFCVPKVPCUGUJUKWJWKXEVPVPUQULWRXEDXBJWPXBIZWQXDWLXGWQXDIWPWPXBXBU
      MURUSUNUTWJVQJFZWKWTWJXHVPVPUOURVQUPVAVBWDWQIZDJKZWGMXACWLEVQVCWDWLIZXJWS
      WGWTXKXIWRDJWDWLWQOPWDWLLRSCDUAVDVEVHVRWNWIVRWIWNVRVTWKWCWMAVQLRVRWBWLEAV
      QVFVIVGVJVKVLVMVNVL $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d M n m x $.
    $( If ` M ` is odd , then so is ` _T[fin] M ` .  Theorem X.1.38 of [Rosser]
       p. 530.  (Contributed by SF, 26-Jan-2015.) $)
    oddtfin $p |- ( M e. Odd[fin] -> _T[fin] M e. Odd[fin] ) $=
      ( vn vx vm coddfin wcel cv cplc c1c wceq cnnc c0 wne wa ctfin eqeq1 neeq1
      wrex wi syl rexbidv anbi12d df-oddfin elab2g ibi addceq2 addcnul1 addceq1
      syl6eq addccom eqtri necon3i cpw1 tfinprop simpld sylan2 nncaddccl anidms
      1cnnc tfindi mp3an2 sylan addcnnul 3anidm12 tfin1c addceq12 mpan2 rspcev
      eqtrd eqeq2d syl2anc peano2 tfinnnul tfinex elab2 sylibr ex tfineq eleq1d
      jca imbi12d biimprd com12 rexlimiv imp ) AEFZABGZWGHZIHZJZBKRZALMZNZAOZEF
      ZWFWMCGZWIJZBKRZWPLMZNWMCAEEWPAJZWRWKWSWLWTWQWJBKWPAWIPUAWPALQUBCBUCUDUEW
      KWLWOWJWLWOSZBKWGKFZWILMZWIOZEFZSZWJXASXBXCXEXBXCNZXDDGZXHHZIHZJZDKRZXDLM
      ZNZXEXGXLXMXGWGOZKFZXDXOXOHZIHZJZXLXCXBWGLMZXPWGLWILWGLJZWILIHZLYAWHLJWIY
      BJYAWHWGLHLWGLWGUFWGUGUIWHLIUHTYBILHLLIUJIUGUKUIULXBXTNXPWPUMXOFCWGRWGCUN
      UOUPXGXDWHOZIOZHZXRXBWHKFZXCXDYEJZXBYFWGWGUQURZYFIKFXCYGUSWHIUTVAVBXGYCXQ
      JZYEXRJZXCXBWHLMZYIXCYKILMWHIVCUOXBYKYIWGWGUTVDUPYIYDIJYJVEYCYDXQIVFVGTVI
      XKXSDXOKXHXOJZXJXRXDYLXIXQJZXJXRJYLYMXHXHXOXOVFURXIXQIUHTVJVHVKXBWIKFZXCX
      MXBYFYNYHWHVLTWIVMVBVTWPXJJZDKRZWSNXNCXDEWIVNWPXDJZYPXLWSXMYQYOXKDKWPXDXJ
      PUAWPXDLQUBCDUCVOVPVQWJXFXAWJXAXFWJWLXCWOXEAWILQWJWNXDEAWIVRVSWAWBWCTWDWE
      T $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d n l y x b $.  $d b t $.  $d b z $.  $d l t $.  $d l z $.  $d n t $.
    $d n z $.  $d t x $.  $d t y $.  $d t z $.  $d x z $.  $d y z $.

    $( Lemma for ~ nnadjoin .  Establish stratification.  (Contributed by SF,
       29-Jan-2015.) $)
    nnadjoinlem1 $p |- { n | A. l e. n ( y e. ~ U. l -> { x |
            E. b e. l x = ( b u. { y } ) } e. n ) } e. _V $=
      ( vz vt cssetk wel cvv c1c csn wcel wn copk wa wex exbii 3bitr4i 3bitri
      cab cpw1 cxpk cin ccompl cins3k cins2k cv cun csymdif csik cdif cuni wceq
      cimak wrex wral snex opkeq1 eleq1d ceqsexv elin vex elssetk eldif elcompl
      wi elimak el1c anbi1i 19.41v bitr4i df-rex excom opkelxpk mpbiran2 elequ2
      snelpw1 elab anbi12i eluni xchbinx wb wal abeq2 opkex elpw121c otkelins3k
      df-clel opksnelsik elsymdif bitri otkelins2k alex dfcleq weq elsnc orbi12i
      sneqb elun bibi12i 3bitr4ri notbii annim dfral2 abbi2i ssetkex setswithex
      wo pw1ex vvex xpkex inex 1cex complex ins3kex ins2kex unex symdifex sikex
      imakex difex eqeltrri ) HBFIZFUAZUBZJUCZHUDZKUOZUBZUEZJUCZHUFZHUGZYNHBUHZ
      LZLZJUCZUIZUFZUJZKUBZUBZUOZUEZUKZUFZUDZUUCUOZUGZUJZUUCUOZUEZUKZUFZYNUDZUU
      CUOZULZUDZKUOZUEZYOEUHZUMZUEMZAUHZDUHZYPUIZUNZDUVBUPZAUAZCUHZMZVGZEUVKUQZ
      CUAJUVNCUVAUVKUUTMZNUVMNZEUVKUPZNUVKUVAMUVNUVOUVQGUHZUVBLZUNZUVRUVKOZUUSM
      ZPZGQZEQZECIZUVPPZEQUVOUVQUWDUWGEUWDUVSUVKOZUUSMZUWHHMZUWHUURMZPUWGUWBUWI
      GUVSUVBURZUVTUWAUWHUUSUVRUVSUVKUSUTVAUWHHUURVBUWJUWFUWKUVPUVBUVKEVCZCVCZV
      DUWKUWHYLMZUWHUUQMZNZPUVDUVLNZPUVPUWHYLUUQVEUWOUVDUWQUWRUVSYKMZYOUVCMZNUW
      OUVDUWSUVSYJMZUWTUVSYJUWLVFUVBYIMZBAIZAEIZPZAQZUXAUWTUXBUVRUVBOZYHMZGKUPZ
      UVRUVELZUNZUXHPZGQZAQZUXFGYHKUVBUWMVHUVRKMZUXHPZGQUXLAQZGQUXIUXNUXPUXQGUX
      PUXKAQZUXHPUXQUXOUXRUXHAUVRVIVJUXKUXHAVKVLRUXHGKVMUXLAGVNSUXMUXEAUXMUXJUV
      BOZYHMZUXSYGMZUXSHMZPUXEUXHUXTGUXJUVEURZUXKUXGUXSYHUVRUXJUVBUSUTVAUXSYGHV
      BUYAUXCUYBUXDUYAUXJYFMZUVEYEMUXCUYAUYDUVBJMUWMUXJUVBYFJUYCUWMVOVPUVEYEVRY
      DUXCFUVEAVCZFABVQVSTUVEUVBUYEUWMVDVTTRTUVBYIVRAYOUVBWASWBUWOUWSUVKJMUWNUV
      SUVKYKJUWLUWNVOVPYOUVCBVCVFSUWPUVLFUHZUVJUNZFCIZPZFQAFIZUVIWCZAWDZUYHPZFQ
      ZUVLUWPUYIUYMFUYGUYLUYHUVIAUYFWEVJRFUVJUVKWIUWPUVRUWHOZUUPMZGUUCUPZUVRUYF
      LZLZLZUNZUYPPZGQZFQZUYNGUUPUUCUWHUVSUVKWFVHUVRUUCMZUYPPZGQVUBFQZGQUYQVUDV
      UFVUGGVUFVUAFQZUYPPVUGVUEVUHUYPFUVRWGZVJVUAUYPFVKVLRUYPGUUCVMVUBFGVNSVUCU
      YMFVUCUYTUWHOZUUPMZVUJUUOMZVUJYNMZPUYMUYPVUKGUYTUYSURZVUAUYOVUJUUPUVRUYTU
      WHUSUTVAVUJUUOYNVBVULUYLVUMUYHVULUYRUVSOUUNMUYFUVBOZUUMMZUYLUYRUVSUVKUUNU
      YFURZUWLUWNWHUYFUVBUUMFVCZUWMWJVUOUULMZNUYKNZAQZNVUPUYLVUSVVAVUSUVRVUOOZU
      UKMZGUUCUPZUVRUXJLZLZUNZVVCPZGQZAQZVVAGUUKUUCVUOUYFUVBWFZVHVUEVVCPZGQVVHA
      QZGQVVDVVJVVLVVMGVVLVVGAQZVVCPVVMVUEVVNVVCAUVRWGVJVVGVVCAVKVLRVVCGUUCVMVV
      HAGVNSVVIVUTAVVIVVFVUOOZUUKMZVUTVVCVVPGVVFVVEURVVGVVBVVOUUKUVRVVFVUOUSUTV
      AVVPVVOYMMZVVOUUJMZWCUYKVVOYMUUJWKVVQUYJVVRUVIVVQUXJUYFOHMUYJUXJUYFUVBHUY
      CVURUWMWHUVEUYFUYEVURVDWLUXSUUIMZDEIZUVHPZDQZVVRUVIVVSUVRUXSOZUUHMZGUUCUP
      ZUVRUVFLZLZLZUNZVWDPZGQZDQZVWBGUUHUUCUXSUXJUVBWFVHVUEVWDPZGQVWJDQZGQVWEVW
      LVWMVWNGVWMVWIDQZVWDPVWNVUEVWOVWDDUVRWGVJVWIVWDDVKVLRVWDGUUCVMVWJDGVNSVWK
      VWADVWKVWHUXSOZUUHMZVWPYNMZVWPUUGMZPVWAVWDVWQGVWHVWGURVWIVWCVWPUUHUVRVWHU
      XSUSUTVAVWPYNUUGVBVWRVVTVWSUVHVWRVWFUVBOHMVVTVWFUXJUVBHUVFURZUYCUWMWMUVFU
      VBDVCZUWMVDWLVWSVWFUXJOUUFMUVFUVEOZUUEMZUVHVWFUXJUVBUUFVWTUYCUWMWHUVFUVEU
      UEVXAUYEWJFAIZUYFUVGMZWCZFWDVXFNZFQZNUVHVXCVXFFWNFUVEUVGWOVXCVXBUUDMZVXHV
      XBUUDUVFUVEWFZVFVXIUVRVXBOZUUAMZGUUCUPZVUAVXLPZGQZFQZVXHGUUAUUCVXBVXJVHVU
      EVXLPZGQVXNFQZGQVXMVXPVXQVXRGVXQVUHVXLPVXRVUEVUHVXLVUIVJVUAVXLFVKVLRVXLGU
      UCVMVXNFGVNSVXOVXGFVXOUYTVXBOZUUAMZVXGVXLVXTGUYTVUNVUAVXKVXSUUAUVRUYTVXBU
      SUTVAVXTVXSYNMZVXSYTMZWCVXFVXSYNYTWKVYAVXDVYBVXEVYAUYRUVEOHMVXDUYRUVFUVEH
      VUQVXAUYEWMUYFUVEVURUYEVDWLVYBUYRUVFOZYSMZVXEUYRUVFUVEYSVUQVXAUYEWHVYCHMZ
      VYCYRMZXIFDIZUYFYPMZXIVYDVXEVYEVYGVYFVYHUYFUVFVURVXAVDUYRYQMZFBWPZVYFVYHV
      YIUYRYPUNVYJUYRYPVUQWQUYFYOVURWSWLVYFVYIUVFJMVXAUYRUVFYQJVUQVXAVOVPUYFYOV
      URWQSWRVYCHYRWTUYFUVFYPWTSWLXAWBWLRTWBXBTVTTRTUXJUYFUVBUUIUYCVURUWMWMUVHD
      UVBVMSXAWBWLRTXCVUOUULVVKVFUYKAWNSTVUMUYRUVKOHMUYHUYRUVSUVKHVUQUWLUWNWMUY
      FUVKVURUWNVDWLVTTRTXBXCVTUVDUVLXDTVTTRUVOUWBGKUPZUWEGUUSKUVKUWNVHUXOUWBPZ
      GQUWCEQZGQVYKUWEVYLVYMGVYLUVTEQZUWBPVYMUXOVYNUWBEUVRVIVJUVTUWBEVKVLRUWBGK
      VMUWCEGVNSWLUVPEUVKVMSXCUVKUUTUWNVFUVMEUVKXESXFUUTUUSKHUURXGYLUUQYKJYJYIY
      HKYGHYFJYEFYOXHXJXKXLXGXMXNYAXJXOXKXLUUPUUCUUOYNUUNUUMUULUUKUUCYMUUJHXGXP
      UUIUUHUUCYNUUGHXGXQZUUFUUEUUDUUAUUCYNYTVYOYSHYRXGYQJYPURXKXLXRXPXSUUBKXNX
      JXJZYAXOXTXPXMVYPYAXQXSVYPYAXOXTXPVYOXMVYPYAYBXMXNYAXOYC $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d b l $.  $d b y $.  $d L b $.  $d L l $.  $d l n $.  $d l x $.  $d L x $.
    $d l y $.  $d L y $.  $d N l $.  $d N y $.  $d X b $.  $d X x $.  $d x y $.
    $d X y $.  $d a b $.  $d a c $.  $d a k $.  $d a l $.  $d a n $.  $d a x $.
    $d a y $.  $d a z $.  $d b c $.  $d b k $.  $d b n $.  $d b x $.  $d b z $.
    $d c k $.  $d c l $.  $d c x $.  $d c y $.  $d c z $.  $d k l $.  $d k n $.
    $d k x $.  $d k y $.  $d k z $.  $d l z $.  $d N n $.  $d n x $.  $d n y $.
    $d x z $.  $d y z $.

    $( Adjoining a new element to every member of ` L ` does not change its
       size.  Theorem X.1.39 of [Rosser] p. 530.  (Contributed by SF,
       29-Jan-2015.) $)
    nnadjoin $p |- ( ( N e. Nn /\ L e. N /\ X e. ~ U. L ) ->
         { x | E. b e. L x = ( b u. { X } ) } e. N ) $=
      ( vl vc vz wcel cuni ccompl cv cun wceq wrex cab wi c0 wn wa vy vn vk csn
      va cnnc sneq uneq2d eqeq2d rexbidv abbidv eleq1d imbi2d wral wal c1c cplc
      nnadjoinlem1 c0c eleq2 el0c ab0 bitri syl6bb raleqbi1dv df-ral imbi1i 0ex
      albii unieq compleqd eleq2d notbid albidv imbi12d ceqsalv 3bitrri syl6bbr
      rexeq weq cbvralv rex0 ax-gen a1i elsuc wel cin rspcv adantr adantl elin
      w3a simp3l unisn compleqi eleq2i anbi2i simpr simpl2r elcompl eleq1a mtod
      vex sylib wb simpl3r elunii expcom con3d mpan9 adj11 syl2anc mtbird eqeq1
      nrexdv elabg ibi nsyl snex elsuci ex syl3an3b embantd 3expia syl5bi com23
      unex syld an32s uniun iunin eqtri syl6eq wo unab df-sn uneq2i rexun uneq1
      imp rexsn abbii 3eqtr4ri syl5ibrcom rexlimdvva ralrimiv finds rspccv syl
      orbi2i com3r vtoclga com3l 3imp ) CUFIZBCIZDBJZKZIZALZELZDUDZMZNZEBOZAPZC
      IZUUSUUOUUPUVGUUOUUPUUTUVAUALZUDZMZNZEBOZAPZCIZQZQUUOUUPUVGQZQUADUURUVHDN
      ZUVOUVPUUOUVQUVNUVGUUPUVQUVMUVFCUVQUVLUVEAUVQUVKUVDEBUVQUVJUVCUUTUVQUVIUV
      BUVAUVHDUGUHUIUJUKULUMUMUUOUUPUVHUURIZUVNUUOUVHFLZJZKZIZUVKEUVSOZAPZCIZQZ
      FCUNZUUPUVRUVNQZQUWBUWDUBLZIZQZFUWIUNZUVHRJZKZIZUVKEROZSZAUOZQZUWBUWDUCLZ
      IZQZFUWTUNZUVHUELZJZKZIZUVKEUXDOZAPZUWTUPUQZIZQZUEUXJUNZUWGUBUCCAUAUBEFUR
      UWIUSNZUWLUWBUWCSZAUOZQZFUSUNZUWSUWKUXQFUWIUSUXNUWJUXPUWBUXNUWJUWDUSIZUXP
      UWIUSUWDUTUXSUWDRNUXPUWDVAUWCAVBVCVDUMVEUXRUVSUSIZUXQQZFUOUVSRNZUXQQZFUOU
      WSUXQFUSVFUYAUYCFUXTUYBUXQUVSVAVGVIUXQUWSFRVHUYBUWBUWOUXPUWRUYBUWAUWNUVHU
      YBUVTUWMUVSRVJVKVLUYBUXOUWQAUYBUWCUWPUVKEUVSRVSVMVNVOVPVQVRUWKUXBFUWIUWTU
      BUCVTUWJUXAUWBUWIUWTUWDUTUMVEUWIUXJNZUWLUWBUWDUXJIZQZFUXJUNUXMUWKUYFFUWIU
      XJUYDUWJUYEUWBUWIUXJUWDUTUMVEUYFUXLFUEUXJFUEVTZUWBUXGUYEUXKUYGUWAUXFUVHUY
      GUVTUXEUVSUXDVJVKVLUYGUWDUXIUXJUYGUWCUXHAUVKEUVSUXDVSUKULVOWAVDUWKUWFFUWI
      CUWICNUWJUWEUWBUWICUWDUTUMVEUWRUWOUWQAUVKEWBWCWDUWTUFIZUXCUXMUYHUXCTZUXLU
      EUXJUXDUXJIUXDGLZHLZUDZMZNZHUYJKZOGUWTOUYIUXLHUXDUWTGWEUYIUYNUXLGHUWTUYOU
      YIGUCWFZUYKUYOIZTZTUXLUYNUVHUYJJZKZUYLJZKZWGZIZUVKEUYJOZAPZUYKUVIMZUDZMZU
      XJIZQZUYHUYRUXCVUKUYHUYRTZUXCVUKVULUXCUVHUYTIZVUFUWTIZQZVUKUYRUXCVUOQZUYH
      UYPVUPUYQUXBVUOFUYJUWTFGVTZUWBVUMUXAVUNVUQUWAUYTUVHVUQUVTUYSUVSUYJVJVKVLV
      UQUWDVUFUWTVUQUWCVUEAUVKEUVSUYJVSUKULVOWHWIWJVULVUDVUOVUJVUDVUMUVHVUBIZTZ
      VULVUOVUJQZUVHUYTVUBWKUYHUYRVUSVUTUYHUYRVUSWLVUMVUNVUJUYHUYRVUMVURWMVUSUY
      HUYRVUMUVHUYKKZIZTZVUNVUJQVURVVBVUMVUBVVAUVHVUAUYKUYKHXCZWNWOWPWQUYHUYRVV
      CWLZVUNVUJVVEVUNTVUNVUGVUFIZSZVUJVVEVUNWRVVEVVGVUNVVEVUGUVJNZEUYJOZVVFVVE
      VVHEUYJVVEEGWFZTZVVHHEVTZVVKVVLHGWFZVVKUYQVVMSUYPUYQUYHVVCVVJWSUYKUYJVVDW
      TXDVVJVVLVVMQVVEUVAUYJUYKXAWJXBVVKUAHWFSZUAEWFZSZVVHVVLXEVVKVVBVVNVUMVVBU
      YHUYRVVJXFUVHUYKUAXCZWTXDVVEUVHUYSIZSZVVJVVPVVEVUMVVSUYHUYRVUMVVBWMUVHUYS
      VVQWTXDVVJVVOVVRVVOVVJVVRUVHUVAUYJXGXHXIXJUYKUVAUVHXKXLXMXOVVFVVIVUEVVIAV
      UGVUFUUTVUGNZUVKVVHEUYJUUTVUGUVJXNUJXPXQXRWIVUFUWTVUGUYKUVIVVDUVHXSYGXTXL
      YAYBYCYDYEYFYHYTYIUYNUXGVUDUXKVUJUYNUXFVUCUVHUYNUXFUYMJZKZVUCUYNUXEVWAUXD
      UYMVJVKVWBUYSVUAMZKVUCVWAVWCUYJUYLYJWOUYSVUAYKYLYMVLUYNUXIVUIUXJUYNUXIUVK
      EUYMOZAPZVUIUYNUXHVWDAUVKEUXDUYMVSUKVUFVVTAPZMVUEVVTYNZAPVUIVWEVUEVVTAYOV
      UHVWFVUFAVUGYPYQVWDVWGAVWDVUEUVKEUYLOZYNVWGUVKEUYJUYLYRVWHVVTVUEUVKVVTEUY
      KVVDEHVTUVJVUGUUTUVAUYKUVIYSUIUUAUUJVCUUBUUCYMULVOUUDUUEYEUUFYAUUGUWFUWHF
      BCUVSBNZUWBUVRUWEUVNVWIUWAUURUVHVWIUVTUUQUVSBVJVKVLVWIUWDUVMCVWIUWCUVLAUV
      KEUVSBVSUKULVOUUHUUIUUKUULUUMUUN $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d A a $.  $d a b $.  $d A b $.  $d a t $.  $d A t $.  $d b t $.  $d M b $.
    $d N b $.  $d X a $.  $d X b $.  $d X t $.

    $( Adjoining an element to a power class.  Theorem X.1.40 of [Rosser]
       p. 530.  (Contributed by SF, 27-Jan-2015.) $)
    nnadjoinpw $p |- ( ( ( M e. Nn /\ N e. Nn ) /\ ( A e. M /\ X e. ~ A ) /\
         ~P A e. N ) -> ~P ( A u. { X } ) e. ( N +c N ) ) $=
      ( va vb vt cnnc wcel wa ccompl cpw cun cv wceq wrex wss wn wral wal simp3
      w3a csn cab cplc pwadjoin cin cuni simp1r simp2r unipw compleqi syl6eleqr
      c0 nnadjoin syl3anc elcomplg ibi syl wb snssg mtbid intnand ralrimivw weq
      disjr eqeq1 rexbidv ralab ralcom4 vex snex unex eleq1 notbid ceqsalv elpw
      unss bitr4i xchbinx ralbii r19.23v albii 3bitr3ri 3bitri eladdci syl5eqel
      wi sylibr ) BHIZCHIZJZABIZDAKZIZJZALZCIZUBZADUCZMLWQENZFNZWTMZOZFWQPZEUDZ
      MZCCUEZADEFUFWSWRXFCIZWQXFUGUNOZXGXHIWLWPWRUAZWSWKWRDWQUHZKZIXIWJWKWPWRUI
      XKWSDWNXMWLWMWOWRUJZXLAAUKULUMEWQCDFUOUPWSXBAQZWTAQZJZRZFWQSZXJWSXRFWQWSX
      PXOWSDAIZXPWSWOXTRZXNWOYADAWNUQURUSWSWOXTXPUTXNDAWNVAUSVBVCVDXJGNZWQIZRZG
      XFSYBXCOZFWQPZYDWHZGTZXSGWQXFVFXEYFYDGEEGVEXDYEFWQXAYBXCVGVHVIYEYDWHZGTZF
      WQSYIFWQSZGTXSYHYIFGWQVJYJXRFWQYJXCWQIZXQYDYLRGXCXBWTFVKDVLVMZYEYCYLYBXCW
      QVNVOVPYLXCAQXQXCAYMVQXBWTAVRVSVTWAYKYGGYEYDFWQWBWCWDWEWIWQXFCCWFUPWG $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d m a b n t x $.
    $( Lemma for ~ nnpweq .  Establish stratification for induction.
       (Contributed by SF, 26-Jan-2015.) $)
    nnpweqlem1 $p |- { m | A. a e. m A. b e. m E. n e. Nn ( ~P a
                                            e. n /\ ~P b e. n ) } e. _V $=
      ( vt vx cssetk cnnc wcel wa wrex csn copk snex bitri exbii df-rex 3bitr4i
      wex 3bitri csik cins2k cins3k csymdif c1c cpw1 cimak ccnvk cin cdif cuni1
      ccompl cv cpw wral cab cvv vex eluni1 wceq wel opkeq1 eleq1d ceqsexv elin
      opksnelsik elssetk opkex elimak elpw131c anbi1i 19.41v bitr4i excom eldif
      wn otkelins2k otkelins3k elpw12 r19.41v rexcom4 elpw121c eqpwrelk anbi12i
      df-clel rexbii notbii rexnal 3bitr2i elpw11c elcompl dfral2 ssetkex sikex
      opkelcnvk abbi2i ins2kex ins3kex symdifex 1cex imakex complex cnvkex inex
      pw1ex nncex difex uni1ex eqeltrri ) GUAZXJUBZGUBZXJUCZUDZUEUFZUFZUGZULZUH
      ZUAZUBZGUCZUIZXPUGZUBZXRUAZUHZUBZYBUIZXPUGZUCZUIZHUFZUFZUGZUCZUJZXPUFZUGZ
      UIZXOUGZULZUKZCUMZUNZBUMZIZDUMZUNZUUFIZJZBHKZDAUMZUOZCUUMUOZAUPUQUUOAUUCU
      UMUUCIUUMLZUUBIZUUOUUMUUBAURZUSUUPUUAIZVPUUNVPZCUUMKZVPUUQUUOUUSUVAEUMZUU
      DLZLZUTZUVBUUPMZYTIZJZESZCSZCAVAZUUTJZCSUUSUVAUVIUVLCUVIUVDUUPMZYTIZUVMXJ
      IZUVMYSIZJUVLUVGUVNEUVDUVCNZUVEUVFUVMYTUVBUVDUUPVBVCVDUVMXJYSVEUVOUVKUVPU
      UTUVOUVCUUMMGIUVKUVCUUMGUUDNZUURVFUUDUUMCURZUURVGOUVPDAVAZUULVPZJZDSZUWAD
      UUMKUUTUVPUVBUVMMZYQIZEYRKZUVBUUHLZLZLZLZUTZUWEJZESZDSZUWCEYQYRUVMUVDUUPV
      HVIUVBYRIZUWEJZESUWLDSZESUWFUWNUWPUWQEUWPUWKDSZUWEJUWQUWOUWRUWEDUVBVJVKUW
      KUWEDVLVMPUWEEYRQUWLDEVNRUWMUWBDUWMUWJUVMMZYQIZUWSXKIZUWSYPIZVPZJUWBUWEUW
      TEUWJUWINUWKUWDUWSYQUVBUWJUVMVBVCVDUWSXKYPVOUXAUVTUXCUWAUXAUWHUUPMXJIUWGU
      UMMGIUVTUWHUVDUUPXJUWGNZUVQUUMNZVQUWGUUMGUUHNZUURVFUUHUUMDURZUURVGTUXBUUL
      UXBUWHUVDMZYOIZUVBUUFLZLZUTZUVBUXHMZYLIZJZESZBHKZUULUWHUVDUUPYOUXDUVQUXEV
      RUXIUXNEYNKZUXQEYLYNUXHUWHUVDVHVIUVBYNIZUXNJZESUXOBHKZESUXRUXQUXTUYAEUXTU
      XLBHKZUXNJUYAUXSUYBUXNBUVBHVSVKUXLUXNBHVTVMPUXNEYNQUXOBEHWAROUXPUUKBHUXPU
      XKUXHMZYLIZUYCYEIZUYCYKIZJUUKUXNUYDEUXKUXJNUXLUXMUYCYLUVBUXKUXHVBVCVDUYCY
      EYKVEUYEUUGUYFUUJUUFUVDMZYDIZFUMZUUEUTZFBVAZJZFSZUYEUUGUYHUVBUYGMZYCIZEXP
      KZUVBUYILZLZLZUTZUYOJZESZFSZUYMEYCXPUYGUUFUVDVHVIUVBXPIZUYOJZESVUAFSZESUY
      PVUCVUEVUFEVUEUYTFSZUYOJVUFVUDVUGUYOFUVBWBZVKUYTUYOFVLVMPUYOEXPQVUAFEVNRV
      UBUYLFVUBUYSUYGMZYCIZVUIYAIZVUIYBIZJUYLUYOVUJEUYSUYRNZUYTUYNVUIYCUVBUYSUY
      GVBVCVDVUIYAYBVEVUKUYJVULUYKVUKUYQUVDMXTIUYIUVCMXSIZUYJUYQUUFUVDXTUYINZBU
      RZUVQVQUYIUVCXSFURZUVRVFVUNUVCUYIMXRIUYJUYIUVCXRVUQUVRWOUUDUYIUVSVUQWCOTV
      ULUYQUUFMGIZUYKUYQUUFUVDGVUOVUPUVQVRUYIUUFVUQVUPVGZOWDTPTUUFUWHUVDYDVUPUX
      DUVQVQFUUEUUFWERUUFUWHMZYJIZUYIUUIUTZUYKJZFSZUYFUUJVVAUVBVUTMZYIIZEXPKZUY
      TVVFJZESZFSZVVDEYIXPVUTUUFUWHVHVIVUDVVFJZESVVHFSZESVVGVVJVVKVVLEVVKVUGVVF
      JVVLVUDVUGVVFVUHVKUYTVVFFVLVMPVVFEXPQVVHFEVNRVVIVVCFVVIUYSVUTMZYIIZVVMYHI
      ZVVMYBIZJVVCVVFVVNEUYSVUMUYTVVEVVMYIUVBUYSVUTVBVCVDVVMYHYBVEVVOVVBVVPUYKV
      VOUYQUWHMYGIUWHUYQMYFIZVVBUYQUUFUWHYGVUOVUPUXDVQUYQUWHYFVUOUXDWOVVQUWGUYI
      MXRIVVBUWGUYIXRUXFVUQVFUUHUYIUXGVUQWCOTVVPVURUYKUYQUUFUWHGVUOVUPUXDVRVUSO
      WDTPTUUFUWHUVDYJVUPUXDUVQVRFUUIUUFWERWDTWFTWGWDTPTUWADUUMQUULDUUMWHWIWDTP
      UUSUVGEXOKZUVJEYTXOUUPUXEVIUVBXOIZUVGJZESUVHCSZESVVRUVJVVTVWAEVVTUVECSZUV
      GJVWAVVSVWBUVGCUVBWJVKUVEUVGCVLVMPUVGEXOQUVHCEVNROUUTCUUMQRWGUUPUUAUXEWKU
      UNCUUMWLROWPUUBUUAYTXOXJYSGWMWNZYQYRXKYPXJVWCWQYOYLYNYEYKYDYCXPYAYBXTXSXR
      XQXNXPXLXMGWMWQXJVWCWRWSXOUEWTXEZXEZXAXBZXCWNWQGWMWRZXDVWEXAWQYJYIXPYHYBY
      GYFXRVWFWNXCWQVWGXDVWEXAWRXDYMHXFXEXEXAWRXGXPVWEXEXAXDVWDXAXBXHXI $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d A a b c d e f x y m n j k $.  $d B a b c d e f x y m n j k $.
    $d M a b c d e f x y m n j k $.
    $( If two sets are the same finite size, then so are their power classes.
       Theorem X.1.41 of [Rosser] p. 530.  (Contributed by SF, 26-Jan-2015.) $)
    nnpweq $p |- ( ( M e. Nn /\ A e. M /\ B e. M ) ->
       E. n e. Nn ( ~P A e. n /\ ~P B e. n ) ) $=
      ( va vb ve vf cnnc wcel cpw cv wa wrex wral c0 c0c wceq pweq eleq1d vm vk
      vc vj vd vx vy csn c1c cplc nnpweqlem1 raleq raleqbi1dv wal df-ral imbi1i
      wi albii 0ex pw0 syl6eq anbi1d rexbidv ralbidv ceqsalv bitri anbi2d anidm
      el0c syl6bb 3bitri weq eleq2 anbi12d cbvrexv 2ralbii 1cnnc snel1c rspcev
      cbvral2v mp2an cun ccompl reeanv 2rexbii elsuc anbi12i wel rspc2v adantl
      3bitr4ri nncaddccl anidms simp1l simp1r simp2ll simp3l simp2rl nnadjoinpw
      w3a 3ad2ant1 syl221anc simp2lr simp3r syl12anc bi2anan9 syl5ibrcom 3expia
      simp2rr rexlimdvv expr an32s rexlimdva imp rexlimdvva syl5bi ralrimivv ex
      syld finds syl5com 3impib ) DIJZADJZBDJZAKZCLZJZBKZYGJZMZCINZYCELZKZYGJZF
      LZKZYGJZMZCINZFDOZEDOZYDYEMYLYTFUALZOZEUUCOZPUHZYGJZCINZYTFUBLZOZEUUIOZUC
      LZKZUDLZJZUELZKZUUNJZMZUDINZUEUUIUIUJZOUCUVAOZUUBUAUBDUACEFUKUUCQRUUEYTFQ
      OZEQOZUUHUUDUVCEUUCQYTFUUCQULUMUVDYMQJZUVCUQZEUNYMPRZUVCUQZEUNZUUHUVCEQUO
      UVFUVHEUVEUVGUVCYMVIUPURUVIUUGYRMZCINZFQOZYPPRZUVKUQZFUNZUUHUVCUVLEPUSUVG
      YTUVKFQUVGYSUVJCIUVGYOUUGYRUVGYNUUFYGUVGYNPKZUUFYMPSUTVATVBVCVDVEUVLYPQJZ
      UVKUQZFUNUVOUVKFQUOUVRUVNFUVQUVMUVKYPVIUPURVFUVKUUHFPUSUVMUVJUUGCIUVMUVJU
      UGUUGMUUGUVMYRUUGUUGUVMYQUUFYGUVMYQUVPUUFYPPSUTVATVGUUGVHVJVCVEVKVKVJUUDU
      UJEUUCUUIYTFUUCUUIULUMUUCUVARUUEYTFUVAOZEUVAOZUVBUUDUVSEUUCUVAYTFUUCUVAUL
      UMUVTUUMYGJZUUQYGJZMZCINZUEUVAOUCUVAOUVBYTUWDUWAYRMZCINEFUCUEUVAUVAEUCVLZ
      YSUWECIUWFYOUWAYRUWFYNUUMYGYMUULSTVBVCFUEVLZUWEUWCCIUWGYRUWBUWAUWGYQUUQYG
      YPUUPSTVGVCVTUWDUUTUCUEUVAUVAUWCUUSCUDICUDVLUWAUUOUWBUURYGUUNUUMVMYGUUNUU
      QVMVNVOVPVFVJUUDUUAEUUCDYTFUUCDULUMUIIJUUFUIJZUUHVQPUSVRUUGUWHCUIIYGUIUUF
      VMVSWAUUIIJZUUKUVBUWIUUKMZUUTUCUEUVAUVAUULUVAJZUUPUVAJZMZUULGLZUFLZUHWBZR
      ZUUPHLZUGLZUHWBZRZMZUGUWRWCZNUFUWNWCZNZHUUINGUUINZUWJUUTUWQUFUXDNZUXAUGUX
      CNZMZHUUINGUUINUXGGUUINZUXHHUUINZMUXFUWMUXGUXHGHUUIUUIWDUXEUXIGHUUIUUIUWQ
      UXAUFUGUXDUXCWDWEUWKUXJUWLUXKUFUULUUIGWFUGUUPUUIHWFWGWKUWJUXEUUTGHUUIUUIU
      WIGUBWHZHUBWHZMZUUKUXEUUTUQZUWIUXNMZUUKUXOUXPUUKUWNKZYGJZUWRKZYGJZMZCINZU
      XOUXNUUKUYBUQUWIYTUYBUXRYRMZCINEFUWNUWRUUIUUIEGVLZYSUYCCIUYDYOUXRYRUYDYNU
      XQYGYMUWNSTVBVCFHVLZUYCUYACIUYEYRUXTUXRUYEYQUXSYGYPUWRSTVGVCWIWJUXPUYAUXO
      CIUWIYGIJZUXNUYAUXOUQUWIUYFMZUXNUYAUXOUYGUXNUYAMZMUXBUUTUFUGUXDUXCUYGUYHU
      WOUXDJZUWSUXCJZMZUXBUUTUQUYGUYHUYKWTZUUTUXBUWPKZUUNJZUWTKZUUNJZMZUDINZUYL
      YGYGUJZIJZUYMUYSJZUYOUYSJZUYRUYGUYHUYTUYKUYFUYTUWIUYFUYTYGYGWLWMWJXAUYLUW
      IUYFUXLUYIUXRVUAUWIUYFUYHUYKWNZUWIUYFUYHUYKWOZUXLUXMUYAUYGUYKWPUYGUYHUYIU
      YJWQUXRUXTUXNUYGUYKWRUWNUUIYGUWOWSXBUYLUWIUYFUXMUYJUXTVUBVUCVUDUXLUXMUYAU
      YGUYKXCUYGUYHUYIUYJXDUXRUXTUXNUYGUYKXIUWRUUIYGUWSWSXBUYQVUAVUBMUDUYSIUUNU
      YSRUYNVUAUYPVUBUUNUYSUYMVMUUNUYSUYOVMVNVSXEUXBUUSUYQUDIUWQUUOUYNUXAUURUYP
      UWQUUMUYMUUNUULUWPSTUXAUUQUYOUUNUUPUWTSTXFVCXGXHXJXKXLXMXSXNXLXOXPXQXRXTY
      TYLYHYRMZCINEFABDDYMARZYSVUECIVUFYOYHYRVUFYNYFYGYMASTVBVCYPBRZVUEYKCIVUGY
      RYJYHVUGYQYIYGYPBSTVGVCWIYAYB $.
      $( [26-Jan-2015] $)
  $}

  ${
    $d A t $.  $d A x $.  $d A y $.  $d B t $.  $d B x $.  $d B y $.  $d t x $.
    $d t y $.  $d t z $.  $d x y $.  $d x z $.  $d y z $.
    srelk.1 $e |- A e. _V $.
    srelk.2 $e |- B e. _V $.
    $( Binary relationship form of the ` _S[fin] ` relationship.  (Contributed
       by SF, 23-Jan-2015.) $)
    srelk $p |- ( << A , B >> e. ( ( Nn X._k Nn ) i^i ( (
 Ins3_k ( ( Ins3_k SI_k ( ( ~P 1c X._k _V ) \ ( ( Ins3_k SSet_k (+) Ins2_k SI_k
 SSet_k ) "_k ~P1 ~P1 ~P1 1c ) ) i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c )
    i^i Ins2_k ( ( Ins3_k SI_k ~ ( ( Ins3_k SSet_k (+) Ins2_k SI_k SSet_k ) "_k
    ~P1 ~P1 1c ) i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) ) "_k ~P1 ~P1
                                                             ~P1 1c ) ) <->
        _S[fin] ( A , B ) ) $=
      ( vx vt vy vz copk cnnc wcel cssetk wa wex wceq exbii 3bitr4i snex 3bitri
      csn cxpk c1c cpw cvv cins3k csik cins2k csymdif cpw1 cimak cdif ccompl cv
      cin wsfin opkelxpk wrex opkex elimak elpw131c anbi1i 19.41v bitr4i df-rex
      excom opkeq1 eleq1d ceqsexv elin elpw121c otkelins3k opksnelsik eqpw1relk
      w3a vex otkelins2k elssetk bitri anbi12i df-clel wel elsymdif opkelssetkg
      wss wb wal wn mp2an bibi12i notbii elcompl alex df-pw eqeq2i abeq2 df-3an
      cab df-sfin ) ABIZJJUAZKZWSUBUCUDUALUEZLUFZUGZUHZUBUIUIZUIZUJUKZUFZUEZLUG
      ZUNZXFUJZUEZXEXFUJZULZUFZUEZXKUNZXFUJZUGZUNZXGUJZKZMZAJKZBJKZEUMZUIZAKZYH
      UCZBKZMZENZVNZWSWTYCUNKABUOYEYFYGMZYNMYOXAYPYDYNABJJCDUPYDFUMZWSIZYBKZFXG
      UQZYQYHTZTZTZTZOZYSMZFNZENZYNFYBXGWSABURUSYQXGKZYSMZFNUUFENZFNYTUUHUUJUUK
      FUUJUUEENZYSMUUKUUIUULYSEYQUTVAUUEYSEVBVCPYSFXGVDUUFEFVEQUUGYMEUUGUUDWSIZ
      YBKZUUMXNKZUUMYAKZMYMYSUUNFUUDUUCRUUEYRUUMYBYQUUDWSVFVGVHUUMXNYAVIUUOYJUU
      PYLUUBAIZXMKZGUMZYIOZUUSAKZMZGNZUUOYJUURYQUUQIZXLKZFXFUQZYQUUSTZTZTZOZUVE
      MZFNZGNZUVCFXLXFUUQUUBAURUSYQXFKZUVEMZFNUVKGNZFNUVFUVMUVOUVPFUVOUVJGNZUVE
      MUVPUVNUVQUVEGYQVJZVAUVJUVEGVBVCPUVEFXFVDUVKGFVEQUVLUVBGUVLUVIUUQIZXLKZUV
      SXJKZUVSXKKZMUVBUVEUVTFUVIUVHRZUVJUVDUVSXLYQUVIUUQVFVGVHUVSXJXKVIUWAUUTUW
      BUVAUWAUVGUUBIZXIKUUSUUAIZXHKUUTUVGUUBAXIUUSRZUUARZCVKUUSUUAXHGVOZYHRZVLU
      USYHUWHEVOZVMSUWBUVGAILKUVAUVGUUBALUWFUWGCVPUUSAUWHCVQVRVSSPSUUBABXMUWGCD
      VKGYIAVTQUUBBIZXTKZUUSYKOZUUSBKZMZGNZUUPYLUWLYQUWKIZXSKZFXFUQZUVJUWRMZFNZ
      GNZUWPFXSXFUWKUUBBURUSUVNUWRMZFNUWTGNZFNUWSUXBUXCUXDFUXCUVQUWRMUXDUVNUVQU
      WRUVRVAUVJUWRGVBVCPUWRFXFVDUWTGFVEQUXAUWOGUXAUVIUWKIZXSKZUXEXRKZUXEXKKZMU
      WOUWRUXFFUVIUWCUVJUWQUXEXSYQUVIUWKVFVGVHUXEXRXKVIUXGUWMUXHUWNUXGUWDXQKUWE
      XPKZUWMUVGUUBBXQUWFUWGDVKUUSUUAXPUWHUWIVLUXIHGWAZHUMZYHWDZWEZHWFZUWMUWEXO
      KZWGUXMWGZHNZWGUXIUXNUXOUXQUXOYQUWEIZXEKZFXFUQZYQUXKTZTZTZOZUXSMZFNZHNZUX
      QFXEXFUWEUUSUUAURZUSUVNUXSMZFNUYEHNZFNUXTUYGUYIUYJFUYIUYDHNZUXSMUYJUVNUYK
      UXSHYQVJVAUYDUXSHVBVCPUXSFXFVDUYEHFVEQUYFUXPHUYFUYCUWEIZXEKZUYLXBKZUYLXDK
      ZWEZWGUXPUXSUYMFUYCUYBRUYDUXRUYLXEYQUYCUWEVFVGVHUYLXBXDWBUYPUXMUYNUXJUYOU
      XLUYNUYAUUSILKUXJUYAUUSUUALUXKRZUWHUWIVKUXKUUSHVOZUWHVQVRUYOUYAUUAIXCKUXK
      YHILKZUXLUYAUUSUUAXCUYQUWHUWIVPUXKYHLUYRUWJVLUXKUDKYHUDKUYSUXLWEUYRUWJUXK
      YHUDUDWCWHSWIWJSPSWJUWEXOUYHWKUXMHWLQUWMUUSUXLHWQZOUXNYKUYTUUSHYHWMWNUXLH
      UUSWOVRVCSUXHUVGBILKUWNUVGUUBBLUWFUWGDVPUUSBUWHDVQVRVSSPSUUBABXTUWGCDVPGY
      KBVTQVSSPSVSYFYGYNWPVCWSWTYCVIABEWRQ $.
      $( [23-Jan-2015] $)
  $}

  $( The expression at the core of ~ srelk exists.  (Contributed by SF,
     30-Jan-2015.) $)
  srelkex $p |- ( ( Nn X._k Nn ) i^i ( (
 Ins3_k ( ( Ins3_k SI_k ( ( ~P 1c X._k _V ) \ ( ( Ins3_k SSet_k (+) Ins2_k SI_k
 SSet_k ) "_k ~P1 ~P1 ~P1 1c ) ) i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c )
    i^i Ins2_k ( ( Ins3_k SI_k ~ ( ( Ins3_k SSet_k (+) Ins2_k SI_k SSet_k ) "_k
    ~P1 ~P1 1c ) i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) ) "_k ~P1 ~P1
                                                       ~P1 1c ) ) e. _V $=
    ( cnnc cxpk c1c cvv cssetk cins3k csik cins2k cimak cin nncex xpkex ssetkex
    cpw1 ins3kex sikex ins2kex pw1ex imakex inex cpw cdif ccompl 1cex pwex vvex
    csymdif symdifex difex complex ) AABCUAZDBZEFZEGZHZUGZCNZNZNZIZUBZGZFZEHZJZ
    URIZFZUPURIZUCZGZFZVDJZURIZHZJZUSIAAKKLVOUSVGVNVFVEURVCVDVBVAULUTUKDCUDUEUF
    LUPUSUMUOEMOUNEMPQUHZURUQCUDRRZRZSUIPOEMQZTVQSOVMVLURVKVDVJVIVHUPURVPVQSUJP
    OVSTVQSQTVRST $.
    $( [30-Jan-2015] $)

  ${
    $d A y $.  $d B y $.  $d C y $.
    $( Equality theorem for the finite S relationship.  (Contributed by SF,
       27-Jan-2015.) $)
    sfineq1 $p |- ( A = B -> ( _S[fin] ( A , C ) <-> _S[fin] ( B , C ) ) ) $=
      ( vy wceq cnnc wcel cv cpw1 cpw wex w3a wsfin eleq1 eleq2 anbi1d 3anbi13d
      wa exbidv df-sfin 3bitr4g ) ABEZAFGZCFGZDHZIZAGZUEJCGZRZDKZLBFGZUDUFBGZUH
      RZDKZLACMBCMUBUCUKUJUNUDABFNUBUIUMDUBUGULUHABUFOPSQACDTBCDTUA $.
      $( [27-Jan-2015] $)

    $( Equality theorem for the finite S relationship.  (Contributed by SF,
       27-Jan-2015.) $)
    sfineq2 $p |- ( A = B -> ( _S[fin] ( C , A ) <-> _S[fin] ( C , B ) ) ) $=
      ( vy wceq cnnc wcel cv cpw1 cpw wex w3a wsfin eleq1 eleq2 anbi2d 3anbi23d
      wa exbidv df-sfin 3bitr4g ) ABEZCFGZAFGZDHZICGZUEJZAGZRZDKZLUCBFGZUFUGBGZ
      RZDKZLCAMCBMUBUDUKUJUNUCABFNUBUIUMDUBUHULUFABUGOPSQCADTCBDTUA $.
      $( [27-Jan-2015] $)
  $}

  $( Zero and one satisfy ` _S[fin] ` .  Theorem X.1.42 of [Rosser] p. 530.
     (Contributed by SF, 30-Jan-2015.) $)
  sfin01 $p |- _S[fin] ( 0c , 1c ) $=
    ( va c0c c1c wsfin cnnc wcel cv cpw1 cpw wex peano1 1cnnc wceq csn pw10 0ex
    wa c0 snel1c el0c pw1eq eqeq1d syl5bb pweq pw0 syl6eq eleq1d anbi12d spcev
    mp2an df-sfin mpbir3an ) BCDBEFCEFAGZHZBFZUMIZCFZQZAJZKLRHZRMZRNZCFZUSORPSU
    RVAVCQARPUMRMZUOVAUQVCUOUNRMVDVAUNTVDUNUTRUMRUAUBUCVDUPVBCVDUPRIVBUMRUDUEUF
    UGUHUIUJBCAUKUL $.
    $( [30-Jan-2015] $)

  ${
    $d M x y n k $.  $d N x y n k $.  $d P x y n k $.
    $( Equality law for the finite S operator.  Theorem X.1.43 of [Rosser]
       p. 530.  (Contributed by SF, 27-Jan-2015.) $)
    sfin112 $p |- ( ( _S[fin] ( M , N ) /\ _S[fin] ( M , P ) ) -> N = P ) $=
      ( vx vy vn vk wsfin wa cnnc wcel cpw1 cpw wex w3a wceq df-sfin wel wrex
      cv 3an6 eeanv 3anbi3i anbi12i 3bitr4ri simpllr simprll simprrl ncfinlower
      syl3anc nnpweq 3expb simp1rl simp3l simp2lr simp3rl nnceleq simp1rr 3expa
      syl22anc simp2rr simp3rr eqtr4d expr rexlimdva syl5 exp3a rexlimdv mpd ex
      exlimdvv 3impia sylbi ) BCHZBAHZIZBJKZVQIZCJKZAJKZIZDTZLBKZWBMZCKZIZETZLB
      KZWGMZAKZIZIZENDNZOZCAPZVRWAWFDNZWKENZIZOVQVSWPOZVQVTWQOZIWNVPVQVQVSVTWPW
      QUAWMWRVRWAWFWKDEUBUCVNWSVOWTBCDQBAEQUDUEVRWAWMWOVRWAIZWLWODEXAWLWOXAWLIZ
      DFRZEFRZIZFJSZWOXBVQWCWHXFVQVQWAWLUFXAWCWEWKUGXAWFWHWJUHWBWGFBUIUJXBXEWOF
      JXBFTZJKZXEWOXHXEIWDGTZKZWIXIKZIZGJSZXBWOXHXCXDXMWBWGGXGUKULXBXLWOGJXBXIJ
      KZXLWOXAWLXNXLIZWOXAWLXOOZCXIAXPVSXNWEXJCXIPVSVTVRWLXOUMXAWLXNXLUNZWCWEWK
      XAXOUOXJXKXNXAWLUPWDCXIUQUTXPVTXNWJXKAXIPVSVTVRWLXOURXQWHWJWFXAXOVAXJXKXN
      XAWLVBWIAXIUQUTVCUSVDVEVFVGVHVIVJVKVLVM $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d A b $.  $d a n $.  $d A x $.  $d a y $.  $d A y $.  $d a z $.  $d A z $.
    $d b n $.  $d b x $.  $d b y $.  $d b z $.  $d k n $.  $d k y $.  $d k z $.
    $d M a $.  $d M b $.  $d M k $.  $d M n $.  $d M x $.  $d M y $.  $d M z $.
    $d n x $.  $d n y $.  $d n z $.  $d x y $.  $d x z $.  $d y z $.
    $( If the unit power set of a set is in the successor of a finite cardinal,
       then there is a natural that is smaller than the finite cardinal and
       whose double is smaller than the successor of the cardinal.  Theorem
       X.1.44 of [Rosser] p. 531.  (Contributed by SF, 30-Jan-2015.) $)
    sfindbl $p |- ( ( M e. Nn /\ ~P1 A e. ( M +c 1c ) ) ->
         E. n e. Nn ( _S[fin] ( M , n ) /\
            _S[fin] ( ( M +c 1c ) , ( n +c n ) ) ) ) $=
      ( vb vx vy vz vk va cpw1 wcel cnnc cv cun wceq wrex wa wex vex eleq1d c1c
      cplc csn ccompl wsfin elsuc w3a pw1eqadj wi wel wn wb eleq1 adantr eleq12
      compleq snex elcompl snelpw1 xchbinx syl6bb sylan2 ancoms anbi2d 3anidm23
      anbi12d ncfinlower adantrr cpw simp3l simp3rr syl3anc simpl2l simprrr weq
      nnpweq simpl1 simprl pw1eq pweq spcev syl2anc syl3anbrc peano2 nncaddccl
      df-sfin anidms pw1un pw1sn uneq2i simpl2r sylnibr elsuci syl5eqel simpl3l
      syl eqtri nnadjoinpw syl221anc unex jca expr reximdva mpd 3expa rexlimdva
      sylibr syl6bi 3adant1 com12 exlimdvv syl5bi rexlimdvva imp sylan2b ) AJZC
      UAUBZKCLKZXPDMZEMZUCNOZEXSUDZPDCPZCBMZUEZXQYDYDUBZUEZQZBLPZEXPCDUFXRYCYIX
      RYAYIDECYBYAAFMZGMZUCZNZOZXSYJJZOZXTYLOZUGZGRFRXRXSCKZXTYBKZQZQZYIFGXSXTA
      DSESUHUUBYRYIFGYRUUBYIYPYQUUBYIUIYNYPYQQZUUBXRYOCKZGFUJZUKZQZQZYIUUCUUAUU
      GXRUUCYSUUDYTUUFYPYSUUDULYQXSYOCUMUNYQYPYTUUFULZYPYQYBYOUDZOZUUIXSYOUPYQU
      UKQYTYLUUJKZUUFXTYLYBUUJUOUULYLYOKZUUEYLYOYKUQZURYKYJUSZUTVAVBVCVFVDUUHFH
      UJZUUPQZHLPZYIXRUUDUURUUFXRUUDUURYJYJHCVGVEVHUUHUUQYIHLUUHHMZLKZUUQYIXRUU
      GUUTUUQQZYIXRUUGUVAUGZYJVIZYDKZUVDQZBLPZYIUVBUUTUUPUUPUVFXRUUGUUTUUQVJUUP
      UUPUUTXRUUGVKZUVGYJYJBUUSVPVLUVBUVEYHBLUVBYDLKZUVEYHUVBUVHUVEQZQZYEYGUVJX
      RUVHIMZJZCKZUVKVIZYDKZQZIRZYEXRUUGUVAUVIVQZUVBUVHUVEVRZUVJUUDUVDUVQUUDUUF
      XRUVAUVIVMZUVBUVHUVDUVDVNZUVPUUDUVDQIYJFSZIFVOZUVMUUDUVOUVDUWCUVLYOCUVKYJ
      VSTUWCUVNUVCYDUVKYJVTTVFWAWBCYDIWFWCUVJXQLKZYFLKZUVLXQKZUVNYFKZQZIRZYGUVJ
      XRUWDUVRCWDWPUVJUVHUWEUVSUVHUWEYDYDWEWGWPUVJYMJZXQKZYMVIZYFKZUWIUVJUWJYOY
      LUCZNZXQUWJYOYLJZNUWOYJYLWHUWPUWNYOYKGSZWIWJWQUVJUUDUUMUKUWOXQKUVTUVJUUEU
      UMUUDUUFXRUVAUVIWKZUUOWLYOCYLUUNWMWBWNUVJUUTUVHUUPYKYJUDKZUVDUWMUUTUUQXRU
      UGUVIWOUVSUVBUUPUVIUVGUNUVJUUFUWSUWRYKYJUWQURXGUWAYJUUSYDYKWRWSUWHUWKUWMQ
      IYMYJYLUWBUUNWTUVKYMOZUWFUWKUWGUWMUWTUVLUWJXQUVKYMVSTUWTUVNUWLYFUVKYMVTTV
      FWAWBXQYFIWFWCXAXBXCXDXEXBXFXDXHXIXJXKXLXMXNXO $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d m n t x y $.
    $( Lemma for ~ sfintfin .  Set up induction stratification.  (Contributed
       by SF, 31-Jan-2015.) $)
    sfintfinlem1 $p |- { m | A. n ( _S[fin] ( m , n ) ->
                  _S[fin] ( _T[fin] m , _T[fin] n ) ) } e. _V $=
      ( vt vy vx cxpk c1c cins3k cins2k cimak cin csn cv wcel wn wex copk exbii
      wa 3bitri cnnc cpw cvv cssetk csik csymdif cpw1 cdif ccompl c0 ccnvk cidk
      cun cuni1 wsfin ctfin wi wal cab eluni1 wrex wceq snex elimak el1c anbi1i
      vex 19.41v bitr4i df-rex excom 3bitr4i opkeq1 eleq1d opkelcnvk opksnelsik
      ceqsexv eldif srelk elpw11c elin otkelins2k eqtfinrelk otkelins3k anbi12i
      bitri opkex tfinex sfineq1 sfineq2 notbii annim elcompl alex abbi2i sikex
      srelkex tfinrelkex cnvkex ins2kex ins3kex inex pw1ex imakex difex complex
      1cex uni1ex eqeltrri ) UAUAFGUBUCFUDHUDUEIZUFZGUGZUGZUGZJUHUEHUDIZKXMJHZX
      KXMJUIUEHXOKXMJIKXNJKZUEZUJLZLZXSFXOUDUKHUAUCFXJXPKXNJKIULHUFXLJIUHXLJHUF
      XMJUIXTUCFUHUMZUKZIZYCXQHZKZXLJZHZKZXLJZUHZUKZGJZUIZUNZAMZBMZUOZYOUPZYPUP
      ZUOZUQZBURZAUSUCUUBAYNYOYNNYOLZYMNZUUBYOYMAVGZUTUUCYLNZOUUAOZBPZOUUDUUBUU
      FUUHUUFCMZUUCQZYKNZCGVAZUUIYPLZVBZUUKSZCPZBPZUUHCYKGUUCYOVCZVDUUIGNZUUKSZ
      CPUUOBPZCPUULUUQUUTUVACUUTUUNBPZUUKSUVAUUSUVBUUKBUUIVEVFUUNUUKBVHVIRUUKCG
      VJUUOBCVKVLUUPUUGBUUPUUMUUCQZYKNZUUCUUMQZYJNZUUGUUKUVDCUUMYPVCZUUNUUJUVCY
      KUUIUUMUUCVMVNVQUUMUUCYJUVGUURVOUVFUVEXRNZUVEYINZOZSYQYTOZSUUGUVEXRYIVRUV
      HYQUVJUVKUVHYOYPQXQNYQYOYPXQUUEBVGZVPYOYPUUEUVLVSWFUVIYTUVIUUIDMZLZLZVBZU
      UIUVEQZYHNZSZCPZDPZUVMYSVBZYRUVMUOZSZDPYTUVIUVRCXLVAUUIXLNZUVRSZCPZUWACYH
      XLUVEUUCUUMWGVDUVRCXLVJUWGUVSDPZCPUWAUWFUWHCUWFUVPDPZUVRSUWHUWEUWIUVRDUUI
      VTVFUVPUVRDVHVIRUVSDCVKVITUVTUWDDUVTUVOUVEQZYHNZUWJYCNZUWJYGNZSUWDUVRUWKC
      UVOUVNVCUVPUVQUWJYHUUIUVOUVEVMVNVQUWJYCYGWAUWLUWBUWMUWCUWLUVMUUMQYBNUUMUV
      MQYANUWBUVMUUCUUMYBDVGZUURUVGWBUVMUUMYAUWNUVGVOYPUVMUVLUWNWCTUWMUVMUUCQZY
      FNZEMZYRVBZUWQUVMUOZSZEPZUWCUVMUUCUUMYFUWNUURUVGWDUWPUUIUWOQZYENZCXLVAZUU
      IUWQLZLZVBZUXCSZCPZEPZUXACYEXLUWOUVMUUCWGVDUWEUXCSZCPUXHEPZCPUXDUXJUXKUXL
      CUXKUXGEPZUXCSUXLUWEUXMUXCEUUIVTVFUXGUXCEVHVIRUXCCXLVJUXHECVKVLUXIUWTEUXI
      UXFUWOQZYENZUXNYCNZUXNYDNZSUWTUXCUXOCUXFUXEVCUXGUXBUXNYEUUIUXFUWOVMVNVQUX
      NYCYDWAUXPUWRUXQUWSUXPUWQUUCQYBNUUCUWQQYANUWRUWQUVMUUCYBEVGZUWNUURWBUWQUU
      CYAUXRUURVOYOUWQUUEUXRWCTUXQUWQUVMQXQNUWSUWQUVMUUCXQUXRUWNUURWDUWQUVMUXRU
      WNVSWFWETRTUWSUWCEYRYOWHUWQYRUVMWIVQTWETRUWCYTDYSYPWHUVMYSYRWJVQTWKWEYQYT
      WLTTRTWKUUCYLUURWMUUABWNVLWFWOYMYLYKGYJXRYIXQWQWPYHXLYCYGYBYAWRWSWTZYFYEX
      LYCYDUXSXQWQXAXBGXGXCZXDXAXBUXTXDXEWSXGXDXFXHXI $.
      $( [31-Jan-2015] $)
  $}

  ${
    $d M a b k m n p q $.  $d N a k n $.
    $( If two numbers obey ` _S[fin] ` , then do their T raisings.  Theorem
       X.1.45 of [Rosser] p. 532.  (Contributed by SF, 30-Jan-2015.) $)
    sfintfin $p |- ( _S[fin] ( M , N ) ->
              _S[fin] ( _T[fin] M , _T[fin] N ) ) $=
      ( va vn vk cnnc wcel wa wsfin ctfin wi c0c c1c wceq sfineq1 wb tfineq syl
      imbi12d sfineq2 vm vp vq cv cpw wex w3a df-sfin 3simpa sylbi sfintfinlem1
      cpw1 wal cplc tfin0c syl6eq albidv weq cbvalv syl6bb sfin01 sfin112 mpan2
      tfin1c mpbiri simp3bi 3ad2ant3 wrex sfindbl 3ad2antl1 spv simprrl simplrl
      ax-gen adantl simprrr ad2antlr syl2anc simp2 simp1bi simp1l simp3 tfinpw1
      peano2 c0 wne ne0i tfinsuc eleqtrd simp3l addceq12 anidms biimprcd 3expia
      mpd rexlimdvw 3adant3 adantrd exlimdv simpll adantr exlimiv 3syl sylan9bb
      tfindi syl3anc mpbird ex embantd exp32 com34 com23 exp3a rexlimdv alrimiv
      syl5 3imp finds spcgv mpan9 mpcom ) AFGZBFGZHZABIZAJZBJZIZYEYBYCCUDZULZA
      GYIUEZBGHCUFZUGYDABCUHYBYCYLUIUJYBADUDZIZYFYMJZIZKZDUMZYCYEYHKZEUDZYMIZYT
      JZYOIZKZDUMZLYMIZLYOIZKZDUMUAUDZUBUDZIZUUIJZUUJJZIZKZUBUMZUUIMUNZYMIZUUQJ
      ZYOIZKZDUMZYREUAAEDUKYTLNZUUDUUHDUVCUUAUUFUUCUUGYTLYMOUVCUUBLNUUCUUGPUVCU
      UBLJLYTLQUOUPUUBLYOORSUQEUAURZUUEUUIYMIZUULYOIZKZDUMUUPUVDUUDUVGDUVDUUAUV
      EUUCUVFYTUUIYMOUVDUUBUULNUUCUVFPYTUUIQUUBUULYOORSUQUVGUUODUBDUBURZUVEUUKU
      VFUUNYMUUJUUITUVHYOUUMNUVFUUNPYMUUJQYOUUMUULTRSUSUTYTUUQNZUUDUVADUVIUUAUU
      RUUCUUTYTUUQYMOUVIUUBUUSNUUCUUTPYTUUQQUUBUUSYOORSUQYTANZUUDYQDUVJUUAYNUUC
      YPYTAYMOUVJUUBYFNUUCYPPYTAQUUBYFYOORSUQUUHDUUFYMMNZUUGUUFLMIZUVKVAMLYMVBV
      CUVKUUGUVLVAUVKYOMNUUGUVLPUVKYOMJMYMMQVDUPYOMLTRVERVNUUIFGZUUPUVBUVMUUPHU
      VADUVMUUPUURUUTUVMUUPUURUGZYJUUQGZYKYMGZHZCUFZUUTUURUVMUVRUUPUURUUQFGZYMF
      GUVRUUQYMCUHVFVGUVNUVQUUTCUVNUVOUUTUVPUVNUVOUUTUVNUVOHUUIUCUDZIZUUQUVTUVT
      UNZIZHZUCFVHZUUTUVMUUPUVOUWEUURYIUCUUIVIVJUVNUWEUUTKUVOUVNUWDUUTUCFUVNUVT
      FGZUWDUUTUVMUUPUURUWFUWDHZUUTKZUVMUURUUPUWHUVMUURUWGUUPUUTUVMUURUWGUUPUUT
      KUUPUWAUULUVTJZIZKZUVMUURUWGHZHZUUTUUOUWKUBUCUBUCURZUUKUWAUUNUWJUUJUVTUUI
      TUWNUUMUWINUUNUWJPUUJUVTQUUMUWIUULTRSVKUWMUWAUWJUUTUWLUWAUVMUURUWFUWAUWCV
      LVOUWMUWJUUTUWMUWJHZYMUWBNZUUTUWOUURUWCUWPUVMUURUWGUWJVMUWLUWCUVMUWJUURUW
      FUWAUWCVPVQZUWBUUQYMVBVRUWOUUSUWBJZIZUWPUUTKUWOUWSUULMUNZUWIUWIUNZIZUWOUV
      OYKUWBGZHZCUFZUXBUWOUWCUXEUWQUWCUVSUWBFGUXEUUQUWBCUHVFZRUWOUXDUXBCUWOUVOU
      XBUXCUWMUWJUVOUXBUWMUWJUVOUGZUULYTIZUWTYTYTUNZIZHZEFVHZUXBUXGUULFGZYJULZU
      WTGUXLUXGUWJUXMUWMUWJUVOVSUWJUXMUWIFGYJUULGYKUWIGHCUFUULUWICUHVTRUXGUXNUU
      SUWTUXGUVSUVOUXNUUSGUXGUVMUVSUVMUWLUWJUVOWAZUUIWDRUWMUWJUVOWBYJUUQWCVRUXG
      UVMUUQWEWFZUUSUWTNZUXOUVOUWMUXPUWJUUQYJWGZVGUUIWHZVRWIYJEUULVIVRUWMUWJUXL
      UXBKUVOUWOUXKUXBEFUWMUWJUXKUXBUWMUWJUXKUGZUWIYTNZUXBUXTUWJUXHUYAUWMUWJUXK
      VSUWMUWJUXHUXJWJYTUULUWIVBVRUXKUWMUYAUXBKZUWJUXJUYBUXHUYAUXBUXJUYAUXAUXIN
      ZUXBUXJPUYAUYCUWIUWIYTYTWKWLUXAUXIUWTTRWMVOVGWOWNWPWQWOWNWRWSWOUWOUXQUWRU
      XANZUWSUXBPUWOUVMUXPUXQUVMUWLUWJWTUWOUWCUXEUXPUWQUXFUXDUXPCUVOUXPUXCUXRXA
      XBXCUXSVRUWOUWFUWFUWBWEWFZUYDUWMUWFUWJUVMUURUWFUWDVLXAZUYFUWOUWCUXEUYEUWQ
      UXFUXDUYECUXCUYEUVOUWBYKWGVOXBXCUVTUVTXEXFUXQUWSUWTUWRIUYDUXBUUSUWTUWROUW
      RUXAUWTTXDVRXGUWPUUTUWSUWPYOUWRNUUTUWSPYMUWBQYOUWRUUSTRWMRWOXHXIXPXJXKXLX
      QXMXNXAWOXHWRWSWOWNXOXHXRYQYSDBFYMBNZYNYEYPYHYMBATUYGYOYGNYPYHPYMBQYOYGYF
      TRSXSXTYA $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d n y a x $.  $d a t $.  $d a w $.  $d a z $.  $d n t $.  $d n z $.
    $d t w $.  $d t x $.  $d t y $.  $d t z $.  $d w x $.  $d w y $.  $d w z $.
    $d x z $.  $d y z $.

    $( Lemma for ~ tfinnn .  Establish stratification.  (Contributed by SF,
       30-Jan-2015.) $)
    tfinnnlem1 $p |- { n | A. y e. n ( y C_ Nn -> { a | E. x e.
                          y a = _T[fin] x } e. _T[fin] n ) } e. _V $=
      ( vt vz vw cssetk csn cimak wcel wn copk wa wex snex bitri 3bitri 3bitr4i
      exbii csik cnnc cpw cpw1 cvv cxpk c0 cins2k ccnvk cins3k c1c csymdif cdif
      cin cidk ccompl cun cuni1 cv wss ctfin wceq wrex cab wi vex eluni1 opkeq1
      wral wel eleq1d ceqsexv elin opksnelsik elssetk opkelxpk mpbiran2 snelpw1
      eldif otkelins2k opkelcnvk eqtfinrelk opkex elimak elpw121c anbi1i 19.41v
      bitr4i df-rex excom wb elsymdif otkelins3k anbi12i bibi12i notbii elcompl
      elpw abeq2 df-clel elpw11c tfinex clel3 annim dfral2 abbi2i ssetkex sikex
      wal alex nncex pwex pw1ex vvex xpkex tfinrelkex ins2kex ins3kex inex 1cex
      cnvkex imakex symdifex complex difex uni1ex eqeltrri ) HUAZUBUCZUDZUEUFZU
      AZUGIZIZYMUFHUHZHUIUJUBUEUFYHUHZUKUCUEUFHUJZYPULUKUDZUDZUDZJUMUAUJYOUNYSJ
      UJUNYTJUNUHUOUJULYRJUHUMYRJUJULYSJUPYNUEUFUMUQZUIZUHZYQYOUUAUJZUNZYSJZUAZ
      UHZULZYSJZUPZUAZUHZYQUNZYSJZUJZUNZYRJZUMZUNZYRJZUPZURZBUSZUBUTZDUSZAUSZVA
      VBZAUVDVCZDVDZCUSZVAZKZVEZBUVKVIZCVDUEUVOCUVCUVKUVCKUVKIZUVBKZUVOUVKUVBCV
      FZVGUVPUVAKZLUVNLZBUVKVCZLUVQUVOUVSUWAEUSZUVDIZIZVBZUWBUVPMZUUTKZNZEOZBOZ
      BCVJZUVTNZBOUVSUWAUWIUWLBUWIUWDUVPMZUUTKZUWMYHKZUWMUUSKZNUWLUWGUWNEUWDUWC
      PZUWEUWFUWMUUTUWBUWDUVPVHVKVLUWMYHUUSVMUWOUWKUWPUVTUWOUWCUVKMZHKUWKUWCUVK
      HUVDPZUVRVNUVDUVKBVFZUVRVOQUWPUWMYLKZUWMUURKZLZNUVEUVMLZNUVTUWMYLUURVSUXA
      UVEUXCUXDUXAUWRYKKZUVDYIKZUVEUWCUVKYKUWSUVRVNUXEUWCYJKZUXFUXEUXGUVKUEKUVR
      UWCUVKYJUEUWSUVRVPVQUVDYIVRQUVDUBUWTWRRUXBUVMUWBFUSZIZIZVBZUWBUWMMZUUQKZN
      ZEOZFOZUXHUVLVBZUVJUXHKZNZFOUXBUVMUXOUXSFUXOUXJUWMMZUUQKZUXTUUCKZUXTUUPKZ
      NUXSUXMUYAEUXJUXIPUXKUXLUXTUUQUWBUXJUWMVHVKVLUXTUUCUUPVMUYBUXQUYCUXRUYBUX
      HUVPMUUBKUVPUXHMUUAKUXQUXHUWDUVPUUBFVFZUWQUVKPZVTUXHUVPUUAUYDUYEWAUVKUXHU
      VRUYDWBRUXHUWDMZUUOKZGUSZUVJVBZGFVJZNZGOZUYCUXRUYGUWBUYFMZUUNKZEYSVCZUWBU
      YHIZIZIZVBZUYNNZEOZGOZUYLEUUNYSUYFUXHUWDWCWDUWBYSKZUYNNZEOUYTGOZEOUYOVUBV
      UDVUEEVUDUYSGOZUYNNVUEVUCVUFUYNGUWBWEWFUYSUYNGWGWHTUYNEYSWIUYTGEWJSVUAUYK
      GVUAUYRUYFMZUUNKZVUGUUMKZVUGYQKZNUYKUYNVUHEUYRUYQPUYSUYMVUGUUNUWBUYRUYFVH
      VKVLVUGUUMYQVMVUIUYIVUJUYJVUIUYPUWDMUULKUYHUWCMZUUKKZUYIUYPUXHUWDUULUYHPZ
      UYDUWQVTUYHUWCUUKGVFZUWSVNVUKUUJKZLDGVJZUVIWKZLZDOZLZVULUYIVUOVUSVUOUWBVU
      KMZUUIKZEYSVCZUWBUVFIZIZIZVBZVVBNZEOZDOZVUSEUUIYSVUKUYHUWCWCZWDVUCVVBNZEO
      VVHDOZEOVVCVVJVVLVVMEVVLVVGDOZVVBNVVMVUCVVNVVBDUWBWEWFVVGVVBDWGWHTVVBEYSW
      IVVHDEWJSVVIVURDVVIVVFVUKMZUUIKZVVOYQKZVVOUUHKZWKZLVURVVBVVPEVVFVVEPVVGVV
      AVVOUUIUWBVVFVUKVHVKVLVVOYQUUHWLVVSVUQVVQVUPVVRUVIVVQVVDUYHMHKVUPVVDUYHUW
      CHUVFPZVUNUWSWMUVFUYHDVFZVUNVOQVVRVVDUWCMUUGKZUVIVVDUYHUWCUUGVVTVUNUWSVTU
      VFUVDMZUUFKZABVJZUVHNZAOZVWBUVIVWDUWBVWCMZUUEKZEYSVCZUWBUVGIZIZIZVBZVWINZ
      EOZAOZVWGEUUEYSVWCUVFUVDWCWDVUCVWINZEOVWOAOZEOVWJVWQVWRVWSEVWRVWNAOZVWINV
      WSVUCVWTVWIAUWBWEWFVWNVWIAWGWHTVWIEYSWIVWOAEWJSVWPVWFAVWPVWMVWCMZUUEKZVXA
      YOKZVXAUUDKZNVWFVWIVXBEVWMVWLPVWNVWHVXAUUEUWBVWMVWCVHVKVLVXAYOUUDVMVXCVWE
      VXDUVHVXCVWKUVDMHKVWEVWKUVFUVDHUVGPZVWAUWTVTUVGUVDAVFZUWTVOQVXDVWKUVFMUUA
      KUVHVWKUVFUVDUUAVXEVWAUWTWMUVGUVFVXFVWAWBQWNRTRUVFUVDUUFVWAUWTVNUVHAUVDWI
      SQWOWPRTRWPVUKUUJVVKWQUYIVUQDXIVUTUVIDUYHWSVUQDXJQSRVUJUYPUXHMHKUYJUYPUXH
      UWDHVUMUYDUWQWMUYHUXHVUNUYDVOQWNRTRUXHUWDUVPUUOUYDUWQUYEWMGUVJUXHWTSWNRTU
      XBUXMEYRVCZUXPEUUQYRUWMUWDUVPWCWDUWBYRKZUXMNZEOUXNFOZEOVXGUXPVXIVXJEVXIUX
      KFOZUXMNVXJVXHVXKUXMFUWBXAWFUXKUXMFWGWHTUXMEYRWIUXNFEWJSQFUVJUVLUVKXBXCSW
      PWNUVEUVMXDRWNRTUVSUWGEYRVCZUWJEUUTYRUVPUYEWDVXHUWGNZEOUWHBOZEOVXLUWJVXMV
      XNEVXMUWEBOZUWGNVXNVXHVXOUWGBUWBXAWFUWEUWGBWGWHTUWGEYRWIUWHBEWJSQUVTBUVKW
      ISWPUVPUVAUYEWQUVNBUVKXESQXFUVBUVAUUTYRYHUUSHXGXHYLUURYKYJUEYIUBXKXLXMXNX
      OXHUUQYRUUCUUPUUBUUAXPYAXQUUOUUNYSUUMYQUULUUKUUJUUIYSYQUUHHXGXRZUUGUUFUUE
      YSYOUUDHXGXQUUAXPXRXSYRUKXTXMZXMZYBXHXQYCVXRYBYDXHXQVXPXSVXRYBXRXSVXQYBYE
      XSVXQYBYDYFYG $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d N a x $.  $d A a x $.  $d a y $.  $d A y $.  $d n y $.  $d N y $.
    $d x y $.  $d a b $.  $d a k $.  $d a n $.  $d a w $.  $d a z $.  $d b k $.
    $d b w $.  $d b x $.  $d b y $.  $d b z $.  $d k n $.  $d k w $.  $d k x $.
    $d k y $.  $d k z $.  $d N n $.  $d n x $.  $d n z $.  $d w x $.  $d w y $.
    $d w z $.  $d x z $.  $d y z $.

    $( T-raising of a set of naturals.  Theorem X.1.46 of [Rosser] p. 532.
       (Contributed by SF, 30-Jan-2015.) $)
    tfinnn $p |- ( ( N e. Nn /\ A C_ Nn /\ A e. N ) ->
       { a | E. x e. A a = _T[fin] x } e. _T[fin] N ) $=
      ( vy vb vw cnnc wcel wss cv ctfin wceq wrex cab wi c0 wn c0c wa vn vk wal
      vz wral c1c cplc tfinnnlem1 tfineq tfin0c syl6eq eleq2d imbi2d raleqbi1dv
      df-ral el0c ab0 bitri imbi2i imbi12i albii 0ex sseq1 rexeq notbid imbi12d
      albidv ceqsalv 3bitri syl6bb weq abbidv eleq1d cbvralv ax-gen a1i csn cun
      rex0 ccompl elsuc wel rspcv ad2antrl w3a simp3 simplrr vex elcompl sylib
      simprl elequ1 syl5ibcom con2d imp simpll simprr syl simplr sseldd syl3anc
      simpr tfin11 mtand nrexdv 3adant3 tfinex eqeq1 rexbidv elab elsuci 3expia
      sylnibr syl2anc embantd ex com23 snss anbi2i bitr2i wo rexun df-sn eqeq2d
      unss rexsn abbii eqtr4i uneq2i unab eqtr2i biimprcd syl6 an32s rexlimdvva
      syld syl5bi imp32 wne ne0i tfinsuc eleqtrrd expr ralrimiva finds rspccv
      3imp ) CHIZBHJZBCIZDKZAKZLZMZABNZDOZCLZIZUUHUUJUUIUURUUHEKZHJZUUNAUUSNZDO
      ZUUQIZPZECUEZUUJUUIUURPZPUUTUVBUAKZLZIZPZEUVGUEZQHJZUUNAQNZRZDUCZPZUUTUVB
      UBKZLZIZPZEUVQUEZUDKZHJZUUNAUWBNZDOZUVQUFUGZLZIZPZUDUWFUEZUVEUAUBCAEUADUH
      UVGSMZUVKUUTUVBSIZPZESUEZUVPUVJUWMEUVGSUWKUVIUWLUUTUWKUVHSUVBUWKUVHSLSUVG
      SUIUJUKULUMUNUWNUUSSIZUWMPZEUCUUSQMZUUTUVARZDUCZPZPZEUCUVPUWMESUOUWPUXAEU
      WOUWQUWMUWTUUSUPUWLUWSUUTUWLUVBQMUWSUVBUPUVADUQURUSUTVAUWTUVPEQVBUWQUUTUV
      LUWSUVOUUSQHVCUWQUWRUVNDUWQUVAUVMUUNAUUSQVDVEVGVFVHVIVJUVJUVTEUVGUVQUAUBV
      KZUVIUVSUUTUXBUVHUVRUVBUVGUVQUIULUMUNUVGUWFMZUVKUUTUVBUWGIZPZEUWFUEUWJUVJ
      UXEEUVGUWFUXCUVIUXDUUTUXCUVHUWGUVBUVGUWFUIULUMUNUXEUWIEUDUWFEUDVKZUUTUWCU
      XDUWHUUSUWBHVCUXFUVBUWEUWGUXFUVAUWDDUUNAUUSUWBVDVLVMVFVNVJUVJUVDEUVGCUVGC
      MZUVIUVCUUTUXGUVHUUQUVBUVGCUIULUMUNUVOUVLUVNDUUNAVSVOVPUVQHIZUWAUWJUXHUWA
      TZUWIUDUWFUXIUWBUWFIZUWCUWHUXIUXJUWCTZTZUWEUVRUFUGZUWGUXIUXJUWCUWEUXMIZUX
      JUWBFKZGKZVQZVRZMZGUXOVTZNFUVQNUXIUWCUXNPZGUWBUVQFWAUXIUXSUYAFGUVQUXTUXHF
      UBWBZUXPUXTIZTZUWAUXSUYAPZUXHUYDTZUWAUYEUYFUWAUXOHJZUUNAUXONZDOZUVRIZPZUY
      EUYBUWAUYKPUXHUYCUVTUYKEUXOUVQEFVKZUUTUYGUVSUYJUUSUXOHVCUYLUVBUYIUVRUYLUV
      AUYHDUUNAUUSUXOVDVLVMVFWCWDUYFUYKUYGUXPHIZTZUYIUXPLZVQZVRZUXMIZPZUYEUYFUY
      NUYKUYRUYFUYNUYKUYRPUYFUYNTZUYGUYJUYRUYFUYGUYMWKZUYFUYNUYJUYRUYFUYNUYJWEZ
      UYJUYOUYIIZRUYRUYFUYNUYJWFVUBUYOUUMMZAUXONZVUCUYFUYNVUERUYJUYTVUDAUXOUYTA
      FWBZTZVUDGAVKZUYTVUFVUHRUYTVUHVUFUYTGFWBZRZVUHVUFRUYTUYCVUJUXHUYBUYCUYNWG
      UXPUXOGWHZWIWJVUHVUIVUFGAFWLVEWMWNWOVUGVUDTZUYMUULHIVUDVUHVULUYTUYMUYTVUF
      VUDWPZUYFUYGUYMWQWRVULUXOHUULVULUYTUYGVUMVUAWRUYTVUFVUDWSWTVUGVUDXBUXPUUL
      XCXAXDXEXFUYHVUEDUYOUXPXGZUUKUYOMZUUNVUDAUXOUUKUYOUUMXHXIXJXMUYIUVRUYOVUN
      XKXNXLXOXPXQUXSUYAUYSUXSUWCUYNUXNUYRUXSUWCUXRHJZUYNUWBUXRHVCUYNUYGUXQHJZT
      VUPUYMVUQUYGUXPHVUKXRXSUXOUXQHYEXTVJUXSUWEUYQUXMUXSUWEUYHUUNAUXQNZYAZDOZU
      YQUXSUWDVUSDUXSUWDUUNAUXRNVUSUUNAUWBUXRVDUUNAUXOUXQYBVJVLUYQUYIVURDOZVRVU
      TUYPVVAUYIUYPVUODOVVADUYOYCVURVUODUUNVUOAUXPVUKAGVKUUMUYOUUKUULUXPUIYDYFY
      GYHYIUYHVURDYJYKUKVMVFYLYMYPWOYNYOYQYRUXLUXHUWFQYSZUWGUXMMUXHUWAUXKWPUXJV
      VBUXIUWCUWFUWBYTWDUVQUUAXNUUBUUCUUDXPUUEUVDUVFEBCUUSBMZUUTUUIUVCUURUUSBHV
      CVVCUVBUUPUUQVVCUVAUUODUUNAUUSBVDVLVMVFUUFWRXQUUG $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d a b $.  $d a r $.  $d a s $.  $d b r $.  $d b s $.  $d M a $.  $d M b $.
    $d M r $.  $d M s $.  $d N a $.  $d N b $.  $d N r $.  $d N s $.  $d P a $.
    $d P b $.  $d P r $.  $d P s $.  $d Q a $.  $d Q b $.  $d Q r $.  $d Q s $.
    $d r s $.  $d a d $.  $d a g $.  $d a t $.  $d a x $.  $d b d $.  $d b g $.
    $d b t $.  $d b x $.  $d d g $.  $d d r $.  $d d s $.  $d d t $.  $d d x $.
    $d g r $.  $d g s $.  $d g t $.  $d g x $.  $d M d $.  $d M g $.  $d M t $.
    $d M x $.  $d N d $.  $d N g $.  $d N t $.  $d N x $.  $d P d $.  $d P g $.
    $d P t $.  $d P x $.  $d Q d $.  $d Q g $.  $d Q t $.  $d Q x $.  $d r t $.
    $d r x $.  $d s t $.  $d s x $.  $d t x $.  $d a n $.  $d a u $.  $d b n $.
    $d b u $.  $d d n $.  $d d u $.  $d g n $.  $d g u $.  $d m n $.  $d M n $.
    $d m u $.  $d M u $.  $d N n $.  $d n r $.  $d n s $.  $d n t $.  $d n u $.
    $d N u $.  $d P n $.  $d P u $.  $d Q n $.  $d Q u $.  $d r u $.  $d s u $.
    $d t u $.
    $( Ordering law for finite smaller than.  Theorem X.1.47 of [Rosser]
       p. 532.  (Contributed by SF, 30-Jan-2015.) $)
    sfinltfin $p |- ( ( ( _S[fin] ( M , N ) /\ _S[fin] ( P , Q ) ) /\
        << M , P >> e. <[fin] ) -> << N , Q >> e. <[fin] ) $=
      ( va vb vr vx wa cltfin wcel cnnc cv wrex wceq c0 wn syl2anc syl cplc cpw
      vs vt vg vd vu vn vm wsfin copk cpw1 wex w3a wi df-sfin 3an6 eeanv simp1l
      wel simp3ll ncfinlower syl3anc simp1r simp3rl reeanv simpl anim12i cin wo
      ctfin simprll simprrl tfinpw1 elin sylanbrc n0i simpl1l wne ne0i tfinprop
      adantr simpld nndisjeq sylc simprlr simprrr simpl1r wb tfinltfin ad2antrl
      orel1 c1c opkltfing simp2rr simp3r eleqtrd addcass syl6eleq 0nelsuc eleq1
      cun eladdc syl5ibcom mtoi df-ne sylibr wss ssun2 sseq2 mpbiri sseld disjr
      n0 rsp sylbi anim12ii ancoms ad2antll vex snelpw sylib eleq2 imp 3ad2ant1
      wral ad2antrr cfin cvv pwex c0c syl5bir eleq1d syl5ibrcom mpd 3expa exp32
      rexlimdv syl5bi rexlimdvv mp2and csn notbii anbi12i ssun1 adantl biimprcd
      sspwb anim2i dfpss2 simp2ll simp2rl nnpweq simpr2l simp3lr simpr1 simp12l
      wpss con3d cdif simp3rr simp12r elunii df-fin syl6eleqr difex difss ssfin
      mp3an13 elfin undif1 eqtr3i simp23 pssssd ssequn2 syl5eqr simp22r disjdif
      uncom a1i eladdci eqeltrrd simp21 simp3l nncaddccl df-pss ssdif0 simplbi2
      cuni necon3d biimpcd syl6ib necon3ad nnc0suc addceq2 syl6eqr reximi mp2an
      eqss el0c addcex opkeq2 opkeq1 3exp2 mpand exlimdv adantld sylbid sylbird
      syl5 syld opkeq12 imbi1d syl7 3expia exlimdvv 3impia sylbir syl2anb ) CDU
      IZABUIZICAUJZJKZDBUJZJKZUXSCLKZDLKZEMZUKZCKZUYGUAZDKZIZEULZUMZALKZBLKZFMZ
      UKZAKZUYQUAZBKZIZFULZUMZUYBUYDUNZUXTCDEUOABFUOUYNVUDIUYEUYOIZUYFUYPIZUYMV
      UCIZUMVUEUYEUYOUYFUYPUYMVUCUPVUFVUGVUHVUEVUHUYLVUBIZFULEULVUFVUGIZVUEUYLV
      UBEFUQVUJVUIVUEEFVUFVUGVUIVUEVUFVUGVUIUMZEGUSZVULIZGLNZFUBUSZVUOIZUBLNZVU
      EVUKUYEUYIUYIVUNUYEUYOVUGVUIURUYIUYKVUBVUFVUGUTZVURUYGUYGGCVAVBVUKUYOUYSU
      YSVUQUYEUYOVUGVUIVCUYSVUAUYLVUFVUGVDZVUSUYQUYQUBAVAVBVUNVUQIVUMVUPIZUBLNG
      LNVUKVUEVUMVUPGUBLLVEVUKVUTVUEGUBLLVUTVULVUOIZVUKGMZLKZUBMZLKZIZVUEVUMVUL
      VUPVUOVULVULVFVUOVUOVFVGVUKVVFVVAVUEVUKVVFVVAIZIZCVVBVJZOZAVVDVJZOZVUEVVH
      CVVIVHZPOZQZVVNVVJVIZVVJVVHUYHVVMKZVVOVVHUYIUYHVVIKZVVQVUKUYIVVGVURWAVVHV
      VCVULVVRVUKVVCVVEVVAVKZVUKVVFVULVUOVLZUYGVVBVMRUYHCVVIVNVOVVMUYHVPSVVHUYE
      VVILKZVVPUYEUYOVUGVUIVVGVQVVHVVCVVBPVRZVWAVVSVVHVULVWBVVTVVBUYGVSSVVCVWBI
      VWAVVREVVBNVVBEVTWBRCVVIWCRVVNVVJWKWDVVHAVVKVHZPOZQZVWDVVLVIZVVLVVHUYRVWC
      KZVWEVVHUYSUYRVVKKZVWGVUKUYSVVGVUSWAVVHVVEVUOVWHVUKVVCVVEVVAWEZVUKVVFVULV
      UOWFZUYQVVDVMRUYRAVVKVNVOVWCUYRVPSVVHUYOVVKLKZVWFUYEUYOVUGVUIVVGWGVVHVVEV
      VDPVRZVWKVWIVVHVUOVWLVWJVVDUYQVSSVVEVWLIVWKUYHVVKKEVVDNVVDEVTWBRAVVKWCRVW
      DVVLWKWDVVHVUEVVJVVLIZVVIVVKUJZJKZUYDUNVVHVWOVVBVVDUJJKZUYDVVFVWPVWOWHVUK
      VVAVVBVVDWIWJVVHVWPVWBVVDVVBUCMZTWLTZOZUCLNZIZUYDVVFVWPVXAWHVUKVVAUCVVBVV
      DLLWMWJVVHVWTUYDVWBVVHVWSUYDUCLVVHVWQLKZVWSUYDVUKVVGVXBVWSIZUYDVUKVVGVXCU
      MZUYQVVBVWQWLTZTZKZUYDVXDUYQVWRVXFVXDUYQVVDVWRVULVUOVVFVUKVXCWNVUKVVGVXBV
      WSWOWPVVBVWQWLWQWRVXGUDMZUEMZVHPOZUYQVXHVXIXAZOZIZUEVXENUDVVBNVXDUYDUYQVV
      BVXEUDUEXBVXDVXMUYDUDUEVVBVXEVXDUDGUSZVXIVXEKZIZVXMUYDVXDVXPVXMIZIZVXIPVR
      ZUYDVXRVXIPOZQVXSVXRVXTPVXEKZVWQWSVXRVXOVXTVYAVXDVXNVXOVXMWEVXIPVXEWTXCXD
      VXIPXEXFVXSHUEUSZHULVXRUYDHVXIXMVXRVYBUYDHVXRVYBHFUSZHUDUSZQZIZUYDVXMVYBV
      YFUNZVXDVXPVXLVXJVYGVXLVYBVYCVXJVYEVXLVXIUYQHMZVXLVXIUYQXGVXIVXKXGVXIVXHX
      HUYQVXKVXIXIXJXKVXJVYEHVXIYEVYBVYEUNHVXHVXIXLVYEHVXIXNXOXPXQXRVYFVYHUUAZU
      YTKZVYIVXHUAZKZQZIZVXRUYDVYJVYCVYMVYEVYHUYQHXSZXTVYLVYDVYHVXHVYOXTUUBUUCV
      XRVYKUYTXGZVYNUYDVXMVYPVXDVXPVXLVYPVXJVXLVXHUYQXGZVYPVXLVYQVXHVXKXGVXHVXI
      UUDUYQVXKVXHXIXJVXHUYQUUGYAUUEXRVYPVYNIZVYKUYTUUQZVXRUYDVYRVYPVYKUYTOZQZI
      VYSVYNWUAVYPVYJVYMWUAVYJVYTVYLVYTVYLVYJVYKUYTVYIYBUUFUURYCUUHVYKUYTUUIXFV
      XRUYJUFMZKZVYKWUBKZIZUFLNZVYSUYDUNZVXRVVCVULVXNWUFVXDVVCVXQVVCVVEVVAVUKVX
      CUUJWAVXDVULVXQVULVUOVVFVUKVXCUUKWAVXDVXNVXOVXMVKUYGVXHUFVVBUULVBVXRWUEWU
      GUFLVXRWUBLKZWUEVYSUYDVXRWUHWUEVYSUMZIZWUBDOZUYDWUJWUBDVHZPOZQZWUMWUKVIZW
      UKWUJUYJWULKZWUNWUJWUCUYKWUPWUCWUDWUHVYSVXRUUMVXDUYKVXQWUIVUKVVGUYKVXCUYI
      UYKVUBVUFVUGUUNYDYFUYJWUBDVNVOWULUYJVPSWUJWUHUYFWUOVXRWUHWUEVYSUUOVXDUYFV
      XQWUIUYFUYPVUFVUIVVGVXCUUPYFWUBDWCRWUMWUKWKWDWUJWUBBUJZJKZWUKUYDWUJUYTVYK
      UUSZYGKZWURWUJUYTYGKZWUTWUJUYTLUWHZYGWUJVUAUYPUYTWVBKVXDVUAVXQWUIVUKVVGVU
      AVXCUYSVUAUYLVUFVUGUUTYDZYFVXDUYPVXQWUIUYFUYPVUFVUIVVGVXCUVAZYFUYTBLUVBRU
      VCUVDWUSYHKWVAWUSUYTXGWUTUYTVYKUYQFXSYIVXHUDXSYIUVEUYTVYKUVFWUSUYTYHUVGUV
      HSWUTWUSUGMZKZUGLNWUJWURUGWUSUVIWUJWVFWURUGLWUJWVELKZWVFWURVXRWUIWVGWVFIZ
      WURVXRWUIWVHUMZBWUBWVETZOZWURWVIBWVJVHZPOZQZWVMWVKVIZWVKWVIUYTWVLKZWVNWVI
      VUAUYTWVJKWVPVXRWUIVUAWVHVXDVUAVXQWVCWAYDWVIVYKWUSXAZUYTWVJWVIWVQUYTVYKXA
      ZUYTWUSVYKXAWVRWVQUYTVYKUVJWUSVYKUVRUVKWVIVYPWVRUYTOWVIVYKUYTVXRWUHWUEVYS
      WVHUVLZUVMVYKUYTUVNYAUVOWVIWUDWVFVYKWUSVHPOZWVQWVJKWUCWUDWUHVYSVXRWVHUVPZ
      VXRWUIWVGWVFWOZWVTWVIVYKUYTUVQUVSVYKWUSWUBWVEUVTVBUWAUYTBWVJVNVOWVLUYTVPS
      WVIUYPWVJLKZWVOVXRWUIUYPWVHVXDUYPVXQWVDWAYDWVIWUHWVGWWCVXRWUHWUEVYSWVHUWB
      VXRWUIWVGWVFUWCZWUBWVEUWDRBWVJWCRWVMWVKWKWDWVIWURWVKWUBWVJUJZJKZWVIWUBPVR
      ZWVJWUBUHMZTWLTZOZUHLNZWWFWVIWUDWWGWWAWUBVYKVSSWVIWVEWWHWLTZOZUHLNZWWKWVI
      WVEYJOZQZWWOWWNVIZWWNWVIWVFWUSPVRZWWPWWBWVIVYSWWRWVSVYSVYPVYKUYTVRZIWWRVY
      KUYTUWEVYPWWSWWRVYPWUSPVYKUYTWUSPOZUYTVYKXGZVYPVYTUYTVYKUWFVYTVYPWXAVYKUY
      TUWRUWGYKUWIYCXOSWVFWWOWUSPWVFWWOWUSYJKZWWTWWOWVFWXBWVEYJWUSYBUWJWUSUWSUW
      KUWLWDWVIWVGWWQWWDUHWVEUWMYAWWOWWNWKWDWWMWWJUHLWWMWVJWUBWWLTWWIWVEWWLWUBU
      WNWUBWWHWLWQUWOUWPSWUBYHKWVJYHKWWFWWGWWKIWHUFXSZWUBWVEWXCUGXSUWTUHWUBWVJY
      HYHWMUWQVOWVKWUQWWEJBWVJWUBUXAYLYMYNYOYPYQYRYNWUKWUQUYCJWUBDBUXBYLXCYNUXC
      YQYNUXIUXDYKUXJUXEYRYNYPYSYRYNYOYPYQUXFUXGUXHVWMUYBVWOUYDVWMUYAVWNJCAVVIV
      VKUXKYLUXLYMYTYPUXMYSYKYTUXNUXOYKUXPUXQUXRYC $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d M a $.  $d N a $.  $d P a $.
    $( The finite smaller relationship is one-to-one in its first argument.
       Theorem X.1.48 of [Rosser] p. 533.  (Contributed by SF, 29-Jan-2015.) $)
    sfin111 $p |- ( ( _S[fin] ( M , P ) /\ _S[fin] ( N , P ) ) ->
       M = N ) $=
      ( va wsfin wa copk cltfin wcel wo wn wceq cnnc wex df-sfin adantl simp1bi
      sfinltfin adantr sylib cv cpw1 cpw simp2bi ltfinirr syl mtand ancoms mtod
      wi ex ioran sylanbrc w3o wne ne0i exlimiv 3ad2ant3 sylbi ltfintri syl3anc
      c0 w3a df-3or or32 orel1 sylc ) BAEZCAEZFZBCGHIZCBGHIZJZKZVMBCLZJZVOVJVKK
      VLKVNVJVKAAGHIZVJAMIZVQKVIVRVHVICMIZVRDUAZUBZCIVTUCAIZFDNZCADOZUDPAUEUFZC
      ABARUGVJVLVQWEVIVHVLVQUJVIVHFVLVQBACARUKUHUIVKVLULUMVJVKVOJVLJZVPVJVKVOVL
      UNZWFVJBMIZVSBVBUOZWGVHWHVIVHWHVRWABIZWBFZDNZBADOZQSVIVSVHVIVSVRWCWDQPVHW
      IVIVHWHVRWLVCWIWMWLWHWIVRWKWIDWJWIWBBWAUPSUQURUSSBCUTVAVKVOVLVDTVKVOVLVET
      VMVOVFVG $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d a x $.  $d a z $.  $d t x $.  $d x z $.  $d a t $.  $d t z $.
    $( ` Sp[fin] ` is a set.  (Contributed by SF, 20-Jan-2015.) $)
    spfinex $p |- Sp[fin] e. _V $=
      ( va vz vx vt cv wcel cssetk c1c cins3k csik cimak cin wa wn wex copk csn
      bitr4i exbii 3bitri cspfin cvv cncfin cab cnnc cxpk cpw csymdif cpw1 cdif
      cins2k ccompl cint wsfin wel wi wal wral df-spfin wrex wceq elimak anbi1i
      el1c 19.41v df-rex excom 3bitr4i snex opkeq1 eleq1d ceqsexv elssetk opkex
      elin elpw121c eldif otkelins3k opksnelsik srelk otkelins2k notbii anbi12i
      bitri exanali elcompl dfral2 abbi2i ineq2i eqtri inteqi eqtr4i setswithex
      vex inab ssetkex srelkex sikex ins3kex ins2kex difex pw1ex imakex complex
      1cex inex intex eqeltri ) UAUBUCZAEZFZAUDZGUEUEUFHUGUBUFGIGJUKUHZHUIZUIZU
      IZKUJJIGUKZLXOKIXMXOKULJIXQLXOKUKLXPKLZJZIZXQUJZXOKZLZHKZULZLZUMZUBUAXKBE
      ZCEZUNZBAUOZUPBUQZCXJURZMAUDZUMYGCBAUSYFYNYFXLYMAUDZLYNYEYOXLYMAYEXJYDFZN
      YLNZCXJUTZNXJYEFYMYPYRYPCAUOZYQMZCOZYRYPDEZXJPZYCFZDHUTZUUBYIQZVAZUUDMZDO
      ZCOZUUADYCHXJAWNZVBUUBHFZUUDMZDOUUHCOZDOUUEUUJUUMUUNDUUMUUGCOZUUDMUUNUULU
      UOUUDCUUBVDVCUUGUUDCVERSUUDDHVFUUHCDVGVHUUIYTCUUIUUFXJPZYCFZUUPGFZUUPYBFZ
      MYTUUDUUQDUUFYIVIZUUGUUCUUPYCUUBUUFXJVJVKVLUUPGYBVOUURYSUUSYQYIXJCWNZUUKV
      MUUSUUBYHQZQZQZVAZUUBUUPPZYAFZMZDOZBOZYJYKNZMZBOYQUUSUVGDXOUTUUBXOFZUVGMZ
      DOZUVJDYAXOUUPUUFXJVNVBUVGDXOVFUVOUVHBOZDOUVJUVNUVPDUVNUVEBOZUVGMUVPUVMUV
      QUVGBUUBVPVCUVEUVGBVERSUVHBDVGRTUVIUVLBUVIUVDUUPPZYAFZUVRXTFZUVRXQFZNZMUV
      LUVGUVSDUVDUVCVIUVEUVFUVRYAUUBUVDUUPVJVKVLUVRXTXQVQUVTYJUWBUVKUVTUVBUUFPX
      SFYHYIPXRFYJUVBUUFXJXSYHVIZUUTUUKVRYHYIXRBWNZUVAVSYHYIUWDUVAVTTUWAYKUWAUV
      BXJPGFYKUVBUUFXJGUWCUUTUUKWAYHXJUWDUUKVMWDWBWCTSYJYKBWETWCTSTYQCXJVFRWBXJ
      YDUUKWFYLCXJWGVHWHWIXKYMAWOWJWKWLYFXLYEAXIWMYDYCHGYBWPYAXOXTXQXSXRWQWRWSG
      WPWTXAXNHXEXBXBXCXFXEXCXDXFXGXH $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d a x z $.
    $( The cardinality of the universe is in the finite Sp set.  Theorem X.1.49
       of [Rosser] p. 534.  (Contributed by SF, 27-Jan-2015.) $)
    ncvspfin $p |- Nc[fin] _V e. Sp[fin] $=
      ( va vz vx cvv cncfin cv wcel wsfin wel wi wal wral wa cab cspfin ncfinex
      cint elintab simpl mpgbir df-spfin eleqtrri ) DEZUCAFZGZBFCFHBAIJBKCUDLZM
      ZANQZOUCUHGUGUEJAUGAUCDPRUEUFSTCBAUAUB $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d a p $.  $d a q $.  $d a x $.  $d a z $.  $d p q $.  $d p x $.  $d q x $.
    $d q z $.  $d X x $.  $d X y $.  $d x z $.  $d Z x $.  $d Z y $.  $d Z z $.

    $( If ` X ` is in ` Sp[fin] ` and ` Z ` is smaller than ` X ` , then ` Z `
       is also in ` Sp[fin] ` .  Theorem X.1.50 of [Rosser] p. 534.
       (Contributed by SF, 27-Jan-2015.) $)
    spfinsfincl $p |- ( ( X e. Sp[fin] /\ _S[fin] ( Z , X ) ) ->
       Z e. Sp[fin] ) $=
      ( vy vz vx va vq vp wsfin cspfin wcel wi cnnc cv wa eleq1 imbi12d wel wal
      wceq cpw1 cpw wex w3a df-sfin sfineq1 imbi2d sfineq2 imbi1d cncfin albidv
      cvv wral weq rspcv spv com12 syl9r com23 adantld a2d alimdv cab df-spfin
      cint eleq2i elintab bitri 3imtr4g vtocl2g 3adant3 sylbi pm2.43i impcom
      vex ) BAIZAJKZBJKZVPVQVRLZVPBMKZAMKZCNZUABKWBUBAKOCUCZUDVPVSLZBACUEVTWAWD
      WCDNZENZIZWFJKZWEJKZLZLBWFIZWHVRLZLWDDEBAMMWEBTZWGWKWJWLWEBWFUFWMWIVRWHWE
      BJPUGQWFATZWKVPWLVSWFABUHWNWHVQVRWFAJPUIQWGULUJFNZKZGNZHNZIZGFRZLZGSZHWOU
      MZOZEFRZLZFSZXDDFRZLZFSZWHWIWGXFXIFWGXDXEXHWGXCXEXHLWPWGXEXCXHXEXCWQWFIZW
      TLZGSZWGXHXBXMHWFWOHEUNZXAXLGXNWSXKWTWRWFWQUHUIUKUOXMWGXHXLWGXHLGDGDUNXKW
      GWTXHWQWEWFUFWQWEWOPQUPUQURUSUTVAVBWHWFXDFVCVEZKXGJXOWFHGFVDZVFXDFWFEVOVG
      VHWIWEXOKXJJXOWEXPVFXDFWEDVOVGVHVIVJVKVLVMVN $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d a x $.  $d a z $.  $d B a $.  $d B x $.  $d B z $.  $d x z $.

    $( Inductive principle for ` Sp[fin] ` .  Theorem X.1.51 of [Rosser]
       p. 534.  (Contributed by SF, 27-Jan-2015.) $)
    spfininduct $p |- ( ( B e. V /\ Nc[fin] _V e. B /\
       A. x e. Sp[fin] A. z ( ( x e. B /\ _S[fin] ( z , x ) ) -> z e. B ) ) ->
       Sp[fin] C_ B ) $=
      ( va wcel cspfin cvv cv wa wi wal wral wss mpan elin df-ral 19.21v bitr4i
      albii cin cncfin wsfin spfinex inexg ncvspfin biimpri spfinsfincl adantrl
      a1d ancrd syl6ibr ex a2d exp4a a2i syl5bi 2alimi 3imtr4i w3a wel cab cint
      imp3a df-spfin wceq eleq2 imbi2d albidv raleqbi1dv anbi12d biimprd 3impib
      elabg intss1 syl syl5eqss inss2 syl6ss syl3an ) CDFZGCUAZHFZHUBZCFZWDWBFZ
      AIZCFZBIZWGUCZJZWICFZKZBLZAGMZWJWIWBFZKZBLZAWBMZGCNGHFWAWCUDGCHDUEOWDGFZW
      EWFUFWFWTWEJWDGCPUGOWGGFZWMKZBLZALZWGWBFZWQKZBLZALZWOWSXBXFABXEXAWHJXBWQW
      GGCPXBXAWHWQXAWMWHWQKXAWMWHWJWPXAWKWLWPXAWKWLWPKXAWKJZWLWIGFZWLJWPXIWLXJX
      IXJWLXAWJXJWHWGWIUHUIUJUKWIGCPULUMUNUOUPVDUQURWOXAWNKZALXDWNAGQXCXKAXAWMB
      RTSWSXEWRKZALXHWRAWBQXGXLAXEWQBRTSUSWCWFWSUTZGWBCXMGWDEIZFZWJBEVAZKZBLZAX
      NMZJZEVBZVCZWBABEVEXMWBYAFZYBWBNWCWFWSYCWCYCWFWSJZXTYDEWBHXNWBVFZXOWFXSWS
      XNWBWDVGXRWRAXNWBYEXQWQBYEXPWPWJXNWBWIVGVHVIVJVKVNVLVMWBYAVOVPVQGCVRVSVT
      $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d x y z $.
    $( If the universe is finite, then ` Sp[fin] ` is a subset of the non-empty
       naturals.  Theorem X.1.53 of [Rosser] p. 534.  (Contributed by SF,
       27-Jan-2015.) $)
    vfinspnn $p |- ( _V e. Fin -> Sp[fin] C_ ( Nn \ { (/) } ) ) $=
      ( vx vz vy cvv cfin wcel cncfin cnnc c0 csn cv wsfin wa wi wal cspfin wne
      cdif ne0i eldifsn wral wss vvex ncfinprop mpan2 anim2i syl sylibr cpw wex
      cpw1 w3a df-sfin adantr exlimiv biimpri sylan2 3adant2 sylbi adantl rgenw
      ax-gen nncex snex difex spfininduct mp3an1 sylancl ) DEFZDGZHIJZRZFZAKZVL
      FZBKZVNLZMVPVLFZNZBOZAPUAZPVLUBZVIVJHFZVJIQZMZVMVIWCDVJFZMZWEVIDDFWGUCDDU
      DUEWFWDWCVJDSUFUGVJHITUHVTAPVSBVQVRVOVQVPHFZVNHFZCKZUKZVPFZWJUIVNFZMZCUJZ
      ULVRVPVNCUMWHWOVRWIWOWHVPIQZVRWNWPCWLWPWMVPWKSUNUOVRWHWPMVPHITUPUQURUSUTV
      BVAVLDFVMWAWBHVKVCIVDVEABVLDVFVGVH $.
      $( [27-Jan-2015] $)
  $}

  ${
    $( If the universe is finite, then ` Nc[fin] 1c ` is the base two log of
       ` Nc[fin] _V ` .  Theorem X.1.54 of [Rosser] p. 534.  (Contributed by
       SF, 29-Jan-2015.) $)
    1cvsfin $p |- ( _V e. Fin -> _S[fin] ( Nc[fin] 1c , Nc[fin] _V ) ) $=
      ( va cvv cfin wcel c1c cncfin cnnc cpw1 cpw wex w3a 1cex ncfinprop simpld
      cv wa mpan2 vvex simprd eleq1d wsfin wceq pw1eq df1c2 syl6eqr pweq syl6eq
      pwv anbi12d spcev syl2anc 3jca df-sfin sylibr ) BCDZEFZGDZBFZGDZAOZHZUPD
      ZUTIZURDZPZAJZKUPURUAUOUQUSVFUOEBDZUQLUOVGPUQEUPDZEBMZNQUOBBDZUSRUOVJPUSB
      URDZBBMZNQUOVHVKVFUOUQVHUOVGUQVHPLVIQSUOUSVKUOVJUSVKPRVLQSVEVHVKPABRUTBUB
      ZVBVHVDVKVMVAEUPVMVABHEUTBUCUDUETVMVCBURVMVCBIBUTBUFUHUGTUIUJUKULUPURAUMU
      N $.
      $( [29-Jan-2015] $)
  $}

  ${
    $( If the universe is finite, then the size of ` 1c ` is in ` Sp[fin] ` .
       Corollary of Theorem X.1.54 of [Rosser] p. 534.  (Contributed by SF,
       29-Jan-2015.) $)
    1cspfin $p |- ( _V e. Fin -> Nc[fin] 1c e. Sp[fin] ) $=
      ( cvv cfin wcel cncfin cspfin wsfin ncvspfin 1cvsfin spfinsfincl sylancr
      c1c ) ABCADZECKDZLFMECGHLMIJ $.
      $( [29-Jan-2015] $)
  $}

  ${
    $( If the universe is finite, then the T-raising of the size of the
       universe is equal to the size of ` 1c ` .  Theorem X.1.55 of [Rosser]
       p. 534.  (Contributed by SF, 29-Jan-2015.) $)
    tncveqnc1fin $p |- ( _V e. Fin -> _T[fin] Nc[fin] _V = Nc[fin] 1c ) $=
      ( cvv cfin wcel cncfin ctfin cpw1 wceq vvex ncfintfin mpan2 df1c2 ncfineq
      c1c ax-mp syl6eqr ) ABCZADEZAFZDZMDZPAACQSGHAAIJMRGTSGKMRLNO $.
      $( [29-Jan-2015] $)
  $}

  ${
    $( If the universe is finite, then the T-raising of the size of ` 1c ` is
       smaller than the size itself.  Corollary of theorem X.1.56 of [Rosser]
       p. 534.  (Contributed by SF, 29-Jan-2015.) $)
    t1csfin1c $p |- ( _V e. Fin ->
               _S[fin] ( _T[fin] Nc[fin] 1c , Nc[fin] 1c ) ) $=
      ( cvv cfin wcel c1c cncfin ctfin wsfin 1cvsfin sfintfin wceq tncveqnc1fin
      syl wb sfineq2 mpbid ) ABCZDEZFZAEZFZGZRQGZPQSGUAHQSILPTQJUAUBMKTQRNLO $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d N a $.
    $( If the universe is finite, then the T-raising of all non-empty naturals
       are no greater than the size of ` 1c ` .  Theorem X.1.56 of [Rosser]
       p. 534.  (Contributed by SF, 30-Jan-2015.) $)
    vfintle $p |- ( ( _V e. Fin /\ N e. Nn /\ N =/= (/) ) ->
        << _T[fin] N , Nc[fin] 1c >> e. <_[fin] ) $=
      ( va cvv cfin wcel cnnc c0 w3a cncfin copk clefin ctfin wa wceq ncfinprop
      simp2 simpld mpan2 adantr 3ad2ant1 wne c1c cv wex n0 3adant2 simp3 simprd
      nnceleq syl22anc 3expia wi ccompl simpr cun uncompl ncfineq ax-mp vex cin
      complex incompl ncfindi mp3an23 syl5eqr ncfinex lefinaddc sylancr eqeltrd
      cplc ex syld exlimdv syl5bi 3impia wb vvex tfinlefin syl2anc tncveqnc1fin
      opkeq12d opkeq2d eleq1d bitrd mpbid ) CDEZAFEZAGUAZHZACIZJZKEZALZUBIZJZKE
      ZWFWGWHWLWHBUCZAEZBUDWFWGMZWLBAUEWSWRWLBWSWRAWQIZNZWLWFWGWRXAWFWGWRHZWGWT
      FEZWRWQWTEZXAWFWGWRPXBXCXDWFWRXCXDMWGWQAOUFZQWFWGWRUGXBXCXDXEUHWQAWTUIUJU
      KWFXAWLULWGWFXAWLWFXAMZWKWTWTWQUMZIZVJZJZKXFAWTWJXIWFXAUNWFWJXINXAWFWJWQX
      GUOZIZXIXKCNXLWJNWQUPXKCUQURWFWQCEZXLXINZBUSZWFXMMXGCEZWQXGUTGNXNWQXOVAZW
      QVBWQXGCCVCVDRVESWAWFXJKEZXAWFWTCEXHFEZXRWQVFWFXSXGXHEZWFXPXSXTMXQXGCORQW
      TXHCVGVHSVIVKSVLVMVNVOWIWLWMWJLZJZKEZWPWIWGWJFEZWLYCVPWFWGWHPWIYDCWJEZWFW
      GYDYEMZWHWFCCEYFVQCCORTQAWJVRVSWIYBWOKWIYAWNWMWFWGYAWNNWHVTTWBWCWDWE $.
      $( [30-Jan-2015] $)
  $}

  ${
    $( If the universe is finite, then ` 1c ` is strictly smaller than the
       universe.  Theorem X.1.57 of [Rosser] p. 534.  (Contributed by SF,
       30-Jan-2015.) $)
    vfin1cltv $p |- ( _V e. Fin ->
               << Nc[fin] 1c , Nc[fin] _V >> e. <[fin] ) $=
      ( cvv wcel c1c cncfin cplc copk cltfin wceq ax-mp 1cex wa c0 mpan2 wn c0c
      cnnc ncfinprop simprd wne wb cfin cun uncompl ncfineq cin complex incompl
      ccompl ncfindi mp3an23 syl5reqr opkeq2d 0nel1c 0ex elcompl n0i syl5ibrcom
      mpbir eleq2 el0c syl6ib mtoi addcid1 eqeq1i simpld peano1 a1i syl eqnetrd
      ne0i preaddccan2 syl31anc syl5bbr mtbird clefin ncfinex lefinaddc sylancr
      wo addcex lefinlteq mp3an12 mpbid orcomd ord mpd eqeltrrd ) AUABZCDZWICUH
      ZDZEZFZWIADZFGWHWLWNWIWHWNCWJUBZDZWLWOAHWPWNHCUCWOAUDIWHCABZWPWLHZJWHWQKW
      JABZCWJUELHWRCJUFZCUGCWJAAUIUJMUKULWHWIWLHZNWMGBZWHXAOWKHZWHXCWJLHZLWJBZX
      DNXELCBNUMLCUNUOURWJLUPIWHXCWJOBZXDWHXFXCWJWKBZWHWKPBZXGWHWSXHXGKWTWJAQMZ
      ROWKWJUSUQWJUTVAVBXAWIOEZWLHZWHXCXJWIWLWIVCZVDWHWIPBZOPBZXHXJLSXKXCTWHXMC
      WIBZWHWQXMXOKJCAQMZVEXNWHVFVGWHXHXGXIVEZWHXJWILXJWIHWHXLVGWHXOWILSZWHXMXO
      XPRWICVJVHZVIWKWIOVKVLVMVNWHXAXBWHXBXAWHWMVOBZXBXAVSZWHWIABZXHXTCVPZXQWIW
      KAVQVRWHXRXTYATZXSYBWLABXRYDYCWIWKYCWJVPVTWIWLAAWAWBVHWCWDWEWFWG $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d N a $.
    $( If the universe is finite, then the size of the universe is not the
       T-raising of a natural.  Theorem X.1.58 of [Rosser] p. 534.
       (Contributed by SF, 29-Jan-2015.) $)
    vfinncvntnn $p |- ( ( _V e. Fin /\ N e. Nn ) ->
                 _T[fin] N =/= Nc[fin] _V ) $=
      ( va cvv wcel cnnc wa ctfin cncfin wi c0 wceq vvex ncfinprop mpan2 cltfin
      wne copk simpld 3ad2ant1 c1c cfin simprd syl necomd tfineq tfinnul syl6eq
      ne0i neeq1d syl5ibr adantrd w3a wn ltfinirr clefin vfintle vfin1cltv cpw1
      cv wrex tfinprop 3adant1 leltfintr syl3anc mp2and opkeq1 eleq1d syl5ibcom
      1cex mtod df-ne sylibr 3expa expcom pm2.61ine ) CUADZAEDZFZAGZCHZPZIAJAJK
      ZVPWAVQVPWAWBJVTPVPVTJVPCVTDZVTJPVPVTEDZWCVPCCDZWDWCFLCCMZNUBVTCUHUCUDWBV
      SJVTWBVSJGJAJUEUFUGUIUJUKVRAJPZWAVPVQWGWAVPVQWGULZVSVTKZUMWAWHWIVTVTQZODZ
      VPVQWKUMZWGVPWDWLVPWEWDLVPWEFWDWCWFRNZVTUNUCSWHVSVTQZODZWIWKWHVSTHZQUODZW
      PVTQODZWOAUPVPVQWRWGUQSWHVSEDZWPEDZWDWQWRFWOIVQWGWSVPVQWGFWSBUSURVSDBAUTA
      BVARVBVPVQWTWGVPTCDZWTVIVPXAFWTTWPDTCMRNSVPVQWDWGWMSVSWPVTVCVDVEWIWNWJOVS
      VTVTVFVGVHVJVSVTVKVLVMVNVO $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d a x $.
    $( If the universe is finite, then its size is not a T raising of an
       element of ` Sp[fin] ` .  Corollary of theorem X.1.58 of [Rosser]
       p. 534.  (Contributed by SF, 27-Jan-2015.) $)
    vfinncvntsp $p |- ( _V e. Fin ->
                 -. Nc[fin] _V e. { a | E. x e. Sp[fin] a = _T[fin] x } ) $=
      ( cvv cfin wcel cncfin cv ctfin wceq cspfin wrex cab wa wne cnnc csn cdif
      wn c0 vfinspnn difss syl6ss sselda vfinncvntnn syldan necomd df-ne nrexdv
      sylib ncfinex eqeq1 rexbidv elab sylnibr ) CDEZCFZAGZHZIZAJKZUPBGZURIZAJK
      ZBLEUOUSAJUOUQJEZMZUPURNUSRVEURUPUOVDUQOEURUPNUOJOUQUOJOSPZQOTOVFUAUBUCUQ
      UDUEUFUPURUGUIUHVCUTBUPCUJVAUPIVBUSAJVAUPURUKULUMUN $.
      $( [27-Jan-2015] $)
  $}

  ${
    $d n z x a b p g d $.
    $( Lemma for ~ vfinspss .  Establish part of the inductive step.
       (Contributed by SF, 3-Feb-2015.) $)
    vfinspsslem1 $p |- (
      ( ( _V e. Fin /\ _T[fin] n e. Sp[fin] ) /\
        ( n e. Sp[fin] /\ _S[fin] ( z , _T[fin] n ) ) ) ->
      E. x e. Sp[fin] z = _T[fin] x ) $=
      ( vp va vb vd vg cvv wcel cv cspfin wa c1c wceq cnnc wrex syl cpw1 wex c0
      cfin ctfin wsfin cncfin cplc copk clefin simpl cdif vfinspnn difss syl6ss
      wne csn sselda eldifsn simprbi vfintle syl3anc cltfin wn t1csfin1c adantr
      ad2ant2r wi simpr sfinltfin ex syl2an con3d wb tfincl 1cex mpan2 ad2antrr
      ncfinprop simpld lenltfin syl2anc df-sfin simp1bi ad2antll 3imtr4d tfinex
      cpw mpd vex opklefing mp2an sylib df1c2 pw1eq tfinpw1 syl5eqelr syl5ibcom
      ax-mp eleq2 cin cun eladdc wel wss ssun1 sseq2 mpbiri ssv biantrur bitr4i
      sspw1 exbii anbi1i 19.41v excom pw1ex eqeq2d ceqsexv bitri 3bitri biimpac
      eleq1 nnceleq syl22anc pwex simprr simprd eleq1d anbi12d spcev syl3anbrc
      weq pweq sfintfin sfin112 tfin11 simprl eqeltrrd anbi2d syld syl5 sfineq1
      spfinsfincl risset tfineq eqcomd reximi sylbi eqeq1 rexbidv imbi12d com12
      expdimp exlimdv adantld adantrr rexlimdvva syl5bi rexlimdvw ) IUBJZCKZUCZ
      LJZMZUUTLJZBKZUVAUDZMZMZNUEZUCZUVEDKZUFZOZDPQZUVEAKZUCZOZALQZUVHUVEUVJUGU
      HJZUVNUVHUVAUVIUGUHJZUVSUUSUVDUVTUVBUVFUUSUVDMZUUSUUTPJZUUTUAUNZUVTUUSUVD
      UIUUSLPUUTUUSLPUAUOZUJZPUKPUWDULUMUPZUWAUUTUWEJZUWCUUSLUWEUUTUKUPUWGUWBUW
      CUUTPUAUQURRUUTUSUTVEUVHUVIUVAUGVAJZVBZUVJUVEUGVAJZVBZUVTUVSUVHUWJUWHUVCU
      VJUVIUDZUVFUWJUWHVFUVGUUSUWLUVBVCVDUVDUVFVGUWLUVFMUWJUWHUVEUVAUVJUVIVHVIV
      JVKUVHUVAPJZUVIPJZUVTUWIVLUVHUWBUWMUUSUVDUWBUVBUVFUWFVEUUTVMRUVHUWNNUVIJZ
      UUSUWNUWOMZUVBUVGUUSNIJUWPVNNIVQVOVPZVRZUVAUVIVSVTUVHUVEPJZUVJPJZUVSUWKVL
      UVFUWSUVCUVDUVFUWSUWMEKZSZUVEJUXAWFZUVAJMETUVEUVAEWAWBWCZUVHUWNUWTUWRUVIV
      MRUVEUVJVSVTWDWGUVEIJUVJIJUVSUVNVLBWHUVIWEDUVEUVJIIWIWJWKUVHUVMUVRDPUVHUV
      MISZSZUVLJZUVRUVHUXFUVJJUVMUXGUVHUXFNSZUVJNUXEOUXHUXFOWLNUXEWMWQUVHUWPUXH
      UVJJUWQNUVIWNRWOUVJUVLUXFWRWPUXGUXAFKZWSUAOZUXFUXAUXIWTZOZMZFUVKQEUVEQUVH
      UVRUXFUVEUVKEFXAUVHUXMUVREFUVEUVKUVHEBXBZUXMUVRVFFDXBUVHUXNMZUXLUVRUXJUXL
      UXAGKZSZSZOZGTZUXOUVRUXLUXAUXFXCZUXTUXLUYAUXAUXKXCUXAUXIXDUXFUXKUXAXEXFUY
      AHKZUXEXCZUXAUYBSZOZMZHTUYBUXQOZUYEMZGTZHTZUXTHUXAUXEEWHXJUYFUYIHUYFUYGGT
      ZUYEMUYIUYCUYKUYEUYCUXPIXCZUYGMZGTUYKGUYBIHWHXJUYGUYMGUYLUYGUXPXGXHXKXIXL
      UYGUYEGXMXIXKUYJUYHHTZGTUXTUYHHGXNUYNUXSGUYEUXSHUXQUXPGWHZXOZUYGUYDUXRUXA
      UYBUXQWMXPXQXKXRXSWKUXOUXSUVRGUVHUXNUXSUVRUXNUXSMUXRUVEJZUVHUVRUXSUXNUYQU
      XAUXRUVEYAXTUVHUYQUVEUXQUEZUCZOZUVRUVHUYQUYTUVHUYQMUWSUYSPJZUYQUXRUYSJZUY
      TUVHUWSUYQUXDVDUVHVUAUYQUVHUYRPJZVUAUVHVUCUXQUYRJZUUSVUCVUDMZUVBUVGUUSUXQ
      IJVUEUYPUXQIVQVOZVPZVRUYRVMRVDUVHUYQVGUVHVUBUYQUVHVUEVUBVUGUXQUYRWNRVDUXR
      UVEUYSYBYCVIUYTUVHUVRUYTUVHUVRVFUVCUVDUYSUVAUDZMZMZUYSUVPOZALQZVFVUJUYRLJ
      ZVULVUJUXPWFZUEZLJUYRVUOUDZVUMVUJUUTVUOLVUJUWBVUOPJZUVAVUOUCZOZUUTVUOOUUS
      UVDUWBUVBVUHUWFVEUUSVUQUVBVUIUUSVUQVUNVUOJZUUSVUNIJVUQVUTMUXPUYOYDVUNIVQV
      OZVRZVPVUJVUHUYSVURUDZVUSUVCUVDVUHYEVUJVUPVVCUUSVUPUVBVUIUUSVUCVUQUXBUYRJ
      ZUXCVUOJZMZETZVUPUUSVUCVUDVUFVRVVBUUSVUDVUTVVGUUSVUCVUDVUFYFUUSVUQVUTVVAY
      FVVFVUDVUTMEUXPUYOEGYKZVVDVUDVVEVUTVVHUXBUXQUYRUXAUXPWMYGVVHUXCVUNVUOUXAU
      XPYLYGYHYIVTUYRVUOEWAYJVPZUYRVUOYMRVURUYSUVAYNVTUUTVUOYOUTUVCUVDVUHYPYQVV
      IVUOUYRUUBVTVUMUVOUYROZALQVULAUYRLUUCVVJVUKALVVJUVPUYSUVOUYRUUDUUEUUFUUGR
      UYTUVHVUJUVRVULUYTUVGVUIUVCUYTUVFVUHUVDUVEUYSUVAUUAYRYRUYTUVQVUKALUVEUYSU
      VPUUHUUIUUJXFUUKYSYTUULUUMYTUUNUUOUUPUUQYSUURWG $.
      $( [3-Feb-2015] $)
  $}

  ${
    $d a t $.  $d a w $.  $d a x $.  $d a z $.  $d t x $.  $d w x $.  $d w z $.
    $d x z $.  $d n w $.  $d n x $.  $d n z $.
    $( If the universe is finite, then ` Sp[fin] ` is a subset of its ` T `
       raisings and the cardinality of the universe.  Theorem X.1.59 of
       [Rosser] p. 534.  (Contributed by SF, 29-Jan-2015.) $)
    vfinspss $p |- ( _V e. Fin ->
              Sp[fin] C_
              ( { a | E. x e. Sp[fin] a = _T[fin] x } u. { Nc[fin] _V } ) ) $=
      ( vw vz vn vt cvv wcel cv wceq cspfin wrex wsfin wa wi bitri cins3k cimak
      csn vex cfin ctfin cab cncfin cun wal wral wss wo weq tfineq vfinspsslem1
      eqeq2d cbvrexv expr anbi2d anbi1d sfineq2 imbi1d imbi12d mpbiri rexlimdva
      eleq1 com12 syl5bi biimpa c1c 1cvsfin sfin111 tncveqnc1fin eqcomd rspcev
      ncvspfin mpan syl eqeq1 rexbidv biimpd syl5 mpand exp3a adantr jaod imp3a
      elun elab elsnc orbi12i 3imtr4g ssun1 sseli syl6 alrimiv ralrimiva c0 cxpk
      anbi1i cssetk cins2k cnnc csik cpw csymdif cpw1 cdif cin cidk ccompl copk
      ccnvk elimak df-rex elpw1 r19.41v bitr4i exbii rexcom4 snex opkeq1 eleq1d
      ceqsexv eqtfinrelk rexbii abbi2i tfinrelkex spfinex pw1ex imakex eqeltrri
      wex unex ssun2 ncfinex snid sselii spfininduct mp3an12 ) GUAHZCIZBIZAIZUB
      ZJZAKLZBUCZGUDZSZUEZHZDIZYSMZNZUUJUUHHZOZDUFZCKUGZKUUHUHZYRUUOCKYRYSKHZNZ
      UUNDUUSUULUUJUUEHZUUMUUSYSUUBJZAKLZYSUUFJZUIZUUKNUUJUUBJZAKLZUULUUTUUSUVD
      UUKUVFUUSUVBUUKUVFOZUVCUVBYSEIZUBZJZEKLUUSUVGUVAUVJAEKAEUJUUBUVIYSUUAUVHU
      KUMUNUUSUVJUVGEKUVJUUSUVHKHZNZUVGUVJUVLUVGOYRUVIKHZNZUVKNZUUJUVIMZUVFOZOU
      VNUVKUVPUVFADEULUOUVJUVLUVOUVGUVQUVJUUSUVNUVKUVJUURUVMYRYSUVIKVCUPUQUVJUU
      KUVPUVFYSUVIUUJURUSUTVAVDVBVEYRUVCUVGOUURYRUVCUUKUVFUVCUUKNUUJUUFMZYRUVFU
      VCUUKUVRYSUUFUUJURVFYRVGUDZUUFMZUVRUVFVHUVTUVRNUVSUUJJZYRUVFUUFUVSUUJVIYR
      UVSUUBJZAKLZUWAUVFOYRUVSUUFUBZJZUWCYRUWDUVSVJVKUUFKHUWEUWCVMUWBUWEAUUFKUU
      AUUFJUUBUWDUVSUUAUUFUKUMVLVNVOUWAUWCUVFUWAUWCUVFUWAUWBUVEAKUVSUUJUUBVPVQV
      RVDVOVSVTVSWAWBWCWDUUIUVDUUKUUIYSUUEHZYSUUGHZUIUVDYSUUEUUGWEUWFUVBUWGUVCU
      UDUVBBYSCTZBCUJUUCUVAAKYTYSUUBVPVQWFYSUUFUWHWGWHPWQUUDUVFBUUJDTBDUJUUCUVE
      AKYTUUJUUBVPVQWFWIUUEUUHUUJUUEUUGWJWKWLWMWNUUHGHUUFUUHHUUPUUQUUEUUGWOSZSZ
      UWIWPWRWSZWRXJQWTGWPWRXAWSZVGXBGWPWRQUWLXCVGXDZXDZXDZRXEXAQUWKXFUWNRQXFUW
      ORXFWSXGQXCUWMRWSXEUWMRQXCUWNRXHUWJGWPXEUEZKXDZRZUUEGUUDBUWRYTUWRHZFIZUUA
      SZJZUWTYTXIZUWPHZNZFYJZAKLZUUDUWSUXDFUWQLZUXGFUWPUWQYTBTZXKUXHUWTUWQHZUXD
      NZFYJZUXGUXDFUWQXLUXLUXEAKLZFYJUXGUXKUXMFUXKUXBAKLZUXDNUXMUXJUXNUXDAUWTKX
      MWQUXBUXDAKXNXOXPUXEAFKXQXOPPUXFUUCAKUXFUXAYTXIZUWPHZUUCUXDUXPFUXAUUAXRUX
      BUXCUXOUWPUWTUXAYTXSXTYAUUAYTATUXIYBPYCPYDUWPUWQYEKYFYGYHYIUUFXRYKUUGUUHU
      UFUUGUUEYLUUFGYMYNYOCDUUHGYPYQVO $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d X x y z $.
    $( If the universe is finite, then ` Sp[fin] ` is closed under T-raising.
       Theorem X.1.60 of [Rosser] p. 536.  (Contributed by SF, 30-Jan-2015.) $)
    vfinspclt $p |- ( ( _V e. Fin /\ X e. Sp[fin] ) ->
               _T[fin] X e. Sp[fin] ) $=
      ( vx vy vz cvv wcel cspfin wa cv ctfin c1c wceq tfineq eleq1d elab cssetk
      cxpk cins2k cins3k cimak cfin cab cncfin wi wal wral tncveqnc1fin 1cspfin
      wsfin eqeltrd ncfinex sylibr simprl sfintfin ad2antll spfinsfincl syl2anc
      wss ex vex weq anbi1i 3imtr4g alrimiv ralrimiva c0 csn ccnvk cnnc csymdif
      csik cpw cpw1 cdif cin cidk ccompl cuni1 wrex copk snex elimak eqtfinrelk
      cun opkelcnvk bitri rexbii eluni1 risset 3bitr4i abbi2i tfinrelkex cnvkex
      spfinex imakex uni1ex eqeltrri spfininduct mp3an1 sselda wb elabg adantl
      mpbid ) EUAFZAGFZHABIZJZGFZBUBZFZAJZGFZXEGXJAXEEUCZXJFZCIZXJFZDIZXPUIZHZX
      RXJFZUDZDUEZCGUFZGXJURZXEXNJZGFZXOXEYFKUCGUGUHUJXIYGBXNEUKXGXNLXHYFGXGXNM
      NOULXEYCCGXEXPGFHZYBDYHXPJZGFZXSHZXRJZGFZXTYAYHYKYMYHYKHYJYLYIUIZYMYHYJXS
      UMXSYNYHYJXRXPUNUOYIYLUPUQUSXQYJXSXIYJBXPCUTZBCVAXHYIGXGXPMNOVBXIYMBXRDUT
      BDVAXHYLGXGXRMNOVCVDVEXJEFXOYDYEVFVGZVGZYPQPRZPVHSVIEQPVKRZKVLEQPSYSVJKVM
      ZVMZVMZTVNVKSYRVOUUATSVOUUBTVORVPSVJYTTRVNYTTSVJUUATVQYQEQVNWDZVHZGTZVRZX
      JEXIBUUFXGVGZUUEFZXPXHLZCGVSZXGUUFFXIUUHXPUUGVTUUDFZCGVSUUJCUUDGUUGXGWAZW
      BUUKUUICGUUKUUGXPVTUUCFUUIXPUUGUUCYOUULWEXGXPBUTZYOWCWFWGWFXGUUEUUMWHCXHG
      WIWJWKUUEUUDGUUCWLWMWNWOWPWQCDXJEWRWSUQWTXFXKXMXAXEXIXMBAGXGALXHXLGXGAMNX
      BXCXD $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d a x $.
    $( If the universe is finite, then ` Sp[fin] ` is equal to its T raisings
       and the cardinality of the universe.  Theorem X.1.61 of [Rosser]
       p. 536.  (Contributed by SF, 29-Jan-2015.) $)
    vfinspeqtncv $p |- ( _V e. Fin ->
                  Sp[fin] = ( { a | E. x e. Sp[fin] a = _T[fin] x } u.
                  { Nc[fin] _V } ) ) $=
      ( cvv cfin wcel cspfin cv ctfin wceq wrex cab cncfin csn cun vfinspss wss
      wa wi vfinspclt eleq1 biimprd com12 syl rexlimdva abssdv ncvspfin ncfinex
      snss mpbi jctir unss sylib eqssd ) CDEZFBGZAGZHZIZAFJZBKZCLZMZNZABOUNUTFP
      ZVBFPZQVCFPUNVDVEUNUSBFUNURUOFEZAFUNUPFEQUQFEZURVFRUPSURVGVFURVFVGUOUQFTU
      AUBUCUDUEVAFEVEUFVAFCUGUHUIUJUTVBFUKULUM $.
      $( [29-Jan-2015] $)
  $}

  ${
    $d a x t $.
    $( If the universe is finite, then the size of ` Sp[fin] ` is equal to the
       successor of its T-raising.  Theorem X.1.62 of [Rosser] p. 536.
       (Contributed by SF, 20-Jan-2015.) $)
    vfinncsp $p |- ( _V e. Fin ->
       Nc[fin] Sp[fin] = ( _T[fin] Nc[fin] Sp[fin] +c 1c ) ) $=
      ( va vx cvv wcel cspfin cncfin wceq wrex csn c1c cin cssetk cins2k cins3k
      vt cxpk cnnc cpw1 cimak wa cfin cv ctfin cab cun vfinspeqtncv ncfineq syl
      cplc c0 vfinncvntsp disjsn sylibr ccnvk csik cpw csymdif cdif cidk ccompl
      wn copk wex elimak df-rex elpw1 anbi1i r19.41v bitr4i exbii rexcom4 bitri
      vex snex opkeq1 eleq1d ceqsexv eqtfinrelk rexbii tfinrelkex spfinex pw1ex
      abbi2i imakex eqeltrri ncfindi mp3an2 mpanl2 mpdan ncfinprop mpan2 simpld
      tfincl simprd wss vfinspnn syl6ss tfinnn syl3anc nnceleq syl22anc ncfinex
      difss ncfinsn addceq12d 3eqtrd ) CUADZEFZAUBZBUBZUCGZBEHZAUDZCFZIZUEZFZXM
      FZXOFZUIZXHUCZJUIXGEXPGXHXQGBAUFEXPUGUHXGXMXOKUJGZXQXTGZXGXNXMDVAYBBAUKXM
      XNULUMXGXMCDZYBYCUJIZIZYEPLMZLUNNQCPLUOMZJUPCPLNYHUQJRZRZRZSURUONYGKYJSNK
      YKSKMUSNUQYISMURYISNUQYJSUTYFCPURUEZERZSZXMCXLAYNXIYNDZOUBZXJIZGZYPXIVBZY
      LDZTZOVCZBEHZXLYOYTOYMHZUUCOYLYMXIAVMZVDUUDYPYMDZYTTZOVCZUUCYTOYMVEUUHUUA
      BEHZOVCUUCUUGUUIOUUGYRBEHZYTTUUIUUFUUJYTBYPEVFVGYRYTBEVHVIVJUUABOEVKVIVLV
      LUUBXKBEUUBYQXIVBZYLDZXKYTUULOYQXJVNYRYSUUKYLYPYQXIVOVPVQXJXIBVMUUEVRVLVS
      VLWCYLYMVTEWAWBWDWEZXGYDTXOCDYBYCXNVNXMXOCCWFWGWHWIXGXRYAXSJXGXRQDZYAQDZX
      MXRDZXMYADZXRYAGXGUUNUUPXGYDUUNUUPTUUMXMCWJWKZWLXGXHQDZUUOXGUUSEXHDZXGECD
      UUSUUTTWAECWJWKZWLZXHWMUHXGUUNUUPUURWNXGUUSEQWOUUTUUQUVBXGEQYEURQWPQYEXCW
      QXGUUSUUTUVAWNBEXHAWRWSXMXRYAWTXAXGXNCDXSJGCXBXNCXDWKXEXF $.
      $( [20-Jan-2015] $)
  $}

  ${
    $( The universe is infinite.  Theorem X.1.63 of [Rosser] p. 536.
       (Contributed by SF, 20-Jan-2015.) $)
    vinf $p |- -. _V e. Fin $=
      ( cvv cfin wcel cspfin cncfin noel cevenfin coddfin cin cnnc wne vfinncsp
      c0 wa adantr adantl eqnetrrd syl2anc eqeltrd ex cun csn spfinex ncfinprop
      cdif mpan2 ne0i anim2i syl eldifsn sylibr evenoddnnnul syl6eleqr wo ctfin
      c1c cplc wceq eventfin evennnul sucevenodd ancld oddtfin sucoddeven ancrd
      oddnnul jaod elun elin 3imtr4g mpd evenodddisj syl6eleq mto ) ABCZDEZMCVP
      FVOVPGHIZMVOVPGHUAZCZVPVQCZVOVPJMUBUEZVRVOVPJCZVPMKZNZVPWACVOWBDVPCZNZWDV
      ODACWFUCDAUDUFWEWCWBVPDUGUHUIVPJMUJUKULUMVOVPGCZVPHCZUNWGWHNZVSVTVOWGWIWH
      VOWGWHVOWGWHVOWGNZVPVPUOZUPUQZHVOVPWLURZWGLOZWJWKGCZWLMKZWLHCWGWOVOVPUSPW
      JVPWLMWNWGWCVOVPUTPQWKVARSTVBVOWHWGVOWHWGVOWHNZVPWLGVOWMWHLOZWQWKHCZWPWLG
      CWHWSVOVPVCPWQVPWLMWRWHWCVOVPVFPQWKVDRSTVEVGVPGHVHVPGHVIVJVKVLVMVN $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d n m x a $.
    $( The empty class is not a natural.  Theorem X.1.65 of [Rosser] p. 536.
       (Contributed by SF, 20-Jan-2015.) $)
    nulnnn $p |- -. (/) e. Nn $=
      ( vx vn vm va c0 cnnc wcel cv wceq wne c0c cab csn ccompl cvv wn neeq1 wa
      ne0i ex wrex c1c cplc complab df-sn compleqi df-ne abbii 3eqtr4ri complex
      snex eqeltri nulel0c ax-mp wel wex n0 cfin vinf cuni elunii ancoms df-fin
      syl6eleqr mtoi eleq1 notbid syl5ibrcom necon2ad compleqb necon3bii complV
      imp sylib neeq2i vex elcompl cun elsuci syl sylan2b adantl exlimdv syl5bi
      wi mpd finds neneqd nrex risset mtbir ) EFGAHZEIZAFUAWMAFWLFGWLEBHZEJZKEJ
      ZCHZEJZWQUBUCZEJZWLEJBCWLWOBLZEMZNZOWNEIZBLZNXDPZBLXCXAXDBUDXBXEBEUEUFWOX
      FBWNEUGUHUIXBEUKUJULWNKEQWNWQEQWNWSEQWNWLEQEKGWPUMKESUNWRDCUOZDUPWQFGZWTD
      WQUQXHXGWTDXHXGWTXHXGRZDHZNZEJZWTXIXKONZJZXLXIXJOJZXNXHXGXOXHXGXJOXHXGPXJ
      OIZOWQGZPXHXQOURGZUSXHXQXRXHXQROFUTZURXQXHOXSGOWQFVAVBVCVDTVEXPXGXQXJOWQV
      FVGVHVIVMXJOXKXMXJOVJVKVNXMEXKVLVOVNXLWLXKGZAUPXIWTAXKUQXIXTWTAXGXTWTWEXH
      XGXTWTXTXGADUOPZWTWLXJAVPZVQXGYARXJWLMVRZWSGWTXJWQWLYBVSWSYCSVTWATWBWCWDW
      FTWCWDWGWHWIAEFWJWK $.
  $}

  $( The successor operation is one-to-one over the finite cardinals.  Theorem
     X.1.66 of [Rosser] p. 537.  (Contributed by SF, 20-Jan-2015.) $)
  peano4 $p |- ( ( M e. Nn /\ N e. Nn /\ ( M +c 1c ) = ( N +c 1c ) ) ->
     M = N ) $=
    ( cnnc wcel c1c cplc wceq w3a wa c0 3simpa simp3 peano2 nulnnn eleq1 mtbiri
    wne necon2ai syl 3ad2ant1 prepeano4 syl12anc ) ACDZBCDZAEFZBEFGZHUCUDIUFUEJ
    QZABGUCUDUFKUCUDUFLUCUDUGUFUCUECDZUGAMUHUEJUEJGUHJCDNUEJCOPRSTABUAUB $.
    $( [20-Jan-2015] $)

  $( Successor cancellation law for finite cardinals.  (Contributed by SF,
     3-Feb-2015.) $)
  suc11nnc $p |- ( ( M e. Nn /\ N e. Nn ) ->
    ( ( M +c 1c ) = ( N +c 1c ) <-> M = N ) ) $=
    ( cnnc wcel wa c1c cplc wceq peano4 3expia addceq1 impbid1 ) ACDZBCDZEAFGBF
    GHZABHZMNOPABIJABFKL $.
    $( [3-Feb-2015] $)

  $( Cancellation law for natural addition.  (Contributed by SF,
     3-Feb-2015.) $)
  addccan1 $p |- ( ( M e. Nn /\ N e. Nn /\ P e. Nn ) ->
      ( ( M +c P ) = ( N +c P ) <-> M = N ) ) $=
    ( cnnc wcel w3a cplc c0 wne wceq wb wa nncaddccl nulnnn mtbiri necon2ai syl
    eleq1 3adant2 preaddccan1 mpdan ) BDEZCDEZADEZFBAGZHIZUECAGJBCJKUBUDUFUCUBU
    DLUEDEZUFBAMUGUEHUEHJUGHDENUEHDROPQSABCTUA $.
    $( [3-Feb-2015] $)

  $( Cancellation law for natural addition.  (Contributed by SF,
     3-Feb-2015.) $)
  addccan2 $p |- ( ( M e. Nn /\ N e. Nn /\ P e. Nn ) ->
      ( ( M +c N ) = ( M +c P ) <-> N = P ) ) $=
    ( cnnc wcel w3a cplc c0 wne wceq wb wa nncaddccl nulnnn mtbiri necon2ai syl
    eleq1 3adant3 preaddccan2 mpdan ) BDEZCDEZADEZFBCGZHIZUEBAGJCAJKUBUCUFUDUBU
    CLUEDEZUFBCMUGUEHUEHJUGHDENUEHDROPQSABCTUA $.
    $( [3-Feb-2015] $)


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                Ordered Pairs, Relationships, and Functions
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Ordered Pairs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  $( Declare the constant symbols for ordered pairs. $)
  $c <. >. Phi Proj1 Proj2 $.

  $( Declare the syntax for an ordered pair. $)
  cop $a class <. A , B >. $.

  $( Declare the syntax for the Phi operation. $)
  cphi $a class Phi A $.

  $( Declare the syntax for the first projection operation. $)
  cproj1 $a class Proj1 A $.

  $( Declare the syntax for the second projection operation. $)
  cproj2 $a class Proj2 A $.

  ${
    $d x y A $.  $d x y B $.

    $( Define the phi operator.  This operation increments all the naturals in
       ` A ` and leaves all its other members the same. $)
    df-phi $a |- Phi A = { y |
       E. x e. A y = if ( x e. Nn , ( x +c 1c ) , x ) } $.

    $( Define the type-level ordered pair.  Definition from [Rosser] p. 281. $)
    df-op $a |- <. A , B >. =
       ( { x | E. y e. A x = Phi y } u.
         { x | E. y e. B x = ( Phi y u. { 0c } ) } ) $.

    $( Define the first projection operation.  This operation recovers the
       first element of an ordered pair.  Definition from [Rosser] p. 281. $)
    df-proj1 $a |- Proj1 A = { x | Phi x e. A } $.

    $( Define the second projection operation.  This operation recovers the
       second element of an ordered pair.  Definition from [Rosser] p. 281. $)
    df-proj2 $a |- Proj2 A = { x | ( Phi x u. { 0c } ) e. A } $.
  $}

  ${
    $d A x y z $.
    $( Express the phi operator in terms of the Kuratowski set construction
       functions.  (Contributed by SF, 3-Feb-2015.) $)
    dfphi2 $p |- Phi A = ( ( (
       Image_k
      ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
        ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
            "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
       ( _I_k i^i ( ~ Nn X._k _V ) ) ) "_k A ) $=
      ( vx vy vz cssetk cins3k cins2k cin c1c cpw1 cimak cnnc cidk cv wcel wceq
      cvv wa wo wb cphi ccompl csik cun csymdif cdif cimagek cxpk cplc cif wrex
      copk weq wn iftrue eqeq2d iba simpr con2i biorf syl syl6bb 3bitrd iffalse
      orcom con3i pm2.61i equcom elcompl anbi12i orbi2i bitr4i elun opkelimagek
      vex dfaddc2 eqeq2i opkelxpk mpbiran2 bitri opkelidkg mp2an orbi12i rexbii
      elin eqeq1 rexbidv df-phi elab2 elimak 3bitr4i eqriv ) BAUAZEFZEGZHIJJZKU
      BFWOGWNGEUCUCFUDUEWPJJKUFWPKZUGZLQUHZHZMLUBZQUHZHZUDZAKZBNZCNZLOZXGIUIZXG
      UJZPZCAUKZXGXFULZXDOZCAUKXFWMOXFXEOXKXNCAXKXFXIPZXHRZCBUMZXGXAOZRZSZXNXKX
      PBCUMZXHUNZRZSZXTXHXKYDTXHXKXOXPYDXHXJXIXFXHXIXGUOUPXHXOUQXHXPYCXPSZYDXHY
      CUNXPYETYCXHYAYBURUSYCXPUTVAYCXPVEVBVCYBXKYAYCYDYBXJXGXFXHXIXGVDUPYBYAUQY
      BXPUNYCYDTXPXHXOXHURVFXPYCUTVAVCVGXSYCXPXQYAXRYBCBVHXGLCVOZVIVJVKVLXNXMWT
      OZXMXCOZSXTXMWTXCVMYGXPYHXSYGXMWROZXMWSOZRXPXMWRWSWEYIXOYJXHYIXFWQXGKZPXO
      XGXFWQYFBVOZVNXIYKXFXGIVPVQVLYJXHXFQOZYLXGXFLQYFYLVRVSVJVTYHXMMOZXMXBOZRX
      SXMMXBWEYNXQYOXRXGQOYMYNXQTYFYLXGXFQQWAWBYOXRYMYLXGXFXAQYFYLVRVSVJVTWCVTV
      LWDDNZXJPZCAUKXLDXFWMYLDBUMYQXKCAYPXFXJWFWGCDAWHWICXDAXFYLWJWKWL $.
      $( [3-Feb-2015] $)
  $}

  $( Equality law for the Phi operation.  (Contributed by SF, 3-Feb-2015.) $)
  phieq $p |- ( A = B -> Phi A = Phi B ) $=
    ( wceq cssetk cins3k cins2k cin c1c cpw1 cimak ccompl csik cun csymdif cdif
    cnnc cvv cxpk cphi dfphi2 cimagek cidk imakeq2 3eqtr4g ) ABCDEZDFZGHIIZJKEU
    FFUEFDLLEMNUGIIJOUGJUAPQRGUBPKQRGMZAJUHBJASBSABUHUCATBTUD $.
    $( [3-Feb-2015] $)

  $( The phi operator preserves sethood.  (Contributed by SF, 3-Feb-2015.) $)
  phiexg $p |- ( A e. V -> Phi A e. _V ) $=
    ( wcel cssetk cins3k cins2k cin c1c cpw1 ccompl csik cun cnnc cvv cxpk cidk
    cimak pw1ex nncex vvex cphi csymdif cdif dfphi2 addcexlem 1cex imakex xpkex
    cimagek imagekex inex idkex complex unex imakexg mpan syl5eqel ) ABCZAUADEZ
    DFZGHIZIZQJEUTFUSFDKKELUBVBIIQUCZVBQZUIZMNOZGZPMJZNOZGZLZAQZNAUDVKNCURVLNCV
    GVJVEVFVDVCVBUEVAHUFRRUGUJMNSTUHUKPVIULVHNMSUMTUHUKUNVKANBUOUPUQ $.
    $( [3-Feb-2015] $)

  ${
    phiex.1 $e |- A e. _V $.
    $( The phi operator preserves sethood.  (Contributed by SF, 3-Feb-2015.) $)
    phiex $p |- Phi A e. _V $=
      ( cvv wcel cphi phiexg ax-mp ) ACDAECDBACFG $.
      $( [3-Feb-2015] $)
  $}


  ${
    $d x y z w t A $.  $d x y z w t B $.
    $( Lemma for ~ dfop2 and ~ dfproj22 .  (Contributed by SF, 2-Jan-2015.) $)
    dfop2lem1 $p |- ( << x , y >> e. ~ ( ( Ins2_k SSet_k (+) Ins3_k ( ( `'_k
        Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k )
        "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
     ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) )
        ) "_k
     ~P1 ~P1 1c ) <-> y = ( Phi x u. { 0c } ) ) $=
      ( vz vt cv copk cssetk cins3k cpw1 cimak cun cvv c0c csn wcel wn wex wceq
      wa 3bitr4i cins2k cin c1c ccompl csik csymdif cdif cimagek cnnc cxpk cidk
      ccnvk ccomk cphi wb wrex opkex elimak elpw121c anbi1i 19.41v bitr4i exbii
      wel df-rex excom snex opkeq1 eleq1d ceqsexv elsymdif vex otkelins2k bitri
      elssetk otkelins3k elun ancom opkelimagek opkelcnvk dfphi2 eqeq2i anbi12i
      opkelcok phiex clel3 opkelxpk mpbiran2 sneqb elsnc 3bitr4ri orbi12i 3bitri
      wo bibi12i notbii elcompl wal dfcleq alex ) AEZBEZFZGUAZGHZXDUBUCIIZJUDHX
      DUAXEUAGUEUEHKUFXFIIJUGXFJUHUILUJUBUKUIUDLUJUBKZUHZULZGUMZMNZNZLUJZKZHZUF
      ZXFJZOZPCBVDZCEZXAUNZXKKZOZUOZPZCQZPZXCXQUDOXBYBRZXRYFXRDEZXCFZXPOZDXFUPZ
      YIXTNZNZNZRZYKSZDQZCQZYFDXPXFXCXAXBUQZURYIXFOZYKSZDQYQCQZDQYLYSUUBUUCDUUB
      YPCQZYKSUUCUUAUUDYKCYIUSUTYPYKCVAVBVCYKDXFVEYQCDVFTYRYECYRYOXCFZXPOZUUEXD
      OZUUEXOOZUOZPYEYKUUFDYOYNVGYPYJUUEXPYIYOXCVHVIVJUUEXDXOVKUUIYDUUGXSUUHYCU
      UGYMXBFGOZXSYMXAXBGXTVGZAVLZBVLZVMXTXBCVLZUUMVOZVNUUHYMXAFZXNOUUPXJOZUUPX
      MOZWNZYCYMXAXBXNUUKUULUUMVPUUPXJXMVQUUSXTYAOZXTXKOZWNYCUUQUUTUURUVAUUJXBX
      AFXIOZSZBQXBYARZXSSZBQUUQUUTUVCUVEBUVCUVBUUJSUVEUUJUVBVRUVBUVDUUJXSXCXHOX
      BXGXAJZRUVBUVDXAXBXGUULUUMVSXBXAXHUUMUULVTYAUVFXBXAWAWBTUUOWCVNVCBYMXAXIG
      UUKUULWDBXTYAXAUULWEWFTUURYMXLOZUVAUURUVGXALOUULYMXAXLLUUKUULWGWHYMXKRXTM
      RUVGUVAXTMUUNWIYMXKUUKWJXTMUUNWJWKVBWLXTYAXKVQVBWMWOWPWMVCWMWPXCXQYTWQYHY
      DCWRYGCXBYBWSYDCWTVNT $.
      $( [2-Jan-2015] $)

    $( Lemma for ~ dfop2 (Contributed by SF, 2-Jan-2015.) $)
    dfop2lem2 $p |- ( ~ ( ( Ins2_k SSet_k (+)
     Ins3_k ( ( `'_k Image_k ( ( Image_k
      ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
        ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
            "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V
        ) ) ) o._k
              SSet_k ) u. ( { { 0c } } X._k _V ) ) ) "_k ~P1 ~P1 1c ) "_k B
        )
     = { x | E. y e. B x = ( Phi y u. { 0c } ) } $=
      ( cv csn cun wrex cssetk cins2k cins3k cin cpw1 cimak ccompl csik csymdif
      cimagek cnnc cvv cxpk cphi c0c wceq c1c cdif cidk ccnvk ccomk wcel elimak
      copk vex dfop2lem1 rexbii bitri abbi2i ) ADZBDZUAUBEZFUCZBCGZAHIZHJZVBKUD
      LLZMNJVBIVCIHOOJFPVDLLMUEVDMQRSTKUFRNSTKFQUGHUHUSESTFJPVDMNZCMZUQVFUIURUQ
      UKVEUIZBCGVABVECUQAULUJVGUTBCBAUMUNUOUP $.
      $( [2-Jan-2015] $)

    $( Express the ordered pair via the set construction functors.
       (Contributed by SF, 2-Jan-2015.) $)
    dfop2 $p |- <. A , B >. =
       ( ( Image_k ( ( Image_k
      ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
        ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
            "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V
        ) ) ) "_k A ) u.
         ( ~ ( ( Ins2_k SSet_k (+) Ins3_k ( ( `'_k Image_k ( ( Image_k
      ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
        ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
            "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
               ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u.
               ( { { 0c } } X._k _V ) ) ) "_k ~P1 ~P1 1c ) "_k B ) ) $=
      ( vx vy cv wceq wrex cab csn cun cssetk cins3k cins2k cin cpw1 cimak csik
      ccompl cvv cxpk cop cphi c0c c1c csymdif cdif cnnc cidk ccnvk ccomk df-op
      wcel copk vex elimak dfphi2 eqeq2i opkelimagek bitr4i rexbii bicomi bitri
      cimagek abbi2i dfop2lem2 uneq12i eqtr4i ) ABUACEZDEZUBZFZDAGZCHZVHVJUCIZJ
      FDBGCHZJKLZKMZNUDOOZPRLVQMVPMKQQLJUEVROOPUFVRPVCUGSTNUHUGRSTNJZVCZAPZVQVT
      UIKUJVNISTJLUEVRPRBPZJCDABUKWAVMWBVOVLCWAVHWAULVIVHUMVTULZDAGZVLDVTAVHCUN
      ZUOVLWDVKWCDAVKVHVSVIPZFWCVJWFVHVIUPUQVIVHVSDUNWEURUSUTVAVBVDCDBVEVFVG $.
      $( [2-Jan-2015] $)
  $}

  ${
    $d x y A $.
    $( Express the first projection operator via the set construction
       functors.  (Contributed by SF, 2-Jan-2015.) $)
    dfproj12 $p |- Proj1 A =
     ( `'_k Image_k ( ( Image_k
      ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
        ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
            "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V
        ) ) ) "_k A ) $=
      ( vx vy wcel cssetk cins3k cins2k cin cpw1 cimak ccompl csik cimagek cnnc
      cv cun cvv cxpk wceq wrex cproj1 cphi cab c1c csymdif cdif ccnvk df-proj1
      cidk copk opkelimagek opkelcnvk dfphi2 eqeq2i rexbii risset elimak abbi2i
      vex 3bitr4ri eqtr4i ) AUABOZUBZADZBUCEFZEGZHUDIIZJKFVFGVEGELLFPUEVGIIJUFV
      GJMNQRHUINKQRHPZMZUGZAJZBAUHVDBVKCOZVCSZCATVLVBUJVJDZCATVDVBVKDVMVNCAVBVL
      UJVIDVLVHVBJZSVNVMVBVLVHBUSZCUSZUKVLVBVIVQVPULVCVOVLVBUMUNUTUOCVCAUPCVJAV
      BVPUQUTURVA $.
      $( [2-Jan-2015] $)

    $( Express the second projection operator via the set construction
       functors.  (Contributed by SF, 2-Jan-2015.) $)
    dfproj22 $p |- Proj2 A = ( `'_k ~ ( ( Ins2_k SSet_k (+)
    Ins3_k ( ( `'_k Image_k ( ( Image_k
      ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
        ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
            "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
            ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k
    SSet_k ) u. ( { { 0c } } X._k _V ) ) ) "_k ~P1 ~P1 1c ) "_k A ) $=
      ( vx vy cv csn cun wcel cssetk cins2k cins3k cin cpw1 ccompl csik csymdif
      cimak cimagek cnnc cvv cxpk cproj2 cphi c0c cab c1c cdif cidk ccnvk ccomk
      df-proj2 copk wrex opkelcnvk dfop2lem1 bitri rexbii elimak risset 3bitr4i
      wceq vex abbi2i eqtr4i ) AUABDZUBUCEZFZAGZBUDHIZHJZVHKUELLZPMJVHIVIIHNNJF
      OVJLLPUFVJPQRSTKUGRMSTKFQUHHUIVEESTFJOVJPMZUHZAPZBAUJVGBVMCDZVDUKVLGZCAUL
      VNVFUTZCAULVDVMGVGVOVPCAVOVDVNUKVKGVPVNVDVKCVABVAZUMBCUNUOUPCVLAVDVQUQCVF
      AURUSVBVC $.
      $( [2-Jan-2015] $)

  $}


  $( Equality theorem for ordered pairs.  (Contributed by SF, 2-Jan-2015.) $)
  opeq1 $p |- ( A = B -> <. A , C >. = <. B , C >. ) $=
    ( cssetk cins3k cins2k cin cpw1 cimak ccompl csik csymdif cimagek cnnc cxpk
    cun cvv csn cop dfop2 wceq c1c cdif cidk ccnvk ccomk imakeq2 uneq1d 3eqtr4g
    c0c ) ABUAZDEZDFZGUBHHZIJEUMFULFDKKEPLUNHHIUCUNIMNQOGUDNJQOGPMZAIZUMUOUEDUF
    UJRRQOPELUNIJCIZPUOBIZUQPACSBCSUKUPURUQABUOUGUHACTBCTUI $.
    $( [2-Jan-2015] $)

  $( Equality theorem for ordered pairs.  (Contributed by SF, 2-Jan-2015.) $)
  opeq2 $p |- ( A = B -> <. C , A >. = <. C , B >. ) $=
    ( cssetk cins3k cins2k cin cpw1 cimak ccompl csik csymdif cimagek cnnc cxpk
    cun cvv csn cop dfop2 wceq c1c cdif cidk ccnvk ccomk imakeq2 uneq2d 3eqtr4g
    c0c ) ABUAZDEZDFZGUBHHZIJEUMFULFDKKEPLUNHHIUCUNIMNQOGUDNJQOGPMZCIZUMUOUEDUF
    UJRRQOPELUNIJZAIZPUPUQBIZPCASCBSUKURUSUPABUQUGUHCATCBTUI $.
    $( [2-Jan-2015] $)

  $( Equality theorem for ordered pairs.  (Contributed by SF, 2-Jan-2015.) $)
  opeq12 $p |- ( ( A = B /\ C = D ) -> <. A , C >. = <. B , D >. ) $=
    ( wceq cop opeq1 opeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [2-Jan-2015] $)


  ${
    opeq1i.1 $e |- A = B $.
    $( Equality inference for ordered pairs.  (Contributed by SF,
       16-Dec-2006.) $)
    opeq1i $p |- <. A , C >. = <. B , C >. $=
      ( wceq cop opeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Dec-2006] $)

    $( Equality inference for ordered pairs.  (Contributed by SF,
       16-Dec-2006.) $)
    opeq2i $p |- <. C , A >. = <. C , B >. $=
      ( wceq cop opeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Dec-2006] $)

    ${
      opeq12i.2 $e |- C = D $.
      $( Equality inference for ordered pairs.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.)  (Contributed by SF, 16-Dec-2006.) $)
      opeq12i $p |- <. A , C >. = <. B , D >. $=
        ( cop opeq1i opeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [16-Dec-2006] $)
    $}
  $}

  ${
    opeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for ordered pairs.  (Contributed by SF,
       16-Dec-2006.) $)
    opeq1d $p |- ( ph -> <. A , C >. = <. B , C >. ) $=
      ( wceq cop opeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Dec-2006] $)

    $( Equality deduction for ordered pairs.  (Contributed by SF,
       16-Dec-2006.) $)
    opeq2d $p |- ( ph -> <. C , A >. = <. C , B >. ) $=
      ( wceq cop opeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Dec-2006] $)

    ${
      opeq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for ordered pairs.  (The proof was shortened by
         Andrew Salmon, 29-Jun-2011.)  (Contributed by SF, 16-Dec-2006.)
         (Revised by SF, 29-Jun-2011.) $)
      opeq12d $p |- ( ph -> <. A , C >. = <. B , D >. ) $=
        ( cop opeq1d opeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [29-Jun-2011] $) $( [16-Dec-2006] $)
    $}
  $}


  $( An ordered pair of two sets is a set.  (Contributed by SF, 2-Jan-2015.) $)
  opexg $p |- ( ( A e. V /\ B e. W ) -> <. A , B >. e. _V ) $=
    ( wcel cssetk cins3k cins2k cin c1c cpw1 ccompl csik cun cnnc cvv cxpk vvex
    cimak xpkex wa cop csymdif cdif cimagek ccnvk ccomk c0c csn dfop2 addcexlem
    cidk 1cex pw1ex imagekex nncex inex idkex complex unex imakexg mpan ssetkex
    imakex ins2kex cnvkex cokex snex ins3kex symdifex unexg syl2an syl5eqel ) A
    CEZBDEZUAABUBFGZFHZIJKZKZSLGVQHVPHFMMGNUCVSKKSUDZVSSZUEZOPQZIZULOLZPQZIZNZU
    EZASZVQWIUFZFUGZUHUIZUIZPQZNZGZUCZVSSZLZBSZNZPABUJVNWJPEZXAPEZXBPEVOWIPEVNX
    CWHWDWGWBWCWAVTVSUKVRJUMUNUNZVDUOOPUPRTUQULWFURWEPOUPUSRTUQUTUOZWIAPCVAVBWT
    PEVOXDWSWRVSVQWQFVCVEWPWLWOWKFWIXFVFVCVGWNPWMVHRTUTVIVJXEVDUSWTBPDVAVBWJXAP
    PVKVLVM $.
    $( [2-Jan-2015] $)

  ${
    opex.1 $e |- A e. _V $.
    opex.2 $e |- B e. _V $.
    $( An ordered pair of two sets is a set.  (Contributed by SF,
       5-Jan-2015.) $)
    opex $p |- <. A , B >. e. _V $=
      ( cvv wcel cop opexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [5-Jan-2015] $)
  $}

  $( Equality theorem for first projection operator.  (Contributed by SF,
     2-Jan-2015.) $)
  proj1eq $p |- ( A = B -> Proj1 A = Proj1 B ) $=
    ( wceq cssetk cins3k cins2k cin c1c cpw1 cimak ccompl csik cun csymdif cnnc
    cimagek cvv cxpk cproj1 dfproj12 cdif cidk ccnvk imakeq2 3eqtr4g ) ABCDEZDF
    ZGHIIZJKEUGFUFFDLLEMNUHIIJUAUHJPOQRGUBOKQRGMPUCZAJUIBJASBSABUIUDATBTUE $.
    $( [2-Jan-2015] $)

  $( Equality theorem for second projection operator.  (Contributed by SF,
     2-Jan-2015.) $)
  proj2eq $p |- ( A = B -> Proj2 A = Proj2 B ) $=
    ( cssetk cins2k cins3k cin cpw1 cimak ccompl csik csymdif cimagek cnnc cxpk
    cun cvv ccnvk csn cproj2 dfproj22 wceq c1c cdif cidk ccomk imakeq2 3eqtr4g
    c0c ) ABUACDZCEZUIFUBGGZHIEUIDUJDCJJEOKUKGGHUCUKHLMPNFUDMIPNFOLQCUEUHRRPNOE
    KUKHIQZAHULBHASBSABULUFATBTUG $.
    $( [2-Jan-2015] $)

  $( The first projection of a set is a set.  (Contributed by SF,
     2-Jan-2015.) $)
  proj1exg $p |- ( A e. V -> Proj1 A e. _V ) $=
    ( wcel cssetk cins3k cins2k cin c1c cpw1 cimak ccompl csik cun cimagek cnnc
    cvv cxpk cidk pw1ex imagekex cproj1 csymdif ccnvk dfproj12 addcexlem imakex
    cdif 1cex nncex vvex xpkex inex idkex complex unex cnvkex imakexg syl5eqel
    mpan ) ABCZAUADEZDFZGHIZIZJKEVBFVAFDLLEMUBVDIIJUGZVDJZNZOPQZGZROKZPQZGZMZNZ
    UCZAJZPAUDVOPCUTVPPCVNVMVIVLVGVHVFVEVDUEVCHUHSSUFTOPUIUJUKULRVKUMVJPOUIUNUJ
    UKULUOTUPVOAPBUQUSUR $.
    $( [2-Jan-2015] $)

  $( The second projection of a set is a set.  (Contributed by SF,
     2-Jan-2015.) $)
  proj2exg $p |- ( A e. V -> Proj2 A e. _V ) $=
    ( wcel cssetk cins2k cins3k cin c1c cpw1 cimak ccompl csik cun csymdif cnnc
    cimagek cvv cxpk vvex xpkex cproj2 cdif cidk ccnvk c0c csn dfproj22 ssetkex
    ccomk ins2kex addcexlem 1cex pw1ex imakex imagekex nncex inex idkex complex
    unex cnvkex cokex snex ins3kex symdifex imakexg mpan syl5eqel ) ABCZAUADEZD
    FZVJGHIZIZJKFVJEVKEDLLFMNVMIIJUBZVMJZPZOQRZGZUCOKZQRZGZMZPZUDZDUIZUEUFZUFZQ
    RZMZFZNZVMJZKZUDZAJZQAUGWNQCVIWOQCWMWLWKVMVJWJDUHUJWIWEWHWDDWCWBVRWAVPVQVOV
    NVMUKVLHULUMUMZUNUOOQUPSTUQUCVTURVSQOUPUSSTUQUTUOVAUHVBWGQWFVCSTUTVDVEWPUNU
    SVAWNAQBVFVGVH $.
    $( [2-Jan-2015] $)

  ${
    $d A x y z $.  $d B x y z $.
    $( Lemma for ~ phi11 .  (Contributed by SF, 3-Feb-2015.) $)
    phi11lem1 $p |- ( Phi A = Phi B -> A C_ B ) $=
      ( vz vy vx cphi wceq cv wcel cnnc wi wa wrex eqeq2d rexbidv elab2 biimpac
      c1c syl5 syl cplc cif iftrue eqcomd weq eleq1 addceq1 id ifbieq12d sylan2
      rspcev ancoms vex addcex eqeq1 df-phi sylibr eleq2 w3a wn iffalse peano2
      syl5ibcom expdimp pm2.18d simpl simpr eqtr2d peano4 syl3anc 3adant2 simp2
      1cex eqeltrrd 3expia rexlimdva syl5bi exp3a adantr mpd eleq1a com12 con3d
      sylbid impcom adantlr simplr ex pm2.61ian ssrdv ) AFZBFZGZCABCHZAIZWMWNBI
      ZWNJIZWOWMWPKZWQWOLZWNRUAZWKIZWRWSWTDHZJIZXBRUAZXBUBZGZDAMZXAWOWQXGWQWOWT
      WQWTWNUBZGZXGWQXHWTWQWTWNUCUDXFXIDWNADCUEZXEXHWTXJXCWQXDXBWTWNXBWNJUFXBWN
      RUGXJUHUIZNUKUJULEHZXEGZDAMZXGEWTWKWNRCUMZVMUNZXLWTGZXMXFDAXLWTXEUOZODEAU
      PZPUQWQXAWRKWOWQXAWMWPXAWMLWTWLIZWQWPWMXAXTWKWLWTURQXTXFDBMZWQWPXMDBMZYAE
      WTWLXPXQXMXFDBXRODEBUPZPWQXFWPDBWQXBBIZXFWPWQYDXFUSXBWNBWQXFXJYDWQXFLZXCW
      QXDWTGXJYEXCWQXFXCUTZXCXFYFLWTXBGZWQXCYFXFYGYFXEXBWTXCXDXBVAZNQWQWTJIYGXC
      WNVBWTXBJUFVCSVDVEZWQXFVFYEWTXEXDWQXFVGYEXCXEXDGYIXCXDXBUCZTVHXBWNVIVJVKW
      QYDXFVLVNVOVPVQSVRVSVTWQUTZWOLZWNWKIZWRYLWNXEGZDAMZYMWOYKYOYKWOWNXHGZYOYK
      XHWNWQWTWNVAUDYNYPDWNAXJXEXHWNXKNUKUJULXNYOEWNWKXOECUEZXMYNDAXLWNXEUOZOXS
      PUQYKYMWRKWOYKYMWMWPYMWMLWNWLIZYKWPWMYMYSWKWLWNURQYSYNDBMZYKWPYBYTEWNWLXO
      YQXMYNDBYROYCPYKYNWPDBYKYDLZYNWPUUAYNLXBWNBYKYNXJYDYKYNLZWNXEXBYKYNVGUUBY
      FXEXBGYNYKYFYNXCWQXCYNWQXCYNWNXDGZWQXCXEXDWNYJNXCXDJIUUCWQKXBVBXDJWNWATWD
      WBWCWEYHTVHWFYKYDYNWGVNWHVPVQSVRVSVTWIWBWJ $.
      $( [3-Feb-2015] $)
  $}

  $( The phi operator is one-to-one.  Theorem X.2.2 of [Rosser] p. 282.
     (Contributed by SF, 3-Feb-2015.) $)
  phi11 $p |- ( A = B <-> Phi A = Phi B ) $=
    ( wceq cphi phieq phi11lem1 wss eqcoms eqssd impbii ) ABCADZBDZCZABEMABABFB
    AGLKBAFHIJ $.
    $( [3-Feb-2015] $)

  ${
    $d A x y $.
    $( Cardinal zero is not a member of a phi operation.  Theorem X.2.3 of
       [Rosser] p. 282.  (Contributed by SF, 3-Feb-2015.) $)
    0cnelphi $p |- -. 0c e. Phi A $=
      ( vy vx c0c cphi wcel cv cnnc c1c cplc cif wceq wrex wn 0cnsuc df-ne mpbi
      wne wa eqeq2d iffalse biimpac peano1 syl6eqelr iftrue eqcom syl6bb biimpd
      ex pm2.18d mpcom mto a1i nrex 0cex eqeq1 rexbidv df-phi elab2 mtbir ) DAE
      ZFDBGZHFZVBIJZVBKZLZBAMZVFBAVFNVBAFVFVDDLZVDDRVHNVBOVDDPQVCVFVHVFVCVFVCNZ
      VCVFVISVBDHVIVFDVBLVIVEVBDVCVDVBUATUBUCUDUIUJVCVFVHVCVFDVDLVHVCVEVDDVCVDV
      BUETDVDUFUGUHUKULUMUNCGZVELZBAMVGCDVAUOVJDLVKVFBAVJDVEUPUQBCAURUSUT $.
      $( [3-Feb-2015] $)
  $}

  ${
    $d A z $.  $d B z $.
    $( Lemma for ~ phi011 .  (Contributed by SF, 3-Feb-2015.) $)
    phi011lem1 $p |- ( ( Phi A u. { 0c } ) = ( Phi B u. { 0c } ) ->
      Phi A C_ Phi B ) $=
      ( vz cphi c0c csn wceq cv wcel wn ssun1 sseli eleq2 syl5ib 0cnelphi eleq1
      cun wi mtbiri wo con2i a1i elun df-sn abeq2i orbi2i bitri biimpi ord ee22
      orcomd ssrdv ) ADZEFZQZBDZUNQZGZCUMUPURCHZUMIZUSUQIZUSEGZJZUSUPIZUTUSUOIU
      RVAUMUOUSUMUNKLUOUQUSMNUTVCRURVBUTVBUTEUMIAOUSEUMPSUAUBVAVBVDVAVDVBVAVDVB
      TZVAVDUSUNIZTVEUSUPUNUCVFVBVDVBCUNCEUDUEUFUGUHUKUIUJUL $.
      $( [3-Feb-2015] $)
  $}

  $( ` ( Phi A u. { 0c } ) ` is one-to-one.  Theorem X.2.4 of [Rosser] p. 282.
     (Contributed by SF, 3-Feb-2015.) $)
  phi011 $p |- ( A = B <-> ( Phi A u. { 0c } ) = ( Phi B u. { 0c } ) ) $=
    ( wceq cphi c0c csn cun phi11 uneq1 phi011lem1 eqcoms eqssd impbii bitri
    wss ) ABCADZBDZCZPEFZGZQSGZCZABHRUBPQSIUBPQABJQPOUATBAJKLMN $.
    $( [3-Feb-2015] $)

  ${
    $d A x y z $.  $d B x y z $.
    $( The first projection operator applied to an ordered pair yields its
       first member.  Theorem X.2.7 of [Rosser] p. 282.  (Contributed by SF,
       3-Feb-2015.) $)
    proj1op $p |- Proj1 <. A , B >. = A $=
      ( vz vy vx cop cproj1 cv cphi wcel c0c cun wceq wrex wo cab eqeq1 rexbidv
      weq elab csn df-op eleq2i phiex phi11 equcom bitr3i syl6bb risset syl6bbr
      elun vex orbi12i 3bitri phieq eleq1d df-proj1 elab2 wn 0cnelphi 0cex snid
      ssun2 sselii eleq2 mpbiri mto a1i nrex biorfi 3bitr4i eqriv ) CABFZGZACHZ
      IZVMJZVOAJZVPDHZIZKUAZLZMZDBNZOZVOVNJVRVQVPEHZVTMZDANZEPZWFWBMZDBNZEPZLZJ
      VPWIJZVPWLJZOWEVMWMVPEDABUBUCVPWIWLUKWNVRWOWDWHVREVPVOCULZUDZWFVPMZWHDCSZ
      DANVRWRWGWSDAWRWGVPVTMZWSWFVPVTQWTCDSWSVOVSUECDUFUGUHRDVOAUIUJTWKWDEVPWQW
      RWJWCDBWFVPWBQRTUMUNWFIZVMJVQEVOVNWPECSXAVPVMWFVOUOUPEVMUQURWDVRWCDBWCUSV
      SBJWCKVPJZVOUTWCXBKWBJWAWBKWAVTVCKVAVBVDVPWBKVEVFVGVHVIVJVKVL $.
      $( [3-Feb-2015] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( The second projection operator applied to an ordered pair yields its
       second member.  Theorem X.2.8 of [Rosser] p. 283.  (Contributed by SF,
       3-Feb-2015.) $)
    proj2op $p |- Proj2 <. A , B >. = B $=
      ( vz vy vx cv cphi c0c cun wcel wceq wrex wo cab rexbidv elab weq 3bitr4i
      eqeq1 bitri cop cproj2 csn df-op eleq2i elun vex phiex snex phi011 equcom
      unex bitr3i rexbii risset orbi12i phieq uneq1d df-proj2 elab2 wn 0cnelphi
      eleq1d ssun2 0cex snid sselii eleq2 mpbii mto a1i nrex biorfi orcom eqriv
      ) CABUAZUBZBCFZGZHUCZIZVPJZWADFZGZKZDALZVRBJZMZVRVQJWGWBWAEFZWDKZDALZENZW
      IWDVTIZKZDBLZENZIZJZWHVPWQWAEDABUDUEWRWAWLJZWAWPJZMWHWAWLWPUFWSWFWTWGWKWF
      EWAVSVTVRCUGZUHHUIULZWIWAKZWJWEDAWIWAWDSOPWAWMKZDBLZDCQZDBLWTWGXDXFDBXDCD
      QXFVRWCUJCDUKUMUNWOXEEWAXBXCWNXDDBWIWAWMSOPDVRBUORUPTTWIGZVTIZVPJWBEVRVQX
      AECQZXHWAVPXIXGVSVTWIVRUQURVCEVPUSUTWGWGWFMWHWFWGWEDAWEVAWCAJWEHWDJZWCVBW
      EHWAJXJVTWAHVTVSVDHVEVFVGWAWDHVHVIVJVKVLVMWGWFVNTRVO $.
      $( [3-Feb-2015] $)
  $}


  $( The ordered pair theorem.  Two ordered pairs are equal iff their
     components are equal.  (Contributed by SF, 2-Jan-2015.) $)
  opth $p |- ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) $=
    ( cop wceq cproj1 proj1eq proj1op 3eqtr3g cproj2 proj2eq proj2op jca opeq12
    wa impbii ) ABEZCDEZFZACFZBDFZPTUAUBTRGSGACRSHABICDIJTRKSKBDRSLABMCDMJNACBD
    OQ $.
    $( [2-Jan-2015] $)

  $( An ordered pair is a set iff its components are sets.  (Contributed by SF,
     2-Jan-2015.) $)
  opexb $p |- ( <. A , B >. e. _V <-> ( A e. _V /\ B e. _V ) ) $=
    ( cop cvv wcel wa cproj1 proj1op proj1exg syl5eqelr cproj2 proj2op proj2exg
    jca opexg impbii ) ABCZDEZADEZBDEZFRSTRAQGDABHQDIJRBQKDABLQDMJNABDDOP $.
    $( [2-Jan-2015] $)


  ${
    $d y z w A $.  $d y z w B $.  $d x y z w $.
    nfop.1 $e |- F/_ x A $.
    nfop.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for ordered pairs.  (Contributed by
       SF, 2-Jan-2015.) $)
    nfop $p |- F/_ x <. A , B >. $=
      ( vz vw cop cv cphi wceq wrex cab c0c csn cun df-op nfv nfrex nfab nfcxfr
      nfun ) ABCHFIZGIJZKZGBLZFMZUCUDNOPKZGCLZFMZPFGBCQAUGUJUFAFUEAGBDUEARSTUIA
      FUHAGCEUHARSTUBUA $.
  $}


  ${
    $d x z $.  $d A z $.  $d B z $.  $d ph z $.
    nfopd.1 $e |- ( ph -> F/_ x A ) $.
    nfopd.2 $e |- ( ph -> F/_ x B ) $.
    $( Deduction version of bound-variable hypothesis builder ~ nfop .
       (Contributed by SF, 2-Jan-2015.) $)
    nfopd $p |- ( ph -> F/_ x <. A , B >. ) $=
      ( vz cv wcel wal cab cop wnfc nfaba1 nfop wb wa nfnfc1 wceq abidnf adantr
      nfan adantl opeq12d nfceqdf syl2anc mpbii ) ABGHZCIZBJGKZUHDIZBJGKZLZMZBC
      DLZMZBUJULUIBGNUKBGNOABCMZBDMZUNUPPEFUQURQZBUMUOUQURBBCRBDRUBUSUJCULDUQUJ
      CSURBGCTUAURULDSUQBGDTUCUDUEUFUG $.
      $( [4-Feb-2008] $)
  $}


  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    eqvinop.1 $e |- B e. _V $.
    eqvinop.2 $e |- C e. _V $.
    $( A variable introduction law for ordered pairs.  Analog of Lemma 15 of
       [Monk2] p. 109.  (Contributed by ?who?, 28-May-1995.) $)
    eqvinop $p |- ( A = <. B , C >. <-> E. x E. y ( A = <. x , y >. /\
                  <. x , y >. = <. B , C >. ) ) $=
      ( cv cop wceq wa wex opth ancom bitri anbi2i an13 exbii eqeq2d ceqsexv
      19.42v opeq2 3bitri opeq1 bitr2i ) CAHZBHZIZJZUHDEIZJZKZBLZALUFDJZCUFEIZJ
      ZKZALCUJJZUMUQAUMUNUGEJZUIKZKZBLUNUTBLZKUQULVABULUIUSUNKZKVAUKVCUIUKUNUSK
      VCUFUGDEMUNUSNOPUIUSUNQORUNUTBUAVBUPUNUIUPBEGUSUHUOCUGEUFUBSTPUCRUPURADFU
      NUOUJCUFDEUDSTUE $.
      $( [28-May-1995] $)
  $}

  ${
    $d x z w A $.  $d y z w A $.  $d z w ph $.
    $( Substitution of class ` A ` for ordered pair ` <. x , y >. ` .
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.)  (Contributed by ?who?, 27-Dec-1996.)  (Revised by
       ?who?, 25-Jul-2011.) $)
    copsexg $p |- ( A = <. x , y >. ->
                  ( ph <-> E. x E. y ( A = <. x , y >. /\ ph ) ) ) $=
      ( vz vw cv cop wceq wa wex wb wi vex 19.8a weq syl5bi syl5 weu euequ1 syl
      eqvinop ex opth anbi1i 2exbii nfe1 wal anass a1i anim2d eximd biidd drex1
      nfae sylibd exbii 19.40 nfnae dveeq2 nfd 19.9d anim1d syl6 pm2.61i exlimi
      wn equcom eubii mpbi eupick mpan com12 sylan9 sylbi impbid anbi1d 2exbidv
      eqeq1 bibi2d imbi12d mpbiri adantr exlimivv pm2.43i ) DBGZCGZHZIZAWIAJZCK
      BKZLZWIDEGZFGZHZIZWOWHIZJZFKEKWIWLMZEFDWFWGBNCNUBWRWSEFWPWSWQWPWSWQAWQAJZ
      CKZBKZLZMWQAXBWQAXBWTXAXBWTCOXABOUAUCWQEBPZFCPZJZXBAMWMWNWFWGUDZXBXFAJZCK
      ZBKZXFAWTXHBCWQXFAXGUEUFXJXDXEAJZCKZJZBKZXFAXIXNBXMBUGCBPCUHZXIXNMXOXIXMC
      KXNXOXHXMCCBCUOXHXDXKJZXOXMXDXEAUIZXOXKXLXDXKXLMXOXKCOUJUKQULXMXMCBXOXMUM
      UNUPXOVGZXIXMXNXIXPCKZXRXMXHXPCXQUQXSXDCKZXLJXRXMXDXKCURXRXTXDXLXDXRCXRXD
      CCBCUSCBEUTVAVBVCRQXMBOVDVEVFXDXNXLXEAXNXDXLXDBSZXNXDXLMBEPZBSYABETYBXDBB
      EVHVIVJXDXLBVKVLVMXLXEAXECSZXLXEAMCFPZCSYCCFTYDXECCFVHVIVJXEACVKVLVMVNRQV
      OVPWPWIWQWLXCDWOWHVSZWPWKXBAWPWJWTBCWPWIWQAYEVQVRVTWAWBWCWDVOWE $.
      $( [25-Jul-2011] $) $( [27-Dec-1996] $)
  $}


  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    $( Closed theorem form of ~ copsex2g .  (Contributed by NM,
       17-Feb-2013.) $)
    copsex2t $p |- ( ( A. x A. y ( ( x = A /\ y = B ) -> ( ph <-> ps ) )
      /\ ( A e. V /\ B e. W ) ) ->
                  ( E. x E. y ( <. A , B >. = <. x , y >. /\ ph ) <-> ps ) ) $=
      ( wcel wa cv wceq wb wal wex cop elisset nfe1 nfv nfbi anim12i eeanv nfa1
      wi sylibr nfa2 nfex opeq12 copsexg eqcoms syl adantl sp 19.21bi bitr3d ex
      imp exlimd sylan2 ) EGIZFHIZJZCKZELZDKZFLZJZABMZUDZDNZCNZVGDOZCOZEFPZVCVE
      PZLAJZDOZCOZBMZVBVDCOZVFDOZJVMUTVTVAWACEGQDFHQUAVDVFCDUBUEVKVMVSVKVLVSCVJ
      CUCVRBCVQCRBCSTVKVGVSDVIDCUFVRBDVQDCVPDRUGBDSTVKVGVSVKVGJAVRBVGAVRMZVKVGV
      OVNLWBVCEVEFUHWBVNVOACDVNUIUJUKULVKVGVHVKVIDVJCUMUNUQUOUPURURUQUS $.
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    copsex2g.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for ordered pairs.  (Contributed by NM,
       28-May-1995.) $)
    copsex2g $p |- ( ( A e. V /\ B e. W ) ->
                  ( E. x E. y ( <. A , B >. = <. x , y >. /\ ph ) <-> ps ) ) $=
      ( wcel cv wceq wex cop wa wb elisset nfe1 nfv nfbi eeanv nfex copsexg syl
      opeq12 eqcoms bitr3d exlimi sylbir syl2an ) EGJCKZELZCMZDKZFLZDMZEFNZUKUN
      NZLAOZDMZCMZBPZFHJCEGQDFHQUMUPOULUOOZDMZCMVBULUOCDUAVDVBCVABCUTCRBCSTVCVB
      DVABDUTDCUSDRUBBDSTVCAVABVCURUQLAVAPZUKEUNFUEVEUQURACDUQUCUFUDIUGUHUHUIUJ
      $.
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.  $d x y z w R $.  $d x y z w S $.
    copsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) ->
                     ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 2 ordered pairs.  (Contributed by
       ?who?, 5-Aug-1995.) $)
    copsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                      ( E. x E. y E. z E. w ( ( <. A , B >. = <. x , y >. /\
                      <. C , D >. = <. z , w >. ) /\ ph ) <-> ps ) ) $=
      ( cop cv wceq wa wex wcel eqcom opth anbi12i anbi1i 2exbii cgsex4g syl5bb
      bitri id ) GHNZCOZDOZNZPZIJNZEOZFOZNZPZQZAQZFRERZDRCRUJGPUKHPQZUOIPUPJPQZ
      QZAQZFRERZDRCRGKSHLSQIKSJLSQQBVAVFCDUTVEEFUSVDAUMVBURVCUMULUIPVBUIULTUJUK
      GHUAUGURUQUNPVCUNUQTUOUPIJUAUGUBUCUDUDABVDCDEFGHIJKLVDUHMUEUF $.
      $( [5-Aug-1995] $)
  $}


  ${
    $d A z w t u v $.  $d B z w t u v $.  $d C t z $.
    $( Express equality to an ordered pair.  (Contributed by ?who?,
       6-Jan-2015.) $)
    eqop $p |- ( A = <. B , C >. <->
       A. z ( z e. A <->
          ( E. t e. B z = Phi t \/ E. t e. C z = ( Phi t u. { 0c } ) ) ) ) $=
      ( cop wceq cv wcel wb wal cphi wrex c0c csn cun wo cab bitri abid orbi12i
      dfcleq df-op eleq2i elun bibi2i albii ) CDEFZGAHZCIZUIUHIZJZAKUJUIBHLZGBD
      MZUIUMNOPGBEMZQZJZAKACUHUBULUQAUKUPUJUKUIUNARZIZUIUOARZIZQZUPUKUIURUTPZIV
      BUHVCUIABDEUCUDUIURUTUESUSUNVAUOUNATUOATUASUFUGS $.
      $( [6-Jan-2015] $)
  $}


  ${
    $d x y z A $.
    $( "At most one" remains true inside ordered pair quantification.
       (Contributed by NM, 28-Aug-2007.) $)
    mosubopt $p |- ( A. y A. z E* x ph ->
                 E* x E. y E. z ( A = <. y , z >. /\ ph ) ) $=
      ( wmo wal cv cop wceq wex wa nfa1 nfe1 nfmo wi nfex sps exlimd wn copsexg
      mobidv biimpcd simpl 2eximi exlimiv con3i exmo ori syl pm2.61d1 ) ABFZDGZ
      CGZECHDHIJZDKZCKZUOALZDKZCKZBFZUNUPVACUMCMUTCBUSCNOUMUPVAPCUMUOVADULDMUTD
      BUSDCURDNQOULUOVAPDUOULVAUOAUTBACDEUAUBUCRSRSUQTUTBKZTVAVBUQUTUQBURUOCDUO
      AUDUEUFUGVBVAUTBUHUIUJUK $.
  $}


  ${
    $d x y z A $.
    mosubop.1 $e |- E* x ph $.
    $( "At most one" remains true inside ordered pair quantification.
       (Contributed by ?who?, 28-May-1995.) $)
    mosubop $p |- E* x E. y E. z ( A = <. y , z >. /\ ph ) $=
      ( wmo wal cv cop wceq wa wex gen2 mosubopt ax-mp ) ABGZDHCHECIDIJKALDMCMB
      GQCDFNABCDEOP $.
      $( [28-May-1995] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( The phi operation distributes over union.  (Contributed by SF,
       20-Feb-2015.) $)
    phiun $p |- Phi ( A u. B ) = ( Phi A u. Phi B ) $=
      ( vx vy cv cnnc wcel c1c cplc cif wceq cun wrex cab wo rexun abbii df-phi
      cphi uneq12i unab eqtri 3eqtr4i ) CEDEZFGUDHIUDJKZDABLZMZCNUEDAMZUEDBMZOZ
      CNZUFSASZBSZLZUGUJCUEDABPQDCUFRUNUHCNZUICNZLUKULUOUMUPDCARDCBRTUHUICUAUBU
      C $.
      $( [20-Feb-2015] $)

    $( The phi operation applied to a set disjoint from the naturals has no
       effect.  (Contributed by SF, 20-Feb-2015.) $)
    phidisjnn $p |- ( ( A i^i Nn ) = (/) -> Phi A = A ) $=
      ( vx vy cnnc cin c0 wceq cv wcel c1c cplc cif wrex wb wal cphi wa syl6bbr
      weq wn wral disj biimpi r19.21bi iffalse syl eqeq2d equcom risset alrimiv
      rexbidva cab df-phi eqeq1i abeq1 bitri sylibr ) ADEFGZBHZCHZDIZUTJKZUTLZG
      ZCAMZUSAIZNZBOZAPZAGZURVGBURVECBSZCAMVFURVDVKCAURUTAIQZVDBCSVKVLVCUTUSVLV
      ATZVCUTGURVMCAURVMCAUACADUBUCUDVAVBUTUEUFUGCBUHRUKCUSAUIRUJVJVEBULZAGVHVI
      VNACBAUMUNVEBAUOUPUQ $.
      $( [20-Feb-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include ordered-pair class abstraction (class
     builder). $)
  copab $a class { <. x , y >. | ph } $.

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Define the class abstraction of a collection of ordered pairs.
       Definition 3.3 of [Monk1] p. 34.  Usually ` x ` and ` y ` are distinct,
       although the definition doesn't strictly require it (see ~ dfid2 for a
       case where they are not distinct).  The brace notation is called "class
       abstraction" by Quine; it is also (more commonly) called a "class
       builder" in the literature. $)
    df-opab $a |- { <. x , y >. | ph } =
                  { z | E. x E. y ( z = <. x , y >. /\ ph ) } $.
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.  $d z ch $.
    opabbid.1 $e |- F/ x ph $.
    opabbid.2 $e |- F/ y ph $.
    opabbid.3 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule).  (Contributed by NM, 21-Feb-2004.)  (Proof shortened by Andrew
       Salmon, 9-Jul-2011.) $)
    opabbid $p |- ( ph -> { <. x , y >. | ps } = { <. x , y >. | ch } ) $=
      ( vz cv cop wceq wa wex cab copab anbi2d exbid abbidv df-opab 3eqtr4g ) A
      IJDJEJKLZBMZENZDNZIOUBCMZENZDNZIOBDEPCDEPAUEUHIAUDUGDFAUCUFEGABCUBHQRRSBD
      EITCDEITUA $.
  $}

  ${
    $d x ph $.  $d y z ph $.  $d z ps $.  $d z ch $.
    opabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule).  (Contributed by NM, 15-May-1995.) $)
    opabbidv $p |- ( ph -> { <. x , y >. | ps } = { <. x , y >. | ch } ) $=
      ( nfv opabbid ) ABCDEADGAEGFH $.
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.
    opabbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions.  (Contributed by ?who?,
       15-May-1995.)  (Revised by ?who?, 25-Jul-2011.) $)
    opabbii $p |- { <. x , y >. | ph } = { <. x , y >. | ps } $=
      ( vz cv wceq copab eqid wb a1i opabbidv ax-mp ) FGZOHZACDIBCDIHOJPABCDABK
      PELMN $.
      $( [25-Jul-2011] $) $( [15-May-1995] $)
  $}

  ${
    $d x z w $.  $d y z w $.  $d ph w $.
    nfopab.1 $e |- F/ z ph $.
    $( Bound-variable hypothesis builder for class abstraction.  (Contributed
       by NM, 1-Sep-1999.)  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    nfopab $p |- F/_ z { <. x , y >. | ph } $=
      ( vw copab cv cop wceq wa wex cab df-opab nfv nfan nfex nfab nfcxfr ) DAB
      CGFHBHCHIJZAKZCLZBLZFMABCFNUCDFUBDBUADCTADTDOEPQQRS $.
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( The first abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free.  (Contributed by NM,
       16-May-1995.)  (Revised by Mario Carneiro, 14-Oct-2016.) $)
    nfopab1 $p |- F/_ x { <. x , y >. | ph } $=
      ( vz copab cv cop wceq wa wex cab df-opab nfe1 nfab nfcxfr ) BABCEDFBFCFG
      HAICJZBJZDKABCDLQBDPBMNO $.

    $( The second abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free.  (Contributed by NM,
       16-May-1995.)  (Revised by Mario Carneiro, 14-Oct-2016.) $)
    nfopab2 $p |- F/_ y { <. x , y >. | ph } $=
      ( vz copab cv cop wceq wa wex cab df-opab nfe1 nfex nfab nfcxfr ) CABCEDF
      BFCFGHAIZCJZBJZDKABCDLSCDRCBQCMNOP $.
  $}

  ${
    $d x y z w v $.  $d v ph $.  $d v ps $.
    cbvopab.1 $e |- F/ z ph $.
    cbvopab.2 $e |- F/ w ph $.
    cbvopab.3 $e |- F/ x ps $.
    cbvopab.4 $e |- F/ y ps $.
    cbvopab.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution.  (Contributed by NM,
       14-Sep-2003.) $)
    cbvopab $p |- { <. x , y >. | ph } = { <. z , w >. | ps } $=
      ( vv cv cop wceq wa wex cab nfv nfan copab weq opeq12 eqeq2d cbvex2 abbii
      anbi12d df-opab 3eqtr4i ) LMZCMZDMZNZOZAPZDQCQZLRUJEMZFMZNZOZBPZFQEQZLRAC
      DUABEFUAUPVBLUOVACDEFUNAEUNESGTUNAFUNFSHTUTBCUTCSITUTBDUTDSJTCEUBDFUBPZUN
      UTABVCUMUSUJUKUQULURUCUDKUGUEUFACDLUHBEFLUHUI $.
  $}

  ${
    $d x y z w $.  $d z w v ph $.  $d x y v ps $.
    cbvopabv.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution.  (Contributed by NM,
       15-Oct-1996.) $)
    cbvopabv $p |- { <. x , y >. | ph } = { <. z , w >. | ps } $=
      ( nfv cbvopab ) ABCDEFAEHAFHBCHBDHGI $.
  $}

  ${
    $d v w x y $.  $d v w y z $.  $d v w ph $.  $d v w ps $.
    cbvopab1.1 $e |- F/ z ph $.
    cbvopab1.2 $e |- F/ x ps $.
    cbvopab1.3 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution.  (Contributed by NM, 6-Oct-2004.)  (Revised by
       Mario Carneiro, 14-Oct-2016.) $)
    cbvopab1 $p |- { <. x , y >. | ph } = { <. z , y >. | ps } $=
      ( vw vv cv cop wceq wa wex cab copab wsb nfv nfan nfs1v nfex opeq1 eqeq2d
      sbequ12 anbi12d exbidv cbvex nfsb sbequ sbie syl6bb bitri df-opab 3eqtr4i
      abbii ) IKZCKZDKZLZMZANZDOZCOZIPUQEKZUSLZMZBNZDOZEOZIPACDQBEDQVDVJIVDUQJK
      ZUSLZMZACJRZNZDOZJOVJVCVPCJVCJSVOCDVMVNCVMCSACJUATUBURVKMZVBVODVQVAVMAVNV
      QUTVLUQURVKUSUCUDACJUEUFUGUHVPVIJEVOEDVMVNEVMESACJEFUITUBVIJSVKVEMZVOVHDV
      RVMVGVNBVRVLVFUQVKVEUSUCUDVRVNACERBAJECUJABCEGHUKULUFUGUHUMUPACDIUNBEDIUN
      UO $.
  $}

  ${
    $d w x y z $.  $d w ph $.  $d w ps $.
    cbvopab2.1 $e |- F/ z ph $.
    cbvopab2.2 $e |- F/ y ps $.
    cbvopab2.3 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Change second bound variable in an ordered-pair class abstraction, using
       explicit substitution.  (Contributed by NM, 22-Aug-2013.) $)
    cbvopab2 $p |- { <. x , y >. | ph } = { <. x , z >. | ps } $=
      ( vw cv cop wceq wa wex cab copab nfv nfan opeq2 df-opab anbi12d 3eqtr4i
      eqeq2d cbvex exbii abbii ) IJZCJZDJZKZLZAMZDNZCNZIOUGUHEJZKZLZBMZENZCNZIO
      ACDPBCEPUNUTIUMUSCULURDEUKAEUKEQFRUQBDUQDQGRUIUOLZUKUQABVAUJUPUGUIUOUHSUC
      HUAUDUEUFACDITBCEITUB $.
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution.  (Contributed by NM, 31-Jul-2003.) $)
    cbvopab1s $p |- { <. x , y >. | ph } = { <. z , y >. | [ z / x ] ph } $=
      ( vw cv cop wceq wa wex cab wsb copab nfv nfs1v nfan opeq1 eqeq2d df-opab
      nfex sbequ12 anbi12d exbidv cbvex abbii 3eqtr4i ) EFZBFZCFZGZHZAIZCJZBJZE
      KUGDFZUIGZHZABDLZIZCJZDJZEKABCMURDCMUNVAEUMUTBDUMDNUSBCUQURBUQBNABDOPTUHU
      OHZULUSCVBUKUQAURVBUJUPUGUHUOUIQRABDUAUBUCUDUEABCESURDCESUF $.
  $}

  ${
    $d x y $.  $d y z $.  $d z ph $.  $d x ps $.
    cbvopab1v.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the first bound variable in an ordered pair
       abstraction, using implicit substitution.  (Contributed by NM,
       31-Jul-2003.)  (Proof shortened by Eric Schmidt, 4-Apr-2007.) $)
    cbvopab1v $p |- { <. x , y >. | ph } = { <. z , y >. | ps } $=
      ( nfv cbvopab1 ) ABCDEAEGBCGFH $.
  $}

  ${
    $d x y z w $.  $d z w ph $.  $d y w ps $.
    cbvopab2v.1 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the second bound variable in an ordered pair
       abstraction, using implicit substitution.  (Contributed by NM,
       2-Sep-1999.) $)
    cbvopab2v $p |- { <. x , y >. | ph } = { <. x , z >. | ps } $=
      ( vw cv cop wceq wex cab copab opeq2 eqeq2d anbi12d cbvexv exbii df-opab
      wa abbii 3eqtr4i ) GHZCHZDHZIZJZATZDKZCKZGLUCUDEHZIZJZBTZEKZCKZGLACDMBCEM
      UJUPGUIUOCUHUNDEUEUKJZUGUMABUQUFULUCUEUKUDNOFPQRUAACDGSBCEGSUB $.
  $}


  ${
    $d w y z A $.  $d w ph $.  $d w x y z $.
    $( Move substitution into a class abstraction.  (Contributed by NM,
       6-Aug-2007.)  (Proof shortened by Mario Carneiro, 17-Nov-2016.) $)
    csbopabg $p |- ( A e. V -> [_ A / x ]_ { <. y , z >. | ph } =
               { <. y , z >. | [. A / x ]. ph } ) $=
      ( vw cv copab csb wsb wceq wsbc csbeq1 dfsbcq2 opabbidv eqeq12d vex nfs1v
      nfopab sbequ12 csbief vtoclg ) BGHZACDIZJZABGKZCDIZLBEUEJZABEMZCDIZLGEFUD
      ELZUFUIUHUKBUDEUENULUGUJCDABGEOPQBUDUEUHGRUGCDBABGSTBHUDLAUGCDABGUAPUBUC
      $.
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    $( Union of two ordered pair class abstractions.  (Contributed by ?who?,
       30-Sep-2002.) $)
    unopab $p |- ( { <. x , y >. | ph } u. { <. x , y >. | ps } ) =
               { <. x , y >. | ( ph \/ ps ) } $=
      ( vz cv cop wceq wa wex cab wo copab unab 19.43 andi exbii bitr2i df-opab
      cun bitr3i abbii eqtri uneq12i 3eqtr4i ) EFCFDFGHZAIZDJZCJZEKZUFBIZDJZCJZ
      EKZTZUFABLZIZDJZCJZEKZACDMZBCDMZTUPCDMUOUIUMLZEKUTUIUMENVCUSEVCUHULLZCJUS
      UHULCOVDURCURUGUKLZDJVDUQVEDUFABPQUGUKDORQUAUBUCVAUJVBUNACDESBCDESUDUPCDE
      SUE $.
      $( [30-Sep-2002] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Binary relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include the general binary relation predicate.
     Note that the syntax is simply three class symbols in a row.  Since binary
     relations are the only possible wff expressions consisting of three class
     expressions in a row, the syntax is unambiguous. $)
  wbr $a wff A R B $.

  $( Define a general binary relation.  Note that the syntax is simply three
     class symbols in a row.  Definition 6.18 of [TakeutiZaring] p. 29
     generalized to arbitrary classes.  Class ` R ` normally denotes a relation
     that compares two classes ` A ` and ` B ` .  This definition is
     well-defined, although not very meaningful, when classes ` A ` and/or
     ` B ` are proper classes (i.e. are not sets).  On the other hand, we often
     find uses for this definition when ` R ` is a proper class. $)
  df-br $a |- ( A R B <-> <. A , B >. e. R ) $.

  $( Equality theorem for binary relations.  (Contributed by ?who?,
     4-Jun-1995.) $)
  breq $p |- ( R = S -> ( A R B <-> A S B ) ) $=
    ( wceq cop wcel wbr eleq2 df-br 3bitr4g ) CDEABFZCGLDGABCHABDHCDLIABCJABDJK
    $.
    $( [4-Jun-1995] $)

  $( Equality theorem for a binary relation.  (Contributed by ?who?,
     31-Dec-1993.) $)
  breq1 $p |- ( A = B -> ( A R C <-> B R C ) ) $=
    ( wceq cop wcel wbr opeq1 eleq1d df-br 3bitr4g ) ABEZACFZDGBCFZDGACDHBCDHMN
    ODABCIJACDKBCDKL $.
    $( [31-Dec-1993] $)

  $( Equality theorem for a binary relation.  (Contributed by ?who?,
     31-Dec-1993.) $)
  breq2 $p |- ( A = B -> ( C R A <-> C R B ) ) $=
    ( wceq cop wcel wbr opeq2 eleq1d df-br 3bitr4g ) ABEZCAFZDGCBFZDGCADHCBDHMN
    ODABCIJCADKCBDKL $.
    $( [31-Dec-1993] $)

  $( Equality theorem for a binary relation.  (Contributed by ?who?,
     8-Feb-1996.) $)
  breq12 $p |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) $=
    ( wceq wbr breq1 breq2 sylan9bb ) ABFACEGBCEGCDFBDEGABCEHCDBEIJ $.
    $( [8-Feb-1996] $)

  ${
    breqi.1 $e |- R = S $.
    $( Equality inference for binary relations.  (Contributed by ?who?,
       19-Feb-2005.) $)
    breqi $p |- ( A R B <-> A S B ) $=
      ( wceq wbr wb breq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [19-Feb-2005] $)
  $}

  ${
    breq1i.1 $e |- A = B $.
    $( Equality inference for a binary relation.  (Contributed by ?who?,
       8-Feb-1996.) $)
    breq1i $p |- ( A R C <-> B R C ) $=
      ( wceq wbr wb breq1 ax-mp ) ABFACDGBCDGHEABCDIJ $.
      $( [8-Feb-1996] $)

    $( Equality inference for a binary relation.  (Contributed by ?who?,
       8-Feb-1996.) $)
    breq2i $p |- ( C R A <-> C R B ) $=
      ( wceq wbr wb breq2 ax-mp ) ABFCADGCBDGHEABCDIJ $.
      $( [8-Feb-1996] $)

    ${
      breq12i.2 $e |- C = D $.
      $( Equality inference for a binary relation.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.)  (Contributed by ?who?, 8-Feb-1996.)
         (Revised by ?who?, 4-Apr-2007.) $)
      breq12i $p |- ( A R C <-> B R D ) $=
        ( wceq wbr wb breq12 mp2an ) ABHCDHACEIBDEIJFGABCDEKL $.
        $( [4-Apr-2007] $) $( [8-Feb-1996] $)
    $}
  $}

  ${
    breq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for a binary relation.  (Contributed by ?who?,
       8-Feb-1996.) $)
    breq1d $p |- ( ph -> ( A R C <-> B R C ) ) $=
      ( wceq wbr wb breq1 syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [8-Feb-1996] $)

    $( Equality deduction for a binary relation.  (Contributed by ?who?,
       29-Oct-2011.) $)
    breqd $p |- ( ph -> ( C A D <-> C B D ) ) $=
      ( wceq wbr wb breq syl ) ABCGDEBHDECHIFDEBCJK $.
      $( [29-Oct-2011] $)

    $( Equality deduction for a binary relation.  (Contributed by ?who?,
       8-Feb-1996.) $)
    breq2d $p |- ( ph -> ( C R A <-> C R B ) ) $=
      ( wceq wbr wb breq2 syl ) ABCGDBEHDCEHIFBCDEJK $.
      $( [8-Feb-1996] $)

    ${
      breq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for a binary relation.  (The proof was shortened by
         Andrew Salmon, 9-Jul-2011.)  (Contributed by ?who?, 8-Feb-1996.)
         (Revised by ?who?, 9-Jul-2011.) $)
      breq12d $p |- ( ph -> ( A R C <-> B R D ) ) $=
        ( wceq wbr wb breq12 syl2anc ) ABCIDEIBDFJCEFJKGHBCDEFLM $.
        $( [9-Jul-2011] $) $( [8-Feb-1996] $)
    $}

    ${
      breq123d.2 $e |- ( ph -> R = S ) $.
      breq123d.3 $e |- ( ph -> C = D ) $.
      $( Equality deduction for a binary relation.  (Contributed by ?who?,
         29-Oct-2011.) $)
      breq123d $p |- ( ph -> ( A R C <-> B S D ) ) $=
        ( wbr breq12d breqd bitrd ) ABDFKCEFKCEGKABCDEFHJLAFGCEIMN $.
        $( [29-Oct-2011] $)
    $}

    ${
      breqan12i.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for a binary relation.  (Contributed by ?who?,
         8-Feb-1996.) $)
      breqan12d $p |- ( ( ph /\ ps ) -> ( A R C <-> B R D ) ) $=
        ( wceq wbr wb breq12 syl2an ) ACDJEFJCEGKDFGKLBHICDEFGMN $.
        $( [8-Feb-1996] $)

      $( Equality deduction for a binary relation.  (Contributed by ?who?,
         8-Feb-1996.) $)
      breqan12rd $p |- ( ( ps /\ ph ) -> ( A R C <-> B R D ) ) $=
        ( wbr wb breqan12d ancoms ) ABCEGJDFGJKABCDEFGHILM $.
        $( [8-Feb-1996] $)
    $}
  $}

  $( Two classes are different if they don't have the same relationship to a
     third class.  (Contributed by ?who?, 3-Jun-2012.) $)
  nbrne1 $p |- ( ( A R B /\ -. A R C ) -> B =/= C ) $=
    ( wbr wn wne wceq breq2 biimpcd necon3bd imp ) ABDEZACDEZFBCGMNBCBCHMNBCADI
    JKL $.
    $( [3-Jun-2012] $)

  $( Two classes are different if they don't have the same relationship to a
     third class.  (Contributed by ?who?, 3-Jun-2012.) $)
  nbrne2 $p |- ( ( A R C /\ -. B R C ) -> A =/= B ) $=
    ( wbr wn wne wceq breq1 biimpcd necon3bd imp ) ACDEZBCDEZFABGMNABABHMNABCDI
    JKL $.
    $( [3-Jun-2012] $)

  ${
    eqbrtr.1 $e |- A = B $.
    eqbrtr.2 $e |- B R C $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 5-Aug-1993.) $)
    eqbrtri $p |- A R C $=
      ( wbr breq1i mpbir ) ACDGBCDGFABCDEHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqbrtrd.1 $e |- ( ph -> A = B ) $.
    eqbrtrd.2 $e |- ( ph -> B R C ) $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 8-Oct-1999.) $)
    eqbrtrd $p |- ( ph -> A R C ) $=
      ( wbr breq1d mpbird ) ABDEHCDEHGABCDEFIJ $.
      $( [8-Oct-1999] $)
  $}

  ${
    eqbrtrr.1 $e |- A = B $.
    eqbrtrr.2 $e |- A R C $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 5-Aug-1993.) $)
    eqbrtrri $p |- B R C $=
      ( eqcomi eqbrtri ) BACDABEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqbrtrrd.1 $e |- ( ph -> A = B ) $.
    eqbrtrrd.2 $e |- ( ph -> A R C ) $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 24-Oct-1999.) $)
    eqbrtrrd $p |- ( ph -> B R C ) $=
      ( eqcomd eqbrtrd ) ACBDEABCFHGI $.
      $( [24-Oct-1999] $)
  $}

  ${
    breqtr.1 $e |- A R B $.
    breqtr.2 $e |- B = C $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 5-Aug-1993.) $)
    breqtri $p |- A R C $=
      ( wbr breq2i mpbi ) ABDGACDGEBCADFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    breqtrd.1 $e |- ( ph -> A R B ) $.
    breqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 24-Oct-1999.) $)
    breqtrd $p |- ( ph -> A R C ) $=
      ( wbr breq2d mpbid ) ABCEHBDEHFACDBEGIJ $.
      $( [24-Oct-1999] $)
  $}

  ${
    breqtrr.1 $e |- A R B $.
    breqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 5-Aug-1993.) $)
    breqtrri $p |- A R C $=
      ( eqcomi breqtri ) ABCDECBFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    breqtrrd.1 $e |- ( ph -> A R B ) $.
    breqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into a binary relation.  (Contributed by
       ?who?, 24-Oct-1999.) $)
    breqtrrd $p |- ( ph -> A R C ) $=
      ( eqcomd breqtrd ) ABCDEFADCGHI $.
      $( [24-Oct-1999] $)
  $}

  ${
    3brtr3.1 $e |- A R B $.
    3brtr3.2 $e |- A = C $.
    3brtr3.3 $e |- B = D $.
    $( Substitution of equality into both sides of a binary relation.
       (Contributed by ?who?, 11-Aug-1999.) $)
    3brtr3i $p |- C R D $=
      ( eqbrtrri breqtri ) CBDEACBEGFIHJ $.
      $( [11-Aug-1999] $)
  $}

  ${
    3brtr4.1 $e |- A R B $.
    3brtr4.2 $e |- C = A $.
    3brtr4.3 $e |- D = B $.
    $( Substitution of equality into both sides of a binary relation.
       (Contributed by ?who?, 11-Aug-1999.) $)
    3brtr4i $p |- C R D $=
      ( eqbrtri breqtrri ) CBDECABEGFIHJ $.
      $( [11-Aug-1999] $)
  $}

  ${
    3brtr3d.1 $e |- ( ph -> A R B ) $.
    3brtr3d.2 $e |- ( ph -> A = C ) $.
    3brtr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a binary relation.
       (Contributed by ?who?, 18-Oct-1999.) $)
    3brtr3d $p |- ( ph -> C R D ) $=
      ( wbr breq12d mpbid ) ABCFJDEFJGABDCEFHIKL $.
      $( [18-Oct-1999] $)
  $}

  ${
    3brtr4d.1 $e |- ( ph -> A R B ) $.
    3brtr4d.2 $e |- ( ph -> C = A ) $.
    3brtr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a binary relation.
       (Contributed by ?who?, 21-Feb-2005.) $)
    3brtr4d $p |- ( ph -> C R D ) $=
      ( wbr breq12d mpbird ) ADEFJBCFJGADBECFHIKL $.
      $( [21-Feb-2005] $)
  $}

  ${
    3brtr3g.1 $e |- ( ph -> A R B ) $.
    3brtr3g.2 $e |- A = C $.
    3brtr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a binary relation.
       (Contributed by ?who?, 16-Jan-1997.) $)
    3brtr3g $p |- ( ph -> C R D ) $=
      ( wbr breq12i sylib ) ABCFJDEFJGBDCEFHIKL $.
      $( [16-Jan-1997] $)
  $}

  ${
    3brtr4g.1 $e |- ( ph -> A R B ) $.
    3brtr4g.2 $e |- C = A $.
    3brtr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a binary relation.
       (Contributed by ?who?, 16-Jan-1997.) $)
    3brtr4g $p |- ( ph -> C R D ) $=
      ( wbr breq12i sylibr ) ABCFJDEFJGDBECFHIKL $.
      $( [16-Jan-1997] $)
  $}

  ${
    syl5eqbr.1 $e |- A = B $.
    syl5eqbr.2 $e |- ( ph -> B R C ) $.
    $( B chained equality inference for a binary relation.  (Contributed by
       ?who?, 11-Oct-1999.) $)
    syl5eqbr $p |- ( ph -> A R C ) $=
      ( eqid 3brtr4g ) ACDBDEGFDHI $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl5eqbrr.1 $e |- B = A $.
    syl5eqbrr.2 $e |- ( ph -> B R C ) $.
    $( B chained equality inference for a binary relation.  (Contributed by
       ?who?, 17-Sep-2004.) $)
    syl5eqbrr $p |- ( ph -> A R C ) $=
      ( eqid 3brtr3g ) ACDBDEGFDHI $.
      $( [17-Sep-2004] $)
  $}

  ${
    syl5breq.1 $e |- A R B $.
    syl5breq.2 $e |- ( ph -> B = C ) $.
    $( B chained equality inference for a binary relation.  (Contributed by
       ?who?, 11-Oct-1999.) $)
    syl5breq $p |- ( ph -> A R C ) $=
      ( wbr a1i breqtrd ) ABCDEBCEHAFIGJ $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl5breqr.1 $e |- A R B $.
    syl5breqr.2 $e |- ( ph -> C = B ) $.
    $( B chained equality inference for a binary relation.  (Contributed by
       ?who?, 24-Apr-2005.) $)
    syl5breqr $p |- ( ph -> A R C ) $=
      ( eqcomd syl5breq ) ABCDEFADCGHI $.
      $( [24-Apr-2005] $)
  $}

  ${
    syl6eqbr.1 $e |- ( ph -> A = B ) $.
    syl6eqbr.2 $e |- B R C $.
    $( A chained equality inference for a binary relation.  (Contributed by
       ?who?, 12-Oct-1999.) $)
    syl6eqbr $p |- ( ph -> A R C ) $=
      ( wbr breq1d mpbiri ) ABDEHCDEHGABCDEFIJ $.
      $( [12-Oct-1999] $)
  $}

  ${
    syl6eqbrr.1 $e |- ( ph -> B = A ) $.
    syl6eqbrr.2 $e |- B R C $.
    $( A chained equality inference for a binary relation.  (Contributed by
       ?who?, 4-Jan-2006.) $)
    syl6eqbrr $p |- ( ph -> A R C ) $=
      ( eqcomd syl6eqbr ) ABCDEACBFHGI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6breq.1 $e |- ( ph -> A R B ) $.
    syl6breq.2 $e |- B = C $.
    $( A chained equality inference for a binary relation.  (Contributed by
       ?who?, 11-Oct-1999.) $)
    syl6breq $p |- ( ph -> A R C ) $=
      ( eqid 3brtr3g ) ABCBDEFBHGI $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl6breqr.1 $e |- ( ph -> A R B ) $.
    syl6breqr.2 $e |- C = B $.
    $( A chained equality inference for a binary relation.  (Contributed by
       ?who?, 24-Apr-2005.) $)
    syl6breqr $p |- ( ph -> A R C ) $=
      ( eqcomi syl6breq ) ABCDEFDCGHI $.
      $( [24-Apr-2005] $)
  $}


  ${
    ssbrd.1 $e |- ( ph -> A C_ B ) $.
    $( Deduction from a subclass relationship of binary relations.
       (Contributed by ?who?, 30-Apr-2004.) $)
    ssbrd $p |- ( ph -> ( C A D -> C B D ) ) $=
      ( cop wcel wbr sseld df-br 3imtr4g ) ADEGZBHMCHDEBIDECIABCMFJDEBKDECKL $.
      $( [30-Apr-2004] $)
  $}

  ${
    ssbri.1 $e |- A C_ B $.
    $( Inference from a subclass relationship of binary relations.  (The proof
       was shortened by Andrew Salmon, 9-Jul-2011.)  (Contributed by ?who?,
       28-Mar-2007.)  (Revised by ?who?, 9-Jul-2011.) $)
    ssbri $p |- ( C A D -> C B D ) $=
      ( wss wbr wi ssid a1i ssbrd ax-mp ) AAFZCDAGCDBGHAIMABCDABFMEJKL $.
      $( [9-Jul-2011] $) $( [28-Mar-2007] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z R $.  $d x y z $.  $d y ph $.
    nfbrd.2 $e |- ( ph -> F/_ x A ) $.
    nfbrd.3 $e |- ( ph -> F/_ x R ) $.
    nfbrd.4 $e |- ( ph -> F/_ x B ) $.
    $( Deduction version of bound-variable hypothesis builder ~ nfbr .
       (Contributed by NM, 13-Dec-2005.)  (Revised by Mario Carneiro,
       14-Oct-2016.) $)
    nfbrd $p |- ( ph -> F/ x A R B ) $=
      ( wbr cop wcel df-br nfopd nfeld nfxfrd ) CDEICDJZEKABCDELABPEABCDFHMGNO
      $.
  $}

  ${
    $d y A $.  $d y B $.  $d y R $.  $d x y $.
    nfbr.1 $e |- F/_ x A $.
    nfbr.2 $e |- F/_ x R $.
    nfbr.3 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for binary relation.  (Contributed by
       NM, 1-Sep-1999.)  (Revised by Mario Carneiro, 14-Oct-2016.) $)
    nfbr $p |- F/ x A R B $=
      ( wbr wnf wtru wnfc a1i nfbrd trud ) BCDHAIJABCDABKJELADKJFLACKJGLMN $.
  $}


  ${
    $d x y $.  $d y z A $.  $d y z R $.
    $( Relationship between a binary relation and a class abstraction.
       (Contributed by Andrew Salmon, 8-Jul-2011.) $)
    brab1 $p |- ( x R A <-> x e. { z | z R A } ) $=
      ( vy cv wbr wsbc cab wcel cvv wb vex breq1 sbcie2g ax-mp df-sbc bitr3i )
      AFZCDGZBFZCDGZBSHZSUBBIJSKJUCTLAMUBEFZCDGTBESKUAUDCDNUDSCDNOPUBBSQR $.
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z D $.  $d y z R $.
    $d x y z $.
    $( Move substitution in and out of a binary relation.  (Contributed by NM,
       13-Dec-2005.)  (Proof shortened by Andrew Salmon, 9-Jul-2011.) $)
    sbcbrg $p |- ( A e. D -> ( [. A / x ]. B R C <->
           [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) $=
      ( vy wbr wsb cv csb wsbc dfsbcq2 wceq csbeq1 breq123d nfcsb1v weq csbeq1a
      nfbr sbie vtoclbg ) CDFHZAGIAGJZCKZAUDDKZAUDFKZHZUCABLABCKZABDKZABFKZHGBE
      UCAGBMUDBNUEUIUFUJUGUKAUDBCOAUDBFOAUDBDOPUCUHAGAUEUFUGAUDCQAUDFQAUDDQTAGR
      CUEDUFFUGAUDCSAUDFSAUDDSPUAUB $.
  $}

  ${
    $d y A $.  $d y C $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation.  (Contributed by NM,
       13-Dec-2005.) $)
    sbcbr12g $p |- ( A e. D ->
                 ( [. A / x ]. B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) $=
      ( wcel wbr wsbc csb sbcbrg csbconstg breqd bitrd ) BEGZCDFHABIABCJZABDJZA
      BFJZHPQFHABCDEFKORFPQABFELMN $.
  $}

  ${
    $d y A $.  $d x y C $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation.  (Contributed by NM,
       13-Dec-2005.) $)
    sbcbr1g $p |- ( A e. D ->
                  ( [. A / x ]. B R C <-> [_ A / x ]_ B R C ) ) $=
      ( wcel wbr wsbc csb sbcbr12g csbconstg breq2d bitrd ) BEGZCDFHABIABCJZABD
      JZFHPDFHABCDEFKOQDPFABDELMN $.
  $}

  ${
    $d y A $.  $d x y B $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation.  (Contributed by NM,
       13-Dec-2005.) $)
    sbcbr2g $p |- ( A e. D ->
                  ( [. A / x ]. B R C <-> B R [_ A / x ]_ C ) ) $=
      ( wcel wbr wsbc csb sbcbr12g csbconstg breq1d bitrd ) BEGZCDFHABIABCJZABD
      JZFHCQFHABCDEFKOPCQFABCELMN $.
  $}

  $( Binary relationship implies sethood of both parts.  (Contributed by SF,
     7-Jan-2015.) $)
  brex $p |- ( A R B -> ( A e. _V /\ B e. _V ) ) $=
    ( cop wcel cvv wbr wa elex df-br opexb bicomi 3imtr4i ) ABDZCENFEZABCGAFEBF
    EHZNCIABCJOPABKLM $.
    $( [7-Jan-2015] $)


  $( The union of two binary relations.  (Contributed by NM, 21-Dec-2008.) $)
  brun $p |- ( A ( R u. S ) B <-> ( A R B \/ A S B ) ) $=
    ( cop cun wcel wo wbr elun df-br orbi12i 3bitr4i ) ABEZCDFZGNCGZNDGZHABOIAB
    CIZABDIZHNCDJABOKRPSQABCKABDKLM $.
    $( [21-Dec-2008] $)

  $( The intersection of two relations.  (Contributed by FL, 7-Oct-2008.) $)
  brin $p |- ( A ( R i^i S ) B <-> ( A R B /\ A S B ) ) $=
    ( cop cin wcel wa wbr elin df-br anbi12i 3bitr4i ) ABEZCDFZGNCGZNDGZHABOIAB
    CIZABDIZHNCDJABOKRPSQABCKABDKLM $.
    $( [1-Dec-2010] $) $( [6-Oct-2008] $)

  $( The difference of two binary relations.  (Contributed by Scott Fenton,
     11-Apr-2011.) $)
  brdif $p |- ( A ( R \ S ) B <-> ( A R B /\ -. A S B ) ) $=
    ( cop cdif wcel wn wa wbr eldif df-br notbii anbi12i 3bitr4i ) ABEZCDFZGPCG
    ZPDGZHZIABQJABCJZABDJZHZIPCDKABQLUARUCTABCLUBSABDLMNO $.
    $( [12-Apr-2012] $) $( [11-Apr-2011] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z w v $.  $d y z w v $.  $d ph z w v $.
    $( The law of concretion.  Special case of Theorem 9.5 of [Quine] p. 61.
       (The proof was shortened by Andrew Salmon, 25-Jul-2011.)  (Contributed
       by ?who?, 14-Apr-1995.)  (Revised by ?who?, 25-Jul-2011.) $)
    opabid $p |- ( <. x , y >. e. { <. x , y >. | ph } <-> ph ) $=
      ( vz cv cop wceq wa wex copab vex opex copsexg bicomd df-opab elab2 ) DEZ
      BEZCEZFZGZAHCIBIZADTABCJRSBKCKLUAAUBABCQMNABCDOP $.
      $( [25-Jul-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d x z A $.  $d y z A $.  $d z ph $.
    $( Membership in a class abstraction of pairs.  (Contributed by ?who?,
       24-Mar-1998.) $)
    elopab $p |- ( A e. { <. x , y >. | ph } <->
                 E. x E. y ( A = <. x , y >. /\ ph ) ) $=
      ( vz copab wcel cvv cv cop wceq wex elex vex eleq1 mpbiri adantr exlimivv
      wa opex eqeq1 anbi1d 2exbidv df-opab elab2g pm5.21nii ) DABCFZGDHGZDBIZCI
      ZJZKZASZCLBLZDUGMUMUHBCULUHAULUHUKHGUIUJBNCNTDUKHOPQREIZUKKZASZCLBLUNEDUG
      HUODKZUQUMBCURUPULAUODUKUAUBUCABCEUDUEUF $.
      $( [24-Mar-1998] $)
  $}

  ${
    $d x y z w $.  $d w z A $.  $d w x B $.  $d w z ph $.
    $( The law of concretion in terms of substitutions.  (Contributed by NM,
       30-Sep-2002.)  (Revised by Mario Carneiro, 18-Nov-2016.) $)
    opelopabsb $p |- ( <. A , B >. e. { <. x , y >. | ph }
                 <-> [. A / x ]. [. B / y ]. ph ) $=
      ( vz vw cop wcel cvv wsbc sbcex cv wsb wceq opeq1 eleq1d dfsbcq2 bibi12d
      wb copab wbr df-br brex sylbir wex spesbc exlimiv syl jca sbcbidv nfopab1
      opeq2 nfel2 nfs1v nfbi weq sbequ12 nfopab2 opabid chvar vtocl2g pm5.21nii
      wa ) DEHZABCUAZIZDJIZEJIZVDZACEKZBDKZVGDEVFUBVJDEVFUCDEVFUDUEVLVHVIVKBDLV
      LVKBUFVIVKBDUGVKVIBACELUHUIUJFMZGMZHZVFIZACGNZBFNZTZDVNHZVFIZVQBDKZTVGVLT
      FGDEJJVMDOZVPWAVRWBWCVOVTVFVMDVNPQVQBFDRSVNEOZWAVGWBVLWDVTVEVFVNEDUMQWDVQ
      VKBDACGERUKSBMZVNHZVFIZVQTZVSBFVPVRBBVOVFABCULUNVQBFUOUPBFUQZWGVPVQVRWIWF
      VOVFWEVMVNPQVQBFURSWECMZHZVFIZATWHCGWGVQCCWFVFABCUSUNACGUOUPCGUQZWLWGAVQW
      MWKWFVFWJVNWEUMQACGURSABCUTVAVAVBVC $.

    brabsb.1 $e |- R = { <. x , y >. | ph } $.
    $( The law of concretion in terms of substitutions.  (Contributed by NM,
       17-Mar-2008.) $)
    brabsb $p |- ( A R B <-> [. A / x ]. [. B / y ]. ph ) $=
      ( wbr cop wcel copab wsbc df-br eleq2i opelopabsb 3bitri ) DEFHDEIZFJQABC
      KZJACELBDLDEFMFRQGNABCDEOP $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y ch $.  $d z ph $.
    $( Closed theorem form of ~ opelopab .  (Contributed by ?who?,
       19-Feb-2013.) $)
    opelopabt $p |- ( ( A. x A. y ( x = A -> ( ph <-> ps ) )
                     /\ A. x A. y ( y = B -> ( ps <-> ch ) )
                     /\ ( A e. V /\ B e. W ) ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) ) $=
      ( cop copab wcel cv wceq wa wex wb wi wal w3a elopab prth 2alimi copsex2t
      19.26-2 bitr syl6 sylbir sylan 3impa syl5bb ) FGJZADEKLULDMZEMZJNAOEPDPZU
      MFNZABQZRZESDSZUNGNZBCQZRZESDSZFHLGILOZTCADEULUAUSVCVDUOCQZUSVCOZUPUTOZAC
      QZRZESDSZVDVEVFURVBOZESDSVJURVBDEUEVKVIDEVKVGUQVAOVHUPUQUTVAUBABCUFUGUCUH
      ACDEFGHIUDUIUJUK $.
      $( [19-Feb-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    opelopabga.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       Mario Carneiro, 19-Dec-2013.) $)
    opelopabga $p |- ( ( A e. V /\ B e. W ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ps ) ) $=
      ( cop copab wcel cv wceq wa wex elopab copsex2g syl5bb ) EFJZACDKLTCMDMJN
      AODPCPEGLFHLOBACDTQABCDEFGHIRS $.
      $( [19-Dec-2013] $)

    ${
      brabga.2 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation.  (Contributed by Mario
         Carneiro, 19-Dec-2013.) $)
      brabga $p |- ( ( A e. V /\ B e. W ) -> ( A R B <-> ps ) ) $=
        ( wbr cop copab wcel wa df-br eleq2i bitri opelopabga syl5bb ) EFGLZEFM
        ZACDNZOZEHOFIOPBUBUCGOUEEFGQGUDUCKRSABCDEFHIJTUA $.
        $( [19-Dec-2013] $)
    $}

    $d x y C $.  $d x y D $.
    $( Ordered pair membership in an ordered pair class abstraction.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    opelopab2a $p |- ( ( A e. C /\ B e. D ) -> ( <. A , B >. e.
                 { <. x , y >. | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ps ) ) $=
      ( wcel wa cop cv copab wceq eleq1 bi2anan9 anbi12d opelopabga bianabs ) E
      GJZFHJZKZEFLCMZGJZDMZHJZKZAKZCDNJBUIUCBKCDEFGHUDEOZUFFOZKUHUCABUJUEUAUKUG
      UBUDEGPUFFHPQIRST $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    opelopaba.1 $e |- A e. _V $.
    opelopaba.2 $e |- B e. _V $.
    opelopaba.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       Mario Carneiro, 19-Dec-2013.) $)
    opelopaba $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ps ) $=
      ( cvv wcel cop copab wb opelopabga mp2an ) EJKFJKEFLACDMKBNGHABCDEFJJIOP
      $.
      $( [19-Dec-2013] $)

    ${
      braba.4 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation.  (Contributed by ?who?,
         19-Dec-2013.) $)
      braba $p |- ( A R B <-> ps ) $=
        ( cvv wcel wbr wb brabga mp2an ) ELMFLMEFGNBOHIABCDEFGLLJKPQ $.
        $( [19-Dec-2013] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       ?who?, 28-May-1995.)  (Revised by ?who?, 19-Dec-2013.) $)
    opelopabg $p |- ( ( A e. V /\ B e. W ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) ) $=
      ( cv wceq sylan9bb opelopabga ) ACDEFGHIDLFMABELGMCJKNO $.
      $( [19-Dec-2013] $) $( [28-May-1995] $)

    ${
      brabg.5 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation.  (Contributed by ?who?,
         16-Aug-1999.)  (Revised by ?who?, 19-Dec-2013.) $)
      brabg $p |- ( ( A e. C /\ B e. D ) -> ( A R B <-> ch ) ) $=
        ( cv wceq sylan9bb brabga ) ACDEFGJHIDNFOABENGOCKLPMQ $.
        $( [19-Dec-2013] $) $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y ch $.
    opelopab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab2.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Ordered pair membership in an ordered pair class abstraction.
       (Contributed by ?who?, 14-Oct-2007.)  (Revised by ?who?,
       19-Dec-2013.) $)
    opelopab2 $p |- ( ( A e. C /\ B e. D ) -> ( <. A , B >. e.
                 { <. x , y >. | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ch ) ) $=
      ( cv wceq sylan9bb opelopab2a ) ACDEFGHIDLFMABELGMCJKNO $.
      $( [19-Dec-2013] $) $( [14-Oct-2007] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopab.1 $e |- A e. _V $.
    opelopab.2 $e |- B e. _V $.
    opelopab.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       ?who?, 16-May-1995.) $)
    opelopab $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) $=
      ( cvv wcel cop copab wb opelopabg mp2an ) FLMGLMFGNADEOMCPHIABCDEFGLLJKQR
      $.
      $( [16-May-1995] $)

    ${
      brab.5 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation.  (Contributed by ?who?,
         16-Aug-1999.) $)
      brab $p |- ( A R B <-> ch ) $=
        ( cvv wcel wbr wb brabg mp2an ) FNOGNOFGHPCQIJABCDEFGNNHKLMRS $.
        $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z ph $.  $d w z ps $.
    opelopabaf.x $e |- F/ x ps $.
    opelopabaf.y $e |- F/ y ps $.
    opelopabaf.1 $e |- A e. _V $.
    opelopabaf.2 $e |- B e. _V $.
    opelopabaf.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions."  (Contributed by Mario Carneiro, 19-Dec-2013.)  (Proof
       shortened by Mario Carneiro, 18-Nov-2016.) $)
    opelopabaf $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ps ) $=
      ( cop copab wcel wsbc opelopabsb cvv wb nfv sbc2iegf mp2an bitri ) EFLACD
      MNADFOCEOZBACDEFPEQNFQNZUCBRIJABCDEFQQGHUDCSKTUAUB $.
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z ch $.  $d w z ph $.
    opelopabf.x $e |- F/ x ps $.
    opelopabf.y $e |- F/ y ch $.
    opelopabf.1 $e |- A e. _V $.
    opelopabf.2 $e |- B e. _V $.
    opelopabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions."  (Contributed by NM, 19-Dec-2008.) $)
    opelopabf $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) $=
      ( cop wcel wsbc cvv wb sbciegf ax-mp copab opelopabsb nfcv cv wceq 3bitri
      nfsbc sbcbidv ) FGNADEUAOAEGPZDFPZBEGPZCADEFGUBFQOUJUKRJUIUKDFQBDEGDGUCHU
      GDUDFUEABEGLUHSTGQOUKCRKBCEGQIMSTUF $.
  $}

  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication.
       (Contributed by NM, 27-Dec-1996.)  (Revised by Mario Carneiro,
       19-May-2013.) $)
    ssopab2 $p |- ( A. x A. y ( ph -> ps ) ->
        { <. x , y >. | ph } C_ { <. x , y >. | ps } ) $=
      ( vz wi wal cv cop wceq wa wex cab copab nfa1 sp anim2d eximd sps df-opab
      ss2abdv 3sstr4g ) ABFZDGZCGZEHCHDHIJZAKZDLZCLZEMUFBKZDLZCLZEMACDNBCDNUEUI
      ULEUEUHUKCUDCOUDUHUKFCUDUGUJDUCDOUDABUFUCDPQRSRUAACDETBCDETUB $.
  $}


  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication.
       (Contributed by NM, 27-Dec-1996.)  (Proof shortened by Mario Carneiro,
       18-Nov-2016.) $)
    ssopab2b $p |- ( { <. x , y >. | ph } C_ { <. x , y >. | ps } <->
               A. x A. y ( ph -> ps ) ) $=
      ( copab wss wi wal nfopab1 nfss nfopab2 cv cop wcel opabid 3imtr3g alrimi
      ssel ssopab2 impbii ) ACDEZBCDEZFZABGZDHZCHUCUECCUAUBACDIBCDIJUCUDDDUAUBA
      CDKBCDKJUCCLDLMZUANUFUBNABUAUBUFRACDOBCDOPQQABCDST $.
  $}

  ${
    ssopab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of ordered pair abstraction subclass from implication.
       (Contributed by NM, 5-Apr-1995.) $)
    ssopab2i $p |- { <. x , y >. | ph } C_ { <. x , y >. | ps } $=
      ( wi wal copab wss ssopab2 ax-gen mpg ) ABFZDGACDHBCDHICABCDJMDEKL $.
  $}

  ${
    $d x ph $.  $d y ph $.
    ssopab2dv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference of ordered pair abstraction subclass from implication.
       (Contributed by NM, 19-Jan-2014.)  (Revised by Mario Carneiro,
       24-Jun-2014.) $)
    ssopab2dv $p |- ( ph -> { <. x , y >. | ps } C_ { <. x , y >. | ch } ) $=
      ( wi wal copab wss alrimivv ssopab2 syl ) ABCGZEHDHBDEICDEIJANDEFKBCDELM
      $.
  $}

  ${
    $d z ph $.  $d z x $.  $d z y $.
    $( Non-empty ordered pair class abstraction.  (Contributed by NM,
       10-Oct-2007.) $)
    opabn0 $p |- ( { <. x , y >. | ph } =/= (/) <-> E. x E. y ph ) $=
      ( vz copab c0 wne cv wcel wex cop wceq wa n0 elopab exbii exrot3 vex opex
      isseti 19.41v mpbiran 2exbii bitri 3bitri ) ABCEZFGDHZUFIZDJUGBHZCHZKZLZA
      MZCJBJZDJZACJBJZDUFNUHUNDABCUGOPUOUMDJZCJBJUPUMDBCQUQABCUQULDJADUKUIUJBRC
      RSTULADUAUBUCUDUE $.
      $( [10-Oct-2007] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Set construction functions
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c 1st $. $( First member of an ordered pair $)
  $c Swap $.
  $c SSet $.
  $c o. $.
  $c " $.
  $c SI $.

  $( Extend the definition of a class to include the first member an ordered
     pair function. $)
  c1st $a class 1st $.

  $( Extend the definition of a class to include the swap function. $)
  cswap $a class Swap $.

  $( Extend the definition of a class to include the subset relationship. $)
  csset $a class SSet $.

  $( Extend the definition of a class to include the singleton image. $)
  csi $a class SI A $.

  $( Extend the definition of a class to include the composition of two
     classes. $)
  ccom $a class ( A o. B ) $.

  $( Extend the definition of a class to include the image of one class under
     another. $)
  cima $a class ( A " B ) $.

  ${
    $d x y z $.
    $( Define a function that extracts the first member, or abscissa, of an
       ordered pair. $)
    df-1st $a |- 1st = { <. x , y >. | E. z x = <. y , z >. } $.
  $}

  ${
    $d x y z w $.
    $( Define a function that swaps the two elements of an ordered pair. $)
    df-swap $a |- Swap = { <. x , y >. |
             E. z E. w ( x = <. z , w >. /\ y = <. w , z >. ) } $.
  $}

  ${
    $d x y $.
    $( Define a relationship that holds between subsets. $)
    df-sset $a |- SSet = { <. x , y >. | x C_ y } $.
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( Define the composition of two classes. $)
    df-co $a |- ( A o. B ) = { <. x , y >. | E. z ( x B z /\ z A y ) } $.
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Define the image of one class under another. $)
    df-ima $a |- ( A " B ) = { x | E. y e. B y A x } $.
  $}

  ${
    $d A x y z w $.
    $( Define the singleton image of a class. $)
    df-si $a |- SI A = { <. x , y >. |
       E. z E. w ( x = { z } /\ y = { w } /\ z A w ) } $.
  $}

  ${
    $d A x y z w $.
    $( Membership in ` 1st ` .  (Contributed by SF, 5-Jan-2015.) $)
    el1st $p |- ( A e. 1st <-> E. x E. y A = <. <. x , y >. , x >. ) $=
      ( vz c1st wcel cv cop wceq wex wa copab df-1st eleq2i bitri excom exancom
      elopab vex exbii opex opeq1 eqeq2d ceqsexv exdistr 3bitr3ri ) CEFZCDGZAGZ
      HZIZUHUIBGZHZIZBJZKZAJDJZCUMUIHZIZBJZAJZUGCUODALZFUQEVBCDABMNUODACROUQUPD
      JZAJVAUPDAPVCUTAUKUNKZDJZBJVDBJDJUTVCVDBDPVEUSBVEUNUKKDJUSUKUNDQUKUSDUMUI
      ULASBSUAUNUJURCUHUMUIUBUCUDOTUKUNDBUEUFTOO $.
      $( [5-Jan-2015] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C x y z w $.
    $( The binary relationship over the ` 1st ` function.  (Contributed by SF,
       5-Jan-2015.) $)
    br1stg $p |- ( ( A e. V /\ B e. W ) ->
       ( <. A , B >. 1st C <-> A = C ) ) $=
      ( vz vw vx vy cv cop c1st wbr wceq wb breq1d eqeq1 wex wa bitri opeq1 weq
      bibi12d opeq2 bibi1d wcel df-br el1st w3a eqcom opth anbi1i df-3an bitr4i
      2exbii vex biidd ceqsex2v 3bitri vtocl2g ) FJZGJZKZCLMZVACNZOAVBKZCLMZACN
      ZOABKZCLMZVHOFGABDEVAANZVDVGVEVHVKVCVFCLVAAVBUAPVAACQUCVBBNZVGVJVHVLVFVIC
      LVBBAUDPUEVDVCCKZLUFVMHJZIJZKZVNKZNZIRHRZVEVCCLUGHIVMUHVSHFUBZIGUBZVNCNZU
      IZIRHRVEVRWCHIVRVQVMNZWCVMVQUJWDVPVCNZWBSZWCVPVNVCCUKWFVTWASZWBSWCWEWGWBV
      NVOVAVBUKULVTWAWBUMUNTTUOWBVEVEHIVAVBFUPGUPVNVACQWAVEUQURTUSUT $.
      $( [5-Jan-2015] $)
  $}

  ${
    $d A x y z w t $.  $d B x y z w t $.
    setconslem1.1 $e |- A e. _V $.
    setconslem1.2 $e |- B e. _V $.
    $( Lemma for the set construction theorems.  (Contributed by SF,
       6-Jan-2015.) $)
    setconslem1 $p |- ( << { A } , B >> e.
                 ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( (
        Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) <->
                E. x e. B A = Phi x ) $=
      ( vt vz csn cv copk cssetk cins3k cpw1 cimak cvv wcel wa wex wceq exbii
      cins2k cin c1c ccompl csik csymdif cdif cimagek cnnc cxpk cidk ccnvk cphi
      cun ccomk wrex w3a wb snex opkelsikg mp2an excom 3anass eqcom sneqb bitri
      vex anbi1i opkeq1 eleq1d anbi2d ceqsexv 3bitri 19.41v 3bitr2i opkelimagek
      anass opkelcnvk dfphi2 eqeq2i 3bitr4i elssetk anbi12i opkelcok df-rex
      ancom ) BHZFIZJKLZKUAZUBUCMMZNUDLWJUAWIUAKUEUELUNUFWKMMNUGWKNUHUIOUJUBUKU
      IUDOUJUBUNZUHZULZUEZPZWHCJZKPZQZFRZAIZCPZBXAUMZSZQZARZWGCJKWOUOPXDACUPWTW
      HXAHZSZBXAJZWNPZWRQZQZARZFRXLFRZARXFWSXMFWSXHXJQZARZWRQXOWRQZARXMWPXPWRWP
      WGGIZHZSZXHXRXAJZWNPZUQZARGRZYCGRZARXPWGOPWHOPWPYDURBUSZFVGGAWGWHWNOOUTVA
      YCGAVBYEXOAYEXRBSZXHYBQZQZGRXOYCYIGYCXTYHQYIXTXHYBVCXTYGYHXTXSWGSYGWGXSVD
      XRBGVGVEVFVHVFTYHXOGBDYGYBXJXHYGYAXIWNXRBXAVIVJVKVLVFTVMVHXOWRAVNXQXLAXHX
      JWRVQTVOTXLAFVBXNXEAXNXJXGCJZKPZQZXDXBQXEXKYLFXGXAUSXHWRYKXJXHWQYJKWHXGCV
      IVJVKVLXJXDYKXBXABJWMPBWLXANZSXJXDXABWLAVGZDVPBXAWMDYNVRXCYMBXAVSVTWAXACY
      NEWBWCXDXBWFVMTVOFWGCKWOYFEWDXDACWEWA $.
      $( [6-Jan-2015] $)

    $( Lemma for the set construction theorems.  (Contributed by SF,
       6-Jan-2015.) $)
    setconslem2 $p |- ( << { A } , B >> e. ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) <->
         E. x e. B A = ( Phi x u. { 0c } ) ) $=
      ( vt vy vz csn copk cssetk cins3k cimak cvv wcel wceq wex 3bitr4i bitri
      wa cv cins2k cin c1c cpw1 ccompl csik csymdif cdif cimagek cnnc cxpk cidk
      cun ccnvk ccomk c0c wrex elpw121c anbi1i 19.41v bitr4i exbii df-rex excom
      cphi snex opkeq1 eleq1d ceqsexv elin otkelins2k vex otkelins3k opksnelsik
      elssetk wb wal wn elimak elsymdif wel opkelimagek opkelcnvk dfphi2 eqeq2i
      opkex wo anbi12i ancom opkelcok phiex opkelxpk mpbiran2 elsnc orbi12i elun
      clel3 sneqb bibi12i xchbinx exnal 3bitri con2bii dfcleq elcompl 3bitr4ri
      ) FUAZBIZCJZJZKUBZXLKLZXLUCUDUEUEZMUFLXLUBXMUBKUGUGLUNUHXNUEUEMUIXNMUJUKN
      ULUCUMUKUFNULUCUNZUJZUOZKUPZUQIZIZNULZUNZLZUHZXNMZUFZUGZLZUCZOZFXNURZAUAZ
      COZBYLVFZXSUNZPZTZAQZXJYIXNMOYPACURYKXHYLIZIZIZPZYJTZFQZAQZYRXHXNOZYJTZFQ
      UUCAQZFQYKUUEUUGUUHFUUGUUBAQZYJTUUHUUFUUIYJAXHUSUTUUBYJAVAVBVCYJFXNVDUUCA
      FVERUUDYQAUUDUUAXJJZYIOZUUJXLOZUUJYHOZTYQYJUUKFUUAYTVGUUBXKUUJYIXHUUAXJVH
      VIVJUUJXLYHVKUULYMUUMYPUULYSCJKOYMYSXICKYLVGZBVGZEVLYLCAVMZEVPSUUMYSXIJYG
      OYLBJZYFOZYPYSXICYGUUNUUOEVNYLBYFUUPDVOGUAZBOZUUSYOOZVQZGVRZUUQYEOZVSYPUU
      RUVDUVCUVDXHUUSIZIZIZPZXHUUQJZYDOZTZFQZGQZUVBVSZGQUVCVSUVDUVJFXNURZUVMFYD
      XNUUQYLBWGZVTUUFUVJTZFQUVKGQZFQUVOUVMUVQUVRFUVQUVHGQZUVJTUVRUUFUVSUVJGXHU
      SUTUVHUVJGVAVBVCUVJFXNVDUVKGFVERSUVLUVNGUVLUVGUUQJZYDOZUVNUVJUWAFUVGUVFVG
      UVHUVIUVTYDXHUVGUUQVHVIVJUWAUVTXLOZUVTYCOZVQUVBUVTXLYCWAUWBUUTUWCUVAUWBUV
      EBJKOUUTUVEYLBKUUSVGZUUPDVLUUSBGVMZDVPSUWCUVEYLJZYBOZUVAUVEYLBYBUWDUUPDVN
      UWFXROZUWFYAOZWHUUSYNOZUUSXSOZWHUWGUVAUWHUWJUWIUWKUVEHUAZJKOZUWLYLJXQOZTZ
      HQUWLYNPZGHWBZTZHQUWHUWJUWOUWRHUWOUWQUWPTUWRUWMUWQUWNUWPUUSUWLUWEHVMZVPYL
      UWLJXPOUWLXOYLMZPUWNUWPYLUWLXOUUPUWSWCUWLYLXPUWSUUPWDYNUWTUWLYLWEWFRWIUWQ
      UWPWJSVCHUVEYLXQKUWDUUPWKHUUSYNYLUUPWLWRRUWIUVEXTOZUWKUWIUXAYLNOUUPUVEYLX
      TNUWDUUPWMWNUVEXSPUUSUQPUXAUWKUUSUQUWEWSUVEXSUWDWOUUSUQUWEWORSWPUWFXRYAWQ
      UUSYNXSWQRSWTXASVCUVBGXBXCXDGBYOXEUUQYEUVPXFXGXCWIXCVCSFYIXNXJXICWGVTYPAC
      VDR $.
      $( [6-Jan-2015] $)
  $}

  ${
    $d A x y t $.  $d B x y t $.  $d C x y t $.
    setconslem3.1 $e |- A e. _V $.
    setconslem3.2 $e |- B e. _V $.
    setconslem3.3 $e |- C e. _V $.
    $( Lemma for set construction functions.  Set up a mapping between
       Kuratowski and Quine ordered pairs.  (Contributed by SF, 7-Jan-2015.) $)
    setconslem3 $p |- ( << { { A } } , << B , C >> >> e.
        ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) <-> A = <. B , C >. ) $=
      ( vx vy vt wcel wceq csn cun copk cssetk cins3k cins2k cimak wex snex c0c
      cv cphi wrex wo wb wal csik cin c1c cpw1 ccompl csymdif cdif cimagek cnnc
      cvv cxpk ccnvk ccomk wn cop wa opkex elimak df-rex elpw141c anbi1i 19.41v
      bitr4i exbii excom 3bitri opkeq1 eleq1d ceqsexv otkelins3k opksnelsik vex
      elsymdif elssetk bitri otkelins2k setconslem1 setconslem2 orbi12i bibi12i
      cidk elun xchbinx exnal con2bii eqop elcompl 3bitr4ri ) GUBZAJZWPHUBUCZKH
      BUDZWPWRUALZMKHCUDZUEZUFZGUGZALZLZBCNZNZOUHZUHZPZOOPZOQZUIUJUKUKZRULPXMQX
      LQXKMUMXNUKUKZRUNXNRUOUPUQURUIWHUPULUQURUIMUOUSZUHUTZPZXMXMXPOUTWTLUQURMP
      UMXNRULUHPUIXNRZQZMZQZUMZXORZJZVAABCVBKXHYDULJYEXDYEIUBZWPLZLZLZLZLZKZYFX
      HNZYCJZVCZISZGSZXCVAZGSXDVAYEYNIXOUDYFXOJZYNVCZISZYQIYCXOXHXFXGVDZVEYNIXO
      VFUUAYOGSZISYQYTUUCIYTYLGSZYNVCUUCYSUUDYNGYFVGVHYLYNGVIVJVKYOGIVLVJVMYPYR
      GYPYKXHNZYCJZYRYNUUFIYKYJTYLYMUUEYCYFYKXHVNVOVPUUFUUEXKJZUUEYBJZUFXCUUEXK
      YBVTUUGWQUUHXBUUGYIXFNXJJYHXENXIJZWQYIXFXGXJYHTZXETZBCVDZVQYHXEXIYGTATVRU
      UIYGANOJWQYGAOWPTZDVRWPAGVSZDWAWBVMUUHYIXGNZYAJUUOXRJZUUOXTJZUEXBYIXFXGYA
      UUJUUKUULWCUUOXRXTWIUUPWSUUQXAUUPYGBNXQJWSYGBCXQUUMEFVQHWPBUUNEWDWBUUQYGC
      NXSJXAYGBCXSUUMEFWCHWPCUUNFWEWBWFVMWGWJWBVKXCGWKVMWLGHABCWMXHYDUUBWNWO $.
      $( [7-Jan-2015] $)
  $}

  ${
    $d A x y z t $.
    $( Lemma for set construction functions.  Create a mapping between the two
       types of ordered pair abstractions.  (Contributed by SF, 7-Jan-2015.) $)
    setconslem4 $p |- U.1 U.1 ( ( ( ( _V X._k _V ) X._k _V ) i^i
     `'_k ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k A ) =
    { <. x , y >. | << x , y >> e. A } $=
      ( vt cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun wcel wa
      csn wex bitri vz c1c csymdif cdif cimagek cnnc cidk ccnvk ccomk c0c cuni1
      copk copab cop wceq wrex snex elimak df-rex elin anbi2i an12 vex opkelxpk
      cv mpbiran2 elvvk anbi1i 19.41vv bitr4i exbii exrot3 opkex opkeq1 anbi12d
      eleq1 eleq1d ceqsexv setconslem3 ancom 2exbii eluni1 elopab 3bitr4i eqriv
      opkelcnvk ) UAEEFZEFZGHHIZGGIZGJZKUBLLZMNIWKJWJJWIOUCWLLLZMUDWLMUEUFEFKUG
      UFNEFKOUEUHZHUIIWKWKWNGUIUJRREFOIUCWLMNHIKWLMJOJUCWMMNZUHZKZCMZUKZUKZAVEZ
      BVEZULZCPZABUMZUAVEZRZRZWRPZXFXAXBUNUOZXDQZBSASZXFWTPZXFXEPXIDVEZXHULZWQP
      ZDCUPZXLDWQCXHXGUQZURXQXNXCUOZXNCPZXOWPPZQZQZDSZBSASZXLXQXTXPQZDSZYEXPDCU
      SYGYCBSASZDSYEYFYHDYFXTXOWHPZYAQZQZYHXPYJXTXOWHWPUTVAYKYIYBQZYHXTYIYAVBYL
      XSBSASZYBQYHYIYMYBYIXNWGPZYMYIYNXHEPXRXNXHWGEDVCXRVDVFABXNVGTVHXSYBABVIVJ
      TTVKYCDABVLTTYDXKABYDXDXCXHULZWPPZQZXKYBYQDXCXAXBVMZXSXTXDYAYPXNXCCVPXSXO
      YOWPXNXCXHVNVQVOVRYQXDXJQXKYPXJXDYPXHXCULWOPXJXCXHWOYRXRWFXFXAXBUAVCZAVCB
      VCVSTVAXDXJVTTTWATTXMXGWSPXIXFWSYSWBXGWRXFUQWBTXDABXFWCWDWE $.
      $( [7-Jan-2015] $)
  $}


  $( Lemma for set construction theorems.  The big expression in the middle of
     ~ setconslem4 forms a set.  (Contributed by SF, 7-Jan-2015.) $)
  setconslem5 $p |- ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
      ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
      Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
      "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) e. _V $=
    ( cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun csymdif cnnc cvv cxpk
    ssetkex sikex ins3kex pw1ex imakex vvex xpkex cdif cimagek cidk ccnvk ccomk
    c1c c0c csn addcexlem 1cex imagekex nncex inex idkex complex cnvkex ins2kex
    unex cokex snex symdifex ) ABZBZCZAACZADZEUFFZFZGHCVFDVEDVDIJVHFZFZGUAZVHGZ
    UBZKLMZEZUCKHZLMZEZIZUBZUDZBZUEZCZVFVFWAAUEZUGUHZUHZLMZIZCZJZVHGZHZBZCZEZVH
    GZDZIZDZJZVJGXAVJVDWTVCVBANOOPWSWDWRWCAWBNWAVTVSVOVRVMVNVLVKVHUIVGUFUJQQZRU
    KKLULSTUMUCVQUNVPLKULUOSTUMURUKUPZOUSPWQWPVHVFWOANUQZWNWMWLWKVHVFWJXDWIWEWH
    WAAXCNUSWGLWFUTSTURPVAXBRUOOPUMXBRUQURUQVAVIVHXBQQRUO $.
    $( [7-Jan-2015] $)

  ${
    $d A x y z w t $.
    $( Lemma for the set construction functions.  Invert the expression from
       ~ setconslem4 .  (Contributed by SF, 7-Jan-2015.) $)
    setconslem6 $p |- ( ( ( _V X._k ( _V X._k _V ) ) i^i
     ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k ~P1 ~P1 A ) =
    { z | E. x E. y ( z = << x , y >> /\ <. x , y >. e. A ) } $=
      ( vt vw cv copk wcel wa wex cvv cxpk cssetk cins3k cins2k cpw1 cimak wrex
      cin wceq cop csik c1c ccompl cun csymdif cdif cimagek cnnc cidk ccnvk c0c
      ccomk csn elimak df-rex elpw12 anbi1i r19.41v bitr4i exbii rexcom4 opkeq1
      vex snex eleq1d ceqsexv 3bitr2i bitri exancom opkelxpk mpbiran elvvk elin
      rexbii 19.41vv 3bitr4i exrot3 anass 19.42v opkeq2 setconslem3 syl6bb opex
      anbi1d exbidv eleq1 pm5.32i 3bitri 2exbii abbi2i ) CGZAGZBGZHZUAZWNWOUBZD
      IZJZBKAKZCLLLMZMZNUCUCOZNNOZNPZTUDQQZRUEOXFPXEPXDUFUGXGQQZRUHXGRUIUJLMTUK
      UJUELMTUFUIULZUCUNOXFXFXINUNUMUOUOLMUFOUGXGRUEUCOTXGRPUFPUGXHRUEZTZDQQZRZ
      WMXMIEGZWMHZXKIZEXLSZFGZUOZUOZWMHZXKIZFDSZXAEXKXLWMCVEZUPXQXNXLIZXPJZEKZY
      CXPEXLUQYGXNXTUAZXPJZFDSZEKYIEKZFDSYCYFYJEYFYHFDSZXPJYJYEYLXPFXNDURUSYHXP
      FDUTVAVBYIFEDVCYKYBFDXPYBEXTXSVFZYHXOYAXKXNXTWMVDVGVHVPVIVJYCXRDIZYBJFKYB
      YNJZFKZXAYBFDUQYNYBFVKYPWQYAXJIZJZYNJZFKZBKAKZXAYPYRBKAKZYNJZFKYSBKAKZFKU
      UAYOUUCFYBUUBYNYAXCIZYQJWQBKAKZYQJYBUUBUUEUUFYQUUEWMXBIZUUFUUEXTLIUUGYMXT
      WMLXBYMYDVLVMABWMVNVJUSYAXCXJVOWQYQABVQVRUSVBUUDUUCFYRYNABVQVBYSFABVSVIYT
      WTABYTWQYQYNJZJZFKWQUUHFKZJWTYSUUIFWQYQYNVTVBWQUUHFWAWQUUJWSWQUUJXRWRUAZY
      NJZFKWSWQUUHUULFWQYQUUKYNWQYQXTWPHZXJIUUKWQYAUUMXJWMWPXTWBVGXRWNWOFVEAVEZ
      BVEZWCWDWFWGYNWSFWRWNWOUUNUUOWEXRWRDWHVHWDWIWJWKVJWJWJWL $.
      $( [7-Jan-2015] $)
  $}

  ${
    $d A t x y $.  $d B t x y $.  $d C t x y $.
    setconslem7.1 $e |- A e. _V $.
    setconslem7.2 $e |- B e. _V $.
    setconslem7.3 $e |- C e. _V $.
    $( Lemma for the set construction theorems.  Reorganized version of
       ~ setconslem3 .  (Contributed by SF, 4-Feb-2015.) $)
    setconslem7 $p |- ( << { { C } } , << A , B >> >> e. ~ ( ( Ins2_k Ins3_k
        SSet_k (+)
        ( Ins2_k Ins2_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k
        ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
          Ins3_k SI_k SI_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) )
      "_k ~P1 ~P1 ~P1 ~P1 1c ) <-> A = <. B , C >. ) $=
      ( vx vy vt wcel csn cun copk cssetk cins3k cimak csik wex bitri snex cphi
      cv wceq wrex c0c wal cins2k cin c1c cpw1 ccompl csymdif cdif cimagek cnnc
      wo wb cvv cxpk cidk ccnvk ccomk wn wa opkex elimak df-rex elpw141c anbi1i
      cop 19.41v bitr4i exbii excom opkeq1 eleq1d ceqsexv otkelins2k otkelins3k
      elsymdif elssetk setconslem1 opksnelsik setconslem2 orbi12i bibi12i exnal
      vex elun notbii con2bii eqop elcompl 3bitr4ri ) GUBZAJZWOHUBUAZUCHBUDZWOW
      QUEKZLUCHCUDZUPZUQZGUFZCKZKZABMZMZNOZUGZNXHNUGZUHUIUJUJZPUKOXJUGXINQQOLUL
      XKUJUJZPUMXKPUNUOURUSUHUTUOUKURUSUHLUNVAZQVBZUGZUGZXJXJXMNVBWSKURUSLOULXK
      PUKQOUHXKPZQZQZOZLZULZXLPZJZVCABCVJUCXGYCUKJYDXCYDXBVCZGRZXCVCYDIUBZWOKZK
      ZKZKZKZUCZYGXGMZYBJZVDZIRZGRZYFYDYOIXLUDZYRIYBXLXGXEXFVEZVFYSYGXLJZYOVDZI
      RZYRYOIXLVGUUCYPGRZIRYRUUBUUDIUUBYMGRZYOVDUUDUUAUUEYOGYGVHVIYMYOGVKVLVMYP
      GIVNVLSSYQYEGYQYLXGMZYBJZYEYOUUGIYLYKTYMYNUUFYBYGYLXGVOVPVQUUGUUFXIJZUUFY
      AJZUQZVCYEUUFXIYAVTUUJXBUUHWPUUIXAUUHYJXFMZXHJZWPYJXEXFXHYITZXDTZABVEZVRU
      ULYHAMNJWPYHABNWOTZDEVSWOAGWHZDWASSUUIUUFXPJZUUFXTJZUPXAUUFXPXTWIUURWRUUS
      WTUURUUKXOJZWRYJXEXFXOUUMUUNUUOVRUUTYHBMXNJWRYHABXNUUPDEVRHWOBUUQEWBSSUUS
      YJXEMXSJZWTYJXEXFXSUUMUUNUUOVSUVAYIXDMXRJZWTYIXDXRYHTCTWCUVBYHCMXQJWTYHCX
      QUUPFWCHWOCUUQFWDSSSWESWFWJSSVMSXBGWGSWKGHABCWLXGYCYTWMWN $.
      $( [4-Feb-2015] $)
  $}


  ${
    $d x y z w a b c t $.
    $( Express the ` 1st ` function via the set construction functions.
       (Contributed by SF, 4-Feb-2015.) $)
    df1st2 $p |- 1st = U.1 U.1 ( ( ( ( _V X._k _V ) X._k _V ) i^i
     `'_k ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k (
~ ( ( Ins2_k Ins3_k SSet_k (+)
        ( Ins2_k Ins2_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k
        ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
          Ins3_k SI_k SI_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) )
      "_k ~P1 ~P1 ~P1 ~P1 1c ) "_k ~P1 1c ) ) $=
      ( vx vy vz vt cssetk cins3k cins2k cin cpw1 cimak ccompl csik cun csymdif
      cv cvv cxpk csn wcel wex copk c1c cdif cimagek cnnc ccnvk ccomk c0c copab
      cidk cop wceq cuni1 c1st wa wrex opkex elimak df-rex anbi1i 19.41v bitr4i
      elpw11c exbii excom bitri snex opkeq1 ceqsexv vex setconslem7 setconslem4
      eleq1d opabbii df-1st 3eqtr4ri ) AOZBOZUAZEFZGZEVTEGZHUBIZIZJKFWBGWAELLFZ
      MNWDIIZJUCWDJUDUEPQHUJUEKPQHMUDUFZLUGZGGWBWBWGEUGUHRRPQMFNWDJKLFHWDJZLLFM
      NWFJKZWCJZSZABUIVQVRCOZUKULZCTZABUIPPQPQWEWHFWIGMGNWFJKUFHWKJUMUMUNWLWOAB
      WLDOZWMRZRZULZWPVSUAZWJSZUOZDTZCTZWOWLXADWCUPZXDDWJWCVSVQVRUQURXEWPWCSZXA
      UOZDTZXDXADWCUSXHXBCTZDTXDXGXIDXGWSCTZXAUOXIXFXJXACWPVCUTWSXACVAVBVDXBCDV
      EVBVFVFXCWNCXCWRVSUAZWJSZWNXAXLDWRWQVGWSWTXKWJWPWRVSVHVMVIVQVRWMAVJBVJCVJ
      VKVFVDVFVNABWKVLABCVOVP $.
      $( [4-Feb-2015] $)
  $}

  $( The ` 1st ` function is a set.  (Contributed by SF, 6-Jan-2015.) $)
  1stex $p |- 1st e. _V $=
    ( cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun csymdif cnnc
    vvex xpkex inex ssetkex ins3kex ins2kex imakex c1st cdif cimagek cidk ccnvk
    c1c ccomk c0c cuni1 df1st2 setconslem5 cnvkex addcexlem 1cex pw1ex imagekex
    csn nncex idkex complex unex sikex cokex snex symdifex uni1ex eqeltri ) UAA
    ABZABZCDDEZCCEZCFZGUFHZHZIJEVLFVKFZVJKLVNHZHZIUBZVNIZUCZMABZGZUDMJZABZGZKZU
    CZUEZDZUGZEVLVLWHCUGZUHUQZUQZABZKZEZLZVNIZJZDZEZGZVNIZFKFLVQIJZUEZGZVOWJFZF
    ZXCDZDZEZKZLZVQIZJZVMIZIZUIZUIAUJXRXQXFXPVIXEVHAAANNONOXDUKULPXOVMXNXMVQVOX
    LVKCQRSXHXKXGWJCWIQWHWGWFWBWEVTWAVSVRVNUMVMUFUNUOZUOZTUPMAURNOPUDWDUSWCAMUR
    UTNOPVAUPULZVBVCSSXJXIXCXBVNVLXACQSZWTWSWRWQVNVLWPYBWOWKWNWHCYAQVCWMAWLVDNO
    VARVEXTTUTVBRPXTTVBVBRVAVEVPVNXTUOUOTUTXSTTVFVFVG $.
    $( [6-Jan-2015] $)

  ${
    $d A x y z w t $.
    $( Membership in the ` Swap ` function.  (Contributed by SF,
       6-Jan-2015.) $)
    elswap $p |- ( A e. Swap <->
            E. x E. y A = <. <. x , y >. , <. y , x >. >. ) $=
      ( vz vw cswap wcel cv cop wceq wex copab df-swap eleq2i bitri 2exbii opex
      wa vex eqeq2d elopab exrot4 19.42vv w3a df-3an ancom opeq1 opeq2 ceqsex2v
      bitr2i 3bitr3i ) CFGZCDHZEHZIZJZUMAHZBHZIZJZUNURUQIZJZRZBKAKZRZEKDKZCUSVA
      IZJZBKAKZULCVDDELZGVFFVJCDEABMNVDDECUAOUPVCRZBKAKZEKDKVKEKDKZBKAKVFVIVKDE
      ABUBVLVEDEUPVCABUCPVMVHABVMUTVBUPUDZEKDKVHVKVNDEVNVCUPRVKUTVBUPUEVCUPUFUJ
      PUPCUSUNIZJVHDEUSVAUQURASZBSZQURUQVQVPQUTUOVOCUMUSUNUGTVBVOVGCUNVAUSUHTUI
      OPUKO $.
      $( [6-Jan-2015] $)
  $}

  ${
    $d x y z w t u v $.
    $( Express the ` Swap ` function via set construction operators.
       (Contributed by SF, 6-Jan-2015.) $)
    dfswap2 $p |- Swap = ( ( ~ ( ( Ins2_k Ins2_k SSet_k (+)
       ( ( ( Ins2_k
( Ins2_k Ins3_k ( SSet_k o._k
              SI_k
               `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
  Ins3_k SI_k SI_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) i^i
          Ins3_k SI_k SI_k SI_k SI_k SI_k
          Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k
        ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V ) ) ) )
        "_k
           ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c ) u.
         ( ( Ins2_k
( Ins3_k SI_k SI_k
  ( SSet_k o._k
    SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k
        SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
  Ins2_k Ins3_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) i^i
            Ins3_k SI_k SI_k SI_k SI_k SI_k
                 ~ ( ( Ins2_k SSet_k (+)
                       Ins3_k
( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i Ins2_k SSet_k )
        "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u. ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k
        SSet_k ) u.
                              ( { { 0c } } X._k _V ) ) ) "_k
                   ~P1 ~P1 1c ) ) "_k
           ~P1 ~P1 ~P1 ~P1 ~P1 ~P1 1c ) ) )
                    "_k ~P1 ~P1 ~P1 ~P1 1c )
               "_k ~P1 1c ) "_k _V ) $=
      ( vz vt vw vv vu cins3k cimak csik cun csn wceq wex copk wcel wrex bitr4i
      wa 3bitri snex opksnelsik vx vy cssetk cins2k cin c1c cpw1 ccompl csymdif
      cswap cdif cimagek cnnc cvv cxpk cidk ccnvk ccomk c0c cv cop opkex elimak
      df-rex elpw11c anbi1i 19.41v exbii excom opkeq1 eleq1d ceqsexv wel wb wal
      wn elpw141c elsymdif otkelins2k vex elssetk wo cphi elpw161c 3bitr4i elin
      otkelins3k setconslem1 setconslem2 bitri orbi12i df-op eleq2i opkelimagek
      elun cab abid dfphi2 eqeq2i anbi12i dfop2lem1 bibi12i notbii exnal dfcleq
      con2bii elcompl 3bitr4ri bitr2i elswap elimakv eqriv ) UAUJUCUDZUDZUCUCFZ
      XMUEUFUGZUGZGUHFXNXOUDUCHHFIUIXQUGUGZGUKXQGULUMUNUOUEUPUMUHUNUOUEIZULZUQZ
      HURZFZUDZXMXMYAUCURUSJZJUNUOIFUIXQGUHZHZFUEXQGZHZHZFZIZUDZXTHZHZHZHZHZFZU
      EZXRUGUGZGZYBHZHZFZYHFZUDZIZUDZYGHZHZHZHZFZUEZUUAGZIZUIZXRGZUHZXPGZUNGZUA
      UTZUBUTZAUTZVAZUVEUVDVAZVAZKZALZUBLUVDUVCMZUVANZUBLUVCUJNUVCUVBNUVJUVLUBU
      VLBUTZUVEJZJZKZUVMUVKMZUUTNZQZBLZALZUVJUVLUVRBXPOUVMXPNZUVRQZBLZUWABUUTXP
      UVKUVDUVCVBZVCUVRBXPVDUWDUVSALZBLUWAUWCUWFBUWCUVPALZUVRQUWFUWBUWGUVRAUVMV
      EVFUVPUVRAVGPVHUVSABVIPRUVTUVIAUVTUVOUVKMZUUTNZUVIUVRUWIBUVOUVNSZUVPUVQUW
      HUUTUVMUVOUVKVJVKVLCUAVMZCUTZUVHNZVNZCVOZUWHUUSNZVPUVIUWIUWPUWOUWPUVMUWLJ
      ZJZJZJZJZKZUVMUWHMZUURNZQZBLZCLZUWNVPZCLUWOVPUWPUXDBXROUVMXRNZUXDQZBLZUXG
      BUURXRUWHUVOUVKVBZVCUXDBXRVDUXKUXECLZBLUXGUXJUXMBUXJUXBCLZUXDQUXMUXIUXNUX
      DCUVMVQVFUXBUXDCVGPVHUXECBVIPRUXFUXHCUXFUXAUWHMZUURNZUXOXNNZUXOUUQNZVNZVP
      UXHUXDUXPBUXAUWTSZUXBUXCUXOUURUVMUXAUWHVJVKVLUXOXNUUQVRUXSUWNUXQUWKUXRUWM
      UXQUWSUVKMXMNUWQUVCMUCNUWKUWSUVOUVKXMUWRSZUWJUWEVSUWQUVDUVCUCUWLSZUBVTZUA
      VTZVSUWLUVCCVTZUYDWARUXOUUBNZUXOUUPNZWBUWLDUTZWCZKZDUVFOZUWLUYIYEIKZDUVGO
      ZWBZUXRUWMUYFUYKUYGUYMUYFUYHUVFNZUYJQZDLZUYKUYFUVMUXOMZYTNZBUUAOZUVMUYHJZ
      JZJZJZJZJZJZKZUYSQZBLZDLZUYQBYTUUAUXOUXAUWHVBZVCUVMUUANZUYSQZBLVUIDLZBLUY
      TVUKVUNVUOBVUNVUHDLZUYSQVUOVUMVUPUYSDUVMWDZVFVUHUYSDVGPVHUYSBUUAVDVUIDBVI
      WEVUJUYPDVUJVUGUXOMZYTNZVURYMNZVURYSNZQUYPUYSVUSBVUGVUFSZVUHUYRVURYTUVMVU
      GUXOVJZVKVLVURYMYSWFVUTUYOVVAUYJVUEUWHMZYLNZUYHEUTWCZKZEUVDOZUYHVVFYEIKZE
      UVEOZWBZVUTUYOVVEVVDYDNZVVDYKNZWBVVKVVDYDYKWOVVLVVHVVMVVJVVLVUCUVKMZYCNVU
      AUVDMZYBNVVHVUCUVOUVKYCVUBSZUWJUWEVSVUAUVDUVCYBUYHSZUYCUYDWGEUYHUVDDVTZUY
      CWHRVVMVUCUVOMZYJNVUBUVNMZYINZVVJVUCUVOUVKYJVVPUWJUWEWGVUBUVNYIVUASZUVESZ
      TVWAVUAUVEMZYHNVVJVUAUVEYHVVQAVTZTEUYHUVEVVRVWEWIWJRWKWJVUEUXAUWHYLVUDSZU
      XTUXLVSUYOUYHVVHDWPZVVJDWPZIZNUYHVWGNZUYHVWHNZWBVVKUVFVWIUYHDEUVDUVEWLWMU
      YHVWGVWHWOVWJVVHVWKVVJVVHDWQVVJDWQWKRWEVVAVUEUXAMZYRNVUDUWTMZYQNZUYJVUEUX
      AUWHYRVWFUXTUXLWGVUDUWTYQVUCSZUWSSZTVWNVUCUWSMZYPNVUBUWRMZYONZUYJVUCUWSYP
      VVPUYATVUBUWRYOVWBUWQSZTVWSVUAUWQMZYNNUYHUWLMZXTNZUYJVUAUWQYNVVQUYBTUYHUW
      LXTVVRUYETVXCUWLXSUYHGZKUYJUYHUWLXSVVRUYEWNUYIVXDUWLUYHWRWSPRRRWTRVHRUYJD
      UVFVDPVUHUYRUUONZQZBLZDLZUYHUVGNZUYLQZDLUYGUYMVXGVXJDVXGVURUUONZVURUUINZV
      URUUNNZQVXJVXEVXKBVUGVVBVUHUYRVURUUOVVCVKVLVURUUIUUNWFVXLVXIVXMUYLVXLVVGE
      UVEOZVVIEUVDOZWBZVXIVXLVVDUUHNVVDUUENZVVDUUGNZWBVXPVUEUXAUWHUUHVWFUXTUXLV
      SVVDUUEUUGWOVXQVXNVXRVXOVXQVVSUUDNVVTUUCNZVXNVUCUVOUVKUUDVVPUWJUWEWGVUBUV
      NUUCVWBVWCTVXSVWDYBNVXNVUAUVEYBVVQVWETEUYHUVEVVRVWEWHWJRVXRVVNUUFNVVOYHNV
      XOVUCUVOUVKUUFVVPUWJUWEVSVUAUVDUVCYHVVQUYCUYDWGEUYHUVDVVRUYCWIRWKRVXIUYHV
      XNDWPZVXODWPZIZNUYHVXTNZUYHVYANZWBVXPUVGVYBUYHDEUVEUVDWLWMUYHVXTVYAWOVYCV
      XNVYDVXOVXNDWQVXODWQWKRPVXMVWLUUMNVWMUULNZUYLVUEUXAUWHUUMVWFUXTUXLWGVUDUW
      TUULVWOVWPTVYEVWQUUKNVWRUUJNZUYLVUCUWSUUKVVPUYATVUBUWRUUJVWBVWTTVYFVXAYGN
      VXBYFNUYLVUAUWQYGVVQUYBTUYHUWLYFVVRUYETDCXARRRWTRVHUYGVXEBUUAOZVXFDLZBLZV
      XHBUUOUUAUXOVULVCVYGVUMVXEQZBLVYIVXEBUUAVDVYJVYHBVYJVUPVXEQVYHVUMVUPVXEVU
      QVFVUHVXEDVGPVHWJVXFBDVIRUYLDUVGVDWEWKUXOUUBUUPWOUWMUWLUYKCWPZUYMCWPZIZNU
      WLVYKNZUWLVYLNZWBUYNUVHVYMUWLCDUVFUVGWLWMUWLVYKVYLWOVYNUYKVYOUYMUYKCWQUYM
      CWQWKRWEXBXCRVHUWNCXDRXFCUVCUVHXEUWHUUSUXLXGXHWJVHXIVHUBAUVCXJUBUVAUVCUYD
      XKWEXL $.
      $( [6-Jan-2015] $)
  $}

  $( The ` Swap ` function is a set.  (Contributed by SF, 6-Jan-2015.) $)
  swapex $p |- Swap e. _V $=
    ( cssetk cins2k cins3k cin cpw1 cimak ccompl csik cun csymdif ins2kex pw1ex
    cnnc cvv imakex vvex inex unex sikex ins3kex cswap c1c cdif cxpk cidk ccnvk
    cimagek ccomk c0c dfswap2 ssetkex addcexlem 1cex imagekex nncex xpkex idkex
    csn complex cnvkex cokex snex symdifex eqeltri ) UAABZBZAACZVEDUBEZEZFGCVFV
    GBAHHCIJVIEZEZFUCZVIFZUGZMNUDZDZUEMGZNUDZDZIZUGZUFZHZUHZCZBZVEVEWBAUHZUIURZ
    URZNUDZIZCZJZVIFZGZHZCZDZVIFZHZHZCZIZBZWAHZHZHZHZHZCZDZVKEZEZFZWDHZHZCZWSCZ
    BZIZBZWPHZHZHZHZCZDZXMFZIZJZVKFZGZVHFZNFNUJYMNYLVHYKYJVKVFYIVEAUKKZKXNYHXKX
    MXDXJXCWFXBWEWDAWCUKWBWAVTVPVSVNVOVMVLVIULVHUBUMLZLZOUNMNUOPUPQUEVRUQVQNMUO
    USPUPQRUNZUTZSVAZTKXAWTWSWRVIVEWQYNWPWOWNWMVIVEWLYNWKWGWJWBAYRUKVAWINWHVBPU
    PRTVCYPOUSSZTQYPOZSSTRKXIXHXGXFXEWAYQSSSSSTQXLVKVJVIYPLLZLLZOYGXMYAYFXTXQXS
    XPXOWDYSSSTXRWSUUATKRKYEYDYCYBWPYTSSSSTQUUCORVCUUBOUSYOOPOVD $.
    $( [6-Jan-2015] $)

  ${
    $d x y $.
    $( Express the ` SSet ` relationship via the set construction functors.
       (Contributed by SF, 7-Jan-2015.) $)
    dfsset2 $p |- SSet = U.1 U.1 ( ( ( ( _V X._k _V ) X._k _V ) i^i
     `'_k ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k SSet_k ) $=
      ( vx vy cv cssetk wcel copab cvv cxpk csik cins3k cins2k cin cimak ccompl
      cpw1 cun csymdif cimagek cnnc ccnvk copk wss c1c cdif ccomk c0c csn cuni1
      cidk csset wb vex opkelssetkg mp2an opabbii setconslem4 df-sset 3eqtr4ri
      ) ACZBCZUADEZABFUSUTUBZABFGGHGHDIIJZDDJZDKZLUCOOZMNJVEKVDKVCPQVFOOZMUDVFM
      RSGHLUISNGHLPRTZIUEJVEVEVHDUEUFUGUGGHPJQVFMNIJLVFMKPKQVGMNTLDMUHUHUJVAVBA
      BUSGEUTGEVAVBUKAULBULUSUTGGUMUNUOABDUPABUQUR $.
      $( [7-Jan-2015] $)
  $}

  $( The subset relationship is a set.  (Contributed by SF, 6-Jan-2015.) $)
  ssetex $p |- SSet e. _V $=
    ( cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun csymdif cnnc
    cimagek ccnvk ccomk csn cuni1 vvex xpkex csset c1c cdif dfsset2 setconslem5
    cidk c0c cnvkex inex ssetkex imakex uni1ex eqeltri ) UAAABZABZCDDEZCCEZCFZG
    UBHHZIJEURFUQFUPKLUSHHZIUCUSINMABGUFMJABGKNOZDPEURURVACPUGQQABKELUSIJDEGUSI
    FKFLUTIJZOZGZCIZRZRAUDVFVEVDCUOVCUNAAASSTSTVBUEUHUIUJUKULULUM $.
    $( [6-Jan-2015] $)

  ${
    $d A x y z t w $.  $d B x y z t w $.
    $( Express the image functor in terms of the set construction functions.
       (Contributed by SF, 7-Jan-2015.) $)
    dfima2 $p |- ( A " B ) =
      ( ( ( ( _V X._k ( _V X._k _V ) ) i^i
     ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k ~P1 ~P1 A ) "_k B ) $=
      ( vx vy vw vt cv cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl
      cun csymdif wcel cima wbr wrex cab c1c cdif cimagek cnnc cidk ccnvk ccomk
      vz c0c csn df-ima copk vex elimak cop setconslem6 opeq1 eleq1d opkelopkab
      weq opeq2 df-br bitr4i rexbii bitri abbi2i eqtr4i ) ABUACGZDGZAUBZCBUCZDU
      DHHHIIJKKLZJJLZJMZNUEOOZPQLVRMVQMVPRSVSOOZPUFVSPUGUHHINUIUHQHINRUGUJZKUKL
      VRVRWAJUKUMUNUNHIRLSVSPQKLNVSPMRMSVTPQNAOOPZBPZDCABUOVODWCVMWCTVLVMUPWBTZ
      CBUCVOCWBBVMDUQZURWDVNCBWDVLVMUSZATZVNEGZFGZUSZATVLWIUSZATWGULEFWBVLVMEFU
      LAUTECVDWJWKAWHVLWIVAVBFDVDWKWFAWIVMVLVEVBCUQWEVCVLVMAVFVGVHVIVJVK $.
      $( [7-Jan-2015] $)
  $}

  $( The image of a set under a set is a set.  (Contributed by SF,
     7-Jan-2015.) $)
  imaexg $p |- ( ( A e. V /\ B e. W ) -> ( A " B ) e. _V ) $=
    ( wcel cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun csymdif
    cimagek cnnc vvex wa cima c1c cdif cidk ccnvk ccomk c0c dfima2 pw1exg xpkex
    csn setconslem5 inex imakexg mpan 3syl sylan syl5eqel ) ACEZBDEZUAABUBFFFGZ
    GZHIIJZHHJZHKZLUCMMZNOJVFKVEKVDPQVGMMZNUDVGNRSFGLUESOFGLPRUFZIUGJVFVFVIHUGU
    HULULFGPJQVGNOIJLVGNKPKQVHNOZLZAMZMZNZBNZFABUIUTVNFEZVAVOFEUTVLFEVMFEZVPACU
    JVLFUJVKFEVQVPVCVJFVBTFFTTUKUKUMUNVKVMFFUOUPUQVNBFDUOURUS $.
    $( [7-Jan-2015] $)

  ${
    imaex.1 $e |- A e. _V $.
    imaex.2 $e |- B e. _V $.
    $( The image of a set under a set is a set.  (Contributed by SF,
       7-Jan-2015.) $)
    imaex $p |- ( A " B ) e. _V $=
      ( cvv wcel cima imaexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [7-Jan-2015] $)
  $}

  ${
    $d A a b c x y z $.  $d B a b c x y z $.
    $( Express Quine composition via Kuratowski composition.  (Contributed by
       SF, 7-Jan-2015.) $)
    dfco1 $p |- ( A o. B ) =
U.1 U.1 ( ( ( ( _V X._k _V ) X._k _V ) i^i
     `'_k ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k
( ( ( ( _V X._k ( _V X._k _V ) ) i^i
     ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k ~P1 ~P1 A )
o._k
( ( ( _V X._k ( _V X._k _V ) ) i^i
     ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k ~P1 ~P1 B ) ) ) $=
      ( vx vy vz va vb vc cv cvv cxpk cssetk csik cins3k cins2k cpw1 cimak wcel
      cin cop copk c1c ccompl cun csymdif cdif cimagek cnnc ccnvk ccomk c0c csn
      cidk copab wbr wa wex cuni1 ccom vex opkelcok setconslem6 weq opeq1 opeq2
      eleq1d opkelopkab df-br bitr4i anbi12i exbii opabbii setconslem4 3eqtr4ri
      bitri df-co ) CIZDIZUAJJJKZKLMMNZLLNZLOZSUBPPZQUCNWBOWAOVTUDUEWCPPZQUFWCQ
      UGUHJKSUMUHUCJKSUDUGUIZMUJNWBWBWELUJUKULULJKUDNUEWCQUCMNSWCQOUDOUEWDQUCZS
      ZAPPQZWGBPPQZUJZRZCDUNVQEIZBUOZWLVRAUOZUPZEUQZCDUNVSJKWFUISWJQURURABUSWKW
      PCDWKVQWLUAWIRZWLVRUAWHRZUPZEUQWPEVQVRWHWICUTZDUTZVAWSWOEWQWMWRWNWQVQWLTZ
      BRZWMFIZGIZTZBRVQXETZBRXCHFGWIVQWLFGHBVBFCVCXFXGBXDVQXEVDVFGEVCXGXBBXEWLV
      QVEVFWTEUTZVGVQWLBVHVIWRWLVRTZARZWNXFARWLXETZARXJHFGWHWLVRFGHAVBFEVCXFXKA
      XDWLXEVDVFGDVCXKXIAXEVRWLVEVFXHXAVGWLVRAVHVIVJVKVOVLCDWJVMCDEABVPVN $.
      $( [7-Jan-2015] $)
  $}

  $( The composition of two sets is a set.  (Contributed by SF, 7-Jan-2015.) $)
  coexg $p |- ( ( A e. V /\ B e. W ) -> ( A o. B ) e. _V ) $=
    ( wcel cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun csymdif
    ccomk vvex pw1exg ccom c1c cdif cimagek cnnc cidk ccnvk c0c csn cuni1 dfco1
    wa xpkex setconslem5 cnvkex inex imakexg sylancr cokexg syl2an uni1exg 3syl
    syl syl5eqel ) ACEZBDEZULZABUAFFGZFGZHIIJZHHJZHKZLUBMMZNOJVLKVKKVJPQVMMMZNU
    CVMNUDUEFGLUFUEOFGLPUDUGZIRJVLVLVOHRUHUIUIFGPJQVMNOIJLVMNKPKQVNNOZUGZLZFVHG
    ZVPLZAMZMZNZVTBMZMZNZRZNZUJZUJZFABUKVGWHFEZWIFEWJFEVGVRFEWGFEZWKVIVQVHFFFSS
    UMZSUMVPUNUOUPVEWCFEZWFFEZWLVFVEVTFEZWBFEZWNVSVPFVHSWMUMUNUPZVEWAFEWQACTWAF
    TVCVTWBFFUQURVFWPWEFEZWOWRVFWDFEWSBDTWDFTVCVTWEFFUQURWCWFFFUSUTVRWGFFUQURWH
    FVAWIFVAVBVD $.
    $( [7-Jan-2015] $)

  ${
    coex.1 $e |- A e. _V $.
    coex.2 $e |- B e. _V $.
    $( The composition of two sets is a set.  (Contributed by SF,
       7-Jan-2015.) $)
    coex $p |- ( A o. B ) e. _V $=
      ( cvv wcel ccom coexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [7-Jan-2015] $)
  $}

  ${
    $d A x y z w a b c $.
    $( Express singleton image in terms of the Kuratowski singleton image.
       (Contributed by SF, 7-Jan-2015.) $)
    dfsi2 $p |- SI A =
U.1 U.1 ( ( ( ( _V X._k _V ) X._k _V ) i^i
     `'_k ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k
SI_k ( ( ( _V X._k ( _V X._k _V ) ) i^i
     ~ ( ( Ins3_k SI_k SI_k SSet_k (+)
          Ins2_k
            ( Ins3_k ( SSet_k o._k SI_k `'_k Image_k ( ( Image_k ( ( Ins3_k ~ (
        ( Ins3_k SSet_k i^i Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) ) u.
              Ins2_k ( ( Ins2_k SSet_k i^i
    Ins3_k SI_k ~ ( ( Ins2_k SSet_k (+)
         Ins3_k ( ( `'_k Image_k ( ( Image_k ( ( Ins3_k ~ ( ( Ins3_k SSet_k i^i
        Ins2_k SSet_k ) "_k ~P1 ~P1 1c ) \
      ( ( Ins2_k Ins2_k SSet_k
          (+)
          ( Ins2_k Ins3_k SSet_k u.
            Ins3_k SI_k SI_k SSet_k ) )
            "_k ~P1 ~P1 ~P1 ~P1 1c ) )
  "_k ~P1 ~P1 1c ) i^i ( Nn X._k _V ) ) u.
  ( _I_k i^i ( ~ Nn X._k _V ) ) ) o._k SSet_k ) u. ( { { 0c } } X._k _V ) ) )
        "_k
         ~P1 ~P1 1c ) )
    "_k ~P1 ~P1 1c ) ) ) "_k
          ~P1 ~P1 ~P1 ~P1 1c ) ) "_k ~P1 ~P1 A ) ) $=
      ( vz vw vx vy va vb cv cvv cxpk cssetk csik cins3k cins2k cin cpw1 ccompl
      cimak cun wcel vc copk c1c csymdif cdif cimagek cnnc cidk ccnvk ccomk c0c
      csn copab wceq wbr w3a wex cuni1 csi wb vex opkelsikg cop setconslem6 weq
      mp2an opeq1 eleq1d opeq2 opkelopkab df-br bitr4i 2exbii bitri setconslem4
      3anbi3i opabbii df-si 3eqtr4ri ) BHZCHZUBIIIJZJKLLMZKKMZKNZOUCPPZRQMWENWD
      NWCSUDWFPPZRUEWFRUFUGIJOUHUGQIJOSUFUIZLUJMWEWEWHKUJUKULULIJSMUDWFRQLMOWFR
      NSNUDWGRQZOAPPRZLZTZBCUMVTDHZULUNZWAEHZULUNZWMWOAUOZUPZEUQDUQZBCUMWBIJWIU
      IOWKRURURAUSWLWSBCWLWNWPWMWOUBWJTZUPZEUQDUQZWSVTITWAITWLXBUTBVACVADEVTWAW
      JIIVBVFXAWRDEWTWQWNWPWTWMWOVCZATZWQFHZGHZVCZATWMXFVCZATXDUAFGWJWMWOFGUAAV
      DFDVEXGXHAXEWMXFVGVHGEVEXHXCAXFWOWMVIVHDVAEVAVJWMWOAVKVLVPVMVNVQBCWKVOBCD
      EAVRVS $.
      $( [7-Jan-2015] $)
  $}

  $( The singleton image of a set is a set.  (Contributed by SF,
     7-Jan-2015.) $)
  siexg $p |- ( A e. V -> SI A e. _V ) $=
    ( wcel cvv cxpk cssetk csik cins3k cins2k cin cpw1 cimak ccompl cun csymdif
    cimagek cnnc vvex xpkex 3syl csi c1c cdif cidk ccnvk ccomk c0c cuni1 pw1exg
    csn dfsi2 setconslem5 inex imakexg mpan sikexg cnvkex uni1exg syl5eqel ) AB
    CZAUADDEZDEZFGGHZFFHZFIZJUBKKZLMHVEIVDIVCNOVFKKZLUCVFLPQDEJUDQMDEJNPUEZGUFH
    VEVEVHFUFUGUJUJDENHOVFLMGHJVFLINIOVGLMZUEZJZDVAEZVIJZAKZKZLZGZLZUHZUHZDAUKU
    TVRDCZVSDCVTDCUTVPDCZVQDCZWAUTVNDCVODCZWBABUIVNDUIVMDCWDWBVLVIDVARDDRRSZSUL
    UMVMVODDUNUOTVPDUPVKDCWCWAVBVJVADWERSVIULUQUMVKVQDDUNUOTVRDURVSDURTUS $.
    $( [7-Jan-2015] $)

  ${
    siex.1 $e |- A e. _V $.
    $( The singleton image of a set is a set.  (Contributed by SF,
       7-Jan-2015.) $)
    siex $p |- SI A e. _V $=
      ( cvv wcel csi siexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jan-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65.  (Contributed by
       SF, 19-Apr-2004.) $)
    elima $p |- ( A e. ( B " C ) <-> E. x e. C x B A ) $=
      ( vy cima wcel cvv wbr wrex elex brex simprd rexlimivw wceq breq2 rexbidv
      cv df-ima elab2g pm5.21nii ) BCDFZGBHGZARZBCIZADJZBUBKUEUCADUEUDHGUCUDBCL
      MNUDERZCIZADJUFEBUBHUGBOUHUEADUGBUDCPQEACDSTUA $.
      $( [19-Apr-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65.  (Contributed by
       SF, 11-Aug-2004.) $)
    elima2 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ x B A ) ) $=
      ( cima wcel cv wbr wrex wa wex elima df-rex bitri ) BCDEFAGZBCHZADIODFPJA
      KABCDLPADMN $.
      $( [11-Aug-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65.  (Contributed by
       SF, 14-Aug-1994.) $)
    elima3 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ <. x , A >. e. B ) ) $=
      ( cima wcel cv cop wrex wa wex wbr elima df-br rexbii bitri df-rex ) BCDE
      FZAGZBHCFZADIZSDFTJAKRSBCLZADIUAABCDMUBTADSBCNOPTADQP $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    $( Binary relationship form of the subset relationship.  (Contributed by
       SF, 11-Feb-2015.) $)
    brssetg $p |- ( ( A e. V /\ B e. W ) -> ( A SSet B <-> A C_ B ) ) $=
      ( vx vy cv wss csset sseq1 sseq2 df-sset brabg ) EGZFGZHAOHABHEFABCDINAOJ
      OBAKEFLM $.
      $( [11-Feb-2015] $)
  $}

  ${
    brsset.1 $e |- A e. _V $.
    brsset.2 $e |- B e. _V $.
    $( Binary relationship form of the subset relationship.  (Contributed by
       SF, 11-Feb-2015.) $)
    brsset $p |- ( A SSet B <-> A C_ B ) $=
      ( cvv wcel csset wbr wss wb brssetg mp2an ) AEFBEFABGHABIJCDABEEKL $.
      $( [11-Feb-2015] $)
  $}

  ${
    brssetsn.1 $e |- A e. _V $.
    brssetsn.2 $e |- B e. _V $.
    $( Set membership in terms of the subset relationship.  (Contributed by SF,
       11-Feb-2015.) $)
    brssetsn $p |- ( { A } SSet B <-> A e. B ) $=
      ( csn csset wbr wss wcel snex brsset snss bitr4i ) AEZBFGNBHABINBAJDKABCL
      M $.
      $( [11-Feb-2015] $)

    $( Set membership in terms of the subset relationship.  (Contributed by SF,
       11-Feb-2015.) $)
    opelssetsn $p |- ( <. { A } , B >. e. SSet <-> A e. B ) $=
      ( csn cop csset wcel wbr df-br brssetsn bitr3i ) AEZBFGHMBGIABHMBGJABCDKL
      $.
      $( [11-Feb-2015] $)
  $}

  ${
    $d A w $.  $d A x $.  $d A y $.  $d A z $.  $d B w $.  $d B x $.  $d B y $.
    $d B z $.  $d R w $.  $d R x $.  $d R y $.  $d R z $.  $d w x $.  $d w y $.
    $d w z $.  $d x y $.  $d x z $.  $d y z $.

    $( Binary relationship over a singleton image.  (Contributed by SF,
       11-Feb-2015.) $)
    brsi $p |- ( A SI R B <->
          E. x E. y ( A = { x } /\ B = { y } /\ x R y ) ) $=
      ( vz vw wbr cvv wcel wa cv csn wceq w3a wex snex eleq1 eqeq1 2exbidv brex
      csi pm3.2i bi2anan9 mpbiri 3adant3 exlimivv 3anbi1d df-si brabg pm5.21nii
      3anbi2d ) CDEUBZHCIJZDIJZKZCALZMZNZDBLZMZNZUQUTEHZOZBPAPZCDUMUAVDUPABUSVB
      UPVCUSVBKUPURIJZVAIJZKVFVGUQQUTQUCUSUNVFVBUOVGCURIRDVAIRUDUEUFUGFLZURNZGL
      ZVANZVCOZBPAPUSVKVCOZBPAPVEFGCDIIUMVHCNZVLVMABVNVIUSVKVCVHCURSUHTVJDNZVMV
      DABVOVKVBUSVCVJDVASULTFGABEUIUJUK $.
      $( [11-Feb-2015] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Epsilon and identity relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constant symbols. $)
  $c _E $. $( Letter E (for epsilon relation) $)
  $c _I $.  $( Letter I (for identity relation) $)

  $( Extend class notation to include the epsilon relation. $)
  cep $a class _E $.

  $( Extend the definition of a class to include identity relation. $)
  cid $a class _I $.

  ${
    $d x y $.
    $( Define the epsilon relation.  Similar to Definition 6.22 of
       [TakeutiZaring] p. 30. $)
    df-eprel $a |- _E = { <. x , y >. | x e. y } $.
  $}

  ${
    $d x y A $.  $d x y B $.
    epelc.1 $e |- B e. _V $.
    $( The epsilon relation and the membership relation are the same.
       (Contributed by ?who?, 13-Aug-1995.) $)
    epelc $p |- ( A _E B <-> A e. B ) $=
      ( vx vy cep wbr cvv wcel brex simpld wb wel cv eleq1 eleq2 df-eprel brabg
      elex mpan2 pm5.21nii ) ABFGZAHIZABIZUBUCBHIZABFJKABSUCUEUBUDLCDEMAENZIUDD
      EABHHFDNAUFOUFBAPDEQRTUA $.
      $( [13-Aug-1995] $)
  $}

  ${
    $( The epsilon relation and the membership relation are the same.
       (Contributed by ?who?, 13-Aug-1995.) $)
    epel $p |- ( x _E y <-> x e. y ) $=
      ( cv vex epelc ) ACBCBDE $.
      $( [13-Aug-1995] $)
  $}

  ${
    $d x y $.
    $( Define the identity relation.  Definition 9.15 of [Quine] p. 64. $)
    df-id $a |- _I = { <. x , y >. | x = y } $.
  $}


  ${
    $d w z x $.  $d w z y $.
    $( A stronger version of ~ df-id that doesn't require ` x ` and ` y ` to be
       distinct.  Ordinarily, we wouldn't use this as a definition, since
       non-distinct dummy variables would make soundness verification more
       difficult (as the proof here shows).  The proof can be instructive in
       showing how distinct variable requirements may be eliminated, a task
       that is not necessarily obvious.  (Contributed by NM, 5-Feb-2008.)
       (Revised by Mario Carneiro, 18-Nov-2016.) $)
    dfid3 $p |- _I = { <. x , y >. | x = y } $=
      ( vz vw cv wceq copab cop wa wex cab wb exbii opeq2 equequ2 anbi12d nfnae
      eqeq2d nfcvd nfeqd cid df-id wal ancom equcom bitri ceqsexv equid biantru
      anbi1i vex 3bitri nfe1 19.9 bitr4i sps drex1 drex2 syl5bb wn nfcvf2 nfopd
      nfand wi a1i cbvexd exbid pm2.61i abbii df-opab 3eqtr4i eqtri ) UAAEZCEZF
      ZACGZVMBEZFZABGZACUBDEZVMVNHZFZVOIZCJZAJZDKVTVMVQHZFZVRIZBJZAJZDKVPVSWEWJ
      DVRAUCZWEWJLWEVTVMVMHZFZVMVMFZIZAJZAJZWKWJWEWPWQWDWOAWDVNVMFZWBIZCJWMWOWC
      WSCWCVOWBIWSWBVOUDVOWRWBACUEUJUFMWBWMCVMAUKWRWAWLVTVNVMVMNRUGWNWMAUHUIULM
      WPAWOAUMUNUOWPWIABAWOWHABVRWOWHLAVRWMWGWNVRVRWLWFVTVMVQVMNRABAOPUPUQURUSW
      KUTZWDWIAABAQWTWCWHCBABBQWTWBVOBWTBVTWAWTBVTSWTBVMVNABVAZWTBVNSZVBTWTBVMV
      NXAXBTVCVNVQFZWCWHLVDWTXCWBWGVOVRXCWAWFVTVNVQVMNRCBAOPVEVFVGVHVIVOACDVJVR
      ABDVJVKVL $.
  $}

  $( Alternate definition of the identity relation.  (Contributed by NM,
     15-Mar-2007.) $)
  dfid2 $p |- _I = { <. x , x >. | x = x } $=
    ( dfid3 ) AAB $.


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Functions and relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c X. $. $( Times symbol (cross product symbol) (read: 'cross') $)
  $c `' $. $( Small elevated smiley (converse operation) $)
  $c dom $. $( Domain $)
  $c ran $. $( Range $)
  $c |` $. $( Right hook (restriction symbol) $)
  $c Rel $. $( Relation predicate $)
  $c Fun $. $( Function predicate $)
  $c Fn $. $( Function connective $)
  $c : $. $( Colon $)
  $c --> $. $( Domain-codomain connective $)
  $c -1-1-> $. $( 'One-to-one' domain-codomain connective $)
  $c -onto-> $. $( 'Onto' domain-codomain connective $)
  $c -1-1-onto-> $. $( 'One-to-one' and 'onto' domain-codomain connective $)
  $c ` $. $( Left apostrophe (function value symbol) $)
  $c Isom $. $( Isomorphism $)
  $c 2nd $. $( Second function. $)

  $( Extend the definition of a class to include the cross product. $)
  cxp $a class ( A X. B ) $.

  $( Extend the definition of a class to include the converse of a class. $)
  ccnv $a class `' A $.

  $( Extend the definition of a class to include the domain of a class. $)
  cdm $a class dom A $.

  $( Extend the definition of a class to include the range of a class. $)
  crn $a class ran A $.

  $( Extend the definition of a class to include the restriction of a class.
     (Read:  The restriction of ` A ` to ` B ` .) $)
  cres $a class ( A |` B ) $.

  $( Extend the definition of a wff to include the relation predicate.  (Read:
     ` A ` is a relation.) $)
  wrel $a wff Rel A $.

  $( Extend the definition of a wff to include the function predicate.  (Read:
     ` A ` is a function.) $)
  wfun $a wff Fun A $.

  $( Extend the definition of a wff to include the function predicate with a
     domain.  (Read: ` A ` is a function on ` B ` .) $)
  wfn $a wff A Fn B $.

  $( Extend the definition of a wff to include the function predicate with
     domain and codomain.  (Read: ` F ` maps ` A ` into ` B ` .) $)
  wf $a wff F : A --> B $.

  $( Extend the definition of a wff to include one-to-one functions.  (Read:
     ` F ` maps ` A ` one-to-one into ` B ` .)  The notation ("1-1" above the
     arrow) is from Definition 6.15(5) of [TakeutiZaring] p. 27. $)
  wf1 $a wff F : A -1-1-> B $.

  $( Extend the definition of a wff to include onto functions.  (Read: ` F `
     maps ` A ` onto ` B ` .)  The notation ("onto" below the arrow) is from
     Definition 6.15(4) of [TakeutiZaring] p. 27. $)
  wfo $a wff F : A -onto-> B $.

  $( Extend the definition of a wff to include one-to-one onto functions.
     (Read: ` F ` maps ` A ` one-to-one onto ` B ` .)  The notation ("1-1"
     above the arrow and "onto" below the arrow) is from Definition 6.15(6) of
     [TakeutiZaring] p. 27. $)
  wf1o $a wff F : A -1-1-onto-> B $.

  $( Extend the definition of a class to include the value of a function.
     (Read:  The value of ` F ` at ` A ` , or " ` F ` of ` A ` .") $)
  cfv $a class ( F ` A ) $.

  $( Extend the definition of a wff to include the isomorphism property.
     (Read: ` H ` is an ` R ` , ` S ` isomorphism of ` A ` onto ` B ` .) $)
  wiso $a wff H Isom R , S ( A , B ) $.

  $( Extend the definition of a class to include the second function. $)
  c2nd $a class 2nd $.

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Define the cross product of two classes.  Definition 9.11 of [Quine]
       p. 64. $)
    df-xp $a |- ( A X. B ) = { <. x , y >. | ( x e. A /\ y e. B ) } $.

    $( Define the relation predicate.  Definition 6.4(1) of [TakeutiZaring]
       p. 23.  For alternate definitions, see ~ dfrel2 and ~ dfrel3 . $)
    df-rel $a |- ( Rel A <-> A C_ ( _V X. _V ) ) $.

    $( Define the converse of a class.  Definition 9.12 of [Quine] p. 64.  We
       use Quine's breve accent (smile) notation.  Like Quine, we use it as a
       prefix, which eliminates the need for parentheses.  Many authors use the
       postfix superscript "to the minus one."  "Converse" is Quine's
       terminology; some authors call it "inverse," especially when the
       argument is a function. $)
    df-cnv $a |- `' A = { <. x , y >. | y A x } $.


    $( Define the range of a class.  The notation " ` ran ` " is used by
       Enderton; other authors sometimes use script R or script W. $)
    df-rn $a |- ran A = ( A " _V ) $.

    $( Define the domain of a class.  The notation " ` dom ` " is used by
       Enderton; other authors sometimes use script D. $)
    df-dm $a |- dom A = ran `' A $.

    $( Define the restriction of a class.  Definition 6.6(1) of [TakeutiZaring]
       p. 24. $)
    df-res $a |- ( A |` B ) = ( A i^i ( B X. _V ) ) $.

    $( Define a function.  Definition 10.1 of [Quine] p. 65.  For alternate
       definitions, see ~ dffun2 , ~ dffun3 , ~ dffun4 , ~ dffun5 , ~ dffun6 ,
       ~ dffun7 , ~ dffun8 , and ~ dffun9 . $)
    df-fun $a |- ( Fun A <-> ( Rel A /\ ( A o. `' A ) C_ _I ) ) $.

    $( Define a function with domain.  Definition 6.15(1) of [TakeutiZaring]
       p. 27.  For alternate definitions, see ~ dffn2 , ~ dffn3 , ~ dffn4 , and
       ~ dffn5 . $)
    df-fn $a |- ( A Fn B <-> ( Fun A /\ dom A = B ) ) $.

    $( Define a function (mapping) with domain and codomain.  Definition
       6.15(3) of [TakeutiZaring] p. 27.  For alternate definitions, see
       ~ dff2 , ~ dff3 , and ~ dff4 . $)
    df-f $a |- ( F : A --> B <-> ( F Fn A /\ ran F C_ B ) ) $.

    $( Define a one-to-one function.  For equivalent definitions see ~ dff12
       and ~ dff13 .  Compare Definition 6.15(5) of [TakeutiZaring] p. 27.  We
       use their notation ("1-1" above the arrow). $)
    df-f1 $a |- ( F : A -1-1-> B <-> ( F : A --> B /\ Fun `' F ) ) $.

    $( Define an onto function.  Definition 6.15(4) of [TakeutiZaring] p. 27.
       We use their notation ("onto" under the arrow).  For alternate
       definitions, see ~ dffo2 , ~ dffo3 , ~ dffo4 , and ~ dffo5 . $)
    df-fo $a |- ( F : A -onto-> B <-> ( F Fn A /\ ran F = B ) ) $.

    $( Define a one-to-one onto function.  For equivalent definitions see
       ~ dff1o2 , ~ dff1o3 , ~ dff1o4 , and ~ dff1o5 .  Compare Definition
       6.15(6) of [TakeutiZaring] p. 27.  We use their notation ("1-1" above
       the arrow and "onto" below the arrow). $)
    df-f1o $a |- ( F : A -1-1-onto-> B <->
                ( F : A -1-1-> B /\ F : A -onto-> B ) ) $.

    $( Define the value of a function.  Definition taken from dffv4 in set.mm.
       This works for a general definition here due to the different existence
       properties of our ordered pairs. $)
    dffv4 $a |- ( F ` A ) = ( iota x A F x ) $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $( Define the isomorphism predicate.  We read this as " ` H ` is an ` R ` ,
       ` S ` isomorphism of ` A ` onto ` B ` ."  Normally, ` R ` and ` S ` are
       ordering relations on ` A ` and ` B ` respectively.  Definition 6.28 of
       [TakeutiZaring] p. 32, whose notation is the same as ours except that
       ` R ` and ` S ` are subscripts. $)
    df-iso $a |- ( H Isom R , S ( A , B ) <-> ( H : A -1-1-onto-> B /\
                 A. x e. A A. y e. A ( x R y <-> ( H ` x ) S ( H ` y ) ) ) ) $.

  $}

  ${
    $d x y z $.
    $( Define the ` 2nd ` function.  This function extracts the second member
       of an ordered pair. $)
    df-2nd $a |- 2nd = { <. x , y >. | E. z x = <. z , y >. } $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for cross product.  (Contributed by ?who?,
       4-Jul-1994.) $)
    xpeq1 $p |- ( A = B -> ( A X. C ) = ( B X. C ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi1d opabbidv df-xp 3eqtr4g ) A
      BFZDGZAHZEGCHZIZDEJRBHZTIZDEJACKBCKQUAUCDEQSUBTABRLMNDEACODEBCOP $.
      $( [4-Jul-1994] $)

    $( Equality theorem for cross product.  (Contributed by ?who?,
       5-Jul-1994.) $)
    xpeq2 $p |- ( A = B -> ( C X. A ) = ( C X. B ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi2d opabbidv df-xp 3eqtr4g ) A
      BFZDGCHZEGZAHZIZDEJRSBHZIZDEJCAKCBKQUAUCDEQTUBRABSLMNDECAODECBOP $.
      $( [5-Jul-1994] $)

    $( Membership in a cross product.  Uses fewer axioms than ~ elxp .
       (Contributed by ?who?, 4-Jul-1994.) $)
    elxpi $p |- ( A e. ( B X. C ) -> E. x E. y ( A = <. x , y >. /\
               ( x e. B /\ y e. C ) ) ) $=
      ( vz cv cop wceq wcel wa wex cab cxp eqeq1 anbi1d 2exbidv elabg ibi copab
      df-xp df-opab eqtri eleq2s ) CAGZBGZHZIZUEDJUFEJKZKZBLALZCFGZUGIZUIKZBLAL
      ZFMZDENZCUPJUKUOUKFCUPULCIZUNUJABURUMUHUIULCUGOPQRSUQUIABTUPABDEUAUIABFUB
      UCUD $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product.  (Contributed by ?who?, 4-Jul-1994.) $)
    elxp $p |- ( A e. ( B X. C ) <-> E. x E. y ( A = <. x , y >. /\
               ( x e. B /\ y e. C ) ) ) $=
      ( cxp wcel cv wa copab cop wceq wex df-xp eleq2i elopab bitri ) CDEFZGCAH
      ZDGBHZEGIZABJZGCSTKLUAIBMAMRUBCABDENOUAABCPQ $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product.  (Contributed by ?who?, 23-Feb-2004.) $)
    elxp2 $p |- ( A e. ( B X. C ) <-> E. x e. B E. y e. C A = <. x , y >. ) $=
      ( cv wcel cop wceq wrex wa wex cxp df-rex r19.42v an13 exbii 3bitr3i elxp
      3bitr4ri ) AFZDGZCUABFZHIZBEJZKZALUDUBUCEGZKKZBLZALUEADJCDEMGUFUIAUBUDKZB
      EJUGUJKZBLUFUIUJBENUBUDBEOUKUHBUGUBUDPQRQUEADNABCDEST $.
      $( [23-Feb-2004] $)
  $}

  $( Equality theorem for cross product.  (Contributed by FL, 31-Aug-2009.) $)
  xpeq12 $p |- ( ( A = B /\ C = D ) -> ( A X. C ) = ( B X. D ) ) $=
    ( wceq cxp xpeq1 xpeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [31-Aug-2009] $)

  ${
    xpeq1i.1 $e |- A = B $.
    $( Equality inference for cross product.  (Contributed by ?who?,
       21-Dec-2008.) $)
    xpeq1i $p |- ( A X. C ) = ( B X. C ) $=
      ( wceq cxp xpeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality inference for cross product.  (Contributed by ?who?,
       21-Dec-2008.) $)
    xpeq2i $p |- ( C X. A ) = ( C X. B ) $=
      ( wceq cxp xpeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    xpeq12i.1 $e |- A = B $.
    xpeq12i.2 $e |- C = D $.
    $( Equality inference for cross product.  (Contributed by FL,
       31-Aug-2009.) $)
    xpeq12i $p |- ( A X. C ) = ( B X. D ) $=
      ( wceq cxp xpeq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [31-Aug-2009] $)
  $}

  ${
    xpeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for cross product.  (Contributed by Jeff Madsen,
       17-Jun-2010.) $)
    xpeq1d $p |- ( ph -> ( A X. C ) = ( B X. C ) ) $=
      ( wceq cxp xpeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [17-Jun-2010] $)

    $( Equality deduction for cross product.  (Contributed by Jeff Madsen,
       17-Jun-2010.) $)
    xpeq2d $p |- ( ph -> ( C X. A ) = ( C X. B ) ) $=
      ( wceq cxp xpeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [17-Jun-2010] $)

    xpeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for cross product.  (Contributed by ?who?,
       8-Dec-2013.) $)
    xpeq12d $p |- ( ph -> ( A X. C ) = ( B X. D ) ) $=
      ( wceq cxp xpeq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [8-Dec-2013] $)
  $}


  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    nfxp.1 $e |- F/_ x A $.
    nfxp.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for cross product.  (Contributed by
       NM, 15-Sep-2003.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nfxp $p |- F/_ x ( A X. B ) $=
      ( vy vz cxp cv wcel wa copab df-xp nfcri nfan nfopab nfcxfr ) ABCHFIBJZGI
      CJZKZFGLFGBCMTFGARSAAFBDNAGCENOPQ $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Ordered pair membership in a cross product.  (The proof was shortened by
       Andrew Salmon, 12-Aug-2011.)  (Contributed by ?who?, 15-Nov-1994.)
       (Revised by ?who?, 12-Aug-2011.) $)
    opelxp $p |- ( <. A , B >. e. ( C X. D ) <-> ( A e. C /\ B e. D ) ) $=
      ( vx vy cop cv wceq wcel wa wex cxp eqcom bitri anbi1i an4 2exbii df-clel
      opth elxp anbi12i eeanv bitr4i 3bitr4i ) ABGZEHZFHZGZIZUGCJZUHDJZKZKZFLEL
      UGAIZUKKZUHBIZULKZKZFLELZUFCDMJACJZBDJZKZUNUSEFUNUOUQKZUMKUSUJVDUMUJUIUFI
      VDUFUINUGUHABTOPUOUQUKULQOREFUFCDUAVCUPELZURFLZKUTVAVEVBVFEACSFBDSUBUPURE
      FUCUDUE $.
      $( [12-Aug-2011] $) $( [15-Nov-1994] $)

    $( Binary relation on a cross product.  (Contributed by NM,
       22-Apr-2004.) $)
    brxp $p |- ( A ( C X. D ) B <-> ( A e. C /\ B e. D ) ) $=
      ( cxp wbr cop wcel wa df-br opelxp bitri ) ABCDEZFABGMHACHBDHIABMJABCDKL
      $.
      $( [22-Apr-2004] $)
  $}


  ${
    $d A w y z $.  $d B w y z $.  $d C w y z $.  $d D w y z $.  $d w x y z $.
    $( Distribute proper substitution through the cross product of two
       classes.  (Contributed by Alan Sare, 10-Nov-2012.) $)
    csbxpg $p |- ( A e. D -> [_ A / x ]_ ( B X. C ) =
                ( [_ A / x ]_ B X. [_ A / x ]_ C ) ) $=
      ( vz vw vy wcel cv wa wex cab csb cxp wsbc sbcexg sbcang sbcel2g bitrd
      wceq csbabg anbi12d exbidv abbidv eqtrd copab df-xp df-opab eqtri csbeq2i
      cop sbcg 3eqtr4g ) BEIZABFJGJZHJZULUAZUPCIZUQDIZKZKZHLZGLZFMZNZURUPABCNZI
      ZUQABDNZIZKZKZHLZGLZFMZABCDOZNVGVIOZUOVFVDABPZFMVOVDAFBEUBUOVRVNFUOVRVCAB
      PZGLVNVCGABEQUOVSVMGUOVSVBABPZHLVMVBHABEQUOVTVLHUOVTURABPZVAABPZKVLURVAAB
      ERUOWAURWBVKURABEUMUOWBUSABPZUTABPZKVKUSUTABERUOWCVHWDVJABUPCESABUQDESUCT
      UCTUDTUDTUEUFABVPVEVPVAGHUGVEGHCDUHVAGHFUIUJUKVQVKGHUGVOGHVGVIUHVKGHFUIUJ
      UN $.
  $}


  ${
    $d x y z A $.  $d x y z B $.  $d y z ph $.  $d x ps $.
    rabxp.1 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Membership in a class builder restricted to a cross product.
       (Contributed by ?who?, 20-Feb-2014.) $)
    rabxp $p |- { x e. ( A X. B ) | ph }
             = { <. y , z >. | ( y e. A /\ z e. B /\ ps ) } $=
      ( cv cxp wcel wa cab cop wceq w3a wex crab copab elxp anbi1i anass anbi2d
      19.41vv df-3an syl6bbr pm5.32i bitri 2exbii 3bitr2i abbii df-opab 3eqtr4i
      df-rab ) CIZFGJZKZALZCMUODIZEIZNOZUSFKZUTGKZBPZLZEQDQZCMACUPRVDDESURVFCUR
      VAVBVCLZLZEQDQZALVHALZEQDQVFUQVIADEUOFGTUAVHADEUDVJVEDEVJVAVGALZLVEVAVGAU
      BVAVKVDVAVKVGBLVDVAABVGHUCVBVCBUEUFUGUHUIUJUKACUPUNVDDECULUM $.
      $( [20-Feb-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Representation of a constant function using ordered pairs.  (Contributed
       by ?who?, 12-Oct-1999.) $)
    fconstopab $p |- ( A X. { B } ) = { <. x , y >. | ( x e. A /\ y = B ) } $=
      ( csn cxp cv wcel wa copab wceq df-xp df-sn abeq2i anbi2i opabbii eqtri )
      CDEZFAGCHZBGZRHZIZABJSTDKZIZABJABCRLUBUDABUAUCSUCBRBDMNOPQ $.
      $( [12-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y z C $.  $d x y z R $.
    vtoclr.2 $e |- ( ( x R y /\ y R z ) -> x R z ) $.
    $( Variable to class conversion of transitive relation.  (Contributed by
       ?who?, 9-Jun-1998.) $)
    vtoclr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
      ( cvv wcel wa wbr brex wi cv wceq breq1 imbi12d imbi2d breq2 simprd mpcom
      anim12i anbi1d anbi12d imbi1d anbi2d vtoclg vtocl2g imp ) DIJEIJZKZFIJZKD
      EGLZEFGLZKZDFGLZUNULUOUMDEGMUOUKUMEFGMUAUCULUMUPUQNZUMAOZBOZGLZUTFGLZKZUS
      FGLZNZNUMDUTGLZVBKZUQNZNUMURNABDEIIUSDPZVEVHUMVIVCVGVDUQVIVAVFVBUSDUTGQUD
      USDFGQRSUTEPZVHURUMVJVGUPUQVJVFUNVBUOUTEDGTUTEFGQUEUFSVAUTCOZGLZKZUSVKGLZ
      NVECFIVKFPZVMVCVNVDVOVLVBVAVKFUTGTUGVKFUSGTRHUHUIUJUB $.
      $( [9-Jun-1998] $)
  $}

  ${
    $d x y z A $.  $d x z B $.  $d y z ph $.  $d x ps $.
    ralxp.1 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Write a double restricted quantification as one universal quantifier.
       In this version of ~ ralxp , ` B ( y ) ` is not assumed to be constant.
       (Contributed by Mario Carneiro, 29-Dec-2014.) $)
    raliunxp $p |- ( A. x e. U_ y e. A ( { y } X. B ) ph <->
      A. y e. A A. z e. B ps ) $=
      ( cv csn cxp ciun wcel wi wal wa wral wex albii bitri wceq eliunxp imbi1i
      cop 19.23vv bitr4i alrot3 impexp opex imbi2d ceqsalv 2albii r2al 3bitr4i
      df-ral ) CIZDFDIZJGKLZMZANZCOZUQFMEIZGMPZBNZEODOZACURQBEGQDFQVAUPUQVBUDZU
      AZVCPZANZEODOZCOZVEUTVJCUTVHERDRZANVJUSVLADEFGUPUBUCVHADEUEUFSVKVICOZEODO
      VEVICDEUGVMVDDEVMVGVCANZNZCOVDVIVOCVGVCAUHSVNVDCVFUQVBUIVGABVCHUJUKTULTTA
      CURUOBDEFGUMUN $.

    $( Write a double restricted quantification as one universal quantifier.
       In this version of ~ rexxp , ` B ( y ) ` is not assumed to be constant.
       (Contributed by Mario Carneiro, 14-Feb-2015.) $)
    rexiunxp $p |- ( E. x e. U_ y e. A ( { y } X. B ) ph <->
      E. y e. A E. z e. B ps ) $=
      ( wn cv csn cxp ciun wral wrex cop wceq notbid raliunxp dfrex2 3bitr4i
      ralnex ralbii bitri notbii ) AIZCDFDJZKGLMZNZIBEGOZIZDFNZIACUHOUJDFOUIULU
      IBIZEGNZDFNULUFUMCDEFGCJUGEJPQABHRSUNUKDFBEGUBUCUDUEACUHTUJDFTUA $.

    $d y B $.
    $( Universal quantification restricted to a cross product is equivalent to
       a double restricted quantification.  The hypothesis specifies an
       implicit substitution.  (Contributed by NM, 7-Feb-2004.)  (Revised by
       Mario Carneiro, 29-Dec-2014.) $)
    ralxp $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( cxp wral cv csn ciun iunxpconst raleqi raliunxp bitr3i ) ACFGIZJACDFDKL
      GIMZJBEGJDFJACSRDFGNOABCDEFGHPQ $.

    $( Existential quantification restricted to a cross product is equivalent
       to a double restricted quantification.  (Contributed by NM,
       11-Nov-1995.)  (Revised by Mario Carneiro, 14-Feb-2015.) $)
    rexxp $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( cxp wrex cv csn ciun iunxpconst rexeqi rexiunxp bitr3i ) ACFGIZJACDFDKL
      GIMZJBEGJDFJACSRDFGNOABCDEFGHPQ $.
  $}

  ${
    $d u v w x y A $.  $d u v w x y z B $.  $d u v w ph $.  $d u v w ps $.
    ralxpf.1 $e |- ( ph -> A. y ph ) $.
    ralxpf.2 $e |- ( ph -> A. z ph ) $.
    ralxpf.3 $e |- ( ps -> A. x ps ) $.
    ralxpf.4 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Version of ~ ralxp with bound-variable hypotheses.  (Contributed by
       ?who?, 18-Aug-2006.)  (Revised by ?who?, 20-Dec-2008.) $)
    ralxpf $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( vw vu vv wral wsb cbvralsv cv wceq hbsb cxp ralbii ax-17 wcel hbral weq
      hbs1 sbequ12 ralbidv cbvral cop wex vex eqvinop hbbi sbhypf opth sylan9bb
      wa wb sylbi exlimi ralxp 3bitr4ri bitri ) ACFGUAZOACLPZLVFOZBEGOZDFOZACLV
      FQBDMPZEGOZMFOVKENPZNGOZMFOVJVHVLVNMFVKENGQUBVIVLDMFVIMUCVKDEGERZGUDDUCBD
      MUGZUEDMUFZBVKEGBDMUHZUIUJVGVMLMNFGLRZMRZNRZUKZSVSDRZVOUKZSZWDWBSZUSZEULZ
      DULVGVMUTZDEVSVTWAMUMNUMUNWHWIDVGVMDACLDHTVKENDVPTUOWGWIEVGVMEACLEITVKENU
      GUOWEVGBWFVMABCLWDJKUPWFVQENUFZUSBVMUTWCVOVTWAUQVQBVKWJVMVRVKENUHURVAURVB
      VBVAVCVDVE $.
      $( [20-Dec-2008] $) $( [18-Aug-2006] $)

    $( Version of ~ rexxp with bound-variable hypotheses.  (Contributed by
       ?who?, 19-Dec-2008.) $)
    rexxpf $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( wn cxp wral wrex hbn cv cop wceq dfrex2 notbid ralxpf ralnex 3bitr4i
      ralbii bitri notbii ) ALZCFGMZNZLBEGOZLZDFNZLACUIOUKDFOUJUMUJBLZEGNZDFNUM
      UHUNCDEFGADHPAEIPBCJPCQDQEQRSABKUAUBUOULDFBEGUCUEUFUGACUITUKDFTUD $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d w x y A $.  $d w x y z B $.  $d w C $.  $d w D $.
    iunxpf.1 $e |- ( w e. C -> A. y w e. C ) $.
    iunxpf.2 $e |- ( w e. C -> A. z w e. C ) $.
    iunxpf.3 $e |- ( w e. D -> A. x w e. D ) $.
    iunxpf.4 $e |- ( x = <. y , z >. -> C = D ) $.
    $( Indexed union on a cross product is equals a double indexed union.  The
       hypothesis specifies an implicit substitution.  (Contributed by ?who?,
       19-Dec-2008.) $)
    iunxpf $p |- U_ x e. ( A X. B ) C = U_ y e. A U_ z e. B D $=
      ( cxp ciun cv wcel wrex cop wceq eliun eleq2d rexxpf rexbii bitri 3bitr4i
      eqriv ) DAEFMZGNZBECFHNZNZDOZGPZAUGQUKHPZCFQZBEQZUKUHPUKUJPZULUMABCEFIJKA
      OBOCORSGHUKLUAUBAUKUGGTUPUKUIPZBEQUOBUKEUITUQUNBECUKFHTUCUDUEUF $.
      $( [19-Dec-2008] $)
  $}

  ${
    brelg.1 $e |- R C_ ( C X. D ) $.
    $( Two things in a binary relation belong to the relation's domain.
       (Contributed by ?who?, 17-May-1996.) $)
    brel $p |- ( A R B -> ( A e. C /\ B e. D ) ) $=
      ( wbr cxp wcel wa ssbri brxp sylib ) ABEGABCDHZGACIBDIJENABFKABCDLM $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a cross product.  (Contributed by ?who?, 5-Mar-1995.) $)
    elxp3 $p |- ( A e. ( B X. C ) <->
            E. x E. y ( <. x , y >. = A /\ <. x , y >. e. ( B X. C ) ) ) $=
      ( cxp wcel cv cop wceq wa wex elxp eqcom opelxp anbi12i 2exbii bitr4i ) C
      DEFZGCAHZBHZIZJZTDGUAEGKZKZBLALUBCJZUBSGZKZBLALABCDEMUHUEABUFUCUGUDUBCNTU
      ADEOPQR $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Distributive law for cross product over union.  Theorem 103 of [Suppes]
       p. 52.  (Contributed by ?who?, 12-Aug-2004.) $)
    xpundi $p |- ( A X. ( B u. C ) ) = ( ( A X. B ) u. ( A X. C ) ) $=
      ( vx vy cv wcel cun wa copab cxp wo elun anbi2i andi bitri opabbii unopab
      eqtr4i df-xp uneq12i 3eqtr4i ) DFAGZEFZBCHZGZIZDEJZUCUDBGZIZDEJZUCUDCGZIZ
      DEJZHZAUEKABKZACKZHUHUJUMLZDEJUOUGURDEUGUCUIULLZIURUFUSUCUDBCMNUCUIULOPQU
      JUMDERSDEAUETUPUKUQUNDEABTDEACTUAUB $.
      $( [12-Aug-2004] $)

    $( Distributive law for cross product over union.  Similar to Theorem 103
       of [Suppes] p. 52.  (Contributed by ?who?, 30-Sep-2002.) $)
    xpundir $p |- ( ( A u. B ) X. C ) = ( ( A X. C ) u. ( B X. C ) ) $=
      ( vx vy cv cun wcel wa copab cxp wo elun anbi1i andir bitri unopab eqtr4i
      opabbii df-xp uneq12i 3eqtr4i ) DFZABGZHZEFCHZIZDEJZUCAHZUFIZDEJZUCBHZUFI
      ZDEJZGZUDCKACKZBCKZGUHUJUMLZDEJUOUGURDEUGUIULLZUFIURUEUSUFUCABMNUIULUFOPS
      UJUMDEQRDEUDCTUPUKUQUNDEACTDEBCTUAUB $.
      $( [30-Sep-2002] $)
  $}

  ${
    $d w y z A $.  $d w y z B $.  $d w x y z C $.
    $( Distributive law for cross product over indexed union.  (Revised by
       Mario Carneiro, 27-Apr-2014.)  (Contributed by ?who?, 27-Apr-2014.) $)
    xpiundi $p |- ( C X. U_ x e. A B ) = U_ x e. A ( C X. B ) $=
      ( vz vw vy ciun cxp cv wrex wcel wa wex eliun exbii df-rex rexbii 3bitr4i
      elxp2 cop wceq rexcom anbi1i rexcom4 r19.41v 3bitri eqriv ) EDABCHZIZABDC
      IZHZEJZFJGJZUAUBZGUIKZFDKZUMUKLZABKZUMUJLUMULLUOGCKZABKZFDKUTFDKZABKUQUSU
      TFADBUCUPVAFDUNUILZUOMZGNUNCLZABKZUOMZGNZUPVAVDVGGVCVFUOAUNBCOUDPUOGUIQVA
      VEUOMZGNZABKVIABKZGNVHUTVJABUOGCQRVIAGBUEVKVGGVEUOABUFPUGSRURVBABFGUMDCTR
      SFGUMDUITAUMBUKOSUH $.
      $( [27-Apr-2014] $)

    $( Distributive law for cross product over indexed union.  (Revised by
       Mario Carneiro, 27-Apr-2014.)  (Contributed by ?who?, 27-Apr-2014.) $)
    xpiundir $p |- ( U_ x e. A B X. C ) = U_ x e. A ( B X. C ) $=
      ( vz vy vw ciun cxp cv cop wrex wcel wa df-rex rexbii eliun elxp2 3bitr4i
      wex wceq rexcom4 anbi1i r19.41v bitr4i exbii 3bitr4ri eqriv ) EABCHZDIZAB
      CDIZHZEJZFJZGJKUAGDLZFUILZUMUKMZABLZUMUJMUMULMUNUIMZUONZFTZUOFCLZABLZUPUR
      UNCMZUONZFTZABLVEABLZFTVCVAVEAFBUBVBVFABUOFCOPUTVGFUTVDABLZUONVGUSVHUOAUN
      BCQUCVDUOABUDUEUFUGUOFUIOUQVBABFGUMCDRPSFGUMUIDRAUMBUKQSUH $.
      $( [27-Apr-2014] $)
  $}


  $( The cross product of two unions.  (Contributed by ?who?, 12-Aug-2004.) $)
  xpun $p |- ( ( A u. B ) X. ( C u. D ) ) =
            ( ( ( A X. C ) u. ( A X. D ) ) u. ( ( B X. C ) u. ( B X. D ) ) ) $=
    ( cun cxp xpundi xpundir uneq12i un4 3eqtri ) ABEZCDEFLCFZLDFZEACFZBCFZEZAD
    FZBDFZEZEOREPSEELCDGMQNTABCHABDHIOPRSJK $.
    $( [12-Aug-2004] $)

  ${
    $d w x y z A $.
    $( Membership in universal class of ordered pairs.  (Contributed by ?who?,
       4-Jul-1994.) $)
    elvv $p |- ( A e. ( _V X. _V ) <-> E. x E. y A = <. x , y >. ) $=
      ( cvv cxp wcel cv cop wceq wa wex elxp vex pm3.2i biantru 2exbii bitr4i )
      CDDEFCAGZBGZHIZRDFZSDFZJZJZBKAKTBKAKABCDDLTUDABUCTUAUBAMBMNOPQ $.
      $( [4-Jul-1994] $)

    $( Membership in universal class of ordered triples.  (Contributed by
       ?who?, 17-Dec-2008.) $)
    elvvv $p |- ( A e. ( ( _V X. _V ) X. _V )
                 <-> E. x E. y E. z A = <. <. x , y >. , z >. ) $=
      ( vw cvv cxp wcel cv cop wceq wa wex vex bitr3i 3bitri exbii exrot3 bitri
      elxp excom 19.41vv elvv biantru anbi1i ancom opeq1 eqeq2d ceqsexv 2exbii
      opex ) DFFGZFGHDEIZCIZJZKZUMULHZUNFHZLZLZCMEMUTEMZCMZDAIZBIZJZUNJZKZCMBMA
      MZECDULFTUTECUAVBVGBMAMZCMVHVAVICVAUMVEKZUPLZBMAMZEMZVIVLUTEVLVJBMAMZUPLU
      SUPLUTVJUPABUBVNUSUPVNUQUSABUMUCURUQCNUDOUEUSUPUFPQVMVKEMZBMAMVIVKEABRVOV
      GABUPVGEVEVCVDANBNUKVJUOVFDUMVEUNUGUHUIUJSOQVGCABRSP $.
      $( [17-Dec-2008] $)
  $}

  $( Intersection of binary relation with cross product.  (Contributed by
     ?who?, 3-Mar-2007.) $)
  brinxp2 $p |- ( A ( R i^i ( C X. D ) ) B <->
                ( A e. C /\ B e. D /\ A R B ) ) $=
    ( wbr cxp wa wcel cin w3a ancom brxp anbi1i bitri brin df-3an 3bitr4i ) ABE
    FZABCDGZFZHZACIZBDIZHZSHZABETJFUCUDSKUBUASHUFSUALUAUESABCDMNOABETPUCUDSQR
    $.
    $( [3-Mar-2007] $)

  $( Intersection of binary relation with cross product.  (Contributed by
     ?who?, 9-Mar-1997.) $)
  brinxp $p |- ( ( A e. C /\ B e. D ) ->
               ( A R B <-> A ( R i^i ( C X. D ) ) B ) ) $=
    ( cxp cin wbr wcel wa w3a brinxp2 df-3an bitri baibr ) ABECDFGHZACIZBDIZJZA
    BEHZPQRTKSTJABCDELQRTMNO $.
    $( [9-Mar-1997] $)

  ${
    $d x y A $.  $d x y B $.
    $( An abstraction relation is a subset of a related cross product.
       (Contributed by ?who?, 16-Jul-1995.) $)
    opabssxp $p |- { <. x , y >. | ( ( x e. A /\ y e. B ) /\ ph ) }
                   C_ ( A X. B ) $=
      ( cv wcel wa copab cxp simpl ssopab2i df-xp sseqtr4i ) BFDGCFEGHZAHZBCIOB
      CIDEJPOBCOAKLBCDEMN $.
      $( [16-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ps $.
    optocl.1 $e |- D = ( B X. C ) $.
    optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    optocl.3 $e |- ( ( x e. B /\ y e. C ) -> ph ) $.
    $( Implicit substitution of class for ordered pair.  (Contributed by ?who?,
       5-Mar-1995.) $)
    optocl $p |- ( A e. D -> ps ) $=
      ( cxp wcel cv cop wceq wa wex elxp3 sylbi opelxp syl5ib exlimivv eleq2s
      imp ) BEFGLZHEUFMCNZDNZOZEPZUIUFMZQZDRCRBCDEFGSULBCDUJUKBUKAUJBUKUGFMUHGM
      QAUGUHFGUAKTJUBUEUCTIUD $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y ps $.  $d z w ch $.  $d z w R $.
    2optocl.1 $e |- R = ( C X. D ) $.
    2optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    2optocl.3 $e |- ( <. z , w >. = B -> ( ps <-> ch ) ) $.
    2optocl.4 $e |- ( ( ( x e. C /\ y e. D ) /\ ( z e. C /\ w e. D ) ) ->
                   ph ) $.
    $( Implicit substitution of classes for ordered pairs.  (Contributed by
       ?who?, 12-Mar-1995.) $)
    2optocl $p |- ( ( A e. R /\ B e. R ) -> ch ) $=
      ( wcel wi cv cop wceq imbi2d wa ex optocl com12 impcom ) ILQHLQZCUHBRUHCR
      FGIJKLMFSZGSZTIUABCUHOUBUHUIJQUJKQUCZBUKARUKBRDEHJKLMDSZESZTHUAABUKNUBULJ
      QUMKQUCUKAPUDUEUFUEUG $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d z w v u B $.  $d v u C $.  $d x y z w v u D $.
    $d x y z w v u F $.  $d z w v u R $.  $d x y ps $.  $d z w ch $.
    $d v u th $.
    3optocl.1 $e |- R = ( D X. F ) $.
    3optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    3optocl.3 $e |- ( <. z , w >. = B -> ( ps <-> ch ) ) $.
    3optocl.4 $e |- ( <. v , u >. = C -> ( ch <-> th ) ) $.
    3optocl.5 $e |- ( ( ( x e. D /\ y e. F ) /\ ( z e. D /\ w e. F )
                    /\ ( v e. D /\ u e. F ) ) -> ph ) $.
    $( Implicit substitution of classes for ordered pairs.  (Contributed by
       ?who?, 12-Mar-1995.) $)
    3optocl $p |- ( ( A e. R /\ B e. R /\ C e. R ) -> th ) $=
      ( wcel wa wi cv cop wceq imbi2d 3expia 2optocl com12 optocl impcom 3impa
      ) KOUBZLOUBZMOUBZDUQUOUPUCZDURCUDURDUDIJMNPOQIUEZJUEZUFMUGCDURTUHURUSNUBU
      TPUBUCZCVAAUDVABUDVACUDEFGHKLNPOQEUEZFUEZUFKUGABVARUHGUEZHUEZUFLUGBCVASUH
      VBNUBVCPUBUCVDNUBVEPUBUCVAAUAUIUJUKULUMUN $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u S $.  $d x y ph $.  $d z w v u ps $.
    opbrop.1 $e |- ( ( ( z = A /\ w = B ) /\ ( v = C /\ u = D ) ) ->
                     ( ph <-> ps ) ) $.
    opbrop.2 $e |- R = { <. x , y >. | ( ( x e. ( S X. S ) /\
                      y e. ( S X. S ) ) /\
                      E. z E. w E. v E. u ( ( x = <. z , w >. /\
                      y = <. v , u >. ) /\ ph ) ) } $.
    $( Ordered pair membership in a relation.  Special case.  (Contributed by
       ?who?, 5-Aug-1995.) $)
    opbrop $p |- ( ( ( A e. S /\ B e. S ) /\ ( C e. S /\ D e. S ) ) ->
                   ( <. A , B >. R <. C , D >. <-> ps ) ) $=
      ( wcel wa cv wex cop cxp wbr copsex4g anbi2d cvv opexg eleq1 anbi1d eqeq1
      wb 4exbidv anbi12d brabg syl2an opelxp anbi12i biimpri biantrurd 3bitr4d
      wceq ) INQJNQRZKNQLNQRZRZIJUAZNNUBZQZKLUAZVFQZRZVEESFSUAZVAZVHGSHSUAZVAZR
      ZARZHTGTFTETZRZVJBRVEVHMUCZBVDVQBVJABEFGHIJKLNNOUDUEVBVEUFQVHUFQVSVRUKVCI
      JNNUGKLNNUGCSZVFQZDSZVFQZRZVTVKVAZWBVMVAZRZARZHTGTFTETZRVGWCRZVLWFRZARZHT
      GTFTETZRVRCDVEVHUFUFMVTVEVAZWDWJWIWMWNWAVGWCVTVEVFUHUIWNWHWLEFGHWNWGWKAWN
      WEVLWFVTVEVKUJUIUIULUMWBVHVAZWJVJWMVQWOWCVIVGWBVHVFUHUEWOWLVPEFGHWOWKVOAW
      OWFVNVLWBVHVMUJUEUIULUMPUNUOVDVJBVJVDVGVBVIVCIJNNUPKLNNUPUQURUSUT $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x y z A $.
    $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
       of [Monk1] p. 37.  (Contributed by ?who?, 4-Jul-1994.) $)
    xp0r $p |- ( (/) X. A ) = (/) $=
      ( vz vx vy c0 cxp cv wcel cop wceq wa wex elxp noel simprl mto nex 2false
      bitri eqriv ) BEAFZEBGZUAHUBCGZDGZIJZUCEHZUDAHZKKZDLZCLZUBEHZCDUBEAMUJUKU
      ICUHDUHUFUCNUEUFUGOPQQUBNRST $.
      $( [4-Jul-1994] $)
  $}

  $( Equality theorem for the relation predicate.  (Contributed by ?who?,
     1-Aug-1994.) $)
  releq $p |- ( A = B -> ( Rel A <-> Rel B ) ) $=
    ( wceq cvv cxp wss wrel sseq1 df-rel 3bitr4g ) ABCADDEZFBKFAGBGABKHAIBIJ $.
    $( [1-Aug-1994] $)

  ${
    releqi.1 $e |- A = B $.
    $( Equality inference for the relation predicate.  (Contributed by ?who?,
       8-Dec-2006.) $)
    releqi $p |- ( Rel A <-> Rel B ) $=
      ( wceq wrel wb releq ax-mp ) ABDAEBEFCABGH $.
      $( [8-Dec-2006] $)
  $}

  ${
    releqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for the relation predicate.  (Contributed by ?who?,
       8-Mar-2014.) $)
    releqd $p |- ( ph -> ( Rel A <-> Rel B ) ) $=
      ( wceq wrel wb releq syl ) ABCEBFCFGDBCHI $.
      $( [8-Mar-2014] $)
  $}


  ${
    $d y A $.  $d x y $.
    nfrel.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for a relation.  (Contributed by NM,
       31-Jan-2004.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nfrel $p |- F/ x Rel A $=
      ( wrel cvv cxp wss df-rel nfcv nfss nfxfr ) BDBEEFZGABHABLCALIJK $.
  $}

  $( Subclass theorem for relation predicate.  Theorem 2 of [Suppes] p. 58.
     (Contributed by ?who?, 15-Aug-1994.) $)
  relss $p |- ( A C_ B -> ( Rel B -> Rel A ) ) $=
    ( wss cvv cxp wrel sstr2 df-rel 3imtr4g ) ABCBDDEZCAJCBFAFABJGBHAHI $.
    $( [15-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A subclass relationship depends only on a relation's ordered pairs.
       Theorem 3.2(i) of [Monk1] p. 33.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (Contributed by ?who?, 2-Aug-1994.)  (Revised by
       ?who?, 27-Aug-2011.) $)
    ssrel $p |- ( Rel A -> ( A C_ B <->
                A. x A. y ( <. x , y >. e. A -> <. x , y >. e. B ) ) ) $=
      ( vz wrel wss cv cop wcel wi wal ssel alrimivv wceq wex eleq1 imbi12d cvv
      dfss2 biimprcd 2alimi 19.23vv sylib com23 alimdv df-rel elvv imbi2i albii
      a2d cxp 3bitri 3imtr4g com12 impbid2 ) CFZCDGZAHBHIZCJZUSDJZKZBLALZURVBAB
      CDUSMNVCUQURVCEHZCJZVDUSOZBPAPZKZELZVEVDDJZKZELUQURVCVHVKEVCVEVGVJVCVGVEV
      JVCVFVKKZBLALVGVKKVBVLABVFVKVBVFVEUTVJVAVDUSCQVDUSDQRUAUBVFVKABUCUDUEUKUF
      UQCSSULZGVEVDVMJZKZELVICUGECVMTVOVHEVNVGVEABVDUHUIUJUMECDTUNUOUP $.
      $( [27-Aug-2011] $) $( [2-Aug-1994] $)

    $( Extensionality principle for relations.  Theorem 3.2(ii) of [Monk1]
       p. 33.  (Contributed by ?who?, 2-Aug-1994.) $)
    eqrel $p |- ( ( Rel A /\ Rel B ) -> ( A = B <->
                A. x A. y ( <. x , y >. e. A <-> <. x , y >. e. B ) ) ) $=
      ( wrel wa wss cv cop wcel wi wal wceq ssrel bi2anan9 eqss 2albiim 3bitr4g
      wb ) CEZDEZFCDGZDCGZFAHBHIZCJZUDDJZKBLALZUFUEKBLALZFCDMUEUFSBLALTUBUGUAUC
      UHABCDNABDCNOCDPUEUFABQR $.
      $( [2-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    relssi.1 $e |- Rel A $.
    relssi.2 $e |- ( <. x , y >. e. A -> <. x , y >. e. B ) $.
    $( Inference from subclass principle for relations.  (Contributed by ?who?,
       31-Mar-1998.) $)
    relssi $p |- A C_ B $=
      ( wss cv cop wcel wi wal wrel wb ssrel ax-mp ax-gen mpgbir ) CDGZAHBHIZCJ
      TDJKZBLZACMSUBALNEABCDOPUABFQR $.
      $( [31-Mar-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ph $.
    relssdv.1 $e |- ( ph -> Rel A ) $.
    relssdv.2 $e |- ( ph -> ( <. x , y >. e. A -> <. x , y >. e. B ) ) $.
    $( Deduction from subclass principle for relations.  (Contributed by ?who?,
       11-Sep-2004.) $)
    relssdv $p |- ( ph -> A C_ B ) $=
      ( wss cv cop wcel wi wal alrimivv wrel wb ssrel syl mpbird ) ADEHZBICIJZD
      KUAEKLZCMBMZAUBBCGNADOTUCPFBCDEQRS $.
      $( [11-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqrelriv.1 $e |- ( <. x , y >. e. A <-> <. x , y >. e. B ) $.
    $( Inference from extensionality principle for relations.  (Contributed by
       FL, 15-Oct-2012.) $)
    eqrelriv $p |- ( ( Rel A /\ Rel B ) -> A = B ) $=
      ( wrel wa wceq cv cop wcel wb wal gen2 eqrel mpbiri ) CFDFGCDHAIBIJZCKQDK
      LZBMAMRABENABCDOP $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqreliiv.1 $e |- Rel A $.
    eqreliiv.2 $e |- Rel B $.
    eqreliiv.3 $e |- ( <. x , y >. e. A <-> <. x , y >. e. B ) $.
    $( Inference from extensionality principle for relations.  (Contributed by
       ?who?, 17-Mar-1995.) $)
    eqrelriiv $p |- A = B $=
      ( wrel wceq eqrelriv mp2an ) CHDHCDIEFABCDGJK $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqbrriv.1 $e |- Rel A $.
    eqbrriv.2 $e |- Rel B $.
    eqbrriv.3 $e |- ( x A y <-> x B y ) $.
    $( Inference from extensionality principle for relations.  (Contributed by
       ?who?, 12-Dec-2006.) $)
    eqbrriv $p |- A = B $=
      ( cv wbr cop wcel df-br 3bitr3i eqrelriiv ) ABCDEFAHZBHZCIOPDIOPJZCKQDKGO
      PCLOPDLMN $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d ph x $.  $d ph y $.
    eqrelrdv.1 $e |- Rel A $.
    eqrelrdv.2 $e |- Rel B $.
    eqrelrdv.3 $e |- ( ph -> ( <. x , y >. e. A <-> <. x , y >. e. B ) ) $.
    $( Deduce equality of relations from equivalence of membership.
       (Contributed by Rodolfo Medina, 10-Oct-2010.) $)
    eqrelrdv $p |- ( ph -> A = B ) $=
      ( cv cop wcel wb wal wceq alrimivv wrel eqrel mp2an sylibr ) ABICIJZDKTEK
      LZCMBMZDENZAUABCHODPEPUCUBLFGBCDEQRS $.
      $( [10-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d ph x $.  $d ph y $.
    eqrelrdv2.1 $e |- ( ph
       -> ( <. x , y >. e. A <-> <. x , y >. e. B ) ) $.
    $( A version of ~ eqrelrdv .  (Contributed by Rodolfo Medina,
       10-Oct-2010.) $)
    eqrelrdv2 $p |- ( ( ( Rel A /\ Rel B ) /\ ph ) -> A = B ) $=
      ( wrel wa wceq cv cop wcel wb wal alrimivv adantl eqrel adantr mpbird ) D
      GEGHZAHDEIZBJCJKZDLUBELMZCNBNZAUDTAUCBCFOPTUAUDMABCDEQRS $.
      $( [10-Oct-2010] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.
    $( A subclass relationship determined by ordered triples.  Use ~ relrelss
       to express the antecedent in terms of the relation predicate.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by
       ?who?, 17-Dec-2008.)  (Revised by ?who?, 27-Aug-2011.) $)
    ssrelrel $p |- ( A C_ ( ( _V X. _V ) X. _V ) -> ( A C_ B <->
                   A. x A. y A. z ( <. <. x , y >. , z >. e. A
                       -> <. <. x , y >. , z >. e. B ) ) ) $=
      ( vw cvv cxp wss cv cop wcel wi wal ssel alrimiv wex eleq1 sylib dfss2
      alrimivv wceq elvvv imbi12d biimprcd alimi 19.23v 2alimi syl5bi com23 a2d
      19.23vv alimdv 3imtr4g com12 impbid2 ) DGGHGHZIZDEIZAJBJKCJKZDLZUTELZMZCN
      ZBNANZUSVDABUSVCCDEUTOPUAVEURUSVEFJZDLZVFUQLZMZFNVGVFELZMZFNURUSVEVIVKFVE
      VGVHVJVEVHVGVJVHVFUTUBZCQZBQAQZVEVKABCVFUCVEVMVKMZBNANVNVKMVDVOABVDVLVKMZ
      CNVOVCVPCVLVKVCVLVGVAVJVBVFUTDRVFUTERUDUEUFVLVKCUGSUHVMVKABULSUIUJUKUMFDU
      QTFDETUNUOUP $.
      $( [27-Aug-2011] $) $( [17-Dec-2008] $)

    $( Extensionality principle for ordered triples (used by 2-place operations
       ~ df-oprab ), analogous to ~ eqrel .  Use ~ relrelss to express the
       antecedent in terms of the relation predicate.  (Contributed by ?who?,
       17-Dec-2008.) $)
    eqrelrel $p |- ( ( A u. B ) C_ ( ( _V X. _V ) X. _V ) -> ( A = B <->
                   A. x A. y A. z ( <. <. x , y >. , z >. e. A
                       <-> <. <. x , y >. , z >. e. B ) ) ) $=
      ( cun cvv cxp wss wa wceq cv cop wcel wb wal unss wi ssrelrel bi2anan9
      eqss 2albiim albii 19.26 bitri 3bitr4g sylbir ) DEFGGHGHZIDUHIZEUHIZJZDEK
      ZALBLMCLMZDNZUMENZOCPBPZAPZODEUHQUKDEIZEDIZJUNUORCPBPZAPZUOUNRCPBPZAPZJZU
      LUQUIURVAUJUSVCABCDESABCEDSTDEUAUQUTVBJZAPVDUPVEAUNUOBCUBUCUTVBAUDUEUFUG
      $.
      $( [17-Dec-2008] $)
  $}

  ${
    $d x y A $.
    $( A member of a relation is an ordered pair.  (Contributed by ?who?,
       17-Sep-2006.) $)
    elrel $p |- ( ( Rel R /\ A e. R ) -> E. x E. y A = <. x , y >. ) $=
      ( wrel wcel wa cvv cxp cop wceq wex wss df-rel biimpi sselda elvv sylib
      cv ) DEZCDFGCHHIZFCASBSJKBLALTDUACTDUAMDNOPABCQR $.
      $( [17-Sep-2006] $)
  $}

  ${
    relsn.1 $e |- A e. _V $.
    $( A singleton is a relation iff it is an ordered pair.  (Contributed by
       ?who?, 24-Sep-2013.) $)
    relsn $p |- ( Rel { A } <-> A e. ( _V X. _V ) ) $=
      ( csn wrel cvv cxp wss wcel df-rel snss bitr4i ) ACZDLEEFZGAMHLIAMBJK $.
      $( [24-Sep-2013] $)

    relsnop.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is a relation.  (Contributed by ?who?,
       17-May-1998.) $)
    relsnop $p |- Rel { <. A , B >. } $=
      ( cop csn wrel cvv cxp wcel opelxp mpbir2an opex relsn mpbir ) ABEZFGPHHI
      JZQAHJBHJCDABHHKLPABCDMNO $.
      $( [17-May-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    $( Subset theorem for cross product.  Generalization of Theorem 101 of
       [Suppes] p. 52.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 26-Aug-1995.)  (Revised by ?who?,
       27-Aug-2011.) $)
    xpss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A X. C ) C_ ( B X. D ) ) $=
      ( vx vy wss wa cv wcel copab cxp ssel im2anan9 ssopab2dv df-xp 3sstr4g )
      ABGZCDGZHZEIZAJZFIZCJZHZEFKUABJZUCDJZHZEFKACLBDLTUEUHEFRUBUFSUDUGABUAMCDU
      CMNOEFACPEFBDPQ $.
      $( [27-Aug-2011] $) $( [26-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is included in the ordered pair universe.  Exercise 3 of
       [TakeutiZaring] p. 25.  (Contributed by ?who?, 2-Aug-1994.) $)
    xpss $p |- ( A X. B ) C_ ( _V X. _V ) $=
      ( cvv wss cxp ssv xpss12 mp2an ) ACDBCDABECCEDAFBFACBCGH $.
      $( [2-Aug-1994] $)
  $}

  $( A cross product is a relation.  Theorem 3.13(i) of [Monk1] p. 37.
     (Contributed by ?who?, 2-Aug-1994.) $)
  relxp $p |- Rel ( A X. B ) $=
    ( cxp wrel cvv wss xpss df-rel mpbir ) ABCZDJEECFABGJHI $.
    $( [2-Aug-1994] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss1 $p |- ( A C_ B -> ( A X. C ) C_ ( B X. C ) ) $=
    ( wss cxp ssid xpss12 mpan2 ) ABDCCDACEBCEDCFABCCGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss2 $p |- ( A C_ B -> ( C X. A ) C_ ( C X. B ) ) $=
    ( wss cxp ssid xpss12 mpan ) CCDABDCAECBEDCFCCABGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  ${
    $d A x y z $.  $d B x y z $.
    br1st.1 $e |- B e. _V $.
    $( Binary relationship equivalence for the ` 1st ` function.  (Contributed
       by ?who?, 8-Jan-2015.) $)
    br1st $p |- ( A 1st B <-> E. x A = <. B , x >. ) $=
      ( vy vz c1st wbr cvv wcel cop wceq wex brex simpld vex opex eleq1 exbidv
      cv mpbiri exlimiv wb eqeq1 opeq1 eqeq2d df-1st brabg mpan2 pm5.21nii ) BC
      GHZBIJZBCATZKZLZAMZUKULCIJZBCGNOUOULAUOULUNIJCUMDAPQBUNIRUAUBULUQUKUPUCDE
      TZFTZUMKZLZAMBUTLZAMUPEFBCIIGURBLVAVBAURBUTUDSUSCLZVBUOAVCUTUNBUSCUMUEUFS
      EFAUGUHUIUJ $.
      $( [8-Jan-2015] $)

    $( Binary relationship equivalence for the ` 2nd ` function.  (Contributed
       by ?who?, 8-Jan-2015.) $)
    br2nd $p |- ( A 2nd B <-> E. x A = <. x , B >. ) $=
      ( vy vz c2nd wbr cvv wcel cop wceq wex brex simpld vex opex eleq1 exbidv
      cv mpbiri exlimiv wb eqeq1 opeq2 eqeq2d df-2nd brabg mpan2 pm5.21nii ) BC
      GHZBIJZBATZCKZLZAMZUKULCIJZBCGNOUOULAUOULUNIJUMCAPDQBUNIRUAUBULUQUKUPUCDE
      TZUMFTZKZLZAMBUTLZAMUPEFBCIIGURBLVAVBAURBUTUDSUSCLZVBUOAVCUTUNBUSCUMUEUFS
      EFAUGUHUIUJ $.
      $( [8-Jan-2015] $)

    ${
      $d A w $.  $d B w $.  $d C x y z w $.
      brswap.2 $e |- C e. _V $.
      $( Binary relationship equivalence for the ` Swap ` function.
         (Contributed by ?who?, 8-Jan-2015.) $)
      brswap2 $p |- ( A Swap <. B , C >. <-> A = <. C , B >. ) $=
        ( vx vz vw vy cop cswap cvv wcel wceq opex cv wa wex eqeq1 2exbidv brex
        wbr simpld eleq1 mpbiri anbi1d w3a anbi2d eqcom opth bitri anbi1i ancom
        df-3an 3bitr4ri syl6bbr excom syl6bb opeq2 opeq1 ceqsex2v df-swap brabg
        wb eqeq2d mpan2 pm5.21nii ) ABCJZKUBZALMZACBJZNZVIVJVHLMZAVHKUAUCVLVJVK
        LMCBEDOAVKLUDUEVJVMVIVLVDBCDEOFPZGPZHPZJZNZIPZVPVOJZNZQZHRGRAVQNZWAQZHR
        GRZVLFIAVHLLKVNANZWBWDGHWFVRWCWAVNAVQSUFTVSVHNZWEVPBNZVOCNZWCUGZGRHRZVL
        WGWEWJHRGRWKWGWDWJGHWGWDWCVHVTNZQZWJWGWAWLWCVSVHVTSUHWLWCQWHWIQZWCQWMWJ
        WLWNWCWLVTVHNWNVHVTUIVPVOBCUJUKULWCWLUMWHWIWCUNUOUPTWJGHUQURWCAVOBJZNVL
        HGBCDEWHVQWOAVPBVOUSVEWIWOVKAVOCBUTVEVAURFIGHVBVCVFVG $.
        $( [8-Jan-2015] $)
    $}
  $}

  $( The union of two relations is a relation.  Compare Exercise 5 of
     [TakeutiZaring] p. 25.  (Contributed by ?who?, 12-Aug-1994.) $)
  relun $p |- ( Rel ( A u. B ) <-> ( Rel A /\ Rel B ) ) $=
    ( cvv cxp wss wa cun wrel unss df-rel anbi12i 3bitr4ri ) ACCDZEZBMEZFABGZME
    AHZBHZFPHABMIQNROAJBJKPJL $.
    $( [12-Aug-1994] $)

  $( The intersection with a relation is a relation.  (Contributed by ?who?,
     16-Aug-1994.) $)
  relin1 $p |- ( Rel A -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss1 relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [16-Aug-1994] $)

  $( The intersection with a relation is a relation.  (Contributed by ?who?,
     17-Jan-2006.) $)
  relin2 $p |- ( Rel B -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss2 relss ax-mp ) ABCZBDBEJEFABGJBHI $.
    $( [17-Jan-2006] $)

  $( A difference cutting down a relation is a relation.  (Contributed by
     ?who?, 31-Mar-1998.) $)
  reldif $p |- ( Rel A -> Rel ( A \ B ) ) $=
    ( cdif wss wrel wi difss relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [31-Mar-1998] $)

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( An indexed union is a relation iff each member of its indexed family is
       a relation.  (Contributed by ?who?, 19-Dec-2008.) $)
    reliun $p |- ( Rel U_ x e. A B <-> A. x e. A Rel B ) $=
      ( vy ciun wrel cv wcel wrex cab cvv cxp wss wral df-iun releqi df-rel wal
      wi 3bitri abss dfss2 bitri ralbii ralcom4 r19.23v albii bitr4i ) ABCEZFDG
      ZCHZABIZDJZFUMKKLZMZCFZABNZUIUMADBCOPUMQUOULUJUNHZSZDRZUQULDUNUAUQUKURSZD
      RZABNVAABNZDRUTUPVBABUPCUNMVBCQDCUNUBUCUDVAADBUEVCUSDUKURABUFUGTUHT $.
      $( [19-Dec-2008] $)
  $}

  $( An indexed intersection is a relation if if at least one of the member of
     the indexed family is a relation.  (Contributed by ?who?, 8-Mar-2014.) $)
  reliin $p |- ( E. x e. A Rel B -> Rel |^|_ x e. A B ) $=
    ( cvv cxp wss wrex ciin wrel iinss df-rel rexbii 3imtr4i ) CDDEZFZABGABCHZN
    FCIZABGPIABCNJQOABCKLPKM $.
    $( [8-Mar-2014] $)

  ${
    $d x A $.
    $( The union of a class is a relation iff any member is a relation.
       Exercise 6 of [TakeutiZaring] p. 25 and its converse.  (Contributed by
       ?who?, 13-Aug-2004.)  (Revised by ?who?, 21-Dec-2008.) $)
    reluni $p |- ( Rel U. A <-> A. x e. A Rel x ) $=
      ( cuni wrel cv ciun wral uniiun releqi reliun bitri ) BCZDABAEZFZDMDABGLN
      ABHIABMJK $.
      $( [21-Dec-2008] $) $( [13-Aug-2004] $)

    $( The intersection of a class is a relation if at least one member is a
       relation.  (Contributed by ?who?, 8-Mar-2014.) $)
    relint $p |- ( E. x e. A Rel x -> Rel |^| A ) $=
      ( cv wrel wrex ciin cint reliin intiin releqi sylibr ) ACZDABEABLFZDBGZDA
      BLHNMABIJK $.
      $( [8-Mar-2014] $)
  $}

  $( The empty set is a relation.  (Contributed by ?who?, 26-Apr-1998.) $)
  rel0 $p |- Rel (/) $=
    ( c0 wrel cvv cxp wss 0ss df-rel mpbir ) ABACCDZEIFAGH $.
    $( [26-Apr-1998] $)

  ${
    $d ph z $.  $d u v x z $.  $d u v y z $.
    relopabi.1 $e |- A = { <. x , y >. | ph } $.
    $( A class of ordered pairs is a relation.  (The proof was shortened by
       Mario Carneiro, 21-Dec-2013.)  (Contributed by ?who?, 21-Dec-2013.) $)
    relopabi $p |- Rel A $=
      ( vz wrel cvv cxp wss cv cop wceq wa wex cab copab df-opab wcel vex eqtri
      opelxp mpbir2an eleq1 mpbiri adantr exlimivv abssi eqsstri df-rel mpbir )
      DGDHHIZJDFKZBKZCKZLZMZANZCOBOZFPZULDABCQUTEABCFRUAUSFULURUMULSZBCUQVAAUQV
      AUPULSZVBUNHSUOHSBTCTUNUOHHUBUCUMUPULUDUEUFUGUHUIDUJUK $.
      $( [21-Dec-2013] $)
  $}

  $( A class of ordered pairs is a relation.  (Unnecessary distinct variable
     restrictions were removed by Alan Sare, 9-Jul-2013.)  (The proof was
     shortened by Mario Carneiro, 21-Dec-2013.)  (Contributed by ?who?,
     8-Mar-1995.)  (Revised by ?who?, 9-Jul-2013.) $)
  relopab $p |- Rel { <. x , y >. | ph } $=
    ( copab eqid relopabi ) ABCABCDZGEF $.
    $( [9-Jul-2013] $) $( [8-Mar-1995] $)

  ${
    $d w x y z A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d ph z w $.
    $d ps z w $.
    $( The identity relation is a relation.  Part of Exercise 4.12(p) of
       [Mendelson] p. 235.  (Contributed by ?who?, 26-Apr-1998.)  (Revised by
       ?who?, 21-Dec-2013.) $)
    reli $p |- Rel _I $=
      ( vx vy cv wceq cid dfid3 relopabi ) ACBCDABEABFG $.
      $( [21-Dec-2013] $) $( [26-Apr-1998] $)

    $( The membership relation is a relation.  (Contributed by ?who?,
       26-Apr-1998.)  (Revised by ?who?, 21-Dec-2013.) $)
    rele $p |- Rel _E $=
      ( vx vy cv wcel cep df-eprel relopabi ) ACBCDABEABFG $.
      $( [21-Dec-2013] $) $( [26-Apr-1998] $)

    $( A relation expressed as an ordered pair abstraction.  (Contributed by
       ?who?, 11-Dec-2006.) $)
    opabid2 $p |- ( Rel A -> { <. x , y >. | <. x , y >. e. A } = A ) $=
      ( vz vw wrel cv cop wcel copab wceq wb wal vex opeq1 eleq1d opelopab gen2
      opeq2 relopab eqrel mpan mpbiri ) CFZAGZBGZHZCIZABJZCKZDGZEGZHZUIIUMCIZLZ
      EMDMZUODEUHUKUFHZCIUNABUKULDNENUEUKKUGUQCUEUKUFOPUFULKUQUMCUFULUKSPQRUIFU
      DUJUPLUHABTDEUICUAUBUC $.
      $( [11-Dec-2006] $)

    $( Intersection of two ordered pair class abstractions.  (Contributed by
       ?who?, 30-Sep-2002.) $)
    inopab $p |- ( { <. x , y >. | ph } i^i { <. x , y >. | ps } ) =
               { <. x , y >. | ( ph /\ ps ) } $=
      ( vz vw copab cin wrel relopab relin1 ax-mp cop wcel wsbc sban opelopabsb
      wa cv sbbii anbi12i 3bitr4ri elin 3bitr4i eqrelriiv ) EFACDGZBCDGZHZABRZC
      DGZUFIUHIACDJUFUGKLUICDJESZFSZMZUFNZUMUGNZRZUICUKOZDULOZUMUHNUMUJNACUKOZB
      CUKOZRZDULOUSDULOZUTDULOZRURUPUSUTDFPUQVADFABCEPTUNVBUOVCACDEFQBCDEFQUAUB
      UMUFUGUCUICDEFQUDUE $.
      $( [30-Sep-2002] $)

    $( The intersection of two cross products.  Exercise 9 of [TakeutiZaring]
       p. 25.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Contributed by ?who?, 3-Aug-1994.)  (Revised by ?who?, 27-Aug-2011.) $)
    inxp $p |- ( ( A X. B ) i^i ( C X. D ) ) =
                   ( ( A i^i C ) X. ( B i^i D ) ) $=
      ( vx vy cv wcel wa copab cin cxp inopab elin anbi12i bitr4i opabbii eqtri
      an4 df-xp ineq12i 3eqtr4i ) EGZAHZFGZBHZIZEFJZUCCHZUEDHZIZEFJZKZUCACKZHZU
      EBDKZHZIZEFJZABLZCDLZKUNUPLUMUGUKIZEFJUSUGUKEFMVBUREFVBUDUIIZUFUJIZIURUDU
      FUIUJSUOVCUQVDUCACNUEBDNOPQRUTUHVAULEFABTEFCDTUAEFUNUPTUB $.
      $( [27-Aug-2011] $) $( [3-Aug-1994] $)

    $( Distributive law for cross product over intersection.  Theorem 102 of
       [Suppes] p. 52.  (Contributed by ?who?, 26-Sep-2004.) $)
    xpindi $p |- ( A X. ( B i^i C ) ) = ( ( A X. B ) i^i ( A X. C ) ) $=
      ( cxp cin inxp inidm xpeq1i eqtr2i ) ABDACDEAAEZBCEZDAKDABACFJAKAGHI $.
      $( [26-Sep-2004] $)

    $( Distributive law for cross product over intersection.  Similar to
       Theorem 102 of [Suppes] p. 52.  (Contributed by ?who?, 26-Sep-2004.) $)
    xpindir $p |- ( ( A i^i B ) X. C ) = ( ( A X. C ) i^i ( B X. C ) ) $=
      ( cxp cin inxp inidm xpeq2i eqtr2i ) ACDBCDEABEZCCEZDJCDACBCFKCJCGHI $.
      $( [26-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y ph $.
    opabbi2dv.1 $e |- Rel A $.
    opabbi2dv.3 $e |- ( ph -> ( <. x , y >. e. A <-> ps ) ) $.
    $( Deduce equality of a relation and an ordered-pair class builder.
       Compare ~ abbi2dv .  (Contributed by ?who?, 24-Feb-2014.) $)
    opabbi2dv $p |- ( ph -> A = { <. x , y >. | ps } ) $=
      ( cv cop wcel copab wrel wceq opabid2 ax-mp opabbidv syl5eqr ) AECHDHIEJZ
      CDKZBCDKELSEMFCDENOARBCDGPQ $.
      $( [24-Feb-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( For sets, the identity relation is the same as equality.  (Contributed
       by ?who?, 30-Apr-2004.)  (Revised by ?who?, 27-Aug-2011.) $)
    ideqg $p |- ( B e. V -> ( A _I B <-> A = B ) ) $=
      ( vx vy wcel cid wbr wceq cvv wa brex adantl simpr adantr eqeltrd jca weq
      elex cv eqeq1 eqeq2 df-id brabg pm5.21nd ) BCFZABGHZABIZAJFZBJFZKZUGUKUFA
      BGLMUFUHKZUIUJULABJUFUHNUFUJUHBCSOZPUMQDERAETZIUHDEABJJGDTAUNUAUNBAUBDEUC
      UDUE $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)

    $( For sets, the identity relation is the same as equality.  (Contributed
       by ?who?, 8-Jan-2015.) $)
    ideqg2 $p |- ( A e. V -> ( A _I B <-> A = B ) ) $=
      ( vx vy wcel cid wbr wceq cvv wa brex adantl elex simpl eleq1 biimpac jca
      sylan cv weq eqeq1 eqeq2 df-id brabg pm5.21nd ) ACFZABGHZABIZAJFZBJFZKZUH
      ULUGABGLMUGUJUIULACNUJUIKUJUKUJUIOUIUJUKABJPQRSDEUAAETZIUIDEABJJGDTAUMUBU
      MBAUCDEUDUEUF $.
      $( [8-Jan-2015] $)
  $}

  ${
    ideq.1 $e |- B e. _V $.
    $( For sets, the identity relation is the same as equality.  (Contributed
       by ?who?, 13-Aug-1995.)  (Revised by ?who?, 1-Jun-2008.) $)
    ideq $p |- ( A _I B <-> A = B ) $=
      ( cvv wcel cid wbr wceq wb ideqg ax-mp ) BDEABFGABHICABDJK $.
      $( [1-Jun-2008] $) $( [13-Aug-1995] $)
  $}

  ${
    $d x A $.
    $( A set is identical to itself.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (Contributed by ?who?, 28-May-2008.)  (Revised by
       ?who?, 27-Aug-2011.) $)
    ididg $p |- ( A e. V -> A _I A ) $=
      ( wcel cid wbr wceq eqid ideqg mpbiri ) ABCAADEAAFAGAABHI $.
      $( [27-Aug-2011] $) $( [28-May-2008] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.
    $( Subclass theorem for composition.  (Contributed by FL, 30-Dec-2010.) $)
    coss1 $p |- ( A C_ B -> ( A o. C ) C_ ( B o. C ) ) $=
      ( vx vy vz wss cv wbr wa wex copab id ssbrd anim2d eximdv ssopab2dv df-co
      ccom 3sstr4g ) ABGZDHEHZCIZUBFHZAIZJZEKZDFLUCUBUDBIZJZEKZDFLACSBCSUAUGUJD
      FUAUFUIEUAUEUHUCUAABUBUDUAMNOPQDFEACRDFEBCRT $.
      $( [30-Dec-2010] $)

    $( Subclass theorem for composition.  (Contributed by ?who?,
       5-Apr-2013.) $)
    coss2 $p |- ( A C_ B -> ( C o. A ) C_ ( C o. B ) ) $=
      ( vx vy vz wss cv wbr wa wex copab id ssbrd anim1d eximdv ssopab2dv df-co
      ccom 3sstr4g ) ABGZDHZEHZAIZUCFHCIZJZEKZDFLUBUCBIZUEJZEKZDFLCASCBSUAUGUJD
      FUAUFUIEUAUDUHUEUAABUBUCUAMNOPQDFECARDFECBRT $.
      $( [5-Apr-2013] $)
  $}

  $( Equality theorem for composition of two classes.  (Contributed by ?who?,
     3-Jan-1997.) $)
  coeq1 $p |- ( A = B -> ( A o. C ) = ( B o. C ) ) $=
    ( wss wa ccom wceq coss1 anim12i eqss 3imtr4i ) ABDZBADZEACFZBCFZDZONDZEABG
    NOGLPMQABCHBACHIABJNOJK $.
    $( [3-Jan-1997] $)

  $( Equality theorem for composition of two classes.  (Contributed by ?who?,
     3-Jan-1997.) $)
  coeq2 $p |- ( A = B -> ( C o. A ) = ( C o. B ) ) $=
    ( wss wa ccom wceq coss2 anim12i eqss 3imtr4i ) ABDZBADZECAFZCBFZDZONDZEABG
    NOGLPMQABCHBACHIABJNOJK $.
    $( [3-Jan-1997] $)

  ${
    coeq1i.1 $e |- A = B $.
    $( Equality inference for composition of two classes.  (Contributed by
       ?who?, 16-Nov-2000.) $)
    coeq1i $p |- ( A o. C ) = ( B o. C ) $=
      ( wceq ccom coeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Nov-2000] $)

    $( Equality inference for composition of two classes.  (Contributed by
       ?who?, 16-Nov-2000.) $)
    coeq2i $p |- ( C o. A ) = ( C o. B ) $=
      ( wceq ccom coeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Nov-2000] $)
  $}

  ${
    coeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for composition of two classes.  (Contributed by
       ?who?, 16-Nov-2000.) $)
    coeq1d $p |- ( ph -> ( A o. C ) = ( B o. C ) ) $=
      ( wceq ccom coeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Nov-2000] $)

    $( Equality deduction for composition of two classes.  (Contributed by
       ?who?, 16-Nov-2000.) $)
    coeq2d $p |- ( ph -> ( C o. A ) = ( C o. B ) ) $=
      ( wceq ccom coeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Nov-2000] $)
  $}

  ${
    coeq12i.1 $e |- A = B $.
    coeq12i.2 $e |- C = D $.
    $( Equality inference for composition of two classes.  (Contributed by FL,
       7-Jun-2012.) $)
    coeq12i $p |- ( A o. C ) = ( B o. D ) $=
      ( ccom coeq1i coeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [7-Jun-2012] $)
  $}

  ${
    coeq12d.1 $e |- ( ph -> A = B ) $.
    coeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for composition of two classes.  (Contributed by FL,
       7-Jun-2012.) $)
    coeq12d $p |- ( ph -> ( A o. C ) = ( B o. D ) ) $=
      ( ccom coeq1d coeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [7-Jun-2012] $)
  $}


  ${
    $d w x y z $.  $d y z w A $.  $d y z w B $.
    nfco.1 $e |- F/_ x A $.
    nfco.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for function value.  (Contributed by
       NM, 1-Sep-1999.) $)
    nfco $p |- F/_ x ( A o. B ) $=
      ( vy vw vz ccom cv wbr wa wex copab df-co nfcv nfbr nfan nfex nfopab
      nfcxfr ) ABCIFJZGJZCKZUCHJZBKZLZGMZFHNFHGBCOUHFHAUGAGUDUFAAUBUCCAUBPEAUCP
      ZQAUCUEBUIDAUEPQRSTUA $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Binary relation on a composition.  (Contributed by ?who?,
       21-Sep-2004.) $)
    brco $p |- ( A ( C o. D ) B <-> E. x ( A D x /\ x C B ) ) $=
      ( vy vz ccom wbr cvv wcel wa wex brex simpld simprd anim12i wceq exbidv
      cv exlimiv breq1 anbi1d breq2 anbi2d df-co brabg pm5.21nii ) BCDEHZIBJKZC
      JKZLZBATZEIZUMCDIZLZAMZBCUINUPULAUNUJUOUKUNUJUMJKZBUMENOUOURUKUMCDNPQUAFT
      ZUMEIZUMGTZDIZLZAMUNVBLZAMUQFGBCJJUIUSBRZVCVDAVEUTUNVBUSBUMEUBUCSVACRZVDU
      PAVFVBUOUNVACUMDUDUESFGADEUFUGUH $.
      $( [21-Sep-2004] $)

    $( Ordered pair membership in a composition.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?, 27-Dec-1996.)
       (Revised by ?who?, 27-Aug-2011.) $)
    opelco $p |- ( <. A , B >. e. ( C o. D ) <-> E. x ( A D x /\ x C B ) ) $=
      ( cop ccom wcel wbr cv wa wex df-br brco bitr3i ) BCFDEGZHBCPIBAJZEIQCDIK
      ALBCPMABCDENO $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}


  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for converse.  (Contributed by ?who?, 22-Mar-1998.) $)
    cnvss $p |- ( A C_ B -> `' A C_ `' B ) $=
      ( vy vx wss wbr copab ccnv cop wcel ssel 3imtr4g ssopab2dv df-cnv 3sstr4g
      cv df-br ) ABEZCPZDPZAFZDCGSTBFZDCGAHBHRUAUBDCRSTIZAJUCBJUAUBABUCKSTAQSTB
      QLMDCANDCBNO $.
      $( [22-Mar-1998] $)
  $}

  $( Equality theorem for converse.  (Contributed by ?who?, 13-Aug-1995.) $)
  cnveq $p |- ( A = B -> `' A = `' B ) $=
    ( wss wa ccnv wceq cnvss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMN
    FKOLPABGBAGHABIMNIJ $.
    $( [13-Aug-1995] $)

  ${
    cnveqi.1 $e |- A = B $.
    $( Equality inference for converse.  (Contributed by ?who?,
       23-Dec-2008.) $)
    cnveqi $p |- `' A = `' B $=
      ( wceq ccnv cnveq ax-mp ) ABDAEBEDCABFG $.
      $( [23-Dec-2008] $)
  $}

  ${
    cnveqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for converse.  (Contributed by ?who?, 6-Dec-2013.) $)
    cnveqd $p |- ( ph -> `' A = `' B ) $=
      ( wceq ccnv cnveq syl ) ABCEBFCFEDBCGH $.
      $( [6-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Membership in a converse.  Equation 5 of [Suppes] p. 62.  (Contributed
       by ?who?, 24-Mar-1998.) $)
    elcnv $p |- ( A e. `' R <-> E. x E. y ( A = <. x , y >. /\ y R x ) ) $=
      ( ccnv wcel cv wbr copab cop wceq wa wex df-cnv eleq2i elopab bitri ) CDE
      ZFCBGZAGZDHZABIZFCTSJKUALBMAMRUBCABDNOUAABCPQ $.
      $( [24-Mar-1998] $)

    $( Membership in a converse.  Equation 5 of [Suppes] p. 62.  (Contributed
       by ?who?, 11-Aug-2004.) $)
    elcnv2 $p |- ( A e. `' R <->
                 E. x E. y ( A = <. x , y >. /\ <. y , x >. e. R ) ) $=
      ( ccnv wcel cv cop wceq wbr wa wex elcnv df-br anbi2i 2exbii bitri ) CDEF
      CAGZBGZHIZSRDJZKZBLALTSRHDFZKZBLALABCDMUBUDABUAUCTSRDNOPQ $.
      $( [11-Aug-2004] $)
  $}


  ${
    $d y z A $.  $d x y z $.
    nfcnv.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for converse.  (Contributed by NM,
       31-Jan-2004.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nfcnv $p |- F/_ x `' A $=
      ( vz vy ccnv cv wbr copab df-cnv nfcv nfbr nfopab nfcxfr ) ABFDGZEGZBHZED
      IEDBJQEDAAOPBAOKCAPKLMN $.
  $}

  ${
    $d A x y $.  $d B x y $.  $d R x y $.
    $( The converse of a binary relation swaps arguments.  Theorem 11 of
       [Suppes] p. 61.  (Contributed by ?who?, 13-Aug-1995.) $)
    brcnv $p |- ( A `' R B <-> B R A ) $=
      ( vy vx ccnv wbr cvv wcel wa ancomd cv breq2 breq1 df-cnv brabg pm5.21nii
      brex ) ABCFZGAHIZBHIZJBACGZABSRUBUATBACRKDLZELZCGUCACGUBEDABHHSUDAUCCMUCB
      ACNEDCOPQ $.
      $( [13-Aug-1995] $)

    $( Ordered-pair membership in converse.  (Contributed by ?who?,
       13-Aug-1995.) $)
    opelcnv $p |- ( <. A , B >. e. `' R <-> <. B , A >. e. R ) $=
      ( ccnv wbr cop wcel brcnv df-br 3bitr3i ) ABCDZEBACEABFKGBAFCGABCHABKIBAC
      IJ $.
      $( [13-Aug-1995] $)

  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( Distributive law of converse over class composition.  Theorem 26 of
       [Suppes] p. 64.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 19-Mar-1998.)  (Revised by ?who?,
       27-Aug-2011.) $)
    cnvco $p |- `' ( A o. B ) = ( `' B o. `' A ) $=
      ( vx vy vz cv ccom wbr copab ccnv wa wex brcnv anbi12i ancom bitr3i exbii
      brco bitri opabbii df-cnv df-co 3eqtr4i ) CFZDFZABGZHZDCIUEEFZAJZHZUHUDBJ
      ZHZKZELZDCIUFJUKUIGUGUNDCUGUDUHBHZUHUEAHZKZELUNEUDUEABRUQUMEUQULUJKUMULUO
      UJUPUHUDBMUEUHAMNULUJOPQSTDCUFUADCEUKUIUBUC $.
      $( [27-Aug-2011] $) $( [19-Mar-1998] $)
  $}

  ${
    $d x y z w A $.
    $( The converse of a class union is the (indexed) union of the converses of
       its members.  (Contributed by ?who?, 11-Aug-2004.) $)
    cnvuni $p |- `' U. A = U_ x e. A `' x $=
      ( vy vz vw cuni ccnv cv ciun wcel wrex cop wa elcnv2 eluni2 anbi2i bitr4i
      wceq wex rexcom4 r19.42v 2exbii rexbii exbii 3bitrri 3bitri eliun eqriv )
      CBFZGZABAHZGZIZCHZUJJZUNULJZABKZUNUMJUOUNDHZEHZLRZUSURLZUIJZMZESDSUTVAUKJ
      ZMZABKZESZDSZUQDEUNUINVCVFDEVCUTVDABKZMVFVBVIUTAVABOPUTVDABUAQUBUQVEESZDS
      ZABKVJABKZDSVHUPVKABDEUNUKNUCVJADBTVLVGDVEAEBTUDUEUFAUNBULUGQUH $.
      $( [11-Aug-2004] $)
  $}


  ${
    $d x y A $.  $d x y B $.
    $( Membership in a range.  (Contributed by ?who?, 2-Apr-2004.) $)
    elrn $p |- ( A e. ran B <-> E. x x B A ) $=
      ( crn wcel cvv cima cv wbr wrex wex df-rn eleq2i elima rexv 3bitri ) BCDZ
      EBCFGZEAHBCIZAFJSAKQRBCLMABCFNSAOP $.
      $( [2-Apr-2004] $)

    $( Membership in a range.  (Contributed by ?who?, 10-Jul-1994.) $)
    elrn2 $p |- ( A e. ran B <-> E. x <. x , A >. e. B ) $=
      ( crn wcel cv wbr wex cop elrn df-br exbii bitri ) BCDEAFZBCGZAHNBICEZAHA
      BCJOPANBCKLM $.
      $( [10-Jul-1994] $)

  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59.  (Contributed by
       ?who?, 2-Apr-2004.) $)
    eldm $p |- ( A e. dom B <-> E. y A B y ) $=
      ( cdm wcel cv ccnv wbr wex crn df-dm eleq2i elrn bitri brcnv exbii ) BCDZ
      EZAFZBCGZHZAIZBSCHZAIRBTJZEUBQUDBCKLABTMNUAUCASBCOPN $.
      $( [2-Apr-2004] $)

    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59.  (Contributed by
       ?who?, 1-Aug-1994.) $)
    eldm2 $p |- ( A e. dom B <-> E. y <. A , y >. e. B ) $=
      ( cdm wcel cv wbr wex cop eldm df-br exbii bitri ) BCDEBAFZCGZAHBNICEZAHA
      BCJOPABNCKLM $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain.  (Contributed by ?who?, 5-Feb-2015.) $)
    dfdm2 $p |- dom A = { x | E. y x A y } $=
      ( cv wbr wex cdm eldm abbi2i ) ADZBDCEBFACGBJCHI $.
      $( [5-Feb-2015] $)

    $( Alternate definition of domain.  Definition 6.5(1) of [TakeutiZaring]
       p. 24.  (Contributed by ?who?, 28-Dec-1996.) $)
    dfdm3 $p |- dom A = { x | E. y <. x , y >. e. A } $=
      ( cv cop wcel wex cdm eldm2 abbi2i ) ADZBDECFBGACHBKCIJ $.
      $( [28-Dec-1996] $)

    $( Alternate definition of range.  Definition 4 of [Suppes] p. 60.
       (Contributed by ?who?, 27-Dec-1996.) $)
    dfrn2 $p |- ran A = { y | E. x x A y } $=
      ( cv wbr wex crn elrn abbi2i ) ADBDZCEAFBCGAJCHI $.
      $( [27-Dec-1996] $)

    $( Alternate definition of range.  Definition 6.5(2) of [TakeutiZaring]
       p. 24.  (Contributed by ?who?, 28-Dec-1996.) $)
    dfrn3 $p |- ran A = { y | E. x <. x , y >. e. A } $=
      ( crn cv wbr wex cab cop wcel dfrn2 df-br exbii abbii eqtri ) CDAEZBEZCFZ
      AGZBHPQICJZAGZBHABCKSUABRTAPQCLMNO $.
      $( [28-Dec-1996] $)

    $( Alternate definition of range.  (Contributed by ?who?, 5-Feb-2015.) $)
    dfrn4 $p |- ran A = dom `' A $=
      ( vx vy crn ccnv cdm cv wbr wex wcel brcnv exbii eldm elrn 3bitr4ri eqriv
      ) BADZAEZFZBGZCGZRHZCIUATAHZCITSJTQJUBUCCTUAAKLCTRMCTANOP $.
      $( [5-Feb-2015] $)
  $}

  ${
    $d x y z w v $.  $d z w v A $.
    dfdmf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfdmf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of domain, using bound-variable hypotheses instead of
       distinct variable conditions.  (Contributed by ?who?, 8-Mar-1995.) $)
    dfdmf $p |- dom A = { x | E. y <. x , y >. e. A } $=
      ( vw vv cdm cv cop wcel wex cab dfdm3 ax-17 hbel wceq opeq2 eleq1d exbidv
      cbvex abbii hbex opeq1 cbvab 3eqtri ) DIGJZHJZKZDLZHMZGNUHBJZKZDLZBMZGNAJ
      ZUMKZDLZBMZANGHDOULUPGUKUOHBBCCUJDCJZUJLBPFQUOHPUIUMRUJUNDUIUMUHSTUBUCUPU
      TGAUOABACCUNDVAUNLAPEQUDUTGPUHUQRZUOUSBVBUNURDUHUQUMUETUAUFUG $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for domain.  (Contributed by ?who?, 11-Aug-1994.) $)
    dmss $p |- ( A C_ B -> dom A C_ dom B ) $=
      ( vx vy wss cdm cv cop wcel wex ssel eximdv eldm2 3imtr4g ssrdv ) ABEZCAF
      ZBFZPCGZDGHZAIZDJTBIZDJSQISRIPUAUBDABTKLDSAMDSBMNO $.
      $( [11-Aug-1994] $)
  $}

  $( Equality theorem for domain.  (Contributed by ?who?, 11-Aug-1994.) $)
  dmeq $p |- ( A = B -> dom A = dom B ) $=
    ( wss wa cdm wceq dmss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMNFK
    OLPABGBAGHABIMNIJ $.
    $( [11-Aug-1994] $)

  ${
    dmeqi.1 $e |- A = B $.
    $( Equality inference for domain.  (Contributed by ?who?, 4-Mar-2004.) $)
    dmeqi $p |- dom A = dom B $=
      ( wceq cdm dmeq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    dmeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for domain.  (Contributed by ?who?, 4-Mar-2004.) $)
    dmeqd $p |- ( ph -> dom A = dom B ) $=
      ( wceq cdm dmeq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.
    $( Membership of first of an ordered pair in a domain.  (Contributed by
       ?who?, 30-Jul-1995.) $)
    opeldm $p |- ( <. A , B >. e. C -> A e. dom C ) $=
      ( vy cop wcel cv wex cdm cvv elex opexb simprbi wceq opeq2 eleq1d spcegv
      syl mpcom eldm2 sylibr ) ABEZCFZADGZEZCFZDHZACIFBJFZUCUGUCUBJFZUHUBCKUIAJ
      FUHABLMRUFUCDBJUDBNUEUBCUDBAOPQSDACTUA $.
      $( [30-Jul-1995] $)
  $}

  $( Membership of first of a binary relation in a domain.  (Contributed by
     ?who?, 8-Jan-2015.) $)
  breldm $p |- ( A R B -> A e. dom R ) $=
    ( wbr cop wcel cdm df-br opeldm sylbi ) ABCDABECFACGFABCHABCIJ $.
    $( [8-Jan-2015] $)

  ${
    $d A x y z $.  $d B x y z $.
    $( The domain of a union is the union of domains.  Exercise 56(a) of
       [Enderton] p. 65.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 12-Aug-1994.)  (Revised by ?who?,
       27-Aug-2011.) $)
    dmun $p |- dom ( A u. B ) = ( dom A u. dom B ) $=
      ( vx vy cun cdm cv cop wcel wex cab dfdm3 wo eldm orbi12i elun df-br brun
      wbr bitr3i exbii 19.43 bitri 3bitr4i abbi2i eqtr4i ) ABEZFCGZDGZHUGIZDJZC
      KAFZBFZEZCDUGLUKCUNUHULIZUHUMIZMUHUIASZDJZUHUIBSZDJZMZUHUNIUKUOURUPUTDUHA
      NDUHBNOUHULUMPUKUQUSMZDJVAUJVBDUJUHUIUGSVBUHUIUGQUHUIABRTUAUQUSDUBUCUDUEU
      F $.
      $( [27-Aug-2011] $) $( [12-Aug-1994] $)

    $( The domain of an intersection belong to the intersection of domains.
       Theorem 6 of [Suppes] p. 60.  (Contributed by ?who?, 15-Sep-2004.) $)
    dmin $p |- dom ( A i^i B ) C_ ( dom A i^i dom B ) $=
      ( vx vy cin cdm cv cop wcel wa wex 19.40 eldm2 elin exbii anbi12i 3imtr4i
      bitri ssriv ) CABEZFZAFZBFZEZCGZDGHZAIZUFBIZJZDKZUGDKZUHDKZJZUEUAIZUEUDIZ
      UGUHDLUNUFTIZDKUJDUETMUPUIDUFABNORUOUEUBIZUEUCIZJUMUEUBUCNUQUKURULDUEAMDU
      EBMPRQS $.
      $( [15-Sep-2004] $)

  $}

  ${
    $d x y z A $.
    $( The domain of a union.  Part of Exercise 8 of [Enderton] p. 41.
       (Contributed by ?who?, 3-Feb-2004.) $)
    dmuni $p |- dom U. A = U_ x e. A dom x $=
      ( vy vz cuni cdm cv ciun cop wcel wex wrex eluni exbii excom 19.41v ancom
      wa eldm2 bitri anbi1i bicomi 3bitri df-rex bitr4i eliun 3bitr4i eqriv ) C
      BEZFZABAGZFZHZCGZDGIZUIJZDKZUNULJZABLZUNUJJUNUMJUQUKBJZURRZAKZUSUQUOUKJZU
      TRZAKZDKVDDKZAKVBUPVEDAUOBMNVDDAOVFVAAVFVCDKZUTRZVAVCUTDPVAVHVAURUTRVHUTU
      RQURVGUTDUNUKSUATUBTNUCURABUDUEDUNUISAUNBULUFUGUH $.
      $( [3-Feb-2004] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The domain of a class of ordered pairs.  (Contributed by ?who?,
       16-May-1995.) $)
    dmopab $p |- dom { <. x , y >. | ph } = { x | E. y ph } $=
      ( vz copab cdm cv cop wcel wex cab hbopab1 dfdmf opabid exbii abbii eqtri
      hbopab2 ) ABCEZFBGCGHSIZCJZBKACJZBKBCDSABCDLABCDRMUAUBBTACABCNOPQ $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y A $.
    $( Upper bound for the domain of a restricted class of ordered pairs.
       (Contributed by ?who?, 31-Jan-2004.) $)
    dmopabss $p |- dom { <. x , y >. | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa copab cdm wex cab dmopab 19.42v abbii ssab2 eqsstri ) BEDFZA
      GZBCHIRCJZBKZDRBCLTQACJZGZBKDSUBBQACMNUABDOPP $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.
    $( The domain of a restricted class of ordered pairs.  (Contributed by
       ?who?, 31-Jan-2004.) $)
    dmopab3 $p |- ( A. x e. A E. y ph <->
               dom { <. x , y >. | ( x e. A /\ ph ) } = A ) $=
      ( wex wral cv wcel wi wal wa wb copab cdm wceq df-ral pm4.71 albii dmopab
      cab 19.42v abbii eqtri eqeq1i eqcom abeq2 3bitr2ri 3bitri ) ACEZBDFBGDHZU
      IIZBJUJUJUIKZLZBJZUJAKZBCMNZDOZUIBDPUKUMBUJUIQRUQULBTZDODUROUNUPURDUPUOCE
      ZBTURUOBCSUSULBUJACUAUBUCUDDURUEULBDUFUGUH $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y $.
    $( The domain of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Contributed by ?who?, 4-Jul-1994.)  (Revised by ?who?, 27-Aug-2011.) $)
    dm0 $p |- dom (/) = (/) $=
      ( vx vy c0 cdm wceq cv wcel wn eq0 cop wex noel nex eldm2 mtbir mpgbir )
      CDZCEAFZQGZHAAQISRBFJZCGZBKUABTLMBRCNOP $.
      $( [27-Aug-2011] $) $( [4-Jul-1994] $)

    $( The domain of the identity relation is the universe.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
       30-Apr-1998.)  (Revised by ?who?, 27-Aug-2011.) $)
    dmi $p |- dom _I = _V $=
      ( vx vy cid cdm cvv wceq cv wcel eqv wbr wex weq a9e vex ideq bitri exbii
      equcom mpbir eldm mpgbir ) CDZEFAGZUBHZAAUBIUDUCBGZCJZBKZUGBALZBKBAMUFUHB
      UFABLUHUCUEBNOABRPQSBUCCTSUA $.
      $( [27-Aug-2011] $) $( [30-Apr-1998] $)

    $( The domain of the universe is the universe.  (Contributed by ?who?,
       8-Aug-2003.) $)
    dmv $p |- dom _V = _V $=
      ( cvv cdm ssv cid dmi wss dmss ax-mp eqsstr3i eqssi ) ABZAKCADBZKEDAFLKFD
      CDAGHIJ $.
      $( [8-Aug-2003] $)
  $}

  ${
    $d x y A $.
    $( An empty domain implies an empty range.  (Contributed by ?who?,
       21-May-1998.) $)
    dm0rn0 $p |- ( dom A = (/) <-> ran A = (/) ) $=
      ( vx vy cv wbr wex cab c0 wceq wcel wb wal alnex noel albii abeq1 3bitr4i
      wn nbn eqeq1i cdm crn excom xchbinx bitr4i 3bitr3i dfdm2 dfrn2 ) BDZCDZAE
      ZCFZBGZHIZUKBFZCGZHIZAUAZHIAUBZHIULUIHJZKZBLZUOUJHJZKZCLZUNUQULRZBLZUORZC
      LZVBVEVGUOCFZRVIVGULBFVJULBMUKBCUCUDUOCMUEVFVABUTULUINSOVHVDCVCUOUJNSOUFU
      LBHPUOCHPQURUMHBCAUGTUSUPHBCAUHTQ $.
      $( [21-May-1998] $)

    $( A relation is empty iff its domain is empty.  (Contributed by ?who?,
       15-Sep-2004.) $)
    reldm0 $p |- ( Rel A -> ( A = (/) <-> dom A = (/) ) ) $=
      ( vx vy wrel c0 wceq cv cop wcel wb wal cdm rel0 eqrel mpan2 wn eq0 eldm2
      wex albii notbii alnex noel nbn 3bitr2i bitr2i syl6bb ) ADZAEFZBGZCGHZAIZ
      UKEIZJZCKZBKZALZEFZUHEDUIUPJMBCAENOURUJUQIZPZBKUPBUQQUTUOBUTULCSZPULPZCKU
      OUSVACUJARUAULCUBVBUNCUMULUKUCUDTUETUFUG $.
      $( [15-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a cross product.  Part of Theorem 3.13(x) of [Monk1]
       p. 37.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Contributed by ?who?, 28-Jul-1995.)  (Revised by ?who?,
       27-Aug-2011.) $)
    dmxp $p |- ( B =/= (/) -> dom ( A X. B ) = A ) $=
      ( vy vx c0 wne cxp cdm cv wcel wa copab df-xp dmeqi wex wral n0 ralrimivw
      wceq biimpi dmopab3 sylib syl5eq ) BEFZABGZHCIAJDIBJZKCDLZHZAUEUGCDABMNUD
      UFDOZCAPUHASUDUICAUDUIDBQTRUFCDAUAUBUC $.
      $( [27-Aug-2011] $) $( [28-Jul-1995] $)
  $}

  $( The domain of a square cross product.  (Contributed by ?who?,
     28-Jul-1995.) $)
  dmxpid $p |- dom ( A X. A ) = A $=
    ( cxp cdm wceq c0 dm0 xpeq1 xp0r syl6eq dmeqd id 3eqtr4a dmxp pm2.61ine ) A
    ABZCZADAEAEDZECEPAFQOEQOEABEAEAGAHIJQKLAAMN $.
    $( [28-Jul-1995] $)

  $( The domain of the intersection of two square cross products.  Unlike
     ~ dmin , equality holds.  (Contributed by ?who?, 29-Jan-2008.) $)
  dmxpin $p |- dom ( ( A X. A ) i^i ( B X. B ) ) = ( A i^i B ) $=
    ( cxp cin cdm inxp dmeqi dmxpid eqtri ) AACBBCDZEABDZKCZEKJLAABBFGKHI $.
    $( [29-Jan-2008] $)

  $( The cross product of a class with itself is one-to-one.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
     5-Nov-2006.)  (Revised by ?who?, 27-Aug-2011.) $)
  xpid11 $p |- ( ( A X. A ) = ( B X. B ) <-> A = B ) $=
    ( cxp wceq cdm dmeq dmxpid 3eqtr3g xpeq12 anidms impbii ) AACZBBCZDZABDZNLE
    MEABLMFAGBGHONABABIJK $.
    $( [27-Aug-2011] $) $( [5-Nov-2006] $)

  $( The domain of the double converse of a class (which doesn't have to be a
     relation as in ~ dfrel2 ).  (Contributed by ?who?, 5-Feb-2015.) $)
  dmcnvcnv $p |- dom `' `' A = dom A $=
    ( cdm ccnv crn df-dm dfrn4 eqtr2i ) ABACZDHCBAEHFG $.
    $( [5-Feb-2015] $)

  $( The range of the double converse of a class.  (Contributed by ?who?,
     8-Apr-2007.) $)
  rncnvcnv $p |- ran `' `' A = ran A $=
    ( crn ccnv cdm dfrn4 df-dm eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  ${
    $d x y A $.  $d x y B $.
    $( The first member of an ordered pair in a relation belongs to the domain
       of the relation.  (Contributed by ?who?, 28-Jul-2004.) $)
    elreldm $p |- ( ( Rel A /\ B e. A ) -> Proj1 B e. dom A ) $=
      ( vx vy cv cop wceq wex wrel wcel wa cproj1 elrel wi opeldm eleq1 proj1eq
      cdm proj1op syl6eq eleq1d imbi12d mpbiri exlimivv adantld mpcom ) BCEZDEZ
      FZGZDHCHZAIZBAJZKBLZARZJZCDBAMUKUMUPULUJUMUPNZCDUJUQUIAJZUGUOJZNUGUHAOUJU
      MURUPUSBUIAPUJUNUGUOUJUNUILUGBUIQUGUHSTUAUBUCUDUEUF $.
      $( [28-Jul-2004] $)
  $}


  $( Equality theorem for restrictions.  (Contributed by ?who?, 7-Aug-1994.) $)
  reseq1 $p |- ( A = B -> ( A |` C ) = ( B |` C ) ) $=
    ( wceq cvv cxp cin cres ineq1 df-res 3eqtr4g ) ABDACEFZGBLGACHBCHABLIACJBCJ
    K $.
    $( [7-Aug-1994] $)

  $( Equality theorem for restrictions.  (Contributed by ?who?, 8-Aug-1994.) $)
  reseq2 $p |- ( A = B -> ( C |` A ) = ( C |` B ) ) $=
    ( wceq cvv cxp cin cres xpeq1 ineq2d df-res 3eqtr4g ) ABDZCAEFZGCBEFZGCAHCB
    HMNOCABEIJCAKCBKL $.
    $( [8-Aug-1994] $)

  ${
    reseqi.1 $e |- A = B $.
    $( Equality inference for restrictions.  (Contributed by ?who?,
       21-Oct-2014.) $)
    reseq1i $p |- ( A |` C ) = ( B |` C ) $=
      ( wceq cres reseq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Oct-2014] $)

    $( Equality inference for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2i $p |- ( C |` A ) = ( C |` B ) $=
      ( wceq cres reseq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [22-Jun-2011] $)

    reseqi.2 $e |- C = D $.
    $( Equality inference for restrictions.  (Contributed by ?who?,
       21-Oct-2014.) $)
    reseq12i $p |- ( A |` C ) = ( B |` D ) $=
      ( cres reseq1i reseq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [21-Oct-2014] $)
  $}

  ${
    reseqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restrictions.  (Contributed by ?who?,
       21-Oct-2014.) $)
    reseq1d $p |- ( ph -> ( A |` C ) = ( B |` C ) ) $=
      ( wceq cres reseq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [21-Oct-2014] $)

    $( Equality deduction for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2d $p |- ( ph -> ( C |` A ) = ( C |` B ) ) $=
      ( wceq cres reseq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [22-Jun-2011] $)

    reseqd.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for restrictions.  (Contributed by ?who?,
       21-Oct-2014.) $)
    reseq12d $p |- ( ph -> ( A |` C ) = ( B |` D ) ) $=
      ( cres reseq1d reseq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [21-Oct-2014] $)
  $}

  ${
    $d y B $.  $d x y $.
    nfres.1 $e |- F/_ x A $.
    nfres.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for restriction.  (Contributed by NM,
       15-Sep-2003.)  (Revised by David Abernethy, 19-Jun-2012.) $)
    nfres $p |- F/_ x ( A |` B ) $=
      ( cres cvv cxp cin df-res nfcv nfxp nfin nfcxfr ) ABCFBCGHZIBCJABODACGEAG
      KLMN $.
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    $( Equality theorem for image.  (Contributed by ?who?, 14-Aug-1994.) $)
    imaeq1 $p |- ( A = B -> ( A " C ) = ( B " C ) ) $=
      ( vy vx wceq cv wbr wrex cab cima breq rexbidv abbidv df-ima 3eqtr4g ) AB
      FZDGZEGZAHZDCIZEJRSBHZDCIZEJACKBCKQUAUCEQTUBDCRSABLMNEDACOEDBCOP $.
      $( [14-Aug-1994] $)

    $( Equality theorem for image.  (Contributed by ?who?, 14-Aug-1994.) $)
    imaeq2 $p |- ( A = B -> ( C " A ) = ( C " B ) ) $=
      ( vy vx wceq cv wbr wrex cab cima rexeq abbidv df-ima 3eqtr4g ) ABFZDGEGC
      HZDAIZEJQDBIZEJCAKCBKPRSEQDABLMEDCANEDCBNO $.
      $( [14-Aug-1994] $)
  $}

  ${
    imaeq1i.1 $e |- A = B $.
    $( Equality theorem for image.  (Contributed by ?who?, 21-Dec-2008.) $)
    imaeq1i $p |- ( A " C ) = ( B " C ) $=
      ( wceq cima imaeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality theorem for image.  (Contributed by ?who?, 21-Dec-2008.) $)
    imaeq2i $p |- ( C " A ) = ( C " B ) $=
      ( wceq cima imaeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    imaeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq1d $p |- ( ph -> ( A " C ) = ( B " C ) ) $=
      ( wceq cima imaeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Dec-2006] $)

    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq2d $p |- ( ph -> ( C " A ) = ( C " B ) ) $=
      ( wceq cima imaeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Dec-2006] $)
  $}


  ${
    $d A t x $.  $d B t x $.  $d C t x $.
    $( Membership in an image under a unit power class.  (Contributed by ?who?,
       19-Feb-2015.) $)
    elimapw1 $p |- ( A e. ( B " ~P1 C ) <-> E. x e. C <. { x } , A >. e. B ) $=
      ( vt cpw1 cima wcel cv wbr wrex csn cop elima wceq wa bitr4i bitri rexbii
      wex df-rex elpw1 anbi1i r19.41v exbii rexcom4 snex breq1 ceqsexv df-br )
      BCDFZGHEIZBCJZEUKKZAIZLZBMCHZADKZEBCUKNUNUPBCJZADKZURUNULUPOZUMPZETZADKZU
      TUNULUKHZUMPZETZVDUMEUKUAVGVBADKZETVDVFVHEVFVAADKZUMPVHVEVIUMAULDUBUCVAUM
      ADUDQUEVBAEDUFQRVCUSADUMUSEUPUOUGULUPBCUHUISRUSUQADUPBCUJSRR $.
      $( [19-Feb-2015] $)

    $( Membership in an image under two unit power classes.  (Contributed by
       ?who?, 18-Mar-2015.) $)
    elimapw12 $p |- ( A e. ( B " ~P1 ~P1 C ) <->
             E. x e. C <. { { x } } , A >. e. B ) $=
      ( vt cpw1 cima wcel cv csn cop wrex elimapw1 wex df-rex wceq elpw1 anbi1i
      wa bitri r19.41v bitr4i exbii rexcom4 opeq1d eleq1d ceqsexv rexbii bitr3i
      snex sneq ) BCDFZFGHEIZJZBKZCHZEULLZAIZJZJZBKZCHZADLZEBCULMUQUMULHZUPSZEN
      ZVCUPEULOVFUMUSPZUPSZADLZENZVCVEVIEVEVGADLZUPSVIVDVKUPAUMDQRVGUPADUAUBUCV
      JVHENZADLVCVHAEDUDVLVBADUPVBEUSURUJVGUOVACVGUNUTBUMUSUKUEUFUGUHUITTT $.
      $( [18-Mar-2015] $)


    $( Membership in an image under three unit power classes.  (Contributed by
       ?who?, 18-Mar-2015.) $)
    elimapw13 $p |- ( A e. ( B " ~P1 ~P1 ~P1 C ) <->
             E. x e. C <. { { { x } } } , A >. e. B ) $=
      ( vt cpw1 cima wcel cv csn cop wrex elimapw12 wa df-rex wceq elpw1 bitr4i
      wex bitri anbi1i r19.41v exbii rexcom4 sneqd opeq1d eleq1d ceqsexv rexbii
      snex sneq ) BCDFZFFGHEIZJZJZBKZCHZEULLZAIZJZJZJZBKZCHZADLZEBCULMURUMULHZU
      QNZESZVEUQEULOVHUMUTPZUQNZESZADLZVEVHVJADLZESVLVGVMEVGVIADLZUQNVMVFVNUQAU
      MDQUAVIUQADUBRUCVJAEDUDRVKVDADUQVDEUTUSUJVIUPVCCVIUOVBBVIUNVAUMUTUKUEUFUG
      UHUITTT $.
      $( [18-Mar-2015] $)

  $}

  ${
    $d A x t $.  $d B x t $.
    $( Membership in an image under cardinal one.  (Contributed by ?who?,
       6-Feb-2015.) $)
    elima1c $p |- ( A e. ( B " 1c ) <-> E. x <. { x } , A >. e. B ) $=
      ( c1c cima wcel cvv cpw1 cv csn cop wrex wex imaeq2i eleq2i elimapw1 rexv
      df1c2 3bitri ) BCDEZFBCGHZEZFAIJBKCFZAGLUCAMTUBBDUACRNOABCGPUCAQS $.
      $( [6-Feb-2015] $)

    $( Membership in an image under the unit power class of cardinal one.
       (Contributed by ?who?, 25-Feb-2015.) $)
    elimapw11c $p |- ( A e. ( B " ~P1 1c ) <-> E. x <. { { x } } , A >. e. B )
        $=
      ( vt c1c cpw1 cima wcel cv csn cop wrex wex elimapw1 wa wceq df-rex exbii
      el1c bitri anbi1i 19.41v bitr4i excom snex opeq1d eleq1d ceqsexv 3bitri
      sneq ) BCEFGHDIZJZBKZCHZDELZAIZJZJZBKZCHZAMZDBCENUOUKEHZUNOZDMZUKUQPZUNOZ
      DMZAMZVAUNDEQVDVFAMZDMVHVCVIDVCVEAMZUNOVIVBVJUNAUKSUAVEUNAUBUCRVFDAUDTVGU
      TAUNUTDUQUPUEVEUMUSCVEULURBUKUQUJUFUGUHRUIT $.
      $( [25-Feb-2015] $)
  $}

  ${

    $( Binary relation on a restriction.  (Contributed by ?who?,
       12-Dec-2006.) $)
    brres $p |- ( A ( C |` D ) B <-> ( A C B /\ A e. D ) ) $=
      ( cres wbr cvv cxp cin wa wcel df-res breqi brin anass brex simprd adantr
      pm4.71i brxp anbi2i 3bitr4ri 3bitri ) ABCDEZFABCDGHZIZFABCFZABUEFZJZUGADK
      ZJZABUDUFCDLMABCUENUKBGKZJUGUJULJZJUKUIUGUJULOUKULUGULUJUGAGKULABCPQRSUHU
      MUGABDGTUAUBUC $.
      $( [12-Dec-2006] $)

    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25.  (Contributed by ?who?, 13-Nov-1995.) $)
    opelres $p |- ( <. A , B >. e. ( C |` D ) <->
                    ( <. A , B >. e. C /\ A e. D ) ) $=
      ( cres wbr wcel wa cop brres df-br anbi1i 3bitr3i ) ABCDEZFABCFZADGZHABIZ
      NGQCGZPHABCDJABNKORPABCKLM $.
      $( [13-Nov-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Alternate definition of image.  (Contributed by ?who?, 19-Apr-2004.)
       (Revised by ?who?, 27-Aug-2011.) $)
    dfima3 $p |- ( A " B ) = ran ( A |` B ) $=
      ( vx vy cima cres crn cv cop wcel wex wa opelres ancom bitri exbii elima3
      elrn2 3bitr4ri eqriv ) CABEZABFZGZDHZCHZIZUBJZDKUDBJZUFAJZLZDKUEUCJUEUAJU
      GUJDUGUIUHLUJUDUEABMUIUHNOPDUEUBRDUEABQST $.
      $( [27-Aug-2011] $) $( [19-Apr-2004] $)

    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Contributed by ?who?, 14-Aug-1994.)  (Revised by ?who?,
       27-Aug-2011.) $)
    dfima4 $p |- ( A " B ) = { y | E. x ( x e. B /\ <. x , y >. e. A ) } $=
      ( cima cv wbr wrex cab wcel cop wa df-ima df-br rexbii df-rex bitri abbii
      wex eqtri ) CDEAFZBFZCGZADHZBIUADJUAUBKCJZLASZBIBACDMUDUFBUDUEADHUFUCUEAD
      UAUBCNOUEADPQRT $.
      $( [27-Aug-2011] $) $( [14-Aug-1994] $)
  $}


  ${
    $d y z A $.  $d y z B $.  $d x y z w $.
    nfima.1 $e |- F/_ x A $.
    nfima.2 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for image.  (Contributed by NM,
       30-Dec-1996.)  (Proof shortened by Andrew Salmon, 27-Aug-2011.) $)
    nfima $p |- F/_ x ( A " B ) $=
      ( vz vy cima cv wbr wrex cab df-ima nfcv nfbr nfrex nfab nfcxfr ) ABCHFIZ
      GIZBJZFCKZGLGFBCMUBAGUAAFCEASTBASNDATNOPQR $.
  $}

  ${
    $d x y z $.  $d B y z $.  $d A y z $.  $d ph y $.
    nfimad.2 $e |- ( ph -> F/_ x A ) $.
    nfimad.3 $e |- ( ph -> F/_ x B ) $.
    $( Deduction version of bound-variable hypothesis builder ~ nfima .
       (Contributed by FL, 15-Dec-2006.)  (Revised by Mario Carneiro,
       15-Oct-2016.) $)
    nfimad $p |- ( ph -> F/_ x ( A " B ) ) $=
      ( vz cv wcel wal cab cima wnfc nfaba1 nfima wb wa nfnfc1 nfan abidnf
      imaeq1d imaeq2d sylan9eq nfceqdf syl2anc mpbii ) ABGHZCIZBJGKZUGDIZBJGKZL
      ZMZBCDLZMZBUIUKUHBGNUJBGNOABCMZBDMZUMUOPEFUPUQQBULUNUPUQBBCRBDRSUPUQULCUK
      LUNUPUICUKBGCTUAUQUKDCBGDTUBUCUDUEUF $.
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.  $d x y z $.  $d F y z $.
    $( Move class substitution in and out of the image of a function.
       (Contributed by FL, 15-Dec-2006.) $)
    csbima12g $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cima ax-17 hbcsb1g hbcsb1f csbeq1a imaeq1d imaeq2d 3eqtr3d
      csb wceq csbcog hbimad wel hbima vex weq vtoclef a1i 3eqtrd csbiegf eqtrd
      hbeq ) BDHZFBAFIZECJZRZRFBAUMERZRZFBAUMCRZRZJZABUNRABERZABCRZJZFGBUOUTDUL
      FGUQUSULFKFGBUPDGIBHFKZLFGBURDVDLUAUMBSZUOUPURJZUQURJUTUOVFSZVEVGAUMAGGUO
      VFAGUMUNGFUBAKZMAGUPURAGUMEVHMAGUMCVHMUCUKFUDAFUEZUNUPCJUOVFVIEUPCAUMENOA
      UMUNNVICURUPAUMCNPQUFUGVEUPUQURFBUPNOVEURUSUQFBURNPUHUIAFBUNDTULUTVAUSJVC
      ULUQVAUSAFBEDTOULUSVBVAAFBCDTPUJQ $.
      $( [13-Dec-2006] $)
  $}

  $( Equality theorem for range.  (Contributed by ?who?, 29-Dec-1996.) $)
  rneq $p |- ( A = B -> ran A = ran B ) $=
    ( wceq cvv cima crn imaeq1 df-rn 3eqtr4g ) ABCADEBDEAFBFABDGAHBHI $.
    $( [29-Dec-1996] $)

  ${
    rneqi.1 $e |- A = B $.
    $( Equality inference for range.  (Contributed by ?who?, 4-Mar-2004.) $)
    rneqi $p |- ran A = ran B $=
      ( wceq crn rneq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    rneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for range.  (Contributed by ?who?, 4-Mar-2004.) $)
    rneqd $p |- ( ph -> ran A = ran B ) $=
      ( wceq crn rneq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  $( Subset theorem for range.  (Contributed by ?who?, 22-Mar-1998.) $)
  rnss $p |- ( A C_ B -> ran A C_ ran B ) $=
    ( wss ccnv cdm crn cnvss dmss syl dfrn4 3sstr4g ) ABCZADZEZBDZEZAFBFLMOCNPC
    ABGMOHIAJBJK $.
    $( [22-Mar-1998] $)

  $( The second argument of a binary relation belongs to its range.
     (Contributed by ?who?, 29-Jun-2008.) $)
  brelrn $p |- ( A C B -> B e. ran C ) $=
    ( ccnv wbr cdm wcel crn breldm brcnv bicomi dfrn4 eleq2i 3imtr4i ) BACDZEZB
    OFZGABCEZBCHZGBAOIPRBACJKSQBCLMN $.
    $( [29-Jun-2008] $)

  $( Membership of second member of an ordered pair in a range.  (Contributed
     by ?who?, 8-Jan-2015.) $)
  opelrn $p |- ( <. A , B >. e. C -> B e. ran C ) $=
    ( cop wcel wbr crn df-br brelrn sylbir ) ABDCEABCFBCGEABCHABCIJ $.
    $( [8-Jan-2015] $)

  ${
    $d x y z w v $.  $d z w v A $.
    dfrnf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfrnf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of range, using bound-variable hypotheses instead of distinct
       variable conditions.  (Contributed by ?who?, 14-Aug-1995.) $)
    dfrnf $p |- ran A = { y | E. x <. x , y >. e. A } $=
      ( vv vw crn cv cop wcel wex cab dfrn3 ax-17 hbel wceq opeq1 eleq1d exbidv
      cbvex abbii hbex opeq2 cbvab 3eqtri ) DIGJZHJZKZDLZGMZHNAJZUIKZDLZAMZHNUM
      BJZKZDLZAMZBNGHDOULUPHUKUOGAACCUJDCJZUJLAPEQUOGPUHUMRUJUNDUHUMUISTUBUCUPU
      THBUOBABCCUNDVAUNLBPFQUDUTHPUIUQRZUOUSAVBUNURDUIUQUMUETUAUFUG $.
      $( [14-Aug-1995] $)
  $}


  ${
    $d x y z $.  $d y z A $.
    nfrn.1 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for range.  (Contributed by NM,
       1-Sep-1999.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nfrn $p |- F/_ x ran A $=
      ( crn cvv cima df-rn nfcv nfima nfcxfr ) ABDBEFBGABECAEHIJ $.

    $( Bound-variable hypothesis builder for domain.  (Contributed by NM,
       30-Jan-2004.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nfdm $p |- F/_ x dom A $=
      ( cdm ccnv crn df-dm nfcnv nfrn nfcxfr ) ABDBEZFBGAKABCHIJ $.

  $}

  ${
    $d A z $.  $d B z $.  $d x z $.
    $( Domain of an intersection.  (Contributed by FL, 15-Oct-2012.) $)
    dmiin $p |- dom |^|_ x e. A B C_ |^|_ x e. A dom B $=
      ( vz ciin cdm wss hbii1 hbdm ssiinf cv wcel iinss2 dmss syl mprgbir ) ABC
      EZFZABCFZEGRSGZABADBSRADQADBCHIJAKBLQCGTABCMQCNOP $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d A w y $.  $d B w y $.  $d V w y $.  $d x w y $.
    $( Distribute proper substitution through the range of a class.
       (Contributed by Alan Sare, 10-Nov-2012. ) (Contributed by ?who?,
       10-Nov-2012.) $)
    csbrng $p |- ( A e. V -> [_ A / x ]_ ran B = ran [_ A / x ]_ B ) $=
      ( vw vy wcel crn csb cop wex cab wsbc dfrn3 csbeq2i csbabg sbcexg sbcel2g
      cv exbidv bitrd abbidv 3eqtrd syl6eqr ) BDGZABCHZIZESFSJZABCIZGZEKZFLZUIH
      UEUGABUHCGZEKZFLZIUNABMZFLULABUFUODEFCNOUNAFBDPUEUPUKFUEUPUMABMZEKUKUMEAB
      DQUEUQUJEABUHCDRTUAUBUCEFUINUD $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The range of a class of ordered pairs.  (Contributed by ?who?,
       14-Aug-1995.) $)
    rnopab $p |- ran { <. x , y >. | ph } = { y | E. x ph } $=
      ( vz copab crn cv cop wcel wex cab hbopab1 dfrnf opabid exbii abbii eqtri
      hbopab2 ) ABCEZFBGCGHSIZBJZCKABJZCKBCDSABCDLABCDRMUAUBCTABABCNOPQ $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y $.
    $( The range of a function expressed as a class abstraction.  (Contributed
       by ?who?, 23-Mar-2006.) $)
    rnopab2 $p |- ran { <. x , y >. | ( x e. A /\ y = B ) } =
                 { y | E. x e. A y = B } $=
      ( cv wcel wceq wa copab crn wex cab wrex rnopab df-rex abbii eqtr4i ) AEC
      FBEDGZHZABIJSAKZBLRACMZBLSABNUATBRACOPQ $.
      $( [23-Mar-2006] $)
  $}

  $( The range of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
     p. 36.  (Contributed by ?who?, 4-Jul-1994.) $)
  rn0 $p |- ran (/) = (/) $=
    ( c0 cdm wceq crn dm0 dm0rn0 mpbi ) ABACADACEAFG $.
    $( [4-Jul-1994] $)

  ${
    $d x y A $.
    $( A relation is empty iff its range is empty.  (Contributed by ?who?,
       15-Sep-2004.) $)
    relrn0 $p |- ( Rel A -> ( A = (/) <-> ran A = (/) ) ) $=
      ( wrel c0 wceq cdm crn reldm0 dm0rn0 syl6bb ) ABACDAECDAFCDAGAHI $.
      $( [15-Sep-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( Domain of a composition.  Theorem 21 of [Suppes] p. 63.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
       19-Mar-1998.)  (Revised by ?who?, 27-Aug-2011.) $)
    dmcoss $p |- dom ( A o. B ) C_ dom B $=
      ( vx vy vz ccom cdm cv wbr wex wcel wa brco exbii excom bitri simpl eximi
      exlimiv eldm sylbi 3imtr4i ssriv ) CABFZGZBGZCHZDHZUDIZDJZUGEHZBIZEJZUGUE
      KUGUFKUJULUKUHAIZLZDJZEJZUMUJUOEJZDJUQUIURDEUGUHABMNUODEOPUPULEUOULDULUNQ
      SRUADUGUDTEUGBTUBUC $.
      $( [27-Aug-2011] $) $( [19-Mar-1998] $)
  $}

  $( Range of a composition.  (Contributed by ?who?, 19-Mar-1998.) $)
  rncoss $p |- ran ( A o. B ) C_ ran A $=
    ( ccnv ccom cdm crn dmcoss dfrn4 cnvco dmeqi eqtri 3sstr4i ) BCZACZDZEZNEAB
    DZFZAFMNGRQCZEPQHSOABIJKAHL $.
    $( [19-Mar-1998] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Domain of a composition.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 28-May-1998.)  (Revised by ?who?,
       27-Aug-2011.) $)
    dmcosseq $p |- ( ran B C_ dom A -> dom ( A o. B ) = dom B ) $=
      ( vx vy vz crn cdm wss ccom dmcoss a1i cv wbr wcel wa brelrn ssel syl6ibr
      wex eldm syl6ib ancld 19.42v eximdv exbii excom bitri 3imtr4g ssrdv eqssd
      syl5 brco ) BFZAGZHZABIZGZBGZUQURHUOABJKUOCURUQUOCLZDLZBMZDSZUSELZUPMZESZ
      USURNUSUQNUOVBVAUTVCAMZOZESZDSZVEUOVAVHDUOVAVAVFESZOVHUOVAVJUOVAUTUNNZVJV
      AUTUMNUOVKUSUTBPUMUNUTQUKEUTATUAUBVAVFEUCRUDVEVGDSZESVIVDVLEDUSVCABULUEVG
      EDUFUGRDUSBTEUSUPTUHUIUJ $.
      $( [27-Aug-2011] $) $( [28-May-1998] $)

    $( Domain of a composition.  (Contributed by ?who?, 19-Mar-1998.) $)
    dmcoeq $p |- ( dom A = ran B -> dom ( A o. B ) = dom B ) $=
      ( cdm crn wceq wss ccom eqimss2 dmcosseq syl ) ACZBDZELKFABGCBCELKHABIJ
      $.
      $( [19-Mar-1998] $)
  $}

  $( Range of a composition.  (Contributed by ?who?, 19-Mar-1998.) $)
  rncoeq $p |- ( dom A = ran B -> ran ( A o. B ) = ran A ) $=
    ( ccnv cdm crn wceq ccom dmcoeq df-dm dfrn4 eqeq12i eqcom bitri cnvco dmeqi
    eqtri 3imtr4i ) BCZDZACZEZFZRTGZDZTDZFADZBEZFZABGZEZAEZFRTHUHUASFUBUFUAUGSA
    IBJKUASLMUJUDUKUEUJUICZDUDUIJULUCABNOPAJKQ $.
    $( [19-Mar-1998] $)

  $( Distribute proper substitution through the restriction of a class.
     (Contributed by Alan Sare, 10-Nov-2012. ) (Contributed by ?who?,
     10-Nov-2012.) $)
  csbresg $p |- ( A e. V -> [_ A / x ]_ ( B |` C ) =
                 ( [_ A / x ]_ B |` [_ A / x ]_ C ) ) $=
    ( wcel cres csb cvv cxp cin df-res csbeq2i csbing csbxpg csbconstgfv xpeq2d
    eqtrd ineq2d 3eqtrd syl6eqr ) BEFZABCDGZHZABCHZABDHZIJZKZUEUFGUBUDABCDIJZKZ
    HUEABUIHZKUHABUCUJECDLMABECUINUBUKUGUEUBUKUFABIHZJUGABDIEOUBULIUFABIEPQRSTU
    EUFLUA $.
    $( [10-Nov-2012] $)

  $( A restriction to the empty set is empty.  (Contributed by ?who?,
     12-Nov-1994.) $)
  res0 $p |- ( A |` (/) ) = (/) $=
    ( c0 cres cvv cxp cin df-res xp0r ineq2i in0 3eqtri ) ABCABDEZFABFBABGLBADH
    IAJK $.
    $( [12-Nov-1994] $)

  ${
    $( Ordered pair membership in a restriction when the first member belongs
       to the restricting class.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 30-Apr-2004.)  (Revised by ?who?,
       27-Aug-2011.) $)
    opres $p |- ( A e. D ->
                    ( <. A , B >. e. ( C |` D ) <-> <. A , B >. e. C ) ) $=
      ( wcel cop wa cres iba opelres syl6rbbr ) ADEZABFZCEZNLGMCDHELNIABCDJK $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A restricted identity relation is equivalent to equality in its domain.
       (Contributed by ?who?, 30-Apr-2004.) $)
    resieq $p |- ( B e. A -> ( B ( _I |` A ) C <-> B = C ) ) $=
      ( cid cres wbr wcel wa wceq brres iba ideqg2 bitr3d syl5bb ) BCDAEFBCDFZB
      AGZHZPBCIZBCDAJPOQRPOKBCALMN $.
      $( [30-Apr-2004] $)
  $}

  $( The restriction of a restriction.  (Contributed by ?who?, 27-Mar-2008.) $)
  resres $p |- ( ( A |` B ) |` C ) = ( A |` ( B i^i C ) ) $=
    ( cres cvv cxp cin df-res ineq1i xpindir ineq2i inass 3eqtr4ri 3eqtri ) ABD
    ZCDOCEFZGABEFZGZPGZABCGZDZOCHORPABHIATEFZGAQPGZGUASUBUCABCEJKATHAQPLMN $.
    $( [27-Mar-2008] $)

  $( Distributive law for restriction over union.  Theorem 31 of [Suppes]
     p. 65.  (Contributed by ?who?, 30-Sep-2002.) $)
  resundi $p |- ( A |` ( B u. C ) ) = ( ( A |` B ) u. ( A |` C ) ) $=
    ( cun cvv cxp cin cres xpundir ineq2i indi eqtri df-res uneq12i 3eqtr4i ) A
    BCDZEFZGZABEFZGZACEFZGZDZAPHABHZACHZDRASUADZGUCQUFABCEIJASUAKLAPMUDTUEUBABM
    ACMNO $.
    $( [30-Sep-2002] $)

  $( Distributive law for restriction over union.  (Contributed by ?who?,
     23-Sep-2004.) $)
  resundir $p |- ( ( A u. B ) |` C ) = ( ( A |` C ) u. ( B |` C ) ) $=
    ( cun cvv cxp cin cres indir df-res uneq12i 3eqtr4i ) ABDZCEFZGANGZBNGZDMCH
    ACHZBCHZDABNIMCJQORPACJBCJKL $.
    $( [23-Sep-2004] $)

  $( Class restriction distributes over intersection.  (Contributed by FL,
     6-Oct-2008.) $)
  resindi $p |- ( A |` ( B i^i C ) ) = ( ( A |` B ) i^i ( A |` C ) ) $=
    ( cin cvv cxp cres xpindir ineq2i inindi eqtri df-res ineq12i 3eqtr4i ) ABC
    DZEFZDZABEFZDZACEFZDZDZAOGABGZACGZDQARTDZDUBPUEABCEHIARTJKAOLUCSUDUAABLACLM
    N $.
    $( [6-Oct-2008] $)

  $( Class restriction distributes over intersection.  (Contributed by ?who?,
     18-Dec-2008.) $)
  resindir $p |- ( ( A i^i B ) |` C ) = ( ( A |` C ) i^i ( B |` C ) ) $=
    ( cin cvv cxp cres inindir df-res ineq12i 3eqtr4i ) ABDZCEFZDAMDZBMDZDLCGAC
    GZBCGZDABMHLCIPNQOACIBCIJK $.
    $( [18-Dec-2008] $)

  $( Move intersection into class restriction.  (Contributed by ?who?,
     18-Dec-2008.) $)
  inres $p |- ( A i^i ( B |` C ) ) = ( ( A i^i B ) |` C ) $=
    ( cin cvv cxp cres inass df-res ineq2i 3eqtr4ri ) ABDZCEFZDABMDZDLCGABCGZDA
    BMHLCIONABCIJK $.
    $( [18-Dec-2008] $)

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a restriction.  Exercise 14 of [TakeutiZaring] p. 25.
       (Contributed by ?who?, 1-Aug-1994.) $)
    dmres $p |- dom ( A |` B ) = ( B i^i dom A ) $=
      ( vx vy cdm cin cres cv wbr wcel wex 19.41v eldm brres exbii bitri anbi1i
      wa 3bitr4ri ineqri incom eqtr3i ) AEZBFABGZEZBUCFCUCBUECHZDHZAIZUFBJZRZDK
      ZUHDKZUIRUFUEJZUFUCJZUIRUHUIDLUMUFUGUDIZDKUKDUFUDMUOUJDUFUGABNOPUNULUIDUF
      AMQSTUCBUAUB $.
      $( [1-Aug-1994] $)
  $}

  $( A domain restricted to a subclass equals the subclass.  (Contributed by
     ?who?, 2-Mar-1997.)  (Revised by ?who?, 28-Aug-2004.) $)
  ssdmres $p |- ( A C_ dom B <-> dom ( B |` A ) = A ) $=
    ( cdm wss cin wceq cres df-ss dmres eqeq1i bitr4i ) ABCZDALEZAFBAGCZAFALHNM
    ABAIJK $.
    $( [28-Aug-2004] $) $( [2-Mar-1997] $)

  $( A class includes its restriction.  Exercise 15 of [TakeutiZaring] p. 25.
     (Contributed by ?who?, 2-Aug-1994.) $)
  resss $p |- ( A |` B ) C_ A $=
    ( cres cvv cxp cin df-res inss1 eqsstri ) ABCABDEZFAABGAJHI $.
    $( [2-Aug-1994] $)

  $( Commutative law for restriction.  (Contributed by ?who?, 27-Mar-1998.) $)
  rescom $p |- ( ( A |` B ) |` C ) = ( ( A |` C ) |` B ) $=
    ( cin cres incom reseq2i resres 3eqtr4i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [27-Mar-1998] $)

  $( Subclass theorem for restriction.  (Contributed by ?who?, 16-Aug-1994.) $)
  ssres $p |- ( A C_ B -> ( A |` C ) C_ ( B |` C ) ) $=
    ( wss cvv cxp cin cres ssrin df-res 3sstr4g ) ABDACEFZGBLGACHBCHABLIACJBCJK
    $.
    $( [16-Aug-1994] $)

  $( Subclass theorem for restriction.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.)  (Contributed by ?who?, 22-Mar-1998.)  (Revised by
     ?who?, 27-Aug-2011.) $)
  ssres2 $p |- ( A C_ B -> ( C |` A ) C_ ( C |` B ) ) $=
    ( wss cvv cxp cin cres xpss1 sslin syl df-res 3sstr4g ) ABDZCAEFZGZCBEFZGZC
    AHCBHNOQDPRDABEIOQCJKCALCBLM $.
    $( [27-Aug-2011] $) $( [22-Mar-1998] $)

  $( A restriction is a relation.  Exercise 12 of [TakeutiZaring] p. 25.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by
     ?who?, 2-Aug-1994.)  (Revised by ?who?, 27-Aug-2011.) $)
  relres $p |- Rel ( A |` B ) $=
    ( cres cvv cxp wss wrel cin df-res inss2 eqsstri relxp relss mp2 ) ABCZBDEZ
    FPGOGOAPHPABIAPJKBDLOPMN $.
    $( [27-Aug-2011] $) $( [2-Aug-1994] $)

  $( Absorption law for restriction.  Exercise 17 of [TakeutiZaring] p. 25.
     (Contributed by ?who?, 9-Aug-1994.) $)
  resabs1 $p |- ( B C_ C -> ( ( A |` C ) |` B ) = ( A |` B ) ) $=
    ( wss cres cin resres wceq df-ss incom eqeq1i bitri biimpi reseq2d syl5eq )
    BCDZACEBEACBFZEABEACBGPQBAPQBHZPBCFZBHRBCISQBBCJKLMNO $.
    $( [9-Aug-1994] $)

  $( Absorption law for restriction.  (Contributed by ?who?, 27-Mar-1998.) $)
  resabs2 $p |- ( B C_ C -> ( ( A |` B ) |` C ) = ( A |` B ) ) $=
    ( wss cres rescom resabs1 syl5eq ) BCDABEZCEACEBEIABCFABCGH $.
    $( [27-Mar-1998] $)

  $( Idempotent law for restriction.  (Contributed by ?who?, 27-Mar-1998.) $)
  residm $p |- ( ( A |` B ) |` B ) = ( A |` B ) $=
    ( wss cres wceq ssid resabs2 ax-mp ) BBCABDZBDIEBFABBGH $.
    $( [27-Mar-1998] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a restriction.  (Contributed by Scott Fenton,
       17-Mar-2011.) $)
    elres $p |- ( A e. ( B |` C )
          <-> E. x e. C E. y ( A = <. x , y >. /\ <. x , y >. e. B ) ) $=
      ( cv cop wceq cres wcel wex wrex eleq1 opelres ancom bitri syl6bb pm5.32i
      wa bitr4i an12 2exbii wrel relres pm4.71ri 19.41vv df-rex exdistr 3bitr4i
      elrel mpan ) CAFZBFZGZHZCDEIZJZSZBKAKZULEJZUOUNDJZSZSZBKAKZUQVBBKZAELZURV
      CABURUOUTVASZSVCUOUQVGUOUQUNUPJZVGCUNUPMVHVAUTSVGULUMDENVAUTOPQRUOUTVAUAP
      UBUQUOBKAKZUQSUSUQVIUPUCUQVIDEUDABCUPUJUKUEUOUQABUFTVFUTVESAKVDVEAEUGUTVB
      ABUHTUI $.
      $( [17-Mar-2011] $)

    ${
      elsnres.1 $e |- C e. _V $.
      $( Memebership in restriction to a singleton.  (Contributed by Scott
         Fenton, 17-Mar-2011.) $)
      elsnres $p |- ( A e. ( B |` { C } )
            <-> E. y ( A = <. C , y >. /\ <. C , y >. e. B ) ) $=
        ( vx csn cres wcel cv cop wceq wa wex elres rexcom4 opeq1 eqeq2d eleq1d
        wrex anbi12d rexsn exbii 3bitri ) BCDGZHIBFJZAJZKZLZUHCIZMZANFUETUKFUET
        ZANBDUGKZLZUMCIZMZANFABCUEOUKFAUEPULUPAUKUPFDEUFDLZUIUNUJUOUQUHUMBUFDUG
        QZRUQUHUMCURSUAUBUCUD $.
        $( [17-Mar-2011] $)
    $}

    $( Simplification law for restriction.  (Contributed by ?who?,
       16-Aug-1994.)  (Revised by ?who?, 15-Mar-2004.) $)
    relssres $p |- ( ( Rel A /\ dom A C_ B ) -> ( A |` B ) = A ) $=
      ( vx vy wrel cdm wss wa cres resss a1i simpl cv cop wcel opeldm ssel syl5
      wi adantl ancld opelres syl6ibr relssdv eqssd ) AEZAFZBGZHZABIZAUJAGUIABJ
      KUICDAUJUFUHLUICMZDMZNZAOZUNUKBOZHUMUJOUIUNUOUHUNUOSUFUNUKUGOUHUOUKULAPUG
      BUKQRTUAUKULABUBUCUDUE $.
      $( [15-Mar-2004] $) $( [16-Aug-1994] $)
  $}

  $( A relation restricted to its domain equals itself.  (Contributed by ?who?,
     12-Dec-2006.) $)
  resdm $p |- ( Rel A -> ( A |` dom A ) = A ) $=
    ( wrel cdm wss cres wceq ssid relssres mpan2 ) ABACZJDAJEAFJGAJHI $.
    $( [12-Dec-2006] $)

  ${
    $d x y A $.
    $( Restriction of a class abstraction of ordered pairs.  (Contributed by
       ?who?, 5-Nov-2002.) $)
    resopab $p |- ( { <. x , y >. | ph } |` A ) =
                  { <. x , y >. | ( x e. A /\ ph ) } $=
      ( copab cres cvv cxp cin cv wa df-res df-xp biantru opabbii eqtr4i ineq2i
      wcel vex incom eqtri inopab 3eqtri ) ABCEZDFUDDGHZIZBJDRZBCEZUDIZUGAKBCEU
      DDLUFUDUHIUIUEUHUDUEUGCJGRZKZBCEUHBCDGMUGUKBCUJUGCSNOPQUDUHTUAUGABCUBUC
      $.
      $( [5-Nov-2002] $)

    $( A subclass of the identity function is the identity function restricted
       to its domain.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 13-Dec-2003.)  (Revised by ?who?,
       27-Aug-2011.) $)
    iss $p |- ( A C_ _I <-> A = ( _I |` dom A ) ) $=
      ( vx vy cid wss cdm cres wceq cv cop wcel wb wal wa ssel wi opeldm syl5bi
      a1i wrel jcad weq wbr df-br vex ideq bitr3i anbi1i wex eldm2 syl6ib opeq2
      eleq1d biimprd syli exlimdv biimpd syl9 imp3a impbid opelres syl6bbr reli
      alrimivv relss mpi relres eqrel sylancl mpbird resss sseq1 mpbiri impbii
      ) ADEZADAFZGZHZVOVRBIZCIZJZAKZWAVQKZLZCMBMZVOWDBCVOWBWADKZVSVPKZNZWCVOWBW
      HVOWBWFWGADWAOZWBWGPVOVSVTAQSUAWHBCUBZWGNVOWBWFWJWGWFVSVTDUCWJVSVTDUDVSVT
      CUEUFUGZUHVOWJWGWBVOWGVSVSJZAKZWJWBWGWBCUIVOWMCVSAUJVOWBWMCWBVOWJWMVOWBWF
      WJWIWKUKWJWMWBWJWLWAAVSVTVSULUMZUNUOUPRWJWMWBWNUQURUSRUTVSVTDVPVAVBVDVOAT
      ZVQTVRWELVODTWOVCADVEVFDVPVGBCAVQVHVIVJVRVOVQDEDVPVKAVQDVLVMVN $.
      $( [27-Aug-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Restriction of a class abstraction of ordered pairs.  (Contributed by
       ?who?, 24-Aug-2007.) $)
    resopab2 $p |- ( A C_ B -> ( { <. x , y >. | ( x e. B /\ ph ) } |` A ) =
                  { <. x , y >. | ( x e. A /\ ph ) } ) $=
      ( wss cv wcel wa copab cres resopab wi wb ssel pm4.71 sylib anass syl6rbb
      anbi1d opabbidv syl5eq ) DEFZBGZEHZAIZBCJDKUDDHZUFIZBCJUGAIZBCJUFBCDLUCUH
      UIBCUCUIUGUEIZAIUHUCUGUJAUCUGUEMUGUJNDEUDOUGUEPQTUGUEARSUAUB $.
      $( [24-Aug-2007] $)
  $}

  ${
    $d w x y z A $.  $d w x y z R $.
    $( Alternate definition of the restriction operation.  (Contributed by
       Mario Carneiro, 5-Nov-2013.) $)
    dfres2 $p |- ( R |` A ) = { <. x , y >. | ( x e. A /\ x R y ) } $=
      ( vz vw cres cv wcel wbr copab relres relopab cop vex eleq1 breq1 anbi12d
      wa weq breq2 anbi2d opelopab brres ancom bitri df-br 3bitr2ri eqrelriiv )
      EFDCGZAHZCIZUKBHZDJZSZABKZDCLUOABMEHZFHZNZUPIUQCIZUQURDJZSZUQURUJJZUSUJIU
      OUTUQUMDJZSVBABUQUREOFOAETULUTUNVDUKUQCPUKUQUMDQRBFTVDVAUTUMURUQDUAUBUCVC
      VAUTSVBUQURDCUDVAUTUEUFUQURUJUGUHUI $.
      $( [5-Nov-2013] $)
  $}

  ${
    $d A x y $.
    $( The restricted identity expressed with the class builder.  (Contributed
       by FL, 25-Apr-2012.) $)
    opabresid $p |- { <. x , y >. | ( x e. A /\ y = x ) } = ( _I |` A ) $=
      ( weq copab cres cv wcel cid resopab equcom opabbii eqtr4i reseq1i eqtr3i
      wa dfid3 ) BADZABEZCFAGCHRPABEICFRABCJSICSABDZABEIRTABBAKLABQMNO $.
      $( [25-Apr-2012] $)
  $}

  $( The domain of a restricted identity function.  (Contributed by ?who?,
     27-Aug-2004.) $)
  dmresi $p |- dom ( _I |` A ) = A $=
    ( cid cdm wss cres wceq cvv ssv dmi sseqtr4i ssdmres mpbi ) ABCZDBAECAFAGMA
    HIJABKL $.
    $( [27-Aug-2004] $)

  $( MAY BE REVISED - delete this and replace w/ dfres3 (in FL's mathbox) $)
  $( Any relation restricted to the universe is itself.  (Contributed by ?who?,
     16-Mar-2004.) $)
  resid $p |- ( Rel A -> ( A |` _V ) = A ) $=
    ( wrel cdm cvv wss cres wceq ssv relssres mpan2 ) ABACZDEADFAGKHADIJ $.
    $( [16-Mar-2004] $)

  $( A restriction to an image.  (Contributed by ?who?, 29-Sep-2004.) $)
  resima $p |- ( ( A |` B ) " B ) = ( A " B ) $=
    ( cres crn cima residm rneqi dfima3 3eqtr4i ) ABCZBCZDJDJBEABEKJABFGJBHABHI
    $.
    $( [29-Sep-2004] $)


  $( Image under a restricted class.  (Contributed by FL, 31-Aug-2009.) $)
  resima2 $p |- ( B C_ C -> ( ( A |` C ) " B ) = ( A " B ) ) $=
    ( wss cin cres crn cima wceq sseqin2 biimpi rneqd dfima3 resres rneqi eqtri
    reseq2d 3eqtr4g ) BCDZACBEZFZGZABFZGACFZBHZABHSUAUCSTBASTBIBCJKQLUEUDBFZGUB
    UDBMUFUAACBNOPABMR $.
    $( [31-Aug-2009] $)

  ${
    $d x y A $.  $d x y B $.
    $( The image of the domain of a class is the range of the class.
       (Contributed by ?who?, 14-Aug-1994.) $)
    imadmrn $p |- ( A " dom A ) = ran A $=
      ( vx vy cv wbr cdm wrex cab wex cima wcel wa df-rex breldm pm4.71ri exbii
      crn bitr4i abbii df-ima dfrn2 3eqtr4i ) BDZCDZAEZBAFZGZCHUEBIZCHAUFJAQUGU
      HCUGUCUFKZUELZBIUHUEBUFMUEUJBUEUIUCUDANOPRSCBAUFTBCAUAUB $.
      $( [14-Aug-1994] $)

    $( The image of a class is a subset of its range.  Theorem 3.16(xi) of
       [Monk1] p. 39.  (Contributed by ?who?, 31-Mar-1995.) $)
    imassrn $p |- ( A " B ) C_ ran A $=
      ( vx vy cv wcel cop wa wex cab cima crn simpr eximi ss2abi dfima4 3sstr4i
      dfrn3 ) CEZBFZSDEGAFZHZCIZDJUACIZDJABKALUCUDDUBUACTUAMNOCDABPCDARQ $.
      $( [31-Mar-1995] $)
  $}

  ${
    $d x y A $.
    $( Image under the identity relation.  Theorem 3.16(viii) of [Monk1]
       p. 38.  (Contributed by ?who?, 30-Apr-1998.) $)
    imai $p |- ( _I " A ) = A $=
      ( vx vy cid cima cv wcel cop wa wex cab dfima4 wceq wbr df-br ideq bitr3i
      vex anbi2i bitri ancom exbii eleq1 ceqsexv abbii abid2 3eqtri ) DAEBFZAGZ
      UHCFZHDGZIZBJZCKUJAGZCKABCDALUMUNCUMUHUJMZUIIZBJUNULUPBULUIUOIUPUKUOUIUKU
      HUJDNUOUHUJDOUHUJCRZPQSUIUOUATUBUIUNBUJUQUHUJAUCUDTUECAUFUG $.
      $( [30-Apr-1998] $)
  $}

  $( The range of the restricted identity function.  (Contributed by ?who?,
     27-Aug-2004.) $)
  rnresi $p |- ran ( _I |` A ) = A $=
    ( cid cima cres crn dfima3 imai eqtr3i ) BACBADEABAFAGH $.
    $( [27-Aug-2004] $)

  $( The image of a restriction of the identity function.  (Contributed by FL,
     31-Dec-2006.) $)
  resiima $p |- ( B C_ A -> ( ( _I |` A ) " B ) = B ) $=
    ( wss cid cres cima crn dfima3 resabs1 rneqd rnresi syl6eq syl5eq ) BACZDAE
    ZBFOBEZGZBOBHNQDBEZGBNPRDBAIJBKLM $.
    $( [28-Dec-2006] $)

  $( Image of the empty set.  Theorem 3.16(ii) of [Monk1] p. 38.  (Contributed
     by ?who?, 20-May-1998.) $)
  ima0 $p |- ( A " (/) ) = (/) $=
    ( c0 cima cres crn dfima3 res0 rneqi rn0 3eqtri ) ABCABDZEBEBABFKBAGHIJ $.
    $( [20-May-1998] $)

  $( Image under the empty relation.  (Contributed by FL, 11-Jan-2007.) $)
  0ima $p |- ( (/) " A ) = (/) $=
    ( c0 cima crn imassrn rn0 sseqtri 0ss eqssi ) BACZBJBDBBAEFGJHI $.
    $( [4-Jan-2007] $)

  $( A class whose image under another is empty is disjoint with the other's
     domain.  (Contributed by FL, 24-Jan-2007.) $)
  imadisj $p |- ( ( A " B ) = (/) <-> ( dom A i^i B ) = (/) ) $=
    ( cima wceq cres crn cdm cin dfima3 eqeq1i dm0rn0 dmres incom eqtri 3bitr2i
    c0 ) ABCZPDABEZFZPDRGZPDAGZBHZPDQSPABIJRKTUBPTBUAHUBABLBUAMNJO $.
    $( [15-Jan-2007] $)

  $( A preimage under any class is included in the domain of the class.
     (Contributed by FL, 29-Jan-2007.) $)
  cnvimass $p |- ( `' A " B ) C_ dom A $=
    ( ccnv cima crn cdm imassrn df-dm sseqtr4i ) ACZBDJEAFJBGAHI $.
    $( [29-Jan-2007] $)

  $( The preimage of the range of a class is the domain of the class.
     (Contributed by Jeff Hankins, 15-Jul-2009.) $)
  cnvimarndm $p |- ( `' A " ran A ) = dom A $=
    ( ccnv cdm cima crn imadmrn dfrn4 imaeq2i df-dm 3eqtr4i ) ABZKCZDKEKAEZDACK
    FMLKAGHAIJ $.
    $( [12-Jul-2009] $)

  ${
    $d A x y $.  $d R x y $.
    $( The image of a singleton.  (Contributed by ?who?, 9-Jan-2015.) $)
    imasn $p |- ( R " { A } ) = { y | A R y } $=
      ( vx cvv wcel csn cima cv wbr wceq wrex df-ima breq1 rexsng abbidv syl5eq
      cab wn c0 ima0 snprc biimpi imaeq2d wex brex exlimiv con3i wne abn0 df-ne
      simpld bitr3i con2bii sylibr 3eqtr4a pm2.61i ) BEFZCBGZHZBAIZCJZARZKURUTD
      IZVACJZDUSLZARVCADCUSMURVFVBAVEVBDBEVDBVACNOPQURSZCTHTUTVCCUAVGUSTCVGUSTK
      BUBUCUDVGVBAUEZSVCTKZVHURVBURAVBURVAEFBVACUFULUGUHVHVIVHVCTUIVISVBAUJVCTU
      KUMUNUOUPUQ $.
      $( [9-Jan-2015] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in an image of a singleton.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?, 15-Mar-2004.)
       (Revised by ?who?, 27-Aug-2011.) $)
    elimasn $p |- ( C e. ( A " { B } ) <-> <. B , C >. e. A ) $=
      ( vx csn cima wcel cvv cop elex wbr df-br brex simprd sylbir cv cab breq2
      elabg imasn eleq2i bicomi 3bitr4g pm5.21nii ) CABEFZGZCHGZBCIAGZCUEJUHBCA
      KZUGBCALZUIBHGUGBCAMNOUGCBDPZAKZDQZGUIUFUHULUIDCHUKCBARSUEUMCDBATUAUIUHUJ
      UBUCUD $.
      $( [27-Aug-2011] $) $( [15-Mar-2004] $)
  $}

  ${
    $d y F $.  $d x y $.
    $( Two ways to express the class of unique-valued arguments of ` F ` ,
       which is the same as the domain of ` F ` whenever ` F ` is a function.
       The left-hand side of the equality is from Definition 10.2 of [Quine]
       p. 65.  Quine uses the notation "arg ` F ` " for this class (for which
       we have no separate notation).  Observe the resemblance to our ~ dffv4 ,
       which was based on the idea in Quine's definition.  (Contributed by
       ?who?, 8-May-2005.) $)
    args $p |- { x | E. y ( F " { x } ) = { y } } = { x | E! y x F y } $=
      ( cv csn cima wceq wex wbr weu cab imasn eqeq1i exbii euabsn bitr4i abbii
      ) CADZEFZBDZEZGZBHZRTCIZBJZAUCUDBKZUAGZBHUEUBUGBSUFUABRCLMNUDBOPQ $.
      $( [8-May-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in an initial segment.  The idiom ` ( ``' A " { B } ) ` ,
       meaning ` { x | x A B } ` , is used to specify an initial segment in
       (for example) Definition 6.21 of [TakeutiZaring] p. 30.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
       28-Apr-2004.)  (Revised by ?who?, 27-Aug-2011.) $)
    eliniseg $p |- ( C e. ( `' A " { B } ) <-> C A B ) $=
      ( ccnv csn cima wcel cop wbr elimasn df-br brcnv 3bitr2i ) CADZBEFGBCHNGB
      CNICBAINBCJBCNKBCALM $.
      $( [27-Aug-2011] $) $( [28-Apr-2004] $)
  $}

  ${
    $d A x y $.
    epini.1 $e |- A e. _V $.
    $( Any set is equal to its preimage under the converse epsilon relation.
       (Contributed by Mario Carneiro, 9-Mar-2013.) $)
    epini $p |- ( `' _E " { A } ) = A $=
      ( vx cep ccnv csn cima wbr cab imasn brcnv epelc bitri abbii abid2 3eqtri
      cv wcel ) DEZAFGACQZSHZCITARZCIACASJUAUBCUATADHUBATDKTABLMNCAOP $.
      $( [9-Mar-2013] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An idiom that signifies an initial segment of an ordering, used, for
       example, in Definition 6.21 of [TakeutiZaring] p. 30.  (Contributed by
       ?who?, 28-Apr-2004.) $)
    iniseg $p |- ( `' A " { B } ) = { x | x A B } $=
      ( ccnv csn cima cv wbr cab imasn brcnv abbii eqtri ) BDZCEFCAGZNHZAIOCBHZ
      AIACNJPQACOBKLM $.
      $( [28-Apr-2004] $)
  $}

  $( Subset theorem for image.  (Contributed by ?who?, 16-Mar-2004.) $)
  imass1 $p |- ( A C_ B -> ( A " C ) C_ ( B " C ) ) $=
    ( wss cres crn cima ssres rnss syl dfima3 3sstr4g ) ABDZACEZFZBCEZFZACGBCGM
    NPDOQDABCHNPIJACKBCKL $.
    $( [16-Mar-2004] $)

  $( Subset theorem for image.  Exercise 22(a) of [Enderton] p. 53.
     (Contributed by ?who?, 22-Mar-1998.) $)
  imass2 $p |- ( A C_ B -> ( C " A ) C_ ( C " B ) ) $=
    ( wss cres crn cima ssres2 rnss syl dfima3 3sstr4g ) ABDZCAEZFZCBEZFZCAGCBG
    MNPDOQDABCHNPIJCAKCBKL $.
    $( [22-Mar-1998] $)

  $( The image of a singleton outside the domain is empty.  (Contributed by
     ?who?, 22-May-1998.) $)
  ndmima $p |- ( -. A e. dom B -> ( B " { A } ) = (/) ) $=
    ( cdm wcel wn csn cima cres crn c0 dfima3 wceq cin dmres incom eqtri disjsn
    biimpri syl5eq dm0rn0 sylib ) ABCZDEZBAFZGBUDHZIZJBUDKUCUECZJLUFJLUCUGUBUDM
    ZJUGUDUBMUHBUDNUDUBOPUHJLUCUBAQRSUETUAS $.
    $( [22-May-1998] $)

  ${
    $d x y A $.
    $( A converse is a relation.  Theorem 12 of [Suppes] p. 62.  (Contributed
       by ?who?, 29-Oct-1996.) $)
    relcnv $p |- Rel `' A $=
      ( vy vx cv wbr ccnv df-cnv relopabi ) BDCDAECBAFCBAGH $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( A composition is a relation.  Exercise 24 of [TakeutiZaring] p. 25.
       (Contributed by ?who?, 26-Jan-1997.) $)
    relco $p |- Rel ( A o. B ) $=
      ( vx vz vy cv wbr wa wex ccom df-co relopabi ) CFDFZBGMEFAGHDICEABJCEDABK
      L $.
      $( [26-Jan-1997] $)
  $}

  ${
    $d x y z R $.
    $( Two ways of saying a relation is transitive.  Definition of transitivity
       in [Schechter] p. 51.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 27-Dec-1996.)  (Revised by ?who?,
       27-Aug-2011.) $)
    cotr $p |- ( ( R o. R ) C_ R <->
             A. x A. y A. z ( ( x R y /\ y R z ) -> x R z ) ) $=
      ( ccom wss cv cop wcel wi wal wbr wa wrel relco ssrel df-br bitri albii
      wb ax-mp alcom wex 19.23v brco bitr3i imbi12i bitr4i ) DDEZDFZAGZCGZHZUII
      ZUMDIZJZCKZAKZUKBGZDLUSULDLMZUKULDLZJZCKBKZAKUINUJURTDDOACUIDPUAVCUQAVCVB
      BKZCKUQVBBCUBVDUPCVDUTBUCZVAJUPUTVABUDVEUNVAUOVEUKULUILUNBUKULDDUEUKULUIQ
      UFUKULDQUGRSRSUH $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y R $.
    $( Two ways of saying a relation is symmetric.  Similar to definition of
       symmetry in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (Contributed by ?who?, 28-Dec-1996.)  (Revised by
       ?who?, 27-Aug-2011.) $)
    cnvsym $p |- ( `' R C_ R <-> A. x A. y ( x R y -> y R x ) ) $=
      ( cv cop ccnv wcel wi wal wss wbr alcom wb relcnv ssrel ax-mp brcnv df-br
      wrel bitr3i imbi12i 2albii 3bitr4i ) BDZADZEZCFZGZUFCGZHZAIBIZUJBIAIUGCJZ
      UEUDCKZUDUECKZHZBIAIUJBALUGSULUKMCNBAUGCOPUOUJABUMUHUNUIUMUDUEUGKUHUDUECQ
      UDUEUGRTUDUECRUAUBUC $.
      $( [27-Aug-2011] $) $( [28-Dec-1996] $)

    $( Two ways of saying a relation is antisymmetric.  Definition of
       antisymmetry in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (Contributed by ?who?, 9-Sep-2004.)  (Revised by
       ?who?, 27-Aug-2011.) $)
    intasym $p |- ( ( R i^i `' R ) C_ _I <->
                  A. x A. y ( ( x R y /\ y R x ) -> x = y ) ) $=
      ( ccnv cin cid wss cv cop wcel wi wal wbr wa weq wrel df-br bitri bitr3i
      wb relcnv relin2 ssrel mp2b brin brcnv anbi2i vex ideq imbi12i 2albii ) C
      CDZEZFGZAHZBHZIZUMJZUQFJZKZBLALZUOUPCMZUPUOCMZNZABOZKZBLALULPUMPUNVATCUAC
      ULUBABUMFUCUDUTVFABURVDUSVEURUOUPUMMZVDUOUPUMQVGVBUOUPULMZNVDUOUPCULUEVHV
      CVBUOUPCUFUGRSUSUOUPFMVEUOUPFQUOUPBUHUISUJUKR $.
      $( [27-Aug-2011] $) $( [9-Sep-2004] $)

    $( Two ways of saying a relation is irreflexive.  Definition of
       irreflexivity in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (Contributed by ?who?, 9-Sep-2004.)  (Revised by
       ?who?, 27-Aug-2011.) $)
    intirr $p |- ( ( R i^i _I ) = (/) <-> A. x -. x R x ) $=
      ( vy cid cin c0 wceq cv cop wcel ccompl wi wal weq wbr wn wss df-br albii
      vex incom eqeq1i disj4 wrel wb reli ssrel ax-mp 3bitri ideq bitr3i notbii
      elcompl bitr4i imbi12i 2albii equcom imbi1i breq2 notbid ceqsalv 3bitr2i
      opex bitri ) BDEZFGZAHZCHZIZDJZVIBKZJZLZCMAMZACNZVGVHBOZPZLZCMZAMVGVGBOZP
      ZAMVFDBEZFGDVKQZVNVEWBFBDUAUBDBUCDUDWCVNUEUFACDVKUGUHUIVRVMACVOVJVQVLVOVG
      VHDOVJVGVHCTZUJVGVHDRUKVQVIBJZPVLVPWEVGVHBRULVIBVGVHATZWDVCUMUNUOUPVSWAAV
      SCANZVQLZCMWAVRWHCVOWGVQACUQURSVQWACVGWFWGVPVTVHVGVGBUSUTVAVDSVB $.
      $( [27-Aug-2011] $) $( [9-Sep-2004] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( The converse of a class abstraction of ordered pairs.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
       11-Dec-2003.)  (Revised by ?who?, 27-Aug-2011.) $)
    cnvopab $p |- `' { <. x , y >. | ph } = { <. y , x >. | ph } $=
      ( vz vw copab ccnv relcnv relopab cv cop wcel wsb opelopabsb sbcom2 bitri
      opelcnv 3bitr4i eqrelriiv ) DEABCFZGZACBFZTHACBIEJZDJZKTLZACDMBEMZUDUCKZU
      ALUGUBLUEABEMCDMUFABCEDNABECDOPUDUCTQACBDENRS $.
      $( [27-Aug-2011] $) $( [11-Dec-2003] $)
  $}

  ${
    $d x y $.
    $( The converse of the empty set.  (Contributed by ?who?, 6-Apr-1998.) $)
    cnv0 $p |- `' (/) = (/) $=
      ( vx vy c0 ccnv relcnv rel0 cop wcel noel opelcnv mtbir 2false eqrelriiv
      cv ) ABCDZCCEFANZBNZGZOHZRCHSQPGZCHTIPQCJKRILM $.
      $( [6-Apr-1998] $)

    $( The converse of the identity relation.  Theorem 3.7(ii) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Contributed by ?who?, 26-Apr-1998.)  (Revised by ?who?,
       27-Aug-2011.) $)
    cnvi $p |- `' _I = _I $=
      ( vy vx cv cid wbr copab wceq ccnv ideq equcom bitri opabbii df-cnv df-id
      vex 3eqtr4i ) ACZBCZDEZBAFRQGZBAFDHDSTBASQRGTQRBOIABJKLBADMBANP $.
      $( [27-Aug-2011] $) $( [26-Apr-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a union is the union of converses.  Theorem 16 of
       [Suppes] p. 62.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.)  (Contributed by ?who?, 25-Mar-1998.)  (Revised by ?who?,
       27-Aug-2011.) $)
    cnvun $p |- `' ( A u. B ) = ( `' A u. `' B ) $=
      ( vy vx cv wbr copab cun ccnv unopab brun opabbii eqtr4i uneq12i 3eqtr4ri
      wo df-cnv ) CEZDEZAFZDCGZRSBFZDCGZHZRSABHZFZDCGZAIZBIZHUEIUDTUBPZDCGUGTUB
      DCJUFUJDCRSABKLMUHUAUIUCDCAQDCBQNDCUEQO $.
      $( [27-Aug-2011] $) $( [25-Mar-1998] $)

    $( Distributive law for converse over set difference.  (Contributed by
       ?who?, 26-Jun-2014.) $)
    cnvdif $p |- `' ( A \ B ) = ( `' A \ `' B ) $=
      ( vx vy cdif ccnv relcnv wss wrel difss relss mp2 cv cop wcel wn wa eldif
      opelcnv notbii anbi12i bitr4i 3bitr4i eqrelriiv ) CDABEZFZAFZBFZEZUEGUIUG
      HUGIUIIUGUHJAGUIUGKLDMZCMZNZUEOZUKUJNZUGOZUNUHOZPZQZUNUFOUNUIOUMULAOZULBO
      ZPZQURULABRUOUSUQVAUKUJASUPUTUKUJBSTUAUBUKUJUESUNUGUHRUCUD $.
      $( [26-Jun-2014] $)

    $( Distributive law for converse over intersection.  Theorem 15 of [Suppes]
       p. 62.  (Contributed by ?who?, 25-Mar-1998.)  (Revised by ?who?,
       26-Jun-2014.) $)
    cnvin $p |- `' ( A i^i B ) = ( `' A i^i `' B ) $=
      ( cdif ccnv cin cnvdif difeq2i eqtri dfin4 cnveqi 3eqtr4i ) AABCZCZDZADZO
      BDZCZCZABEZDOPENOLDZCRALFTQOABFGHSMABIJOPIK $.
      $( [26-Jun-2014] $) $( [25-Mar-1998] $)
  $}

  $( Distributive law for range over union.  Theorem 8 of [Suppes] p. 60.
     (Contributed by ?who?, 24-Mar-1998.) $)
  rnun $p |- ran ( A u. B ) = ( ran A u. ran B ) $=
    ( cun ccnv cdm crn cnvun dmeqi dmun eqtri dfrn4 uneq12i 3eqtr4i ) ABCZDZEZA
    DZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [24-Mar-1998] $)

  $( The range of an intersection belongs the intersection of ranges.  Theorem
     9 of [Suppes] p. 60.  (Contributed by ?who?, 15-Sep-2004.) $)
  rnin $p |- ran ( A i^i B ) C_ ( ran A i^i ran B ) $=
    ( cin ccnv cdm crn cnvin dmeqi dmin eqsstri dfrn4 ineq12i 3sstr4i ) ABCZDZE
    ZADZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [15-Sep-2004] $)

  ${
    $d x y z A $.
    $( The range of a union.  Part of Exercise 8 of [Enderton] p. 41.
       (Contributed by ?who?, 17-Mar-2004.) $)
    rnuni $p |- ran U. A = U_ x e. A ran x $=
      ( vz vy cuni crn cv ciun cop wcel wex wrex eluni exbii excom elrn2 anbi1i
      wa ancom 19.41v 3bitr4ri 3bitri df-rex bitr4i eliun 3bitr4i eqriv ) CBEZF
      ZABAGZFZHZDGCGZIZUHJZDKZUMUKJZABLZUMUIJUMULJUPUJBJZUQRZAKZURUPUNUJJZUSRZA
      KZDKVCDKZAKVAUOVDDAUNBMNVCDAOVEUTAUQUSRVBDKZUSRUTVEUQVFUSDUMUJPQUSUQSVBUS
      DTUANUBUQABUCUDDUMUHPAUMBUKUEUFUG $.
      $( [17-Mar-2004] $)
  $}

  $( Distributive law for image over union.  Theorem 35 of [Suppes] p. 65.
     (Contributed by ?who?, 30-Sep-2002.) $)
  imaundi $p |- ( A " ( B u. C ) ) = ( ( A " B ) u. ( A " C ) ) $=
    ( cun cres crn cima resundi rneqi rnun eqtri dfima3 uneq12i 3eqtr4i ) ABCDZ
    EZFZABEZFZACEZFZDZAOGABGZACGZDQRTDZFUBPUEABCHIRTJKAOLUCSUDUAABLACLMN $.
    $( [30-Sep-2002] $)

  $( The image of a union.  (Contributed by Jeff Hoffman, 17-Feb-2008.) $)
  imaundir $p |- ( ( A u. B ) " C ) = ( ( A " C ) u. ( B " C ) ) $=
    ( cun cima cres crn dfima3 resundir rneqi rnun 3eqtri uneq12i eqtr4i ) ABDZ
    CEZACFZGZBCFZGZDZACEZBCEZDPOCFZGQSDZGUAOCHUDUEABCIJQSKLUBRUCTACHBCHMN $.
    $( [17-Feb-2008] $)

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( An upper bound for intersection with a domain.  Theorem 40 of [Suppes]
       p. 66, who calls it "somewhat surprising."  (Contributed by ?who?,
       11-Aug-2004.) $)
    dminss $p |- ( dom R i^i A ) C_ ( `' R " ( R " A ) ) $=
      ( vx vy cdm cin ccnv cima cv wbr wcel wa wex wrex rspe elima sylibr brcnv
      ancoms biimpri adantr jca eximi eldm anbi1i 19.41v 3bitr4i elima2 3imtr4i
      elin ssriv ) CBEZAFZBGZBAHZHZCIZDIZBJZUQAKZLZDMZURUOKZURUQUNJZLZDMUQUMKZU
      QUPKVAVEDVAVCVDUTUSVCUTUSLUSCANVCUSCAOCURBAPQSUSVDUTVDUSURUQBRTUAUBUCUQUL
      KZUTLUSDMZUTLVFVBVGVHUTDUQBUDUEUQULAUJUSUTDUFUGDUQUNUOUHUIUK $.
      $( [11-Aug-2004] $)

    $( An upper bound for intersection with an image.  Theorem 41 of [Suppes]
       p. 66.  (Contributed by ?who?, 11-Aug-2004.) $)
    imainss $p |- ( ( R " A ) i^i B ) C_ ( R " ( A i^i ( `' R " B ) ) ) $=
      ( vy vx cima cin ccnv cv wcel wbr wa wex simpll brcnv 19.8a sylan2br elin
      elima2 anbi1i ancoms adantll jca simplr anbi2i bitri eximi 19.41v 3bitr4i
      sylanbrc 3imtr4i ssriv ) DCAFZBGZCACHZBFZGZFZEIZAJZUSDIZCKZLZVABJZLZEMZUS
      UQJZVBLZEMVAUNJZVAURJVEVHEVEUTVDVAUSUOKZLZDMZLZVBVHVEUTVLUTVBVDNVBVDVLUTV
      DVBVLVBVDVJVLVAUSCOVKDPQUAUBUCUTVBVDUDVGVMVBVGUTUSUPJZLVMUSAUPRVNVLUTDUSU
      OBSUEUFTUJUGVAUMJZVDLVCEMZVDLVIVFVOVPVDEVACASTVAUMBRVCVDEUHUIEVACUQSUKUL
      $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a cross product.  Exercise 11 of [Suppes] p. 67.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by
       ?who?, 14-Aug-1999.)  (Revised by ?who?, 27-Aug-2011.) $)
    cnvxp $p |- `' ( A X. B ) = ( B X. A ) $=
      ( vy vx cv wcel copab ccnv cxp cnvopab ancom opabbii eqtri cnveqi 3eqtr4i
      wa df-xp ) CEAFZDEBFZPZCDGZHZSRPZDCGZABIZHBAIUBTDCGUDTCDJTUCDCRSKLMUEUACD
      ABQNDCBAQO $.
      $( [27-Aug-2011] $) $( [14-Aug-1999] $)
  $}

  $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
     of [Monk1] p. 37.  (Contributed by ?who?, 12-Apr-2004.) $)
  xp0 $p |- ( A X. (/) ) = (/) $=
    ( c0 cxp ccnv xp0r cnveqi cnvxp cnv0 3eqtr3i ) BACZDBDABCBJBAEFBAGHI $.
    $( [12-Apr-2004] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( The cross product of nonempty classes is nonempty.  (Variation of a
       theorem contributed by Raph Levien, 30-Jun-2006.)  (Contributed by
       ?who?, 30-Jun-2006.)  (Revised by ?who?, 19-Apr-2007.) $)
    xpnz $p |- ( ( A =/= (/) /\ B =/= (/) ) <-> ( A X. B ) =/= (/) ) $=
      ( vx vy c0 wne wa cxp cv wcel wex n0 anbi12i eeanv bitr4i cop opelxp wceq
      syl6eq necon3i ne0i sylbir exlimivv sylbi xpeq1 xp0r xpeq2 xp0 jca impbii
      ) AEFZBEFZGZABHZEFZUMCIZAJZDIZBJZGZDKCKZUOUMUQCKZUSDKZGVAUKVBULVCCALDBLMU
      QUSCDNOUTUOCDUTUPURPZUNJUOUPURABQUNVDUAUBUCUDUOUKULAEUNEAERUNEBHEAEBUEBUF
      STBEUNEBERUNAEHEBEAUGAUHSTUIUJ $.
      $( [19-Apr-2007] $) $( [30-Jun-2006] $)
  $}

  $( At least one member of an empty cross product is empty.  (Contributed by
     ?who?, 27-Aug-2006.) $)
  xpeq0 $p |- ( ( A X. B ) = (/) <-> ( A = (/) \/ B = (/) ) ) $=
    ( cxp c0 wceq wne wa wn wo xpnz necon2bbii ianor nne orbi12i 3bitri ) ABCZD
    EADFZBDFZGZHQHZRHZIADEZBDEZISPDABJKQRLTUBUAUCADMBDMNO $.
    $( [27-Aug-2006] $)

  $( Cross products with disjoint sets are disjoint.  (Contributed by ?who?,
     13-Sep-2004.) $)
  xpdisj1 $p |- ( ( A i^i B ) = (/) -> ( ( A X. C ) i^i ( B X. D ) ) = (/) ) $=
    ( cin c0 wceq cxp inxp xpeq1 xp0r syl6eq syl5eq ) ABEZFGZACHBDHENCDEZHZFACB
    DIOQFPHFNFPJPKLM $.
    $( [13-Sep-2004] $)

  $( Cross products with disjoint sets are disjoint.  (Contributed by ?who?,
     13-Sep-2004.) $)
  xpdisj2 $p |- ( ( A i^i B ) = (/) -> ( ( C X. A ) i^i ( D X. B ) ) = (/) ) $=
    ( cin c0 wceq cxp inxp xpeq2 xp0 syl6eq syl5eq ) ABEZFGZCAHDBHECDEZNHZFCADB
    IOQPFHFNFPJPKLM $.
    $( [13-Sep-2004] $)

  $( Cross products with two different singletons are disjoint.  (Contributed
     by ?who?, 28-Jul-2004.)  (Revised by ?who?, 3-Jun-2007.) $)
  xpsndisj $p |- ( B =/= D -> ( ( A X. { B } ) i^i ( C X. { D } ) ) = (/) ) $=
    ( wne csn cin c0 wceq cxp disjsn2 xpdisj2 syl ) BDEBFZDFZGHIANJCOJGHIBDKNOA
    CLM $.
    $( [3-Jun-2007] $) $( [28-Jul-2004] $)

  $( A double restriction to disjoint classes is the empty set.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
     7-Oct-2004.)  (Revised by ?who?, 27-Aug-2011.) $)
  resdisj $p |- ( ( A i^i B ) = (/) -> ( ( C |` A ) |` B ) = (/) ) $=
    ( cin c0 wceq cres resres reseq2 res0 syl6eq syl5eq ) ABDZEFZCAGBGCMGZECABH
    NOCEGEMECICJKL $.
    $( [27-Aug-2011] $) $( [7-Oct-2004] $)

  $( The range of a cross product.  Part of Theorem 3.13(x) of [Monk1] p. 37.
     (Contributed by ?who?, 12-Apr-2004.)  (Revised by ?who?, 9-Apr-2007.) $)
  rnxp $p |- ( A =/= (/) -> ran ( A X. B ) = B ) $=
    ( c0 wne cxp crn cdm ccnv dfrn4 cnvxp dmeqi eqtri dmxp syl5eq ) ACDABEZFZBA
    EZGZBPOHZGROISQABJKLBAMN $.
    $( [9-Apr-2007] $) $( [12-Apr-2004] $)

  $( The domain of a cross product is a subclass of the first factor.
     (Contributed by ?who?, 19-Mar-2007.) $)
  dmxpss $p |- dom ( A X. B ) C_ A $=
    ( cxp cdm wss c0 wceq 0ss xpeq2 xp0 syl6eq dmeqd dm0 sseq1d mpbiri wne dmxp
    eqimss syl pm2.61ine ) ABCZDZAEZBFBFGZUCFAEAHUDUBFAUDUBFDFUDUAFUDUAAFCFBFAI
    AJKLMKNOBFPUBAGUCABQUBARST $.
    $( [19-Mar-2007] $)

  $( The range of a cross product is a subclass of the second factor.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by
     ?who?, 16-Jan-2006.)  (Revised by ?who?, 27-Aug-2011.) $)
  rnxpss $p |- ran ( A X. B ) C_ B $=
    ( cxp crn cdm ccnv dfrn4 cnvxp dmeqi eqtri dmxpss eqsstri ) ABCZDZBACZEZBNM
    FZEPMGQOABHIJBAKL $.
    $( [27-Aug-2011] $) $( [16-Jan-2006] $)

  $( The range of a square cross product.  (Contributed by FL, 17-May-2010.) $)
  rnxpid $p |- ran ( A X. A ) = A $=
    ( cxp crn wceq c0 rn0 xpeq2 xp0 syl6eq rneqd id 3eqtr4a rnxp pm2.61ine ) AA
    BZCZADAEAEDZECEPAFQOEQOAEBEAEAGAHIJQKLAAMN $.
    $( [17-May-2010] $)

  $( A cross-product subclass relationship is equivalent to the relationship
     for it components.  (Contributed by ?who?, 17-Dec-2008.) $)
  ssxpb $p |- ( ( A X. B ) =/= (/) -> ( ( A X. B ) C_ ( C X. D ) <->
              ( A C_ C /\ B C_ D ) ) ) $=
    ( cxp c0 wne wss wa cdm wceq xpnz dmxp adantl sylbir adantr eqsstr3d syl6ss
    dmss crn dmxpss rnxp rnss rnxpss jca ex xpss12 impbid1 ) ABEZFGZUICDEZHZACH
    ZBDHZIZUJULUOUJULIZUMUNUPAUKJZCUPAUIJZUQUJURAKZULUJAFGZBFGZIZUSABLZVAUSUTAB
    MNOPULURUQHUJUIUKSNQCDUARUPBUKTZDUPBUITZVDUJVEBKZULUJVBVFVCUTVFVAABUBPOPULV
    EVDHUJUIUKUCNQCDUDRUEUFACBDUGUH $.
    $( [17-Dec-2008] $)

  $( The cross product of non-empty classes is one-to-one.  (Contributed by
     ?who?, 31-May-2008.) $)
  xp11 $p |- ( ( A =/= (/) /\ B =/= (/) )
      -> ( ( A X. B ) = ( C X. D ) <-> ( A = C /\ B = D ) ) ) $=
    ( c0 wne wa cxp wceq wi xpnz anidm neeq1 anbi2d syl5bbr wss ssxpb syl5ibcom
    eqimss eqss eqimss2 anim12d anbi12i bitr4i syl6ib sylbid com12 sylbi xpeq12
    an4 impbid1 ) AEFBEFGZABHZCDHZIZACIZBDIZGZULUMEFZUOURJABKUOUSURUOUSUSUNEFZG
    ZURUSUSUSGUOVAUSLUOUSUTUSUMUNEMNOUOVAACPZBDPZGZCAPZDBPZGZGZURUOUSVDUTVGUOUM
    UNPUSVDUMUNSABCDQRUOUNUMPUTVGUNUMUACDABQRUBVHVBVEGZVCVFGZGURVBVCVEVFUJUPVIU
    QVJACTBDTUCUDUEUFUGUHACBDUIUK $.
    $( [31-May-2008] $)

  $( Cancellation law for cross-product.  (Contributed by ?who?,
     30-Aug-2011.) $)
  xpcan $p |- ( C =/= (/) -> ( ( C X. A ) = ( C X. B ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 biantrur syl6bbr wn wi nne xpeq2 syl6eq eqeq1d
    eqid xp0 eqcom syl6bb adantl df-ne wo xpeq0 orel1 syl5bi sylbi adantr simpr
    sylbid jctild eqtr3 syl6 sylan2b impbid1 pm2.61dan ) CDEZADEZCAFZCBFZGZABGZ
    HUSUTIVCCCGZVDIVDCACBJVEVDCSKLUSUTMZIVCVDVFUSADGZVCVDNADOUSVGIZVCVGBDGZIVDV
    HVCVIVGVHVCVBDGZVIVGVCVJHUSVGVCDVBGVJVGVADVBVGVACDFDADCPCTQRDVBUAUBUCUSVJVI
    NZVGUSCDGZMZVKCDUDVJVLVIUEVMVICBUFVLVIUGUHUIUJULUSVGUKUMABDUNUOUPABCPUQUR
    $.
    $( [30-Aug-2011] $)

  $( Cancellation law for cross-product.  (Contributed by ?who?,
     30-Aug-2011.) $)
  xpcan2 $p |- ( C =/= (/) -> ( ( A X. C ) = ( B X. C ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantru syl6bbr wn nne xp0r syl6eq eqeq1d
    xpeq1 eqcom syl6bb adantr wi df-ne wo xpeq0 orel2 syl5bi sylbi adantl simpl
    sylbid jctild eqtr3 syl6 impbid1 sylanb pm2.61ian ) ADEZCDEZACFZBCFZGZABGZH
    ZUSUTIVCVDCCGZIVDACBCJVFVDCKLMUSNADGZUTVEADOVGUTIZVCVDVHVCVGBDGZIVDVHVCVIVG
    VHVCVBDGZVIVGVCVJHUTVGVCDVBGVJVGVADVBVGVADCFDADCSCPQRDVBTUAUBUTVJVIUCZVGUTC
    DGZNZVKCDUDVJVIVLUEVMVIBCUFVLVIUGUHUIUJULVGUTUKUMABDUNUOABCSUPUQUR $.
    $( [30-Aug-2011] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subset of the range of a restriction.  (Contributed by ?who?,
       16-Jan-2006.) $)
    ssrnres $p |- ( B C_ ran ( C |` A ) <-> ran ( C i^i ( A X. B ) ) = B ) $=
      ( vy vx cxp cin crn wceq wss wa cres rnss ax-mp cvv wcel wex elrn2 3bitri
      cv eqss inss2 rnxpss sstri biantrur ssv xpss2 sslin df-res sseqtr4i mpan2
      sstr cop ssel syl6ib ancrd elin opelxp anbi2i opelres anbi1i anass bitr2i
      exbii 19.41v syl6ibr ssrdv impbii 3bitr2ri ) CABFZGZHZBIVLBJZBVLJZKVNBCAL
      ZHZJZVLBUAVMVNVLVJHZBVKVJJVLVRJCVJUBVKVJMNABUCUDUEVNVQVNVLVPJZVQVKVOJVSVK
      CAOFZGZVOVJVTJZVKWAJBOJWBBUFBOAUGNVJVTCUHNCAUIUJVKVOMNBVLVPULUKVQDBVLVQDT
      ZBPZETZWCUMZVOPZEQZWDKZWCVLPZVQWDWHVQWDWCVPPWHBVPWCUNEWCVORUOUPWJWFVKPZEQ
      WGWDKZEQWIEWCVKRWKWLEWKWFCPZWFVJPZKWMWEAPZWDKZKZWLWFCVJUQWNWPWMWEWCABURUS
      WLWMWOKZWDKWQWGWRWDWEWCCAUTVAWMWOWDVBVCSVDWGWDEVESVFVGVHVI $.
      $( [16-Jan-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( Range of the intersection with a cross product.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
       17-Jan-2006.)  (Revised by ?who?, 27-Aug-2011.) $)
    rninxp $p |- ( ran ( C i^i ( A X. B ) ) = B <->
                 A. y e. B E. x e. A x C y ) $=
      ( cres crn wss wcel wral cxp cin wceq wbr wrex dfss3 ssrnres cima dfima3
      cv eleq2i elima bitr3i ralbii 3bitr3i ) DECFGZHBTZUFIZBDJECDKLGDMATUGENAC
      OZBDJBDUFPCDEQUHUIBDUHUGECRZIUIUJUFUGECSUAAUGECUBUCUDUE $.
      $( [27-Aug-2011] $) $( [17-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y C $.
    $( Domain of the intersection with a cross product.  (Contributed by ?who?,
       17-Jan-2006.) $)
    dminxp $p |- ( dom ( C i^i ( A X. B ) ) = A <->
                 A. x e. A E. y e. B x C y ) $=
      ( cxp cin cdm wceq ccnv crn wbr wrex wral df-dm cnvin cnvxp ineq2i eqtri
      cv rneqi eqeq1i rninxp brcnv rexbii ralbii 3bitri ) ECDFZGZHZCIEJZDCFZGZK
      ZCIBTZATZUKLZBDMZACNUPUOELZBDMZACNUJUNCUJUIJZKUNUIOVAUMVAUKUHJZGUMEUHPVBU
      LUKCDQRSUASUBBADCUKUCURUTACUQUSBDUOUPEUDUEUFUG $.
      $( [17-Jan-2006] $)
  $}

  ${
    $d x y R $.
    $( Alternate definition of relation.  Exercise 2 of [TakeutiZaring] p. 25.
       (Contributed by ?who?, 29-Dec-1996.)  (Revised by ?who?,
       15-Aug-2004.) $)
    dfrel2 $p |- ( Rel R <-> `' `' R = R ) $=
      ( vx vy wrel ccnv wceq relcnv cop wcel opelcnv bitri eqrelriv releq mpbii
      cv mpan impbii ) ADZAEZEZAFZTDZRUASGZBCTABOZCOZHZTIUEUDHSIUFAIUDUESJUEUDA
      JKLPUAUBRUCTAMNQ $.
      $( [15-Aug-2004] $) $( [29-Dec-1996] $)
  $}

  $( Equality theorem for converse.  (Contributed by FL, 19-Sep-2011.) $)
  cnveqb $p |- ( ( Rel A /\ Rel B ) -> ( A = B <-> `' A = `' B ) ) $=
    ( wrel wa wceq ccnv cnveq wi dfrel2 eqeq2 syl5ibr eqcoms sylbi eqeq1 imbi2d
    imp impbid2 ) ACZBCZDABEZAFZBFZEZABGRSUCTHZRUAFZAESUDHZAIUFAUESUDAUEEZUCUEB
    EZHZSUBFZBEUIBIUIBUJUCUHBUJEUEUJEUAUBGBUJUEJKLMUGTUHUCAUEBNOKLMPQ $.
    $( [19-Sep-2011] $)

  $( The double converse of a class strips out all elements that are not
     ordered pairs.  (Contributed by ?who?, 8-Dec-2003.) $)
  cnvcnv $p |- `' `' A = ( A i^i ( _V X. _V ) ) $=
    ( cvv cxp ccnv cnvin cnveqi wrel wceq inss2 df-rel mpbir dfrel2 mpbi relcnv
    cin wss relxp sseqtr4i dfss eqtr4i 3eqtr3ri ) ABBCZOZDZDZADZUBDZOZDZUCUFDZU
    DUHAUBEFUCGZUEUCHUKUCUBPAUBIUCJKUCLMUIUJUGDZOZUJUFUGEUJULPUJUMHUJUBULUJGUJU
    BPUFNUJJMUBGULUBHBBQUBLMRUJULSMTUA $.
    $( [8-Dec-2003] $)

  $( The double converse of a class equals its restriction to the universe.
     (Contributed by ?who?, 8-Oct-2007.) $)
  cnvcnv2 $p |- `' `' A = ( A |` _V ) $=
    ( ccnv cvv cxp cin cres cnvcnv df-res eqtr4i ) ABBACCDEACFAGACHI $.
    $( [8-Oct-2007] $)

  $( The double converse of a class is a subclass.  Exercise 2 of
     [TakeutiZaring] p. 25.  (Contributed by ?who?, 23-Jul-2004.) $)
  cnvcnvss $p |- `' `' A C_ A $=
    ( ccnv cvv cxp cin cnvcnv inss1 eqsstri ) ABBACCDZEAAFAIGH $.
    $( [23-Jul-2004] $)
  ${
    $d x y A $.
    $( The domain of a singleton is nonzero iff the singleton argument is an
       ordered pair.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Contributed by ?who?, 14-Dec-2008.)  (Revised by ?who?,
       27-Aug-2011.) $)
    dmsnn0 $p |- ( A e. ( _V X. _V ) <-> dom { A } =/= (/) ) $=
      ( vx vy cv cop wceq wex csn cdm wcel cvv cxp c0 wne eldm2 opex elsn bitri
      vex exbii eqcom bicomi elvv n0 3bitr4i ) ABDZCDZEZFZCGZBGZUFAHZIZJZBGZAKK
      LJUMMNUOUKUNUJBUNUHULJZCGUJCUFULOUPUICUPUHAFUIUHAUFUGBSCSPQUHAUARTRTUBBCA
      UCBUMUDUE $.
      $( [27-Aug-2011] $) $( [14-Dec-2008] $)
  $}

  $( The range of a singleton is nonzero iff the singleton argument is an
     ordered pair.  (Contributed by ?who?, 14-Dec-2008.) $)
  rnsnn0 $p |- ( A e. ( _V X. _V ) <-> ran { A } =/= (/) ) $=
    ( cvv cxp wcel csn cdm c0 wne crn dmsnn0 dm0rn0 necon3bii bitri ) ABBCDAEZF
    ZGHNIZGHAJOGPGNKLM $.
    $( [14-Dec-2008] $)

  ${
    $d x y A $.  $d x y B $.
    dmsnop.1 $e |- B e. _V $.
    $( The domain of a singleton of an ordered pair is the singleton of the
       first member.  (Contributed by ?who?, 30-Jan-2004.)  (Revised by ?who?,
       27-Aug-2011.) $)
    dmsnop $p |- dom { <. A , B >. } = { A } $=
      ( vx vy cop csn cdm cv wbr wex wceq wcel df-br vex opex elsn opth 3bitri
      wa exbii exancom biidd ceqsexv eldm 3bitr4i eqriv ) DABFZGZHZAGZDIZEIZUIJ
      ZEKZULALZULUJMULUKMUOUPUMBLZTZEKUQUPTEKUPUNUREUNULUMFZUIMUSUHLURULUMUINUS
      UHULUMDOZEOPQULUMABRSUAUPUQEUBUPUPEBCUQUPUCUDSEULUIUEULAUTQUFUG $.
      $( [27-Aug-2011] $) $( [30-Jan-2004] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( The domain of a singleton of an ordered pair is the singleton of the
       first member.  (Contributed by ?who?, 9-Jan-2015.) $)
    dmsnopg $p |- ( B e. V -> dom { <. A , B >. } = { A } ) $=
      ( vx cv cop csn cdm wceq opeq2 sneqd dmeqd eqeq1d vex dmsnop vtoclg ) ADE
      ZFZGZHZAGZIABFZGZHZUAIDBCQBIZTUDUAUESUCUERUBQBAJKLMAQDNOP $.
      $( [9-Jan-2015] $)
  $}

  ${
    dmprop.1 $e |- C e. _V $.
    dmprop.2 $e |- D e. _V $.
    $( The domain of an unordered pair of ordered pairs.  (Contributed by
       ?who?, 13-Sep-2011.) $)
    dmprop $p |- dom { <. A , C >. , <. B , D >. } = { A , B } $=
      ( cop csn cdm cun cpr dmsnop uneq12i df-pr dmeqi dmun eqtri 3eqtr4i ) ACG
      ZHZIZBDGZHZIZJZAHZBHZJSUBKZIZABKUAUFUDUGACELBDFLMUITUCJZIUEUHUJSUBNOTUCPQ
      ABNR $.
      $( [13-Sep-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.  $d D x y $.
    $( The domain of an unordered pair of ordered pairs.  (Contributed by
       ?who?, 9-Jan-2015.) $)
    dmpropg $p |- ( ( C e. V /\ D e. W ) ->
             dom { <. A , C >. , <. B , D >. } = { A , B } ) $=
      ( vx vy cv cop cpr cdm wceq opeq2 preq1d dmeqd eqeq1d preq2d vex dmprop
      vtocl2g ) AGIZJZBHIZJZKZLZABKZMACJZUEKZLZUHMUIBDJZKZLZUHMGHCDEFUBCMZUGUKU
      HUOUFUJUOUCUIUEUBCANOPQUDDMZUKUNUHUPUJUMUPUEULUIUDDBNRPQABUBUDGSHSTUA $.
      $( [9-Jan-2015] $)
  $}

  ${
    op1sta.1 $e |- A e. _V $.
    op1sta.2 $e |- B e. _V $.
    $( Extract the first member of an ordered pair.  (Contributed by Raph
       Levien, 4-Dec-2003.) $)
    op1sta $p |- U. dom { <. A , B >. } = A $=
      ( cop csn cdm cuni dmsnop unieqi unisn eqtri ) ABEFGZHAFZHAMNABDIJACKL $.
      $( [4-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    cnvsn.1 $e |- A e. _V $.
    cnvsn.2 $e |- B e. _V $.
    $( Converse of a singleton of an ordered pair.  (Contributed by ?who?,
       11-May-1998.) $)
    cnvsn $p |- `' { <. A , B >. } = { <. B , A >. } $=
      ( vy vx cop csn ccnv relcnv relsnop cv wceq wcel opth ancom vex opex elsn
      wa bitri opelcnv 3bitri 3bitr4ri eqrelriiv ) EFABGZHZIZBAGZHZUGJBADCKELZF
      LZGZUIMZULAMZUKBMZTZUMUJNUMUHNZUNUPUOTUQUKULBAOUPUOPUAUMUIUKULEQZFQZRSURU
      LUKGZUGNVAUFMUQUKULUGUBVAUFULUKUTUSRSULUKABOUCUDUE $.
      $( [11-May-1998] $)

    $( Swap the members of an ordered pair.  (Contributed by ?who?,
       14-Dec-2008.) $)
    opswap $p |- U. `' { <. A , B >. } = <. B , A >. $=
      ( cop csn ccnv cuni cnvsn unieqi opex unisn eqtri ) ABEFGZHBAEZFZHONPABCD
      IJOBADCKLM $.
      $( [14-Dec-2008] $)
  $}

  ${
    $d A x y $.  $d B x y $.
    rnsnop.1 $e |- A e. _V $.
    $( The range of a singleton of an ordered pair is the singleton of the
       second member.  (Contributed by ?who?, 24-Jul-2004.) $)
    rnsnop $p |- ran { <. A , B >. } = { B } $=
      ( vy vx cop csn crn cv wbr wex wceq wcel df-br vex opex elsn opth bitri
      wa exbii biidd ceqsexv elrn 3bitr4i eqriv ) DABFZGZHZBGZEIZDIZUHJZEKZULBL
      ZULUIMULUJMUNUKALZUOTZEKUOUMUQEUMUKULFZUHMZUQUKULUHNUSURUGLUQURUGUKULEODO
      ZPQUKULABRSSUAUOUOEACUPUOUBUCSEULUHUDULBUTQUEUF $.
      $( [24-Jul-2004] $)
  $}

  ${
    op2nda.1 $e |- A e. _V $.
    op2nda.2 $e |- B e. _V $.
    $( Extract the second member of an ordered pair.  (Contributed by ?who?,
       9-Jan-2015.) $)
    op2nda $p |- U. ran { <. A , B >. } = B $=
      ( cop csn crn cuni rnsnop unieqi unisn eqtri ) ABEFGZHBFZHBMNABCIJBDKL $.
      $( [9-Jan-2015] $)
  $}


  $( Alternate definition of relation.  (Contributed by ?who?, 14-May-2008.) $)
  dfrel3 $p |- ( Rel R <-> ( R |` _V ) = R ) $=
    ( wrel ccnv wceq cvv cres dfrel2 cnvcnv2 eqeq1i bitri ) ABACCZADAEFZADAGKLA
    AHIJ $.
    $( [14-May-2008] $)

  $( The domain of a universal restriction.  (Contributed by ?who?,
     14-May-2008.) $)
  dmresv $p |- dom ( A |` _V ) = dom A $=
    ( cvv cres cdm cin dmres incom inv1 3eqtri ) ABCDBADZEJBEJABFBJGJHI $.
    $( [14-May-2008] $)

  $( The range of a universal restriction.  (Contributed by ?who?,
     14-May-2008.) $)
  rnresv $p |- ran ( A |` _V ) = ran A $=
    ( ccnv crn cvv cres cnvcnv2 rneqi rncnvcnv eqtr3i ) ABBZCADEZCACJKAFGAHI $.
    $( [14-May-2008] $)


  $( The restriction of the double converse of a class.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
     8-Apr-2007.)  (Revised by ?who?, 27-Aug-2011.) $)
  rescnvcnv $p |- ( `' `' A |` B ) = ( A |` B ) $=
    ( ccnv cres cvv cin cnvcnv2 reseq1i resres wss wceq ssv sseqin2 mpbi 3eqtri
    reseq2i ) ACCZBDAEDZBDAEBFZDABDQRBAGHAEBISBABEJSBKBLBEMNPO $.
    $( [27-Aug-2011] $) $( [8-Apr-2007] $)

  $( The double converse of the restriction of a class.  (Contributed by ?who?,
     3-Jun-2007.) $)
  cnvcnvres $p |- `' `' ( A |` B ) = ( `' `' A |` B ) $=
    ( cres ccnv wrel wceq relres dfrel2 mpbi rescnvcnv eqtr4i ) ABCZDDZLADDBCLE
    MLFABGLHIABJK $.
    $( [3-Jun-2007] $)

  $( The image of the double converse of a class.  (Contributed by ?who?,
     8-Apr-2007.) $)
  imacnvcnv $p |- ( `' `' A " B ) = ( A " B ) $=
    ( ccnv cres crn cima rescnvcnv rneqi dfima3 3eqtr4i ) ACCZBDZEABDZEKBFABFLM
    ABGHKBIABIJ $.
    $( [8-Apr-2007] $)

  ${
    $d s t A $.  $d s t B $.  $d s t F $.
    $( An image under the converse of a restriction.  (Contributed by Jeff
       Hankins, 12-Jul-2009.) $)
    cnvresima $p |- ( `' ( F |` A ) " B ) = ( ( `' F " B ) i^i A ) $=
      ( vt vs cres ccnv cima cin cv wcel cop wa wex elima3 anass opelres anbi1i
      opelcnv bitr2i 3bitr4ri anbi2i exbii 19.41v bitri elin 3bitri eqriv ) DCA
      FZGZBHZCGZBHZAIZDJZUKKEJZBKZUPUOLZUJKZMZENZUQURULKZMZENZUOAKZMZUOUNKZEUOU
      JBOVAVCVEMZENVFUTVHEVHUQVBVEMZMUTUQVBVEPVIUSUQUOUPLZUIKVJCKZVEMUSVIUOUPCA
      QUPUOUISVBVKVEUPUOCSRUAUBTUCVCVEEUDUEVGUOUMKZVEMVFUOUMAUFVLVDVEEUOULBORTU
      GUH $.
      $( [12-Jul-2009] $)
  $}

  $( A class restricted to its domain equals its double converse.  (Contributed
     by ?who?, 8-Apr-2007.) $)
  resdm2 $p |- ( A |` dom A ) = `' `' A $=
    ( ccnv cdm cres rescnvcnv wrel relcnv resdm ax-mp dmcnvcnv reseq2i 3eqtr3ri
    wceq ) ABZBZOCZDZAPDOAACZDAPEOFQOMNGOHIPRAAJKL $.
    $( [8-Apr-2007] $)

  $( Restriction to the domain of a restriction.  (Contributed by ?who?,
     8-Apr-2007.) $)
  resdmres $p |- ( A |` dom ( A |` B ) ) = ( A |` B ) $=
    ( cres cdm ccnv cvv cxp in12 df-res resdm2 eqtr3i ineq2i incom 3eqtri dmres
    cin xpeq1i xpindir eqtri 3eqtr4i rescnvcnv ) AABCZDZCZAEEZBCZUBABFGZADZFGZP
    ZPZUEUGPZUDUFUKUGAUIPZPUGUEPULAUGUIHUMUEUGAUHCUMUEAUHIAJKLUGUEMNUDAUCFGZPUK
    AUCIUNUJAUNBUHPZFGUJUCUOFABOQBUHFRSLSUEBITABUAS $.
    $( [8-Apr-2007] $)

  $( The image of the domain of a restriction.  (Contributed by ?who?,
     8-Apr-2007.) $)
  imadmres $p |- ( A " dom ( A |` B ) ) = ( A " B ) $=
    ( cres cdm crn cima resdmres rneqi dfima3 3eqtr4i ) AABCZDZCZEKEALFABFMKABG
    HALIABIJ $.
    $( [8-Apr-2007] $)

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z C $.
    $( Alternate definition of a class composition, using only one bound
       variable.  (Contributed by ?who?, 19-Dec-2008.) $)
    dfco2 $p |- ( A o. B )
                = U_ x e. _V ( ( `' B " { x } ) X. ( A " { x } ) ) $=
      ( vy vz ccom cvv ccnv cv csn cima cxp ciun wrel wcel cop wbr wa wex bitri
      relco reliun relxp mprgbir opelco wrex eliun rexv opelxp eliniseg elimasn
      a1i df-br bitr4i anbi12i exbii 3bitrri eqrelriiv ) DEBCFZAGCHAIZJZKZBVAKZ
      LZMZBCUAVENVDNZAGAGVDUBVFUTGOVBVCUCULUDDIZEIZPZUSOVGUTCQZUTVHBQZRZASZVIVE
      OZAVGVHBCUEVNVIVDOZAGUFVOASVMAVIGVDUGVOAUHVOVLAVOVGVBOZVHVCOZRVLVGVHVBVCU
      IVPVJVQVKCUTVGUJVQUTVHPBOVKBUTVHUKUTVHBUMUNUOTUPUQTUR $.
      $( [19-Dec-2008] $)

    $( Generalization of ~ dfco2 , where ` C ` can have any value between
       ` dom A i^i ran B ` and ` _V ` .  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (Contributed by ?who?, 21-Dec-2008.)  (Revised by
       ?who?, 27-Aug-2011.) $)
    dfco2a $p |- ( ( dom A i^i ran B ) C_ C -> ( A o. B )
         = U_ x e. C ( ( `' B " { x } ) X. ( A " { x } ) ) ) $=
      ( vy vz vw cdm cvv cv cima ciun wcel wex wa cop sylbi wrex eliun bitri
      crn cin wss ccom ccnv csn cxp wceq elimasn opeldm eliniseg brelrn anim12i
      dfco2 wbr ancoms adantl exlimivv elxp elin ssel syl5 pm4.71rd exbidv rexv
      3imtr4i df-rex 3bitr4g eqrdv syl5eq ) BHZCUAZUBZDUCZBCUDAICUEAJZUFZKZBVPK
      ZUGZLZADVSLZABCUNVNEVTWAVNEJZVSMZANZVODMZWCOZANZWBVTMZWBWAMZVNWCWFAVNWCWE
      WCVOVMMZVNWEWBFJZGJZPUHZWKVQMZWLVRMZOZOZGNFNVOVKMZVOVLMZOZWCWJWQWTFGWPWTW
      MWOWNWTWOWRWNWSWOVOWLPBMWRBVOWLUIVOWLBUJQWNWKVOCUOWSCVOWKUKWKVOCULQUMUPUQ
      URFGWBVQVRUSVOVKVLUTVFVMDVOVAVBVCVDWHWCAIRWDAWBIVSSWCAVETWIWCADRWGAWBDVSS
      WCADVGTVHVIVJ $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Class composition distributes over union.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?, 21-Dec-2008.)
       (Revised by ?who?, 27-Aug-2011.) $)
    coundi $p |- ( A o. ( B u. C ) ) = ( ( A o. B ) u. ( A o. C ) ) $=
      ( vx vz vy cv wbr wa wex copab cun ccom wo unopab brun anbi1i andir bitri
      df-co exbii 19.43 bitr2i opabbii eqtri uneq12i 3eqtr4ri ) DGZEGZBHZUIFGAH
      ZIZEJZDFKZUHUICHZUKIZEJZDFKZLZUHUIBCLZHZUKIZEJZDFKZABMZACMZLAUTMUSUMUQNZD
      FKVDUMUQDFOVGVCDFVCULUPNZEJVGVBVHEVBUJUONZUKIVHVAVIUKUHUIBCPQUJUOUKRSUAUL
      UPEUBUCUDUEVEUNVFURDFEABTDFEACTUFDFEAUTTUG $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Class composition distributes over union.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?, 21-Dec-2008.)
       (Revised by ?who?, 27-Aug-2011.) $)
    coundir $p |- ( ( A u. B ) o. C ) = ( ( A o. C ) u. ( B o. C ) ) $=
      ( vx vy vz cv wbr wa wex copab cun ccom wo unopab brun anbi2i bitri df-co
      andi exbii 19.43 bitr2i opabbii eqtri uneq12i 3eqtr4ri ) DGEGZCHZUHFGZAHZ
      IZEJZDFKZUIUHUJBHZIZEJZDFKZLZUIUHUJABLZHZIZEJZDFKZACMZBCMZLUTCMUSUMUQNZDF
      KVDUMUQDFOVGVCDFVCULUPNZEJVGVBVHEVBUIUKUONZIVHVAVIUIUHUJABPQUIUKUOTRUAULU
      PEUBUCUDUEVEUNVFURDFEACSDFEBCSUFDFEUTCSUG $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Restricted first member of a class composition.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.)  (Contributed by ?who?,
       12-Oct-2004.)  (Revised by ?who?, 27-Aug-2011.) $)
    cores $p |- ( ran B C_ C -> ( ( A |` C ) o. B ) = ( A o. B ) ) $=
      ( vz vy vx crn wss cv wbr cres wa wex copab ccom wcel brelrn ssel df-co
      wb iba brres syl6rbbr syl56 pm5.32d exbidv opabbidv 3eqtr4g ) BGZCHZDIZEI
      ZBJZULFIZACKZJZLZEMZDFNUMULUNAJZLZEMZDFNUOBOABOUJURVADFUJUQUTEUJUMUPUSUMU
      LUIPUJULCPZUPUSTUKULBQUICULRVBUSUSVBLUPVBUSUAULUNACUBUCUDUEUFUGDFEUOBSDFE
      ABSUH $.
      $( [27-Aug-2011] $) $( [12-Oct-2004] $)

    $( Associative law for the restriction of a composition.  (Contributed by
       ?who?, 12-Dec-2006.) $)
    resco $p |- ( ( A o. B ) |` C ) = ( A o. ( B |` C ) ) $=
      ( vx vy vz ccom cres relres relco cv wbr wcel wex brco anbi1i 19.41v an32
      wa brres bitr4i exbii 3bitr2i 3bitr4i eqbrriv ) DEABGZCHZABCHZGZUFCIAUHJD
      KZEKZUFLZUJCMZSZUJFKZUHLZUOUKALZSZFNZUJUKUGLUJUKUILUNUJUOBLZUQSZFNZUMSVAU
      MSZFNUSULVBUMFUJUKABOPVAUMFQVCURFVCUTUMSZUQSURUTUQUMRUPVDUQUJUOBCTPUAUBUC
      UJUKUFCTFUJUKAUHOUDUE $.
      $( [12-Dec-2006] $)

    $( Image of the composition of two classes.  (Contributed by Jason
       Orendorff, 12-Dec-2006.) $)
    imaco $p |- ( ( A o. B ) " C ) = ( A " ( B " C ) ) $=
      ( vx vy vz ccom cima cv wbr wrex wcel wex df-rex elima r19.41v exbii brco
      wa rexbii rexcom4 3bitri anbi1i 3bitr4i 3bitr4ri eqriv ) DABGZCHZABCHZHZE
      IZDIZAJZEUIKUKUILZUMSZEMZULUJLULUHLZUMEUINEULAUIOFIZUKBJZUMSZFCKZEMZUSFCK
      ZUMSZEMUQUPVAVDEUSUMFCPQUQURULUGJZFCKUTEMZFCKVBFULUGCOVEVFFCEURULABRTUTFE
      CUAUBUOVDEUNVCUMFUKBCOUCQUDUEUF $.
      $( [11-Dec-2006] $)

    $( The range of the composition of two classes.  (Contributed by ?who?,
       12-Dec-2006.) $)
    rnco $p |- ran ( A o. B ) = ran ( A |` ran B ) $=
      ( vy vx vz ccom crn cres cv wbr wex wcel wa brco exbii excom ancom 19.41v
      elrn 3bitr4i anbi2i brres bitr4i 3bitri eqriv ) CABFZGZABGZHZGZDIZCIZUFJZ
      DKZEIZULUIJZEKZULUGLULUJLUNUKUOBJZUOULAJZMZEKZDKUTDKZEKUQUMVADEUKULABNOUT
      DEPVBUPEVBUSUOUHLZMZUPURDKZUSMUSVEMVBVDVEUSQURUSDRVCVEUSDUOBSUATUOULAUHUB
      UCOUDDULUFSEULUISTUE $.
      $( [12-Dec-2006] $)
  $}

  $( The range of the composition of two classes.  (Contributed by ?who?,
     27-Mar-2008.) $)
  rnco2 $p |- ran ( A o. B ) = ( A " ran B ) $=
    ( ccom crn cres cima rnco dfima3 eqtr4i ) ABCDABDZEDAJFABGAJHI $.
    $( [27-Mar-2008] $)

  $( The domain of a composition.  Exercise 27 of [Enderton] p. 53.
     (Contributed by ?who?, 4-Feb-2004.) $)
  dmco $p |- dom ( A o. B ) = ( `' B " dom A ) $=
    ( ccom cdm ccnv crn cima df-dm cnvco rneqi rnco2 imaeq2i eqtr4i 3eqtri ) AB
    CZDOEZFBEZAEZCZFZQADZGZOHPSABIJTQRFZGUBQRKUAUCQAHLMN $.
    $( [4-Feb-2004] $)

  ${
    $d w x y z A $.  $d w y z B $.  $d w y z C $.
    $( Composition with an indexed union.  (Contributed by ?who?,
       21-Dec-2008.) $)
    coiun $p |- ( A o. U_ x e. C B ) = U_ x e. C ( A o. B ) $=
      ( vy vz vw ciun ccom relco wrel cv wcel wbr wa wex wrex cop eliun df-br
      reliun a1i mprgbir rexbii 3bitr4i anbi1i r19.41v bitr4i rexcom4 eqrelriiv
      exbii opelco bitri ) EFBADCHZIZADBCIZHZBUNJUQKUPKZADADUPUAURALDMBCJUBUCEL
      ZGLZUNNZUTFLZBNZOZGPZUSUTCNZVCOZGPZADQZUSVBRZUOMVJUQMZVEVGADQZGPVIVDVLGVD
      VFADQZVCOVLVAVMVCUSUTRZUNMVNCMZADQVAVMAVNDCSUSUTUNTVFVOADUSUTCTUDUEUFVFVC
      ADUGUHUKVGAGDUIUHGUSVBBUNULVKVJUPMZADQVIAVJDUPSVPVHADGUSVBBCULUDUMUEUJ $.
      $( [21-Dec-2008] $)
  $}

  $( A composition is not affected by a double converse of its first argument.
     (Contributed by ?who?, 8-Oct-2007.) $)
  cocnvcnv1 $p |- ( `' `' A o. B ) = ( A o. B ) $=
    ( ccnv ccom cvv cres cnvcnv2 coeq1i crn wss wceq ssv cores ax-mp eqtri ) AC
    CZBDAEFZBDZABDZPQBAGHBIZEJRSKTLABEMNO $.
    $( [8-Oct-2007] $)

  $( A composition is not affected by a double converse of its second
     argument.  (Contributed by ?who?, 8-Oct-2007.) $)
  cocnvcnv2 $p |- ( A o. `' `' B ) = ( A o. B ) $=
    ( ccnv ccom cres cnvcnv2 coeq2i resco wrel wceq relco dfrel3 mpbi 3eqtr2i
    cvv ) ABCCZDABOEZDABDZOEZRPQABFGABOHRISRJABKRLMN $.
    $( [8-Oct-2007] $)

  $( Absorption of a reverse (preimage) restriction of the second member of a
     class composition.  (Contributed by ?who?, 11-Dec-2006.) $)
  cores2 $p |- ( dom A C_ C -> ( A o. `' ( `' B |` C ) ) = ( A o. B ) ) $=
    ( cdm wss ccnv cres ccom wceq df-dm sseq1i cores sylbi cnvco cocnvcnv1 wrel
    crn relco dfrel2 mpbi eqtri 3eqtr4g cnveqd 3eqtr3g ) ADZCEZABFZCGZFZHZFZFZA
    BHZFZFZUJUMUFUKUNUFUHAFZHZUGUPHZUKUNUFUPQZCEUQURIUEUSCAJKUGUPCLMUKUIFUPHUQA
    UINUHUPOUAABNUBUCUJPULUJIAUIRUJSTUMPUOUMIABRUMSTUD $.
    $( [11-Dec-2006] $)

  ${
    $d x y z A $.
    $( Composition with the empty set.  Theorem 20 of [Suppes] p. 63.
       (Contributed by ?who?, 24-Apr-2004.) $)
    co02 $p |- ( A o. (/) ) = (/) $=
      ( vx vy vz c0 ccom relco rel0 cv cop wcel wbr wa noel df-br mtbir intnanr
      wex nex opelco 2false eqrelriiv ) BCAEFZEAEGHBIZCIZJZUCKZUFEKUGUDDIZELZUH
      UEALZMZDRUKDUIUJUIUDUHJZEKULNUDUHEOPQSDUDUEAETPUFNUAUB $.
      $( [24-Apr-2004] $)

    $( Composition with the empty set.  (Contributed by ?who?, 24-Apr-2004.) $)
    co01 $p |- ( (/) o. A ) = (/) $=
      ( ccnv ccom cnv0 coeq2i co02 eqtr2i cnvco 3eqtr4i cnveqi wrel wceq dfrel2
      c0 rel0 mpbi relco 3eqtr3ri ) NBZBZNACZBZBZNUASUBNABZSCZSUBUEUDNCNSNUDDEU
      DFGDNAHIJNKTNLONMPUAKUCUALNAQUAMPR $.
      $( [24-Apr-2004] $)

    $( Composition with the identity relation.  Part of Theorem 3.7(i) of
       [Monk1] p. 36.  (Contributed by ?who?, 22-Apr-2004.) $)
    coi1 $p |- ( Rel A -> ( A o. _I ) = A ) $=
      ( vx vy vz cid ccom wrel wceq relco cv cop wcel wbr wa wex weq opelco vex
      ideq bitri equcom anbi1i exbii breq1 ceqsexv 3bitri df-br eqrelriv mpan )
      AEFZGAGUJAHAEIBCUJABJZCJZKZUJLZUKULAMZUMALUNUKDJZEMZUPULAMZNZDODBPZURNZDO
      UODUKULAEQUSVADUQUTURUQBDPUTUKUPDRSBDUATUBUCURUODUKBRUPUKULAUDUEUFUKULAUG
      TUHUI $.
      $( [22-Apr-2004] $)

    $( Composition with the identity relation.  Part of Theorem 3.7(i) of
       [Monk1] p. 36.  (Contributed by ?who?, 22-Apr-2004.) $)
    coi2 $p |- ( Rel A -> ( _I o. A ) = A ) $=
      ( wrel ccom ccnv cnvco wceq relcnv ax-mp cnveqi eqtr3i dfrel2 coeq2 coeq1
      cid coi1 cnvi sylan9eq mpan2 sylbi syl5reqr biimpi eqtrd ) ABZNACZADZDZAU
      CUFNDZUFCZUDUENCZDUHUFUENEUIUEUEBUIUEFAGUEOHIJUCUFAFZUHUDFZAKZUJUGNFZUKPU
      JUMUHUGACUDUFAUGLUGNAMQRSTUCUJULUAUB $.
      $( [22-Apr-2004] $)
  $}


  ${
    $d A x $.  $d B x $.  $d R x $.
    $( Binary relationship of composition with identity.  (Contributed by
       ?who?, 9-Mar-2015.) $)
    brcoi1 $p |- ( A ( _I o. R ) B <-> A R B ) $=
      ( vx cid ccom wbr cvv wcel brex simprd cv wceq wa wex brco ancom wb bitri
      vex ideqg2 ax-mp anbi1i exbii breq2 ceqsexgv syl5bb pm5.21nii ) ABECFZGZB
      HIZABCGZUJAHIZUKABUIJKULUMUKABCJKUJDLZBMZAUNCGZNZDOZUKULUJUPUNBEGZNZDOURD
      ABECPUTUQDUTUSUPNUQUPUSQUSUOUPUNHIUSUORDTUNBHUAUBUCSUDSUPULDBHUNBACUEUFUG
      UH $.
      $( [9-Mar-2015] $)
  $}

  $( Composition with a restricted identity relation.  (Contributed by FL,
     19-Jun-2011.) $)
  coires1 $p |- ( Rel A
     -> ( A o. ( _I |` B ) ) = ( A |` B ) ) $=
    ( wrel cid cres ccom resco coi1 reseq1d syl5eqr ) ACZADBEFADFZBEABEADBGKLAB
    AHIJ $.
    $( [19-Jun-2011] $)

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.
    $( Associative law for class composition.  Theorem 27 of [Suppes] p. 64.
       Also Exercise 21 of [Enderton] p. 53.  Interestingly, this law holds for
       any classes whatsoever, not just functions or even relations.
       (Contributed by ?who?, 27-Jan-1997.) $)
    coass $p |- ( ( A o. B ) o. C ) = ( A o. ( B o. C ) ) $=
      ( vx vy vz vw ccom relco cv wbr wa excom anass 2exbii brco bitr4i 3bitr4i
      wex exbii bitr2i anbi2i 19.42v anbi1i 19.41v eqbrriv ) DEABHZCHZABCHZHZUG
      CIAUIIDJZFJZCKZULEJZUGKZLZFSZUKGJZUIKZURUNAKZLZGSZUKUNUHKUKUNUJKUMULURBKZ
      UTLZLZGSZFSZUMVCLZUTLZFSZGSZUQVBVKVIGSFSVGVIGFMVIVEFGUMVCUTNOUAUPVFFUPUMV
      DGSZLVFUOVLUMGULUNABPUBUMVDGUCQTVAVJGVAVHFSZUTLVJUSVMUTFUKURBCPUDVHUTFUEQ
      TRFUKUNUGCPGUKUNAUIPRUF $.
      $( [27-Jan-1997] $)
  $}

  $( A relation is transitive iff its converse is transitive.  (Contributed by
     FL, 19-Sep-2011.) $)
  relcnvtr $p |- ( Rel R ->
     ( ( R o. R ) C_ R <-> ( `' R o. `' R ) C_ `' R ) ) $=
    ( wrel ccom wss ccnv cnvco cnvss syl5eqssr wceq wi sseq1 dfrel2 coeq1 coeq2
    eqtrd id sseq12d biimpd sylbi com12 syl6bi mpsyl impbid2 ) ABZAACZADZAEZUGC
    ZUGDZUFUHUEEUGAAFUEAGHUIUDUFUHEZUGEZUKCZIZUIUJUKDZUDUFJZUGUGFUHUGGUMUNULUKD
    ZUOUJULUKKUDUPUFUDUKAIZUPUFJALUQUPUFUQULUEUKAUQULAUKCUEUKAUKMUKAANOUQPQRSTU
    AUBTUC $.
    $( [19-Sep-2011] $)

  ${
    $d x y A $.
    $( A relation is included in the cross product of its domain and range.
       Exercise 4.12(t) of [Mendelson] p. 235.  (Contributed by ?who?,
       3-Aug-1994.) $)
    relssdmrn $p |- ( Rel A -> A C_ ( dom A X. ran A ) ) $=
      ( vx vy wrel cdm crn cxp wss cv cop wcel wi wal wex 19.8a wa opelxp eldm2
      elrn2 anbi12i bitri sylanbrc gen2 ssrel mpbiri ) ADAAEZAFZGZHBIZCIZJZAKZU
      KUHKZLZCMBMUNBCULULCNZULBNZUMULCOULBOUMUIUFKZUJUGKZPUOUPPUIUJUFUGQUQUOURU
      PCUIARBUJASTUAUBUCBCAUHUDUE $.
      $( [3-Aug-1994] $)
  $}

  $( Two ways to describe the structure of a two-place operation.  (Contributed
     by ?who?, 17-Dec-2008.) $)
  relrelss $p |- ( ( Rel A /\ Rel dom A ) <-> A C_ ( ( _V X. _V ) X. _V ) ) $=
    ( wrel cdm wa cvv cxp wss df-rel anbi2i crn relssdmrn xpss12 mpan2 sylan9ss
    ssv xpss sstr sylibr dmss c0 wne wceq vn0 dmxp ax-mp syl6sseq impbii bitri
    jca ) ABZACZBZDUJUKEEFZGZDZAUMEFZGZULUNUJUKHIUOUQUJUNAUKAJZFZUPAKUNUREGUSUP
    GUROUKUMURELMNUQUJUNUQAUMGZUJUQUPUMGUTUMEPAUPUMQMAHRUQUKUPCZUMAUPSETUAVAUMU
    BUCUMEUDUEUFUIUGUH $.
    $( [17-Dec-2008] $)

  ${
    $d x y z w $.
    $( ` Swap ` is a relationship.  (Contributed by ?who?, 8-Jan-2015.) $)
    relswap $p |- Rel Swap $=
      ( vx vz vw vy cv cop wceq wa wex cswap df-swap relopabi ) AEBEZCEZFGDENMF
      GHCIBIADJADBCKL $.
      $( [8-Jan-2015] $)
  $}

  ${
    $d x y z w $.
    $( ` Swap ` subset relationship.  (Contributed by ?who?, 8-Jan-2015.) $)
    swapssvvvv $p |- Swap C_ ( ( _V X. _V ) X. ( _V X. _V ) ) $=
      ( vx vy vz vw cswap cvv cxp wss cv cop wcel wi wal wrel wb relswap opelxp
      wex vex mpbir2an ssrel ax-mp wceq elswap eleq1 mpbiri sylbi ax-gen mpgbir
      exlimivv ) EFFGZUKGZHZAIBIJZEKZUNULKZLZBMZAENUMURAMOPABEULUAUBUQBUOUNCIZD
      IZJZUTUSJZJZUCZDRCRUPCDUNUDVDUPCDVDUPVCULKZVEVAUKKZVBUKKZVFUSFKZUTFKZCSZD
      SZUSUTFFQTVGVIVHVKVJUTUSFFQTVAVBUKUKQTUNVCULUEUFUJUGUHUI $.
      $( [8-Jan-2015] $)
  $}

  ${
    $d A a b x y z w t u $.
    $( Definition of converse in terms of image and ` Swap ` .  (Contributed by
       ?who?, 8-Jan-2015.) $)
    dfcnv2 $p |- `' A = ( Swap " A ) $=
      ( vx vy vz ccnv cswap cima relcnv cvv cxp wss crn sstri cv cop wa wex vex
      wcel bitri wrel imassrn swapssvvvv rnss ax-mp rnxpss df-rel mpbir brswap2
      wbr wceq anbi1i exbii opex eleq1 ceqsexv bicomi opelcnv wrex elima df-rex
      exancom 3bitr4i eqrelriiv ) BCAEZFAGZAHVFUAVFIIJZKVFFLZVGFAUBVHVGVGJZLZVG
      FVIKVHVJKUCFVIUDUEVGVGUFMMVFUGUHCNZBNZOZASZDNZVLVKOZFUJZVOASZPZDQZVPVESVP
      VFSZVTVNVTVOVMUKZVRPZDQVNVSWCDVQWBVRVOVLVKBRZCRZUIULUMVRVNDVMVKVLWEWDUNVO
      VMAUOUPTUQVLVKAURWAVQDAUSZVTDVPFAUTWFVRVQPDQVTVQDAVAVRVQDVBTTVCVD $.
      $( [8-Jan-2015] $)
  $}

  $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
     p. 26.  (Contributed by ?who?, 17-Mar-1998.) $)
  cnvexg $p |- ( A e. V -> `' A e. _V ) $=
    ( wcel ccnv cswap cima cvv dfcnv2 swapex imaexg mpan syl5eqel ) ABCZADEAFZG
    AHEGCMNGCIEAGBJKL $.
    $( [17-Mar-1998] $)

  ${
    cnvex.1 $e |- A e. _V $.
    $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
       p. 26.  (Contributed by ?who?, 19-Dec-2003.) $)
    cnvex $p |- `' A e. _V $=
      ( cvv wcel ccnv cnvexg ax-mp ) ACDAECDBACFG $.
      $( [19-Dec-2003] $)
  $}

  $( A relation is a set iff its converse is a set.  (Contributed by FL,
     3-Mar-2007.) $)
  relcnvexb $p |- ( Rel R -> ( R e. _V <-> `' R e. _V ) ) $=
    ( wrel cvv wcel ccnv cnvexg wceq wi dfrel2 eleq1 syl5ib sylbi impbid2 ) ABZ
    ACDZAEZCDZACFNPEZAGZQOHAIQRCDSOPCFRACJKLM $.
    $( [5-Mar-2007] $)


  $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring] p. 26.
     Similar to Lemma 3D of [Enderton] p. 41.  (Contributed by ?who?,
     8-Jan-2015.) $)
  rnexg $p |- ( A e. V -> ran A e. _V ) $=
    ( wcel crn cvv cima df-rn vvex imaexg mpan2 syl5eqel ) ABCZADAEFZEAGLEECMEC
    HAEBEIJK $.
    $( [8-Jan-2015] $)

  $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring] p. 26.
     (Contributed by ?who?, 8-Jan-2015.) $)
  dmexg $p |- ( A e. V -> dom A e. _V ) $=
    ( wcel cdm ccnv crn cvv df-dm cnvexg rnexg syl syl5eqel ) ABCZADAEZFZGAHMNG
    COGCABINGJKL $.
    $( [8-Jan-2015] $)

  ${
    dmex.1 $e |- A e. _V $.
    $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
       p. 26.  (Contributed by ?who?, 7-Jul-2008.) $)
    dmex $p |- dom A e. _V $=
      ( cvv wcel cdm dmexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)

    $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring]
       p. 26.  Similar to Lemma 3D of [Enderton] p. 41.  (Contributed by ?who?,
       7-Jul-2008.) $)
    rnex $p |- ran A e. _V $=
      ( cvv wcel crn rnexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)
  $}


  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a cross product.  This version requires no quantifiers or
       dummy variables.  (Contributed by ?who?, 17-Feb-2004.) $)
    elxp4 $p |- ( A e. ( B X. C ) <-> ( A = <. U. dom { A } , U. ran { A } >.
                 /\ ( U. dom { A } e. B /\ U. ran { A } e. C ) ) ) $=
      ( vx vy wcel cv cop wceq wa wex csn cdm cuni crn sneq unieqd vex pm4.71ri
      syl6req elxp rneqd op2nda adantr exbii snex rnex uniex opeq2 eqeq2d eleq1
      anbi2d anbi12d ceqsexv bitri dmeqd op1sta anbi1i anass 3bitri dmex anbi1d
      cxp opeq1 ) ABCVCFADGZEGZHZIZVEBFZVFCFZJZJZEKZDKVEALZMZNZIZAVEVNOZNZHZIZV
      IVSCFZJZJZJZDKAVPVSHZIZVPBFZWBJZJZDEABCUAVMWEDVMWDVQWAJZWCJWEVMVFVSIZVLJZ
      EKWDVLWMEVLWLVHWLVKVHVSVGLZOZNVFVHVRWOVHVNWNAVGPUBQVEVFDRZERUCTUDSUEVLWDE
      VSVRVNAUFZUGUHZWLVHWAVKWCWLVGVTAVFVSVEUIUJWLVJWBVIVFVSCUKULUMUNUOWAWKWCWA
      VQWAVPVTLZMZNVEWAVOWTWAVNWSAVTPUPQVEVSWPWRUQTSURVQWAWCUSUTUEWDWJDVPVOVNWQ
      VAUHVQWAWGWCWIVQVTWFAVEVPVSVDUJVQVIWHWBVEVPBUKVBUMUNUT $.
      $( [17-Feb-2004] $)
  $}


  $( If a cross product is a set, one of its components must be a set.
     (Contributed by ?who?, 27-Aug-2006.) $)
  xpexr $p |- ( ( A X. B ) e. C -> ( A e. _V \/ B e. _V ) ) $=
    ( cxp wcel cvv wn wi wceq 0ex eleq1 mpbiri pm2.24d a1d wne crn rnexg eleq1d
    c0 rnxp syl5ib a1dd pm2.61ine orrd ) ABDZCEZAFEZBFEZUFUGGZUHHZHASASIZUJUFUK
    UGUHUKUGSFEJASFKLMNASOZUFUHUIUFUEPZFEULUHUECQULUMBFABTRUAUBUCUD $.
    $( [27-Aug-2006] $)

  $( If a nonempty cross product is a set, so are both of its components.
     (Contributed by ?who?, 27-Aug-2006.)  (Revised by ?who?, 5-May-2007.) $)
  xpexr2 $p |- ( ( ( A X. B ) e. C /\ ( A X. B ) =/= (/) ) ->
               ( A e. _V /\ B e. _V ) ) $=
    ( cxp c0 wne wcel wa cvv xpnz cdm wceq dmxp adantl adantr eqeltrrd crn rnxp
    dmexg rnexg anim12dan ancom2s sylan2br ) ABDZEFUDCGZAEFZBEFZHAIGZBIGZHZABJU
    EUGUFUJUEUGUHUFUIUEUGHUDKZAIUGUKALUEABMNUEUKIGUGUDCSOPUEUFHUDQZBIUFULBLUEAB
    RNUEULIGUFUDCTOPUAUBUC $.
    $( [5-May-2007] $) $( [27-Aug-2006] $)


  ${
    $d x y z w $.
    $( Alternate definition of the ` 2nd ` function.  (Contributed by ?who?,
       8-Jan-2015.) $)
    df2nd2 $p |- 2nd = ( 1st o. Swap ) $=
      ( vx vz vy vw cv cop wceq wex copab cswap wbr c1st wa c2nd ccom vex br1st
      anbi1i ancom exbii 19.41v 3bitr4i excom opex breq2 ceqsexv bitri 3bitr2ri
      brswap2 opabbii df-2nd df-co 3eqtr4i ) AEZBEZCEZFGZBHZACIUNDEZJKZUSUPLKZM
      ZDHZACINLJOURVCACVCUSUPUOFZGZUTMZBHZDHVFDHZBHURVBVGDVAUTMVEBHZUTMVBVGVAVI
      UTBUSUPCPZQRUTVASVEUTBUAUBTVFBDUCVHUQBVHUNVDJKZUQUTVKDVDUPUOVJBPZUDUSVDUN
      JUEUFUNUPUOVJVLUIUGTUHUJACBUKACDLJULUM $.
      $( [8-Jan-2015] $)
  $}

  $( The ` 2nd ` function is a set.  (Contributed by ?who?, 8-Jan-2015.) $)
  2ndex $p |- 2nd e. _V $=
    ( c2nd c1st cswap ccom cvv df2nd2 1stex swapex coex eqeltri ) ABCDEFBCGHIJ
    $.
    $( [8-Jan-2015] $)

  ${
    $d A x y z w v $.  $d B x y z w v $.
    $( Define cross product via the set construction functions.  (Contributed
       by ?who?, 8-Jan-2015.) $)
    dfxp2 $p |- ( A X. B ) = ( ( `' 1st " A ) i^i ( `' 2nd " B ) ) $=
      ( vx vy vz vw vv c1st ccnv c2nd cv cop wceq wrex wbr wcel wex weq 3bitr4i
      wa cxp cima cin eeanv vex opeq2 eqeq2d opeq1 bi2anan9 spc2ev simpl eqtr2
      anidms opth adantl sylbi syl eqtrd impbii brcnv br1st bitri br2nd anbi12i
      exlimivv 2rexbii elxp2 elima elin reeanv eqriv ) CABUAZHIZAUBZJIZBUBZUCZC
      KZDKZEKZLZMZEBNDANVSVRVMOZVTVRVOOZTZEBNDANZVRVLPVRVQPZWBWEDEABVRVSFKZLZMZ
      VRGKZVTLZMZTZGQFQZWJFQZWMGQZTWBWEWJWMFGUDWBWOWBWOWNWBWBTFGVTVSEUEZDUEZFER
      ZWJWBGDRZWMWBWTWIWAVRWHVTVSUFZUGXAWLWAVRWKVSVTUHUGUIUJUMWNWBFGWNVRWIWAWJW
      MUKWNWIWLMZWIWAMZVRWIWLULXCDGRZWTTXDVSWHWKVTUNWTXDXEXBUOUPUQURVEUSWCWPWDW
      QWCVRVSHOWPVSVRHUTFVRVSWSVAVBWDVRVTJOWQVTVRJUTGVRVTWRVCVBVDSVFDEVRABVGVRV
      NPZVRVPPZTWCDANZWDEBNZTWGWFXFXHXGXIDVRVMAVHEVRVOBVHVDVRVNVPVIWCWDDEABVJSS
      VK $.
      $( [8-Jan-2015] $)
  $}


  $( The cross product of two sets is a set.  Proposition 6.2 of
     [TakeutiZaring] p. 23.  (Contributed by ?who?, 14-Aug-1994.) $)
  xpexg $p |- ( ( A e. V /\ B e. W ) -> ( A X. B ) e. _V ) $=
    ( wcel cxp c1st ccnv cima c2nd cin cvv dfxp2 1stex cnvex imaexg 2ndex inexg
    wa mpan syl2an syl5eqel ) ACEZBDEZSABFGHZAIZJHZBIZKZLABMUCUFLEZUHLEZUILEUDU
    ELEUCUJGNOUEALCPTUGLEUDUKJQOUGBLDPTUFUHLLRUAUB $.
    $( [14-Aug-1994] $)

  ${
    xpex.1 $e |- A e. _V $.
    xpex.2 $e |- B e. _V $.
    $( The cross product of two sets is a set.  Proposition 6.2 of
       [TakeutiZaring] p. 23.  (Contributed by ?who?, 14-Aug-1994.) $)
    xpex $p |- ( A X. B ) e. _V $=
      ( cvv wcel cxp xpexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Aug-1994] $)
  $}


  $( The restriction of a set to a set is a set.  (Contributed by ?who?,
     8-Jan-2015.) $)
  resexg $p |- ( ( A e. V /\ B e. W ) -> ( A |` B ) e. _V ) $=
    ( wcel wa cres cvv cxp cin df-res vvex xpexg mpan2 inexg sylan2 syl5eqel )
    ACEZBDEZFABGABHIZJZHABKSRTHEZUAHESHHEUBLBHDHMNATCHOPQ $.
    $( [8-Jan-2015] $)

  ${
    resex.1 $e |- A e. _V $.
    resex.2 $e |- B e. _V $.
    $( The restriction of a set to a set is a set.  (Contributed by ?who?,
       8-Jan-2015.) $)
    resex $p |- ( A |` B ) e. _V $=
      ( cvv wcel cres resexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [8-Jan-2015] $)
  $}

  ${
    $d A a b x $.  $d B a b $.
    $( The converse of an intersection is the intersection of the converse.
       (Contributed by FL, 15-Oct-2012.) $)
    cnviin $p |- ( A =/= (/) -> `' |^|_ x e. A B = |^|_ x e. A `' B ) $=
      ( va vb ciin ccnv wrel relcnv cvv wss cv wcel wex df-rel cop wral wb opex
      vex c0 wne wceq cxp wrex wa mpbi eximi n0 df-rex 3imtr4i iinss syl sylibr
      jctr eliin ax-mp opelcnv ralbii bitri 3bitr4i eqrelriv sylancr ) BUAUBZAB
      CFZGZHABCGZFZHZVFVHUCVEIVDVHJJUDZKZVIVDVGVJKZABUEZVKALBMZANVNVLUFZANVDVMV
      NVOAVNVLVGHVLCIVGOUGUOUHABUIVLABUJUKABVGVJULUMVHOUNDEVFVHELZDLZPZVEMZVRCM
      ZABQZVQVPPZVFMWBVHMZVRJMVSWARVPVQETZDTZSAVRBCJUPUQVQVPVEURWCWBVGMZABQZWAW
      BJMWCWGRVQVPWEWDSAWBBVGJUPUQWFVTABVQVPCURUSUTVAVBVC $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y z A $.
    $( Alternate definition of a function.  (Contributed by ?who?,
       29-Dec-1996.)  (Revised by ?who?, 23-Apr-2004.) $)
    dffun2 $p |- ( Fun A <-> ( Rel A /\
                 A. x A. y A. z ( ( x A y /\ x A z ) -> y = z ) ) ) $=
      ( wfun wrel ccnv ccom cid wss wa cv wbr weq wi wal wex copab bitri bitr4i
      df-fun df-co df-id sseq12i brcnv anbi1i exbii imbi1i 19.23v 2albii alrot3
      ssopab2b anbi2i ) DEDFZDDGZHZIJZKUNALZBLZDMZURCLDMZKZBCNZOZCPBPAPZKDUAUQV
      EUNUQUSURUOMZVAKZAQZVCOZCPBPZVEUQVHBCRZVCBCRZJVJUPVKIVLBCADUOUBBCUCUDVHVC
      BCULSVJVDAPZCPBPVEVIVMBCVIVBAQZVCOVMVHVNVCVGVBAVFUTVAUSURDUEUFUGUHVBVCAUI
      TUJVDABCUKTSUMS $.
      $( [23-Apr-2004] $) $( [29-Dec-1996] $)

    $( Alternate definition of function.  (Contributed by ?who?, 29-Dec-1996.)
       (Revised by ?who?, 23-Apr-2004.) $)
    dffun3 $p |- ( Fun A <-> ( Rel A /\
                 A. x E. z A. y ( x A y -> y = z ) ) ) $=
      ( wfun wrel cv wbr wa wceq wal wex dffun2 wmo breq2 mo4 ax-17 mo2 bitr3i
      wi albii anbi2i bitri ) DEDFZAGZBGZDHZUECGZDHZIUFUHJZTCKBKZAKZIUDUGUJTBKC
      LZAKZIABCDMULUNUDUKUMAUKUGBNUMUGUIBCUFUHUEDOPUGBCUGCQRSUAUBUC $.
      $( [23-Apr-2004] $) $( [29-Dec-1996] $)

    $( Alternate definition of a function.  Definition 6.4(4) of
       [TakeutiZaring] p. 24.  (Contributed by ?who?, 29-Dec-1996.) $)
    dffun4 $p |- ( Fun A <-> ( Rel A /\
                 A. x A. y A. z ( ( <. x , y >. e. A /\ <. x , z >. e. A )
                 -> y = z ) ) ) $=
      ( wfun wrel cv wbr wa wceq wal cop wcel dffun2 df-br anbi12i imbi1i albii
      wi 2albii anbi2i bitri ) DEDFZAGZBGZDHZUDCGZDHZIZUEUGJZSZCKZBKAKZIUCUDUEL
      DMZUDUGLDMZIZUJSZCKZBKAKZIABCDNUMUSUCULURABUKUQCUIUPUJUFUNUHUOUDUEDOUDUGD
      OPQRTUAUB $.
      $( [29-Dec-1996] $)

    $( Alternate definition of function.  (Contributed by ?who?,
       29-Dec-1996.) $)
    dffun5 $p |- ( Fun A <-> ( Rel A /\
                 A. x E. z A. y ( <. x , y >. e. A -> y = z ) ) ) $=
      ( wfun wrel cv wbr wceq wi wal wex wa cop dffun3 df-br imbi1i albii exbii
      wcel anbi2i bitri ) DEDFZAGZBGZDHZUECGIZJZBKZCLZAKZMUCUDUENDTZUGJZBKZCLZA
      KZMABCDOUKUPUCUJUOAUIUNCUHUMBUFULUGUDUEDPQRSRUAUB $.
      $( [29-Dec-1996] $)
  $}

  ${
    $d x y z w v u $.  $d z A w v u $.
    dffunmof.1 $e |- ( z e. A -> A. x z e. A ) $.
    dffunmof.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of function, using bound-variable hypotheses instead of
       distinct variable conditions.  (Contributed by ?who?, 9-Mar-1995.)
       (Revised by ?who?, 15-Aug-2004.) $)
    dffun6f $p |- ( Fun A <-> ( Rel A /\ A. x E* y x A y ) ) $=
      ( vw vv vu wfun cv wbr wceq wal wa wmo wcel ax-17 hbbr albii wi wex breq2
      wrel dffun3 cbvmo mo2 hbmo breq1 mobid cbval 3bitr3ri anbi2i bitr4i ) DJD
      UDZGKZHKZDLZUQIKMUAHNIUBZGNZOUOAKZBKZDLZBPZANZOGHIDUEVEUTUOURHPZGNUPVBDLZ
      BPZGNUTVEVFVHGURVGHBBCUPUQDCKZUPQZBRFVIUQQBRSVGHRUQVBUPDUCUFTVFUSGURHIURI
      RUGTVHVDGAVGABACUPVBDVJAREVIVBQARSUHVDGRUPVAMZVGVCBVKBRUPVAVBDUIUJUKULUMU
      N $.
      $( [15-Aug-2004] $) $( [9-Mar-1995] $)
  $}

  ${
    $d x y z A $.
    $( Alternate definition of a function using "at most one" notation.
       (Contributed by ?who?, 9-Mar-1995.)  (Revised by ?who?, 15-Aug-2004.) $)
    dffun6 $p |- ( Fun A <-> ( Rel A /\ A. x E* y x A y ) ) $=
      ( vz cv wcel ax-17 dffun6f ) ABDCDECFZAGIBGH $.
      $( [15-Aug-2004] $) $( [9-Mar-1995] $)

    $( A function has at most one value for each argument.  (Contributed by
       ?who?, 24-May-1998.)  (Revised by ?who?, 15-Aug-2004.) $)
    funmo $p |- ( Fun A -> E* y x A y ) $=
      ( wfun cv wbr wmo wrel wal dffun6 simprbi 19.21bi ) CDZAEBECFBGZAMCHNAIAB
      CJKL $.
      $( [15-Aug-2004] $) $( [24-May-1998] $)
  $}

  $( A function is a relation.  (Contributed by ?who?, 1-Aug-1994.) $)
  funrel $p |- ( Fun A -> Rel A ) $=
    ( wfun wrel ccnv ccom cid wss df-fun simplbi ) ABACAADEFGAHI $.
    $( [1-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Subclass theorem for function predicate.  (The proof was shortened by
       Mario Carneiro, 24-Jun-2014.)  (Contributed by ?who?, 16-Aug-1994.)
       (Revised by ?who?, 24-Jun-2014.) $)
    funss $p |- ( A C_ B -> ( Fun B -> Fun A ) ) $=
      ( wss wrel ccnv ccom cid wa wfun relss wi coss1 cnvss coss2 sstrd anim12d
      syl sstr2 df-fun 3imtr4g ) ABCZBDZBBEZFZGCZHADZAAEZFZGCZHBIAIUAUBUFUEUIAB
      JUAUHUDCUEUIKUAUHBUGFZUDABUGLUAUGUCCUJUDCABMUGUCBNQOUHUDGRQPBSAST $.
      $( [24-Jun-2014] $) $( [16-Aug-1994] $)
  $}

  $( Equality theorem for function predicate.  (Contributed by ?who?,
     16-Aug-1994.) $)
  funeq $p |- ( A = B -> ( Fun A <-> Fun B ) ) $=
    ( wss wa wfun wi wceq wb funss anim12i ancoms eqss dfbi2 3imtr4i ) ABCZBACZ
    DAEZBEZFZRQFZDZABGQRHPOUAPSOTBAIABIJKABLQRMN $.
    $( [16-Aug-1994] $)

  ${
    funeqi.1 $e |- A = B $.
    $( Equality inference for the function predicate.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    funeqi $p |- ( Fun A <-> Fun B ) $=
      ( wceq wfun wb funeq ax-mp ) ABDAEBEFCABGH $.
      $( [3-Jun-2011] $)
  $}

  ${
    funeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for the function predicate.  (Contributed by ?who?,
       23-Feb-2013.) $)
    funeqd $p |- ( ph -> ( Fun A <-> Fun B ) ) $=
      ( wceq wfun wb funeq syl ) ABCEBFCFGDBCHI $.
      $( [23-Feb-2013] $)
  $}

  ${
    nffun.1 $e |- F/_ x F $.
    $( Bound-variable hypothesis builder for a function.  (Contributed by NM,
       30-Jan-2004.) $)
    nffun $p |- F/ x Fun F $=
      ( wfun wrel ccnv ccom cid wa df-fun nfrel nfcnv nfco nfcv nfss nfan nfxfr
      wss ) BDBEZBBFZGZHRZIABJSUBAABCKAUAHABTCABCLMAHNOPQ $.
  $}

  ${
    $d x y z F $.
    $( There is exactly one value of a function.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?, 22-Apr-2004.)
       (Revised by ?who?, 17-Aug-2011.) $)
    funeu $p |- ( ( Fun F /\ x F y ) -> E! y x F y ) $=
      ( wfun cv wbr weu wex 19.8a wmo wi funmo df-mo sylib syl5 imp ) CDZAEBECF
      ZRBGZRRBHZQSRBIQRBJTSKABCLRBMNOP $.
      $( [17-Aug-2011] $) $( [22-Apr-2004] $)

    $( There is exactly one value of a function.  (Contributed by ?who?,
       3-Aug-1994.) $)
    funeu2 $p |- ( ( Fun F /\ <. x , y >. e. F ) -> E! y <. x , y >. e. F ) $=
      ( wfun cv wbr wa weu cop wcel funeu df-br anbi2i eubii 3imtr3i ) CDZAEZBE
      ZCFZGSBHPQRICJZGTBHABCKSTPQRCLZMSTBUANO $.
      $( [3-Aug-1994] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of a function.  One possibility for the definition
       of a function in [Enderton] p. 42.  (Enderton's definition is ambiguous
       because "there is only one" could mean either "there is at most one" or
       "there is exactly one."  However, ~ dffun8 shows that it doesn't matter
       which meaning we pick.)  (Contributed by ?who?, 4-Nov-2002.) $)
    dffun7 $p |- ( Fun A <-> ( Rel A /\ A. x e. dom A E* y x A y ) ) $=
      ( wfun wrel cv wbr wmo wal wa cdm wral dffun6 wcel wi moabs imbi1i bitr4i
      wex eldm albii df-ral anbi2i bitri ) CDCEZAFZBFCGZBHZAIZJUEUHACKZLZJABCMU
      IUKUEUIUFUJNZUHOZAIUKUHUMAUHUGBSZUHOUMUGBPULUNUHBUFCTQRUAUHAUJUBRUCUD $.
      $( [4-Nov-2002] $)

    $( Alternate definition of a function.  One possibility for the definition
       of a function in [Enderton] p. 42.  Compare ~ dffun7 .  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?,
       4-Nov-2002.)  (Revised by ?who?, 18-Sep-2011.) $)
    dffun8 $p |- ( Fun A <-> ( Rel A /\ A. x e. dom A E! y x A y ) ) $=
      ( wfun wrel cv wbr wmo cdm wral wa weu dffun7 wi wcel df-mo wb eldm pm5.5
      wex sylbi syl5bb ralbiia anbi2i bitri ) CDCEZAFZBFCGZBHZACIZJZKUFUHBLZAUJ
      JZKABCMUKUMUFUIULAUJUIUHBTZULNZUGUJOZULUHBPUPUNUOULQBUGCRUNULSUAUBUCUDUE
      $.
      $( [18-Sep-2011] $) $( [4-Nov-2002] $)

    $( Alternate definition of a function.  (Contributed by ?who?,
       28-Mar-2007.) $)
    dffun9 $p |- ( Fun A <->
                 ( Rel A /\ A. x e. dom A E* y ( y e. ran A /\ x A y ) ) ) $=
      ( wfun wrel cv wbr wmo cdm wral wa crn wcel dffun7 brelrn pm4.71ri ralbii
      mobii anbi2i bitri ) CDCEZAFZBFZCGZBHZACIZJZKUAUCCLMZUDKZBHZAUFJZKABCNUGU
      KUAUEUJAUFUDUIBUDUHUBUCCOPRQST $.
      $( [28-Mar-2007] $)
  $}

  $( An equivalence for the function predicate.  (Contributed by ?who?,
     13-Aug-2004.) $)
  funfn $p |- ( Fun A <-> A Fn dom A ) $=
    ( wfun cdm wceq wa wfn eqid biantru df-fn bitr4i ) ABZKACZLDZEALFMKLGHALIJ
    $.
    $( [13-Aug-2004] $)

  $( The identity relation is a function.  Part of Theorem 10.4 of [Quine]
     p. 65.  (Contributed by ?who?, 30-Apr-1998.) $)
  funi $p |- Fun _I $=
    ( cid wfun wrel ccnv ccom wss reli wceq relcnv coi2 ax-mp cnvi eqtri df-fun
    eqimssi mpbir2an ) ABACAADZEZAFGRARQAQCRQHAIQJKLMOANP $.
    $( [30-Apr-1998] $)

  ${
    $d x y z $.
    $( The universe is not a function.  (Contributed by Raph Levien,
       27-Jan-2004.) $)
    nfunv $p |- -. Fun _V $=
      ( vx vy vz cvv cv wbr wa wal wex wne cop wcel vex opex df-br mpbir pm3.2i
      wn syl5bbr exnal wfun wrel weq wi ccompl complex necompl wceq annim breq2
      necomi anbi2d df-ne neeq2 anbi12d spcev 19.8a 19.23bi exbii bitri intnan
      mp2b mpbi dffun2 mtbir ) DUADUBZAEZBEZDFZVGCEZDFZGZBCUCZUDZCHZBHZAHZGVQVF
      VNRZCIZBIZAIZVQRZVIVGVHUEZDFZGZVHWCJZGZVSWAWEWFVIWDVIVGVHKDLVGVHAMZBMZNVG
      VHDOPWDVGWCKDLVGWCWHVHWIUFZNVGWCDOPQWCVHVHUGUKQVRWGCWCWJVRVLVMRZGVJWCUHZW
      GVLVMUIWLVLWEWKWFWLVKWDVIVJWCVGDUJULWKVHVJJWLWFVHVJUMVJWCVHUNSUOSUPVSWABV
      TAUQURVBWAVPRZAIWBVTWMAVTVORZBIWMVSWNBVNCTUSVOBTUTUSVPATUTVCVAABCDVDVE $.
      $( [27-Jan-2004] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( A class of ordered pairs is a function when there is at most one second
       member for each pair.  (Contributed by ?who?, 16-May-1995.) $)
    funopab $p |- ( Fun { <. x , y >. | ph } <-> A. x E* y ph ) $=
      ( copab wfun wbr wmo wal wrel relopab hbopab1 hbopab2 dffun6f mpbiran cop
      vz cv wcel df-br bitri opabid mobii albii ) ABCDZEZBQZCQZUDFZCGZBHZACGZBH
      UEUDIUJABCJBCPUDABCPKABCPLMNUIUKBUHACUHUFUGOUDRAUFUGUDSABCUATUBUCT $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( A class of ordered pairs of values is a function.  (Contributed by
       ?who?, 14-Nov-1995.) $)
    funopabeq $p |- Fun { <. x , y >. | y = A } $=
      ( cv wceq copab wfun wmo funopab moeq mpgbir ) BDCEZABFGLBHALABIBCJK $.
      $( [14-Nov-1995] $)

    $( A class of ordered pairs of values in the form used by ~ fvopab4 is a
       function.  (Contributed by ?who?, 17-Feb-2013.) $)
    funopab4 $p |- Fun { <. x , y >. | ( ph /\ y = A ) } $=
      ( cv wceq wa copab wss wfun simpr ssopab2i funopabeq funss mp2 ) ACEDFZGZ
      BCHZPBCHZISJRJQPBCAPKLBCDMRSNO $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d x y z F $.  $d x y z G $.
    $( The composition of two functions is a function.  Exercise 29 of
       [TakeutiZaring] p. 25.  (The proof was shortened by Andrew Salmon,
       17-Sep-2011.)  (Contributed by ?who?, 26-Jan-1997.)  (Revised by ?who?,
       18-Sep-2011.) $)
    funco $p |- ( ( Fun F /\ Fun G ) -> Fun ( F o. G ) ) $=
      ( vx vz vy wfun wa cv wbr wex copab wmo wal funmo alrimiv moexexv syl2anr
      ccom funopab sylibr df-co funeqi ) AFZBFZGZCHDHZBIZUFEHAIZGDJZCEKZFZABRZF
      UEUIELZCMUKUEUMCUDUGDLUHELZDMUMUCCDBNUCUNDDEANOUGUHDEPQOUICESTULUJCEDABUA
      UBT $.
      $( [18-Sep-2011] $) $( [26-Jan-1997] $)
  $}

  ${
    $d x y z F $.  $d x y z A $.
    $( A restriction of a function is a function.  Compare Exercise 18 of
       [TakeutiZaring] p. 25.  (Contributed by ?who?, 16-Aug-1994.) $)
    funres $p |- ( Fun F -> Fun ( F |` A ) ) $=
      ( cres wss wfun wi resss funss ax-mp ) BACZBDBEJEFBAGJBHI $.
      $( [16-Aug-1994] $)
  $}

  ${
    $d x y F $.  $d x y G $.  $d x y A $.
    $( The restriction of a function to the domain of a subclass equals the
       subclass.  (Contributed by ?who?, 15-Aug-1994.)  (Revised by ?who?,
       19-Mar-2004.) $)
    funssres $p |- ( ( Fun F /\ G C_ F ) -> ( F |` dom G ) = G ) $=
      ( vx vy wfun wss wa cdm cres wceq cv cop wcel wb wal wi ssel wex imp wrel
      opeldm a1i jcad adantl weu funeu2 eldm2 ancrd eximdv syl5bi eupick syl2an
      exp43 com23 com34 pm2.43d imp3a impbid syl6rbbr relres funrel relss mpan9
      opelres alrimivv eqrel sylancr mpbird ) AEZBAFZGZABHZIZBJZCKZDKZLZVMMZVQB
      MZNZDOCOZVKVTCDVKVSVQAMZVOVLMZGZVRVKVSWDVJVSWDPVIVJVSWBWCBAVQQZVSWCPVJVOV
      PBUAUBUCUDVKWBWCVSVKWBWCVSPVKWBWCWBVSVIVJWBWCWBVSPZPZPVIWBVJWGVIWBVJWCWFV
      IWBGWBDUEWBVSGZDRZWFVJWCGCDAUFVJWCWIWCVSDRVJWIDVOBUGVJVSWHDVJVSWBWEUHUIUJ
      SWBVSDUKULUMUNSUOUPUQURVOVPAVLVDUSVEVKVMTBTZVNWANAVLUTVIATVJWJAVABAVBVCCD
      VMBVFVGVH $.
      $( [19-Mar-2004] $) $( [15-Aug-1994] $)
  $}

  $( Equality of restrictions of a function and a subclass.  (Contributed by
     ?who?, 16-Aug-1994.)  (Revised by ?who?, 2-Jun-2007.) $)
  fun2ssres $p |- ( ( Fun F /\ G C_ F /\ A C_ dom G ) ->
                  ( F |` A ) = ( G |` A ) ) $=
    ( wfun wss cdm cres wceq wa resabs1 eqcomd funssres reseq1d sylan9eqr 3impa
    ) BDZCBEZACFZEZBAGZCAGZHSPQIZTBRGZAGZUASUDTBARJKUBUCCABCLMNO $.
    $( [2-Jun-2007] $) $( [16-Aug-1994] $)

  ${
    $d x y z F $.  $d x y z G $.
    $( The union of functions with disjoint domains is a function.  Theorem 4.6
       of [Monk1] p. 43.  (Contributed by ?who?, 12-Aug-1994.) $)
    funun $p |- ( ( ( Fun F /\ Fun G ) /\ ( dom F i^i dom G ) = (/) ) ->
                Fun ( F u. G ) ) $=
      ( vx vy vz wfun wa cdm cin c0 wceq wrel cv wcel wi wal wo opeldm dffun4
      wn cun cop weq funrel relun biimpri syl2an adantr elun anbi12i anddi ax-4
      bitri disj1 imnan bicomi 3imtr4i anim12i orel2 incom eqeq1i orel1 orim12d
      nsyl syl simprbi 19.21bi 19.21bbi jaao sylan9r alrimiv alrimivv sylanbrc
      syl5bi ) AFZBFZGZAHZBHZIZJKZGZABUAZLZCMZDMZUBZWCNZWEEMZUBZWCNZGZDEUCZOZEP
      ZDPCPWCFVQWDWAVOALZBLZWDVPAUDBUDWDWPWQGABUEUFUGUHWBWOCDWBWNEWAWLWGANZWJAN
      ZGZWGBNZWJBNZGZQZVQWMWLWTWRXBGZQZXAWSGZXCQZQZWAXDWLWRXAQZWSXBQZGXIWHXJWKX
      KWGABUIWJABUIUJWRXAWSXBUKUMWAXFWTXHXCWAXETXFWTOWAWEVRNZWEVSNZGZXEXLXMTOZC
      PXOWAXNTZXOCULCVRVSUNXOXPXLXMUOUPUQWRXLXBXMWEWFARWEWIBRURVDXEWTUSVEWAXGTX
      HXCOWAXMXLGZXGXMXLTOZCPZXRWAXQTZXRCULWAVSVRIZJKXSVTYAJVRVSUTVACVSVRUNUMXR
      XTXMXLUOUPUQXAXMWSXLWEWFBRWEWIARURVDXGXCVBVEVCVNVOWTWMVPXCVOWTWMOZDEVOYBE
      PDPZCVOWPYCCPCDEASVFVGVHVPXCWMOZDEVPYDEPDPZCVPWQYECPCDEBSVFVGVHVIVJVKVLCD
      EWCSVM $.
      $( [12-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    funsn.1 $e |- A e. _V $.
    funsn.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is a function.  Theorem 10.5 of [Quine]
       p. 65.  (Contributed by ?who?, 12-Aug-1994.)  (Revised by ?who?,
       1-Oct-2013.) $)
    funsn $p |- Fun { <. A , B >. } $=
      ( vx vy cop csn wfun wrel cv wbr wmo wal relsnop wceq wi moeq vex bitri
      a1i wcel df-br opex elsn opth mobii moanimv mpbir ax-gen dffun6 mpbir2an
      wa ) ABGZHZIUOJEKZFKZUOLZFMZENABCDOUSEUSUPAPZUQBPZFMZQZVBUTFBRUAUSUTVAUMZ
      FMVCURVDFURUPUQGZUOUBZVDUPUQUOUCVFVEUNPVDVEUNUPUQESFSUDUEUPUQABUFTTUGUTVA
      FUHTUIUJEFUOUKUL $.
      $( [1-Oct-2013] $) $( [12-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A singleton of an ordered pair is a function.  Theorem 10.5 of [Quine]
       p. 65.  (Contributed by ?who?, 28-Jun-2011.)  (Revised by ?who?,
       1-Oct-2013.) $)
    funsng $p |- ( ( A e. V /\ B e. W ) -> Fun { <. A , B >. } ) $=
      ( vx vy cv cop csn wfun wceq opeq1 sneqd funeqd opeq2 vex funsn vtocl2g )
      EGZFGZHZIZJATHZIZJABHZIZJEFABCDSAKZUBUDUGUAUCSATLMNTBKZUDUFUHUCUETBAOMNST
      EPFPQR $.
      $( [1-Oct-2013] $) $( [28-Jun-2011] $)
  $}

  $( A set of two pairs is a function if their first members are different.
     (Contributed by FL, 26-Jun-2011.) $)
  funprg $p |- ( ( A =/= B /\ ( A e. V /\ B e. W ) /\ ( C e. T /\ D e. U ) )
     -> Fun { <. A , C >. , <. B , D >. } ) $=
    ( wcel wa cop csn wfun cdm cin c0 wceq funsng syl2anc dmsnopg simp2l simp3l
    wne w3a cun cpr simp2r simp3r ineq12d disjsn2 3ad2ant1 eqtrd funun syl21anc
    syl df-pr funeqi sylibr ) ABUCZAGIZBHIZJZCEIZDFIZJZUDZACKZLZBDKZLZUEZMZVGVI
    UFZMVFVHMZVJMZVHNZVJNZOZPQVLVFUTVCVNUSUTVAVEUAUSVBVCVDUBZACGERSVFVAVDVOUSUT
    VAVEUGUSVBVCVDUHZBDHFRSVFVRALZBLZOZPVFVPWAVQWBVFVCVPWAQVSACETUOVFVDVQWBQVTB
    DFTUOUIUSVBWCPQVEABUJUKULVHVJUMUNVMVKVGVIUPUQUR $.
    $( [1-Oct-2013] $) $( [26-Jun-2011] $)

  ${
    funpr.1 $e |- A e. _V $.
    funpr.2 $e |- B e. _V $.
    funpr.3 $e |- C e. _V $.
    funpr.4 $e |- D e. _V $.
    $( A function with a domain of two elements.  (Contributed by Jeff Madsen,
       20-Jun-2010.) $)
    funpr $p |- ( A =/= B -> Fun { <. A , C >. , <. B , D >. } ) $=
      ( wne cvv wcel wa cop cpr wfun pm3.2i funprg mp3an23 ) ABIAJKZBJKZLCJKZDJ
      KZLACMBDMNOSTEFPUAUBGHPABCDJJJJQR $.
      $( [1-Oct-2013] $) $( [20-Jun-2010] $)
  $}

  ${
    fnsn.1 $e |- A e. _V $.
    fnsn.2 $e |- B e. _V $.
    $( Functionality and domain of the singleton of an ordered pair.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    fnsn $p |- { <. A , B >. } Fn { A } $=
      ( cop csn wfn wfun cdm wceq funsn dmsnop df-fn mpbir2an ) ABEFZAFZGOHOIPJ
      ABCDKABDLOPMN $.
      $( [1-Oct-2013] $) $( [3-Jun-2011] $)
  $}

  ${
    $( Domain of a function with a domain of two different values.
       (Contributed by FL, 26-Jun-2011.) $)
    fnprg $p |- ( ( A =/= B /\ ( A e. V /\ B e. W ) /\ ( C e. T /\ D e. U ) )
         -> { <. A , C >. , <. B , D >. } Fn { A , B } ) $=
      ( wne wcel wa w3a cop cpr wfun cdm wceq wfn funprg dmpropg 3ad2ant3 df-fn
      sylanbrc ) ABIZAGJBHJKZCEJDFJKZLACMBDMNZOUGPABNZQZUGUHRABCDEFGHSUFUDUIUEA
      BCDEFTUAUGUHUBUC $.
      $( [1-Oct-2013] $) $( [26-Jun-2011] $)
  $}

  $( The empty set is a function.  Theorem 10.3 of [Quine] p. 65.  (Contributed
     by ?who?, 7-Apr-1998.) $)
  fun0 $p |- Fun (/) $=
    ( c0 wfun wrel ccnv ccom cid wss rel0 co01 0ss eqsstri df-fun mpbir2an ) AB
    ACAADZEZFGHOAFNIFJKALM $.
    $( [7-Apr-1998] $)

  $( The double converse of a function is a function.  (Contributed by ?who?,
     21-Sep-2004.) $)
  funcnvcnv $p |- ( Fun A -> Fun `' `' A ) $=
    ( ccnv wss wfun wi cnvcnvss funss ax-mp ) ABBZACADIDEAFIAGH $.
    $( [21-Sep-2004] $)

  ${
    $d f g x y z w v A $.  $d x y B $.  $d x y R $.
    $( A simpler equivalence for single-rooted (see ~ funcnv ).  (Contributed
       by ?who?, 9-Aug-2004.) $)
    funcnv2 $p |- ( Fun `' A <-> A. y E* x x A y ) $=
      ( ccnv wfun wrel cv wbr wmo wa dffun6 relcnv biantrur brcnv mobii 3bitr2i
      wal albii ) CDZESFZBGZAGZSHZAIZBQZJUEUBUACHZAIZBQBASKTUECLMUDUGBUCUFAUAUB
      CNORP $.
      $( [9-Aug-2004] $)

    $( The converse of a class is a function iff the class is single-rooted,
       which means that for any ` y ` in the range of ` A ` there is at most
       one ` x ` such that ` x A y ` .  Definition of single-rooted in
       [Enderton] p. 43.  See ~ funcnv2 for a simpler version.  (Contributed by
       ?who?, 13-Aug-2004.) $)
    funcnv $p |- ( Fun `' A <-> A. y e. ran A E* x x A y ) $=
      ( cv wbr wmo wal crn wcel wi ccnv wfun wral brelrn pm4.71ri mobii moanimv
      wa bitri albii funcnv2 df-ral 3bitr4i ) ADZBDZCEZAFZBGUECHZIZUGJZBGCKLUGB
      UHMUGUJBUGUIUFRZAFUJUFUKAUFUIUDUECNOPUIUFAQSTABCUAUGBUHUBUC $.
      $( [13-Aug-2004] $)

    $( A condition showing a class is single-rooted.  (See ~ funcnv ).
       (Contributed by ?who?, 26-May-2006.) $)
    funcnv3 $p |- ( Fun `' A <-> A. y e. ran A E! x e. dom A x A y ) $=
      ( cv wbr wmo crn wral wex wa ccnv wfun wreu wcel biimpi biantrurd ralbiia
      cdm elrn weu funcnv df-reu breldm pm4.71ri eubii 3bitr2i ralbii 3bitr4i
      eu5 ) ADZBDZCEZAFZBCGZHULAIZUMJZBUNHCKLULACRZMZBUNHUMUPBUNUKUNNZUOUMUSUOA
      UKCSOPQABCUAURUPBUNURUJUQNZULJZATULATUPULAUQUBULVAAULUTUJUKCUCUDUEULAUIUF
      UGUH $.
      $( [26-May-2006] $)

    $( The double converse of a class is a function iff the class is
       single-valued.  Each side is equivalent to Definition 6.4(2) of
       [TakeutiZaring] p. 23, who use the notation "Un(A)" for single-valued.
       Note that ` A ` is not necessarily a function.  (Contributed by ?who?,
       13-Aug-2004.) $)
    fun2cnv $p |- ( Fun `' `' A <-> A. x E* y x A y ) $=
      ( ccnv wfun cv wbr wmo wal funcnv2 brcnv mobii albii bitri ) CDZDEBFZAFZO
      GZBHZAIQPCGZBHZAIBAOJSUAARTBPQCKLMN $.
      $( [13-Aug-2004] $)

    $( A single-valued relation is a function.  (See ~ fun2cnv for
       "single-valued.") Definition 6.4(4) of [TakeutiZaring] p. 24.
       (Contributed by ?who?, 17-Jan-2006.) $)
    svrelfun $p |- ( Fun A <-> ( Rel A /\ Fun `' `' A ) ) $=
      ( vx vy wfun wrel cv wbr wmo wal wa ccnv dffun6 fun2cnv anbi2i bitr4i ) A
      DAEZBFCFAGCHBIZJPAKKDZJBCALRQPBCAMNO $.
      $( [17-Jan-2006] $)

    $( Single-rootedness (see ~ funcnv ) of a class cut down by a cross
       product.  (Contributed by ?who?, 5-Mar-2007.) $)
    fncnv $p |- ( `' ( R i^i ( A X. B ) ) Fn B <->
                  A. y e. B E! x e. A x R y ) $=
      ( cxp cin ccnv wfn wceq wa wbr wral wcel wmo anbi1i ancom bitri 3bitr4i
      cv wfun cdm wreu df-fn dfrn4 eqeq1i anbi2i wrex rninxp funcnv raleq biimt
      crn wi brin brxp anass mobii moanimv ralbiia syl6bb syl5bb pm5.32i r19.26
      syl6rbbr reu5 ralbii 3bitr2i ) ECDFZGZHZDIVKUAZVKUBZDJZKVLVJUMZDJZKZATZBT
      ZELZACUCZBDMZVKDUDVPVNVLVOVMDVJUEUFUGVPVLKZVTACUHZVRCNZVTKZAOZKZBDMZVQWBV
      PWGBDMZKWDBDMZWJKWCWIVPWKWJABCDEUIPVPVLWJVLVRVSVJLZAOZBVOMZVPWJABVJUJVPWN
      WMBDMWJWMBVODUKWMWGBDVSDNZWGWOWGUNZWMWOWGULWMWOWFKZAOWPWLWQAWLVTVRVSVILZK
      ZWQVRVSEVIUOWSWOWEKZVTKZWQWSWRVTKXAVTWRQWRWTVTWRWEWOKWTVRVSCDUPWEWOQRPRWO
      WEVTUQRRURWOWFAUSRVEUTVAVBVCWDWGBDVDSVLVPQWAWHBDVTACVFVGSVH $.
      $( [5-Mar-2007] $)

    $( Two ways of stating that ` A ` is one-to-one (but not necessarily a
       function).  Each side is equivalent to Definition 6.4(3) of
       [TakeutiZaring] p. 24, who use the notation "Un_2 (A)" for one-to-one
       (but not necessarily a function).  (Contributed by ?who?,
       17-Jan-2006.) $)
    fun11 $p |- ( ( Fun `' `' A /\ Fun `' A ) <->
         A. x A. y A. z A. w ( ( x A y /\ z A w ) -> ( x = z <-> y = w ) ) ) $=
      ( cv wbr wa wceq wal ccnv wfun bi2.04 anbi12i 2albii 19.26-2 alcom 3bitri
      wi albii dfbi2 imbi2i pm4.76 ax-17 breq1 anbi1d imbi1d equsal bitri breq2
      wb 3bitr2i bitr2i wmo fun2cnv mo4 funcnv2 alrot4 3bitr4i ) CFZBFZEGZUTDFZ
      EGZHZVAVCIZSZBJZDJZCJZAFZVCEGZVDHZVKUTIZSZAJZDJCJZHZVKVAEGZVDHZVNVFUKZSZB
      JAJZDJCJZEKZKLZWELZHWBDJCJBJAJWDVHVPHZDJCJVRWCWHCDWCVNVTVFSZSZVFVTVNSZSZH
      ZBJAJWJBJAJZWLBJZAJZHWHWBWMABWBVTVNVFSZVFVNSZHZSVTWQSZVTWRSZHWMWAWSVTVNVF
      UAUBVTWQWRUCWTWJXAWLVTVNVFMVTVFVNMNULOWJWLABPWNVHWPVPWNWJAJZBJVHWJABQXBVG
      BWIVGACVGAUDVNVTVEVFVNVSVBVDVKUTVAEUEUFUGUHTUIWOVOAWKVOBDVOBUDVFVTVMVNVFV
      SVLVDVAVCVKEUJUFUGUHTNROVHVPCDPUMWFVJWGVQWFVBBUNZCJVGDJBJZCJVJCBEUOXCXDCV
      BVDBDVAVCUTEUJUPTXDVICVGBDQTRWGVLAUNZDJVOCJAJZDJZVQADEUQXEXFDVLVDACVKUTVC
      EUEUPTXGVPCJZDJVQXFXHDVOACQTVPDCQUIRNWBABCDURUS $.
      $( [17-Jan-2006] $)

    $( The union of a chain (with respect to inclusion) of functions is a
       function.  (Contributed by ?who?, 10-Aug-2004.) $)
    fununi $p |- ( A. f e. A ( Fun f /\ A. g e. A ( f C_ g \/ g C_ f ) ) ->
                 Fun U. A ) $=
      ( vx vy vz vw vv cv wfun wss wo wral wa wrel wcel wceq wi wal wex simprbi
      cuni cop funrel adantr ralimi reluni sylibr r19.28av ssel anim1d ax-4 sps
      dffun4 3syl syl9r adantl anim2d jaod imp funeq sseq1 sseq2 orbi12d anbi2d
      anbi12d cbvral2v ralcom orcom syl5bb bitri anbi12i anidm anandir r19.26-2
      2ralbii bitr2i 3bitr3i eluni eeanv an4 ancom 2exbii 3bitr2i imbi1i 19.23v
      albii impexp 2albii bitr4i 3bitr3ri 3imtr4i alrimiv alrimivv syl sylanbrc
      r2al ) BIZJZWRCIZKZWTWRKZLZCAMZNZBAMZAUBZOZDIZEIZUCZXGPZXIFIZUCZXGPZNZXJX
      MQZRZFSZESDSZXGJXFWROZBAMXHXEYABAWSYAXDWRUDUEUFBAUGUHXFWSXCNZCAMZBAMZXTXE
      YCBAWSXCCAUIUFYDXSDEYDXRFGIZJZHIZJZNZYEYGKZYGYEKZLZNZHAMZGAMZXKYEPZXNYGPZ
      NZXQRZHAMZGAMZYDXRYNYTGAYMYSHAYIYLYSYIYJYSYKYHYJYSRYFYJYRXKYGPZYQNZYHXQYJ
      YPUUBYQYEYGXKUJUKYHUUCXQRZFSZESZDSZUUEUUDYHYGOUUGDEFYGUNUAUUFUUEDUUEEULUM
      UUDFULUOUPUQYFYKYSRYHYKYRYPXNYEPZNZYFXQYKYQUUHYPYGYEXNUJURYFUUIXQRZFSZESZ
      DSZUUKUUJYFYEOUUMDEFYEUNUAUULUUKDUUKEULUMUUJFULUOUPUEUSUTUFUFYDYDNYFYLNZH
      AMGAMZYHYLNZHAMGAMZNZYDYOYDUUOYDUUQYBUUNYFYEWTKZWTYEKZLZNBCGHAAWRYEQZWSYF
      XCUVAWRYEVAUVBXAUUSXBUUTWRYEWTVBWRYEWTVCVDVFWTYGQZUVAYLYFUVCUUSYJUUTYKWTY
      GYEVCWTYGYEVBVDVEVGYDYBBAMCAMUUQYBBCAAVHYBUUPWSYEWRKZWRYEKZLZNCBGHAAWTYEQ
      ZXCUVFWSXCXBXALUVGUVFXAXBVIUVGXBUVDXAUVEWTYEWRVBWTYEWRVCVDVJVEWRYGQZWSYHU
      VFYLWRYGVAUVHUVDYJUVEYKWRYGYEVCWRYGYEVBVDVFVGVKVLYDVMYOUUNUUPNZHAMGAMUURY
      MUVIGHAAYFYHYLVNVPUUNUUPGHAAVOVQVRXRYEAPZYGAPZNZYRNZHTZGTZXQRZUUAXPUVOXQX
      PYPUVJNZGTZYQUVKNZHTZNUVQUVSNZHTGTUVOXLUVRXOUVTGXKAVSHXNAVSVLUVQUVSGHVTUW
      AUVMGHUWAYRUVLNUVMYPUVJYQUVKWAYRUVLWBVKWCWDWEUVMXQRZHSZGSZUVNXQRZGSUUAUVP
      UWCUWEGUVMXQHWFWGUWDUVLYSRZHSGSUUAUWBUWFGHUVLYRXQWHWIYSGHAAWQWJUVNXQGWFWK
      VKWLWMWNWODEFXGUNWP $.
      $( [10-Aug-2004] $)

    $( The union of a chain (with respect to inclusion) of single-rooted sets
       is single-rooted.  (See ~ funcnv for "single-rooted" definition.)
       (Contributed by ?who?, 11-Aug-2004.) $)
    funcnvuni $p |- ( A. f e. A ( Fun `' f /\ A. g e. A ( f C_ g \/ g C_ f ) )
                    -> Fun `' U. A ) $=
      ( vy vx vz vw vv cv ccnv wfun wss wo wral wa wceq wrex wi wal wcel eqeq2d
      cab cnveq cbvrexv funeqd sseq1 sseq2 orbi12d ralbidv anbi12d rspcv funeq
      biimprcd cnvss orim12i wb sseq12 ancoms syl5ibrcom exp3a syl6com rexlimdv
      cuni com23 alrimdv anim12ii syl5bi alrimiv df-ral vex eqeq1 rexbidv ralab
      elab anbi2i imbi12i albii bitr2i sylib fununi syl ciun cnvuni cnvex eqtri
      dfiun2 funeqi sylibr ) BIZJZKZWICIZLZWLWILZMZCANZOZBANZDIZEIZJZPZEAQZDUBZ
      VCZKZAVCJZKWRFIZKZXHGIZLZXJXHLZMZGXDNZOZFXDNZXFWRXHXAPZEAQZXIXJXAPZEAQZXM
      RZGSZOZRZFSZXPWRYDFXRXHHIZJZPZHAQWRYCXQYHEHAWTYFPXAYGXHWTYFUCUAUDWRYHYCHA
      YFATWRYGKZYFWLLZWLYFLZMZCANZOZYHYCRWQYNBYFAWIYFPZWKYIWPYMYOWJYGWIYFUCUEYO
      WOYLCAYOWMYJWNYKWIYFWLUFWIYFWLUGUHUIUJUKYIYHXIYMYBYHXIYIXHYGULUMYMYHYAGYM
      XTYHXMYMXSYHXMRZEAWTATYMYFWTLZWTYFLZMZXSYPRYLYSCWTAWLWTPYJYQYKYRWLWTYFUGW
      LWTYFUFUHUKYSXSYHXMYSXMXSYHOZYGXALZXAYGLZMYQUUAYRUUBYFWTUNWTYFUNUOYTXKUUA
      XLUUBYHXSXKUUAUPXHYGXJXAUQURXJXAXHYGUQUHUSUTVAVBVDVEVFVAVBVGVHXPXHXDTZXOR
      ZFSYEXOFXDVIUUDYDFUUCXRXOYCXCXRDXHFVJWSXHPXBXQEAWSXHXAVKVLVNXNYBXIXCXTXMG
      DWSXJPXBXSEAWSXJXAVKVLVMVOVPVQVRVSXDFGVTWAXGXEXGEAXAWBXEEAWCEDAXAWTEVJWDW
      FWEWGWH $.
      $( [11-Aug-2004] $)

    $( The union of a chain (with respect to inclusion) of one-to-one functions
       is a one-to-one function.  (Contributed by ?who?, 11-Aug-2004.) $)
    fun11uni $p |- ( A. f e. A ( ( Fun f /\ Fun `' f ) /\
                   A. g e. A ( f C_ g \/ g C_ f ) ) ->
                   ( Fun U. A /\ Fun `' U. A ) ) $=
      ( cv wfun ccnv wa wo wral cuni simpl anim1i ralimi fununi simpr funcnvuni
      wss syl jca ) BDZEZTFEZGZTCDZQUDTQHCAIZGZBAIZAJZEZUHFEZUGUAUEGZBAIUIUFUKB
      AUCUAUEUAUBKLMABCNRUGUBUEGZBAIUJUFULBAUCUBUEUAUBOLMABCPRS $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y F $.  $d x y G $.
    $( The intersection with a function is a function.  Exercise 14(a) of
       [Enderton] p. 53.  (The proof was shortened by Andrew Salmon,
       17-Sep-2011.)  (Contributed by ?who?, 19-Mar-2004.)  (Revised by ?who?,
       18-Sep-2011.) $)
    funin $p |- ( Fun F -> Fun ( F i^i G ) ) $=
      ( cin wss wfun wi inss1 funss ax-mp ) ABCZADAEJEFABGJAHI $.
      $( [18-Sep-2011] $) $( [19-Mar-2004] $)
  $}

  $( The restriction of a one-to-one function is one-to-one.  (Contributed by
     ?who?, 25-Mar-1998.) $)
  funres11 $p |- ( Fun `' F -> Fun `' ( F |` A ) ) $=
    ( cres wss ccnv wfun wi resss cnvss funss mp2b ) BACZBDLEZBEZDNFMFGBAHLBIMN
    JK $.
    $( [25-Mar-1998] $)

  $( The converse of a restricted function.  (Contributed by ?who?,
     27-Mar-1998.) $)
  funcnvres $p |- ( Fun `' F -> `' ( F |` A ) = ( `' F |` ( F " A ) ) ) $=
    ( ccnv wfun cima cres cdm dfima3 dfrn4 eqtri reseq2i wceq resss cnvss ax-mp
    crn wss funssres mpan2 syl5req ) BCZDZUABAEZFUABAFZCZGZFZUEUCUFUAUCUDPUFBAH
    UDIJKUBUEUAQZUGUELUDBQUHBAMUDBNOUAUERST $.
    $( [27-Mar-1998] $)

  $( Converse of a restricted identity function.  (Contributed by FL,
     4-Mar-2007.) $)
  cnvresid $p |- `' ( _I |` A ) = ( _I |` A ) $=
    ( cid ccnv wfun cres wceq cnvi eqcomi funi funeq mpbii ax-mp cima funcnvres
    imai reseq12i syl6eq ) BCZDZBAEZCZTFBRFZSRBGHUBBDSIBRJKLSUARBAMZETABNRBUCAG
    AOPQL $.
    $( [20-Feb-2007] $)

  $( The converse of a restriction of the converse of a function equals the
     function restricted to the image of its converse.  (Contributed by ?who?,
     4-May-2005.) $)
  funcnvres2 $p |- ( Fun F -> `' ( `' F |` A ) = ( F |` ( `' F " A ) ) ) $=
    ( wfun ccnv cres cima wceq funcnvcnv funcnvres syl wrel funrel dfrel2 sylib
    reseq1d eqtrd ) BCZBDZAEDZRDZRAFZEZBUAEQTCSUBGBHARIJQTBUAQBKTBGBLBMNOP $.
    $( [4-May-2005] $)

  $( The image of the preimage of a function.  (Contributed by ?who?,
     25-May-2004.) $)
  funimacnv $p |- ( Fun F -> ( F " ( `' F " A ) ) = ( A i^i ran F ) ) $=
    ( wfun ccnv cima cres crn cin funcnvres2 rneqd dfima3 syl6reqr dfrn4 ineq2i
    cdm dmres df-dm 3eqtr2ri syl6eq ) BCZBBDZAEZEZUAAFZDZGZABGZHZTUFBUBFZGUCTUE
    UIABIJBUBKLUHAUAOZHUDOUFUGUJABMNUAAPUDQRS $.
    $( [25-May-2004] $)

  $( A kind of contraposition law that infers a subclass of an image from a
     preimage subclass.  (Contributed by ?who?, 25-May-2004.) $)
  funimass1 $p |- ( ( Fun F /\ A C_ ran F ) ->
                 ( ( `' F " A ) C_ B -> A C_ ( F " B ) ) ) $=
    ( ccnv cima wss wfun crn wa imass2 funimacnv wceq dfss biimpi eqcomd sseq1d
    cin sylan9eq syl5ib ) CDAEZBFCTEZCBEZFCGZACHZFZIZAUBFTBCJUFUAAUBUCUEUAAUDQZ
    AACKUEAUGUEAUGLAUDMNORPS $.
    $( [25-May-2004] $)

  $( A kind of contraposition law that infers an image subclass from a subclass
     of a preimage.  (Contributed by ?who?, 25-May-2004.)  (Revised by ?who?,
     4-May-2007.) $)
  funimass2 $p |- ( ( Fun F /\ A C_ ( `' F " B ) ) -> ( F " A ) C_ B ) $=
    ( ccnv cima wss wfun imass2 crn cin funimacnv sseq2d inss1 sstr2 mpi syl6bi
    imp sylan2 ) ACDBEZFCGZCAEZCSEZFZUABFZASCHTUCUDTUCUABCIZJZFZUDTUBUFUABCKLUG
    UFBFUDBUEMUAUFBNOPQR $.
    $( [4-May-2007] $) $( [25-May-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( The image of a difference is the difference of images.  (Contributed by
       ?who?, 24-May-1998.) $)
    imadif $p |- ( Fun `' F ->
                 ( F " ( A \ B ) ) = ( ( F " A ) \ ( F " B ) ) ) $=
      ( vy vx cdif cima cv wcel wn wa wbr wex exbii wi wmo sylib bitri elima2
      wo ccnv wfun anandir 19.40 sylbi ax-17 hbe1 hban funmo brcnv mobii mopick
      wal sylan con2d imnan alrimi exancom alnex 3imtr3g anim2d 19.29r sylan2br
      ex syl5 andi ianor anbi2i an32 pm3.24 intnan anass biorfi 3bitr4i impbid1
      mtbir eldif anbi1i notbii anbi12i 3bitr4g eqrdv ) CUAZUBZDCABFZGZCAGZCBGZ
      FZWDEHZAIZWJBIZJZKZWJDHZCLZKZEMZWKWPKZEMZWLWPKZEMZJZKZWOWFIZWOWIIZWDWRXDW
      RWTWMWPKZEMZKZWDXDWRWSXGKZEMXIWQXJEWKWMWPUCNWSXGEUDUEWDXHXCWTWDWPWMKZEMZX
      AJZEUMZXHXCWDXLXNWDXLKZXMEWDXLEWDEUFXKEUGUHXOWLWPJZOXMXOWPWLWDWPEPZXLWPWM
      OWDWOWJWCLZEPXQDEWCUIXRWPEWOWJCUJUKQWPWMEULUNUOWLWPUPQUQVDWPWMEURXAEUSZUT
      VAVEXDWSXMKZEMZWRXCWTXNYAXSWSXMEVBVCXTWQEWSWMXPTZKWSWMKZWSXPKZTZXTWQWSWMX
      PVFXMYBWSWLWPVGVHWQYCYEWKWMWPVIYDYCYDWKWPXPKZKYFWKWPVJVKWKWPXPVLVPVMRVNNQ
      VOXEWJWEIZWPKZEMWREWOCWESYHWQEYGWNWPWJABVQVRNRXFWOWGIZWOWHIZJZKXDWOWGWHVQ
      YIWTYKXCEWOCASYJXBEWOCBSVSVTRWAWB $.
      $( [24-May-1998] $)
  $}

  $( The image of an intersection is the intersection of images.  (Contributed
     by Paul Chapman, 11-Apr-2009.) $)
  imain $p |- ( Fun `' F ->
                ( F " ( A i^i B ) ) = ( ( F " A ) i^i ( F " B ) ) ) $=
    ( ccnv wfun cdif cima cin imadif difeq2d eqtrd dfin4 imaeq2i 3eqtr4g ) CDEZ
    CAABFZFZGZCAGZSCBGZFZFZCABHZGSTHORSCPGZFUBAPCIOUDUASABCIJKUCQCABLMSTLN $.
    $( [11-Apr-2009] $)

  $( Equality theorem for function predicate with domain.  (Contributed by
     ?who?, 1-Aug-1994.) $)
  fneq1 $p |- ( F = G -> ( F Fn A <-> G Fn A ) ) $=
    ( wceq wfun cdm wa wfn funeq dmeq eqeq1d anbi12d df-fn 3bitr4g ) BCDZBEZBFZ
    ADZGCEZCFZADZGBAHCAHOPSRUABCIOQTABCJKLBAMCAMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for function predicate with domain.  (Contributed by
     ?who?, 1-Aug-1994.) $)
  fneq2 $p |- ( A = B -> ( F Fn A <-> F Fn B ) ) $=
    ( wceq wfun cdm wa wfn eqeq2 anbi2d df-fn 3bitr4g ) ABDZCEZCFZADZGNOBDZGCAH
    CBHMPQNABOIJCAKCBKL $.
    $( [1-Aug-1994] $)

  ${
    fneq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq1d $p |- ( ph -> ( F Fn A <-> G Fn A ) ) $=
      ( wceq wfn wb fneq1 syl ) ACDFCBGDBGHEBCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq2d $p |- ( ph -> ( F Fn A <-> F Fn B ) ) $=
      ( wceq wfn wb fneq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq12d.1 $e |- ( ph -> F = G ) $.
    fneq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       ?who?, 26-Jun-2011.) $)
    fneq12d $p |- ( ph -> ( F Fn A <-> G Fn B ) ) $=
      ( wfn fneq1d fneq2d bitrd ) ADBHEBHECHABDEFIABCEGJK $.
      $( [26-Jun-2011] $)
  $}

  ${
    fneq1i.1 $e |- F = G $.
    $( Equality inference for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq1i $p |- ( F Fn A <-> G Fn A ) $=
      ( wceq wfn wb fneq1 ax-mp ) BCEBAFCAFGDABCHI $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq2i.1 $e |- A = B $.
    $( Equality inference for function predicate with domain.  (Contributed by
       ?who?, 4-Sep-2011.) $)
    fneq2i $p |- ( F Fn A <-> F Fn B ) $=
      ( wceq wfn wb fneq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [4-Sep-2011] $)
  $}


  ${
    nffn.1 $e |- F/_ x F $.
    nffn.2 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for a function with domain.
       (Contributed by NM, 30-Jan-2004.) $)
    nffn $p |- F/ x F Fn A $=
      ( wfn wfun cdm wceq wa df-fn nffun nfdm nfeq nfan nfxfr ) CBFCGZCHZBIZJAC
      BKQSAACDLARBACDMENOP $.
  $}

  $( A function with domain is a function.  (Contributed by ?who?,
     1-Aug-1994.) $)
  fnfun $p |- ( F Fn A -> Fun F ) $=
    ( wfn wfun cdm wceq df-fn simplbi ) BACBDBEAFBAGH $.
    $( [1-Aug-1994] $)

  $( A function with domain is a relation.  (Contributed by ?who?,
     1-Aug-1994.) $)
  fnrel $p |- ( F Fn A -> Rel F ) $=
    ( wfn wfun wrel fnfun funrel syl ) BACBDBEABFBGH $.
    $( [1-Aug-1994] $)

  $( The domain of a function.  (Contributed by ?who?, 2-Aug-1994.) $)
  fndm $p |- ( F Fn A -> dom F = A ) $=
    ( wfn wfun cdm wceq df-fn simprbi ) BACBDBEAFBAGH $.
    $( [2-Aug-1994] $)

  ${
    funfni.1 $e |- ( ( Fun F /\ B e. dom F ) -> ph ) $.
    $( Inference to convert a function and domain antecedent.  (Contributed by
       ?who?, 22-Apr-2004.) $)
    funfni $p |- ( ( F Fn A /\ B e. A ) -> ph ) $=
      ( wfn wcel wa wfun cdm fnfun adantr fndm eleq2d biimpar syl2anc ) DBFZCBG
      ZHDIZCDJZGZAQSRBDKLQUARQTBCBDMNOEP $.
      $( [22-Apr-2004] $)
  $}

  $( A function has a unique domain.  (Contributed by ?who?, 11-Aug-1994.) $)
  fndmu $p |- ( ( F Fn A /\ F Fn B ) -> A = B ) $=
    ( wfn cdm fndm sylan9req ) CADCBDACEBACFBCFG $.
    $( [11-Aug-1994] $)

  $( The first argument of binary relation on a function belongs to the
     function's domain.  (Contributed by ?who?, 7-May-2004.) $)
  fnbr $p |- ( ( F Fn A /\ B F C ) -> B e. A ) $=
    ( wfn cdm wceq wbr wcel fndm wa breldm adantl simpl eleqtrd sylan ) DAEDFZA
    GZBCDHZBAIADJRSKBQASBQIRBCDLMRSNOP $.
    $( [7-May-2004] $)

  $( The first argument of an ordered pair in a function belongs to the
     function's domain.  (Contributed by ?who?, 8-Aug-1994.)  (Revised by
     ?who?, 25-Mar-2007.) $)
  fnop $p |- ( ( F Fn A /\ <. B , C >. e. F ) -> B e. A ) $=
    ( cop wcel wfn wbr df-br fnbr sylan2br ) BCEDFDAGBCDHBAFBCDIABCDJK $.
    $( [25-Mar-2007] $) $( [8-Aug-1994] $)

  ${
    $d x y F $.  $d x y B $.  $d x A $.
    $( There is exactly one value of a function.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?, 22-Apr-2004.)
       (Revised by ?who?, 18-Sep-2011.) $)
    fneu $p |- ( ( F Fn A /\ B e. A ) -> E! y B F y ) $=
      ( vx cv wbr weu cdm wcel wfun wceq breq1 eubidv imbi2d wex eldm wmo funmo
      wi exmoeu2 syl5ib sylbi vtoclga impcom funfni ) CAFZDGZAHZBCDCDIZJDKZUIUK
      EFZUGDGZAHZTZUKUITECUJULCLZUNUIUKUPUMUHAULCUGDMNOULUJJUMAPZUOAULDQUKUMARU
      QUNEADSUMAUAUBUCUDUEUF $.
      $( [18-Sep-2011] $) $( [22-Apr-2004] $)

    $( There is exactly one value of a function.  (Contributed by ?who?,
       7-Nov-1995.) $)
    fneu2 $p |- ( ( F Fn A /\ B e. A ) -> E! y <. B , y >. e. F ) $=
      ( wfn wcel wa cv wbr weu cop fneu df-br eubii sylib ) DBECBFGCAHZDIZAJCPK
      DFZAJABCDLQRACPDMNO $.
      $( [7-Nov-1995] $)
  $}

  $( The union of two functions with disjoint domains.  (Contributed by ?who?,
     22-Sep-2004.) $)
  fnun $p |- ( ( ( F Fn A /\ G Fn B ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) Fn ( A u. B ) ) $=
    ( wfn wa cin c0 wceq cun wfun cdm wi df-fn ineq12 eqeq1d funun syl6bir dmun
    anbi2d uneq12 syl5eq jctird syl6ibr exp3a impcom an4s syl2anb imp ) CAEZDBE
    ZFABGZHIZCDJZABJZEZUJCKZCLZAIZFDKZDLZBIZFUMUPMZUKCANDBNUQUTUSVBVCUSVBFZUQUT
    FZVCVDVEUMUPVDVEUMFZUNKZUNLZUOIZFUPVDVFVGVIVDVFVEURVAGZHIZFVGVDVKUMVEVDVJUL
    HURAVABOPTCDQRVDVHURVAJUOCDSURAVABUAUBUCUNUONUDUEUFUGUHUI $.
    $( [22-Sep-2004] $)

  ${
    $d X x y $.  $d Y y $.
    fnunop.x $e |- ( ph -> X e. _V ) $.
    fnunop.y $e |- ( ph -> Y e. _V ) $.
    fnunop.f $e |- ( ph -> F Fn D ) $.
    fnunop.g $e |- G = ( F u. { <. X , Y >. } ) $.
    fnunop.e $e |- E = ( D u. { X } ) $.
    fnunop.d $e |- ( ph -> -. X e. D ) $.
    $( Extension of a function with a new ordered pair.  (Contributed by NM,
       28-Sep-2013.) $)
    fnunsn $p |- ( ph -> G Fn E ) $=
      ( vx vy cop csn wfn wceq cvv cun cin c0 wcel cv opeq1 sneqd fneq12d opeq2
      sneq fneq1d vex fnsn vtocl2g syl2anc disjsn sylibr syl21anc fneq1i fneq2i
      wn fnun bitri ) ADFGPZQZUAZBFQZUAZRZECRZADBRVEVGRZBVGUBUCSZVIJAFTUDGTUDVK
      HINUEZOUEZPZQZVMQZRFVNPZQZVGRVKNOFGTTVMFSZVQVGVPVSVTVOVRVMFVNUFUGVMFUJUHV
      NGSZVGVSVEWAVRVDVNGFUIUGUKVMVNNULOULUMUNUOAFBUDVAVLMBFUPUQBVGDVEVBURVJVFC
      RVICEVFKUSCVHVFLUTVCUQ $.
      $( [28-Sep-2013] $)
  $}

  $( Composition of two functions.  (Contributed by ?who?, 22-May-2006.) $)
  fnco $p |- ( ( F Fn A /\ G Fn B /\ ran G C_ A ) -> ( F o. G ) Fn B ) $=
    ( wfn crn wss w3a ccom wfun cdm wceq fnfun funco syl2an 3adant3 fndm sseq2d
    wa biimpar dmcosseq syl 3adant2 3ad2ant2 eqtrd df-fn sylanbrc ) CAEZDBEZDFZ
    AGZHZCDIZJZUMKZBLUMBEUHUIUNUKUHCJDJUNUIACMBDMCDNOPULUODKZBUHUKUOUPLZUIUHUKS
    UJCKZGZUQUHUSUKUHURAUJACQRTCDUAUBUCUIUHUPBLUKBDQUDUEUMBUFUG $.
    $( [22-May-2006] $)

  $( A function does not change when restricted to its domain.  (Contributed by
     ?who?, 5-Sep-2004.) $)
  fnresdm $p |- ( F Fn A -> ( F |` A ) = F ) $=
    ( wfn wrel cdm wss cres wceq fnrel fndm eqimss syl relssres syl2anc ) BACZB
    DBEZAFZBAGBHABIOPAHQABJPAKLBAMN $.
    $( [5-Sep-2004] $)

  $( A function restricted to a class disjoint with its domain is empty.
     (Contributed by ?who?, 23-Sep-2004.) $)
  fnresdisj $p |- ( F Fn A -> ( ( A i^i B ) = (/) <-> ( F |` B ) = (/) ) ) $=
    ( cres c0 wceq cdm wfn wrel wb relres reldm0 ax-mp dmres incom eqtri ineq1d
    cin fndm syl5eq eqeq1d syl5rbb ) CBDZEFZUCGZEFZCAHZABRZEFUCIUDUFJCBKUCLMUGU
    EUHEUGUECGZBRZUHUEBUIRUJCBNBUIOPUGUIABACSQTUAUB $.
    $( [23-Sep-2004] $)

  $( Membership in two functions restricted by each other's domain.
     (Contributed by ?who?, 8-Aug-1994.) $)
  2elresin $p |- ( ( F Fn A /\ G Fn B ) ->
                 ( ( <. x , y >. e. F /\ <. x , z >. e. G ) <->
                   ( <. x , y >. e. ( F |` ( A i^i B ) ) /\
                     <. x , z >. e. ( G |` ( A i^i B ) ) ) ) ) $=
    ( wfn wa cv cop wcel cin cres fnop anim12i opelres simplbi2com resss sseli
    wi an4 elin 3imtr4i anim12d syl ex pm2.43d impbid1 ) FDHZGEHZIZAJZBJZKZFLZU
    MCJZKZGLZIZUOFDEMZNZLZURGVANZLZIZULUTVFULUTUTVFUAZULUTIZUMVALZVGUJUPIZUKUSI
    ZIUMDLZUMELZIVHVIVJVLVKVMDUMUNFOEUMUQGOPUJUKUPUSUBUMDEUCUDVIUPVCUSVEVCUPVIU
    MUNFVAQRVEUSVIUMUQGVAQRUEUFUGUHVCUPVEUSVBFUOFVASTVDGURGVASTPUI $.
    $( [8-Aug-1994] $)

  $( Restriction of a function with a subclass of its domain.  (Contributed by
     ?who?, 10-Oct-2007.) $)
  fnssresb $p |- ( F Fn A -> ( ( F |` B ) Fn B <-> B C_ A ) ) $=
    ( cres wfn wfun cdm wceq wa wss df-fn fnfun funres biantrurd ssdmres sseq2d
    syl fndm syl5bbr bitr3d syl5bb ) CBDZBEUBFZUBGBHZIZCAEZBAJZUBBKUFUDUEUGUFUC
    UDUFCFUCACLBCMQNUDBCGZJUFUGBCOUFUHABACRPSTUA $.
    $( [10-Oct-2007] $)

  $( Restriction of a function with a subclass of its domain.  (Contributed by
     ?who?, 2-Aug-1994.)  (Revised by ?who?, 25-Sep-2004.) $)
  fnssres $p |- ( ( F Fn A /\ B C_ A ) -> ( F |` B ) Fn B ) $=
    ( wfn cres wss fnssresb biimpar ) CADCBEBDBAFABCGH $.
    $( [25-Sep-2004] $) $( [2-Aug-1994] $)

  $( Restriction of a function's domain with an intersection.  (Contributed by
     ?who?, 9-Aug-1994.) $)
  fnresin1 $p |- ( F Fn A -> ( F |` ( A i^i B ) ) Fn ( A i^i B ) ) $=
    ( wfn cin wss cres inss1 fnssres mpan2 ) CADABEZAFCKGKDABHAKCIJ $.
    $( [9-Aug-1994] $)

  $( Restriction of a function's domain with an intersection.  (Contributed by
     ?who?, 9-Aug-1994.) $)
  fnresin2 $p |- ( F Fn A -> ( F |` ( B i^i A ) ) Fn ( B i^i A ) ) $=
    ( wfn cin wss cres inss2 fnssres mpan2 ) CADBAEZAFCKGKDBAHAKCIJ $.
    $( [9-Aug-1994] $)

  $( Functionality and domain of restricted identity.  (Contributed by ?who?,
     27-Aug-2004.) $)
  fnresi $p |- ( _I |` A ) Fn A $=
    ( cid cres wfn wfun cdm wceq funi funres ax-mp dmresi df-fn mpbir2an ) BACZ
    ADNEZNFAGBEOHABIJAKNALM $.
    $( [27-Aug-2004] $)

  $( The image of a function's domain is its range.  (The proof was shortened
     by Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?, 4-Nov-2004.)
     (Revised by ?who?, 18-Sep-2011.) $)
  fnima $p |- ( F Fn A -> ( F " A ) = ran F ) $=
    ( wfn cima cres crn dfima3 fnresdm rneqd syl5eq ) BACZBADBAEZFBFBAGKLBABHIJ
    $.
    $( [18-Sep-2011] $) $( [4-Nov-2004] $)

  ${
    $d x y F $.
    $( A function with empty domain is empty.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?, 15-Apr-1998.)
       (Revised by ?who?, 18-Sep-2011.) $)
    fn0 $p |- ( F Fn (/) <-> F = (/) ) $=
      ( wfn wceq wrel cdm fnrel fndm reldm0 biimpar syl2anc wfun fun0 dm0 df-fn
      c0 mpbir2an fneq1 mpbiri impbii ) AOBZAOCZTADZAEOCZUAOAFOAGUBUAUCAHIJUATO
      OBZUDOKOEOCLMOONPOAOQRS $.
      $( [18-Sep-2011] $) $( [15-Apr-1998] $)
  $}

  $( A class that is disjoint with the domain of a function has an empty image
     under the function.  (Contributed by FL, 24-Jan-2007.) $)
  fnimadisj $p |- ( ( F Fn A /\ ( A i^i C ) = (/) ) -> ( F " C ) = (/) ) $=
    ( wfn cin c0 wceq wa cdm cima fndm ineq1d eqeq1d biimpar imadisj sylibr ) C
    ADZABEZFGZHCIZBEZFGZCBJFGQUBSQUARFQTABACKLMNCBOP $.
    $( [23-Jan-2007] $)

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    iunfopab.1 $e |- B e. _V $.
    $( Two ways to express a function as a class of ordered pairs.  (The proof
       was shortened by Andrew Salmon, 17-Sep-2011.)  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Sep-2011.)
       (Contributed by ?who?, 19-Dec-2008.) $)
    iunfopab $p |- U_ x e. A { <. x , B >. }
                    = { <. x , y >. | ( x e. A /\ y = B ) } $=
      ( vz cv cop csn wcel wrex cab wceq wa wex ciun copab df-rex vex exbii
      elsn anbi2i opeq2 eqeq2d anbi2d ceqsexv an13 3bitr2i bitri df-iun df-opab
      abbii 3eqtr4i ) FGZAGZDHZIZJZACKZFLUNUOBGZHZMZUOCJZUTDMZNZNZBOZAOZFLACUQP
      VEABQUSVHFUSVCURNZAOVHURACRVIVGAVIVCUNUPMZNZVDVCVBNZNZBOVGURVJVCUNUPFSUAU
      BVLVKBDEVDVBVJVCVDVAUPUNUTDUOUCUDUEUFVMVFBVDVCVBUGTUHTUIULAFCUQUJVEABFUKU
      M $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d z F $.  $d x y z w $.
    fnopabg.1 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Functionality and domain of an ordered-pair class abstraction.
       (Contributed by ?who?, 30-Jan-2004.) $)
    fnopabg $p |- ( A. x e. A E! y ph <-> F Fn A ) $=
      ( vz vw weu wral wfn cv wcel wa wceq wmo wi sylibr syl ax-17 wfun cdm wal
      copab hbra1 rsp eumo imim2i moanimv alrimi funopab wex euex dmopab3 sylib
      ralimi df-fn sylanbrc fneq1i hbopab1 hbxfreq hbfn cop fneu2 hbopab2 opeq2
      hbel eleq1d cbveu eleq2i opabid bitri eubii euanv simprbi ralrimi impbii
      ex ) ACIZBDJZEDKZVTBLZDMZANZBCUDZDKZWAVTWEUAZWEUBDOZWFVTWDCPZBUCWGVTWIBVS
      BDUEVTWCVSQZWIVSBDUFWJWCACPZQWIVSWKWCACUGUHWCACUIRSUJWDBCUKRVTACULZBDJWHV
      SWLBDACUMUPABCDUNUOWEDUQURDEWEFUSRWAVSBDBGDEBGEWEFWDBCGUTVAGLZDMBTVBWAWCV
      SWAWCNZWBCLZVCZEMZCIZVSWNWBWMVCZEMZGIWRGDWBEVDWTWQGCCHGWSEHLWSMCTCGEWEFWD
      BCGVEVAVGWQGTWMWOOWSWPEWMWOWBVFVHVIUOWRWCVSWRWDCIWCVSNWQWDCWQWPWEMWDEWEWP
      FVJWDBCVKVLVMWCACVNVLVOSVRVPVQ $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fnopab2g.1 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Functionality and domain of an ordered-pair class abstraction.
       (Contributed by ?who?, 23-Mar-2006.) $)
    fnopab2g $p |- ( A. x e. A B e. _V <-> F Fn A ) $=
      ( cvv wcel wral cv wceq weu wfn eueq ralbii fnopabg bitri ) DGHZACIBJDKZB
      LZACIECMRTACBDNOSABCEFPQ $.
      $( [23-Mar-2006] $)
  $}

  ${
    $d x y A $.
    fnopab.1 $e |- ( x e. A -> E! y ph ) $.
    fnopab.2 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Functionality and domain of an ordered-pair class abstraction.
       (Contributed by ?who?, 5-Mar-1996.) $)
    fnopab $p |- F Fn A $=
      ( weu wral wfn rgen fnopabg mpbi ) ACHZBDIEDJNBDFKABCDEGLM $.
      $( [5-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fnopab2.1 $e |- B e. _V $.
    fnopab2.2 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Functionality and domain of an ordered-pair class abstraction.
       (Contributed by ?who?, 29-Jan-2004.) $)
    fnopab2 $p |- F Fn A $=
      ( cv wceq weu wcel eueq1 a1i fnopab ) BHDIZABCEOBJAHCKBDFLMGN $.
      $( [29-Jan-2004] $)

    $( Domain of an ordered-pair class abstraction that specifies a function.
       (Contributed by ?who?, 6-Sep-2005.) $)
    dmopab2 $p |- dom F = A $=
      ( wfn cdm wceq fnopab2 fndm ax-mp ) ECHEICJABCDEFGKCELM $.
      $( [6-Sep-2005] $)
  $}

  $( Equality theorem for functions.  (Contributed by ?who?, 1-Aug-1994.) $)
  feq1 $p |- ( F = G -> ( F : A --> B <-> G : A --> B ) ) $=
    ( wceq wfn crn wss wa wf fneq1 rneq sseq1d anbi12d df-f 3bitr4g ) CDEZCAFZC
    GZBHZIDAFZDGZBHZIABCJABDJQRUATUCACDKQSUBBCDLMNABCOABDOP $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions.  (Contributed by ?who?, 1-Aug-1994.) $)
  feq2 $p |- ( A = B -> ( F : A --> C <-> F : B --> C ) ) $=
    ( wceq wfn crn wss wa wf fneq2 anbi1d df-f 3bitr4g ) ABEZDAFZDGCHZIDBFZQIAC
    DJBCDJOPRQABDKLACDMBCDMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions.  (Contributed by ?who?, 1-Aug-1994.) $)
  feq3 $p |- ( A = B -> ( F : C --> A <-> F : C --> B ) ) $=
    ( wceq wfn crn wss wa wf sseq2 anbi2d df-f 3bitr4g ) ABEZDCFZDGZAHZIPQBHZIC
    ADJCBDJORSPABQKLCADMCBDMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions.  (Contributed by FL, 14-Jul-2007.)  (The
     proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
  feq23 $p |- ( ( A = C /\ B = D ) -> ( F : A --> B <-> F : C --> D ) ) $=
    ( wceq wf feq2 feq3 sylan9bb ) ACFABEGCBEGBDFCDEGACBEHBDCEIJ $.
    $( [18-Sep-2011] $) $( [14-Jul-2007] $)

  ${
    feq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for functions.  (Contributed by ?who?,
       19-Feb-2008.) $)
    feq1d $p |- ( ph -> ( F : A --> B <-> G : A --> B ) ) $=
      ( wceq wf wb feq1 syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [19-Feb-2008] $)
  $}

  ${
    feq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq2d $p |- ( ph -> ( F : A --> C <-> F : B --> C ) ) $=
      ( wceq wf wb feq2 syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    feq12d.1 $e |- ( ph -> F = G ) $.
    feq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq12d $p |- ( ph -> ( F : A --> C <-> G : B --> C ) ) $=
      ( wf feq1d feq2d bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    feq1i.1 $e |- F = G $.
    $( Equality inference for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq1i $p |- ( F : A --> B <-> G : A --> B ) $=
      ( wceq wf wb feq1 ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    feq2i.1 $e |- A = B $.
    $( Equality inference for functions.  (Contributed by ?who?,
       5-Sep-2011.) $)
    feq2i $p |- ( F : A --> C <-> F : B --> C ) $=
      ( wceq wf wb feq2 ax-mp ) ABFACDGBCDGHEABCDIJ $.
      $( [5-Sep-2011] $)
  $}

  ${
    feq23i.1 $e |- A = C $.
    feq23i.2 $e |- B = D $.
    $( Equality inference for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq23i $p |- ( F : A --> B <-> F : C --> D ) $=
      ( wceq wf wb feq23 mp2an ) ACHBDHABEICDEIJFGABCDEKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    feq23d.1 $e |- ( ph -> A = C ) $.
    feq23d.2 $e |- ( ph -> B = D ) $.
    $( Equality deduction for functions.  (Contributed by ?who?,
       8-Jun-2013.) $)
    feq23d $p |- ( ph -> ( F : A --> B <-> F : C --> D ) ) $=
      ( wceq wf wb feq23 syl2anc ) ABDICEIBCFJDEFJKGHBCDEFLM $.
      $( [8-Jun-2013] $)
  $}


  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    nff.1 $e |- F/_ x F $.
    nff.2 $e |- F/_ x A $.
    nff.3 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for a mapping.  (Contributed by NM,
       29-Jan-2004.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nff $p |- F/ x F : A --> B $=
      ( wf wfn crn wss wa df-f nffn nfrn nfss nfan nfxfr ) BCDHDBIZDJZCKZLABCDM
      SUAAABDEFNATCADEOGPQR $.
  $}

  ${
    elimf.1 $e |- G : A --> B $.
    $( Eliminate a mapping hypothesis for the weak deduction theorem ~ dedth ,
       when a special case ` G : A --> B ` is provable, in order to convert
       ` F : A --> B ` from a hypothesis to an antecedent.  (Contributed by
       ?who?, 24-Aug-2006.) $)
    elimf $p |- if ( F : A --> B , F , G ) : A --> B $=
      ( wf cif feq1 elimhyp ) ABCFZABJCDGZFABDFCDABCKHABDKHEI $.
      $( [24-Aug-2006] $)
  $}

  $( A mapping is a function.  (Contributed by ?who?, 2-Aug-1994.) $)
  ffn $p |- ( F : A --> B -> F Fn A ) $=
    ( wf wfn crn wss df-f simplbi ) ABCDCAECFBGABCHI $.
    $( [2-Aug-1994] $)

  $( Any function is a mapping into ` _V ` .  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?, 31-Oct-1995.)
     (Revised by ?who?, 18-Sep-2011.) $)
  dffn2 $p |- ( F Fn A <-> F : A --> _V ) $=
    ( wfn crn cvv wss wa wf ssv biantru df-f bitr4i ) BACZMBDZEFZGAEBHOMNIJAEBK
    L $.
    $( [18-Sep-2011] $) $( [31-Oct-1995] $)

  $( A mapping is a function.  (Contributed by ?who?, 3-Aug-1994.) $)
  ffun $p |- ( F : A --> B -> Fun F ) $=
    ( wf wfn wfun ffn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [3-Aug-1994] $)

  $( A mapping is a relation.  (Contributed by ?who?, 3-Aug-1994.) $)
  frel $p |- ( F : A --> B -> Rel F ) $=
    ( wf wfn wrel ffn fnrel syl ) ABCDCAECFABCGACHI $.
    $( [3-Aug-1994] $)

  $( The domain of a mapping.  (Contributed by ?who?, 2-Aug-1994.) $)
  fdm $p |- ( F : A --> B -> dom F = A ) $=
    ( wf wfn cdm wceq ffn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [2-Aug-1994] $)

  ${
    fdmi.1 $e |- F : A --> B $.
    $( The domain of a mapping.  (Contributed by ?who?, 28-Jul-2008.) $)
    fdmi $p |- dom F = A $=
      ( wf cdm wceq fdm ax-mp ) ABCECFAGDABCHI $.
      $( [28-Jul-2008] $)
  $}

  $( The range of a mapping.  (Contributed by ?who?, 3-Aug-1994.) $)
  frn $p |- ( F : A --> B -> ran F C_ B ) $=
    ( wf wfn crn wss df-f simprbi ) ABCDCAECFBGABCHI $.
    $( [3-Aug-1994] $)

  $( A function maps to its range.  (Contributed by ?who?, 1-Sep-1999.) $)
  dffn3 $p |- ( F Fn A <-> F : A --> ran F ) $=
    ( wfn crn wss wa wf ssid biantru df-f bitr4i ) BACZLBDZMEZFAMBGNLMHIAMBJK
    $.
    $( [1-Sep-1999] $)

  $( Expanding the codomain of a mapping.  (The proof was shortened by Andrew
     Salmon, 17-Sep-2011.)  (Contributed by ?who?, 10-May-1998.)  (Revised by
     ?who?, 18-Sep-2011.) $)
  fss $p |- ( ( F : A --> B /\ B C_ C ) -> F : A --> C ) $=
    ( wss wf wfn crn wa sstr2 com12 anim2d df-f 3imtr4g impcom ) BCEZABDFZACDFZ
    PDAGZDHZBEZISTCEZIQRPUAUBSUAPUBTBCJKLABDMACDMNO $.
    $( [18-Sep-2011] $) $( [10-May-1998] $)

  $( Composition of two mappings.  (The proof was shortened by Andrew Salmon,
     17-Sep-2011.)  (Contributed by ?who?, 29-Aug-1999.)  (Revised by ?who?,
     18-Sep-2011.) $)
  fco $p |- ( ( F : B --> C /\ G : A --> B ) -> ( F o. G ) : A --> C ) $=
    ( wfn crn wss wa ccom wf wi fnco 3expib adantr rncoss sstr mpan adantl df-f
    jctird imp anbi12i 3imtr4i ) DBFZDGZCHZIZEAFZEGBHZIZIDEJZAFZULGZCHZIZBCDKZA
    BEKZIACULKUHUKUPUHUKUMUOUEUKUMLUGUEUIUJUMBADEMNOUGUOUEUNUFHUGUODEPUNUFCQRSU
    AUBUQUHURUKBCDTABETUCACULTUD $.
    $( [18-Sep-2011] $) $( [29-Aug-1999] $)

  $( A mapping is a class of ordered pairs.  (The proof was shortened by Andrew
     Salmon, 17-Sep-2011.)  (Contributed by ?who?, 3-Aug-1994.)  (Revised by
     ?who?, 18-Sep-2011.) $)
  fssxp $p |- ( F : A --> B -> F C_ ( A X. B ) ) $=
    ( wf cdm crn cxp wss wceq fdm eqimss syl xpss12 syl2anc wrel frel relssdmrn
    frn wi sstr2 3syl mpd ) ABCDZCEZCFZGZABGZHZCUGHZUCUDAHZUEBHUHUCUDAIUJABCJUD
    AKLABCRUDAUEBMNUCCOCUFHUHUISABCPCQCUFUGTUAUB $.
    $( [18-Sep-2011] $) $( [3-Aug-1994] $)

  $( Two ways of specifying a partial function from ` A ` to ` B ` .
     (Contributed by ?who?, 13-Nov-2007.) $)
  funssxp $p |- ( ( Fun F /\ F C_ ( A X. B ) ) <->
             ( F : dom F --> B /\ dom F C_ A ) ) $=
    ( wfun cxp wss wa cdm wf wfn funfn biimpi rnss rnxpss syl6ss anim12i sylibr
    crn df-f jca dmss dmxpss adantl ffun adantr fssxp xpss1 sylan9ss impbii ) C
    DZCABEZFZGZCHZBCIZUNAFZGZUMUOUPUMCUNJZCRZBFZGUOUJURULUTUJURCKLULUSUKRBCUKMA
    BNOPUNBCSQULUPUJULUNUKHACUKUAABUBOUCTUQUJULUOUJUPUNBCUDUEUOUPCUNBEUKUNBCUFU
    NABUGUHTUI $.
    $( [13-Nov-2007] $)

  $( A mapping is a partial function.  (Contributed by ?who?, 25-Nov-2007.) $)
  ffdm $p |- ( F : A --> B -> ( F : dom F --> B /\ dom F C_ A ) ) $=
    ( wf cdm wss fdm feq2d ibir wceq eqimss syl jca ) ABCDZCEZBCDZOAFZNPNOABCAB
    CGZHINOAJQROAKLM $.
    $( [25-Nov-2007] $)

  $( The members of an ordered pair element of a mapping belong to the
     mapping's domain and codomain.  (Contributed by ?who?, 9-Jan-2015.) $)
  opelf $p |- ( ( F : A --> B /\ <. C , D >. e. F ) ->
                ( C e. A /\ D e. B ) ) $=
    ( wf cop wcel wa cxp fssxp sseld opelxp syl6ib imp ) ABEFZCDGZEHZCAHDBHIZPR
    QABJZHSPETQABEKLCDABMNO $.
    $( [9-Jan-2015] $)

  $( The union of two functions with disjoint domains.  (Contributed by ?who?,
     22-Sep-2004.) $)
  fun $p |- ( ( ( F : A --> C /\ G : B --> D ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) : ( A u. B ) --> ( C u. D ) ) $=
    ( cin c0 wceq wf wa cun wfn crn wss fnun expcom wi rnun df-f unss12 anim12d
    syl5eqss a1i anbi12i an4 bitri 3imtr4g impcom ) ABGHIZACEJZBDFJZKZABLZCDLZE
    FLZJZUJEAMZFBMZKZENZCOZFNZDOZKZKZUPUNMZUPNZUOOZKUMUQUJUTVGVEVIUTUJVGABEFPQV
    EVIRUJVEVHVAVCLUOEFSVACVCDUAUCUDUBUMURVBKZUSVDKZKVFUKVJULVKACETBDFTUEURVBUS
    VDUFUGUNUOUPTUHUI $.
    $( [22-Sep-2004] $)

  $( Composition of two functions.  (Contributed by ?who?, 22-May-2006.) $)
  fnfco $p |- ( ( F Fn A /\ G : B --> A ) -> ( F o. G ) Fn B ) $=
    ( wf wfn crn wss wa ccom df-f fnco 3expb sylan2b ) BADECAFZDBFZDGAHZICDJBFZ
    BADKOPQRABCDLMN $.
    $( [22-May-2006] $)

  $( Restriction of a function with a subclass of its domain.  (Contributed by
     ?who?, 23-Sep-2004.) $)
  fssres $p |- ( ( F : A --> B /\ C C_ A ) -> ( F |` C ) : C --> B ) $=
    ( wf wss cres wfn crn df-f fnssres resss rnss ax-mp sstr mpan anim12i an32s
    wa sylanb sylibr ) ABDEZCAFZSDCGZCHZUDIZBFZSZCBUDEUBDAHZDIZBFZSUCUHABDJUIUC
    UKUHUIUCSUEUKUGACDKUFUJFZUKUGUDDFULDCLUDDMNUFUJBOPQRTCBUDJUA $.
    $( [23-Sep-2004] $)

  $( Restriction of a restricted function with a subclass of its domain.
     (Contributed by ?who?, 21-Jul-2005.) $)
  fssres2 $p |- ( ( ( F |` A ) : A --> B /\ C C_ A ) ->
                ( F |` C ) : C --> B ) $=
    ( cres wf wss wa fssres wb resabs1 feq1d adantl mpbid ) ABDAEZFZCAGZHCBOCEZ
    FZCBDCEZFZABCOIQSUAJPQCBRTDCAKLMN $.
    $( [21-Jul-2005] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Composition of a mapping and restricted identity.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?,
       13-Dec-2003.)  (Revised by ?who?, 18-Sep-2011.) $)
    fcoi1 $p |- ( F : A --> B -> ( F o. ( _I |` A ) ) = F ) $=
      ( wf wfn cid cres ccom wceq ffn wfun cdm wa df-fn wss eqimss ccnv reseq1i
      cnvi syl cnveqi cnvresid eqtr2i coeq2i cores2 syl5eq wrel sylan9eqr sylbi
      funrel coi1 ) ABCDCAEZCFAGZHZCIZABCJULCKZCLZAIZMUOCANURUPUNCFHZCURUQAOZUN
      USIUQAPUTUNCFQZAGZQZHUSUMVCCVCUMQUMVBUMVAFASRUAAUBUCUDCFAUEUFTUPCUGUSCICU
      JCUKTUHUIT $.
      $( [18-Sep-2011] $) $( [13-Dec-2003] $)

    $( Composition of restricted identity and a mapping.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?,
       13-Dec-2003.)  (Revised by ?who?, 18-Sep-2011.) $)
    fcoi2 $p |- ( F : A --> B -> ( ( _I |` B ) o. F ) = F ) $=
      ( wf wfn crn wss wa cid cres ccom wceq df-f cores wrel coi2 syl sylan9eqr
      fnrel sylbi ) ABCDCAEZCFBGZHIBJCKZCLABCMUBUAUCICKZCICBNUACOUDCLACSCPQRT
      $.
      $( [18-Sep-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d y C $.
    $( There is exactly one value of a function in its codomain.  (Contributed
       by ?who?, 10-Dec-2003.) $)
    feu $p |- ( ( F : A --> B /\ C e. A ) -> E! y e. B <. C , y >. e. F ) $=
      ( wf wcel wa cv cop weu wreu wfn ffn fneu2 sylan wb opelf simprd ex mpbid
      pm4.71rd eubidv adantr df-reu sylibr ) BCEFZDBGZHZAIZCGZDUJJEGZHZAKZULACL
      UIULAKZUNUGEBMUHUOBCENABDEOPUGUOUNQUHUGULUMAUGULUKUGULUKUGULHUHUKBCDUJERS
      TUBUCUDUAULACUEUF $.
      $( [10-Dec-2003] $)
  $}

  ${
    $d x y F $.  $d x y A $.  $d x y B $.
    $( The converse of a restriction of a function.  (Contributed by ?who?,
       26-Mar-1998.) $)
    fcnvres $p |- ( F : A --> B -> `' ( F |` A ) = ( `' F |` B ) ) $=
      ( vy vx wf cres ccnv relcnv relres cv cop wa wbr wb df-br opelcnv opelres
      wcel bitri wfn ffn fnbr sylan crn wss frn brelrn syl2an sylan2br pm5.32da
      ssel2 2thd anbi1i 3bitr4g eqrelrdv ) ABCFZDECAGZHZCHZBGZURIUTBJUQEKZDKZLZ
      CSZVBASZMZVEVCBSZMZVCVBLZUSSZVJVASZUQVEVFVHVEUQVBVCCNZVFVHOVBVCCPUQVMMVFV
      HUQCAUAVMVFABCUBAVBVCCUCUDUQCUEZBUFVCVNSVHVMABCUGVBVCCUHVNBVCULUIUMUJUKVK
      VDURSVGVCVBURQVBVCCARTVLVJUTSZVHMVIVCVBUTBRVOVEVHVCVBCQUNTUOUP $.
      $( [26-Mar-1998] $)
  $}

  $( The preimage of a class disjoint with a mapping's codomain is empty.
     (Contributed by FL, 24-Jan-2007.) $)
  fimacnvdisj $p |- ( ( F : A --> B /\ ( B i^i C ) = (/) ) ->
    ( `' F " C ) = (/) ) $=
    ( wf cin c0 wceq wa ccnv cdm cima wss crn dfrn4 frn adantr syl5eqssr ssdisj
    sylancom imadisj sylibr ) ABDEZBCFGHZIZDJZKZCFGHZUFCLGHUCUDUGBMUHUEUGDNZBDO
    UCUIBMUDABDPQRUGBCSTUFCUAUB $.
    $( [23-Jan-2007] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    fint.1 $e |- B =/= (/) $.
    $( Function into an intersection.  (The proof was shortened by Andrew
       Salmon, 17-Sep-2011.)  (Contributed by ?who?, 14-Oct-1999.)  (Revised by
       ?who?, 18-Sep-2011.) $)
    fint $p |- ( F : A --> |^| B <-> A. x e. B F : A --> x ) $=
      ( wfn crn cint wss wa cv wral wf ssint anbi2i c0 wne wb r19.28zv df-f
      ax-mp bitr4i ralbii 3bitr4i ) DBFZDGZCHZIZJZUEUFAKZIZJZACLZBUGDMBUJDMZACL
      UIUEUKACLZJZUMUHUOUEAUFCNOCPQUMUPREUEUKACSUAUBBUGDTUNULACBUJDTUCUD $.
      $( [18-Sep-2011] $) $( [14-Oct-1999] $)
  $}

  $( Mapping into an intersection.  (The proof was shortened by Andrew Salmon,
     17-Sep-2011.)  (Contributed by ?who?, 14-Sep-1999.)  (Revised by ?who?,
     18-Sep-2011.) $)
  fin $p |- ( F : A --> ( B i^i C ) <-> ( F : A --> B /\ F : A --> C ) ) $=
    ( wfn crn cin wss wa wf ssin anbi2i anandi bitr3i df-f anbi12i 3bitr4i ) DA
    EZDFZBCGZHZIZRSBHZIZRSCHZIZIZATDJABDJZACDJZIUBRUCUEIZIUGUJUARSBCKLRUCUEMNAT
    DOUHUDUIUFABDOACDOPQ $.
    $( [18-Sep-2011] $) $( [14-Sep-1999] $)

  $( If a mapping is a set, its domain is a set.  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?, 27-Aug-2006.)
     (Revised by ?who?, 18-Sep-2011.) $)
  dmfex $p |- ( ( F e. C /\ F : A --> B ) -> A e. _V ) $=
    ( wf wcel cvv cdm wceq wi fdm dmexg eleq1 syl5ib syl impcom ) ABDEZDCFZAGFZ
    QDHZAIZRSJABDKRTGFUASDCLTAGMNOP $.
    $( [18-Sep-2011] $) $( [27-Aug-2006] $)

  $( The empty function.  (Contributed by ?who?, 14-Aug-1999.) $)
  f0 $p |- (/) : (/) --> A $=
    ( c0 wfn crn wss wfun cdm wceq fun0 dm0 df-fn mpbir2an rn0 0ss eqsstri df-f
    wf ) BABQBBCZBDZAERBFBGBHIJBBKLSBAMANOBABPL $.
    $( [14-Aug-1999] $)

  $( A class is a function with empty codomain iff it and its domain are
     empty.  (Contributed by ?who?, 10-Dec-2003.) $)
  f00 $p |- ( F : A --> (/) <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wf wceq wa wfn wfun cdm ffun crn wss frn ss0 syl dm0rn0 df-fn sylanbrc
    sylibr fn0 sylib fdm eqtr3d jca f0 feq1 feq2 sylan9bb mpbiri impbii ) ACBDZ
    BCEZACEZFZUKULUMUKBCGZULUKBHBIZCEZUOACBJUKBKZCEZUQUKURCLUSACBMURNOBPSZBCQRB
    TUAUKUPACACBUBUTUCUDUNUKCCCDZCUEULUKACCDUMVAACBCUFACCCUGUHUIUJ $.
    $( [10-Dec-2003] $)

  ${
    $d x y A $.  $d x y B $.
    fconst.1 $e |- B e. _V $.
    $( A cross product with a singleton is a constant function.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.)  (Contributed by ?who?,
       14-Aug-1999.)  (Revised by ?who?, 18-Sep-2011.) $)
    fconst $p |- ( A X. { B } ) : A --> { B } $=
      ( vx vy csn cxp wf wfn crn wss fconstopab fnopab2 rnxpss df-f mpbir2an )
      ABFZAQGZHRAIRJQKDEABRCDEABLMAQNAQROP $.
      $( [18-Sep-2011] $) $( [14-Aug-1999] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A cross product with a singleton is a constant function.  (Contributed
       by ?who?, 19-Oct-2004.) $)
    fconstg $p |- ( B e. V -> ( A X. { B } ) : A --> { B } ) $=
      ( vx cv csn cxp wf wceq sneq xpeq2d feq1 feq3 sylan9bb syl2anc vex fconst
      wb vtoclg ) ADEZFZAUAGZHZABFZAUDGZHZDBCTBIZUBUEIZUAUDIZUCUFRUGUAUDATBJZKU
      JUHUCAUAUEHUIUFAUAUBUELUAUDAUEMNOATDPQS $.
      $( [19-Oct-2004] $)
    $( A cross product with a singleton is a constant function.  (Contributed
       by ?who?, 24-Jul-2014.) $)
    fnconstg $p |- ( B e. V -> ( A X. { B } ) Fn A ) $=
      ( wcel csn cxp wf wfn fconstg ffn syl ) BCDABEZALFZGMAHABCIALMJK $.
      $( [24-Jul-2014] $)
  $}

  $( Equality theorem for one-to-one functions.  (Contributed by ?who?,
     10-Feb-1997.) $)
  f1eq1 $p |- ( F = G -> ( F : A -1-1-> B <-> G : A -1-1-> B ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq1 cnveq funeqd anbi12d df-f1 3bitr4g ) CDEZAB
    CFZCGZHZIABDFZDGZHZIABCJABDJQRUATUCABCDKQSUBCDLMNABCOABDOP $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one functions.  (Contributed by ?who?,
     10-Feb-1997.) $)
  f1eq2 $p |- ( A = B -> ( F : A -1-1-> C <-> F : B -1-1-> C ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq2 anbi1d df-f1 3bitr4g ) ABEZACDFZDGHZIBCDFZQ
    IACDJBCDJOPRQABCDKLACDMBCDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one functions.  (Contributed by ?who?,
     10-Feb-1997.) $)
  f1eq3 $p |- ( A = B -> ( F : C -1-1-> A <-> F : C -1-1-> B ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq3 anbi1d df-f1 3bitr4g ) ABEZCADFZDGHZICBDFZQ
    ICADJCBDJOPRQABCDKLCADMCBDMN $.
    $( [10-Feb-1997] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    nff1.1 $e |- F/_ x F $.
    nff1.2 $e |- F/_ x A $.
    nff1.3 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for a one-to-one function.
       (Contributed by NM, 16-May-2004.) $)
    nff1 $p |- F/ x F : A -1-1-> B $=
      ( wf1 wf ccnv wfun wa df-f1 nff nfcnv nffun nfan nfxfr ) BCDHBCDIZDJZKZLA
      BCDMSUAAABCDEFGNATADEOPQR $.
  $}

  ${
    $d x y F $.
    $( Alternate definition of a one-to-one function.  (Contributed by ?who?,
       31-Dec-1996.)  (Revised by ?who?, 22-Sep-2004.) $)
    dff12 $p |- ( F : A -1-1-> B <-> ( F : A --> B /\ A. y E* x x F y ) ) $=
      ( wf1 wf ccnv wfun wa cv wbr wmo wal df-f1 funcnv2 anbi2i bitri ) CDEFCDE
      GZEHIZJSAKBKELAMBNZJCDEOTUASABEPQR $.
      $( [22-Sep-2004] $) $( [31-Dec-1996] $)
  $}

  $( A one-to-one mapping is a mapping.  (Contributed by ?who?,
     31-Dec-1996.) $)
  f1f $p |- ( F : A -1-1-> B -> F : A --> B ) $=
    ( wf1 wf ccnv wfun df-f1 simplbi ) ABCDABCECFGABCHI $.
    $( [31-Dec-1996] $)

  $( A one-to-one mapping is a function on its domain.  (Contributed by ?who?,
     8-Mar-2014.) $)
  f1fn $p |- ( F : A -1-1-> B -> F Fn A ) $=
    ( wf1 wf wfn f1f ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [8-Mar-2014] $)

  $( A one-to-one mapping is a function.  (Contributed by ?who?,
     8-Mar-2014.) $)
  f1fun $p |- ( F : A -1-1-> B -> Fun F ) $=
    ( wf1 wfn wfun f1fn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [8-Mar-2014] $)

  $( A one-to-one onto mapping is a relation.  (Contributed by ?who?,
     8-Mar-2014.) $)
  f1rel $p |- ( F : A -1-1-> B -> Rel F ) $=
    ( wf1 wfn wrel f1fn fnrel syl ) ABCDCAECFABCGACHI $.
    $( [8-Mar-2014] $)

  $( The domain of a one-to-one mapping.  (Contributed by ?who?,
     8-Mar-2014.) $)
  f1dm $p |- ( F : A -1-1-> B -> dom F = A ) $=
    ( wf1 wfn cdm wceq f1fn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [8-Mar-2014] $)

  ${
    $( A function that is one-to-one is also one-to-one on some superset of its
       range.  (Contributed by Mario Carneiro, 12-Jan-2013.) $)
    f1ss $p |- ( ( F : A -1-1-> B /\ B C_ C ) -> F : A -1-1-> C ) $=
      ( wf1 wss wa wf ccnv wfun f1f fss sylan df-f1 simprbi adantr sylanbrc ) A
      BDEZBCFZGACDHZDIJZACDERABDHZSTABDKABCDLMRUASRUBUAABDNOPACDNQ $.
      $( [12-Jan-2013] $)
  $}

  $( Two ways to express that a set ` A ` (not necessarily a function) is
     one-to-one.  Each side is equivalent to Definition 6.4(3) of
     [TakeutiZaring] p. 24, who use the notation "Un_2 (A)" for one-to-one.  We
     do not introduce a separate notation since we rarely use it.  (Contributed
     by ?who?, 13-Aug-2004.) $)
  f1cnvcnv $p |- ( `' `' A : dom A -1-1-> _V
             <-> ( Fun `' A /\ Fun `' `' A ) ) $=
    ( cdm cvv ccnv wf1 wf wfun wa df-f1 wfn dffn2 wceq dmcnvcnv mpbiran2 bitr3i
    df-fn wrel relcnv dfrel2 mpbi funeqi anbi12i ancom 3bitri ) ABZCADZDZEUECUG
    FZUGDZGZHUGGZUFGZHULUKHUECUGIUHUKUJULUHUGUEJZUKUEUGKUMUKUGBUELAMUGUEPNOUIUF
    UFQUIUFLARUFSTUAUBUKULUCUD $.
    $( [13-Aug-2004] $)

  $( Composition of one-to-one functions.  Exercise 30 of [TakeutiZaring]
     p. 25.  (Contributed by ?who?, 28-May-1998.) $)
  f1co $p |- ( ( F : B -1-1-> C /\ G : A -1-1-> B ) ->
              ( F o. G ) : A -1-1-> C ) $=
    ( wf ccnv wfun wa ccom wf1 fco funco cnvco funeqi sylibr anim12i an4s df-f1
    ancoms anbi12i 3imtr4i ) BCDFZDGZHZIZABEFZEGZHZIZIACDEJZFZUKGZHZIZBCDKZABEK
    ZIACUKKUCUGUEUIUOUCUGIULUEUIIUNABCDELUIUEUNUIUEIUHUDJZHUNUHUDMUMURDENOPTQRU
    PUFUQUJBCDSABESUAACUKSUB $.
    $( [28-May-1998] $)

  $( Equality theorem for onto functions.  (Contributed by ?who?,
     1-Aug-1994.) $)
  foeq1 $p |- ( F = G -> ( F : A -onto-> B <-> G : A -onto-> B ) ) $=
    ( wceq wfn crn wa wfo fneq1 rneq eqeq1d anbi12d df-fo 3bitr4g ) CDEZCAFZCGZ
    BEZHDAFZDGZBEZHABCIABDIPQTSUBACDJPRUABCDKLMABCNABDNO $.
    $( [1-Aug-1994] $)

  $( Equality theorem for onto functions.  (Contributed by ?who?,
     1-Aug-1994.) $)
  foeq2 $p |- ( A = B -> ( F : A -onto-> C <-> F : B -onto-> C ) ) $=
    ( wceq wfn crn wa wfo fneq2 anbi1d df-fo 3bitr4g ) ABEZDAFZDGCEZHDBFZPHACDI
    BCDINOQPABDJKACDLBCDLM $.
    $( [1-Aug-1994] $)

  $( Equality theorem for onto functions.  (Contributed by ?who?,
     1-Aug-1994.) $)
  foeq3 $p |- ( A = B -> ( F : C -onto-> A <-> F : C -onto-> B ) ) $=
    ( wceq wfn crn wa wfo eqeq2 anbi2d df-fo 3bitr4g ) ABEZDCFZDGZAEZHOPBEZHCAD
    ICBDINQROABPJKCADLCBDLM $.
    $( [1-Aug-1994] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    nffo.1 $e |- F/_ x F $.
    nffo.2 $e |- F/_ x A $.
    nffo.3 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for an onto function.  (Contributed by
       NM, 16-May-2004.) $)
    nffo $p |- F/ x F : A -onto-> B $=
      ( wfo wfn crn wceq wa df-fo nffn nfrn nfeq nfan nfxfr ) BCDHDBIZDJZCKZLAB
      CDMSUAAABDEFNATCADEOGPQR $.
  $}

  $( An onto mapping is a mapping.  (Contributed by ?who?, 3-Aug-1994.) $)
  fof $p |- ( F : A -onto-> B -> F : A --> B ) $=
    ( wfn crn wceq wa wss wfo wf eqimss anim2i df-fo df-f 3imtr4i ) CADZCEZBFZG
    PQBHZGABCIABCJRSPQBKLABCMABCNO $.
    $( [3-Aug-1994] $)

  $( An onto mapping is a function.  (Contributed by ?who?, 29-Mar-2008.) $)
  fofun $p |- ( F : A -onto-> B -> Fun F ) $=
    ( wfo wf wfun fof ffun syl ) ABCDABCECFABCGABCHI $.
    $( [29-Mar-2008] $)

  $( An onto mapping is a function on its domain.  (Contributed by ?who?,
     16-Dec-2008.) $)
  fofn $p |- ( F : A -onto-> B -> F Fn A ) $=
    ( wfo wf wfn fof ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [16-Dec-2008] $)

  $( The codomain of an onto function is its range.  (Contributed by ?who?,
     3-Aug-1994.) $)
  forn $p |- ( F : A -onto-> B -> ran F = B ) $=
    ( wfo wfn crn wceq df-fo simprbi ) ABCDCAECFBGABCHI $.
    $( [3-Aug-1994] $)

  $( Alternate definition of an onto function.  (Contributed by ?who?,
     22-Mar-2006.) $)
  dffo2 $p |- ( F : A -onto-> B <-> ( F : A --> B /\ ran F = B ) ) $=
    ( wfo wf crn wceq wa fof forn jca wfn ffn df-fo biimpri sylan impbii ) ABCD
    ZABCEZCFBGZHRSTABCIABCJKSCALZTRABCMRUATHABCNOPQ $.
    $( [22-Mar-2006] $)

  $( The image of the domain of an onto function.  (Contributed by ?who?,
     29-Nov-2002.) $)
  foima $p |- ( F : A -onto-> B -> ( F " A ) = B ) $=
    ( wfo cima crn cdm imadmrn wf wceq fof fdm imaeq2 3syl syl5reqr forn eqtrd
    ) ABCDZCAEZCFZBRTCCGZEZSCHRABCIUAAJUBSJABCKABCLUAACMNOABCPQ $.
    $( [29-Nov-2002] $)

  $( A function maps onto its range.  (Contributed by ?who?, 10-May-1998.) $)
  dffn4 $p |- ( F Fn A <-> F : A -onto-> ran F ) $=
    ( wfn crn wceq wa wfo eqid biantru df-fo bitr4i ) BACZLBDZMEZFAMBGNLMHIAMBJ
    K $.
    $( [10-May-1998] $)

  $( A function maps its domain onto its range.  (Contributed by ?who?,
     23-Jul-2004.) $)
  funforn $p |- ( Fun A <-> A : dom A -onto-> ran A ) $=
    ( wfun cdm wfn crn wfo funfn dffn4 bitri ) ABAACZDJAEAFAGJAHI $.
    $( [23-Jul-2004] $)

  $( An onto function has unique domain and range.  (Contributed by ?who?,
     5-Nov-2006.) $)
  fodmrnu $p |- ( ( F : A -onto-> B /\ F : C -onto-> D ) ->
                ( A = C /\ B = D ) ) $=
    ( wfo wa wceq wfn fofn fndmu syl2an crn forn sylan9req jca ) ABEFZCDEFZGACH
    ZBDHQEAIECISRABEJCDEJACEKLQRBEMDABENCDENOP $.
    $( [5-Nov-2006] $)

  $( Restriction of a function.  (Contributed by ?who?, 4-Mar-1997.) $)
  fores $p |- ( ( Fun F /\ A C_ dom F ) ->
              ( F |` A ) : A -onto-> ( F " A ) ) $=
    ( wfun cdm wss cres cima wfo funres anim1i wfn wceq df-fn crn dfima3 eqcomi
    wa df-fo mpbiran2 ssdmres anbi2i 3bitr4i sylibr ) BCZABDEZQBAFZCZUEQZABAGZU
    FHZUDUGUEABIJUFAKZUGUFDALZQUJUHUFAMUJUKUFNZUILUIUMBAOPAUIUFRSUEULUGABTUAUBU
    C $.
    $( [4-Mar-1997] $)

  $( Composition of onto functions.  (Contributed by ?who?, 22-Mar-2006.) $)
  foco $p |- ( ( F : B -onto-> C /\ G : A -onto-> B ) ->
             ( F o. G ) : A -onto-> C ) $=
    ( wf crn wceq ccom wfo fco ad2ant2r cdm fdm eqtr3 sylan rncoeq eqeq1d dffo2
    wa biimpar an32s adantrl jca anbi12i 3imtr4i ) BCDFZDGZCHZTZABEFZEGZBHZTZTZ
    ACDEIZFZUPGZCHZTBCDJZABEJZTACUPJUOUQUSUGUKUQUIUMABCDEKLUJUMUSUKUGUMUIUSUGUM
    TDMZULHZUIUSUGVBBHUMVCBCDNVBULBOPVCUSUIVCURUHCDEQRUAPUBUCUDUTUJVAUNBCDSABES
    UEACUPSUF $.
    $( [22-Mar-2006] $)

  $( A nonzero constant function is onto.  (Contributed by ?who?,
     12-Jan-2007.) $)
  foconst $p |- ( ( F : A --> { B } /\ F =/= (/) ) -> F : A -onto-> { B } ) $=
    ( csn wf c0 wne wa crn wceq wfo wn wrel wb frel relrn0 necon3abid syl wss
    wo frn sssn sylib ord sylbid imdistani dffo2 sylibr ) ABDZCEZCFGZHUJCIZUIJZ
    HAUICKUJUKUMUJUKULFJZLZUMUJCMZUKUONAUICOUPUNCFCPQRUJUNUMUJULUISUNUMTAUICUAU
    LBUBUCUDUEUFAUICUGUH $.
    $( [12-Jan-2007] $)

  $( Equality theorem for one-to-one onto functions.  (Contributed by ?who?,
     10-Feb-1997.) $)
  f1oeq1 $p |- ( F = G -> ( F : A -1-1-onto-> B <-> G : A -1-1-onto-> B ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq1 foeq1 anbi12d df-f1o 3bitr4g ) CDEZABCFZABCGZH
    ABDFZABDGZHABCIABDIOPRQSABCDJABCDKLABCMABDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions.  (Contributed by ?who?,
     10-Feb-1997.) $)
  f1oeq2 $p |- ( A = B -> ( F : A -1-1-onto-> C <-> F : B -1-1-onto-> C ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq2 foeq2 anbi12d df-f1o 3bitr4g ) ABEZACDFZACDGZH
    BCDFZBCDGZHACDIBCDIOPRQSABCDJABCDKLACDMBCDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions.  (Contributed by ?who?,
     10-Feb-1997.) $)
  f1oeq3 $p |- ( A = B -> ( F : C -1-1-onto-> A <-> F : C -1-1-onto-> B ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq3 foeq3 anbi12d df-f1o 3bitr4g ) ABEZCADFZCADGZH
    CBDFZCBDGZHCADICBDIOPRQSABCDJABCDKLCADMCBDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions.  (Contributed by FL,
     14-Jul-2012.) $)
  f1oeq23 $p |- ( ( A = B /\ C = D ) ->
   ( F : A -1-1-onto-> C <-> F : B -1-1-onto-> D ) ) $=
    ( wceq wf1o f1oeq2 f1oeq3 sylan9bb ) ABFACEGBCEGCDFBDEGABCEHCDBEIJ $.
    $( [14-Jul-2012] $)


  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    nff1o.1 $e |- F/_ x F $.
    nff1o.2 $e |- F/_ x A $.
    nff1o.3 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for a one-to-one onto function.
       (Contributed by NM, 16-May-2004.) $)
    nff1o $p |- F/ x F : A -1-1-onto-> B $=
      ( wf1o wf1 wfo wa df-f1o nff1 nffo nfan nfxfr ) BCDHBCDIZBCDJZKABCDLQRAAB
      CDEFGMABCDEFGNOP $.
  $}

  $( A one-to-one onto mapping is a one-to-one mapping.  (Contributed by ?who?,
     12-Dec-2003.) $)
  f1of1 $p |- ( F : A -1-1-onto-> B -> F : A -1-1-> B ) $=
    ( wf1o wf1 wfo df-f1o simplbi ) ABCDABCEABCFABCGH $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a mapping.  (Contributed by ?who?,
     12-Dec-2003.) $)
  f1of $p |- ( F : A -1-1-onto-> B -> F : A --> B ) $=
    ( wf1o wf1 wf f1of1 f1f syl ) ABCDABCEABCFABCGABCHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is function on its domain.  (Contributed by
     ?who?, 12-Dec-2003.) $)
  f1ofn $p |- ( F : A -1-1-onto-> B -> F Fn A ) $=
    ( wf1o wf wfn f1of ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a function.  (Contributed by ?who?,
     12-Dec-2003.) $)
  f1ofun $p |- ( F : A -1-1-onto-> B -> Fun F ) $=
    ( wf1o wfn wfun f1ofn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a relation.  (Contributed by ?who?,
     13-Dec-2003.) $)
  f1orel $p |- ( F : A -1-1-onto-> B -> Rel F ) $=
    ( wf1o wfun wrel f1ofun funrel syl ) ABCDCECFABCGCHI $.
    $( [13-Dec-2003] $)

  $( The domain of a one-to-one onto mapping.  (Contributed by ?who?,
     8-Mar-2014.) $)
  f1odm $p |- ( F : A -1-1-onto-> B -> dom F = A ) $=
    ( wf1o wfn cdm wceq f1ofn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [8-Mar-2014] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by ?who?,
     10-Feb-1997.)  (Revised by ?who?, 22-Oct-2011.) $)
  dff1o2 $p |- ( F : A -1-1-onto-> B
        <-> ( F Fn A /\ Fun `' F /\ ran F = B ) ) $=
    ( wf1o wf1 wfo wa wf ccnv wfun wfn crn w3a df-f1o df-f1 df-fo anbi12i ancom
    wceq 3anass an12 bitri anbi1i bitr4i wss eqimss df-f biimpri sylan2 3adant2
    anass pm4.71i 3bitr4i 3bitri ) ABCDABCEZABCFZGABCHZCIJZGZCAKZCLZBSZGZGZUTUR
    VBMZABCNUOUSUPVCABCOABCPQUQURVCGZGZVEUQGZVDVEVGVFUQGVHUQVFRVEVFUQVEUTURVBGG
    VFUTURVBTUTURVBUAUBUCUDUQURVCUKVEUQUTVBUQURVBUTVABUEZUQVABUFUQUTVIGABCUGUHU
    IUJULUMUN $.
    $( [22-Oct-2011] $) $( [10-Feb-1997] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by ?who?,
     25-Mar-1998.)  (Revised by ?who?, 22-Oct-2011.) $)
  dff1o3 $p |- ( F : A -1-1-onto-> B <-> ( F : A -onto-> B /\ Fun `' F ) ) $=
    ( wfn ccnv wfun crn wceq w3a wf1o wfo df-3an an32 bitri dff1o2 df-fo anbi1i
    wa 3bitr4i ) CADZCEFZCGBHZIZTUBRZUARZABCJABCKZUARUCTUARUBRUETUAUBLTUAUBMNAB
    COUFUDUAABCPQS $.
    $( [22-Oct-2011] $) $( [25-Mar-1998] $)

  $( A one-to-one onto function is an onto function.  (Contributed by ?who?,
     28-Apr-2004.) $)
  f1ofo $p |- ( F : A -1-1-onto-> B -> F : A -onto-> B ) $=
    ( wf1o wfo ccnv wfun dff1o3 simplbi ) ABCDABCECFGABCHI $.
    $( [28-Apr-2004] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by ?who?,
     25-Mar-1998.)  (Revised by ?who?, 22-Oct-2011.) $)
  dff1o4 $p |- ( F : A -1-1-onto-> B <-> ( F Fn A /\ `' F Fn B ) ) $=
    ( wf1o wfn ccnv wfun crn w3a wa dff1o2 3anass cdm dfrn4 eqeq1i anbi2i df-fn
    wceq bitr4i 3bitri ) ABCDCAEZCFZGZCHZBRZIUAUCUEJZJUAUBBEZJABCKUAUCUELUFUGUA
    UFUCUBMZBRZJUGUEUIUCUDUHBCNOPUBBQSPT $.
    $( [22-Oct-2011] $) $( [25-Mar-1998] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by ?who?,
     10-Dec-2003.)  (Revised by ?who?, 22-Oct-2011.) $)
  dff1o5 $p |- ( F : A -1-1-onto-> B <-> ( F : A -1-1-> B /\ ran F = B ) ) $=
    ( wf1o wf1 wfo wa crn wceq df-f1o wf biantrurd dffo2 syl6rbbr pm5.32i bitri
    f1f ) ABCDABCEZABCFZGRCHBIZGABCJRSTRTABCKZTGSRUATABCQLABCMNOP $.
    $( [22-Oct-2011] $) $( [10-Dec-2003] $)

  $( A one-to-one function maps onto its range.  (Contributed by ?who?,
     13-Aug-2004.) $)
  f1orn $p |- ( F : A -1-1-onto-> ran F <-> ( F Fn A /\ Fun `' F ) ) $=
    ( wfn ccnv wfun crn wceq w3a wa wf1o df-3an dff1o2 eqid biantru 3bitr4i ) B
    ACZBDEZBFZRGZHPQIZSIARBJTPQSKARBLSTRMNO $.
    $( [13-Aug-2004] $)

  $( A one-to-one function maps one-to-one onto its range.  (Contributed by
     ?who?, 4-Sep-2004.) $)
  f1f1orn $p |- ( F : A -1-1-> B -> F : A -1-1-onto-> ran F ) $=
    ( wf1 wfn ccnv wfun crn wf1o f1fn wf df-f1 simprbi f1orn sylanbrc ) ABCDZCA
    ECFGZACHCIABCJPABCKQABCLMACNO $.
    $( [4-Sep-2004] $)

  $( The converse of a one-to-one onto function is also one-to-one onto.  (The
     proof was shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by
     ?who?, 11-Feb-1997.)  (Revised by ?who?, 22-Oct-2011.) $)
  f1ocnv $p |- ( F : A -1-1-onto-> B -> `' F : B -1-1-onto-> A ) $=
    ( wfn ccnv wa wf1o wrel fnrel wceq dfrel2 fneq1 biimprd sylbi anim2i ancoms
    wi mpcom dff1o4 3imtr4i ) CADZCEZBDZFUCUBEZADZFZABCGBAUBGUCUAUFUAUEUCCHZUAU
    EACIUGUDCJZUAUEQCKUHUEUAAUDCLMNROPABCSBAUBST $.
    $( [22-Oct-2011] $) $( [11-Feb-1997] $)

  $( A relation is a one-to-one onto function iff its converse is a one-to-one
     onto function with domain and range interchanged.  (Contributed by ?who?,
     8-Dec-2003.) $)
  f1ocnvb $p |- ( Rel F ->
                ( F : A -1-1-onto-> B <-> `' F : B -1-1-onto-> A ) ) $=
    ( wrel wf1o ccnv f1ocnv wceq wb dfrel2 f1oeq1 sylbi syl5ib impbid2 ) CDZABC
    EZBACFZEZABCGRABQFZEZOPBAQGOSCHTPICJABSCKLMN $.
    $( [8-Dec-2003] $)

  $( The restriction of a one-to-one function maps one-to-one onto the image.
     (Contributed by ?who?, 25-Mar-1998.) $)
  f1ores $p |- ( ( F : A -1-1-> B /\ C C_ A ) -> ( F |` C ) : C -1-1-onto->
            ( F " C ) ) $=
    ( wf ccnv wfun wa wss cima cres wfo wf1 wf1o cdm ffun adantr sseq2d biimpar
    fdm fores syl2anc funres11 anim12i an32s df-f1 anbi1i dff1o3 3imtr4i ) ABDE
    ZDFGZHZCAIZHCDCJZDCKZLZUOFGZHZABDMZUMHCUNUONUJUMUKURUJUMHZUPUKUQUTDGZCDOZIZ
    UPUJVAUMABDPQUJVCUMUJVBACABDTRSCDUAUBCDUCUDUEUSULUMABDUFUGCUNUOUHUI $.
    $( [25-Mar-1998] $)

  $( The converse of a one-to-one-onto restricted function.  (Contributed by
     Paul Chapman, 21-Apr-2008.) $)
  f1orescnv $p |- ( ( Fun `' F /\ ( F |` R ) : R -1-1-onto-> P ) ->
                    ( `' F |` P ) : P -1-1-onto-> R ) $=
    ( ccnv wfun cres wf1o wa f1ocnv adantl wceq wb cima funcnvres dfima3 dff1o5
    crn wf1 simprbi syl5eq reseq2d sylan9eq f1oeq1 syl mpbid ) CDZEZBACBFZGZHZA
    BUHDZGZABUFAFZGZUIULUGBAUHIJUJUKUMKULUNLUGUIUKUFCBMZFUMBCNUIUOAUFUIUOUHQZAC
    BOUIBAUHRUPAKBAUHPSTUAUBABUKUMUCUDUE $.
    $( [21-Apr-2008] $)

  $( Preimage of an image.  (Contributed by ?who?, 30-Sep-2004.) $)
  f1imacnv $p |- ( ( F : A -1-1-> B /\ C C_ A )
                 -> ( `' F " ( F " C ) ) = C ) $=
    ( wf1 wss wa ccnv cima cres resima wfun wceq df-f1 simprbi adantr funcnvres
    wf 3syl wf1o imaeq1 f1ores f1ocnv crn cdm imadmrn fdm imaeq2 syl5reqr f1ofo
    f1of wfo forn syl eqtrd eqtr3d syl5eqr ) ABDEZCAFZGZDHZDCIZIVAVBJZVBIZCVAVB
    KUTDCJZHZVBIZVDCUTVALZVFVCMVGVDMURVHUSURABDRVHABDNOPCDQVFVCVBUASUTCVBVETVBC
    VFTZVGCMABCDUBCVBVEUCVIVGVFUDZCVIVJVFVFUEZIZVGVFUFVIVBCVFRVKVBMVLVGMVBCVFUK
    VBCVFUGVKVBVFUHSUIVIVBCVFULVJCMVBCVFUJVBCVFUMUNUOSUPUQ $.
    $( [30-Sep-2004] $)

  $( A reverse version of ~ f1imacnv .  (Contributed by Jeffrey Hankins,
     16-Jul-2009.) $)
  foimacnv $p |- ( ( F : A -onto-> B /\ C C_ B )
                 -> ( F " ( `' F " C ) ) = C ) $=
    ( wfo wss ccnv cima cres resima wfun wceq fofun adantr funcnvres2 crn dfrn4
    wa cdm syl5eqr imaeq1 3syl wfn resss cnvss ax-mp cnvcnvss sstri funss mpsyl
    dfima3 eqtr2i jctir df-fn sylibr df-dm forn sseq2d biimpar syl6sseq ssdmres
    sylib df-fo sylanbrc foima syl eqtr3d ) ABDEZCBFZRZDDGZCHZHDVLIZVLHZCDVLJVJ
    VKCIZGZVLHZVNCVJDKZVPVMLVQVNLVHVRVIABDMZNCDOVPVMVLUAUBVJVLCVPEZVQCLVJVPVLUC
    ZVPPZCLVTVJVPKZVPSZVLLZRWAVJWCWEVHWCVIVPDFVHVRWCVPVKGZDVOVKFVPWFFVKCUDVOVKU
    EUFDUGUHVSVPDUIUJNVLVOPWDVKCUKVOQULUMVPVLUNUOVJWBVOSZCVOUPVJCVKSZFWGCLVJCDP
    ZWHVHCWIFVIVHWIBCABDUQURUSDQUTCVKVAVBTVLCVPVCVDVLCVPVEVFVGT $.
    $( [9-Jul-2009] $)

  $( The union of two one-to-one onto functions with disjoint domains and
     ranges.  (Contributed by ?who?, 26-Mar-1998.) $)
  f1oun $p |- ( ( ( F : A -1-1-onto-> B /\ G : C -1-1-onto-> D )
            /\ ( ( A i^i C ) = (/) /\ ( B i^i D ) = (/) ) )
           -> ( F u. G ) : ( A u. C ) -1-1-onto-> ( B u. D ) ) $=
    ( wf1o wa cin c0 wceq cun wfn ccnv wi dff1o4 fnun ex cnvun fneq1i im2anan9
    sylibr an4s syl2anb syl6ibr imp ) ABEGZCDFGZHZACIJKZBDIJKZHZACLZBDLZEFLZGZU
    IULUOUMMZUONZUNMZHZUPUGEAMZENZBMZHFCMZFNZDMZHULUTOZUHABEPCDFPVAVDVCVFVGVAVD
    HZUJUQVCVFHZUKUSVHUJUQACEFQRVIUKUSVIUKHVBVELZUNMUSBDVBVEQUNURVJEFSTUBRUAUCU
    DUMUNUOPUEUF $.
    $( [26-Mar-1998] $)

  ${
    $d A u v x z $.  $d A u v y $.  $d B u v y $.  $d B u v z $.
    $d C u v x z $.  $d D u v $.  $d S u v x $.  $d y z $.
    fun11iun.1 $e |- ( x = y -> B = C ) $.
    fun11iun.2 $e |- B e. _V $.
    $( The union of a chain (with respect to inclusion) of one-to-one functions
       is a one-to-one function.  (Contributed by Mario Carneiro,
       20-May-2013.) $)
    fun11iun $p |- ( A. x e. A ( B : D -1-1-> S /\
                       A. y e. A ( B C_ C \/ C C_ B ) ) ->
                     U_ x e. A B : U_ x e. A D -1-1-> S ) $=
      ( vz vu vv wss wa wfun wceq wrex wcel syl wex wf1 wo wral ciun wf wfn crn
      ccnv cdm cv cab cuni vex eqeq1 rexbidv elab r19.29 ax-17 hbre1 hbab hbral
      weq hban wi f1eq1 biimparc f1fun df-f1 simprbi jca adantlr eqeq2d cbvrexv
      syl6bb sseq12 ancoms orbi12d biimprcd expdimp rexlimivw imp sylan sylan2b
      wb ralrimiva adantll a1i rexlimi fun11uni simpld dfiun2 funeqi sylibr cop
      an32s hbra1 rsp eldm2 eleq2d syl5bbr adantr rexbida eliun rexcom4 3bitr4i
      f1dm exbii 3bitr4g eqrdv df-fn sylanbrc elrn2 f1f frn syl5bir syl6 syl5bi
      sseld rexlimd ssrdv df-f simprd cnveqi ) FGDUAZDEMZEDMZUBZBCUCZNZACUCZACF
      UDZGACDUDZUEZYLUHZOZYKGYLUAYJYLYKUFZYLUGZGMYMYJYLOZYLUIZYKPYPYJJUJZDPZACQ
      ZJUKZULZOZYRYJUUEUUDUHZOZYJKUJZOZUUHUHOZNZUUHLUJZMZUULUUHMZUBZLUUCUCZNZKU
      UCUCUUEUUGNYJUUQKUUCUUHUUCRYJUUHDPZACQZUUQUUBUUSJUUHKUMJKVBUUAUURACYTUUHD
      UNUOUPYJUUSNYIUURNZACQUUQYIUURACUQUUTUUQACUUKUUPAUUKAURUUOALUUCUUBAJLUUAA
      CUSUTUUOAURVAVCUUTUUQVDAUJCRZUUTUUKUUPYDUURUUKYHYDUURNFGUUHUAZUUKUURUVBYD
      FGUUHDVEVFUVBUUIUUJFGUUHVGUVBFGUUHUEUUJFGUUHVHVIVJSVKYHUURUUPYDYHUURNZUUO
      LUUCUULUUCRUVCUULEPZBCQZUUOUUBUVEJUULLUMJLVBZUUBUULDPZACQUVEUVFUUAUVGACYT
      UULDUNUOUVGUVDABCABVBDEUULHVLVMVNUPYHUVEUURUUOYHUVENYGUVDNZBCQZUURUUOYGUV
      DBCUQUVIUURUUOUVHUURUUOVDBCYGUVDUURUUOUVDUURNZUUOYGUVJUUMYEUUNYFUURUVDUUM
      YEWDUUHDUULEVOVPUULEUUHDVOVQVRVSVTWAWBWOWCWEWFVJWGWHSWCWEUUCKLWISZWJYLUUD
      AJCDIWKZWLWMYJKYSYKYJUUHUULWNZDRZLTZACQZUUHFRZACQUUHYSRZUUHYKRYJUVOUVQACY
      IACWPZYJUVANYIUVOUVQWDZYJUVAYIYIACWQZWAYDUVTYHUVOUUHDUIZRYDUVQLUUHDWRYDUW
      BFUUHFGDXFWSWTXASXBUVMYLRZLTUVNACQZLTUVRUVPUWCUWDLAUVMCDXCZXGLUUHYLWRUVNA
      LCXDXEAUUHCFXCXHXIYLYKXJXKYJLYQGUULYQRZUVNKTZACQZYJUULGRZUWCKTUWDKTUWFUWH
      UWCUWDKUWEXGKUULYLXLUVNAKCXDXEYJUWGUWIACUVSUWIAURYJUVAYIUWGUWIVDZUWAYDUWJ
      YHUWGUULDUGZRYDUWIKUULDXLYDUWKGUULYDFGDUEUWKGMFGDXMFGDXNSXRXOXAXPXSXQXTYK
      GYLYAXKYJUUGYOYJUUEUUGUVKYBYNUUFYLUUDUVLYCWLWMYKGYLVHXK $.
      $( [20-May-2013] $)
  $}

  $( The restriction of a one-to-one onto function to a difference maps onto
     the difference of the images.  (Contributed by Paul Chapman,
     11-Apr-2009.) $)
  resdif $p |- ( ( Fun `' F /\ ( F |` A ) : A -onto-> C /\
                               ( F |` B ) : B -onto-> D ) ->
                 ( F |` ( A \ B ) ) : ( A \ B ) -1-1-onto-> ( C \ D ) ) $=
    ( ccnv wfun cres wfo cdif cima wf1o wss wceq syl wb ax-mp crn dfima3 wa w3a
    cdm fofun difss fof fdm syl5sseqr fores syl2anc resabs1 foeq1 rneqi 3eqtr4i
    wf foeq3 bitri sylib funres11 dff1o3 biimpri syl2anr 3adant3 syl5eq anim12i
    forn imadif difeq12 sylan9eq sylan2 3impb f1oeq3 mpbid ) EFGZACEAHZIZBDEBHZ
    IZUAZABJZEVSKZEVSHZLZVSCDJZWALZVMVOWBVQVOVSVTWAIZWAFGZWBVMVOVSVNVSKZVNVSHZI
    ZWEVOVNGVSVNUBZMWIACVNUCVOAVSWJABUDZVOACVNUNWJANACVNUEACVNUFOUGVSVNUHUIWIVS
    WGWAIZWEWHWANZWIWLPVSAMWMWKEVSAUJQZVSWGWHWAUKQWGVTNWLWEPWHRWARWGVTWHWAWNULV
    NVSSEVSSUMWGVTVSWAUOQUPUQVSEURWBWEWFTVSVTWAUSUTVAVBVRVTWCNZWBWDPVMVOVQWOVOV
    QTVMEAKZCNZEBKZDNZTZWOVOWQVQWSVOWPVNRCEASACVNVEVCVQWRVPRDEBSBDVPVEVCVDVMWTV
    TWPWRJWCABEVFWPCWRDVGVHVIVJVTWCVSWAVKOVL $.
    $( [11-Apr-2009] $)

  $( The restriction of a one-to-one onto function to an intersection maps onto
     the intersection of the images.  (Contributed by Paul Chapman,
     11-Apr-2009.) $)
  resin $p |- ( ( Fun `' F /\ ( F |` A ) : A -onto-> C /\
                               ( F |` B ) : B -onto-> D ) ->
      ( F |` ( A i^i B ) ) : ( A i^i B ) -1-1-onto-> ( C i^i D ) ) $=
    ( ccnv wfun cres wfo w3a cdif wf1o cin resdif f1ofo syl wceq wb dfin4 ax-mp
    syld3an3 f1oeq3 f1oeq2 reseq2i f1oeq1 3bitrri sylib ) EFGZACEAHIZBDEBHIZJZA
    ABKZKZCCDKZKZEUMHZLZABMZCDMZEURHZLZUHUIUJULUNEULHZIZUQUKULUNVBLVCABCDENULUN
    VBOPAULCUNENUAVAURUOUTLZUMUOUTLZUQUSUOQVAVDRCDSUSUOURUTUBTURUMQVDVERABSZURU
    MUOUTUCTUTUPQVEUQRURUMEVFUDUMUOUTUPUETUFUG $.
    $( [11-Apr-2009] $)

  $( Composition of one-to-one onto functions.  (Contributed by ?who?,
     19-Mar-1998.) $)
  f1oco $p |- ( ( F : B -1-1-onto-> C /\ G : A -1-1-onto-> B ) ->
              ( F o. G ) : A -1-1-onto-> C ) $=
    ( wf1 wfo wa ccom wf1o f1co foco anim12i an4s df-f1o anbi12i 3imtr4i ) BCDF
    ZBCDGZHZABEFZABEGZHZHACDEIZFZACUDGZHZBCDJZABEJZHACUDJRUASUBUGRUAHUESUBHUFAB
    CDEKABCDELMNUHTUIUCBCDOABEOPACUDOQ $.
    $( [19-Mar-1998] $)

  $( The composition of a one-to-one onto function and its converse equals the
     identity relation restricted to the function's range.  (Contributed by
     ?who?, 13-Dec-2003.) $)
  f1ococnv2 $p |- ( F : A -1-1-onto-> B -> ( F o. `' F ) = ( _I |` B ) ) $=
    ( wf1o ccnv ccom cid cdm cres wss wceq wf wfun f1of ffun wrel simprbi eqtrd
    df-fun 3syl iss sylib crn f1odm wfo f1ocnv f1ofo forn eqtr4d dmcoeq syl fdm
    reseq2d ) ABCDZCCEZFZGUPHZIZGBIUNUPGJZUPURKUNABCLCMZUSABCNABCOUTCPUSCSQTUPU
    AUBUNUQBGUNUQUOHZBUNCHZUOUCZKUQVAKUNVBAVCABCUDUNBAUODZBAUOUEVCAKABCUFZBAUOU
    GBAUOUHTUICUOUJUKUNVDBAUOLVABKVEBAUONBAUOULTRUMR $.
    $( [13-Dec-2003] $)

  $( The composition of a one-to-one onto function's converse and itself equals
     the identity relation restricted to the function's domain.  (Contributed
     by ?who?, 13-Dec-2003.) $)
  f1ococnv1 $p |- ( F : A -1-1-onto-> B -> ( `' F o. F ) = ( _I |` A ) ) $=
    ( wf1o ccnv ccom cres wrel wceq f1orel dfrel2 sylib coeq2d f1ocnv f1ococnv2
    cid syl eqtr3d ) ABCDZCEZTEZFZTCFPAGZSUACTSCHUACIABCJCKLMSBATDUBUCIABCNBATO
    QR $.
    $( [13-Dec-2003] $)

  $( The converse of an injective function is bijective.  (Contributed by FL,
     11-Nov-2011.) $)
  f1cnv $p |- ( F : A -1-1-> B -> `' F : ran F -1-1-onto-> A ) $=
    ( wf1 crn wf1o ccnv f1f1orn f1ocnv syl ) ABCDACEZCFKACGFABCHAKCIJ $.
    $( [11-Nov-2011] $)

  $( Composition of an injective function with its converse.  (Contributed by
     FL, 11-Nov-2011.) $)
  f1cocnv1 $p |- ( F : A -1-1-> B -> ( `' F o. F ) = ( _I |` A ) ) $=
    ( wf1 crn wf1o ccnv ccom cid cres wceq f1f1orn f1ococnv1 syl ) ABCDACEZCFCG
    CHIAJKABCLAOCMN $.
    $( [11-Nov-2011] $)

  $( Composition of an injective function with its converse.  (Contributed by
     FL, 11-Nov-2011.) $)
  f1cocnv2 $p |- ( F : A -1-1-> B -> ( F o. `' F ) = ( _I |` ran F ) ) $=
    ( wf1 crn wf1o ccnv ccom cid cres wceq f1f1orn f1ococnv2 syl ) ABCDACEZCFCC
    GHIOJKABCLAOCMN $.
    $( [11-Nov-2011] $)

  ${
    $d x F $.  $d x A $.  $d x B $.
    f11o.1 $e |- F e. _V $.
    $( Relationship between a mapping and an onto mapping.  Figure 38 of
       [Enderton] p. 145.  (Contributed by ?who?, 10-May-1998.) $)
    ffoss $p |- ( F : A --> B <-> E. x ( F : A -onto-> x /\ x C_ B ) ) $=
      ( wf cv wfo wss wa wex crn wfn df-f dffn4 anbi1i bitri rnex wceq foeq3
      sseq1 anbi12d spcev sylbi fof fss sylan exlimiv impbii ) BCDFZBAGZDHZUKC
      IZJZAKZUJBDLZDHZUPCIZJZUOUJDBMZURJUSBCDNUTUQURBDOPQUNUSAUPDERUKUPSULUQUMU
      RUKUPBDTUKUPCUAUBUCUDUNUJAULBUKDFUMUJBUKDUEBUKCDUFUGUHUI $.
      $( [10-May-1998] $)

    $( Relationship between one-to-one and one-to-one onto function.
       (Contributed by ?who?, 4-Apr-1998.) $)
    f11o $p |- ( F : A -1-1-> B <-> E. x ( F : A -1-1-onto-> x /\ x C_ B ) ) $=
      ( wf ccnv wfun wa cv wfo wss wex wf1 wf1o ffoss anbi1i df-f1 dff1o3 bitri
      an32 exbii 19.41v 3bitr4i ) BCDFZDGHZIBAJZDKZUGCLZIZAMZUFIZBCDNBUGDOZUIIZ
      AMZUEUKUFABCDEPQBCDRUOUJUFIZAMULUNUPAUNUHUFIZUIIUPUMUQUIBUGDSQUHUFUIUATUB
      UJUFAUCTUD $.
      $( [4-Apr-1998] $)
  $}

  $( The empty set maps one-to-one into any class.  (Contributed by ?who?,
     7-Apr-1998.) $)
  f10 $p |- (/) : (/) -1-1-> A $=
    ( c0 wf1 wf ccnv wfun f0 fun0 cnv0 funeqi mpbir df-f1 mpbir2an ) BABCBABDBE
    ZFZAGOBFHNBIJKBABLM $.
    $( [7-Apr-1998] $)

  $( One-to-one onto mapping of the empty set.  (Contributed by ?who?,
     15-Apr-1998.) $)
  f1o00 $p |- ( F : (/) -1-1-onto-> A <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wf1o wfn ccnv wceq dff1o4 fn0 biimpi adantr cdm dm0 cnveq syl6eq sylbi
    wa cnv0 fneq1d jca biimpa fndm syl syl5reqr biimpri eqid mpbir fneq2 mpbiri
    sylan9bb impbii bitri ) CABDBCEZBFZAEZQZBCGZACGZQZCABHUPUSUPUQURUMUQUOUMUQB
    IZJKUPCCLZAMUPCAEZVAAGUMUOVBUMAUNCUMUQUNCGUTUQUNCFCBCNROZPSUAACUBUCUDTUSUMU
    OUQUMURUMUQUTUEKUSUOCCEZVDCCGCUFCIUGUQUOVBURVDUQAUNCVCSACCUHUJUITUKUL $.
    $( [15-Apr-1998] $)

  $( Onto mapping of the empty set.  (Contributed by ?who?, 22-Mar-2006.) $)
  fo00 $p |- ( F : (/) -onto-> A <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wfo wf1o wceq wf1 wfn fofn fn0 f10 f1eq1 mpbiri sylbi syl ancri df-f1o
    wa sylibr f1ofo impbii f1o00 bitri ) CABDZCABEZBCFZACFRUDUEUDCABGZUDRUEUDUG
    UDBCHZUGCABIUHUFUGBJUFUGCACGAKCABCLMNOPCABQSCABTUAABUBUC $.
    $( [22-Mar-2006] $)

  $( One-to-one onto mapping of the empty set.  (Contributed by ?who?,
     10-Sep-2004.)  (Revised by ?who?, 16-Feb-2004.) $)
  f1o0 $p |- (/) : (/) -1-1-onto-> (/) $=
    ( wf1o wf1 wfo f10 wfn crn wceq wfun cdm fun0 dm0 df-fn mpbir2an rn0 df-f1o
    c0 df-fo ) PPPAPPPBPPPCZPDRPPEZPFPGSPHPIPGJKPPLMNPPPQMPPPOM $.
    $( [16-Feb-2004] $) $( [10-Sep-2004] $)

  $( A restriction of the identity relation is a one-to-one onto function.
     (The proof was shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by
     ?who?, 30-Apr-1998.)  (Revised by ?who?, 22-Oct-2011.) $)
  f1oi $p |- ( _I |` A ) : A -1-1-onto-> A $=
    ( cid cres wf1o wfn ccnv fnresi cnvresid fneq1i mpbir dff1o4 mpbir2an ) AAB
    ACZDMAEZMFZAEZAGZPNQAOMAHIJAAMKL $.
    $( [22-Oct-2011] $) $( [30-Apr-1998] $)

  $( The identity relation is a one-to-one onto function on the universe.
     (Contributed by ?who?, 16-May-2004.) $)
  f1ovi $p |- _I : _V -1-1-onto-> _V $=
    ( cvv cid cres wf1o f1oi wceq wb wrel reli dfrel3 mpbi f1oeq1 ax-mp ) AABAC
    ZDZAABDZAENBFZOPGBHQIBJKAANBLMK $.
    $( [16-May-2004] $)

  ${
    f1osn.1 $e |- A e. _V $.
    f1osn.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is one-to-one onto function.  (The proof
       was shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed by ?who?,
       18-May-1998.)  (Revised by ?who?, 22-Oct-2011.) $)
    f1osn $p |- { <. A , B >. } : { A } -1-1-onto-> { B } $=
      ( csn cop wf1o wfn ccnv fnsn cnvsn fneq1i mpbir dff1o4 mpbir2an ) AEZBEZA
      BFEZGRPHRIZQHZABCDJTBAFEZQHBADCJQSUAABCDKLMPQRNO $.
      $( [22-Oct-2011] $) $( [18-May-1998] $)
  $}

  ${
    $d A a b $.  $d B b $.
    $( A singleton of an ordered pair is one-to-one onto function.
       (Contributed by Mario Carneiro, 12-Jan-2013.) $)
    f1osng $p |- ( ( A e. V /\ B e. W ) ->
                   { <. A , B >. } : { A } -1-1-onto-> { B } ) $=
      ( va vb cv csn cop wf1o wceq sneq f1oeq2 syl opeq1 f1oeq1 3syl bitrd vex
      wb f1oeq3 opeq2 f1osn vtocl2g ) EGZHZFGZHZUEUGIZHZJZAHZUHAUGIZHZJZULBHZAB
      IZHZJZEFABCDUEAKZUKULUHUJJZUOUTUFULKUKVATUEALUFULUHUJMNUTUIUMKUJUNKVAUOTU
      EAUGOUIUMLULUHUJUNPQRUGBKZUOULUPUNJZUSVBUHUPKUOVCTUGBLUHUPULUNUANVBUMUQKU
      NURKVCUSTUGBAUBUMUQLULUPUNURPQRUEUGESFSUCUD $.
      $( [12-Jan-2013] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( Alternate definition of function value.  Definition 10.11 of [Quine]
       p. 68.  (The proof was shortened by Andrew Salmon, 17-Sep-2011.)
       (Contributed by ?who?, 30-Apr-2004.)  (Revised by ?who?,
       18-Sep-2011.) $)
    fv2 $p |- ( F ` A ) = U. { x | A. y ( A F y <-> y = x ) } $=
      ( cfv cv wbr cio weq wb wal cab cuni dffv4 dfiota2 eqtri ) CDECBFDGZBHQBA
      IJBKALMBCDNQBAOP $.
      $( [18-Sep-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( A function's value at a proper class is the empty set.  (Contributed by
       ?who?, 20-May-1998.) $)
    fvprc $p |- ( -. A e. _V -> ( F ` A ) = (/) ) $=
      ( vx cvv wcel wn cfv cv wbr cio c0 dffv4 weu wceq wex euex simpld exlimiv
      brex syl con3i iotanul syl5eq ) ADEZFZABGACHZBIZCJZKCABLUEUGCMZFUHKNUIUDU
      IUGCOUDUGCPUGUDCUGUDUFDEAUFBSQRTUAUGCUBTUC $.
      $( [20-May-1998] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y F $.
    $( Membership in a function value.  (Contributed by ?who?, 30-Apr-2004.) $)
    elfv $p |- ( A e. ( F ` B ) <->
               E. x ( A e. x /\ A. y ( B F y <-> y = x ) ) ) $=
      ( cfv wcel cv wbr weq wb wal cab cuni wa wex fv2 eleq2i eluniab bitri ) C
      DEFZGCDBHEIBAJKBLZAMNZGCAHGUBOAPUAUCCABDEQRUBACST $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.  $d x G $.
    $( Equality theorem for function value.  (Contributed by ?who?,
       29-Dec-1996.) $)
    fveq1 $p |- ( F = G -> ( F ` A ) = ( G ` A ) ) $=
      ( vx wceq cv wbr cio cfv breq iotabidv dffv4 3eqtr4g ) BCEZADFZBGZDHAOCGZ
      DHABIACINPQDAOBCJKDABLDACLM $.
      $( [29-Dec-1996] $)

    $( Equality theorem for function value.  (Contributed by ?who?,
       29-Dec-1996.) $)
    fveq2 $p |- ( A = B -> ( F ` A ) = ( F ` B ) ) $=
      ( vx wceq cv wbr cio cfv breq1 iotabidv dffv4 3eqtr4g ) ABEZADFZCGZDHBOCG
      ZDHACIBCINPQDABOCJKDACLDBCLM $.
      $( [29-Dec-1996] $)
  $}

  ${
    fveq1i.1 $e |- F = G $.
    $( Equality inference for function value.  (Contributed by ?who?,
       2-Sep-2003.) $)
    fveq1i $p |- ( F ` A ) = ( G ` A ) $=
      ( wceq cfv fveq1 ax-mp ) BCEABFACFEDABCGH $.
      $( [2-Sep-2003] $)
  $}

  ${
    fveq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for function value.  (Contributed by ?who?,
       2-Sep-2003.) $)
    fveq1d $p |- ( ph -> ( F ` A ) = ( G ` A ) ) $=
      ( wceq cfv fveq1 syl ) ACDFBCGBDGFEBCDHI $.
      $( [2-Sep-2003] $)
  $}

  ${
    fveq2i.1 $e |- A = B $.
    $( Equality inference for function value.  (Contributed by ?who?,
       28-Jul-1999.) $)
    fveq2i $p |- ( F ` A ) = ( F ` B ) $=
      ( wceq cfv fveq2 ax-mp ) ABEACFBCFEDABCGH $.
      $( [28-Jul-1999] $)
  $}

  ${
    fveq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function value.  (Contributed by ?who?,
       29-May-1999.) $)
    fveq2d $p |- ( ph -> ( F ` A ) = ( F ` B ) ) $=
      ( wceq cfv fveq2 syl ) ABCFBDGCDGFEBCDHI $.
      $( [29-May-1999] $)
  $}

  ${
    fveq12d.1 $e |- ( ph -> F = G ) $.
    fveq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function value.  (Contributed by FL,
       22-Dec-2008.) $)
    fveq12d $p |- ( ph -> ( F ` A ) = ( G ` B ) ) $=
      ( cfv fveq1d fveq2d eqtrd ) ABDHBEHCEHABDEFIABCEGJK $.
      $( [1-Dec-2010] $) $( [22-Dec-2008] $)
  $}


  ${
    $d y z F $.  $d y z A $.  $d x y z $.
    nffv.1 $e |- F/_ x F $.
    nffv.2 $e |- F/_ x A $.
    $( Bound-variable hypothesis builder for function value.  (Contributed by
       NM, 14-Nov-1995.)  (Revised by Mario Carneiro, 15-Oct-2016.) $)
    nffv $p |- F/_ x ( F ` A ) $=
      ( vy cfv cv wbr cio df-fv nfcv nfbr nfiota nfcxfr ) ABCGBFHZCIZFJFBCKQAFA
      BPCEDAPLMNO $.
  $}


  ${
    $d y z A $.  $d y z F $.  $d y ph $.  $d x y z $.
    nffvd.2 $e |- ( ph -> F/_ x F ) $.
    nffvd.3 $e |- ( ph -> F/_ x A ) $.
    $( Deduction version of bound-variable hypothesis builder ~ nffv .
       (Contributed by NM, 10-Nov-2005.)  (Revised by Mario Carneiro,
       15-Oct-2016.) $)
    nffvd $p |- ( ph -> F/_ x ( F ` A ) ) $=
      ( vz cv wcel wal cab cfv wnfc nfaba1 nffv wb wa nfnfc1 wceq abidnf adantr
      nfan adantl fveq12d nfceqdf syl2anc mpbii ) ABGHZCIZBJGKZUHDIZBJGKZLZMZBC
      DLZMZBUJULUKBGNUIBGNOABDMZBCMZUNUPPEFUQURQZBUMUOUQURBBDRBCRUBUSUJCULDUQUL
      DSURBGDTUAURUJCSUQBGCTUCUDUEUFUG $.
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z F $.  $d x y z $.
    $( Move class substitution in and out of a function value.  (Contributed by
       ?who?, 11-Nov-2005.) $)
    csbfv12g $p |- ( A e. C ->
                 [_ A / x ]_ ( F ` B ) = ( [_ A / x ]_ F ` [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cfv csb ax-17 hbcsb1g hbfvd hbcsb1f csbeq1a fveq12d csbcog
      wceq wel hbfv vex weq eqtr3d vtoclef fveq1d fveq2d 3eqtrd csbiegf 3eqtr3d
      hbeq a1i ) BDHZFBAFIZCEJZKZKFBAUNCKZKZFBAUNEKZKZJZABUOKABCKZABEKZJFGBUPVA
      DUMFGURUTUMFLFGBUSDGIBHFLZMFGBUQDVDMNUNBSZUPUQUSJZUQUTJVAUPVFSZVEVGAUNAGG
      UPVFAGUNUOGFTALZOAGUQUSAGUNEVHOAGUNCVHOUAUKFUBAFUCZUOUPVFAUNUOPVICUQEUSAU
      NEPAUNCPQUDUEULVEUQUSUTFBUSPUFVEUQURUTFBUQPUGUHUIAFBUODRUMURVBUTVCAFBEDRA
      FBCDRQUJ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y C $.  $d x y F $.
    $( Move class substitution in and out of a function value.  (Contributed by
       ?who?, 10-Nov-2005.) $)
    csbfv2g $p |- ( A e. C -> [_ A / x ]_ ( F ` B ) =
                  ( F ` [_ A / x ]_ B ) ) $=
      ( wcel cfv csb csbfv12g csbconstgfv fveq1d eqtrd ) BDFZABCEGHABCHZABEHZGN
      EGABCDEIMNOEABEDJKL $.
      $( [10-Nov-2005] $)

    $( Substitution for a function value.  (Contributed by ?who?,
       1-Jan-2006.) $)
    csbfvg $p |- ( A e. C -> [_ A / x ]_ ( F ` x ) = ( F ` A ) ) $=
      ( wcel cv cfv csb csbfv2g csbvarg fveq2d eqtrd ) BCEZABAFZDGHABNHZDGBDGAB
      NCDIMOBDABCJKL $.
      $( [1-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( The value of a class exists.  Corollary 6.13 of [TakeutiZaring] p. 27.
       (Contributed by ?who?, 30-Dec-1996.) $)
    fvex $p |- ( F ` A ) e. _V $=
      ( vx cfv cv wbr cio cvv dffv4 iotaex eqeltri ) ABDACEBFZCGHCABILCJK $.
      $( [30-Dec-1996] $)
  $}

  $( Move a conditional outside of a function.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  fvif $p |- ( F ` if ( ph , A , B ) ) = if ( ph , ( F ` A ) , ( F ` B ) ) $=
    ( cif cfv fveq2 ifsb ) ABCABCEZDFBDFCDFIBDGICDGH $.
    $( [2-Sep-2009] $)

  ${
    $d x y z F $.  $d x y z A $.
    $( Alternate definition of the value of a function.  Definition 6.11 of
       [TakeutiZaring] p. 26.  (Contributed by ?who?, 30-Apr-2004.) $)
    fv3 $p |- ( F ` A ) = { x | ( E. y ( x e. y /\ A F y ) /\
              E! y A F y ) } $=
      ( vz wel cv wbr wa wex weu cfv wcel weq wb wal elfv wi breq2 sylib anim2i
      bi2 alimi vex ceqsalv eximi elequ2 anbi12d cbvexv 19.40 simprd sylibr jca
      df-eu hbeu1 ax-17 hba1 hban hbex hbim ax-14 syl6 com23 imp3a anc2ri com12
      bi1 sps eximdv syl5bi exlimi imp impbii bitri abbi2i ) ABFZCBGZDHZIZBJZVR
      BKZIZACDLZAGZWCMAEFZVRBENZOZBPZIZEJZWBEBWDCDQWJWBWJVTWAWJWECEGZDHZIZEJVTW
      IWMEWHWLWEWHWFVRRZBPWLWGWNBVRWFUBUCVRWLBWKEUDVQWKCDSUETUAUFWMVSEBEBNWEVPW
      LVREBAUGWKVQCDSUHUITWJWHEJZWAWJWEEJWOWEWHEUJUKVRBEUNZULUMVTWAWJVSWAWJRBWA
      WJBVRBUOWIBEWEWHBWEBUPWGBUQURUSUTWAWOVSWJWPVSWHWIEWHVSWIWHVSWEWGVSWERBWGV
      PVRWEWGVRVPWEWGVRWFVPWERVRWFVGBEAVAVBVCVDVHVEVFVIVJVKVLVMVNVO $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x F $.  $d x A $.  $d x B $.
    $( The value of a restricted function.  (Contributed by ?who?,
       2-Aug-1994.)  (Revised by ?who?, 16-Feb-2004.) $)
    fvres $p |- ( A e. B -> ( ( F |` B ) ` A ) = ( F ` A ) ) $=
      ( vx wcel cv cres wbr cio cfv iba brres syl6rbbr iotabidv dffv4 3eqtr4g
      wa ) ABEZADFZCBGZHZDIASCHZDIATJACJRUAUBDRUBUBRQUARUBKASCBLMNDATODACOP $.
      $( [16-Feb-2004] $) $( [2-Aug-1994] $)
  $}

  $( The value of a member of the domain of a subclass of a function.
     (Contributed by ?who?, 15-Aug-1994.)  (Revised by ?who?, 29-May-2007.) $)
  funssfv $p |- ( ( Fun F /\ G C_ F /\ A e. dom G ) ->
                ( F ` A ) = ( G ` A ) ) $=
    ( wfun wss cdm wcel cfv wceq wa cres fvres eqcomd funssres fveq1d sylan9eqr
    3impa ) BDZCBEZACFZGZABHZACHZIUARSJZUBABTKZHZUCUAUFUBATBLMUDAUECBCNOPQ $.
    $( [29-May-2007] $) $( [15-Aug-1994] $)

  ${
    $d y z w F $.  $d y z w A $.  $d z w B $.
    $( Function value.  Theorem 6.12(1) of [TakeutiZaring] p. 27.  (Contributed
       by ?who?, 30-Apr-2004.) $)
    tz6.12-1 $p |- ( ( A F B /\ E! y A F y ) -> ( F ` A ) = B ) $=
      ( vw vz cv wbr weu wceq ax-17 breq2 wa wcel wi wex bitri cvv syl com12
      cfv cbveu wel fv3 abeq2i ancom exancom anbi2i eupicka brex simprd imbi12d
      wal eleq2 spcgv pm2.43d sylbi adantr adantl anbi12d spcegv mpcom anim1i
      anasss sylibr expcom impbid eqrdv sylan2b ) BAGZDHZAIBCDHZBEGZDHZEIZBDUAZ
      CJVKVNAEVKEKVNAKVJVMBDLUBVLVOMZFVPCVQFGZVPNZVRCNZVLVSVTOVOVSVLVTVSVOVNFEU
      CZMEPZMZVLVTOZVSWAVNMZEPZVOMZWCWGFVPFEBDUDUEZWGVOWFMWCWFVOUFWFWBVOWAVNEUG
      UHQQWCVNWAOZEUMZWDVNWAEUIWJVLVTVLWJWDVLCRNZWJWDOVLBRNWKBCDUJUKZWIWDECRVMC
      JZVNVLWAVTVMCBDLZVMCVRUNZULUOSTUPSUQTURVTVQVSVTVQMWGVSVTVLVOWGVTVLMZWFVOW
      KWPWFVLWKVTWLUSWEWPECRWMWAVTVNVLWOWNUTVAVBVCVDWHVEVFVGVHVI $.
      $( [30-Apr-2004] $)

    $( Function value.  Theorem 6.12(1) of [TakeutiZaring] p. 27.  (Contributed
       by ?who?, 10-Jul-1994.) $)
    tz6.12 $p |- ( ( <. A , B >. e. F /\ E! y <. A , y >. e. F ) ->
                 ( F ` A ) = B ) $=
      ( cop wcel wbr cv weu cfv wceq df-br eubii tz6.12-1 syl2anbr ) BCEDFBCDGB
      AHZDGZAIBDJCKBPEDFZAIBCDLQRABPDLMABCDNO $.
      $( [10-Jul-1994] $)
  $}

  ${
    $d x y z w $.  $d z w v F $.
    tz6.12f.1 $e |- ( w e. F -> A. y w e. F ) $.
    $( Function value, using bound-variable hypotheses instead of distinct
       variable conditions.  (Contributed by ?who?, 30-Aug-1999.) $)
    tz6.12f $p |- ( ( <. x , y >. e. F /\ E! y <. x , y >. e. F ) ->
                 ( F ` x ) = y ) $=
      ( vz cv cop wcel weu cfv wceq ax-17 weq opeq2 eleq1d cbveu tz6.12 sylan2b
      hbel ) AGZBGZHZDIZBJUDUAFGZHZDIZFJUADKUBLUDUGBFUDFMBCCUFDCGUFIBMETBFNUCUF
      DUBUEUAOPQFUAUBDRS $.
      $( [30-Aug-1999] $)
  $}

  ${
    $d x y z A $.  $d x y z F $.
    $( Function value when ` F ` is not a function.  Theorem 6.12(2) of
       [TakeutiZaring] p. 27.  (Contributed by ?who?, 30-Apr-2004.) $)
    tz6.12-2 $p |- ( -. E! y A F y -> ( F ` A ) = (/) ) $=
      ( vx vz cv wbr weu wn cfv wel wa wex cab c0 fv3 wcel vex weq anbi1d con3i
      elequ1 exbidv elab simprbi eq0rdv syl5eq ) BAFCGZAHZIZBCJDAKZUHLZAMZUILZD
      NZODABCPUJEUOEFZUOQZUIUQEAKZUHLZAMZUIUNUTUILDUPERDESZUMUTUIVAULUSAVAUKURU
      HDEAUBTUCTUDUEUAUFUG $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.
    $( Corollary of Theorem 6.12(1) of [TakeutiZaring] p. 27.  (Contributed by
       ?who?, 30-Apr-2004.) $)
    tz6.12c $p |- ( E! y A F y -> ( ( F ` A ) = B <-> A F B ) ) $=
      ( cv wbr weu cfv wceq wex euex wi hbeu1 ax-17 hbim tz6.12-1 breq2 biimprd
      expcom syli com12 exlimi mpcom syl5ibcom impbid ) BAEZDFZAGZBDHZCIZBCDFZU
      HBUIDFZUJUKUGAJUHULUGAKUGUHULLAUHULAUGAMULANOUHUGULUGUHUIUFIZULUGUHUMABUF
      DPSUMULUGUIUFBDQRTUAUBUCUICBDQUDUKUHUJABCDPSUE $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.
    $( Corollary of Theorem 6.12(2) of [TakeutiZaring] p. 27.  (Contributed by
       ?who?, 30-Apr-2004.)  (Revised by ?who?, 6-Apr-2007.) $)
    tz6.12i $p |- ( B =/= (/) -> ( ( F ` A ) = B -> A F B ) ) $=
      ( vy cfv wceq c0 wne wbr wi cv tz6.12-2 necon1ai eqid tz6.12c mpbii neeq1
      weu syl breq2 imbi12d com12 ) ACEZBFZBGHZABCIZUDUCGHZAUCCIZJUEUFJUGADKCID
      RZUHUIUCGDACLMUIUCUCFUHUCNDAUCCOPSUDUGUEUHUFUCBGQUCBACTUAPUB $.
      $( [6-Apr-2007] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( The value of a class outside its domain is the empty set.  (Contributed
       by ?who?, 24-Aug-1995.) $)
    ndmfv $p |- ( -. A e. dom F -> ( F ` A ) = (/) ) $=
      ( vx cdm wcel cv wbr wex cfv c0 wceq eldm wn weu euex tz6.12-2 syl sylnbi
      con3i ) ABDEACFBGZCHZABIJKZCABLUAMTCNZMUBUCUATCOSCABPQR $.
      $( [24-Aug-1995] $)
  $}

  ${
    ndmfvrcl.1 $e |- dom F = S $.
    ndmfvrcl.2 $e |- -. (/) e. S $.
    $( Reverse closure law for function with the empty set not in its domain.
       (Contributed by ?who?, 26-Apr-1996.) $)
    ndmfvrcl $p |- ( ( F ` A ) e. S -> A e. S ) $=
      ( cfv wcel cdm wn c0 ndmfv eleq1d mtbiri con4i syl6eleq ) ACFZBGZACHZBARG
      ZQSIZQJBGETPJBACKLMNDO $.
      $( [26-Apr-1996] $)
  $}

  $( If a function value has a member, the argument belongs to the domain.
     (Contributed by ?who?, 12-Feb-2007.) $)
  elfvdm $p |- ( A e. ( F ` B ) -> B e. dom F ) $=
    ( cfv wcel c0 wne cdm ne0i ndmfv necon1ai syl ) ABCDZEMFGBCHEZMAINMFBCJKL
    $.
    $( [12-Feb-2007] $)

  $( The value of a non-member of a restriction is the empty set.  (Contributed
     by ?who?, 13-Nov-1995.) $)
  nfvres $p |- ( -. A e. B -> ( ( F |` B ) ` A ) = (/) ) $=
    ( wcel wn cres cdm cfv c0 wceq cin wa dmres eleq2i elin bitri simplbi con3i
    ndmfv syl ) ABDZEACBFZGZDZEAUBHIJUDUAUDUAACGZDZUDABUEKZDUAUFLUCUGACBMNABUEO
    PQRAUBST $.
    $( [13-Nov-1995] $)

  ${
    $d x y A $.  $d x y F $.
    $( If the restriction of a class to a singleton is not a function, its
       value is the empty set.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.)  (Contributed by ?who?, 8-Aug-2010.)  (Revised by ?who?,
       22-Oct-2011.) $)
    nfunsn $p |- ( -. Fun ( F |` { A } ) -> ( F ` A ) = (/) ) $=
      ( vx vy cfv c0 wceq csn cres wfun wn wrel cv wbr wmo wal weu eumo sylbi
      wa wcel brres wb vex elsn breq1 biimpac moimi syl tz6.12-2 alrimiv relres
      nsyl4 jctil dffun6 sylibr con1i ) ABEFGZBAHZIZJZURKZUTLZCMZDMZUTNZDOZCPZT
      VAVBVHVCVBVGCAVEBNZDQZVGURVJVIDOVGVIDRVFVIDVFVDVEBNZVDUSUAZTVIVDVEBUSUBVL
      VKVIVLVDAGVKVIUCVDACUDUEVDAVEBUFSUGSUHUIDABUJUMUKBUSULUNCDUTUOUPUQ $.
      $( [22-Oct-2011] $) $( [8-Aug-2010] $)
  $}

  $( Function value of the empty set.  (Contributed by Stefan O'Rear,
     26-Nov-2014.) $)
  fv01 $p |- ( (/) ` A ) = (/) $=
    ( c0 cdm wcel wn cfv wceq noel dm0 eleq2i mtbir ndmfv ax-mp ) ABCZDZEABFBGO
    ABDAHNBAIJKABLM $.
    $( [26-Nov-2014] $)

  $( Equal values imply equal values in a restriction.  (Contributed by ?who?,
     13-Nov-1995.) $)
  fveqres $p |- ( ( F ` A ) = ( G ` A ) ->
                ( ( F |` B ) ` A ) = ( ( G |` B ) ` A ) ) $=
    ( wcel cfv wceq cres wi fvres eqeq12d biimprd wn nfvres eqtr4d a1d pm2.61i
    c0 ) ABEZACFZADFZGZACBHFZADBHFZGZISUEUBSUCTUDUAABCJABDJKLSMZUEUBUFUCRUDABCN
    ABDNOPQ $.
    $( [13-Nov-1995] $)

  ${
    $d x y A $.  $d x y F $.  $d x y B $.
    $( The second argument of a binary relation on a function is the function's
       value.  (Contributed by ?who?, 30-Apr-2004.) $)
    funbrfv $p |- ( Fun F -> ( A F B -> ( F ` A ) = B ) ) $=
      ( vx vy wfun wbr cfv wceq cvv wcel wa brex adantl cv breq1 anbi2d imbi12d
      wi fveq2 eqeq1d breq2 eqeq2 weu funeu tz6.12-1 sylan2 anabss7 vtocl2g ex
      mpcom ) CFZABCGZACHZBIZAJKBJKLZULUMLZUOUMUPULABCMNULDOZEOZCGZLZURCHZUSIZS
      ULAUSCGZLZUNUSIZSUQUOSDEABJJURAIZVAVEVCVFVGUTVDULURAUSCPQVGVBUNUSURACTUAR
      USBIZVEUQVFUOVHVDUMULUSBACUBQUSBUNUCRULUTVCVAUTUTEUDVCDECUEEURUSCUFUGUHUI
      UKUJ $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.  $d x y B $.
    $( The second element in an ordered pair member of a function is the
       function's value.  (Contributed by ?who?, 19-Jul-1996.) $)
    funopfv $p |- ( Fun F -> ( <. A , B >. e. F -> ( F ` A ) = B ) ) $=
      ( cop wcel wbr wfun cfv wceq df-br funbrfv syl5bir ) ABDCEABCFCGACHBIABCJ
      ABCKL $.
      $( [19-Jul-1996] $)
  $}

  ${
    $d x F $.  $d x A $.  $d x B $.  $d x C $.
    $( Equivalence of function value and binary relation.  (Contributed by
       ?who?, 17-Feb-2013.) $)
    fnbrfvb $p |- ( ( F Fn A /\ B e. A ) ->
                   ( ( F ` B ) = C <-> B F C ) ) $=
      ( vx wfn wcel wa cv wbr weu cfv wceq wb fneu tz6.12c syl ) DAFBAGHBEIDJEK
      BDLCMBCDJNEABDOEBCDPQ $.
      $( [17-Feb-2013] $)
  $}

  $( Equivalence of function value and ordered pair membership.  (Contributed
     by ?who?, 9-Jan-2015.) $)
  fnopfvb $p |- ( ( F Fn A /\ B e. A ) ->
                   ( ( F ` B ) = C <-> <. B , C >. e. F ) ) $=
    ( wfn wcel wa cfv wceq wbr cop fnbrfvb df-br syl6bb ) DAEBAFGBDHCIBCDJBCKDF
    ABCDLBCDMN $.
    $( [9-Jan-2015] $)

  $( Equivalence of function value and binary relation.  (Contributed by ?who?,
     9-Jan-2015.) $)
  funbrfvb $p |- ( ( Fun F /\ A e. dom F ) ->
                   ( ( F ` A ) = B <-> A F B ) ) $=
    ( wfun cdm wfn wcel cfv wceq wbr wb funfn fnbrfvb sylanb ) CDCCEZFAOGACHBIA
    BCJKCLOABCMN $.
    $( [9-Jan-2015] $)

  $( Equivalence of function value and ordered pair membership.  Theorem
     4.3(ii) of [Monk1] p. 42.  (Contributed by ?who?, 9-Jan-2015.) $)
  funopfvb $p |- ( ( Fun F /\ A e. dom F ) ->
                   ( ( F ` A ) = B <-> <. A , B >. e. F ) ) $=
    ( wfun cdm wcel wa cfv wceq wbr cop funbrfvb df-br syl6bb ) CDACEFGACHBIABC
    JABKCFABCLABCMN $.
    $( [9-Jan-2015] $)

  ${
    $d x y z w A $.  $d x y B $.  $d x y z w F $.  $d x y C $.

    $( Function value in terms of a binary relation.  (Contributed by Mario
       Carneiro, 19-Mar-2014.) $)
    funbrfv2b $p |- ( Fun F ->
                       ( A F B <-> ( A e. dom F /\ ( F ` A ) = B ) ) ) $=
      ( wfun wbr cdm wcel cfv wceq breldm a1i pm4.71rd funbrfvb pm5.32da bitr4d
      wa wi ) CDZABCEZACFGZSPTACHBIZPRSTSTQRABCJKLRTUASABCMNO $.
      $( [19-Mar-2014] $)

    $( Representation of a function in terms of its values.  (Contributed by
       ?who?, 29-Jan-2004.) $)
    dffn5 $p |- ( F Fn A <->
                   F = { <. x , y >. | ( x e. A /\ y = ( F ` x ) ) } ) $=
      ( vz vw wfn cv wcel cfv wceq wa copab cop wb wal fnop vex weq wrel syl5bb
      ex pm4.71rd eqcom fnopfvb pm5.32da bitr4d eleq1 fveq2 eqeq2d eqeq1 anbi2d
      anbi12d opelopab syl6bbr alrimivv fnrel relopab eqrel sylancl mpbird fvex
      eqid fnopab2 fneq1 mpbiri impbii ) DCGZDAHZCIZBHZVIDJZKZLZABMZKZVHVPEHZFH
      ZNZDIZVSVOIZOZFPEPZVHWBEFVHVTVQCIZVRVQDJZKZLZWAVHVTWDVTLWGVHVTWDVHVTWDCVQ
      VRDQUBUCVHWDWFVTWFWEVRKVHWDLVTVRWEUDCVQVRDUEUAUFUGVNWDVKWEKZLWGABVQVRERFR
      AESZVJWDVMWHVIVQCUHWIVLWEVKVIVQDUIUJUMBFSWHWFWDVKVRWEUKULUNUOUPVHDTVOTVPW
      COCDUQVNABUREFDVOUSUTVAVPVHVOCGABCVLVOVIDVBVOVCVDCDVOVEVFVG $.
      $( [29-Jan-2004] $)

    $( The range of a function expressed as a collection of the function's
       values.  (Contributed by ?who?, 20-Oct-2005.) $)
    fnrnfv $p |- ( F Fn A -> ran F = { y | E. x e. A y = ( F ` x ) } ) $=
      ( wfn crn cv cop wcel wex cab wceq wrex dfrn3 wa fnop ex pm4.71rd fnopfvb
      cfv pm5.32da bitr4d exbidv eqcom rexbii df-rex syl6bbr abbidv syl5eq
      bitri ) DCEZDFAGZBGZHDIZAJZBKUMULDTZLZACMZBKABDNUKUOURBUKUOULCIZUPUMLZOZA
      JZURUKUNVAAUKUNUSUNOVAUKUNUSUKUNUSCULUMDPQRUKUSUTUNCULUMDSUAUBUCURUTACMVB
      UQUTACUMUPUDUEUTACUFUJUGUHUI $.
      $( [20-Oct-2005] $)

    $( A member of a function's range is a value of the function.  (Contributed
       by ?who?, 31-Oct-1995.) $)
    fvelrnb $p |- ( F Fn A -> ( B e. ran F <-> E. x e. A ( F ` x ) = B ) ) $=
      ( vy wfn crn wcel cv cfv wceq wrex cab fnrnfv eleq2d cvv fvex eleq1 mpbii
      syl6bb rexlimivw eqeq1 eqcom rexbidv elab3 ) DBFZCDGZHCEIZAIZDJZKZABLZEMZ
      HUJCKZABLZUFUGUMCAEBDNOULUOECUNCPHZABUNUJPHUPUIDQUJCPRSUAUHCKZUKUNABUQUKC
      UJKUNUHCUJUBCUJUCTUDUET $.
      $( [31-Oct-1995] $)

    $( Alternate definition of the image of a function.  (Contributed by Raph
       Levien, 20-Nov-2006.) $)
    dfimafn $p |- ( ( Fun F /\ A C_ dom F ) ->
                  ( F " A ) = { y | E. x e. A ( F ` x ) = y } ) $=
      ( wfun cdm wss wa cv cfv wceq wrex cab cima wcel wb ssel2 funbrfvb sylan2
      wbr anassrs rexbidva abbidv df-ima syl6reqr ) DEZCDFZGZHZAIZDJBIZKZACLZBM
      UJUKDTZACLZBMDCNUIUMUOBUIULUNACUFUHUJCOZULUNPZUHUPHUFUJUGOUQCUGUJQUJUKDRS
      UAUBUCBADCUDUE $.
      $( [20-Nov-2006] $)

    $( Alternate definition of the image of a function as an indexed union of
       singletons of function values.  (Contributed by Raph Levien,
       20-Nov-2006.) $)
    dfimafn2 $p |- ( ( Fun F /\ A C_ dom F ) ->
                   ( F " A ) = U_ x e. A { ( F ` x ) } ) $=
      ( vy wfun cdm wss wa cima cv cfv wceq cab ciun wrex dfimafn iunab syl6eqr
      csn wcel df-sn eqcom abbii eqtri a1i iuneq2i ) CEBCFGHZCBIZABAJZCKZDJZLZD
      MZNZABUJSZNUGUHULABODMUNADBCPULADBQRABUOUMUOUMLUIBTUOUKUJLZDMUMDUJUAUPULD
      UKUJUBUCUDUEUFR $.
      $( [20-Nov-2006] $)

    $( Membership relation for the values of a function whose image is a
       subclass.  (Contributed by Raph Levien, 20-Nov-2006.) $)
    funimass4 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( ( F " A ) C_ B <-> A. x e. A ( F ` x ) e. B ) ) $=
      ( vy cima wss cv wcel wi wal wfun cdm wa cfv wral dfss2 wceq wrex syl5bb
      wbr wb ssel2 eqcom funbrfvb sylan2 anassrs rexbidva elima syl6rbbr imbi1d
      r19.23v syl6bbr albidv ralcom4 fvex eleq1 ceqsalv ralbii bitr3i syl6bb )
      DBFZCGEHZVBIZVCCIZJZEKZDLZBDMZGZNZAHZDOZCIZABPZEVBCQVKVGVCVMRZVEJZABPZEKZ
      VOVKVFVREVKVFVPABSZVEJVRVKVDVTVEVKVTVLVCDUAZABSVDVKVPWAABVHVJVLBIZVPWAUBZ
      VJWBNVHVLVIIZWCBVIVLUCVPVMVCRVHWDNWAVCVMUDVLVCDUETUFUGUHAVCDBUIUJUKVPVEAB
      ULUMUNVSVQEKZABPVOVQAEBUOWEVNABVEVNEVMVLDUPVCVMCUQURUSUTVAT $.
      $( [20-Nov-2006] $)

    $( Function value in an image.  Part of Theorem 4.4(iii) of [Monk1] p. 42.
       (The proof was shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed
       by ?who?, 29-Apr-2004.)  (Revised by ?who?, 22-Oct-2011.) $)
    fvelima $p |- ( ( Fun F /\ A e. ( F " B ) ) ->
                  E. x e. B ( F ` x ) = A ) $=
      ( wfun cima wcel cv cfv wceq wrex wbr elima funbrfv reximdv syl5bi imp )
      DEZBDCFGZAHZDIBJZACKZSTBDLZACKRUBABDCMRUCUAACTBDNOPQ $.
      $( [22-Oct-2011] $) $( [29-Apr-2004] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d x y C $.  $d x y F $.
    $( Function value in an image.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.)  (An unnecessary distinct variable restriction was removed
       by David Abernethy, 17-Dec-2011.)  (Contributed by ?who?, 20-Jan-2007.)
       (Revised by ?who?, 25-Dec-2011.) $)
    fvelimab $p |- ( ( F Fn A /\ B C_ A ) -> ( C e. ( F " B ) <->
                  E. x e. B ( F ` x ) = C ) ) $=
      ( vy wfn wss wa cima wcel cv cfv wceq wrex cvv anim2i eleq1 wb wi rexbidv
      elex fvex mpbii rexlimivw eqeq2 bibi12d imbi2d wfun cdm fnfun adantr fndm
      cab sseq2d biimpar dfimafn syl2anc abeq2d vtoclg impcom pm5.21nd ) EBGZCB
      HZIZDECJZKZALZEMZDNZACOZVEDPKZIVGVLVEDVFUBQVKVLVEVJVLACVJVIPKVLVHEUCVIDPR
      UDUEQVLVEVGVKSZVEFLZVFKZVIVNNZACOZSZTVEVMTFDPVNDNZVRVMVEVSVOVGVQVKVNDVFRV
      SVPVJACVNDVIUFUAUGUHVEVQFVFVEEUIZCEUJZHZVFVQFUNNVCVTVDBEUKULVCWBVDVCWABCB
      EUMUOUPAFCEUQURUSUTVAVB $.
      $( [25-Dec-2011] $) $( [20-Jan-2007] $)
  $}

  ${
    $d x B $.  $d x C $.  $d x F $.  $d x V $.
    $( Membership in the preimage of a singleton, under a function.
       (Contributed by Mario Carneiro, 12-May-2014.) $)
    fniniseg $p |- ( F Fn A ->
                 ( C e. ( `' F " { B } ) <-> ( C e. A /\ ( F ` C ) = B ) ) ) $=
      ( ccnv csn cima wcel wbr wfn cfv wceq eliniseg cdm breldm eleq2d pm4.71rd
      wa fndm syl5ib fnbrfvb pm5.32da bitr4d syl5bb ) CDEBFGHCBDIZDAJZCAHZCDKBL
      ZRZDBCMUFUEUGUERUIUFUEUGUECDNZHUFUGCBDOUFUJACADSPTQUFUGUHUEACBDUAUBUCUD
      $.
      $( [12-May-2014] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.
    $( The indexed intersection of a function's values is the intersection of
       its range.  (Contributed by ?who?, 20-Oct-2005.) $)
    fniinfv $p |- ( F Fn A -> |^|_ x e. A ( F ` x ) = |^| ran F ) $=
      ( vy wfn crn cint cv cfv wceq wrex cab ciin fnrnfv inteqd dfiin2 syl6reqr
      fvex ) CBEZCFZGDHAHZCIZJABKDLZGABUBMSTUCADBCNOADBUBUACRPQ $.
      $( [20-Oct-2005] $)

    $( Singleton of function value.  (Contributed by ?who?, 22-May-1998.) $)
    fnsnfv $p |- ( ( F Fn A /\ B e. A ) -> { ( F ` B ) } = ( F " { B } ) ) $=
      ( vy wfn wcel wa cv cfv wceq cab wbr csn cima eqcom fnbrfvb syl5bb abbidv
      df-sn imasn 3eqtr4g ) CAEBAFGZDHZBCIZJZDKBUCCLZDKUDMCBMNUBUEUFDUEUDUCJUBU
      FUCUDOABUCCPQRDUDSDBCTUA $.
      $( [22-May-1998] $)
  $}

  $( The image of a pair under a funtion.  (Contributed by Jeff Madsen,
     6-Jan-2011.) $)
  fnimapr $p |- ( ( F Fn A /\ B e. A /\ C e. A ) ->
                          ( F " { B , C } ) = { ( F ` B ) , ( F ` C ) } ) $=
    ( wfn wcel w3a csn cima cun cfv fnsnfv 3adant3 3adant2 uneq12d eqcomd df-pr
    cpr wceq imaeq2i imaundi eqtri 3eqtr4g ) DAEZBAFZCAFZGZDBHZIZDCHZIZJZBDKZHZ
    CDKZHZJZDBCRZIZUMUORUGUQULUGUNUIUPUKUDUEUNUISUFABDLMUDUFUPUKSUEACDLNOPUSDUH
    UJJZIULURUTDBCQTDUHUJUAUBUMUOQUC $.
    $( [6-Jan-2011] $)

  ${
    $d F x y $.  $d A x y $.
    $( A simplified expression for the value of a function when we know it's a
       function.  (Contributed by ?who?, 22-May-1998.) $)
    funfv $p |- ( Fun F -> ( F ` A ) = U. ( F " { A } ) ) $=
      ( vx vy cvv cima cuni wceq cv wbr wmo wal wi wn c0 syl unieqd uni0 syl6eq
      eqtr4d wfun wcel cfv csn wrel dffun6 simprbi ax-17 breq1 mobid spcgv cio
      cab wex weu df-mo euex con3i iotanul alnex bitri biimpri iotauni ja sylbi
      ab0 dffv4 imasn unieqi 3eqtr4g syl6com fvprc biimpi imaeq2d ima0 pm2.61d1
      snprc eqtri ) BUAZAEUBZABUCZBAUDZFZGZHZVSCIZDIZBJZDKZCLZVTWEMVSBUEWJCDBUF
      UGVTWJAWGBJZDKZWEWIWLCAEWFAHZWHWKDWMDUHWFAWGBUIUJUKWLWKDULZWKDUMZGZWAWDWL
      WKDUNZWKDUOZMWNWPHZWKDUPWQWRWSWQNZWNOWPWTWRNWNOHWRWQWKDUQURWKDUSPWTWPOGZO
      WTWOOWOOHZWTXBWKNDLWTWKDVFWKDUTVAVBQRSTWKDVCVDVEDABVGWCWODABVHVIVJVKPVTNZ
      WAOWDABVLXCWDBOFZGZOXCWCXDXCWBOBXCWBOHAVQVMVNQXEXAOXDOBVOVIRVRSTVP $.
      $( [22-May-1998] $)
  $}

  ${
    $d y A $.  $d y F $.
    $( The value of a function.  Definition of function value in [Enderton]
       p. 43.  (Contributed by ?who?, 22-May-1998.)  (Revised by ?who?,
       11-May-2005.) $)
    funfv2 $p |- ( Fun F -> ( F ` A ) = U. { y | A F y } ) $=
      ( wfun cfv csn cima cuni cv wbr cab funfv imasn unieqi syl6eq ) CDBCECBFG
      ZHBAICJAKZHBCLPQABCMNO $.
      $( [11-May-2005] $) $( [22-May-1998] $)
  $}

  ${
    $d w z A $.  $d w z F $.  $d w y z $.
    funfv2f.1 $e |- ( z e. A -> A. y z e. A ) $.
    funfv2f.2 $e |- ( z e. F -> A. y z e. F ) $.
    $( The value of a function.  Version of ~ funfv2 using a bound-variable
       hypotheses instead of distinct variable conditions.  (Contributed by
       ?who?, 19-Feb-2006.) $)
    funfv2f $p |- ( Fun F -> ( F ` A ) = U. { y | A F y } ) $=
      ( vw wfun cfv cv wbr cab cuni funfv2 wcel ax-17 hbbr breq2 cbvab unieqi
      syl6eq ) DHCDICGJZDKZGLZMCAJZDKZALZMGCDNUDUGUCUFGAABCUBDEFBJUBOAPQUFGPUBU
      ECDRSTUA $.
      $( [19-Feb-2006] $)
  $}

  $( Value of the union of two functions when the domains are separate.
     (Contributed by FL, 7-Nov-2011.) $)
  fvun $p |- ( ( ( Fun F /\ Fun G ) /\ ( dom F i^i dom G ) = (/) ) ->
                ( ( F u. G ) ` A ) = ( ( F ` A ) u. ( G ` A ) ) ) $=
    ( wfun wa cdm cin c0 wceq cun cfv csn cima cuni funun funfv imaundir eqcomd
    syl a1i unieqd uniun anim12i adantr uneq12 syl5eq 3eqtrd ) BDZCDZEZBFCFGHIZ
    EZABCJZKZUMALZMZNZBUOMZCUOMZJZNZABKZACKZJZULUMDUNUQIBCOAUMPSULUPUTUPUTIULBC
    UOQTUAULVAURNZUSNZJZVDURUSUBULVEVBIZVFVCIZEZVGVDIUJVJUKUHVHUIVIUHVBVEABPRUI
    VCVFACPRUCUDVEVBVFVCUESUFUG $.
    $( [7-Nov-2011] $)

  ${
    $d A x $.  $d B x $.  $d X x $.
    $( The value of a union when the argument is in the first domain.
       (Contributed by Scott Fenton, 29-Jun-2013.) $)
    fvun1 $p |- ( ( F Fn A /\ G Fn B /\ ( ( A i^i B ) = (/) /\ X e. A ) ) ->
    ( ( F u. G ) ` X ) = ( F ` X ) ) $=
      ( vx wfn cin c0 wceq wcel wa cun cfv wfun cdm fnfun 3ad2ant2 fndm wn fvun
      w3a 3ad2ant1 ineq12 syl2an eqeq1d biimprd adantrd 3impia syl21anc cv wral
      wi eleq1 notbid rspccv sylbi imp 3ad2ant3 eleq2d mtbird ndmfv syl uneq2d
      disj eqtrd un0 syl6eq ) CAGZDBGZABHZIJZEAKZLZUBZECDMNZECNZIMZVQVOVPVQEDNZ
      MZVRVOCOZDOZCPZDPZHZIJZVPVTJVIVJWAVNACQUCVJVIWBVNBDQRVIVJVNWFVIVJLZVLWFVM
      WGWFVLWGWEVKIVIWCAJWDBJZWEVKJVJACSBDSZWCAWDBUDUEUFUGUHUIECDUAUJVOVSIVQVOE
      WDKZTVSIJVOWJEBKZVNVIWKTZVJVLVMWLVLFUKZBKZTZFAULVMWLUMFABVEWOWLFEAWMEJWNW
      KWMEBUNUOUPUQURUSVOWDBEVJVIWHVNWIRUTVAEDVBVCVDVFVQVGVH $.
      $( [29-Jun-2013] $)
  $}

  $( The value of a union when the argument is in the second domain.
     (Contributed by Scott Fenton, 29-Jun-2013.) $)
  fvun2 $p |- ( ( F Fn A /\ G Fn B /\ ( ( A i^i B ) = (/) /\ X e. B ) ) ->
    ( ( F u. G ) ` X ) = ( G ` X ) ) $=
    ( wfn cin c0 wceq wcel w3a cun cfv uncom fveq1i incom eqeq1i anbi1i fvun1
    wa syl3an3b 3com12 syl5eq ) CAFZDBFZABGZHIZEBJZTZKECDLZMEDCLZMZEDMZEUJUKCDN
    OUEUDUIULUMIZUIUEUDBAGZHIZUHTUNUGUPUHUFUOHABPQRBADCESUAUBUC $.
    $( [29-Jun-2013] $)

  ${
    $d y z A $.  $d y z F $.  $d y z G $.
    $( Domains of a function composition.  (Contributed by ?who?,
       27-Jan-1997.) $)
    dmfco $p |- ( ( Fun G /\ A e. dom G ) ->
               ( A e. dom ( F o. G ) <-> ( G ` A ) e. dom F ) ) $=
      ( vy vz wfun cdm wcel wa cv wbr wex cfv ccom wceq fvex breq1 ceqsexv eldm
      exbidv eqcom funbrfvb syl5bb anbi1d syl5rbbr brco exbii bitri 3bitr4g ) C
      FACGHIZADJZCKZUKEJZBKZIZDLZELZACMZUMBKZELABCNZGHZURBGHUJUPUSEUSUKUROZUNIZ
      DLUJUPUNUSDURACPUKURUMBQRUJVCUODUJVBULUNVBURUKOUJULUKURUAAUKCUBUCUDTUETVA
      AUMUTKZELUQEAUTSVDUPEDAUMBCUFUGUHEURBSUI $.
      $( [27-Jan-1997] $)

    $d C y z $.
    $( Value of a function composition.  Similar to second part of Theorem 3H
       of [Enderton] p. 47.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.)  (Contributed by ?who?, 9-Oct-2004.)  (Revised by ?who?,
       22-Oct-2011.) $)
    fvco2 $p |- ( ( G Fn A /\ C e. A ) ->
             ( ( F o. G ) ` C ) = ( F ` ( G ` C ) ) ) $=
      ( vy vz csn cima cv wceq cab cfv wbr cio df-iota dffv4 imasn eqeq1i abbii
      cuni wfn wcel wa ccom fnsnfv imaeq2d syl6reqr eqeq1d abbidv unieqd unieqi
      imaco 3eqtr4i 3eqtr4g ) DAUABAUBUCZCDUDZBGZHZEIGZJZEKZTZCBDLZGZHZUSJZEKZT
      ZBUPLZVCCLZUOVAVGUOUTVFEUOURVEUSUOVECDUQHZHURUOVDVKCABDUEUFCDUQULUGUHUIUJ
      BFIZUPMZFNVMFKZUSJZEKZTVIVBVMFEOFBUPPVAVPUTVOEURVNUSFBUPQRSUKUMVCVLCMZFNV
      QFKZUSJZEKZTVJVHVQFEOFVCCPVGVTVFVSEVEVRUSFVCCQRSUKUMUN $.
      $( [22-Oct-2011] $) $( [9-Oct-2004] $)

  $}

  $( Value of a function composition.  Similar to Exercise 5 of [TakeutiZaring]
     p. 28.  (Contributed by ?who?, 22-Apr-2006.) $)
  fvco $p |- ( ( Fun G /\ A e. dom G ) ->
               ( ( F o. G ) ` A ) = ( F ` ( G ` A ) ) ) $=
    ( wfun cdm wfn wcel ccom cfv wceq funfn fvco2 sylanb ) CDCCEZFANGABCHIACIBI
    JCKNABCLM $.
    $( [22-Apr-2006] $)

  $( Value of a function composition.  (Contributed by ?who?, 3-Jan-2004.)
     (Revised by ?who?, 21-Aug-2006.) $)
  fvco3 $p |- ( ( G : A --> B /\ C e. A ) ->
             ( ( F o. G ) ` C ) = ( F ` ( G ` C ) ) ) $=
    ( wf wfn wcel ccom cfv wceq ffn fvco2 sylan ) ABEFEAGCAHCDEIJCEJDJKABELACDE
    MN $.
    $( [21-Aug-2006] $) $( [3-Jan-2004] $)

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    $( Closed theorem form of ~ fvopab4 .  (Contributed by ?who?,
       21-Feb-2013.) $)
    fvopab4t $p |- ( ( A. x A. y ( x = A -> B = C )
      /\ A. x F = { <. x , y >. | ( x e. D /\ y = B ) }
      /\ ( A e. D /\ C e. V ) ) -> ( F ` A ) = C ) $=
      ( wcel wa cv wceq wi wal copab cvv cfv elex wfun wb anim2i funopab4 simp2
      w3a cop 19.21bi funeqd mpbiri simp3l eqidd eleq1 eqeq2 bi2anan9 ex 2alimi
      a2i 3ad2ant1 eqeq1 anbi2d gen2 simp3 opelopabt syl3anc mpbir2and eleqtrrd
      a1i funopfv sylc syl3an3 ) CFIZEHIZJAKZCLZDELZMZBNANZGVLFIZBKZDLZJZABOZLZ
      ANZVJEPIZJZCGQELZVKWDVJEHRUAVPWCWEUDZGSZCEUEZGIWFWGWHWASVQABDUBWGGWAWGWBA
      VPWCWEUCUFZUGUHWGWIWAGWGWIWAIZVJEELZVPWCVJWDUIWGEUJWGVMVTVJVRELZJZTZMZBNA
      NZWMWNVJWLJZTMZBNANZWEWKWRTVPWCWQWEVOWPABVMVNWOVMVNWOVMVQVJVNVSWMVLCFUKDE
      VRULUMUNUPUOUQWTWGWSABWMWMWLVJVREEURUSUTVFVPWCWEVAVTWNWRABCEFPVBVCVDWJVEC
      EGVGVHVI $.
      $( [21-Feb-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ch $.
    fvopab3g.1 $e |- B e. _V $.
    fvopab3g.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab3g.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    fvopab3g.4 $e |- ( x e. C -> E! y ph ) $.
    fvopab3g.5 $e |- F = { <. x , y >. | ( x e. C /\ ph ) } $.
    $( Value of a function given by ordered-pair class abstraction.
       (Contributed by ?who?, 6-Mar-1996.) $)
    fvopab3g $p |- ( A e. C -> ( ( F ` A ) = B <-> ch ) ) $=
      ( wcel cv wa wceq cvv wb cop copab cfv eleq1 anbi12d anbi2d opelopabg wfn
      mpan2 fnopab fnopfvb mpan eleq2i syl6bb ibar 3bitr4d ) FHOZFGUAZDPZHOZAQZ
      DEUBZOZUQCQZFIUCGRZCUQGSOVCVDTJVAUQBQVDDEFGHSUSFRUTUQABUSFHUDKUEEPGRBCUQL
      UFUGUIUQVEURIOZVCIHUHUQVEVFTADEHIMNUJHFGIUKULIVBURNUMUNUQCUOUP $.
      $( [6-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ch $.
    fvopab3ig.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab3ig.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    fvopab3ig.3 $e |- ( x e. C -> E* y ph ) $.
    fvopab3ig.4 $e |- F = { <. x , y >. | ( x e. C /\ ph ) } $.
    $( Value of a function given by ordered-pair class abstraction.
       (Contributed by ?who?, 23-Oct-1999.) $)
    fvopab3ig $p |- ( ( A e. C /\ B e. D ) -> ( ch -> ( F ` A ) = B ) ) $=
      ( wcel wa cv cfv wceq wmo copab cop funopab wi moanimv mpbir mpgbir simpl
      wfun eleq1 anbi12d anbi2d opelopabg biimprd funopfv fveq1i eqeq1i syl6ibr
      mpand ee02 ) FHOZGIOZPZCFDQZHOZAPZDEUAZRZGSZFJRZGSVGUIZVCCFGUBVGOZVIVKVFE
      TZDVFDEUCVMVEAETUDMVEAEUEUFUGVCVACVLVAVBUHVCVLVACPZVFVABPVNDEFGHIVDFSVEVA
      ABVDFHUJKUKEQGSBCVALULUMUNUSFGVGUOUTVJVHGFJVGNUPUQUR $.
      $( [23-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    fvopab4g.1 $e |- ( x = A -> B = C ) $.
    fvopab4g.2 $e |- F = { <. x , y >. | ( x e. D /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction.
       (Contributed by ?who?, 23-Oct-1999.) $)
    fvopab4g $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( wcel wa wceq cfv eqid cv eqeq2d eqeq1 wmo moeq a1i fvopab3ig mpi ) CFKE
      GKLEEMZCHNEMEOBPZDMZUEEMUDABCEFGHAPZCMDEUEIQUEEERUFBSUGFKBDTUAJUBUC $.
      $( [23-Oct-1999] $)

    ${
      fvopab4.3 $e |- C e. _V $.
      $( Value of a function given by ordered-pair class abstraction.
         (Contributed by ?who?, 23-Oct-1999.) $)
      fvopab4 $p |- ( A e. D -> ( F ` A ) = C ) $=
        ( wcel cvv cfv wceq fvopab4g mpan2 ) CFKELKCGMENJABCDEFLGHIOP $.
        $( [23-Oct-1999] $)
    $}
  $}

  ${
    $d v w z A $.  $d u v w y B $.  $d z w v C $.  $d v w x y D $.  $d u x z $.
    fvopab4gf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopab4gf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopab4gf.3 $e |- ( x = A -> B = C ) $.
    fvopab4gf.4 $e |- F = { <. x , y >. | ( x e. D /\ y = B ) } $.
    $( Value of a function given by an ordered-pair class abstraction.  This
       version of ~ fvopab4g uses bound-variable hypotheses instead of distinct
       variable conditions.  (Contributed by ?who?, 8-Nov-2005.)  (Revised by
       ?who?, 20-Dec-2008.) $)
    fvopab4gf $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( vw vv wcel wa cfv cv ax-17 csb wceq copab wel hbcsb1f hbeleq hban weq wb
      eleq1 adantr csbeq1a eqeqan12rd anbi12d cbvopab eqtri fveq1i csbhypf eqid
      id1 fvopab4g syl5eq ) DGPFHPQDIRDNSZGPZOSZAVCEUAZUBZQZNOUCZRFDIVIIASZGPZB
      SZEUBZQZABUCVIMVNVHABNOVNNTVNOTVDVGAVDATAOVFAOVCEONUDATUEUFUGVHBTANUHZBOU
      HZQVKVDVMVGVOVKVDUIVPVJVCGUJUKVPVOVLVEEVFVPUTAVCEULUMUNUOUPUQNODVFFGHVIAN
      CDEFJKLURVIUSVAVB $.
      $( [20-Dec-2008] $) $( [8-Nov-2005] $)
  $}

  ${
    $d z A $.  $d y B $.  $d z B $.  $d x y C $.  $d x z $.
    fvopab4sf.1 $e |- A e. _V $.
    fvopab4sf.2 $e |- B e. _V $.
    fvopab4sf.3 $e |- ( z e. A -> A. x z e. A ) $.
    fvopab4sf.4 $e |- F = { <. x , y >. | ( x e. C /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction, using
       explicit class substitution.  TODO:  Eliminate redundant first
       hypothesis.  (Contributed by ?who?, 26-Mar-2006.) $)
    fvopab4sf $p |- ( A e. C -> ( F ` A ) = [_ A / x ]_ B ) $=
      ( wcel csb cvv cfv wceq csbex hbcsb1f csbeq1a fvopab4gf mpan2 ) DFLADEMZNL
      DGOUBPADEHIQABCDEUBFNGJACDEJRADESKTUA $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d w A $.  $d w y z B $.  $d w x y z C $.  $d w F $.
    fvopab4s.1 $e |- B e. _V $.
    fvopab4s.2 $e |- F = { <. x , y >. | ( x e. C /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction, using
       explicit class substitution.  (Contributed by ?who?, 26-Mar-2006.) $)
    fvopab4s $p |- ( A e. C -> ( F ` A ) = [_ A / x ]_ B ) $=
      ( vw vz cv cfv csb wceq fveq2 csbeq1 eqeq12d vex wcel ax-17 fvopab4sf
      vtoclga ) IKZFLZAUCDMZNCFLZACDMZNICEUCCNUDUFUEUGUCCFOAUCCDPQABJUCDEFIRGJK
      UCSATHUAUB $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x y A $.
    fvopab4ndm.1 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Value of a function given by an ordered-pair class abstraction, outside
       of its domain.  (Contributed by ?who?, 28-Mar-2008.) $)
    fvopab4ndm $p |- ( -. B e. A -> ( F ` B ) = (/) ) $=
      ( wcel wn cdm cfv c0 wceq cv wa copab dmeqi dmopabss eqsstri sseli con3i
      ndmfv syl ) EDHZIEFJZHZIEFKLMUFUDUEDEUEBNDHAOBCPZJDFUGGQABCDRSTUAEFUBUC
      $.
      $( [28-Mar-2008] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.  $d x y z w C $.
    fvopabg.1 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction.
       (Contributed by ?who?, 2-Sep-2003.) $)
    fvopabg $p |- ( ( A e. V /\ C e. W ) ->
                    ( { <. x , y >. | y = B } ` A ) = C ) $=
      ( wcel cvv cv wceq copab cfv elex wa vex biantrur opabbii fvopab4g sylan
      ) CFICJIEGICBKDLZABMZNELCFOABCDEJGUCHUBAKJIZUBPABUDUBAQRSTUA $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.
    fvopabn.1 $e |- ( x = A -> B = C ) $.
    $( This somewhat non-intuitive theorem tells us the value of its function
       is the empty set when the class ` C ` it would otherwise map to is a
       proper class.  This is a technical lemma that can help eliminate
       redundant sethood antecedents otherwise required by ~ fvopabg .
       (Contributed by ?who?, 21-Oct-2003.) $)
    fvopabn $p |- ( -. C e. _V -> ( { <. x , y >. | y = B } ` A ) = (/) ) $=
      ( vz cvv wcel wn cv wceq copab cfv wbr cio c0 dffv4 weu syl wex euex brex
      wa eqeq2d eqeq1 eqid brabg ibi vex syl6eqelr exlimiv con3i iotanul syl5eq
      wb ) EHIZJZCBKZDLZABMZNCGKZVAOZGPZQGCVARURVCGSZJVDQLVEUQVEVCGUAUQVCGUBVCU
      QGVCEVBHVCVBELZVCCHIVBHIUDVCVFUPCVBVAUCUTUSELVFABCVBHHVAAKCLDEUSFUEUSVBEU
      FVAUGUHTUIGUJUKULTUMVCGUNTUO $.
      $( [21-Oct-2003] $)
  $}

  ${
    $d z w v A $.  $d y w v B $.  $d z w v C $.  $d x y w v $.  $d x z $.
    fvopabgf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopabgf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopabgf.3 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction.
       (Contributed by ?who?, 21-Oct-2003.) $)
    fvopabgf $p |- ( ( A e. D /\ C e. R ) ->
                    ( { <. x , y >. | y = B } ` A ) = C ) $=
      ( vv vw wcel cv wceq copab cfv ax-17 weq wa csb wel hbcsb1f hbeleq csbeq1a
      wb id1 eqeqan12d ancoms cbvopab fveq1i csbhypf fvopabg syl5eq ) DGNFHNUAD
      BOZEPZABQZRDLOZAMOZEUBZPZMLQZRFDURVCUQVBABMLUQMSUQLSALVAALUTELMUCASUDUEVB
      BSBLTZAMTZUQVBUGVDVEUPUSEVAVDUHAUTEUFUIUJUKULMLDVAFGHAMCDEFIJKUMUNUO $.
      $( [21-Oct-2003] $)

    $( The value of a function given by an ordered-pair class abstraction is
       the empty set when the class it would otherwise map to is a proper
       class.  This version of ~ fvopabn uses bound-variable hypotheses instead
       of distinct variable conditions.  (Contributed by ?who?, 21-Oct-2003.)
       (Revised by ?who?, 21-Dec-2008.) $)
    fvopabnf $p |- ( -. C e. _V -> ( { <. x , y >. | y = B } ` A ) = (/) ) $=
      ( vv vw cvv wcel wn cv wceq copab cfv ax-17 weq csb wel hbcsb1f hbeleq id1
      c0 wb csbeq1a eqeqan12d ancoms cbvopab fveq1i csbhypf fvopabn syl5eq ) FL
      MNDBOZEPZABQZRDJOZAKOZEUAZPZKJQZRUFDURVCUQVBABKJUQKSUQJSAJVAAJUTEJKUBASUC
      UDVBBSBJTZAKTZUQVBUGVDVEUPUSEVAVDUEAUTEUHUIUJUKULKJDVAFAKCDEFGHIUMUNUO $.
      $( [21-Dec-2008] $) $( [21-Oct-2003] $)
  $}

  ${
    $d z A $.  $d y B $.  $d z C $.  $d x y $.  $d x u $.  $d x z $.
    fvopabf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopabf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopabf.3 $e |- A e. _V $.
    fvopabf.4 $e |- C e. _V $.
    fvopabf.5 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction.
       (Contributed by ?who?, 14-Sep-2003.) $)
    fvopabf $p |- ( { <. x , y >. | y = B } ` A ) = C $=
      ( cvv wcel cv wceq copab cfv fvopabgf mp2an ) DLMFLMDBNEOABPQFOIJABCDEFLL
      GHKRS $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x z A $.  $d y B $.  $d x z C $.  $d x y z $.
    fvopab.1 $e |- A e. _V $.
    fvopab.2 $e |- C e. _V $.
    fvopab.3 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by an ordered-pair class abstraction.
       (Contributed by ?who?, 17-Apr-1995.) $)
    fvopab $p |- ( { <. x , y >. | y = B } ` A ) = C $=
      ( vz cv wcel ax-17 fvopabf ) ABICDEIJZCKALNEKALFGHM $.
      $( [17-Apr-1995] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    $( Value of a function given by an ordered-pair class abstraction.
       (Contributed by ?who?, 30-Aug-1999.)  (Revised by ?who?, 2-Feb-2004.) $)
    fvopab2 $p |- ( ( x e. A /\ B e. C ) ->
                   ( { <. x , y >. | ( x e. A /\ y = B ) } ` x ) = B ) $=
      ( vz wcel cv wceq wa copab cfv wex wi elisset ax-17 hbopab2 hbfv cvv weu
      hbeq hbim vex eleq1 mpbii euanv opabid eubii eueq anbi2i 3bitr4ri tz6.12f
      cop sylanbr sylan2b exp43 pm2.43a mpdi com12 eqeq2 sylibd exlimi impcom
      syl ) DEGZAHZCGZVFVGBHZDIZJZABKZLZDIZVEVIBMVGVMNZBDEOVIVNBVGVMBVGBPBFFVLD
      BFVFVKVJABFQZFHZVFGBPRVPDGBPUAUBVIVGVLVHIZVMVGVIVQVGVIDSGZVQVIVHSGVRBUCVH
      DSUDUEVIVGVRVQNVGVIVGVRVQVGVRJZVJVFVHUMVKGZBTZVQVJBTVGVIBTZJWAVSVGVIBUFVT
      VJBVJABUGZUHVRWBVGBDUIUJUKVJVTWAVQWCABFVKVOULUNUOUPUQURUSVHDVLUTVAVBVDVC
      $.
      $( [2-Feb-2004] $) $( [30-Aug-1999] $)
  $}

  ${
    $d x z A $.  $d y z B $.  $d x y $.
    fvopabs.1 $e |- A e. _V $.
    fvopabs.2 $e |- B e. _V $.
    $( The value of a function given by an ordered-pair class abstraction,
       using class substitution.  (Contributed by ?who?, 25-Mar-2006.) $)
    fvopabs $p |- ( { <. x , y >. | y = B } ` A ) = [_ A / x ]_ B $=
      ( vz csb cv wcel ax-17 hbcsb1f csbex csbeq1a fvopabf ) ABGCDACDHGICJAKZAGC
      DPLEACDEFMACDNO $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x y z A $.  $d z F $.  $d z ph $.  $d x ps $.
    fvopab5.1 $e |- F = { <. x , y >. | ph } $.
    fvopab5.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( The value of a function that is expressed as an ordered pair
       abstraction.  (Contributed by ?who?, 19-Feb-2006.) $)
    fvopab5 $p |- ( ( Fun F /\ A e. B ) -> ( F ` A ) = U. { y | ps } ) $=
      ( vz wfun wcel cfv cv cab cuni ax-17 wceq cop syl5bb copab hbopab2 eleq2i
      wbr hbxfreq funfv2f elisset df-br bitri wb hbopab1 hbel hbbi opeq1 eleq1d
      wex opabid bitr3d exlimi abbidv syl unieqd sylan9eq ) GKEFLZEGMEDNZGUDZDO
      ZPBDOZPDJEGJNZELDQDJGACDUAZHACDJUBUEUFVDVGVHVDCNZERZCUPZVGVHRCEFUGVMVFBDV
      FEVESZVJLZVMBVFVNGLVOEVEGUHGVJVNHUCUIVLVOBUJCVOBCCJJVNVJVIVNLCQACDJUKULBC
      QUMVLVKVESZVJLZVOBVLVPVNVJVKEVEUNUOVQAVLBACDUQITURUSTUTVAVBVC $.
      $( [19-Feb-2006] $)
  $}

  ${
    $d A x y $.  $d ps x y $.  $d B y $.  $d C x y $.
    fvopab6.1 $e |- F = { <. x , y >. | ( ph /\ y = B ) } $.
    fvopab6.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab6.3 $e |- ( x = A -> B = C ) $.
    $( Value of a function given by ordered-pair class abstraction.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    fvopab6 $p |- ( ( A e. D /\ C e. R /\ ps ) -> ( F ` A ) = C ) $=
      ( wcel cv wceq wa cab cuni wfun w3a cfv wmo copab wal funeqi funopab moeq
      bitri moani mpgbir simp1 eqeq2d anbi12d fvopab5 simpr pm3.2 abbidv unieqd
      sylancr impbid2 df-sn eqcomi unieqi unisng syl5eq sylan9eqr 3adant1 eqtrd
      csn ) EHNZGINZBUAZEJUBZBDOZGPZQZDRZSZGVMJTZVKVNVSPVTAVOFPZQZDUCZCVTWBCDUD
      ZTWCCUEJWDKUFWBCDUGUIWAADDFUHUJUKVKVLBULWBVQCDEHJKCOEPZABWAVPLWEFGVOMUMUN
      UOUTVLBVSGPVKBVLVSVPDRZSZGBVRWFBVQVPDBVQVPBVPUPBVPUQVAURUSVLWGGVJZSGWFWHW
      HWFDGVBVCVDGIVEVFVGVHVI $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.  $d x y G $.  $d x ph $.
    $( Equality of functions is determined by their values.  Exercise 4 of
       [TakeutiZaring] p. 28.  (Contributed by ?who?, 3-Aug-1994.)  (Revised by
       ?who?, 5-Feb-2004.) $)
    eqfnfv2 $p |- ( ( F Fn A /\ G Fn B ) -> ( F = G <->
                 ( A = B /\ A. x e. A ( F ` x ) = ( G ` x ) ) ) ) $=
      ( vy wfn wa wceq cv cfv wral wi wcel wb wal adantl fnopfvb syl5ib wn rgen
      fndmu eqidd jctir fneq1 anbi1d fveq1 eqeq1d ralbidv anbi2d imbi12d mpbiri
      com12 fneq2 biimparc cop df-ral pm2.27 eqeq1 adantlr adantll bibi12d syld
      expcom cdm fndm opeldm eleq2 con3d syl adantr impcom 2falsed a1dd pm2.61i
      alrimdv alimdv syl5bi wrel fnrel eqrel syl2an sylibrd sylan2 exp32 impbid
      ex imp4b ) DBGZECGZHZDEIZBCIZAJZDKZWNEKZIZABLZHZWLWKWSWLWKWSMEBGZWJHZWMWP
      WPIZABLZHZMXAWMXCBCEUBXBABWNBNZWPUCUAUDWLWKXAWSXDWLWIWTWJBDEUEUFWLWRXCWMW
      LWQXBABWLWOWPWPWNDEUGUHUIUJUKULUMWIWJWMWRWLWIWJWMWRWLMZWJWMHWIWTXFWMWTWJB
      CEUNUOWIWTHZWRWNFJZUPZDNZXIENZOZFPZAPZWLWRXEWQMZAPXGXNWQABUQXGXOXMAXGXOXL
      FXEXGXOXLMZMXGXEXPXGXEHZXOWQXLXEXOWQMXGXEWQURQWQWOXHIZWPXHIZOXQXLWOWPXHUS
      XQXRXJXSXKWIXEXRXJOWTBWNXHDRUTWTXEXSXKOWIBWNXHERVAVBSVCVDXETZXGXLXOXTXGXL
      XTXGHXJXKXGXTXJTZWIXTYAMZWTWIDVEZBIZYBBDVFYDXJXEXJWNYCNYDXEWNXHDVGYCBWNVH
      SVIVJVKVLXGXTXKTZWTXTYEMZWIWTEVEZBIZYFBEVFYHXKXEXKWNYGNYHXEWNXHEVGYGBWNVH
      SVIVJQVLVMWGVNVOVPVQVRWIDVSEVSWLXNOWTBDVTBEVTAFDEWAWBWCWDWEWHWF $.
      $( [5-Feb-2004] $) $( [3-Aug-1994] $)

    $( Equality of functions is determined by their values.  Special case of
       Exercise 4 of [TakeutiZaring] p. 28 (with domain equality omitted).
       (The proof was shortened by Andrew Salmon, 22-Oct-2011.)  (Contributed
       by ?who?, 3-Aug-1994.)  (Revised by ?who?, 22-Oct-2011.) $)
    eqfnfv $p |- ( ( F Fn A /\ G Fn A ) -> ( F = G <->
                 A. x e. A ( F ` x ) = ( G ` x ) ) ) $=
      ( wfn wa wceq cv cfv wral eqfnfv2 eqid biantrur syl6bbr ) CBEDBEFCDGBBGZAH
      ZCIPDIGABJZFQABBCDKOQBLMN $.
      $( [22-Oct-2011] $) $( [3-Aug-1994] $)

    $d x B $.
    $( Derive equality of functions from equality of their values.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    eqfnfv3 $p |- ( ( F Fn A /\ G Fn B ) -> ( F = G <-> ( B C_ A /\ A. x e. A
                                  ( x e. B /\ ( F ` x ) = ( G ` x ) ) ) ) ) $=
      ( wfn wa wceq cv cfv wral wcel eqfnfv2 eqss ancom bitri anbi1i anass dfss3
      wss r19.26 bitr4i anbi2i 3bitri syl6bb ) DBFECFGDEHBCHZAIZDJUGEJHZABKZGZC
      BTZUGCLZUHGABKZGZABCDEMUJUKBCTZGZUIGUKUOUIGZGUNUFUPUIUFUOUKGUPBCNUOUKOPQU
      KUOUIRUQUMUKUQULABKZUIGUMUOURUIABCSQULUHABUAUBUCUDUE $.
      $( [2-Sep-2009] $)
    eqfnfvd.1 $e |- ( ph -> F Fn A ) $.
    eqfnfvd.2 $e |- ( ph -> G Fn A ) $.
    eqfnfvd.3 $e |- ( ( ph /\ x e. A ) -> ( F ` x ) = ( G ` x ) ) $.
    $( Deduction for equality of functions.  (Contributed by Mario Carneiro,
       24-Jul-2014.) $)
    eqfnfvd $p |- ( ph -> F = G ) $=
      ( wceq cv cfv wral ralrimiva wfn wb eqfnfv syl2anc mpbird ) ADEIZBJZDKTE
      KIZBCLZAUABCHMADCNECNSUBOFGBCDEPQR $.
      $( [24-Jul-2014] $)
  $}

  ${
    $d x z A $.  $d y z F $.  $d y z G $.  $d x y $.
    eqfnfvf2.1 $e |- ( y e. F -> A. x y e. F ) $.
    eqfnfvf2.2 $e |- ( y e. G -> A. x y e. G ) $.
    $( Equality of functions is determined by their values.  Special case of
       Exercise 4 of [TakeutiZaring] p. 28 (with domain equality omitted).
       This version of ~ eqfnfv uses bound-variable hypotheses instead of
       distinct variable conditions.  (Contributed by ?who?, 29-Jan-2004.)
       (Revised by ?who?, 22-Mar-2009.) $)
    eqfnfv2f $p |- ( ( F Fn A /\ G Fn A ) -> ( F = G <->
                 A. x e. A ( F ` x ) = ( G ` x ) ) ) $=
      ( vz wfn wa wceq cv cfv wral eqfnfv wcel ax-17 hbfv hbeq fveq2 eqeq12d
      cbvral syl6bb ) DCIECIJDEKHLZDMZUDEMZKZHCNALZDMZUHEMZKZACNHCDEOUGUKHACABB
      UEUFABUDDFBLUDPAQZRABUDEGULRSUKHQUDUHKUEUIUFUJUDUHDTUDUHETUAUBUC $.
      $( [22-Mar-2009] $) $( [29-Jan-2004] $)
  $}

  ${
    $d F x $.  $d G x $.
    $( Equality of functions is determined by their values.  (Contributed by
       Scott Fenton, 19-Jun-2011.) $)
    eqfunfv $p |- ( ( Fun F /\ Fun G ) -> ( F = G <->
                    ( dom F = dom G /\
                      A. x e. dom F ( F ` x ) = ( G ` x ) ) ) ) $=
      ( wfun cdm wfn wceq cv cfv wral wa wb funfn eqfnfv2 syl2anb ) BDBBEZFCCEZF
      BCGPQGAHZBIRCIGAPJKLCDBMCMAPQBCNO $.
      $( [10-Jul-2011] $) $( [19-Jun-2011] $)
  $}

  ${
    $d x B $.  $d x F $.  $d x G $.
    $( Equality of restricted functions is determined by their values.
       (Contributed by ?who?, 3-Aug-1994.)  (Revised by ?who?, 6-Feb-2004.) $)
    fvreseq $p |- ( ( ( F Fn A /\ G Fn A ) /\ B C_ A ) ->
         ( ( F |` B ) = ( G |` B ) <-> A. x e. B ( F ` x ) = ( G ` x ) ) ) $=
      ( wfn wa wss cres wceq cv cfv wral fnssres anim12i anandirs eqfnfv fvres
      wb wcel eqeq12d ralbiia syl6bb syl ) DBFZEBFZGCBHZGDCIZCFZECIZCFZGZUHUJJZ
      AKZDLZUNELZJZACMZSUEUFUGULUEUGGUIUFUGGUKBCDNBCENOPULUMUNUHLZUNUJLZJZACMUR
      ACUHUJQVAUQACUNCTUSUOUTUPUNCDRUNCERUAUBUCUD $.
      $( [6-Feb-2004] $) $( [3-Aug-1994] $)
  $}

  ${
    $d x y z A $.  $d y B $.  $d z F $.  $d w x z C $.  $d w F $.
    elrnopabg.1 $e |- F = { <. x , y >. | ( x e. A
             /\ y = B ) } $.
    $( Membership in the range of an ordered pair class abstraction.
       (Contributed by ?who?, 27-Aug-2007.) $)
    elrnopabg $p |- ( A. x e. A B e. D ->
                    ( C e. ran F <-> E. x e. A C = B ) ) $=
      ( vz vw wcel wral cvv wceq wrex wb cv cfv wa ax-17 crn elex ralimi biimpi
      wfn weu eueq fnopabg sylib fvelrnb copab hbopab1 hbxfreq hbfv hbeq eqeq1d
      fveq2 cbvrex hbra1 rsp ancld imp fveq1i fvopab2 syl5eq syl6bb syl rexbida
      eqcom syl5bb sylan9bbr mpdan ) DFKZACLDMKZACLZEGUAKZEDNZACOZPZVMVNACDFUBU
      CVOGCUEZVSVOBQDNZBUFZACLVTVNWBACVNWBBDUGUDUCWAABCGHUHUIVTVPIQZGRZENZICOZV
      OVRICEGUJWFAQZGRZENZACOVOVRWEWIIACAJJWDEAJWCGAJGWGCKZWASZABUKZHWKABJULUMJ
      QZWCKATUNWMEKATUOWIITWCWGNWDWHEWCWGGUQUPURVOWIVQACVNACUSVOWJSWJVNSZWIVQPV
      OWJWNVOWJVNVNACUTVAVBWNWIDENVQWNWHDEWNWHWGWLRDWGGWLHVCABCDMVDVEUPDEVIVFVG
      VHVJVKVLVG $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d y B $.  $d z F $.  $d w x z C $.  $d w F $.
    elrnopab.1 $e |- B e. _V $.
    elrnopab.2 $e |- F = { <. x , y >. | ( x e. A
             /\ y = B ) } $.
    $( Membership in the range of an ordered pair class abstraction.
       (Contributed by ?who?, 30-Aug-2004.) $)
    elrnopab $p |- ( C e. ran F <-> E. x e. A C = B ) $=
      ( cvv wcel crn wceq wrex wb elrnopabg cv a1i mprg ) DIJZEFKJEDLACMNACABCD
      EIFHOSAPCJGQR $.
      $( [30-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( The range of a choice function (a function that chooses an element from
       each member of its domain) is included in the union of its domain.
       (Contributed by ?who?, 31-Aug-1999.) $)
    chfnrn $p |- ( ( F Fn A /\ A. x e. A ( F ` x ) e. x ) -> ran F C_ U. A ) $=
      ( vy wfn cv cfv wcel wral wa cuni wrex wceq fvelrnb biimpd hbra1 wi eleq1
      crn rsp biimpcd syl6 reximdai sylan9 eluni2 syl6ibr ssrdv ) CBEZAFZCGZUIH
      ZABIZJZDCSZBKZUMDFZUNHZUPUIHZABLZUPUOHUHUQUJUPMZABLZULUSUHUQVAABUPCNOULUT
      URABUKABPULUIBHUKUTURQUKABTUTUKURUJUPUIRUAUBUCUDAUPBUEUFUG $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x F $.  $d x A $.
    $( Ordered pair with function value.  Part of Theorem 4.3(i) of [Monk1]
       p. 41.  (Contributed by ?who?, 14-Oct-1996.) $)
    funfvop $p |- ( ( Fun F /\ A e. dom F ) -> <. A , ( F ` A ) >. e. F ) $=
      ( wfun cdm wcel wa cfv wceq cop eqid funopfvb mpbii ) BCABDEFABGZMHAMIBEM
      JAMBKL $.
      $( [14-Oct-1996] $)
  $}

  $( Two ways to say that ` A ` is in the domain of ` F ` .  (Contributed by
     Mario Carneiro, 1-May-2014.) $)
  funfvbrb $p |- ( Fun F -> ( A e. dom F <-> A F ( F ` A ) ) ) $=
    ( wfun cdm wcel cfv wbr wa cop funfvop df-br sylibr breldm adantl impbida )
    BCZABDEZAABFZBGZPQHARIBESABJARBKLSQPARBMNO $.
    $( [1-May-2014] $)

  $( A member of a preimage is a function value argument.  (Contributed by
     ?who?, 4-May-2007.) $)
  fvimacnvi $p |- ( ( Fun F /\ A e. ( `' F " B ) ) -> ( F ` A ) e. B ) $=
    ( wfun ccnv cima wcel cfv csn wss snssi funimass2 sylan2 fvex snss cdm wceq
    wa cnvimass sseli wfn funfn fnsnfv sylanb sseq1d syl5bb mpbird ) CDZACEBFZG
    ZRZACHZBGZCAIZFZBJZUJUHUNUIJUPAUIKUNBCLMUMULIZBJUKUPULBACNOUKUQUOBUJUHACPZG
    ZUQUOQZUIURACBSTUHCURUAUSUTCUBURACUCUDMUEUFUG $.
    $( [4-May-2007] $)

  $( The argument of a function value belongs to the preimage of any class
     containing the function value.  (Contributed by Raph Levien, 20-Nov-2006.
     He remarks:  "This proof is unsatisfying, because it seems to me that
     ~ funimass2 could probably be strengthened to a biconditional.")
     (Contributed by ?who?, 20-Nov-2006.) $)
  fvimacnv $p |- ( ( Fun F /\ A e. dom F ) ->
                 ( ( F ` A ) e. B <-> A e. ( `' F " B ) ) ) $=
    ( wfun cdm wcel wa cfv ccnv cima csn cop funfvop opelcnv sylibr elimasn wss
    fvex snss imass2 sylbi sseld syl5com wi fvimacnvi ex adantr impbid ) CDZACE
    FZGZACHZBFZACIZBJZFZUKAUNULKZJZFZUMUPUKULALUNFZUSUKAULLCFUTACMULACNOUNULAPO
    UMURUOAUMUQBQURUOQULBACRSUQBUNTUAUBUCUIUPUMUDUJUIUPUMABCUEUFUGUH $.
    $( [20-Nov-2006] $)

  ${
    $d F x $.  $d A x $.  $d B x $.
    $( A kind of contraposition law that infers an image subclass from a
       subclass of a preimage.  (Contributed by Raph Levien, 20-Nov-2006.  He
       remarks:  "Likely this could be proved directly, and ~ fvimacnv would be
       the special case of ` A ` being a singleton, but it works this way round
       too.") (Contributed by ?who?, 20-Nov-2006.) $)
    funimass3 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( ( F " A ) C_ B <-> A C_ ( `' F " B ) ) ) $=
      ( vx wfun cdm wss wa cima cv ccnv wcel wral funimass4 wb ssel fvimacnv ex
      cfv syl9r imp31 ralbidva bitrd dfss3 syl6bbr ) CEZACFZGZHZCAIBGZDJZCKBIZL
      ZDAMZAULGUIUJUKCSBLZDAMUNDABCNUIUOUMDAUFUHUKALZUOUMOZUHUPUKUGLZUFUQAUGUKP
      UFURUQUKBCQRTUAUBUCDAULUDUE $.
      $( [20-Nov-2006] $)

    $( A subclass of a preimage in terms of function values.  (Contributed by
       ?who?, 15-May-2007.) $)
    funimass5 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( A C_ ( `' F " B ) <-> A. x e. A ( F ` x ) e. B ) ) $=
      ( wfun cdm wss wa cima ccnv cv cfv wcel wral funimass3 funimass4 bitr3d )
      DEBDFGHDBICGBDJCIGAKDLCMABNBCDOABCDPQ $.
      $( [15-May-2007] $)

    $( Two ways of specifying that a function is constant on a subdomain.
       (Contributed by ?who?, 8-Mar-2007.) $)
    funconstss $p |- ( ( Fun F /\ A C_ dom F ) ->
                     ( A. x e. A ( F ` x ) = B <-> A C_ ( `' F " { B } ) ) ) $=
      ( wfun cdm wss wa cv cfv wceq wral cima csn ccnv wcel funimass4 fvex elsn
      ralbii syl6rbb funimass3 bitrd ) DEBDFGHZAIZDJZCKZABLZDBMCNZGZBDOUIMGUDUJ
      UFUIPZABLUHABUIDQUKUGABUFCUEDRSTUABUIDUBUC $.
      $( [8-Mar-2007] $)
  $}


  $( Membership in the preimage of a set under a function.  (Contributed by
     Jeff Madsen, 2-Sep-2009.) $)
  elpreima $p |- ( F Fn A -> ( B e. ( `' F " C )
                              <-> ( B e. A /\ ( F ` B ) e. C ) ) ) $=
    ( wfn ccnv cima wcel cfv wa cdm cnvimass sseli fndm eleq2d syl5ib fvimacnvi
    wfun fnfun sylan ex jcad wb fvimacnv funfni biimpd expimpd impbid ) DAEZBDF
    CGZHZBAHZBDICHZJUIUKULUMUKBDKZHUIULUJUNBDCLMUIUNABADNOPUIUKUMUIDRUKUMADSBCD
    QTUAUBUIULUMUKUIULJUMUKUMUKUCABDBCDUDUEUFUGUH $.
    $( [2-Sep-2009] $)

  ${
    $d x F $.  $d x A $.  $d x B $.
    $( Preimage of a union.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    unpreima $p |- ( Fun F -> ( `' F " ( A u. B ) )
                                  = ( ( `' F " A ) u. ( `' F " B ) ) ) $=
      ( vx wfun cdm wfn ccnv cun cima wceq funfn cv wcel wa wo wb elun elpreima
      cfv anbi2i andi bitri a1i orbi12d syl5bb 3bitr4d eqrdv sylbi ) CECCFZGZCH
      ZABIZJZULAJZULBJZIZKCLUKDUNUQUKDMZUJNZURCTZUMNZOZUSUTANZOZUSUTBNZOZPZURUN
      NURUQNZVBVGQUKVBUSVCVEPZOVGVAVIUSUTABRUAUSVCVEUBUCUDUJURUMCSVHURUONZURUPN
      ZPUKVGURUOUPRUKVJVDVKVFUJURACSUJURBCSUEUFUGUHUI $.
      $( [2-Sep-2009] $)

    $( Preimage of an intersection.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    inpreima $p |- ( Fun F -> ( `' F " ( A i^i B ) )
                                  = ( ( `' F " A ) i^i ( `' F " B ) ) ) $=
      ( vx wfun cdm wfn ccnv cin cima wceq funfn cv wcel wa cfv anbi2i elpreima
      wb elin a1i anandi syl6bb anbi12d 3bitr4d syl6bbr eqrdv sylbi ) CECCFZGZC
      HZABIZJZUKAJZUKBJZIZKCLUJDUMUPUJDMZUMNZUQUNNZUQUONZOZUQUPNUJUQUINZUQCPZUL
      NZOZVBVCANZOZVBVCBNZOZOZURVAUJVEVBVFVHOZOZVJVEVLSUJVDVKVBVCABTQUAVBVFVHUB
      UCUIUQULCRUJUSVGUTVIUIUQACRUIUQBCRUDUEUQUNUOTUFUGUH $.
      $( [2-Sep-2009] $)

    $( The preimage of a restricted function.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    respreima $p |- ( Fun F -> ( `' ( F |` B ) " A )
                                    = ( ( `' F " A ) i^i B ) ) $=
      ( vx wfun cres ccnv cima cin cdm wfn cv wcel wb cfv wa bitri syl elpreima
      elin funfn ancom anbi1i fvres eleq1d adantl pm5.32i a1i an32 syl6bb fnfun
      wceq funres dmres jctir df-fn sylibr anbi1d syl5bb 3bitr4d sylbi eqrdv )
      CEZDCBFZGAHZCGAHZBIZVCCCJZKZDLZVEMZVJVGMZNCUAVIVJBVHIZMZVJVDOZAMZPZVJVHMZ
      VJCOZAMZPZVJBMZPZVKVLVIVQVRWBPZVTPZWCVQWENVIVQWDVPPWEVNWDVPVNWBVRPWDVJBVH
      TWBVRUBQUCWDVPVTWBVPVTNVRWBVOVSAVJBCUDUEUFUGQUHVRWBVTUIUJVIVDVMKZVKVQNVIV
      DEZVDJVMULZPWFVIWGWHVIVCWGVHCUKBCUMRCBUNUOVDVMUPUQVMVJAVDSRVLVJVFMZWBPVIW
      CVJVFBTVIWIWAWBVHVJACSURUSUTVAVB $.
      $( [2-Sep-2009] $)
  $}

  $( The preimage of the codomain of a mapping is the mapping's domain.
     (Contributed by FL, 25-Jan-2007.) $)
  fimacnv $p |- ( F : A --> B -> ( `' F " B ) = A ) $=
    ( ccnv cima crn imassrn cdm df-dm fdm wss ssid a1i eqsstrd syl5eqssr syl5ss
    wf frn wfun wb ffun syl5sseqr funimass3 syl2anc mpbid eqssd ) ABCQZCDZBEZAU
    GUIUHFZAUHBGUGUJCHZACIUGUKAAABCJZAAKUGALZMNOPUGCAEZBKZAUIKZUGUNCFBCAGABCRPU
    GCSAUKKUOUPTABCUAUGAAUKUMULUBABCUCUDUEUF $.
    $( [25-Jan-2007] $)

  $( Ordered pair with function value.  Part of Theorem 4.3(i) of [Monk1]
     p. 41.  (Contributed by ?who?, 30-Sep-2004.) $)
  fnopfv $p |- ( ( F Fn A /\ B e. A ) -> <. B , ( F ` B ) >. e. F ) $=
    ( cfv cop wcel funfvop funfni ) BBCDECFABCBCGH $.
    $( [30-Sep-2004] $)

  ${
    $d x y F $.  $d x A $.
    $( A function's value belongs to its range.  (Contributed by ?who?,
       14-Oct-1996.) $)
    fvelrn $p |- ( ( Fun F /\ A e. dom F ) -> ( F ` A ) e. ran F ) $=
      ( vx wfun cdm wcel wa cv cfv cop wex crn simpr funfvop wceq opeq1 spcegv
      eleq1d sylc elrn2 sylibr ) BDZABEZFZGZCHZABIZJZBFZCKZUGBLFUEUDAUGJZBFZUJU
      BUDMABNUIULCAUCUFAOUHUKBUFAUGPRQSCUGBTUA $.
      $( [14-Oct-1996] $)
  $}

  $( A function's value belongs to its range.  (Contributed by ?who?,
     15-Oct-1996.) $)
  fnfvelrn $p |- ( ( F Fn A /\ B e. A ) -> ( F ` B ) e. ran F ) $=
    ( cfv crn wcel fvelrn funfni ) BCDCEFABCBCGH $.
    $( [15-Oct-1996] $)

  $( A function's value belongs to its codomain.  (Contributed by ?who?,
     12-Aug-1999.) $)
  ffvelrn $p |- ( ( F : A --> B /\ C e. A ) -> ( F ` C ) e. B ) $=
    ( wf wcel wa cfv crn wfn ffn fnfvelrn sylan wi frn sseld adantr mpd ) ABDEZ
    CAFZGCDHZDIZFZUABFZSDAJTUCABDKACDLMSUCUDNTSUBBUAABDOPQR $.
    $( [12-Aug-1999] $)

  ${
    ffvrni.1 $e |- F : A --> B $.
    $( A function's value belongs to its codomain.  (Contributed by ?who?,
       6-Apr-2005.) $)
    ffvelrni $p |- ( C e. A -> ( F ` C ) e. B ) $=
      ( wf wcel cfv ffvelrn mpan ) ABDFCAGCDHBGEABCDIJ $.
      $( [6-Apr-2005] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.
    $( A function expressed as the range of another function.  (Contributed by
       Mario Carneiro, 22-Jun-2013.) $)
    fnasrn $p |- ( F Fn A -> F = ran { <. x , y >. |
        ( x e. A /\ y = <. x , ( F ` x ) >. ) } ) $=
      ( vz vw cv cfv cop wceq wrex wcel wa wb wal wi eleq1 vex wrel cvv wfn cab
      copab crn weq cdm fndm opeldm eleq2 syl5ib biimpcd adantrd rexlimiv fveq2
      syl eqeq1d ceqsrexv adantl fnopfvb bitr2d pm5.21ndd opex eqeq1 eqcom opth
      a1i ex bitri syl6bb rexbidv elab syl6bbr alrimivv fnrel cxp fvex mpbir2an
      opelxp mpbiri rexlimivw abssi df-rel mpbir sylancl mpbird rnopab2 syl6eqr
      wss eqrel ) DCUAZDBGZAGZWLDHZIZJZACKZBUBZWLCLZWOMABUCUDWJDWQJZEGZFGZIZDLZ
      XBWQLZNZFOEOZWJXEEFWJXCAEUEZWMXAJZMZACKZXDWJWTCLZXCXJWJDUFZCJZXCXKPCDUGXC
      WTXLLXMXKWTXADUHXLCWTUIUJUOXJXKPWJXIXKACWRXGXKXHXGWRXKWLWTCQUKULUMVFWJXKX
      CXJNWJXKMXJWTDHZXAJZXCXKXJXONWJXHXOAWTCXGWMXNXAWLWTDUNUPUQURCWTXADUSUTVGV
      AWPXJBXBWTXAERFRVBWKXBJZWOXIACXPWOXBWNJZXIWKXBWNVCXQWNXBJXIXBWNVDWLWMWTXA
      VEVHVIVJVKVLVMWJDSWQSZWSXFNCDVNXRWQTTVOZWHWPBXSWOWKXSLZACWOXTWNXSLZYAWLTL
      WMTLARWLDVPWLWMTTVRVQWKWNXSQVSVTWAWQWBWCEFDWQWIWDWEABCWNWFWG $.
      $( [22-Jun-2013] $)
  $}

  ${
    $d x y A $.  $d x y C $.  $d x y D $.  $d y B $.
    f0cl.1 $e |- F : A --> B $.
    f0cl.2 $e |- (/) e. B $.
    $( Unconditional closure of a function when the range includes the empty
       set.  (Contributed by Mario Carneiro, 12-Sep-2013.) $)
    f0cli $p |- ( F ` C ) e. B $=
      ( wcel cfv ffvelrni cdm fdmi eleq2i wn c0 ndmfv syl6eqel sylnbir pm2.61i
      ) CAGZCDHZBGZABCDEISCDJZGZUAUBACABDEKLUCMTNBCDOFPQR $.
      $( [12-Sep-2013] $)
  $}

  $( Alternate definition of a mapping.  (Contributed by ?who?,
     14-Nov-2007.) $)
  dff2 $p |- ( F : A --> B <-> ( F Fn A /\ F C_ ( A X. B ) ) ) $=
    ( wf wfn cxp wss wa ffn fssxp jca crn rnss rnxpss syl6ss anim2i df-f sylibr
    impbii ) ABCDZCAEZCABFZGZHZTUAUCABCIABCJKUDUACLZBGZHTUCUFUAUCUEUBLBCUBMABNO
    PABCQRS $.
    $( [14-Nov-2007] $)

  ${
    $d f g x y z A $.  $d f g x y z B $.  $d x y z F $.
    $( Alternate definition of a mapping.  (Contributed by ?who?,
       20-Mar-2007.) $)
    dff3 $p |- ( F : A --> B <->
              ( F C_ ( A X. B ) /\ A. x e. A E! y x F y ) ) $=
      ( wss cv wbr wral wa wcel cdm adantr sylibr syl sylanbrc crn wrel wal wi
      wf cxp weu fssxp wex wmo cfv cop wfun ffun eleq2d biimpar funfvop syl2anc
      fdm df-br fvex breq2 spcev funmo eu5 ralrimiva jca wfn wceq relxp df-ral
      relss mpi wn dmss dmxpss syl6ss breldm ssel syl5 exlimdv con3d df-mo syl6
      pm2.21 a1dd pm2.27 eumo pm2.61d2 alimdv syl5bi dffun6 euex exlimiv ralimi
      imp dfss3 anim12i eqss df-fn rnss rnxpss df-f impbii ) CDEUAZECDUBZFZAGZB
      GZEHZBUCZACIZJZXAXCXHCDEUDXAXGACXAXDCKZJZXFBUEZXFBUFZXGXKXDXDEUGZEHZXLXKX
      DXNUHEKZXOXKEUIZXDELZKZXPXAXQXJCDEUJZMXAXSXJXAXRCXDCDEUOUKULXDEUMUNXDXNEU
      PNXFXOBXNXDEUQXEXNXDEURUSOXAXMXJXAXQXMXTABEUTOMXFBVAPVBVCXIECVDZEQZDFZXAX
      IXQXRCVEZYAXIERZXMASZXQXCYEXHXCXBRYECDVFEXBVHVIMXCXHYFXHXJXGTZASXCYFXGACV
      GXCYGXMAXCXJYGXMTXCXJVJZXMYGXCYHXLVJZXMXCXLXJXCXRCFZXLXJTXCXRXBLCEXBVKCDV
      LVMZYJXFXJBXFXSYJXJXDXEEVNZXRCXDVOVPVQOVRYIXLXGTXMXLXGWAXFBVSNVTWBXJYGXGX
      MXJXGWCXFBWDVTWEWFWGWLABEWHPXIYJCXRFZJYDXCYJXHYMYKXHXSACIYMXGXSACXGXLXSXF
      BWIXFXSBYLWJOWKACXRWMNWNXRCWONECWPPXCYCXHXCYBXBQDEXBWQCDWRVMMCDEWSPWT $.
      $( [20-Mar-2007] $)

    $( Alternate definition of a mapping.  (Contributed by ?who?,
       20-Mar-2007.) $)
    dff4 $p |- ( F : A --> B <->
              ( F C_ ( A X. B ) /\ A. x e. A E! y e. B x F y ) ) $=
      ( wf cxp wss cv wbr weu wral wa wreu dff3 wcel crn brelrn rnss rnxpss
      syl6ss sseld syl5 pm4.71rd eubidv df-reu syl6bbr ralbidv pm5.32i bitri )
      CDEFECDGZHZAIZBIZEJZBKZACLZMULUOBDNZACLZMABCDEOULUQUSULUPURACULUPUNDPZUOM
      ZBKURULUOVABULUOUTUOUNEQZPULUTUMUNERULVBDUNULVBUKQDEUKSCDTUAUBUCUDUEUOBDU
      FUGUHUIUJ $.
      $( [20-Mar-2007] $)

    $( An onto mapping expressed in terms of function values.  (Contributed by
       ?who?, 29-Oct-2006.) $)
    dffo3 $p |- ( F : A -onto-> B <-> ( F : A --> B /\
                  A. y e. B E. x e. A y = ( F ` x ) ) ) $=
      ( wfo wf crn wceq wa cv cfv wrex wral dffo2 cab wb wcel wal wi wfn fnrnfv
      ffn eqeq1d simpr ffvelrn adantr eqeltrd exp31 rexlimdv biantrurd syl6rbbr
      syl dfbi2 albidv abeq1 df-ral 3bitr4g bitrd pm5.32i bitri ) CDEFCDEGZEHZD
      IZJVBBKZAKZELZIZACMZBDNZJCDEOVBVDVJVBVDVIBPZDIZVJVBECUAZVDVLQCDEUCVMVCVKD
      ABCEUBUDUMVBVIVEDRZQZBSVNVITZBSVLVJVBVOVPBVBVPVIVNTZVPJVOVBVQVPVBVHVNACVB
      VFCRZVHVNVBVRJZVHJVEVGDVSVHUEVSVGDRVHCDVFEUFUGUHUIUJUKVIVNUNULUOVIBDUPVIB
      DUQURUSUTVA $.
      $( [29-Oct-2006] $)

    $( Alternate definition of an onto mapping.  (Contributed by ?who?,
       20-Mar-2007.) $)
    dffo4 $p |- ( F : A -onto-> B <->
                ( F : A --> B /\ A. y e. B E. x e. A x F y ) ) $=
      ( wfo wf cv wbr wrex wral wa fof wcel wex crn eleq2d wi wceq sylibr ancrd
      elrn syl5bbr biimpar cdm breldm fdm syl5ib eximdv adantr df-rex ralrimiva
      forn syl mpd jca cfv wfn ffn eqcom fnbrfvb biimprd sylan reximdva ralimdv
      syl5bb imdistani dffo3 impbii ) CDEFZCDEGZAHZBHZEIZACJZBDKZLZVJVKVPCDEMZV
      JVOBDVJVMDNZLZVLCNZVNLZAOZVOVTVNAOZWCVJWDVSWDVMEPZNVJVSAVMEUBVJWEDVMCDEUM
      QUCUDVJWDWCRVSVJVNWBAVJVNWAVNVLEUEZNVJWAVLVMEUFVJWFCVLVJVKWFCSVRCDEUGUNQU
      HUAUIUJUOVNACUKTULUPVQVKVMVLEUQZSZACJZBDKZLVJVKVPWJVKVOWIBDVKVNWHACVKECUR
      ZWAVNWHRCDEUSWKWALZWHVNWHWGVMSWLVNVMWGUTCVLVMEVAVFVBVCVDVEVGABCDEVHTVI $.
      $( [20-Mar-2007] $)

    $( Alternate definition of an onto mapping.  (Contributed by ?who?,
       20-Mar-2007.) $)
    dffo5 $p |- ( F : A -onto-> B <->
                ( F : A --> B /\ A. y e. B E. x x F y ) ) $=
      ( wfo wf cv wbr wrex wral wa wex dffo4 rexex ralimi anim2i wcel wfn wi ex
      ffn fnbr syl ancrd eximdv df-rex syl6ibr ralimdv imdistani impbii bitri )
      CDEFCDEGZAHZBHZEIZACJZBDKZLZUMUPAMZBDKZLZABCDENUSVBURVAUMUQUTBDUPACOPQUMV
      AURUMUTUQBDUMUTUNCRZUPLZAMUQUMUPVDAUMUPVCUMECSZUPVCTCDEUBVEUPVCCUNUOEUCUA
      UDUEUFUPACUGUHUIUJUKUL $.
      $( [20-Mar-2007] $)
  $}

  ${
    $d F x y $.  $d A x y $.  $d B x y $.  $d C x y $.
    $( Property of a surjective function.  (Contributed by Jeff Madsen,
       4-Jan-2011.) $)
    foelrn $p |- ( ( F : A -onto-> B /\ C e. B )
                                  -> E. x e. A C = ( F ` x ) ) $=
      ( vy wfo cv cfv wceq wrex wral wcel wf dffo3 simprbi eqeq1 rspccva sylan
      rexbidv ) BCEGZFHZAHEIZJZABKZFCLZDCMDUCJZABKZUABCENUFAFBCEOPUEUHFDCUBDJUD
      UGABUBDUCQTRS $.
      $( [4-Jan-2011] $)
  $}

  ${
    $d F x y z $.  $d G x y z $.  $d A y z $.  $d B x y z $.  $d C x y z $.
    $( If a composition of two functions is surjective, then the function on
       the left is surjective.  (Contributed by Jeff Madsen, 16-Jun-2011.) $)
    foco2 $p |- ( ( F : B --> C /\ G : A --> B /\
                        ( F o. G ) : A -onto-> C ) -> F : B -onto-> C ) $=
      ( vy vx vz wf ccom wfo w3a cv cfv wceq wrex wral wa wcel adantll sylanbrc
      simp1 foelrn ffvelrn fvco3 fveq2 rspcev syl2anc eqeq1 rexbidv syl5ibrcom
      eqeq2d rexlimdva syl5 impl ralrimiva 3impa dffo3 ) BCDIZABEIZACDEJZKZLUSF
      MZGMZDNZOZGBPZFCQZBCDKUSUTVBUBUSUTVBVHUSUTRZVBRVGFCVIVBVCCSZVGVBVJRVCHMZV
      ANZOZHAPVIVGHACVCVAUCVIVMVGHAVIVKASZRZVGVMVLVEOZGBPZVOVKENZBSZVLVRDNZOZVQ
      UTVNVSUSABVKEUDTUTVNWAUSABVKDEUETVPWAGVRBVDVROVEVTVLVDVRDUFULUGUHVMVFVPGB
      VCVLVEUIUJUKUMUNUOUPUQGFBCDURUA $.
      $( [16-Jun-2011] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d y z C $.  $d z F $.
    fopab2.1 $e |- F = { <. x , y >. | ( x e. A /\ y = C ) } $.
    $( Functionality of an ordered-pair class abstraction.  (Contributed by
       ?who?, 29-Jan-2004.) $)
    fopab2 $p |- ( A. x e. A C e. B <-> F : A --> B ) $=
      ( vz wcel wral wf crn wss cv wceq cvv sylib wa wi ax-17 wfn weu elex eueq
      ralimi fnopabg copab rneqi wal wex rnopab abeq2i rsp eleq1a imim2i exlimd
      hbra1 imp3a syl syl5bi alrimiv hbopab2 hbrn dfss2f syl5eqss df-f sylanbrc
      sylibr cdm fdm dmopab3 isset ralbii dmeqi eqeq1i 3bitr4ri hbopab1 hbxfrbi
      feq1i hbf ffvelrn adantr wb fveq1i fvopab2 syl5eq eleq1d adantll mpbid ex
      cfv ralimdaa mpd impbii ) EDIZACJZCDFKZWPFCUAZFLZDMWQWPBNZEOZBUBZACJWRWOX
      BACWOEPIZXBEDUCBEUDQUEXAABCFGUFQWPWSANZCIZXARZABUGZLZDFXGGUHWPWTXHIZWTDIZ
      SZBUIXHDMWPXKBXIXFAUJZWPXJXLBXHXFABUKULWPXFXJAWOACUQXJATWPXEWOSZXFXJSWOAC
      UMXMXEXAXJWOXAXJSXEEDWTUNUOURUSUPUTVABHXHDBHXGXFABHVBVCHNZDIZBTVDVHVECDFV
      FVGWQXCACJZWPWQFVIZCOZXPCDFVJXABUJZACJXGVIZCOXPXRXAABCVKXCXSACBEVLVMXQXTC
      FXGGVNVOVPQWQXCWOACWQCDXGKACDFXGGVSAHCDXGXFABHVQXNCIATXOATVTVRWQXERZXCWOY
      AXCRXDFWKZDIZWOYAYCXCCDXDFWAWBXEXCYCWOWCWQXEXCRZYBEDYDYBXDXGWKEXDFXGGWDAB
      CEPWEWFWGWHWIWJWLWMWN $.
      $( [29-Jan-2004] $)

    $( Inclusion of a function in a cross product.  (Contributed by ?who?,
       5-Jun-2007.) $)
    fopabssxp $p |- ( A. x e. A C e. B -> F C_ ( A X. B ) ) $=
      ( wcel wral wf cxp wss fopab2 fssxp sylbi ) EDHACICDFJFCDKLABCDEFGMCDFNO
      $.
      $( [5-Jun-2007] $)

    ${
      rnssopab.2 $e |- C e. _V $.
      $( Range of a function that is expressed as an ordered-pair class
         abstraction.  (Contributed by ?who?, 23-May-2006.) $)
      rnssopab $p |- ( A. x e. A C e. B <-> ran F C_ B ) $=
        ( vz wcel wral crn wss wf fopab2 frn cv wceq cfv cvv wa hbopab1 hbxfreq
        sylbi copab hbrn ax-17 fveq1i fvopab2 mpan2 syl5eq wfn fnopab2 fnfvelrn
        hbss mpan eqeltrrd ssel syl5 ralrimi impbii ) EDJZACKZFLZDMZVCCDFNVEABC
        DEFGOCDFPUDVEVBACAIVDDAIFAIFAQZCJZBQERUAZABUEZGVHABIUBUCUFIQDJAUGUOVGEV
        DJVEVBVGVFFSZEVDVGVJVFVISZEVFFVIGUHVGETJVKERHABCETUIUJUKFCULVGVJVDJABCE
        FHGUMCVFFUNUPUQVDDEURUSUTVA $.
        $( [23-May-2006] $)

      $( Functionality of an ordered-pair class abstraction.  (Contributed by
         ?who?, 23-May-2006.) $)
      fopab3 $p |- ( ran F C_ B <-> F : A --> B ) $=
        ( crn wss wcel wral wf rnssopab fopab2 bitr3i ) FIDJEDKACLCDFMABCDEFGHN
        ABCDEFGOP $.
        $( [23-May-2006] $)
    $}

    ${
      fopab.2 $e |- ( x e. A -> C e. B ) $.
      $( Functionality of an ordered-pair class abstraction.  (Contributed by
         ?who?, 19-Mar-2005.) $)
      fopab $p |- F : A --> B $=
        ( wcel wral wf rgen fopab2 mpbi ) EDIZACJCDFKOACHLABCDEFGMN $.
        $( [19-Mar-2005] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( A function maps to a class to which all values belong.  (Contributed by
       ?who?, 3-Dec-2003.) $)
    ffnfv $p |- ( F : A --> B <-> ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vy wf wfn cv cfv wcel wral ffn ffvelrn ralrimiva jca crn wss simpl wceq
      wa wrex fvelrnb biimpd hbra1 ax-17 wi rsp eleq1 biimpcd syl6 sylan9 ssrdv
      rexlimd df-f sylanbrc impbii ) BCDFZDBGZAHZDIZCJZABKZTZUQURVBBCDLUQVAABBC
      USDMNOVCURDPZCQUQURVBRVCEVDCUREHZVDJZUTVESZABUAZVBVECJZURVFVHABVEDUBUCVBV
      GVIABVAABUDVIAUEVBUSBJVAVGVIUFVAABUGVGVAVIUTVECUHUIUJUMUKULBCDUNUOUP $.
      $( [3-Dec-2003] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z F $.  $d x y z $.
    ffnfvf.1 $e |- ( y e. A -> A. x y e. A ) $.
    ffnfvf.2 $e |- ( y e. B -> A. x y e. B ) $.
    ffnfvf.3 $e |- ( y e. F -> A. x y e. F ) $.
    $( A function maps to a class to which all values belong.  This version of
       ~ ffnfv uses bound-variable hypotheses instead of distinct variable
       conditions.  (Contributed by ?who?, 28-Sep-2006.) $)
    ffnfvf $p |- ( F : A --> B <-> ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vz wf wfn cv cfv wcel wral wa ffnfv ax-17 hbfv hbel wceq eleq1d cbvralf
      fveq2 anbi2i bitri ) CDEJECKZILZEMZDNZICOZPUGALZEMZDNZACOZPICDEQUKUOUGUJU
      NIABCBLZCNIRFABBUIDABUHEHUPUHNARSGTUNIRUHULUAUIUMDUHULEUDUBUCUEUF $.
      $( [28-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d x B $.  $d x y F $.
    $( An upper bound for range determined by function values.  (Contributed by
       ?who?, 8-Oct-2004.) $)
    fnfvrnss $p |- ( ( F Fn A /\ A. x e. A ( F ` x ) e. B ) -> ran F C_ B ) $=
      ( wfn cv cfv wcel wral wa wf crn wss ffnfv frn sylbir ) DBEAFDGCHABIJBCDK
      DLCMABCDNBCDOP $.
      $( [8-Oct-2004] $)

    $( Representation of a mapping in terms of its values.  (Contributed by
       ?who?, 21-Feb-2004.) $)
    fopabfv $p |- ( F : A --> B <->
         ( F = { <. x , y >. | ( x e. A /\ y = ( F ` x ) ) }
         /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( wf wfn cv cfv wcel wral wa wceq copab ffnfv dffn5 anbi1i bitri ) CDEFEC
      GZAHZEIZDJACKZLETCJBHUAMLABNMZUBLACDEOSUCUBABCEPQR $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( A necessary and sufficient condition for a restricted function.
       (Contributed by Mario Carneiro, 14-Nov-2013.) $)
    ffvresb $p |- ( Fun F -> ( ( F |` A ) : A --> B <->
        A. x e. A ( x e. dom F /\ ( F ` x ) e. B ) ) ) $=
      ( wfun cres wf cv cdm wcel cfv wa wral fdm wss cin dmres inss2 adantl wfn
      eqsstri a1i eqsstr3d sselda wceq fvres ffvelrn eqeltrrd jca ralrimiva crn
      simpl ralimi sylibr fnssres sylanb sylan2 eleq1d syl5ibr ralimia fnfvrnss
      dfss3 funfn simpr syl2anc df-f sylanbrc ex impbid2 ) DEZBCDBFZGZAHZDIZJZV
      MDKZCJZLZABMZVLVRABVLVMBJZLZVOVQVLBVNVMVLBVKIZVNBCVKNWBVNOVLWBBVNPVNDBQBV
      NRUAUBUCUDWAVMVKKZVPCVTWCVPUEVLVMBDUFZSBCVMVKUGUHUIUJVJVSVLVJVSLZVKBTZVKU
      KCOZVLVSVJBVNOZWFVSVOABMWHVRVOABVOVQULUMABVNVBUNVJDVNTWHWFDVCVNBDUOUPUQZW
      EWFWCCJZABMZWGWIVSWKVJVRWJABVRWJVTVQVOVQVDVTWCVPCWDURUSUTSABCVKVAVEBCVKVF
      VGVHVI $.
      $( [14-Nov-2013] $)
  $}

  ${
    $d x y A $.  $d u x B $.  $d w z B $.  $d u F $.  $d u x G $.  $d u H $.
    $d w S $.  $d y R $.  $d w R z $.  $d w T z $.  $d x v A $.  $d v T $.
    fopabco.1 $e |- R e. _V $.
    fopabco.2 $e |- S e. _V $.
    fopabco.3 $e |- T e. _V $.
    fopabco.4 $e |- ( z = R -> S = T ) $.
    fopabco.5 $e |- F = { <. x , y >. | ( x e. A /\ y = R ) } $.
    fopabco.6 $e |- G = { <. z , w >. | ( z e. B /\ w = S ) } $.
    fopabco.7 $e |- H = { <. x , v >. | ( x e. A /\ v = T ) } $.
    $( Composition of two functions expressed as ordered-pair class
       abstractions.  Note that ` v ` may be assigned to ` w ` , ` y ` , or
       ` z ` if desired.  (Unnecessary distinct variable restrictions were
       removed by David Abernethy, 21-Jan-2012.)  (Contributed by ?who?,
       21-Aug-2007.)  (Revised by ?who?, 21-Jan-2012.) $)
    fopabco $p |- ( ran F C_ B -> ( G o. F ) = H ) $=
      ( vu crn wss ccom wceq cv wral wcel copab hbopab1 hbxfreq hbrn ax-17 hbss
      cfv wa fveq1i cvv fvopab2 mpan2 syl5eq fveq2d adantl fnopab2 df-f biimpri
      wf wfn ffvelrn sylan wb eleq1d mpbid fvopab4 syl eqtrd cdm dmopab2 eleq2i
      mpan wfun fnfun fvco sylbir 3eqtr4d ex ralrimi fnco mp3an12 hbco eqfnfv2f
      ax-mp sylancl mpbird ) KUBZGUCZLKUDZMUEZAUFZWQUOZWSMUOZUEZAFUGZWPXBAFAUAW
      OGAUAKAUAKWSFUHZBUFHUEUPZABUIZRXEABUAUJUKZULUAUFZGUHAUMUNWPXDXBWPXDUPZWSK
      UOZLUOZJWTXAXIXKHLUOZJXDXKXLUEWPXDXJHLXDXJWSXFUOZHWSKXFRUQXDHURUHXMHUENAB
      FHURUSUTVAZVBVCXIHGUHZXLJUEXIXJGUHZXOWPFGKVGZXDXPKFVHZWPXQABFHKNRVDZXQXRW
      PUPFGKVEVFVTFGWSKVIVJXDXPXOVKWPXDXJHGXNVLVCVMCDHIJGLQSPVNVOVPXDWTXKUEZWPX
      DWSKVQZUHZXTYAFWSABFHKNRVRVSKWAZYBXTXRYCXSFKWBWLWSLKWCVTWDVCXDXAJUEZWPXDJ
      URUHZYDPXDYEUPXAWSXDEUFJUEUPZAEUIZUOJWSMYGTUQAEFJURUSVAUTVCWEWFWGWPWQFVHZ
      MFVHWRXCVKLGVHXRWPYHCDGILOSVDXSGFLKWHWIAEFJMPTVDAUAFWQMAUALKXHLUHAUMXGWJA
      UAMYGTYFAEUAUJUKWKWMWN $.
      $( [21-Jan-2012] $) $( [21-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d w x y z B $.  $d w y z C $.  $d w y z D $.  $d w z F $.
    $d w z G $.
    fopabcos.1 $e |- C e. _V $.
    fopabcos.2 $e |- D e. _V $.
    fopabcos.3 $e |- F = { <. x , y >. | ( x e. A /\ y = C ) } $.
    fopabcos.4 $e |- G = { <. x , y >. | ( x e. B /\ y = D ) } $.
    $( MAY BE REVISED - prove from fopabco4? $)
    $( Composition of two functions expressed as ordered-pair class
       abstractions.  (Contributed by ?who?, 22-May-2006.) $)
    fopabcos $p |- ( ran G C_ A -> ( F o. G ) =
                  { <. x , y >. | ( x e. B /\ y = [_ D / x ]_ C ) } ) $=
      ( vz wcel csb wceq cfv adantl wfn cvv crn wss ccom cv copab wral fvopab4s
      wa fnopab2 fnfvelrn mpan wi ssel adantr mpd eqeltrrd syl cdm dmopab2 wfun
      eleq2i fnfun ax-mp fvco sylbir fveq2d eqtrd eqid wal vex ax-gen csbnest1g
      csbex mp2an syl6eq 3eqtr4d ralrimiva fnco mp3an12 eqfnfv sylancl mpbird
      wb ) HUAZCUBZGHUCZAUDDNBUDAFEOZPUHABUEZPZMUDZWFQZWJWHQZPZMDUFZWEWMMDWEWJD
      NZUHZAWJFOZGQZAWQEOZWKWLWPWQCNWRWSPWPWJHQZWQCWOWTWQPWEABWJFDHJLUGZRWPWTWD
      NZWTCNZWOXBWEHDSZWOXBABDFHJLUIZDWJHUJUKRWEXBXCULWOWDCWTUMUNUOUPABWQECGIKU
      GUQWOWKWRPWEWOWKWTGQZWRWOWJHURZNZWKXFPZXGDWJABDFHJLUSVAHUTZXHXIXDXJXEDHVB
      VCWJGHVDUKVEWOWTWQGXAVFVGRWOWLWSPWEWOWLAWJWGOZWSABWJWGDWHAFEJIVMZWHVHZUGW
      JTNFTNZAVIXKWSPMVJXNAJVKAWJFETTVLVNVORVPVQWEWFDSZWHDSWIWNWCGCSXDWEXOABCEG
      IKUIXECDGHVRVSABDWGWHXLXMUIMDWFWHVTWAWB $.
      $( [22-May-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    fsn.1 $e |- A e. _V $.
    fsn.2 $e |- B e. _V $.
    $( A function maps a singleton to a singleton iff it is the singleton of a
       ordered pair.  (Contributed by ?who?, 10-Dec-2003.) $)
    fsn $p |- ( F : { A } --> { B } <-> F = { <. A , B >. } ) $=
      ( vx vy csn cop wceq cv wcel wb wal wa elsn2 weu eleq1d vex wrel wf opelf
      anbi12i sylib ex wreu snid mpan2 eueq1 biantru euanv opeq2 pm5.32i anbi1i
      ancom 3bitr4ri df-reu bitr4i 3bitr2i sylibr opeq12 syl5ibrcom impbid opex
      feu eubii elsn opth bitr2i syl6bb alrimivv frel relsnop eqrel mpbird wf1o
      sylancl f1osn f1oeq1 mpbiri f1of syl impbii ) AHZBHZCUAZCABIZHZJZWFWIFKZG
      KZIZCLZWLWHLZMZGNFNZWFWOFGWFWMWJAJZWKBJZOZWNWFWMWSWFWMWSWFWMOWJWDLZWKWELZ
      OWSWDWEWJWKCUBWTWQXAWRWJADPWKBEPZUCUDUEWFWMWSWGCLZWFAWKIZCLZGWEUFZXCWFAWD
      LXFADUGGWDWEACVEUHXCXCWRGQZOXCWROZGQZXFXGXCGBEUIUJXCWRGUKXIXAXEOZGQXFXHXJ
      GWRXEOWRXCOXJXHWRXEXCWRXDWGCWKBAULRUMXAWRXEXBUNXCWRUOUPVFXEGWEUQURUSUTWSW
      LWGCWJAWKBVARVBVCWNWLWGJWSWLWGWJWKFSGSVDVGWJWKABVHVIVJVKWFCTWHTWIWPMWDWEC
      VLABDEVMFGCWHVNVQVOWIWDWECVPZWFWIXKWDWEWHVPABDEVRWDWECWHVSVTWDWECWAWBWC
      $.
      $( [10-Dec-2003] $)
  $}

  ${
    $d A a b $.  $d B b $.  $d F a b $.
    $( A function maps a singleton to a singleton iff it is the singleton of an
       ordered pair.  (Contributed by ?who?, 26-Oct-2012.) $)
    fsng $p |- ( ( A e. C /\ B e. D ) ->
                 ( F : { A } --> { B } <-> F = { <. A , B >. } ) ) $=
      ( va vb cv csn wf cop wceq wb sneq feq2d opeq1 sneqd eqeq2d bibi12d vex
      feq3 syl opeq2 fsn vtocl2g ) FHZIZGHZIZEJZEUFUHKZIZLZMAIZUIEJZEAUHKZIZLZM
      UNBIZEJZEABKZIZLZMFGABCDUFALZUJUOUMURVDUGUNUIEUFANOVDULUQEVDUKUPUFAUHPQRS
      UHBLZUOUTURVCVEUIUSLUOUTMUHBNUIUSUNEUAUBVEUQVBEVEUPVAUHBAUCQRSUFUHEFTGTUD
      UE $.
      $( [26-Oct-2012] $)
  $}

  ${
    fsn2.1 $e |- A e. _V $.
    $( A function that maps a singleton to a class is the singleton of an
       ordered pair.  (Contributed by ?who?, 19-May-2004.) $)
    fsn2 $p |- ( F : { A } --> B <->
               ( ( F ` A ) e. B /\ F = { <. A , ( F ` A ) >. } ) ) $=
      ( csn wf cfv wcel cop wceq snid ffvelrn mpan2 wfn ffn crn dffn3 cima syl
      wa biimpi wb cdm imadmrn fndm imaeq2d syl5eqr fnsnfv eqtr4d mpbid jca wss
      feq3 snssi fss ancoms sylan impbii fvex fsn anbi2i bitri ) AEZBCFZACGZBHZ
      VCVEEZCFZTZVFCAVEIEJZTVDVIVDVFVHVDAVCHZVFADKZVCBACLMVDCVCNZVHVCBCOVMVCCPZ
      CFZVHVMVOVCCQUAVMVNVGJVOVHUBVMVNCVCRZVGVMVNCCUCZRVPCUDVMVQVCCVCCUEUFUGVMV
      KVGVPJVLVCACUHMUIVNVGVCCUMSUJSUKVFVGBULZVHVDVEBUNVHVRVDVCVGBCUOUPUQURVHVJ
      VFAVECDACUSUTVAVB $.
      $( [19-May-2004] $)
  $}

  ${
    xpsn.1 $e |- A e. _V $.
    xpsn.2 $e |- B e. _V $.
    $( The cross product of two singletons.  (Contributed by ?who?,
       4-Nov-2006.) $)
    xpsn $p |- ( { A } X. { B } ) = { <. A , B >. } $=
      ( csn cxp wf cop wceq fconst fsn mpbi ) AEZBEZMNFZGOABHEIMBDJABOCDKL $.
      $( [4-Nov-2006] $)
  $}

  $( If ` A ` is not in ` C ` , then the restriction of a singleton of
     ` <. A , B >. ` to ` C ` is null.  (Contributed by Scott Fenton,
     15-Apr-2011.) $)
  ressnop0 $p |- ( -. A e. C -> ( { <. A , B >. } |` C ) = (/) ) $=
    ( wcel wn cop cvv cxp csn cres c0 wceq opelxp simplbi con3i cin incom eqtri
    df-res disjsn biimpri syl5eq syl ) ACDZEABFZCGHZDZEZUEIZCJZKLUGUDUGUDBGDABC
    GMNOUHUJUFUIPZKUJUIUFPUKUICSUIUFQRUKKLUHUFUETUAUBUC $.
    $( [1-Oct-2013] $) $( [15-Apr-2011] $)

  ${
    fpr.1 $e |- A e. _V $.
    fpr.2 $e |- B e. _V $.
    fpr.3 $e |- C e. _V $.
    fpr.4 $e |- D e. _V $.
    $( A function with a domain of two elements.  (Contributed by Jeff Madsen,
       20-Jun-2010.)  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    fpr $p |- ( A =/= B
                -> { <. A , C >. , <. B , D >. } : { A , B } --> { C , D } ) $=
      ( wne cop cpr wfn crn wa jctir sylibr csn cun rnsnop df-pr wss wfun funpr
      wf cdm wceq dmprop df-fn uneq12i rneqi rnun eqtri 3eqtr4i eqimssi df-f )
      ABIZACJZBDJZKZABKZLZUSMZCDKZUAZNUTVCUSUDUPVAVDUPUSUBZUSUEUTUFZNVAUPVEVFAB
      CDEFGHUCABCDGHUGOUSUTUHPVBVCUQQZMZURQZMZRZCQZDQZRVBVCVHVLVJVMACESBDFSUIVB
      VGVIRZMVKUSVNUQURTUJVGVIUKULCDTUMUNOUTVCUSUOP $.
      $( [22-Oct-2011] $) $( [20-Jun-2010] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( A function restricted to a singleton.  (Contributed by ?who?,
       9-Oct-2004.) $)
    fnressn $p |- ( ( F Fn A /\ B e. A ) ->
                  ( F |` { B } ) = { <. B , ( F ` B ) >. } ) $=
      ( vx wcel wfn csn cres cfv cop wceq cv wi sneq reseq2d fveq2 opeq12 mpdan
      wa cvv sneqd eqeq12d imbi2d wss vex snss fnssres sylan2b wf fsn2 biantrur
      dffn2 fvres ax-mp opeq2i sneqi eqeq2i bitr3i 3bitri expcom vtoclga impcom
      fvex snid sylib ) BAECAFZCBGZHZBBCIZJZGZKZVFCDLZGZHZVMVMCIZJZGZKZMVFVLMDB
      AVMBKZVSVLVFVTVOVHVRVKVTVNVGCVMBNOVTVQVJVTVPVIKVQVJKVMBCPVMBVPVIQRUAUBUCV
      FVMAEZVSVFWASVOVNFZVSWAVFVNAUDWBVMADUEZUFAVNCUGUHWBVNTVOUIVMVOIZTEZVOVMWD
      JZGZKZSZVSVNVOULVMTVOWCUJWIWHVSWEWHVMVOVCUKWGVRVOWFVQWDVPVMVMVNEWDVPKVMWC
      VDVMVNCUMUNUOUPUQURUSVEUTVAVB $.
      $( [9-Oct-2004] $)

    $( The value of a function restricted to a singleton.  (Contributed by
       ?who?, 9-Oct-2004.) $)
    fressnfv $p |- ( ( F Fn A /\ B e. A ) ->
                 ( ( F |` { B } ) : { B } --> C <-> ( F ` B ) e. C ) ) $=
      ( vx wcel wfn csn cres wf cfv wb cv wi wceq sneq reseq2 syl wa cop eleq1d
      feq1d feq2 bitrd fveq2 bibi12d imbi2d fnressn vex snid fvres ax-mp opeq2i
      sneqi eqeq2i fsn2 eleq1i iba syl5rbbr syl5bb sylbir expcom vtoclga impcom
      ) BAFDAGZBHZCDVFIZJZBDKZCFZLZVEEMZHZCDVMIZJZVLDKZCFZLZNVEVKNEBAVLBOZVRVKV
      EVSVOVHVQVJVSVMVFOZVOVHLVLBPVTVOVMCVGJVHVTVMCVNVGVMVFDQUBVMVFCVGUCUDRVSVP
      VICVLBDUEUAUFUGVEVLAFZVRVEWASVNVLVPTZHZOZVRAVLDUHWDVNVLVLVNKZTZHZOZVRWGWC
      VNWFWBWEVPVLVLVMFWEVPOVLEUIZUJVLVMDUKULZUMUNUOVOWECFZWHSZWHVQVLCVNWIUPVQW
      KWHWLWEVPCWJUQWHWKURUSUTVARVBVCVD $.
      $( [9-Oct-2004] $)
  $}

  $( The value of a constant function.  (Contributed by ?who?, 30-May-1999.) $)
  fvconst $p |- ( ( F : A --> { B } /\ C e. A ) -> ( F ` C ) = B ) $=
    ( csn wf wcel wa cfv wceq ffvelrn elsni syl ) ABEZDFCAGHCDIZNGOBJANCDKOBLM
    $.
    $( [30-May-1999] $)

  ${
    $d x y z A $.  $d x y z B $.
    fopabsn.1 $e |- A e. _V $.
    fopabsn.2 $e |- B e. _V $.
    $( The singleton of an ordered pair expressed as an ordered pair class
       abstraction.  (The proof was shortened by Andrew Salmon, 22-Oct-2011.)
       (Contributed by ?who?, 6-Jun-2006.)  (Revised by ?who?, 22-Oct-2011.) $)
    fopabsn $p |- { <. A , B >. } =
                  { <. x , y >. | ( x e. { A } /\ y = B ) } $=
      ( csn cxp cop cv wcel wceq wa copab xpsn fconstopab eqtr3i ) CGZDGHCDIGAJ
      RKBJDLMABNCDEFOABRDPQ $.
      $( [22-Oct-2011] $) $( [6-Jun-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    fopabap.0a $e |- A e. _V $.
    fopabap.0b $e |- B e. _V $.
    fopabap.1 $e |- ( R u. { A } ) = S $.
    fopabap.2 $e |- ( x = A -> C = B ) $.
    $( Append an additional value to a function.  (Contributed by ?who?,
       6-Jun-2006.)  (Revised by ?who?, 15-Jun-2007.) $)
    fopabap $p |- ( { <. x , y >. | ( x e. R /\ y = C ) } u. { <. A , B >. } )
                  = { <. x , y >. | ( x e. S /\ y = C ) } $=
      ( cv wcel wceq wa copab cop csn cun wo uneq2i unopab eleq2i bitr3i anbi1i
      fopabsn andir wb elsn2 eqeq2d sylbi pm5.32i orbi2i 3bitrri opabbii 3eqtri
      elun ) ALZFMZBLZENZOZABPZCDQRZSVCURCRZMZUTDNZOZABPZSVBVHTZABPURGMZVAOZABP
      VDVIVCABCDHIUFUAVBVHABUBVJVLABVLUSVFTZVAOVBVFVAOZTVJVKVMVAVKURFVESZMVMVOG
      URJUCURFVEUQUDUEUSVFVAUGVNVHVBVFVAVGVFURCNZVAVGUHURCHUIVPEDUTKUJUKULUMUNU
      OUP $.
      $( [15-Jun-2007] $) $( [6-Jun-2006] $)
  $}

  ${
    $d x A $.
    $( The value of the identity function.  (Contributed by ?who?,
       1-May-2004.) $)
    fvi $p |- ( A e. V -> ( _I ` A ) = A ) $=
      ( vx cv cid cfv wceq fveq2 id eqeq12d cvv wfn wcel wfun cdm funi mpbir2an
      dmi df-fn vex wa cop weq equid wbr ideq df-br bitr3i fnopfvb mpbiri mp2an
      mpbi vtoclg ) CDZEFZUNGZAEFZAGCABUNAGZUOUQUNAUNAEHURIJEKLZUNKMZUPUSENEOKG
      PREKSQCTZUSUTUAUPUNUNUBEMZCCUCZVBCUDVCUNUNEUEVBUNUNVAUFUNUNEUGUHULKUNUNEU
      IUJUKUM $.
      $( [1-May-2004] $)
  $}

  $( The value of a restricted identity function.  (Contributed by ?who?,
     19-May-2004.) $)
  fvresi $p |- ( B e. A -> ( ( _I |` A ) ` B ) = B ) $=
    ( wcel cid cres cfv fvres fvi eqtrd ) BACBDAEFBDFBBADGBAHI $.
    $( [19-May-2004] $)

  $( Remove an ordered pair not participating in a function value.  (Revised by
     Mario Carneiro, 28-May-2014.)  (Contributed by ?who?, 1-Oct-2013.)
     (Revised by ?who?, 28-May-2014.) $)
  fvunsn $p |- ( B =/= D
       -> ( ( A u. { <. B , C >. } ) ` D ) = ( A ` D ) ) $=
    ( wne cop csn cun cres cfv c0 wcel wceq syl cvv fvres fvprc eqtr4d pm2.61i
    wn resundir elsni necon3ai ressnop0 uneq2d un0 syl6eq syl5eq fveq1d 3eqtr3g
    snidg ) BDEZDABCFGZHZDGZIZJZDAUOIZJZDUNJZDAJZULDUPURULUPURUMUOIZHZURAUMUOUA
    ULVCURKHURULVBKURULBUOLZTVBKMVDBDBDUBUCBCUOUDNUEURUFUGUHUIDOLZUQUTMZVEDUOLZ
    VFDOUKZDUOUNPNVETZUQKUTDUPQDUNQRSVEUSVAMZVEVGVJVHDUOAPNVIUSKVADURQDAQRSUJ
    $.
    $( [28-May-2014] $) $( [1-Oct-2013] $)

  ${
    fvsn.1 $e |- A e. _V $.
    fvsn.2 $e |- B e. _V $.
    $( The value of a singleton of an ordered pair is the second member.
       (Contributed by ?who?, 12-Aug-1994.) $)
    fvsn $p |- ( { <. A , B >. } ` A ) = B $=
      ( cop csn wfun wcel cfv wceq funsn opex snid funopfv mp2 ) ABEZFZGPQHAQIB
      JABCDKPABCDLMABQNO $.
      $( [12-Aug-1994] $)
  $}

  ${
    $d A a b $.  $d B b $.
    $( The value of a singleton of an ordered pair is the second member.
       (Contributed by ?who?, 26-Oct-2012.) $)
    fvsng $p |- ( ( A e. V /\ B e. W ) -> ( { <. A , B >. } ` A ) = B ) $=
      ( va vb cv cop csn cfv opeq1 sneqd id fveq12d eqeq1d opeq2 fveq1d eqeq12d
      wceq vex fvsn vtocl2g ) EGZUCFGZHZIZJZUDSAAUDHZIZJZUDSAABHZIZJZBSEFABCDUC
      ASZUGUJUDUNUCAUFUIUNUEUHUCAUDKLUNMNOUDBSZUJUMUDBUOAUIULUOUHUKUDBAPLQUOMRU
      CUDETFTUAUB $.
      $( [26-Oct-2012] $)
  $}

  ${
    fvsnun.1 $e |- A e. _V $.
    fvsnun.2 $e |- B e. _V $.
    fvsnun.3 $e |- G = ( { <. A , B >. } u. ( F |` ( C \ { A } ) ) ) $.
    $( The value of a function with one of its ordered pairs replaced, at the
       replaced ordered pair.  See also ~ fvsnun2 .  (Contributed by ?who?,
       23-Sep-2007.) $)
    fvsnun1 $p |- ( G ` A ) = B $=
      ( csn cres cfv wcel wceq fvres ax-mp cun c0 cin eqtri 3eqtri snid reseq1i
      cop cdif resundir incom disjdif resdisj uneq2i un0 fveq1i fvsn eqtr3i ) A
      EAIZJZKZAEKZBAUNLZUPUQMAFUAZAUNENOUPAABUCIZUNJZKZAUTKZBAUOVAUOUTDCUNUDZJZ
      PZUNJVAVEUNJZPZVAEVFUNHUBUTVEUNUEVHVAQPVAVGQVAVDUNRZQMVGQMVIUNVDRQVDUNUFU
      NCUGSVDUNDUHOUIVAUJSTUKURVBVCMUSAUNUTNOABFGULTUM $.
      $( [23-Sep-2007] $)

    $( The value of a function with one of its ordered pairs replaced, at
       arguments other than the replaced one.  See also ~ fvsnun1 .
       (Contributed by ?who?, 23-Sep-2007.) $)
    fvsnun2 $p |- ( D e. ( C \ { A } ) -> ( G ` D ) = ( F ` D ) ) $=
      ( csn cdif wcel cres cfv fvres cop cun c0 wceq 3eqtri reseq1i cin disjdif
      resundir wfn wb fnsn fnresdisj ax-mp mpbi residm uneq12i uncom un0 fveq1i
      syl5eq eqtr3d ) DCAJZKZLZDFUSMZNZDFNDENZDUSFOUTVBDEUSMZNVCDVAVDVAABPJZVDQ
      ZUSMVEUSMZVDUSMZQZVDFVFUSIUAVEVDUSUDVIRVDQVDRQVDVGRVHVDURUSUBRSZVGRSZURCU
      CVEURUEVJVKUFABGHUGURUSVEUHUIUJEUSUKULRVDUMVDUNTTUODUSEOUPUQ $.
      $( [23-Sep-2007] $)
  $}

  ${
    fvpr1.1 $e |- A e. _V $.
    fvpr1.2 $e |- C e. _V $.
    $( The value of a function with a domain of two elements.  (Contributed by
       Jeff Madsen, 20-Jun-2010.) $)
    fvpr1 $p |- ( A =/= B -> ( { <. A , C >. , <. B , D >. } ` A ) = C ) $=
      ( wne cop cpr cfv csn df-pr fveq1i wceq necom fvunsn sylbi syl5eq fvsn
      cun syl6eq ) ABGZAACHZBDHZIZJZAUCKZJZCUBUFAUGUDKTZJZUHAUEUIUCUDLMUBBAGUJU
      HNABOUGBDAPQRACEFSUA $.
      $( [1-Oct-2013] $) $( [20-Jun-2010] $)
  $}

  ${
    fvpr2.1 $e |- B e. _V $.
    fvpr2.2 $e |- D e. _V $.
    $( The value of a function with a domain of two elements.  (Contributed by
       Jeff Madsen, 20-Jun-2010.) $)
    fvpr2 $p |- ( A =/= B -> ( { <. A , C >. , <. B , D >. } ` B ) = D ) $=
      ( wne cop cpr cfv wceq fvpr1 necom prcom fveq1i eqeq1i 3imtr4i ) BAGBBDHZ
      ACHZIZJZDKABGBSRIZJZDKBADCEFLABMUCUADBUBTSRNOPQ $.
      $( [1-Oct-2013] $) $( [20-Jun-2010] $)
  $}

  $( The value of a constant function.  (Contributed by ?who?, 20-Aug-2005.) $)
  fvconst2g $p |- ( ( B e. D /\ C e. A ) -> ( ( A X. { B } ) ` C ) = B ) $=
    ( wcel csn cxp wf cfv wceq fconstg fvconst sylan ) BDEABFZANGZHCAECOIBJABDK
    ABCOLM $.
    $( [20-Aug-2005] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( A constant function expressed as a cross product.  (Contributed by
       ?who?, 27-Nov-2007.) $)
    fconst2g $p |- ( B e. C -> ( F : A --> { B } <-> F = ( A X. { B } ) ) ) $=
      ( vx wcel csn wf cxp wceq wa cv cfv wral fvconst adantlr fvconst2g eqtr4d
      adantll wfn ralrimiva wb fnconstg eqfnfv syl2an mpbird expcom syl5ibrcom
      ffn fconstg feq1 impbid ) BCFZABGZDHZDAUNIZJZUOUMUQUOUMKZUQELZDMZUSUPMZJZ
      EANZURVBEAURUSAFZKUTBVAUOVDUTBJUMABUSDOPUMVDVABJUOABUSCQSRUAUODATUPATUQVC
      UBUMAUNDUIABCUCEADUPUDUEUFUGUMUOUQAUNUPHABCUJAUNDUPUKUHUL $.
      $( [27-Nov-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    fvconst2.1 $e |- B e. _V $.
    $( The value of a constant function.  (Contributed by ?who?,
       16-Apr-2005.) $)
    fvconst2 $p |- ( C e. A -> ( ( A X. { B } ) ` C ) = B ) $=
      ( cvv wcel csn cxp cfv wceq fvconst2g mpan ) BEFCAFCABGHIBJDABCEKL $.
      $( [16-Apr-2005] $)

    $( A constant function expressed as a cross product.  (Contributed by
       ?who?, 20-Aug-1999.) $)
    fconst2 $p |- ( F : A --> { B } <-> F = ( A X. { B } ) ) $=
      ( cvv wcel csn wf cxp wceq wb fconst2g ax-mp ) BEFABGZCHCANIJKDABECLM $.
      $( [20-Aug-1999] $)
  $}

  $( Two ways to express that a function is constant.  (Contributed by ?who?,
     27-Nov-2007.) $)
  fconst5 $p |- ( ( F Fn A /\ A =/= (/) ) -> ( F = ( A X. { B } ) <->
                 ran F = { B } ) ) $=
    ( wfn c0 wne wa csn cxp wceq crn wi eqeq2d syl5ib adantl cvv adantrd adantr
    rneq wb rnxp wcel wf wfo df-fo fof sylbir fconst2g exp3a fnrel snprc relrn0
    wn wrel biimprd eqeq2 xpeq2 xp0 syl6eq 3imtr4d ex sylbi syl5 pm2.61i impbid
    ) CADZAEFZGZCABHZIZJZCKZVIJZVGVKVMLVFVKVLVJKZJVGVMCVJSVGVNVIVLAVIUAMNOBPUBZ
    VHVMVKLZLVOVFVPVGVOVFVMVKVFVMGZAVICUCZVOVKVQAVICUDVRAVICUEAVICUFUGABPCUHNUI
    QVOUMZVFVPVGVFCUNZVSVPACUJVSVIEJZVTVPLBUKWAVTVPWAVTGVLEJZCEJZVMVKVTWBWCLWAV
    TWCWBCULUOOWAVMWBTVTVIEVLUPRWAVKWCTVTWAVJECWAVJAEIEVIEAUQAURUSMRUTVAVBVCQVD
    VE $.
    $( [27-Nov-2007] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( A constant function expressed in terms of its functionality, domain, and
       value.  See also ~ fconst2 .  (Contributed by ?who?, 27-Aug-2004.) $)
    fconstfv $p |- ( F : A --> { B } <->
                   ( F Fn A /\ A. x e. A ( F ` x ) = B ) ) $=
      ( vy vz csn wf wfn cv cfv wceq wral wa syl6bb wcel wrex eqeq1d sylan9bbr
      c0 ffn fvconst ralrimiva jca wi fneq2 fn0 feq1 mpbiri syl6bi feq2 sylibrd
      f0 adantrd wne crn wb fvelrnb weq fveq2 rspccva rexbidva r19.9rzv bicomd
      an32s vex elsn eqcom bitr2i eqrdv exp31 imdistand wfo df-fo fof pm2.61ine
      sylbir syl6 impbii ) BCGZDHZDBIZAJZDKZCLZABMZNZWAWBWFBVTDUAWAWEABBCWCDUBU
      CUDWGWAUEBTBTLZWBWAWFWHWBTVTDHZWAWHWBDTLZWIWHWBDTIWJBTDUFDUGOWJWITVTTHVTU
      MTVTDTUHUIUJBTVTDUKULUNBTUOZWGWBDUPZVTLZNZWAWKWBWFWMWKWBWFWMWKWBNWFNZEWLV
      TWOEJZWLPZCWPLZWPVTPZWKWFWBWQWRUQWBWQFJZDKZWPLZFBQZWKWFNWRFBWPDURWFXCWRFB
      QZWKWRWFXBWRFBWFWTBPNXACWPWEXACLAWTBAFUSWDXACWCWTDUTRVARVBWKWRXDWRFBVCVDS
      SVEWSWPCLWRWPCEVFVGWPCVHVIOVJVKVLWNBVTDVMWABVTDVNBVTDVOVQVRVPVS $.
      $( [27-Aug-2004] $)

    $( Two ways to express a constant function.  (Contributed by ?who?,
       15-Mar-2007.) $)
    fconst3 $p |- ( F : A --> { B } <->
                  ( F Fn A /\ A C_ ( `' F " { B } ) ) ) $=
      ( vx csn wf wfn cv cfv wceq wral wa ccnv cima wss fconstfv wfun cdm fnfun
      wb fndm eqimss2 syl funconstss syl2anc pm5.32i bitri ) ABEZCFCAGZDHCIBJDA
      KZLUIACMUHNOZLDABCPUIUJUKUICQACRZOZUJUKTACSUIULAJUMACUAAULUBUCDABCUDUEUFU
      G $.
      $( [15-Mar-2007] $)
  $}

  $( Two ways to express a constant function.  (Contributed by ?who?,
     8-Mar-2007.) $)
  fconst4 $p |- ( F : A --> { B } <->
                ( F Fn A /\ ( `' F " { B } ) = A ) ) $=
    ( csn wf wfn ccnv cima wss wa wceq fconst3 cnvimass fndm syl5sseq biantrurd
    cdm eqss syl6bbr pm5.32i bitri ) ABDZCECAFZACGUBHZIZJUCUDAKZJABCLUCUEUFUCUE
    UDAIZUEJUFUCUGUEUCCQUDACUBMACNOPUDARSTUA $.
    $( [8-Mar-2007] $)

  $( A function's value in a preimage belongs to the image.  (Contributed by
     ?who?, 23-Sep-2003.) $)
  funfvima $p |- ( ( Fun F /\ B e. dom F ) -> ( B e. A ->
                 ( F ` B ) e. ( F " A ) ) ) $=
    ( wfun cdm wcel wa cfv cima wi cres cin dmres eleq2i elin crn funres fvelrn
    bitri sylan fvres eleq1d syl6rbbr syl5ibrcom ex syl5bir exp3a com12 pm2.43b
    dfima3 imp3a ) CDZBCEZFZGBAFZBCHZCAIZFZUOULUNUOURJZULUOUNUSJULUOUNUSUOUNGZB
    CAKZEZFZULUSVCBAUMLZFUTVBVDBCAMNBAUMOSULVCUSULVCGURUOBVAHZVAPZFZULVADVCVGAC
    QBVARTUOVGUPVFFURUOVEUPVFBACUAUBUQVFUPCAUJNUCUDUEUFUGUHUKUI $.
    $( [23-Sep-2003] $)

  $( A function's value in an included preimage belongs to the image.
     (Contributed by ?who?, 3-Feb-1997.) $)
  funfvima2 $p |- ( ( Fun F /\ A C_ dom F ) -> ( B e. A ->
                  ( F ` B ) e. ( F " A ) ) ) $=
    ( wfun cdm wss wcel cfv cima wi ssel funfvima ex com23 a2d syl5 imp ) CDZAC
    EZFZBAGZBCHCAIGZJZTUABSGZJRUCASBKRUAUDUBRUDUAUBRUDUCABCLMNOPQ $.
    $( [3-Feb-1997] $)

  ${
    $d x A $.  $d x F $.  $d x G $.
    $( A class including a function contains the function's value in the image
       of the singleton of the argument.  (Contributed by ?who?,
       23-Mar-2004.) $)
    funfvima3 $p |- ( ( Fun F /\ F C_ G ) -> ( A e. dom F ->
                    ( F ` A ) e. ( G " { A } ) ) ) $=
      ( wss wfun cdm wcel cfv csn wi wa cop funfvop ssel2 sylan2 elimasn sylibr
      cima exp32 impcom ) BCDZBEZABFGZABHZCAIRGZJUAUBUCUEUAUBUCKZKAUDLZCGZUEUFU
      AUGBGUHABMBCUGNOCAUDPQST $.
      $( [23-Mar-2004] $)
  $}

  ${
    $d x y F $.
    $( Upper bound for the class of values of a class.  (Contributed by ?who?,
       9-Nov-1995.) $)
    fvclss $p |- { y | E. x y = ( F ` x ) } C_ ( ran F u. { (/) } ) $=
      ( cv cfv wceq wex crn c0 csn cun wcel wo wn wne wbr eqcom tz6.12i syl6ibr
      syl5bi eximdv com12 elrn necon1bd vex elsn orrd elun sylibr abssi ) BDZAD
      ZCEZFZAGZBCHZIJZKZUOUKUPLZUKUQLZMUKURLUOUSUTUOUSNUKIFUTUOUSUKIUOUKIOZULUK
      CPZAGZUSVAUOVCVAUNVBAUNUMUKFVAVBUKUMQULUKCRTUAUBAUKCUCSUDUKIBUEUFSUGUKUPU
      QUHUIUJ $.
      $( [9-Nov-1995] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C w $.  $d D y $.  $d w x y $.  $d w z y $.
    abrexco.1 $e |- B e. _V $.
    abrexco.2 $e |- ( y = B -> C = D ) $.
    $( Composition of two image maps ` C ( y ) ` and ` B ( w ) ` .
       (Contributed by ?who?, 27-May-2013.) $)
    abrexco $p |- { x | E. y e. { z | E. w e. A z = B } x = C } =
        { x | E. w e. A x = D } $=
      ( cv wceq wrex cab wa wex wcel df-rex vex eqeq1 rexbidv elab anbi1i exbii
      r19.41v bitr4i bitri rexcom4 eqeq2d ceqsexv rexbii 3bitr2i abbii ) AKZGLZ
      BCKZFLZDEMZCNZMZUNHLZDEMZAUTBKZFLZUOOZDEMZBPZVEBPZDEMVBUTVCUSQZUOOZBPVGUO
      BUSRVJVFBVJVDDEMZUOOVFVIVKUOURVKCVCBSUPVCLUQVDDEUPVCFTUAUBUCVDUODEUEUFUDU
      GVEDBEUHVHVADEUOVABFIVDGHUNJUIUJUKULUM $.
      $( [27-May-2013] $)
  $}


  ${
    $d x y z A $.  $d y z B $.  $d y z C $.
    $( The image of an indexed union is the indexed union of the images.
       (Contributed by Mario Carneiro, 18-Jun-2014.) $)
    imaiun $p |- ( A " U_ x e. B C ) = U_ x e. B ( A " C ) $=
      ( vy vz ciun cima cv wcel cop wex wrex rexcom4 elima3 rexbii eliun anbi1i
      wa r19.41v bitr4i exbii 3bitr4ri 3bitr4i eqriv ) EBACDGZHZACBDHZGZFIZUFJZ
      UJEIZKBJZSZFLZULUHJZACMZULUGJULUIJUJDJZUMSZFLZACMUSACMZFLUQUOUSAFCNUPUTAC
      FULBDOPUNVAFUNURACMZUMSVAUKVBUMAUJCDQRURUMACTUAUBUCFULBUFOAULCUHQUDUE $.
      $( [18-Jun-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The image of a union is the indexed union of the images.  Theorem 3K(a)
       of [Enderton] p. 50.  (The proof was shortened by Mario Carneiro,
       18-Jun-2014.)  (Contributed by ?who?, 9-Aug-2004.)  (Revised by ?who?,
       18-Jun-2014.) $)
    imauni $p |- ( A " U. B ) = U_ x e. B ( A " x ) $=
      ( cuni cima cv ciun uniiun imaeq2i imaiun eqtri ) BCDZEBACAFZGZEACBMEGLNB
      ACHIABCMJK $.
      $( [18-Jun-2014] $) $( [9-Aug-2004] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.
    $( The indexed union of a function's values is the union of its range.
       Compare Definition 5.4 of [Monk1] p. 50.  (Contributed by ?who?,
       27-Sep-2004.) $)
    fniunfv $p |- ( F Fn A -> U_ x e. A ( F ` x ) = U. ran F ) $=
      ( vy wfn crn cuni cv cfv wceq wrex cab ciun fnrnfv unieqd dfiun2 syl6reqr
      fvex ) CBEZCFZGDHAHZCIZJABKDLZGABUBMSTUCADBCNOADBUBUACRPQ $.
      $( [27-Sep-2004] $)

    $( The indexed union of a function's values is the union of its image under
       the index class.

       Note:  This theorem depends on the fact that our function value is the
       empty set outside of its domain.  If the antecedent is changed to
       ` F Fn A ` , the theorem can be proved without this dependency.
       (Contributed by ?who?, 26-Mar-2006.) $)
    funiunfv $p |- ( Fun F -> U_ x e. A ( F ` x ) = U. ( F " A ) ) $=
      ( vy vz vw wfun cv cfv ciun wcel wceq wa cuni fvex wrex wex c0 wn syl5eq
      copab crn cima fveq2 fvopab4 iuneq2i wfn fnopab2 fniunfv ax-mp eqtr3i cab
      rnopab2 unieqi wel wbr eqcom idd wi funbrfv adantr wb cdm n0i ndmfv eqeq1
      eqid syl5ib con1d mpan9 funbrfvb sylan2 pm5.21ndd syl5bb rexbidv pm5.32da
      expr exbidv eluniab eluni elima anbi2i exbii bitri 3bitr4g eqrdv ) CGZABA
      HZCIZJZDHZBKEHZWKCIZLZMDEUAZUBZNZCBUCZNZABWHWOIZJZWJWQABWTWIDEWHWMWIBWOWK
      WHCUDWOVGZWHCOUEUFWOBUGXAWQLDEBWMWOWKCOXBUHABWOUIUJUKWGWQWNDBPZEULZNZWSWP
      XDDEBWMUMUNWGFXEWSWGFEUOZXCMZEQXFWKWLCUPZDBPZMZEQZFHZXEKXLWSKZWGXGXJEWGXF
      XCXIWGXFMZWNXHDBWNWMWLLZXNXHWLWMUQXNXOXOXHXNXOURWGXHXOUSXFWKWLCUTVAWGXFXO
      XOXHVBZXFXOMWGWKCVCKZXPXFWLRLZSXOXQWLXLVDXOXQXRXQSWMRLXOXRWKCVEWMWLRVFVHV
      IVJWKWLCVKVLVQVMVNVOVPVRXCEXLVSXMXFWLWRKZMZEQXKEXLWRVTXTXJEXSXIXFDWLCBWAW
      BWCWDWEWFTT $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x z A $.  $d y z F $.  $d x y $.
    funiunfvf.1 $e |- ( y e. F -> A. x y e. F ) $.
    $( The indexed union of a function's values is the union of its image under
       the index class.  This version of ~ funiunfv uses a bound-variable
       hypothesis in place of a distinct variable condition.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       15-Apr-2013.)  (Contributed by ?who?, 26-Mar-2006.)  (Revised by ?who?,
       15-Apr-2013.) $)
    funiunfvf $p |- ( Fun F -> U_ x e. A ( F ` x ) = U. ( F " A ) ) $=
      ( vz wfun cv ciun cima cuni wcel ax-17 hbfv fveq2 cbviun funiunfv syl5eqr
      cfv ) DGACAHZDSZIFCFHZDSZIDCJKFABCUCUAABUBDEBHZUBLAMNUDUALFMUBTDOPFCDQR
      $.
      $( [15-Apr-2013] $)  $( [26-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( Membership in the union of an image of a function.  (Contributed by
       ?who?, 28-Sep-2006.) $)
    eluniima $p |- ( Fun F ->
                   ( B e. U. ( F " A ) <-> E. x e. A B e. ( F ` x ) ) ) $=
      ( cv cfv wcel wrex ciun wfun cima cuni eliun funiunfv eleq2d syl5rbbr ) C
      AEDFZGABHCABQIZGDJZCDBKLZGACBQMSRTCABDNOP $.
      $( [28-Sep-2006] $)

    $( Membership in the union of the range of a function.  (Contributed by
       ?who?, 24-Sep-2006.) $)
    elunirn $p |- ( Fun F ->
                     ( A e. U. ran F <-> E. x e. dom F A e. ( F ` x ) ) ) $=
      ( crn cuni wcel cdm cima wfun cv cfv wrex imadmrn unieqi eluniima syl5bbr
      eleq2i ) BCDZEZFBCCGZHZEZFCIBAJCKFATLUBSBUARCMNQATBCOP $.
      $( [24-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d z B $.  $d x y z F $.
    $( A one-to-one function in terms of function values.  Compare Theorem
       4.8(iv) of [Monk1] p. 43.  (Contributed by ?who?, 29-Oct-1996.) $)
    dff13 $p |- ( F : A -1-1-> B <-> ( F : A --> B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( vz cv wbr wal wa cfv wceq wi wral wb wcel breldm eleq2d syl5ib eqcom wf
      wf1 wmo weq wfn ffn fndm anim12d pm4.71rd fnbrfvb syl5bb bi2anan9 anandis
      cdm pm5.32da bitr4d imbi1d impexp syl6bb albidv 19.21v 19.23v fvex eqvinc
      dff12 wex imbi1i bitr4i imbi2i bitri 2albidv breq1 mo4 albii alcom 3bitri
      r2al 3bitr4g syl pm5.32i ) CDEUBCDEUAZAGZFGZEHZAUCZFIZJWAWBEKZBGZEKZLZABU
      DZMZBCNACNZJAFCDEVEWAWFWMWAECUEZWFWMOCDEUFWNWDWHWCEHZJZWKMZFIZBIZAIZWBCPZ
      WHCPZJZWLMZBIAIWFWMWNWRXDABWNWRXCWCWGLZWCWILZJZWKMZMZFIZXDWNWQXIFWNWQXCXG
      JZWKMXIWNWPXKWKWNWPXCWPJXKWNWPXCWNWDXAWOXBWDWBEUNZPWNXAWBWCEQWNXLCWBCEUGZ
      RSWOWHXLPWNXBWHWCEQWNXLCWHXMRSUHUIWNXCXGWPWNXAXBXGWPOWNXAJZXEWDWNXBJZXFWO
      XEWGWCLXNWDWCWGTCWBWCEUJUKXFWIWCLXOWOWCWITCWHWCEUJUKULUMUOUPUQXCXGWKURUSU
      TXJXCXHFIZMXDXCXHFVAXPWLXCXPXGFVFZWKMWLXGWKFVBWJXQWKFWGWIWBEVCVDVGVHVIVJU
      SVKWFWQBIZAIZFIXRFIZAIWTWEXSFWDWOABWBWHWCEVLVMVNXRFAVOXTWSAWQFBVOVNVPWLAB
      CCVQVRVSVTVJ $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y w v A $.  $d w v B $.  $d z w v F $.  $d x y z $.
    f1fvf.1 $e |- ( z e. F -> A. x z e. F ) $.
    f1fvf.2 $e |- ( z e. F -> A. y z e. F ) $.
    $( A one-to-one function in terms of function values.  Compare Theorem
       4.8(iv) of [Monk1] p. 43.  (Contributed by ?who?, 31-Jul-2003.) $)
    dff13f $p |- ( F : A -1-1-> B <-> ( F : A --> B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( vw vv cv cfv wceq wi wral wa wcel ax-17 hbfv hbim wf1 dff13 hbeq eqeq2d
      fveq2 eqeq2 imbi12d cbvral ralbii hbral eqeq1d eqeq1 ralbidv bitri anbi2i
      wf ) DEFUADEFUPZIKZFLZJKZFLZMZURUTMZNZJDOZIDOZPUQAKZFLZBKZFLZMZVGVIMZNZBD
      OZADOZPIJDEFUBVFVOUQVFUSVJMZURVIMZNZBDOZIDOVOVEVSIDVDVRJBDVBVCBBCCUSVABCU
      RFHCKZURQZBRSBCUTFHVTUTQBRSUCVCBRTVPVQJVPJRVQJRTUTVIMZVBVPVCVQWBVAVJUSUTV
      IFUEUDUTVIURUFUGUHUIVSVNIADVRABDVIDQARVPVQAACCUSVJACURFGWAARSACVIFGVTVIQA
      RSUCVQARTUJVNIRURVGMZVRVMBDWCVPVKVQVLWCUSVHVJURVGFUEUKURVGVIULUGUMUHUNUOU
      N $.
      $( [31-Jul-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y F $.
    $( Equality of function values for a one-to-one function.  (Contributed by
       ?who?, 11-Feb-1997.) $)
    f1fveq $p |- ( ( F : A -1-1-> B /\ ( C e. A /\ D e. A ) ) ->
                 ( ( F ` C ) = ( F ` D ) <-> C = D ) ) $=
      ( vx vy wf1 wcel wa cfv wceq wi cv fveq2 eqeq1d eqeq1 imbi12d imbi2d wral
      eqeq2d eqeq2 wf dff13 simprbi rsp2 syl com12 vtocl2ga impcom impbid1 ) AB
      EHZCAIDAIJZJCEKZDEKZLZCDLZUMULUPUQMZULFNZEKZGNZEKZLZUSVALZMZMULUNVBLZCVAL
      ZMZMULURMFGCDAAUSCLZVEVHULVIVCVFVDVGVIUTUNVBUSCEOPUSCVAQRSVADLZVHURULVJVF
      UPVGUQVJVBUOUNVADEOUAVADCUBRSULUSAIVAAIJZVEULVEGATFATZVKVEMULABEUCVLFGABE
      UDUEVEFGAAUFUGUHUIUJCDEOUK $.
      $( [11-Feb-1997] $)
  $}

  ${
    $d F z $.  $d A z $.  $d Y z $.  $d X z $.  $d B z $.
    $( Membership in the image of a 1-1 map.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    f1elima $p |- ( ( F : A -1-1-> B /\ X e. A /\ Y C_ A )
                                -> ( ( F ` X ) e. ( F " Y ) <-> X e. Y ) ) $=
      ( vz wf1 wcel wss w3a cfv cima cv wceq wrex wb wfn wi wa anassrs fvelimab
      f1fn sylan 3adant2 ssel impac f1fveq ancom2s biimpd biimpcd sylan9 anasss
      eleq1 sylan2 rexlimdva 3impa fveq2 eqeq1d rspcev mpan2 impbid1 bitrd
      eqid ) ABCGZDAHZEAIZJZDCKZCELHZFMZCKZVHNZFEOZDEHZVDVFVIVMPZVEVDCAQVFVOABC
      UBFAEVHCUAUCUDVGVMVNVDVEVFVMVNRVDVESZVFSVLVNFEVPVFVJEHZVLVNRZVFVQSVPVJAHZ
      VQSVRVFVQVSEAVJUEUFVPVSVQVRVPVSSVLVJDNZVQVNVDVEVSVLVTRVDVEVSSSVLVTVDVSVEV
      LVTPABVJDCUGUHUITVTVQVNVJDEUMUJUKULUNTUOUPVNVHVHNZVMVHVCVLWAFDEVTVKVHVHVJ
      DCUQURUSUTVAVB $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( A one-to-one onto function in terms of function values.  (Contributed by
       ?who?, 29-Mar-2008.) $)
    dff1o6 $p |- ( F : A -1-1-onto-> B <-> ( F Fn A /\ ran F = B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( wf1o wf1 wfo wa wf cv cfv wceq wi wral wfn crn w3a df-f1o dff13 anbi12i
      df-fo df-3an wss eqimss anim2i df-f sylibr pm4.71ri anbi1i 3bitrri 3bitri
      an32 ) CDEFCDEGZCDEHZICDEJZAKZELBKZELMUQURMNBCOACOZIZECPZEQZDMZIZIZVAVCUS
      RZCDESUNUTUOVDABCDETCDEUBUAVFVDUSIUPVDIZUSIVEVAVCUSUCVDVGUSVDUPVDVAVBDUDZ
      IUPVCVHVAVBDUEUFCDEUGUHUIUJUPVDUSUMUKUL $.
      $( [29-Mar-2008] $)
  $}

  $( The converse value of the value of a one-to-one onto function.
     (Contributed by ?who?, 20-May-2004.) $)
  f1ocnvfv1 $p |- ( ( F : A -1-1-onto-> B /\ C e. A ) ->
                 ( `' F ` ( F ` C ) ) = C ) $=
    ( wf1o wcel wa ccnv ccom cfv cid cres wceq f1ococnv1 fveq1d adantr wf fvco3
    f1of sylan fvresi adantl 3eqtr3d ) ABDEZCAFZGCDHZDIZJZCKALZJZCDJUFJZCUDUHUJ
    MUEUDCUGUIABDNOPUDABDQUEUHUKMABDSABCUFDRTUEUJCMUDACUAUBUC $.
    $( [20-May-2004] $)

  $( The value of the converse value of a one-to-one onto function.
     (Contributed by ?who?, 20-May-2004.) $)
  f1ocnvfv2 $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                 ( F ` ( `' F ` C ) ) = C ) $=
    ( wf1o wcel ccnv cfv wceq wrel f1orel dfrel2 fveq1d adantr f1ocnv f1ocnvfv1
    wa sylib sylan eqtr3d ) ABDEZCBFZQCDGZHZUCGZHZUDDHZCUAUFUGIUBUAUDUEDUADJUED
    IABDKDLRMNUABAUCEUBUFCIABDOBACUCPST $.
    $( [20-May-2004] $)

  $( Relationship between the value of a one-to-one onto function and the value
     of its converse.  (Contributed by Raph Levien, 10-Apr-2004.) $)
  f1ocnvfv $p |- ( ( F : A -1-1-onto-> B /\ C e. A ) ->
                  ( ( F ` C ) = D -> ( `' F ` D ) = C ) ) $=
    ( cfv wceq ccnv wf1o wcel wa fveq2 eqcoms f1ocnvfv1 eqeq2d syl5ib ) CEFZDGD
    EHZFZQRFZGZABEICAJKZSCGUADQDQRLMUBTCSABCENOP $.
    $( [10-Apr-2004] $)

  $( Relationship between the value of a one-to-one onto function and the value
     of its converse.  (Contributed by ?who?, 20-May-2004.)  (Revised by ?who?,
     9-Aug-2006.) $)
  f1ocnvfvb $p |- ( ( F : A -1-1-onto-> B /\ C e. A /\ D e. B ) ->
                  ( ( F ` C ) = D <-> ( `' F ` D ) = C ) ) $=
    ( wf1o wcel w3a cfv wceq ccnv wi f1ocnvfv 3adant3 wa fveq2 eqcoms f1ocnvfv2
    eqeq2d syl5ib 3adant2 impbid ) ABEFZCAGZDBGZHCEIZDJZDEKIZCJZUCUDUGUILUEABCD
    EMNUCUEUIUGLUDUIUFUHEIZJZUCUEOZUGUKCUHCUHEPQULUJDUFABDERSTUAUB $.
    $( [9-Aug-2006] $) $( [20-May-2004] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( There is one domain element for each value of a one-to-one onto
       function.  (Contributed by ?who?, 26-May-2006.) $)
    f1ofveu $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                  E! x e. A ( F ` x ) = C ) $=
      ( wf1o wcel wa cv cfv wceq wreu cop ccnv wf f1ocnv f1of syl feu sylan wfn
      wb f1ofn fnopfvb opelcnv syl6bbr reubidva adantr mpbird ) BCEFZDCGZHAIZEJ
      DKZABLZDULMENZGZABLZUJCBUOOZUKUQUJCBUOFURBCEPCBUOQRACBDUOSTUJUNUQUBZUKUJE
      BUAZUSBCEUCUTUMUPABUTULBGHUMULDMEGUPBULDEUDDULEUEUFUGRUHUI $.
      $( [26-May-2006] $)
  $}

  $( The value of the converse of a one-to-one onto function belongs to its
     domain.  (Contributed by ?who?, 26-May-2006.) $)
  f1ocnvdm $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                    ( `' F ` C ) e. A ) $=
    ( wf1o ccnv wf wcel cfv f1ocnv f1of syl ffvelrn sylan ) ABDEZBADFZGZCBHCPIA
    HOBAPEQABDJBAPKLBACPMN $.
    $( [26-May-2006] $)

  ${
    $d x A $.  $d y B $.  $d x y F $.  $d y ph $.  $d x ps $.
    cbvfo.1 $e |- ( ( F ` x ) = y -> ( ph <-> ps ) ) $.
    $( Change bound variable between domain and range of function.
       (Contributed by ?who?, 23-Feb-1997.) $)
    cbvfo $p |- ( F : A -onto-> B -> ( A. x e. A ph <-> A. y e. B ps ) ) $=
      ( wral cv wcel wi wal wceq wa wex a1i jcad eximdv syl5bi wfo cdm crn wfun
      wb fofun cfv wbr elrn breldm funbrfv hba1 ax-17 biimpcd imim2i sps exlimd
      imp3a syl9 alrimdv eldm brelrn biimprcd impbid syl df-ral 3bitr4g fof fdm
      wf raleqdv forn 3bitr3d ) EFGUAZACGUBZIZBDGUCZIZACEIBDFIVNCJZVOKZALZCMZDJ
      ZVQKZBLZDMZVPVRVNGUDZWBWFUEEFGUFWGWBWFWGWBWEDWGWDVTVSGUGWCNZOZCPZWBBWDVSW
      CGUHZCPWGWJCWCGUIWGWKWICWGWKVTWHWKVTLWGVSWCGUJQVSWCGUKZRSTWBWIBCWACULBCUM
      WAWIBLCWAVTWHBAWHBLVTWHABHUNUOURUPUQUSUTWGWFWACWGVTWDWHOZDPZWFAVTWKDPWGWN
      DVSGVAWGWKWMDWGWKWDWHWKWDLWGVSWCGVBQWLRSTWFWMADWEDULADUMWEWMALDWEWDWHABWH
      ALWDWHABHVCUOURUPUQUSUTVDVEACVOVFBDVQVFVGVNACVOEVNEFGVJVOENEFGVHEFGVIVEVK
      VNBDVQFEFGVLVKVM $.
      $( [23-Feb-1997] $)

    $( Change bound variable between domain and range of function.
       (Contributed by ?who?, 23-Feb-1997.) $)
    cbvexfo $p |- ( F : A -onto-> B -> ( E. x e. A ph <-> E. y e. B ps ) ) $=
      ( wfo wn wral wrex cv cfv wceq notbid cbvfo dfrex2 3bitr4g ) EFGIZAJZCEKZ
      JBJZDFKZJACELBDFLTUBUDUAUCCDEFGCMGNDMOABHPQPACERBDFRS $.
      $( [23-Feb-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y H $.  $d x y G $.
    $d x y R $.  $d x y S $.  $d x y T $.
    $( Equality theorem for isomorphisms.  (Contributed by ?who?,
       17-May-2004.) $)
    isoeq1 $p |- ( H = G ->
          ( H Isom R , S ( A , B ) <-> G Isom R , S ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq1 fveq1 df-iso 2ralbidv
      breq12d bibi2d anbi12d 3bitr4g ) FEIZABFJZGKZHKZCLZUHFMZUIFMZDLZNZHAOGAOZ
      PABEJZUJUHEMZUIEMZDLZNZHAOGAOZPABCDFQABCDEQUFUGUPUOVAABFERUFUNUTGHAAUFUMU
      SUJUFUKUQULURDUHFESUIFESUBUCUAUDGHABCDFTGHABCDETUE $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms.  (Contributed by ?who?,
       17-May-2004.) $)
    isoeq2 $p |- ( R = T ->
          ( H Isom R , S ( A , B ) <-> H Isom T , S ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso breq bibi1d df-iso 2ralbidv
      anbi2d 3bitr4g ) CEIZABFJZGKZHKZCLZUFFMUGFMDLZNZHAOGAOZPUEUFUGELZUINZHAOG
      AOZPABCDFQABEDFQUDUKUNUEUDUJUMGHAAUDUHULUIUFUGCERSUAUBGHABCDFTGHABEDFTUC
      $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms.  (Contributed by ?who?,
       17-May-2004.) $)
    isoeq3 $p |- ( S = T ->
          ( H Isom R , S ( A , B ) <-> H Isom R , T ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso breq bibi2d df-iso 2ralbidv
      anbi2d 3bitr4g ) DEIZABFJZGKZHKZCLZUFFMZUGFMZDLZNZHAOGAOZPUEUHUIUJELZNZHA
      OGAOZPABCDFQABCEFQUDUMUPUEUDULUOGHAAUDUKUNUHUIUJDERSUAUBGHABCDFTGHABCEFTU
      C $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms.  (Contributed by ?who?,
       17-May-2004.) $)
    isoeq4 $p |- ( A = C ->
          ( H Isom R , S ( A , B ) <-> H Isom R , S ( C , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq2 raleq df-iso anbi12d
      raleqbi1dv 3bitr4g ) ACIZABFJZGKZHKZDLUFFMUGFMELNZHAOZGAOZPCBFJZUHHCOZGCO
      ZPABDEFQCBDEFQUDUEUKUJUMACBFRUIULGACUHHACSUBUAGHABDEFTGHCBDEFTUC $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms.  (Contributed by ?who?,
       17-May-2004.) $)
    isoeq5 $p |- ( B = C ->
          ( H Isom R , S ( A , B ) <-> H Isom R , S ( A , C ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq3 anbi1d df-iso 3bitr4g
      ) BCIZABFJZGKZHKZDLUDFMUEFMELNHAOGAOZPACFJZUFPABDEFQACDEFQUBUCUGUFBCAFRSG
      HABDEFTGHACDEFTUA $.
      $( [17-May-2004] $)
  $}


  ${
    $d y z w H $.  $d y z w R $.  $d y z w S $.  $d y z w A $.  $d y z w B $.
    $d x y z w $.
    nfiso.1 $e |- F/_ x H $.
    nfiso.2 $e |- F/_ x R $.
    nfiso.3 $e |- F/_ x S $.
    nfiso.4 $e |- F/_ x A $.
    nfiso.5 $e |- F/_ x B $.
    $( Bound-variable hypothesis builder for an isomorphism.  (Contributed by
       NM, 17-May-2004.)  (Proof shortened by Andrew Salmon, 22-Oct-2011.) $)
    nfiso $p |- F/ x H Isom R , S ( A , B ) $=
      ( vy vz cv wbr cfv wral nfcv nfbr nffv wiso wf1o wb wa df-isom nff1o nfbi
      nfral nfan nfxfr ) BCDEFUABCFUBZLNZMNZDOZULFPZUMFPZEOZUCZMBQZLBQZUDALMBCD
      EFUEUKUTAABCFGJKUFUSALBJURAMBJUNUQAAULUMDAULRZHAUMRZSAUOUPEAULFGVATIAUMFG
      VBTSUGUHUHUIUJ $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $( An isomorphism is a one-to-one onto function.  (Contributed by ?who?,
       27-Apr-2004.) $)
    isof1o $p |- ( H Isom R , S ( A , B ) -> H : A -1-1-onto-> B ) $=
      ( vx vy wiso wf1o cv wbr cfv wb wral df-iso simplbi ) ABCDEHABEIFJZGJZCKQ
      ELRELDKMGANFANFGABCDEOP $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y C $.  $d x y D $.
    $( An isomorphism connects binary relations via its function values.
       (Contributed by ?who?, 27-Apr-2004.) $)
    isorel $p |- ( ( H Isom R , S ( A , B ) /\ ( C e. A /\ D e. A ) ) ->
                 ( C R D <-> ( H ` C ) S ( H ` D ) ) ) $=
      ( vx vy wiso cv wbr cfv wb wral wcel wa wceq fveq2 bibi12d df-iso simprbi
      wf1o breq1 breq1d breq2 breq2d rspc2v mpan9 ) ABEFGJZHKZIKZELZUKGMZULGMZ
      FLZNZIAOHAOZCAPDAPQCDELZCGMZDGMZFLZNZUJABGUCURHIABEFGUAUBUQVCCULELZUTUOFL
      ZNHICDAAUKCRZUMVDUPVEUKCULEUDVFUNUTUOFUKCGSUETULDRZVDUSVEVBULDCEUFVGUOVAU
      TFULDGSUGTUHUI $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Identity law for isomorphism.  Proposition 6.30(1) of [TakeutiZaring]
       p. 33.  (Contributed by ?who?, 27-Apr-2004.) $)
    isoid $p |- ( _I |` A ) Isom R , R ( A , A ) $=
      ( vx vy cid cres wiso wf1o wbr cfv wral f1oi wcel fvresi breqan12d bicomd
      cv wb wa rgen2a df-iso mpbir2an ) AABBEAFZGAAUCHCQZDQZBIZUDUCJZUEUCJZBIZR
      ZDAKCAKALUJCDAUDAMZUEAMZSUIUFUKULUGUDUHUEBAUDNAUENOPTCDAABBUCUAUB $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w R $.  $d x y z w S $.
    $d x y z w H $.
    $( Converse law for isomorphism.  Proposition 6.30(2) of [TakeutiZaring]
       p. 33.  (Contributed by ?who?, 27-Apr-2004.) $)
    isocnv $p |- ( H Isom R , S ( A , B ) -> `' H Isom S , R ( B , A ) ) $=
      ( vx vy vz vw wf1o cv wbr cfv wb wral wa wiso wcel wceq f1ocnvfv2 adantrr
      ccnv f1ocnv adantr adantrl breq12d adantlr wf syl ffvelrn anim12dan breq1
      f1of fveq2 breq1d bibi12d bicom syl6bb breq2 rspc2va sylan an32s sylanl1
      breq2d bitr3d ralrimivva jca df-iso 3imtr4i ) ABEJZFKZGKZCLZVKEMZVLEMZDLZ
      NZGAOFAOZPZBAEUBZJZHKZIKZDLZWBVTMZWCVTMZCLZNZIBOHBOZPABCDEQBADCVTQVSWAWIV
      JWAVRABEUCZUDVSWHHIBBVSWBBRZWCBRZPZPWEEMZWFEMZDLZWDWGVJWMWPWDNVRVJWMPWNWB
      WOWCDVJWKWNWBSWLABWBETUAVJWLWOWCSWKABWCETUEUFUGVJBAVTUHZVRWMWPWGNZVJWAWQW
      JBAVTUMUIWQWMVRWRWQWMPWEARZWFARZPVRWRWQWKWSWLWTBAWBVTUJBAWCVTUJUKVQWRWNVO
      DLZWEVLCLZNZFGWEWFAAVKWESZVQXBXANXCXDVMXBVPXAVKWEVLCULXDVNWNVODVKWEEUNUOU
      PXBXAUQURVLWFSZXAWPXBWGXEVOWOWNDVLWFEUNVDVLWFWECUSUPUTVAVBVCVEVFVGFGABCDE
      VHHIBADCVTVHVI $.
      $( [27-Apr-2004] $)
    $( Converse law for isomorphism.  (Contributed by Mario Carneiro,
       30-Jan-2014.) $)
    isocnv2 $p |- ( H Isom R , S ( A , B ) <->
                    H Isom `' R , `' S ( A , B ) ) $=
      ( vx vy wf1o cv ccnv wbr cfv wb wral wa wiso brcnv bibi12i 2ralbii df-iso
      ralcom bitri anbi2i 3bitr4ri ) ABEHZFIZGIZCJZKZUFELZUGELZDJZKZMZGANFANZOU
      EUGUFCKZUKUJDKZMZFANGANZOABUHULEPABCDEPUOUSUEUOURGANFANUSUNURFGAAUIUPUMUQ
      UFUGCQUJUKDQRSURFGAAUAUBUCFGABUHULETGFABCDETUD $.
      $( [30-Jan-2014] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d H x y $.  $d R x y $.  $d S x y $.
    $( An isomorphism from one well-order to another can be restricted on
       either well-order.  (Contributed by Mario Carneiro, 15-Jan-2013.) $)
    isores2 $p |- ( H Isom R , S ( A , B ) <->
                      H Isom R , ( S i^i ( B X. B ) ) ( A , B ) ) $=
      ( vx vy wf1o cv wbr cfv wb wral wa cxp wiso wcel ffvelrn ralbidva df-iso
      cin wf f1of adantrr adantrl brinxp syl2anc anassrs bibi2d pm5.32i 3bitr4i
      sylan ) ABEHZFIZGIZCJZUNEKZUOEKZDJZLZGAMZFAMZNUMUPUQURDBBOUAZJZLZGAMZFAMZ
      NABCDEPABCVCEPUMVBVGUMVAVFFAUMUNAQZNZUTVEGAVIUOAQZNUSVDUPUMVHVJUSVDLZUMAB
      EUBZVHVJNZVKABEUCVLVMNUQBQZURBQZVKVLVHVNVJABUNERUDVLVJVOVHABUOERUEUQURBBD
      UFUGULUHUISSUJFGABCDETFGABCVCETUK $.
      $( [15-Jan-2013] $)
  $}

  ${
    $( An isomorphism from one well-order to another can be restricted on
       either well-order.  (Contributed by Mario Carneiro, 15-Jan-2013.) $)
    isores1 $p |- ( H Isom R , S ( A , B ) <->
                      H Isom ( R i^i ( A X. A ) ) , S ( A , B ) ) $=
      ( wiso cxp cin ccnv isocnv isores2 sylib wf1o wb isof1o isoeq1 sylbi 3syl
      syl mpbid wrel f1orel wceq dfrel2 sylibr impbii ) ABCDEFZABCAAGHZDEFZUGAB
      UHDEIZIZFZUIUGBADUHUJFZULUGBADCUJFZUMABCDEJBADCUJKZLBADUHUJJSUGABEMZEUAZU
      LUINZABCDEOABEUBZUQUKEUCZUREUDZABUHDEUKPQRTUIABCDUKFZUGUIUNVBUIUMUNABUHDE
      JUOUEBADCUJJSUIUPUQVBUGNZABUHDEOUSUQUTVCVAABCDEUKPQRTUF $.
      $( [15-Jan-2013] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u R $.  $d x y z w v u S $.  $d x y z w v u T $.
    $d x y z w v u G $.  $d x y z w v u H $.
    $( Composition (transitive) law for isomorphism.  Proposition 6.30(3) of
       [TakeutiZaring] p. 33.  (Contributed by ?who?, 27-Apr-2004.) $)
    isotr $p |- ( ( H Isom R , S ( A , B ) /\ G Isom S , T ( B , C ) ) ->
               ( G o. H ) Isom R , T ( A , C ) ) $=
      ( vz vw vu vv vx vy cv wbr cfv wb wral wa wf1o ccom f1oco ad2ant2r ancoms
      wiso wcel wi wf f1of ffvelrn anim12d syl adantr wceq breq1 breq1d bibi12d
      ex fveq2 breq2 breq2d rspc2v com12 adantl sylan9 imp weq adantll adantlr
      impcom ad2antrr fvco3 breqan12d anandis 3bitr4d ralrimivva df-iso anbi12i
      sylan jca 3imtr4i ) ABHUAZIOZJOZDPZWDHQZWEHQZEPZRZJASIASZTZBCGUAZKOZLOZEP
      ZWNGQZWOGQZFPZRZLBSKBSZTZTZACGHUBZUAZMOZNOZDPZXFXDQZXGXDQZFPZRZNASMASZTAB
      DEHUFZBCEFGUFZTACDFXDUFXCXEXMXBWLXEWMWCXEXAWKABCGHUCUDUEXCXLMNAAXCXFAUGZX
      GAUGZTZTXFHQZXGHQZEPZXSGQZXTGQZFPZXHXKXCXRYAYDRZWLXRXSBUGZXTBUGZTZXBYEWCX
      RYHUHZWKWCABHUIZYIABHUJZYJXPYFXQYGYJXPYFABXFHUKUSYJXQYGABXGHUKUSULUMUNXAY
      HYEUHWMYHXAYEWTYEXSWOEPZYBWRFPZRKLXSXTBBWNXSUOZWPYLWSYMWNXSWOEUPYNWQYBWRF
      WNXSGUTUQURWOXTUOZYLYAYMYDWOXTXSEVAYOWRYCYBFWOXTGUTVBURVCVDVEVFVGWLXRXHYA
      RZXBWKXRYPWCXRWKYPWJYPXFWEDPZXSWHEPZRIJXFXGAAIMVHZWFYQWIYRWDXFWEDUPYSWGXS
      WHEWDXFHUTUQURJNVHZYQXHYRYAWEXGXFDVAYTWHXTXSEWEXGHUTVBURVCVKVIVJXCYJXRXKY
      DRZWCYJWKXBYKVLYJXPXQUUAYJXPTYJXQTXIYBXJYCFABXFGHVMABXGGHVMVNVOVTVPVQWAXN
      WLXOXBIJABDEHVRKLBCEFGVRVSMNACDFXDVRWB $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y C $.  $d x y D $.
    $( Isomorphisms preserve minimal elements.  Note that ` ( ``' R " { D } ) `
       is Takeuti and Zaring's idiom for the initial segment
       ` { x | x R D } ` .  Proposition 6.31(1) of [TakeutiZaring] p. 33.
       (Contributed by ?who?, 19-Apr-2004.) $)
    isomin $p |- ( ( H Isom R , S ( A , B ) /\ ( C C_ A /\ D e. A ) ) ->
               ( ( C i^i ( `' R " { D } ) ) = (/) <->
               ( ( H " C ) i^i ( `' S " { ( H ` D ) } ) ) = (/) ) ) $=
      ( vy vx wcel wa ccnv csn cima cin wceq wbr wrex wex 3bitr4i wss c0 cfv cv
      wiso wn wb ssel2 anim1i an32s isorel fvex breq1 ceqsexv eqcom wf1o isof1o
      wfn f1ofn simpl fnbrfvb syl2an syl5bb anbi1d exbidv syl5bbr bitrd anassrs
      syl sylan2 rexbidva elin eliniseg anbi2i bitri exbii df-rex elima anbi12i
      neq0 r19.41v rexcom4 3bitr4g con4bid ) ABEFGUEZCAUAZDAJZKZKZCELDMNZOZUBPZ
      GCNZFLDGUCZMNZOZUBPZWIHUDZDEQZHCRZWRIUDZGQZXAWNFQZKZISZHCRZWLUFZWQUFZWIWS
      XEHCWEWHWRCJZWSXEUGZWHXIKWEWRAJZWGKZXJWFXIWGXLWFXIKXKWGCAWRUHUIUJWEXLKZWS
      WRGUCZWNFQZXEABWRDEFGUKXOXAXNPZXCKZISXMXEXCXOIXNWRGULXAXNWNFUMUNXMXQXDIXM
      XPXBXCXPXNXAPZXMXBXAXNUOWEGAURZXKXRXBUGXLWEABGUPXSABEFGUQABGUSVIXKWGUTAWR
      XAGVAVBVCVDVEVFVGVJVHVKWRWKJZHSXIWSKZHSXGWTXTYAHXTXIWRWJJZKYAWRCWJVLYBWSX
      IEDWRVMVNVOVPHWKVTWSHCVQTXAWPJZISXDHCRZISXHXFYCYDIXAWMJZXAWOJZKXBHCRZXCKY
      CYDYEYGYFXCHXAGCVRFWNXAVMVSXAWMWOVLXBXCHCWATVPIWPVTXDHICWBTWCWD $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y D $.
    $( Isomorphisms preserve initial segments.  Proposition 6.31(2) of
       [TakeutiZaring] p. 33.  (Contributed by ?who?, 20-Apr-2004.) $)
    isoini $p |- ( ( H Isom R , S ( A , B ) /\ D e. A ) ->
               ( H " ( A i^i ( `' R " { D } ) ) ) =
               ( B i^i ( `' S " { ( H ` D ) } ) ) ) $=
      ( vx vy wcel wa ccnv cfv csn cima cin wbr wrex bitri wb syl wiso cab elin
      cv eliniseg anbi2i wceq crn wfo wf1o isof1o f1ofo forn eleq2d wfn fvelrnb
      f1ofn bitr3d anbi1d adantr anbi1i anass wi fnbrfvb adantrr bicomd anbi12d
      sylan isorel ancom breq1 pm5.32i 3bitr3g exp32 com23 imp pm5.32d rexbidv2
      syl5bb r19.41v syl6bb bitr4d abbi2dv df-ima syl6reqr ) ABDEFUAZCAIZJZBEKC
      FLZMNZOZGUDZHUDZFPZGADKCMNZOZQZHUBFWPNWHWQHWKWMWKIZWMBIZWMWIEPZJZWHWQWRWS
      WMWJIZJXAWMBWJUCXBWTWSEWIWMUEUFRWHXAWLFLZWMUGZGAQZWTJZWQWFXAXFSWGWFWSXEWT
      WFWMFUHZIZWSXEWFXGBWMWFABFUIZXGBUGWFABFUJZXIABDEFUKZABFULTABFUMTUNWFFAUOZ
      XHXESWFXJXLXKABFUQTZGAWMFUPTURUSUTWHWQXDWTJZGAQXFWHWNXNGWPAWLWPIZWNJZWLAI
      ZWLCDPZWNJZJZWHXQXNJXPXQXRJZWNJXTXOYAWNXOXQWLWOIZJYAWLAWOUCYBXRXQDCWLUEUF
      RVAXQXRWNVBRWHXQXSXNWFWGXQXSXNSZVCWFXQWGYCWFXQWGYCWFXQWGJJZWNXRJXDXCWIEPZ
      JXSXNYDWNXDXRYEYDXDWNWFXQXDWNSZWGWFXLXQYFXMAWLWMFVDVHVEVFABWLCDEFVIVGWNXR
      VJXDYEWTXCWMWIEVKVLVMVNVOVPVQVSVRXDWTGAVTWAWBVSWCHGFWPWDWE $.
      $( [20-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y H $.
    $d x y R $.  $d x y S $.
    isoini2.1 $e |- C = ( A i^i ( `' R " { X } ) ) $.
    isoini2.2 $e |- D = ( B i^i ( `' S " { ( H ` X ) } ) ) $.
    $( Isomorphisms are isomorphisms on their initial segments.  (Contributed
       by Mario Carneiro, 29-Mar-2014.) $)
    isoini2 $p |- ( ( H Isom R , S ( A , B ) /\ X e. A ) ->
                    ( H |` C ) Isom R , S ( C , D ) ) $=
      ( vx vy wiso wcel wf1o wbr cfv wb wral cima wa cres cv wf1 wss isof1o syl
      f1of1 adantr ccnv csn inss1 eqsstri f1ores sylancl isoini imaeq2i 3eqtr4g
      cin wceq f1oeq3 mpbid df-iso simprbi ssralv ralimdv mpsyl fvres breqan12d
      bibi2d ralbidva ralbiia sylibr sylanbrc ) ABEFGMZHANZUAZCDGCUBZOZKUCZLUCZ
      EPZVTVRQZWAVRQZFPZRZLCSZKCSZCDEFVRMVQCGCTZVROZVSVQABGUDZCAUEZWJVOWKVPVOAB
      GOZWKABEFGUFABGUHUGUICAEUJHUKTZUSZAIAWNULUMZABCGUNUOVQWIDUTWJVSRVQGWOTBFU
      JHGQUKTUSWIDABHEFGUPCWOGIUQJURWIDCVRVAUGVBVQWBVTGQZWAGQZFPZRZLCSZKCSZWHWL
      VQXAKASZXBWPWLVQWTLASZKASZXCWPVOXEVPVOWMXEKLABEFGVCVDUIWLXDXAKAWTLCAVEVFV
      GXAKCAVEVGWGXAKCVTCNZWFWTLCXFWACNZUAWEWSWBXFXGWCWQWDWRFVTCGVHWACGVHVIVJVK
      VLVMKLCDEFVRVCVN $.
      $( [29-Mar-2014] $)
  $}

  ${
    $d x y z w v u A $.  $d x y v u B $.  $d x y z w v u H $.
    $d x y z w v u R $.  $d v u S $.
    $( Any one-to-one onto function determines an isomorphism with an induced
       relation ` S ` .  Proposition 6.33 of [TakeutiZaring] p. 34.
       (Contributed by ?who?, 30-Apr-2004.) $)
    f1oiso $p |- ( ( H : A -1-1-onto-> B /\ S = { <. z , w >. |
     E. x e. A E. y e. A ( ( z = ( H ` x ) /\ w = ( H ` y ) ) /\ x R y ) } ) ->
                  H Isom R , S ( A , B ) ) $=
      ( vv vu cv cfv wceq wa wbr wrex wb wcel anbi1d wf1o copab wral wiso simpl
      wf1 f1of1 cop df-br eleq2 fvex eqeq1 2rexbidv anbi2d opelopab anass eqcom
      f1fveq syl6bb anassrs syl5bb rexbidv rexbidva breq1 ceqsrexv adantl bitrd
      r19.42v breq2 sylan9bb anandis sylan9bbr an32s ralrimivva df-iso sylanbrc
      syl5rbb sylan ) EFIUAZHCLZALZIMZNZDLZBLZIMZNZOZWAWEGPZOZBEQAEQZCDUBZNZOVS
      JLZKLZGPZWNIMZWOIMZHPZRZKEUCJEUCZEFGHIUDVSWMUEVSEFIUFZWMXAEFIUGXBWMOZWTJK
      EEWSWQWRUHZHSZXCWNESZWOESZOZOWPWQWRHUIXBXHWMXEWPRWMXEXDWLSZXBXHOZWPHWLXDU
      JXIWQWBNZWRWFNZOZWIOZBEQZAEQZXJWPWKXKWGOZWIOZBEQAEQXPCDWQWRWNIUKWOIUKVTWQ
      NZWJXRABEEXSWHXQWIXSWCXKWGVTWQWBULTTUMWDWRNZXRXNABEEXTXQXMWIXTWGXLXKWDWRW
      FULUNTUMUOXBXFXGXPWPRXBXFOZXPXLWNWEGPZOZBEQZXBXGOZWPYAXPWAWNNZXLWIOZBEQZO
      ZAEQZYDYAXOYIAEYAWAESZOZXOYFYGOZBEQYIYLXNYMBEXNXKYGOYLYMXKXLWIUPYLXKYFYGX
      BXFYKXKYFRXBXFYKOOXKWNWANYFEFWNWAIURWNWAUQUSUTTVAVBYFYGBEVHUSVCXFYJYDRXBY
      HYDAWNEYFYGYCBEYFWIYBXLWAWNWEGVDUNVBVEVFVGYEYDWEWONZYBOZBEQZWPYEYCYOBEYEW
      EESZOXLYNYBXBXGYQXLYNRXBXGYQOOXLWOWENYNEFWOWEIURWOWEUQUSUTTVCXGYPWPRXBYBW
      PBWOEWEWOWNGVIVEVFVGVJVKVAVLVMVQVNVRJKEFGHIVOVP $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d A w x y z $.  $d B w x y z $.  $d H w x y z $.  $d R w x y z $.
    f1oiso2.1 $e |- S = { <. x , y >. |
      ( ( x e. B /\ y e. B ) /\ ( `' H ` x ) R ( `' H ` y ) ) } $.
    $( Any one-to-one onto function determines an isomorphism with an induced
       relation ` S ` .  (Contributed by Mario Carneiro, 9-Mar-2013.) $)
    f1oiso2 $p |- ( H : A -1-1-onto-> B -> H Isom R , S ( A , B ) ) $=
      ( vz vw cv cfv wceq wa wbr wrex wcel 3adant3 eqcomd syl2anc wf1o wiso w3a
      copab ccnv f1ocnvdm adantrr f1ocnvfv2 anim12dan simp3 fveq2 eqeq2d anbi2d
      adantrl breq2 anbi12d rspcev syl12anc anbi1d breq1 rexbidv simp3ll simp1
      3expib simp2l wf ffvelrn sylan eqeltrd simp3lr simp2r simp3r f1ocnvfv mpd
      f1of wi 3brtr4d jca31 3exp rexlimdvv impbid opabbidv syl5eq f1oiso mpdan
      ) CDGUAZFAKZIKZGLZMZBKZJKZGLZMZNZWHWLEOZNZJCPZICPZABUDZMCDEFGUBWFFWGDQZWK
      DQZNZWGGUEZLZWKXDLZEOZNZABUDWTHWFXHWSABWFXHWSWFXCXGWSWFXCXGUCZXECQZWGXEGL
      ZMZWNNZXEWLEOZNZJCPZWSWFXCXJXGWFXAXJXBCDWGGUFUGRXIXFCQZXLWKXFGLZMZNZXGXPW
      FXCXQXGWFXBXQXACDWKGUFUNRWFXCXTXGWFXAXLXBXSWFXANXKWGCDWGGUHSWFXBNXRWKCDWK
      GUHSUIRWFXCXGUJXOXTXGNJXFCWLXFMZXMXTXNXGYAWNXSXLYAWMXRWKWLXFGUKULUMWLXFXE
      EUOUPUQURWRXPIXECWHXEMZWQXOJCYBWOXMWPXNYBWJXLWNYBWIXKWGWHXEGUKULUSWHXEWLE
      UTUPVAUQTVDWFWQXHIJCCWFWHCQZWLCQZNZWQXHWFYEWQUCZXAXBXGYFWGWIDWJWNWPWFYEVB
      ZYFWFYCWIDQZWFYEWQVCZWFYCYDWQVEZWFCDGVFZYCYHCDGVOZCDWHGVGVHTVIYFWKWMDWJWN
      WPWFYEVJZYFWFYDWMDQZYIWFYCYDWQVKZWFYKYDYNYLCDWLGVGVHTVIYFWHWLXEXFEWFYEWOW
      PVLYFWIWGMZXEWHMZYFWGWIYGSYFWFYCYPYQVPYIYJCDWHWGGVMTVNYFWMWKMZXFWLMZYFWKW
      MYMSYFWFYDYRYSVPYIYOCDWLWKGVMTVNVQVRVSVTWAWBWCIJABCDEFGWDWE $.
      $( [9-Mar-2013] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    opbr1st.1 $e |- A e. _V $.
    opbr1st.2 $e |- B e. _V $.
    $( Binary relationship of an ordered pair over ` 1st ` .  (Contributed by
       ?who?, 6-Feb-2015.) $)
    opbr1st $p |- ( <. A , B >. 1st C <-> A = C ) $=
      ( vx vy cop c1st wbr cvv wcel wceq brex simprd cv wex wa eqcom bitri opth
      eleq1 mpbii breq2 eqeq2 br1st biidd ceqsexv ancom exbii 3bitr4i pm5.21nii
      vex vtoclbg ) ABHZCIJZCKLZACMZUPUOKLUQUOCINOURAKLUQDACKUBUCUOFPZIJZAUSMZU
      PURFCKUSCUOIUDUSCAUEUTUOUSGPZHZMZGQZVAGUOUSFUMUFVBBMZUSAMZRZGQVGVEVAVGVGG
      BEVFVGUGUHVDVHGVDVCUOMZVHUOVCSVIVGVFRVHUSVBABUAVGVFUITTUJAUSSUKTUNUL $.
      $( [6-Feb-2015] $)

    $( Binary relationship of an ordered pair over ` 2nd ` .  (Contributed by
       ?who?, 6-Feb-2015.) $)
    opbr2nd $p |- ( <. A , B >. 2nd C <-> B = C ) $=
      ( vx vy cop c2nd wbr cvv wcel wceq brex simprd eleq1 cv wex eqcom bitri
      mpbii breq2 eqeq2 vex br2nd wa biidd ceqsexv opth exbii 3bitr4i pm5.21nii
      vtoclbg ) ABHZCIJZCKLZBCMZUOUNKLUPUNCINOUQBKLUPEBCKPUAUNFQZIJZBURMZUOUQFC
      KURCUNIUBURCBUCUSUNGQZURHZMZGRZUTGUNURFUDUEVAAMZURBMZUFZGRVFVDUTVFVFGADVE
      VFUGUHVCVGGVCVBUNMVGUNVBSVAURABUITUJBURSUKTUMUL $.
      $( [6-Feb-2015] $)
  $}

  ${
    $d x y $.
    $( The subset relationship is a relationship.  (Contributed by ?who?,
       11-Feb-2015.) $)
    relsset $p |- Rel SSet $=
      ( vx vy cv wss csset df-sset relopabi ) ACBCDABEABFG $.
      $( [11-Feb-2015] $)
  $}

  ${
    $d x y $.
    $( Alternate definition of the identity relationship.  (Contributed by
       ?who?, 11-Feb-2015.) $)
    dfid4 $p |- _I = ( SSet i^i `' SSet ) $=
      ( vx vy cid csset ccnv cin reli wss inss1 relsset relss mp2 weq cv wa wbr
      wrel vex brsset bitri eqss ideq brin brcnv anbi12i 3bitr4i eqbrriv ) ABCD
      DEZFZGUIDHDQUIQDUHIJUIDKLABMANZBNZHZUKUJHZOZUJUKCPUJUKUIPZUJUKUAUJUKBRZUB
      UOUJUKDPZUJUKUHPZOUNUJUKDUHUCUQULURUMUJUKARZUPSURUKUJDPUMUJUKDUDUKUJUPUSS
      TUETUFUG $.
      $( [11-Feb-2015] $)
  $}

  $( The identity relationship is a set.  (Contributed by ?who?,
     11-Feb-2015.) $)
  idex $p |- _I e. _V $=
    ( cid csset ccnv cin cvv dfid4 ssetex cnvex inex eqeltri ) ABBCZDEFBKGBGHIJ
    $.
    $( [11-Feb-2015] $)

  ${
    $d x y z w t $.
    $( ` 1st ` is a mapping from ` ( _V X. _V ) ` onto the universe.
       (Contributed by ?who?, 12-Feb-2015.) $)
    1stfo $p |- 1st : ( _V X. _V ) -onto-> _V $=
      ( vx vy vz vw vt cvv c1st wceq cv wbr weq wal cop wex br1st mpbir2an wcel
      wa vex mpbir cxp wfo wfn crn wfun cdm wrel df-1st relopabi anbi12i bitr4i
      eeanv eqtr2 opth simplbi syl exlimivv sylbi gen2 ax-gen dffun2 exbii eldm
      elvv 3bitr4i eqriv df-fn eqv equid opbr1st opex breq1 spcev ax-mp mpgbir
      wi elrn df-fo ) FFUAZFGUBGVSUCZGUDZFHZVTGUEZGUFZVSHWCGUGAIZBIZGJZWECIZGJZ
      RZBCKZVPZCLBLZALWEWFWHMHCNZABGABCUHUIWMAWLBCWJWEWFDIZMZHZWEWHEIZMZHZRZEND
      NZWKWJWQDNZWTENZRXBWGXCWIXDDWEWFBSZOEWEWHCSOUJWQWTDEULUKXAWKDEXAWPWSHZWKW
      EWPWSUMXFWKDEKWFWOWHWRUNUOUPUQURUSUTABCGVAPAWDVSWGBNWNBNWEWDQWEVSQWGWNBCW
      EWFXEOVBBWEGVCBCWEVDVEVFGVSVGPWBWEWAQZAAWAVHXGWFWEGJZBNZWEWEMZWEGJZXIXKAA
      KAVIWEWEWEASZXLVJTXHXKBXJWEWEXLXLVKWFXJWEGVLVMVNBWEGVQTVOVSFGVRP $.
      $( [12-Feb-2015] $)

    $( ` 2nd ` is a mapping from ` ( _V X. _V ) ` onto the universe.
       (Contributed by ?who?, 12-Feb-2015.) $)
    2ndfo $p |- 2nd : ( _V X. _V ) -onto-> _V $=
      ( vx vy vz vw vt cvv c2nd wceq cv wbr wa weq wal cop wex vex br2nd bitr4i
      mpbir2an wcel cxp wfo wfn crn wfun cdm wrel df-2nd relopabi anbi12i eeanv
      eqtr2 opth simprbi syl exlimivv sylbi gen2 ax-gen dffun2 eldm exbii excom
      wi 3bitri elvv eqriv df-fn eqv equid opbr2nd mpbir opex breq1 spcev elrn
      ax-mp mpgbir df-fo ) FFUAZFGUBGVTUCZGUDZFHZWAGUEZGUFZVTHWDGUGAIZBIZGJZWFC
      IZGJZKZBCLZVDZCMBMZAMWFWIWGNHZCOZABGABCUHUIWNAWMBCWKWFDIZWGNZHZWFEIZWINZH
      ZKZEODOZWLWKWSDOZXBEOZKXDWHXEWJXFDWFWGBPZQEWFWICPQUJWSXBDEUKRXCWLDEXCWRXA
      HZWLWFWRXAULXHDELWLWQWGWTWIUMUNUOUPUQURUSABCGUTSAWEVTWFWETZWOBOCOZWFVTTXI
      WHBOWPBOXJBWFGVAWHWPBCWFWGXGQVBWOBCVCVECBWFVFRVGGVTVHSWCWFWBTZAAWBVIXKWGW
      FGJZBOZWFWFNZWFGJZXMXOAALAVJWFWFWFAPZXPVKVLXLXOBXNWFWFXPXPVMWGXNWFGVNVOVQ
      BWFGVPVLVRVTFGVSS $.
      $( [12-Feb-2015] $)
  $}

  ${
    $d A x y z $.
    $( Alternate definition of domain.  (Contributed by ?who?, 23-Feb-2015.) $)
    dfdm4 $p |- dom A = ( 1st " A ) $=
      ( vx vy vz cdm c1st cima cv cop wcel wex wbr wrex wceq rexcom4 vex rexbii
      br1st risset exbii 3bitr4ri eldm2 elima 3bitr4i eqriv ) BAEZFAGZBHZCHIZAJ
      ZCKZDHZUHFLZDAMZUHUFJUHUGJULUINZCKZDAMUODAMZCKUNUKUODCAOUMUPDACULUHBPRQUJ
      UQCDUIASTUACUHAUBDUHFAUCUDUE $.
      $( [23-Feb-2015] $)

    $( Alternate definition of range.  (Contributed by ?who?, 23-Feb-2015.) $)
    dfrn5 $p |- ran A = ( 2nd " A ) $=
      ( vy vx vz crn c2nd cima cv cop wcel wex wbr wrex wceq rexcom4 vex rexbii
      br2nd risset exbii 3bitr4ri elrn2 elima 3bitr4i eqriv ) BAEZFAGZCHBHZIZAJ
      ZCKZDHZUHFLZDAMZUHUFJUHUGJULUINZCKZDAMUODAMZCKUNUKUODCAOUMUPDACULUHBPRQUJ
      UQCDUIASTUACUHAUBDUHFAUCUDUE $.
      $( [23-Feb-2015] $)
  $}

  ${
    $d A a $.  $d a b $.  $d A b $.  $d a x $.  $d A x $.  $d a y $.  $d A y $.
    $d B a $.  $d B b $.  $d b x $.  $d B x $.  $d b y $.  $d B y $.  $d x y $.

    $( Binary relationship of ` Swap ` .  (Contributed by ?who?,
       23-Feb-2015.) $)
    brswap $p |- ( A Swap B <-> E. x E. y ( A = <. x , y >. /\ B = <. y , x >.
        ) ) $=
      ( va vb cswap cvv wcel wa cv cop wceq wex opex eleq1 mpbiri eqeq1 2exbidv
      vex wbr brex anim12i exlimivv anbi1d anbi2d df-swap brabg pm5.21nii ) CDG
      UACHIZDHIZJZCAKZBKZLZMZDUNUMLZMZJZBNANZCDGUBUSULABUPUJURUKUPUJUOHIUMUNATZ
      BTZOCUOHPQURUKUQHIUNUMVBVAODUQHPQUCUDEKZUOMZFKZUQMZJZBNANUPVFJZBNANUTEFCD
      HHGVCCMZVGVHABVIVDUPVFVCCUORUESVEDMZVHUSABVJVFURUPVEDUQRUFSEFABUGUHUI $.
      $( [23-Feb-2015] $)
  $}

  ${
    $d a b x y $.
    $( The converse of ` Swap ` is ` Swap ` .  (Contributed by ?who?,
       23-Feb-2015.) $)
    cnvswap $p |- `' Swap = Swap $=
      ( va vb vy vx cswap ccnv relcnv relswap cv cop wceq wa ancom 2exbii brcnv
      wex wbr brswap excom 3bitri 3bitr4i eqbrriv ) ABEFZEEGHBIZCIZDIZJKZAIZUFU
      EJKZLZCPDPZUIUGLZCPDPUHUDUCQZUHUDEQUJULDCUGUIMNUMUDUHEQUJDPCPUKUHUDEOCDUD
      UHRUJCDSTDCUHUDRUAUB $.
      $( [23-Feb-2015] $)
  $}

  ${
    $d p q r x y z w $.
    $( ` Swap ` is a bijection over all ordered pairs.  (Contributed by ?who?,
       23-Feb-2015.) $)
    swapf1o $p |- Swap : ( _V X. _V ) -1-1-onto-> ( _V X. _V ) $=
      ( vp vq vr vx vy vz vw cvv cswap wfn wceq cv wbr weq wal cop wex mpbir2an
      wa brswap cxp wf1o ccnv wfun cdm wrel relswap anbi12i ee4anv bitr4i eqtr2
      wi ancom opth 3bitr4i sylib eqeq12 biimprd mpan9 an4s exlimivv sylbi gen2
      ax-gen dffun2 wcel exbii exrot3 opex isseti 19.42v mpbiran2 2exbii 3bitri
      vex eldm elvv eqriv df-fn cnvswap fneq1i mpbir dff1o4 ) HHUAZWDIUBIWDJZIU
      CZWDJZWEIUDZIUEZWDKWHIUFALZBLZIMZWJCLZIMZSZBCNZULZCOBOZAOUGWRAWQBCWOWJDLZ
      ELZPZKZWKWTWSPZKZSZWJFLZGLZPZKZWMXGXFPZKZSZSZGQFQZEQDQZWPWOXEEQDQZXLGQFQZ
      SXOWLXPWNXQDEWJWKTZFGWJWMTUHXEXLDEFGUIUJXNWPDEXMWPFGXBXIXDXKWPXBXISZXCXJK
      ZXDXKSZWPXSXAXHKZXTWJXAXHUKDFNZEGNZSYDYCSYBXTYCYDUMWSWTXFXGUNWTWSXGXFUNUO
      UPYAWPXTWKXCWMXJUQURUSUTVAVAVBVCVDABCIVERAWIWDWLBQZXBEQDQZWJWIVFWJWDVFYEX
      PBQXEBQZEQDQYFWLXPBXRVGXEBDEVHYGXBDEYGXBXDBQBXCWTWSEVODVOVIVJXBXDBVKVLVMV
      NBWJIVPDEWJVQUOVRIWDVSRZWGWEYHWDWFIVTWAWBWDWDIWCR $.
      $( [23-Feb-2015] $)
  $}

  ${
    $( Bijection law for restrictions of ` Swap ` .  (Contributed by ?who?,
       23-Feb-2015.) $)
    swapresrel $p |- ( Rel A -> ( Swap |` A ) : A -1-1-onto-> `' A ) $=
      ( cvv cxp wss cswap cima cres wf1o wrel ccnv wf1 swapf1o f1of1 ax-mp mpan
      f1ores df-rel wceq wb dfcnv2 f1oeq3 3imtr4i ) ABBCZDZAEAFZEAGZHZAIAAJZUFH
      ZUCUCEKZUDUGUCUCEHUJLUCUCEMNUCUCAEPOAQUHUERUIUGSATUHUEAUFUANUB $.
      $( [23-Feb-2015] $)
  $}

  ${
    $d A x $.  $d A y $.  $d A z $.  $d B x $.  $d B y $.  $d C x $.  $d C y $.
    $d C z $.  $d D x $.  $d D y $.  $d x y $.  $d x z $.  $d y z $.
    xpnedisj.1 $e |- C e. _V $.
    xpnedisj.2 $e |- C =/= D $.
    $( Cross products with non-equal singletons are disjoint.  (Contributed by
       ?who?, 23-Feb-2015.) $)
    xpnedisj $p |- ( ( A X. { C } ) i^i ( B X. { D } ) ) = (/) $=
      ( vx vy vz csn cxp cin c0 wceq cv wcel wn disj cop wrex elxp2 opeq2 rexsn
      eqeq2d rexbii bitri wa df-ne mpbi elsni intnan eleq1 opelxp syl6bb mtbiri
      wne mto rexlimivw sylbi mprgbir ) ACJZKZBDJZKZLMNGOZVDPZQZGVBGVBVDRVEVBPZ
      VEHOZCSZNZHATZVGVHVEVIIOZSZNZIVATZHATVLHIVEAVAUAVPVKHAVOVKICEVMCNVNVJVEVM
      CVIUBUDUCUEUFVKVGHAVKVFVIBPZCVCPZUGZVRVQVRCDNZCDUPVTQFCDUHUICDUJUQUKVKVFV
      JVDPVSVEVJVDULVICBVCUMUNUOURUSUT $.
      $( [23-Feb-2015] $)
  $}

  ${
    opfv1st.1 $e |- A e. _V $.
    opfv1st.2 $e |- B e. _V $.
    $( The value of the ` 1st ` function on an ordered pair.  (Contributed by
       ?who?, 23-Feb-2015.) $)
    opfv1st $p |- ( 1st ` <. A , B >. ) = A $=
      ( cop c1st cfv wceq wbr eqid opbr1st mpbir wfun cdm wcel wb cvv cxp 1stfo
      mp2b wfo wf fof ffun opelxp mpbir2an fdm eleqtrri funbrfvb mp2an ) ABEZFG
      AHZUKAFIZUMAAHAJABACDKLFMZUKFNZOULUMPQQRZQFUAZUPQFUBZUNSUPQFUCZUPQFUDTUKU
      PUOUKUPOAQOBQOCDABQQUEUFUQURUOUPHSUSUPQFUGTUHUKAFUIUJL $.
      $( [23-Feb-2015] $)

    $( The value of the ` 2nd ` function on an ordered pair.  (Contributed by
       ?who?, 23-Feb-2015.) $)
    opfv2nd $p |- ( 2nd ` <. A , B >. ) = B $=
      ( cop c2nd cfv wceq wbr eqid opbr2nd mpbir wfun cdm wcel wb cvv cxp 2ndfo
      wfo wf fof ffun mp2b opelxp mpbir2an ax-mp fdmi eleqtrri funbrfvb mp2an )
      ABEZFGBHZULBFIZUNBBHBJABBCDKLFMZULFNZOUMUNPQQRZQFTZUQQFUAZUOSUQQFUBZUQQFU
      CUDULUQUPULUQOAQOBQOCDABQQUEUFUQQFURUSSUTUGUHUIULBFUJUKL $.
      $( [23-Feb-2015] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d C x y $.
    $( Reconstruction of a member of a cross product in terms of its ordered
       pair components.  (Contributed by ?who?, 20-Oct-2013.) $)
    1st2nd2 $p |- ( A e. ( B X. C ) -> A = <. ( 1st ` A ) , ( 2nd ` A ) >. ) $=
      ( vx vy cxp wcel cv cop wceq wrex c1st cfv c2nd elxp2 vex opfv1st opfv2nd
      fveq2 rexlimivw opeq12i eqcomi id opeq12d 3eqtr4a sylbi ) ABCFGADHZEHZIZJ
      ZECKZDBKAALMZANMZIZJZDEABCOUKUODBUJUOECUJUIUILMZUINMZIZAUNURUIUPUGUQUHUGU
      HDPZEPZQUGUHUSUTRUAUBUJUCUJULUPUMUQAUILSAUINSUDUETTUF $.
      $( [20-Oct-2013] $)
  $}

  ${
    $d A x $.  $d A y $.  $d A z $.  $d B x $.  $d B y $.  $d B z $.  $d C x $.
    $d C y $.  $d C z $.  $d F x $.  $d F y $.  $d F z $.  $d x y $.  $d x z $.
    $d y z $.
    $( Implicational form of part of the definition of a function.
       (Contributed by ?who?, 24-Feb-2015.) $)
    fununiq $p |- ( ( Fun F /\ A F B /\ A F C ) -> B = C ) $=
      ( vx vy vz cvv wcel wa wbr w3a wceq brex 3adant1 wi cv wal wb breq12 wfun
      anim12i anandi sylibr wrel dffun2 simprbi 3adant3 3adant2 anbi12d imbi12d
      weq eqeq12 spc3gv syl5 exp4a 3impd 3expb mpcom ) AHIZBHIZCHIZJJZDUAZABDK
      ZACDKZLZBCMZVEVFVCVDVEVFJZUTVAJZUTVBJZJVCVEVJVFVKABDNACDNUBUTVAVBUCUDOUTV
      AVBVGVHPUTVAVBLZVDVEVFVHVLVDVEVFVHVDEQZFQZDKZVMGQZDKZJZFGULZPZGRFRERZVLVI
      VHPZVDDUEWAEFGDUFUGVTWBEFGABCHHHVMAMZVNBMZVPCMZLZVRVIVSVHWFVOVEVQVFWCWDVO
      VESWEVMAVNBDTUHWCWEVQVFSWDVMAVPCDTUIUJWDWEVSVHSWCVNBVPCUMOUKUNUOUPUQURUS
      $.
      $( [24-Feb-2015] $)
  $}

  ${
    $d a b $.  $d a x $.  $d a y $.  $d b x $.  $d b y $.  $d R a $.  $d R b $.
    $d R x $.  $d R y $.  $d x y $.
    $( A singleton image is a relationship.  (Contributed by ?who?,
       26-Feb-2015.) $)
    relsi $p |- Rel SI R $=
      ( vx va vy vb cv csn wceq wbr w3a wex csi df-si relopabi ) BFCFZGHDFEFZGH
      OPAIJEKCKBDALBDCEAMN $.
      $( [26-Feb-2015] $)

    $( Calculate the converse of a singleton image.  (Contributed by ?who?,
       26-Feb-2015.) $)
    cnvsi $p |- `' SI R = SI `' R $=
      ( vx vy vb va csi ccnv relcnv relsi cv csn wceq wbr w3a wex 3ancoma brcnv
      3anbi3i bitr4i brsi 2exbii excom 3bitri 3bitr4i eqbrriv ) BCAFZGZAGZFZUFH
      UHICJZDJZKLZBJZEJZKLZUKUNAMZNZDOEOZUOULUNUKUHMZNZDOEOUMUJUGMZUMUJUIMUQUTE
      DUQUOULUPNUTULUOUPPUSUPUOULUNUKAQRSUAVAUJUMUFMUQEODOURUMUJUFQDEUJUMATUQDE
      UBUCEDUMUJUHTUDUE $.
      $( [26-Feb-2015] $)

    $( Calculate the domain of a singleton image.  Theorem X.4.29.I of [Rosser]
       p. 301.  (Contributed by ?who?, 26-Feb-2015.) $)
    dmsi $p |- dom SI R = ~P1 dom R $=
      ( vx va vy vb csi cdm cpw1 cv csn wceq wbr wcel wa bitri exbii excom eldm
      wex 3bitr4i wrex 3anass 2exbii 19.42vv isseti 19.41v mpbiran anbi2i ancom
      w3a snex df-rex brsi elpw1 eqriv ) BAFZGZAGZHZBIZCIZJKZDIZEIZJZKZVAVDALZU
      JZESZCSZDSZVBCURUAZUTUQMZUTUSMVIDSZCSVAURMZVBNZCSVKVLVNVPCVNVBVFVGNZESDSZ
      NZVPVNVBVQNZESDSVSVHVTDEVBVFVGUBUCVBVQDEUDOVSVBVONVPVRVOVBVQDSZESVGESVRVO
      WAVGEWAVFDSVGDVEVDUKUEVFVGDUFUGPVQDEQEVAARTUHVBVOUIOOPVIDCQVBCURULTVMUTVC
      UPLZDSVKDUTUPRWBVJDCEUTVCAUMPOCUTURUNTUO $.
      $( [26-Feb-2015] $)

    $d a c $.  $d a d $.  $d a z $.  $d b c $.  $d b d $.  $d b z $.  $d c d $.
    $d c x $.  $d c y $.  $d c z $.  $d d x $.  $d d y $.  $d d z $.  $d F a $.
    $d F b $.  $d F c $.  $d F d $.  $d F x $.  $d F y $.  $d F z $.  $d x z $.
    $d y z $.
    $( The singleton image of a function is a function.  (Contributed by ?who?,
       26-Feb-2015.) $)
    funsi $p |- ( Fun F -> Fun SI F ) $=
      ( vx vy vz va vb vc vd wfun cv wbr wa weq wi wal csn wceq w3a wex wb brsi
      anbi12i ee4anv bitr4i fununiq 3exp breq1 bicomd adantr eqeq2 sneqb syl6bb
      csi vex adantl imbi12d biimprcd exp3a 3impd syl6 eqeq1 3anbi1d imbi2d syl
      imp3a exlimdvv syl5bi alrimiv alrimivv wrel relsi dffun2 mpbiran sylibr )
      AIZBJZCJZAUMZKZVPDJZVRKZLZCDMZNZDOZCOBOZVRIZVOWEBCVOWDDWBVPEJZPZQZVQFJZPZ
      QZWHWKAKZRZVPGJZPZQZVTHJZPZQZWPWSAKZRZLZHSGSZFSESZVOWCWBWOFSESZXCHSGSZLXF
      VSXGWAXHEFVPVQAUAGHVPVTAUAUBWOXCEFGHUCUDVOXEWCEFVOXDWCGHVOWOXCWCVOWNEGMZX
      AXBRZWLVTQZNZNZWOXCWCNZNVOWNWHWSAKZFHMZNZXLVOWNXOXPWHWKWSAUEUFXQXIXAXBXKX
      QXIXAXBXKNZXIXALZXRXQXSXBXOXKXPXIXBXOTXAXIXOXBWHWPWSAUGUHUIXAXKXPTXIXAXKW
      LWTQXPVTWTWLUJWKWSFUNUKULUOUPUQURUSUTXMWJWMWNXNXMWJWMWNXNNZWJWMLZXTXMYAXN
      XLWNYAXCXJWCXKWJXCXJTWMWJWRXIXAXBWJWRWIWQQXIVPWIWQVAWHWPEUNUKULVBUIWMWCXK
      TWJVQWLVTVAUOUPVCUQURUSVDVEVFVFVGVHVIWGVRVJWFAVKBCDVRVLVMVN $.
      $( [26-Feb-2015] $)
  $}

  $( Calculate the range of a singleton image.  Theorem X.4.29.II of [Rosser]
     p. 302.  (Contributed by ?who?, 26-Feb-2015.) $)
  rnsi $p |- ran SI R = ~P1 ran R $=
    ( csi ccnv cdm cpw1 cnvsi dmeqi dmsi eqtri dfrn4 wceq pw1eq ax-mp 3eqtr4i
    crn ) ABZCZDZACZDZEZPOAOZEZRSBZDUAQUDAFGSHIPJUBTKUCUAKAJUBTLMN $.
    $( [26-Feb-2015] $)
